WITHOUT_CLASSIFICATION	@see java.lang.object#hashcode()
WITHOUT_CLASSIFICATION	is this item a copy? @see java.lang.object#equals(java.lang.object)
WITHOUT_CLASSIFICATION	once one criticism is found exit
WITHOUT_CLASSIFICATION	constructor
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	user interface
WITHOUT_CLASSIFICATION	criticism control
WITHOUT_CLASSIFICATION	issue resolutions
WITHOUT_CLASSIFICATION	criticism control
WITHOUT_CLASSIFICATION	critiquing
WITHOUT_CLASSIFICATION	design feedback
WITHOUT_CLASSIFICATION	the critiquing thread should wait if disabled.
WITHOUT_CLASSIFICATION	why?
WITHOUT_CLASSIFICATION	performs critique asap. @see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see java.lang.object#hashcode()
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	critiquing
WITHOUT_CLASSIFICATION	constructor and singeton methods
WITHOUT_CLASSIFICATION	why?
WITHOUT_CLASSIFICATION	&& getautocritique()
WITHOUT_CLASSIFICATION	don't clear everything here breaks loading!
WITHOUT_CLASSIFICATION	v71
WITHOUT_CLASSIFICATION	don't let a transient error kill the thread
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	clear out queues! @@@
WITHOUT_CLASSIFICATION	decision model listener
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	end class childgendmelements
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	user interface
WITHOUT_CLASSIFICATION	issue resolution
WITHOUT_CLASSIFICATION	todo this should be the name of the designer that created the todoitem not the current username!
WITHOUT_CLASSIFICATION	log.log(level.fine "predicate() returned true creating todoitem")
WITHOUT_CLASSIFICATION	corrective automations wizards
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	constructor
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	critiquing
WITHOUT_CLASSIFICATION	criticism control
WITHOUT_CLASSIFICATION	todo make use of the constants defined in the todoitem class!
WITHOUT_CLASSIFICATION	if wizclass is not a subclass of wizard print a warning
WITHOUT_CLASSIFICATION	return getcriticname()
WITHOUT_CLASSIFICATION	criticism control
WITHOUT_CLASSIFICATION	design feedback
WITHOUT_CLASSIFICATION	issue resolution
WITHOUT_CLASSIFICATION	end interface poster
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	log.log(level.fine "adding resolution for " + c.getclass() + " " + cancreate)
WITHOUT_CLASSIFICATION	use this for fast fail instead. sacrificed for complete fail. d00mst throw new unresolvableexception( "unable to create itemuid for class " + obj.getclass())
WITHOUT_CLASSIFICATION	todo values
WITHOUT_CLASSIFICATION	end class goal
WITHOUT_CLASSIFICATION	check if we are using a supported java version
WITHOUT_CLASSIFICATION	implements java.io.serialization
WITHOUT_CLASSIFICATION	end class curdecisioncm
WITHOUT_CLASSIFICATION	end class standardcm
WITHOUT_CLASSIFICATION	end class compositecm
WITHOUT_CLASSIFICATION	end class enabledcm
WITHOUT_CLASSIFICATION	end class notsnoozedcm
WITHOUT_CLASSIFICATION	end class andcm
WITHOUT_CLASSIFICATION	end class designgoalscm
WITHOUT_CLASSIFICATION	end class orcm
WITHOUT_CLASSIFICATION	register our last chance exception handler
WITHOUT_CLASSIFICATION	get the splash screen up as early as possible
WITHOUT_CLASSIFICATION	we have to do this to set the laf for the splash screen
WITHOUT_CLASSIFICATION	main initialization happens here
WITHOUT_CLASSIFICATION	tooltipmanager.sharedinstance().setinitialdelay(500)
WITHOUT_CLASSIFICATION	force the configuration to load
WITHOUT_CLASSIFICATION	synchronize the startup directory
WITHOUT_CLASSIFICATION	then print out some version info for debuggers
WITHOUT_CLASSIFICATION	set the i18n locale
WITHOUT_CLASSIFICATION	set properties for application behaviour
WITHOUT_CLASSIFICATION	now let's print it
WITHOUT_CLASSIFICATION	nothing else to do (?)
WITHOUT_CLASSIFICATION	we must have a project open before continuing. create if necessary
WITHOUT_CLASSIFICATION	initpreinitialize() initializesubsystems(new simpletimer() null) argoframe.getinstance().setvisible(true)
WITHOUT_CLASSIFICATION	perform one command.
WITHOUT_CLASSIFICATION	now create a new object.
WITHOUT_CLASSIFICATION	initlogging()
WITHOUT_CLASSIFICATION	on uniprocessors wait until we're sure the splash screen has been painted so that we aren't competing for resources
WITHOUT_CLASSIFICATION	make the projectbrowser
WITHOUT_CLASSIFICATION	end class main
WITHOUT_CLASSIFICATION	end class postload
WITHOUT_CLASSIFICATION	we don't care if optional modules aren't found.
WITHOUT_CLASSIFICATION	we don't care if optional modules aren't found.
WITHOUT_CLASSIFICATION	end class loadmodules
WITHOUT_CLASSIFICATION	all tabs are added at the end except a tabtodotarget
WITHOUT_CLASSIFICATION	end interface guisettingstabinterface
WITHOUT_CLASSIFICATION	skip pos we know it's not a valid char from above
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	store in the user configuration and let gef know also.
WITHOUT_CLASSIFICATION	use the configuration if it exists otherwise use what gef thinks.
WITHOUT_CLASSIFICATION	constructor
WITHOUT_CLASSIFICATION	actions
WITHOUT_CLASSIFICATION	failed to clone
WITHOUT_CLASSIFICATION	remark the code in projectsettings.init() currently presumes that nobody is using this event.
WITHOUT_CLASSIFICATION	note this is package scope to force callers to use resourceloaderwrapper
WITHOUT_CLASSIFICATION	strip all characters out of <var>s</var> that could not be part of a valid java identifier. return either the given string (if all characters were valid) or a new string with all invalid characters stripped out. this allows automatic conversion of strings containing punctuation and spaces to a resource name that can be looked up.
WITHOUT_CLASSIFICATION	end class resourceloader
WITHOUT_CLASSIFICATION	the validity checking thread should wait if disabled.
WITHOUT_CLASSIFICATION	if element has been deleted it's no longer valid
WITHOUT_CLASSIFICATION	history.thehistory.additemresolution(item "no longer valid") ((todoitem)item).resolve("no longer valid") notifyobservers("removeelement" item)
WITHOUT_CLASSIFICATION	notifications and updates
WITHOUT_CLASSIFICATION	skip any identical items already on the list
WITHOUT_CLASSIFICATION	cat.debug("checking for inhibitors " + rc)
WITHOUT_CLASSIFICATION	history.thehistory.additemresolution(item reason)
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	end class argojmenu
WITHOUT_CLASSIFICATION	block added by bobtarling 8-jan-2002 set the checkbox on or off according to the selected value of the action. if no selected value is found then this defaults to true in order to remain compatible with previous versions of this code.
WITHOUT_CLASSIFICATION	eventlistenerlist.add() is synchronized so we don't need to synchronize ourselves
WITHOUT_CLASSIFICATION	end of block
WITHOUT_CLASSIFICATION	end interface clarifier
WITHOUT_CLASSIFICATION	set the checkbox on or off according to the selected value of the action. if no selected value is found then this defaults to true.
WITHOUT_CLASSIFICATION	extra care to be taken since alloffenders can be reset while this method is running.
WITHOUT_CLASSIFICATION	these are blue in metal default theme
WITHOUT_CLASSIFICATION	cached expansions
WITHOUT_CLASSIFICATION	these are gray in metal default theme
WITHOUT_CLASSIFICATION	extra care to be taken since allposters can be reset while this method is running.
WITHOUT_CLASSIFICATION	set the icon for this poster
WITHOUT_CLASSIFICATION	eventlistenerlist.remove() is synchronized so we don't need to synchronize ourselves
WITHOUT_CLASSIFICATION	mvw
WITHOUT_CLASSIFICATION	event related stuff
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event
WITHOUT_CLASSIFICATION	static variables
WITHOUT_CLASSIFICATION	@see java.lang.object#hashcode()
WITHOUT_CLASSIFICATION	@see java.lang.object#equals(java.lang.object)
WITHOUT_CLASSIFICATION	enable buttons when selection made. @see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.listselectionlistener#valuechanged(javax.swing.event.listselectionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.componentlistener#componentshown(java.awt.event.componentevent)
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	end class checkmanager
WITHOUT_CLASSIFICATION	now lets search
WITHOUT_CLASSIFICATION	end class tabchecklist
WITHOUT_CLASSIFICATION	we found it!
WITHOUT_CLASSIFICATION	event handling
WITHOUT_CLASSIFICATION	enter the class to speed up the next search.
WITHOUT_CLASSIFICATION	stop updating model when we're not visible
WITHOUT_CLASSIFICATION	update our model with our saved target
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	instance varables
WITHOUT_CLASSIFICATION	constructor
WITHOUT_CLASSIFICATION	tablemodel implemetation
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	criticism control
WITHOUT_CLASSIFICATION	event handlers
WITHOUT_CLASSIFICATION	static accessors
WITHOUT_CLASSIFICATION	instance varables
WITHOUT_CLASSIFICATION	constructor
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	tablemodel implemetation
WITHOUT_CLASSIFICATION	in the past 0 milliseconds after january 1 1970 000000 gmt.
WITHOUT_CLASSIFICATION	in the past 0 milliseconds after january 1 1970 000000 gmt.
WITHOUT_CLASSIFICATION	by default double the snooze interval each time
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	end class snoozeorder
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	wizard actions
WITHOUT_CLASSIFICATION	this changes the complete structure of the table so we need to set the column widths again.
WITHOUT_CLASSIFICATION	todo do all following steps todo resolve item from todolist
WITHOUT_CLASSIFICATION	end class actionopencritics
WITHOUT_CLASSIFICATION	dialog box to list all critics and allow editing of some of their properties. <p> todo supported goals critic network.
WITHOUT_CLASSIFICATION	set initial sorting on critic headline
WITHOUT_CLASSIFICATION	critics table
WITHOUT_CLASSIFICATION	instead of making a new list decrement index return when found and index == 0
WITHOUT_CLASSIFICATION	critic details panel
WITHOUT_CLASSIFICATION	case 2
WITHOUT_CLASSIFICATION	tablemodel implemetation
WITHOUT_CLASSIFICATION	todo
WITHOUT_CLASSIFICATION	no maximum set so it will stretch
WITHOUT_CLASSIFICATION	and for advanced mode
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#valueforpathchanged( javax.swing.tree.treepath java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#addtreemodellistener(javax.swing.event.treemodellistener)
WITHOUT_CLASSIFICATION	@see javax.swing.event.changelistener#statechanged(javax.swing.event.changeevent)
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	event handlers
WITHOUT_CLASSIFICATION	set tablesp's preferred height to 0 so that details height is used in pack()
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#isleaf(java.lang.object)
WITHOUT_CLASSIFICATION	c.gridy = 0 c.gridx = 0 jlabel prilabel = new jlabel("priority") gb.setconstraints(prilabel c) _mainpanel.add(prilabel)
WITHOUT_CLASSIFICATION	firetreenodeschanged(this path childindices children)
WITHOUT_CLASSIFICATION	c.gridy = 0 c.gridx = 1 jlabel offlabel = new jlabel("off") gb.setconstraints(offlabel c) _mainpanel.add(offlabel)
WITHOUT_CLASSIFICATION	c.gridy = 0 c.gridx = 2 jlabel lowlabel = new jlabel("low") gb.setconstraints(lowlabel c) _mainpanel.add(lowlabel)
WITHOUT_CLASSIFICATION	c.gridy = 0 c.gridx = 3 jlabel twolabel = new jlabel("ad") gb.setconstraints(twolabel c) _mainpanel.add(twolabel)
WITHOUT_CLASSIFICATION	c.gridy = 0 c.gridx = 4 jlabel threelabel = new jlabel("asd") gb.setconstraints(threelabel c) _mainpanel.add(threelabel)
WITHOUT_CLASSIFICATION	c.gridy = 0 c.gridx = 5 jlabel fourlabel = new jlabel("asd") gb.setconstraints(fourlabel c) _mainpanel.add(fourlabel)
WITHOUT_CLASSIFICATION	c.gridy = 0 c.gridx = 6 jlabel highlabel = new jlabel("high") gb.setconstraints(highlabel c) _mainpanel.add(highlabel)
WITHOUT_CLASSIFICATION	------------ other methods ------------
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treecellrenderer#gettreecellrenderercomponent( javax.swing.jtree java.lang.object boolean boolean boolean int boolean)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#getchild(java.lang.object int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#getchildcount(java.lang.object)
WITHOUT_CLASSIFICATION	todolistlistener implementation
WITHOUT_CLASSIFICATION	firetreenodeschanged(this path childindices children)
WITHOUT_CLASSIFICATION	treemodel implementation - todo specific stuff
WITHOUT_CLASSIFICATION	class variables
WITHOUT_CLASSIFICATION	general icons for poster
WITHOUT_CLASSIFICATION	specialised icons for designer
WITHOUT_CLASSIFICATION	treecellrenderer implementation
WITHOUT_CLASSIFICATION	end class todotreerenderer
WITHOUT_CLASSIFICATION	public static decision decisionuncategorized = new decision("uncategorized" 1)
WITHOUT_CLASSIFICATION	end class todobydecision
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	treemodel implementation
WITHOUT_CLASSIFICATION	instead of making a new list decrement index return when found and index == 0
WITHOUT_CLASSIFICATION	store wizard?
WITHOUT_CLASSIFICATION	c.gridx = 1 c.gridy = 3 c.gridheight = gridbagconstraints.remainder spacerpanel spacer2 = new spacerpanel() gb.setconstraints(spacer2 c) _mainpanel.add(spacer2)
WITHOUT_CLASSIFICATION	image.setmargin(new insets(0 0 0 0))
WITHOUT_CLASSIFICATION	image.setmargin(new insets(0 0 0 0))
WITHOUT_CLASSIFICATION	image.setmargin(new insets(0 0 0 0))
WITHOUT_CLASSIFICATION	end class wizsteptextfield
WITHOUT_CLASSIFICATION	store wizard?
WITHOUT_CLASSIFICATION	store wizard?
WITHOUT_CLASSIFICATION	end class wizdescription
WITHOUT_CLASSIFICATION	end class wizstepcue
WITHOUT_CLASSIFICATION	stop/start creating more critics
WITHOUT_CLASSIFICATION	end class actiongotocritique
WITHOUT_CLASSIFICATION	correct lazy initialization of static field without further updates
WITHOUT_CLASSIFICATION	does nothing
WITHOUT_CLASSIFICATION	end class actionautocritique
WITHOUT_CLASSIFICATION	stop/start cleaning up invalid todoitems.
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#isleaf(java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#getchildcount(java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#getindexofchild( java.lang.object java.lang.object)
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	treemodel implementation
WITHOUT_CLASSIFICATION	todolistlistener implementation
WITHOUT_CLASSIFICATION	firetreenodeschanged(this path childindices children)
WITHOUT_CLASSIFICATION	otherwise parent must be an offending design material
WITHOUT_CLASSIFICATION	end class actionopengoals
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#isleaf(java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#isleaf(java.lang.object)
WITHOUT_CLASSIFICATION	? inform()
WITHOUT_CLASSIFICATION	@see java.awt.event.componentlistener#componentshown(java.awt.event.componentevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.componentlistener#componenthidden(java.awt.event.componentevent)
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	update our model with our saved target
WITHOUT_CLASSIFICATION	stop updating model when we're not visible
WITHOUT_CLASSIFICATION	treemodel implementation
WITHOUT_CLASSIFICATION	instead of making a new list decrement index return when found and index == 0
WITHOUT_CLASSIFICATION	image.setmargin(new insets(0 0 0 0))
WITHOUT_CLASSIFICATION	store wizard?
WITHOUT_CLASSIFICATION	the target of description will always be set directly by tabtodo
WITHOUT_CLASSIFICATION	request that we be made visible if we're not? topleveltabbedpane.setselectedcomponent(t)
WITHOUT_CLASSIFICATION	------------- mouselistener implementation ---------------
WITHOUT_CLASSIFICATION	end class wizstepconfirm
WITHOUT_CLASSIFICATION	next line coming from projectbrowser
WITHOUT_CLASSIFICATION	------------ itemlistener implementation ----------------------
WITHOUT_CLASSIFICATION	-------------treeselectionlistener implementation -----------
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#isleaf(java.lang.object)
WITHOUT_CLASSIFICATION	not needed in uml 1.x
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.changelistener#statechanged(javax.swing.event.changeevent)
WITHOUT_CLASSIFICATION	prepare for typing in rationale field when window is opened. @see java.awt.component#setvisible(boolean)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	event handlers
WITHOUT_CLASSIFICATION	todolistlistener implementation
WITHOUT_CLASSIFICATION	todolistlistener implementation
WITHOUT_CLASSIFICATION	keep nagging until the user solves the problem this seems a nice way to nag
WITHOUT_CLASSIFICATION	only interrupt for one todoitem
WITHOUT_CLASSIFICATION	end class actionopendecisions
WITHOUT_CLASSIFICATION	blinks?
WITHOUT_CLASSIFICATION	end class todobyoffender
WITHOUT_CLASSIFICATION	add the perspectives to a list for the combobox
WITHOUT_CLASSIFICATION	decslide.setpaintlabels(true)
WITHOUT_CLASSIFICATION	constants instance variables
WITHOUT_CLASSIFICATION	firetreenodeschanged(this path childindices children)
WITHOUT_CLASSIFICATION	todo this looks o(n^2)
WITHOUT_CLASSIFICATION	todo make a new history item
WITHOUT_CLASSIFICATION	cat.debug("bad decision")
WITHOUT_CLASSIFICATION	cat.debug("bad goal")
WITHOUT_CLASSIFICATION	end class dismisstodoitemdialog
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#getchild(java.lang.object int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#getchildcount(java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#getindexofchild( java.lang.object java.lang.object)
WITHOUT_CLASSIFICATION	finally apply profile configuration to the model
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#valueforpathchanged( javax.swing.tree.treepath java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#addtreemodellistener(javax.swing.event.treemodellistener)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#removetreemodellistener(javax.swing.event.treemodellistener)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#insertupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	event handlers
WITHOUT_CLASSIFICATION	store wizard?
WITHOUT_CLASSIFICATION	treemodel implementation
WITHOUT_CLASSIFICATION	todolistlistener implementation
WITHOUT_CLASSIFICATION	todolistlistener implementation
WITHOUT_CLASSIFICATION	firetreenodeschanged(this path childindices children)
WITHOUT_CLASSIFICATION	image.setmargin(new insets(0 0 0 0))
WITHOUT_CLASSIFICATION	otherwise parent must be an offending design material
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#isleaf(java.lang.object)
WITHOUT_CLASSIFICATION	end class wizstep
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	actions
WITHOUT_CLASSIFICATION	this is done for compatibility with previous version move the argo.user.properties written before 0.25.4 to the new location if it exists.
WITHOUT_CLASSIFICATION	don't allow instantiation
WITHOUT_CLASSIFICATION	actionlistener implementation
WITHOUT_CLASSIFICATION	documentlistener implementation
WITHOUT_CLASSIFICATION	targetlistener implementation
WITHOUT_CLASSIFICATION	copy to new file and let the regular load code do the actual load
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	end class configurationfactory
WITHOUT_CLASSIFICATION	log.log(level.info "configuration saved to {0}\n" url)
WITHOUT_CLASSIFICATION	check for the older properties file and copy it over if possible
WITHOUT_CLASSIFICATION	only allow one load
WITHOUT_CLASSIFICATION	add the first point twice
WITHOUT_CLASSIFICATION	add the first point twice
WITHOUT_CLASSIFICATION	scale everything up
WITHOUT_CLASSIFICATION	initialize band buffer bounds
WITHOUT_CLASSIFICATION	log.log(level.fine "getdata rectangle = " + clip)
WITHOUT_CLASSIFICATION	log.log(level.fine "getdata returning raster = " + translatedraster)
WITHOUT_CLASSIFICATION	create a new graphics context so we start with fresh transforms
WITHOUT_CLASSIFICATION	fill with our background color
WITHOUT_CLASSIFICATION	translate & clip graphic to match region of interest
WITHOUT_CLASSIFICATION	ask gef to print a band of the diagram (translated & clipped)
WITHOUT_CLASSIFICATION	make sure it isn't caching anything that should be written
WITHOUT_CLASSIFICATION	assert !initialized guitestactionopenproject fails over this
WITHOUT_CLASSIFICATION	retain the original one
WITHOUT_CLASSIFICATION	retain the original one
WITHOUT_CLASSIFICATION	internal initialization method. handles initialization which is common to both public methods.
WITHOUT_CLASSIFICATION	this is needed for the junit tests. otherwise a "assert initialized" would suffice.
WITHOUT_CLASSIFICATION	this is needed for the junit tests. otherwise a "assert initialized" would suffice.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	flag the command as to whether it is first in a chain
WITHOUT_CLASSIFICATION	end class delayedchangenotify
WITHOUT_CLASSIFICATION	default diagram settings
WITHOUT_CLASSIFICATION	default notation settings
WITHOUT_CLASSIFICATION	generation preferences
WITHOUT_CLASSIFICATION	the next one defaults to true to stay compatible with older argouml versions that did not have this setting
WITHOUT_CLASSIFICATION	the next ones defaults to true to stay compatible with older argouml versions that did not have this setting
WITHOUT_CLASSIFICATION	this notation is not available!
WITHOUT_CLASSIFICATION	always put the model at the top
WITHOUT_CLASSIFICATION	otherwise add the diagram at the start
WITHOUT_CLASSIFICATION	otherwise add the diagram at the start
WITHOUT_CLASSIFICATION	finally apply profile configuration to the model
WITHOUT_CLASSIFICATION	uri = persistencemanager.getinstance().fixuriextension(theprojecturi)
WITHOUT_CLASSIFICATION	register with the save action with other subsystems so that any changes in those subsystems will enable the save button/menu item etc.
WITHOUT_CLASSIFICATION	not needed in uml 1.x
WITHOUT_CLASSIFICATION	end interface delayedvchangelistener
WITHOUT_CLASSIFICATION	a profile initially has no applied profiles we go bottom-up
WITHOUT_CLASSIFICATION	skip leading underscores
WITHOUT_CLASSIFICATION	todo should just be the directory to write.
WITHOUT_CLASSIFICATION	the preferences with project-scope
WITHOUT_CLASSIFICATION	the argouml version with which this project was last saved
WITHOUT_CLASSIFICATION	if diagram added successfully add the member too
WITHOUT_CLASSIFICATION	adding a todo member removes any existing one.
WITHOUT_CLASSIFICATION	got past the veto add the member
WITHOUT_CLASSIFICATION	send indeterminate new value instead of making copy of vector
WITHOUT_CLASSIFICATION	remove the dependent modelelements such as the statemachine for a statechartdiagram
WITHOUT_CLASSIFICATION	hence a diagram name was saved in the project that we are loading. so we use this name to retrieve any matching diagram.
WITHOUT_CLASSIFICATION	use the first diagram.
WITHOUT_CLASSIFICATION	if there was no diagram at all then use the (first) uml model.
WITHOUT_CLASSIFICATION	we don't need this hashmap anymore so free up the memory
WITHOUT_CLASSIFICATION	can not delete the model
WITHOUT_CLASSIFICATION	can not delete the profile
WITHOUT_CLASSIFICATION	@see java.lang.object#finalize()
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getcolumncount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getcolumnname(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getrowcount()
WITHOUT_CLASSIFICATION	make the topmost diagram (that is not the one being deleted) current.
WITHOUT_CLASSIFICATION	trash related methods
WITHOUT_CLASSIFICATION	fire an event some anyone who cares about diagrams being removed can listen for it
WITHOUT_CLASSIFICATION	if we delete a figedge or fignode we actually call this method with the owner not the fig itself. however this method is called by actiondeletemodelelements for primitive figs (without owner).
WITHOUT_CLASSIFICATION	there's just one profileconfiguration in a project and there's no other way to add another one
WITHOUT_CLASSIFICATION	tab for the settings dialog that makes it possible to select the modules that are to be enabled. todo header for the table. @author linus tolke
WITHOUT_CLASSIFICATION	do nothing - these buttons are not shown.
WITHOUT_CLASSIFICATION	access methods for program infrastructure.
WITHOUT_CLASSIFICATION	@see java.io.filefilter#accept(java.io.file)
WITHOUT_CLASSIFICATION	the creation of the actual gui elements is deferred until they are actually needed. otherwize we have problems with the initialization.
WITHOUT_CLASSIFICATION	do nothing! the next time we refresh we will fetch the values again.
WITHOUT_CLASSIFICATION	access methods for modules that need to query about the status of other modules.
WITHOUT_CLASSIFICATION	access methods for the gui that the user uses to enable and disable modules.
WITHOUT_CLASSIFICATION	access methods for the program infrastructure
WITHOUT_CLASSIFICATION	catch all exceptions and errors however severe
WITHOUT_CLASSIFICATION	todo huntformodulesfromjavawebstart()
WITHOUT_CLASSIFICATION	load modules specified by a system property. modules specified by a system property is for running modules from within eclipse and running from java web start.
WITHOUT_CLASSIFICATION	try-catch only the jarfile instantiation so we don't accidentally mask anything in argojarclassloader or processjarfile.
WITHOUT_CLASSIFICATION	we expect all extensions to have a manifest even though we can operate without one if necessary.
WITHOUT_CLASSIFICATION	look for our specification
WITHOUT_CLASSIFICATION	add this to search list for i18n properties (done for both modules & localized property file sets)
WITHOUT_CLASSIFICATION	we havn't found it. add it.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	utility function to unregister all listeners registered through addelementlistener. @see #addelementlistener(object string)
WITHOUT_CLASSIFICATION	called after the notation default property gets changed. @see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	e.g. for an operation if pce.getsource() == modelelement && event.propertyname = "parameter" if event instanceof addassociationevent get the parameter instance from event.newvalue call model to add listener on parameter on change of "name" "type" else if event instanceof removeassociationevent get the parameter instance from event.oldvalue call model to remove listener on parameter on change of "name" "type" end if end if
WITHOUT_CLASSIFICATION	the following check should have been satisfied before we instantiated the module but double check again
WITHOUT_CLASSIFICATION	if it didn't have a loadable module class and it doesn't look like a localized property set warn the user that something funny is in their extension directory
WITHOUT_CLASSIFICATION	since there is no way to compare the objects as equal we have to search through the list at this point.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	remark there is also a java-like notation which is also part of argouml core distribution.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	this notation is not available!
WITHOUT_CLASSIFICATION	this is needed for the case when the default notation is not loaded at this point.
WITHOUT_CLASSIFICATION	class accessors
WITHOUT_CLASSIFICATION	static workers for dealing with notation names.
WITHOUT_CLASSIFICATION	no valid field for above notationlanguage. it's valid if not null.
WITHOUT_CLASSIFICATION	we also show stereotypes
WITHOUT_CLASSIFICATION	we also show stereotypes
WITHOUT_CLASSIFICATION	we also show the type (of which e.g. the name may change)
WITHOUT_CLASSIFICATION	we also show the type (of which e.g. the name may change)
WITHOUT_CLASSIFICATION	we also show tagged values (the / for derived)
WITHOUT_CLASSIFICATION	we also show tagged values (the / for derived)
WITHOUT_CLASSIFICATION	and when the operation is replaced
WITHOUT_CLASSIFICATION	and when the class changes name
WITHOUT_CLASSIFICATION	mvw indeed. the intention of the constructor parameter is to prove that there is a valid uml object to bind the notation to. so the next statement should fail on a null parameter and on anything that is not an object of which we can retrieve the multiplicity.
WITHOUT_CLASSIFICATION	we are not interested in the name.
WITHOUT_CLASSIFICATION	and the parameter names and values
WITHOUT_CLASSIFICATION	and the arguments
WITHOUT_CLASSIFICATION	we also show parameters
WITHOUT_CLASSIFICATION	we also show types of parameters
WITHOUT_CLASSIFICATION	listen to the modelelement itself
WITHOUT_CLASSIFICATION	we also show tagged values (the / for derived)
WITHOUT_CLASSIFICATION	if this fails then there is a problem dthompson 29/12/2008 it seems that the returned value is irrelevant here so i assume that the purpose of this call is just to throw an exception in case of a problem.
WITHOUT_CLASSIFICATION	register for events from all modelelements that change the name and body text i.e. when the callaction is replaced
WITHOUT_CLASSIFICATION	and when the owner is replaced (unlikely for operations) and when the operation changes name
WITHOUT_CLASSIFICATION	listen to the modelelement itself
WITHOUT_CLASSIFICATION	removed stereotype
WITHOUT_CLASSIFICATION	register for events from all modelelements that change the text i.e. when the transition is replaced
WITHOUT_CLASSIFICATION	new stereotype
WITHOUT_CLASSIFICATION	listen to name changes in the path (useful for e.g. package)
WITHOUT_CLASSIFICATION	register for the doactivity etc.
WITHOUT_CLASSIFICATION	register for internal transitions
WITHOUT_CLASSIFICATION	return "parsing.java.help.attribute"
WITHOUT_CLASSIFICATION	todo the src_visibility tag doesn't appear to be created anywhere by argouml currently
WITHOUT_CLASSIFICATION	return "parsing.help.fig-association-end-name"
WITHOUT_CLASSIFICATION	todo initial value
WITHOUT_CLASSIFICATION	skip spaces
WITHOUT_CLASSIFICATION	the name itself
WITHOUT_CLASSIFICATION	check the name for validity
WITHOUT_CLASSIFICATION	todo check the name for validity.
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed( java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	pick out return type
WITHOUT_CLASSIFICATION	handle multiplicity here since we need the type actually the api of generator is buggy since to generate multiplicity correctly we need the attribute too
WITHOUT_CLASSIFICATION	build the final string
WITHOUT_CLASSIFICATION	todo qualifiers (e.g. const) todo stereotypes
WITHOUT_CLASSIFICATION	name and params
WITHOUT_CLASSIFICATION	do nothing.
WITHOUT_CLASSIFICATION	constructor
WITHOUT_CLASSIFICATION	check for more attributes ('' separated)
WITHOUT_CLASSIFICATION	for java notation we also need to listen to "leaf" changes since they are shown as "final" on the diagram.
WITHOUT_CLASSIFICATION	remove bases that aren't there anymore
WITHOUT_CLASSIFICATION	notation.findnotation("java")
WITHOUT_CLASSIFICATION	initialize the notationutilityuml
WITHOUT_CLASSIFICATION	copy - can't iterate modify live collection while iterating it
WITHOUT_CLASSIFICATION	when nothing is generated omit the space.
WITHOUT_CLASSIFICATION	loop through all base classes building a comma separated list
WITHOUT_CLASSIFICATION	yes there are more
WITHOUT_CLASSIFICATION	no text? remove attr!
WITHOUT_CLASSIFICATION	no non-whitechars in text? remove attr!
WITHOUT_CLASSIFICATION	we need to set the namespace/owner of the new attribute before parsing
WITHOUT_CLASSIFICATION	if the 1st attribute is static then the new ones too.
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	yes there are more
WITHOUT_CLASSIFICATION	generates a string representation for the provided attribute. the string representation will be of the form visibility name [multiplicity] type-expression = initial-value {property-string} depending on settings in notation visibility multiplicity type-expression initial value and properties are shown/not shown.
WITHOUT_CLASSIFICATION	handle derived
WITHOUT_CLASSIFICATION	handle derived
WITHOUT_CLASSIFICATION	handle visibility
WITHOUT_CLASSIFICATION	fix for loading bad projects
WITHOUT_CLASSIFICATION	the "show types" defaults to true to stay compatible with older argouml versions that did not have this setting
WITHOUT_CLASSIFICATION	the element was deleted while we were processing it
WITHOUT_CLASSIFICATION	strip any trailing semi-colons
WITHOUT_CLASSIFICATION	construct bases string (comma separated)
WITHOUT_CLASSIFICATION	no text? remove op!
WITHOUT_CLASSIFICATION	no non-whitechars in text? remove op!
WITHOUT_CLASSIFICATION	check for more operations ('' separated)
WITHOUT_CLASSIFICATION	end while loop
WITHOUT_CLASSIFICATION	parameterlist is guaranteed to contain at least "("
WITHOUT_CLASSIFICATION	don't create a stereotype for <<signal>> on a reception but create any other parsed stereotypes as needed
WITHOUT_CLASSIFICATION	lets concatenate it to the resulting string (genstr)
WITHOUT_CLASSIFICATION	the "show types" defaults to true to stay compatible with older argouml versions that did not have this setting
WITHOUT_CLASSIFICATION	the parameters
WITHOUT_CLASSIFICATION	the returnparameters
WITHOUT_CLASSIFICATION	the model element was deleted while we were working on it
WITHOUT_CLASSIFICATION	else we remove only the extra ""
WITHOUT_CLASSIFICATION	the query state
WITHOUT_CLASSIFICATION	although operation and signal are peers in the uml type hierarchy they share the attributes isroot isleaf isabstract and specification. concurrency is not shared and is specific to operation.
WITHOUT_CLASSIFICATION	remove last
WITHOUT_CLASSIFICATION	end of block
WITHOUT_CLASSIFICATION	a string of the form "name"
WITHOUT_CLASSIFICATION	this is a message uml object
WITHOUT_CLASSIFICATION	supported format predecessors number "" action the 3 parts of the string to generate
WITHOUT_CLASSIFICATION	(mmessage)
WITHOUT_CLASSIFICATION	this may return null
WITHOUT_CLASSIFICATION	activatorintno is now guaranteed not null
WITHOUT_CLASSIFICATION	list<string> args = null
WITHOUT_CLASSIFICATION	get the ordered list of immediate successors
WITHOUT_CLASSIFICATION	the condition or iteration expression (recurrence)
WITHOUT_CLASSIFICATION	(mmessage)
WITHOUT_CLASSIFICATION	now apply the changes to the model
WITHOUT_CLASSIFICATION	mmessage
WITHOUT_CLASSIFICATION	if there are more than one suitable operation then we pick the first one.
WITHOUT_CLASSIFICATION	disconnect the message from the call graph make copies of returned live collections since we're modifying
WITHOUT_CLASSIFICATION	find the preceding message if any on either end of the association.
WITHOUT_CLASSIFICATION	mclassifierrole
WITHOUT_CLASSIFICATION	connect the message at a new spot
WITHOUT_CLASSIFICATION	case 3 & 4
WITHOUT_CLASSIFICATION	mmessage
WITHOUT_CLASSIFICATION	(mmessage)
WITHOUT_CLASSIFICATION	(mmessage)
WITHOUT_CLASSIFICATION	(mmessage)
WITHOUT_CLASSIFICATION	(mmessage)
WITHOUT_CLASSIFICATION	mclassifierrole
WITHOUT_CLASSIFICATION	if no variable name was given then retain the one in the model.
WITHOUT_CLASSIFICATION	if no function-name was given then retain the one in the model.
WITHOUT_CLASSIFICATION	store the guard i.e. condition or iteration expression in the recurrence field of the action
WITHOUT_CLASSIFICATION	if there was no action yet create a callaction
WITHOUT_CLASSIFICATION	things are strange if there are more than one candidate root it has no obvious interpretation in terms of a call tree.
WITHOUT_CLASSIFICATION	mmessage
WITHOUT_CLASSIFICATION	mmessage
WITHOUT_CLASSIFICATION	jaap branderhorst 2002-23-09 added next lines to link parameters and operations to the figs that represent them
WITHOUT_CLASSIFICATION	we can do nothing if we don't have both the use case and extension point.
WITHOUT_CLASSIFICATION	parse the string to creat a new extension point.
WITHOUT_CLASSIFICATION	if we got back null we interpret this as meaning delete the reference to the extension point from the use case otherwise we set the fields of the extension point to the values in newep.
WITHOUT_CLASSIFICATION	build a new extension point
WITHOUT_CLASSIFICATION	the empty string. return null
WITHOUT_CLASSIFICATION	handle derived
WITHOUT_CLASSIFICATION	if we are given the null string return immediately so that the extensionpoint is removed.
WITHOUT_CLASSIFICATION	a string of the form "location". this will be confused by the string "" so we pick this out as an instruction to clear both name and location.
WITHOUT_CLASSIFICATION	a string of the form "namelocation". discard the middle token ("")
WITHOUT_CLASSIFICATION	read past the colon.
WITHOUT_CLASSIFICATION	the string to build
WITHOUT_CLASSIFICATION	get the fields we want
WITHOUT_CLASSIFICATION	put in the name field if it's there
WITHOUT_CLASSIFICATION	put in the location field if it's there
WITHOUT_CLASSIFICATION	first we decode the string
WITHOUT_CLASSIFICATION	secondly we check the previous model structure
WITHOUT_CLASSIFICATION	and 3rd we adapt the model
WITHOUT_CLASSIFICATION	same class other operation
WITHOUT_CLASSIFICATION	other class
WITHOUT_CLASSIFICATION	we found the classifier now go find the operation
WITHOUT_CLASSIFICATION	here we located the new classifier with its operation.
WITHOUT_CLASSIFICATION	the text was {frozen}
WITHOUT_CLASSIFICATION	the text was {frozen = false}
WITHOUT_CLASSIFICATION	the text was {frozen = true}
WITHOUT_CLASSIFICATION	copy returned parameters because it will be a live collection for mdr
WITHOUT_CLASSIFICATION	should we be getting this from the gui? bt 11 aug 2002
WITHOUT_CLASSIFICATION	no type defined yet
WITHOUT_CLASSIFICATION	if the current property occurs a second time in the given list of properties then skip it
WITHOUT_CLASSIFICATION	this automatically pulls in a tagdefinition from the profile
WITHOUT_CLASSIFICATION	the tv existed but maybe it was not "true"
WITHOUT_CLASSIFICATION	todo for uml2 check if the type of the tv is string.
WITHOUT_CLASSIFICATION	generate all the existing internal transitions so that we can compare them as text with the newly entered ones.
WITHOUT_CLASSIFICATION	strip any trailing semi-colons
WITHOUT_CLASSIFICATION	this would be solution (1) model.getextensionmechanismshelper().setdatavalues( taggedvalue new string[] {"false"})
WITHOUT_CLASSIFICATION	there are 2 possibilities either (1) we follow the traditional notation philosophy and set the tagged value to false or (2) we restore to the pristine situation and delete the taggedvalue (whatever the value was). i chose the latter (mvw).
WITHOUT_CLASSIFICATION	allow concatenation order and separator to be localized
WITHOUT_CLASSIFICATION	parameter etc.
WITHOUT_CLASSIFICATION	"in" is the default
WITHOUT_CLASSIFICATION	"in"
WITHOUT_CLASSIFICATION	return nothing
WITHOUT_CLASSIFICATION	it can still be null if the uml element did not have a multiplicity defined.
WITHOUT_CLASSIFICATION	let's not be picky about the brackets - just remove them
WITHOUT_CLASSIFICATION	get the classifier
WITHOUT_CLASSIFICATION	the state of a classifierinstate is removed so let's reduce it to a classifier.
WITHOUT_CLASSIFICATION	the model is changed - job done
WITHOUT_CLASSIFICATION	strings
WITHOUT_CLASSIFICATION	remove the states that did not match.
WITHOUT_CLASSIFICATION	now we have to see if any state in any statemachine of classifier is named [name]. if so then we only have to link the state to c.
WITHOUT_CLASSIFICATION	the model is changed - our job is done
WITHOUT_CLASSIFICATION	the model is changed - our job is done
WITHOUT_CLASSIFICATION	no state named s is found so we have to reject the user's input
WITHOUT_CLASSIFICATION	finally do the adaptations
WITHOUT_CLASSIFICATION	then c is a "normal" classifier uml states
WITHOUT_CLASSIFICATION	let's create a new classifierinstate with the correct links
WITHOUT_CLASSIFICATION	this updates the diagram - hence as last statement
WITHOUT_CLASSIFICATION	case 2
WITHOUT_CLASSIFICATION	case 3
WITHOUT_CLASSIFICATION	we can distinguish between 4 cases 1. a trigger is given. none exists yet. 2. the trigger was present and it is the same type or a different type and its text is changed or the same. 3. a trigger is not given. none exists yet. 4. the name of the trigger was present but is removed. the reaction in these cases should be 1. find the referred trigger (issue 5988) or create a new one and hook it to the transition. 2. rename the trigger. 3. nop. 4. unhook and erase the existing trigger.
WITHOUT_CLASSIFICATION	if no classifier has been set then entering a state is not useful so the user's input has to be rejected.
WITHOUT_CLASSIFICATION	todo if the next line trows an exception then what do we do with the remainder of the parsed/to be parsed lines?
WITHOUT_CLASSIFICATION	add this new one and mark it to be retained
WITHOUT_CLASSIFICATION	process the final list of internal transitions and hook it to the state
WITHOUT_CLASSIFICATION	don't forget to remove old internals!
WITHOUT_CLASSIFICATION	make next accesses to this instance predictable
WITHOUT_CLASSIFICATION	and hook in the new ones
WITHOUT_CLASSIFICATION	the actionexpression
WITHOUT_CLASSIFICATION	let's look for a timeevent changeevent callevent or signalevent
WITHOUT_CLASSIFICATION	operation(paramlist)
WITHOUT_CLASSIFICATION	the part after the || is for when there's nothing between the ()
WITHOUT_CLASSIFICATION	it is safe to give a null to the next function since a statemachine is always composed by a model anyhow.
WITHOUT_CLASSIFICATION	else the empty s will do
WITHOUT_CLASSIFICATION	case 1 and 2
WITHOUT_CLASSIFICATION	language
WITHOUT_CLASSIFICATION	do not set the name.
WITHOUT_CLASSIFICATION	do not set the name.
WITHOUT_CLASSIFICATION	this case is a bit different because of the parameters. if the event already exists the parameters are ignored.
WITHOUT_CLASSIFICATION	when()
WITHOUT_CLASSIFICATION	signalname
WITHOUT_CLASSIFICATION	and parse the parameter list
WITHOUT_CLASSIFICATION	and hook it to the transition immediately so that an exception can not cause it to remain dangling
WITHOUT_CLASSIFICATION	do nothing.
WITHOUT_CLASSIFICATION	yes there are more
WITHOUT_CLASSIFICATION	strip any trailing semi-colons
WITHOUT_CLASSIFICATION	parameter etc.
WITHOUT_CLASSIFICATION	"in" is the default
WITHOUT_CLASSIFICATION	"in"
WITHOUT_CLASSIFICATION	return nothing
WITHOUT_CLASSIFICATION	and parse the parameter list
WITHOUT_CLASSIFICATION	case 2
WITHOUT_CLASSIFICATION	just change the time expression
WITHOUT_CLASSIFICATION	we have an event without expression
WITHOUT_CLASSIFICATION	it's a time-event now but was of another type before!
WITHOUT_CLASSIFICATION	just change the changeexpression
WITHOUT_CLASSIFICATION	create a new expression
WITHOUT_CLASSIFICATION	the parsed text describes a change-event but the model contains another type!
WITHOUT_CLASSIFICATION	just change the name and linked operation
WITHOUT_CLASSIFICATION	todo change the linked operation.
WITHOUT_CLASSIFICATION	just change the name and linked signal
WITHOUT_CLASSIFICATION	case 3 and 4
WITHOUT_CLASSIFICATION	case 3
WITHOUT_CLASSIFICATION	case 3
WITHOUT_CLASSIFICATION	case 4 erase it
WITHOUT_CLASSIFICATION	case 4 erase it
WITHOUT_CLASSIFICATION	do not check if the parameters match.
WITHOUT_CLASSIFICATION	case 1
WITHOUT_CLASSIFICATION	nsuml does this (?) model.getfacade().setguard(trans g)
WITHOUT_CLASSIFICATION	no text. we may remove the literal.
WITHOUT_CLASSIFICATION	no non-white chars in text? remove literal!
WITHOUT_CLASSIFICATION	heuristic algorithm do not show stereotypes if there is no name.
WITHOUT_CLASSIFICATION	@see javax.swing.jcomponent#setvisible(boolean)
WITHOUT_CLASSIFICATION	strip any trailing semi-colons
WITHOUT_CLASSIFICATION	construct bases string (comma separated)
WITHOUT_CLASSIFICATION	great! the class already existed - just use it.
WITHOUT_CLASSIFICATION	if no base was typed then only set the name
WITHOUT_CLASSIFICATION	only set the name if the base was found
WITHOUT_CLASSIFICATION	if the base was not changed then only set the name
WITHOUT_CLASSIFICATION	get the associationrole name
WITHOUT_CLASSIFICATION	let's create a class with the given name otherwise the user will not understand why we refuse his input!
WITHOUT_CLASSIFICATION	only instantiate when we need it.
WITHOUT_CLASSIFICATION	if the base is already set to this assoc then do not set it again. this check is needed otherwise the setbase() below gives an exception.
WITHOUT_CLASSIFICATION	2002-07-31 jaap branderhorst from here made visibility etc. configurable
WITHOUT_CLASSIFICATION	get the base association name
WITHOUT_CLASSIFICATION	no instantiations
WITHOUT_CLASSIFICATION	the next one defaults to true to stay compatible with older argouml versions that did not have this setting
WITHOUT_CLASSIFICATION	end of oclevaluator
WITHOUT_CLASSIFICATION	look for associations
WITHOUT_CLASSIFICATION	look for associations
WITHOUT_CLASSIFICATION	massociationend
WITHOUT_CLASSIFICATION	mparameter
WITHOUT_CLASSIFICATION	massociationend
WITHOUT_CLASSIFICATION	the ocl toolkit does not like void return types
WITHOUT_CLASSIFICATION	mclassifiers cannot be bag
WITHOUT_CLASSIFICATION	mclassifier
WITHOUT_CLASSIFICATION	first search for appropriate attributes
WITHOUT_CLASSIFICATION	first search for appropriate attributes
WITHOUT_CLASSIFICATION	mclassifier
WITHOUT_CLASSIFICATION	moperation
WITHOUT_CLASSIFICATION	moperation
WITHOUT_CLASSIFICATION	and not incompletely imported
WITHOUT_CLASSIFICATION	query checking added 05/21/01 sz9
WITHOUT_CLASSIFICATION	query checking added 05/21/01 sz9
WITHOUT_CLASSIFICATION	end class oclexpander
WITHOUT_CLASSIFICATION	skip first parameter == return type
WITHOUT_CLASSIFICATION	skip first parameter == return type
WITHOUT_CLASSIFICATION	only look at classes
WITHOUT_CLASSIFICATION	abstract classes are hardly ever singletons
WITHOUT_CLASSIFICATION	and not association classes
WITHOUT_CLASSIFICATION	with a name
WITHOUT_CLASSIFICATION	if there is an attribute which is not static => no problem
WITHOUT_CLASSIFICATION	if there is an outgoing association => no problem
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	only look at classes
WITHOUT_CLASSIFICATION	only look at classes
WITHOUT_CLASSIFICATION	check for singleton stereotype uninitialised instance variables and outgoing associations as per javadoc above.
WITHOUT_CLASSIFICATION	found no such attribute
WITHOUT_CLASSIFICATION	we only look at singletons
WITHOUT_CLASSIFICATION	we only look at singletons
WITHOUT_CLASSIFICATION	end class crsingletonviolatedonlyprivateconstructors
WITHOUT_CLASSIFICATION	note for historical reasons true == hide so we need to invert the sense of this
WITHOUT_CLASSIFICATION	end class cremptypackage
WITHOUT_CLASSIFICATION	at this stage during loading the diagrams are not created yet - so we have to store this name for later use.
WITHOUT_CLASSIFICATION	pw.close()
WITHOUT_CLASSIFICATION	retain the previous project file even when the save operation crashes in the middle. also create a backup file after saving.
WITHOUT_CLASSIFICATION	project.setfile(file)
WITHOUT_CLASSIFICATION	for andromda profiles
WITHOUT_CLASSIFICATION	retain the previous project file even when the save operation crashes in the middle. also create a backup file after saving.
WITHOUT_CLASSIFICATION	give the parser a map of model elements keyed by their uuid. this is used to allocate figs to their owner using the "href" attribute in pgml.
WITHOUT_CLASSIFICATION	if save did not raise an exception and name+"#" exists move name+"#" to name+"~" this is the correct backup file
WITHOUT_CLASSIFICATION	if we get a 2nd error just ignore it
WITHOUT_CLASSIFICATION	frank in case of exception delete name and mv name+"#" back to name if name+"#" exists this is the "rollback" to old file
WITHOUT_CLASSIFICATION	we have to give a message to user and set the system to unsaved!
WITHOUT_CLASSIFICATION	do nothing.
WITHOUT_CLASSIFICATION	should never happen - something's really wrong
WITHOUT_CLASSIFICATION	main parsing methods
WITHOUT_CLASSIFICATION	@see java.io.inputstream#close()
WITHOUT_CLASSIFICATION	@see java.io.inputstream#read()
WITHOUT_CLASSIFICATION	@see java.io.inputstream#read(byte[] int int)
WITHOUT_CLASSIFICATION	if save did not raise an exception and name+"#" exists move name+"#" to name+"~" this is the correct backup file
WITHOUT_CLASSIFICATION	frank in case of exception delete name and mv name+"#" back to name if name+"#" exists this is the "rollback" to old file
WITHOUT_CLASSIFICATION	we have to give a message to user and set the system to unsaved!
WITHOUT_CLASSIFICATION	boolean upgraderequired = !checkversion(fileversion releaseversion)
WITHOUT_CLASSIFICATION	upgrade is in the way for uml2 projects so we turn it off in that case
WITHOUT_CLASSIFICATION	load .argo project descriptor
WITHOUT_CLASSIFICATION	load the rest
WITHOUT_CLASSIFICATION	copy the todo items after the model and diagrams so that any model elements or figs that the todo items refer to will exist before creating critics.
WITHOUT_CLASSIFICATION	first read the .argo file from zip
WITHOUT_CLASSIFICATION	keep reading till we hit the <argo> tag
WITHOUT_CLASSIFICATION	get the version from the tag.
WITHOUT_CLASSIFICATION	skip 1 lines
WITHOUT_CLASSIFICATION	loop round loading the diagrams
WITHOUT_CLASSIFICATION	private eventlistenerlist listenerlist = new eventlistenerlist()
WITHOUT_CLASSIFICATION	skip the 2 lines <?xml version="1.0" encoding="utf-8" ?> <!doctype todo system "todo.dtd" >
WITHOUT_CLASSIFICATION	keep reading till we get the left bracket of an opening tag
WITHOUT_CLASSIFICATION	compare each following character to see that it matches the tag we want
WITHOUT_CLASSIFICATION	we also want to match with the right bracket of the tag or some other terminator
WITHOUT_CLASSIFICATION	we've found the matching tag but do we have the correct instance with matching attributes?
WITHOUT_CLASSIFICATION	read the name of the child tag and then reset read position back to that child tag.
WITHOUT_CLASSIFICATION	skip any whitespace till we should be on an equals sign.
WITHOUT_CLASSIFICATION	skip any whitespace till we should be on a quote symbol.
WITHOUT_CLASSIFICATION	no other uses of string in pgmlhandler
WITHOUT_CLASSIFICATION	handle other uses of <private> contents
WITHOUT_CLASSIFICATION	sanity check - the returned path item placement strategy should match the one in the uml. if it doesn't it could be that the uml was created with an older argo version and the new argo version use a different placement strategy. if they don't match just use the default.
WITHOUT_CLASSIFICATION	if any of the values are null ignore the element.
WITHOUT_CLASSIFICATION	if the pathitemplacement was unknown leave the diagram with the default settings.
WITHOUT_CLASSIFICATION	for a match to be found it has to have the same owner and the same long class name.
WITHOUT_CLASSIFICATION	a list of the path item attributes for this container. the list is populated during parsing them processed at endelement() private list<hashtable<string string>> pathitemattrs = new arraylist<hashtable<string string>>()
WITHOUT_CLASSIFICATION	this code has to go within the startelement block after the strings have been matched.
WITHOUT_CLASSIFICATION	method 1 (collect data and assign later in endelement() method). hashtable<string string> ht = new hashtable<string string>() ht.put("classname" classname) ht.put("figclassname" figclassname) ht.put("ownerhref" ownerhref) ht.put("angle" angle) ht.put("offset" offset) pathitemattrs.add(ht)
WITHOUT_CLASSIFICATION	create a new diagram wide settings block which is backed by the project-wide defaults that we were passed
WITHOUT_CLASSIFICATION	ignore non-private elements within fignode groups
WITHOUT_CLASSIFICATION	handle itemuid in container contents
WITHOUT_CLASSIFICATION	discard class name x y w h
WITHOUT_CLASSIFICATION	the owner should always have already been set in the constructor
WITHOUT_CLASSIFICATION	happens when 'is' comes from a zip file
WITHOUT_CLASSIFICATION	continue with null stream readdiagram() will take care of it
WITHOUT_CLASSIFICATION	todo localize these
WITHOUT_CLASSIFICATION	if the id does not look like a top-level fig then we can assume that this is an id of a figedgeport inside some figedge. so extract the figedgeport from the figedge and return that as the fignode.
WITHOUT_CLASSIFICATION	if there is no dot then this must be a top level fig and can be assumed to be a fignode.
WITHOUT_CLASSIFICATION	we are looking first to match with 3 different constructor types. we would not expect a fig to have any mix of these. any constructor other than these should be deprecated so we look for these first. fig(diagramedgesettings diagramsettings) fig(object rectangle diagramsettings) fig(rectangle diagramsettings)
WITHOUT_CLASSIFICATION	fignodemodelelements should match here
WITHOUT_CLASSIFICATION	figedgemodelelements should match here (they have no bounds)
WITHOUT_CLASSIFICATION	retain the previous project file even when the save operation crashes in the middle. also create a backup file after saving.
WITHOUT_CLASSIFICATION	frank in case of exception delete name and mv name+"#" back to name if name+"#" exists this is the "rollback" to old file
WITHOUT_CLASSIFICATION	fall back to gef's handling if we couldn't find an appropriate constructor
WITHOUT_CLASSIFICATION	mywriter
WITHOUT_CLASSIFICATION	empty constructor
WITHOUT_CLASSIFICATION	empty constructor
WITHOUT_CLASSIFICATION	for compatibility with older format
WITHOUT_CLASSIFICATION	<model> is not used in current implementation
WITHOUT_CLASSIFICATION	<model> is not used in current implementation
WITHOUT_CLASSIFICATION	|| model == null
WITHOUT_CLASSIFICATION	|| model == null
WITHOUT_CLASSIFICATION	we have to give a message to user and set the system to unsaved!
WITHOUT_CLASSIFICATION	write out header section
WITHOUT_CLASSIFICATION	note we assume members are ordered correctly already
WITHOUT_CLASSIFICATION	let's initialize the progressmgr
WITHOUT_CLASSIFICATION	run through any stylesheet upgrades
WITHOUT_CLASSIFICATION	don't use systemid here or it will get opened in preference to inputstream.
WITHOUT_CLASSIFICATION	uml 2.x files could also contain a profile model. try again with umlprofile as main tag.
WITHOUT_CLASSIFICATION	let's update the progress
WITHOUT_CLASSIFICATION	if we're trying to load a file from a future version complain and refuse.
WITHOUT_CLASSIFICATION	empty constructor
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	no more we can do here on failure
WITHOUT_CLASSIFICATION	buffer containing characters which have been decoded from the bytes in inbb.
WITHOUT_CLASSIFICATION	regex pattern for xml declaration and optionally doctype backslashes are doubled up - one for java one for regex
WITHOUT_CLASSIFICATION	convert from bytes back to characters
WITHOUT_CLASSIFICATION	rewind our character buffer
WITHOUT_CLASSIFICATION	remove anything that matches our pattern
WITHOUT_CLASSIFICATION	remove null characters at the end
WITHOUT_CLASSIFICATION	reencode the remaining characters as bytes again
WITHOUT_CLASSIFICATION	and write them to our output stream
WITHOUT_CLASSIFICATION	skip the <?xml first line
WITHOUT_CLASSIFICATION	cat.debug("note todoparser handlestarttag" + e.getname())
WITHOUT_CLASSIFICATION	nop
WITHOUT_CLASSIFICATION	this is expected to be safe don't add a try block here
WITHOUT_CLASSIFICATION	cat.debug("added todoitem " + _headline)
WITHOUT_CLASSIFICATION	static variables
WITHOUT_CLASSIFICATION	@see org.xml.sax.contenthandler#startelement(java.lang.string java.lang.string java.lang.string org.xml.sax.attributes)
WITHOUT_CLASSIFICATION	@see org.xml.sax.contenthandler#endelement(java.lang.string java.lang.string java.lang.string)
WITHOUT_CLASSIFICATION	@see org.xml.sax.contenthandler#characters(char[] int int)
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	retain the previous project file even when the save operation crashes in the middle. also create a backup file after saving.
WITHOUT_CLASSIFICATION	these strings match the xml element names in the argo.tee exactly.
WITHOUT_CLASSIFICATION	the following is deprecated but can never be removed to preserve backward compatibility with old project files
WITHOUT_CLASSIFICATION	protected methods
WITHOUT_CLASSIFICATION	empty constructor
WITHOUT_CLASSIFICATION	abstract methods
WITHOUT_CLASSIFICATION	non-abstract methods
WITHOUT_CLASSIFICATION	e.gorg.argouml.uml.generator.ui.classgenerationdialog -> poseidon.jar
WITHOUT_CLASSIFICATION	convenience methods
WITHOUT_CLASSIFICATION	end class saxparserbase
WITHOUT_CLASSIFICATION	stop ui interception
WITHOUT_CLASSIFICATION	do nothing.
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	@see javax.swing.filechooser.filefilter#getdescription()
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	retain the previous project file even when the save operation crashes in the middle. also create a backup file after saving.
WITHOUT_CLASSIFICATION	if save did not raise an exception and name+"#" exists move name+"#" to name+"~" this is the correct backup file
WITHOUT_CLASSIFICATION	frank in case of exception delete name and mv name+"#" back to name if name+"#" exists this is the "rollback" to old file
WITHOUT_CLASSIFICATION	we have to give a message to user and set the system to unsaved!
WITHOUT_CLASSIFICATION	we have to give a message to user and set the system to unsaved!
WITHOUT_CLASSIFICATION	make sure the file doesn't exist so the user will get prompted to choose a new name
WITHOUT_CLASSIFICATION	possibly use the following instead memberfilepersister persister = new diagrammemberfilepersister()
WITHOUT_CLASSIFICATION	class methods
WITHOUT_CLASSIFICATION	end class xmltokentablebase
WITHOUT_CLASSIFICATION	these are the file formats i know about
WITHOUT_CLASSIFICATION	if anything goes wrong return the stack trace as a string so that we get some useful feedback.
WITHOUT_CLASSIFICATION	return just the comment edges for a specific layer. todo document diagram / layer? @param diagram the diagram. @return a {@link list} with the edges.
WITHOUT_CLASSIFICATION	make sure this setting exists in the configuration file to facilitate changing
WITHOUT_CLASSIFICATION	is row at top of screen?
WITHOUT_CLASSIFICATION	@see javax.swing.filechooser.filefilter#getdescription()
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	filefilter api
WITHOUT_CLASSIFICATION	this check for files without extension
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	end class xmlelement
WITHOUT_CLASSIFICATION	for andromda
WITHOUT_CLASSIFICATION	for some reason this alleged directory is a single file this could be that there is some confusion or just the normal that a single file was selected and is supposed to be imported.
WITHOUT_CLASSIFICATION	get the contents of the directory
WITHOUT_CLASSIFICATION	the following test can cause trouble with links because links are accepted as directories even if they link files. links could also result in infinite loops. for this reason we don't do this traversing recursively.
WITHOUT_CLASSIFICATION	if this file is a directory
WITHOUT_CLASSIFICATION	load profile name
WITHOUT_CLASSIFICATION	yes scroll up one row
WITHOUT_CLASSIFICATION	testing works ok.
WITHOUT_CLASSIFICATION	if there is only one package in the model we should suppose it's the profile model if there is more than one we take the ones marked as <<profile>>
WITHOUT_CLASSIFICATION	load profile dependencies
WITHOUT_CLASSIFICATION	set up the property panels for critics
WITHOUT_CLASSIFICATION	init profiles defined in jar files
WITHOUT_CLASSIFICATION	we have our own uml2 profile but it is not used. instead by the following line the build-in eclipse uml2 standard profile and primitive types implementation are used.
WITHOUT_CLASSIFICATION	missing wfrs
WITHOUT_CLASSIFICATION	association class 4.5.3.2 [1]
WITHOUT_CLASSIFICATION	testing does not fire.
WITHOUT_CLASSIFICATION	testing does not fire.
WITHOUT_CLASSIFICATION	4.5.3.2 [2]
WITHOUT_CLASSIFICATION	behavioral feature 4.5.3.5 [2]
WITHOUT_CLASSIFICATION	todo partly overlaps croppendvsattr.
WITHOUT_CLASSIFICATION	tested with fabricated xmi - ok.
WITHOUT_CLASSIFICATION	tested with fabricated xmi - ok.
WITHOUT_CLASSIFICATION	tested with fabricated xmi - ok.
WITHOUT_CLASSIFICATION	4.5.3.20 [4]
WITHOUT_CLASSIFICATION	+ "a.allconnections->exists(r | r.type.ocliskindof(actor)) and "
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.depthfirstadapter#caseaifexpression(tudresden.ocl.parser.node.aifexpression)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.depthfirstadapter#casealogicalexpressiontail(tudresden.ocl.parser.node.alogicalexpressiontail)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.depthfirstadapter#casearelationalexpressiontail(tudresden.ocl.parser.node.arelationalexpressiontail)
WITHOUT_CLASSIFICATION	usecase 4.11.3.5 [2]
WITHOUT_CLASSIFICATION	classifier 4.5.3.8 [5]
WITHOUT_CLASSIFICATION	generalizableelement 4.5.3.20 [1]
WITHOUT_CLASSIFICATION	datatype 4.5.3.12 [1]
WITHOUT_CLASSIFICATION	actor 4.11.3.1 [1]
WITHOUT_CLASSIFICATION	namespace 4.5.3.26 [2]
WITHOUT_CLASSIFICATION	usecase 4.11.3.5 [1]
WITHOUT_CLASSIFICATION	actor 4.11.3.1 [2]
WITHOUT_CLASSIFICATION	tested ok except in some cases depending on the sequence of the eps. probably the implementation of "forall (x y | " does not cover all combinations.
WITHOUT_CLASSIFICATION	usecase 4.11.3.5 [4]
WITHOUT_CLASSIFICATION	usecase 4.11.3.5 [3]
WITHOUT_CLASSIFICATION	actionstate 4.13.3.2 [3] issue 715
WITHOUT_CLASSIFICATION	no default type for uml2
WITHOUT_CLASSIFICATION	the uml profile is always present and default
WITHOUT_CLASSIFICATION	register the built-in profiles
WITHOUT_CLASSIFICATION	if an exception is raised file is unusable
WITHOUT_CLASSIFICATION	if the list does not exist add the code generation and good practices profiles as default
WITHOUT_CLASSIFICATION	this profile could have not been loaded when the default profile configuration was loaded at first so we need to do it again
WITHOUT_CLASSIFICATION	we assume profile is contained in a single extent
WITHOUT_CLASSIFICATION	nothing to delete if we couldn't get the packages
WITHOUT_CLASSIFICATION	if we found an old-style name update it to the new package name
WITHOUT_CLASSIFICATION	make sure the names didn't change again
WITHOUT_CLASSIFICATION	simply use name as it is
WITHOUT_CLASSIFICATION	if element is an associationend use the namespace of containing association
WITHOUT_CLASSIFICATION	if one side is null compare with the equality operator
WITHOUT_CLASSIFICATION	xxx hypotheses for afeaturecall fwd = op val = head
WITHOUT_CLASSIFICATION	hypotheses no time expression (only invariants)
WITHOUT_CLASSIFICATION	for a iterator call we should provide (a) the variables (b) the expression to be evaluated on each step (c) the lambda-evaluator to evaluate it
WITHOUT_CLASSIFICATION	xxx hypothesis no time expression (inv)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.depthfirstadapter#caseaconstraint(tudresden.ocl.parser.node.aconstraint)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.depthfirstadapter#caseaclassifiercontext(tudresden.ocl.parser.node.aclassifiercontext)
WITHOUT_CLASSIFICATION	these operations are ok for lists too
WITHOUT_CLASSIFICATION	log.log(level.fine "ocl feature call " + subject + ""+ type +""+ feature + "" + parameters)
WITHOUT_CLASSIFICATION	xxx this should be done in collectionsmodelinterpreter but it can't trigger another invokefeature
WITHOUT_CLASSIFICATION	logger. private static final logger log = logger.getlogger(defaultoclevaluator.class.getname())
WITHOUT_CLASSIFICATION	log.log(level.fine "ocl " + ocl)
WITHOUT_CLASSIFICATION	propagate
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	if test fails this element should not be in the result set
WITHOUT_CLASSIFICATION	if test is ok this element should not be in the result set
WITHOUT_CLASSIFICATION	these operations are ok for bags too
WITHOUT_CLASSIFICATION	4.5.2.1 abstraction
WITHOUT_CLASSIFICATION	4.5.2.3 association
WITHOUT_CLASSIFICATION	additional operation 4.5.3.1 [1]
WITHOUT_CLASSIFICATION	4.5.2.5 associationend
WITHOUT_CLASSIFICATION	additional operation 4.5.3.3 [1]
WITHOUT_CLASSIFICATION	4.5.2.6 attribute
WITHOUT_CLASSIFICATION	4.5.2.7 behavioralfeature
WITHOUT_CLASSIFICATION	4.5.2.8 binding
WITHOUT_CLASSIFICATION	4.5.2.9 class
WITHOUT_CLASSIFICATION	4.5.2.10 classifier
WITHOUT_CLASSIFICATION	todo specifiedend??
WITHOUT_CLASSIFICATION	4.5.2.11 comment
WITHOUT_CLASSIFICATION	4.5.2.12 component
WITHOUT_CLASSIFICATION	additional operation in 4.5.3.9
WITHOUT_CLASSIFICATION	no scroll down one row
WITHOUT_CLASSIFICATION	4.5.2.14 dependency
WITHOUT_CLASSIFICATION	4.5.2.18 elementownership
WITHOUT_CLASSIFICATION	4.5.2.19 enumeration
WITHOUT_CLASSIFICATION	4.5.2.20 enumerationliteral
WITHOUT_CLASSIFICATION	4.5.2.21 feature
WITHOUT_CLASSIFICATION	4.5.2.23 generalizable element
WITHOUT_CLASSIFICATION	additional operation in 4.5.3.20
WITHOUT_CLASSIFICATION	4.5.2.26 method
WITHOUT_CLASSIFICATION	4.5.2.27 modelelement
WITHOUT_CLASSIFICATION	avoiding null names
WITHOUT_CLASSIFICATION	as extended by 4.6.2.2
WITHOUT_CLASSIFICATION	additional operations in 4.5.3.25
WITHOUT_CLASSIFICATION	additional operations in 4.5.3.26
WITHOUT_CLASSIFICATION	4.5.2.29 node
WITHOUT_CLASSIFICATION	4.5.2.30 operation
WITHOUT_CLASSIFICATION	4.5.2.31 parameter
WITHOUT_CLASSIFICATION	4.5.2.35 programminglanguagedatatype
WITHOUT_CLASSIFICATION	set the icon
WITHOUT_CLASSIFICATION	@see java.lang.object#equals(java.lang.object)
WITHOUT_CLASSIFICATION	@see java.lang.object#hashcode()
WITHOUT_CLASSIFICATION	@see java.awt.component#getminimumsize()
WITHOUT_CLASSIFICATION	ignored - we only care about open/closing
WITHOUT_CLASSIFICATION	4.5.2.37 structuralfeature
WITHOUT_CLASSIFICATION	4.5.2.38 templateargument
WITHOUT_CLASSIFICATION	4.5.2.39 templateparameter
WITHOUT_CLASSIFICATION	4.11.3.5 usecase
WITHOUT_CLASSIFICATION	the operation specificationpath results in a set containing all surrounding namespaces that are not instances of package. specificationpath set(namespace) specificationpath = self.allsurroundingnamespaces->select(n | n.ocliskindof(subsystem) or n.ocliskindof(class))
WITHOUT_CLASSIFICATION	4.5.3.2 associationclass
WITHOUT_CLASSIFICATION	the operation allconnections results in the set of all associationends of the associationclass including all connections defined by its parent (transitive closure).
WITHOUT_CLASSIFICATION	4.6.2.3 stereotype
WITHOUT_CLASSIFICATION	stereotypeconstraint ?
WITHOUT_CLASSIFICATION	4.6.2.4 tagdefinition
WITHOUT_CLASSIFICATION	4.6.2.5 taggedvalue
WITHOUT_CLASSIFICATION	add adapters that do nothing for keyboard and mouse actions
WITHOUT_CLASSIFICATION	discard the event if its source is not from the correct type
WITHOUT_CLASSIFICATION	guard against error conditions if climb search wasn't successful
WITHOUT_CLASSIFICATION	sets the mouse cursor to hourglass mode
WITHOUT_CLASSIFICATION	start receiving all events and consume them if necessary
WITHOUT_CLASSIFICATION	activate the glass pane capabilities
WITHOUT_CLASSIFICATION	stop receiving all events
WITHOUT_CLASSIFICATION	deactivate the glass pane capabilities
WITHOUT_CLASSIFICATION	sets the mouse cursor back to the regular pointer
WITHOUT_CLASSIFICATION	no initialization required
WITHOUT_CLASSIFICATION	end class spacerpanel
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#settarget(java.lang.object)
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.transferable#gettransferdata(java.awt.datatransfer.dataflavor)
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.transferable#gettransferdataflavors()
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.transferable#isdataflavorsupported(java.awt.datatransfer.dataflavor)
WITHOUT_CLASSIFICATION	@see java.lang.runnable#run()
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#insertupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#removeupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	called when the user has pressed save. performs "save" in all tabs.
WITHOUT_CLASSIFICATION	climb the component hierarchy until a rootpanecontainer is found or until the very top
WITHOUT_CLASSIFICATION	end class splashpanel
WITHOUT_CLASSIFICATION	retrieve an existing glasspane if old one already exist or create a new one otherwise return null
WITHOUT_CLASSIFICATION	add settings from the settings registry.
WITHOUT_CLASSIFICATION	keep track of the visible window associated w/the component useful during event filtering
WITHOUT_CLASSIFICATION	show a chooser dialog for the file name only xmi is allowed
WITHOUT_CLASSIFICATION	if a toolbar was requested create an empty one.
WITHOUT_CLASSIFICATION	increase width to accommodate all tabs on one row.
WITHOUT_CLASSIFICATION	todo localize
WITHOUT_CLASSIFICATION	todo localize
WITHOUT_CLASSIFICATION	called when the user has pressed cancel. performs "cancel" in all tabs.
WITHOUT_CLASSIFICATION	end class tabtext
WITHOUT_CLASSIFICATION	if a recursive call from setvisible() just return
WITHOUT_CLASSIFICATION	ignored - we only care about open/closing
WITHOUT_CLASSIFICATION	windowopen state will be changed when window is activated
WITHOUT_CLASSIFICATION	ignored - we only care about open/closing
WITHOUT_CLASSIFICATION	we have to tell the settings tab in which project the settings reside
WITHOUT_CLASSIFICATION	ignored - we only care about open/closing
WITHOUT_CLASSIFICATION	we only request focus the first time we become visible
WITHOUT_CLASSIFICATION	use case
WITHOUT_CLASSIFICATION	@see java.awt.event.windowlistener#windowopened(java.awt.event.windowevent)
WITHOUT_CLASSIFICATION	do nothing - these buttons are not shown.
WITHOUT_CLASSIFICATION	handle the same as an explicit cancel
WITHOUT_CLASSIFICATION	saveposition(prptodo tabtodo.class) saveposition(prpproperties tabprops.class) saveposition(prpdocumentation tabdocumentation.class) saveposition(prpstyle tabstyle.class) saveposition(prpsource tabsrc.class) saveposition(prpconstraints tabconstraints.class) saveposition(prptaggedvalues tabtaggedvalues.class)
WITHOUT_CLASSIFICATION	defer work until fetched/visible
WITHOUT_CLASSIFICATION	actor
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#gettabkey()
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	do nothing - these buttons are not shown.
WITHOUT_CLASSIFICATION	loadposition(prptodo tabtodo.class) loadposition(prpproperties tabprops.class) loadposition(prpdocumentation tabdocumentation.class) loadposition(prpstyle tabstyle.class) loadposition(prpsource tabsrc.class) loadposition(prpconstraints tabconstraints.class) loadposition(prptaggedvalues tabtaggedvalues.class)
WITHOUT_CLASSIFICATION	------------- rule management --------------
WITHOUT_CLASSIFICATION	----------- name -------------------------
WITHOUT_CLASSIFICATION	------ all rules ----------
WITHOUT_CLASSIFICATION	todo factor out @param rule the rule to be added
WITHOUT_CLASSIFICATION	put the current pane in a scroll pane.
WITHOUT_CLASSIFICATION	end class stylepanelfigtext
WITHOUT_CLASSIFICATION	note these must stay in this order to match rendering styles
WITHOUT_CLASSIFICATION	the boundary box as held in the target fig and as listed in the boundary box style field (null if we don't have anything valid)
WITHOUT_CLASSIFICATION	only reset the text if the two are not the same (i.e the fig has moved rather than we've just edited the text when settargetbbox() will have made them the same). note that stylebounds could be null so we do the test this way round.
WITHOUT_CLASSIFICATION	change the fill colour
WITHOUT_CLASSIFICATION	change the line colour
WITHOUT_CLASSIFICATION	can't do anything if we don't have a fig.
WITHOUT_CLASSIFICATION	parse the boundary box text. null is returned if it is empty or invalid which causes no change. otherwise we tell gef we are making a change make the change and tell gef we've finished.
WITHOUT_CLASSIFICATION	get the text in the field and don't do anything if the field is empty.
WITHOUT_CLASSIFICATION	parse the string as if possible
WITHOUT_CLASSIFICATION	empty implementation - we only care about keytyped
WITHOUT_CLASSIFICATION	empty implementation - we only care about keytyped
WITHOUT_CLASSIFICATION	ignored - will never be called
WITHOUT_CLASSIFICATION	add preloading progress bar?
WITHOUT_CLASSIFICATION	jasonsthemes
WITHOUT_CLASSIFICATION	todo - lets pass in project as a constructor argument
WITHOUT_CLASSIFICATION	make up a default
WITHOUT_CLASSIFICATION	lafclass == null ||
WITHOUT_CLASSIFICATION	set to the default laf
WITHOUT_CLASSIFICATION	top left bottom right
WITHOUT_CLASSIFICATION	if laf is metal (either set explicitly or as the default)
WITHOUT_CLASSIFICATION	set a custom laf
WITHOUT_CLASSIFICATION	@see javax.swing.jtree#firetreecollapsed(javax.swing.tree.treepath)
WITHOUT_CLASSIFICATION	@see javax.swing.jtree#setmodel(javax.swing.tree.treemodel)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getname()
WITHOUT_CLASSIFICATION	todo localize
WITHOUT_CLASSIFICATION	todo localize
WITHOUT_CLASSIFICATION	it looks better if the height increases too
WITHOUT_CLASSIFICATION	todo 10 and 120 were found by trial and error. calculate them.
WITHOUT_CLASSIFICATION	pack()
WITHOUT_CLASSIFICATION	not localized
WITHOUT_CLASSIFICATION	alphabetic order!
WITHOUT_CLASSIFICATION	alphabetic order!
WITHOUT_CLASSIFICATION	end class aboutbox
WITHOUT_CLASSIFICATION	save project at slightly lower priority to keep ui responsive
WITHOUT_CLASSIFICATION	saves the project
WITHOUT_CLASSIFICATION	mvw we should use default font sizes as much as possible. btw this impacts only the width and reduces readibility
WITHOUT_CLASSIFICATION	setfont(lookandfeelmgr.getinstance().getsmallfont())
WITHOUT_CLASSIFICATION	this enables tooltips for tree this one won't be shown
WITHOUT_CLASSIFICATION	the default (16) puts the icons too close together
WITHOUT_CLASSIFICATION	------------ methods that override jtree methods ---------
WITHOUT_CLASSIFICATION	if the name is too long or multi-line (e.g. for comments) then we reduce to the first line or 80 chars.
WITHOUT_CLASSIFICATION	look for stereotype
WITHOUT_CLASSIFICATION	use default formatting for any other type of uml element
WITHOUT_CLASSIFICATION	------------- other methods ------------------
WITHOUT_CLASSIFICATION	labels at the left
WITHOUT_CLASSIFICATION	and fields at the right.
WITHOUT_CLASSIFICATION	the user's full name
WITHOUT_CLASSIFICATION	the user's email
WITHOUT_CLASSIFICATION	the project description
WITHOUT_CLASSIFICATION	this non-editable field shows the version of the argouml that last saved this project
WITHOUT_CLASSIFICATION	we need to fill the whole pane so that the description field can take all available space
WITHOUT_CLASSIFICATION	there is no default description.
WITHOUT_CLASSIFICATION	defer all work until we're actually needed
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	these are blue in metal default theme
WITHOUT_CLASSIFICATION	these are gray in metal default theme
WITHOUT_CLASSIFICATION	actionlistener implementation
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getprimary1()
WITHOUT_CLASSIFICATION	private jcheckbox jchbbold = null
WITHOUT_CLASSIFICATION	find and add all subdirectories
WITHOUT_CLASSIFICATION	private jcheckbox jchbitalic = null
WITHOUT_CLASSIFICATION	initialize font faces list
WITHOUT_CLASSIFICATION	most of this code originates from actionopenproject.
WITHOUT_CLASSIFICATION	initialize font sizes list
WITHOUT_CLASSIFICATION	jcontentpane.add(getjchbbold() gridbagconstraints2) jcontentpane.add(getjchbitalic() gridbagconstraints3)
WITHOUT_CLASSIFICATION	try adding the extension from the chosen filter.
WITHOUT_CLASSIFICATION	mouselistener implementation
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see java.lang.runnable#run()
WITHOUT_CLASSIFICATION	these are blue in metal default theme
WITHOUT_CLASSIFICATION	these are gray in metal default theme
WITHOUT_CLASSIFICATION	keylistener implementation
WITHOUT_CLASSIFICATION	listselectionlistener implementation
WITHOUT_CLASSIFICATION	diagrams are not placed in search results
WITHOUT_CLASSIFICATION	only return once per diagram so we don't for example find a class as a diagram element and also as a child of a package which is on the diagram
WITHOUT_CLASSIFICATION	no related
WITHOUT_CLASSIFICATION	todo tabs for class state usecase help
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseclicked
WITHOUT_CLASSIFICATION	tabresults has really large preferred height so divide in half to reduce size of dialog which will be sized based on this preferred size.
WITHOUT_CLASSIFICATION	load project at slightly lower priority to keep ui responsive
WITHOUT_CLASSIFICATION	jtabbedpane tabs = new jtabbedpane() mainpanel.add(tabs borderlayout.center) tabs.addtab("all diagrams" alldiagrams)
WITHOUT_CLASSIFICATION	the south panel always has tabs - but they are added (later) elsewhere.
WITHOUT_CLASSIFICATION	loads the project
WITHOUT_CLASSIFICATION	default tab todo
WITHOUT_CLASSIFICATION	special case for backward compatibility
WITHOUT_CLASSIFICATION	default tab todo
WITHOUT_CLASSIFICATION	select prop panel if current panel is not appropriate for selected target
WITHOUT_CLASSIFICATION	not visible any more - so remove as listener
WITHOUT_CLASSIFICATION	newly selected tab may have stale target info so generate a new set target event for it to refresh it
WITHOUT_CLASSIFICATION	update the previously selected tab
WITHOUT_CLASSIFICATION	the other tabs need to be updated depending on the selection.
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseclicked
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseclicked
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseclicked
WITHOUT_CLASSIFICATION	todo quick return here for target == null? - tfm
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#insertupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#removeupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	---------------- listener management ----------------
WITHOUT_CLASSIFICATION	--------------- tree nodes -------------------------
WITHOUT_CLASSIFICATION	------------- tree structure -----------------
WITHOUT_CLASSIFICATION	see getvalue() setvalue()
WITHOUT_CLASSIFICATION	create a timer.
WITHOUT_CLASSIFICATION	mount the glasspane on the component window
WITHOUT_CLASSIFICATION	keep track of the glasspane as an instance variable
WITHOUT_CLASSIFICATION	start interception ui interactions
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#changedupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.itemlistener#itemstatechanged(java.awt.event.itemevent)
WITHOUT_CLASSIFICATION	if action comes in with no modifiers it is a pure keyboard event (e.g. spacebar) so do it. anything else is probably a mouse event so ignore it. mouse events are dealt with by mousepressed() instead (see bottom of page).
WITHOUT_CLASSIFICATION	end class stylepanel
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	make sure the correspondence that we depend on doesn't change
WITHOUT_CLASSIFICATION	getcontentpane().add(_menubar borderlayout.north)
WITHOUT_CLASSIFICATION	allows me to ask "do you want to save first?"
WITHOUT_CLASSIFICATION	add listener for project changes
WITHOUT_CLASSIFICATION	add listener to get notified when active diagram changes
WITHOUT_CLASSIFICATION	add a listener to focus changes. rationale reset the undo manager to start a new chain.
WITHOUT_CLASSIFICATION	we get many many events (why?) so let's filter
WITHOUT_CLASSIFICATION	create the todopane
WITHOUT_CLASSIFICATION	@see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see javax.swing.jframe#getjmenubar()
WITHOUT_CLASSIFICATION	@see java.awt.component#setvisible(boolean)
WITHOUT_CLASSIFICATION	there are various details panes all of which could hold different tabs pages according to users settings. place each pane in the required border area.
WITHOUT_CLASSIFICATION	toolbar boundary is the area between the menu and the status bar. it contains the workarea at centre and the toolbar position north south east or west.
WITHOUT_CLASSIFICATION	add target listeners for details panes
WITHOUT_CLASSIFICATION	convenience methods to return saved width and height values
WITHOUT_CLASSIFICATION	in theory there can be multiple details pane (work in progress). it must first be determined which details page contains the properties tab. bob tarling 7 dec 2002
WITHOUT_CLASSIFICATION	the trysave method results in the save taking place in another thread. if that completes without error the projectbrowser.exit() method will be called which will actually exist the system.
WITHOUT_CLASSIFICATION	end class windowcloser
WITHOUT_CLASSIFICATION	the project changed
WITHOUT_CLASSIFICATION	designer.thedesigner.gettodolist().removeallelements()
WITHOUT_CLASSIFICATION	update all panes
WITHOUT_CLASSIFICATION	/ targetlistener methods implemented so notified when selected diagram changes. used to update the window title.
WITHOUT_CLASSIFICATION	this method is invoked from several places so we have to check whether if the project uri is set or not
WITHOUT_CLASSIFICATION	does the file really exists?
WITHOUT_CLASSIFICATION	project file doesn't exist. let's pop up a message dialog..
WITHOUT_CLASSIFICATION	..and let's ask the user whether he wants to save the actual project into a new file or not
WITHOUT_CLASSIFICATION	save action has been cancelled
WITHOUT_CLASSIFICATION	attempt to save this project under a new name.
WITHOUT_CLASSIFICATION	prompt the user for the new name.
WITHOUT_CLASSIFICATION	let's call the real save method
WITHOUT_CLASSIFICATION	repair any errors in the project
WITHOUT_CLASSIFICATION	notification of menu bar
WITHOUT_CLASSIFICATION	simulate some errors to repair. replace with junits - bob
WITHOUT_CLASSIFICATION	change to true to enable testing
WITHOUT_CLASSIFICATION	a fig with a null owner
WITHOUT_CLASSIFICATION	a fig with a null layer
WITHOUT_CLASSIFICATION	a fig with a removed model element
WITHOUT_CLASSIFICATION	remove the old project first. it's wasteful to create a temp empty project but too much of argouml depends on having a current project
WITHOUT_CLASSIFICATION	let's save this project in the mru list
WITHOUT_CLASSIFICATION	do nothing - these buttons are not shown.
WITHOUT_CLASSIFICATION	ignored - we only care about open/closing
WITHOUT_CLASSIFICATION	let's save this project as the last used one in the configuration file
WITHOUT_CLASSIFICATION	an error that can be corrected by the user so no stack trace but instead an explanation and a hint how to fix
WITHOUT_CLASSIFICATION	an error that can be corrected by the user so no stack trace but instead an explanation and a hint how to fix
WITHOUT_CLASSIFICATION	this is temporary. load project should create a new project with its own undomanager and so there should be no command
WITHOUT_CLASSIFICATION	make sure save action is always reinstated
WITHOUT_CLASSIFICATION	we clear the save-required flag on the swing event thread in the hopes that it gets done after any other background work (listener updates) that is being done there
WITHOUT_CLASSIFICATION	adding project files icon
WITHOUT_CLASSIFICATION	end class projectbrowser
WITHOUT_CLASSIFICATION	defer initialization until we're visible
WITHOUT_CLASSIFICATION	make the result inmediately visible in case of apply
WITHOUT_CLASSIFICATION	disabled since it gives various problems e.g. the toolbar icons get too wide. also the default does not give the new java 5.0 looks. swingutilities.updatecomponenttreeui(swingutilities.getrootpane(this))
WITHOUT_CLASSIFICATION	filled in later
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#handlesettingstabsave()
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#handlesettingstabcancel()
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#gettabkey()
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#gettabpanel()
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getcolumncount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getcolumnname(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getrowcount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getvalueat(int int)
WITHOUT_CLASSIFICATION	do nothing - these buttons are not shown.
WITHOUT_CLASSIFICATION	ignored - we only care about open/closing
WITHOUT_CLASSIFICATION	create new menu item if it doesn't exist for this class.
WITHOUT_CLASSIFICATION	make this change persistant
WITHOUT_CLASSIFICATION	if menus don't containt menu item necessary for this class create it
WITHOUT_CLASSIFICATION	if visibility is already changed for this class respect it.
WITHOUT_CLASSIFICATION	if there is persistant state for this toolbar respect it or add it to persistance data
WITHOUT_CLASSIFICATION	queue to event thread to prevent race during close
WITHOUT_CLASSIFICATION	add toolbar.
WITHOUT_CLASSIFICATION	register popup menu with toolbar.
WITHOUT_CLASSIFICATION	these settings are needed to make the progressmonitor pop up early
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed( java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.windowlistener#windowactivated(java.awt.event.windowevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.windowlistener#windowdeiconified(java.awt.event.windowevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.windowlistener#windowiconified(java.awt.event.windowevent)
WITHOUT_CLASSIFICATION	add settings from the settings registry.
WITHOUT_CLASSIFICATION	increase width to accommodate all tabs on one row.
WITHOUT_CLASSIFICATION	windowopen state will be changed when window is activated
WITHOUT_CLASSIFICATION	called when the user has pressed save. performs "save" in all tabs.
WITHOUT_CLASSIFICATION	called when the user has pressed cancel. performs "cancel" in all tabs.
WITHOUT_CLASSIFICATION	we only request focus the first time we become visible
WITHOUT_CLASSIFICATION	ignored - we only care about open/closing
WITHOUT_CLASSIFICATION	ignored - we only care about open/closing
WITHOUT_CLASSIFICATION	handle the same as an explicit cancel
WITHOUT_CLASSIFICATION	file load/save gets done on a background thread so we'll probably have to queue this to the swing event thread
WITHOUT_CLASSIFICATION	todo concatenate? - tfm overwrite for now
WITHOUT_CLASSIFICATION	end class stylepanelfigrrect
WITHOUT_CLASSIFICATION	let the parent do its refresh.
WITHOUT_CLASSIFICATION	lets redraw the box
WITHOUT_CLASSIFICATION	@see java.awt.component#getpreferredsize()
WITHOUT_CLASSIFICATION	@see java.awt.component#getminimumsize()
WITHOUT_CLASSIFICATION	called when the user selects a tab by clicking or otherwise. @see javax.swing.event.changelistener#statechanged(javax.swing.event.changeevent)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseclicked
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseclicked
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseclicked
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseclicked
WITHOUT_CLASSIFICATION	we don't know what thread events will be delivered on so make sure we run swing methods on the swing thread
WITHOUT_CLASSIFICATION	this instead of the label ??? displaypane.setborder(new titledborder( translator.localize("display ")))
WITHOUT_CLASSIFICATION	add in front of the others add the label in front of the "pane"
WITHOUT_CLASSIFICATION	and finally adjust the scrollbars to show the fig
WITHOUT_CLASSIFICATION	% thresholds for bar color changes
WITHOUT_CLASSIFICATION	making it possible to jump to the modelroots
WITHOUT_CLASSIFICATION	org.argouml.ui.tabtable tabmetrics tabjavasrc | tabsrc tabumldisplay tabhash
WITHOUT_CLASSIFICATION	timer action method. periodically update our stats and force a repaint.
WITHOUT_CLASSIFICATION	virtual memory (heap) stats
WITHOUT_CLASSIFICATION	thin bar to show current allocated heap size
WITHOUT_CLASSIFICATION	thin bar to show current used
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#gettabpanel()
WITHOUT_CLASSIFICATION	do nothing - these buttons are not shown.
WITHOUT_CLASSIFICATION	the introducing label
WITHOUT_CLASSIFICATION	how to handle empty target lists? probably the multieditorpane should only show an empty pane in that case
WITHOUT_CLASSIFICATION	private jpanel constraintstab = new jpanel()
WITHOUT_CLASSIFICATION	the child is sometimes not found when the tree is being updated
WITHOUT_CLASSIFICATION	private jtabbedpane tabs = new jtabbedpane()
WITHOUT_CLASSIFICATION	tabs.setminimumsize(new dimension(300 250))
WITHOUT_CLASSIFICATION	private jpanel modifiedtab = new jpanel()
WITHOUT_CLASSIFICATION	the activitygraph.
WITHOUT_CLASSIFICATION	private jpanel tagvalstab = new jpanel()
WITHOUT_CLASSIFICATION	open space at gridy = 2
WITHOUT_CLASSIFICATION	mainpanel.add(north borderlayout.north)
WITHOUT_CLASSIFICATION	any type
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed( java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	todo localize
WITHOUT_CLASSIFICATION	mouselistener implementation
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseclicked
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseclicked
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseclicked
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseclicked
WITHOUT_CLASSIFICATION	this text is for the developers. it doesn't need to be localized.
WITHOUT_CLASSIFICATION	these shouldn't really be <br> instead of <p> elements but the lines all get run together when pasted into a browser window.
WITHOUT_CLASSIFICATION	jpanel north = new jpanel() north.setlayout(new borderlayout()) north.add(tabs borderlayout.center)
WITHOUT_CLASSIFICATION	initconstraintstab() tabs.addtab(translator.localize("tab.constraints") constraintstab) tabs.setenabledat(3 false)
WITHOUT_CLASSIFICATION	inittagvalstab() tabs.addtab(translator.localize("dialog.find.tab.tagged-values") tagvalstab) tabs.setenabledat(2 false)
WITHOUT_CLASSIFICATION	end class finddialog
WITHOUT_CLASSIFICATION	name += " in " + dname
WITHOUT_CLASSIFICATION	not in uml 2.x (or metatypes) type.additem(predicatemtype.create( model.getmetatypes().getactivitygraph()))
WITHOUT_CLASSIFICATION	set the name and icon
WITHOUT_CLASSIFICATION	help tab is 0
WITHOUT_CLASSIFICATION	end rungc_actionperformed()
WITHOUT_CLASSIFICATION	end class predicatemtype
WITHOUT_CLASSIFICATION	end updateinfo()
WITHOUT_CLASSIFICATION	end class navigatorpane
WITHOUT_CLASSIFICATION	end copy_actionperformed()
WITHOUT_CLASSIFICATION	end class actiongotodiagram
WITHOUT_CLASSIFICATION	end class systeminfodialog
WITHOUT_CLASSIFICATION	clean the history
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	main methods
WITHOUT_CLASSIFICATION	but exclude elements that enclose others since their algorithms to calculate the minimum size does not take enclosed objects into account
WITHOUT_CLASSIFICATION	super(translator.localize("action.size-to-fit-contents"))
WITHOUT_CLASSIFICATION	unsupported.
WITHOUT_CLASSIFICATION	only resize elements which the user would also be able to resize
WITHOUT_CLASSIFICATION	if a default action was voided then we have to save it
WITHOUT_CLASSIFICATION	set the name
WITHOUT_CLASSIFICATION	let's load the default shortcut for every action
WITHOUT_CLASSIFICATION	end class actionfind
WITHOUT_CLASSIFICATION	let's load the current shortcut from the configuration (as a string)
WITHOUT_CLASSIFICATION	generate menu
WITHOUT_CLASSIFICATION	it should never go here!
WITHOUT_CLASSIFICATION	view menu
WITHOUT_CLASSIFICATION	file menu
WITHOUT_CLASSIFICATION	align submenu
WITHOUT_CLASSIFICATION	edit menu
WITHOUT_CLASSIFICATION	create menu
WITHOUT_CLASSIFICATION	arrange menu
WITHOUT_CLASSIFICATION	help menu
WITHOUT_CLASSIFICATION	help menu
WITHOUT_CLASSIFICATION	this id is used as default_id !
WITHOUT_CLASSIFICATION	end class actionaboutargouml
WITHOUT_CLASSIFICATION	distribute submenu
WITHOUT_CLASSIFICATION	end class actionpagesetup
WITHOUT_CLASSIFICATION	trap focus traversal keys also
WITHOUT_CLASSIFICATION	let's add the key printing logic
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	the "close window" shortcut (alt+f4) actually can't be registered as a shortcut because it closes the configuration dialog!
WITHOUT_CLASSIFICATION	if a not-default current shortcut was added then we have to save it
WITHOUT_CLASSIFICATION	if the actual is not going to be saved then try to remove it (as it could have been cancelled)
WITHOUT_CLASSIFICATION	no modifiers - let's check if the key is valid
WITHOUT_CLASSIFICATION	middle of shortcut
WITHOUT_CLASSIFICATION	only show actions for associations not already on diagram
WITHOUT_CLASSIFICATION	add last recently used list _before_ exit menu
WITHOUT_CLASSIFICATION	keystroke f7 = keystroke.getkeystroke(keyevent.vk_f7 0)
WITHOUT_CLASSIFICATION	and exit menu entry starting with separator.
WITHOUT_CLASSIFICATION	this used to be deferred but it's only 30-40 msec of work.
WITHOUT_CLASSIFICATION	now let's set up the "selected action" container
WITHOUT_CLASSIFICATION	generate.add(actions.generateweb)
WITHOUT_CLASSIFICATION	add the help menu item.
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the name and icon
WITHOUT_CLASSIFICATION	clean the history
WITHOUT_CLASSIFICATION	comment out when we are ready to release undo/redo jmenuitem undoitem = edit.add( projectactions.getinstance().getundoaction()) setmnemonic(undoitem "undo") shortcutmgr.assignaccelerator(undoitem shortcutmgr.action_undo) jmenuitem redoitem = edit.add( projectactions.getinstance().getredoaction()) setmnemonic(redoitem "redo") shortcutmgr.assignaccelerator(redoitem shortcutmgr.action_redo) edit.addseparator()
WITHOUT_CLASSIFICATION	jmenuitem cutitem = edit.add(actioncut.getinstance()) setmnemonic(cutitem "cut") setaccelerator(cutitem ctrlx) jmenuitem copyitem = edit.add(actioncopy.getinstance()) setmnemonic(copyitem "copy") setaccelerator(copyitem ctrlc) jmenuitem pasteitem = edit.add(actionpaste.getinstance()) setmnemonic(pasteitem "paste") setaccelerator(pasteitem ctrlv) edit.addseparator()
WITHOUT_CLASSIFICATION	create the edit toolbar based on the menu. all menuitems that have an icon are presumed to be based upon an action and these actions are used in the toolbar.
WITHOUT_CLASSIFICATION	sethelpmenu(help)
WITHOUT_CLASSIFICATION	component or action
WITHOUT_CLASSIFICATION	set maximum length of menu entry
WITHOUT_CLASSIFICATION	jmenuitem item = _filemenu.add(new actionreopenproject(filename))
WITHOUT_CLASSIFICATION	the text is used by the event handler for opening the project
WITHOUT_CLASSIFICATION	create all nessessary configuration keys for lru
WITHOUT_CLASSIFICATION	holds file menu
WITHOUT_CLASSIFICATION	text is short tooltip is long
WITHOUT_CLASSIFICATION	read existing file names from configuration
WITHOUT_CLASSIFICATION	empty entry stops reading --> last line!
WITHOUT_CLASSIFICATION	this is the recent count
WITHOUT_CLASSIFICATION	delete all existing entries
WITHOUT_CLASSIFICATION	add new entry as first entry
WITHOUT_CLASSIFICATION	add other existing entries but filter the just added one
WITHOUT_CLASSIFICATION	save count
WITHOUT_CLASSIFICATION	and store configuration props
WITHOUT_CLASSIFICATION	end class actionexit
WITHOUT_CLASSIFICATION	box.setlocationrelativeto(jframe)
WITHOUT_CLASSIFICATION	end class actionhelp
WITHOUT_CLASSIFICATION	instantiation not allowed
WITHOUT_CLASSIFICATION	end class actionprint
WITHOUT_CLASSIFICATION	let's add the table inside a jscrollpane
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getcolumncount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getcolumnname(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getrowcount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getvalueat(int int)
WITHOUT_CLASSIFICATION	do nothing! the next time we refresh we will fetch the values again.
WITHOUT_CLASSIFICATION	do nothing - these buttons are not shown.
WITHOUT_CLASSIFICATION	main methods
WITHOUT_CLASSIFICATION	init from config read number write result as new default and prepare keys
WITHOUT_CLASSIFICATION	get already existing names from menu actions real file names not action names !
WITHOUT_CLASSIFICATION	let's enable the radiobuttons container
WITHOUT_CLASSIFICATION	updating the radiobuttons container's title
WITHOUT_CLASSIFICATION	let's select the correct radio button
WITHOUT_CLASSIFICATION	no shortcuts --> none
WITHOUT_CLASSIFICATION	current shortcut == default --> default
WITHOUT_CLASSIFICATION	customized shortcut --> custom
WITHOUT_CLASSIFICATION	let's reload the shortcuts
WITHOUT_CLASSIFICATION	conflict detected showing a warning to the user instead of saving shortcuts
WITHOUT_CLASSIFICATION	saving shortcuts
WITHOUT_CLASSIFICATION	if a shortcut has been select then we have to check if the actual action is in conflict with other ones
WITHOUT_CLASSIFICATION	this shortcut was already been assigned to another action let's pop-up a message for the user
WITHOUT_CLASSIFICATION	blanking the old action's shortcut.. and now refreshing the table.
WITHOUT_CLASSIFICATION	re-selecting the old row without changing the target - and without throwing another listselectionevent!
WITHOUT_CLASSIFICATION	let's change the target
WITHOUT_CLASSIFICATION	duplicate shortcut not found let's check for duplicates
WITHOUT_CLASSIFICATION	there's a duplicate let's recheck if there is a conflict
WITHOUT_CLASSIFICATION	updating the shortcut field
WITHOUT_CLASSIFICATION	updating the table data
WITHOUT_CLASSIFICATION	updating the actions
WITHOUT_CLASSIFICATION	the shortcut has already been assigned to another action!
WITHOUT_CLASSIFICATION	if the given object is a keystroke instance then we ca
WITHOUT_CLASSIFICATION	let's update also the actions array
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	show a chooser dialog for the file name only xmi is allowed
WITHOUT_CLASSIFICATION	the default nr of rows is 8 but since we have 9 perspectives by default now setting to 9 is nicer.
WITHOUT_CLASSIFICATION	check if multiple items are selected.
WITHOUT_CLASSIFICATION	profile section dealing with profiles in different states
WITHOUT_CLASSIFICATION	1. a noneditable applied profile
WITHOUT_CLASSIFICATION	just no item added in this case
WITHOUT_CLASSIFICATION	3. the editable unapplied profile
WITHOUT_CLASSIFICATION	end of profile section
WITHOUT_CLASSIFICATION	can't delete last top level model
WITHOUT_CLASSIFICATION	determine if only diagrams are in the target list.
WITHOUT_CLASSIFICATION	"x nodes and x edges"
WITHOUT_CLASSIFICATION	check to see if all targets are classifiers before adding an option to create an association between them all
WITHOUT_CLASSIFICATION	test if this element can be contained by the target
WITHOUT_CLASSIFICATION	iterate through all possible model elements to determine which are valid to be contained by the selected target
WITHOUT_CLASSIFICATION	end class actionaddexistingrelatednode
WITHOUT_CLASSIFICATION	this element can be contained add a menu item that allows the user to take that action
WITHOUT_CLASSIFICATION	otherwise we select the item below the mousepointer.
WITHOUT_CLASSIFICATION	we preserve the current (multiple) selection if we are over part of it
WITHOUT_CLASSIFICATION	unimplemented - we only care about expanding
WITHOUT_CLASSIFICATION	end class explorermouselistener
WITHOUT_CLASSIFICATION	does nothing.
WITHOUT_CLASSIFICATION	need to update the selection state.
WITHOUT_CLASSIFICATION	perform recursive search of subtree rooted at 'node' selecting all nodes which have a userobject matching one of our targets.
WITHOUT_CLASSIFICATION	get the elements
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	target may appear multiple places in the tree so we don't stop here (but it's expensive to search the whole tree) - tfm - 20070904 targets.remove(t) break
WITHOUT_CLASSIFICATION	scan the visible rows for duplicates of this elem and select them
WITHOUT_CLASSIFICATION	check which targetmanager method to call
WITHOUT_CLASSIFICATION	we must call the correct method on targetmanager for each added or removed target
WITHOUT_CLASSIFICATION	we can't remove the targets in one go we have to do it one by one.
WITHOUT_CLASSIFICATION	settargets(e.getnewtargets())
WITHOUT_CLASSIFICATION	settargets(e.getnewtargets())
WITHOUT_CLASSIFICATION	at the top right bottom left bottom
WITHOUT_CLASSIFICATION	the dialog is modal
WITHOUT_CLASSIFICATION	sortjlistmodel(rulelibrarylist)
WITHOUT_CLASSIFICATION	disable the buttons for now since no selection has been made yet
WITHOUT_CLASSIFICATION	the text will be set later
WITHOUT_CLASSIFICATION	the text will be set later
WITHOUT_CLASSIFICATION	remove the ones already selected (if a perspective is selected)
WITHOUT_CLASSIFICATION	add them
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	update the label (which shows the number of rules)
WITHOUT_CLASSIFICATION	must add an editable list of new explorerperspective's to the list model so that the original ones are not changed in the case of a cancel action by the user.
WITHOUT_CLASSIFICATION	set the newly selected item in the library list
WITHOUT_CLASSIFICATION	update the label (which shows the number of rules)
WITHOUT_CLASSIFICATION	set the newly selected item in the library list
WITHOUT_CLASSIFICATION	remove the rule from the library list
WITHOUT_CLASSIFICATION	the name of the umldiagram represented by this node has changed.
WITHOUT_CLASSIFICATION	uml model events
WITHOUT_CLASSIFICATION	notation events
WITHOUT_CLASSIFICATION	handle remove for non-uml elements (e.g. diagrams)
WITHOUT_CLASSIFICATION	get the selected targets (uml modelelements) from the targetmanager.
WITHOUT_CLASSIFICATION	project events
WITHOUT_CLASSIFICATION	show a chooser dialog for the file name only xmi is allowed
WITHOUT_CLASSIFICATION	get one of the default profile dirs if available (as a default value for the following save dialog)
WITHOUT_CLASSIFICATION	save profile
WITHOUT_CLASSIFICATION	register it as a user profile
WITHOUT_CLASSIFICATION	this is safe because getname always returns a string of some type
WITHOUT_CLASSIFICATION	load user perspectives
WITHOUT_CLASSIFICATION	get the perspective name
WITHOUT_CLASSIFICATION	make sure there are some rules
WITHOUT_CLASSIFICATION	get the rules
WITHOUT_CLASSIFICATION	get the rule name
WITHOUT_CLASSIFICATION	create the rule
WITHOUT_CLASSIFICATION	rule name but no rules
WITHOUT_CLASSIFICATION	add the perspective
WITHOUT_CLASSIFICATION	no user defined perspectives
WITHOUT_CLASSIFICATION	one last check that some loaded.
WITHOUT_CLASSIFICATION	works for both statediagram as activitygraph
WITHOUT_CLASSIFICATION	enter here go rules only relevant for uml 2 empty for now
WITHOUT_CLASSIFICATION	the drag gesture recognizer fires events in response to drag gestures in a component.
WITHOUT_CLASSIFICATION	specifies valid actions
WITHOUT_CLASSIFICATION	eliminates right mouse clicks as valid actions
WITHOUT_CLASSIFICATION	first argument component to associate the target with second argument droptargetlistener
WITHOUT_CLASSIFICATION	get the cell renderer (which is a jlabel) for the path being dragged.
WITHOUT_CLASSIFICATION	the layout manager would normally do this
WITHOUT_CLASSIFICATION	get a buffered image of the selection for dragging a ghost image
WITHOUT_CLASSIFICATION	ask the cell renderer to paint itself into the bufferedimage. make the image ghostlike.
WITHOUT_CLASSIFICATION	now paint a gradient under the ghosted jlabel text (but not under the icon if any).
WITHOUT_CLASSIFICATION	make the gradient ghostlike
WITHOUT_CLASSIFICATION	remember the path being dragged (because if it is being moved we will have to delete it later).
WITHOUT_CLASSIFICATION	we pass our drag image just in case it is supported by the platform.
WITHOUT_CLASSIFICATION	if the destination is not a namespace then abort
WITHOUT_CLASSIFICATION	if the destination is a datatype then abort
WITHOUT_CLASSIFICATION	we are sure "dest" is a namespace now.
WITHOUT_CLASSIFICATION	mvw these are the wfrs for datatype [1] a datatype can only contain operations which all must be queries. self.allfeatures->forall(f | f.ocliskindof(operation) and f.oclastype(operation).isquery) [2] a datatype cannot contain any other modelelements. self.allcontents->isempty imho we should enforce these wfrs here. so it is still possible to copy or move query operations hence we should allow this.
WITHOUT_CLASSIFICATION	let's check all dragged elements - if one of these may be dropped then the drag is valid. the others will be ignored when dropping.
WITHOUT_CLASSIFICATION	empty implementation - not used.
WITHOUT_CLASSIFICATION	empty implementation - not used.
WITHOUT_CLASSIFICATION	empty implementation - not used.
WITHOUT_CLASSIFICATION	figure out which row we're on.
WITHOUT_CLASSIFICATION	if we are not on a row then ignore this autoscroll request
WITHOUT_CLASSIFICATION	we are sure "dest" is a namespace now.
WITHOUT_CLASSIFICATION	autoscroll interface the following code was borrowed from the book java swing by robert eckstein marc loy & dave wood paperback - 1221 pages 1 ed edition (september 1998) o'reilly & associates isbn 156592455x the relevant chapter of which can be found at httpwww.oreilly.com/catalog/jswing/chapter/dnd.beta.pdf
WITHOUT_CLASSIFICATION	now decide if the row is at the top of the screen or at the bottom. we do this to make the previous row (or the next row) visible as appropriate. if were at the absolute top or bottom just return the first or last row respectively.
WITHOUT_CLASSIFICATION	set up a hover timer so that a node will be automatically expanded or collapsed if the user lingers on it for more than a short time.
WITHOUT_CLASSIFICATION	isrootpath
WITHOUT_CLASSIFICATION	set timer to one-shot mode
WITHOUT_CLASSIFICATION	log.log(level.fine "dragover")
WITHOUT_CLASSIFICATION	the next condition becomes false when dragging in something from another application.
WITHOUT_CLASSIFICATION	if a drag image is not supported by the platform then draw my own drag image.
WITHOUT_CLASSIFICATION	rub out the last ghost image and cue line
WITHOUT_CLASSIFICATION	and remember where we are about to draw the new ghost image
WITHOUT_CLASSIFICATION	just rub out the last cue line
WITHOUT_CLASSIFICATION	in any case draw (over the ghost image if necessary) a cue line indicating where a drop will occur.
WITHOUT_CLASSIFICATION	and include the cue line in the area to be rubbed out next time
WITHOUT_CLASSIFICATION	testcase drag something from another application into argouml and the explorer shows the drop icon instead of the nodrop.
WITHOUT_CLASSIFICATION	to prohibit dropping onto the drag source
WITHOUT_CLASSIFICATION	if the destination is not a namespace then reject
WITHOUT_CLASSIFICATION	if the destination is a datatype then reject
WITHOUT_CLASSIFICATION	prevent hover timer from doing an unwanted expandpath or collapsepath
WITHOUT_CLASSIFICATION	clear the ghost image
WITHOUT_CLASSIFICATION	get new parent node
WITHOUT_CLASSIFICATION	get the model elements that are being transfered.
WITHOUT_CLASSIFICATION	the user-dropactions are ctrl + shift -> action_link ctrl -> action_copy shift -> action_move (none) -> action_move
WITHOUT_CLASSIFICATION	only accept copy or move gestures (ie link is not supported)
WITHOUT_CLASSIFICATION	only accept copy or move gestures (ie link is not supported)
WITHOUT_CLASSIFICATION	do this if you want to prohibit dropping onto the drag source
WITHOUT_CLASSIFICATION	do this if you want to prohibit dropping onto the drag source
WITHOUT_CLASSIFICATION	end class
WITHOUT_CLASSIFICATION	remove references for gc
WITHOUT_CLASSIFICATION	this should only be helpful for old garbage collectors.
WITHOUT_CLASSIFICATION	avoid doing this too early in the initialization process
WITHOUT_CLASSIFICATION	avoid recursively updating the same child
WITHOUT_CLASSIFICATION	@see javax.swing.tree.defaulttreemodel#insertnodeinto(javax.swing.tree.mutabletreenode javax.swing.tree.mutabletreenode int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.defaulttreemodel#removenodefromparent(javax.swing.tree.mutabletreenode)
WITHOUT_CLASSIFICATION	this is somewhat inconsistent with the design of the constructor that receives the root object by argument. if this is okay then there may be no need for a constructor with that argument.
WITHOUT_CLASSIFICATION	enumerate the current children of node to find out which now sorts in different order since these must be moved
WITHOUT_CLASSIFICATION	avoid our deinitialization here the node will be added back to the tree again
WITHOUT_CLASSIFICATION	for each reordered node find it's new position among the current children and move it there
WITHOUT_CLASSIFICATION	avoid our initialization here
WITHOUT_CLASSIFICATION	collect the current set of objects that should be children to this node
WITHOUT_CLASSIFICATION	handle weakexplorernodes
WITHOUT_CLASSIFICATION	remove the node from removeset
WITHOUT_CLASSIFICATION	remove obj3 from weaknodes and newchildren
WITHOUT_CLASSIFICATION	remember that children are not treenodes but userobjects
WITHOUT_CLASSIFICATION	add any remaining nodes
WITHOUT_CLASSIFICATION	it is the combo for "order"
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	order the new children the dependencies cannot and need not be ordered
WITHOUT_CLASSIFICATION	todo what?
WITHOUT_CLASSIFICATION	todo what?
WITHOUT_CLASSIFICATION	sequence diagrams are not shown as children of the collaboration that they show but as children of the classifier/operation the collaboration represents. statediagrams and activitydiagrams are shown as children of the statemachine or activitygraph they belong to.
WITHOUT_CLASSIFICATION	was ""
WITHOUT_CLASSIFICATION	todo what?
WITHOUT_CLASSIFICATION	abstractions are represented in the inheritance node.
WITHOUT_CLASSIFICATION	abstractions are represented in the inheritance node.
WITHOUT_CLASSIFICATION	abstractions are represented in the inheritance node.
WITHOUT_CLASSIFICATION	abstractions are represented in the inheritance node.
WITHOUT_CLASSIFICATION	the name of this instance of diagram
WITHOUT_CLASSIFICATION	todo what?
WITHOUT_CLASSIFICATION	todo what?
WITHOUT_CLASSIFICATION	todo what?
WITHOUT_CLASSIFICATION	todo what?
WITHOUT_CLASSIFICATION	todo what?
WITHOUT_CLASSIFICATION	todo what?
WITHOUT_CLASSIFICATION	also show unattached sequence diagrams
WITHOUT_CLASSIFICATION	todo what?
WITHOUT_CLASSIFICATION	in uml2 we don't want to see element imports in profiles
WITHOUT_CLASSIFICATION	(massociationend)
WITHOUT_CLASSIFICATION	(massociationend)
WITHOUT_CLASSIFICATION	(massociationend)
WITHOUT_CLASSIFICATION	rule for project->root (top level) elements. todo as currently implemented it returns all top level elements in the model repository not just those in a given project. since we only support a single project at a time currently these are equivalent but this will need to be enhanced with additional bookkeeping in project when we support multiple open projects - tfm. todo i changed it to get the roots from the project. it was showing the profiles that were loaded but were not applied to the current project - maurelio1234. @author tom morris <tfmorris@gmail.com>
WITHOUT_CLASSIFICATION	in uml2 some elements are not to be shown
WITHOUT_CLASSIFICATION	don't show a profile application
WITHOUT_CLASSIFICATION	don't show element imports in profiles
WITHOUT_CLASSIFICATION	don't show extensions in profiles
WITHOUT_CLASSIFICATION	&& model.getfacade().isaproperty(o)
WITHOUT_CLASSIFICATION	don't show base_ properties in stereotypes
WITHOUT_CLASSIFICATION	"n/a" or "x nodes and x edges"
WITHOUT_CLASSIFICATION	todo what?
WITHOUT_CLASSIFICATION	todo what?
WITHOUT_CLASSIFICATION	todo what?
WITHOUT_CLASSIFICATION	transition
WITHOUT_CLASSIFICATION	todo what?
WITHOUT_CLASSIFICATION	todo what?
WITHOUT_CLASSIFICATION	todo what?
WITHOUT_CLASSIFICATION	first get the collection of elementresidence
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	todo what?
WITHOUT_CLASSIFICATION	todo what?
WITHOUT_CLASSIFICATION	only targets we didn't have allready count
WITHOUT_CLASSIFICATION	if nothing selected go to last selected target
WITHOUT_CLASSIFICATION	needed for argo startup -(
WITHOUT_CLASSIFICATION	remove duplicates and take care of getowner() and remove nulls
WITHOUT_CLASSIFICATION	|| !targets.contains(target)
WITHOUT_CLASSIFICATION	targets.remove(target)
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	implement set-like behaviour. the same element may not be added more then once.
WITHOUT_CLASSIFICATION	we put the targets 'backwards' in the history since the first target in the addedtargets array is the first one selected.
WITHOUT_CLASSIFICATION	cannot break here since an object can be multiple times in history
WITHOUT_CLASSIFICATION	commentedge - the owner of a figedgenote
WITHOUT_CLASSIFICATION	check if there are new elements in the list if the old and new list are of the same size set the oldtargets to the correct selection
WITHOUT_CLASSIFICATION	if not found try the parent namespace
WITHOUT_CLASSIFICATION	listen for the removal of diagrams from project
WITHOUT_CLASSIFICATION	give priority to standard documentation tag
WITHOUT_CLASSIFICATION	figs on a diagram without an owning model element
WITHOUT_CLASSIFICATION	end class documentationmanager
WITHOUT_CLASSIFICATION	todo needs localization
WITHOUT_CLASSIFICATION	end class childgenrelated
WITHOUT_CLASSIFICATION	convert the string (e.g. "aaabbbccc") into separate stereotype-names (e.g. "aaa" "bbb" "ccc").
WITHOUT_CLASSIFICATION	adds all stereotypes defined at the top level namespaces
WITHOUT_CLASSIFICATION	and now remove them
WITHOUT_CLASSIFICATION	collect the to be removed stereotypes
WITHOUT_CLASSIFICATION	the name of this type of diagram
WITHOUT_CLASSIFICATION	add stereotypes
WITHOUT_CLASSIFICATION	loop through each element in the namespace recursing.
WITHOUT_CLASSIFICATION	end class uuidmanager
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#setvalueat(java.lang.object int int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.util.childgenerator#gen(java.lang.object)
WITHOUT_CLASSIFICATION	instance
WITHOUT_CLASSIFICATION	comments
WITHOUT_CLASSIFICATION	for all other model elements return any elements associated in any way
WITHOUT_CLASSIFICATION	adds all stereotypes defined at the profiles applied to the current namespace
WITHOUT_CLASSIFICATION	adds all stereotypes defined at the profiles applied to the current project
WITHOUT_CLASSIFICATION	tablemodel implementation
WITHOUT_CLASSIFICATION	the name of this type of modelelement
WITHOUT_CLASSIFICATION	the name of this instance of modelelement
WITHOUT_CLASSIFICATION	the name of the parent diagram instance
WITHOUT_CLASSIFICATION	the name of this type of object
WITHOUT_CLASSIFICATION	not safe to presume the destination is the comment
WITHOUT_CLASSIFICATION	this also sets the target as a convenient side effect
WITHOUT_CLASSIFICATION	this is the tooltip of a comment link
WITHOUT_CLASSIFICATION	class
WITHOUT_CLASSIFICATION	end class projectmembermodel
WITHOUT_CLASSIFICATION	??
WITHOUT_CLASSIFICATION	??
WITHOUT_CLASSIFICATION	??
WITHOUT_CLASSIFICATION	association
WITHOUT_CLASSIFICATION	attribute
WITHOUT_CLASSIFICATION	state
WITHOUT_CLASSIFICATION	operation
WITHOUT_CLASSIFICATION	interface
WITHOUT_CLASSIFICATION	link
WITHOUT_CLASSIFICATION	this function will by design contain long lists of i18n keys. it might be tempting to shorten these by constructing them from the parts but please then consider that we might loose the possibility to build tools to statically check the property files against this file.
WITHOUT_CLASSIFICATION	umlreserved.add("document")
WITHOUT_CLASSIFICATION	replace all occurances of offender with the name of the first offender
WITHOUT_CLASSIFICATION	check for all uppercase and/or mixed with underscores
WITHOUT_CLASSIFICATION	umlreserved.add("file")
WITHOUT_CLASSIFICATION	umlreserved.add("node")
WITHOUT_CLASSIFICATION	umlreserved.add("send")
WITHOUT_CLASSIFICATION	the modelelement must have been deleted - ignore this - it will pass.
WITHOUT_CLASSIFICATION	todo this could just work off the names in the uml profile todo it doesn't look like it matches what's in the uml 1.4 spec
WITHOUT_CLASSIFICATION	umlreserved.add("destroy")
WITHOUT_CLASSIFICATION	self.allconnections->forall(ar|ar.participant <> self)
WITHOUT_CLASSIFICATION	end class crcircularassocclass
WITHOUT_CLASSIFICATION	(mattribute)
WITHOUT_CLASSIFICATION	if the name is only underscores
WITHOUT_CLASSIFICATION	@see javax.swing.icon#painticon(java.awt.component java.awt.graphics int int)
WITHOUT_CLASSIFICATION	@see javax.swing.icon#geticonwidth()
WITHOUT_CLASSIFICATION	@see javax.swing.icon#geticonheight()
WITHOUT_CLASSIFICATION	@see javax.swing.icon#painticon(java.awt.component java.awt.graphics int int)
WITHOUT_CLASSIFICATION	@see javax.swing.icon#geticonwidth()
WITHOUT_CLASSIFICATION	@see javax.swing.icon#geticonheight()
WITHOUT_CLASSIFICATION	umlreserved.add("initial") umlreserved.add("final") umlreserved.add("fork") umlreserved.add("join") umlreserved.add("history")
WITHOUT_CLASSIFICATION	umlreserved.add("copy") umlreserved.add("create")
WITHOUT_CLASSIFICATION	types can probably have associations but we should not nag at them not having any. utility is a namespace collection - also not strictly required to have associations.
WITHOUT_CLASSIFICATION	end class clattributecompartment
WITHOUT_CLASSIFICATION	check whether constant constants are often weird and thus not a problem
WITHOUT_CLASSIFICATION	why are we here?
WITHOUT_CLASSIFICATION	if the classifier does not have a name then no problem - the model is not finished anyhow.
WITHOUT_CLASSIFICATION	added by eric lefevre 13 mar 1999 we must check if the figtext for attributes is drawn before drawing things over it
WITHOUT_CLASSIFICATION	abstract elements do not necessarily require associations
WITHOUT_CLASSIFICATION	todo different critic or special message for classes that inherit all ops but define none of their own.
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	added by eric lefevre 13 mar 1999 we must check if the figtext for operations is drawn before drawing things over it
WITHOUT_CLASSIFICATION	special cases for use cases extending use cases and use case that are being included are not required to have associations.
WITHOUT_CLASSIFICATION	for use cases we need to check for extend/includes actors cannot have them so no need to check
WITHOUT_CLASSIFICATION	get the ends from the association (we know there are two) and the types associated with them.
WITHOUT_CLASSIFICATION	the association that triggered the critic. its just possible the association is no longer there in which case we return null
WITHOUT_CLASSIFICATION	end class cloperationcompartment
WITHOUT_CLASSIFICATION	first step. create the panel if not already done and options are available. otherwise it retains its default value of null.
WITHOUT_CLASSIFICATION	now create the five options
WITHOUT_CLASSIFICATION	get the names of the two ends. if there are none (i.e they are currently anonymous) use the argouml convention of "(anon)" for the names
WITHOUT_CLASSIFICATION	default (any other step) is to return nothing
WITHOUT_CLASSIFICATION	just completed the first step where we make our choices. first see if we have a choice. we always should so print a rude message if we don't
WITHOUT_CLASSIFICATION	set the appropriate aggregation on each end
WITHOUT_CLASSIFICATION	it is quite possible that the cause of the problem has by now been deleted in which case we will throw an exception if we try to change things. catch this tidily.
WITHOUT_CLASSIFICATION	start is a composite aggregation of end
WITHOUT_CLASSIFICATION	start is a shared aggregation of end
WITHOUT_CLASSIFICATION	end is a composite aggregation of start
WITHOUT_CLASSIFICATION	end is a shared aggregation of start
WITHOUT_CLASSIFICATION	no aggregation
WITHOUT_CLASSIFICATION	someone took our association away.
WITHOUT_CLASSIFICATION	can't finish if our parent can't
WITHOUT_CLASSIFICATION	can finish if it's step 0
WITHOUT_CLASSIFICATION	can finish if we're on step1 and have actually made a choice
WITHOUT_CLASSIFICATION	otherwise we can't finish
WITHOUT_CLASSIFICATION	todo the wfr doesn't restrict this to classifiers - tfm
WITHOUT_CLASSIFICATION	todo the wfr doesn't restrict this to classifiers - tfm
WITHOUT_CLASSIFICATION	model.getfacade().getmodelelement(
WITHOUT_CLASSIFICATION	)
WITHOUT_CLASSIFICATION	replace all occurances of offender with the name of the first offender
WITHOUT_CLASSIFICATION	check if there is no ocl_end if so the critic expression is not correct and can not be expanded
WITHOUT_CLASSIFICATION	get the association and its connections. iterate over all the associationends and check that each connected classifier is in the same sub-system or model
WITHOUT_CLASSIFICATION	display related methods
WITHOUT_CLASSIFICATION	end class crinterfaceallpublic
WITHOUT_CLASSIFICATION	return original string if no replacements made
WITHOUT_CLASSIFICATION	if we drop out there is no problem
WITHOUT_CLASSIFICATION	only look at associations
WITHOUT_CLASSIFICATION	end class crcrossnamespaceassoc
WITHOUT_CLASSIFICATION	todo different critic for packages consisting only of references to elements of other packages?
WITHOUT_CLASSIFICATION	the next associationend and its classifier. check the classifier is in the namespace of the association. if not we have a problem.
WITHOUT_CLASSIFICATION	original class was not abstract
WITHOUT_CLASSIFICATION	thestereotype.setstereotype(???)
WITHOUT_CLASSIFICATION	found a concrete subclass
WITHOUT_CLASSIFICATION	nothing to do.
WITHOUT_CLASSIFICATION	no concrete subclasses defined this class is "useless"
WITHOUT_CLASSIFICATION	see if there is already an element with the same name
WITHOUT_CLASSIFICATION	end class crclassmustbeabstract
WITHOUT_CLASSIFICATION	end class cruselessabstract
WITHOUT_CLASSIFICATION	(mclassifier)
WITHOUT_CLASSIFICATION	only look at classes
WITHOUT_CLASSIFICATION	todo different critic or special message for classes that inherit all ops but define none of their own.
WITHOUT_CLASSIFICATION	utility is a namespace collection - also not strictly required to have operations.
WITHOUT_CLASSIFICATION	end class crtoomanyassoc
WITHOUT_CLASSIFICATION	end class cruselessinterface
WITHOUT_CLASSIFICATION	end class crcomponentinstancewithoutclassifier
WITHOUT_CLASSIFICATION	end class crtoomanyclasses
WITHOUT_CLASSIFICATION	we don't consider secondary stuff.
WITHOUT_CLASSIFICATION	if the object does not have a name than no problem
WITHOUT_CLASSIFICATION	types can probably contain operations but we should not nag at them not having any.
WITHOUT_CLASSIFICATION	types don't need a constructor.
WITHOUT_CLASSIFICATION	utilities usually do not require a constructor either
WITHOUT_CLASSIFICATION	check for uninitialised instance variables and constructor.
WITHOUT_CLASSIFICATION	get all the features (giving up if there are none). then loop through finding all operations. each time we find one we compare its signature with all previous (held in collection operseen) and then if it doesn't match add it to the collection.
WITHOUT_CLASSIFICATION	there is a constructor.
WITHOUT_CLASSIFICATION	end class crtoomanystates
WITHOUT_CLASSIFICATION	we have found a non-static one that is not initialized.
WITHOUT_CLASSIFICATION	compare against all earlier operations. if there's a match we've found the problem
WITHOUT_CLASSIFICATION	check that the parameter lists match.
WITHOUT_CLASSIFICATION	add to the collection and round to look at the next one
WITHOUT_CLASSIFICATION	yeah rightwe don't have an operation (and thus no
WITHOUT_CLASSIFICATION	this pair of params where the same. lets check the next pair.
WITHOUT_CLASSIFICATION	only do this for classifiers
WITHOUT_CLASSIFICATION	get the next non-return parameter. null if non left.
WITHOUT_CLASSIFICATION	if we drop out here there was no match and we have no problem
WITHOUT_CLASSIFICATION	check that the names match.
WITHOUT_CLASSIFICATION	both lists have the same length
WITHOUT_CLASSIFICATION	both lists have the same length.
WITHOUT_CLASSIFICATION	different lengths
WITHOUT_CLASSIFICATION	end class crmulticomposite
WITHOUT_CLASSIFICATION	compare the type of the parameters. if any of the types is null then we have a match.
WITHOUT_CLASSIFICATION	normal model elements are not allowed to have spaces but for states we make an exception
WITHOUT_CLASSIFICATION	initialize test data
WITHOUT_CLASSIFICATION	end class crillegalname
WITHOUT_CLASSIFICATION	dm is a transition
WITHOUT_CLASSIFICATION	initialize new todoitem
WITHOUT_CLASSIFICATION	the source of the transition is a pseudostate
WITHOUT_CLASSIFICATION	the source of the transition is a choice
WITHOUT_CLASSIFICATION	end class crtoomanyattr
WITHOUT_CLASSIFICATION	critiquing api
WITHOUT_CLASSIFICATION	end class crzerolengthedge
WITHOUT_CLASSIFICATION	(mstatevertex)
WITHOUT_CLASSIFICATION	(massociationend)
WITHOUT_CLASSIFICATION	only classes with name need a constructor
WITHOUT_CLASSIFICATION	forks have their own outgoing transitions critic
WITHOUT_CLASSIFICATION	types can probably have variables but we should not nag at them not having any.
WITHOUT_CLASSIFICATION	code generation
WITHOUT_CLASSIFICATION	utility is a namespace collection - also not strictly required to have variables.
WITHOUT_CLASSIFICATION	if we find an instance variable that is not a constant we have succeeded
WITHOUT_CLASSIFICATION	i am only prepared to go this far.
WITHOUT_CLASSIFICATION	(classifier)
WITHOUT_CLASSIFICATION	first element is e.g. the class but we need to have its namespace to recompute the offenders.
WITHOUT_CLASSIFICATION	compound critics
WITHOUT_CLASSIFICATION	warn about inherited name conflicts different critic?
WITHOUT_CLASSIFICATION	warn about inherited name conflicts different critic?
WITHOUT_CLASSIFICATION	(massociation)
WITHOUT_CLASSIFICATION	only look at associations
WITHOUT_CLASSIFICATION	container state / composite state
WITHOUT_CLASSIFICATION	iterate over all the associationends. we only have a problem if 1) there is an end connected to an interface and 2) an end other than that end is navigable.
WITHOUT_CLASSIFICATION	both ends must be classes otherwise there is nothing to merge
WITHOUT_CLASSIFICATION	we can give up looking if we've hit both criteria
WITHOUT_CLASSIFICATION	both ends must be navigable otherwise there is nothing to merge
WITHOUT_CLASSIFICATION	end at an interface? navigable other end?
WITHOUT_CLASSIFICATION	end class crmergeclasses
WITHOUT_CLASSIFICATION	specify design issue category and knowledge type
WITHOUT_CLASSIFICATION	if we drop out we didn't meet both criteria and all is well.
WITHOUT_CLASSIFICATION	the next associationend
WITHOUT_CLASSIFICATION	if its an interface we have an interface end otherwise its something else and we should see if it is navigable. we don't check that the end is a classifier rather than its child classifierrole since we have effectively eliminated that possiblity in rejecting associationroles above.
WITHOUT_CLASSIFICATION	end class crnavfrominterface
WITHOUT_CLASSIFICATION	(mcompositestate)
WITHOUT_CLASSIFICATION	end class crnoinitialstate
WITHOUT_CLASSIFICATION	critiquing api
WITHOUT_CLASSIFICATION	end class crinstancewithoutclassifier
WITHOUT_CLASSIFICATION	now we are sure dm is a composite state.
WITHOUT_CLASSIFICATION	in deploymentdiagrams the situation is not the same as in other diagrams only classes interfaces and objects can intersect each other while they are not the enclosingfig so you have to prouve only these elements.
WITHOUT_CLASSIFICATION	now we are sure dm is a statevertex.
WITHOUT_CLASSIFICATION	now we are sure dm is a state.
WITHOUT_CLASSIFICATION	if dm is the top state of the statemachine then it is not supposed to have incoming transitions.
WITHOUT_CLASSIFICATION	(massociationend)
WITHOUT_CLASSIFICATION	(massociation)
WITHOUT_CLASSIFICATION	container state / composite state
WITHOUT_CLASSIFICATION	end class crinvalidsynch
WITHOUT_CLASSIFICATION	no good trigger
WITHOUT_CLASSIFICATION	end class crconflictingcomposites
WITHOUT_CLASSIFICATION	end class cralreadyrealizes
WITHOUT_CLASSIFICATION	end class crunnavigableassoc
WITHOUT_CLASSIFICATION	todo gennavigableclasses?
WITHOUT_CLASSIFICATION	end class crdisambigstatename
WITHOUT_CLASSIFICATION	(massociationend)
WITHOUT_CLASSIFICATION	(massociation)
WITHOUT_CLASSIFICATION	end class wizmename
WITHOUT_CLASSIFICATION	only for associations
WITHOUT_CLASSIFICATION	get the assocations and connections. no problem (there is a separate critic) if this is not a binary association or is an association role.
WITHOUT_CLASSIFICATION	loop through the associations counting the ends with aggregations
WITHOUT_CLASSIFICATION	a problem if we found more than 1 aggregation
WITHOUT_CLASSIFICATION	end class crmultipleagg
WITHOUT_CLASSIFICATION	end class crnameconflictac
WITHOUT_CLASSIFICATION	end class wiznavigable
WITHOUT_CLASSIFICATION	end class crfinalsubclassed
WITHOUT_CLASSIFICATION	no good trigger
WITHOUT_CLASSIFICATION	todo associationrole
WITHOUT_CLASSIFICATION	log.log(level.fine "finding children for " + o.getclass())
WITHOUT_CLASSIFICATION	argument can be an instanceof a fig which we ignore
WITHOUT_CLASSIFICATION	no need for trigger on "specialization"
WITHOUT_CLASSIFICATION	end class crcircularinheritance
WITHOUT_CLASSIFICATION	end class crnonaggdatatype
WITHOUT_CLASSIFICATION	test an unknown file
WITHOUT_CLASSIFICATION	container state / composite state
WITHOUT_CLASSIFICATION	no good trigger
WITHOUT_CLASSIFICATION	(mtransition)
WITHOUT_CLASSIFICATION	wfr transitions omg uml 1.3
WITHOUT_CLASSIFICATION	only work for associations
WITHOUT_CLASSIFICATION	wfr transitions omg uml 1.3
WITHOUT_CLASSIFICATION	no problem if this is an association role.
WITHOUT_CLASSIFICATION	loop through all the ends comparing the name against those already seen (ignoring any with no name). no problem if there are no connections defined we will fall through immediately.
WITHOUT_CLASSIFICATION	end class crinterfaceoperonly
WITHOUT_CLASSIFICATION	ignore non-existent and empty names
WITHOUT_CLASSIFICATION	is the name already in the list of those seen if not add it and go on round.
WITHOUT_CLASSIFICATION	only work for associatins
WITHOUT_CLASSIFICATION	if we drop out there were no clashes
WITHOUT_CLASSIFICATION	@see javax.swing.icon#painticon(java.awt.component java.awt.graphics int int)
WITHOUT_CLASSIFICATION	@see javax.swing.icon#geticonwidth()
WITHOUT_CLASSIFICATION	@see javax.swing.icon#geticonheight()
WITHOUT_CLASSIFICATION	(massociationend)
WITHOUT_CLASSIFICATION	(massociation)
WITHOUT_CLASSIFICATION	now we are sure dm is a statevertex.
WITHOUT_CLASSIFICATION	now we are sure dm is a state.
WITHOUT_CLASSIFICATION	now we are sure dm is a composite state.
WITHOUT_CLASSIFICATION	end class clclassname
WITHOUT_CLASSIFICATION	if dm is the top state of the statemachine then it is not supposed to have outgoing transitions.
WITHOUT_CLASSIFICATION	end class crtoomanyoper
WITHOUT_CLASSIFICATION	end class crtoomanytransitions
WITHOUT_CLASSIFICATION	general
WITHOUT_CLASSIFICATION	loop through the associations looking for one with aggregation
WITHOUT_CLASSIFICATION	if drop out we're ok
WITHOUT_CLASSIFICATION	end class crnwayagg.java
WITHOUT_CLASSIFICATION	end class croppendconflict
WITHOUT_CLASSIFICATION	we could check for base class of the stereotype but the condition normally covers it all.
WITHOUT_CLASSIFICATION	intentional if there is nonsense in the field we return false
WITHOUT_CLASSIFICATION	intentional if there is nonsense in the field we do not set the value
WITHOUT_CLASSIFICATION	firenoderemoved(node)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.diagram#setname(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.mutablegraphmodel#containsnode(java.lang.object)
WITHOUT_CLASSIFICATION	newedge.setdielement( graphchangeadapter.getinstance().createelement(gm edge))
WITHOUT_CLASSIFICATION	/ end gef methods
WITHOUT_CLASSIFICATION	not allowed
WITHOUT_CLASSIFICATION	return
WITHOUT_CLASSIFICATION	todo comments are on element in uml 2.x
WITHOUT_CLASSIFICATION	create a diagram. this 4-arg version is only for internal use. the 'namespace' argument is deprecated and not used in the new apis.
WITHOUT_CLASSIFICATION	this shouldn't be possible but just in case
WITHOUT_CLASSIFICATION	fail silently as we expect users to accidentally drop on to wrong component
WITHOUT_CLASSIFICATION	create the uml connection of the given type between the given model elements. default aggregation (none)
WITHOUT_CLASSIFICATION	commentlinks for comments. iterate over all the comment links to find the comment and annotated elements.
WITHOUT_CLASSIFICATION	the connection is not valid unless both nodes are in this graph model.
WITHOUT_CLASSIFICATION	the diagram are always owned by the model in this first implementation.
WITHOUT_CLASSIFICATION	important - these must remain in order!
WITHOUT_CLASSIFICATION	singleton no instantiation
WITHOUT_CLASSIFICATION	the special value <code>null</code> is used internally to indicate that the default value should be inherited from the next level of settings.
WITHOUT_CLASSIFICATION	repeat until no faults are fixed
WITHOUT_CLASSIFICATION	diagram appearance settings with project scope
WITHOUT_CLASSIFICATION	we can not remove this and have the application manage things directly based on the font since only the names should be bold.
WITHOUT_CLASSIFICATION	some cached fonts based on the above settings
WITHOUT_CLASSIFICATION	since body ever looks at the type of the diagram appearance event we can simplify from sending every existing event to one event only. but since there is no catch-all event defined we just use one. rationale reduce the number of total refreshes of the drawing.
WITHOUT_CLASSIFICATION	if we've got a local (uninherited) font name or size or if we've got no parent to inherit from recompute our cached fonts
WITHOUT_CLASSIFICATION	this class is a temporary wrapper around the gef undomanager. this will be changed when gef is modified to create commands and provide an observer interface for argouml to receive them. <p> todo how does this relate to {@link org.argouml.kernel.defaultundomanager}? @author bob tarling
WITHOUT_CLASSIFICATION	listen for name changes so we can veto them if we don't like them
WITHOUT_CLASSIFICATION	get all the classes from the diagram
WITHOUT_CLASSIFICATION	the fix
WITHOUT_CLASSIFICATION	the report
WITHOUT_CLASSIFICATION	the report
WITHOUT_CLASSIFICATION	the fix
WITHOUT_CLASSIFICATION	the fix
WITHOUT_CLASSIFICATION	the fix
WITHOUT_CLASSIFICATION	2. make sure that all figs are visible
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.mutablegraphmodel#canaddnode(java.lang.object)
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	todo these should get replaced immediately by the creating initialization code but make sure we've got a default just in case.
WITHOUT_CLASSIFICATION	1. make sure all figs in the diagrams layer refer back to that layer.
WITHOUT_CLASSIFICATION	maybe we have a modelelement that is part of some other fig
WITHOUT_CLASSIFICATION	register for notification of any global changes that would affect our rendering
WITHOUT_CLASSIFICATION	add the diagram as a listener to the namespace so that when the namespace is removed the diagram is deleted also.
WITHOUT_CLASSIFICATION	4. make sure all fignodes and figedges have an owner the report
WITHOUT_CLASSIFICATION	3. make sure all figedges are attached to a valid fignode the report
WITHOUT_CLASSIFICATION	5. make sure all fignodes and figedges have a valid owner the report
WITHOUT_CLASSIFICATION	4. make sure the only figgroups on a diagram are also fignodes the report
WITHOUT_CLASSIFICATION	do nothing override in subclass.
WITHOUT_CLASSIFICATION	if we haven't succeeded in getting a namespace then abort
WITHOUT_CLASSIFICATION	this should always be true but just in case
WITHOUT_CLASSIFICATION	the diagram to be laid out.
WITHOUT_CLASSIFICATION	list of objects. note this methods which read/write this don't appear to be used.
WITHOUT_CLASSIFICATION	point at which to start layout (initial state goes here). the x coordinate must be greater than half the width of the widest figure to be placed (because figures are centered on this location).
WITHOUT_CLASSIFICATION	amount to increment y position by for each node placed. we pack them densely on the assumption that the user is going to split them into at least two swimlanes.
WITHOUT_CLASSIFICATION	finalstate element for activitydiagram
WITHOUT_CLASSIFICATION	find our initial state
WITHOUT_CLASSIFICATION	place all the nodes
WITHOUT_CLASSIFICATION	place the final state last with a little separation
WITHOUT_CLASSIFICATION	@see java.lang.object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinecolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinecolor()
WITHOUT_CLASSIFICATION	_x = x _y = y _w = w _h = h
WITHOUT_CLASSIFICATION	if we're trying to set the namespace to the existing value then don't do any more work.
WITHOUT_CLASSIFICATION	recursively place all nodes pointed to by outgoing transitions. because of the recursive algorithm multiple outgoing transitions will end up very lopsided because one entire subgraph will be done before dealing with the other transition(s). @param seen set of nodes seen so far @param node the node to collect neighbors for
WITHOUT_CLASSIFICATION	figclone.seperator = (figline) it.next()
WITHOUT_CLASSIFICATION	needed for project deletion
WITHOUT_CLASSIFICATION	we want to maintain a minimum size for the partition
WITHOUT_CLASSIFICATION	todo midpoints for side handles
WITHOUT_CLASSIFICATION	we removed the last partition so now remove the pool too
WITHOUT_CLASSIFICATION	no action required in case of veto on setname
WITHOUT_CLASSIFICATION	this test needed for project deletion
WITHOUT_CLASSIFICATION	todo side handles
WITHOUT_CLASSIFICATION	listen to activitygraph deletion delete this diagram.
WITHOUT_CLASSIFICATION	actions for toolbar
WITHOUT_CLASSIFICATION	no action required
WITHOUT_CLASSIFICATION	the namespace of the activitygraph is changed!
WITHOUT_CLASSIFICATION	getactionsubactivitystate()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphnoderenderer#getfignodefor( org.tigris.gef.graph.graphmodel org.tigris.gef.base.layer java.lang.object java.util.map)
WITHOUT_CLASSIFICATION	@see java.lang.object#clone()
WITHOUT_CLASSIFICATION	the space between the 2 text figs is padding. @see org.tigris.gef.presentation.fig#getminimumsize()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinecolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinecolor()
WITHOUT_CLASSIFICATION	we want to maintain a minimum size for the partition
WITHOUT_CLASSIFICATION	class to display graphics for a uml objectflowstate in a diagram.<p> the fig of this modelelement may either represent the following umlelements <p> (1) an objectflowstate with a classifier as type or <p> (2) an objectflowstate with a classifierinstate as type. <p> in both cases (1) and (2) the fig shows the underlined name of the classifier and in the latter case (2) it shows also the names of the states of the classifierinstate. <p> in the examples in the uml standard this is written like<pre> purchaseorder [approved] </pre> i.e. in 2 lines. the first line is underlined to indicate that it is an instance (object).<p> the fact that the first line is underlined and the 2nd not is the reason to implement them in 2 separate figs.<p> todo allow stereotypes to be shown. @author mvw
WITHOUT_CLASSIFICATION	model.getactivitygraphshelper() .isaddingactivitygraphallowed(base)
WITHOUT_CLASSIFICATION	todo we may return the following when the relocate() has been implemented.
WITHOUT_CLASSIFICATION	todo we may return something useful when the relocate() has been implemented.
WITHOUT_CLASSIFICATION	register for events from the type
WITHOUT_CLASSIFICATION	create a map of partitions keyed by x coordinate
WITHOUT_CLASSIFICATION	add figs to the fignode in back-to-front order
WITHOUT_CLASSIFICATION	sort the x coordinates into order
WITHOUT_CLASSIFICATION	the state name
WITHOUT_CLASSIFICATION	set the drop location in the case of d&d
WITHOUT_CLASSIFICATION	if the layer is null then most likely we are being deleted.
WITHOUT_CLASSIFICATION	don't listen to all property names we only need to listen to its "type" and "remove".
WITHOUT_CLASSIFICATION	the height of the blank space above and below the text figs
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinewidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinewidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#makeselection()
WITHOUT_CLASSIFICATION	@see java.lang.object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getminimumsize()
WITHOUT_CLASSIFICATION	override setbounds to keep shapes looking right. @see org.tigris.gef.presentation.fig#setboundsimpl(int int int int)
WITHOUT_CLASSIFICATION	although not generally true for gef for argo we know that the layer is a layerperspective which knows the associated diagram
WITHOUT_CLASSIFICATION	add figs to the fignode in back-to-front order
WITHOUT_CLASSIFICATION	and listen to name changes of the submachine
WITHOUT_CLASSIFICATION	both have the same settings
WITHOUT_CLASSIFICATION	both have the same owner
WITHOUT_CLASSIFICATION	add them back to front
WITHOUT_CLASSIFICATION	let our superclass sort itself out first
WITHOUT_CLASSIFICATION	add the listeners to the newowner
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setboundsimpl(int int int int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.selectionbuttons#getnewnode(int)
WITHOUT_CLASSIFICATION	_x = x _y = y _w = w _h = h
WITHOUT_CLASSIFICATION	add figs to the fignode in back-to-front order
WITHOUT_CLASSIFICATION	mutablegraphmodel implementation
WITHOUT_CLASSIFICATION	set up the property panels for activity diagrams
WITHOUT_CLASSIFICATION	overrule the single-line name-fig created by the parent
WITHOUT_CLASSIFICATION	a binary association is not a node so reject.
WITHOUT_CLASSIFICATION	setblinkports(false) make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	todo do we need to clone the stereotype(s)?
WITHOUT_CLASSIFICATION	(mgeneralization)
WITHOUT_CLASSIFICATION	the stereodim has height=2 even if it is empty hence the -2 below
WITHOUT_CLASSIFICATION	the width needs to be > the height
WITHOUT_CLASSIFICATION	both ends must be defined and nodes that are on the graph already.
WITHOUT_CLASSIFICATION	graphmodel implementation
WITHOUT_CLASSIFICATION	todo?
WITHOUT_CLASSIFICATION	((mclassifier)node).setnamespace(_collab.getnamespace())
WITHOUT_CLASSIFICATION	todo assumes public user pref for default visibility?
WITHOUT_CLASSIFICATION	add the given edge to the graph if valid. @see org.tigris.gef.graph.mutablegraphmodel#addedge(java.lang.object)
WITHOUT_CLASSIFICATION	todo we may return the following when the relocate() has been implemented.
WITHOUT_CLASSIFICATION	add figs to the fignode in back-to-front order
WITHOUT_CLASSIFICATION	the notationprovider for the classifierrole. <p> the syntax is for uml is <pre> baselist = [base] [ base] classifierrole = [name] [/ role] [ baselist] </pre></p> the <code>name</code> is the instance name not used currently. see classifierrolenotationuml for details.<p> this syntax is compatible with the uml 1.4 specification.
WITHOUT_CLASSIFICATION	todo assumes public
WITHOUT_CLASSIFICATION	the stereotype. width is the same as the cover height is its default (since the font is not yet set). the text should be centered.
WITHOUT_CLASSIFICATION	throws propertyvetoexception
WITHOUT_CLASSIFICATION	(melementimport)
WITHOUT_CLASSIFICATION	getstereotypefig().setfilled(false)
WITHOUT_CLASSIFICATION	end class collabdiagramgraphmodel
WITHOUT_CLASSIFICATION	in the rather unlikely case that we have no name we give up.
WITHOUT_CLASSIFICATION	the big port. color of the big port is irrelevant
WITHOUT_CLASSIFICATION	the name. width is the same as the cover height is the default. the text of the name will be centered by default. in the same place as the stereotype since at this stage the stereotype is not displayed. being a classifier role it is underlined
WITHOUT_CLASSIFICATION	the cover.
WITHOUT_CLASSIFICATION	at least one stereotype is visible
WITHOUT_CLASSIFICATION	remember where we are at present so we can tell gef later. then check we are as big as the minimum size
WITHOUT_CLASSIFICATION	set the bounds of the bigport and cover
WITHOUT_CLASSIFICATION	work out the padding each side depending on whether the stereotype is displayed and set bounds accordingly
WITHOUT_CLASSIFICATION	record the changes in the instance variables of our parent tell gef and trigger the edges to reconsider themselves.
WITHOUT_CLASSIFICATION	singleton
WITHOUT_CLASSIFICATION	this one behaves differently hence seperated
WITHOUT_CLASSIFICATION	this one behaves differently hence seperated
WITHOUT_CLASSIFICATION	do nothing.
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#calcbounds()
WITHOUT_CLASSIFICATION	although not generally true for gef for argo we know that the layer is a layerperspective which knows the associated diagram
WITHOUT_CLASSIFICATION	todo we may return something useful when the relocate() has been implemented.
WITHOUT_CLASSIFICATION	graphmodel implementation
WITHOUT_CLASSIFICATION	todo?
WITHOUT_CLASSIFICATION	a binary association is not a node so reject.
WITHOUT_CLASSIFICATION	both ends must be defined and nodes that are on the graph already.
WITHOUT_CLASSIFICATION	end class figassociationrole
WITHOUT_CLASSIFICATION	if location is non-null convert to a rectangle that we can use
WITHOUT_CLASSIFICATION	todo -> settings
WITHOUT_CLASSIFICATION	the figs that make up this group
WITHOUT_CLASSIFICATION	the figs that make up this group
WITHOUT_CLASSIFICATION	_x = first.getx() _y = first.gety()
WITHOUT_CLASSIFICATION	_x = first.getx() _y = first.gety()
WITHOUT_CLASSIFICATION	set up the property panels for collaboration diagrams
WITHOUT_CLASSIFICATION	this is neat
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.mutablegraphmodel#addedge(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.mutablegraphmodel#addnoderelatededges(java.lang.object)
WITHOUT_CLASSIFICATION	@see java.beans.vetoablechangelistener#vetoablechange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphnoderenderer#getfignodefor( org.tigris.gef.graph.graphmodel org.tigris.gef.base.layer java.lang.object java.util.map)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getclosestpoint(java.awt.point)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.ui.popupgenerator#getpopupactions(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	although not generally true for gef for argo we know that the layer is a layerperspective which knows the associated diagram
WITHOUT_CLASSIFICATION	add figs to the fignode in back-to-front order
WITHOUT_CLASSIFICATION	todo assumes public
WITHOUT_CLASSIFICATION	modifiers
WITHOUT_CLASSIFICATION	todo assumes public user pref for default visibility? do i have to check the namespace here? (toby)
WITHOUT_CLASSIFICATION	elementordering(figures)
WITHOUT_CLASSIFICATION	elementordering(figures)
WITHOUT_CLASSIFICATION	set up the property panels for deployment diagrams
WITHOUT_CLASSIFICATION	actions for toolbar
WITHOUT_CLASSIFICATION	getters for plugin modules
WITHOUT_CLASSIFICATION	so it still looks like a cube
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getminimumsize()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.ui.popupgenerator#getpopupactions(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	_x = x _y = y _w = w _h = h
WITHOUT_CLASSIFICATION	add the listeners to the newowner
WITHOUT_CLASSIFICATION	elementordering(figures)
WITHOUT_CLASSIFICATION	elementordering(figures)
WITHOUT_CLASSIFICATION	modifiers
WITHOUT_CLASSIFICATION	_bigport.setbounds(x+1 y+1 w-2 h-2)
WITHOUT_CLASSIFICATION	nothing extra to do currently
WITHOUT_CLASSIFICATION	north south west east south-west
WITHOUT_CLASSIFICATION	end class predisstartpackage
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.mutablegraphmodel#addnode(java.lang.object)
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	if the layer is null then most likely we are being deleted.
WITHOUT_CLASSIFICATION	graphmodel implementation
WITHOUT_CLASSIFICATION	mutablegraphmodel implementation
WITHOUT_CLASSIFICATION	both ends must be defined and nodes that are on the graph already.
WITHOUT_CLASSIFICATION	vetoablechangelistener implementation
WITHOUT_CLASSIFICATION	throws propertyvetoexception
WITHOUT_CLASSIFICATION	singleton
WITHOUT_CLASSIFICATION	end class statediagramgraphmodel
WITHOUT_CLASSIFICATION	don't do it for comment.
WITHOUT_CLASSIFICATION	(melementimport)
WITHOUT_CLASSIFICATION	(mtransition)
WITHOUT_CLASSIFICATION	prevent no changes
WITHOUT_CLASSIFICATION	if a uml object is found you can not remove selected elms.
WITHOUT_CLASSIFICATION	check parameter types
WITHOUT_CLASSIFICATION	if nothing is selected then not allowed to remove it.
WITHOUT_CLASSIFICATION	if only figs without owner are selected then you can remove them!
WITHOUT_CLASSIFICATION	end class predisfinalstate
WITHOUT_CLASSIFICATION	this presumes that the layer is set after the owner
WITHOUT_CLASSIFICATION	if it is concurrent and contains concurrent regions the bottom region has a minimum height
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.figedge#setfig(org.tigris.gef.presentation.fig)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#paint(java.awt.graphics)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getminimumsize()
WITHOUT_CLASSIFICATION	@see java.lang.object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getminimumsize()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.ui.popupgenerator#getpopupactions(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	_x = x _y = y _w = w _h = h
WITHOUT_CLASSIFICATION	_x = x _y = y _w = w _h = h
WITHOUT_CLASSIFICATION	add figs to the fignode in back-to-front order
WITHOUT_CLASSIFICATION	the purpose of this method is not explained and it give give npe depending on z order of figs as they are read. for now ignore if null but for future lets delete this.
WITHOUT_CLASSIFICATION	we only handle the case where a region has been removed
WITHOUT_CLASSIFICATION	check if multiple items are selected
WITHOUT_CLASSIFICATION	check if multiple items are selected
WITHOUT_CLASSIFICATION	if it is concurrent and contains concurrent regions the regions are resized
WITHOUT_CLASSIFICATION	none of the menu-items below apply when multiple modelelements are selected
WITHOUT_CLASSIFICATION	do we need to
WITHOUT_CLASSIFICATION	the returned list of figs is sorted according layout from top to bottom.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	this makes dragging connected edges very smooth. @see org.tigris.gef.presentation.fig#getclosestpoint(java.awt.point)
WITHOUT_CLASSIFICATION	@see java.lang.object#clone()
WITHOUT_CLASSIFICATION	_x = x _y = y _w = w _h = h
WITHOUT_CLASSIFICATION	_x = x _y = y _w = w _h = h
WITHOUT_CLASSIFICATION	add figs to the fignode in back-to-front order
WITHOUT_CLASSIFICATION	the event source is the owner stub state
WITHOUT_CLASSIFICATION	event processing
WITHOUT_CLASSIFICATION	end class figcompositestate
WITHOUT_CLASSIFICATION	the event source is the submachine state
WITHOUT_CLASSIFICATION	targetmanager.getinstance().addtargetlistener(this)
WITHOUT_CLASSIFICATION	ignored - fixed rendering
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	event handlers
WITHOUT_CLASSIFICATION	cmd api
WITHOUT_CLASSIFICATION	end class actioncreatepseudostate
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see java.lang.object#clone()
WITHOUT_CLASSIFICATION	_x = x _y = y _w = w _h = h
WITHOUT_CLASSIFICATION	add figs to the fignode in back-to-front order
WITHOUT_CLASSIFICATION	set the drop location in the case of d&d
WITHOUT_CLASSIFICATION	event processing
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	the submachine has got a new name
WITHOUT_CLASSIFICATION	the event source is the stub state's referenced state or one of the referenced state's path.
WITHOUT_CLASSIFICATION	this indicates a change in association not name - tfm
WITHOUT_CLASSIFICATION	all states in the new reference state's path are added as listeners
WITHOUT_CLASSIFICATION	the source was the referenced state that has got a new name.
WITHOUT_CLASSIFICATION	ignored - rendering is fixed
WITHOUT_CLASSIFICATION	the source was one of the referenced state's path which has got a new name.
WITHOUT_CLASSIFICATION	the old submachine container is deleted as listener
WITHOUT_CLASSIFICATION	the referenced state or one of his path's states has got a new name
WITHOUT_CLASSIFICATION	the new submachine container is added as listener
WITHOUT_CLASSIFICATION	all states in the old reference state's path are deleted as listeners
WITHOUT_CLASSIFICATION	translate any old style sequence diagrams
WITHOUT_CLASSIFICATION	just swap order of arguments to get to new form
WITHOUT_CLASSIFICATION	translate any sequence diagrams create with any previous svn work in progress
WITHOUT_CLASSIFICATION	get the first existing fignode and if it exists set the y position and height of _pers to be the same as it.
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseclicked(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#makeselection()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinecolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinecolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfillcolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see java.lang.object#clone()
WITHOUT_CLASSIFICATION	_x = x _y = y _w = w _h = h
WITHOUT_CLASSIFICATION	_x = x _y = y _w = w _h = h
WITHOUT_CLASSIFICATION	_x = x _y = y _w = w _h = h
WITHOUT_CLASSIFICATION	add figs to the fignode in back-to-front order
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	ignored - rendering is fixed
WITHOUT_CLASSIFICATION	ignore mouse clicks
WITHOUT_CLASSIFICATION	ignore mouse clicks
WITHOUT_CLASSIFICATION	the machine state has got a new name
WITHOUT_CLASSIFICATION	this assert fails for the testpropertypanels file guitestpropertypanels.zargo
WITHOUT_CLASSIFICATION	assert w == h
WITHOUT_CLASSIFICATION	the machine state has been deleted from model
WITHOUT_CLASSIFICATION	ignore w and h from here on.
WITHOUT_CLASSIFICATION	keep d even or odd just like the line width
WITHOUT_CLASSIFICATION	leave some space below the "include"
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphnoderenderer#getfignodefor( org.tigris.gef.graph.graphmodel org.tigris.gef.base.layer java.lang.object java.util.map)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphedgerenderer#getfigedgefor( org.tigris.gef.graph.graphmodel org.tigris.gef.base.layer java.lang.object java.util.map)
WITHOUT_CLASSIFICATION	@see java.lang.object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinecolor(java.awt.color)
WITHOUT_CLASSIFICATION	although not generally true for gef for argo we know that the layer is a layerperspective which knows the associated diagram
WITHOUT_CLASSIFICATION	add figs to the fignode in back-to-front order
WITHOUT_CLASSIFICATION	both have the same settings
WITHOUT_CLASSIFICATION	both have the same owner
WITHOUT_CLASSIFICATION	todo -> settings
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	there are one or more regions so find the one that the vertex was dropped in
WITHOUT_CLASSIFICATION	the vertex was dropped onto the diagram. get the region as the first region in the statemachine. if there is no region in the statemachine then create one.
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.figstatevertex#initnotationproviders (java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#removefromdiagramimpl()
WITHOUT_CLASSIFICATION	_x = x _y = y _w = w _h = h
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfillcolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getfillcolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinewidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.ui.popupgenerator#getpopupactions(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	_x = x _y = y _w = w _h = h
WITHOUT_CLASSIFICATION	add figs to the fignode in back-to-front order
WITHOUT_CLASSIFICATION	noop - fixed rendering
WITHOUT_CLASSIFICATION	there are no regions so create one and place the vertex there.
WITHOUT_CLASSIFICATION	temporary start private static final color[] color_array = { color.red color.blue color.cyan color.yellow color.green} private int nextcolor = 0 temporary end
WITHOUT_CLASSIFICATION	setblinkports(false) make port invisble unless mouse enters
WITHOUT_CLASSIFICATION	there can only be one
WITHOUT_CLASSIFICATION	@see java.lang.object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getminimumsize()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getusetraprect()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinecolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.ui.popupgenerator#getpopupactions(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	_x = x _y = y _w = w _h = h
WITHOUT_CLASSIFICATION	_x = x _y = y _w = w _h = h
WITHOUT_CLASSIFICATION	_x = x _y = y _w = w _h = h
WITHOUT_CLASSIFICATION	_x = x _y = y _w = w _h = h
WITHOUT_CLASSIFICATION	add figs to the fignode in back-to-front order
WITHOUT_CLASSIFICATION	we aren't able to resize neither the top bound from the first region nor the bottom bound from the last region.
WITHOUT_CLASSIFICATION	the group must be resized if a text field exceed the bounds
WITHOUT_CLASSIFICATION	if curhandle.index is 0 or 2 the adjacent region is the previous region but if it is 5 or 7 the adjacent region is the next region. curhandle.index show which corner of the bound we are dragging.
WITHOUT_CLASSIFICATION	a concurrent region cannot have incoming or outgoing transitions so incoming or outgoing transitions are redirected to its concurrent composite state container.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	do nothing.
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mousepressed(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mousereleased(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mousemotionlistener#mousedragged(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mousemotionlistener#mousemoved(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	nothing we can do about veto so just ignore it
WITHOUT_CLASSIFICATION	nothing we can do about veto so just ignore it
WITHOUT_CLASSIFICATION	add figs to the fignode in back-to-front order
WITHOUT_CLASSIFICATION	singleton
WITHOUT_CLASSIFICATION	event processing
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	/ event handlers - mouselistener and mousemotionlistener implementation
WITHOUT_CLASSIFICATION	or just the owner?
WITHOUT_CLASSIFICATION	listen to machine deletion to delete the diagram.
WITHOUT_CLASSIFICATION	this in case we are being deleted
WITHOUT_CLASSIFICATION	the namespace of the statemachine is changed!
WITHOUT_CLASSIFICATION	return
WITHOUT_CLASSIFICATION	return
WITHOUT_CLASSIFICATION	_x = x _y = y _w = w _h = h
WITHOUT_CLASSIFICATION	a binary association is not a node so reject.
WITHOUT_CLASSIFICATION	throws propertyvetoexception
WITHOUT_CLASSIFICATION	if location is non-null convert to a rectangle that we can use
WITHOUT_CLASSIFICATION	prevent no changes
WITHOUT_CLASSIFICATION	check parameter types
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	model.getstatemachineshelper() .isaddingstatemachineallowed(base)
WITHOUT_CLASSIFICATION	set up the property panels for statechart diagrams
WITHOUT_CLASSIFICATION	if location is null here the position of the new fignode is set after in org.tigris.gef.base.modeplace.mousepressed(mouseevent e)
WITHOUT_CLASSIFICATION	mmodelelement modelelement = elementimport.getmodelelement()
WITHOUT_CLASSIFICATION	top of the hierarchy is me
WITHOUT_CLASSIFICATION	top of the hierarchy is me
WITHOUT_CLASSIFICATION	then generalizable element
WITHOUT_CLASSIFICATION	then generalizable element
WITHOUT_CLASSIFICATION	then classifier & package
WITHOUT_CLASSIFICATION	navigable. only want incoming
WITHOUT_CLASSIFICATION	then classifier
WITHOUT_CLASSIFICATION	mutablegraphmodel implementation
WITHOUT_CLASSIFICATION	vetoablechangelistener implementation
WITHOUT_CLASSIFICATION	cast the params
WITHOUT_CLASSIFICATION	n.b. a node which is an association is either a n-ary association or the class part of an associationclass
WITHOUT_CLASSIFICATION	check param types only some connections are legal uml connections
WITHOUT_CLASSIFICATION	set the new end type!
WITHOUT_CLASSIFICATION	rerouting the destination
WITHOUT_CLASSIFICATION	rerouting the source
WITHOUT_CLASSIFICATION	empty at the moment
WITHOUT_CLASSIFICATION	move down
WITHOUT_CLASSIFICATION	empty at the moment
WITHOUT_CLASSIFICATION	empty at the moment
WITHOUT_CLASSIFICATION	move more right
WITHOUT_CLASSIFICATION	move left
WITHOUT_CLASSIFICATION	use left and right up and down
WITHOUT_CLASSIFICATION	calculate the higher and lower figs
WITHOUT_CLASSIFICATION	the amount of the "sidestep"
WITHOUT_CLASSIFICATION	if center points are "close enough" we just adjust the endpoints of the line a little bit. otherwise we add a jog in the middle to deal with the offset. todo epsilon is currently fixed but could probably be computed dynamically as 10% of the width of the narrowest figure or some other value which is visually not noticeable.
WITHOUT_CLASSIFICATION	currentedge.setbetweennearestpoints(false)
WITHOUT_CLASSIFICATION	log.debug(result + " node1 " + this + " node2 " + node)
WITHOUT_CLASSIFICATION	split = (split == null || split.isstandalone()) ? node split
WITHOUT_CLASSIFICATION	(xoffset - curw) / 2
WITHOUT_CLASSIFICATION	element is allowed but only namedelement can return nonempty list
WITHOUT_CLASSIFICATION	do nothing.
WITHOUT_CLASSIFICATION	set the drop location in the case of d&d
WITHOUT_CLASSIFICATION	self associations are special cases. no need to let the maze runner find the way.
WITHOUT_CLASSIFICATION	link does not exist in uml2
WITHOUT_CLASSIFICATION	now we construct the zig zag inheritance line getunderlyingfig()
WITHOUT_CLASSIFICATION	class to display graphics for a uml link in a diagram. <p> the underlined association name is shown next to the middle of the path. todo show more notation as described in the standard "a rolename may be shown at each end of the link. an association name may be shown near the path. if present it is underlined to indicate an instance. links do not have instance names they take their identity from the instances that they relate. multiplicity is not shown for links because they are instances. other association adornments (aggregation composition navigation) may be shown on the link ends."
WITHOUT_CLASSIFICATION	text group to contain name & stereotype
WITHOUT_CLASSIFICATION	end class figlink
WITHOUT_CLASSIFICATION	the next line is needed so that we have the right dimension when drawing this fig on the diagram by pressing down the mouse button even before releasing the mouse button
WITHOUT_CLASSIFICATION	stereotype covers namefig
WITHOUT_CLASSIFICATION	compartments from top to bottom
WITHOUT_CLASSIFICATION	make all the parts match the main fig
WITHOUT_CLASSIFICATION	by default do not show operations nor attributes
WITHOUT_CLASSIFICATION	we're going to change the name immediately so just use ""
WITHOUT_CLASSIFICATION	@see java.lang.object#clone()
WITHOUT_CLASSIFICATION	actions for toolbar
WITHOUT_CLASSIFICATION	todo place comments near connected classes todo place from middle towards outer edges? (or place largest groups first)
WITHOUT_CLASSIFICATION	boolean haspackages = false todo move "package in row" to noderow
WITHOUT_CLASSIFICATION	do nothing.
WITHOUT_CLASSIFICATION	this calls the getters to fetch actions even though the action variables are defined is instances of this class. this is because any number of action getters could have been overridden in a descendant and it is the action from that overridden method that should be returned in the array.
WITHOUT_CLASSIFICATION	since uml2 this must appear before the isaclass clause
WITHOUT_CLASSIFICATION	this rectangle marks the operation section all operations are inside it
WITHOUT_CLASSIFICATION	2nd compartment so adjust y appropriately
WITHOUT_CLASSIFICATION	todo we should be able to just call renderingchanged on the child figs here instead of doing an updateoperations
WITHOUT_CLASSIFICATION	todo we just need to get someone to re-render a single line of text which represents the element here but i'm not sure how to do that. - tfm todo bob replies - we shouldn't be interested in this event here. the figfeature (or its notation) should be listen for change and the figfeature should be update from that.
WITHOUT_CLASSIFICATION	collect the set of model elements that we want to listen to
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#translate(int int)
WITHOUT_CLASSIFICATION	@see java.lang.object#clone()
WITHOUT_CLASSIFICATION	add figs to the fignode in back-to-front order
WITHOUT_CLASSIFICATION	add the listeners to the newowner
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	make all the parts match the main fig
WITHOUT_CLASSIFICATION	check if any stereotype is defined
WITHOUT_CLASSIFICATION	and the stereotypes of its features
WITHOUT_CLASSIFICATION	and its features
WITHOUT_CLASSIFICATION	and the parameter of its operations
WITHOUT_CLASSIFICATION	update the listeners to match the desired set using the minimal update facility
WITHOUT_CLASSIFICATION	modifier
WITHOUT_CLASSIFICATION	create a body that reacts to double-clicks and jumps to a diagram.
WITHOUT_CLASSIFICATION	add
WITHOUT_CLASSIFICATION	visibility
WITHOUT_CLASSIFICATION	set properties of the stereotype box. initially not set to be displayed but this will be changed when we try to render it if we find we have a stereotype.
WITHOUT_CLASSIFICATION	there are 2 boxes showing lines the tab and the body.
WITHOUT_CLASSIFICATION	this populates the stereotypes area
WITHOUT_CLASSIFICATION	else nothing changed
WITHOUT_CLASSIFICATION	else nothing changed
WITHOUT_CLASSIFICATION	we got at least one stereotype
WITHOUT_CLASSIFICATION	the user wants to hide them
WITHOUT_CLASSIFICATION	modifier
WITHOUT_CLASSIFICATION	visibility
WITHOUT_CLASSIFICATION	the figpoly is located at the right of the name text. the namefig size is increased so that it fits its text and the figpoly next to the text all within the boundaries of the namefig.
WITHOUT_CLASSIFICATION	if we have any number of stereotypes displayed then allow some space for that (only width height is included in namefig)
WITHOUT_CLASSIFICATION	take into account the tab is not as wide as the body
WITHOUT_CLASSIFICATION	we want at least some of the package body to be displayed
WITHOUT_CLASSIFICATION	and now asize has the answer
WITHOUT_CLASSIFICATION	save our old boundaries (needed later) and get minimum size info. "asize" will be used to maintain a running calculation of our size at various points.
WITHOUT_CLASSIFICATION	the new size can not be smaller than the minimum.
WITHOUT_CLASSIFICATION	now resize all sub-figs including not displayed figs. start by the name. we override the getminimumsize if it is less than our view (21 pixels hardcoded!). add in the shared extra plus in this case the correction.
WITHOUT_CLASSIFICATION	now sort out the stereotype display. if the stereotype is displayed move the upper boundary of the name compartment up and set new bounds for the name and the stereotype compartments and the stereolineblinder that blanks out the line between the two
WITHOUT_CLASSIFICATION	advance currenty to where the start of the body box is remembering that it overlaps the next box by 1 pixel. calculate the size of the body box and update the y pointer past it if it is displayed.
WITHOUT_CLASSIFICATION	-1 for 1 pixel overlap
WITHOUT_CLASSIFICATION	set bounds of big box
WITHOUT_CLASSIFICATION	the figpoly is located at the right edge of the namefig. the namefig size is such that it at least fits its text and the figpoly next to the text. making the package bigger causes the figpoly to stick to the right edge.
WITHOUT_CLASSIFICATION	now force calculation of the bounds of the figure update the edges and trigger anyone who's listening to see if the "bounds" property has changed.
WITHOUT_CLASSIFICATION	only show the menuitems if they make sense
WITHOUT_CLASSIFICATION	save first
WITHOUT_CLASSIFICATION	while
WITHOUT_CLASSIFICATION	if we get here then we didn't get the default diagram.
WITHOUT_CLASSIFICATION	try to create a new class diagram.
WITHOUT_CLASSIFICATION	if package
WITHOUT_CLASSIFICATION	if doubleclicks
WITHOUT_CLASSIFICATION	change prefix
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed( java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	add the listeners to the newowner
WITHOUT_CLASSIFICATION	and its features
WITHOUT_CLASSIFICATION	end class figpackage
WITHOUT_CLASSIFICATION	readonly class no generalization no association to self
WITHOUT_CLASSIFICATION	end class stylepanelfigpackage
WITHOUT_CLASSIFICATION	in the deploymentdiagram there are no generalizations
WITHOUT_CLASSIFICATION	self-association isn't draggable
WITHOUT_CLASSIFICATION	end class stylepanelfiginterface
WITHOUT_CLASSIFICATION	no generalizations on deployment diagram
WITHOUT_CLASSIFICATION	and its stereotypes
WITHOUT_CLASSIFICATION	event handling
WITHOUT_CLASSIFICATION	event handling
WITHOUT_CLASSIFICATION	add figs to the fignode in back-to-front order
WITHOUT_CLASSIFICATION	set the drop location in the case of d&d
WITHOUT_CLASSIFICATION	set the drop location in the case of d&d
WITHOUT_CLASSIFICATION	add the listeners to the newowner
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	stereotype covers namefig
WITHOUT_CLASSIFICATION	compartments from top to bottom
WITHOUT_CLASSIFICATION	make all the parts match the main fig
WITHOUT_CLASSIFICATION	collect the set of model elements that we want to listen to
WITHOUT_CLASSIFICATION	and its features
WITHOUT_CLASSIFICATION	and the stereotypes of its features
WITHOUT_CLASSIFICATION	and the parameter of its operations
WITHOUT_CLASSIFICATION	use super because not fully init'd
WITHOUT_CLASSIFICATION	and its enumerationliterals
WITHOUT_CLASSIFICATION	and now add listeners to them all
WITHOUT_CLASSIFICATION	put all the bits together suppressing bounds calculations until we're all done for efficiency.
WITHOUT_CLASSIFICATION	the next line is needed so that we have the right dimension when drawing this fig on the diagram by pressing down the mouse button even before releasing the mouse button
WITHOUT_CLASSIFICATION	stereotype fig covers the name fig
WITHOUT_CLASSIFICATION	set the bounds of the figure to the total of the above
WITHOUT_CLASSIFICATION	if moved into an package
WITHOUT_CLASSIFICATION	if default namespace is not already set
WITHOUT_CLASSIFICATION	the next if-clause is important for the deployment-diagram it detects if the enclosing fig is a component in this case the container will be set for the owning interface
WITHOUT_CLASSIFICATION	testing add a parameter to an operation on an interface. does the interface fig adapt its width?
WITHOUT_CLASSIFICATION	set up the property panels for class diagrams
WITHOUT_CLASSIFICATION	the figure that holds the text of the note.
WITHOUT_CLASSIFICATION	do nothing by default.
WITHOUT_CLASSIFICATION	@see java.beans.vetoablechangelistener#vetoablechange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.keylistener#keypressed(java.awt.event.keyevent)
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	update the listeners to match the desired set using the minimal update facility
WITHOUT_CLASSIFICATION	get the size of the text field.
WITHOUT_CLASSIFICATION	mark this as newly created. this is to get round the problem with creating figs for loaded comments that had stereotypes. they are saved with their dimensions including the stereotype but since we pretend the stereotype is not visible we add height the first time we render such a comment. this is a complete fudge and really we ought to address how comment objects with stereotypes are saved. but that will be hard work.
WITHOUT_CLASSIFICATION	update the relative sizes and positions of internel figs
WITHOUT_CLASSIFICATION	update any text colors fonts etc.
WITHOUT_CLASSIFICATION	parse the text that was edited
WITHOUT_CLASSIFICATION	resize the text figure
WITHOUT_CLASSIFICATION	resize the fignode to accomodate the new text
WITHOUT_CLASSIFICATION	not used do nothing.
WITHOUT_CLASSIFICATION	not used do nothing.
WITHOUT_CLASSIFICATION	resize the big port around the figure
WITHOUT_CLASSIFICATION	the text element has no border so the line color doesn't matter.
WITHOUT_CLASSIFICATION	the text is always opaque.
WITHOUT_CLASSIFICATION	? 2line_width?
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getclosestpoint(java.awt.point)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphnoderenderer#getfignodefor( org.tigris.gef.graph.graphmodel org.tigris.gef.base.layer java.lang.object java.util.map)
WITHOUT_CLASSIFICATION	@see java.awt.event.itemlistener#itemstatechanged(java.awt.event.itemevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.figedge#setfig(org.tigris.gef.presentation.fig)
WITHOUT_CLASSIFICATION	_x = x _y = y _w = w _h = h
WITHOUT_CLASSIFICATION	make a seamless integration of the text in the note figure.
WITHOUT_CLASSIFICATION	user interaction methods
WITHOUT_CLASSIFICATION	accessor methods
WITHOUT_CLASSIFICATION	if we have a stereotype displayed then allow some space for that (width and height)
WITHOUT_CLASSIFICATION	and add the gaps around the textfield to get the minimum size of the note.
WITHOUT_CLASSIFICATION	since this is a complex polygon there's no easy way to resize it.
WITHOUT_CLASSIFICATION	just move the corner to it's new position.
WITHOUT_CLASSIFICATION	/ internal methods
WITHOUT_CLASSIFICATION	remove the commentedge. if there are more then one comment-edges between the 2 objects then delete them all.
WITHOUT_CLASSIFICATION	all connected edges
WITHOUT_CLASSIFICATION	only adjust the stereotype height if we are not newly created. this gets round the problem of loading classes with stereotypes defined which have the height already including the stereotype.
WITHOUT_CLASSIFICATION	whatever happened we are no longer newly created so clear the flag. then set the bounds for the rectangle we have defined.
WITHOUT_CLASSIFICATION	end class stylepanelfigclass
WITHOUT_CLASSIFICATION	todo get tip string from comment
WITHOUT_CLASSIFICATION	this one is still usable so let's retain it
WITHOUT_CLASSIFICATION	the last one needs extra space below it
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#removefromdiagram()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.figedge#setdestfignode(org.tigris.gef.presentation.fignode)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.figedge#setsourcefignode(org.tigris.gef.presentation.fignode)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfilled(boolean)
WITHOUT_CLASSIFICATION	although not generally true for gef for argo we know that the layer is a layerperspective which knows the associated diagram
WITHOUT_CLASSIFICATION	although not generally true for gef for argo we know that the layer is a layerperspective which knows the associated diagram
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	event handling
WITHOUT_CLASSIFICATION	set the drop location in the case of d&d
WITHOUT_CLASSIFICATION	contructors
WITHOUT_CLASSIFICATION	modifiers
WITHOUT_CLASSIFICATION	the next line is needed so that we have the right dimension when drawing this fig on the diagram by pressing down the mouse button even before releasing the mouse button
WITHOUT_CLASSIFICATION	make all the parts match the main fig
WITHOUT_CLASSIFICATION	visibility
WITHOUT_CLASSIFICATION	stereotype fig covers the name fig
WITHOUT_CLASSIFICATION	element will normally be null when called from pgml parser it will get it's source & destination set later in attachedges
WITHOUT_CLASSIFICATION	unfortunately the fig and it's associated commentedge will not be fully initialized yet here if we're being loaded from a pgml file. the remainder of the initialization will happen when set{dest|source}fignode are called from pgmlstackparser.attachedges()
WITHOUT_CLASSIFICATION	unimplemented
WITHOUT_CLASSIFICATION	alternatively we could just return null here so that you can not create a comment just linked to a comment this way - which is a bit uncommon but not illegal so for consistency we better allow it.
WITHOUT_CLASSIFICATION	return null
WITHOUT_CLASSIFICATION	class to display a stereotype declaration figure using classifier box notation.<p> todo this is just a place-holder right now! - tfm this needs to show tags and constraints.
WITHOUT_CLASSIFICATION	add
WITHOUT_CLASSIFICATION	show
WITHOUT_CLASSIFICATION	register for tagdefinitions
WITHOUT_CLASSIFICATION	todo constraints
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.abstractaction#isenabled()
WITHOUT_CLASSIFICATION	set the drop location in the case of d&d
WITHOUT_CLASSIFICATION	make all the parts match the main fig
WITHOUT_CLASSIFICATION	put all the bits together suppressing bounds calculations until we're all done for efficiency.
WITHOUT_CLASSIFICATION	the next line is needed so that we have the right dimension when drawing this fig on the diagram by pressing down the mouse button even before releasing the mouse button
WITHOUT_CLASSIFICATION	todo need named tags and constraints compartments here addfig(tagsfig) addfig(constraintsfig)
WITHOUT_CLASSIFICATION	if moved into an package
WITHOUT_CLASSIFICATION	if default namespace is not already set
WITHOUT_CLASSIFICATION	when this is called from pgmlstackparser.attachedges we finished the initialization of owning pseudo element (commentedge)
WITHOUT_CLASSIFICATION	if the operation/reception is abstract then the text will be set to italics.
WITHOUT_CLASSIFICATION	avoid gef calcdrawingarea bug when nothing in a diagram.
WITHOUT_CLASSIFICATION	todo add tags & constraints addmenu.add(targetmanager.getinstance().getaddattributeaction()) addmenu.add(targetmanager.getinstance().getaddoperationaction())
WITHOUT_CLASSIFICATION	avoid gef calcdrawingarea bug when nothing in a diagram.
WITHOUT_CLASSIFICATION	no generalizations in deployment diagrams
WITHOUT_CLASSIFICATION	the diagram image data
WITHOUT_CLASSIFICATION	copy the gif image to the clipboard
WITHOUT_CLASSIFICATION	the diagram image data
WITHOUT_CLASSIFICATION	hide grid otherwise can't see anything
WITHOUT_CLASSIFICATION	bigport.setfilled(f)
WITHOUT_CLASSIFICATION	background color.
WITHOUT_CLASSIFICATION	2 pixel padding after compartment
WITHOUT_CLASSIFICATION	set up hide all / show all
WITHOUT_CLASSIFICATION	perform the action
WITHOUT_CLASSIFICATION	only the bigport may be filled
WITHOUT_CLASSIFICATION	?line_width?
WITHOUT_CLASSIFICATION	see parent
WITHOUT_CLASSIFICATION	?line_width?
WITHOUT_CLASSIFICATION	we remove all of them
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.undo.undoableaction#isenabled()
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	?line_width?
WITHOUT_CLASSIFICATION	if we don't have a fig for this uml object we'll need to add one. we set the bounds but they will be reset later.
WITHOUT_CLASSIFICATION	but its position may have been changed
WITHOUT_CLASSIFICATION	bounds not relevant here but i am perfectionist
WITHOUT_CLASSIFICATION	we need to set a new notationprovider since the notation language may have been changed
WITHOUT_CLASSIFICATION	add it again (but now in the right sequence)
WITHOUT_CLASSIFICATION	now put the text in we must handle the case where the text is null
WITHOUT_CLASSIFICATION	no longer abstract to allow subclasses to remove so we provide a null default implementation
WITHOUT_CLASSIFICATION	if this is not overridden it will revert to the old behavior all internal subclasses have been updated but this if for compatibility of non-argouml extensions.
WITHOUT_CLASSIFICATION	find the compartment fig for this umlobject
WITHOUT_CLASSIFICATION	override superclass to do nothing. fill property cannot be changed.
WITHOUT_CLASSIFICATION	override superclass to do nothing. line width cannot be changed.
WITHOUT_CLASSIFICATION	override superclass to do nothing. line width property cannot be changed.
WITHOUT_CLASSIFICATION	aggregation
WITHOUT_CLASSIFICATION	end class actionsrcmultonetomany
WITHOUT_CLASSIFICATION	todo set font?
WITHOUT_CLASSIFICATION	to circumvent too many registered listeners
WITHOUT_CLASSIFICATION	static variables
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#insertupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#removeupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#changedupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see java.beans.propertychangelistener#propertychange(propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#hit(java.awt.rectangle)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	calling connect() will add the edge to the graphmodel and any layerpersectives on that graphmodel will get a edgeadded event and will add an appropriate figedge (determined by the graphedgerenderer).
WITHOUT_CLASSIFICATION	ending editing
WITHOUT_CLASSIFICATION	used by pgml.tee
WITHOUT_CLASSIFICATION	actually return the figedge that the figedgeport is part of.
WITHOUT_CLASSIFICATION	throw new illegalargumentexception()
WITHOUT_CLASSIFICATION	do nothing.
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#insertupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	event handling
WITHOUT_CLASSIFICATION	main methods
WITHOUT_CLASSIFICATION	if the user selects an action that is already selected in sticky mode (double clicked) then we turn off sticky mode and make sure no action is selected.
WITHOUT_CLASSIFICATION	here the actions to divide a region
WITHOUT_CLASSIFICATION	the 1st region has an invisible divider line (the box is always invisible)
WITHOUT_CLASSIFICATION	throw out any previous elements that were enclosed but are not a concurrent region let's move them onto the first region
WITHOUT_CLASSIFICATION	linewidth?
WITHOUT_CLASSIFICATION	the divider line should be visible so no need to change its color.
WITHOUT_CLASSIFICATION	make the composite state 1 region higher
WITHOUT_CLASSIFICATION	todo verify this. iiuc then this triggers the compountstatefig to draw itself correctly. hence there was a reason to wait this long to make the state concurrent.
WITHOUT_CLASSIFICATION	look for the dashed edge
WITHOUT_CLASSIFICATION	we have the dashed edge now find the opposite fignode
WITHOUT_CLASSIFICATION	prevent triggering too many events by setname().
WITHOUT_CLASSIFICATION	not???
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	consume to stop other modes from trying to take over
WITHOUT_CLASSIFICATION	marker interface only
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#removefromdiagram()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setboundsimpl(int int int int)
WITHOUT_CLASSIFICATION	only reset the text if the two are not the same (i.e the fig has moved rather than we've just edited the text when settargetbbox() will have made them the same). note that stylebounds could be null so we do the test this way round.
WITHOUT_CLASSIFICATION	can't do anything if we don't have a fig.
WITHOUT_CLASSIFICATION	2 pixel padding after compartment
WITHOUT_CLASSIFICATION	or vice versa?
WITHOUT_CLASSIFICATION	provide feedback to the user that their name was not accepted
WITHOUT_CLASSIFICATION	subtract the the offset of the click to take account of user having not initially clicked in the centre.
WITHOUT_CLASSIFICATION	super returns -1 if any of gefs buttons was hit (but maybe one of the not-gef-buttons)
WITHOUT_CLASSIFICATION	do not show border line make transparent
WITHOUT_CLASSIFICATION	cleanup of unused figtext's
WITHOUT_CLASSIFICATION	todo this doesn't do anything special with keywords. they should probably go first.
WITHOUT_CLASSIFICATION	there is one fig more in the group than (stereotypes + keyword)
WITHOUT_CLASSIFICATION	the keyword fig already exists.
WITHOUT_CLASSIFICATION	this will contain the figs that we do not need anymore
WITHOUT_CLASSIFICATION	bounds not relevant here
WITHOUT_CLASSIFICATION	bounds not relevant here
WITHOUT_CLASSIFICATION	the stereotype fig already exists.
WITHOUT_CLASSIFICATION	the boundary box as held in the target fig and as listed in the boundary box style field (null if we don't have anything valid)
WITHOUT_CLASSIFICATION	remove all stereotypes that have a graphical icon
WITHOUT_CLASSIFICATION	todo check!
WITHOUT_CLASSIFICATION	set new bounds for all included figs
WITHOUT_CLASSIFICATION	stylepanelfigclass relies on getpaneltarget() to return a figcompartmentbox
WITHOUT_CLASSIFICATION	get class box because we will set it's bounding box
WITHOUT_CLASSIFICATION	get class box because we will set it's bounding box in text field
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	calling connect() will add the edge to the graphmodel and any layerpersectives on that graphmodel will get a edgeadded event and will add an appropriate figedge (determined by the graphedgerenderer).
WITHOUT_CLASSIFICATION	the keyword fig does not exist yet. let's create one
WITHOUT_CLASSIFICATION	keywords which look like a stereotype (e.g. <<interface>>) have no owner
WITHOUT_CLASSIFICATION	if there are no stereotypes we return (00) preventing double lines in the class (see issue 4939)
WITHOUT_CLASSIFICATION	end class stylepanelfigassociationclass
WITHOUT_CLASSIFICATION	/ constructors /
WITHOUT_CLASSIFICATION	/ main methods /
WITHOUT_CLASSIFICATION	create the singleton if it does not exist and then return it
WITHOUT_CLASSIFICATION	when a new target is selected we have to check if it 's a use case. then the icone "add extension point" have to become enabled.
WITHOUT_CLASSIFICATION	find the target in the project browser. we can only do anything if its a use case.
WITHOUT_CLASSIFICATION	create a new extension point and make it the browser target. then invoke the superclass action method.
WITHOUT_CLASSIFICATION	end class actionaddextensionpoint
WITHOUT_CLASSIFICATION	we have already confirmed the connection is valid
WITHOUT_CLASSIFICATION	detach any edges (such as comment edges) already attached to the figassociation before the figassociation is removed. they'll later be re-attached to the new fignodeassociation
WITHOUT_CLASSIFICATION	if there are bits of an association class then remember their location and path.
WITHOUT_CLASSIFICATION	create the new fignodeassociation and locate it.
WITHOUT_CLASSIFICATION	add the association ends to the graph model
WITHOUT_CLASSIFICATION	add the edges (such as comment edges) that were on the old figassociation to our new fignodeassociation and make sure they are positioned correctly.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.droptargetlistener#dragenter( java.awt.dnd.droptargetdragevent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.droptargetlistener#dragover( java.awt.dnd.droptargetdragevent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.droptargetlistener#dropactionchanged( java.awt.dnd.droptargetdragevent)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	get the model elements that are being transfered.
WITHOUT_CLASSIFICATION	multiplicity
WITHOUT_CLASSIFICATION	end class modecreateassociation
WITHOUT_CLASSIFICATION	&& ((umldiagram) dia).doesaccept(dtde.getsource())
WITHOUT_CLASSIFICATION	create a new figtext instance based on the given mouse down event and the state of the parent editor.
WITHOUT_CLASSIFICATION	system.err.println("nullpointerexception ignored.")
WITHOUT_CLASSIFICATION	end class spfigedgemodelelement
WITHOUT_CLASSIFICATION	system.err.println("nullpointerexception ignored.")
WITHOUT_CLASSIFICATION	get all our sub figs and hit them with the big stick too
WITHOUT_CLASSIFICATION	only show the path item when there is an owning namespace.
WITHOUT_CLASSIFICATION	only show the path item when there is an owning namespace.
WITHOUT_CLASSIFICATION	enumerate all selected figures and update their path accordingly
WITHOUT_CLASSIFICATION	force the line-width to 0 since the figgroup that contains the stereotype may want to show a border but we don't.
WITHOUT_CLASSIFICATION	compartments
WITHOUT_CLASSIFICATION	todo support commentedges. todo support associations to self. @see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	add
WITHOUT_CLASSIFICATION	20 = height of name fig ?
WITHOUT_CLASSIFICATION	now force calculation of the bounds of the figure update the edges and trigger anyone who's listening to see if the "bounds" property has changed.
WITHOUT_CLASSIFICATION	2line_width? or extra padding?
WITHOUT_CLASSIFICATION	set properties of the stereotype box.
WITHOUT_CLASSIFICATION	the namefig is transparent since this is a box and the fill color is drawn by the bigport.
WITHOUT_CLASSIFICATION	use "asize" to build up the minimum size. start with the size of the name compartment and build up.
WITHOUT_CLASSIFICATION	only take into account the stereotype width not the height since the height is included in the name fig
WITHOUT_CLASSIFICATION	add the height of all the compartments (if there are any) and check their minimum width
WITHOUT_CLASSIFICATION	save our old boundaries so it can be used in property message later
WITHOUT_CLASSIFICATION	make sure we don't try to set things smaller than the minimum
WITHOUT_CLASSIFICATION	the box for the compartments is somewhere inside the outside bounds
WITHOUT_CLASSIFICATION	now the new namefig height will include the stereotype height
WITHOUT_CLASSIFICATION	the new height can not be less than the name height
WITHOUT_CLASSIFICATION	calculate the minimum needed height for all the compartments
WITHOUT_CLASSIFICATION	distribute the extra height over the visible compartments
WITHOUT_CLASSIFICATION	increase the height of the fig
WITHOUT_CLASSIFICATION	finally set the bounds of the big box and the border fig
WITHOUT_CLASSIFICATION	hide compartment
WITHOUT_CLASSIFICATION	hiding one compartment means that the fig returns to minimal dimensions
WITHOUT_CLASSIFICATION	@see javax.swing.jcomponent#setvisible(boolean)
WITHOUT_CLASSIFICATION	@see javax.swing.action#isenabled()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.pathconv#stuffpoint(java.awt.point)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.pathconv#setclosestpoint(java.awt.point)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.pathconv#applyoffsetamount(java.awt.point java.awt.point int java.awt.point)
WITHOUT_CLASSIFICATION	alternatively we could reduce the height of the fig by the height of this one hidden compartment. but that would not be possible for the width - so we better return to minimal dimensions overall.
WITHOUT_CLASSIFICATION	show compartment
WITHOUT_CLASSIFICATION	this sets the linewidth of all in the group
WITHOUT_CLASSIFICATION	namefig and stereotypefig are handled by parent.
WITHOUT_CLASSIFICATION	forcerepaintshadow()
WITHOUT_CLASSIFICATION	update the diagram and other users of these settings
WITHOUT_CLASSIFICATION	@jvedecl-index=0visual-constraint="1010"
WITHOUT_CLASSIFICATION	find the point offset on the line that gives a correct offset
WITHOUT_CLASSIFICATION	default angle is 90 deg.
WITHOUT_CLASSIFICATION	boundary condition in gef make sure this is less than not equal
WITHOUT_CLASSIFICATION	if we're using a fixed offset just add it and return no collision detection is done in this case
WITHOUT_CLASSIFICATION	check for a collision between our computed position and the edge
WITHOUT_CLASSIFICATION	increase offset by 2px at a time
WITHOUT_CLASSIFICATION	get the points representing the poly line for our edge
WITHOUT_CLASSIFICATION	increase offset by increments until we're clear
WITHOUT_CLASSIFICATION	limit our retries in case its too hard to get free
WITHOUT_CLASSIFICATION	if we timed out give it one more try on the other side
WITHOUT_CLASSIFICATION	count >= limit
WITHOUT_CLASSIFICATION	force the line-width to 0 since the figgroup that contains the stereotype may want to show a border but we don't.
WITHOUT_CLASSIFICATION	log.log(level.fine "final point #" + count + " " + result + " offset of " + scaledoffset)
WITHOUT_CLASSIFICATION	segment size for computing slope
WITHOUT_CLASSIFICATION	two points for line segment used to compute slope of path here note that this is the average slope not instantaneous so it will give screwy results near bends in the path
WITHOUT_CLASSIFICATION	if our position was clamped try to make it up on the other end
WITHOUT_CLASSIFICATION	can't get the slope of a point. just return an arbitrary point.
WITHOUT_CLASSIFICATION	our angle theta is arctan(opposite/adjacent) because y increases going down the screen positive angles are clockwise rather than counterclockwise
WITHOUT_CLASSIFICATION	this shouldn't happen because of our line segment size check
WITHOUT_CLASSIFICATION	"we're going vertical!" - goose in "top gun"
WITHOUT_CLASSIFICATION	arctan only returns -pi/2 to pi/2 handle the other two quadrants and normalize to 0 - 2pi
WITHOUT_CLASSIFICATION	quadrant ii & iii
WITHOUT_CLASSIFICATION	quadrant iv
WITHOUT_CLASSIFICATION	set the following for some backward compatibility with old algorithm
WITHOUT_CLASSIFICATION	add displacement angle to slope
WITHOUT_CLASSIFICATION	transform to 0 - 2pi range if we've gone all the way around circle
WITHOUT_CLASSIFICATION	compute our deltas
WITHOUT_CLASSIFICATION	log.log(level.fineresult.x + " " + result.y + " theta = " + theta 180 / math.pi + " dx = " + dx + " dy = " + dy)
WITHOUT_CLASSIFICATION	load the standard colour just add an alpha channel.
WITHOUT_CLASSIFICATION	should never get here. if we do return the inner point.
WITHOUT_CLASSIFICATION	called by propertychange
WITHOUT_CLASSIFICATION	this does a calcbounds()
WITHOUT_CLASSIFICATION	note this listener needs to always be active even if this tab isn't visible
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.diagram#getclassandmodelid()
WITHOUT_CLASSIFICATION	@see javax.swing.action#isenabled()
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.action#isenabled()
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	the clone method that should clone the jgraph with it's contents and the toolbar with it's contents. since both jgraph as the toolbar are coming from the gef framework cloning them will be hard work and should actually not be placed here but in a clone method of the jgraph and the toolbar. @see java.lang.object#clone()
WITHOUT_CLASSIFICATION	@see java.awt.component#setvisible(boolean)
WITHOUT_CLASSIFICATION	if location is non-null convert to a rectangle that we can use
WITHOUT_CLASSIFICATION	the following is the default implementation for diagrams of which the owner is a namespace.
WITHOUT_CLASSIFICATION	source source position destination destination position number of objects to be copied
WITHOUT_CLASSIFICATION	"unnamed " +
WITHOUT_CLASSIFICATION	todo should update to size of diagram contents
WITHOUT_CLASSIFICATION	this should not be needed if the above is correct but let's be sure
WITHOUT_CLASSIFICATION	this should not be needed if the above is correct but let's be sure
WITHOUT_CLASSIFICATION	actionpaste.getinstance().setenabled( globals.clipboard != null && !globals.clipboard.isempty())
WITHOUT_CLASSIFICATION	next statement gives us a clone jgraph but not a cloned toolbar
WITHOUT_CLASSIFICATION	@see org.tigris.gef.event.modechangelistener#modechange(org.tigris.gef.event.modechangeevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseentered(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mousemotionlistener#mousemoved(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	remains selected
WITHOUT_CLASSIFICATION	the old selection
WITHOUT_CLASSIFICATION	target might not have been initialised yet.
WITHOUT_CLASSIFICATION	add to selection
WITHOUT_CLASSIFICATION	optimize for the normal case to minimize target changes
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	assuming the target is some model element.
WITHOUT_CLASSIFICATION	how to handle empty target lists? probably the tabdiagram should only show an empty pane in that case
WITHOUT_CLASSIFICATION	assuming the target is some model element.
WITHOUT_CLASSIFICATION	was ""
WITHOUT_CLASSIFICATION	although we register for notification of diagrams being deleted we currently depend on the targetmanager to assign a new target when this happens when we implement mdi and have our own list of open diagrams we can ressurect the use of this
WITHOUT_CLASSIFICATION	any swing work done here needs to be queued to the awt thread since we don't know what thread our event will arrive on
WITHOUT_CLASSIFICATION	- redrawmanager.lock()
WITHOUT_CLASSIFICATION	- redrawmanager.lock()
WITHOUT_CLASSIFICATION	getlayermanager().getactivelayer().paint(g)
WITHOUT_CLASSIFICATION	- redrawmanager.unlock() - _redrawer.repairdamage()
WITHOUT_CLASSIFICATION	getlayermanager().getactivelayer().paint(g)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#deletefrommodel()
WITHOUT_CLASSIFICATION	@see javax.swing.action#getvalue(java.lang.string)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	this makes the text not touch the text-border line
WITHOUT_CLASSIFICATION	todo we don't currently have any settings that can change on a per-fig basis so we can just use the project/diagram defaults settings = new diagramsettings(rendersettings)
WITHOUT_CLASSIFICATION	certain types of fixed text (e.g. a figstereotype with a keyword) may not have an owner
WITHOUT_CLASSIFICATION	now we link it to the modelelements which are represented by fignode
WITHOUT_CLASSIFICATION	update all tools' enabled status
WITHOUT_CLASSIFICATION	remember the fig for later
WITHOUT_CLASSIFICATION	let's build the comment first unlinked.
WITHOUT_CLASSIFICATION	prevent e.g. associationclasses from being added trice
WITHOUT_CLASSIFICATION	select the new comment as target
WITHOUT_CLASSIFICATION	create the node fig for the comment itself and draw it
WITHOUT_CLASSIFICATION	create the comment links and draw them
WITHOUT_CLASSIFICATION	place the comment fig on the nicest spot on the diagram
WITHOUT_CLASSIFICATION	if we're drawing from an edge
WITHOUT_CLASSIFICATION	$non-nls-<n>$
WITHOUT_CLASSIFICATION	$non-nls-<n>$
WITHOUT_CLASSIFICATION	$non-nls-<n>$
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.undo.undoableaction#isenabled()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#paint(java.awt.graphics)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.ui.popupgenerator#getpopupactions(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	calling connect() will add the edge to the graphmodel and any layerpersectives on that graphmodel will get a edgeadded event and will add an appropriate figedge (determined by the graphedgerenderer).
WITHOUT_CLASSIFICATION	user made a false start
WITHOUT_CLASSIFICATION	so the target is a massociationrole
WITHOUT_CLASSIFICATION	mvw this is not the correct way but it allows connecting a commentedge to it! see e.g. actionaddnote for the correct way. testcase 1. select the message. 2. click the comment tool.
WITHOUT_CLASSIFICATION	end class actionaddmessage
WITHOUT_CLASSIFICATION	let's use groups to construct the different text sections at the association
WITHOUT_CLASSIFICATION	no further listeners required in this case - the rest is handled by the notationprovider and sub-figs.
WITHOUT_CLASSIFICATION	this only happens if model-change events arrive before we are completely constructed.
WITHOUT_CLASSIFICATION	x^2 + y^2 = r^2 (equation of a circle)
WITHOUT_CLASSIFICATION	max distance is set at 100 pixels (rsquared = 100^2)
WITHOUT_CLASSIFICATION	east
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#removefromdiagram()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed( java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	end class figassociation
WITHOUT_CLASSIFICATION	note that "multiplicity" is what is the notation is listening for in uml1.4 "uppervalue" are listened to in uml2. it is not currently why it is not required to register for "lowervalue" also.
WITHOUT_CLASSIFICATION	no need to listen to these property changes - the notationprovider takes care of this.
WITHOUT_CLASSIFICATION	no need to listen to these property changes - the notationprovider takes care of this.
WITHOUT_CLASSIFICATION	new string[] {"name" "visibility" "stereotype"}
WITHOUT_CLASSIFICATION	new string[] {"name" "visibility" "stereotype"}
WITHOUT_CLASSIFICATION	these are a list of arrow types.
WITHOUT_CLASSIFICATION	added to the arrow type for navigable
WITHOUT_CLASSIFICATION	finished editing. parse the text that was edited. only the role is editable hence
WITHOUT_CLASSIFICATION	figedge.showhelp(role.getparsinghelp()) role.settext()
WITHOUT_CLASSIFICATION	pass everything else to superclass
WITHOUT_CLASSIFICATION	end class actionnavigability
WITHOUT_CLASSIFICATION	nothing yet. later maybe something like
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	putnotationargument("showassociationname" getsettings().isshowassociationnames())
WITHOUT_CLASSIFICATION	the text the user has filled in the textfield is first checked to see if it's a valid multiplicity. if so then that is the multiplicity to be set. if not the input is rejected.
WITHOUT_CLASSIFICATION	fonts and colors should get updated automatically for contained figs
WITHOUT_CLASSIFICATION	there is none
WITHOUT_CLASSIFICATION	only initialized to prevent warning
WITHOUT_CLASSIFICATION	not supported for this target
WITHOUT_CLASSIFICATION	make space for the clarifier margin between text and border
WITHOUT_CLASSIFICATION	this next line presumes that the 1st fig with this owner is the previous port - and consequently nullifies the owner of this 1st fig.
WITHOUT_CLASSIFICATION	add a listener for changes to any property
WITHOUT_CLASSIFICATION	check if multiple items are selected
WITHOUT_CLASSIFICATION	show
WITHOUT_CLASSIFICATION	popupaddoffset should be equal to the number of items added here
WITHOUT_CLASSIFICATION	todo the following is carried over from setowner but probably isn't needed renderingchanged() it does the following (add as needed) updatenametext() updatestereotypetext() updatestereotypeicon() updatebounds() damage()
WITHOUT_CLASSIFICATION	be careful here since subclasses could have overridden this with the assumption that it wouldn't be called before the constructors finished
WITHOUT_CLASSIFICATION	todo mvw i think this has to be clone.namefig = (figsinglelinetext) clonefig but have not the means to investigate since this code is not yet used. enable the menu-items for copy/paste to test btw in some other fignodemodelelement classes i see the same mistake.
WITHOUT_CLASSIFICATION	this rectangle marks the whole modelelement figure everything is inside it
WITHOUT_CLASSIFICATION	clone this figure. after the base clone method has been called determine which child figs of the clone represent the name stereotype and port. <p> todo enclosedfigs encloser and eventsenders may also need to be cloned. @see java.lang.object#clone() @return the cloned figure
WITHOUT_CLASSIFICATION	idem here clone.stereotypefig = (figstereotypesgroup) clonefig
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getenclosingfig()
WITHOUT_CLASSIFICATION	update any text colors fonts etc.
WITHOUT_CLASSIFICATION	parse the text that was edited
WITHOUT_CLASSIFICATION	add stereotype view submenu
WITHOUT_CLASSIFICATION	the node's been placed on the diagram
WITHOUT_CLASSIFICATION	add stereotypes submenu
WITHOUT_CLASSIFICATION	set the namespace of the enclosed model element to the namespace of the encloser.
WITHOUT_CLASSIFICATION	find all elementresidences between the class and the component
WITHOUT_CLASSIFICATION	there was no elementresidence yet so let's create one
WITHOUT_CLASSIFICATION	the node's been placed within some fig
WITHOUT_CLASSIFICATION	there were 2 elementresidences .. strange case.
WITHOUT_CLASSIFICATION	there is already a correct elementresidence
WITHOUT_CLASSIFICATION	the owner is already linked to the component
WITHOUT_CLASSIFICATION	we are getting events we don't want. filter them out.
WITHOUT_CLASSIFICATION	only update the bounds if they change
WITHOUT_CLASSIFICATION	we handle and consume editing events
WITHOUT_CLASSIFICATION	resize the fignode to accommodate the new text
WITHOUT_CLASSIFICATION	if the source of the event is an uml object e.g. the owner of this fig (but not always only the owner is shown e.g. for a class also its attributes are shown) then the uml model has been changed.
WITHOUT_CLASSIFICATION	todo should this not be an assert?
WITHOUT_CLASSIFICATION	west
WITHOUT_CLASSIFICATION	if the user double clicks on any part of this fignode pass it down to one of the internal figs. this allows the user to initiate direct text editing. @see java.awt.event.mouselistener#mouseclicked(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	south
WITHOUT_CLASSIFICATION	event handlers - mouselistener implementation
WITHOUT_CLASSIFICATION	convert null to empty string and clear help message
WITHOUT_CLASSIFICATION	it is done
WITHOUT_CLASSIFICATION	this enables direct text editing for sub figs of a figgroup object
WITHOUT_CLASSIFICATION	either layer or owner was null
WITHOUT_CLASSIFICATION	default is to do nothing
WITHOUT_CLASSIFICATION	default is to do nothing
WITHOUT_CLASSIFICATION	default is to do nothing
WITHOUT_CLASSIFICATION	default is to do nothing
WITHOUT_CLASSIFICATION	this test needed for a figpool
WITHOUT_CLASSIFICATION	get model listeners removed
WITHOUT_CLASSIFICATION	is used as instancespecification see umldeploymentdiagram
WITHOUT_CLASSIFICATION	todo what about objectnode? return org.eclipse.uml2.uml.objectnode.class
WITHOUT_CLASSIFICATION	@see javax.swing.action#isenabled()
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(actionevent)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	todo state & vertex are independent classes in uml 2.1
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	only initialized to prevent warning
WITHOUT_CLASSIFICATION	not supported for this target
WITHOUT_CLASSIFICATION	internal methods
WITHOUT_CLASSIFICATION	todo assert modelelement != null???
WITHOUT_CLASSIFICATION	default for name and stereotype is no border
WITHOUT_CLASSIFICATION	override fignode implementation to keep setowner from getting called.
WITHOUT_CLASSIFICATION	todo use per-project undo manager not global
WITHOUT_CLASSIFICATION	todo use per-project undo manager not global
WITHOUT_CLASSIFICATION	todo use per-project undo manager not global
WITHOUT_CLASSIFICATION	todo use per-project undo manager not global
WITHOUT_CLASSIFICATION	use diagraminterface to add classes to diagram
WITHOUT_CLASSIFICATION	actionaddallclassesfrommodel
WITHOUT_CLASSIFICATION	we have an edge (the uml modelelement!)
WITHOUT_CLASSIFICATION	situation 1
WITHOUT_CLASSIFICATION	@see javax.swing.action#isenabled()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.figedge#setfig(org.tigris.gef.presentation.fig)
WITHOUT_CLASSIFICATION	text group to contain name & stereotype
WITHOUT_CLASSIFICATION	computeroute() this recomputes the route if you reload the diagram.
WITHOUT_CLASSIFICATION	in case someone turns it on
WITHOUT_CLASSIFICATION	do not allow fill to change. we should see through the text to the color of the main fig background.
WITHOUT_CLASSIFICATION	now force minimum dimensions for the text
WITHOUT_CLASSIFICATION	now add the areas around the text to return the complete size
WITHOUT_CLASSIFICATION	calculate the source and dest figs for to self assoc
WITHOUT_CLASSIFICATION	reset the pointindex
WITHOUT_CLASSIFICATION	check pre-conds
WITHOUT_CLASSIFICATION	set-up
WITHOUT_CLASSIFICATION	the fig that was under the mouse when it was released
WITHOUT_CLASSIFICATION	make a nice little target area
WITHOUT_CLASSIFICATION	and find the fig
WITHOUT_CLASSIFICATION	last is the top fig.
WITHOUT_CLASSIFICATION	check intermediate post-condition.
WITHOUT_CLASSIFICATION	delegate the re-routing to graphmodels.
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinecolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinecolor()
WITHOUT_CLASSIFICATION	_x = x _y = y _w = w _h = h
WITHOUT_CLASSIFICATION	add figs to the fignode in back-to-front order
WITHOUT_CLASSIFICATION	set it to an invalid number by default to make sure it is set correctly.
WITHOUT_CLASSIFICATION	figpoly.setfillcolor(col)
WITHOUT_CLASSIFICATION	figclone._polygon = (polygon) _polygon.clone()
WITHOUT_CLASSIFICATION	north
WITHOUT_CLASSIFICATION	do nothing until code is reviewed
WITHOUT_CLASSIFICATION	do nothing until code is reviewed
WITHOUT_CLASSIFICATION	todo do nothing until code is reviewed
WITHOUT_CLASSIFICATION	message
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see javax.swing.action#isenabled()
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	crazy numbering scheme at work here. here's how the handle numbers are laid out. values 0-7 are defined by gef and go left to right top to bottom (ie not clockwise or counterclockwise). values 10-14 zigzag north south west east southwest. if you can correctly guess where 15 will go you should buy a lottery ticket immediately. <pre> 10 0-------1-------2 | | 12 3 4 13 | | 14 5-------6-------7 11 </pre>
WITHOUT_CLASSIFICATION	classifierrole classifierrole
WITHOUT_CLASSIFICATION	simulate a press of the mouse above the calculated point
WITHOUT_CLASSIFICATION	calculate the drop location and place every n-th element at an offset proportional to n.
WITHOUT_CLASSIFICATION	super implementation found a hit
WITHOUT_CLASSIFICATION	take canvas scrolling into account. the implementation below does place the element correctly when the canvas has been scrolled.
WITHOUT_CLASSIFICATION	simulate a release of the mouse
WITHOUT_CLASSIFICATION	overridden in order to implement pathcompartmentcontainer.
WITHOUT_CLASSIFICATION	do nothing by default
WITHOUT_CLASSIFICATION	don't allow drag outside of bounds of diagram
WITHOUT_CLASSIFICATION	overridden in order to implement pathcompartmentcontainer.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#paint(java.awt.graphics)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#calcbounds()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#removefromdiagram()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#deletefrommodel()
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mousepressed(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	if the user has selected modeplace either by a diagram tool or addtodiagram then we don't want to show the clarifiers.
WITHOUT_CLASSIFICATION	if the user has selected modeplace either by a diagram tool or addtodiagram then we don't want to show the toolbelt items.
WITHOUT_CLASSIFICATION	remember what handle was clicked for the case where the drag is released over empty space
WITHOUT_CLASSIFICATION	transparent cyan
WITHOUT_CLASSIFICATION	yellow
WITHOUT_CLASSIFICATION	translucent green
WITHOUT_CLASSIFICATION	super(modecreatepolyedge.class "edgeclass" model.getmetatypes().getassociation() name)
WITHOUT_CLASSIFICATION	set this to true on to enable debugging figs
WITHOUT_CLASSIFICATION	anchor position
WITHOUT_CLASSIFICATION	the enumerationliteral uses a dedicated notation that supports parsing "name1name2name3" and stereotypes. also supports deleting a literal by erasing text.
WITHOUT_CLASSIFICATION	todo the uml does not seem to define this name. or is it?
WITHOUT_CLASSIFICATION	the serialversionuid (generated by eclipse)
WITHOUT_CLASSIFICATION	uml spec for generalizations doesn't call for name
WITHOUT_CLASSIFICATION	name & stereotypes get updated by superclass
WITHOUT_CLASSIFICATION	update the discriminator if it changed
WITHOUT_CLASSIFICATION	show it
WITHOUT_CLASSIFICATION	fig.calcbounds()
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseentered(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	we only take the filename not the whole system path
WITHOUT_CLASSIFICATION	_x = x _y = y _w = w _h = h
WITHOUT_CLASSIFICATION	add figs to the fignode in back-to-front order
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	event handlers - mouselistener implementation
WITHOUT_CLASSIFICATION	the following does not seem to work - centered the fig instead. getnamefig().setjustificationbyname("center")
WITHOUT_CLASSIFICATION	get the widest of all textfigs calculate the total height
WITHOUT_CLASSIFICATION	create the new figassociation edge to replace the node
WITHOUT_CLASSIFICATION	center the namefig since center justification does not seem to work.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	do nothing this rect will always be transparent
WITHOUT_CLASSIFICATION	do nothing this rect will always be transparent
WITHOUT_CLASSIFICATION	@see java.beans.vetoablechangelistener#vetoablechange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	update any text colors fonts etc.
WITHOUT_CLASSIFICATION	update the relative sizes and positions of internel figs
WITHOUT_CLASSIFICATION	popupaddoffset should be equal to the number of items added here
WITHOUT_CLASSIFICATION	add stereotypes submenu
WITHOUT_CLASSIFICATION	we handle and consume editing events
WITHOUT_CLASSIFICATION	detach any non-associationend edges (such as comment edges) already attached before this association node is removed. they'll later be re-attached to the new figassociation
WITHOUT_CLASSIFICATION	now we can remove ourself (which will also remove the attached association ends edges)
WITHOUT_CLASSIFICATION	add the non-associationend edges (such as comment edges) that were originally attached to this and attach them to the new figassociation and make sure they are positioned correctly.
WITHOUT_CLASSIFICATION	list of model element listeners we've registered.
WITHOUT_CLASSIFICATION	added this part to load the extra menu content
WITHOUT_CLASSIFICATION	owner related todo items
WITHOUT_CLASSIFICATION	fig related todo items
WITHOUT_CLASSIFICATION	parse the text that was edited
WITHOUT_CLASSIFICATION	pass everything except editing events to superclass
WITHOUT_CLASSIFICATION	if the source of the event is an uml object then the uml model has been changed.
WITHOUT_CLASSIFICATION	the following is a possible future improvement of the modelchanged() function. michiel propose not to do this to keep architecture stable.
WITHOUT_CLASSIFICATION	default implementation is to do nothing
WITHOUT_CLASSIFICATION	default implementation is to do nothing
WITHOUT_CLASSIFICATION	todo update setting
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	we moused over an object just as it was deleted transient condition - doesn't require i18n
WITHOUT_CLASSIFICATION	todo we don't have any settings that can change per-fig currently so we can just use the default settings settings = new diagramsettings(rendersettings)
WITHOUT_CLASSIFICATION	default implementation is to do nothing
WITHOUT_CLASSIFICATION	default implementation is to do nothing
WITHOUT_CLASSIFICATION	default implementation is to do nothing
WITHOUT_CLASSIFICATION	default implementation is to do nothing
WITHOUT_CLASSIFICATION	required for mouselistener interface but we only care about clicks
WITHOUT_CLASSIFICATION	required for mouselistener interface but we only care about clicks
WITHOUT_CLASSIFICATION	required for mouselistener interface but we only care about clicks
WITHOUT_CLASSIFICATION	required for mouselistener interface but we only care about clicks
WITHOUT_CLASSIFICATION	no need to update if model element went away
WITHOUT_CLASSIFICATION	required for keylistener interface but not used
WITHOUT_CLASSIFICATION	required for keylistener interface but not used
WITHOUT_CLASSIFICATION	both ends must be defined and nodes that are on the graph already.
WITHOUT_CLASSIFICATION	internal methods
WITHOUT_CLASSIFICATION	if the edge is from a circle to a circle (e.g. between use cases) we have our own implementation overriding gef. which attempts to keep the edges perpendicular if the edge is already close to perpendicular.
WITHOUT_CLASSIFICATION	newfc = _content
WITHOUT_CLASSIFICATION	gef sets a different fig than the one that we had at construction time so we need to set its color and width
WITHOUT_CLASSIFICATION	place the edge on the layer and update the diagram
WITHOUT_CLASSIFICATION	end computeroute
WITHOUT_CLASSIFICATION	todo does this help?
WITHOUT_CLASSIFICATION	if this is not a circle to circle edge we default to let gef calculate edge route.
WITHOUT_CLASSIFICATION	? two iterations of refinement maybe should be a for-loop
WITHOUT_CLASSIFICATION	give up if the assocation ends don't have a type defined
WITHOUT_CLASSIFICATION	get the two ends of any valid edge
WITHOUT_CLASSIFICATION	only allow binary associations
WITHOUT_CLASSIFICATION	set the drop location in the case of d&d
WITHOUT_CLASSIFICATION	todo assumes public
WITHOUT_CLASSIFICATION	(melementimport)
WITHOUT_CLASSIFICATION	modifiers
WITHOUT_CLASSIFICATION	this sets the linewidth of all in the group
WITHOUT_CLASSIFICATION	namefig and stereotypefig are handled by parent.
WITHOUT_CLASSIFICATION	if the line angle is less than 3 degrees then snap the line straight
WITHOUT_CLASSIFICATION	/ methods that implement the mutablegraphmodel interface /
WITHOUT_CLASSIFICATION	a dependency potentially has many clients and suppliers. we only consider the first of each (not clear that we should really accept the case where there is more than one of either)
WITHOUT_CLASSIFICATION	add the node check that it is an actor or use case and add it to the model namespace.
WITHOUT_CLASSIFICATION	tell gef its changed
WITHOUT_CLASSIFICATION	add the element and place it in the namespace of the model
WITHOUT_CLASSIFICATION	tell gef
WITHOUT_CLASSIFICATION	suggest that actors may not connect (see javadoc comment about this).
WITHOUT_CLASSIFICATION	everything else is ok
WITHOUT_CLASSIFICATION	remove a node
WITHOUT_CLASSIFICATION	remove an edge
WITHOUT_CLASSIFICATION	something was added - nothing for us to worry about
WITHOUT_CLASSIFICATION	invoke the parent constructor first
WITHOUT_CLASSIFICATION	invoke the parent refresh first
WITHOUT_CLASSIFICATION	end class stylepanelfigusecase
WITHOUT_CLASSIFICATION	initialize any other figs here
WITHOUT_CLASSIFICATION	only the head should be filled (not the text)
WITHOUT_CLASSIFICATION	accumulate a bounding box for all the figs in the group.
WITHOUT_CLASSIFICATION	name updating
WITHOUT_CLASSIFICATION	text fig to hold the <<include>> label
WITHOUT_CLASSIFICATION	the <<include>> label. it's not a true stereotype so don't use the stereotype support
WITHOUT_CLASSIFICATION	try some action errors
WITHOUT_CLASSIFICATION	add figs to the fignode in back-to-front order
WITHOUT_CLASSIFICATION	set the drop location in the case of d&d
WITHOUT_CLASSIFICATION	check if multiple items are selected
WITHOUT_CLASSIFICATION	make all the parts match the main fig
WITHOUT_CLASSIFICATION	if the element import is in the old owned it means it must have been removed. make sure the associated model element is removed.
WITHOUT_CLASSIFICATION	by default we don't show the attribute check box. mark this object as a listener for the check box.
WITHOUT_CLASSIFICATION	these are the positions of child figs inside this fig they must be added in the constructor in this order. for now the name must not be last as this would force zero width lines (until gef is fixed)
WITHOUT_CLASSIFICATION	add figs to the fignode in back-to-front order put this rectangle behind the rest so it goes first
WITHOUT_CLASSIFICATION	make the line dashed
WITHOUT_CLASSIFICATION	add an arrow with an open arrow head
WITHOUT_CLASSIFICATION	make the edge go between nearest points
WITHOUT_CLASSIFICATION	create a new version of the relevant fig
WITHOUT_CLASSIFICATION	the nodes at the two ends
WITHOUT_CLASSIFICATION	the figs for the two end nodes
WITHOUT_CLASSIFICATION	link the new include relationship in to the ends
WITHOUT_CLASSIFICATION	link the new dependency in to the ends
WITHOUT_CLASSIFICATION	side effect this creates the fig
WITHOUT_CLASSIFICATION	a use case has an external separator. external means external to the compartment box. this horizontal line sticks out of the box and touches the ellipse edge.
WITHOUT_CLASSIFICATION	by default do not show extension points
WITHOUT_CLASSIFICATION	use arbitrary dimensions for now.
WITHOUT_CLASSIFICATION	get the parent vector first
WITHOUT_CLASSIFICATION	formula for a is described in the overall class description.
WITHOUT_CLASSIFICATION	for an ellipse we can put the box in the middle
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#paint(java.awt.graphics)
WITHOUT_CLASSIFICATION	make the edge go between nearest points
WITHOUT_CLASSIFICATION	add menu to add an extension point or note. placed one before last so the "properties" entry is always last.
WITHOUT_CLASSIFICATION	where there is more than one supplier or client take the first element in each case. there really ought to be a check that there are some here for safety.
WITHOUT_CLASSIFICATION	modifier menu. placed one before last so the "properties" entry is always last.
WITHOUT_CLASSIFICATION	work out the radii of the ellipse a and b. the top right corner of the ellipse (cartesian coordinates centered on the origin) will be at (xy)
WITHOUT_CLASSIFICATION	result as integers rounded up. we ensure that the radii are integers for convenience.
WITHOUT_CLASSIFICATION	use the code from the figcircle not the one from fig.
WITHOUT_CLASSIFICATION	let's register for events from all modelelements that change the name or body text
WITHOUT_CLASSIFICATION	register for name changes added extensionpoints and abstract makes the text italic. all figs need to listen to "remove" too
WITHOUT_CLASSIFICATION	register for extension points
WITHOUT_CLASSIFICATION	set bounds will be called from our superclass constructor before our constructor has run so make sure this gets set up if needed.
WITHOUT_CLASSIFICATION	set up figtext to hold the condition.
WITHOUT_CLASSIFICATION	join all into a group
WITHOUT_CLASSIFICATION	uml spec for extend doesn't call for name nor stereotype
WITHOUT_CLASSIFICATION	make sure the line is dashed
WITHOUT_CLASSIFICATION	set up the property panels for use case diagrams
WITHOUT_CLASSIFICATION	actions specific to the use case diagram toolbar
WITHOUT_CLASSIFICATION	the renderer should be a singleton
WITHOUT_CLASSIFICATION	allow all packages and classifiers..
WITHOUT_CLASSIFICATION	try the predecessors
WITHOUT_CLASSIFICATION	if location is non-null convert to a rectangle that we can use
WITHOUT_CLASSIFICATION	todo this is using the default platform character encoding specifying an encoding will produce more predictable results
WITHOUT_CLASSIFICATION	the <<extend>> label. it's not a true stereotype so don't use the stereotype support int y = getnamefig().getbounds().height
WITHOUT_CLASSIFICATION	place in the middle of the line and ensure the line is dashed. add an arrow with an open arrow head. remember that for an extends relationship the arrow points to the base use case but because of the way we draw it that is still the destination end.
WITHOUT_CLASSIFICATION	let the group recalculate its bounds and then tell gef we've finished.
WITHOUT_CLASSIFICATION	we accept a package but not a model or a subsystem.
WITHOUT_CLASSIFICATION	if we do not exclude a model here then dropping the model on a usecase diagram causes a package to be drawn.
WITHOUT_CLASSIFICATION	empty list
WITHOUT_CLASSIFICATION	private constructor to enforce singleton
WITHOUT_CLASSIFICATION	some convenience methods
WITHOUT_CLASSIFICATION	read until the end section is found discard generated content
WITHOUT_CLASSIFICATION	constructor. <p> todo correct? @param nodes the uml elements typically classifiers to generate. @param inmodel <code>true</code> if the path is in the model.
WITHOUT_CLASSIFICATION	class table
WITHOUT_CLASSIFICATION	select buttons
WITHOUT_CLASSIFICATION	output directory
WITHOUT_CLASSIFICATION	compile checkbox
WITHOUT_CLASSIFICATION	todo the last argument (recursive flag) should be a selectable option
WITHOUT_CLASSIFICATION	skip backup files. this is actually a workaround for the cpp generator which always creates backup files (it's a bug).
WITHOUT_CLASSIFICATION	todo should be improved so that it's recognized whether there is something selected that can actually be generated nothing selected in the diagram
WITHOUT_CLASSIFICATION	todo this is using the default platform character encoding. specifying an encoding will produce more predictable results
WITHOUT_CLASSIFICATION	todo get saved default directory outputdirectorycombobox.getmodel().setselecteditem(saveddir)
WITHOUT_CLASSIFICATION	todo get default output directory from user settings project p = projectmanager.getmanager().getcurrentproject() p.getprojectsettings().setgenerationoutputdir(path)
WITHOUT_CLASSIFICATION	generate button --------------------------------------
WITHOUT_CLASSIFICATION	remove trailing /
WITHOUT_CLASSIFICATION	classify nodes by base path
WITHOUT_CLASSIFICATION	else ignore
WITHOUT_CLASSIFICATION	generate the files
WITHOUT_CLASSIFICATION	doesn't really matter what set we use.
WITHOUT_CLASSIFICATION	show filechooser to select outputdirectory
WITHOUT_CLASSIFICATION	end class classgenerationdialog
WITHOUT_CLASSIFICATION	end class tablemodelclasschecks
WITHOUT_CLASSIFICATION	try changing the direction of m7
WITHOUT_CLASSIFICATION	private constructor to enforce singleton
WITHOUT_CLASSIFICATION	the diagram already exists in this project. select it as the current target.
WITHOUT_CLASSIFICATION	tablemodel implementation
WITHOUT_CLASSIFICATION	argoeventpump.fireevent( new argoimporterevent(argoeventtypes.importer_added gen))
WITHOUT_CLASSIFICATION	check if this diagram already exists in the project
WITHOUT_CLASSIFICATION	otherwise create a new classdiagram for the package.
WITHOUT_CLASSIFICATION	if the classifier is not in the current diagram add it
WITHOUT_CLASSIFICATION	the following calls are order dependent. not sure why but the layer add must come before the model add or we'll end up with duplicate figures in the diagram. - tfm
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	the class is in the diagram so we are on a second pass find the fig for this class can update its visible state.
WITHOUT_CLASSIFICATION	add edges for a 2-pass r.e. process we might have already added the class but not its edges
WITHOUT_CLASSIFICATION	"java" is the default module for historical reasons but it's not required to be there
WITHOUT_CLASSIFICATION	the previous line helps but we better check again
WITHOUT_CLASSIFICATION	not a suffixfilter selected so we take all
WITHOUT_CLASSIFICATION	filter out all unchanged files
WITHOUT_CLASSIFICATION	set the lastmodified value
WITHOUT_CLASSIFICATION	return arrays.copyof(selectedfiles selectedfiles.length)
WITHOUT_CLASSIFICATION	iss.setvalue(countfiles + (i + 1) / 10)
WITHOUT_CLASSIFICATION	roughly equivalent to and derived from old import.dofile()
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.jfilechooser#approveselection()
WITHOUT_CLASSIFICATION	@see javax.swing.jfilechooser#cancelselection()
WITHOUT_CLASSIFICATION	new style importers don't create diagrams so we'll do it based on the list of newelements that they created
WITHOUT_CLASSIFICATION	do layout even if problems occurred during import
WITHOUT_CLASSIFICATION	add messages from caught exceptions
WITHOUT_CLASSIFICATION	select the correct diagram (implicitly creates it)
WITHOUT_CLASSIFICATION	add the element to the diagram
WITHOUT_CLASSIFICATION	print an exception trace to a string buffer
WITHOUT_CLASSIFICATION	todo get the list of extended settings from the current language importer and add those too
WITHOUT_CLASSIFICATION	level 0 import detail
WITHOUT_CLASSIFICATION	level 1 import detail
WITHOUT_CLASSIFICATION	level 2 import detail
WITHOUT_CLASSIFICATION	build the configpanel
WITHOUT_CLASSIFICATION	de-selects the fig minimising & layout if we are not creating diagrams
WITHOUT_CLASSIFICATION	select the level of import 0 - classifiers only 1 - classifiers plus feature specifications 2 - full import feature detail
WITHOUT_CLASSIFICATION	cp1252 is often the default but windows-1252 is the name listed by charset.availablecharsets
WITHOUT_CLASSIFICATION	get the extension panel for the configuration settings.
WITHOUT_CLASSIFICATION	explorereventadaptor.getinstance().structurechanged() projectbrowser.getinstance().getstatusbar().showprogress(0)
WITHOUT_CLASSIFICATION	create chooser for objects we are to import. old style modules get to provide their own (although i don't believe any of them do) while new style modules get the a chooser provided by us (which matches what the abstract class fileimportsupport used to provide).
WITHOUT_CLASSIFICATION	this is because of the (senseless?) "all files" filefilter
WITHOUT_CLASSIFICATION	parsing file x of z.
WITHOUT_CLASSIFICATION	progress bar
WITHOUT_CLASSIFICATION	for some reason this alleged directory is a single file this could be that there is some confusion or just the normal that a single file was selected and is supposed to be imported.
WITHOUT_CLASSIFICATION	get the contents of the directory
WITHOUT_CLASSIFICATION	the following test can cause trouble with links because links are accepted as directories even if they link files. links could also result in infinite loops. for this reason we don't do this traversing recursively.
WITHOUT_CLASSIFICATION	if this file is a directory
WITHOUT_CLASSIFICATION	todo add filename ?
WITHOUT_CLASSIFICATION	can't remove the last file
WITHOUT_CLASSIFICATION	can't remove from existing one so create new one.
WITHOUT_CLASSIFICATION	error/warning messagearea
WITHOUT_CLASSIFICATION	gbc.gridheight = 10
WITHOUT_CLASSIFICATION	cancel/close button
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	the introducing label
WITHOUT_CLASSIFICATION	user closing the progress window is interpreted as cancel request
WITHOUT_CLASSIFICATION	panel for controls
WITHOUT_CLASSIFICATION	this method can be called only if there's a valid selection so go ahead and remove whatever's selected.
WITHOUT_CLASSIFICATION	nothings left disable firing.
WITHOUT_CLASSIFICATION	select an index.
WITHOUT_CLASSIFICATION	removed item in last position
WITHOUT_CLASSIFICATION	just quit
WITHOUT_CLASSIFICATION	the text box containing the problem messages
WITHOUT_CLASSIFICATION	continue and abort buttons
WITHOUT_CLASSIFICATION	listeners
WITHOUT_CLASSIFICATION	stores the action command into the umlplaintextdocument class which is also used for setproperty and getproperty
WITHOUT_CLASSIFICATION	todo this seems to be called at startup only so no check so far
WITHOUT_CLASSIFICATION	add an invisible button to be used when everything is off
WITHOUT_CLASSIFICATION	| removed to workaround problems with autosplit ocleditor.optionmask_autosplit
WITHOUT_CLASSIFICATION	tabmodeltarget interface methods
WITHOUT_CLASSIFICATION	@see java.awt.event.componentlistener#componentshown(java.awt.event.componentevent)
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	update our model with our saved target
WITHOUT_CLASSIFICATION	there is no need to test if classes is empty because the shouldbeenabled mechanism blanks out the possibility to choose this alternative in this case.
WITHOUT_CLASSIFICATION	list classes = getcandidates() return classes.size() > 0
WITHOUT_CLASSIFICATION	our first button is invisible. selecting it deselects all visible buttons.
WITHOUT_CLASSIFICATION	set editor's model
WITHOUT_CLASSIFICATION	check ocl parsing constraints
WITHOUT_CLASSIFICATION	do not create a constraint
WITHOUT_CLASSIFICATION	parse and check specified constraint.
WITHOUT_CLASSIFICATION	ignored highly unlikely and what would we do anyway? log it
WITHOUT_CLASSIFICATION	split constraint body if user wants us to
WITHOUT_CLASSIFICATION	the constraint _must_ be owned by a namespace
WITHOUT_CLASSIFICATION	the constraint _must_ be owned by a namespace
WITHOUT_CLASSIFICATION	store constraint body
WITHOUT_CLASSIFICATION	new constraint first time setdata is called
WITHOUT_CLASSIFICATION	a runtime exception that occurs when some internal test fails
WITHOUT_CLASSIFICATION	check name for consistency with spec
WITHOUT_CLASSIFICATION	set name
WITHOUT_CLASSIFICATION	also set name in constraint body -- added 03/14/2001
WITHOUT_CLASSIFICATION	replace name
WITHOUT_CLASSIFICATION	ok so that didn't work out just ignore any problems and don't set the name in the constraint body better had log it.
WITHOUT_CLASSIFICATION	todo why is this ignored? - tfm - 20070110
WITHOUT_CLASSIFICATION	try predecessors
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	cmd.setobjects(run.getparams().get(0))
WITHOUT_CLASSIFICATION	@see java.awt.event.componentlistener#componenthidden(java.awt.event.componentevent)
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event
WITHOUT_CLASSIFICATION	we have no model event listeners so no need to do anything
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	do nothing by default.
WITHOUT_CLASSIFICATION	do nothing by default.
WITHOUT_CLASSIFICATION	todo i18n don't use the empty string for this or it won't show in the list
WITHOUT_CLASSIFICATION	it would be better if we didn't need the container to get the target. this constructor can have zero parameters as soon as we improve targetchanged.
WITHOUT_CLASSIFICATION	todo here too?
WITHOUT_CLASSIFICATION	todo here too?
WITHOUT_CLASSIFICATION	this should not be necessary but let's be sure
WITHOUT_CLASSIFICATION	end of interval
WITHOUT_CLASSIFICATION	start of interval
WITHOUT_CLASSIFICATION	remove old listeners
WITHOUT_CLASSIFICATION	in middle of interval
WITHOUT_CLASSIFICATION	allow listening to other elements
WITHOUT_CLASSIFICATION	allow listening to other elements
WITHOUT_CLASSIFICATION	add new listeners
WITHOUT_CLASSIFICATION	mvw this can never happen isn't it?
WITHOUT_CLASSIFICATION	makes sure we can select 'none'
WITHOUT_CLASSIFICATION	todo for large lists this is doing a linear search of literally thousands of elements
WITHOUT_CLASSIFICATION	don't try to test this if we're removing the element
WITHOUT_CLASSIFICATION	we tried to remove a value
WITHOUT_CLASSIFICATION	object[] args = { newvalue }
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see javax.swing.abstractlistmodel#fireintervalremoved( object int int)
WITHOUT_CLASSIFICATION	@see targetlistener#targetadded(targetevent)
WITHOUT_CLASSIFICATION	@see targetlistener#targetremoved(targetevent)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	if one or the other is null or they are not equal
WITHOUT_CLASSIFICATION	do not set buildingmodel = false here otherwise the action for selection is performed.
WITHOUT_CLASSIFICATION	catch callers attempting to use one without other
WITHOUT_CLASSIFICATION	as long as they aren't both null (or a really rare identical string pointer)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	todo this seems to be called at startup only so no check so far
WITHOUT_CLASSIFICATION	may only occur as child of the model or in a package
WITHOUT_CLASSIFICATION	to rupdate the diagram set the stimulus name again todo explain that this really works also in the mdr case. linus is a sceptic.
WITHOUT_CLASSIFICATION	if event source is unknown or the event source is the container's target then update the field
WITHOUT_CLASSIFICATION	check the possibility that this is a promiscuous event
WITHOUT_CLASSIFICATION	a deployment diagram shows something about the whole model according to the uml spec but we rely on the caller to enforce that if desired.
WITHOUT_CLASSIFICATION	a deployment diagram shows something about the whole model according to the uml spec
WITHOUT_CLASSIFICATION	for a deployment diagram not just any namespace will do - we need a package.
WITHOUT_CLASSIFICATION	ns is a namespace but not a package
WITHOUT_CLASSIFICATION	ommit root package name it's the model's root
WITHOUT_CLASSIFICATION	there is a selection
WITHOUT_CLASSIFICATION	end class actioncopy
WITHOUT_CLASSIFICATION	add a predicate for argouml's default capabilities
WITHOUT_CLASSIFICATION	parser.parseandupdate(modelobject s)
WITHOUT_CLASSIFICATION	remove from the model
WITHOUT_CLASSIFICATION	it is a uml element that is not a modelelement
WITHOUT_CLASSIFICATION	lets see if this diagram has some figs on it
WITHOUT_CLASSIFICATION	no content of diagram
WITHOUT_CLASSIFICATION	we can delete figs like figrects now too
WITHOUT_CLASSIFICATION	todo if a namespace with sub-classdiagrams is deleted then { confirmstr += translator.localize( "optionpane.remove-from-model-will-remove-subdiagram") doask = true }
WITHOUT_CLASSIFICATION	we cannot delete the last diagram
WITHOUT_CLASSIFICATION	we cannot delete the model itself
WITHOUT_CLASSIFICATION	static variables
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see javax.swing.text.document#remove(int int)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	argodiagram activediagram = diagramutils.getactivediagram() return (activediagram instanceof umlclassdiagram)
WITHOUT_CLASSIFICATION	todo probably really want to cancel editing ((figtexteditor) focusowner).cancelediting()
WITHOUT_CLASSIFICATION	usage of other sureremove method is legacy. they should be integrated.
WITHOUT_CLASSIFICATION	the diagram contains figs so lets ask the user if he/she is sure
WITHOUT_CLASSIFICATION	todo this catch block needs to be narrower and do something with the caught exception - tfm 20071120 ignore
WITHOUT_CLASSIFICATION	todo all of the following can be broken if we have multiple targets selected
WITHOUT_CLASSIFICATION	ok button ------------------------------------------
WITHOUT_CLASSIFICATION	delete button
WITHOUT_CLASSIFICATION	confirm with the user that he wants to delete presenting the list of settings to delete
WITHOUT_CLASSIFICATION	procede with the deletion in the model
WITHOUT_CLASSIFICATION	disable the button since no row will be selected now
WITHOUT_CLASSIFICATION	end class sourcepathdialog
WITHOUT_CLASSIFICATION	mutators hold write lock & will deadlock if use is not thread safe
WITHOUT_CLASSIFICATION	mutators hold write lock & will deadlock if use is not thread-safe
WITHOUT_CLASSIFICATION	the user cancelled!
WITHOUT_CLASSIFICATION	custom button text
WITHOUT_CLASSIFICATION	0
WITHOUT_CLASSIFICATION	1
WITHOUT_CLASSIFICATION	2
WITHOUT_CLASSIFICATION	3
WITHOUT_CLASSIFICATION	try some predecessor errors
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see javax.swing.text.document#remove(int int)
WITHOUT_CLASSIFICATION	try adding the extension from the chosen filter.
WITHOUT_CLASSIFICATION	adding project files icon
WITHOUT_CLASSIFICATION	main methods
WITHOUT_CLASSIFICATION	do not use a custom icon the titles of buttons default button title
WITHOUT_CLASSIFICATION	note this may be called from a different thread so we need to be careful of the threading restrictions imposed by abstractdocument for mutators to be sure we don't deadlock.
WITHOUT_CLASSIFICATION	end class actionopenproject
WITHOUT_CLASSIFICATION	todo see if the new target has a tv that we can proxy
WITHOUT_CLASSIFICATION	try adding the default extension.
WITHOUT_CLASSIFICATION	log.debug("is a base or multiplicity")
WITHOUT_CLASSIFICATION	end class actionsaveprojectas
WITHOUT_CLASSIFICATION	only need to this from super()
WITHOUT_CLASSIFICATION	--------------------------------------------------------
WITHOUT_CLASSIFICATION	----- setup similar to the super() implementation -----
WITHOUT_CLASSIFICATION	this action performs the layout and triggers a redraw of the editor pane. @see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	main methods
WITHOUT_CLASSIFICATION	main methods
WITHOUT_CLASSIFICATION	/ proxy methods for real umlmodelelementtaggedvalue /
WITHOUT_CLASSIFICATION	load of the new project just reuse of the actionopen object
WITHOUT_CLASSIFICATION	rearrange the diagram layout
WITHOUT_CLASSIFICATION	leave logging commented out by default for efficiency log.debug("determine rendering for " + value) log.debug("show icon " + showicon)
WITHOUT_CLASSIFICATION	targets ought to be uml objects or diagrams
WITHOUT_CLASSIFICATION	todo we shouldn't need this as well as the above.
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	end class tabprops
WITHOUT_CLASSIFICATION	if our map has any entries for this type it's a connection type
WITHOUT_CLASSIFICATION	get the list of valid model item pairs for the given connection type
WITHOUT_CLASSIFICATION	see if there's a pair in this list that match the given model elements
WITHOUT_CLASSIFICATION	@see targettablemodelview#gettargettablemodel()
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#changedupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#removeupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#insertupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	we tried to remove a value
WITHOUT_CLASSIFICATION	put everything together
WITHOUT_CLASSIFICATION	no title looks better
WITHOUT_CLASSIFICATION	now remove the ones already applied.
WITHOUT_CLASSIFICATION	make lists
WITHOUT_CLASSIFICATION	make buttons
WITHOUT_CLASSIFICATION	ignored this event
WITHOUT_CLASSIFICATION	make buttons layout
WITHOUT_CLASSIFICATION	make listeners
WITHOUT_CLASSIFICATION	remove the element from available list
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	@see javax.swing.action#isenabled()
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.comboboxeditor#setitem(java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.comboboxeditor#geteditorcomponent()
WITHOUT_CLASSIFICATION	@see javax.swing.comboboxeditor#addactionlistener(java.awt.event.actionlistener)
WITHOUT_CLASSIFICATION	@see javax.swing.comboboxeditor#removeactionlistener(java.awt.event.actionlistener)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	implements the source path controller. note if requested in the future this could be returned from the language modules. todo update this to use the uml 1.4 tagdefinition mechanism instead of uml 1.3 string type tag types. the tagdefinition can be made more specific so that it just applies to components with a <<sourcemodule>> stereotype or something similar. - tfm @author euluis @since 0.17.1
WITHOUT_CLASSIFICATION	end of sourcepathcontrollerimpl class definition
WITHOUT_CLASSIFICATION	sb.append(model.getfacade().getname(c))
WITHOUT_CLASSIFICATION	sb.append((string) model.getfacade().getbody(c))
WITHOUT_CLASSIFICATION	mmodelelement
WITHOUT_CLASSIFICATION	next statement is necessary to update the textfield if the selection is equal to what was allready selected
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see javax.swing.comboboxeditor#selectall()
WITHOUT_CLASSIFICATION	@see javax.swing.comboboxeditor#getitem()
WITHOUT_CLASSIFICATION	@see java.awt.event.focuslistener#focusgained(java.awt.event.focusevent)
WITHOUT_CLASSIFICATION	@see javax.swing.action#isenabled()
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	necessary to create distance between the textfield and the icon.
WITHOUT_CLASSIFICATION	make new column with labelledlayout
WITHOUT_CLASSIFICATION	comment.name text field - editing disabled
WITHOUT_CLASSIFICATION	comment.body text field - editing disabled
WITHOUT_CLASSIFICATION	since there are no buttons on this panel we have to set the size of the buttonpanel otherwise the title would not be aligned right.
WITHOUT_CLASSIFICATION	only change the background colour if it is supplied by the laf. otherwise leave look and feel to handle this itself.
WITHOUT_CLASSIFICATION	in this case the bounds are determined by the figedge
WITHOUT_CLASSIFICATION	in this case the bounds are determined by the figedge
WITHOUT_CLASSIFICATION	in this case the bounds (of the box) are determined by the figclassassociationclass
WITHOUT_CLASSIFICATION	in this case the bounds (of the box) are determined by the figclassassociationclass
WITHOUT_CLASSIFICATION	a newly created associationclass may not have all its parts created by the time we are called
WITHOUT_CLASSIFICATION	a newly created associationclass may not have all its parts created by the time we are called
WITHOUT_CLASSIFICATION	todo defer most of this work if the panel isn't visible - tfm
WITHOUT_CLASSIFICATION	@see targetlistener#targetadded(targetevent)
WITHOUT_CLASSIFICATION	@see targetlistener#targetremoved(targetevent)
WITHOUT_CLASSIFICATION	@see targetlistener#targetset(targetevent)
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	how to handle empty target lists? probably the tabprops should only show an empty pane in that case
WITHOUT_CLASSIFICATION	chooser.setselectedfile(new file(filename))
WITHOUT_CLASSIFICATION	so let's do it the hard way
WITHOUT_CLASSIFICATION	todo the following can be used when we drop java 5 support or when an imageio gif writer plugin is bundled cmd = new savegifaction2(translator.localize("action.save-gif"))
WITHOUT_CLASSIFICATION	if the diagram is empty gef won't write anything leaving us with an empty (and invalid) file. handle this case ourselves to prevent this from happening.
WITHOUT_CLASSIFICATION	anything else is handled the normal way
WITHOUT_CLASSIFICATION	create an image which will do deferred rendering of the gef diagram on demand as data is pulled from it
WITHOUT_CLASSIFICATION	action to save a diagram as a gif image in a supplied outputstream. todo this requires java 6 in its current state so don't use. @author tom morris <tfmorris@gmail.com>
WITHOUT_CLASSIFICATION	note gef's gif writer uses jeff poskanzer's gif encoder but that saves a copy of the entire image in an internal buffer before starting work defeating the whole purpose of our incremental rendering.
WITHOUT_CLASSIFICATION	java se 6 has a native gif writer but it's not in java 5. one is available in the jai-imageio library but we don't currently bundle that and at 6+ mb it seems like a heavyweight solution but i don't have time to produce a stripped down version right now - tfm httpsjai-imageio.dev.java.net/
WITHOUT_CLASSIFICATION	layerperspective layer = diagramutils.getactivediagram().getlayer()
WITHOUT_CLASSIFICATION	anything else is handled the normal way
WITHOUT_CLASSIFICATION	create an image which will do deferred rendering of the gef diagram on demand as data is pulled from it
WITHOUT_CLASSIFICATION	action to save a diagram as a gif image in a supplied outputstream. todo this requires java 6 in its current state so don't use. @author tom morris <tfmorris@gmail.com>
WITHOUT_CLASSIFICATION	we actually are computing max x & max y not width & height
WITHOUT_CLASSIFICATION	convert max x/y to width/height
WITHOUT_CLASSIFICATION	get a domimplementation
WITHOUT_CLASSIFICATION	create an instance of org.w3c.dom.document
WITHOUT_CLASSIFICATION	create an instance of the svg generator
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#changedupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	layerperspective layer = diagramutils.getactivediagram().getlayer()
WITHOUT_CLASSIFICATION	we actually are computing max x & max y not width & height
WITHOUT_CLASSIFICATION	convert max x/y to width/height
WITHOUT_CLASSIFICATION	get a domimplementation
WITHOUT_CLASSIFICATION	create an instance of org.w3c.dom.document
WITHOUT_CLASSIFICATION	create an instance of the svg generator
WITHOUT_CLASSIFICATION	make it stretch vertically
WITHOUT_CLASSIFICATION	"org.argouml.cognitive.critics"
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getcolumncount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getcolumnname(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getcolumnclass(int)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	handle multivalued tagged value
WITHOUT_CLASSIFICATION	handle multivalued tagged value
WITHOUT_CLASSIFICATION	target has been deleted
WITHOUT_CLASSIFICATION	if the row is past the end of our current collection return an empty string so they can add a new value
WITHOUT_CLASSIFICATION	tagvalue = true
WITHOUT_CLASSIFICATION	for debugging
WITHOUT_CLASSIFICATION	return the ith element from a collection. @param collection collection to get element from @param index index of the element to be returned @return the object
WITHOUT_CLASSIFICATION	we really shouldn't add it until after it is set up but we need it to have an owner for the following method calls
WITHOUT_CLASSIFICATION	since we aren't sure of ordering fire event for whole table
WITHOUT_CLASSIFICATION	no way we have to give up
WITHOUT_CLASSIFICATION	do nothing during the deprecation period then it can be removed.
WITHOUT_CLASSIFICATION	@see javax.swing.defaultlistmodel#contains(java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.defaultlistmodel#addelement(java.lang.object)
WITHOUT_CLASSIFICATION	@see targetlistener#targetadded(targetevent)
WITHOUT_CLASSIFICATION	@see targetlistener#targetremoved(targetevent)
WITHOUT_CLASSIFICATION	@see targetlistener#targetset(targetevent)
WITHOUT_CLASSIFICATION	@see javax.swing.abstractlistmodel#firecontentschanged( object int int)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	do nothing by default.
WITHOUT_CLASSIFICATION	do nothing by default.
WITHOUT_CLASSIFICATION	allow listening to other elements
WITHOUT_CLASSIFICATION	allow listening to other elements
WITHOUT_CLASSIFICATION	we tried to remove a value
WITHOUT_CLASSIFICATION	get the first editable extent (which is ok unless there is more than one editable extent)
WITHOUT_CLASSIFICATION	this can throw an exception if the target has been deleted. we don't want to try locking the repository because this is called from the event delivery thread and could cause a deadlock. instead catch the exception and leave the model empty.
WITHOUT_CLASSIFICATION	end class actionimportfromsources
WITHOUT_CLASSIFICATION	don't test changed element if it was deleted
WITHOUT_CLASSIFICATION	this is never downlighted
WITHOUT_CLASSIFICATION	only specified format are allowed.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see targetlistener#targetadded(targetevent)
WITHOUT_CLASSIFICATION	@see targetlistener#targetremoved(targetevent)
WITHOUT_CLASSIFICATION	@see targetlistener#targetset(targetevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.componentlistener#componenthidden(java.awt.event.componentevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.componentlistener#componentshown(java.awt.event.componentevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.componentlistener#componentmoved(java.awt.event.componentevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.componentlistener#componentresized(java.awt.event.componentevent)
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	add stereotypes submenu
WITHOUT_CLASSIFICATION	set up the target and its model element variant.
WITHOUT_CLASSIFICATION	set the tooltip of the arrow to open combined tools
WITHOUT_CLASSIFICATION	if the target has changed notify the third party listener if it exists and dispatch a new element event listener to ourself. otherwise dispatch a target reasserted to ourself.
WITHOUT_CLASSIFICATION	set the minimum and preferred equal so that the size is fixed for the labelledlayout.
WITHOUT_CLASSIFICATION	this will add a new modelelement event listener after update is complete
WITHOUT_CLASSIFICATION	we presume that the container equals this proppanel.
WITHOUT_CLASSIFICATION	refresh the target for all our children which weren't getting while not visible
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(actionevent)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	this works - we do get an event - and now refresh the ui
WITHOUT_CLASSIFICATION	to manage the case there are no label/component pairs but just one component
WITHOUT_CLASSIFICATION	if the component is a jlabel which has another component assigned then position/size the label and calculate the size of the registered component
WITHOUT_CLASSIFICATION	assumes the next child is the labelled component
WITHOUT_CLASSIFICATION	make sure the component width isn't any greater than its maximum allowed width
WITHOUT_CLASSIFICATION	if the child component is resizable then we don't know it's actual size yet. it will be calculated later as a proportion of the available left over space. for now this is flagged as zero.
WITHOUT_CLASSIFICATION	if a preferred height is not given or is the same as the minimum height then fix the height of this row.
WITHOUT_CLASSIFICATION	project p = projectmanager.getmanager().getcurrentproject() collection elems = modelmanagementhelper.gethelper() .getallmodelelementsofkind(mclassifier.class)
WITHOUT_CLASSIFICATION	expressions are datatypes not independent model elements be careful not to reuse them
WITHOUT_CLASSIFICATION	allow listening to other elements removeothermodeleventlisteners(listtarget)
WITHOUT_CLASSIFICATION	setdoublebuffered(true)
WITHOUT_CLASSIFICATION	try some more complex moving
WITHOUT_CLASSIFICATION	implements backspace functionality
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.action#isenabled()
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.caretlistener#caretupdate(javax.swing.event.caretevent)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	do nothing by default.
WITHOUT_CLASSIFICATION	do nothing by default.
WITHOUT_CLASSIFICATION	allow listening to other elements
WITHOUT_CLASSIFICATION	allow listening to other elements
WITHOUT_CLASSIFICATION	we tried to remove a value
WITHOUT_CLASSIFICATION	there is a selection
WITHOUT_CLASSIFICATION	this can throw an exception if the target has been deleted. we don't want to try locking the repository because this is called from the event delivery thread and could cause a deadlock. instead catch the exception and leave the model empty.
WITHOUT_CLASSIFICATION	don't test changed element if it was deleted
WITHOUT_CLASSIFICATION	end class actioncut
WITHOUT_CLASSIFICATION	allow listening to other elements addothermodeleventlisteners(listtarget)
WITHOUT_CLASSIFICATION	if there is a selection on the clipboard
WITHOUT_CLASSIFICATION	get localised strings once only
WITHOUT_CLASSIFICATION	setting the icon
WITHOUT_CLASSIFICATION	setting the tooltip to type and name
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	static variables
WITHOUT_CLASSIFICATION	@see javax.swing.event.listselectionlistener#valuechanged(javax.swing.event.listselectionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.componentlistener#componentshown(java.awt.event.componentevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.componentlistener#componenthidden(java.awt.event.componentevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	update our model with our saved target
WITHOUT_CLASSIFICATION	stop updating model when we're not visible
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	in uml2 a td is a property of a stereotype in a profile
WITHOUT_CLASSIFICATION	only update our model if we're visible
WITHOUT_CLASSIFICATION	most likely cause of this is that someone deleted our target with the event pump turned off so we didn't get notification. nothing we can do about it now and we are changing targets anyway so just log it.
WITHOUT_CLASSIFICATION	this target is a statemachine for which no diagram exists yet so let's use it.
WITHOUT_CLASSIFICATION	end class tabtaggedvalues
WITHOUT_CLASSIFICATION	setenabled((globals.clipboard != null && !globals.clipboard.isempty()) || !issystemclipboardempty())
WITHOUT_CLASSIFICATION	end class actionpaste
WITHOUT_CLASSIFICATION	the target is a valid context.
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(actionevent)
WITHOUT_CLASSIFICATION	@see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed( java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.action#isenabled()
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	let's just build a statemachine and put it in a suitable namespace.
WITHOUT_CLASSIFICATION	follow well-formedness rule for a class [2]. determine the owning namespace for the statemachine
WITHOUT_CLASSIFICATION	upperpanel.setborder(borderfactory.createetchedborder())
WITHOUT_CLASSIFICATION	buttonbox.add(box.createrigidarea(new dimension(0 20)))
WITHOUT_CLASSIFICATION	string title = getui().getdialogtitle(this)
WITHOUT_CLASSIFICATION	test if the given namespace is a valid namespace to add the diagram to. todo this method was created to facilitate the merge of this class with actionadddiagram. @param ns the namespace to check @return returns <code>true</code> if valid.
WITHOUT_CLASSIFICATION	todo since there may be multiple top level elements in a project this should be using the default namespace (currently undefined) or something similar
WITHOUT_CLASSIFICATION	button action
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	make sure it's parseable as an number
WITHOUT_CLASSIFICATION	ignored - we just skipped inserting it in our document
WITHOUT_CLASSIFICATION	select.settext(translator.localize("action.select"))
WITHOUT_CLASSIFICATION	select.add(actionaddeventasdeferrableevent.singleton)
WITHOUT_CLASSIFICATION	newmenu.settext(translator.localize("action.new"))
WITHOUT_CLASSIFICATION	(mextend)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	main methods
WITHOUT_CLASSIFICATION	repair action for possible np after load
WITHOUT_CLASSIFICATION	(mclassifier)
WITHOUT_CLASSIFICATION	try some more errors
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	(mmodelelement)
WITHOUT_CLASSIFICATION	to be able to remove dep's later
WITHOUT_CLASSIFICATION	to be able to remove dependencies later
WITHOUT_CLASSIFICATION	addonly_command determines a changeability kind. todo removed from uml 2.x. phase out of ui - tfm - 20070529
WITHOUT_CLASSIFICATION	todo removed from uml 2.x - phase out usage - tfm 20070530
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	because we're listening for stereotypes being added and removed but we're really interested in their owned tag definitions the default implementation won't work for us
WITHOUT_CLASSIFICATION	end class actionaddattribute
WITHOUT_CLASSIFICATION	ask to be notified of any changes to tagdefinitions so that we can track new ones name changes etc
WITHOUT_CLASSIFICATION	since uml2 it's easier tds only via stereotypes
WITHOUT_CLASSIFICATION	just mark for rebuild next time since we use lazy loading
WITHOUT_CLASSIFICATION	a stereotype got applied or removed just mark for rebuild next time since we use lazy loading
WITHOUT_CLASSIFICATION	@see namespace#pushnamespaceelement(namespaceelement)
WITHOUT_CLASSIFICATION	@see java.lang.object#hashcode()
WITHOUT_CLASSIFICATION	@see org.tigris.swidgets.dialog#namebuttons()
WITHOUT_CLASSIFICATION	all strings collate before all uml elements
WITHOUT_CLASSIFICATION	all strings collate before all uml elements
WITHOUT_CLASSIFICATION	compare path of two elements in reverse order (inner to outer) using a primary strength text collator. this will collate e e � � together but not eliminate non-identical strings which collate in the same place. @return equivalent of list1.compareto(list2)
WITHOUT_CLASSIFICATION	and then by their enclosing path to fully distinguish them
WITHOUT_CLASSIFICATION	elements are collated first by name hoping for a quick solution
WITHOUT_CLASSIFICATION	keep track of first non-equal comparison to use in case the case-insensitive comparisons all end up equal
WITHOUT_CLASSIFICATION	add the action to the component
WITHOUT_CLASSIFICATION	it's illegal in uml to have multiple elements in a namespace with the same name but if it happens keep them distinct so the user has a chance of catching the error. pick an arbitrary but stable collating order. we don't call them equal because otherwise one will get eliminated from the treeset where this comparator is used.
WITHOUT_CLASSIFICATION	if the strings differed only in non-primary characteristics at some point (case accent etc) pick an arbitrary but stable collating order.
WITHOUT_CLASSIFICATION	{transient=false volatile=false}
WITHOUT_CLASSIFICATION	argo customization
WITHOUT_CLASSIFICATION	prohibit instantiation
WITHOUT_CLASSIFICATION	keyevent.isactionkey() method
WITHOUT_CLASSIFICATION	apparently this object had no getitemuid
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	apparently this object had no getuuid
WITHOUT_CLASSIFICATION	apparently it had a getitemuid but we're not allowed to call it
WITHOUT_CLASSIFICATION	apparently it had a getitemuid but we're not allowed to call it
WITHOUT_CLASSIFICATION	apparently it had a getitemuid but we're not allowed to call it
WITHOUT_CLASSIFICATION	apparently this object had no setitemuid
WITHOUT_CLASSIFICATION	apparently it had a setitemuid but we're not allowed to call it
WITHOUT_CLASSIFICATION	apparently it had a setitemuid but we're not allowed to call it
WITHOUT_CLASSIFICATION	class preloading so packages are there
WITHOUT_CLASSIFICATION	getpackage() can return null's so we have to cater for this
WITHOUT_CLASSIFICATION	make this thread interruptible if called from swingworker
WITHOUT_CLASSIFICATION	switch the value back off so that we will get notified again next time.
WITHOUT_CLASSIFICATION	ignore any nested exceptions. we don't want infinite loop.
WITHOUT_CLASSIFICATION	didn't work.
WITHOUT_CLASSIFICATION	create a proxy object around this handler that can be reflectively added as an apple applicationlistener
WITHOUT_CLASSIFICATION	likely a nosuchmethodexception or an illegalaccessexception loading/invoking eawt.application methods
WITHOUT_CLASSIFICATION	all of the applicationlistener methods are void return null regardless of what happens
WITHOUT_CLASSIFICATION	if the target method returns a boolean use that as a hint
WITHOUT_CLASSIFICATION	for eclipse setup
WITHOUT_CLASSIFICATION	for ant setup
WITHOUT_CLASSIFICATION	when running from maven
WITHOUT_CLASSIFICATION	if we're setting a handler enable the about menu item by calling com.apple.eawt.application reflectively
WITHOUT_CLASSIFICATION	if we're setting a handler enable the preferences menu item by calling com.apple.eawt.application reflectively
WITHOUT_CLASSIFICATION	override osxadapter.calltarget to send information on the file to be opened
WITHOUT_CLASSIFICATION	ignore if the directory does not exist. this error will throw when running from the ant setup.
WITHOUT_CLASSIFICATION	ignore if the directory does not exist. this error will throw when running from the eclipse setup.
WITHOUT_CLASSIFICATION	ignore if the directory does not exist. this error will throw when running from the eclipse setup.
WITHOUT_CLASSIFICATION	"org.argouml.notation.providers"fails because sub-packages fail (?) "org.argouml.notation.providers.java" "org.argouml.notation.providers.uml" "org.argouml.notation"fails because sub-packages fail (?) "org.argouml.notation.ui"
WITHOUT_CLASSIFICATION	there was a comment saying that the below has no cycles but classycle thinks there's a cycle here too so i believe there really is one - tfm 20070702 "org.argouml.uml.cognitive.critics"
WITHOUT_CLASSIFICATION	todo{"org.argouml.ui" "org.argouml.cognitive.ui"}fails due to subpackages todo{"org.argouml.cognitive" "org.argouml.cognitive.critics"}
WITHOUT_CLASSIFICATION	{"org.argouml.kernel" "org.argouml.uml.diagram.ui"}why does this fail?
WITHOUT_CLASSIFICATION	do nothing by design
WITHOUT_CLASSIFICATION	these 3 steps are only needed for the 2 cases indicated with a x below.
WITHOUT_CLASSIFICATION	obey the contract ourselves!
WITHOUT_CLASSIFICATION	register all of the event listener trackers
WITHOUT_CLASSIFICATION	remove all of the listeners
WITHOUT_CLASSIFICATION	fire all of the diagram events
WITHOUT_CLASSIFICATION	fire all of the generator events
WITHOUT_CLASSIFICATION	fire all of the help events
WITHOUT_CLASSIFICATION	fire all of the notation events
WITHOUT_CLASSIFICATION	verify all events were fired correctly
WITHOUT_CLASSIFICATION	keep track of total events fired
WITHOUT_CLASSIFICATION	keep track of which events fired
WITHOUT_CLASSIFICATION	x x
WITHOUT_CLASSIFICATION	initialize the event listener trackers which verify that all of the proper events were fired
WITHOUT_CLASSIFICATION	display events are fired on the swing event thread. we need to wait for them to be dispatched note if more display events are added to this test this one needs to be last
WITHOUT_CLASSIFICATION	notation events are fired on the swing event thread. we assume that serializing on the final call is sufficient
WITHOUT_CLASSIFICATION	counts each bit that has been fired
WITHOUT_CLASSIFICATION	resolvedcritic(string list)
WITHOUT_CLASSIFICATION	resolvedcritic(critic listset)
WITHOUT_CLASSIFICATION	resolvedcritic(critic listset boolean)
WITHOUT_CLASSIFICATION	testmc should now have an itemuid so we should be able to create without adding a new itemuid
WITHOUT_CLASSIFICATION	enabledcm isrelevant checks if the critic is enabled initialize this to true to verify isrelevant returns true
WITHOUT_CLASSIFICATION	verify isrelevant returns true
WITHOUT_CLASSIFICATION	set enabled to false and check the opposite condition
WITHOUT_CLASSIFICATION	verify isrelevant not is false
WITHOUT_CLASSIFICATION	notsnoozedcm isrelevant checks if the critic is snoozed snooze the critic to verify isrelevant returns false
WITHOUT_CLASSIFICATION	unsnooze the critic to verify the critic is not relevant
WITHOUT_CLASSIFICATION	verify isrelevant is true
WITHOUT_CLASSIFICATION	curdecisioncm isrelevant checks to see if the critic has any decisions that have a priority > 0 and less than the priority of the critic. by default the critic has no decisions so isrelevant should return false.
WITHOUT_CLASSIFICATION	verify isrelevant is still false
WITHOUT_CLASSIFICATION	isrelevant should now be true
WITHOUT_CLASSIFICATION	isrelevant should still be true
WITHOUT_CLASSIFICATION	initialize test data
WITHOUT_CLASSIFICATION	initialize the todolist
WITHOUT_CLASSIFICATION	add a todoitem
WITHOUT_CLASSIFICATION	redundantly add item again which should be ignored
WITHOUT_CLASSIFICATION	size should be 1 since addition of second item would have been ignored
WITHOUT_CLASSIFICATION	retrieve item
WITHOUT_CLASSIFICATION	remove item
WITHOUT_CLASSIFICATION	size should be 0 since item was removed
WITHOUT_CLASSIFICATION	initialize the goalmodel
WITHOUT_CLASSIFICATION	check that the model was initialized with the unspecified goal
WITHOUT_CLASSIFICATION	change priority of unspecified goal so we can verify it was updated
WITHOUT_CLASSIFICATION	first verify that the set goal priority did not add an extra goal
WITHOUT_CLASSIFICATION	check that the model correctly updates a goal's priority
WITHOUT_CLASSIFICATION	test the removal of a goal
WITHOUT_CLASSIFICATION	number of goals should now be 0
WITHOUT_CLASSIFICATION	start desiring a goal which should add a goal and bump the size to 1
WITHOUT_CLASSIFICATION	number of goals should now be 1
WITHOUT_CLASSIFICATION	stop desiring the goal which should remove it from the model
WITHOUT_CLASSIFICATION	umlsequencediagram seqdiag = new umlsequencediagram()
WITHOUT_CLASSIFICATION	initialize test data
WITHOUT_CLASSIFICATION	this test calls todolist.addelement which requires the model. we are able to get away with using the mock model.
WITHOUT_CLASSIFICATION	checkassignidtoobject(seqdiag true true)
WITHOUT_CLASSIFICATION	figedgenote has no uuid
WITHOUT_CLASSIFICATION	checkassignidtoobject(figassociationrole true true)
WITHOUT_CLASSIFICATION	checkassignidtoobject(fighistorystate true true)
WITHOUT_CLASSIFICATION	checkassignidtoobject(figstate true true)
WITHOUT_CLASSIFICATION	initialize basic parameters that are different from decision.unspec
WITHOUT_CLASSIFICATION	initialize a decision object with parameters
WITHOUT_CLASSIFICATION	initialize a decision object with parameters
WITHOUT_CLASSIFICATION	verify parameters were initialized correctly by the constructor
WITHOUT_CLASSIFICATION	set the priority to a different value
WITHOUT_CLASSIFICATION	set the priority to a different value
WITHOUT_CLASSIFICATION	verify the priority was correctly updated
WITHOUT_CLASSIFICATION	verify the priority was correctly updated
WITHOUT_CLASSIFICATION	set the name to a different value
WITHOUT_CLASSIFICATION	set the name to a different value
WITHOUT_CLASSIFICATION	verify the name property was correctly updated
WITHOUT_CLASSIFICATION	following the update the priority should be equivalent to decision.unspec
WITHOUT_CLASSIFICATION	test that properties were correctly initialized by the constructor
WITHOUT_CLASSIFICATION	initialize the checklist
WITHOUT_CLASSIFICATION	add some test data
WITHOUT_CLASSIFICATION	add some test data
WITHOUT_CLASSIFICATION	verify the size of the list
WITHOUT_CLASSIFICATION	verify the size of the list
WITHOUT_CLASSIFICATION	verify the items were correctly added
WITHOUT_CLASSIFICATION	verify the items were correctly added
WITHOUT_CLASSIFICATION	test that the category and description are correct
WITHOUT_CLASSIFICATION	create a new list to test the addall
WITHOUT_CLASSIFICATION	create a new list to test the addall
WITHOUT_CLASSIFICATION	add all of the test items from the first list
WITHOUT_CLASSIFICATION	add all of the test items from the first list
WITHOUT_CLASSIFICATION	verify the size of the new list
WITHOUT_CLASSIFICATION	verify the size of the new list
WITHOUT_CLASSIFICATION	initialize the checkliststatus
WITHOUT_CLASSIFICATION	construct a checkitem
WITHOUT_CLASSIFICATION	(1) test that the properties were correctly initialized
WITHOUT_CLASSIFICATION	reset the values to something different
WITHOUT_CLASSIFICATION	(2) construct another checkitem
WITHOUT_CLASSIFICATION	test that the properties were correctly initialized
WITHOUT_CLASSIFICATION	verify that the equivalence test works
WITHOUT_CLASSIFICATION	initialize snoozeorder
WITHOUT_CLASSIFICATION	snooze and verify its been enabled
WITHOUT_CLASSIFICATION	unsnooze and verify its been disabled
WITHOUT_CLASSIFICATION	maybe next test is going to change in future
WITHOUT_CLASSIFICATION	test with a class in a package
WITHOUT_CLASSIFICATION	let's make it a bit more difficult by setting the target
WITHOUT_CLASSIFICATION	test with a class and an inner class
WITHOUT_CLASSIFICATION	test with a class and an inner class
WITHOUT_CLASSIFICATION	test with a class and class diagram
WITHOUT_CLASSIFICATION	test with a class and class diagram
WITHOUT_CLASSIFICATION	try with statediagram
WITHOUT_CLASSIFICATION	try with statediagram
WITHOUT_CLASSIFICATION	try with statediagram
WITHOUT_CLASSIFICATION	try with statediagram
WITHOUT_CLASSIFICATION	put the statemachine in the namespace of the class
WITHOUT_CLASSIFICATION	test with a package and a class and activity diagram
WITHOUT_CLASSIFICATION	test with a package and a class and activity diagram
WITHOUT_CLASSIFICATION	build the activity diagram
WITHOUT_CLASSIFICATION	build the activity diagram
WITHOUT_CLASSIFICATION	in the next line replacing makeemptyproject by getcurrentproject fails the test except when run in eclipse. mvw i have no idea why.
WITHOUT_CLASSIFICATION	we no longer send individual events so next code is obsolete
WITHOUT_CLASSIFICATION	we initialised java notation so let's activate it
WITHOUT_CLASSIFICATION	needed for initialisations
WITHOUT_CLASSIFICATION	set metaprofile as a default profile
WITHOUT_CLASSIFICATION	create a dependency from the project's model to the metaprofile
WITHOUT_CLASSIFICATION	remove the metaprofile from the project's profile configuration
WITHOUT_CLASSIFICATION	save the project into a new file
WITHOUT_CLASSIFICATION	setup a user defined profile
WITHOUT_CLASSIFICATION	try guard/iterator syntax
WITHOUT_CLASSIFICATION	create a new project and assert that it has the metaprofile as part of the project's profile configuration
WITHOUT_CLASSIFICATION	assert that the project's model element that had a dependency to the metaprofile doesn't get inconsistent
WITHOUT_CLASSIFICATION	reopen the project and assert that the metaprofile isn't part of the profile configuration including the fact that the stereotype <<critic>> isn't found
WITHOUT_CLASSIFICATION	assert that the project's model elements that had a dependency to the uml profile for java are consistent
WITHOUT_CLASSIFICATION	add it to the project configuration
WITHOUT_CLASSIFICATION	add it to the project configuration
WITHOUT_CLASSIFICATION	create a dependency between the project's model and the user defined profile
WITHOUT_CLASSIFICATION	create a dependency between the project's model and the user defined profile
WITHOUT_CLASSIFICATION	save the project
WITHOUT_CLASSIFICATION	save the project
WITHOUT_CLASSIFICATION	load the project
WITHOUT_CLASSIFICATION	assert that the model element that depends on the profile is consistent
WITHOUT_CLASSIFICATION	remove the user defined profile and the directory where it is
WITHOUT_CLASSIFICATION	success - expected exception
WITHOUT_CLASSIFICATION	clean up after ourselves by deleting profile model
WITHOUT_CLASSIFICATION	test both forms of addbaseclass
WITHOUT_CLASSIFICATION	test remaining form of removebaseclass
WITHOUT_CLASSIFICATION	by default the build already builds one default ep
WITHOUT_CLASSIFICATION	$junit-begin$
WITHOUT_CLASSIFICATION	$junit-end$
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#teardown()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	flag to enable performance testing - off by default
WITHOUT_CLASSIFICATION	initialize the model and profile subsystems to simulate a fresh argouml session
WITHOUT_CLASSIFICATION	20 sec.
WITHOUT_CLASSIFICATION	add one child.
WITHOUT_CLASSIFICATION	performance testing parameters
WITHOUT_CLASSIFICATION	add grandchild.
WITHOUT_CLASSIFICATION	create a generalizable element with an element without children.
WITHOUT_CLASSIFICATION	check periodically to see if we've exceeded time limit
WITHOUT_CLASSIFICATION	add another child.
WITHOUT_CLASSIFICATION	tree is created depth first so this should be at the bottom
WITHOUT_CLASSIFICATION	try changing namespace of element and make sure results track
WITHOUT_CLASSIFICATION	populate our namespace hierarchy to the requested depth. total number of created elements is children^maxlevel so be careful not to increase parameters too much.
WITHOUT_CLASSIFICATION	try some guard/iterator errors
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#testcase(string)
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	make sure we have a root model for tagdefinitions to get put in.
WITHOUT_CLASSIFICATION	create the tree of objects
WITHOUT_CLASSIFICATION	copy package p1 into p2 package
WITHOUT_CLASSIFICATION	change the structure in p1 package
WITHOUT_CLASSIFICATION	verify the copied package
WITHOUT_CLASSIFICATION	verify the copied class
WITHOUT_CLASSIFICATION	verify the copied nested package and the copied interface
WITHOUT_CLASSIFICATION	verify the copied attribute
WITHOUT_CLASSIFICATION	see if we can copy a class right off
WITHOUT_CLASSIFICATION	change things
WITHOUT_CLASSIFICATION	change things
WITHOUT_CLASSIFICATION	change things
WITHOUT_CLASSIFICATION	change things
WITHOUT_CLASSIFICATION	assert that the copy isn't modified when the source changes
WITHOUT_CLASSIFICATION	assert that the copy isn't modified when the source changes
WITHOUT_CLASSIFICATION	see if the other copy was just a lucky shot
WITHOUT_CLASSIFICATION	see if the other copy was just a lucky shot
WITHOUT_CLASSIFICATION	see if the other copy was just a lucky shot
WITHOUT_CLASSIFICATION	see if the other copy was just a lucky shot
WITHOUT_CLASSIFICATION	see if the other copy was just a lucky shot
WITHOUT_CLASSIFICATION	see if two copies look like copies of eachother
WITHOUT_CLASSIFICATION	see if two copies look like copies of eachother
WITHOUT_CLASSIFICATION	see if two copies look like copies of eachother
WITHOUT_CLASSIFICATION	see if we can copy a datatype right off
WITHOUT_CLASSIFICATION	see if two copies look like copies of each other
WITHOUT_CLASSIFICATION	see if two copies look like copies of each other
WITHOUT_CLASSIFICATION	see if we can copy an interface right off
WITHOUT_CLASSIFICATION	create a new tagged value with the given type and value and add it to a modelelement.
WITHOUT_CLASSIFICATION	update an existing tagged value on a model element.
WITHOUT_CLASSIFICATION	see if we can copy a package right off
WITHOUT_CLASSIFICATION	see if we can copy a stereotype right off
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	"permission"
WITHOUT_CLASSIFICATION	check to see if association still exists
WITHOUT_CLASSIFICATION	expected illegalargumentexception seen
WITHOUT_CLASSIFICATION	a parameterized class can only be the client of a single binding
WITHOUT_CLASSIFICATION	exception expected - test success
WITHOUT_CLASSIFICATION	expected - test success
WITHOUT_CLASSIFICATION	expected - test success
WITHOUT_CLASSIFICATION	create a new arg list with a different set of args (but same types)
WITHOUT_CLASSIFICATION	success
WITHOUT_CLASSIFICATION	not static
WITHOUT_CLASSIFICATION	test passed
WITHOUT_CLASSIFICATION	test passed
WITHOUT_CLASSIFICATION	not uml1.4
WITHOUT_CLASSIFICATION	non existent in uml1
WITHOUT_CLASSIFICATION	not in uml1.4
WITHOUT_CLASSIFICATION	not in uml1.4
WITHOUT_CLASSIFICATION	not in uml1.4
WITHOUT_CLASSIFICATION	not in uml1.4
WITHOUT_CLASSIFICATION	not in uml1.4
WITHOUT_CLASSIFICATION	this is not a well formed model in a strict sense. see the multiplicity in uml 1.3 figure 2-5.
WITHOUT_CLASSIFICATION	returns list
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	deleting the stereotype should cascade to the tagdefinition then the taggedvalue
WITHOUT_CLASSIFICATION	todo constraints todo required tags
WITHOUT_CLASSIFICATION	enumerate declaring class
WITHOUT_CLASSIFICATION	note although it's not shown in the uml 1.4 spec a templateargument appears to be a datavalue (like multiplicityrange) and can not be reused in multiple instances. the uml diagrams don't show it as a composition but it effectively is.
WITHOUT_CLASSIFICATION	must be called after setimplementation.
WITHOUT_CLASSIFICATION	enumerate fields
WITHOUT_CLASSIFICATION	enumerate constructors
WITHOUT_CLASSIFICATION	indicate that the test was validated
WITHOUT_CLASSIFICATION	todo look up class in truth table
WITHOUT_CLASSIFICATION	check superclass. make sure this class does not extend or reference non-argouml classes
WITHOUT_CLASSIFICATION	enumerate methods enumerate method arguments
WITHOUT_CLASSIFICATION	not currently present as token in model.getfacade(). nif runtruthtest(model.getfacade().isaelement(o) model.getfacade().element) nif runtruthtest(model.getfacade().isaexpression(o) model.getfacade().expression) nif runtruthtest(model.getfacade().isaextensionpoint(o) model.getfacade().extension_point) nif runtruthtest(model.getfacade().isafeature(o) model.getfacade().feature)
WITHOUT_CLASSIFICATION	nif runtruthtest(model.getfacade().isainteraction(o) model.getfacade().interaction)
WITHOUT_CLASSIFICATION	nif untruthtest(model.getfacade().isamethod(o) model.getmetatypes().getmethod())
WITHOUT_CLASSIFICATION	runtruthtest(model.getfacade().isarelationship(o) model.getmetatypes().getrelationship())
WITHOUT_CLASSIFICATION	nif runtruthtest(model.getfacade().isastructuralfeature(o) model.getmetatypes().getstructuralfeature()) nif runtruthtest(model.getfacade().isataggedvalue(o) model.getmetatypes().gettaggedvalue())
WITHOUT_CLASSIFICATION	call methods that exists for all objects and that always return something meaningful
WITHOUT_CLASSIFICATION	call methods that exists for all objects and that always return something meaningful
WITHOUT_CLASSIFICATION	multiplicity multiplicityrange and all expression subtypes don't have 0-argument create methods so we special case them.
WITHOUT_CLASSIFICATION	find the create method in the offical api
WITHOUT_CLASSIFICATION	now get the factory implementation method to be invoked
WITHOUT_CLASSIFICATION	here it is another object sent to the test.
WITHOUT_CLASSIFICATION	here it is another object sent to the test.
WITHOUT_CLASSIFICATION	abstract
WITHOUT_CLASSIFICATION	abstract
WITHOUT_CLASSIFICATION	abstract
WITHOUT_CLASSIFICATION	make sure we start off clean
WITHOUT_CLASSIFICATION	delete the model and make sure everything inside goes with it
WITHOUT_CLASSIFICATION	the association should have same namespace as from class
WITHOUT_CLASSIFICATION	only one end should be navigable
WITHOUT_CLASSIFICATION	"usecaseinstance" gone in uml 2.x & unused by argouml
WITHOUT_CLASSIFICATION	set namespace so buildassocationrole works
WITHOUT_CLASSIFICATION	correct exception was thrown.
WITHOUT_CLASSIFICATION	correct exception was thrown.
WITHOUT_CLASSIFICATION	correct exception was thrown.
WITHOUT_CLASSIFICATION	correct exception was thrown.
WITHOUT_CLASSIFICATION	build an activity graph with a single action state the way the gui would
WITHOUT_CLASSIFICATION	this is a private method in model.
WITHOUT_CLASSIFICATION	handling methods that doesn't return
WITHOUT_CLASSIFICATION	handling the isinitiated method
WITHOUT_CLASSIFICATION	handling the initialise method
WITHOUT_CLASSIFICATION	handle methods which return opaque objects
WITHOUT_CLASSIFICATION	one of the expected errors just ignore
WITHOUT_CLASSIFICATION	could not find model.
WITHOUT_CLASSIFICATION	could not find model.
WITHOUT_CLASSIFICATION	handle uml 1.4 metamodel which is a mof 1.3 model
WITHOUT_CLASSIFICATION	get a node's name along with the name of its parent (which we'll use to find the factory to create it with.
WITHOUT_CLASSIFICATION	uml 1.4
WITHOUT_CLASSIFICATION	uml 2.x
WITHOUT_CLASSIFICATION	xmi 2.1
WITHOUT_CLASSIFICATION	xmi 1.1
WITHOUT_CLASSIFICATION	remap specific classes
WITHOUT_CLASSIFICATION	only remap package if we didn't remap specific class
WITHOUT_CLASSIFICATION	the following uml 1.4 elements have been removed from uml 2.x so we don't bother testing them.
WITHOUT_CLASSIFICATION	a few of our factories are slightly different than as declared in the uml 1.4 metamodel so we remap them here. <metamodel argouml>
WITHOUT_CLASSIFICATION	packages to be remapped
WITHOUT_CLASSIFICATION	for those things which we've already migrated to uml 2.x syntax we need to map them back to their uml 1.4 equivalents during the migration period.
WITHOUT_CLASSIFICATION	subsystem has been removed from uml 2.x
WITHOUT_CLASSIFICATION	try the actions
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	abstract
WITHOUT_CLASSIFICATION	abstract
WITHOUT_CLASSIFICATION	this is the xmi version used to encode the metamodel. we could parse deeper to pull out the actual uml version. the uml 1.4 version is at xmi/xmi.header/xmi.model[@xmi.version]. the uml 2.1.1 metamodel doesn't actually seem to contain its version.
WITHOUT_CLASSIFICATION	because uml 1.4 & 2.1 metamodels are organized differently we need to traverse the hierarchy looking for our owning package.
WITHOUT_CLASSIFICATION	specific classes to be remapped remap.put("" "")
WITHOUT_CLASSIFICATION	go the other way to lookup an element by path
WITHOUT_CLASSIFICATION	activitygraphs
WITHOUT_CLASSIFICATION	instance (in uml 1.4) and classifier are abstract and not tested
WITHOUT_CLASSIFICATION	extend include usecaseinstance & extensionpoint not implemented
WITHOUT_CLASSIFICATION	assertnotnull(model.getumlfactory().buildnode( model.getmetatypes().getextend())) assertnotnull(model.getumlfactory().buildnode( model.getmetatypes().getinclude())) assertnotnull(model.getumlfactory().buildnode( model.getmetatypes().getusecaseinstance())) assertnotnull(model.getumlfactory().buildnode( model.getmetatypes().getextensionpoint()))
WITHOUT_CLASSIFICATION	state is concrete in uml 1.3 but becomes abstract in uml 1.4 so we never allow it to be created (and don't test creation)
WITHOUT_CLASSIFICATION	new initprofilesubsystem().init()
WITHOUT_CLASSIFICATION	this should work now that they both have names
WITHOUT_CLASSIFICATION	this call could easily fall if there is e.g. no public default constructor. if it fails tweak the if/else tree above to accommodate the parameter or check if we need to test the particular method at all.
WITHOUT_CLASSIFICATION	if method not supported ignore failure
WITHOUT_CLASSIFICATION	fine!
WITHOUT_CLASSIFICATION	fine!
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	assertnotnull(model.getumlfactory().buildnode( model.getmetatypes().getstate()))
WITHOUT_CLASSIFICATION	commonbehaviorfactory datatypesfactory extensionmechanismsfactory modelmanagementfactory
WITHOUT_CLASSIFICATION	set up all parameters. some methods are invoked with primitives or collections so we need to create them accordingly
WITHOUT_CLASSIFICATION	the following should fail
WITHOUT_CLASSIFICATION	and leave things unchanged
WITHOUT_CLASSIFICATION	this one should work except java is not registered by default asserttrue(settings.setnotationlanguage("java")) assertequals("java" settings.getnotationlanguage())
WITHOUT_CLASSIFICATION	notationproviderfactory2.getinstance().addnotationprovider(1234 name mynp.class) notationprovider notationprovider = notationproviderfactory2.getinstance().getnotationprovider( 1234 new object()) asserttrue("test notation provider for 1234 not found" notationprovider != null)
WITHOUT_CLASSIFICATION	constructor.
WITHOUT_CLASSIFICATION	constructor. @param me an object
WITHOUT_CLASSIFICATION	everything fine
WITHOUT_CLASSIFICATION	everything fine
WITHOUT_CLASSIFICATION	everything fine
WITHOUT_CLASSIFICATION	reuse signal event
WITHOUT_CLASSIFICATION	reuse call event
WITHOUT_CLASSIFICATION	reuse time event
WITHOUT_CLASSIFICATION	reuse change event
WITHOUT_CLASSIFICATION	try creating a string from the generated modelelements
WITHOUT_CLASSIFICATION	try creating a timeevent
WITHOUT_CLASSIFICATION	try changing the triggertype to changeevent
WITHOUT_CLASSIFICATION	nested class
WITHOUT_CLASSIFICATION	nested class
WITHOUT_CLASSIFICATION	no need to check any further if we fail the 1st part.
WITHOUT_CLASSIFICATION	start testing stuff
WITHOUT_CLASSIFICATION	try moving in a simple maner
WITHOUT_CLASSIFICATION	try some errors
WITHOUT_CLASSIFICATION	for a transition use indirection through source statevertex
WITHOUT_CLASSIFICATION	if we can't find a model return the outermost containing model element
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	everything fine
WITHOUT_CLASSIFICATION	everything fine
WITHOUT_CLASSIFICATION	everything fine
WITHOUT_CLASSIFICATION	everything fine
WITHOUT_CLASSIFICATION	this swaps the direction of m3
WITHOUT_CLASSIFICATION	this swaps the direction of m3 back the colon is obliged but the / not and the 2nd dot also not
WITHOUT_CLASSIFICATION	notation allows to add or modify things not remove. hence this does nothing
WITHOUT_CLASSIFICATION	the expected exception is thrown.
WITHOUT_CLASSIFICATION	both diagram types shall show sequence numbers when requested
WITHOUT_CLASSIFICATION	but the collaboration diagram refuses to leave them out
WITHOUT_CLASSIFICATION	if the message has a name but no action then show the name
WITHOUT_CLASSIFICATION	if a message has a name and a named operation then show the operation
WITHOUT_CLASSIFICATION	if a message has a name and a named operation and a script then show the script
WITHOUT_CLASSIFICATION	todo should there really be () here?
WITHOUT_CLASSIFICATION	if a message has a name and a named operation and an empty script then show the operation
WITHOUT_CLASSIFICATION	if a message has a name and a named operation and an expression with no script then show the operation
WITHOUT_CLASSIFICATION	if a message has a name and a named operation and a named script with parameters then show the script
WITHOUT_CLASSIFICATION	todo why is there a space before the ( here and not in case of the operation name?
WITHOUT_CLASSIFICATION	the action still has the argument from above.
WITHOUT_CLASSIFICATION	if a message has a name and a named operation and a script with parameters but without name then show the operation name
WITHOUT_CLASSIFICATION	this is not a very useful transition
WITHOUT_CLASSIFICATION	one of everything
WITHOUT_CLASSIFICATION	upper / lower case
WITHOUT_CLASSIFICATION	mixed case
WITHOUT_CLASSIFICATION	a complex internal transition
WITHOUT_CLASSIFICATION	these are not entry/exit/do activities!
WITHOUT_CLASSIFICATION	long list of internals
WITHOUT_CLASSIFICATION	or should the 1 be 0 ?
WITHOUT_CLASSIFICATION	deleting it all
WITHOUT_CLASSIFICATION	we want the b foo attribute that is the second in the list
WITHOUT_CLASSIFICATION	if there is no script then the language should not be maintained.
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	success - expected exception
WITHOUT_CLASSIFICATION	everything fine
WITHOUT_CLASSIFICATION	create file
WITHOUT_CLASSIFICATION	this is the normal case.
WITHOUT_CLASSIFICATION	load a project which contains links to it
WITHOUT_CLASSIFICATION	test project readable files
WITHOUT_CLASSIFICATION	standard uml 1.4 profile
WITHOUT_CLASSIFICATION	create a default profile and record its contents
WITHOUT_CLASSIFICATION	write the profile out to a temp file
WITHOUT_CLASSIFICATION	read it back in to a new empty project
WITHOUT_CLASSIFICATION	clean up our two models and the extent that we read profile in to
WITHOUT_CLASSIFICATION	setting up the dependent profile creation
WITHOUT_CLASSIFICATION	actual call that executes everything
WITHOUT_CLASSIFICATION	verifications
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	todo the following cleans up left overs from previous tests but preferably we shouldn't have to do this
WITHOUT_CLASSIFICATION	create profile model
WITHOUT_CLASSIFICATION	create profile model
WITHOUT_CLASSIFICATION	save the profile into a xmi file
WITHOUT_CLASSIFICATION	save the profile into a xmi file
WITHOUT_CLASSIFICATION	called during teardown
WITHOUT_CLASSIFICATION	called during teardown
WITHOUT_CLASSIFICATION	remove leftovers from other tests
WITHOUT_CLASSIFICATION	todo user defined profile support untested currently + "\t\t<userdefined>\n" + "\t\t\t<filename>\n" + "foo.profile\n" + "</filename>\n" + "\t\t\t<model>\n" + "foo.profile.package\n" + "\t\t\t</model>\n" + "\t\t</userdefined>\n"
WITHOUT_CLASSIFICATION	there seems to be cases where we don't erase the profile. let's make sure it is deleted.
WITHOUT_CLASSIFICATION	[euluis] using windows style initial path don't know if this fails in nixes.
WITHOUT_CLASSIFICATION	ensure that model subsystem implementation doesn't remember the profiles by changing their names and directories
WITHOUT_CLASSIFICATION	but lookout it doesn't work both ways
WITHOUT_CLASSIFICATION	assertequals(defaultoclevaluator.getinstance().evaluate(vt mi "x.ocliskindof(classifier)") true)
WITHOUT_CLASSIFICATION	on a headless system (without display) this will crash
WITHOUT_CLASSIFICATION	private jpanel propertypane
WITHOUT_CLASSIFICATION	contains instances of each modelelement used for testing so that we only use each modelelement once
WITHOUT_CLASSIFICATION	propertypane = tabprops
WITHOUT_CLASSIFICATION	thedetailspane.getnamedtab(translator.localize("tab.properties"))
WITHOUT_CLASSIFICATION	currently this is in this try block as it does not work _propertypanel always has size 00
WITHOUT_CLASSIFICATION	projectbrowser exposes functionality not components. assertnotnull(pb.gettabprops()) assertnotnull(pb.getstatusbar())
WITHOUT_CLASSIFICATION	make sure this test happens on the awt event thread
WITHOUT_CLASSIFICATION	jpanel docpane = pane.gettab(tabdocumentation.class)
WITHOUT_CLASSIFICATION	the target list is empty re-emptying it again should not generate any events
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	new target is of type object refresh should not be called
WITHOUT_CLASSIFICATION	commented out next piece to remove failure of testcase. the testcase is probably correct but the implementation of detailspane is not pane.gettabs().setselectedcomponent(docpane) pane.targetset(e) assertequals(docpane pane.gettabs().getselectedcomponent())
WITHOUT_CLASSIFICATION	new target is a fig refresh should be called
WITHOUT_CLASSIFICATION	setting one target should generate one event
WITHOUT_CLASSIFICATION	new target is of type umlclassdiagram refresh should not be called
WITHOUT_CLASSIFICATION	todo we could check that the contents of the files differ.
WITHOUT_CLASSIFICATION	new target is a modelelement refresh should not be called
WITHOUT_CLASSIFICATION	testing with subset of targets
WITHOUT_CLASSIFICATION	set same target again should not generate new events
WITHOUT_CLASSIFICATION	tabprops gets selected! so 2nd time right
WITHOUT_CLASSIFICATION	adding same targets list again should not generate new events
WITHOUT_CLASSIFICATION	adding same target again should not generate new events
WITHOUT_CLASSIFICATION	reverse order
WITHOUT_CLASSIFICATION	now remove one target by setting subset
WITHOUT_CLASSIFICATION	todo the following fails due to the xmi writing saving all top level model elements and because even if there was no empty project by creating a class the undo mechanism in the project manager will force the creation of an empty project. assertequals(1 profilemodels.size())
WITHOUT_CLASSIFICATION	note we have to do this due to leftovers from other tests being causing strange errors when running in eclipse.
WITHOUT_CLASSIFICATION	all tests should consider the threshold as inclusive value
WITHOUT_CLASSIFICATION	this test is a bit stupid but nevertheless
WITHOUT_CLASSIFICATION	{a a} are offenders
WITHOUT_CLASSIFICATION	everything ok
WITHOUT_CLASSIFICATION	everything ok
WITHOUT_CLASSIFICATION	same name same participants two offenders
WITHOUT_CLASSIFICATION	same name different classes everything ok
WITHOUT_CLASSIFICATION	same name different classes everything ok
WITHOUT_CLASSIFICATION	same name same participants two offenders
WITHOUT_CLASSIFICATION	{aabb} are offenders
WITHOUT_CLASSIFICATION	{} no offenders
WITHOUT_CLASSIFICATION	simply create 3 usecases and an actor in a package with individual names
WITHOUT_CLASSIFICATION	generalizations are not required to have unique names within a namespace
WITHOUT_CLASSIFICATION	all use cases and actors require associations hence all predicates evalulate to true
WITHOUT_CLASSIFICATION	build association build association between actor and top use case.
WITHOUT_CLASSIFICATION	test for return parameters. they can also fail!
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#teardown()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	arbitrary settings - not used used for testing
WITHOUT_CLASSIFICATION	arbitrary settings - not used used for testing
WITHOUT_CLASSIFICATION	the graph should stay the same.
WITHOUT_CLASSIFICATION	build extend these parameters seem to be in correct order add an extend. we do not need an assoc on the extending use case
WITHOUT_CLASSIFICATION	build include it seems that the parameters for build include are just the other way round add an include we do not need to have associtions on one
WITHOUT_CLASSIFICATION	setup
WITHOUT_CLASSIFICATION	handle the simple cases anything very exotic will fail but that will be our clue that the test needs to be extended
WITHOUT_CLASSIFICATION	real test
WITHOUT_CLASSIFICATION	some arbitrary bounds and settings - unused in test
WITHOUT_CLASSIFICATION	make sure everything created gets deleted
WITHOUT_CLASSIFICATION	this needs to be a concrete metatype so we can't use the general but abstract classifier. replace with its concrete subtypes.
WITHOUT_CLASSIFICATION	this needs to be a concrete metatype so we can't use the general but abstract classifier. replace with its concrete subtypes.
WITHOUT_CLASSIFICATION	setup the project due to its use in sourcepathtablemodel ctor
WITHOUT_CLASSIFICATION	create a class model element
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#teardown()
WITHOUT_CLASSIFICATION	@see abstracttestactionadddiagram#getvalidnamespaceclasses()
WITHOUT_CLASSIFICATION	@see testcase#setup()
WITHOUT_CLASSIFICATION	@see testcase#setup()
WITHOUT_CLASSIFICATION	save the project
WITHOUT_CLASSIFICATION	tests used to be coded to assume immediate event delivery. they've been modified to use flush() where needed. - tfm oldeventpolicy = mfactoryimpl.geteventpolicy() mfactoryimpl.seteventpolicy(mfactoryimpl.event_policy_immediate)
WITHOUT_CLASSIFICATION	return a package to use as the namespace.
WITHOUT_CLASSIFICATION	restore original event policy - not supported by mdr - tfm mfactoryimpl.seteventpolicy(oldeventpolicy)
WITHOUT_CLASSIFICATION	assertnotnull(actionsupplier.getvalue(action.small_icon))
WITHOUT_CLASSIFICATION	cont.settarget(elem)
WITHOUT_CLASSIFICATION	testing with more than one since it failed with a manual test i made.
WITHOUT_CLASSIFICATION	assertnotnull(actionclient.getvalue(action.small_icon))
WITHOUT_CLASSIFICATION	the following will bring up a dialog box so can't be run headless actionsupplier.actionperformed(new actionevent(this 0 "foo"))
WITHOUT_CLASSIFICATION	the following will bring up a dialog box so can't be run headless actionclient.actionperformed(new actionevent(this 0 "foo"))
WITHOUT_CLASSIFICATION	create a new empty project
WITHOUT_CLASSIFICATION	inconclusive
WITHOUT_CLASSIFICATION	inconclusive
WITHOUT_CLASSIFICATION	setup a user defined profile which isn't loaded by the model subsystem and contains a stereotype and this contains a tag definition
WITHOUT_CLASSIFICATION	add the profile stereotype to the class
WITHOUT_CLASSIFICATION	add the profile to the project configuration
WITHOUT_CLASSIFICATION	this works when running the test from within eclipse. apparently eclipse runs the tests using a class-loader that has the tests folder among the urls.
WITHOUT_CLASSIFICATION	create a class in the project model
WITHOUT_CLASSIFICATION	check that the tag definition is returned by {@link umltagdefinitioncomboboxmodel#getapplicabletagdefinitions(object)}
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	if no project was entered on the command line try to reload the most recent project if that option is true
WITHOUT_CLASSIFICATION	set the screen layout to what the user left it before or to reasonable defaults.
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	case 4 erase it
WITHOUT_CLASSIFICATION	event handlers
WITHOUT_CLASSIFICATION	treemodel implementation
WITHOUT_CLASSIFICATION	treemodel implementation
WITHOUT_CLASSIFICATION	todolistlistener implementation
WITHOUT_CLASSIFICATION	case 1 after()
WITHOUT_CLASSIFICATION	initialize the model and profile subsystems to simulate a fresh argouml session
WITHOUT_CLASSIFICATION	we have the path provided from the build script.
WITHOUT_CLASSIFICATION	check the localized parts.
WITHOUT_CLASSIFICATION	wait for all model subsystem events to be delivered
WITHOUT_CLASSIFICATION	wait for all awt events to be dispatched and processed
WITHOUT_CLASSIFICATION	check here if there are no incoming call actions if not then create an activation at the top of the lifeline
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphmodel#getports(java.lang.object)
WITHOUT_CLASSIFICATION	if save did not raise an exception and name+"#" exists move name+"#" to name+"~" this is the correct backup file
WITHOUT_CLASSIFICATION	calcbounds()
WITHOUT_CLASSIFICATION	for classifiers
WITHOUT_CLASSIFICATION	this is null as until the first stereotype declaration is seen. after that it is non-null.
WITHOUT_CLASSIFICATION	newop.setownerscope(op.getownerscope()) not needed in case of operation
WITHOUT_CLASSIFICATION	includes the "/" the "seq_expr" from the header javadoc the "" is not included in "number" - it is always present
WITHOUT_CLASSIFICATION	model.getextensionmechanismsfactory().buildtaggedvalue( tagname new string[] {"true"} model.getfacade().getroot(umlobject))
WITHOUT_CLASSIFICATION	mclassifiers cannot be bag
WITHOUT_CLASSIFICATION	if the model repository doesn't manage a di model then we must generate our figs by inspecting pgml
WITHOUT_CLASSIFICATION	read xsltstream into a temporary file get url for temp file. openstream from url and wrap in streamsource
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	event handlers
WITHOUT_CLASSIFICATION	main methods
WITHOUT_CLASSIFICATION	if the object does not have a name than no problem
WITHOUT_CLASSIFICATION	tree value isselected(dont want a colored background) isexpanded isleaf row(not important for rendering) hasfocus (dont want a focus rectangle)
WITHOUT_CLASSIFICATION	if we don't have it find the trigger. if this fails it will keep its default value of null
WITHOUT_CLASSIFICATION	@override public final void setheadline(string s) { setupheadanddesc() }
WITHOUT_CLASSIFICATION	we need to find the stereotype with the name "create" and the base class behavioralfeature in the model. if there is none then we create one and put it there.
WITHOUT_CLASSIFICATION	first element is e.g. the class but we need to have its namespace to recompute the offenders.
WITHOUT_CLASSIFICATION	- redrawmanager.unlock() - _redrawer.repairdamage()
WITHOUT_CLASSIFICATION	if this composite state is not attached to a statemachine it is not the toplevel composite state.
WITHOUT_CLASSIFICATION	get the assocations and connections. no problem (there is a separate critic) if this is a binary association or is an association role.
WITHOUT_CLASSIFICATION	if this was an association then there will be relevant information to fetch out of the mode arguments. if it not an association then these will be passed forward harmlessly as null.
WITHOUT_CLASSIFICATION	find selected rows and make a list of the model elements that are selected
WITHOUT_CLASSIFICATION	treecellrenderer implementation
WITHOUT_CLASSIFICATION	build namespace hierarchy like this g a /\ b c /\ d e f
WITHOUT_CLASSIFICATION	private propertyprptodo private propertyprpproperties private propertyprpdocumentation private propertyprpstyle private propertyprpsource private propertyprpconstraints private propertyprptaggedvalues
WITHOUT_CLASSIFICATION	always fire changes in the case something has changed in the composition of the taggedvalues collection.
WITHOUT_CLASSIFICATION	build up an array list of the heights of each label/component pair. heights of zero indicate a proportional height.
WITHOUT_CLASSIFICATION	cmdpaste cmd = new cmdpaste() cmd.doit()
WITHOUT_CLASSIFICATION	stereotypes applied to the target mostly control which tds (but see below for other listeners too)
WITHOUT_CLASSIFICATION	todo add referencevalue for tagged values which have a non-primitive type
WITHOUT_CLASSIFICATION	add a decision but set the critic priority to 0 so isrelevant should still be false
WITHOUT_CLASSIFICATION	todo we should also test that the object have been removed from their namespace. collection c = model.getfacade().getownedelements(p.getroot())
WITHOUT_CLASSIFICATION	because the notation events get dispatched on the swing event thread we need to use invokeandwait to make sure that we don't return until they've been delivered
WITHOUT_CLASSIFICATION	parent is element but it has no attributes or associations to check checkelementcopy(e1 e2)
WITHOUT_CLASSIFICATION	extra careful now not to keep any references to the second argument.
WITHOUT_CLASSIFICATION	auto-create a return message for a call message
WITHOUT_CLASSIFICATION	get the source of the return message
WITHOUT_CLASSIFICATION	get the dest of the return message
WITHOUT_CLASSIFICATION	gridbagconstraints gridbagconstraints3 = new gridbagconstraints() gridbagconstraints3.gridx = 2 gridbagconstraints3.anchor = gridbagconstraints.northwest gridbagconstraints3.insets = new insets(5 5 0 0) gridbagconstraints3.gridy = 3 gridbagconstraints gridbagconstraints2 = new gridbagconstraints() gridbagconstraints2.gridx = 0 gridbagconstraints2.anchor = gridbagconstraints.northwest gridbagconstraints2.insets = new insets(5 5 0 0) gridbagconstraints2.gridy = 3
WITHOUT_CLASSIFICATION	fig spf = null fig dpf = null fignode sfn = null fignode dfn = null
WITHOUT_CLASSIFICATION	if the event originated from the window w/glass pane consume the event
WITHOUT_CLASSIFICATION	add gui-internal stuff. gui-internal stuff is panes tabs menu items that are part of the gui subsystem i.e. a class in the org.argouml.ui-package. things that are not part of the gui like everything that has any knowledge about uml diagrams code generation reverse engineering creates and registers itself when that subsystem or module is loaded.
WITHOUT_CLASSIFICATION	the workarea is all the visible space except the menu toolbar and status bar. workarea is laid out as a bordersplitpane where the various components that make up the argo application can be positioned.
WITHOUT_CLASSIFICATION	iterate through the tabbed panels to determine whether they should be enabled.
WITHOUT_CLASSIFICATION	always select properties panel if defaulttoproperties is true and if properties panel is appropriate for selected perspective
WITHOUT_CLASSIFICATION	tabs.addtab(translator.localize("dialog.find.tab.name-and-location") nameloctab)
WITHOUT_CLASSIFICATION	_tablemodel.settarget(_target) _table.setmodel(_tablemodel)
WITHOUT_CLASSIFICATION	if the current shortcut has not been set then the actual shortcut value is the default one
WITHOUT_CLASSIFICATION	if the user cancelled the operation we don't have to save anything
WITHOUT_CLASSIFICATION	create the return message modelelement with the interaction and the collaboration
WITHOUT_CLASSIFICATION	generate and register the osxadapter passing the methods we wish to use as delegates for various com.apple.eawt.applicationlistener methods
WITHOUT_CLASSIFICATION	todo no links in uml 2
WITHOUT_CLASSIFICATION	nothing we can do about veto so just ignore it
WITHOUT_CLASSIFICATION	event handling
WITHOUT_CLASSIFICATION	event handlers
WITHOUT_CLASSIFICATION	fig accessors
WITHOUT_CLASSIFICATION	event handlers - mouselistener implementation
WITHOUT_CLASSIFICATION	the uml object wrong end of the edge
WITHOUT_CLASSIFICATION	we are going to add the ones still valid & new ones in the right sequence
WITHOUT_CLASSIFICATION	this is perfectly normal and happens among other things within the call to setdiagram (below).
WITHOUT_CLASSIFICATION	events
WITHOUT_CLASSIFICATION	if the new edge implements the mouselistener interface it has to receive the mousereleased() event
WITHOUT_CLASSIFICATION	user feedback
WITHOUT_CLASSIFICATION	needs to be updated for changes in notation subsystem - tfm string namestr = notation.generate(this getowner()).trim() getnamefig().settext(namestr)
WITHOUT_CLASSIFICATION	graphfactory implementation
WITHOUT_CLASSIFICATION	adapted from selectionwbuttons from line 280 calls a helper method to avoid this edge disappearing if the new source and dest are the same node.
WITHOUT_CLASSIFICATION	give up if we are already on the graph. this is a bit inconistent with canaddnode above.
WITHOUT_CLASSIFICATION	link the new extend relationship in to the ends. remember we draw from the extension use case to the base use case.
WITHOUT_CLASSIFICATION	todo this is using the default platform character encoding specifying an encoding will produce more predictable results
WITHOUT_CLASSIFICATION	check against "" is needed for backward compatibility. don't remove without checking subclasses and warning downstream developers - tfm - 20081211
WITHOUT_CLASSIFICATION	next line does give user.home back but this is not compliant with how the project.uri works and therefore open and save project as give different starting directories. string directory = globals.getlastdirectory()
WITHOUT_CLASSIFICATION	correct the activator value
WITHOUT_CLASSIFICATION	we know this is a return action now. it must be pointing the opposite way to the activator.
WITHOUT_CLASSIFICATION	java se 6 has a native gif writer but it's not in java 5. one is available in the jai-imageio library but we don't currently bundle that and at 6+ mb it seems like a heavyweight solution but i don't have time to produce a stripped down version right now - tfm httpsjai-imageio.dev.java.net/
WITHOUT_CLASSIFICATION	we don't want to show some nasty gray background color now do we?
WITHOUT_CLASSIFICATION	although we've historically written out the doctype the dtd doesn't actually exist and this line will get stripped by the .uml file persister + "<!doctype profile system \"profile.dtd\" >\n"
WITHOUT_CLASSIFICATION	check that the tag definition is returned by {@link umltagdefinitioncomboboxmodel#getapplicabletagdefinitions(object)}
WITHOUT_CLASSIFICATION	todo real numbers not yet supported assertequals(defaultoclevaluator.getinstance() .evaluate(null null "1.5") 1.5)
WITHOUT_CLASSIFICATION	remember to change this if you change the number of mes with source path settings
WITHOUT_CLASSIFICATION	put the x at the right side of the activation if needed
WITHOUT_CLASSIFICATION	make sure there is the minimum gap above the message being drawn
WITHOUT_CLASSIFICATION	make sure there is the minimum gap below the message being drawn
WITHOUT_CLASSIFICATION	the figmessage that triggered this figactivation into existence
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	this module will still register as enabled for uml1.4 but it won't actually do anything.
WITHOUT_CLASSIFICATION	get the region as the first region in the state. if there is no region in the statemachine then create one.
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.mutablegraphmodel#addedge(java.lang.object)
WITHOUT_CLASSIFICATION	create the layer
WITHOUT_CLASSIFICATION	create the renderer
WITHOUT_CLASSIFICATION	if we're not provided a namespace then get it from the diagram or the root
WITHOUT_CLASSIFICATION	link the previous/next reference of the swimlanes according to the x order.
WITHOUT_CLASSIFICATION	graphmodel implementation
WITHOUT_CLASSIFICATION	make space for the clarifier for vertical symmetry margin between text and border
WITHOUT_CLASSIFICATION	mutablegraphmodel implementation
WITHOUT_CLASSIFICATION	actions for toolbar
WITHOUT_CLASSIFICATION	vetoablechangelistener implementation
WITHOUT_CLASSIFICATION	contructors
WITHOUT_CLASSIFICATION	event processing
WITHOUT_CLASSIFICATION	the purpose of this method is not explained and it give give npe depending on z order of figs as they are read. for now ignore if null but for future lets delete this.
WITHOUT_CLASSIFICATION	fig accessors
WITHOUT_CLASSIFICATION	fig accessors
WITHOUT_CLASSIFICATION	can't have a connection between 2 interfaces get the 'other' end type
WITHOUT_CLASSIFICATION	if there's only a single child (and we're it's only parent) set a hint for where to place it when we get to its row
WITHOUT_CLASSIFICATION	use "asize" to build up the minimum size. start with the size of the name fig and build up.
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.mutablegraphmodel#canaddnode(java.lang.object)
WITHOUT_CLASSIFICATION	both ends must be defined and nodes that are on the graph already.
WITHOUT_CLASSIFICATION	if we are the dest and is a call action create the activation but don't add it until the height is set.
WITHOUT_CLASSIFICATION	if we are the dest and is a call action create the activation but don't add it until the height is set.
WITHOUT_CLASSIFICATION	if we are the destination of a create action create the entire activation
WITHOUT_CLASSIFICATION	if we are the target of a destroy action the figlifeline ends here and we add the activation
WITHOUT_CLASSIFICATION	if we are the source of a return action the activation ends here.
WITHOUT_CLASSIFICATION	if we have a currentact object that means have reached the end of the lifeline with a call or a create not returned. add the activation to the list after setting its height to end at the end of the lifeline.
WITHOUT_CLASSIFICATION	we do nothing. no call to the parent
WITHOUT_CLASSIFICATION	we don't recalculate activations just move them
WITHOUT_CLASSIFICATION	if is a classifier role it must return all the related messages.
WITHOUT_CLASSIFICATION	if is a message it must return the sender and the receiver of the message.
WITHOUT_CLASSIFICATION	comments from anywhere in the model are allowed
WITHOUT_CLASSIFICATION	all other types of elements must be in this namespace
WITHOUT_CLASSIFICATION	we initialize the coordinates.
WITHOUT_CLASSIFICATION	we do nothing
WITHOUT_CLASSIFICATION	manage if cursor x is less than lastx1
WITHOUT_CLASSIFICATION	manage if cursor x is more than lastx2
WITHOUT_CLASSIFICATION	manage changes of direction
WITHOUT_CLASSIFICATION	i have no direction yet
WITHOUT_CLASSIFICATION	we move down or up the messages that are downward the broom
WITHOUT_CLASSIFICATION	we recalculate all the activations
WITHOUT_CLASSIFICATION	we draw a cross
WITHOUT_CLASSIFICATION	we don't let the user move the messages horizontally.
WITHOUT_CLASSIFICATION	if the edge is near the bottom of the classifier roles we enlarge all the figclassifierroles in the diagram.
WITHOUT_CLASSIFICATION	super(model.getfacade().getname(op) null)
WITHOUT_CLASSIFICATION	we need the edge to be complete
WITHOUT_CLASSIFICATION	if the added edge is a create message it will affect the position of the classifierrole so it should be repositioned
WITHOUT_CLASSIFICATION	the initial x is the left side of the activation
WITHOUT_CLASSIFICATION	the initial x is the left side of the activation
WITHOUT_CLASSIFICATION	put the x at the right side of the activation if needed
WITHOUT_CLASSIFICATION	if the y coordinate is before the classifier role y we place the start in the corner of the fighead.
WITHOUT_CLASSIFICATION	if the y coordinate is inside the head the x must be in the border of the headfig.
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.figedge#setfig(org.tigris.gef.presentation.fig)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.figstatevertex#initnotationproviders (java.lang.object)
WITHOUT_CLASSIFICATION	if the y coordinate is before the classifier role y we place the start in the corner of the fighead.
WITHOUT_CLASSIFICATION	if the y coordinate is inside the head the x must be in the border of the headfig.
WITHOUT_CLASSIFICATION	use a different notation as messages on a collaboration diagram
WITHOUT_CLASSIFICATION	this next argument may be used to switch off the generation of sequence numbers - this is still to be implemented. they are less desired in sequence diagrams since they do not add any information. in collaboration diagrams they are needed and they are still optional in sequence diagrams.
WITHOUT_CLASSIFICATION	operations
WITHOUT_CLASSIFICATION	todo add logging but this will never happen and is handled
WITHOUT_CLASSIFICATION	if possible we determine this by checking the destination and source figs are the same. if this is not possible because the edge is not yet connected then we check the model.
WITHOUT_CLASSIFICATION	we update the activations
WITHOUT_CLASSIFICATION	for performance we check if this is a selfmessage if it is we have just updated the activations
WITHOUT_CLASSIFICATION	this call seems not very robust. yet to determine cause.
WITHOUT_CLASSIFICATION	this constructor is needed for pgmlstackparser to load saved diagrams. it does nothing because pgmlstackparser will call setpoints later.
WITHOUT_CLASSIFICATION	vertical resizing
WITHOUT_CLASSIFICATION	do nothing.
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	this module will still register as enabled for uml1.4 but it won't actually do anything.
WITHOUT_CLASSIFICATION	get the region as the first region in the state. if there is no region in the statemachine then create one.
WITHOUT_CLASSIFICATION	there are no regions so create one and place the vertex there.
WITHOUT_CLASSIFICATION	there are one or more regions so find the one that the vertex was dropped in
WITHOUT_CLASSIFICATION	the vertex was dropped onto the diagram. get the region as the first region in the statemachine. if there is no region in the statemachine then create one.
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#removefromdiagramimpl()
WITHOUT_CLASSIFICATION	_x = x _y = y _w = w _h = h
WITHOUT_CLASSIFICATION	@see org.tigris.gef.ui.popupgenerator#getpopupactions(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	create the layer
WITHOUT_CLASSIFICATION	nothing we can do about veto so just ignore it
WITHOUT_CLASSIFICATION	create the renderer
WITHOUT_CLASSIFICATION	although not generally true for gef for argo we know that the layer is a layerperspective which knows the associated diagram
WITHOUT_CLASSIFICATION	in this event we do nothing only stop drawing the broom.
WITHOUT_CLASSIFICATION	there is a bug in gef where positioning nodes can affect edge positions. we need to do 3 iterations to protect against that.
WITHOUT_CLASSIFICATION	1. remember current message paths
WITHOUT_CLASSIFICATION	2. reposition and resize nodes
WITHOUT_CLASSIFICATION	3. now reposition messages based on their original position
WITHOUT_CLASSIFICATION	compute the initial center position of the cr
WITHOUT_CLASSIFICATION	horizontal resizing
WITHOUT_CLASSIFICATION	compute the final center position of the cr
WITHOUT_CLASSIFICATION	self messages act differently so it is needed to move them separetly. only self messages of selected cr should be horizontally translated.
WITHOUT_CLASSIFICATION	create the graph model
WITHOUT_CLASSIFICATION	y position of the new cr should match existing crs y position
WITHOUT_CLASSIFICATION	init the sequence diagrams from the module
WITHOUT_CLASSIFICATION	debugging and looking at fig.headfig.figs[1]._currtext i can see that it's working but how to test it?
WITHOUT_CLASSIFICATION	operations that work on elements
WITHOUT_CLASSIFICATION	operations that work on classes of objects
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getminimumsize()
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	object getimportedpackage(object element)
WITHOUT_CLASSIFICATION	object getincludingcase(object handle)
WITHOUT_CLASSIFICATION	javadoc reviewed above this point - tfm /
WITHOUT_CLASSIFICATION	object getimportingnamespace(object element)
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	object createstereotype()
WITHOUT_CLASSIFICATION	implementation note unlike many of the interfaces to the model there is no control to force a single instance of an xmireader. this is to allow work objects generated by the implementation to be garbage collected when an xmireader instance falls out of scope.
WITHOUT_CLASSIFICATION	adiagramelementproperty delegate methods
WITHOUT_CLASSIFICATION	@see org.omg.uml.diagraminterchange.adiagramelementproperty#add( org.omg.uml.diagraminterchange.diagramelement org.omg.uml.diagraminterchange.property)
WITHOUT_CLASSIFICATION	@see org.omg.uml.diagraminterchange.adiagramelementproperty#exists( org.omg.uml.diagraminterchange.diagramelement org.omg.uml.diagraminterchange.property)
WITHOUT_CLASSIFICATION	@see org.omg.uml.diagraminterchange.adiagramelementproperty#getproperty( org.omg.uml.diagraminterchange.diagramelement)
WITHOUT_CLASSIFICATION	easy interface to properties
WITHOUT_CLASSIFICATION	here follows the interfaces that contain the enums of different kinds in the uml meta-model.
WITHOUT_CLASSIFICATION	flow is not in uml 2.x - don't implement
WITHOUT_CLASSIFICATION	do nothing.
WITHOUT_CLASSIFICATION	additional support for tagged values
WITHOUT_CLASSIFICATION	do nothing.
WITHOUT_CLASSIFICATION	do nothing.
WITHOUT_CLASSIFICATION	do nothing.
WITHOUT_CLASSIFICATION	here follows the interfaces that contain the enums of different kinds in the uml meta-model.
WITHOUT_CLASSIFICATION	static variables
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	public methods
WITHOUT_CLASSIFICATION	end class uuidmanager
WITHOUT_CLASSIFICATION	write out something for us to read back in
WITHOUT_CLASSIFICATION	now read it and check the results.
WITHOUT_CLASSIFICATION	create an empty file and try to read it
WITHOUT_CLASSIFICATION	depends on implementation
WITHOUT_CLASSIFICATION	todo
WITHOUT_CLASSIFICATION	construct an exception with a message and a causing exception. @param message the message @param c the cause of the exception public xmireferenceexception(string message throwable c) { super(message c) }
WITHOUT_CLASSIFICATION	the netbeans saxparser sets line number and column number to -1.
WITHOUT_CLASSIFICATION	the xerces saxparser sets line number and column number to 1.
WITHOUT_CLASSIFICATION	not true in general but should be true for our test models
WITHOUT_CLASSIFICATION	this throws org.argouml.model.xmiexception unknown element in xmi file model because the uml 1.3->1.4 converter can only handle xmi 1.0 not 1.1
WITHOUT_CLASSIFICATION	todo
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	if the region is changed to another region then we make sure that a delete event is not fired as a result. $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	in this case either the container was not set or it was not contained in a statemachine.
WITHOUT_CLASSIFICATION	the only way a region is set to null is if we're deleting the vertex in which case we do nothing special so that the removal of the state triggers a delete event.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	todo
WITHOUT_CLASSIFICATION	in uml a message could have an action. in uml2 it never does.
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	no body found.
WITHOUT_CLASSIFICATION	oops we already have the body
WITHOUT_CLASSIFICATION	return handle.stringvalue()
WITHOUT_CLASSIFICATION	public collection<element> getextendedelements(object handle) {
WITHOUT_CLASSIFICATION	for a transition use indirection through source statevertex
WITHOUT_CLASSIFICATION	gone from uml 2.x throw new notimplementedexception()
WITHOUT_CLASSIFICATION	get all the relationships that this model element has. and filter everything that is not an import.
WITHOUT_CLASSIFICATION	can't be done in the general case of federated repositories but at least get what we can find for the current resource set
WITHOUT_CLASSIFICATION	multiplicityelement is now an interface implemented by element types that support multiplicities - tfm
WITHOUT_CLASSIFICATION	should be element not eobject really
WITHOUT_CLASSIFICATION	classifier powertype =
WITHOUT_CLASSIFICATION	todo signal -> receptions association not navigable in this direction
WITHOUT_CLASSIFICATION	in uml2 the tag definition is the attribute itself
WITHOUT_CLASSIFICATION	usage differs from uml1
WITHOUT_CLASSIFICATION	usage differs from uml1
WITHOUT_CLASSIFICATION	transitions can have multiple triggers now
WITHOUT_CLASSIFICATION	gone in uml 2.x
WITHOUT_CLASSIFICATION	actionstate callstate and subactivitystate have been replaced in uml 2.0 by explicitly modeled actions
WITHOUT_CLASSIFICATION	todo double check - tfm
WITHOUT_CLASSIFICATION	todo gone in uml 2
WITHOUT_CLASSIFICATION	todo gone in uml 2
WITHOUT_CLASSIFICATION	todo double check - tfm
WITHOUT_CLASSIFICATION	todo double check - tfm
WITHOUT_CLASSIFICATION	below for uml 1.4 compatibility
WITHOUT_CLASSIFICATION	todo double check - tfm
WITHOUT_CLASSIFICATION	todo changed from uml 1.4
WITHOUT_CLASSIFICATION	todo gone in uml 2
WITHOUT_CLASSIFICATION	todo changed for uml 2.x
WITHOUT_CLASSIFICATION	todo gone from uml 2
WITHOUT_CLASSIFICATION	has <<subsystem>> stereotype
WITHOUT_CLASSIFICATION	todo not exact but close
WITHOUT_CLASSIFICATION	&& ((action) handle).get
WITHOUT_CLASSIFICATION	not in uml2
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	even though this is not relevant for uml2 we have code calling this that expects it for uml1.4 and we must handle it gracefully.
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	return ((redefinableelement) handle).isroot() todo one part of uml 2.1.1 spec says that this is as above but it appears to be gone - tfm
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	lifeline.setrepresents(prop)
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	a composite state contains at least one region
WITHOUT_CLASSIFICATION	an associationend is now a property owned by an association
WITHOUT_CLASSIFICATION	throw new notimplementedexception( "this is not a uml2 element") $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	todo exception has been removed for uml 2.x just return signal for now - tfm
WITHOUT_CLASSIFICATION	gone in uml 2.x - just classifier now
WITHOUT_CLASSIFICATION	todo not really the same thing but close
WITHOUT_CLASSIFICATION	the name of the meta type is the class name (after the last .) and before the "impl" or end of class name.
WITHOUT_CLASSIFICATION	todo gone in uml 2.x return place holder for now
WITHOUT_CLASSIFICATION	todo no separate syncstate in uml 2.1 - tfm
WITHOUT_CLASSIFICATION	actionsequence.class
WITHOUT_CLASSIFICATION	classifierinstate.class
WITHOUT_CLASSIFICATION	argument.class
WITHOUT_CLASSIFICATION	attributelink.class
WITHOUT_CLASSIFICATION	uninterpretedaction.class
WITHOUT_CLASSIFICATION	access should be fast
WITHOUT_CLASSIFICATION	iteration should be fast
WITHOUT_CLASSIFICATION	literalspecification
WITHOUT_CLASSIFICATION	i.e. eventtype == notification.remove
WITHOUT_CLASSIFICATION	implements commandstack
WITHOUT_CLASSIFICATION	list.add("opaqueexpression")
WITHOUT_CLASSIFICATION	literalspecification list.add("literalnull")when other ok
WITHOUT_CLASSIFICATION	list.add("literalinteger")when other ok
WITHOUT_CLASSIFICATION	list.add("literalunlimitednatural")when other ok
WITHOUT_CLASSIFICATION	list.add("instancevalue")
WITHOUT_CLASSIFICATION	todo else => exception !
WITHOUT_CLASSIFICATION	can't be changed
WITHOUT_CLASSIFICATION	rewrite it after change setexpression ?
WITHOUT_CLASSIFICATION	as write in uml specification we have size(bodies)==size(langs) we must have tabvalues.length%2==0
WITHOUT_CLASSIFICATION	literalspecification
WITHOUT_CLASSIFICATION	can't be set
WITHOUT_CLASSIFICATION	rewrite it after change setexpression ?
WITHOUT_CLASSIFICATION	as write in uml specification we have size(bodies)==size(langs) we must have tabvalues.length%2==0
WITHOUT_CLASSIFICATION	a link is an assocation in uml2.x
WITHOUT_CLASSIFICATION	link does not exist in uml2 a link is represented just as an association
WITHOUT_CLASSIFICATION	must not be used in uml2 we model a method as a opaquebehavior object that already has a body so there is no need to have an intermediate expression object
WITHOUT_CLASSIFICATION	we need a method (operation implementation) to store the method body.
WITHOUT_CLASSIFICATION	maybe this operation already has a method that fits our purpose? in this case try to reuse it instead of creating a new implementation.
WITHOUT_CLASSIFICATION	check if we have to create a new implementation.
WITHOUT_CLASSIFICATION	create a new implementation.
WITHOUT_CLASSIFICATION	and set the specification to the current operation.
WITHOUT_CLASSIFICATION	add it to the operation's methods.
WITHOUT_CLASSIFICATION	look if there's already a java implementation
WITHOUT_CLASSIFICATION	try to get the corresponding body and set it to the current body this _should_ work if all the bodies were stored with their corresponding languages.
WITHOUT_CLASSIFICATION	job done.
WITHOUT_CLASSIFICATION	it seems there was no implementation of our current target language so we just add one.
WITHOUT_CLASSIFICATION	we cannot set the body of this model element type.
WITHOUT_CLASSIFICATION	removed from uml 2.x
WITHOUT_CLASSIFICATION	also parse 1_ or 0_n etc.
WITHOUT_CLASSIFICATION	warning - this has containment side effects! eclipse uml2 will move the property from the classifier to the association when the navigability is changed.
WITHOUT_CLASSIFICATION	$non-nls-1$$non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	for other xmi files with further namespaces
WITHOUT_CLASSIFICATION	eclipse namespaces
WITHOUT_CLASSIFICATION	for the .uml files in the eclipse jar files we need this
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	not needed currently for uml 2
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	final object scope
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	the attribute 'targetscope' of an associationend in uml1.x is no longer supported in uml2.x
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	@see org.argouml.model.umlhelper#getsource(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.umlhelper#getdestination(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.umlhelper#move(java.lang.object org.argouml.model.umlhelper.direction)
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	in uml2 we model a method as a behavior (initially opaquebehavior)
WITHOUT_CLASSIFICATION	the interface realization will be created in the client namespace (client is a namespace)
WITHOUT_CLASSIFICATION	extent ignored for euml2 implementation (required for netbeans mdr)
WITHOUT_CLASSIFICATION	@see org.argouml.model.umlhelper#move(java.lang.object org.argouml.model.umlhelper.direction)
WITHOUT_CLASSIFICATION	@see org.argouml.model.extensionmechanismshelper#getcommontaggedvaluetypes()
WITHOUT_CLASSIFICATION	cmd.setobjects(run.getparams().get(0))
WITHOUT_CLASSIFICATION	maybe uml2 has these as constants somewhere
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	also apply subprofiles
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	sets the value of an element#s property (tagged value). this method makes sure that a collection of values is set if and only if the property is multivalued (upper multiplicity value greater 1) so passing a collection is safe. @see org.argouml.model.extensionmechanismshelper#setvalueoftag(java.lang.object java.lang.object java.lang.object)
WITHOUT_CLASSIFICATION	commontaggedvaluetypes.add(org.eclipse.uml2.uml.resource.umlresource.)
WITHOUT_CLASSIFICATION	remove base class by destroying the extension
WITHOUT_CLASSIFICATION	consider the property multiplicity
WITHOUT_CLASSIFICATION	or getdefaultvaluefor(prop)?
WITHOUT_CLASSIFICATION	too bad we choose to take the first value
WITHOUT_CLASSIFICATION	ready to set the value finally
WITHOUT_CLASSIFICATION	in case of a tagged value the type shouldn't be set here
WITHOUT_CLASSIFICATION	not implementable in uml2 because property is missing
WITHOUT_CLASSIFICATION	also unapply subprofiles
WITHOUT_CLASSIFICATION	also define subprofiles
WITHOUT_CLASSIFICATION	{associationrole.class classifierrole.class }
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	{link.class instance.class } {transition.class statevertex.class }
WITHOUT_CLASSIFICATION	{message.class classifierrole.class }
WITHOUT_CLASSIFICATION	note for uml2 the aggregation ends are swapped
WITHOUT_CLASSIFICATION	extend but only between two use cases. remember we draw from the extension port to the base port.
WITHOUT_CLASSIFICATION	in uml2 subsystem is a component with <<subsystem>> stereotype so this must occur after the metatypes.getcomponent() case
WITHOUT_CLASSIFICATION	find the passed in container in validcontainmentmap
WITHOUT_CLASSIFICATION	determine if metatype is a valid element for container
WITHOUT_CLASSIFICATION	uml 1.4.2 spec section 4.5.3.20 [5] a generalizableelement may only be a child of generalizableelement of the same kind.
WITHOUT_CLASSIFICATION	specifies valid elements for a region to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a region to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a region to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a package to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a package to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a package to contain
WITHOUT_CLASSIFICATION	valid elements for a profile to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a class to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a classifier to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an interface to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a signal to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an actor to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a use case to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a use case to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a component to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a node to contain
WITHOUT_CLASSIFICATION	$non-nls-1$$non-nls-2$
WITHOUT_CLASSIFICATION	a list of valid connections between elements the connection type first and then the elements to be connected
WITHOUT_CLASSIFICATION	if there isn't a 3rd column then this represents a connection of elements of the same type.
WITHOUT_CLASSIFICATION	if there is a 3rd column then this represents a connection of between 2 different types of element.
WITHOUT_CLASSIFICATION	if the array hasn't been flagged to indicate otherwise swap elements the elemnts and add again.
WITHOUT_CLASSIFICATION	specifies valid elements for a datatype to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an operation to contain
WITHOUT_CLASSIFICATION	valid elements for a stereotype to contain
WITHOUT_CLASSIFICATION	valid elements for an action to contain
WITHOUT_CLASSIFICATION	trying to get a built-in standard profile from eclipse uml2
WITHOUT_CLASSIFICATION	removed from uml 2
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	roll back transaction to remove any partial results read
WITHOUT_CLASSIFICATION	we shouldn't get here but just in case we want a wide exception catcher to make sure our transaction always gets ended
WITHOUT_CLASSIFICATION	if we can find a nested sax exception it will have information on the line number etc.
WITHOUT_CLASSIFICATION	ignore if the extent never got created or has been deleted
WITHOUT_CLASSIFICATION	inputsource xformedinput = chainedtransform(transformfiles pis)
WITHOUT_CLASSIFICATION	inputsource xformedinput = chainedtransform(transformfiles pis)
WITHOUT_CLASSIFICATION	@see org.argouml.model.xmireader#getxmiuuidtoobjectmap()
WITHOUT_CLASSIFICATION	set up reader to be first filter in chain
WITHOUT_CLASSIFICATION	set up source for style sheet
WITHOUT_CLASSIFICATION	create & set up temporary output file
WITHOUT_CLASSIFICATION	in uml2.x there is no metaclass named method but we use the 'method' association of behavioralfeature
WITHOUT_CLASSIFICATION	ret.setisleaf(false) ret.setisroot(false)
WITHOUT_CLASSIFICATION	create filter for each style sheet and chain to previous filter/reader
WITHOUT_CLASSIFICATION	create transformer and do transformation
WITHOUT_CLASSIFICATION	set up for next iteration
WITHOUT_CLASSIFICATION	create & set up temporary output file
WITHOUT_CLASSIFICATION	silently ignore anything specified by caller attempt to continue
WITHOUT_CLASSIFICATION	we presume the stream is encoded using the default char encoding
WITHOUT_CLASSIFICATION	delete the old extent first
WITHOUT_CLASSIFICATION	log.log(level.warning "unable to find extent " + extent)
WITHOUT_CLASSIFICATION	set the storage id for our repository so that mofids will be unique (they are composed as "storageid""serialnumber"). note the storage manager only looks for a few property names such as the storagefactoryclassname. everything else needs to be prefixed with "mdrstorageproperty." which gets deleted from the property name before it and its associated value are copied to an internal property table separate from the system property table.
WITHOUT_CLASSIFICATION	connect to the repository
WITHOUT_CLASSIFICATION	create an extent and read in our metamodel (m2 model)
WITHOUT_CLASSIFICATION	create and start event pump first so it's available for all others
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getdiagraminterchangemodel()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getfacade()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getmodeleventpump()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getactivitygraphsfactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getactivitygraphshelper()
WITHOUT_CLASSIFICATION	handles all children of relationship including extend and include which are not members of core
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	disable event delivery during model load
WITHOUT_CLASSIFICATION	if we've got a streaming input copy it to make sure we'll be able to rewind it if necessary
WITHOUT_CLASSIFICATION	use a transaction to avoid the performance penalty (3x) of mdr's autocommit mode
WITHOUT_CLASSIFICATION	if a uml 1.3 file attempt to upgrade it to uml 1.4
WITHOUT_CLASSIFICATION	roll back transaction from first attempt & start new one
WITHOUT_CLASSIFICATION	clear the associated id maps & reset starting collection
WITHOUT_CLASSIFICATION	make sure we always have a default extent. the old extent will get deleted as part of creating the new extent.
WITHOUT_CLASSIFICATION	datatypes is next so it's available for kinds modelmanagement & extensions
WITHOUT_CLASSIFICATION	initialize remaining factories and helpers (but defer heavyweight ones until needed)
WITHOUT_CLASSIFICATION	create a default extent for the user uml model. this will get replaced if a new model is read in from an xmi file.
WITHOUT_CLASSIFICATION	note if we switch to a persistent repository like the b-tree repository we'll want to keep the old extent(s) around
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getcollaborationsfactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getcommonbehaviorhelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getcopyhelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getcorefactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getcorehelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getdatatypesfactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getdatatypeshelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getextensionmechanismsfactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getmodelmanagementfactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getmodelmanagementhelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getstatemachinesfactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getstatemachineshelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getumlfactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getumlhelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getusecasesfactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getusecaseshelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getchangeablekind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getaggregationkind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getpseudostatekind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getscopekind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getconcurrencykind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getdirectionkind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getorderingkind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.commonbehaviorhelper#setnodeinstance(java.lang.object java.lang.object)
WITHOUT_CLASSIFICATION	elements created after file load won't have index entries
WITHOUT_CLASSIFICATION	normally the extent should exist already but in the case of making an empty project we may not have an extent yet so create a default extent
WITHOUT_CLASSIFICATION	private constructor for common work needed by both public constructors.
WITHOUT_CLASSIFICATION	end our transaction
WITHOUT_CLASSIFICATION	@see org.argouml.model.extensionmechanismshelper#getallpossiblestereotypes(java.util.collection java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.extensionmechanismshelper#getcommontaggedvaluetypes()
WITHOUT_CLASSIFICATION	there is nothing to do in uml1.4
WITHOUT_CLASSIFICATION	forbid instantiation
WITHOUT_CLASSIFICATION	mdr classes may have a uml or uml prefix which should be removed.
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	@see org.argouml.model.metatypes#getabstraction()
WITHOUT_CLASSIFICATION	delete stimulii which have this as their dispatchaction
WITHOUT_CLASSIFICATION	delete messages which have this as their action
WITHOUT_CLASSIFICATION	delete linkends
WITHOUT_CLASSIFICATION	delete attributelinks where this is the value
WITHOUT_CLASSIFICATION	delete stimuli which have this as a sender or receiver
WITHOUT_CLASSIFICATION	binary link
WITHOUT_CLASSIFICATION	delete all sendactions which have this as signal
WITHOUT_CLASSIFICATION	delete all signalevents which have this as the signal
WITHOUT_CLASSIFICATION	@see org.argouml.model.umlhelper#deletecollection(java.util.collection)
WITHOUT_CLASSIFICATION	@see org.argouml.model.umlhelper#getsource(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.umlhelper#getdestination(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.umlhelper#move(java.lang.object org.argouml.model.umlhelper.direction)
WITHOUT_CLASSIFICATION	text was stored in name in uml 1.3
WITHOUT_CLASSIFICATION	the name of the meta type is the class name (after the last .) and before the next $ or end of class name.
WITHOUT_CLASSIFICATION	delete collaborationinstancesets where this is the last participatinginstance
WITHOUT_CLASSIFICATION	delete interactioninstancesets where this is the last participatingstimulus
WITHOUT_CLASSIFICATION	handles all children of relationship including extend and include which are not members of core
WITHOUT_CLASSIFICATION	this doesn't support i18n or multiple states but it's just a default
WITHOUT_CLASSIFICATION	partitions are composite elements and will get deleted implicitly partition contents don't need to be deleted or checked
WITHOUT_CLASSIFICATION	@see org.netbeans.api.xmi.xmireferenceprovider#getreference(javax.jmi.reflect.refobject)
WITHOUT_CLASSIFICATION	look for an existing reference matching our mofid
WITHOUT_CLASSIFICATION	probably redundant - just in case
WITHOUT_CLASSIFICATION	delete messages which have this as sender or receiver
WITHOUT_CLASSIFICATION	helper interfaces and methods.
WITHOUT_CLASSIFICATION	checkstyleoff - ignore too many parameters since api is fixed by mdr
WITHOUT_CLASSIFICATION	checkstyleon
WITHOUT_CLASSIFICATION	shorthand notation for convenience
WITHOUT_CLASSIFICATION	quick exit if it's a transaction event (we get a lot of them and they are all ignored)
WITHOUT_CLASSIFICATION	the 4-arg version of this method depends on this ordering. don't change it!
WITHOUT_CLASSIFICATION	interactioninstancesets will get deleted automatically because they are associated by composition
WITHOUT_CLASSIFICATION	if this is the only message contained in the interaction we delete the interaction
WITHOUT_CLASSIFICATION	object from a different file register with superclass so it can resolve all references
WITHOUT_CLASSIFICATION	@see org.netbeans.lib.jmi.xmi.xmicontext#getreference(java.lang.string java.lang.string)
WITHOUT_CLASSIFICATION	/ begin andromda code /
WITHOUT_CLASSIFICATION	if the model url has a suffix of '.zip' or '.jar' get the suffix without it and store it in the urlmap
WITHOUT_CLASSIFICATION	several tries to construct a url that really exists.
WITHOUT_CLASSIFICATION	if systemid is publicid previously mapped from a systemid try to use the systemid.
WITHOUT_CLASSIFICATION	try to find suffix in module list.
WITHOUT_CLASSIFICATION	search the classpath
WITHOUT_CLASSIFICATION	give up and let superclass deal with it.
WITHOUT_CLASSIFICATION	remove the first prefix because it may be an archive (like magicdraw)
WITHOUT_CLASSIFICATION	we've got a profile read pending - handle it ourselves now
WITHOUT_CLASSIFICATION	shouldn't happen
WITHOUT_CLASSIFICATION	otherwise if it's not something we've already read just punt to the super class.
WITHOUT_CLASSIFICATION	unfortunately the mdr super implementation throws debugexception with just the message from the causing exception rather than nesting the exception itself so we don't have all the information we'd like
WITHOUT_CLASSIFICATION	only add mof elements not primitive datatypes
WITHOUT_CLASSIFICATION	only add mof elements not primitive datatypes
WITHOUT_CLASSIFICATION	for transition use indirection through target statevertex
WITHOUT_CLASSIFICATION	look for an existing reference matching our mofid
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	get all (uml) metaclasses
WITHOUT_CLASSIFICATION	object[] args = { typename elemname } misc.name.element-import = imported {0} {1} return translator .localize("misc.name.element-import" args)
WITHOUT_CLASSIFICATION	although this only handles one level of package it is ok for uml 1.4 because of clustering get the right uml package in the extent
WITHOUT_CLASSIFICATION	return the metatype proxy
WITHOUT_CLASSIFICATION	we must find out if the activator itself does not have message as it's activator
WITHOUT_CLASSIFICATION	an activator can't also be a predecessor of a message
WITHOUT_CLASSIFICATION	this double 'for' loop may be optimised as follows - use arrays in stead of a set for bases - have the second loop start from the element after base1 but i chose not to do this since the gain is small and this is only used for a lazily filled combo. btw this is also used by notation.
WITHOUT_CLASSIFICATION	an association can only have a single unnamed classifierrole so
WITHOUT_CLASSIFICATION	if we are unnamed eliminate all classifiers which are already the base of some role
WITHOUT_CLASSIFICATION	eliminate classifiers which already have an unnamed role
WITHOUT_CLASSIFICATION	wfr 2.10.3.3 #4
WITHOUT_CLASSIFICATION	eliminate classifiers which already have an unnamed role
WITHOUT_CLASSIFICATION	we need to verify that ns is a package if not - find its parent package! otherwise this causes an exception when creating a sequence diagram for a classifierrole.
WITHOUT_CLASSIFICATION	no initialization currently
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	if we are unnamed eliminate all classifiers which are already the base of some role
WITHOUT_CLASSIFICATION	|| context instanceof collaboration || context instanceof model
WITHOUT_CLASSIFICATION	@see org.netbeans.lib.jmi.xmi.xmiheaderprovider#writeheader(java.io.writer)
WITHOUT_CLASSIFICATION	note the <xmi.header></xmi.header> is provided for us
WITHOUT_CLASSIFICATION	not implemented in mdr
WITHOUT_CLASSIFICATION	@see org.argouml.model.abstractmodeleventpump#addmodeleventlistener(java.beans.propertychangelistener java.lang.object java.lang.string[])
WITHOUT_CLASSIFICATION	@see org.argouml.model.abstractmodeleventpump#addmodeleventlistener(java.beans.propertychangelistener java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.abstractmodeleventpump#removemodeleventlistener(java.beans.propertychangelistener java.lang.object java.lang.string[])
WITHOUT_CLASSIFICATION	@see org.argouml.model.abstractmodeleventpump#removemodeleventlistener(java.beans.propertychangelistener java.lang.object java.lang.string[])
WITHOUT_CLASSIFICATION	@see org.argouml.model.abstractmodeleventpump#removemodeleventlistener(java.beans.propertychangelistener java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.abstractmodeleventpump#addclassmodeleventlistener(java.beans.propertychangelistener java.lang.object java.lang.string[])
WITHOUT_CLASSIFICATION	clean up index entries
WITHOUT_CLASSIFICATION	will always be null
WITHOUT_CLASSIFICATION	create a change event for the corresponding property
WITHOUT_CLASSIFICATION	will always be null
WITHOUT_CLASSIFICATION	create an event for the other end of the association
WITHOUT_CLASSIFICATION	will always be null
WITHOUT_CLASSIFICATION	and a change event for that end
WITHOUT_CLASSIFICATION	will always be null
WITHOUT_CLASSIFICATION	will always be null
WITHOUT_CLASSIFICATION	create a change event for the associated property
WITHOUT_CLASSIFICATION	will always be null
WITHOUT_CLASSIFICATION	create an event for the other end of the association
WITHOUT_CLASSIFICATION	will always be null
WITHOUT_CLASSIFICATION	create a change event for the associated property
WITHOUT_CLASSIFICATION	will always be null
WITHOUT_CLASSIFICATION	cut down on debugging noise
WITHOUT_CLASSIFICATION	unregister deleted instances after all events have been delivered
WITHOUT_CLASSIFICATION	any given listener is only called once even if it is registered for multiple relevant matches
WITHOUT_CLASSIFICATION	this will include all subtypes registered
WITHOUT_CLASSIFICATION	(log.isdebugenabled()
WITHOUT_CLASSIFICATION	for debugging you probably want either this or the logging for every event which is fired - not both
WITHOUT_CLASSIFICATION	log.isdebugenabled()
WITHOUT_CLASSIFICATION	fetch the key before going in synchronized mode
WITHOUT_CLASSIFICATION	log.log(level.fine " class " + name + " has subtypes " + names.get(name))
WITHOUT_CLASSIFICATION	convert classname to refobject
WITHOUT_CLASSIFICATION	if we don't have a mofclass see if we can get one from the instance
WITHOUT_CLASSIFICATION	if we still don't have a mofclass something's wrong
WITHOUT_CLASSIFICATION	throw new illegalargumentexception("property '" + attribute + "' doesn't exist in metamodel")
WITHOUT_CLASSIFICATION	if there isn't a 3rd column then this represents a connection of elements of the same type.
WITHOUT_CLASSIFICATION	save the model (current)
WITHOUT_CLASSIFICATION	@see org.argouml.model.changeablekind#getaddonly()
WITHOUT_CLASSIFICATION	lookup primary key creating new entry if needed
WITHOUT_CLASSIFICATION	lookup primary key creating new entry if needed
WITHOUT_CLASSIFICATION	if there are no subkeys register using our special value to indicate that this is a primary key only registration
WITHOUT_CLASSIFICATION	uml 2.x only
WITHOUT_CLASSIFICATION	uml 2.x only
WITHOUT_CLASSIFICATION	uml 2.x only
WITHOUT_CLASSIFICATION	look for a tagdefinition matching the given name
WITHOUT_CLASSIFICATION	create a new tagdefinition if none found
WITHOUT_CLASSIFICATION	only add all if there are some to add.
WITHOUT_CLASSIFICATION	clear target so that multiple copies have no effect (other than inefficiency)
WITHOUT_CLASSIFICATION	delete all taggedvalues with this type
WITHOUT_CLASSIFICATION	used by the copy functions. do not call this function directly. @param source the stereotype to copy from. @param target the object becoming a copy.
WITHOUT_CLASSIFICATION	"element")
WITHOUT_CLASSIFICATION	well formedness rule 4.12.3.1 compositestate [4] there have to be at least two composite substates in a concurrent composite state. if this is broken by deletion of substate then we delete the other remaining substates.
WITHOUT_CLASSIFICATION	the effect will get deleted automatically by mdr unlike the guard.
WITHOUT_CLASSIFICATION	although usage & permission are dependencies they need to be include separately because of the way lookup works
WITHOUT_CLASSIFICATION	the following is specifically for realizations
WITHOUT_CLASSIFICATION	the next 3 restrictions for abstraction seem to be argo specific not something the uml spec requires - tfm - 20070215
WITHOUT_CLASSIFICATION	a list of valid connections between elements the connection type first and then the elements to be connected
WITHOUT_CLASSIFICATION	todo constraints todo required tags
WITHOUT_CLASSIFICATION	specifies valid elements for a model to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a model to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a package to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a classifier to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an interface to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a signal to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an actor to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a use case to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a use case to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a node to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a enumeration to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a datatype to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a operation to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an event to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an associationrole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an associationrole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an associationrole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an associationrole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an associationrole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an associationrole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an associationrole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an associationrole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an associationrole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an associationrole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an state to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an callstate to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an simplestate to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an subactivitystate to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an actionstate to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an actionstate to contain
WITHOUT_CLASSIFICATION	supports implementation of some special elements not supported by buildnode
WITHOUT_CLASSIFICATION	the list of namespaces to return
WITHOUT_CLASSIFICATION	if our map has any entries for this type it's a connection type
WITHOUT_CLASSIFICATION	get the list of valid model item pairs for the given connection type
WITHOUT_CLASSIFICATION	see if there's a pair in this list that match the given model elements
WITHOUT_CLASSIFICATION	find the passed in container in validcontainmentmap
WITHOUT_CLASSIFICATION	determine if metatype is a valid element for container
WITHOUT_CLASSIFICATION	uml 1.4.2 spec section 4.5.3.20 [5] a generalizableelement may only be a child of generalizableelement of the same kind.
WITHOUT_CLASSIFICATION	begin a transaction - we'll do a bunch of reads first to collect a set of elements to delete - then delete them all
WITHOUT_CLASSIFICATION	no else here to make sure classifier with its double inheritance goes ok
WITHOUT_CLASSIFICATION	no else here to make sure associationclass goes ok
WITHOUT_CLASSIFICATION	no else to handle multiple inheritance of linkobject
WITHOUT_CLASSIFICATION	if we get this with the repository locked it means our root model element was already deleted. nothing to do
WITHOUT_CLASSIFICATION	our wrapped version of the same error
WITHOUT_CLASSIFICATION	end our transaction
WITHOUT_CLASSIFICATION	if there are no owned elements then return empty list
WITHOUT_CLASSIFICATION	this enforces the following well-formedness rule. <p>well formedness rule 4.12.3.1 compositestate [4] there have to be at least two composite substates in a concurrent composite state.<p> if this is broken by deletion of substate then we change the parent composite substate to be not concurrent.
WITHOUT_CLASSIFICATION	we don't care about the value - just want to see if it throws
WITHOUT_CLASSIFICATION	recurse into ourself for each parent
WITHOUT_CLASSIFICATION	the following should always be true
WITHOUT_CLASSIFICATION	if we were handed a classifier to start this must be a classifier
WITHOUT_CLASSIFICATION	we have to follow the arrows..
WITHOUT_CLASSIFICATION	|| ns instanceof usecase see comment below
WITHOUT_CLASSIFICATION	note although wfr #3 in section 2.11.3.5 usecase of the uml 1.4 spec says "a usecase cannot contain any classifiers" the ocl is actually self.contents->isempty which would seem to imply it can't contain any elements - tfm - 20060416
WITHOUT_CLASSIFICATION	made following changes from ocl in uml 1.4 section 2.9.3.16 collaborationinstance -> collaborationinstanceset stimuli -> stimulus
WITHOUT_CLASSIFICATION	a profile is a special package having the <<profile>> stereotype which can only contain the following types
WITHOUT_CLASSIFICATION	|| modelelement instanceof statemachine
WITHOUT_CLASSIFICATION	a profile is a special package having the <<profile>> stereotype
WITHOUT_CLASSIFICATION	there actually don't appear to be any restrictions on the namespace for a generalization. the uml 1.4 wfr 2.5.3.20 #3 refers to generalizableelements not generalizations - tfm
WITHOUT_CLASSIFICATION	only build a namepace if needed with
WITHOUT_CLASSIFICATION	return struc.getowner().getnamespace().getownedelement().contains( struc.gettype())
WITHOUT_CLASSIFICATION	self.allconnections->forall(r | self.namespace.allcontents->includes(r.participant) )
WITHOUT_CLASSIFICATION	d.supplier.oclastype(generalizableelement). allparents.oclastype(namespace).ownedelement->select (e | e. elementownership.visibility = #public)->includes (r.participant) or
WITHOUT_CLASSIFICATION	d.supplier.oclastype(namespace).ownedelement->select (e | e.elementownership.visibility = #public)->includes (r.participant) or
WITHOUT_CLASSIFICATION	d.supplier.oclastype(package).allimportedelements->select ( e | e. elementimport.visibility = #public) ->includes (r.participant) ) )
WITHOUT_CLASSIFICATION	get the namespace hierarchy for each element
WITHOUT_CLASSIFICATION	traverse the lists looking for the last (innermost) match
WITHOUT_CLASSIFICATION	this is an expensive method that we should ensure is called rarely. hence info level to track easily.
WITHOUT_CLASSIFICATION	uml 1.4 wfr 2.5.3.1 #3
WITHOUT_CLASSIFICATION	uml 1.4 wfr 2.5.3.1 #3 - no aggregation for n-ary associations
WITHOUT_CLASSIFICATION	we silently ignore requests which conflict with uml 1.4 wfr 2.5.3.1 #3 - no aggregation for n-ary associations
WITHOUT_CLASSIFICATION	if we made something aggregate make sure the other ends conform to uml 1.4 wfr 2.5.3.1 #2 - no more than one aggregate end
WITHOUT_CLASSIFICATION	uml 1.4 wfr 2.5.3.1 #3 - no aggregation for n-ary associations
WITHOUT_CLASSIFICATION	<em>warning when changing the implementation of this method be warned that the sequence of the if then else tree does matter.</em> most notably do not move the setnamespace method any level up in the tree.<p>
WITHOUT_CLASSIFICATION	all text was stored in name field in uml 1.3
WITHOUT_CLASSIFICATION	returns nothing
WITHOUT_CLASSIFICATION	boolean string integer long float double etc
WITHOUT_CLASSIFICATION	this method is cpu intensive and therefore needs to be as efficient as possible.
WITHOUT_CLASSIFICATION	because we get the metatype class stripped of its reflective proxies we need to jump through a hoop or two to find it in the metamodel then work from there to get its proxy.
WITHOUT_CLASSIFICATION	remove any elements not in requested namespace
WITHOUT_CLASSIFICATION	check whether model element is contained in given namespace/container.
WITHOUT_CLASSIFICATION	get classifiers in namespace
WITHOUT_CLASSIFICATION	get features owned by those classifiers
WITHOUT_CLASSIFICATION	select those features which are behavioralfeatures
WITHOUT_CLASSIFICATION	should these also be deleted?
WITHOUT_CLASSIFICATION	this is silly but for backward compatibility
WITHOUT_CLASSIFICATION	todo this is the 2nd part of this method
WITHOUT_CLASSIFICATION	for a classifier <pre> [10] the operation allcontents returns a set containing all modelelements contained in the classifier together with the contents inherited from its parents. allcontents set(modelelement) allcontents = self.contents->union( self.parent.allcontents->select(e | e.elementownership.visibility = #public or e.elementownership.visibility = #protected)) where parent is defined for generalizableelement as [1] the operation parent returns a set containing all direct parents parent set(generalizableelement) parent = self.generalization.parent </pre><p>
WITHOUT_CLASSIFICATION	for a collaboration <pre> [1 ] the operation allcontents results in the set of all modelelements contained in the collaboration together with those contained in the parents except those that have been specialized. allcontents set(modelelement) allcontents = self.contents->union ( self.parent.allcontents->reject ( e | self.contents.name->include (e.name) )) parent here is the generalizableelement definition </pre>
WITHOUT_CLASSIFICATION	wellformednessrules and preconditions
WITHOUT_CLASSIFICATION	uml 1.4 wfr 2.5.3.1 #3 - no aggregation for n-ary associations
WITHOUT_CLASSIFICATION	equal
WITHOUT_CLASSIFICATION	greater
WITHOUT_CLASSIFICATION	less than
WITHOUT_CLASSIFICATION	binary association
WITHOUT_CLASSIFICATION	delete linkends which have this as their associationend
WITHOUT_CLASSIFICATION	delete attributelinks where this is the attribute
WITHOUT_CLASSIFICATION	delete createactions which have this as their instantiation
WITHOUT_CLASSIFICATION	@see org.argouml.model.activitygraphshelper#findclassifierbyname( java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	delete dependencies where this is the only client
WITHOUT_CLASSIFICATION	delete dependencies where this is the only supplier
WITHOUT_CLASSIFICATION	delete callactions which have this as their operation
WITHOUT_CLASSIFICATION	delete callevents which have this as their operation
WITHOUT_CLASSIFICATION	todo all the todos in the docopyfoo methods below are inherited from the nsuml implementation and do not reflect new issues. one additional thing which does need to be dealt with is the copying of any attributes which have been added since this code was implemented for uml 1.3.
WITHOUT_CLASSIFICATION	nothing more to do.
WITHOUT_CLASSIFICATION	used by the copy functions. do not call this function directly. todo actions? instances? collaborations etc? @param source the source classifier @param target the target classifier
WITHOUT_CLASSIFICATION	copy all the features
WITHOUT_CLASSIFICATION	used by the copy functions. do not call this function directly. todo generalizations specializations? @param source the source generalizable element @param target the target generalizable element
WITHOUT_CLASSIFICATION	used by the copy functions. do not call this function directly. todo template parameters default type todo constraining elements todo flows dependencies comments bindings contexts ??? todo contents residences ??? @param source the source me @param target the target me
WITHOUT_CLASSIFICATION	nothing more to do don't copy owned elements.
WITHOUT_CLASSIFICATION	copy raised signals
WITHOUT_CLASSIFICATION	set the name so that superclasses can find the newly created element in the model if necessary.
WITHOUT_CLASSIFICATION	note that if we're copying this element then we must also be allowed to copy other necessary objects.
WITHOUT_CLASSIFICATION	don't explicitly check if element is null
WITHOUT_CLASSIFICATION	return 1..1 multiplicity for empty string
WITHOUT_CLASSIFICATION	convert "" to "0.." instead of ".."
WITHOUT_CLASSIFICATION	in this case either the container was not set or it was not contained in a statemachine.
WITHOUT_CLASSIFICATION	according wfr in case of activitygraph only.
WITHOUT_CLASSIFICATION	for consistency with attribute and operation give it a default name and location
WITHOUT_CLASSIFICATION	delete extends which have this as their only extensionpoint
WITHOUT_CLASSIFICATION	delete extends where this is the base
WITHOUT_CLASSIFICATION	delete includes where this is the addition
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	test multipe items registered for single key set
WITHOUT_CLASSIFICATION	remove with null item should remove all entries for key
WITHOUT_CLASSIFICATION	success
WITHOUT_CLASSIFICATION	success
WITHOUT_CLASSIFICATION	need to copy the lists since we will be moving the elements one by one
WITHOUT_CLASSIFICATION	deleting "source" here would probably delete the parameters
WITHOUT_CLASSIFICATION	only set the name if it differs from the text.
WITHOUT_CLASSIFICATION	need to copy the lists since we will be moving the elements
WITHOUT_CLASSIFICATION	this is not necessarily the current diagram!
WITHOUT_CLASSIFICATION	remove the old fig from the diagram so we can draw the new one in its place
WITHOUT_CLASSIFICATION	p.movetotrash(source)
WITHOUT_CLASSIFICATION	as soon as we've created a notation and have registered it listener force an event to go to the listener so it draws for the first time.
WITHOUT_CLASSIFICATION	if there are no subkeys register using our special value to indicate that this is a primary key only registration
WITHOUT_CLASSIFICATION	made following change from ocl in uml 1.4 section 2.9.3.22 collaborationinstance -> collaborationinstanceset
WITHOUT_CLASSIFICATION	if there is a 3rd column then this represents a connection of between 2 different types of element.
WITHOUT_CLASSIFICATION	elements which will be deleted when their container is deleted don't get added to the list of elements to be deleted (but we still want to traverse them looking for other elements to be deleted)
WITHOUT_CLASSIFICATION	technically this is legal but a structuralfeature should probably only ever have an owner instead of a namespace. - tfm
WITHOUT_CLASSIFICATION	we'll put the association in the namespace of whichever end is not navigable and is writeable. if they both are we'll use the namepace of c1.
WITHOUT_CLASSIFICATION	enumerationliterals should get deleted implicitly since they are associated by composition
WITHOUT_CLASSIFICATION	set the namespace to that of the base as first choice or that of the addition as second choice.
WITHOUT_CLASSIFICATION	uml2 only
WITHOUT_CLASSIFICATION	editor editor = globals.cureditor() graphmodel gm = editor.getgraphmodel() layerdiagram lay = ((layerdiagram) editor.getlayermanager().getactivelayer())
WITHOUT_CLASSIFICATION	have we handled uml2 here?
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	get all classifiers in all top level packages of all profiles
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	we got passed an unmodifiable list. copy it and sort the result
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mousereleased( java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mousepressed(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseclicked(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseentered(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	set up the property panels for uml elements
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#setexpression(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#newexpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	build up an array list of the heights of each label/component pair. heights of zero indicate a proportional height.
WITHOUT_CLASSIFICATION	make sure the component width isn't any greater than its maximum allowed width
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.action#isenabled()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#getselectedmodelelement()
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#getexpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#setexpression(java.lang.object)
WITHOUT_CLASSIFICATION	if we do not set it to null first then we get a mdr debugexception
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#newexpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#addelement(java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.comboboxmodel#setselecteditem(java.lang.object)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	this can throw an exception if the target has been deleted. we don't want to try locking the repository because this is called from the event delivery thread and could cause a deadlock. instead catch the exception and leave the model empty.
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see javax.swing.defaultlistmodel#contains(java.lang.object)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	we tried to remove a value
WITHOUT_CLASSIFICATION	allow listening to other elements
WITHOUT_CLASSIFICATION	don't test changed element if it was deleted
WITHOUT_CLASSIFICATION	@see javax.swing.abstractlistmodel#firecontentschanged( object int int)
WITHOUT_CLASSIFICATION	@see javax.swing.abstractlistmodel#fireintervaladded( object int int)
WITHOUT_CLASSIFICATION	@see javax.swing.abstractlistmodel#fireintervalremoved( object int int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel2#getselectedmodelelement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel2#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	do nothing by design.
WITHOUT_CLASSIFICATION	do nothing by default.
WITHOUT_CLASSIFICATION	allow null
WITHOUT_CLASSIFICATION	this is explained by wfr 2 of a structuralfeature the type of a structuralfeature must be a class datatype or interface. @see org.argouml.uml.ui.umlcomboboxmodel#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#buildmodellist()
WITHOUT_CLASSIFICATION	restricting types for tagged values
WITHOUT_CLASSIFICATION	classifier is way too much in uml 2.x
WITHOUT_CLASSIFICATION	the minimum set of standard types
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#getselectedmodelelement()
WITHOUT_CLASSIFICATION	do nothing by default.
WITHOUT_CLASSIFICATION	@see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	keep them sorted
WITHOUT_CLASSIFICATION	we got passed an unmodifiable list. copy it and sort the result
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#getexpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#setexpression(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#newexpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel2#getselectedmodelelement()
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed( java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#addothermodeleventlisteners(java.lang.object)
WITHOUT_CLASSIFICATION	make a copy of the modelelements
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlplaintextdocument#setproperty(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlplaintextdocument#getproperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlplaintextdocument#setproperty(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlplaintextdocument#getproperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel2#isvalidelement( java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel2#getselectedmodelelement()
WITHOUT_CLASSIFICATION	add stereotypes submenu
WITHOUT_CLASSIFICATION	the method
WITHOUT_CLASSIFICATION	the selected operation
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildpopup(javax.swing.jpopupmenu int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#settarget(java.lang.object)
WITHOUT_CLASSIFICATION	make sure we know it when a classifier is added as a base
WITHOUT_CLASSIFICATION	make sure we know it when a classifier is added as a base
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#getselectedmodelelement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#isvalidelement(object)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#buildmodellist()
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#getselectedmodelelement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#removeothermodeleventlisteners(java.lang.object)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	base is already set to this assoc
WITHOUT_CLASSIFICATION	this check is needed otherwise the setbase() below gives an exception.
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	just in case the existing selected element is from elsewhere make sure it is in the list
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	the selected value may be "" to clear the represented classifier.
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	private boolean mustrefresh
WITHOUT_CLASSIFICATION	mustrefresh = true
WITHOUT_CLASSIFICATION	this should not happen.
WITHOUT_CLASSIFICATION	if it has no language then we assume it is not an instance of opaqueexpression so we leave it null and handle elsewhere
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlplaintextdocument#getproperty()
WITHOUT_CLASSIFICATION	/ build the field /
WITHOUT_CLASSIFICATION	/ add field(s) to panel /
WITHOUT_CLASSIFICATION	click on the already selected value must not call setvalue
WITHOUT_CLASSIFICATION	the 2 radios have only one information.
WITHOUT_CLASSIFICATION	update the model and then notify
WITHOUT_CLASSIFICATION	when call by contructor no one is selected
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	private boolean mustrefresh
WITHOUT_CLASSIFICATION	mustrefresh = true
WITHOUT_CLASSIFICATION	this should not happen.
WITHOUT_CLASSIFICATION	if we do not set it to null first then we get a mdr debugexception
WITHOUT_CLASSIFICATION	expressions are datatypes not independent model elements be careful not to reuse them
WITHOUT_CLASSIFICATION	we need to to this otherwise there is no notification and diagram isn't change
WITHOUT_CLASSIFICATION	needed for notification
WITHOUT_CLASSIFICATION	if the control is a panel add it
WITHOUT_CLASSIFICATION	to be really sure let's add the operation that is linked to the action in the model too - if it is not listed yet. we need this incase an operation is moved out of the package or maybe with imported xmi
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#getselectedmodelelement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#isvalidelement(java.lang.object)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#getexpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#setexpression(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#newexpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#getexpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#setexpression(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#newexpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#buildmodellist()
WITHOUT_CLASSIFICATION	fill the list with items
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#getselectedmodelelement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	in uml2 the target is already the "expression" (opaque)
WITHOUT_CLASSIFICATION	reuse opaque just set it's attributes
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	expressions are datatypes not independent model elements be careful not to reuse them
WITHOUT_CLASSIFICATION	make it stretch vertically
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#insertupdate(javax.swing.event. documentevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#getexpression()
WITHOUT_CLASSIFICATION	if we do not set it to null first then we get a mdr debugexception
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#newexpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement( java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#changedupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#removeupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#insertupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#changedupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#removeupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#insertupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	make it stretch vertically
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcombobox#doit(actionevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	p = new umlvaluespecificationpanel(model propertyname)
WITHOUT_CLASSIFICATION	mmodelelement
WITHOUT_CLASSIFICATION	if not it is a control and must be labeled
WITHOUT_CLASSIFICATION	only association end has an aggregation option box
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	create it [here opaqueexpression which is the first choice] note that if we edit the initial value in the diagram (double clic) it was replaced by an opaqueexpression
WITHOUT_CLASSIFICATION	destroy it
WITHOUT_CLASSIFICATION	title = "" because already done for optional
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#getselectedmodelelement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#buildmodellist()
WITHOUT_CLASSIFICATION	we got passed an unmodifiable list. copy it and sort the result
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	force the parent to redraw
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	do not set buildingmodel = false here otherwise the action for selection is performed.
WITHOUT_CLASSIFICATION	add new listeners
WITHOUT_CLASSIFICATION	makes sure we can select 'none'
WITHOUT_CLASSIFICATION	todo for large lists this is doing a linear search of literally thousands of elements
WITHOUT_CLASSIFICATION	todo here too?
WITHOUT_CLASSIFICATION	check against "" is needed for backward compatibility. don't remove without checking subclasses and warning downstream developers - tfm - 20081211
WITHOUT_CLASSIFICATION	start of interval
WITHOUT_CLASSIFICATION	end of interval
WITHOUT_CLASSIFICATION	in middle of interval
WITHOUT_CLASSIFICATION	allow listening to other elements
WITHOUT_CLASSIFICATION	makes sure we can select 'none'
WITHOUT_CLASSIFICATION	add new listeners
WITHOUT_CLASSIFICATION	don't try to test this if we're removing the element
WITHOUT_CLASSIFICATION	we tried to remove a value
WITHOUT_CLASSIFICATION	it would be better if we didn't need the container to get the target. this constructor can have zero parameters as soon as we improve targetchanged.
WITHOUT_CLASSIFICATION	allow listening to other elements
WITHOUT_CLASSIFICATION	@see javax.swing.listmodel#getelementat(int)
WITHOUT_CLASSIFICATION	@see javax.swing.listmodel#getsize()
WITHOUT_CLASSIFICATION	catch callers attempting to use one without other
WITHOUT_CLASSIFICATION	@see javax.swing.comboboxmodel#setselecteditem(java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.comboboxmodel#getselecteditem()
WITHOUT_CLASSIFICATION	@see javax.swing.abstractlistmodel#firecontentschanged( object int int)
WITHOUT_CLASSIFICATION	@see javax.swing.abstractlistmodel#fireintervaladded( object int int)
WITHOUT_CLASSIFICATION	@see javax.swing.abstractlistmodel#fireintervalremoved( object int int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	do nothing by default.
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlplaintextdocument#setproperty(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlplaintextdocument#getproperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	mutators hold write lock & will deadlock if use is not thread safe
WITHOUT_CLASSIFICATION	@see javax.swing.text.document#remove(int int)
WITHOUT_CLASSIFICATION	mutators hold write lock & will deadlock if use is not thread-safe
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#getselectedmodelelement()
WITHOUT_CLASSIFICATION	do nothing by design.
WITHOUT_CLASSIFICATION	note this may be called from a different thread so we need to be careful of the threading restrictions imposed by abstractdocument for mutators to be sure we don't deadlock.
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#isvalidelement(object)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	mutators hold write lock & will deadlock if use is not thread safe
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcheckbox#buildmodel()
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	super(new labelledlayout())
WITHOUT_CLASSIFICATION	c.insets = new insets(1 1 1 1)
WITHOUT_CLASSIFICATION	get the list opaqueexpression literalstring
WITHOUT_CLASSIFICATION	by default the first value of the combobox is selected.
WITHOUT_CLASSIFICATION	get current initialvalue
WITHOUT_CLASSIFICATION	select the current type in the combobox
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#getexpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#setexpression(java.lang.object)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	default 0 => opaqueexpression set to 1 for test
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#newexpression()
WITHOUT_CLASSIFICATION	if we do not set it to null first then we get a mdr debugexception
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#removeupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#insertupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	create the body and language field
WITHOUT_CLASSIFICATION	create other panel element
WITHOUT_CLASSIFICATION	create panel containing the previous field
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#buildmodellist()
WITHOUT_CLASSIFICATION	our comparator will throw an invalidelementexception if the old list contains deleted elements (eg after a new project is loaded) so remove all the old contents first
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#getselectedmodelelement()
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed( java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#getselectedmodelelement()
WITHOUT_CLASSIFICATION	make it stretch vertically
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	there are no composite states so this will work
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlplaintextdocument#getproperty()
WITHOUT_CLASSIFICATION	@see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	allow null
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#getselectedmodelelement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlplaintextdocument#setproperty(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlplaintextdocument#getproperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#settarget(java.lang.object)
WITHOUT_CLASSIFICATION	make sure we know it when a classifier is added as a base
WITHOUT_CLASSIFICATION	make sure we know it when a classifier is added as a base
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#getselectedmodelelement()
WITHOUT_CLASSIFICATION	make it stretch vertically
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel#buildmodellist()
WITHOUT_CLASSIFICATION	get all classifiers in our model todo we need the property panels to have some reference to the project they belong to instead of using deprecated functionality
WITHOUT_CLASSIFICATION	get all classifiers in all top level packages of all profiles
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#getselectedmodelelement()
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#changedupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#removeupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#getselectedmodelelement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#isvalidelement(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#isvalidelement(object)
WITHOUT_CLASSIFICATION	the selected value may be "" to clear the represented operation.
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlplaintextdocument#setproperty(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlplaintextdocument#getproperty()
WITHOUT_CLASSIFICATION	ignored - we just skipped inserting it in our document
WITHOUT_CLASSIFICATION	allow null
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#buildmodellist()
WITHOUT_CLASSIFICATION	make sure it's parseable as an number
WITHOUT_CLASSIFICATION	@see javax.swing.comboboxeditor#setitem(java.lang.object)
WITHOUT_CLASSIFICATION	we don't want to show some nasty gray background color now do we?
WITHOUT_CLASSIFICATION	@see javax.swing.comboboxeditor#geteditorcomponent()
WITHOUT_CLASSIFICATION	@see javax.swing.comboboxeditor#addactionlistener(java.awt.event.actionlistener)
WITHOUT_CLASSIFICATION	@see javax.swing.comboboxeditor#removeactionlistener(java.awt.event.actionlistener)
WITHOUT_CLASSIFICATION	@see javax.swing.comboboxeditor#selectall()
WITHOUT_CLASSIFICATION	@see javax.swing.comboboxeditor#getitem()
WITHOUT_CLASSIFICATION	we don't want to show some nasty gray background color now do we?
WITHOUT_CLASSIFICATION	we don't want to show some nasty gray background color now do we?
WITHOUT_CLASSIFICATION	necessary to create distance between the textfield and the icon.
WITHOUT_CLASSIFICATION	necessary to create distance between the textfield and the icon.
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcombobox2#umlcombobox2( umlcomboboxmodel action)
WITHOUT_CLASSIFICATION	next statement is necessary to update the textfield if the selection is equal to what was allready selected
WITHOUT_CLASSIFICATION	@see java.awt.event.focuslistener#focusgained(java.awt.event.focusevent)
WITHOUT_CLASSIFICATION	@see javax.swing.comboboxeditor#setitem(java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.comboboxeditor#geteditorcomponent()
WITHOUT_CLASSIFICATION	@see javax.swing.comboboxeditor#addactionlistener(java.awt.event.actionlistener)
WITHOUT_CLASSIFICATION	@see javax.swing.comboboxeditor#removeactionlistener(java.awt.event.actionlistener)
WITHOUT_CLASSIFICATION	@see javax.swing.comboboxeditor#selectall()
WITHOUT_CLASSIFICATION	@see javax.swing.comboboxeditor#getitem()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	temporary until simplelistmodel is used for all
WITHOUT_CLASSIFICATION	temporary until simplelistmodel is used for all
WITHOUT_CLASSIFICATION	create popup tool if we have a single row
WITHOUT_CLASSIFICATION	create add and remove buttons if needed first
WITHOUT_CLASSIFICATION	then any new buttons
WITHOUT_CLASSIFICATION	pushing this to the end of the awt thread seems to be the only way to get this to update correctly
WITHOUT_CLASSIFICATION	button action
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseclicked(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseentered(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseexited(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mousepressed(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	todo probably really want to cancel editing ((figtexteditor) focusowner).cancelediting()
WITHOUT_CLASSIFICATION	the 5 main component 2 label a panel for langage a panel with button a textarea
WITHOUT_CLASSIFICATION	translator.localize("button.delete")
WITHOUT_CLASSIFICATION	copy previous element
WITHOUT_CLASSIFICATION	copy next element
WITHOUT_CLASSIFICATION	translator.localize("button.move-up")
WITHOUT_CLASSIFICATION	copy in memory the current
WITHOUT_CLASSIFICATION	copy the previous value in the current
WITHOUT_CLASSIFICATION	copy the current in the previous
WITHOUT_CLASSIFICATION	copy in memory the current
WITHOUT_CLASSIFICATION	copy the next value in the current
WITHOUT_CLASSIFICATION	copy the current in the next
WITHOUT_CLASSIFICATION	layout
WITHOUT_CLASSIFICATION	the 2 component a textfield and a list
WITHOUT_CLASSIFICATION	layout
WITHOUT_CLASSIFICATION	extract the icon that is used by the tree control for the current look and feel
WITHOUT_CLASSIFICATION	add a new entry in the list and select it. translator.localize("button.add") +
WITHOUT_CLASSIFICATION	necessary to create distance between the textfield and the icon.
WITHOUT_CLASSIFICATION	eclipse uml2 implementation classes often start with "uml" $non-nls-1$
WITHOUT_CLASSIFICATION	eclipse uml2 implementation classes end with "impl" $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ make sure we have a recognized file extension $non-nls-1$
WITHOUT_CLASSIFICATION	if the euml.resources system property is defined then we are in a stand alone application else we're in an eclipse plug in. the euml.resource should contain the path to the org.eclipse.uml2.uml.resource jar plugin. $non-nls-1$
WITHOUT_CLASSIFICATION	slope of the line we're finding the normal to is slope and the normal is the negative reciprocal slope is (p1.y - p2.y) / (p1.x - p2.x) so recip is - (p1.x - p2.x) / (p1.y - p2.y)
WITHOUT_CLASSIFICATION	uml1.4 only
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseexited(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#getexpression()
WITHOUT_CLASSIFICATION	set the child components to the heights in the array list calculating the height of any proportional component on the fly.
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.actionsetmultiplicity#setselecteditem( java.lang.object java.lang.object)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	if we have a model but no list then build the list with preferred constructor. eventually all lists should be built this way.
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see javax.swing.defaultlistmodel#addelement(java.lang.object)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent )
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#removeothermodeleventlisteners(java.lang.object)
WITHOUT_CLASSIFICATION	@see java.beans.propertychangelistener#propertychange( java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	if the component is a jlabel which has another component assigned then position/size the label and calculate the size of the registered component
WITHOUT_CLASSIFICATION	if the child component is resizable then we don't know it's actual size yet. it will be calculated later as a proportion of the available left over space. for now this is flagged as zero.
WITHOUT_CLASSIFICATION	if a preferred height is not given or is the same as the minimum height then fix the height of this row.
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#getselectedmodelelement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#getselectedmodelelement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlplaintextdocument#setproperty(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#removeupdate(javax.swing.event. documentevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#setexpression(java.lang.object)
WITHOUT_CLASSIFICATION	we only have this here until we have stereotypes list on property panel
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	the property value has changed so rebuild our view. @see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#changedupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlplaintextdocument#setproperty(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel#isvalidelement(java.lang.object)
WITHOUT_CLASSIFICATION	so we found a classifier that is not a classifierinstate. and at least one state has been selected. well let's correct that
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#insertupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#getselectedmodelelement()
WITHOUT_CLASSIFICATION	not in uml1.4
WITHOUT_CLASSIFICATION	not in uml1.4
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcombobox#umlcombobox( umlcomboboxmodel action boolean)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mousereleased(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	layout
WITHOUT_CLASSIFICATION	language has changed
WITHOUT_CLASSIFICATION	translator.localize("button.move-down")
WITHOUT_CLASSIFICATION	object icon = resourceloaderwrapper.lookupicon(s) putvalue(action.name translator.localize(s)) putvalue(action.small_icon icon) set the tooltip string putvalue(action.short_description translator.localize(s))
WITHOUT_CLASSIFICATION	mdr has a hardcoded printstacktrace on all exceptions even if they're caught which is unsightly so we handle unknown elements ourselves rather than letting mdr throw an exception for us to catch. org/netbeans/lib/jmi/util/logger.java this can be uses to disable logging. default output is system.err setproperty("org.netbeans.lib.jmi.logger.filename" "") org.netbeans.mdr.logger the property org.netbeans.lib.jmi.logger controls the minimum severity level for logging
WITHOUT_CLASSIFICATION	commit our transaction
WITHOUT_CLASSIFICATION	not in uml1.4
WITHOUT_CLASSIFICATION	ignore any error. the transaction may already have been unwound as part of exception processing by mdr
WITHOUT_CLASSIFICATION	give the resolver.getidtoobjectmap() entries priority over entries with the same uuid from resolver.getidtoobjectmaps() because entries in resolver.getidtoobjectmaps() are historic.
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getcollaborationshelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getcommonbehaviorfactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getextensionmechanismshelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getmetatypes()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getmessagesort()
WITHOUT_CLASSIFICATION	@see org.argouml.model.commonbehaviorhelper#setreceiver(java.lang.object java.lang.object)
WITHOUT_CLASSIFICATION	nothing to do - we get all events automatically
WITHOUT_CLASSIFICATION	handles all children of relationship including extend and include which are not members of core
WITHOUT_CLASSIFICATION	@see org.argouml.model.umlhelper#move(java.lang.object org.argouml.model.umlhelper.direction)
WITHOUT_CLASSIFICATION	remember the system id of our root document so that we can write out profiles and linked models to a different file if requested
WITHOUT_CLASSIFICATION	for now just skip registering this and ignore the request but the real issue is that magicdraw serializes the same object in two different composition associations first in the referencing file and second in the referenced file
WITHOUT_CLASSIFICATION	if we've found the module model log it and place it in the map so we don't have to find it if we need it again.
WITHOUT_CLASSIFICATION	/ end andromda code /
WITHOUT_CLASSIFICATION	returns a list
WITHOUT_CLASSIFICATION	simulates uml2 getting the aggregation from the opposite end
WITHOUT_CLASSIFICATION	find the bases of the connected classifierroles so that we can see what associations are between them. if there are bases then the associations between those bases form the possible bases. otherwise the bases are formed by all associations in the namespace of the collaboration
WITHOUT_CLASSIFICATION	@see org.argouml.model.abstractmodeleventpump#addmodeleventlistener(java.beans.propertychangelistener java.lang.object java.lang.string[])
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#critique(java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#supports(org.argouml.cognitive.decision)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#getsupporteddecisions()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#addsupporteddecision(org.argouml.cognitive.decision)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#supports(org.argouml.cognitive.goal)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#getsupportedgoals()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#addsupportedgoal(org.argouml.cognitive.goal)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#containsknowledgetype(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#addknowledgetype(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#expand(java.lang.string listset)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#getclarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#isactive()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#isenabled()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#todoitem(java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizedmetatypes()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#supports(org.argouml.cognitive.decision)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#getsupporteddecisions()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#supports(org.argouml.cognitive.goal)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#getsupportedgoals()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#containsknowledgetype(java.lang.string)
WITHOUT_CLASSIFICATION	just returns the descr param. @see org.argouml.cognitive.poster#expand(java.lang.string listset)
WITHOUT_CLASSIFICATION	get the generic clarifier for this designer/poster. @see org.argouml.cognitive.poster#getclarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#snooze()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#unsnooze()
WITHOUT_CLASSIFICATION	does not do anything. @see org.argouml.cognitive.poster#fixit(org.argouml.cognitive.todoitem java.lang.object)
WITHOUT_CLASSIFICATION	just returns false. @see org.argouml.cognitive.poster#canfixit(org.argouml.cognitive.todoitem)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#supports(org.argouml.cognitive.decision)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#supports(org.argouml.cognitive.goal)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#containsknowledgetype(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#expand(java.lang.string org.argouml.cognitive.listset)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#getclarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#fixit(org.argouml.cognitive.todoitem java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.controlmech#isrelevant(org.argouml.cognitive.critics.critic org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.controlmech#isrelevant(org.argouml.cognitive.critics.critic org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.controlmech#isrelevant(org.argouml.cognitive.critics.critic org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.controlmech#isrelevant(org.argouml.cognitive.critics.critic org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.controlmech#isrelevant(org.argouml.cognitive.critics.critic org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.controlmech#isrelevant(org.argouml.cognitive.critics.critic org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.controlmech#isrelevant(org.argouml.cognitive.critics.critic org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.controlmech#isrelevant(org.argouml.cognitive.critics.critic org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.controlmech#isrelevant(org.argouml.cognitive.critics.critic org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.controlmech#isrelevant(org.argouml.cognitive.critics.critic org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.controlmech#isrelevant(org.argouml.cognitive.critics.critic org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.controlmech#isrelevant(org.argouml.cognitive.critics.critic org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#gettarget()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#shouldbeenabled(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetadded(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetremoved(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetset(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todoitemschanged(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todoitemsadded(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todoitemsremoved(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todolistchanged(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todoitemschanged(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todoitemsadded(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todoitemsremoved(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todolistchanged(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.wizstep#settarget(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todoitemschanged(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todoitemsadded(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todoitemsremoved(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todolistchanged(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetadded( targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetremoved( targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetset(targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.projectfilepersister#doload(java.io.file)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todoitemschanged(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todoitemsadded(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todoitemsremoved(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todolistchanged(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todoitemschanged(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todoitemsadded(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todoitemsremoved(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todolistchanged(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todoitemschanged(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todoitemsadded(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todoitemsremoved(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todolistchanged(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todoitemschanged(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todoitemsadded(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todoitemsremoved(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todolistchanged(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetadded(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetremoved(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetset(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.application.events.argogeneratoreventlistener#generatorchanged(org.argouml.application.events.argogeneratorevent)
WITHOUT_CLASSIFICATION	@see org.argouml.application.events.argogeneratoreventlistener#generatoradded(org.argouml.application.events.argogeneratorevent)
WITHOUT_CLASSIFICATION	@see org.argouml.application.events.argogeneratoreventlistener#generatorremoved(org.argouml.application.events.argogeneratorevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#handleresettodefault()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.notationname#getconfigurationvalue()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.notationname#samenotationas(org.argouml.notation.notationname)
WITHOUT_CLASSIFICATION	add an element listener and remember the registration. @param element element to listen for changes on @see org.argouml.model.modeleventpump#addmodeleventlistener(propertychangelistener object string)
WITHOUT_CLASSIFICATION	utility function to add a listener for a given property name and remember the registration. @param element element to listen for changes on @param property name of property to listen for changes of @see org.argouml.model.modeleventpump#addmodeleventlistener(propertychangelistener object string)
WITHOUT_CLASSIFICATION	utility function to add a listener for an array of property names and remember the registration. @param element element to listen for changes on @param property array of property names (strings) to listen for changes of @see org.argouml.model.modeleventpump#addmodeleventlistener(propertychangelistener object string)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#getparsinghelp()
WITHOUT_CLASSIFICATION	utility function to remove an element listener and adapt the remembered list of registration. @param element element to listen for changes on @see org.argouml.model.modeleventpump#addmodeleventlistener(propertychangelistener object string)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#updatelistener(java.beans.propertychangelistener java.lang.object java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#getparsinghelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#parse(java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#getparsinghelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#parse(java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#parse( java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#getparsinghelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#parse(java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#getparsinghelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#getparsinghelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#parse(java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#parse(java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#getparsinghelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#parse(java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#getparsinghelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#getparsinghelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#parse(java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#parse(java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#getparsinghelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#getparsinghelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#parse(java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#getparsinghelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#getparsinghelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#parse(java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#parse(java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#getparsinghelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#getparsinghelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#parse(java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#parse(java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#getparsinghelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#parse(java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#getparsinghelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#parse(java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.notation.notationprovider#parse(java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.notation.notationprovider#getparsinghelp()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.notation.notationprovider#parse(java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.notation.notationprovider#getparsinghelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#getparsinghelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#parse(java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#parse(java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#getparsinghelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#getparsinghelp()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#handlesettingstabrefresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#handlesettingstabsave()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#handlesettingstabcancel()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#handleresettodefault()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#gettabkey()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#gettabpanel()
WITHOUT_CLASSIFICATION	@see org.argouml.application.events.argonotationeventlistener#notationchanged(org.argouml.application.events.argonotationevent)
WITHOUT_CLASSIFICATION	@see org.argouml.application.events.argonotationeventlistener#notationadded(org.argouml.application.events.argonotationevent)
WITHOUT_CLASSIFICATION	@see org.argouml.application.events.argonotationeventlistener#notationremoved(org.argouml.application.events.argonotationevent)
WITHOUT_CLASSIFICATION	@see org.argouml.application.events.argonotationeventlistener#notationprovideradded(org.argouml.application.events.argonotationevent)
WITHOUT_CLASSIFICATION	@see org.argouml.application.events.argonotationeventlistener#notationproviderremoved(org.argouml.application.events.argonotationevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.saxparserbase#handlestartelement( org.argouml.persistence.xmlelement)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.saxparserbase#handleendelement( org.argouml.persistence.xmlelement)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.saxparserbase#iselementofinterest(string)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.memberfilepersister#getmaintag()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.abstractfilepersister#getextension()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.abstractfilepersister#getdesc()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.xmifilepersister#issaveenabled()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.memberfilepersister#getmaintag()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.abstractfilepersister#getextension()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.abstractfilepersister#getdesc()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.abstractfilepersister#issaveenabled()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.projectfilepersister#doload(java.io.file)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.xmltokentablebase#setuptokens()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.memberfilepersister#getmaintag()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.memberfilepersister#load(org.argouml.kernel.project java.io.inputstream)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.memberfilepersister#save(org.argouml.kernel.projectmember java.io.outputstream)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.abstractfilepersister#getextension()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.abstractfilepersister#getdesc()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.projectfilepersister#doload(java.io.file)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.abstractfilepersister#getextension()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.xmltokentablebase#setuptokens()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.abstractfilepersister#getextension()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.abstractfilepersister#getdesc()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.abstractfilepersister#issaveenabled()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.abstractfilepersister#getdesc()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.abstractfilepersister#issaveenabled()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.projectfilepersister#doload(java.io.file)
WITHOUT_CLASSIFICATION	@see org.argouml.profile.profilemanager#lookforregisteredprofile(java.lang.string)
WITHOUT_CLASSIFICATION	@param pc @see org.argouml.profile.profilemanager#applyconfiguration(org.argouml.kernel.profileconfiguration)
WITHOUT_CLASSIFICATION	@see org.argouml.profile.internal.ocl.modelinterpreter#invokefeature(java.util.hashmap java.lang.object java.lang.string java.lang.string java.lang.object[])
WITHOUT_CLASSIFICATION	@see org.argouml.profile.internal.ocl.modelinterpreter#getbuiltinsymbol(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critic#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2(java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.profile.internal.ocl.oclexpressionevaluator#evaluate(java.util.hashmap org.argouml.profile.internal.ocl.modelinterpreter java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.profile.internal.ocl.modelinterpreter#invokefeature(java.util.hashmap java.lang.object java.lang.string java.lang.string java.lang.object[])
WITHOUT_CLASSIFICATION	@see org.argouml.profile.internal.ocl.modelinterpreter#getbuiltinsymbol(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.profile.internal.ocl.uml14.bag#count(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.progressmonitor#setmaximumprogress(int)
WITHOUT_CLASSIFICATION	@see org.argouml.profile.internal.ocl.modelinterpreter#getbuiltinsymbol(java.lang.string)
WITHOUT_CLASSIFICATION	returns the target of this tab. @see org.argouml.ui.tabtarget#gettarget()
WITHOUT_CLASSIFICATION	refresh the text of the tab. @see org.argouml.ui.tabtarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetadded(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetremoved(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetset(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#handleresettodefault()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#handleresettodefault()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#handlesettingstabrefresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#handlesettingstabsave()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#handlesettingstabcancel()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#handleresettodefault()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#gettabkey()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#gettabpanel()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.abstractargojpanel#spawn()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#settarget(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#gettarget()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#refresh()
WITHOUT_CLASSIFICATION	style panels only apply when a fig is selected. @see org.argouml.ui.tabtarget#shouldbeenabled(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetadded( targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetremoved( targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetset(targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetadded(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetremoved(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetset(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#handleresettodefault()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#handleresettodefault()
WITHOUT_CLASSIFICATION	report a progress to the progressmonitor window. @see org.argouml.persistence.progresslistener#progress(org.argouml.persistence.progressevent)
WITHOUT_CLASSIFICATION	report a progress to the progressmonitor window. @see org.argouml.application.api.progressmonitor#updateprogress(int)
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.progressmonitor#iscanceled()
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.progressmonitor#close()
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.progressmonitor#notifymessage(java.lang.string java.lang.string java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.progressmonitor#notifynullaction()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetadded(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetremoved(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetset(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetadded( org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetremoved( org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetset( org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#handleresettodefault()
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.commandlineinterface#docommand(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#handleresettodefault()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#handlesettingstabcancel()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#handlesettingstabrefresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#handlesettingstabsave()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.perspectivemanagerlistener#addperspective(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.perspectivemanagerlistener#removeperspective(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetadded( org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetremoved( org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetset( org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.treemodelumleventlistener#modelelementchanged(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.treemodelumleventlistener#modelelementadded(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.treemodelumleventlistener#modelelementremoved(java.lang.object)
WITHOUT_CLASSIFICATION	the model structure has changed significantly eg a new project. @see org.argouml.ui.explorer.treemodelumleventlistener#structurechanged()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.abstractperspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.abstractperspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.abstractperspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.abstractperspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren( java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies( java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren( java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies( java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.abstractperspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.abstractperspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	note no longer a separate type in uml 2.1
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.weakexplorernode#subsumes(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.weakexplorernode#subsumes(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren( java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies( java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.abstractperspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.abstractperspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.weakexplorernode#subsumes(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren( java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies( java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren( java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies( java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren( java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies( java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.weakexplorernode#subsumes(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.abstractperspectiverule#getchildren( java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.abstractperspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies( java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren( java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies( java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren( java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies( java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.weakexplorernode#subsumes(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.weakexplorernode#subsumes(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren( java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies( java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.abstractperspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.abstractperspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.abstractprojectmember#gettype()
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.abstractprojectmember#getzipfileextension()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todoitem#deselect()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todoitem#select()
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.abstractprojectmember#gettype()
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.abstractprojectmember#getzipfileextension()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.checklist.checkitem#expand(java.lang.string java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#getclarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#initwizard( org.argouml.cognitive.ui.wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#getwizardclass(org.argouml.cognitive.todoitem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2(java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#todoitem( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.abstractcrunconventionalname#computesuggestion(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#getclarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#stillvalid( org.argouml.cognitive.todoitem org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#initwizard( org.argouml.cognitive.ui.wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#getwizardclass(org.argouml.cognitive.todoitem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#todoitem( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#stillvalid( org.argouml.cognitive.todoitem org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.clarifier#setfig(org.tigris.gef.presentation.fig)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.clarifier#settodoitem(org.argouml.cognitive.todoitem)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.clarifier#hit(int int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.clarifier#setfig(org.tigris.gef.presentation.fig)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.clarifier#settodoitem(org.argouml.cognitive.todoitem)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.clarifier#hit(int int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#todoitem( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#stillvalid( org.argouml.cognitive.todoitem org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#getclarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#initwizard( org.argouml.cognitive.ui.wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#getwizardclass(org.argouml.cognitive.todoitem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#predicate( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#todoitem(object designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#todoitem( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#stillvalid( org.argouml.cognitive.todoitem org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.umlwizard#getnumsteps()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.wizmename#makepanel(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.wizmename#doaction(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#todoitem( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#stillvalid( org.argouml.cognitive.todoitem org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#getclarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#initwizard( org.argouml.cognitive.ui.wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.abstractcrunconventionalname#computesuggestion(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#getwizardclass(org.argouml.cognitive.todoitem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2(java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#todoitem( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#stillvalid( org.argouml.cognitive.todoitem org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#getclarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#initwizard( org.argouml.cognitive.ui.wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#getwizardclass(org.argouml.cognitive.todoitem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#todoitem( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#stillvalid( org.argouml.cognitive.todoitem org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#initwizard( org.argouml.cognitive.ui.wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#getwizardclass(org.argouml.cognitive.todoitem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.wizard#doaction(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#getclarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#getwizardclass(org.argouml.cognitive.todoitem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#initwizard( org.argouml.cognitive.ui.wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#getwizardclass(org.argouml.cognitive.todoitem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#getclarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#initwizard( org.argouml.cognitive.ui.wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.abstractcrunconventionalname#computesuggestion(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#getwizardclass(org.argouml.cognitive.todoitem)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#getclarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2(java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizedmetatypes()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#todoitem(java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#stillvalid( org.argouml.cognitive.todoitem org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2(java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#getclarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#initwizard( org.argouml.cognitive.ui.wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#getwizardclass(org.argouml.cognitive.todoitem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#todoitem( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#stillvalid( org.argouml.cognitive.todoitem org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.profile.profile#getprofileidentifier()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#getclarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#initwizard( org.argouml.cognitive.ui.wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#getwizardclass(org.argouml.cognitive.todoitem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#todoitem( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#stillvalid( org.argouml.cognitive.todoitem org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#todoitem( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#stillvalid( org.argouml.cognitive.todoitem org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#todoitem( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#stillvalid( org.argouml.cognitive.todoitem org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#todoitem( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#stillvalid( org.argouml.cognitive.todoitem org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#initwizard( org.argouml.cognitive.ui.wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.abstractcrunconventionalname#computesuggestion(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#getwizardclass(org.argouml.cognitive.todoitem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#todoitem(java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#stillvalid( org.argouml.cognitive.todoitem org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2(java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2(java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizedmetatypes()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#getwizardclass(org.argouml.cognitive.todoitem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#todoitem( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#stillvalid( org.argouml.cognitive.todoitem org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.wizard#doaction(int)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.wizard#makepanel(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#todoitem(java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#stillvalid( org.argouml.cognitive.todoitem org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#getclarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.wizard#canfinish()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#todoitem( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#stillvalid( org.argouml.cognitive.todoitem org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.umlwizard#setsuggestion(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.wizard#doaction(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.wizard#getnumsteps()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#getclarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#initwizard( org.argouml.cognitive.ui.wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#getwizardclass(org.argouml.cognitive.todoitem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#todoitem( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#stillvalid( org.argouml.cognitive.todoitem org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.wizard#makepanel(int)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.wizard#doaction(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#todoitem(java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#stillvalid( org.argouml.cognitive.todoitem org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.wizard#getnumsteps()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.wizard#makepanel(int)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.wizard#doaction(int)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.wizard#cangonext()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.wizard#canfinish()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#todoitem( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#stillvalid( org.argouml.cognitive.todoitem org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2(java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2(java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.wizard#makepanel(int)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.wizard#doaction(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2(java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#todoitem(java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#stillvalid( org.argouml.cognitive.todoitem org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#getclarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#initwizard( org.argouml.cognitive.ui.wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#getwizardclass(org.argouml.cognitive.todoitem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#todoitem(java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#stillvalid( org.argouml.cognitive.todoitem org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#getwizardclass(org.argouml.cognitive.todoitem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.clarifier#setfig(org.tigris.gef.presentation.fig)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.clarifier#settodoitem(org.argouml.cognitive.todoitem)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.clarifier#hit(int int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#todoitem( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#stillvalid( org.argouml.cognitive.todoitem org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2(java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.wizard#doaction(int)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.wizard#makepanel(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2(java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#todoitem( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#stillvalid( org.argouml.cognitive.todoitem org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.wizard#getnumsteps()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.wizard#makepanel(int)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.wizard#canfinish()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.wizard#doaction(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#todoitem( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#stillvalid( org.argouml.cognitive.todoitem org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#getclarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#initwizard( org.argouml.cognitive.ui.wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#getwizardclass(org.argouml.cognitive.todoitem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.abstractprojectmember#gettype()
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.abstractprojectmember#getzipfileextension()
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.projectmember#repair()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.layout.layouter#add(org.argouml.uml.diagram.layout.layoutedobject)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.layout.layouter#remove(org.argouml.uml.diagram.layout.layoutedobject)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.layout.layouter#getobjects()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.layout.layouter#getobject(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.layout.layouter#layout()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#getlabelname()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#getdependentelement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.layout.layouter#getminimumdiagramsize()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#getowner()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#isrelocationallowed(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#relocate(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.activity.ui.figactionstate#getnotationprovidertype()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.figstatevertex#makeselection()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#initnotationproviders(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#renderingchanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#textedited(org.tigris.gef.presentation.figtext)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#texteditstarted(org.tigris.gef.presentation.figtext)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#modelchanged(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#updatelisteners(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#updatenametext()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#clone()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#addenclosedfig(org.tigris.gef.presentation.fig)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.activity.ui.selectionactionstate#getnewnodetype(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#modelchanged(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#getlabelname()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#isrelocationallowed(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#relocate(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figedgemodelelement#getnotationprovidertype()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#getumlactions()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#getlabelname()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#isrelocationallowed(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#relocate(java.lang.object)
WITHOUT_CLASSIFICATION	if the new encloser is null and the old one is a component then the "enclosed" fig has been moved on the diagram. this causes the model to be adapted as follows remove the elementresidence between the "enclosed" and the oldencloser. @see org.argouml.ui.argodiagram#changefigencloser(org.tigris.gef.presentation.fignode org.tigris.gef.presentation.fignode org.tigris.gef.presentation.fignode)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#getnotationprovidertype()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#updatelisteners(java.lang.object java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.umlmutablegraphsupport#isremovefromdiagramallowed(collection)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.fighistorystate#geth()
WITHOUT_CLASSIFICATION	the transition has a name text box. it contains <ul> <li>the event-signature <li>the guard condition between [] <li>the action expression </ul><p> the content of the text box is generated by its own notationprovider. @see org.argouml.uml.diagram.ui.figedgemodelelement#getnotationprovidertype()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figedgemodelelement#getdestination()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figedgemodelelement#getsource()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.figstate#getinitialheight()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.figstate#getinitialwidth()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.figstate#getinitialx()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.figstate#getinitialy()
WITHOUT_CLASSIFICATION	update the text labels. @see org.argouml.uml.diagram.ui.fignodemodelelement#modelchanged(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	update the text labels and listeners. @see org.argouml.uml.diagram.ui.fignodemodelelement#modelchanged(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#updatelisteners(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.figstate#getinitialheight()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.figstate#getinitialwidth()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.figstate#getinitialx()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.figstate#getinitialy()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.figstatevertex#initnotationproviders(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#removefromdiagramimpl()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#renderingchanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#texteditstarted(org.tigris.gef.presentation.figtext)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#textedited(org.tigris.gef.presentation.figtext)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#modelchanged(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#renderingchanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.figstate#getinitialheight()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.figstate#getinitialwidth()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.figstate#getinitialx()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.figstate#getinitialy()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.figstate#getinitialheight()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.figstate#getinitialwidth()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.figstate#getinitialx()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.figstate#getinitialy()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.fighistorystate#geth()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#getlabelname()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#getdependentelement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#isrelocationallowed(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#relocate(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.layout.layoutededge#layout()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.static_structure.layout.classdiagramnode#gettypeordernumer()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.static_structure.layout.classdiagramnode#calculateweight()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.static_structure.layout.classdiagramnode#getrank()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.static_structure.layout.classdiagramnode#getweight()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.static_structure.layout.classdiagramnode#isstandalone()
WITHOUT_CLASSIFICATION	nothing is editable since a link takes its identity from the association. @see org.argouml.uml.diagram.ui.figedgemodelelement#canedit( org.tigris.gef.presentation.fig)
WITHOUT_CLASSIFICATION	listen also to the association of which the link is an instantiation since we want to update the rendering when the association name changes. @see org.argouml.uml.diagram.ui.figedgemodelelement#updatelisteners( java.lang.object java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figedgemodelelement#getdestination()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figedgemodelelement#getsource()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#setnamespace(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#getumlactions()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#getlabelname()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#isrelocationallowed(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#relocate(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#renderingchanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#updatestereotypetext()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#texteditstarted(org.tigris.gef.presentation.figtext)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.importsettings#getimportlevel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.stereotypecontainer#isstereotypevisible()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.stereotypecontainer#setstereotypevisible(boolean)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.visibilitycontainer#isvisibilityvisible()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.visibilitycontainer#setvisibilityvisible(boolean)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.delayedvchangelistener#delayedvetoablechange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#textedited(org.tigris.gef.presentation.figtext)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#texteditstarted(org.tigris.gef.presentation.figtext)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#updatestereotypetext()
WITHOUT_CLASSIFICATION	only refresh the tab if the bounds propertychange event arrives. @see org.argouml.ui.stylepanel#refresh(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#refresh()
WITHOUT_CLASSIFICATION	listen for a removeassociationevent between the comment and the annotated element. when recieved delete the commentedge and this figedgenote. @see org.argouml.uml.diagram.ui.figedgemodelelement#modelchanged(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figsinglelinetext#removefromdiagram()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figsinglelinetext#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figsinglelinetext#removefromdiagram()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figsinglelinetext#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.abstractactioncheckboxmenuitem#togglevalueoftarget(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.abstractactioncheckboxmenuitem#valueoftarget(java.lang.object)
WITHOUT_CLASSIFICATION	if we're drawing to an edge then only allow if the start is a comment @see org.argouml.uml.diagram.ui.modecreategraphedge#isconnectionvalid(org.tigris.gef.presentation.fig org.tigris.gef.presentation.fig)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#settarget(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#gettarget()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#shouldbeenabled(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetadded(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetremoved(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetset(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figedgemodelelement#canedit(org.tigris.gef.presentation.fig)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figedgemodelelement#modelchanged(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetadded(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetremoved(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetset(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.stylepanelfig#settargetbbox()
WITHOUT_CLASSIFICATION	only refresh the tab if the bounds propertychange event arrives. @see org.argouml.ui.stylepanel#refresh(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.stylepanelfig#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#refresh()
WITHOUT_CLASSIFICATION	if we're drawing to an edge then only allow if the start is a comment @see org.argouml.uml.diagram.ui.modecreategraphedge#isconnectionvalid(org.tigris.gef.presentation.fig org.tigris.gef.presentation.fig)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figeditablecompartment#getumlcollection()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figeditablecompartment#getnotationtype()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.abstractactionradiomenuitem#togglevalueoftarget(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#handlesettingstabrefresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#handlesettingstabsave()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#handlesettingstabcancel()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#handleresettodefault()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#gettabkey()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#gettabpanel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.abstractactionradiomenuitem#togglevalueoftarget(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.relocatable#isrelocationallowed(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.relocatable#relocate(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.abstractactioncheckboxmenuitem#togglevalueoftarget(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.abstractactioncheckboxmenuitem#valueoftarget(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstractactionnavigate#navigateto(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstractactionnavigate#navigateto(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#gettarget()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#shouldbeenabled(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetadded( targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetremoved( targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetset( org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figeditablecompartment#getumlcollection()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figeditablecompartment#getnotationtype()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figedgemodelelement#updatelisteners(java.lang.object java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figedgemodelelement#getnotationprovidertype()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.importsettings#getinputsourceencoding()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figedgemodelelement#textedited(org.tigris.gef.presentation.figtext)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figedgemodelelement#texteditstarted(org.tigris.gef.presentation.figtext)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.abstractactioncheckboxmenuitem#togglevalueoftarget(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.abstractactioncheckboxmenuitem#valueoftarget(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.abstractactionradiomenuitem#togglevalueoftarget(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figedgemodelelement#getnotationprovidertype()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figedgemodelelement#updatelisteners(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figedgemodelelement#textedited(org.tigris.gef.presentation.figtext)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figedgemodelelement#texteditstarted(org.tigris.gef.presentation.figtext)
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.delayedvchangelistener#delayedvetoablechange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.pathcontainer#ispathvisible()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.pathcontainer#setpathvisible(boolean)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.abstractactionradiomenuitem#togglevalueoftarget(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figedgemodelelement#canedit(org.tigris.gef.presentation.fig)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figsinglelinetext#removefromdiagram()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#getnotationprovidertype()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#updatelisteners( java.lang.object java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#renderingchanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figedgemodelelement#getnamefig()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figedgemodelelement#getnamebounds()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figeditablecompartment#getumlcollection()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figeditablecompartment#getnotationtype()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figedgemodelelement#canedit(org.tigris.gef.presentation.fig)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figedgemodelelement#modelchanged(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figedgemodelelement#updatelisteners(java.lang.object java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.delayedvchangelistener#delayedvetoablechange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figedgemodelelement#updatelisteners(java.lang.object java.lang.object)
WITHOUT_CLASSIFICATION	the only thing we need to deal with is updating is the condition text. @see org.argouml.uml.diagram.ui.figedgemodelelement#modelchanged(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#getumlactions()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#getlabelname()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#isrelocationallowed(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#relocate(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.importsettings#iscreatediagramsselected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.importsettings#isminimisefigsselected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.importsettingsinternal#isdiagramlayoutselected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.importsettingsinternal#isdescendselected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.importsettingsinternal#ischangedonlyselected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.importsettings#getinputsourceencoding()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.importcommon#getimportlevel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.importcommon#iscreatediagramschecked()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.importcommon#isminimisefigschecked()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.importcommon#isdiagramlayoutselected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.importcommon#isdescendselected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.importcommon#ischangedonlyselected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.settingstypes.booleanselection#isselected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.settingstypes.booleanselection#getdefaultvalue()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.importsettingtypes.uniqueselection#getdefaultselection()
WITHOUT_CLASSIFICATION	we return a new list with the options instead of the options themself because we don't want the user to be able to change the options. @see org.argouml.uml.reveng.settingstypes.uniqueselection#getoptions()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.importsettingtypes.uniqueselection#setselection(int)
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.progressmonitor#close()
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.progressmonitor#iscanceled()
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.progressmonitor#notifymessage(java.lang.string java.lang.string java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.progressmonitor#notifynullaction()
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.progressmonitor#updatemaintask(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.progressmonitor#updatesubtask(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.progresslistener#progress(org.argouml.persistence.progressevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetadded(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetremoved(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetset(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#gettarget()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetadded( org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetremoved( org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetset( org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umluserinterfacecomponent#targetchanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umluserinterfacecomponent#targetreasserted()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.actionadddiagram#creatediagram(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.actionadddiagram#isvalidnamespace(object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetadded(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetremoved(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetset(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.actionnewdiagram#creatediagram()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetadded(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetremoved(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetset(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umluserinterfacecomponent#targetchanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umluserinterfacecomponent#targetreasserted()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.actionadddiagram#creatediagram(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.actionadddiagram#creatediagram(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.actionadddiagram#isvalidnamespace(object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetadded(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetremoved(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetset(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#getexpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#setexpression(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#newexpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umluserinterfacecomponent#targetchanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umluserinterfacecomponent#targetreasserted()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#getexpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#setexpression(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#newexpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.proppanel#shouldbeenabled(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#settarget(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstractactionnavigate#navigateto(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.sourcepathcontroller#getsourcepath(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.sourcepathcontroller#getsourcepathsettings()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.sourcepathcontroller#setsourcepath(org.argouml.uml.ui.sourcepathtablemodel)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.sourcepathcontroller#setsourcepath( java.lang.object java.io.file)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.sourcepathcontroller#deletesourcepath(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.sourcepathcontroller#getallmodelelementswithsourcepath()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetadded(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetremoved(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetset(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstractactionnavigate#navigateto( java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcombobox2#umlcombobox2( umlcomboboxmodel2 action boolean)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.proppanel#shouldbeenabled(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstractactionnavigate#navigateto(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#gettarget()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#shouldbeenabled(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetadded(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.delayedvchangelistener#delayedvetoablechange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umluserinterfacecomponent#targetchanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umluserinterfacecomponent#targetreasserted()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#getexpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#setexpression(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#newexpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#getexpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#setexpression(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#newexpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstractactionnavigate#navigateto(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstractactionnavigate#navigateto(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targettablemodelview#gettargettablemodel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstractactionnavigate#navigateto(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#gettarget()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#shouldbeenabled(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umluserinterfacecontainer#getprofile()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umluserinterfacecontainer#getmodelelement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umluserinterfacecontainer#formatelement(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umluserinterfacecontainer#formatnamespace(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umluserinterfacecontainer#formatcollection(java.util.iterator)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstractactionnavigate#navigateto(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildpopup(javax.swing.jpopupmenu int)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targettablemodelview#gettargettablemodel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstractactionnavigate#navigateto(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetadded(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetremoved(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetset(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#getexpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#setexpression(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#newexpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstractactionnavigate#navigateto(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#settarget(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#gettarget()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#shouldbeenabled(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetadded( org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetremoved( org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetset( org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstractactionnavigate#navigateto(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targettablemodelview#gettargettablemodel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.actionadddiagram#creatediagram(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.actionadddiagram#creatediagram(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.actionadddiagram#isvalidnamespace(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcheckbox2#buildmodel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.common_behavior.actionnewaction#createaction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.common_behavior.actionnewaction#createaction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.common_behavior.actionnewaction#createaction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcheckbox2#buildmodel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlplaintextdocument#setproperty(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlplaintextdocument#getproperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.common_behavior.actionnewaction#createaction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.common_behavior.actionnewaction#createaction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.common_behavior.actionnewaction#createaction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.common_behavior.actionnewaction#createaction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.common_behavior.actionnewaction#createaction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.state_machines.actionnewevent#createevent( java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.state_machines.actionnewevent#createevent( java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.state_machines.actionnewevent#createevent(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#getexpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#setexpression(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#newexpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.state_machines.actionnewevent#createevent( java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlplaintextdocument#setproperty(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlplaintextdocument#getproperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlplaintextdocument#setproperty(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlplaintextdocument#getproperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlradiobuttonpanel#buildmodel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcheckbox2#buildmodel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcheckbox2#buildmodel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlradiobuttonpanel#buildmodel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlradiobuttonpanel#buildmodel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcheckbox2#buildmodel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcheckbox2#buildmodel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlplaintextdocument#setproperty(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlplaintextdocument#getproperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlplaintextdocument#setproperty(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlplaintextdocument#getproperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstractactionaddmodelelement#getchoices()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstractactionaddmodelelement#getdialogtitle()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstractactionaddmodelelement#getselected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstractactionaddmodelelement#getchoices()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstractactionaddmodelelement#getdialogtitle()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstractactionaddmodelelement#getselected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcheckbox2#buildmodel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcheckbox2#buildmodel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlplaintextdocument#setproperty(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlplaintextdocument#getproperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcheckbox2#buildmodel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlradiobuttonpanel#buildmodel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcheckbox2#buildmodel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcheckbox2#buildmodel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcheckbox2#buildmodel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlradiobuttonpanel#buildmodel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel2#setselecteditem(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel2#getselectedmodelelement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.util.namespace.namespace#peeknamespaceelement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.util.namespace.namespace#popnamespaceelement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.util.namespace.namespace#getbasenamespace()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.util.namespace.namespace#getcommonnamespace( org.argouml.uml.util.namespace.namespace)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.util.namespace.namespace#iterator()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.util.namespace.namespace#isempty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.util.namespace.namespace#setdefaultscopetoken(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.util.namespace.namespaceelement#getnamespaceelement()
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.commandlineinterface#docommand(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getfacade()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getdiagraminterchangemodel()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getmodeleventpump()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getactivitygraphsfactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getactivitygraphshelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getcollaborationsfactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getcollaborationshelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getcommonbehaviorfactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getcommonbehaviorhelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getcorefactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getcorehelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getdatatypesfactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getdatatypeshelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getextensionmechanismsfactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getextensionmechanismshelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getmodelmanagementfactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getmodelmanagementhelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getstatemachinesfactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getstatemachineshelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getumlfactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getumlhelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getusecasesfactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getusecaseshelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getmessagesort()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getmetatypes()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getchangeablekind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getaggregationkind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getpseudostatekind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getscopekind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getconcurrencykind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getdirectionkind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getorderingkind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getvisibilitykind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getxmireader()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getxmiwriter(java.lang.object java.io.writer java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getcopyhelper()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#getparsinghelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#parse(java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#getparsinghelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#parse(java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstracttestactionadddiagram#getaction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstracttestactionadddiagram#getnamespace()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstracttestactionadddiagram#getaction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstracttestactionadddiagram#getnamespace()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstracttestactionadddiagram#getaction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstracttestactionadddiagram#getnamespace()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstracttestactionadddiagram#getaction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstracttestactionadddiagram#getnamespace()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui. abstracttestactionadddiagram#getvalidnamespaceclasses()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstracttestactionadddiagram#getaction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstracttestactionadddiagram#getnamespace()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#relocate(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#isrelocationallowed(java.lang.object)
WITHOUT_CLASSIFICATION	overridden purely to keep our superclass from removing the listener that we just added. @see org.argouml.uml.diagram.ui.figedgemodelelement#updatelisteners(java.lang.object java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#renderingchanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#relocate(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.statemachineshelper#getsource(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.usecaseshelper#getallusecases(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.umlhelper#addlistenerstomodel(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.umlhelper#move(java.lang.object org.argouml.model.umlhelper.direction)
WITHOUT_CLASSIFICATION	@see org.argouml.model.umlhelper#move(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.modeleventpump#removeclassmodeleventlistener( java.beans.propertychangelistener java.lang.object java.lang.string[])
WITHOUT_CLASSIFICATION	@see org.argouml.model.modeleventpump#addmodeleventlistener( java.beans.propertychangelistener java.lang.object java.lang.string[])
WITHOUT_CLASSIFICATION	@see org.argouml.model.modeleventpump#addmodeleventlistener( java.beans.propertychangelistener java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.model.modeleventpump#addmodeleventlistener( java.beans.propertychangelistener java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.model.modeleventpump#addmodeleventlistener( java.beans.propertychangelistener java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.modeleventpump#removemodeleventlistener( java.beans.propertychangelistener java.lang.object java.lang.string[])
WITHOUT_CLASSIFICATION	@see org.argouml.model.modeleventpump#removemodeleventlistener( java.beans.propertychangelistener java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.model.modeleventpump#removemodeleventlistener( java.beans.propertychangelistener java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.model.modeleventpump#removemodeleventlistener( java.beans.propertychangelistener java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.modeleventpump#addclassmodeleventlistener( java.beans.propertychangelistener java.lang.object java.lang.string[])
WITHOUT_CLASSIFICATION	@see org.argouml.model.modeleventpump#addclassmodeleventlistener( java.beans.propertychangelistener java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.model.modeleventpump#removeclassmodeleventlistener( java.beans.propertychangelistener java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.model.extensionmechanismshelper#getstereotypes(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.corehelper#clearstereotypes(java.lang.object) all methods below similarly override methods in corehelper.
WITHOUT_CLASSIFICATION	@see org.argouml.model.collaborationshelper#getallclassifierroles(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.commonbehaviorhelper#getsource(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.activitygraphshelper#findclassifierbyname(java.lang.object java.lang.string) all methods below similarly implement methods from activitygraphshelper
WITHOUT_CLASSIFICATION	returns the value of an element's property (tagged value). this method makes sure that a collection of values is returned if and only if the property is multivalued (upper multiplicity value greater 1). @see org.argouml.model.facade#getvalueoftag(java.lang.object java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.abstractmodeleventpump#removeclassmodeleventlistener(java.beans.propertychangelistener java.lang.object java.lang.string[])
WITHOUT_CLASSIFICATION	@see org.argouml.model.modeleventpump#startpumpingevents()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modeleventpump#stoppumpingevents()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modeleventpump#flushmodelevents()
WITHOUT_CLASSIFICATION	@see org.argouml.model.aggregationkind#getaggregate()
WITHOUT_CLASSIFICATION	@see org.argouml.model.pseudostatekind#getchoice()
WITHOUT_CLASSIFICATION	@see org.argouml.model.changeablekind#getchangeable()
WITHOUT_CLASSIFICATION	@see org.argouml.model.scopekind#getclassifier()
WITHOUT_CLASSIFICATION	@see org.argouml.model.aggregationkind#getcomposite()
WITHOUT_CLASSIFICATION	@see org.argouml.model.concurrencykind#getconcurrent()
WITHOUT_CLASSIFICATION	@see org.argouml.model.pseudostatekind#getdeephistory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.pseudostatekind#getfork()
WITHOUT_CLASSIFICATION	@see org.argouml.model.changeablekind#getfrozen()
WITHOUT_CLASSIFICATION	@see org.argouml.model.concurrencykind#getguarded()
WITHOUT_CLASSIFICATION	@see org.argouml.model.directionkind#getinparameter()
WITHOUT_CLASSIFICATION	@see org.argouml.model.pseudostatekind#getinitial()
WITHOUT_CLASSIFICATION	@see org.argouml.model.directionkind#getinoutparameter()
WITHOUT_CLASSIFICATION	@see org.argouml.model.scopekind#getinstance()
WITHOUT_CLASSIFICATION	@see org.argouml.model.pseudostatekind#getjoin()
WITHOUT_CLASSIFICATION	@see org.argouml.model.pseudostatekind#getjunction()
WITHOUT_CLASSIFICATION	@see org.argouml.model.aggregationkind#getnone()
WITHOUT_CLASSIFICATION	@see org.argouml.model.orderingkind#getordered()
WITHOUT_CLASSIFICATION	@see org.argouml.model.directionkind#getoutparameter()
WITHOUT_CLASSIFICATION	@see org.argouml.model.visibilitykind#getpackage()
WITHOUT_CLASSIFICATION	@see org.argouml.model.visibilitykind#getprivate()
WITHOUT_CLASSIFICATION	@see org.argouml.model.visibilitykind#getprotected()
WITHOUT_CLASSIFICATION	@see org.argouml.model.visibilitykind#getpublic()
WITHOUT_CLASSIFICATION	@see org.argouml.model.directionkind#getreturnparameter()
WITHOUT_CLASSIFICATION	@see org.argouml.model.concurrencykind#getsequential()
WITHOUT_CLASSIFICATION	@see org.argouml.model.pseudostatekind#getshallowhistory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.orderingkind#getunordered()
WITHOUT_CLASSIFICATION	@see org.argouml.model.extensionmechanismsfactory#createtaggedvalue()
WITHOUT_CLASSIFICATION	@see org.argouml.model.corehelper#clearstereotypes(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.copyhelper#copy(java.lang.object java.lang.object) make a copy of element in the given namespace.<p> this function is a dispatcher that calls the copyelement(elementnamespace) function from xxxfactory.<p> this function may fail and return null for any of the following reasons <ol> <li>no copy function is known for element's type. <li>the copy function fails or throws. </ol> @param anelement is the element to copy. @param ans the namespace @return a copy of element or null. @throws illegalargumentexception if element is null.
WITHOUT_CLASSIFICATION	because we map both ends of an association we'll see many names twice log.log(level.fine "duplicate property name found - {0}{1}" new object[]{typename propertyname})
WITHOUT_CLASSIFICATION	builds an initialized stereotype with no namespace. a stereotype must have a namespace so this method is unsafe. use buildstereotype(string object). @param text is the name of the stereotype @return an initialized stereotype.
WITHOUT_CLASSIFICATION	used by the copy functions. do not call this function directly. @param source the stereotype to copy from. @param target the object becoming a copy.
WITHOUT_CLASSIFICATION	if the array hasn't been flagged to indicate otherwise swap elements the elements and add again.
WITHOUT_CLASSIFICATION	specifies valid elements for a class to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a component to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an objectflowstate to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an associationrole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an simplestate to contain
WITHOUT_CLASSIFICATION	extend but only between two use cases. remember we draw from the extension port to the base port.
WITHOUT_CLASSIFICATION	default parameter name
WITHOUT_CLASSIFICATION	build all other elements using existing buildnode
WITHOUT_CLASSIFICATION	there is a bug in the version of mdr (20050711) that we use that causes it to fail to delete aggregate elements which are single valued and where the aggregate end is listed second in the association defined in the metamodel. for the uml 1.4 metamodel this affects a statemachine's top statevertex and a transition's guard. see issue 4948 & 5227 - tfm 20080713
WITHOUT_CLASSIFICATION	in uml 1.3 the name is the only place to store text. in uml 1.4 there is a body as well but some tools still seem to use name.
WITHOUT_CLASSIFICATION	although not represented in the ocl (or our java) the english text of wfr #4 of section 2.10.3.4 in the uml 1.4 spec is more restrictive - "[4] a collaboration may only contain classifierroles and associationroles the generalizations and the constraints between them and actions used in the collaboration's interactions."
WITHOUT_CLASSIFICATION	the following from the original nsuml implemenetation was attempting to implement wfr #1 from section 2.5.3.32 of the uml 1.4 spec but if there is an owner set no namespace is valid. the checks for this wfr if desired need to go in setowner() and settype() - tfm
WITHOUT_CLASSIFICATION	or self.allconnections->forall( r | self.namespace.allcontents->excludes (r.participant) implies self.namespace.clientdependency->exists (d | d.oclistypeof(permission) and d.stereotype.name = 'access' and
WITHOUT_CLASSIFICATION	return a list of namespaces enclosing this element. the list is ordered outer to inner. i.e. it starts at the root model.
WITHOUT_CLASSIFICATION	scopekind visibilitykind pseudostatekind etc doesn't include boolean though despite what uml 1.4 spec says
WITHOUT_CLASSIFICATION	for a namespace <pre> [2] the operation allcontents results in a set containing all modelelements contained by the namespace. allcontents set(modelelement) allcontents = self.contents where contents = self.ownedelement -> union(self.namespace contents) </pre><p>
WITHOUT_CLASSIFICATION	for a package <pre> [3] the operation allcontents results in a set containing the modelelements owned by or imported by the package or one of its ancestors. allcontents set(modelelement) allcontents = self.contents->union( self.parent.allcontents->select(e | e.elementownership.visibility = #public or e.elementownership.visibility = #protected)) where the required operations are defined as [1] the operation contents results in a set containing the modelelements owned by or imported by the package. contents set(modelelement) contents = self.ownedelement->union(self.importedelement) [2] the operation allimportedelements results in a set containing the modelelements imported by the package or one of its parents. allimportedelements set(modelelement) allimportedelements = self.importedelement->union( self.parent.oclastype(package).allimportedelements->select( re | re.elementimport.visibility = #public or re.elementimport.visibility = #protected)) </pre>
WITHOUT_CLASSIFICATION	get the implementations of this operations and look for an opaquebehavior.
WITHOUT_CLASSIFICATION	todo in uml 2.0 classifierrole associationrole and associationendrole have been replaced by the internal structure of the collaboration
WITHOUT_CLASSIFICATION	for a transition use indirection through source statevertex
WITHOUT_CLASSIFICATION	todo unimplemented return ((property) handle).gets
WITHOUT_CLASSIFICATION	removed from uml 2.x and deprecated in model api so we won't implement it throw new notimplementedexception() we do not throw an exception because argouml still uses this
WITHOUT_CLASSIFICATION	this doesn't work in uml2 both owner and property needed!
WITHOUT_CLASSIFICATION	todo restructured in uml 2
WITHOUT_CLASSIFICATION	todo gone in uml 2.1 it is now an instancespecification with an association as its classifier
WITHOUT_CLASSIFICATION	list.add("literalreal")uml 2.4 end literalspecification
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	link does not exist in uml2 a link is represented just as an association
WITHOUT_CLASSIFICATION	search for our current target language.
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	the attribute 'targetscope' of an associationend in uml1.x is no longer supported in uml2.x
WITHOUT_CLASSIFICATION	cmd.setobjects(run.getparams().get(0))
WITHOUT_CLASSIFICATION	handles all children of relationship including extend and include which are not members of core
WITHOUT_CLASSIFICATION	although usage & permission are dependencies they need to be include separately because of the way lookup works
WITHOUT_CLASSIFICATION	the next 3 restrictions for abstraction seem to be argo specific not something the uml spec requires - tfm - 20070215 there is no need for these because they arn't used by buildconnection() - b00__1 {abstraction.class org.eclipse.uml2.uml.class.class org.eclipse.uml2.uml.class.class null } {abstraction.class org.eclipse.uml2.uml.package.classorg.eclipse.uml2.uml.package.class null } {abstraction.class component.class interface.class null }
WITHOUT_CLASSIFICATION	specifies valid elements for a enumeration to contain
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	do nothing.
WITHOUT_CLASSIFICATION	@see java.lang.object#equals(java.lang.object)
WITHOUT_CLASSIFICATION	this module will still register as enabled for uml1.4 but it won't actually do anything.
WITHOUT_CLASSIFICATION	@see java.util.collection#remove(java.lang.object)
WITHOUT_CLASSIFICATION	@see java.util.collection#contains(java.lang.object)
WITHOUT_CLASSIFICATION	@see java.lang.object#hashcode() this will result in rather bad performance but at least we will not violate the contract together with {@link #equals(object)}.
WITHOUT_CLASSIFICATION	@see java.util.collection#size()
WITHOUT_CLASSIFICATION	@see java.util.collection#isempty()
WITHOUT_CLASSIFICATION	@see java.util.collection#iterator()
WITHOUT_CLASSIFICATION	@see java.util.collection#toarray()
WITHOUT_CLASSIFICATION	@see java.util.collection#toarray(java.lang.object[])
WITHOUT_CLASSIFICATION	@see java.util.collection#add(java.lang.object)
WITHOUT_CLASSIFICATION	@see java.util.collection#containsall(java.util.collection)
WITHOUT_CLASSIFICATION	@see java.util.collection#addall(java.util.collection)
WITHOUT_CLASSIFICATION	@see java.util.collection#retainall(java.util.collection)
WITHOUT_CLASSIFICATION	@see java.util.collection#removeall(java.util.collection)
WITHOUT_CLASSIFICATION	@see java.util.collection#clear()
WITHOUT_CLASSIFICATION	@see java.util.list#addall(int java.util.collection)
WITHOUT_CLASSIFICATION	@see java.util.list#get(int)
WITHOUT_CLASSIFICATION	@see java.util.list#set(int java.lang.object)
WITHOUT_CLASSIFICATION	@see java.util.list#add(int java.lang.object)
WITHOUT_CLASSIFICATION	@see java.util.list#remove(int)
WITHOUT_CLASSIFICATION	@see java.util.list#indexof(java.lang.object)
WITHOUT_CLASSIFICATION	@see java.util.list#lastindexof(java.lang.object)
WITHOUT_CLASSIFICATION	@see java.util.list#listiterator()
WITHOUT_CLASSIFICATION	@see java.util.list#listiterator(int)
WITHOUT_CLASSIFICATION	@see java.util.list#sublist(int int)
WITHOUT_CLASSIFICATION	@see java.lang.object#hashcode() this is a rather bad hash solution but with the {@link #equals(object)} defined as below it is not possible to do better.
WITHOUT_CLASSIFICATION	@see java.lang.object#hashcode()
WITHOUT_CLASSIFICATION	@see java.lang.runnable#run()
WITHOUT_CLASSIFICATION	@see java.lang.runnable#run()
WITHOUT_CLASSIFICATION	@see java.lang.runnable#run()
WITHOUT_CLASSIFICATION	@see java.lang.runnable#run()
WITHOUT_CLASSIFICATION	@see org.tigris.swidgets.orientable#setorientation(orientation)
WITHOUT_CLASSIFICATION	@see java.util.observable#notifyobservers(java.lang.object)
WITHOUT_CLASSIFICATION	@see observable#notifyobservers()
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getcolumnclass(int)
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getname()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getprimary2()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getprimary3()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getsecondary1()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getsecondary2()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getsecondary3()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getcontroltextfont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getsystemtextfont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getusertextfont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getmenutextfont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getsubtextfont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getwindowtitlefont()
WITHOUT_CLASSIFICATION	@see java.lang.runnable#run()
WITHOUT_CLASSIFICATION	@see java.awt.event.componentlistener#componenthidden(java.awt.event.componentevent)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getcolumncount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getcolumnname(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#iscelleditable(int int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getrowcount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getvalueat(int int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#setvalueat(java.lang.object int int)
WITHOUT_CLASSIFICATION	@see java.beans.vetoablechangelistener#vetoablechange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getcolumncount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getcolumnname(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getcolumnclass(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#iscelleditable(int int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getrowcount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getvalueat(int int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#setvalueat(java.lang.object int int)
WITHOUT_CLASSIFICATION	@see java.beans.vetoablechangelistener#vetoablechange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.listselectionlistener#valuechanged(javax.swing.event.listselectionevent)
WITHOUT_CLASSIFICATION	updates the button if the current row changes @see javax.swing.event.tablemodellistener#tablechanged(javax.swing.event.tablemodelevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#insertupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#removeupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#changedupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.itemlistener#itemstatechanged(java.awt.event.itemevent)
WITHOUT_CLASSIFICATION	refresh the table when a critique is enabled/disabled @see java.util.observer#update(java.util.observable java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getcolumncount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getcolumnname(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getcolumnclass(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#iscelleditable(int int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getrowcount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getvalueat(int int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#setvalueat(java.lang.object int int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#getchild(java.lang.object int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#getchildcount(java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#getindexofchild( java.lang.object java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#removetreemodellistener(javax.swing.event.treemodellistener)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#getchildcount(java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#getindexofchild(java.lang.object java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#getindexofchild(java.lang.object java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#valueforpathchanged( javax.swing.tree.treepath java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#addtreemodellistener(javax.swing.event.treemodellistener)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#removetreemodellistener(javax.swing.event.treemodellistener)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#getroot()
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#getchild(java.lang.object int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#valueforpathchanged( javax.swing.tree.treepath java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#addtreemodellistener(javax.swing.event.treemodellistener)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#removetreemodellistener(javax.swing.event.treemodellistener)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#getchild(java.lang.object int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#getchildcount(java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#getindexofchild(java.lang.object java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#valueforpathchanged( javax.swing.tree.treepath java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#addtreemodellistener(javax.swing.event.treemodellistener)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#removetreemodellistener(javax.swing.event.treemodellistener)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#getchild(java.lang.object int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#getchildcount(java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#getindexofchild( java.lang.object java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#valueforpathchanged( javax.swing.tree.treepath java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#addtreemodellistener(javax.swing.event.treemodellistener)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#removetreemodellistener(javax.swing.event.treemodellistener)
WITHOUT_CLASSIFICATION	@see javax.swing.event.treeselectionlistener#valuechanged(javax.swing.event.treeselectionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mousepressed(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mousereleased(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseentered(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseexited(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseclicked(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#removeupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#changedupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#deletefrommodel()
WITHOUT_CLASSIFICATION	@see javax.management.notificationemitter#removenotificationlistener(javax.management.notificationlistener javax.management.notificationfilter java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.management.notificationbroadcaster#addnotificationlistener(javax.management.notificationlistener javax.management.notificationfilter java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.management.notificationbroadcaster#getnotificationinfo()
WITHOUT_CLASSIFICATION	@see javax.management.notificationbroadcaster#removenotificationlistener(javax.management.notificationlistener)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#deletefrommodel()
WITHOUT_CLASSIFICATION	@see javax.management.notificationemitter#removenotificationlistener(javax.management.notificationlistener javax.management.notificationfilter java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.management.notificationbroadcaster#addnotificationlistener(javax.management.notificationlistener javax.management.notificationfilter java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.management.notificationbroadcaster#getnotificationinfo()
WITHOUT_CLASSIFICATION	@see javax.management.notificationbroadcaster#removenotificationlistener(javax.management.notificationlistener)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.modecreatefigpoly#createnewitem(java.awt.event.mouseevent int int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#deletefrommodel()
WITHOUT_CLASSIFICATION	@see javax.management.notificationemitter#removenotificationlistener(javax.management.notificationlistener javax.management.notificationfilter java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.management.notificationbroadcaster#addnotificationlistener(javax.management.notificationlistener javax.management.notificationfilter java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.management.notificationbroadcaster#getnotificationinfo()
WITHOUT_CLASSIFICATION	@see javax.management.notificationbroadcaster#removenotificationlistener(javax.management.notificationlistener)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#deletefrommodel()
WITHOUT_CLASSIFICATION	@see javax.management.notificationemitter#removenotificationlistener(javax.management.notificationlistener javax.management.notificationfilter java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.management.notificationbroadcaster#addnotificationlistener(javax.management.notificationlistener javax.management.notificationfilter java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.management.notificationbroadcaster#getnotificationinfo()
WITHOUT_CLASSIFICATION	@see javax.management.notificationbroadcaster#removenotificationlistener(javax.management.notificationlistener)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#deletefrommodel()
WITHOUT_CLASSIFICATION	@see javax.management.notificationemitter#removenotificationlistener(javax.management.notificationlistener javax.management.notificationfilter java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.management.notificationbroadcaster#addnotificationlistener(javax.management.notificationlistener javax.management.notificationfilter java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.management.notificationbroadcaster#getnotificationinfo()
WITHOUT_CLASSIFICATION	@see javax.management.notificationbroadcaster#removenotificationlistener(javax.management.notificationlistener)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#deletefrommodel()
WITHOUT_CLASSIFICATION	@see javax.management.notificationemitter#removenotificationlistener(javax.management.notificationlistener javax.management.notificationfilter java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.management.notificationbroadcaster#addnotificationlistener(javax.management.notificationlistener javax.management.notificationfilter java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.management.notificationbroadcaster#getnotificationinfo()
WITHOUT_CLASSIFICATION	@see javax.management.notificationbroadcaster#removenotificationlistener(javax.management.notificationlistener)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#deletefrommodel()
WITHOUT_CLASSIFICATION	@see javax.management.notificationemitter#removenotificationlistener(javax.management.notificationlistener javax.management.notificationfilter java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.management.notificationbroadcaster#addnotificationlistener(javax.management.notificationlistener javax.management.notificationfilter java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.management.notificationbroadcaster#getnotificationinfo()
WITHOUT_CLASSIFICATION	@see javax.management.notificationbroadcaster#removenotificationlistener(javax.management.notificationlistener)
WITHOUT_CLASSIFICATION	@see java.lang.runnable#run()
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getvalueat(int int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#setvalueat( java.lang.object int int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getcolumnclass(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#iscelleditable(int int)
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#handlesettingstabrefresh()
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#handlesettingstabsave()
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#handlesettingstabcancel()
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#gettabkey()
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#gettabpanel()
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.modelfacade#getclassifier(java.lang.string)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.type#navigatequalified( java.lang.string tudresden.ocl.check.types.type[])
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.type2#navigateparameterizedquery( java.lang.string tudresden.ocl.check.types.type[])
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.type#navigateparameterized( java.lang.string tudresden.ocl.check.types.type[])
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.type#conformsto(tudresden.ocl.check.types.type)
WITHOUT_CLASSIFICATION	@see java.lang.object#equals(java.lang.object)
WITHOUT_CLASSIFICATION	@see java.lang.object#hashcode()
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.type#navigatequalified( java.lang.string tudresden.ocl.check.types.type[])
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.type2#navigateparameterizedquery( java.lang.string tudresden.ocl.check.types.type[])
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.type#navigateparameterized( java.lang.string tudresden.ocl.check.types.type[])
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.type#conformsto(tudresden.ocl.check.types.type)
WITHOUT_CLASSIFICATION	@see java.lang.object#equals(java.lang.object)
WITHOUT_CLASSIFICATION	@see java.lang.object#hashcode()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.persistence.pgml.handlerfactory#gethandler( handlerstack object string string string attributes)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.persistence.pgml.pgmlstackparser#setattrs( org.tigris.gef.presentation.fig org.xml.sax.attributes)
WITHOUT_CLASSIFICATION	@see org.xml.sax.entityresolver#resolveentity(java.lang.string java.lang.string)
WITHOUT_CLASSIFICATION	@see javax.swing.filechooser.filefilter#getdescription()
WITHOUT_CLASSIFICATION	@see javax.swing.filechooser.filefilter#accept(java.io.file)
WITHOUT_CLASSIFICATION	@see java.io.inputstream#read()
WITHOUT_CLASSIFICATION	@see java.io.inputstream#read(byte[] int int)
WITHOUT_CLASSIFICATION	@see java.lang.throwable#printstacktrace()
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.type#hasstate(java.lang.string)
WITHOUT_CLASSIFICATION	@see java.lang.throwable#printstacktrace(java.io.printstream)
WITHOUT_CLASSIFICATION	@see java.lang.throwable#printstacktrace(java.io.printwriter)
WITHOUT_CLASSIFICATION	@see profilemodelloader#loadmodel(profilereference)
WITHOUT_CLASSIFICATION	@see java.io.filefilter#accept(java.io.file)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.depthfirstadapter#caseaadditiveexpressiontail(tudresden.ocl.parser.node.aadditiveexpressiontail)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.depthfirstadapter#caseamultiplicativeexpressiontail(tudresden.ocl.parser.node.amultiplicativeexpressiontail)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.depthfirstadapter#caseaunaryunaryexpression(tudresden.ocl.parser.node.aunaryunaryexpression)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.depthfirstadapter#caseapostfixexpressiontail(tudresden.ocl.parser.node.apostfixexpressiontail)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.depthfirstadapter#caseafeatureprimaryexpression(tudresden.ocl.parser.node.afeatureprimaryexpression)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.depthfirstadapter#outaemptyfeaturecallparameters(tudresden.ocl.parser.node.aemptyfeaturecallparameters)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.depthfirstadapter#caseafeaturecallparameters(tudresden.ocl.parser.node.afeaturecallparameters)
WITHOUT_CLASSIFICATION	@param node @see tudresden.ocl.parser.analysis.depthfirstadapter#caseastandarddeclarator(tudresden.ocl.parser.node.astandarddeclarator)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.depthfirstadapter#casealetexpression(tudresden.ocl.parser.node.aletexpression)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.depthfirstadapter#outastringliteral(tudresden.ocl.parser.node.astringliteral)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.depthfirstadapter#outarealliteral(tudresden.ocl.parser.node.arealliteral)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.depthfirstadapter#outaintegerliteral(tudresden.ocl.parser.node.aintegerliteral)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.depthfirstadapter#outabooleanliteral(tudresden.ocl.parser.node.abooleanliteral)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.depthfirstadapter#outaenumliteral(tudresden.ocl.parser.node.aenumliteral)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.depthfirstadapter#casealiteralcollection(tudresden.ocl.parser.node.aliteralcollection)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.depthfirstadapter#caseaexpressionlistorrange(tudresden.ocl.parser.node.aexpressionlistorrange)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.depthfirstadapter#casealistexpressionlistorrangetail(tudresden.ocl.parser.node.alistexpressionlistorrangetail)
WITHOUT_CLASSIFICATION	@see java.awt.component#getpreferredsize()
WITHOUT_CLASSIFICATION	@see java.awt.component#getsize()
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#changedupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed( java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.windowlistener#windowactivated(java.awt.event.windowevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.windowlistener#windowclosed(java.awt.event.windowevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.windowlistener#windowdeactivated(java.awt.event.windowevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.windowlistener#windowdeiconified(java.awt.event.windowevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.windowlistener#windowiconified(java.awt.event.windowevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.windowlistener#windowclosing(java.awt.event.windowevent)
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#handlesettingstabcancel()
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#gettabkey()
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#gettabpanel()
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#handlesettingstabrefresh()
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#handlesettingstabsave()
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#handlesettingstabcancel()
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#gettabpanel()
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.itemlistener#itemstatechanged(java.awt.event.itemevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.itemlistener#itemstatechanged(java.awt.event.itemevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.focuslistener#focusgained(java.awt.event.focusevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.keylistener#keypressed(java.awt.event.keyevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.keylistener#keyreleased(java.awt.event.keyevent)
WITHOUT_CLASSIFICATION	tests if enter is pressed in the _bbodfield so we need to set the target bounds. @see java.awt.event.keylistener#keytyped(java.awt.event.keyevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.ui.istatusbar#showstatus(java.lang.string)
WITHOUT_CLASSIFICATION	override paint so we can set a flag the first time we're called and notify any waiting threads that the splash screen has been painted. @see java.awt.component#paint(java.awt.graphics)
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getprimary2()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getprimary3()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getsecondary1()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getsecondary2()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getsecondary3()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getcontroltextfont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getsystemtextfont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getusertextfont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getmenutextfont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getsubtextfont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getwindowtitlefont()
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.abstractaction.abstractaction()
WITHOUT_CLASSIFICATION	@see javax.swing.abstractaction.abstractaction(java.lang.string)
WITHOUT_CLASSIFICATION	@see javax.swing.abstractaction.abstractaction( java.lang.string javax.swing.icon)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mousepressed(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mousereleased(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseclicked(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseentered(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseexited(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.keylistener#keypressed(java.awt.event.keyevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.keylistener#keyreleased(java.awt.event.keyevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.keylistener#keytyped(java.awt.event.keyevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.listselectionlistener#valuechanged(javax.swing.event.listselectionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getname()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getprimary2()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getprimary3()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getsecondary1()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getsecondary2()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getsecondary3()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getcontroltextfont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getsystemtextfont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getusertextfont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getmenutextfont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getsubtextfont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getwindowtitlefont()
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseexited(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see org.tigris.swidgets.dialog#namebuttons()
WITHOUT_CLASSIFICATION	@see java.awt.component#getminimumsize()
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mousepressed(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mousereleased(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseentered(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see org.tigris.swidgets.orientable#setorientation(org.tigris.swidgets.orientation)
WITHOUT_CLASSIFICATION	@see targetlistener#targetadded(targetevent)
WITHOUT_CLASSIFICATION	@see targetlistener#targetremoved(targetevent)
WITHOUT_CLASSIFICATION	@see targetlistener#targetset(targetevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.listselectionlistener#valuechanged(javax.swing.event.listselectionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see java.awt.component#getlocale()
WITHOUT_CLASSIFICATION	@see java.awt.window#dispose()
WITHOUT_CLASSIFICATION	@see java.awt.event.windowlistener#windowclosing(java.awt.event.windowevent)
WITHOUT_CLASSIFICATION	@see java.beans.propertychangelistener#propertychange( java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.windowlistener#windowclosed(java.awt.event.windowevent)
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#handlesettingstabrefresh()
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#handlesettingstabrefresh()
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#handlesettingstabsave()
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#handlesettingstabcancel()
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#gettabkey()
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#gettabpanel()
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#setvalueat( java.lang.object int int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getcolumnclass(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#iscelleditable(int int)
WITHOUT_CLASSIFICATION	@see java.awt.event.windowlistener#windowdeactivated(java.awt.event.windowevent)
WITHOUT_CLASSIFICATION	@see javax.swing.listcellrenderer#getlistcellrenderercomponent( javax.swing.jlist java.lang.object int boolean boolean)
WITHOUT_CLASSIFICATION	@see javax.swing.jcomponent#paintcomponent(java.awt.graphics)
WITHOUT_CLASSIFICATION	@see java.awt.event.windowlistener#windowopened(java.awt.event.windowevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.windowlistener#windowclosing(java.awt.event.windowevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.itemlistener#itemstatechanged(java.awt.event.itemevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mousepressed(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mousereleased(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseentered(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseexited(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	catches a mouseevent and calls mysingleclick and mydoubleclick if a tab is clicked which is selected. @see java.awt.event.mouselistener#mouseclicked(mouseevent)
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#handlesettingstabrefresh()
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#handlesettingstabsave()
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#handlesettingstabcancel()
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#gettabkey()
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#getroot()
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#getchild(java.lang.object int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#getchildcount(java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#getindexofchild(java.lang.object java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#valueforpathchanged(javax.swing.tree.treepath java.lang.object)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see org.tigris.swidgets.dialog#namebuttons()
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mousepressed(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mousereleased(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseentered(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseexited(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseclicked(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.component#getminimumsize() sets minimum size to 120100
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.menulistener#menuselected(javax.swing.event.menuevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.menulistener#menudeselected(javax.swing.event.menuevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.menulistener#menucanceled(javax.swing.event.menuevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.cmd#undoit()
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed( java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed( java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#gettabkey()
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#gettabpanel()
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getcolumnclass(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#iscelleditable(int int)
WITHOUT_CLASSIFICATION	compares obj1 and obj2 sorting by user object type then name. diagrams are sorted first then packages then other types. sorts by name within type groups. nulls are sorted first for names. @see java.util.comparator#compare(java.lang.object java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.event.treewillexpandlistener#treewillcollapse(javax.swing .event.treeexpansionevent)
WITHOUT_CLASSIFICATION	updates stereotype setting adds all children per treemodel 'build on demand' design. @see javax.swing.event.treewillexpandlistener#treewillexpand(javax.swing .event.treeexpansionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.treeexpansionlistener#treecollapsed( javax.swing.event.treeexpansionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.treeexpansionlistener#treeexpanded( javax.swing.event.treeexpansionevent) updates the selection state.
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.listselectionlistener#valuechanged(javax.swing.event.listselectionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.listselectionlistener#valuechanged(javax.swing.event.listselectionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.listselectionlistener#valuechanged(javax.swing.event.listselectionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treenode#isleaf()
WITHOUT_CLASSIFICATION	@see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	do string compare of names of uml objects. comparison is case insensitive using a primary strength collator in the user's locale. @see java.util.comparator#compare(java.lang.object java.lang.object)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.dragsourcelistener#dragdropend(java.awt.dnd.dragsourcedropevent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.dragsourcelistener#dragenter(java.awt.dnd.dragsourcedragevent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.dragsourcelistener#dragexit(java.awt.dnd.dragsourceevent)
WITHOUT_CLASSIFICATION	this is not the correct location to set the cursor. the commented out code illustrates the calculation of coordinates. @see java.awt.dnd.dragsourcelistener#dragover(java.awt.dnd.dragsourcedragevent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.dragsourcelistener#dropactionchanged(java.awt.dnd.dragsourcedragevent)
WITHOUT_CLASSIFICATION	ok we've been told to scroll because the mouse cursor is in our scroll zone. @see java.awt.dnd.autoscroll#autoscroll(java.awt.point)
WITHOUT_CLASSIFICATION	calculate the insets for the jtree not the viewport the tree is in. this makes it a bit messy. @see java.awt.dnd.autoscroll#getautoscrollinsets()
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.droptargetlistener#dragenter(java.awt.dnd.droptargetdragevent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.droptargetlistener#dragexit(java.awt.dnd.droptargetevent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.droptargetlistener#dropactionchanged(java.awt.dnd.droptargetdragevent)
WITHOUT_CLASSIFICATION	@see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see javax.management.notificationlistener#handlenotification(javax.management.notification java.lang.object)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.action#getvalue(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.util.childgenerator#gen(java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getcolumncount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getrowcount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getcolumnname(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getcolumnclass(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#iscelleditable(int int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getvalueat(int int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.mutablegraphmodel#canaddnode(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.mutablegraphmodel#canaddedge(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.mutablegraphmodel#addnoderelatededges(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphlistener#nodeadded(org.tigris.gef.graph.graphevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinecolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphlistener#edgeadded(org.tigris.gef.graph.graphevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphlistener#noderemoved(org.tigris.gef.graph.graphevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphlistener#edgeremoved(org.tigris.gef.graph.graphevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphlistener#graphchanged(org.tigris.gef.graph.graphevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfillcolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getfillcolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinewidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinewidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getminimumsize()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setboundsimpl(int int int int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.diagram#initialize(java.lang.object)
WITHOUT_CLASSIFICATION	override setbounds to keep shapes looking right. the classifier and state figs are nicely centered vertically and stretched out over the full width to allow easy selection with the mouse. the fig can only be shrunk to half its original size - so that it is not reducible to a few pixels only. @see org.tigris.gef.presentation.fig#setboundsimpl(int int int int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfillcolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getfillcolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinecolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinecolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfillcolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getfillcolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinewidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinewidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfillcolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getfillcolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getminimumsize()
WITHOUT_CLASSIFICATION	@see java.lang.object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getminimumsize()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setboundsimpl(int int int int) override setbounds to keep shapes looking right.
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinecolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinecolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfillcolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getfillcolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinewidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinewidth()
WITHOUT_CLASSIFICATION	return all ports on node or edge. @see org.tigris.gef.graph.graphmodel#getports(java.lang.object)
WITHOUT_CLASSIFICATION	return the node or edge that owns the given port. @see org.tigris.gef.graph.basegraphmodel#getowner(java.lang.object)
WITHOUT_CLASSIFICATION	return all edges going to given port. @see org.tigris.gef.graph.graphmodel#getinedges(java.lang.object)
WITHOUT_CLASSIFICATION	return all edges going from given port. @see org.tigris.gef.graph.graphmodel#getoutedges(java.lang.object)
WITHOUT_CLASSIFICATION	return true if the given object is a valid node in this graph. @see org.tigris.gef.graph.mutablegraphmodel#canaddnode(java.lang.object)
WITHOUT_CLASSIFICATION	return true if the given object is a valid edge in this graph. @see org.tigris.gef.graph.mutablegraphmodel#canaddedge(java.lang.object)
WITHOUT_CLASSIFICATION	add the given node to the graph if valid. @see org.tigris.gef.graph.mutablegraphmodel#addnode(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.mutablegraphmodel#addnoderelatededges(java.lang.object)
WITHOUT_CLASSIFICATION	return true if the two given ports can be connected by a kind of edge to be determined by the ports. @see org.tigris.gef.graph.mutablegraphmodel#canconnect(java.lang.object java.lang.object)
WITHOUT_CLASSIFICATION	@see java.beans.vetoablechangelistener#vetoablechange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinecolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinecolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfillcolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getfillcolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinewidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinewidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#makeselection()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphfactory#makenode()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.figgroup#addfig(fig)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#calcbounds()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.figgroup#addfig(fig)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphnoderenderer#getfignodefor( org.tigris.gef.graph.graphmodel org.tigris.gef.base.layer java.lang.object java.util.map)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphmodel#getports(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.basegraphmodel#getowner(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphmodel#getinedges(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphmodel#getoutedges(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.mutablegraphmodel#canaddnode(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.mutablegraphmodel#canaddedge(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.mutablegraphmodel#addnode(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#makeselection()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphedgerenderer#getfigedgefor( org.tigris.gef.graph.graphmodel org.tigris.gef.base.layer java.lang.object java.util.map)
WITHOUT_CLASSIFICATION	@see java.lang.object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinecolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinecolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfillcolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getfillcolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinewidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinewidth()
WITHOUT_CLASSIFICATION	override setbounds to keep shapes looking right. @see org.tigris.gef.presentation.fig#setbounds(int int int int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setenclosingfig(org.tigris.gef.presentation.fig)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#makeselection()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setenclosingfig(org.tigris.gef.presentation.fig)
WITHOUT_CLASSIFICATION	@see java.lang.object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#makeselection()
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseclicked(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mousepressed(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setenclosingfig(org.tigris.gef.presentation.fig)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.util.predicate#predicate(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphmodel#getports(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.basegraphmodel#getowner(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphmodel#getinedges(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphmodel#getoutedges(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.mutablegraphmodel#canaddnode(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.mutablegraphmodel#canaddedge(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.mutablegraphmodel#addedge(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.mutablegraphmodel#addnoderelatededges(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.mutablegraphmodel#canconnect(java.lang.object java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.mutablegraphmodel#connect(java.lang.object java.lang.object java.lang.class)
WITHOUT_CLASSIFICATION	@see java.beans.vetoablechangelistener#vetoablechange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.util.predicate#predicate(java.lang.object)
WITHOUT_CLASSIFICATION	overridden to make it possible to include a statevertex in a composite state. @see org.tigris.gef.presentation.fig#setenclosingfig(org.tigris.gef.presentation.fig)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getusetraprect()
WITHOUT_CLASSIFICATION	override setbounds to keep shapes looking right. @see org.tigris.gef.presentation.fig#setboundsimpl(int int int int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinecolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinecolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfillcolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getfillcolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinewidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinewidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinecolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinecolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfillcolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getfillcolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinewidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinewidth()
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseclicked(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.lang.object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#makeselection()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinecolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinecolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfillcolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getfillcolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinewidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinewidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setboundsimpl(int int int int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinecolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfillcolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getfillcolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinewidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinewidth()
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseclicked(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#makeselection()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinecolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinecolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfillcolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getfillcolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinewidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinewidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getfillcolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinewidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinewidth()
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseclicked(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getminimumsize()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getusetraprect()
WITHOUT_CLASSIFICATION	override setbounds to keep shapes looking right. @see org.tigris.gef.presentation.fig#setboundsimpl(int int int int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinecolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinecolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfillcolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getfillcolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinewidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinewidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinecolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfillcolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getfillcolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinewidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinewidth()
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseclicked(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.lang.object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setbounds(int int int int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinecolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinecolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinewidth(int)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseclicked(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getminimumsize()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinecolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinecolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfillcolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getfillcolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinewidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinewidth()
WITHOUT_CLASSIFICATION	this function only sets the color of the divider line (since that is the only visible part) and can be used to make the divider line invisible for the top region in a composite state. @see org.tigris.gef.presentation.fig#setlinecolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfillcolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getfillcolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinewidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinewidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#makeselection()
WITHOUT_CLASSIFICATION	@see java.lang.object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setbounds(int int int int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinecolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinecolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfillcolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getfillcolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinewidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinewidth()
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseclicked(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.lang.object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinecolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinecolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfillcolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getfillcolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinewidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinewidth()
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseclicked(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getclosestpoint(java.awt.point)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphmodel#getports(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.basegraphmodel#getowner(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphmodel#getoutedges(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.mutablegraphmodel#canaddnode(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.mutablegraphmodel#canaddedge(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.mutablegraphmodel#addnode(java.lang.object)
WITHOUT_CLASSIFICATION	@see java.beans.vetoablechangelistener#vetoablechange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinecolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinecolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getfillcolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinewidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinewidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getusetraprect()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getminimumsize()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getclosestpoint(java.awt.point)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed( java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed( java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed( java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getclosestpoint(java.awt.point)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getclosestpoint(java.awt.point)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getclosestpoint(java.awt.point)
WITHOUT_CLASSIFICATION	@see java.awt.event.itemlistener#itemstatechanged(java.awt.event.itemevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.itemlistener#itemstatechanged(java.awt.event.itemevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.keylistener#keyreleased(java.awt.event.keyevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.keylistener#keytyped(java.awt.event.keyevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#makeselection()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinecolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinecolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfillcolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getfillcolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinewidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinewidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setenclosingfig(org.tigris.gef.presentation.fig)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getusetraprect()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setbounds(int int int int)
WITHOUT_CLASSIFICATION	@see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.figtext#settextfilled(boolean)
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.clipboardowner#lostownership( java.awt.datatransfer.clipboard java.awt.datatransfer.transferable)
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.transferable#gettransferdataflavors()
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.transferable#isdataflavorsupported( java.awt.datatransfer.dataflavor)
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.transferable#gettransferdata( java.awt.datatransfer.dataflavor)
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.transferable#gettransferdataflavors()
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.transferable#isdataflavorsupported( java.awt.datatransfer.dataflavor)
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.transferable#gettransferdata( java.awt.datatransfer.dataflavor)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#classnameandbounds()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fignode#hitport(int int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.figgroup#hitfig(java.awt.rectangle)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#isselectable()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fignode#getportfig(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.figedge#setfig(org.tigris.gef.presentation.fig)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.action#isenabled()
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#removeupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#changedupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.selectionbuttons#paintbuttons(graphics)
WITHOUT_CLASSIFICATION	@see java.awt.event.itemlistener#itemstatechanged(java.awt.event.itemevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.itemlistener#itemstatechanged(java.awt.event.itemevent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.droptargetlistener#dragexit( java.awt.dnd.droptargetevent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.droptargetlistener#drop( java.awt.dnd.droptargetdropevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#translate(int int)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseclicked(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	overridden to set argo-specific renderinghints to determine whether or not antialiasing should be turned on. @see org.tigris.gef.base.editor#paint(java.awt.graphics)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseentered(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mousemotionlistener#mousemoved(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	overridden to set argo-specific renderinghints to determine whether or not antialiasing should be turned on. @see org.tigris.gef.base.editor#paint(java.awt.graphics)
WITHOUT_CLASSIFICATION	@see javax.management.notificationemitter#removenotificationlistener(javax.management.notificationlistener javax.management.notificationfilter java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.management.notificationbroadcaster#addnotificationlistener(javax.management.notificationlistener javax.management.notificationfilter java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.management.notificationbroadcaster#getnotificationinfo()
WITHOUT_CLASSIFICATION	@see javax.management.notificationbroadcaster#removenotificationlistener(javax.management.notificationlistener)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mousepressed(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.modecreatepolyedge#mousereleased(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	updates the modelelement container if the fig is moved in or out another fig. if this fig doesn't have an enclosing fig anymore the namespace of the diagram will be the owning modelelement. if this fig is moved inside another fignodemodelelement the owner of that fignodemodelelement will be the owning modelelement. @see org.tigris.gef.presentation.fignode#setenclosingfig(org.tigris.gef.presentation.fig)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getenclosedfigs()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#makeselection()
WITHOUT_CLASSIFICATION	@see java.beans.vetoablechangelistener#vetoablechange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.keylistener#keypressed(java.awt.event.keyevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.keylistener#keyreleased(java.awt.event.keyevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.keylistener#keytyped(java.awt.event.keyevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#deletefrommodel()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#classnameandbounds()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#calcbounds()
WITHOUT_CLASSIFICATION	necessary since gef contains some errors regarding the hit subject. @see org.tigris.gef.presentation.fig#hit(rectangle)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#removefromdiagram()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fignode#isdragconnectable()
WITHOUT_CLASSIFICATION	need to 'arm' the rerouting capability with mousedragged(). <p> don't arm if the edtior's current mode is a figedge create mode because once a new edge has been created it is not deselected therefore on the next create an unwanted reroute is performed. @see java.awt.event.mousemotionlistener#mousedragged(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfillcolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getfillcolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinewidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinewidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getminimumsize()
WITHOUT_CLASSIFICATION	override setbounds to keep shapes looking right. @see org.tigris.gef.presentation.fig#setbounds(int int int int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.command#execute()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphfactory#makegraphmodel()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphfactory#makeedge()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphfactory#makenode()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.selectionbuttons#paint(java.awt.graphics)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.selectionbuttons#paintbuttons(graphics)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.selectionbuttons#getnewnode(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.selection#draghandle(int int int int org.tigris.gef.presentation.handle)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mousereleased(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseexited(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.lang.object#clone()
WITHOUT_CLASSIFICATION	makes sure that the edges stick to the outline of the fig. @see org.tigris.gef.presentation.fig#getgravitypoints()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinecolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinecolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfillcolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getfillcolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinewidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinewidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#damage()
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mousepressed(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mousereleased(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseentered(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseexited(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	if the user double clicks on any part of this fignode pass it down to one of the internal figs. this allows the user to initiate direct text editing. @see java.awt.event.mouselistener#mouseclicked(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.keylistener#keypressed(java.awt.event.keyevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.keylistener#keyreleased(java.awt.event.keyevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.keylistener#keytyped(java.awt.event.keyevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlayer(org.tigris.gef.base.layer)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#deletefrommodel()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#hit(java.awt.rectangle)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#removefromdiagram()
WITHOUT_CLASSIFICATION	makes sure that the edges stick to the outline of the fig. @see org.tigris.gef.presentation.fig#getgravitypoints()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#paint(java.awt.graphics)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event. actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event. actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event. actionevent)
WITHOUT_CLASSIFICATION	@see org.tigris.swidgets.dialog#namebuttons()
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getcolumncount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getcolumnname(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getcolumnclass(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#iscelleditable(int int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getrowcount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getvalueat(int int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#setvalueat( java.lang.object int int)
WITHOUT_CLASSIFICATION	@see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see javax.swing.action#isenabled()
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.listmodel#getelementat(int)
WITHOUT_CLASSIFICATION	@see javax.swing.listmodel#getsize()
WITHOUT_CLASSIFICATION	@see javax.swing.comboboxmodel#setselecteditem(java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.comboboxmodel#getselecteditem()
WITHOUT_CLASSIFICATION	@see javax.swing.abstractlistmodel#firecontentschanged( object int int)
WITHOUT_CLASSIFICATION	@see javax.swing.abstractlistmodel#fireintervaladded( object int int)
WITHOUT_CLASSIFICATION	@see targetlistener#targetset(targetevent)
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	the property value has changed so rebuild our view. @see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see targetlistener#targetadded(targetevent)
WITHOUT_CLASSIFICATION	@see targetlistener#targetremoved(targetevent)
WITHOUT_CLASSIFICATION	@see targetlistener#targetset(targetevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.action#isenabled()
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseclicked( java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseentered(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseexited(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mousepressed(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mousereleased( java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#changedupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#removeupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#insertupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.caretlistener#caretupdate(javax.swing.event.caretevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.itemlistener#itemstatechanged(java.awt.event.itemevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.listcellrenderer#getlistcellrenderercomponent( javax.swing.jlist java.lang.object int boolean boolean)
WITHOUT_CLASSIFICATION	@see javax.swing.text.document#getdefaultrootelement()
WITHOUT_CLASSIFICATION	@see javax.swing.text.document#getlength()
WITHOUT_CLASSIFICATION	@see javax.swing.text.document#render(runnable r)
WITHOUT_CLASSIFICATION	@see javax.swing.text.document#gettext(int int)
WITHOUT_CLASSIFICATION	@see javax.swing.listcellrenderer#getlistcellrenderercomponent(javax.swing.jlist java.lang.object int boolean boolean)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed( java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.listselectionlistener#valuechanged(javax.swing.event.listselectionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.listselectionlistener#valuechanged(javax.swing.event.listselectionevent)
WITHOUT_CLASSIFICATION	@see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see java.lang.runnable#run()
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#removeupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#insertupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#iscelleditable(int int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getrowcount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getvalueat(int int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#setvalueat(java.lang.object int int)
WITHOUT_CLASSIFICATION	@see java.beans.propertychangelistener#propertychange(java.beans. propertychangeevent)
WITHOUT_CLASSIFICATION	@see java.beans.vetoablechangelistener#vetoablechange(java.beans. propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.delayedvchangelistener#delayedvetoablechange(java. beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.abstractlistmodel#fireintervaladded( object int int)
WITHOUT_CLASSIFICATION	@see javax.swing.abstractlistmodel#fireintervalremoved( object int int)
WITHOUT_CLASSIFICATION	@see abstractaction#actionperformed(actionevent)
WITHOUT_CLASSIFICATION	@see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see org.tigris.swidgets.orientable#setorientation(org.tigris.swidgets.orientation)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.defaultlistmodel#contains(java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.defaultlistmodel#addelement(java.lang.object)
WITHOUT_CLASSIFICATION	@see targetlistener#targetadded(targetevent)
WITHOUT_CLASSIFICATION	@see targetlistener#targetremoved(targetevent)
WITHOUT_CLASSIFICATION	@see targetlistener#targetset(targetevent)
WITHOUT_CLASSIFICATION	@see javax.swing.abstractlistmodel#firecontentschanged( object int int)
WITHOUT_CLASSIFICATION	@see javax.swing.abstractlistmodel#fireintervaladded( object int int)
WITHOUT_CLASSIFICATION	@see javax.swing.abstractlistmodel#fireintervalremoved( object int int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treecellrenderer#gettreecellrenderercomponent( javax.swing.jtree java.lang.object boolean boolean boolean int boolean)
WITHOUT_CLASSIFICATION	@see java.awt.event.focuslistener#focuslost(java.awt.event.focusevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.caretlistener#caretupdate(javax.swing.event.caretevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.focuslistener#focusgained(java.awt.event.focusevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed( java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	@see javax.swing.filechooser.filefilter#accept(java.io.file)
WITHOUT_CLASSIFICATION	@see javax.swing.filechooser.filefilter#getdescription()
WITHOUT_CLASSIFICATION	@see java.beans.propertychangelistener#propertychange( java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see java.util.enumeration#hasmoreelements()
WITHOUT_CLASSIFICATION	@see java.util.enumeration#nextelement()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see propertychangelistener#propertychange(propertychangeevent)
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#teardown()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see testcase#teardown()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	here we are actually violating the test independance since we keep the detailspane from test to test. the reason to do this is to make it possible to run the tests with less memory requirements. hopefully someone might eventually fix the detailspane so that it is garbage collected properly and this is no longer needed. @see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#runtest()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see targetlistener#targetadded(targetevent)
WITHOUT_CLASSIFICATION	@see targetlistener#targetremoved(targetevent)
WITHOUT_CLASSIFICATION	@see targetlistener#targetset(targetevent)
WITHOUT_CLASSIFICATION	@see targetlistener#targetadded(targetevent)
WITHOUT_CLASSIFICATION	@see targetlistener#targetremoved(targetevent)
WITHOUT_CLASSIFICATION	@see targetlistener#targetset(targetevent)
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#teardown()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see abstracttestactionadddiagram#getvalidnamespaceclasses()
WITHOUT_CLASSIFICATION	@see abstracttestactionadddiagram#getvalidnamespaceclasses()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see abstracttestactionadddiagram#getvalidnamespaceclasses()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#teardown()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#teardown()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#teardown()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.mutablegraphmodel#canaddedge(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.mutablegraphmodel#addnode(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.mutablegraphmodel#addedge(java.lang.object)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	this method is overridden in order to ignore change of the y coordinate during dragging. @see org.tigris.gef.presentation.fignode#supertranslate(int int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphfactory#makenode()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphnoderenderer#getfignodefor( org.tigris.gef.graph.graphmodel org.tigris.gef.base.layer java.lang.object java.util.map)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphedgerenderer#getfigedgefor( org.tigris.gef.graph.graphmodel org.tigris.gef.base.layer java.lang.object java.util.map)
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	although not generally true for gef for argo we know that the layer is a layerperspective which knows the associated diagram
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	end class startcritics
WITHOUT_CLASSIFICATION	initialized in static initializer block below
WITHOUT_CLASSIFICATION	needs to happen after initialization is done & modules loaded
WITHOUT_CLASSIFICATION	create an anonymous class as a kind of adaptor for the cognitive system to provide proper translation/i18n.
WITHOUT_CLASSIFICATION	the reason the gui is initialized before the commands are run is that some of the commands will use the projectbrowser.
WITHOUT_CLASSIFICATION	initialize the module loader. at least the plug-ins that provide profiles need to be initialized before the project is loaded because some of these profile may have been set as default profiles and need to be applied to the project as soon as it has been created or loaded. the first instance of a project is needed during the gui initialization.
WITHOUT_CLASSIFICATION	the string <code>log4j.configuration</code> is the same string found in {@link org.apache.log4j.configuration.default_configuration_file} but if we use the reference then log4j configures itself and clears the system property and we never know if it was set. if it is set then we let the static initializer in {@link argo} perform the initialization.
WITHOUT_CLASSIFICATION	a subclass of jpanel that can act as a tab in the detailspane or multieditorpane. added functionality<p> spawning when the tab is double-clicked this jpanel will generate a separate window of the same size and with the same contents. this is almost like "tearing off" a tab.<p> todo spawning of windows disabled in spawn()<p> title this jpanel keeps track of its own title.<p> icon this jpanel keeps track of its own icon i.e. an arrow pointing to the panel that it gives details of.<p> orientation this jpanel is orientable.<p> cloning this jpanel may be cloned.<p> this class used to be named tabspawnable. renamed since it is not a tab but a panel and being spawnable is not any more its main purpose.
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	notation events are likely to cause gef/swing operations so we dispatch them on the swing event thread as a convenience so that the receiving notationchanged() methods don't need to deal with it
WITHOUT_CLASSIFICATION	@param item the todo item @param reason the reason todo use it! @return <code>true</code> if the argument was a component of this list <code>false</code> otherwise @throws unresolvableexception unable to resolve
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event
WITHOUT_CLASSIFICATION	issue resolution
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	static accessors
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#isleaf(java.lang.object)
WITHOUT_CLASSIFICATION	this needs to iterate to fill entire output raster if implemented return image.copydata(outraster)
WITHOUT_CLASSIFICATION	catch all exceptions and errors however severe
WITHOUT_CLASSIFICATION	notify the user that the modules in the list that are selected but not enabled were not possible to enable and that are not selected that we cannot disable. currently we just log this. todo we could eventually pop up some warning window.
WITHOUT_CLASSIFICATION	if we have only one return value and without type the return param string is " " we remove it
WITHOUT_CLASSIFICATION	if the script of the action is empty (or only specifies arguments and no method name) then we generate a string based on a different model element
WITHOUT_CLASSIFICATION	mmessage
WITHOUT_CLASSIFICATION	mmessage
WITHOUT_CLASSIFICATION	mmessage
WITHOUT_CLASSIFICATION	mmessage
WITHOUT_CLASSIFICATION	(mmessage)
WITHOUT_CLASSIFICATION	(mmessage)
WITHOUT_CLASSIFICATION	(mmessage)
WITHOUT_CLASSIFICATION	no state with the given name is found so we have to reject the complete user's input
WITHOUT_CLASSIFICATION	now let's check if the new line is already present in the old list of internal transitions if it is then mark the old one to be retained (i.e. do not create a new one) if it isn't continue with parsing
WITHOUT_CLASSIFICATION	case 1
WITHOUT_CLASSIFICATION	check for more literals ('' separated)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.type#hasstate(java.lang.string)
WITHOUT_CLASSIFICATION	if save did not raise an exception and name+"#" exists move name+"#" to name+"~" this is the correct backup file
WITHOUT_CLASSIFICATION	frank in case of exception delete name and mv name+"#" back to name if name+"#" exists this is the "rollback" to old file
WITHOUT_CLASSIFICATION	skip the 2 lines <?xml version="1.0" encoding="utf-8" ?> <!doctype pgml system "pgml.dtd">
WITHOUT_CLASSIFICATION	search all attributes found to those expected. if any don't match then turn off the found flag so that we search for the next matching tag.
WITHOUT_CLASSIFICATION	now we're into processing each specific path item strategy. at the moment we only know pathitemplacement
WITHOUT_CLASSIFICATION	for compatibility with older format
WITHOUT_CLASSIFICATION	if we're about to upgrade the file lets take an archive of it first.
WITHOUT_CLASSIFICATION	no more we can do here on failure
WITHOUT_CLASSIFICATION	write any left over bytes in the input buffer (perhaps from a partially decoded character)
WITHOUT_CLASSIFICATION	nop
WITHOUT_CLASSIFICATION	to persist to and from zargo (zipped file) storage containing seperate xmi argo plgml and todo zip entries. @author bob tarling todo review use of this against zargofilepersister - bob
WITHOUT_CLASSIFICATION	add the path of the model to the search path so we can read dependent models
WITHOUT_CLASSIFICATION	we only need to add the classloader once and if and only if there is at least a profile in the jar
WITHOUT_CLASSIFICATION	testing does not fire.
WITHOUT_CLASSIFICATION	testing does not fire.
WITHOUT_CLASSIFICATION	testing does not fire.
WITHOUT_CLASSIFICATION	testing does not fire.
WITHOUT_CLASSIFICATION	testing does not fire.
WITHOUT_CLASSIFICATION	testing does not fire.
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.depthfirstadapter#caseafeaturecall(tudresden.ocl.parser.node.afeaturecall)
WITHOUT_CLASSIFICATION	@see org.argouml.profile.internal.ocl.modelinterpreter#invokefeature(java.util.map java.lang.object java.lang.string java.lang.string java.lang.object[])
WITHOUT_CLASSIFICATION	@see org.argouml.profile.internal.ocl.modelinterpreter#invokefeature(java.util.map java.lang.object java.lang.string java.lang.string java.lang.object[])
WITHOUT_CLASSIFICATION	todo isstatic in uml 2.x
WITHOUT_CLASSIFICATION	additional operations in 4.5.3.8
WITHOUT_CLASSIFICATION	4.5.2.13 constraint
WITHOUT_CLASSIFICATION	4.5.2.24 generalization
WITHOUT_CLASSIFICATION	4.5.2.28 namespace
WITHOUT_CLASSIFICATION	do not set buildingmodel = false here otherwise the action for selection is performed.
WITHOUT_CLASSIFICATION	prptodo = createproperty("label.todo-pane" positions tabtodo.class) prpproperties = createproperty("label.properties-pane" positions tabprops.class) prpdocumentation = createproperty("label.documentation-pane" positions tabdocumentation.class) prpstyle = createproperty("label.style-pane" positions tabstyle.class) prpsource = createproperty("label.source-pane" positions tabsrc.class) prpconstraints = createproperty("label.constraints-pane" positions tabconstraints.class) prptaggedvalues = createproperty("label.tagged-values-pane" positions tabtaggedvalues.class) property[] propertylist = new property[] { prptodo prpproperties prpdocumentation prpstyle prpsource prpconstraints prptaggedvalues } arrays.sort(propertylist) top.add(new jscrollpane(new propertytable( propertylist panecolumnheader positioncolumnheader)) borderlayout.center)
WITHOUT_CLASSIFICATION	parse the boundary box text. null is returned if it is empty or invalid which causes no change. otherwise we tell gef we are making a change make the change and tell gef we've finished.
WITHOUT_CLASSIFICATION	todo add double click listener
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getprimary1()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getprimary1()
WITHOUT_CLASSIFICATION	if the current shortcut has been set but is void then the current shortcut is not set --> then the default value does not change
WITHOUT_CLASSIFICATION	only show actions for associations not already on diagram
WITHOUT_CLASSIFICATION	only show actions for associations not already on diagram
WITHOUT_CLASSIFICATION	only show actions for associations not already on diagram
WITHOUT_CLASSIFICATION	only show actions for associations not already on diagram
WITHOUT_CLASSIFICATION	only show actions for associations not already on diagram
WITHOUT_CLASSIFICATION	only show actions for associations not already on diagram
WITHOUT_CLASSIFICATION	2. the profile configuration holding noneditable applied profiles
WITHOUT_CLASSIFICATION	the text will be set later
WITHOUT_CLASSIFICATION	private static final stereotypeview[] stereotypeviewmap static { stereotypeviewmap = new stereotypeview[3] stereotypeview. stereotypeviewmap[diagramappearance.stereotype_view_textual] = stereotypeview.textual stereotypeviewmap[diagramappearance.stereotype_view_big_icon] = stereotypeview.big_icon stereotypeviewmap[diagramappearance.stereotype_view_small_icon] = stereotypeview.small_icon }
WITHOUT_CLASSIFICATION	this class represents all diagrams within argouml. it is based upon the gef diagram.<p> it adds a namespace and the capability to delete itself when its namespace is deleted. <p> todo mvw i am not sure of the following<p> the "namespace" of the diagram is e.g. used when creating new elements that are shown on the diagram they will have their namespace set according this. it is not necessarily equal to the "owner". <p> mvw i doubt all following the "namespace" of the diagram is e.g. used to register a listener to the uml model to be notified if this element is removed which will imply that this diagram has to be deleted too. <p> hence the namespace of e.g. a collaboration diagram should be the represented classifier or in case of a represented operation the classifier that owns this operation. and the namespace of the statechart diagram should be the namespace of its statemachine.
WITHOUT_CLASSIFICATION	the fix
WITHOUT_CLASSIFICATION	a binary association is not a node so reject.
WITHOUT_CLASSIFICATION	make all the parts match the main fig
WITHOUT_CLASSIFICATION	and the stereotypes of its features
WITHOUT_CLASSIFICATION	stereotype fig covers the name fig
WITHOUT_CLASSIFICATION	notation settings are different since we know that at a minimum the isshowpath() setting can change because with implement pathcontainer so we make sure that we have a private copy of the notation settings.
WITHOUT_CLASSIFICATION	null elements represent new constraints which will be added to the target the first time any actual editing takes place. this is done to ensure syntactical correctness of constraints stored with the target.
WITHOUT_CLASSIFICATION	mutators hold write lock & will deadlock if use is not thread safe
WITHOUT_CLASSIFICATION	test with a class and class diagram
WITHOUT_CLASSIFICATION	constructor for a {@link figclass} during file load.<p> parent {@link org.argouml.uml.diagram.ui.fignodemodelelement} will have created the main box {@link #getbigport()} and its name {@link #getnamefig()} and stereotype (@link #getstereotypefig()}. this constructor creates a box for the attributes and operations.<p> the properties of all these graphic elements are adjusted appropriately. the main boxes are all filled and have outlines. todo which is wrong since the bigport is filled too. @param element model element to be represented by this fig. @param bounds rectangle describing bounds @param settings rendering settings
WITHOUT_CLASSIFICATION	when this is called from pgmlstackparser.attachedges we finished the initialization of owning pseudo element (commentedge)
WITHOUT_CLASSIFICATION	do nothing by default.
WITHOUT_CLASSIFICATION	override superclass to do nothing. fill property cannot be changed.
WITHOUT_CLASSIFICATION	override superclass to do nothing. fill property cannot be changed.
WITHOUT_CLASSIFICATION	a fig designed to be the child of some fignode or figedge to display the stereotypes of the model element represented by the parent fig. currently multiple stereotypes are shown stacked one on top of the other each enclosed by guillemets.<p> the minimum width of this fig is the largest minimum width of its child figs. the minimum height of this fig is the total minimum height of its child figs.<p> the owner of this fig is the uml element that is extended with the stereotypes. we are listening to changes to the model addition and removal of stereotypes. <p> this fig supports showing one keyword as the first "stereotype" in the list. <p> there is no way to remove a keyword fig once added. <p> todo allow for uml2 style display where all stereotypes are displayed in the same guillemet pair and are delimited by commas. the style should be changeable by calling getorientation(orientation). the swidget orientation class can be used for this. @author bob tarling
WITHOUT_CLASSIFICATION	the source of an association end should not be the classifier. if it is the user has drawn the wrong way round so we swap here.
WITHOUT_CLASSIFICATION	we want to maintain a minimum width for the fig. also add the border dimensions to the minimum space required for its contents
WITHOUT_CLASSIFICATION	make sure we don't try to set things smaller than the minimum
WITHOUT_CLASSIFICATION	if requested height equals needed height then do nothing it fits exactly.
WITHOUT_CLASSIFICATION	log.log(level.fine "slope = " + theta / math.pi + "pi " + theta / math.pi 180.0)
WITHOUT_CLASSIFICATION	test-case for the above code draw a class. create a stereotype for it by clicking on the prop-panel tool and name it. remove the class from the diagram. drag the class from the explorer on the diagram. select the stereotype in the explorer and change its name in the prop-panel to something longer. the longer name does not make the class fig wider unless the above code is added.
WITHOUT_CLASSIFICATION	if we have no source and dest connector then we assume this is load of an old uml1.4 diagram from before this data was saved in pgml. for uml1.4 we can assume the source is first connection and destination is last connection stored in repository for this association.
WITHOUT_CLASSIFICATION	note that "multiplicity" is what is the notation is listening for in uml1.4 "uppervalue" are listened to in uml2. it is not currently why it is not required to register for "lowervalue" also.
WITHOUT_CLASSIFICATION	some subclasses will try to use this
WITHOUT_CLASSIFICATION	figclass calls setboundsimpl before we set the stereotypefigprofileicon
WITHOUT_CLASSIFICATION	todo use per-project undo manager not global
WITHOUT_CLASSIFICATION	todo use per-project undo manager not global
WITHOUT_CLASSIFICATION	todo use per-project undo manager not global
WITHOUT_CLASSIFICATION	perhaps something like the following would workd. if not then traverse up the component hierarchy to a multeditorpane rectangle drawingarea = globals.cureditor().getjcomponent().getvisiblerect()
WITHOUT_CLASSIFICATION	default implementation is to do nothing
WITHOUT_CLASSIFICATION	/ methods that implement the graphmodel itself /
WITHOUT_CLASSIFICATION	/ methods that implement the vetoablechangelistener interface /
WITHOUT_CLASSIFICATION	only interested in the "ownedelement" property. either something has been added to the namespace for this model or removed. in the latter case the "something" will be in the old value of the property which is the collection of owned elements and the new value will be the element import describing the model element and the model from which it was removed
WITHOUT_CLASSIFICATION	the figs for the two end nodes
WITHOUT_CLASSIFICATION	the figs for the two end nodes
WITHOUT_CLASSIFICATION	private utility routine to work out the (positive) x coordinate of a point on an oval given the radii and y coordinate.<p> todo use this to calculate the separator lines! @param a radius in x direction @param b radius in y direction @param y y coordinate @return positive x coordinate for the given y coordinate
WITHOUT_CLASSIFICATION	the responsibility of determining if the given target is a correct one for this tab has been moved from the detailspane to the member tabs of the details pane. reason for this is that the details pane is configurable and cannot know what's the correct target for some tab.
WITHOUT_CLASSIFICATION	if the diagram is empty gef won't write anything leaving us with an empty (and invalid) file. handle this case ourselves to prevent this from happening.
WITHOUT_CLASSIFICATION	note gef's gif writer uses jeff poskanzer's gif encoder but that saves a copy of the entire image in an internal buffer before starting work defeating the whole purpose of our incremental rendering.
WITHOUT_CLASSIFICATION	expressions are datatypes not independent model elements be careful not to reuse them
WITHOUT_CLASSIFICATION	todo the next text was copied - to adapt. sets the target. if the old target is an uml element it also removes the model from the element listener list of the target. if the new target is an uml element the model is added as element listener to the new target. <p> this function is called when the user changes the target. hence this shall not result in any uml model changes.<p> this function looks a lot like the one in umlcomboboxmodel2. <p> as a possible future extension we could allow listening to other model elements. @param thenewtarget the new target
WITHOUT_CLASSIFICATION	fire all of the status events
WITHOUT_CLASSIFICATION	fire all of the profile events
WITHOUT_CLASSIFICATION	verify isrelevant returns true
WITHOUT_CLASSIFICATION	designgoalscm checks if the critic isrelevanttogoals of the designer this value is always true for the critic base class so designergoal should always return true in this condition
WITHOUT_CLASSIFICATION	update the priority of the critic to be the same priority as the decision
WITHOUT_CLASSIFICATION	check that the model was initialized with one goal
WITHOUT_CLASSIFICATION	number of goals should now be 0
WITHOUT_CLASSIFICATION	arbitrary settings - not used used for testing
WITHOUT_CLASSIFICATION	figassociationrole figassociationrole = new figassociationrole()
WITHOUT_CLASSIFICATION	initialize basic parameters that are different from decision.unspec
WITHOUT_CLASSIFICATION	verify parameters were initialized correctly by the constructor
WITHOUT_CLASSIFICATION	verify the name property was correctly updated
WITHOUT_CLASSIFICATION	following the update the priority should be equivalent to decision.unspec
WITHOUT_CLASSIFICATION	test that the category and description are correct
WITHOUT_CLASSIFICATION	update the values
WITHOUT_CLASSIFICATION	verify snoozeorder starts off not snoozed
WITHOUT_CLASSIFICATION	snooze and verify its been enabled
WITHOUT_CLASSIFICATION	snooze and verify its been enabled
WITHOUT_CLASSIFICATION	test with a class and class diagram
WITHOUT_CLASSIFICATION	test with a class and class diagram
WITHOUT_CLASSIFICATION	test with a class and class diagram
WITHOUT_CLASSIFICATION	pce = (propertychangeevent) rxdevent.getsource() asserttrue("wrong event name" pce.getpropertyname().equals( diagramappearance.key_default_shadow_width.getkey())) string value = (string) pce.getoldvalue() int i = integer.parseint(value) asserttrue("wrong old event value" i == 4) asserttrue("wrong new event value" ((string) pce.getnewvalue()).equals("2"))
WITHOUT_CLASSIFICATION	change things
WITHOUT_CLASSIFICATION	assert that the copy isn't modified when the source changes
WITHOUT_CLASSIFICATION	assert that the copy isn't modified when the source changes
WITHOUT_CLASSIFICATION	assert that the copy isn't modified when the source changes
WITHOUT_CLASSIFICATION	create a different client to bind to the same supplier
WITHOUT_CLASSIFICATION	success
WITHOUT_CLASSIFICATION	success
WITHOUT_CLASSIFICATION	success
WITHOUT_CLASSIFICATION	success
WITHOUT_CLASSIFICATION	this comment was included in a previous version (before 1/2005) of the test which had this assertion commented out ------ interaction should not be removed when removing classifierrole maybe if the last message is removed from the interaction but even then it's doubtfull since it will probably lead to backward compatibility problems in save formats. ------ but my reading of the uml 1.4 specification is that an interaction without at least one message is definitely illegal so mdr is doing the right thing by removing it in this case where we only have a single message which then gets deleted. - tfm
WITHOUT_CLASSIFICATION	get a list of uml metaclass names from the xmi document. <p> though some of the dom methods such as getattributes may return null values under other conditions in the context of this test and assuming a valid xmi file none should occur. <p> hence there is no special checking for those abnormal cases allowing the test to fail simply with a nullpointerexception with this comment indicating that either the input data is incorrect or the test needs to be improved.
WITHOUT_CLASSIFICATION	test creating modelelements from a given notation and then re-generate the notation-string again and check if they are equal. some of these tests are not very usefulll since they may fail on white space differences. todo white space should best be ignored.
WITHOUT_CLASSIFICATION	changing the sequence only
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	make sure the contents match what we expect
WITHOUT_CLASSIFICATION	make sure we got what we started with
WITHOUT_CLASSIFICATION	clean up our model and the extent that we read profile in to
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	todo the following fails due to the xmi writing saving all top level model elements and because even if there was no empty project by creating a class the undo mechanism in the project manager will force the creation of an empty project. assertequals(1 profilemodels.size())
WITHOUT_CLASSIFICATION	we recalculate all the activations
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
DESIGN	reply a set of design material's that are the subject of this todoitem. @return the offenders todo offenders need to be more strongly typed. - tfm 20070630
DESIGN	todo really should be a separate class
DESIGN	local variables - what do they do?
DESIGN	reply true iff this critic is relevant to the goals that the designer is trying to achieve. by default all critic's are relevant regardless of the goalmodel. really this is something for a controlmech to compute but if a subclass of critic encapsulates some information you may need to override this method. <p> todo i would like a better default action but goals are typed and their values must be interpreted by critics. they are not as generic as the decisionmodel. @param dsgr the designer @return true if relevant
DESIGN	todo should throw if the string is not good?
DESIGN	how much control should critics have over when they are relavant? does doing that in code instead of declaratively limit reasoning? how does using more semantically rich method calls impact componentization?
DESIGN	todo do all these classes need to be in their own files? public?
DESIGN	andreas this is just temporary for the uml2 pre-alpha versions.
DESIGN	argoeventpump is an event dispatcher which handles events that are global in nature for the entire application. <p> todo diagramappearance and notation events are not application-wide and will be moved from here to someplace more specific in the future so that they can be managed on a per-project or per-diagram basis.
DESIGN	todo once we have fixed all subclasses the title will always be localized so this localization can be removed.
DESIGN	todo once we have fixed all subclasses the title will always be localized so this localization can be removed.
DESIGN	indicates the end of the range for notation events.<p> todo remove this - not used anyway. @return the last id reserved for events.
DESIGN	initialze gef's version of the loader too todo we should probably be passing icons that we loaded ourselves but there doesn't seem to be a way to do that with gef - tfm
DESIGN	needs more work sending and receiving icons
DESIGN	@return the set of offenders todo the return value needs to be more strongly typed. - tfm - 20070630
DESIGN	todo why is this here? who is calling this? @see java.beans.vetoablechangelistener#vetoablechange(java.beans.propertychangeevent)
DESIGN	todo projectbrowser doesn't need to mediate this conversation use an event listener in the todopane to communicate instead. - tfm
DESIGN	todo this should listen for new target events fired by wizstep.updatetabtodo so that we can decouple it from the projectbrowser.
DESIGN	todo should fire its own event and projectbrowser todo should register a listener
DESIGN	set the target anew. todo this method is never used. what is its intention? remove it?
DESIGN	todo tabtodo should listen for an event that this fires so that we can decouple from the projectbrowser. - tfm
DESIGN	copy a file from source to destination. todo perhaps belongs in a utilities class of some sort. @param source the source file to be copied @param dest the destination file @return success status flag
DESIGN	todo this is using internal knowledge of gef. it should handle this itself. - tfm mvw move into something like main.initgef()
DESIGN	todo this is using internal knowledge of gef. it should handle this itself. - tfm
DESIGN	for locale selection.<p> todo detect the available locales from the available files. @return locales used in argouml
DESIGN	set the uri for this project. <p> don't use this directly! use instead {@link org.argouml.persistence.persistencemanager #setprojecturi(uri project)} <p> todo why isn't this deprecated or private if it is not to be used? @param theuri the uri to set.
DESIGN	todo unused?
DESIGN	todo unused?
DESIGN	todo unused?
DESIGN	updates the top level modelelements for all projects. in uml2 each model knows it's root elements so this could make setroots() obsolete. e.g. applying a stereotype in uml2 adds a new root. todo this is redundant with setroots/getroots. there are already too many ways this stuff is managed without adding an additional one. all current model subsystem implementations know their top level elements. responsibility can be moved to the model subsystem but let's choose one way of managing this.
DESIGN	todo is this used in places other than on diagrams? if so it needs to stay in projectsettings (as well as being a diagramsetting). @return returns <code>true</code> if we show stereotypes in the explorer
DESIGN	todo this needs to be managing undo on a per-project basis instead of using gef's global undo manager
DESIGN	todo break into 3 main member types model diagram and other
DESIGN	this does a calculation of where our "ext" directory is. todo we should eventually make sure that this calculation is only present in one place in the code and not several.
DESIGN	notation settings value object. stores settings which control how text is rendered on diagrams. <p> todo this needs to go on a diet. it's used everywhere so is performance sensitive. the current set of settings is the union of all those found in the legacy code but it's not clear that all of them are actually used. @author tom morris <tfmorris@gmail.com>
DESIGN	todo do we care?
DESIGN	this is the temporary solution for issue 1011
DESIGN	parse a message textual description.<p> todo - this method is too complex lets break it up. <p> @param umlmessage the uml message object to apply any changes to @param s the string to parse @throws parseexception when it detects an error in the attribute string. see also parseerror.geterroroffset().
DESIGN	this is the temporary solution for issue 1011
DESIGN	this method has insufficient information to call buildextensionpoint. thus we'll need to create one and pray that whomever called us knows what kind of mess they got.
DESIGN	todo addonly has been removed in uml 2.x so we should phase out support of it - tfm - 20070529
DESIGN	this code was copied from actionbooleantaggedvalue
DESIGN	todo what if used elsewhere?
DESIGN	todo what if used elsewhere?
DESIGN	hence a less elegant workaround that works
DESIGN	todo is this needed?
DESIGN	these may not actually make any difference at present (the code behind addtrigger needs more work).
DESIGN	these may not actually make any difference at present (the code behind addtrigger needs more work).
DESIGN	a critic to suggest using the facade stereotype. <p> todo at the moment only a dummy implementation see issue 3093.
DESIGN	todo what progressmgr is to be used here? where does it come from?
DESIGN	todo handle multiple top level packages
DESIGN	todo what progressmgr is to be used here? where does it come from?
DESIGN	could this be some other type of internal error that we want to handle differently? don't think so. - tfm
DESIGN	todo move to diagram subsystem?
DESIGN	todo attempt to move the following code to gef
DESIGN	todo move to gef
DESIGN	todo we could generalize this to initialize more stuff if needed
DESIGN	todo why is this not executed? remove if not needed - tfm
DESIGN	todo do we need to set the input encoding here? it was done for todo parsing but none of the other member types inputsource inputsource = new inputsource( new inputstreamreader(inputstream argo .getencoding()))
DESIGN	todo remove when code below in characters() is removed private static final string returnstring = "\n "
DESIGN	todo handle multiple top level packages
DESIGN	todo not sure we need to do this but just to be safe for now.
DESIGN	the file persister for the uml model. todo this is empty. what is its purpose? - tfm @author bob tarling
DESIGN	todo all this profile loading/handling needs to move someplace in model subsystem probably
DESIGN	todo is this (critics embedded in comments) actually used by anyone?
DESIGN	todo seems like overkill to load the model just to get the display name but that's where it's stored currently - tfm
DESIGN	todo better if we wrap in a profileexception and throw that
DESIGN	todo support iterate declarator
DESIGN	todo support nested let expressions !
DESIGN	todo we need a specific exception type here.
DESIGN	todo we need a specific exception type here.
DESIGN	todo this code is cloned over and over again! - tfm
DESIGN	todo this appears unused. if it's needed the model api should be enhanced to provide a method that does this directly.
DESIGN	todo this is an absurdly long method! break it up.
DESIGN	todo elementownership is not in modelsubsys!!
DESIGN	todo asargument??
DESIGN	todo we could also support other flavors here e.g. image (then you can drag modelelements directly into your wordprocessor to be inserted as an image).
DESIGN	settings dialog tab panel for layout options.<p> todo this class contains a lot of references to org.argouml.uml.ui. it would probably be better to move it there. todo this class breaks too many dependency limitations. and it is not used anywhere. so i (mvw) disabled its functionality. @author linus tolke
DESIGN	this is the "main" class for the gui subsystem.<p> users of the gui subsystem i.e. components that are to place themselves in any of the gui components register themselves in this class.<p> todo add the rest of the registers to this. @author linus tolke @since 0.21.3
DESIGN	todo how about figassociationclass?
DESIGN	todo what does the magic number 6000 represent here? put it in an explanatory literal! - tfm - 20071205
DESIGN	todo what does the magic number 6000 represent here? put it in an explanatory literal! - tfm - 20071205
DESIGN	todo the following handling of multiselection is just a local solution for the fill color better find a more general solution (i don't know if it's undoable this way - thn)
DESIGN	todo why isn't this done in save?
DESIGN	the dialog that allows the user to go to any diagram in the project by doubleclicking on it.<p> this dialog is not modal and can stay open while the user is working on the model. it is even possible to open multiple of these dialogs although the purpose of such useraction eludes me.<p> todo this dialog should have multiple tabs named "help" "diagram" "classifier" "statevertex" etc. which would allow the user to go to other things than diagrams. @author mvw
DESIGN	todo some parts of argouml have preliminary support for multiple details panels but we currently only support the default south (bottom) panel
DESIGN	todo bob says - tabs that listen for target changes should register themselves not expect detailspane to listen and pass on the event. otherwise these tabs always rely on detailspane. tabtodotarget and tabprops currently listen directly.
DESIGN	todo should fire its own event and projectbrowser should register a listener
DESIGN	todo should fire its own event and projectbrowser should register a listener
DESIGN	todo bob says - tabs that listen for target changes should register themselves not expect detailspane to listen and pass on the event. otherwise these tabs always rely on detailspane. tabtodotarget and tabprops currently listen directly.
DESIGN	flag to indicate if we are the main application or being integrated in another top level application such as eclipse (via the argoeclipse plugin). todo this is a temporary measure until projectbrowser can be refactored more appropriately. - tfm
DESIGN	todo work in progress here to allow multiple details panes with different contents - bob tarling
DESIGN	work in progress here to allow multiple details panes with different contents - bob tarling
DESIGN	loads a project displaying a nice progressmonitor @param overwrite if true the file is going to be overwritten @param file the target file todo separate this into a swing specific class - tfm @param exit if true exit argouml when done
DESIGN	todo this should listen for file save events - tfm
DESIGN	loads a project displaying a nice progressmonitor @param file the project to be opened @param showui whether to show the gui or not todo this needs to be refactored to be gui independent - tfm
DESIGN	todo this is actually a hack! some diagram types (like the statechart diagrams) access the current diagram to get some info. this might cause problems if there's another statechart diagram active so i remove the current project before loading the new one.
DESIGN	manages a progressmonitor dialog. note users of this class should use the type of the interface {@link org.argouml.taskmgmt.progressmonitor} wherever possible to maintain gui independence. @author andrea_nironi@tigris.org todo bob says i don't like the naming of this class. its confusing that its called window and yet it is not a window. lets rename once we have it hidden.
DESIGN	todo move to different class?
DESIGN	this fig is never placed on a diagram. it is only used by the call renderer so that pick list items look like diagram figs. todo this fig does not represent a model element and so it should not extend fignodemodelelement. we should split fignodemodelelement in two one for base functionality for all nodes and one that is truly for model elements.
DESIGN	todo why is this code even getting called for a figgeneralization?
DESIGN	todo this should get the containing project from the list of targets not from some global
DESIGN	i hate this so much even before i start writing it. re-initialising a global in a place where no-one will see it just feels wrong. oh well here goes.
DESIGN	todo should fire its own event and projectbrowser should register a listener
DESIGN	todo should fire its own event and projectbrowser should register a listener
DESIGN	a window that displays an exception to the user if we can't handle it in any other way. todo this has been partly converted to be a generic error dialog rather than something specific to exceptions. this should be renamed when that process is complete.
DESIGN	todo don't use hardcoded colors here - tfm
DESIGN	todo can we move this knowledge behind model facade rather than have a condition here?
DESIGN	todo this shouldn't know the internal form of type names but i'm not sure what gef's predicatetype does so i'm fixing it here - tfm
DESIGN	a command to set selected figs to their minimum size. <p> despite its name really the minimum size is selected here! <p> todo rename this class. @author markus klink
DESIGN	todo this method is obsolete. use getinputmap etc as below
DESIGN	first of all let's set up the duplicate hash. this hash contains all the duplicate key for another key. todo every duplicate.put() is done twice - but how to avoid this?
DESIGN	critique menu todo this dependency should be inverted with the critics subsystem registering its desired shortcuts with us - tfm
DESIGN	kludge required by gef's use of hashmap in the api todo this can be removed if they ever fix gef to use maps
DESIGN	references to actions that we need for mac hack
DESIGN	adds the entry to the mru list. @param filename of the project todo this should listen for file save events rather than being called directly - tfm.
DESIGN	todo this creates a dependency on the critics subsystem. instead that subsystem should register its desired menus and actions.
DESIGN	todo why can't we use actionaddexistingnodes here? bob.
DESIGN	todo we really only care about events which affect things that are visible in the current perspective (view). this could be tailored to cut down on event traffic. - tfm 20060410
DESIGN	the singleton instance. todo why is this a singleton? wouldn't it be better to have exactly one for every explorer?
DESIGN	forwards this event to the tree model. @param element the modelelement to be added todo this shouldn't be public. components desiring to inform the explorer of changes should send events.
DESIGN	todo can this be made more restrictive? do we care about any attributes other than name? - tfm
DESIGN	todo we need a factory pattern for goxxx classes that can determine if they are required
DESIGN	todo any namespace can contain other elements. why don't we allow this? - tfm
DESIGN	todo really should be element/modelelement but we don't have a type which is portable for this
DESIGN	todo this seems like a brute force workaround (and a very indirect one at that). it appears to be needed though until we fix the problem properly. - tfm 20070904
DESIGN	todo temporary - let tree expand implicitly - tfm
DESIGN	this is carried over from previous implementation not sure why we don't want contents of package - tfm - 20060214
DESIGN	@see org.argouml.cognitive.critic#setheadline(java.lang.string) set up the locale specific text for the critic headline (the one liner that appears in the to-do pane) and the critic description (the detailed explanation that appears in the to-do tab of the details pane). mvw maybe we can make it part of the constructor cruml()? fixme why override if nobody uses?
DESIGN	todo this method can be replaced by getclass().getsimplename() when argo drops support for java versions < 1.5
DESIGN	todo move to mmutil or some other common place and merge with umlcomboboxentryfindnamespace()
DESIGN	todo consider inherited associations? todo self loops are double counted
DESIGN	set the threshold. todo should this be protected? @param threshold the threshold to compare to.
DESIGN	gets the current threshold. todo should this be protected? @return the current threshold.
DESIGN	todo split into one critic for inherited problems and one for problems directly in this class.
DESIGN	todo do we need this generalization is not a named element
DESIGN	todo should define a compoundcritic
DESIGN	this class gives critics access to parts of the uml model of the design. it defines a gen() function that returns the "children" of any given part of the uml model. basically it goes from project to models to modelelements. argo's critic agency uses this to apply critics where appropriate. todo this thinks it knows all the composition associations of the the uml metamodel but it is a) incomplete and b) not updated for uml 1.4. this should be done using information from the metamodel rather than hardwired code. - tfm - 20070205 @see org.argouml.cognitive.agency @see org.argouml.cognitive.designer @author jrobbins
DESIGN	todo associationclasses fit both of the next 2 cases
DESIGN	needed?
DESIGN	needed?
DESIGN	todo we can probably use this instead of all of the above legacy uml 1.3 code - tfm - 20070915
DESIGN	these may not actually make any difference at present (the code behind addtrigger needs more work).
DESIGN	todo split into an inherited attr critic and a local attr critic
DESIGN	a wizard which adjust the threshold for critics. <p> todo make the treshold setting adjustable without using the wizard and make it persistent. maybe by using the "configure" button on the browse critics dialog. @see org.argouml.uml.cognitive.critics.abstractcrtoomany @author mkl
DESIGN	todo move to gef
DESIGN	remove this diagram from existence. todo move to gef
DESIGN	todo this uses a "last one wins" algorithm for registration we should warn if a factory is being overwritten.
DESIGN	idem e.g. for a generalization with leaf/root object todo but showing the message in the statusbar would help todo illegalargumentexception should not be used for events we expect to happen. we need a different way of catching well-formedness rules.
DESIGN	todo use our extension registration mechanism for our internal classes as well so everything is treated the same
DESIGN	todo convert all to use standard factory registration
DESIGN	@return returns the default stereotype view todo enumeration here?
DESIGN	the constructor. todo why does this method not handle all settings (key_default_shadow_width is missing)?
DESIGN	gets font name. if it doesn't exist in configuration it creates new entries in configuration for appearance. todo why create in a getter? @return the name of the configured font
DESIGN	todo what is this trying to do? it's never going to get called - tfm really dirty hack to remove unwanted listeners
DESIGN	todo define constants for magic numbers
DESIGN	todo define constants for magic numbers
DESIGN	@return the statemachine todo if this method is called by any of the figs it will introduce a dependency cycle. it would be much better if they could just use {@link org.argouml.uml.diagram.argodiagram#getowner()} which does the same thing.
DESIGN	todo needs work. must determine which figs enclosed in the pool are within the bounds of this fig and translate those.
DESIGN	todo needs to be tidied up after stable release. graph model should be created in constructor
DESIGN	todo rather than specifically ignore some item maybe it would be better to specifically state what items are of interest. otherwise we may still be acting on other events we don't need
DESIGN	this class represents a pool of swimlanes for activity diagrams. this is exists only to act as the gef style encloser. other nodes in the same must be placed entirely within or outside the boundaries of this fig but cannot intersect with the boundary. <p> todo there is no actual model element being represented here so we are inheriting a lot of behaviour from fignodemodelelement that we don't want. we require to split fignodemodelelement to separate the code that requires a model element owner. see issue <p> remark mvw why not give it an owner instead? the activitygraph is the obvious candidate or maybe the top state. @author mkl
DESIGN	todo replace the next deprecated call. this case is complicated by the use of parameters. all other figs work differently.
DESIGN	todo rather than specifically ignore some item maybe it would be better to specifically state what items are of interest. otherwise we may still be acting on other events we don't need
DESIGN	todo all super constrcutors should take a graphmodel
DESIGN	todo is this really needed?
DESIGN	todo needs to be tidied up after stable release. graph model should be created in constructor
DESIGN	the next 4 lines fix the 2nd half of issue 5638. is there no better way?
DESIGN	todo needs to be tidied up after stable release. graph model should be created in constructor
DESIGN	todo all super constrcutors should take a graphmodel
DESIGN	todo what is this needed for? - tfm
DESIGN	return a list of gravity points around circle which is enclosed in the bounding box. convenience method for use by figinitialstate and figfinalstate. todo as this method is not required by all sub classes it would seem sensible to extend figstatevertex with figcirclevertex and only have the relevant concrete figs extend that and gain this functionality. @return a list of points
DESIGN	to resize only when a new concurrent region is added changing the height. todo probably shouldn't exist as this class should be listening for added concurrent regions and call this internally itself. @param h the new height
DESIGN	class to display graphics for a uml choice state in a diagram - the circle. todo this should really be renamed figchoicestate. it's the last vestige of the uml 1.3 name. @author pepargouml
DESIGN	actually instanciate the netnode and fignode objects and set the global next mode to modeplace todo should call super reduce code volume! @see org.tigris.gef.graph.graphfactory#makenode()
DESIGN	todo rather than specifically ignore some item maybe it would be better to specifically state what items are of interest. otherwise we may still be acting on other events we don't need
DESIGN	mode to create a link between two figclassifierroles. todo provide a modefactory and then this class can become package scope. @author penyaskito
DESIGN	todo rather than specifically ignore some item maybe it would be better to specifically state what items are of interest. otherwise we may still be acting on other events we don't need
DESIGN	todo get rid of magic numbers! figure out which represent line widths vs padding vs offsets
DESIGN	todo we definitely don't want to react to addition and removal of transitions. can't we be more specific when we register ourselves as a listener.
DESIGN	todo there's a cyclic dependency between figconcurrentregion and the actions actionaddconcurrentregion
DESIGN	todo rather than specifically ignore some item maybe it would be better to specifically state what items are of interest. otherwise we may still be acting on other events we don't need
DESIGN	todo needs to be tidied up after stable release. graph model should be created in constructor
DESIGN	todo this logic may well be worth moving into the model component. provide a similar grid to the connectionsgrid
DESIGN	todo this should be a configurable property
DESIGN	todo multiple associations between the same pair of elements need to be special cased so that they don't overlap - tfm - 20060228
DESIGN	todo taken from figclassifierboxwithattribute to handle events on an attribute. all this event handling should eventually be moved to the compartment fig for attributes
DESIGN	todo taken from figclassifierboxwithattribute to handle events on an attribute. all this event handling should eventually be moved to the compartment fig for attributes
DESIGN	and its stereotypes todo aren't stereotypes handled elsewhere?
DESIGN	todo" what is the purpose of this? why do we hide buttons here? presumably if so we should not assume selectionclass
DESIGN	todo mvw would it not be better if this code would go in starttexteditor() not overruling mouseclicked(). but we made this fig not editable to stop it from reacting on key-presses. anyhow - this is a hack - abusing a figtext - gef does not really support double-clicking on a fig to trigger some action.
DESIGN	a model element has been removed from this packages namespace if the fig representing that model element is on the same diagram as this package then make sure it is not enclosed by this package. todo in my view the fig representing the model element should be removed from the diagram. yet to be agreed. bob.
DESIGN	the buttons on selection for a stereotype. <p> todo find a way to hide the operationscompartment on the figclass of the created metaclass. @author michiel
DESIGN	used by pgml.tee. @return the class name and bounds together with compartment visibility. todo is this not duplicate with the parent?
DESIGN	todo because we get called on each and every change event when the model is in a state of flux we'll often get an invalidelementexception before we finish this collection. the only saving grace is that we're called so many times that on the last time things should be stable again and we'll get a good set of elements for the final update. we need a better mechanism.
DESIGN	and its stereotypes todo aren't stereotypes handled elsewhere?
DESIGN	todo this is the same as in parent - remove? @see org.argouml.uml.diagram.ui.fignodemodelelement#updatebounds()
DESIGN	hack in order to be able to compile in java1.3
DESIGN	hack in order to be able to compile in java1.3
DESIGN	todo some of these magic numbers probably assume a line width of 1. replace with appropriate constants/variables.
DESIGN	this node cannot be dragged and manipulated in the same way as other fignodes in argouml. it is actually an optional child fig (or more precisely a path item) of a figedgemodelelement. this allows the dashed edge of an association class to connect the association edge and allows the dashed edge of a comment edge to attach a comment to some other edge type. gef can only attach edges to nodes by making this fig both a node and containing it as a child of an edge we push the rules to allow edge to edge connections. todo we are inheriting a lot of functionality here that we don't really require. we should attempt to make figedgeport extend fignode. @author bob tarling
DESIGN	todo there is a cyclic dependency between this class and figconcurrentregion
DESIGN	add a concurrent region to a concurrent composite state <p> this action can be executed with either the composite concurrent state selected or one of its concurrent regions. <p> todo move all the magic numbers to constants @author pepargouml@yahoo.es
DESIGN	todo what are these magic numbers?
DESIGN	todo this should become private and only called from constructor @see org.argouml.uml.diagram.ui.figcompartment#populate()
DESIGN	todo this is a temporary crutch to use until all figs are updated to use the constructor that accepts a diagramsettings object
DESIGN	todo is this needed?
DESIGN	convert to bounding box very screwy! gef sometimes uses center and sometimes upper left todo gef also positions text at the nominal baseline which is well inside the bounding box and gives the overall size incorrectly
DESIGN	this checks the order in addition to the contents is that really what we want here? - tfm 20070603
DESIGN	todo this is a temporary crutch to use until all figs are updated to use the constructor that accepts a diagramsettings object
DESIGN	the fig for a permission which is a form of dependency. <p> todo in uml 2.x the import and access permissions have become packageimports with public visibility and non-public visibility respectively. (argouml only supports the <<import>> permission currently). the friend permission has been dropped. also the type hierarchy has been reorganized so that packageimport is not a subtype of dependency. @author markus klink
DESIGN	todo this can't depend on projectbrowser. alternate below
DESIGN	todo without the null check the following throws a npe so many times when it is called from figedgemodelelement.modelchanged() we need to think about it.
DESIGN	true if an instance is allowed to be invisible. this is currently only set true by figedgeport. todo figedgeport should be removed from the fignodemodelelement hierarchy and so the need for this removed.
DESIGN	todo why isn't this stuff managed by the namefig itself?
DESIGN	todo this creates a dependency on the critics subsystem. we need a generic way for modules (including our internal subsystems) to request addition of actions to the popup menu. - tfm 20080430
DESIGN	todo having critics actions here introduces an unnecessary dependency on the critics subsystem. have it register its desired actions using an extension mechanism - tfm
DESIGN	todo find a way to replace this dependency on project
DESIGN	todo find a way to replace this dependency on project
DESIGN	called by propertychanged when it detects that a stereotype has been added or removed. on removal the fignode removes its listener to that stereotype. when a new stereotype is detected we add a listener. todo bob says in my opinion we shouldn't be doing this here. figstereotype should always be listening to change of its owners name. figstereotypescompartment should always be listening for add or remove of stereotypes to its owner. those classes will need to pass some event to the fignode on the awt thread only if a change results in a change of size that requires a redraw. <p>note runs at the model (mdr) thread </p> @param event the umlchangeevent that caused the change
DESIGN	todo can we delegate this to a specialist figname class?
DESIGN	todo find a way to replace this dependency on project
DESIGN	todo this is a temporary crutch to use until all figs are updated to use the constructor that accepts a diagramsettings object
DESIGN	must be overridden to make sense (i didn't want to make it abstract because it might not be required)
DESIGN	todo move this in figgroup (in gef). @param scb the suppresscalcbounds to set.
DESIGN	todo this function attempts to optimize the more generic code in the parent which also works correctly in this case. is this a good idea?
DESIGN	todo there is a cyclic dependency between selectionrerouteedge and figedgemodelelement
DESIGN	todo we'd like these to not be filled but gef won't let us select them if we do that. setfilled(false)
DESIGN	our superclass no longer has this method so perhaps this whole thing should be removed? - tfm super.updatelisteners(newowner)
DESIGN	actionaddexistingnode enables pasting of an existing node into a diagram. @author eugenio alvarez data access technologies. todo why do we have this class as well as actionaddexistingnodes?
DESIGN	todo is this required? why would the fig already be dashed? @see org.tigris.gef.presentation.figedge#setfig( org.tigris.gef.presentation.fig)
DESIGN	todo the above doesn't work reliably in a constructor. we need a better way of getting default fig settings for the owning project rather than using the project manager singleton. - tfm
DESIGN	todo replace magic numbers with constants
DESIGN	class to display graphics for n-ary association (association node) i.e. the diamond. <p> todo improve the location of the stereotypes! @author pepargouml@yahoo.es
DESIGN	todo mvw why is this not done in gef?
DESIGN	todo this can't depend on projectbrowser. it needs to get the current drawing area from the diagram subsystem or gef
DESIGN	todo this creates a dependency on the critics subsystem. we need a generic way for modules (including our internal subsystems) to request addition of actions to the popup menu. - tfm 20080430
DESIGN	todo there is a cyclic dependency between selectionrerouteedge and figedgemodelelement
DESIGN	this should not be looking for a namedelement since this is not always about the name of this modelelement alone.
DESIGN	todo mvw why is this not done in gef?
DESIGN	todo this needs to use a different method than that used by the constructor if it wants to allow the method to be overridden
DESIGN	todo workaround for gef redraw problem force all child figs into the same layer
DESIGN	check if labels etc have been hit apparently gef does require pathitems to be "annotations" which ours aren't so until that is resolved
DESIGN	todo dependency cycle between fignodemodelelement and figedgeme is this needed? if so introduce a removable interface to decouple
DESIGN	figmycircle is a figcircle with corrected connectionpoint method this methods calculates where a connected edge ends.<p> todo once we are at gef version 0.13.1m4 this whole class can be removed since it was taken over by gef.
DESIGN	defines the methods to generate source code from the model. each class providing code generation functionality must implement this to be recognized by argouml as a code generator. <p> todo a gui-independent mechanism to pass settings to the code generator is needed similar to what we have for reverse engineering. see {@link org.argouml.uml.reveng.importinterface#getimportsettings()} and {@link org.argouml.uml.reveng.settingstypes} @since 0.20 when it replaced the filegenerator interface.
DESIGN	information about a source unit and its content whether it exists only in memory or it's stored in a file. todo making this an interface instead of a class would allow more flexibility in dealing with non-file-based resources. - tfm @author aslo
DESIGN	todo how does the pressed cancel become a java.lang.exception?
DESIGN	create a taggedvalue with a tag/type matching our source module filename and a value of the file's last modified timestamp. todo this functionality needs to be moved someplace useful if it's needed otherwise it can be deleted. - tfm - 20070217
DESIGN	todo send an event instead of calling explorer directly
DESIGN	mvw for this case i have to move the call to setselecteditem() outside the "buildingmodel" otherwise the combo does not update with the new selection. the same does probably apply to the cases above!
DESIGN	mvw for this case i had to move the call to setselecteditem() outside the "buildingmodel" otherwise the combo does not update with the new selection. see issue 5418.
DESIGN	todo this class should be moved to package org.argouml.uml.ui.behavior.common_behavior.
DESIGN	todo this class should be moved to package org.argouml.uml.ui.behavior.common_behavior
DESIGN	action to trigger code generation for one or more classes. <p> in fact only all named classes and interfaces on the active diagram are generated. or if this delivers an empty collection all selected classes interfaces and the contents of selected packages are generated (independent if they are named or not). <p> todo implement a more logical behaviour.
DESIGN	todo it's probably worthwhile to abstract and factor this chooser and directory stuff. more file handling is coming i'm sure.
DESIGN	hack to make sure that the right height is applied when no icon is used.
DESIGN	sets the target of the property panel. the given target t may either be a diagram or a modelelement. if the target given is a fig a check is made if the fig has an owning modelelement and occurs on the current diagram. if so that modelelement is the target. @deprecated as of argouml version 0.13.5 the visibility of this method will change in the future replaced by {@link org.argouml.ui.targetmanager.targetmanager}. todo mvw i think this should not be deprecated. @param target the new target @see org.argouml.ui.tabtarget#settarget(java.lang.object)
DESIGN	todo can we find a better way to do this than hard coding colour?
DESIGN	todo this should be more extensible may be only "findpanelfor(target)" if there is a panel why not show it?
DESIGN	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent) todo from combobox javadoc - "this method is public as an implementation side effect. do not call or override." we should find some other way to implement this.
DESIGN	the model for the table with the tagged values. implementation for uml 1.4 and tagdefinitions. todo this currently only supports taggedvalues with a tagdefinition which has a type of string.
DESIGN	todo this will vary based on the type of the tagdefinition
DESIGN	abstract class that is the parent of all actions adding diagrams to argouml. the children of this class should implement creatediagram to do any specific actions for creating a diagram and isvalidnamespace that checks if some namespace is valid to add the diagram to. <p> argouml shall never create a diagram for a read-only modelelement.<p> todo this class should be merged with actionnewdiagram. @author jaap.branderhorst@xs4all.nl
DESIGN	todo use default value of appropriate type here
DESIGN	todo use default value of appropriate type for td
DESIGN	@see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent) todo this should be reviewed to see if it can be improved with a view towards removing some of the overrriding methods used as workarounds for differences between nsuml and mdr - tfm - 20060302
DESIGN	execute this action from the command line. todo the underlying gef library relies on acme that doesn't allow us to create these files unless there is a window showing. for this reason i have had to split the performing of commands in {@link org.argouml.application.main#main(string[])} so that we can by not supplying the -batch option run these commands with the window showing. hopefully this can eventually be fixed. @see org.argouml.application.api.commandlineinterface#docommand(string) @param argument is the file name that we save to. @return true if it is ok.
DESIGN	update the titlelabel mvw this overrules the icon set initiallly why do we need this?
DESIGN	@see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent) todo this should be reviewed to see if it can be improved with a view towards removing some of the overrriding methods used as workarounds for differences between nsuml and mdr - tfm - 20060302
DESIGN	add a new package at the top level i.e. a model.<p> todo argouml currently only supports one model.
DESIGN	todo make the explorer listen to project member property changes to eliminate coupling on gui.
DESIGN	abstract action to trigger creation of a new diagram. <p> argouml shall never create a diagram for a read-only modelelement. <p> todo bobs says can we merge actionadddiagram with this class? @author michiel
DESIGN	todo the namespace of created events is currently the model. i think this is wrong they should be in the namespace of the activitygraph! vec.addall( model.getmodelmanagementhelper().getallmodelelementsofkind( model.getfacade().getnamespace(gettarget()) model.getmetatypes().getevent()))
DESIGN	constraint this code only deals with 1 supplier per dependency! todo do we need more? @see org.argouml.uml.ui.abstractactionaddmodelelement#doit(java.util.list)
DESIGN	@author jaap.branderhorst@xs4all.nl @since jan 29 2003 todo for uml 2.x this needs to be changed to just a toggle which represents readonly (frozen) or not (changeable).
DESIGN	constraint this code only deals with 1 supplier per dependency! todo how to support more? @see org.argouml.uml.ui.abstractactionaddmodelelement#doit(java.util.list)
DESIGN	todo won't our use of pathcomparator take care of uniqueness?
DESIGN	todo won't our use of pathcomparator take care of uniqueness?
DESIGN	todo move this into the toolbar project.
DESIGN	this is needed for a commentedge todo why doesn't commentedge implement iitemuid and be handled with the mechanism above.
DESIGN	todo the following is mdr specific. we need something generic to all model subsystems - tfm 20070716
DESIGN	there shall not be a dependency from to
DESIGN	@param project the argouml {@link project} to save in file. @param file the {@link file} in which an argouml {@link project} will be persisted. @return the persister used and usable for file. @throws saveexception if saving the file goes wrong. @throws interruptedexception if an interrupt occurs while saving. todo move this to an helper class.
DESIGN	todo this is temporary. we need a new list for uml 2.x the following uml 1.4 elements are not in uml 2.x
DESIGN	todo do we want the top level package here instead of the immediate parent?
DESIGN	find a model element in modelelements which name is equal to name. @param name the name of the model element to find. it can't be null. @param modelelements the {@link collection} of model elements in which to find a model element with name. @return the model element if found or null. todo maybe should be moved to a helper class that deals with model related stuff.
DESIGN	todo should fire its own event and projectbrowser should register a listener - tfm
DESIGN	todo this first loop just to count the items appears redundant to me - tfm 20070630
DESIGN	name is set to the empty string (yuck!) by default - fix it
DESIGN	these may not actually make any difference at present (the code behind addtrigger needs more work).
DESIGN	todo no one should be sending the deprecated event from outside argouml but keep responding to it for now just in case
DESIGN	todo use stylesheet to convert or wait till we use fig factories in diagram subsystem. what is the last version that used fignote?
DESIGN	todo we shouldn't need this reflection any more once we have convinced ourselves that everything with a getitemuid method is implementing iitemuid
DESIGN	todo this is in the wrong place. it's not profile specific. it needs to be moved to main xmi reading code. - tfm 20060326
DESIGN	todo why is this inside a block? forgotten else branch?!? question by euluis @ 2009-08-16.
DESIGN	todo we need to get the model/extent (and package?) associated with the current diagram so that we can create the new element in the right place.
DESIGN	todo there is a cyclic dependency between selectionrerouteedge and figedgemodelelement
DESIGN	todo remove the casting to diagramfactoryinterface2 as soon as diagramfactoryinterface is removed.
DESIGN	todo rather than specifically ignore some item maybe it would be better to specifically state what items are of interest. otherwise we may still be acting on other events we don't need
DESIGN	if is a classifier role it must return the sent messages. in other cases returns an empty list. todo must be the incoming messages or the sent ones?
DESIGN	if is a classifier role it must return the received messages. in other cases returns an empty list. todo must be the outgoing messages or the received ones?
DESIGN	brooms all the message which y coordinate is upper than the position of the broom. todo provide a modefactory and then this class can become package scope. @author penyaskito
DESIGN	todo move magic number 10 to descriptive constant
DESIGN	this is a temporary hack until the notation provider for a sd message will be able to parse successfully when the sequence number is missing. remove this method completely then.
DESIGN	todo remove the casting to diagramfactoryinterface2 as soon as diagramfactoryinterface is removed.
DESIGN	sets the body of an expression. todo this operation is fooling the user in thinking that the body of the object is changed. instead a new object is created. there is no other way a mexpression can not be altered once created! so this operation returns a newly created object instead. @param handle the expression to modify. @param body the body to set. @return the newly created expression.
DESIGN	sets the language of an expression. todo this operation is fooling the user in thinking that the body of the object is changed. instead a new object is created. there is no other way a mexpression can not be altered once created! so this operation returns a newly created object instead. @param handle the expression. @param language the new language. @return the newly created object.
DESIGN	create an empty but initialized instance of a uml abstraction. @return an initialized uml abstraction instance. todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	create an empty but initialized instance of a uml permission. @return an initialized uml permission instance. todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	create an empty but initialized instance of a uml parameter. @return an initialized uml parameter instance. todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	create an empty but initialized instance of a uml templateparameter. @return an initialized uml templateparameter instance. todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	create an empty but initialized instance of a uml permission. @return an initialized uml permission instance. todo this needs an extra parameter to specify the model/extent where the new element should be created. @deprecated for 0.27.3 by tfmorris. renamed in uml 2.x to packageimport. use {@link #createpackageimport()}.
DESIGN	create a uml primitivetype. @since uml 2.1.1 @return an initialized uml primitive instance. todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	builds a default implementation for a class. the class is not owned by any model element by default. users should not forget to add ownership. @return newly created class todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	recognizer for n-ary association. todo this is not a recognizer for some type. rename to isnaryassociation? @param handle candidate @return true if handle is an association
DESIGN	recognizer for primary objects. a primary object is an object that is created by the parser or by a user. object that are created as a side effect of importing some other object are not. <p> todo this doesn't belong in the facade. it's a higher level function used specifically for certain reverse engineering operations. - tfmorris @param handle candidate @return true if primary object.
DESIGN	todo mvw this needs rethinking/rework! i have the following questions why does it not search for a stereotype in the namespace using properties and only create a new stereotype if it will actually be used? ie why is there not a getstereotype(string name string baseclass)? (edited by d00mst)
DESIGN	searches for a stereotype just like the given stereotype in all given models (and their sub-namespaces). the given stereotype can not have its namespace set yet otherwise it will be returned itself! todo this function should not take a stereotype object as parameter but a name and a baseclass. <p> todo currently only works for stereotypes with only one baseclass. <p> todo should it only search for stereotypes owned by the model object? @param models a collection of models @param stereo is the given stereotype @return stereotype
DESIGN	add a path to the list of paths to be searched when looking for xmi files to resolve external references with. the list is maintained in a static structure shared by all instances. <p> todo it's desirable to have separate search paths for separate files but more work is required in argouml so that it knows how to maintain separate contexts for the profiles and user models. @param path a directory path to add to the search path
DESIGN	todo this needs to be managed on a per-project or per-model/extent basis
DESIGN	these methods are based on the graphevents. these need replacing by more specic meaningful requests of the diagram interface model
DESIGN	todo this needs to be double checked. - tfm
DESIGN	a changecommand that updates its label. <p> the label of this command can contain the character '#' that will be replaced with information about an object when the label is returned. <p> todo switch this to use java string formatting instead of private # notation? @author bogdan pistol
DESIGN	todo how do we get the connectors of an association?
DESIGN	todo seems to work only with both loops check why.
DESIGN	todo instancespecification -> classifier association isn't navigable in this direction
DESIGN	todo comment by a- rueckert i don't think it makes much sense to query interactions from a collaboration in uml2 since this diagram does no longer exist and an interaction means something different in uml2.
DESIGN	todo figure out when this is getting thrown throw new unsupportedoperationexception()
DESIGN	workaround for missing ability to parse ""
DESIGN	workaround for missing ability to parse ""
DESIGN	todo the uml 1.4 concept of a multiplicity & multiplicity range has been replaced by a single element
DESIGN	todo actionstate callstate and subactivitystate have been replaced in uml 2.0 by explicitly modeled actions
DESIGN	todo tagdefinitions are gone from uml 2 they are now properties of stereotypes
DESIGN	todo not sure the semantics are an exact match here between uml 1.4 aggregate and uml 2.x shared.
DESIGN	todo moved this out of the implementation-specific piece - tfm everything is primary for now (ie not reverse engineered)
DESIGN	todo this doesn't belong in the implementation specific piece - tfm
DESIGN	todo this doesn't belong in the implementation specific piece - tfm
DESIGN	todo is there an option we can use to save our argouml version?
DESIGN	todo actionstate callstate and subactivitystate have been replaced in uml 2.0 by explicitly modeled actions
DESIGN	todo actionstate callstate and subactivitystate have been replaced in uml 2.0 by explicitly modeled actions
DESIGN	changed in uml 2.1 - component with <<subsystem>> stereotype todo we should deprecate this?
DESIGN	todo check that this is correct
DESIGN	todo support more than one body/language
DESIGN	todo does corehelper#getextendedclassifiers(object element) means all parents (direct and indirect) or only the direct parents?
DESIGN	todo the javadoc specifies that null should be returned if 'from' or 'to' are null or if there are no associations between them. we should return an empty collection instead and the javadoc should be changed.
DESIGN	todo does corehelper#getextendingclassifiers(object element) means all direct and indirect extending classifiers or only the direct extending classifiers?
DESIGN	don't implement - deprecated method in interface.
DESIGN	this keeps track of the editing domain that is used to track all changes to the model. <p> todo this probably needs to be a set of editingdomain so that we can manage an editingdomain per project.
DESIGN	map of which resources are read-only. <p> todo this needs to be managed per editingdomain.
DESIGN	this sets up the editing domain for the model editor. todo we probably need an editingdomain per argo project so that we can keep the resourcesets separate.
DESIGN	todo this will need to be adapted to send undo/redo commands back to our consumer (e.g. argouml) if a new undo mechanism is implemented for the model subsystem - tfm
DESIGN	todo silently ignore instead? return false
DESIGN	todo some elements such as generalization are no longer named. for a transitional period we'll return a string so debug can continue but the calling code should probably be fixed. - tfm 20070607 bob says - these are the comments that were in facadeeumlimpl.getname. same trick is needed here for now.
DESIGN	todo is it appropriate the templateableelement as the client and a list of templateparametersubstitution as the list of parameters?
DESIGN	todo booleanexpresion is removed from uml2.x is it ok to use valuespecification?
DESIGN	todo in uml2.x event has no parameters. the event metaclass in uml1.x corresponds to the trigger metaclass in uml2.x (see uml superstructure page 456).
DESIGN	todo remove? can't be localized
DESIGN	todo remove? can't be localized
DESIGN	todo is this removed from uml2 ?
DESIGN	todo is this removed from uml2 ?
DESIGN	todo is this removed from uml2 ?
DESIGN	todo is this removed from uml2 ?
DESIGN	todo is this removed from uml2 ?
DESIGN	todo model implementation independent
DESIGN	todo do we really want stereotypes from nested packages?
DESIGN	todo still not used because in argouml string is "hardwired"
DESIGN	todo mvw do we really look into super-types of the stereotype or should we be looking into super-types of the baseclass?
DESIGN	workaround for missing ability to parse ""
DESIGN	workaround for missing ability to parse ""
DESIGN	this is wrongly called with a null handle as a workaround we return an empty collection
DESIGN	todo this is probably related to the sendevent that is sending the signal but the association is not navigable in that direction
DESIGN	todo just a guess probably not right - tfm return handle instanceof linkenddata
DESIGN	todo reconfigure exception handling to distinguish between errors that are possible due to bad input data and those that represent unexpected processing errors.
DESIGN	create temporary file for output todo we should be able to chain this directly to xmi reader
DESIGN	todo need to clean up objecttoid (can we do it based on modelelement delete notifications?)
DESIGN	todo this should call the single namespace form getstereotype(it2.next() stereo)
DESIGN	apply <<profile>> stereotype to make it a "profile" (our convention) (hack create that stereotype instead using the uml 1.4 profile)
DESIGN	todo using just the last piece of the id leaves the potential for name collisions if two linked files have the same name in different directories
DESIGN	if systemid is a valid url simply use it. todo this causes a network connection attempt for profiles
DESIGN	todo is this adequate for finding profiles in java webstart jars? - tfm
DESIGN	todo must we calculate the whole list?
DESIGN	register a listener for metamodel class (and all its subclasses) optionally qualified by a list of property names. todo verify that property/event names are legal for this class in the metamodel
DESIGN	todo mvw this needs rethinking/rework! i have the following questions why does it not search for a stereotype in the namespace using properties and only create a new stereotype if it will actually be used? ie why is there not a getstereotype(string name string baseclass)? (edited by d00mst) <these comments imported from nsuml implementation - tfm> @see org.argouml.model.extensionmechanismsfactory#buildstereotype(java.lang.object java.lang.object java.lang.object)
DESIGN	todo this doesn't look right - review - tfm
DESIGN	todo hold lock for entire recursive traversal?
DESIGN	todo encountering a deleted object during any part of this traversal will abort the rest of the traversal. we probably should do the whole traversal in a single mdr transaction.
DESIGN	todo this doesn't belong here but it's not a good time to move it. find someplace less obtrusive than this inner loop. - tfm
DESIGN	todo this should either be extended to support all aggreationkinds or it should be simplified/removed from the api - tfm - 20070331
DESIGN	todo performance critical method
DESIGN	todo perhaps use a hashset or other collection with faster lookup performance in case our callers are doing naive .contains() lookups
DESIGN	todo optimize for root model case? - tfm
DESIGN	todo is there anyway we can determine this size at runtime?
DESIGN	todo try reusing the same set on every recursion
DESIGN	check that the two elements aren't already linked the opposite way todo this is a part implementation of well-formedness rule uml1.4.2 - 4.5.3.20 [3] circular inheritance is not allowed. not self.allparents->includes(self)
DESIGN	todo uml 1.4 spec requires both client and supplier to be in the same model - tfm
DESIGN	todo doing this violates the minimal cardinality of 1 if we allow it we at least need a critic to warn about it
DESIGN	todo this should use a minimal update strategy instead of removing all and then adding all - tfm - 20070806
DESIGN	todo this should be built by reflection from the metamodel - tfm update for uml 1.4 metamodel if not replaced by reflection
DESIGN	todo we have multiple string representations for multiplicities these should be consolidated. this form is used by org.argouml.uml.reveng
DESIGN	todo aren't our items always strings? - tfm 20100917
DESIGN	todo see if protected or need to be present in each subclass
DESIGN	todo this references the concrete factory we need a factories factory
DESIGN	todo this can be a mess there are any better solution?
DESIGN	todo this can be a mess there are any better solution?
DESIGN	the target model element in uml1.x this is the element that owns the expression. in uml2.x this is the expression itself todo this makes behaviour different enough that separate subclasses should be considered.
DESIGN	todo consider a conditional feature in the xml panel def for this
DESIGN	todo try to use valuefield.getcomponent()
DESIGN	if "expression" implements one of the combobox select it todo ? do it in euml module project ?
DESIGN	todo ? if this class listen the model it will be able to change in live as it is done in the figs (diagram)
DESIGN	todo this is a temporary method of making sure the model is updated on loss of focus of a combo box. in the long term we should attempt to update the model on each keypress. @see java.awt.event.focuslistener#focuslost(java.awt.event.focusevent)
DESIGN	todo lets build this into a separate buildtoolbar method
DESIGN	language must be unique todo do it in the model (if don't use the dialog and change the first)
DESIGN	get all classifiers in our model todo we need the property panels to have some reference to the project they belong to instead of using deprecated functionality
DESIGN	todo this should not be an instance variable. it should just be created and discarded as needed.
DESIGN	todo this is probably not the right location for switching off the "filternewlines". the setting gets lost after selecting a different modelelement in the diagram. btw see how it is used in javax.swing.text.plaindocument. see issue 1812.
DESIGN	the list of operations shall contain all operations of all classifiers contained in the same package as the callaction itself. <p> todo in fact we also should include operations of imported clasifiers. @see org.argouml.uml.ui.umlcomboboxmodel#buildmodellist()
DESIGN	creates a new field that selects the language for an expression. @param m expression model should be shared between language and body fields @param n only one of language and body fields should forward events to model todo mvw i do not understand that.
DESIGN	the constructor. @param expressionmodel expression model should be shared between language and body fields @param notify set to true to forward events to model. only one of language and body fields should have this set to true. todo mvw i do not understand that.
DESIGN	todo why do we need this as well as control? why is it instantiated when its not always needed.
DESIGN	todo ?? use an other checkbox (defines in argo and extends jcheckbox )
DESIGN	todo a minimal update strategy would be better here to minimize work and events firing but it may be better to deprecate the method and force calls to manage updates themselves (since they probably usually want to just add or remove a single element) - tfm 20061108
DESIGN	todo in uml 2.x a tagdefinition has become a property on a stereotype anything that uses this will probably need to be reviewed/changed. just return property for now.
DESIGN	todo this method is mostly (entirely?) redundant - tfm
DESIGN	todo we currently delete the old values before setting to something new. this is a workaround to issue 6056. we should consider giving an api to get the lower and upper values so that controls can listen directly to those rather than the element containing those values.
DESIGN	an array of valid connections the combination of connecting class and node classes must exist as a row in this list to be considered valid. <ul> <li>the 1st column is the connecting element. <li>the 2nd column is the "from" element type. <li>the 3rd column is the "to" element type. <li>the 3rd column is optional if not given then it is assumed to be the same as the "to" element. <li>the existence of a 4th column indicates that the connection is valid in one direction only. </ul> todo this encodes not only what is legal in uml but also what argouml knows how to create so not all legal connections are included. probably should be split into two pieces 1) legal uml (here) and 2) supported (in argouml application someplace) - tfm - 20060325<p> most of these are subtypes of relationship which includes association dependency flow generalization extend and include. dependency includes binding abstraction usage and permission. associationrole and associationclass are associations. the remaining items (link transition associationend message) are non-relationship types which argouml treats as connections/edges.
DESIGN	the following is specifically for realizations todo correction in gef it should use interfacerealization not abstraction
DESIGN	models the designers goals in making this design. provides useful control information to the agency so that only critics relevant to the designers goals are ever executed. todo really this should be part of a domain extension and not the kernel. i have not developed this part of argo very much. @author jason robbins
DESIGN	a modelelement has been changed. now we give it priority to be checked by the critics asap. todo why is is synchronised? todo what about when objects are first created? @param dm the design material @param reason the reason
DESIGN	public object getgoalinfo(string goal) { return _goals.getproperty(goal) todo we need a better representation of goals }
DESIGN	todo this probably belongs with the diagram subsystem
DESIGN	the decisionmodel is part of the state of the designer. it describes what types of decisions or design issues the designer is thinking about at the current time. critics that are relevant to those decisions are made active critics that are not relevant are made inactive. todo there is some notion that each decision has a certain importanance at a certain time but i have not followed through on that because i don't have good examples of how to quantify the importance of a decision. todo right now the individual decisions are just strings maybe they should have some non-atomic structure? @author jason robbins
DESIGN	todo this is a hack. a much better way of doing this would be not to start the critic in the first place.
DESIGN	todo add an "open most recent project" command so that command state can be decoupled from user settings?
DESIGN	andreas just temporary a warning dialog for uml2
DESIGN	andreas just temporary for the uml2 pre-alpha versions!
DESIGN	install the trap to "eat" securityexceptions. note this is temporary and will go away in a "future" release httpbugs.sun.com/bugdatabase/view_bug.do?bug_id=4714232
DESIGN	handle firing a notation event. <p> todo this needs to be managed on a per-diagram or per-project basis. @param event the event to be fired. @param listener the listener.
DESIGN	handle firing a diagram appearance event. <p> todo this needs to be managed on a per-diagram or per-project basis. @param event the event to be fired. @param listener the listener.
DESIGN	find the icon for a given model element. @return the icon or <code>null</code> if there is no icon. @param value the model element. todo this should not use string matching on classnames to do this since this means that we have knowledge about how the model elements are implemented outside of the model component.
DESIGN	todo offenders need to be more strongly typed. - tfm 20070630
DESIGN	todoitems that the designer has explicitly indicated that (s)he considers resolved. <p> todo generalize into a design rationale logging facility.
DESIGN	create a new panel for the given step. for example when the given step is 1 create the first step of the wizard. <p> todo it might be convient to make a reusable subclass of wizard that shows all textual steps to guide the user without any automation. such a wizard could be easily authored stored in an xml file and efficiently presented by reusing a single panel with a single jtextarea. @param newstep the number of the step to make a panel for. @return a new panel for the given step
DESIGN	return the default type for an attribute. @return a classifier to use as the default type todo this belongs in projectsettings. - tfm
DESIGN	return the default type for a parameter. @return a classifier to use as the default type todo this belongs in projectsettings. - tfm
DESIGN	return the default type for the return parameter of a method. @return a classifier to use as the default type todo this belongs in projectsettings. - tfm
DESIGN	searches for a type/classifier with name s. if the type is not found a new type is created and added to the current namespace. <p> todo move to model subsystem - tfm 20070307 @param s the name of the type/classifier to be found @return classifier
DESIGN	searches for a type/classifier with name s. if definenew is true a new type is defined if the type/classifier is not found. the newly created type is added to the currentnamespace and given the name s. <p> todo move to model subsystem - tfm 20070307 @param s the name of the type/classifier to be found @param definenew if true define a new one @return classifier the found classifier
DESIGN	finds a classifier with a certain name.<p> will only return first classifier with the matching name. todo move to model subsystem - tfm 20070307 @param s is short name. @param ns namespace where we do the search. @return the found classifier (or <code>null</code> if not found).
DESIGN	a datastructure for settings for a project. <p> most getters return a string since they are used by "argo.tee". this is also the reason all these attributes are not part of a map or something. <p> todo the header comment is currently not used - this function is not completely implemented yet. how do we store this in the project? where should the user enter his header comment? see issue 4813. @author michiel
DESIGN	todo why was this next line in the code so long?
DESIGN	in contrast to {@link #getzipname()} returns the member's name without the prepended name of the project (but with the extension). <p> todo this is not used anywhere - shall we remove it? @author steffen zschaler @return the member's name without any prefix or suffix
DESIGN	todo change this to use an undomanager instance per project when gef has been enhanced.
DESIGN	this should be moved to a ui action.
DESIGN	todo maybe separate name
DESIGN	check for duplicate name and rename if necessary
DESIGN	todo end up with multiple models here
DESIGN	create a notation settings value object with all default values. <p> todo this class only has partial undo support (basically just those members that had it as part of a previous implementation).
DESIGN	todo here we should e.g. show the user a message that the loaded project was using a notation that is not currently available and a fall back on the default notation was done. maybe this can be implemented in the persistencemanager?
DESIGN	this should probably be inside xmireader.parse but there is another place in this source where xmireader is used but it appears to be the nsuml xmireader. when argo xmireader is used consistently it can be responsible for loading the listener. until then do it here.
DESIGN	set the fig style attributes. <p> todo this should move into the render factories as described in issue 859. @param fig the fig to style. @param attributemap a map of name value pairs
DESIGN	todo we really want to be able replace the initial content handler which is passed to sax but we can't do this without cloning a whole bunch of code because it's private in the super class.
DESIGN	once all edges are connected do a compute route on each to make sure that annotations and the edge port is positioned correctly only do this after all edges are connected as compute route requires all edges to be connected to nodes. todo it would be nice not to have to do this and restore annotation positions instead.
DESIGN	todo move to gef
DESIGN	todo move to gef
DESIGN	todo move to gef
DESIGN	a fignodemodelelement with no owner should match here todo this is a temporary solution due to figpool extending fignodemodelelement when in fact it should not do so.
DESIGN	if no fig was created by the code above then we must go look for the old style constructor that should have fallen into disuse by now. fig(object rectangle diagramsettings) all of these constructors should have been deprecated at least and replaced with the new signature. this is here for paranoia only until all figs have been reviewed.
DESIGN	todo remove this old implementation after 0.22 if it's demonstrated that it's not needed. - tfm
DESIGN	todo cyclic dependency between persistancemanager and here
DESIGN	save the .argo entry todo cyclic dependency with persistencemanager move persistencemanager..getprojectbasename() someplace else
DESIGN	translate the visibility flag of a fig to the pgml "visibility" attribute value. the pgml values are 0=hidden and 1=shown. if not specified then 1 is the default so we return null for this to prevent redundent data being written to pgml. todo remove on gef release after 0.11.9 as it will be provided there. @param f the fig @return "0"=hidden null=shown
DESIGN	this can be made public to allow others to extend their own persisters
DESIGN	todo this doesn't need a full profilereference since it uses the reader handed in the constructor. it doesn't make much sense to make its callers init the path to some name which it doesn't need @author luis sergio oliveira (euluis)
DESIGN	open a zipinputstream to the first file found with a given extension. todo remove since this is a duplicate of zipfilepersister method when we have refactored the persister subsystem. @param url the url of the zip file. @param ext the required extension. @return the zip stream positioned at the required location. @throws ioexception if there is a problem opening the file.
DESIGN	sets the directory name where the profiles can be found. initially 'uml14' is used. todo intermediate solution for uml 2.x support please implement a better solution. @param dir name of the directory for the profiles
DESIGN	todo this profile isn't used anymore see getmodel()
DESIGN	the constructor.<p> todo is this constructor used? what is the purpose with it? @param n the name to be localized @param subs the go rules
DESIGN	todo the following handling of multiselection is just a local solution for the line color better find a more general solution (i don't know if it's undoable this way - thn)
DESIGN	todo this needs work so that users can set the font size through a gui preference window.
DESIGN	todo this causes a cyclic depencency with actionsaveproject
DESIGN	todo bob says - we're looking at focus change to flag the start of an interaction. this is to detect when focus is gained in a prop panel field on the assumption editing of that field is about to start. not a good assumption. we need to see if we can get rid of this.
DESIGN	save the project. @param file the file to save to @param pmw the progressmonitor to be updated @return true if successful todo separate this into a swing specific class - tfm
DESIGN	loads the project file and opens all kinds of error message windows if it doesn't work for some reason. in those cases it preserves the old project. @param file the file to open. @param showui true if an error message may be shown to the user false if run in commandline mode @param pmw the progressmonitor to be updated if not needed use null @return project the project that was created based on the file that was successfully opened todo separate this into a swing specific class - tfm
DESIGN	todo bob says - this is a really nasty horrible hack. shadowfig should not extend fignodemodelelement. instead we require a base class fignode with common behaviour of all nodes in argouml. shadowfig should extend that and fignodemodelelement should extend that same base class adding common functionality for fignode that represent model element. @see org.argouml.uml.diagram.ui.fignodemodelelement#setshadowsize(int)
DESIGN	class to manage project related actions which need to be (or historically have been) managed as singletons. todo it's unclear to me whether all of these actually have to be managed as singletons but for now i've just moved them from projectbrowser as is. - tfm @author tom morris
DESIGN	genericargomenubar defines the menu bar for all operating systems which do not explicitly ask for a different kind of menu bar such as mac os x. <p> menu's and the mnemonics of menu's and the menuitems are separated in the propertyresourcebundle <em>menu.properties</em>. <p> menu items are separated in the propertyresourcebundle <em>action.properties</em>. <p> the key's in menu.properties have the following structure <pre> menu [file].[name of menu] e.g menu.file mnemonics of menu's [file].[name of menu].mnemonic e.g menu.file.mnemonic mnemonics of menuitems [file].[flag for item].[name of menuitem].mnemonic e.g menu.item.new.mnemonic </pre> todo add registration for new menu items. @deprecated in 0.29.2 by bob tarling. this class will be moved and made private in future. use menubarfactory.createapplicationmenubar
DESIGN	todo this class is part of a dependency cycle with projectbrowser and
DESIGN	todo shouldn't be creating a new instance here. we should hold the delete action in some central place.
DESIGN	todo make sure this shouldn't go into a previous condition -tml
DESIGN	todo this should not need to know about projectsettings - tfm
DESIGN	the tree structure has changed significantly. inform the associated tree model. todo this shouldn't be public. components desiring to inform the explorer of changes should send events. @deprecated by mvw in v0.25.4. use events instead.
DESIGN	forwards this event to the tree model. @param element the modelelement to be changed todo this shouldn't be public. components desiring to inform the explorer of changes should send events.
DESIGN	todo the reference to the method org.argouml.uml.ui.vetoablepropertychange#getvetomessage(string) was here but the class does exist anymore. where is it? this method is never used! @param propertyname is the name of the property @return a message or null if not applicable.
DESIGN	we hang our heads in shame. there are still bugs in argouml and/or gef that cause corruptions in the model. before a save takes place we repair the model in order to be as certain as possible that the saved file will reload. todo split into small inner classes for each fix. @return a text that explains what is repaired.
DESIGN	find all the figs that visualise the given model element in this layer or null if there is none. todo once gef includes this same method in diagram then this can go @see org.tigris.gef.base.diagram#presentationsfor(java.lang.object)
DESIGN	todo mvw i am not completely sure of the following<p> the "namespace" of the diagram is e.g. used when creating new elements that are shown on the diagram they will have their namespace set according this. it is not necessarily equal to the "owner". @return the namespace for the diagram
DESIGN	/ gef methods todo these should really be picked up automatically from some gef interface that we extend but there is no such thing. note we've only added methods used by argouml so it's possible that external consumers need other methods.
DESIGN	the connect method specifying a connection type by class is unavailable in the argouml implementation. todo this should be unsupported. use the 3 object version {@inheritdoc}
DESIGN	todo this shouldn't be referencing the current project. instead the appropriate undomanager should have already been retrieved from the correct project.
DESIGN	todo do we really need to do this? carried over from old behavior
DESIGN	todo we should be given an undo manager to use rather than looking for a global one
DESIGN	reroutes the connection to the old node to be connected to the new node. delegates to reroutexxx() for each of the 4 possible edges in a class diagram association dependency generalization link. todo this should probably be in superclass. many figs can be on several diagram types. @param newnode this is the new node that one of the ends is dragged to. @param oldnode this is the existing node that is already connected. @param edge this is the edge that is being dragged/rerouted @param issource tells us which end is being rerouted.
DESIGN	helper method for changeconnectednode. todo this should probably be in superclass. associations can be on several diagram types.
DESIGN	todo make the "magic numbers" configurable
DESIGN	todo check for duplicates (is this possible???)
DESIGN	todo we shouldn't actually have to do all this work
DESIGN	we are getting events we don't want. filter them out. todo can we instruct the model event pump not to send these in the first place? see defect 5095. @param event the event
DESIGN	todo bob says - we should not be listening here for addition and removal of attributes. this should be done in figattributescompartment.
DESIGN	updates a compartment box. called from updatelayout if there is a model event effecting the attributes/operations and from renderingchanged in all cases. todo the above statement means that the entire contents of the compartments are being rebuilt whenever an add/remove of an attribute operation or a reception is detected. it would be better to have compartments listen for add and remove events and make minimum change rather than entirely rebuild. remark mvw this is a bit exaggerated since the populate() method is already heavily optimized.
DESIGN	utility function to localize the given string with help text and show it in the status bar of the argouml window. this function is used in favour of the inline call to enable later improvements e.g. it would be possible to show a help-balloon. <p> todo this code is also present in other root figs @param s the given string to be localized and shown
DESIGN	remove all items in the group otherwise the model event listeners remain todo why does a figgroup not do this?
DESIGN	todo find a way to replace this dependency on project
DESIGN	todo is this needed/correct? for when all compartments are hidden?
DESIGN	todo this functionality is in the worn place. we should be able to call setvisible on the compartment itself and then this class should react to that event. improvements will follow in later releases. hence this method should not be considered stable for module developers. @param compartment the compartment to be changed @param isvisible true if the attribute compartment is visible
DESIGN	setfontfamily("dialog") todo is this needed?
DESIGN	action to add a stereotype to a model element. todo appears to be unused? @author bob tarling @deprecated for 0.27.2 by tfmorris. use {@link org.argouml.uml.actionaddstereotype}.
DESIGN	todo comment by a. rueckert <a_rueckert@gmx.net> i think the handle holding the collaboration implementation should rather be a collaborationuse in uml2. but as a workaround for now i'll try to get a collaboration representation (collaborationuse) and then try to get the owning classifier from there
DESIGN	called by the constructor to create the figs at each end of the association. todo this is temporary during refactoring process. we should override setdestfignode and setsourcefignode and create the ends there. that will allow the same pattern to work for uml2 where we cannot assume the connection order. @param sourceassociationend @param destassociationend @param settings
DESIGN	create the main draggable label for the association. this can be overridden in subclasses to change behaviour. todo consider introducing this to figedgemodelelement and using throughout all edges. @param owner owning uml element @param settings rendering settings
DESIGN	choose the arrowhead style for each end. <p> todo this is called from paint(). would it not better be called from renderingchanged()?
DESIGN	todo there are lots and lots of magic numbers used in calculating positions and sizes. any time you see figs being placed at 1010 use these constants instead. if you can reliably interpret calculations you can factor them out of there as well. add additional constants as needed to express other common factors - tfm 20081201
DESIGN	todo there are cyclic dependencies between actionstereotypeview and fignodemodelelement. register these actions opaquely since we don't what they are. - tfm
DESIGN	todo generalize extension and remove critic specific stuff
DESIGN	todo generalize extension and remove critic specific code
DESIGN	this is a template method called by the argouml framework as the result of a change to a model element. do not call this method directly yourself. <p>override this in any subclasses in order to change what model elements the fignode is listening to as a result of change to the model. </p> <p>this method is guaranteed by the framework to be running on the same thread as the model subsystem.</p> todo lets refactor this at some time to take umlchangeevent argument @param event the umlchangeevent that caused the change
DESIGN	todo this is a redundant invocation
DESIGN	todo fonts shouldn't be handled any differently than other rendering attributes
DESIGN	the constructor. todo the "name" parameter is used for the icon and for the tooltip. this makes i18n of the tooltip impossible. @param modeclass the next global editor mode @param modeargs arguments for the new mode @param name the name of the command that is the tooltip text.
DESIGN	the constructor. todo the "name" parameter is used for the icon and for the tooltip. this makes i18n of the tooltip impossible. @param modeclass the next global editor mode @param arg the name of a new argument for the new mode @param value the value of a new argument for the new mode @param name the name of the command that is the tooltip text.
DESIGN	todo without this we fail to draw e.g. a class. but is this a good solution? why is the layer not set in the constructor?
DESIGN	fix up bad figs. <p> due to errors in earlier releases of argouml it can happen that there is a generalization without a child or parent. <p> todo move into xsl. we should not remove from the graph model while we're writing to it or we have a possible cause of concurrent modification exception. @param owner
DESIGN	todo it doesn't matter what these get set to because gef can't draw anything except 1 pixel wide lines
DESIGN	compute the border point of the ellipse that is on the edge between the stored upper left corner and the given parameter.<p> todo once we are at gef version 0.13.1m4 this method and in fact the whole class can be removed since it was taken over by gef in revision 1279. @param anotherpt the remote point to which an edge is drawn. @return the connection point on the boundary of the ellipse.
DESIGN	todo this should be managed by the detailspane targetlistener - tfm remove the following line
DESIGN	todo improve extensibility of this!
DESIGN	returns the current target. @deprecated as of argouml version 0.13.5 the visibility of this method will change in the future replaced by {@link org.argouml.ui.targetmanager.targetmanager#gettarget() targetmanager.getinstance().gettarget()}. todo mvw i think this should not be deprecated. @return the target @see org.argouml.ui.tabtarget#gettarget()
DESIGN	todo this is a temporary method of making sure the model is updated on loss of focus of a combo box. in the long term we should attempt to update the model on each keypress. @see java.awt.event.focuslistener#focuslost(java.awt.event.focusevent)
DESIGN	todo this shouldn't know about the specific type of fig that is being displayed. that couples it too strongly to things it shouldn't need to know about - tfm - 20070924
DESIGN	todo we should really be passing the default settings to the diagram factory so they get set at creation time
DESIGN	todo make the explorer listen to project member property changes to eliminate coupling on gui.
DESIGN	todo we shouldn't need this reflection any more once we have convinced ourselves that everything with a setitemuid method is implementing iitemuid
DESIGN	todo the following is mdr specific. we need something generic to all model subsystems - tfm 20070716
DESIGN	todo use the following function to have a dropdown set of tools toolbarfactory.additemstotoolbar(buttonpanel actions true) instead this temporary solution @param buttonpanel the toolbar @param actions an array of actions representing the tool layout
DESIGN	todo this whole class needs to be updated to remove use of deprecated methods and (hopefully) test multi-root and multi-project methods. @since nov 17 2002 @author jaap.branderhorst@xs4all.nl
DESIGN	get an {@link abstractfilepersister} for file. @param file the {@link file} in which an argouml {@link project} will be persisted. @return the appropriate persister for file or null if the file's extension doesn't match a supported persister. todo move this to an helper class.
DESIGN	initialize the argouml application version so that {@link applicationversion#getversion()} doesn't return null. @throws exception if something goes wrong todo move this to an helper class.
DESIGN	todo this is currently just a mechanical merge of the tests in from the generic model test and the nsuml tests. they need to be reviewed & merged. @author euluis @since 0.19.2 @version 0.00
DESIGN	prefix identified as an implementation specific class. todo this should be generalized so it doesn't have to be changed each time a new implementation is created - tfm 20051109
DESIGN	@throws saxexception when things go wrong with sax @throws ioexception when there's an io error @throws parserconfigurationexception when the parser finds wrong syntax todo unused?
DESIGN	the uml 2.x package structure is entirely different so we have to remap a bunch of stuff. names without embedded colons () indicate that the entire package is remapped. e.g. kernel->core as a matter of fact the only package which did not get renamed or moved is usecases. todo this section is very incomplete. - tfm
DESIGN	todo we'd like to test this in its new guise as packageimport but we don't have a good way to do it currently
DESIGN	we're deleting the last diagram so lets create a new one todo once we go mdi we won't need this.
DESIGN	todo this should happen in gef
DESIGN	todo settext in gef should call setbounds instead of directly changing x y w h - then we will have an event generated correctly in gef
DESIGN	prevent underline events if underline does not change. todo gef should manage this after gef 0.13.4 is included.
DESIGN	prevent bold events if bold does not change. todo gef should manage this after gef 0.13.4 is included.
DESIGN	prevent italic events if italic does not change. todo gef should manage this after gef 0.13.4 is included.
DESIGN	todo move an empty implementation to figgroup in gef
DESIGN	todo remove listeners for add/remove events
DESIGN	if c2 is empty then we're done (or there is a cycle in the message graph which would be bad) if c2 has more than one element then the model is crappy but we'll just use one of them anyway
DESIGN	these may not actually make any difference at present (the code behind addtrigger needs more work).
DESIGN	hack don't show first column where the model element object is placed.
DESIGN	todo should fire its own event and projectbrowser should register a listener
DESIGN	todo this shouldn't know the internal form of type names but i'm not sure what gef's predicatetype does so i'm fixing it here - tfm
DESIGN	todo this shouldn't be hardcoded 20 is the height of the spline 50 is the default activation height
DESIGN	mark the contain figpoly as complete. todo i think more work is needed in gef to either do this automatically when both ends are set or at the very least give a setcomplete method on figpolyedge that calls its contained poly
DESIGN	todo bob says - if the model element is not named we could generate a name. e.g. a generalization becomes "class a -> class b"
DESIGN	todo we should really set up our own profile instead of depending on the default. this depends on the default profile configuration containing the type integer to test properly. otherwise it will get created in the main project defeating the purpose
DESIGN	todo this is currently duplicated from metadatacache - must find a common place in model facade
DESIGN	todo this shouldn't depend on the current project but for now just make sure it's defined and that we have an undo manager
DESIGN	todo lets move this behind the model interface
DESIGN	todo we really want this class to have package scope however the reflection
DESIGN	todo move the magic number 4 to a descriptive constant
DESIGN	todo calcbounds is called by selectionmanager when the fig is dragged. this code is needed to reposition any self message as they are become detached from their classifier role (see issue 5562). the cause of the detachment is not yet understood. unfortunately calcbounds is called from several other places so the code here is not optimal but is the best workaround until argouml can provide its own replacement selectionmanager for sequence diagram requirements see - httpgef.tigris.org/issues/show_bug.cgi?id=344
DESIGN	the default behaviour from figedgemodelelement is not correct here. see issue 5005. todo we must determine what to do here but for now doing nothing is better. i'm not sure why the super method would not work as i would expect that to do nothing if the ends are already correct. @return true at all times for now
DESIGN	todo remove the casting to diagramfactoryinterface2 as soon as diagramfactoryinterface is removed.
DESIGN	returns names of all metamodel value elements including datatypes enumerations and primitive types. todo this method rightly belongs in a separate interface dealing with instances of mof types as opposed to uml types like all the rest of the methods here do. @return collection containing strings with names of all metatypes
DESIGN	return the source of a relation or link. the source of a relation is defined as the modelelement that propagates this relation. if there are more then 1 sources only the first is returned. if there is no source null is returned. examples of sources include classifiers that are types to associationends usecases that are bases to extend and include relations and so on. a source is always the start from the arrow in the fig the destination the end.<p> todo move this method to a generic modelhelper @param relationship is the relation @return object
DESIGN	returns the destination of a relation or link. the destination of a relation is defined as the modelelement that receives this relation. if there are more then 1 destinations only the first is returned. if there is no destination null is returned. examples of sources include classifiers that are types to associationends usecases that are bases to extend and include relations and so on. in the case of an association the destination is defined as the type of the second element in the connections list.<p> todo move this method to a generic modelhelper @param relationship is the relation @return object
DESIGN	returns names of all metatypes in metamodel. todo this method rightly belongs in a separate interface dealing with instances of mof types as opposed to uml types like all the rest of the methods here do. @return collection containing strings with names of all metatypes
DESIGN	todo note copy/paste code in figexitpoint - where is this code better placed in gef?
DESIGN	todo note copy/paste code in figentrypoint - where is this code better placed in gef?
DESIGN	create an empty but initialized instance of an artifact @since uml 1.4 @return an initialized artifact instance. todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	create an empty but initialized instance of a uml associationclass. @return an initialized uml associationclass instance. todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	create an empty but initialized instance of a uml associationend. @return an initialized uml associationend instance. todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	create an empty but initialized instance of a uml attribute. @return an initialized uml attribute instance. todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	create an empty but initialized instance of a uml binding. @return an initialized uml binding instance. todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	create an empty but initialized instance of a uml class. @return an initialized uml class instance. todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	create an empty but initialized instance of a uml comment. @return an initialized uml comment instance. todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	create an empty but initialized instance of a uml component. @return an initialized uml component instance. todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	create an empty but initialized instance of a uml constraint. @return an initialized uml constraint instance. todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	create an empty but initialized instance of a uml datatype. @return an initialized uml datatype instance. todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	create an empty but initialized instance of a uml dependency. @return an initialized uml dependency instance. todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	create an empty but initialized instance of a uml elementresidence. @return an initialized uml elementresidence instance. todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	create an enumeration. @return object new enumeration @since uml 1.4 todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	create an enumerationliteral. @return object new enumeration @since uml 1.4 todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	create an empty but initialized instance of a uml flow. @return an initialized uml flow instance. todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	create an empty but initialized instance of a uml interface. @return an initialized uml interface instance. todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	create an empty but initialized instance of a uml node. @return an initialized uml node instance. todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	create an empty but initialized instance of a uml operation. @return an initialized uml operation instance. todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	create a uml templateargument. @since uml 1.4 @return an initialized templateargument instance. todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	builds a class with a given name. @param name the given name @return class @see #buildclass() todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	builds a default implementation for an interface. the interface is not owned by any model element by default. users should not forget to add ownership. @return interface todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	builds an interface with a given name. @param name is the given name. @return interface todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	builds a method with a given name. @param name is the given name @return method todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	create an empty but initialized instance of a uml usage. @return an initialized uml usage instance. todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	recognizer for modelelements with package visibility. todo this method name was chosen for compatibility with the existing naming scheme but has the potential of clashing with some future use. @param handle candidate @return true if handle has package visibility
DESIGN	recognizer for parameter's with a directionkind of return. todo this is a duplicate of {@link #hasreturnparameterdirectionkind(object)} @param handle candidate parameter @return true if handle is a return parameter.
DESIGN	recognizer for modelelements which have the <<singleton>> stereotype applied. <p> todo moved this out of the facade to someplace elese since it's not model subsystem specific - tfm 20070607 @param handle candidate @return true if handle is a singleton.
DESIGN	get the classifier (participant) of an associationend. todo rename this getparticipant to align with uml spec - tfm - 20070331 @param handle the associationend to get from. @return the classifier of the associationend.
DESIGN	return the tagged value with a specific tag. <p> warning this method returns only the first taggedvalue found with the given name. hence this method is a simplification of the real problem and should be avoided. todo what should be done about the above problem? options are to deprecate the method throw an exception if the name is ambiguous or leave the caller to figure it out themselves. @param handle the model element the tagged value belongs to. @param name the tag name. @return the found tag null if not found
DESIGN	determine if the passed parameter has a return direction kind. todo this is a duplicate of {@link #isreturn(object)} @return true if it is a return direction kind @param handle the parameter
DESIGN	return the key (tag) of some tagged value. todo this does exactly the same as gettag(object). remove one of them. @param handle the tagged value. @return the found value as string.
DESIGN	builds a compositestate as top for some statemachine.<p> todo confusing name this method should better be named buildtopstateonstatemachine. @param statemachine the given statemachine @return mcompositestate the newly build top state @see #buildcompositestate(object)
DESIGN	todo lots more types - duration instance interval
DESIGN	todo is this returning extended elements or base classes?
DESIGN	todo what is the behavior of this in the case of nested models?
DESIGN	todo not navigable this direction? - tfm
DESIGN	todo in uml 2.0 classifierrole associationrole and associationendrole have been replaced by the internal structure of the collaboration
DESIGN	todo in uml 2.0 classifierrole associationrole and associationendrole have been replaced by the internal structure of the collaboration
DESIGN	todo this probably needs more qualification - tfm
DESIGN	todo actionstate callstate and subactivitystate have been replaced in uml 2.0 by explicitly modeled actions
DESIGN	todo this isn't right
DESIGN	todo what do we want to use as an equivalent here?
DESIGN	todo changed in uml 2.x to special type of property?
DESIGN	todo this doesn't belong in the implementation specific piece - tfm
DESIGN	todo complete this implementation - tfm
DESIGN	todo actionstate callstate and subactivitystate have been replaced in uml 2.0 by explicitly modeled actions
DESIGN	todo this should be built by reflection from the metamodel - tfm update for uml 2.x metamodel if not replaced by reflection
DESIGN	todo can we get this info from uml2 plugin? perhaps collect all references in the metamodel filter for those which represent containments and find the types on either end - tfm
DESIGN	todo get/setrootmodel aren't specific to the model implementation they could probably be moved elsewhere - tfm - 20070530
DESIGN	todo we can choose between something which matches uml 1.4 in name or something that matches in functionality. we've chosen functionality for now but this will create a name conflict during the migration process. - tfm
DESIGN	todo callers will need to be refactored to work around the change in the way multiplicities work - tfm
DESIGN	todo check for resource to hold this and create if necessary? this is a discrepancy between mdr which does it here and euml which does it as part of setrootmodel
DESIGN	todo make this work when the given stereotype has more than one baseclass. todo currently only works for stereotypes where the baseclass is equal to the given one - inheritance does not work.
DESIGN	todo this could be a huge collection - find a more efficient way
DESIGN	todo still not used because in argouml string is "hardwired"
DESIGN	todo mvw do we really look into super-types of the stereotype or should we be looking into super-types of the baseclass?
DESIGN	todo what type of validation can we do here on tagtype?
DESIGN	todo not sure whether the above is better in some cases but the code below is better for both java web start and eclipse.
DESIGN	todo this does not belong here - use getimportedelement.
DESIGN	todo replace this recursive function by a loop like in getroot
DESIGN	todo rationalize this with getmodelelementcontainer
DESIGN	todo use getmodelelementcontainer for transition
DESIGN	todo return empty collection on null input or throw illegalargument?
DESIGN	todo an iterator filter would be nice here instead of the mucking around with the collection.
DESIGN	todo an iterator filter would be nice here instead of the mucking around with the collection.
DESIGN	todo this has different semantics than everything else
DESIGN	todo this assumes ranges are sorted. is this true? - tfm
DESIGN	todo this assumes ranges are sorted. is this true? - tfm
DESIGN	todo do we want to construct an artificial name here?
DESIGN	todo what other non-modelelement types do we need to handle here?
DESIGN	todo temporary stopgap for enumerationliteral
DESIGN	todo more is required here to support referencevalues
DESIGN	todo implement support for types other than string
DESIGN	todo generalize - assumes uml type names are unique without the qualifying package names - true for uml 1.4
DESIGN	a classifier can only have a single unnamed classifierrole so todo this probably belongs in a critic instead of here
DESIGN	now get all classifiers imported from other packages todo this should probably happen automatically in getallmodelelementsofkind() - tfm
DESIGN	don't wait on ourselves we'll deadlock! todo we might want to throw an exception here
DESIGN	todo we don't want to do this once we have dropped uml1.3 map uml 1.4 names to uml 1.3 equivalents
DESIGN	recursive method to get all subtypes. todo does this have a scalability problem?
DESIGN	only do verification if debug level logging is on todo should we leave this on always? - tfm
DESIGN	todo we also have code registering for the names of a tagged value like "derived"
DESIGN	todo the type of the model element used in a type parameter (ie the formal) needs to match the actual parameter that it gets replaced with later. this code is going to restrict that to always being a parameter which doesn't seem right but i don't have time to debug it right now. - tfm - 20090608
DESIGN	todo add enumerationliteral someplace
DESIGN	todo a minimal update strategy would be better here to minimize work and events firing but it may be better to deprecate the method and force calls to manage updates themselves (since they probably usually want to just add or remove a single element) - tfm 20061108
DESIGN	todo this should use a minimal update strategy instead of removing everything and adding it again. - tfm
DESIGN	todo do we want to <<friend>> stereotypes too? || model.getextensionmechanismshelper().hasstereotype( permission modelmanagementhelper.friend_stereotype)
DESIGN	todo this actually returns permissions with stereotypes of both <<access>> and <<import>> when the spec calls for only the former but that seems to give different semantics to the way package imports work. review to see which is wrong.
DESIGN	todo performance. consider instantiating this just once outside the for loops and clear at this point instead.
DESIGN	todo this is ambiguous as to whether it should be adding a container or resident.
DESIGN	get elementresidences. todo unused. should be added to facade? - tfm @param handle a modelelement @return collection the elementresidence for this model element
DESIGN	modelimpl.getfacade().getrootelements() gets all root elements in the uml repository including available profiles that are not part of the current project (degrades performance). projectmanager.getmanager().getcurrentproject().getroots() only returns user model roots and no profiles. projectmanager.getmanager().getcurrentproject().getmodels() gets all root models but no root namespaces. todo which is best? is there any other way?
DESIGN	todo should we handle <<access>> and <<import>> here?
DESIGN	todo should we handle <<access>> and <<import>>?
DESIGN	todo this is not according the contract for this function but it is used in several places and i (mvw) presume that we need this generally. this part (1) is about drawing an <<import>> permission between packages. the part (2) below is about modelmanagement.elementimport.
DESIGN	todo this should fetch the stereotype from our profile
DESIGN	todo this should fetch the stereotype from our profile
DESIGN	todo this is well-formedness rule from uml1.4.2 4.5.3.20 [2] no generalizableelement can have a parent generalization to an element that is a leaf. self.parent->forall(s | not s.isleaf)
DESIGN	todo this is well-formedness rule from uml1.4.2 4.5.3.20 [1] a root cannot have any generalizations. self.isroot implies self.generalization->isempty
DESIGN	todo add standard stereotype? set is open ended but predefined names include call create instantiate send
DESIGN	check arguments against parameters for type and number todo perhaps move this to a critic instead? - tfm - 20070326
DESIGN	todo this is a composite association so these will get deleted automatically. the only thing we need to do is check for any additional elements that need to be deleted as a result.
DESIGN	todo build a return parameter
DESIGN	todo delete old multiplicity? why is "copy" using hard coded value? - tfm
DESIGN	todo this can be simplified to just ((include) extend).setbase((usecase) base)
DESIGN	todo this should be done after all events are delivered but leave it here for now to avoid last minute synchronization problems
DESIGN	todo how to merge multiple inheritance? necessary? this currently copies the common ancestors multiple times
DESIGN	todo as currently implemented this expects a list of multiplicityranges. is this an interface change from the nsuml implementation? i suspect it used to accept a list of integers. - tfm @see org.argouml.model.datatypesfactory#createmultiplicity(java.util.list)
DESIGN	todo getallpossiblesubvertices and getallsubstates are duplicates - tfm
DESIGN	todo getallpossiblesubvertices and getallsubstates are duplicates - tfm
DESIGN	todo this should probably throw an exception if it gets invalid arguments rather than just returning null
DESIGN	todo this is a part implementation of well-formedness rule uml1.4.2 - 4.5.3.20 [3] circular inheritance is not allowed. not self.allparents->includes(self)
DESIGN	todo we need to rethrow this as some other exception type but that is too much change for the moment.
DESIGN	todo use it notify set to true to forward events to model. only one of language and body fields should have this set to true.
DESIGN	todo if this is an ordered list then you have to add in the right location!
DESIGN	field todo textarea or textfield
DESIGN	@see javax.swing.event.documentlistener#changedupdate(javax.swing.event. documentevent) todo are the 3 methods uses ?
DESIGN	todo is is really used ? @see javax.swing.jcomponent#removenotify()
DESIGN	todo is is really used ? @see javax.swing.jcomponent#removenotify()
DESIGN	mvw for this case i had to move the call to setselecteditem() outside the "buildingmodel" otherwise the combo does not update with the new selection. see issue 5418.
DESIGN	todo bob says the reflective code following should be replaced with something more specific like this commented out code. this would mean we need stype changed to a meta type object rather than a string.
DESIGN	an opaqueexpression can have n body n language when display to user we only show one body. a "" button is enabled for edit other. todo can we by import xmi have 0 language/body ? @author laurent braud
DESIGN	todo redo it (curbody should be as long as curlanguage+button)
DESIGN	todo are the 3 methods uses ?
DESIGN	todo we have some quirk that the a baseclass addition or removal from a steroetype comes back as an attributechangeevent rather than an associationchangeevent. this needs further investigation to see if this can be made consistent.
DESIGN	todo this needs work we also need to listen to addition/removal of states to/from a classifierinstate.
DESIGN	create an empty but initialized instance of a uml method. @return an initialized uml method instance. todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	builds a manifestation of an element for an artifact. @param utilizedelement is the packageable element @return manifestation todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	this tag is set on elements that are generated by reference when importing. if it is set then the critics could ignore those objects if they want. todo this is really belongs in a higher level utility class that uses the facade's tagged value methods. also it needs to be updated to use a uml 1.4 tagdefinition instead of a simple string.
DESIGN	todo we need to rethrow this as some other exception type but that is too much change for the moment.
DESIGN	todo getallmodelelementsofkind should probably do this processing of imported elements automatically
DESIGN	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent) todo from combobox javadoc - "this method is public as an implementation side effect. do not call or override." we should find some other way to implement this.
DESIGN	todo can we find a better way to do this than hard coding colour?
DESIGN	todo part of this is copied from actiondeletemodelelement. we maybe need some subclass for common code.
DESIGN	returns all states that can be recursively contained by the given state. <p> todo {@link #getallpossiblesubvertices(object)} and {@link #getallsubstates(object)} are duplicates as implemented for mdr. it isn't clear from the javadoc or usage whether they should do different things or this just happened because no one noticed we already had another method. @param ostate the composite state we are searching the states for @return collection the collection with found states
DESIGN	todo remove the casting to diagramfactoryinterface2 as soon as diagramfactoryinterface is removed.
DESIGN	todo remove the casting to diagramfactoryinterface2 as soon as diagramfactoryinterface is removed.
DESIGN	return true iff the given todoitem is still valid and should be kept in the given designers todolist. critics that are not enabled should always return false so that their todoitems will be removed. subclasses of critic that supply multiple offenders should always override this method. <p> by default this method basically asks the critic to again critique the offending object and then it checks if the resulting todoitem is the same as the one already posted. this is simple and it works fine for light-weight critics. critics that expend a lot of computational effort in making feedback that can be easily check to see if it still holds should override this method. <p> todo maybe todoitem should carry some data to make this method more efficient. {@inheritdoc}
DESIGN	create our bandbuffer which is just a small slice of the image todo we used a fixed height buffer now but we could be smarter and compute a height which would fit in some memory budget allowing us to use taller buffers with narrower images minimizing the overhead of multiple rendering passes
DESIGN	the project interface encapsulates all information about a designer's project. it contains the list of diagrams and uml models various project properties such as the author's name and defaults for various settings. <p> todo this interface was mechanically refactored from the implementation class {@link projectimpl}. it needs to be reviewed and cleaned up eliminating methods which should be part of the public api and splitting the interface into smaller function specific (e.g. trashcan) interfaces. @author tom morris <tfmorris@gmail.com> thomas neustupny @since 0.25.4 when it replaced the concrete class of the same name
DESIGN	returns the root package. @return the package which is the root @deprecated for 0.25.4 by tfmorris - use {@link #getroots()} to get packages/model elements which are at the top level. <p> todo we probably need a getdefaultnamespace() method or something similar to replace some uses of this.
DESIGN	utility method to encode a string in a way that allows it to be saved properly in an xml file and regained filtering out any noice that an xml framework might have seen fit to add. todo why are we doing this ourselves? surely encoding information for xml serialization is a well known task - tfm i have never understood why this is being done. i think we should remove any usage - bob @paramstrthe string to encode. @returnthe encoded string.
DESIGN	todo this is a temporary crutch to use until all figs are updated to use the constructor that accepts a diagramsettings object
DESIGN	todo at the moment setselectedcomponent doesn't take into account the rather complex tab selection mechanism of detailspane. the tab selection mechanism must be refactored.
DESIGN	todo move magic number 10 to descriptive constant
DESIGN	todo move magic number 10 to descriptive constant
DESIGN	@see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent) todo this should be reviewed to see if it can be improved with a view towards removing some of the overrriding methods used as workarounds for differences between nsuml and mdr - tfm - 20060302
DESIGN	when we change the type we need to create a new initial value. and to display the panel todo if we select the same type that the current do nothing.
DESIGN	to simplify implementation we list all associations found with any of the classifiers represented by the linked instances. <p> todo make a foolproof algorithm that only allows selecting associations that create a correct model. also take into account n-ary associations and associationclasses. this algo best goes in the model subsystem e.g. in a method getallpossibleassociationsforalink(). @see org.argouml.uml.ui.umlcomboboxmodel#buildmodellist()
DESIGN	todo we may want to restrict the list to parameters which conform to the following wfr parameter.type = ofstype or (parameter.kind = #in and ofstype.allsupertypes->includes(type)) or ((parameter.kind = #out or parameter.kind = #return) and type.allsupertypes->includes(ofstype)) or (parameter.kind = #inout and ( ofstype.allsupertypes->includes(type) or type.allsupertypes->includes(ofstype))))
DESIGN	todo we should really test the model instead for this but we have no api yet. can we just check if the collection to build the jlist control implements the list interface?
DESIGN	todo copied from umldiagramrenderer. find the figs in the given layer that should be the source and destination and attach these to either end of the figedge @param layer the layer to look for the fignodes @param newedge the edge to attach
DESIGN	todo copied from umldiagramrenderer. get the fignode from the given layer that represents the given model element. the fignode portion of an association class is returned in preference to the figedge portion. if no fignode is found then a figedge is searched for and the fignode that acts as its edge port is returned. @param lay the layer containing the fig @param modelelement the model element to find presentation for @return the fignode presentation of the model element
DESIGN	i think that the synchronized access to idtoobjectmaps is required in order to respect the thread safe nature of the object. fixme maybe this should be moved into xmireferenceresolverimpl because it depends on internal implementation details of it.
DESIGN	a near clone of this code works fine outside of argouml but throws a null pointer exception during the transform when run within argouml i think it's something to do with the class libraries being used but i can't figure out what so i've done a simpler less efficient stepwise translation below in serialtransform
DESIGN	todo bob says - coding by use of side effect here. maybe this should be done in a clearer way but it fixes httpargouml.tigris.org/issues/show_bug.cgi?id=4978 it seems that when loading an xmi that is not contained in a zip file then the inputstream given as the argument to this method can't be reused as it is at the end of the stream. in that case systemid appears to be none-null at this stage. so if systemid is not null we recreate the inputsource.
DESIGN	xmiwriter implementation for mdr. this implementation is clumsy because the specified writer interface wants characters while the xmiwriter wants an outputstream dealing in bytes. we could easily create a writer from an outputstream but the reverse is not true. todo the old writer based interface can be removed when the deprecated modelimplementation.getxmiwriter is removed. @author lmaitre
DESIGN	todo this should call the single namespace form getstereotype(it2.next() stereo)
DESIGN	anything not found is newly created so return a null systemid indicating that it is in the parent document. todo this assumption will be invalid if/when we allow editing of linked sub-models
DESIGN	todo distinguish between deferred resolution and things which are unresolved at end of load and should be reported to user.
DESIGN	todo check whether this is really needed. i think it's left over from an incomplete understanding of the magicdraw composition error problem - tfm
DESIGN	todo this returns a collection not a single object is this what the callers expect?
DESIGN	todo this code manually processes the elementimports of a package but we need to check whether mdr already does something similar automatically as part of its namespace processing. - tfm - 20060408
DESIGN	todo i18n this needs to be localized but we don't have any localization capabilities in the model subsystem object[] args = { typename elemname alias } misc.name.element-import.alias = imported {0} {1} alias {2} return translator.localize( "misc.name.element-import.alias" args)
DESIGN	todo do we need to worry about umlclass umlpackage etc?
DESIGN	this causes problems. it can make multiple return messages refer to the same activator even if not returning to the same classifier role as the activator emenates from. i'm not sure that changing the activator of one message should amend any other messages but this is certainly changing too many - bob.
DESIGN	an array of valid connections the combination of connecting class and node classes must exist as a row in this list to be considered valid. <ul> <li>the 1st column is the connecting element. <li>the 2nd column is the "from" element type. <li>the 3rd column is the "to" element type. the 3rd column is optional if not given then it is assumed to be the same as the "from" element. <li>the existence of a 4th column indicates that the connection is valid in one direction only. </ul> todo this encodes not only what is legal in uml but also what argouml knows how to create so not all legal connections are included. probably should be split into two pieces 1) legal uml (here) and 2) supported (in argouml application someplace) - tfm - 20060325<p> see also issue 3863.<p> most of these are subtypes of relationship which includes association dependency flow generalization extend and include. dependency includes binding abstraction usage and permission. associationrole and associationclass are associations. the remaining items (link transition associationend message) are non-relationship types which argouml treats as connections/edges.
DESIGN	don't allow connections to be created from a read only model element to any other todo this should be considered a workaround. it only works because by default we place newly created relationships in the namespace of the fromelement. the correct behavior in the presence of read-only elements really depends on the type of connection as well as the writeability of both ends.
DESIGN	delete a model element. implements 'cascading delete' to make sure model is still valid after element has been deleted.<p> the actual deletion is delegated to delete methods in the rest of the factories. for example a method deleteclass exists on corehelper. delete methods as deleteclass should only do those extra actions that are necessary for the deletion of the modelelement itself. i.e. deleteclass should only take care of things specific to umlclass.<p> the delete methods in the uml factories should not be called directly throughout the code! calls should always refer to this method and never call the deletexxx method on xxxfactory directly. the reason that it is possible to call the deletexxx methods directly is a pure implementation detail.<p> the implementation of this method uses a quite complicated if/then/else tree. this is done to provide optimal performance and full compliance to the uml 1.4 metamodel. the last remark refers to the fact that the uml 1.4 model uses multiple inheritance in several places. this has to be taken into account.<p> todo the requirements of the metamodel could probably be better determined by reflection on the metamodel. then each association that a deleted element participates in could be reviewed to make sure that it meets the requirements and if not be deleted. - tfm<p> extensions and its children are not taken into account here. they do not require extra cleanup actions. not in the form of a call to the remove method as is normal for all children of mbase and not in the form of other behaviour we want to implement via this operation. @param elem the element to be deleted @see org.argouml.model.umlfactory#delete(java.lang.object)
DESIGN	todo it doesn't really make sense that a namespace would be returned as part of its own contents but that's the historical behavior.
DESIGN	todo as currently coded this actually returns all behavioralfeatures which are owned by classifiers contained in the given namespace which is slightly different then what's documented. it will not include any behavioralfeatures which are part of the namespace but which don't have an owner.
DESIGN	todo ?delete instances which have this as their classifier? or should we leave them since they contain so much state that the user would have to recreate?? nsmodel.getumlhelper().deletecollection( nsmodel.getumlpackage().getcommonbehavior() .getainstanceclassifier().getinstance(cls)) todo ?delete objectflowstates which have this as their type? nsmodel.getumlhelper().deletecollection( nsmodel.getumlpackage().getactivitygraphs() .getatypeobjectflowstate().getobjectflowstate(cls)) todo ?delete classifierinstates which have this as their type?
DESIGN	load .xmi file before any pgml files fixme the following is loading the model before anything else. due to the zargo containing the profiles currently we have removed this hack in umlfilepersister and i think it should be removed from here also.
DESIGN	hack for to do items only should check isleaf(node) but that includes empty folders. really i need alwaysleaf(node).
DESIGN	this is the interface for registering interest in events sent from the model component.<p> neither the registration or unregistration nor the events themselves contain any reference to the model implementation. instead they use the {@link java.beans.propertychangelistener} {@link java.beans.propertychangeevent} to deliver events.<p> the reference to the listener is a weakreference so you don't need to call removewhateverlistener you can just forget about your listener and it is eventually finalized and removed. this also means that you will have to keep a reference to your listener while it is active. since the garbage collecting mechanism is not really deterministic a forgotten about listener might still receive events. unless it can handle them in a harmless way this approach should not be used. todo (is this still true or does it refer to the nsuml implementation? - tfm 20051109) (this is part of the contract that is established between the model subsystem and its users. if that is not fulfilled by the current implementation then the current implementation is incorrect. linus 20060411).<p> todo what event names? the event names generated are {@link string}s and their values and meanings are not really well documented. in general they are the name of an an association end or attribute in the uml metamodel.<p> here are some highlights<ul> <li>"remove" - event sent when the element is removed. </ul> @author linus tolke
DESIGN	todo this probably can't be implemented in a way that will make the uml 1.4 ui happy. needs to be generalized to uml 2 semantics.
DESIGN	todo check semantics here - tfm
DESIGN	todo support more than one body/language
DESIGN	todo hook this creating of a new resource in to someplace more more appropriate (perhaps createmodel() ?) better yet add a new method to model api to create a new top level project/model/xmi file so we don't depend on side effects
DESIGN	creates a uml model element of the given type. this only works for uml elements. if a diagram contains elements of another type then it is the responsibility of the diagram manage those items and not call this method. it also only works for uml model elements that are represented in diagrams by a node. @param elementtype the type of model element to build @return the model element todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	finds a stereotype in a given namespace and all those in any sub-namespace of the given namespace. returns null if no such stereotype is found. <p> todo what if stereo.getname() or stereo.getbaseclass() is null? then you know immediately that none will be found but is that the correct answer? currently null is returned in these cases. <p> todo this function should not take a stereotype object as parameter but a name and a baseclass. <p> todo currently only works for stereotypes with only one baseclass. <p> todo currently only works for stereotypes where the baseclass is equal to the given one - inheritance does not work. @return the stereotype found or null. @param ns is the namespace. @param stereo is the stereotype.
DESIGN	todo note copy/paste code in figexitpoint - where is this code better placed in gef?
DESIGN	todo move an empty implementation to figgroup in gef
DESIGN	!! todo all code below here is duplicated in figbasenode. the reason is the gef defect - httpgef.tigris.org/issues/show_bug.cgi?id=358 once we have taken a release of gef with that fix we can remove this code.
DESIGN	the part of the design this issue affects. <p> each member is either a model element a {@link fig} or a {@link diagram}. <p> todo offenders need to be more strongly typed. because there is not a common supertype for these three types we can't type this list. we should introduce a common supertype/interface. - tfm 20070630 <p> the list of offenders is set once (e.g. by the constructor) and cannot change. <p>
DESIGN	this class models the designer who is building a complex design in some application domain and needs continuous feedback to aid in the making of good design decisions.<p> <strong>this area needs work especially as it is a central idea of argo.</strong><p> currently (almost) everything is hardcoded. what can be configurable??<p> the todolist is dependent on this class i.e. each designer has its todolist.<p> each designer has his own agency which is the only class that knows all the critics.<p> this class listens to property changes from ?<p> a designer can create todo items just like the critics. hence the designer implements the poster interface.<p> todo there is a strong dependency cycle between agency and designer. they either need to be merged into a single class or partitioned differently perhaps using an interface to break the cycle. the designer singleton gets passed to almost every single part of the critic subsystem creating strong coupling throughout. - tfm 20070620 @author jason robbins
DESIGN	agency manages critics. since classes are not really first class objects in java a singleton instance of agency is made and passed around as needed. the agency keeps a registry of all critics that should be applied to each type of design material. when a design material instance is critiqued it asks agency to apply all registered critic's. in the current scheme there is a thread that proactively continuously critiques the design at hand even if the user is idle! this is simple and it works. the disadvantage is that _all_ active critics related to a given design material are applied regardless of the reason for the critiquing and a lot of cpu time is basically wasted. <p> todo i am moving toward a more reactionary scheme in which specific design manipulations in the editor cause critics relevant to those manipulations to be applied. this transition is still half done. triggers are the critiquing requests. the code for triggers is currently dormant (latent?).<p> todo there is a strong dependency cycle between agency and designer. they either need to be merged into a single class or partitioned differently perhaps using an interface to break the cycle. the designer singleton gets passed to almost every single part of the critic subsystem creating strong coupling throughout. - tfm 20070620 @author jason robbins
DESIGN	moves some object to trash i.e. deletes it completely with all dependent structures. <p> deleting an object involves <pre> - removing target history - deleting all fig representations for the object - deleting the uml element - deleting all dependent uml modelelements - deleting commentedges (which are not uml elements) - move to trash for enclosed objects i.e. graphically drawn on top of - move to trash subdiagrams for the object - saveguard that there is always at least 1 diagram left - if the current diagram has been deleted select a new one to show - trigger the explorer when a diagram is deleted - set the needssave (dirty) flag of the projectmanager </pre> @param obj the object to be deleted @see org.argouml.kernel.projectimpl#trashinternal(object) <p> todo this should just be named delete() or something which better tells what it does (since there really isn't a trash can).
DESIGN	since this is (hopefully) a temporary solution and nobody ever looks at the type of notation event we can simplify from sending every existing event to one event only. but since there is no catch-all event defined we just make one up. rationale reduce the number of total refreshes of the drawing.
DESIGN	this class manages the projects loaded in argouml and what the current project is. <p> classes in argouml can ask this class for the current project and set the current project. since we only have one project in argouml at the moment this class does not manage a list of projects like one would expect. this could be a nice extension for the future of argouml. as soon as the current project is changed a property changed event is fired. <p> todo move everything related to the creation of a project into the projectfactory. @since nov 17 2002 @author jaap.branderhorst@xs4all.nl @stereotype singleton
DESIGN	finds a type in a model by name fixme duplicated from the method with the same name in org.argouml.profile.internal.modelutils. @param s the type name @param model the model @return the type or <code>null</code> if the type has not been found.
DESIGN	todo what if used elsewhere?
DESIGN	todo what if used elsewhere?
DESIGN	these may not actually make any difference at present (the code behind addtrigger needs more work).
DESIGN	these may not actually make any difference at present (the code behind addtrigger needs more work).
DESIGN	these may not actually make any difference at present (the code behind addtrigger needs more work).
DESIGN	create and register diagrams for activity and statemachines in the model(s) of the project. if no other diagrams are created a default class diagram will be created. argouml currently requires at least one diagram for proper operation. todo move to xmifilepersister (protected) @param project the project
DESIGN	a bufferinputstream that is aware of xml structure. it searches for the first occurrence of a named tag and reads only the data (inclusively) from that tag to the matching end tag or it can search for the first occurrence of a named tag and read on the child tags. the tag is not expected to be an empty tag. <p> todo this is hardwired to assume a fixed single byte character encoding. it needs to be updated to handle different encodings including multi-byte encodings. - tfm 20070607 @author bob tarling
DESIGN	method 2 (assign data immediately see end of file). todo if we ever want to extend pathitemplacement we should modify this so that we also recognise any subclass of pathitemplacement. is the class name a pathitemplacment? todo use class reference to make this dependency obvious
DESIGN	creates a new ocl critic @param oclconstraint ocl expression @param headline headline @param description description @param moreinfourl the info url @param knowledgetypes the knowledge types @param supporteddecisions the decisions @param priority the priority @throws invalidoclexception if the ocl is not valid todo do these need to be lists or can they be simple collections?
DESIGN	try to save the project. @param overwrite if true then we overwrite without asking @param file the file to save to @param pmw the progressmonitor to be updated @return true if successful todo separate this into a swing specific class - tfm @deprecated in 0.29.1 by bob tarling use trysavewithprogressmonitor
DESIGN	loads the project file and opens all kinds of error message windows if it doesn't work for some reason. in those cases it preserves the old project. @param file the file to open. @param showui true if an error message may be shown to the user false if run in commandline mode @param pmw the progressmonitor to be updated if not needed use null @return true if the file was successfully opened todo separate this into a swing specific class - tfm
DESIGN	todo delete should be available on any combination of model elements and diagrams. todo shouldn't be creating a new instance here. we should hold the delete action in some central place.
DESIGN	todo we need a factory pattern for goxxx classes that can determine if they are required
DESIGN	an object tagged as being the owner of a figedgenote. has knowledge about the source and destination of the figedgenote. <p> the source and destination are modelelements. at least one of them is a comment - but they may be both comments. todo there's tons of special case code scattered around argouml for this one class since it is the only "owner" of a figedgemodelelement which is not a uml element. we should find a way to generalize this.<p> todo issue 3031 requires this class to be replaced by a similar mechanism as the n-ary association class the node and the edges shall all have the same owner i.e. the uml comment object. @since jul 17 2004 @author jaap.branderhorst@xs4all.nl
DESIGN	set the fig style according to attributes. <p> todo this is never used! can we remove? @param fig the fig to style. @param attributemap a map of name value pairs
DESIGN	todo because we get called on each and every change event when the model is in a state of flux we'll often get an invalidelementexception before we finish this collection. the only saving grace is that we're called so many times that on the last time things should be stable again and we'll get a good set of elements for the final update. we need a better mechanism.
DESIGN	todo this code appears to be designed to jump to the diagram containing the contents of the package that was double clicked but it looks like it's always searching for the name "main" instead of the package name. todo but in any case it should be delegating this work to to something that knows about the diagrams and they contents -tfm
DESIGN	todo the above populate works but seems rather heavy here. i can see something like this is needed though as events won't manage this quick enough. could we make figeditablecompartment.createmodelelement() create the new child fig instance? it may also be useful for it to return the new model element rather than the current void return - bob.
DESIGN	changes the font for all figs contained in the given figgroup. <p> todo in fact there is a design error in this method e.g. for a class if the name is italic since the class is abstract then the classes features should be in plain font. this problem can be fixed by implementing the updatefont() method in all subclasses. @param fg the figgroup to change the font of.
DESIGN	changes the font for all figs contained in the given figgroup. <p> todo in fact there is a design error in this method e.g. for a class if the name is italic since the class is abstract then the classes features should be in plain font. this problem can be fixed by implementing the updatefont() method in all subclasses. @param fg the figgroup to change the font of.
DESIGN	todo 21/12/2008 dthompson mouseclicked(me) above consumes the mouse event internally so i suspect that this line might not be necessary.
DESIGN	<p>determines if the figedge is currently connected to the correct fignodes if not the edges is the correct fignodes set and the edge rerouted. <p>typically this is used when a user has amended from the property panel a relationship from one model element to another and the graph needs to react to that change. <p>e.g. if the participant of an association end is changed. <p>calls a helper method (layoutthistoself) to avoid this edge disappearing if the new source and dest are the same node. todo this method is called far too frequently. it should only be called when a specific event is received. it seems to be currently called whenever any event is received from the owner. @return boolean whether or not the update was sucessful
DESIGN	creates a new checkbox menu item attached to the specified action object and appends it to the end of this menu. todo this is almost a duplicate of argojmenu.addcheckitem must find a way to merge. @param a the action for the checkbox menu item to be added @return the new checkbox menu item
DESIGN	creates a new checkbox menu item attached to the specified action object and appends it to the end of this menu. todo this is almost a duplicate of argojmenu.addcheckitem must find a way to merge. @param a the action for the checkbox menu item to be added @return the new checkbox menu item
DESIGN	todo the namespace of enlisted events is currently the model. i think this is wrong they should be in the namespace of the activitygraph! vec.addall(model.getmodelmanagementhelper().getallmodelelementsofkind( model.getfacade().getnamespace(gettarget()) model.getmetatypes().getevent()))
DESIGN	todo use the following function to have a dropdown set of tools toolbarfactory.additemstotoolbar(buttonpanel actions true) instead this temporary solution @param buttonpanel the toolbar @param actions an array of actions representing the tool layout
DESIGN	todo can we get this from the metamodel? $non-nls-1$
DESIGN	todo change to throw exception when uses are fixed throw new notimplementedexception() $non-nls-1$
WITHOUT_CLASSIFICATION	test out the optimizer
WITHOUT_CLASSIFICATION	aload_0
WITHOUT_CLASSIFICATION	aload_0
WITHOUT_CLASSIFICATION	aload_0
WITHOUT_CLASSIFICATION	aload_0
WITHOUT_CLASSIFICATION	aload_0
WITHOUT_CLASSIFICATION	aload_0
WITHOUT_CLASSIFICATION	aload_0
WITHOUT_CLASSIFICATION	return
WITHOUT_CLASSIFICATION	return
WITHOUT_CLASSIFICATION	| this | bean | args | raw bean |
WITHOUT_CLASSIFICATION	invokeinterface
WITHOUT_CLASSIFICATION	astore 4 store the raw bean
WITHOUT_CLASSIFICATION	current stack len = 0
WITHOUT_CLASSIFICATION	current stack len = 0
WITHOUT_CLASSIFICATION	local variables | target obj | each oldvalue |
WITHOUT_CLASSIFICATION	invokeinterface invoke enabled.getinterceptfieldcallback()
WITHOUT_CLASSIFICATION	putfield new value of the field
WITHOUT_CLASSIFICATION	reference type
WITHOUT_CLASSIFICATION	double
WITHOUT_CLASSIFICATION	double
WITHOUT_CLASSIFICATION	long
WITHOUT_CLASSIFICATION	just decrement the lock don't recache (we don't know which transaction won)
WITHOUT_CLASSIFICATION	decode row selection
WITHOUT_CLASSIFICATION	disassembled state gets put in a new array (we write to cache by value!)
WITHOUT_CLASSIFICATION	again ccs did not have such a concept but a reasonable proximity is to clear the cache after transaction as long as the underlying cache is not jta aware.
WITHOUT_CLASSIFICATION	check
WITHOUT_CLASSIFICATION	row id
WITHOUT_CLASSIFICATION	composite-id
WITHOUT_CLASSIFICATION	discriminator
WITHOUT_CLASSIFICATION	property prop = new property() prop.setname("id") prop.setpropertyaccessorname("embedded") prop.setvalue(id) entity.setidentifierproperty(prop)
WITHOUT_CLASSIFICATION	dynamic insert
WITHOUT_CLASSIFICATION	persister
WITHOUT_CLASSIFICATION	get meta's from <subclass>
WITHOUT_CLASSIFICATION	properties
WITHOUT_CLASSIFICATION	properties
WITHOUT_CLASSIFICATION	generated properties can never be insertable
WITHOUT_CLASSIFICATION	table
WITHOUT_CLASSIFICATION	by default natural-ids are "immutable" (constant)
WITHOUT_CLASSIFICATION	( (column) ( (simplevalue) ic.getindex() ).getcolumniterator().next() ).setnullable(false)
WITHOUT_CLASSIFICATION	we found some extends attributes referencing entities which were not already processed. here we need to locate all entity-names and class-names contained in this document itself making sure that these get removed from the extendz list such that only extends names which require us to delay processing (i.e. external to this document and not yet processed) are contained in the returned result
WITHOUT_CLASSIFICATION	build a resultsetmappingdefinition given a containing element for the "return-xxx" elements @param resultsetelem the element containing the return definitions. @param path no clue @param mappings the current processing state. @return the description of the mappings
WITHOUT_CLASSIFICATION	private boolean showsql private boolean formatsql
WITHOUT_CLASSIFICATION	public boolean isshowsqlenabled() { return showsql } public boolean isformatsqlenabled() { return formatsql }
WITHOUT_CLASSIFICATION	set a custom entity resolver. this entity resolver must be set before addxxx(misc) call. default value is {@link org.hibernate.util.dtdentityresolver} @param entityresolver entity resolver to use
WITHOUT_CLASSIFICATION	final list extendsqueue
WITHOUT_CLASSIFICATION	if close() is called guarantee unbind()
WITHOUT_CLASSIFICATION	if a threadlocalsessioncontext-bound session happens to get serialized to be completely correct we need to make sure that unbinding of that session occurs.
WITHOUT_CLASSIFICATION	on the inverse it makes sense that if a threadlocalsessioncontext- bound session then gets deserialized to go ahead and re-bind it to the threadlocalsessioncontext session map.
WITHOUT_CLASSIFICATION	cannot be instantiated
WITHOUT_CLASSIFICATION	60 second lock timeout
WITHOUT_CLASSIFICATION	optimisticcache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	cache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	option.setdataversion( nonlockingdataversion.instance )
WITHOUT_CLASSIFICATION	do the put outside the scope of the jta txn
WITHOUT_CLASSIFICATION	ignore!
WITHOUT_CLASSIFICATION	tree cache in optimistic mode seems to have as very difficult time with remove calls on non-existent nodes (npes)
WITHOUT_CLASSIFICATION	60 seconds
WITHOUT_CLASSIFICATION	ignore!
WITHOUT_CLASSIFICATION	60 seconds
WITHOUT_CLASSIFICATION	do the failfast put outside the scope of the jta txn
WITHOUT_CLASSIFICATION	note evict() operates locally only (i.e. does not propogate to any other nodes in the potential cluster). this is exactly what is needed when we destroy() here destroy() is used as part of the process of shutting down a sessionfactory thus these removals should not be propogated
WITHOUT_CLASSIFICATION	protected regionrootlistener listener
WITHOUT_CLASSIFICATION	establish the region root node with a non-locking data version
WITHOUT_CLASSIFICATION	if we've been blocking for the mutex perhaps another thread has already reestablished the root. in case the node was reestablised via replication confirm it's marked "resident" (a status which doesn't replicate)
WITHOUT_CLASSIFICATION	for pessimistic locking we just want to toss out our ref to any old invalid root node and get the latest (may be null)
WITHOUT_CLASSIFICATION	the rest only matters for optimistic locking where we need to establish the proper data version on the region root
WITHOUT_CLASSIFICATION	don't hold a transactional lock for this
WITHOUT_CLASSIFICATION	make sure the root node for the region exists and has a dataversion that never complains
WITHOUT_CLASSIFICATION	never evict this node
WITHOUT_CLASSIFICATION	fix up the resident flag
WITHOUT_CLASSIFICATION	60 seconds
WITHOUT_CLASSIFICATION	we ignore minimalputoverride. jbosscache putforexternalread is already about as minimal as we can get it will promptly return if it discovers that the node we want to write to already exists
WITHOUT_CLASSIFICATION	no-op. we don't own the cache so we shouldn't stop it.
WITHOUT_CLASSIFICATION	this should only be possible if the caches are constructor injected
WITHOUT_CLASSIFICATION	we only build caches if none were passed in. passing in caches counts as a clear statement of exactly what is wanted
WITHOUT_CLASSIFICATION	set up the cache factory
WITHOUT_CLASSIFICATION	see if the user configured a multiplexer stack
WITHOUT_CLASSIFICATION	default to collections sharing entity cache if there is one
WITHOUT_CLASSIFICATION	default to sharing the entity cache if there is one
WITHOUT_CLASSIFICATION	for timestamps we default to a separate config
WITHOUT_CLASSIFICATION	we can't change the tm on a running cache just check if the cache has no tm and we're ok with that
WITHOUT_CLASSIFICATION	configure the cache to use our tm
WITHOUT_CLASSIFICATION	make sure jbc doesn't look one up
WITHOUT_CLASSIFICATION	this method should be implemented assuming it's valid to do start/stop/start -- leave state appropriate for another start
WITHOUT_CLASSIFICATION	make sure we don't re-release the same cache
WITHOUT_CLASSIFICATION	we use a different delegate than the non-optimistic superclass default
WITHOUT_CLASSIFICATION	following methods we don't delegate since they have so little logic it's clearer to just implement them here
WITHOUT_CLASSIFICATION	if jbc is using invalidation we don't want to propagate changes. we use the timestamps cache to manage invalidation
WITHOUT_CLASSIFICATION	we don't want to waste effort setting an option if jbc is already in local mode. if jbc is repl_(a)sync then check if they passed an config option to disable query replication
WITHOUT_CLASSIFICATION	don't hold the jbc node lock throughout the tx as that prevents updates add a zero (or low) timeout option so we don't block waiting for tx's that did a put to commit
WITHOUT_CLASSIFICATION	double check the distributed cache
WITHOUT_CLASSIFICATION	get an exclusive right to update jbc for this key from this node.
WITHOUT_CLASSIFICATION	we ensure async semantics (jbcache-1175)
WITHOUT_CLASSIFICATION	initial load from jbc
WITHOUT_CLASSIFICATION	see if we had a 2nd invalidation from the same initial preinvalidation timestamp. if so only increment if the new current value is an increase
WITHOUT_CLASSIFICATION	we ensure async semantics (jbcache-1175)
WITHOUT_CLASSIFICATION	if the workspace node has null as well ok if not we've been modified in a non-comparable manner which we have to treat as us being newer
WITHOUT_CLASSIFICATION	the standard comparator types are not serializable but are singletons
WITHOUT_CLASSIFICATION	ignore!
WITHOUT_CLASSIFICATION	ignore it
WITHOUT_CLASSIFICATION	construct the cache
WITHOUT_CLASSIFICATION	local cache so we use synchronization
WITHOUT_CLASSIFICATION	local cache so we use synchronization
WITHOUT_CLASSIFICATION	ie. 60 seconds
WITHOUT_CLASSIFICATION	swaldman 2006-08-28 define c3p0-style configuration parameters for initialpoolsize which hibernate sensibly lets default to minpoolsize but we'll let users override it with the c3p0-style property if they want.
WITHOUT_CLASSIFICATION	datasource unpooled = datasources.unpooleddatasource(jdbcurl props.getproperty(environment.user) props.getproperty(environment.pass))
WITHOUT_CLASSIFICATION	true if the pool is borrowed from the outside false if we used to create it
WITHOUT_CLASSIFICATION	get a connection from the pool (thru drivermanager cfr. proxool doc)
WITHOUT_CLASSIFICATION	set the transaction isolation if defined
WITHOUT_CLASSIFICATION	toggle autocommit to false if set
WITHOUT_CLASSIFICATION	return the connection
WITHOUT_CLASSIFICATION	get the configurator files (if available)
WITHOUT_CLASSIFICATION	default the proxool alias setting
WITHOUT_CLASSIFICATION	validate that an alias name was provided to determine which pool to use
WITHOUT_CLASSIFICATION	validate that an alias name was provided to determine which pool to use
WITHOUT_CLASSIFICATION	append the stem to the proxool pool alias
WITHOUT_CLASSIFICATION	set the existing pool flag to true
WITHOUT_CLASSIFICATION	configured using the jaxp configurator
WITHOUT_CLASSIFICATION	validate that an alias name was provided to determine which pool to use
WITHOUT_CLASSIFICATION	append the stem to the proxool pool alias
WITHOUT_CLASSIFICATION	append the stem to the proxool pool alias
WITHOUT_CLASSIFICATION	configured using the properties file configurator
WITHOUT_CLASSIFICATION	remember isolation level
WITHOUT_CLASSIFICATION	if the provider was leeching off an existing pool don't close it
WITHOUT_CLASSIFICATION	we have created the pool ourselves so shut it down
WITHOUT_CLASSIFICATION	not really a many-to-one association necessarily
WITHOUT_CLASSIFICATION	not really a many-to-one association necessarily
WITHOUT_CLASSIFICATION	always overwrite nonversioned data
WITHOUT_CLASSIFICATION	public currency getcurrency(int col) throws hibernateexception
WITHOUT_CLASSIFICATION	default is pojo
WITHOUT_CLASSIFICATION	use setparameter for null values
WITHOUT_CLASSIFICATION	use setparameter for null values
WITHOUT_CLASSIFICATION	private cacheentry cacheentry
WITHOUT_CLASSIFICATION	don't need to lock the cache here since if someone else inserted the same pk first the insert would fail
WITHOUT_CLASSIFICATION	make 100% certain that this is called before any subsequent scheduledupdate.aftertransactioncompletion()!!
WITHOUT_CLASSIFICATION	get the updated snapshot of the entity state by cloning current state it is safe to copy in place since by this time no-one else (should have) has a reference to the array
WITHOUT_CLASSIFICATION	this entity defines proeprty generation so process those generated values
WITHOUT_CLASSIFICATION	have the entity entry perform post-update processing passing it the update state and the new version (if one).
WITHOUT_CLASSIFICATION	!persister.iscacheinvalidationrequired()
WITHOUT_CLASSIFICATION	need to look it up from the persistence-context
WITHOUT_CLASSIFICATION	sort first by role name
WITHOUT_CLASSIFICATION	make 100% certain that this is called before any subsequent scheduledupdate.aftertransactioncompletion()!!
WITHOUT_CLASSIFICATION	then by fk
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	an existing collection that was either non-empty or uninitialized is replaced by null or a different collection (if the collection is uninitialized hibernate has no way of knowing if the collection is actually empty without querying the db)
WITHOUT_CLASSIFICATION	this method is called when a new non-null collection is persisted or when an existing (non-null) collection is moved to a new owner
WITHOUT_CLASSIFICATION	boolean put = persister.getcache().insert(ck cacheentry)
WITHOUT_CLASSIFICATION	we need to grab the version value from the entity otherwise we have issues with generated-version entities that may have multiple actions queued during the same flush
WITHOUT_CLASSIFICATION	do nothing - we only need to notify the cache
WITHOUT_CLASSIFICATION	sort first by entity name
WITHOUT_CLASSIFICATION	then by id
WITHOUT_CLASSIFICATION	to be safe
WITHOUT_CLASSIFICATION	no transformations took place so handle it as we would a non-instrumented class
WITHOUT_CLASSIFICATION	see if the entry represents a class file
WITHOUT_CLASSIFICATION	see if the entry represents a class file
WITHOUT_CLASSIFICATION	intentionally empty
WITHOUT_CLASSIFICATION	test out the optimizer
WITHOUT_CLASSIFICATION	set the name of bulk accessor.
WITHOUT_CLASSIFICATION	aload_0
WITHOUT_CLASSIFICATION	invokespecial
WITHOUT_CLASSIFICATION	return
WITHOUT_CLASSIFICATION	aload_1 load bean
WITHOUT_CLASSIFICATION	checkcast cast bean
WITHOUT_CLASSIFICATION	astore_3 store bean
WITHOUT_CLASSIFICATION	aload_2 args
WITHOUT_CLASSIFICATION	iconst_i continue to aastore growing stack is 1
WITHOUT_CLASSIFICATION	new
WITHOUT_CLASSIFICATION	dup
WITHOUT_CLASSIFICATION	aload_3 load the raw bean
WITHOUT_CLASSIFICATION	invokeinterface
WITHOUT_CLASSIFICATION	invokevirtual
WITHOUT_CLASSIFICATION	invokevirtual
WITHOUT_CLASSIFICATION	aastore args
WITHOUT_CLASSIFICATION	| this | bean | args | i | raw bean | exception |
WITHOUT_CLASSIFICATION	required to exception table iconst_0 i
WITHOUT_CLASSIFICATION	istore_3 store i
WITHOUT_CLASSIFICATION	aload_1 load the bean
WITHOUT_CLASSIFICATION	checkcast cast the bean into a raw bean
WITHOUT_CLASSIFICATION	current stack len = 0
WITHOUT_CLASSIFICATION	start region to handling exception (bulkaccessorexception)
WITHOUT_CLASSIFICATION	iinc 3 1
WITHOUT_CLASSIFICATION	aload 4 load the raw bean
WITHOUT_CLASSIFICATION	aload_2 load the args
WITHOUT_CLASSIFICATION	iconst_i
WITHOUT_CLASSIFICATION	aaload
WITHOUT_CLASSIFICATION	checkcast
WITHOUT_CLASSIFICATION	checkcast (case of primitive type) invokevirtual (case of primitive type)
WITHOUT_CLASSIFICATION	checkcast (case of reference type)
WITHOUT_CLASSIFICATION	current stack len = 2
WITHOUT_CLASSIFICATION	end region to handling exception (bulkaccessorexception)
WITHOUT_CLASSIFICATION	register in exception table
WITHOUT_CLASSIFICATION	aload_0
WITHOUT_CLASSIFICATION	aload_0
WITHOUT_CLASSIFICATION	return
WITHOUT_CLASSIFICATION	return
WITHOUT_CLASSIFICATION	dup
WITHOUT_CLASSIFICATION	invokevirtual
WITHOUT_CLASSIFICATION	checkcast
WITHOUT_CLASSIFICATION	local variables | target obj | each oldvalue |
WITHOUT_CLASSIFICATION	astore 5 store exception
WITHOUT_CLASSIFICATION	new bulkaccessorexception
WITHOUT_CLASSIFICATION	aload 5 load exception
WITHOUT_CLASSIFICATION	iload_3 i
WITHOUT_CLASSIFICATION	invokespecial bulkaccessorexception.<init>
WITHOUT_CLASSIFICATION	athrow
WITHOUT_CLASSIFICATION	warning classfile only
WITHOUT_CLASSIFICATION	swallow
WITHOUT_CLASSIFICATION	local variable | this |
WITHOUT_CLASSIFICATION	aload_0 load this
WITHOUT_CLASSIFICATION	aload_0 load this
WITHOUT_CLASSIFICATION	getfield get field "$javassist_callback" defined already
WITHOUT_CLASSIFICATION	areturn return the value of the field
WITHOUT_CLASSIFICATION	local variables | this | callback |
WITHOUT_CLASSIFICATION	aload_1 load callback
WITHOUT_CLASSIFICATION	putfield put field "$javassist_callback" defined already
WITHOUT_CLASSIFICATION	case of non-static field
WITHOUT_CLASSIFICATION	getfield get each field
WITHOUT_CLASSIFICATION	invokeinterface invoke enabled.getinterceptfieldcallback()
WITHOUT_CLASSIFICATION	ifnonnull
WITHOUT_CLASSIFICATION	return each type
WITHOUT_CLASSIFICATION	return each type
WITHOUT_CLASSIFICATION	store_1 each type
WITHOUT_CLASSIFICATION	ldc name of the field
WITHOUT_CLASSIFICATION	load_1 each type
WITHOUT_CLASSIFICATION	invokeinterface invoke callback.read() each type
WITHOUT_CLASSIFICATION	int
WITHOUT_CLASSIFICATION	return
WITHOUT_CLASSIFICATION	dup
WITHOUT_CLASSIFICATION	invokeinterface
WITHOUT_CLASSIFICATION	checkcast
WITHOUT_CLASSIFICATION	checkcast
WITHOUT_CLASSIFICATION	invokeinterface enabled.getinterceptfieldcallback()
WITHOUT_CLASSIFICATION	invokeinterface enabled.getinterceptfieldcallback()
WITHOUT_CLASSIFICATION	ifnonnull (label1)
WITHOUT_CLASSIFICATION	load_1
WITHOUT_CLASSIFICATION	load_1
WITHOUT_CLASSIFICATION	putfield
WITHOUT_CLASSIFICATION	return
WITHOUT_CLASSIFICATION	ldc field name
WITHOUT_CLASSIFICATION	getfield old value of the field
WITHOUT_CLASSIFICATION	invokeinterface callback.write(..)
WITHOUT_CLASSIFICATION	reference type
WITHOUT_CLASSIFICATION	reference type
WITHOUT_CLASSIFICATION	not array
WITHOUT_CLASSIFICATION	array of reference type
WITHOUT_CLASSIFICATION	boolean
WITHOUT_CLASSIFICATION	byte
WITHOUT_CLASSIFICATION	char
WITHOUT_CLASSIFICATION	short
WITHOUT_CLASSIFICATION	double
WITHOUT_CLASSIFICATION	float
WITHOUT_CLASSIFICATION	float
WITHOUT_CLASSIFICATION	long
WITHOUT_CLASSIFICATION	long
WITHOUT_CLASSIFICATION	bad type
WITHOUT_CLASSIFICATION	bad type
WITHOUT_CLASSIFICATION	boolean byte char int short
WITHOUT_CLASSIFICATION	boolean byte char int short
WITHOUT_CLASSIFICATION	reference type
WITHOUT_CLASSIFICATION	double
WITHOUT_CLASSIFICATION	float
WITHOUT_CLASSIFICATION	float
WITHOUT_CLASSIFICATION	long
WITHOUT_CLASSIFICATION	bad type
WITHOUT_CLASSIFICATION	bad type
WITHOUT_CLASSIFICATION	boolean byte char int short
WITHOUT_CLASSIFICATION	skip finalize methods
WITHOUT_CLASSIFICATION	mainly for oscache
WITHOUT_CLASSIFICATION	decrement the lock
WITHOUT_CLASSIFICATION	create new lock that times out immediately
WITHOUT_CLASSIFICATION	recache the updated state
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	null clientlock is remotely possible but will never happen in practice
WITHOUT_CLASSIFICATION	we really could refresh the item if it is not a lock but it might be slower return freshtimestamp < txtimestamp
WITHOUT_CLASSIFICATION	by requiring < we rely on lock timeout in the case of an unsuccessful update!
WITHOUT_CLASSIFICATION	the user provided resulttransformer not the one used with "select new". here to avoid mangling transformed/non-transformed results.
WITHOUT_CLASSIFICATION	disassemble positional parameters
WITHOUT_CLASSIFICATION	disassemble named parameters
WITHOUT_CLASSIFICATION	ie. 60 seconds
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	this is called from settingsfactory irregardless trivial to simply disregard
WITHOUT_CLASSIFICATION	do nothing subclasses may override.
WITHOUT_CLASSIFICATION	do nothing subclasses may override.
WITHOUT_CLASSIFICATION	throw new unsupportedoperationexception("can't write to a readonly object")
WITHOUT_CLASSIFICATION	assembled state gets put in a new array (we read from cache by value!)
WITHOUT_CLASSIFICATION	persister.setidentifier(result id) before calling interceptor for consistency with normal load
WITHOUT_CLASSIFICATION	no-op ccs did not have such a concept
WITHOUT_CLASSIFICATION	no-op ccs did not have such a concept
WITHOUT_CLASSIFICATION	again ccs did not have such a concept but a reasonable proximity is to clear the cache after transaction as long as the underlying cache is not jta aware.
WITHOUT_CLASSIFICATION	again ccs did not have such a concept however a reasonable proximity is to clear the cache. for non-transaction aware caches we will also do a clear at the end of the transaction
WITHOUT_CLASSIFICATION	again ccs did not have such a concept however a reasonable proximity is to clear the cache. for non-transaction aware caches we will also do a clear at the end of the transaction
WITHOUT_CLASSIFICATION	classes mentioned in extends not available - so put it in queue
WITHOUT_CLASSIFICATION	get meta's from <hibernate-mapping>
WITHOUT_CLASSIFICATION	get meta's from <class>
WITHOUT_CLASSIFICATION	db-objectname
WITHOUT_CLASSIFICATION	mutable
WITHOUT_CLASSIFICATION	where
WITHOUT_CLASSIFICATION	check
WITHOUT_CLASSIFICATION	polymorphism
WITHOUT_CLASSIFICATION	todo
WITHOUT_CLASSIFICATION	id
WITHOUT_CLASSIFICATION	version / timestamp
WITHOUT_CLASSIFICATION	discriminator
WITHOUT_CLASSIFICATION	primary key constraint
WITHOUT_CLASSIFICATION	this is either a <version/> tag with no type attribute or a <timestamp/> tag
WITHOUT_CLASSIFICATION	for version properties marked as being generated make sure they are "always" generated aka "insert" is invalid this is dis-allowed by the dtd but just to make sure
WITHOUT_CLASSIFICATION	discriminator
WITHOUT_CLASSIFICATION	( (column) discrim.getcolumniterator().next() ).settype(type)
WITHOUT_CLASSIFICATION	go ahead and set the lazy here since pojo.proxy can override it.
WITHOUT_CLASSIFICATION	dynamic update
WITHOUT_CLASSIFICATION	import
WITHOUT_CLASSIFICATION	batch size
WITHOUT_CLASSIFICATION	select before update
WITHOUT_CLASSIFICATION	optimistic lock mode
WITHOUT_CLASSIFICATION	persister
WITHOUT_CLASSIFICATION	custom sql
WITHOUT_CLASSIFICATION	get meta's from <subclass>
WITHOUT_CLASSIFICATION	properties
WITHOUT_CLASSIFICATION	joined subclasses
WITHOUT_CLASSIFICATION	key
WITHOUT_CLASSIFICATION	check
WITHOUT_CLASSIFICATION	custom sql
WITHOUT_CLASSIFICATION	properties
WITHOUT_CLASSIFICATION	key
WITHOUT_CLASSIFICATION	model.getkey().settype( new type( model.getidentifier() ) )
WITHOUT_CLASSIFICATION	tablename
WITHOUT_CLASSIFICATION	join.getkey().settype( new type( lazz.getidentifier() ) )
WITHOUT_CLASSIFICATION	properties
WITHOUT_CLASSIFICATION	column(s)
WITHOUT_CLASSIFICATION	column index
WITHOUT_CLASSIFICATION	column unique-key
WITHOUT_CLASSIFICATION	automatically makes a column with the default name if none is specifed by xml
WITHOUT_CLASSIFICATION	for an any
WITHOUT_CLASSIFICATION	insertable simply because that is the user did not specify anything just override it
WITHOUT_CLASSIFICATION	the user specifically supplied insert="true" which constitutes an illegal combo
WITHOUT_CLASSIFICATION	properties generated on update can never be updateable
WITHOUT_CLASSIFICATION	updateable only because the user did not specify anything just override it
WITHOUT_CLASSIFICATION	the user specifically supplied update="true" which constitutes an illegal combo
WITHOUT_CLASSIFICATION	rolename
WITHOUT_CLASSIFICATION	fetch strategy
WITHOUT_CLASSIFICATION	table
WITHOUT_CLASSIFICATION	tablename = mappings.getnamingstrategy().propertytotablename( classname path )
WITHOUT_CLASSIFICATION	sort
WITHOUT_CLASSIFICATION	custom sql
WITHOUT_CLASSIFICATION	unsorted natural comparator.class.name
WITHOUT_CLASSIFICATION	orphan delete (used for programmer error detection)
WITHOUT_CLASSIFICATION	set up second pass
WITHOUT_CLASSIFICATION	an "embedded" component (composite ids and unique) note that this does not handle nested components
WITHOUT_CLASSIFICATION	a nested composite element
WITHOUT_CLASSIFICATION	for an any we will have to use reflection
WITHOUT_CLASSIFICATION	note special case one-to-one constrained=false cannot be proxied so default to join and non-lazy
WITHOUT_CLASSIFICATION	use old (hb 2.1) defaults if outer-join is specified
WITHOUT_CLASSIFICATION	lazy = !join
WITHOUT_CLASSIFICATION	generator
WITHOUT_CLASSIFICATION	id unsaved-value
WITHOUT_CLASSIFICATION	version unsaved-value
WITHOUT_CLASSIFICATION	not necessarily a unique property reference
WITHOUT_CLASSIFICATION	( (column) ( (simplevalue) ic.getindex() ).getcolumniterator().next() ).setnullable(false)
WITHOUT_CLASSIFICATION	contained elements
WITHOUT_CLASSIFICATION	for non-inverse one-to-many with a not-null fk add a backref!
WITHOUT_CLASSIFICATION	bind the where
WITHOUT_CLASSIFICATION	bind the order-by
WITHOUT_CLASSIFICATION	bind the filters
WITHOUT_CLASSIFICATION	overriding inherited meta attribute. hbx-621 & hbx-793
WITHOUT_CLASSIFICATION	first iterate over all elements capable of defining an extends attribute collecting all found extends references if they cannot be resolved against the already processed mappings.
WITHOUT_CLASSIFICATION	mappings might contain either the "raw" extends name (in the case of an entity-name mapping) or a fqn (in the case of a pojo mapping).
WITHOUT_CLASSIFICATION	+ "_" + referencedcolumnname not used for backward compatibility
WITHOUT_CLASSIFICATION	sessionfactory name
WITHOUT_CLASSIFICATION	jdbc and connection settings
WITHOUT_CLASSIFICATION	jdbc and connection settings
WITHOUT_CLASSIFICATION	interrogate jdbc metadata
WITHOUT_CLASSIFICATION	user supplied jdbc connections
WITHOUT_CLASSIFICATION	use dialect default properties
WITHOUT_CLASSIFICATION	transaction settings
WITHOUT_CLASSIFICATION	sql generation settings
WITHOUT_CLASSIFICATION	query parser settings
WITHOUT_CLASSIFICATION	second-level / query cache
WITHOUT_CLASSIFICATION	the cache provider is needed when we either have second-level cache enabled or query cache enabled. note that usesecondlevelcache is enabled by default
WITHOUT_CLASSIFICATION	sql exception converter
WITHOUT_CLASSIFICATION	statistics and logging
WITHOUT_CLASSIFICATION	settings.setshowsqlenabled(showsql)
WITHOUT_CLASSIFICATION	settings.setformatsqlenabled(formatsql)
WITHOUT_CLASSIFICATION	schema export
WITHOUT_CLASSIFICATION	string provider = properties.getproperty( environment.bytecode_provider ) log.info( "bytecode provider name " + provider ) bytecodeprovider bytecodeprovider = buildbytecodeprovider( provider ) settings.setbytecodeprovider( bytecodeprovider )
WITHOUT_CLASSIFICATION	legacy behavior apply the bridge
WITHOUT_CLASSIFICATION	maybe a concrete sqlpropertyresult type but map is exactly what is required at the moment
WITHOUT_CLASSIFICATION	if dotted and not load-collection nor return-join regular property
WITHOUT_CLASSIFICATION	private componenttuplizerfactory componenttuplizerfactory todo hhh-3517 and hhh-1907 private bytecodeprovider bytecodeprovider
WITHOUT_CLASSIFICATION	public getters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	public componenttuplizerfactory getcomponenttuplizerfactory() { return componenttuplizerfactory }
WITHOUT_CLASSIFICATION	package protected setters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	void setshowsqlenabled(boolean b) { showsql = b } void setformatsqlenabled(boolean b) { formatsql = b }
WITHOUT_CLASSIFICATION	public bytecodeprovider getbytecodeprovider() { return bytecodeprovider } void setbytecodeprovider(bytecodeprovider bytecodeprovider) { this.bytecodeprovider = bytecodeprovider }
WITHOUT_CLASSIFICATION	using local since the inheritedmetas at this point is not the correct map since it is always the empty map
WITHOUT_CLASSIFICATION	private componenttuplizerfactory componenttuplizerfactory todo hhh-3517 and hhh-1907
WITHOUT_CLASSIFICATION	protected list extendsqueue
WITHOUT_CLASSIFICATION	extendsqueue = new arraylist()
WITHOUT_CLASSIFICATION	componenttuplizerfactory = new componenttuplizerfactory()
WITHOUT_CLASSIFICATION	if doc is null then for whatever reason the cached file cannot be used
WITHOUT_CLASSIFICATION	drop them in reverse order in case db needs it done that way
WITHOUT_CLASSIFICATION	public componenttuplizerfactory getcomponenttuplizerfactory() { return componenttuplizerfactory }
WITHOUT_CLASSIFICATION	this method may be called many times!!
WITHOUT_CLASSIFICATION	iterator iterator = extendsqueue.iterator()
WITHOUT_CLASSIFICATION	iterator iter = extendsqueue.iterator()
WITHOUT_CLASSIFICATION	found
WITHOUT_CLASSIFICATION	found
WITHOUT_CLASSIFICATION	settings.setcomponenttuplizerfactory( this.getcomponenttuplizerfactory() )
WITHOUT_CLASSIFICATION	private final list extendsqueue
WITHOUT_CLASSIFICATION	<string string>
WITHOUT_CLASSIFICATION	<string string>
WITHOUT_CLASSIFICATION	+ "_" + referencedcolumnname not used for backward compatibility
WITHOUT_CLASSIFICATION	set use_reflection_optimizer to false to fix hhh-227
WITHOUT_CLASSIFICATION	orphan delete not supported for entitymode.dom4j
WITHOUT_CLASSIFICATION	element = xmlhelper.generatedom4jelement( persister.getnodename() )
WITHOUT_CLASSIFICATION	intentionally empty
WITHOUT_CLASSIFICATION	orphan delete not supported for entitymode.dom4j
WITHOUT_CLASSIFICATION	element = xmlhelper.generatedom4jelement( persister.getnodename() )
WITHOUT_CLASSIFICATION	needed for soap libraries etc
WITHOUT_CLASSIFICATION	maintain correct duplication if loaded in a cartesian product
WITHOUT_CLASSIFICATION	the element has been removed from the set
WITHOUT_CLASSIFICATION	the element has changed
WITHOUT_CLASSIFICATION	careful these methods do not initialize the collection.
WITHOUT_CLASSIFICATION	needed so that we remove this collection from the second-level cache
WITHOUT_CLASSIFICATION	override on some subclasses
WITHOUT_CLASSIFICATION	override on some subclasses
WITHOUT_CLASSIFICATION	do this bit after setting initialized to true or it will recurse
WITHOUT_CLASSIFICATION	short-circuit(s) no new elements the old list contains only orphans no old elements so no orphans neither
WITHOUT_CLASSIFICATION	create the collection holding the orphans
WITHOUT_CLASSIFICATION	collect entityidentifier(s) of the current elements - add them into a hashset for fast access
WITHOUT_CLASSIFICATION	iterate over the old list
WITHOUT_CLASSIFICATION	(array==null) ? templist.size()
WITHOUT_CLASSIFICATION	intentionally empty
WITHOUT_CLASSIFICATION	(array==null) ? templist.get(i)
WITHOUT_CLASSIFICATION	write() -- doesn't
WITHOUT_CLASSIFICATION	write() -- doesn't
WITHOUT_CLASSIFICATION	amazingly these two will work because abstractcollection uses iterator() to fill the array
WITHOUT_CLASSIFICATION	needed for soap libraries etc
WITHOUT_CLASSIFICATION	finally what it's all about
WITHOUT_CLASSIFICATION	note that if we load this collection from a cartesian product the multiplicity would be broken so use an idbag instead
WITHOUT_CLASSIFICATION	anyway here we implement <set> semantics for a <one-to-many> <bag>!
WITHOUT_CLASSIFICATION	a shortcut if its location didn't change!
WITHOUT_CLASSIFICATION	search for it note that this code is incorrect for other than one-to-many
WITHOUT_CLASSIFICATION	needed for soap libraries etc
WITHOUT_CLASSIFICATION	a shortcut if its location didn't change!
WITHOUT_CLASSIFICATION	search for it note that this code is incorrect for other than one-to-many
WITHOUT_CLASSIFICATION	public boolean equals(object other) {read()return bag.equals(other)}public int hashcode(object other) {read()return bag.hashcode()}
WITHOUT_CLASSIFICATION	list operations
WITHOUT_CLASSIFICATION	pad with nulls from the current last element up to the new index
WITHOUT_CLASSIFICATION	needed for soap libraries etc
WITHOUT_CLASSIFICATION	needed for soap libraries etc
WITHOUT_CLASSIFICATION	from map
WITHOUT_CLASSIFICATION	from sortedmap
WITHOUT_CLASSIFICATION	inject the data
WITHOUT_CLASSIFICATION	cannot be instantiated
WITHOUT_CLASSIFICATION	default pool size 20
WITHOUT_CLASSIFICATION	trying via forname() first to be as close to drivermanager's semantics
WITHOUT_CLASSIFICATION	if debug level is enabled then log the password otherwise mask it
WITHOUT_CLASSIFICATION	register a cleanup synch
WITHOUT_CLASSIFICATION	wrap the session in the transaction-protection proxy
WITHOUT_CLASSIFICATION	then bind it
WITHOUT_CLASSIFICATION	try to make sure we don't wrap and already wrapped session
WITHOUT_CLASSIFICATION	allow these to go through the the real session no matter what
WITHOUT_CLASSIFICATION	limit the methods available if no transaction is active
WITHOUT_CLASSIFICATION	allow these (deprecated) methods to pass through
WITHOUT_CLASSIFICATION	serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	we could register the session against the transaction even though it is not started but we'd have no guarentee of ever getting the map entries cleaned up (aside from spawning threads).
WITHOUT_CLASSIFICATION	cannot be instantiated
WITHOUT_CLASSIFICATION	private string propertyname
WITHOUT_CLASSIFICATION	public propertyprojection project() {return projections.property(getpropertyname())}
WITHOUT_CLASSIFICATION	string[] fk = stringhelper.qualify( "collection_" cp.getkeycolumnnames() )
WITHOUT_CLASSIFICATION	" collection_ where " +
WITHOUT_CLASSIFICATION	unsupported
WITHOUT_CLASSIFICATION	unsupported
WITHOUT_CLASSIFICATION	cannot be instantiated
WITHOUT_CLASSIFICATION	the following two lines were added to ensure that this.params is not null which can happen with two-deep nested subqueries
WITHOUT_CLASSIFICATION	with two-deep subqueries the same alias would get generated for both using the old method (criteriaquery.generatesqlalias()) so that is now used as a fallback if the main criteria alias isn't set
WITHOUT_CLASSIFICATION	implicit polymorphism not supported (would need a union)
WITHOUT_CLASSIFICATION	pull off the last " "
WITHOUT_CLASSIFICATION	$non-nls-1
WITHOUT_CLASSIFICATION	we have the form trim(trimsource) so we trim leading and trailing spaces
WITHOUT_CLASSIFICATION	we have the form trim(from trimsource). this is functionally equivalent to trim(trimsource)
WITHOUT_CLASSIFICATION	not_supported_should_use_jdbc3_preparedstatement.getgeneratedkeys_method
WITHOUT_CLASSIFICATION	potentialtrimcharacterargindex = 1 assumes that a trim-specification has been specified. we handle the exception to that explicitly
WITHOUT_CLASSIFICATION	overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	oracle did add support for ansi case statements in 9i
WITHOUT_CLASSIFICATION	the standard sql function name is current_timestamp
WITHOUT_CLASSIFICATION	informix doesn't have a bit type
WITHOUT_CLASSIFICATION	or byte or text? or money
WITHOUT_CLASSIFICATION	strip table-owner because informix always returns constraint names as "<table-owner>.<constraint-name>"
WITHOUT_CLASSIFICATION	build the map of standard ansi sql aggregation functions ~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	pre h3.2 behavior super.getreturntype(ct m)
WITHOUT_CLASSIFICATION	finally use the sqltype if == on hibernate types did not find a match.
WITHOUT_CLASSIFICATION	because numeric can be anything
WITHOUT_CLASSIFICATION	constructors and factory methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	standard sql92 functions (can be overridden by subclasses)
WITHOUT_CLASSIFICATION	map second/minute/hour/day/month/year to ansi extract() override on subclasses
WITHOUT_CLASSIFICATION	register hibernate types for default use in scalar sqlquery type auto detection
WITHOUT_CLASSIFICATION	database type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	hibernate type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	keyword support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	native identifier generatiion ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	identity support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	sequence support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	guid support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	limit/offset support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	by default we report no support
WITHOUT_CLASSIFICATION	by default we report no support for nowait lock semantics
WITHOUT_CLASSIFICATION	table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	current timestamp support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	sqlexception support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	identifier quoting support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	ddl support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	grrr for differentiation of mysql storage engines
WITHOUT_CLASSIFICATION	informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	return false here as most databases do not properly support this construct
WITHOUT_CLASSIFICATION	mckoi has no known variation of a "select for update" syntax
WITHOUT_CLASSIFICATION	oracle8 and previous define only a "date" type which is used to represent all aspects of date/time
WITHOUT_CLASSIFICATION	starts with 1 implicitly
WITHOUT_CLASSIFICATION	" cascade"
WITHOUT_CLASSIFICATION	trim off the length/precision/scale
WITHOUT_CLASSIFICATION	public boolean droptemporarytableafteruse() {we have to because postgres sets current txto rollback only after a failed create tablereturn true}
WITHOUT_CLASSIFICATION	check violation
WITHOUT_CLASSIFICATION	unique violation
WITHOUT_CLASSIFICATION	foreign key violation
WITHOUT_CLASSIFICATION	overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	not null violation
WITHOUT_CLASSIFICATION	all other
WITHOUT_CLASSIFICATION	register the type of the out param - postgresql uses types.other
WITHOUT_CLASSIFICATION	seems to not really public boolean supportsrowvalueconstructorsyntax() { return true }
WITHOUT_CLASSIFICATION	seems to have spotty lob suppport
WITHOUT_CLASSIFICATION	hhh-2300
WITHOUT_CLASSIFICATION	ignore (probably h2 not in the classpath)
WITHOUT_CLASSIFICATION	numeric functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	string functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	time and date functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	system functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	not null is implicit
WITHOUT_CLASSIFICATION	23000 check constraint violation {0} 23001 unique index or primary key violation {0}
WITHOUT_CLASSIFICATION	display the dialect version.
WITHOUT_CLASSIFICATION	the rdms concat() function only supports 2 parameters
WITHOUT_CLASSIFICATION	dialect method overrides ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	original dialect.java returns " for update"
WITHOUT_CLASSIFICATION	verify the state of this new method in hibernate 3.0 dialect.java
WITHOUT_CLASSIFICATION	origial dialect.java returns true
WITHOUT_CLASSIFICATION	the keyword used to specify a nullable column.
WITHOUT_CLASSIFICATION	sequence methods - start. the rdms dialect needs these
WITHOUT_CLASSIFICATION	methods to make it possible to use the native id generator
WITHOUT_CLASSIFICATION	the where clause was added to eliminate this statement from brute force searches.
WITHOUT_CLASSIFICATION	sequence methods - end
WITHOUT_CLASSIFICATION	overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	starts with 1 implicitly
WITHOUT_CLASSIFICATION	we must return a valid rdms/rsa command from this method to prevent rdms/rsa from issuing error 400
WITHOUT_CLASSIFICATION	used with drop table to delete all records in the table.
WITHOUT_CLASSIFICATION	rdms supports the union all clause.
WITHOUT_CLASSIFICATION	rdms has no known variation of a "select for update" syntax
WITHOUT_CLASSIFICATION	multi-param dialect functions
WITHOUT_CLASSIFICATION	function templates
WITHOUT_CLASSIFICATION	not null is implicit
WITHOUT_CLASSIFICATION	this assumes schema support which is present in 1.8.0 and later
WITHOUT_CLASSIFICATION	hsqldb only supports read_uncommitted transaction isolation
WITHOUT_CLASSIFICATION	multi-param string dialect functions
WITHOUT_CLASSIFICATION	multi-param numeric dialect functions
WITHOUT_CLASSIFICATION	multi-param date dialect functions
WITHOUT_CLASSIFICATION	simple nullability constraint
WITHOUT_CLASSIFICATION	overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	not final-static to avoid possible classcast exceptions if using different oracle drivers.
WITHOUT_CLASSIFICATION	register the type of the out param - an oracle specific type
WITHOUT_CLASSIFICATION	timesten has no blob/clob support but these types may be suitable for some applications. the length is limited to 4 million bytes.
WITHOUT_CLASSIFICATION	new methods in dialect3
WITHOUT_CLASSIFICATION	public boolean supportsforupdatenowait() {return false}
WITHOUT_CLASSIFICATION	timesten has no known variation of a "select for update" syntax
WITHOUT_CLASSIFICATION	iterate entries ordered by capacity to find first fit
WITHOUT_CLASSIFICATION	add new ordered map
WITHOUT_CLASSIFICATION	registercolumntype( types.varchar 16777215 "mediumtext" )
WITHOUT_CLASSIFICATION	overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	this assumes you will want to ignore any update counts
WITHOUT_CLASSIFICATION	sql server just returns automatically
WITHOUT_CLASSIFICATION	return "select current_timestamp from rdb$database"
WITHOUT_CLASSIFICATION	registercolumntype data types
WITHOUT_CLASSIFICATION	hibernate seems to ignore this type
WITHOUT_CLASSIFICATION	ibid for current_time and current_date
WITHOUT_CLASSIFICATION	tell hibernate to use getbytes instead of getbinarystream
WITHOUT_CLASSIFICATION	no batch statements
WITHOUT_CLASSIFICATION	we might want a special case for 192. this is very common for money types and here it is converted to 181
WITHOUT_CLASSIFICATION	no pointbase bit
WITHOUT_CLASSIFICATION	no pointbase tinyint
WITHOUT_CLASSIFICATION	pointbase has no known variation of a "select for update" syntax
WITHOUT_CLASSIFICATION	starts with 1 implicitly
WITHOUT_CLASSIFICATION	the current_timestamp is more accurate but only known to be supported in sql server 7.0 and later (i.e. sybase not known to support it at all)
WITHOUT_CLASSIFICATION	sql server (at least up through 2005) does not support defining cascade delete constraints which can circel back to the mutating table
WITHOUT_CLASSIFICATION	here assume sqlserver2005 using snapshot isolation which does not have this problem
WITHOUT_CLASSIFICATION	registercolumntype( types.blob 16777215 "mediumblob" ) registercolumntype( types.blob 65535 "blob" )
WITHOUT_CLASSIFICATION	registercolumntype( types.clob 16777215 "mediumtext" ) registercolumntype( types.clob 65535 "text" )
WITHOUT_CLASSIFICATION	registercolumntype( types.varchar 16777215 "mediumtext" ) registercolumntype( types.varchar 65535 "text" )
WITHOUT_CLASSIFICATION	starts with 1 implicitly
WITHOUT_CLASSIFICATION	package-private
WITHOUT_CLASSIFICATION	sql server just returns automatically
WITHOUT_CLASSIFICATION	sybase bit type does not support null values
WITHOUT_CLASSIFICATION	this assumes you will want to ignore any update counts
WITHOUT_CLASSIFICATION	overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	you may still have other resultsets or update counts left to process here but you can't do it now or the resultset you just got will be closed
WITHOUT_CLASSIFICATION	not null (start with 1) is implicit
WITHOUT_CLASSIFICATION	overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	oracle driver reports to support getgeneratedkeys() but they only support the version taking an array of the names of the columns to be returned (via its returning clause). no other driver seems to support this overloaded version.
WITHOUT_CLASSIFICATION	multi-param string dialect functions
WITHOUT_CLASSIFICATION	multi-param numeric dialect functions
WITHOUT_CLASSIFICATION	multi-param date dialect functions
WITHOUT_CLASSIFICATION	add another (inner) nested select add the main query close off the inner nested select
WITHOUT_CLASSIFICATION	add the main query
WITHOUT_CLASSIFICATION	add the restriction to the outer select
WITHOUT_CLASSIFICATION	this assumes you will want to ignore any update counts
WITHOUT_CLASSIFICATION	you may still have other resultsets or update counts left to process here but you can't do it now or the resultset you just got will be closed
WITHOUT_CLASSIFICATION	overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	starts with 1 implicitly
WITHOUT_CLASSIFICATION	simple nullability constraint
WITHOUT_CLASSIFICATION	not final-static to avoid possible classcast exceptions if using different oracle drivers.
WITHOUT_CLASSIFICATION	register the type of the out param - an oracle specific type
WITHOUT_CLASSIFICATION	features which change between 8i 9i and 10g ~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	features which remain constant across 8i 9i and 10g ~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	binary %stream character %stream
WITHOUT_CLASSIFICATION	getdefaultproperties().setproperty(environment.statement_batch_size no_batch)
WITHOUT_CLASSIFICATION	hibernate impelemnts cast in dialect.java
WITHOUT_CLASSIFICATION	aggregate functions shouldn't be registered right? registerfunction( "list" new standardsqlfunction("list"hibernate.string) ) stopped on $list
WITHOUT_CLASSIFICATION	ddl support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	below is for cache' that don't have str in 2007.1 there is str and we register str directly
WITHOUT_CLASSIFICATION	note that %string is deprecated
WITHOUT_CLASSIFICATION	%upper is deprecated
WITHOUT_CLASSIFICATION	the syntax used to add a foreign key constraint to a table.
WITHOUT_CLASSIFICATION	identifier-commalist
WITHOUT_CLASSIFICATION	identity support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	sequence support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	identifier-commalist
WITHOUT_CLASSIFICATION	the syntax used to add a column to a table
WITHOUT_CLASSIFICATION	completely optional cascading drop clause.
WITHOUT_CLASSIFICATION	lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	limit support (ala top) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	intersystems cache' does not current support "select for update" syntax set your transaction mode to read_committed before using
WITHOUT_CLASSIFICATION	overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	<string>
WITHOUT_CLASSIFICATION	callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	the keyword used to specify a nullable column.
WITHOUT_CLASSIFICATION	does the limit clause come at the start of the select statement rather than at the end?
WITHOUT_CLASSIFICATION	does the limit clause take a "maximum" row number instead of a total number of returned rows?
WITHOUT_CLASSIFICATION	the name of the sql function that transforms a string to lowercase
WITHOUT_CLASSIFICATION	create an outerjoingenerator for this dialect.
WITHOUT_CLASSIFICATION	the keyword used to insert a row without specifying any column values
WITHOUT_CLASSIFICATION	registerfunction( "trim" new standardsqlfunction( "trim" hibernate.string ) )
WITHOUT_CLASSIFICATION	skip the from keyword in params
WITHOUT_CLASSIFICATION	package
WITHOUT_CLASSIFICATION	potentialtrimcharacterargindex = 1 assumes that a trim-specification has been specified. we handle the exception to that explicitly
WITHOUT_CLASSIFICATION	sqlfunction implementation
WITHOUT_CLASSIFICATION	conceivable that the dialect ctor could throw hibernateexceptions so don't re-wrap
WITHOUT_CLASSIFICATION	register the standard dialect resolver
WITHOUT_CLASSIFICATION	register resolvers set via environment property
WITHOUT_CLASSIFICATION	kept for backward compatibility until after the 3.1beta5 release of ha
WITHOUT_CLASSIFICATION	cache the hashcode
WITHOUT_CLASSIFICATION	the cascadingaction contract ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	the cascadingaction implementations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	delete does cascade to uninitialized collections
WITHOUT_CLASSIFICATION	orphans should be deleted during delete
WITHOUT_CLASSIFICATION	(lockmode) anything
WITHOUT_CLASSIFICATION	lock doesn't cascade to uninitialized collections
WITHOUT_CLASSIFICATION	refresh doesn't cascade to uninitialized collections
WITHOUT_CLASSIFICATION	evicts don't cascade to uninitialized collections
WITHOUT_CLASSIFICATION	saves / updates don't cascade to uninitialized collections
WITHOUT_CLASSIFICATION	orphans should be deleted during save/update
WITHOUT_CLASSIFICATION	for deprecated saveorupdatecopy()
WITHOUT_CLASSIFICATION	persists don't cascade to uninitialized collections
WITHOUT_CLASSIFICATION	a proxy cannot be transient and it breaks foreignkeys.istransient
WITHOUT_CLASSIFICATION	replicate does cascade to uninitialized collections
WITHOUT_CLASSIFICATION	static helper methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	handles arrays and newly instantiated collections
WITHOUT_CLASSIFICATION	actually the semantics of the next three are really "bag" note that unlike objects collection insertions updates deletions are not really remembered between flushes. we just re-use the same lists for convenience.
WITHOUT_CLASSIFICATION	add these directly to the executions queue
WITHOUT_CLASSIFICATION	continue loop
WITHOUT_CLASSIFICATION	sort the updates by fk
WITHOUT_CLASSIFICATION	sort the updates by pk
WITHOUT_CLASSIFICATION	the mapping of entity names to their latest batch numbers.
WITHOUT_CLASSIFICATION	the map of batch numbers to entityinsertaction lists
WITHOUT_CLASSIFICATION	optimize the hash size to eliminate a rehash.
WITHOUT_CLASSIFICATION	the list of entity names that indicate the batch number
WITHOUT_CLASSIFICATION	remove the current element from insertions. it will be added back later.
WITHOUT_CLASSIFICATION	the entity associated with the current action.
WITHOUT_CLASSIFICATION	there is already an existing batch for this type of entity. check to see if the latest batch is acceptable.
WITHOUT_CLASSIFICATION	now rebuild the insertions list. there is a batch for each entry in the name list.
WITHOUT_CLASSIFICATION	the current batch number is the latest batch for this entity type.
WITHOUT_CLASSIFICATION	loop through all the associations of the current entity and make sure that they are processed before the current batch number
WITHOUT_CLASSIFICATION	find the batch number associated with the current association if any.
WITHOUT_CLASSIFICATION	create a new batch for this type. the batch number is the number of current batches.
WITHOUT_CLASSIFICATION	loop through all the associated entities and make sure they have been processed before the latest batch associated with this entity type.
WITHOUT_CLASSIFICATION	since this entity will now be processed in the latest possible batch we can be assured that it will come after all other associations there's not need to continue checking.
WITHOUT_CLASSIFICATION	cascade to current collection elements
WITHOUT_CLASSIFICATION	not really necessary but good for consistency
WITHOUT_CLASSIFICATION	we can't cascade to non-embedded elements
WITHOUT_CLASSIFICATION	a newly instantiated collection can't have orphans
WITHOUT_CLASSIFICATION	handle orphaned entities!!
WITHOUT_CLASSIFICATION	loaded entity instances by entityuniquekey
WITHOUT_CLASSIFICATION	identity map of entityentry instances by the entity instance
WITHOUT_CLASSIFICATION	entity proxies by entitykey
WITHOUT_CLASSIFICATION	snapshots of current database state for entities that have not been loaded
WITHOUT_CLASSIFICATION	identity map of array holder arrayholder instances by the array instance
WITHOUT_CLASSIFICATION	collection wrappers by the collectionkey key=collectionkey value=persistentcollection
WITHOUT_CLASSIFICATION	set of entitykeys of deleted objects
WITHOUT_CLASSIFICATION	properties that we have tried to load and not found in the database
WITHOUT_CLASSIFICATION	a list of collection wrappers that were instantiating during result set processing that we will need to initialize at the end of the query
WITHOUT_CLASSIFICATION	a container for collections we load up when the owning entity is not yet loaded for now this is purely transient!
WITHOUT_CLASSIFICATION	downgrade locks
WITHOUT_CLASSIFICATION	any earlier proxy takes precedence
WITHOUT_CLASSIFICATION	unwrap the object
WITHOUT_CLASSIFICATION	initialize + unwrap the object
WITHOUT_CLASSIFICATION	return the proxied object
WITHOUT_CLASSIFICATION	overwrite old proxy
WITHOUT_CLASSIFICATION	early exit
WITHOUT_CLASSIFICATION	or should it actually throw an exception?
WITHOUT_CLASSIFICATION	treat it just like a new collection
WITHOUT_CLASSIFICATION	do this work only at the very highest level of the load don't let this method be called recursively
WITHOUT_CLASSIFICATION	note that each iteration of the loop may add new elements
WITHOUT_CLASSIFICATION	it might be an unwrapped collection reference! try to find a wrapper (slowish)
WITHOUT_CLASSIFICATION	public boolean isnonexistant(entitykey key) {return nonexistantentitykeys.contains(key)}
WITHOUT_CLASSIFICATION	public boolean isnonexistant(entityuniquekey key) {return nonexistententityuniquekeys.contains(key)}
WITHOUT_CLASSIFICATION	iterate all the entities currently associated with the persistence context.
WITHOUT_CLASSIFICATION	does this entity entry pertain to the entity persister in which we are interested (owner)?
WITHOUT_CLASSIFICATION	check if the managed object is the parent
WITHOUT_CLASSIFICATION	otherwise the proxy was pruned during the serialization process
WITHOUT_CLASSIFICATION	adds remove as a sort-of alias for delete
WITHOUT_CLASSIFICATION	bad cast
WITHOUT_CLASSIFICATION	return lhspersister.getsubclasspropertycolumnnames(property)
WITHOUT_CLASSIFICATION	property-refs for associations defined on a component are not supported so no need to slice
WITHOUT_CLASSIFICATION	if there is no property-ref assume the join is to the subclass table (ie. the table of the subclass that the association belongs to)
WITHOUT_CLASSIFICATION	handle a property-ref
WITHOUT_CLASSIFICATION	nativesqlqueryreturn
WITHOUT_CLASSIFICATION	final boolean forcecacherefresh
WITHOUT_CLASSIFICATION	why is all others non final ?
WITHOUT_CLASSIFICATION	this.forcecacherefresh = forcecacherefresh
WITHOUT_CLASSIFICATION	hella important optimization!!!
WITHOUT_CLASSIFICATION	return that.type.equals(type) && equalshelper.equals(that.value value)
WITHOUT_CLASSIFICATION	must occur after resolving identifiers!
WITHOUT_CLASSIFICATION	take a snapshot
WITHOUT_CLASSIFICATION	do a check
WITHOUT_CLASSIFICATION	the owning entity may have been deleted and its identifier unset due to identifier-rollback in which case try to look up its identifier from the persistence context
WITHOUT_CLASSIFICATION	do the work
WITHOUT_CLASSIFICATION	we've been here before
WITHOUT_CLASSIFICATION	it is or was referenced _somewhere_
WITHOUT_CLASSIFICATION	do the work
WITHOUT_CLASSIFICATION	if either its role changed
WITHOUT_CLASSIFICATION	or its key changed
WITHOUT_CLASSIFICATION	we will need to create new entries
WITHOUT_CLASSIFICATION	we will need to remove ye olde entries
WITHOUT_CLASSIFICATION	force initialize!
WITHOUT_CLASSIFICATION	else if it's elements changed
WITHOUT_CLASSIFICATION	attributes maintained between flush cycles
WITHOUT_CLASSIFICATION	session-start/post-flush persistent state
WITHOUT_CLASSIFICATION	allow the collectionsnapshot to be serialized
WITHOUT_CLASSIFICATION	attributes used only during flush cycle
WITHOUT_CLASSIFICATION	"current" means the reference that was found during flush()
WITHOUT_CLASSIFICATION	"loaded" means the reference that is consistent with the current database state
WITHOUT_CLASSIFICATION	during flush we navigate the object graph to collections and decide what to do with them
WITHOUT_CLASSIFICATION	if we instantiate a collection during the flush() process we must ignore it for the rest of the flush()
WITHOUT_CLASSIFICATION	new collections that get found + wrapped during flush shouldn't be ignored
WITHOUT_CLASSIFICATION	a newly wrapped collection is not dirty (or we get unnecessary version updates)
WITHOUT_CLASSIFICATION	collection.cleardirty()
WITHOUT_CLASSIFICATION	collection.cleardirty()
WITHOUT_CLASSIFICATION	detached collections that get found + reattached during flush shouldn't be ignored
WITHOUT_CLASSIFICATION	optimization
WITHOUT_CLASSIFICATION	optimization optimization
WITHOUT_CLASSIFICATION	re-snapshot
WITHOUT_CLASSIFICATION	for convenience to save some lookups
WITHOUT_CLASSIFICATION	note this is not updated when properties are fetched lazily!
WITHOUT_CLASSIFICATION	memory optimization
WITHOUT_CLASSIFICATION	use the id value of a newly instantiated instance as the unsaved-value
WITHOUT_CLASSIFICATION	copied from session
WITHOUT_CLASSIFICATION	this should not happen since the dtd prevents it
WITHOUT_CLASSIFICATION	joinprocessor needs to know if the where clause fragment came from a dynamic filter or not so it can put the where clause fragment in the right place in the sql ast. 'hasfiltercondition' keeps track of that fact.
WITHOUT_CLASSIFICATION	the current join represents the join between a many-to-many association table and its "target" table. here we need to apply any additional filters defined specifically on the many-to-many
WITHOUT_CLASSIFICATION	check basic level one nullablilty
WITHOUT_CLASSIFICATION	values is not null and is checkable we'll look deeper
WITHOUT_CLASSIFICATION	for non null args check for components and elements containing components
WITHOUT_CLASSIFICATION	cache the hashcode
WITHOUT_CLASSIFICATION	persistent collections may have components
WITHOUT_CLASSIFICATION	check for all components values in the collection
WITHOUT_CLASSIFICATION	will check current level if some of them are not null or sublevels if they exist
WITHOUT_CLASSIFICATION	do the test
WITHOUT_CLASSIFICATION	if its an uninitialized proxy it can't be transient
WITHOUT_CLASSIFICATION	unwrap it
WITHOUT_CLASSIFICATION	see if the entity is already bound to this session if not look at the entity identifier and assume that the entity is persistent if the id is not "unsaved" (that is we rely on foreign keys to keep database integrity)
WITHOUT_CLASSIFICATION	an unfetched association can only point to an entity that already exists in the db
WITHOUT_CLASSIFICATION	let the interceptor inspect the instance to decide
WITHOUT_CLASSIFICATION	let the persister inspect the instance to decide
WITHOUT_CLASSIFICATION	we use the assumed value if there is one to avoid hitting the database
WITHOUT_CLASSIFICATION	hit the database after checking the session cache for a snapshot
WITHOUT_CLASSIFICATION	context-entity-identifier returns null explicitly if the entity is not associated with the persistence context so make some deeper checks
WITHOUT_CLASSIFICATION	int count = 0
WITHOUT_CLASSIFICATION	the first key found after the given key
WITHOUT_CLASSIFICATION	checkforend = false
WITHOUT_CLASSIFICATION	count++
WITHOUT_CLASSIFICATION	end of array start filling again from start
WITHOUT_CLASSIFICATION	we ran out of keys to try
WITHOUT_CLASSIFICATION	first element of array is reserved for the actual instance we are loading!
WITHOUT_CLASSIFICATION	the first id found after the given id
WITHOUT_CLASSIFICATION	we ran out of ids to try
WITHOUT_CLASSIFICATION	look for existing collection as part of the persistence context
WITHOUT_CLASSIFICATION	ignore this row of results! note the early exit
WITHOUT_CLASSIFICATION	initialize this collection
WITHOUT_CLASSIFICATION	create one
WITHOUT_CLASSIFICATION	warning can cause a recursive calls! (proxy initialization)
WITHOUT_CLASSIFICATION	there were no queued additions and the role has a cache
WITHOUT_CLASSIFICATION	and this is not a forced initialization during flush
WITHOUT_CLASSIFICATION	some filters affecting the collection are enabled on the session so do not do the put into the cache.
WITHOUT_CLASSIFICATION	cleanup code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	loading collection xrefs ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	collection load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	simple cache of param metadata based on query string. ideally the original "user-supplied query" string should be used to retreive this metadata (i.e. not the para-list-expanded query string) to avoid unnecessary cache entries. used solely for caching param metadata for native-sql queries see getsqlparametermetadata() for a discussion as to why
WITHOUT_CLASSIFICATION	the cache of the actual plans
WITHOUT_CLASSIFICATION	package
WITHOUT_CLASSIFICATION	package
WITHOUT_CLASSIFICATION	assumes that types are all of span 1
WITHOUT_CLASSIFICATION	for native-sql queries the param metadata is determined outside any relation to a query plan because query plan creation and/or retreival for a native-sql query depends on all of the return types having been set which might not be the case up-front when param metadata would be most useful
WITHOUT_CLASSIFICATION	don't care
WITHOUT_CLASSIFICATION	recognition code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	don't care
WITHOUT_CLASSIFICATION	note firstrow is zero-based
WITHOUT_CLASSIFICATION	break the outer loop !!!
WITHOUT_CLASSIFICATION	named parameter
WITHOUT_CLASSIFICATION	could be either an ordinal or jpa-positional parameter
WITHOUT_CLASSIFICATION	a peek ahead showed this as an jpa-positional parameter
WITHOUT_CLASSIFICATION	make sure this "name" is an integral
WITHOUT_CLASSIFICATION	pre-determine and cache the hashcode
WITHOUT_CLASSIFICATION	perform the actual work
WITHOUT_CLASSIFICATION	if everything went ok commit the transaction and close the obtained connection handle
WITHOUT_CLASSIFICATION	at some point the processing went bad so we need to 1) make sure the connection handle gets released 2) try to cleanup the jta context as much as possible
WITHOUT_CLASSIFICATION	finally handle the exception
WITHOUT_CLASSIFICATION	a "detached" collection that belonged to a different entity
WITHOUT_CLASSIFICATION	saveorupdatecopy() is deprecated!
WITHOUT_CLASSIFICATION	collectionpersister should not be null but we don't want to throw an exception if it is null
WITHOUT_CLASSIFICATION	otherwise a null or brand new collection this will also (inefficiently) handle arrays which have no snapshot so we can't do any better processarrayornewcollection(collection type)
WITHOUT_CLASSIFICATION	a "detached" collection that originally belonged to the same entity
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	force a substitution!
WITHOUT_CLASSIFICATION	the user requested a "greater" (i.e. more restrictive) form of pessimistic lock
WITHOUT_CLASSIFICATION	the database now holds a lock + the object is flushed from the cache so release the soft lock
WITHOUT_CLASSIFICATION	now update the object .. has to be outside the main if block above (because of collections)
WITHOUT_CLASSIFICATION	search for collections by reachability updating their role. we don't want to touch collections reachable from a deleted object
WITHOUT_CLASSIFICATION	this is a situation where the entity id is assigned by a post-insert generator and was saved outside the transaction forcing it to be delayed
WITHOUT_CLASSIFICATION	note we need to do the wrap here even if its not "dirty" because collections need wrapping but changes to _them_ don't dirty the container. also for versioned data we need to wrap before calling searchfordirtycollections
WITHOUT_CLASSIFICATION	grab its state saved at deletion
WITHOUT_CLASSIFICATION	grab its current state
WITHOUT_CLASSIFICATION	schedule the update note that we intentionally do _not_ pass in currentpersistentstate!
WITHOUT_CLASSIFICATION	substitutes into values by side-effect
WITHOUT_CLASSIFICATION	give the interceptor a chance to process property values if the properties were modified by the interceptor we need to set them back to the object
WITHOUT_CLASSIFICATION	compare to cached state (ignoring collections unless versioned)
WITHOUT_CLASSIFICATION	if it was dirtied by a collection only
WITHOUT_CLASSIFICATION	increment the version number (if necessary)
WITHOUT_CLASSIFICATION	check nullability but do not perform command execute we'll use scheduled updates for that.
WITHOUT_CLASSIFICATION	give the interceptor a chance to modify property values
WITHOUT_CLASSIFICATION	now we might need to recalculate the dirtyproperties array
WITHOUT_CLASSIFICATION	use the current version
WITHOUT_CLASSIFICATION	interceptor returned null so do the dirtycheck ourself if possible
WITHOUT_CLASSIFICATION	object loaded by update()
WITHOUT_CLASSIFICATION	dirty check against the usual snapshot of the entity
WITHOUT_CLASSIFICATION	dirty check against the database snapshot if possible/necessary
WITHOUT_CLASSIFICATION	the interceptor handled the dirty checking
WITHOUT_CLASSIFICATION	even process null collections
WITHOUT_CLASSIFICATION	get the id from the object
WITHOUT_CLASSIFICATION	always do an insert and let it fail by constraint violation
WITHOUT_CLASSIFICATION	what is the version on the database?
WITHOUT_CLASSIFICATION	/ hhh-2378
WITHOUT_CLASSIFICATION	will result in a sql update
WITHOUT_CLASSIFICATION	else do nothing (don't even reassociate object!)
WITHOUT_CLASSIFICATION	no existing row - do an insert
WITHOUT_CLASSIFICATION	refresh() does not pass an entityname
WITHOUT_CLASSIFICATION	do not return a proxy! (this option indicates we are initializing a proxy)
WITHOUT_CLASSIFICATION	return a proxy if appropriate
WITHOUT_CLASSIFICATION	return existing object or initialized proxy (unless deleted)
WITHOUT_CLASSIFICATION	return new uninitialized proxy
WITHOUT_CLASSIFICATION	this object was already loaded
WITHOUT_CLASSIFICATION	entity was found in second-level cache
WITHOUT_CLASSIFICATION	make it circular-reference safe
WITHOUT_CLASSIFICATION	intializes result by side-effect
WITHOUT_CLASSIFICATION	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ pre-flushing section ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	some statistics
WITHOUT_CLASSIFICATION	safe from concurrent modification because of how entrylist() is implemented on identitymap
WITHOUT_CLASSIFICATION	initialize dirty flags for arrays + collections with composite elements and reset reached doupdate etc.
WITHOUT_CLASSIFICATION	among other things updatereachables() will recursively load all collections that are moving roles. this might cause entities to be loaded.
WITHOUT_CLASSIFICATION	so this needs to be safe from concurrent modification problems. it is safe because of how identitymap implements entryset()
WITHOUT_CLASSIFICATION	update the status of the object and if necessary schedule an update
WITHOUT_CLASSIFICATION	schedule updates to collections
WITHOUT_CLASSIFICATION	we need to lock the collection caches before executing entity inserts/updates in order to account for bidi associations
WITHOUT_CLASSIFICATION	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ post-flushing section ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	the database has changed now so the subselect results need to be invalidated
WITHOUT_CLASSIFICATION	if the collection is dereferenced remove from the session cache iter.remove() does not work since the entryset is not backed by the set
WITHOUT_CLASSIFICATION	otherwise recreate the mapping between the collection and its key
WITHOUT_CLASSIFICATION	get a snapshot
WITHOUT_CLASSIFICATION	package-private
WITHOUT_CLASSIFICATION	package-private
WITHOUT_CLASSIFICATION	key is an entity involved with the operation performed by the listener value is a flag indicating if the listener explicitly operates on the entity
WITHOUT_CLASSIFICATION	early exit!!!
WITHOUT_CLASSIFICATION	ie. the entity came in from update()
WITHOUT_CLASSIFICATION	before any callbacks etc so subdeletions see that this deletion happened first
WITHOUT_CLASSIFICATION	ensures that containing deletions happen before sub-deletions
WITHOUT_CLASSIFICATION	typefactory.deepcopy( currentstate proptypes persister.getpropertyupdateability() deletedstate session )
WITHOUT_CLASSIFICATION	cascade-delete to collections before the collection owner is deleted
WITHOUT_CLASSIFICATION	cascade-delete to many-to-one after the parent was deleted
WITHOUT_CLASSIFICATION	if it is an initialized proxy let cascade handle it later on
WITHOUT_CLASSIFICATION	assign the requested id to the proxy before reassociating the proxy
WITHOUT_CLASSIFICATION	an uninitialized proxy noop don't even need to return an id since it is never a save()
WITHOUT_CLASSIFICATION	initialize properties of the event
WITHOUT_CLASSIFICATION	return the id in the event object
WITHOUT_CLASSIFICATION	transient or deleted
WITHOUT_CLASSIFICATION	use the id assigned to the instance
WITHOUT_CLASSIFICATION	assume this is a newly instantiated transient object which should be saved rather than updated
WITHOUT_CLASSIFICATION	this is a transient object with existing persistent state not loaded by the session
WITHOUT_CLASSIFICATION	a collection loaded in the current session can not possibly be the collection belonging to the entity passed to update()
WITHOUT_CLASSIFICATION	cachedstate
WITHOUT_CLASSIFICATION	assume true since we don't really know and it doesn't matter
WITHOUT_CLASSIFICATION	a "detached" collection!
WITHOUT_CLASSIFICATION	if the collection belonged to a different entity clean up the existing state of the collection
WITHOUT_CLASSIFICATION	log.debug( "calling onload()" )
WITHOUT_CLASSIFICATION	early exit!
WITHOUT_CLASSIFICATION	note performexecutions() clears all collectionxxxxtion collections (the collection actions) in the session
WITHOUT_CLASSIFICATION	if no array holder we found an unwrappered array (this can't occur because we now always call wrap() before getting to here) return (ah==null) ? true searchfordirtycollections(ah type)
WITHOUT_CLASSIFICATION	if not wrappered yet its dirty (this can't occur because we now always call wrap() before getting to here) return ( ! (obj instanceof persistentcollection) ) ? true searchfordirtycollections( (persistentcollection) obj type )
WITHOUT_CLASSIFICATION	we need to check even if it was not initialized because of delayed adds!
WITHOUT_CLASSIFICATION	note early exit!
WITHOUT_CLASSIFICATION	find any entities that are still transient after retry
WITHOUT_CLASSIFICATION	early exit!
WITHOUT_CLASSIFICATION	check the persistence context for an entry relating to this entity to be merged
WITHOUT_CLASSIFICATION	we have specialized case of a detached entity from the perspective of the merge operation. specifically we have an incoming entity instance which has a corresponding entry in the current persistence context but registered under a different entity instance
WITHOUT_CLASSIFICATION	deleted
WITHOUT_CLASSIFICATION	before cascade!
WITHOUT_CLASSIFICATION	cascade first so that all unsaved objects get their copy created before we actually copy cascadeonmerge(event persister entity copycache cascades.cascade_before_merge)
WITHOUT_CLASSIFICATION	this bit is only really absolutely necessary for handling requestedid but is also good if we merge multiple object graphs since it helps ensure uniqueness
WITHOUT_CLASSIFICATION	continue we'll find out if it ends up not getting saved later
WITHOUT_CLASSIFICATION	cascade first so that all unsaved objects get their copy created before we actually copy
WITHOUT_CLASSIFICATION	check that entity id = requestedid
WITHOUT_CLASSIFICATION	before cascade!
WITHOUT_CLASSIFICATION	we got here because we assumed that an instance with an assigned id was detached when it was really persistent
WITHOUT_CLASSIFICATION	cascade first so that all unsaved objects get their copy created before we actually copy
WITHOUT_CLASSIFICATION	copyvalues works by reflection so explicitly mark the entity instance dirty
WITHOUT_CLASSIFICATION	early exit
WITHOUT_CLASSIFICATION	source.getbatcher().executebatch() found another way to ensure that all batched joined inserts have been executed
WITHOUT_CLASSIFICATION	substitutes into values by side-effect
WITHOUT_CLASSIFICATION	now done in entityidentityinsertaction persister.setidentifier( entity id source.getentitymode() )
WITHOUT_CLASSIFICATION	source.getpersistencecontext().removenonexist( new entitykey( id persister source.getentitymode() ) )
WITHOUT_CLASSIFICATION	keep the existing version number in the case of replicate!
WITHOUT_CLASSIFICATION	cascade-save to many-to-one before the parent is saved
WITHOUT_CLASSIFICATION	pass this as an argument only to avoid double looking
WITHOUT_CLASSIFICATION	the object is persistent
WITHOUT_CLASSIFICATION	the entity is associated with the session so check its status
WITHOUT_CLASSIFICATION	do nothing for persistent instances
WITHOUT_CLASSIFICATION	ie. e.status==deleted
WITHOUT_CLASSIFICATION	the object is transient or detached
WITHOUT_CLASSIFICATION	note early exit!
WITHOUT_CLASSIFICATION	private constructor - stops checkstyle from complaining.
WITHOUT_CLASSIFICATION	first try to find a matching constructor accepting a violatedconstraintnameextracter param
WITHOUT_CLASSIFICATION	eat it and try next
WITHOUT_CLASSIFICATION	otherwise try to use the no-arg constructor
WITHOUT_CLASSIFICATION	oracle sql-state code for deadlock
WITHOUT_CLASSIFICATION	collectionpropertymapping processes everything except 'index'.
WITHOUT_CLASSIFICATION	remove initial " "
WITHOUT_CLASSIFICATION	remove initial " and "
WITHOUT_CLASSIFICATION	beforeclasstokens.add("new") definitely don't have this!!
WITHOUT_CLASSIFICATION	notafterclasstokens.add("")
WITHOUT_CLASSIFICATION	just especially for the trivial collection filter
WITHOUT_CLASSIFICATION	update last non-whitespace token if necessary
WITHOUT_CLASSIFICATION	select-range is terminated by declaration of "from"
WITHOUT_CLASSIFICATION	scan for next non-whitespace token
WITHOUT_CLASSIFICATION	note this!!
WITHOUT_CLASSIFICATION	error message constants.
WITHOUT_CLASSIFICATION	handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	semantic action handling ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	handle collection-fiter compilation. important note this is modifying the input (hql) tree not the output tree!
WITHOUT_CLASSIFICATION	show the modified ast.
WITHOUT_CLASSIFICATION	create a parameter specification for the collection filter
WITHOUT_CLASSIFICATION	use the delegate.
WITHOUT_CLASSIFICATION	use the delegate.
WITHOUT_CLASSIFICATION	get the names of the columns used to link between the collection owner and the collection elements.
WITHOUT_CLASSIFICATION	the path ast should be a dotnode and it should have been evaluated already.
WITHOUT_CLASSIFICATION	tell the dot node about the join type.
WITHOUT_CLASSIFICATION	re-arrange the tree so that the collection function is the root and the lhs is the path.
WITHOUT_CLASSIFICATION	don't forget to resolve the argument! resolve the collection function now.
WITHOUT_CLASSIFICATION	resolve everything up to this dot but don't resolve the placeholders yet.
WITHOUT_CLASSIFICATION	should mean that no such property was found
WITHOUT_CLASSIFICATION	was there an explicit select expression?
WITHOUT_CLASSIFICATION	attach any mapping-defined "order by" fragments
WITHOUT_CLASSIFICATION	use the explicitly declared select expression determine the return types indicated by each select token
WITHOUT_CLASSIFICATION	after that process the joins. invoke a delegate to do the work as this is farily complex.
WITHOUT_CLASSIFICATION	make #@%$^#^&# sure no alias is applied to the table name
WITHOUT_CLASSIFICATION	we need to generate ids as part of this bulk insert. note that this is only supported for sequence-style generators and post-insert-style generators basically only in-db generators
WITHOUT_CLASSIFICATION	use the delegate.
WITHOUT_CLASSIFICATION	we need to seed the version value as part of this bulk insert
WITHOUT_CLASSIFICATION	we need to wrtap the param in a cast()
WITHOUT_CLASSIFICATION	this is called when it's time to fully resolve a path expression.
WITHOUT_CLASSIFICATION	generate implicit joins only if necessary.
WITHOUT_CLASSIFICATION	notify the from element that it is being referenced by the select.
WITHOUT_CLASSIFICATION	turn off includesubclasses on all fromelements.
WITHOUT_CLASSIFICATION	create the node initially with the param name so that it shows appropriately in the "original text" attribute
WITHOUT_CLASSIFICATION	use the delegate resolve identifiers as from element aliases.
WITHOUT_CLASSIFICATION	select clauses for insert statements should alwasy be treated as shallow
WITHOUT_CLASSIFICATION	no need to even collect this information if the persister is considered multi-table
WITHOUT_CLASSIFICATION	make sure that the persister is versioned
WITHOUT_CLASSIFICATION	handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	use the delegate.
WITHOUT_CLASSIFICATION	--commented out by inspection (12/11/04 1056 am) int getwarningcount()
WITHOUT_CLASSIFICATION	alias references and identifiers use the same node class.
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	make a new one
WITHOUT_CLASSIFICATION	just do the regular thing if you can't find the ctor your ast must have default ctor to use this.
WITHOUT_CLASSIFICATION	initialize sql nodes here.
WITHOUT_CLASSIFICATION	semantic action processing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	if template is null we just write the function out as it appears in the hql statement
WITHOUT_CLASSIFICATION	this function has a template -> redirect output and catch the arguments
WITHOUT_CLASSIFICATION	--- inner classes (moved here from sql-gen.g) ---
WITHOUT_CLASSIFICATION	check two "adjecent" nodes at the top of the from-clause tree
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	these are just two unrelated table references
WITHOUT_CLASSIFICATION	again both should be fromelements
WITHOUT_CLASSIFICATION	note firstrow is zero-based
WITHOUT_CLASSIFICATION	right represents a joins originating from left or both right and left reprersent joins originating from the same fromelement
WITHOUT_CLASSIFICATION	check a set of parent/child nodes in the from-clause tree to determine if a comma is required between them
WITHOUT_CLASSIFICATION	right represents a joins originating from left
WITHOUT_CLASSIFICATION	all clear
WITHOUT_CLASSIFICATION	ignore the token class name parameter and use a specific token class.
WITHOUT_CLASSIFICATION	overriden to avoid system.exit
WITHOUT_CLASSIFICATION	overriden to avoid system.exit
WITHOUT_CLASSIFICATION	remember that ordinal parameters numbers are 1-based!!!
WITHOUT_CLASSIFICATION	don't care about other param types here just those explicitly user-defined
WITHOUT_CLASSIFICATION	if the query is already compiled skip the compilation.
WITHOUT_CLASSIFICATION	remember the parameters for the compilation.
WITHOUT_CLASSIFICATION	phase 1 parse the hql into an ast.
WITHOUT_CLASSIFICATION	phase 2 analyze the hql ast and produce an sql ast.
WITHOUT_CLASSIFICATION	phase 3 generate the sql.
WITHOUT_CLASSIFICATION	we do not actually propogate antlrexceptions as a cause so log it here for diagnostic purposes
WITHOUT_CLASSIFICATION	we do not actually propogate antlrexceptions as a cause so log it here for diagnostic purposes
WITHOUT_CLASSIFICATION	only needed during compilation phase
WITHOUT_CLASSIFICATION	transform the tree.
WITHOUT_CLASSIFICATION	parse the query string into an hql ast.
WITHOUT_CLASSIFICATION	delegate to the queryloader
WITHOUT_CLASSIFICATION	delegate to the queryloader
WITHOUT_CLASSIFICATION	delegate to the queryloader
WITHOUT_CLASSIFICATION	note ( max - 1 ) because first is zero-based while max is not
WITHOUT_CLASSIFICATION	-- package local methods for the queryloader delegate --
WITHOUT_CLASSIFICATION	if there are no collection fetches then no further checks are needed
WITHOUT_CLASSIFICATION	a shallow query is ok (although technically there should be no fetching here)
WITHOUT_CLASSIFICATION	should be the first but just to be safe
WITHOUT_CLASSIFICATION	use the delegate.
WITHOUT_CLASSIFICATION	use the delegate.
WITHOUT_CLASSIFICATION	impl note allows multiple collection fetches as long as the entire fecthed graph still "points back" to a single root entity for return
WITHOUT_CLASSIFICATION	otherwise we have a non-scalar select with defined collection fetch(es). make sure that there is only a single root entity in the return (no tuples)
WITHOUT_CLASSIFICATION	this is not strictly true. we actually just need to make sure that it is ordered by root-entity pk and that that order-by comes before any non-root-entity ordering
WITHOUT_CLASSIFICATION	paramtranslations = new parametertranslationsimpl( collectedparameterspecifications )
WITHOUT_CLASSIFICATION	we are already processing a dot-structure
WITHOUT_CLASSIFICATION	igndore it
WITHOUT_CLASSIFICATION	we are now at a new tree level
WITHOUT_CLASSIFICATION	[jsd] the fix for hhh-558
WITHOUT_CLASSIFICATION	if the token can tell us if it could be an identifier
WITHOUT_CLASSIFICATION	and the expected token type was an identifier then
WITHOUT_CLASSIFICATION	use the token as an identifier.
WITHOUT_CLASSIFICATION	add the token to the ast.
WITHOUT_CLASSIFICATION	(not (eq a b) ) => (ne a b)
WITHOUT_CLASSIFICATION	(not (ne a b) ) => (eq a b)
WITHOUT_CLASSIFICATION	(not (lt a b) ) => (ge a b)
WITHOUT_CLASSIFICATION	(not (ge a b) ) => (lt a b)
WITHOUT_CLASSIFICATION	(not (le a b) ) => (gt a b)
WITHOUT_CLASSIFICATION	(not (like a b) ) => (not_like a b)
WITHOUT_CLASSIFICATION	(not (not_like a b) ) => (like a b)
WITHOUT_CLASSIFICATION	(not (is_not_null a b) ) => (is_null a b)
WITHOUT_CLASSIFICATION	(not (between a b) ) => (not_between a b)
WITHOUT_CLASSIFICATION	initialize the error handling delegate.
WITHOUT_CLASSIFICATION	overriden to avoid system.exit
WITHOUT_CLASSIFICATION	if if otherwise handle the error normally.
WITHOUT_CLASSIFICATION	(not (not_between a b) ) => (between a b)
WITHOUT_CLASSIFICATION	this can never happen because this rule will always eliminate the child not.case notreturn x.getfirstchild() (not (not x) ) => (x)
WITHOUT_CLASSIFICATION	just add a 'not' parent.
WITHOUT_CLASSIFICATION	(eq null b) => (is_null b)
WITHOUT_CLASSIFICATION	(eq a null) => (is_null a)
WITHOUT_CLASSIFICATION	note because we're using astutil.createparent() the tree must be created from the bottom up. is empty x => (exists (query (select_from (from x) ) ) )
WITHOUT_CLASSIFICATION	add not if it's negated.
WITHOUT_CLASSIFICATION	create nodes that track line and column number.
WITHOUT_CLASSIFICATION	case 1 multi token keywords group by and order by the next token ( lt(2) ) should be 'by' otherwise this is just an ident.
WITHOUT_CLASSIFICATION	case 2 the current token is after from and before '.'.
WITHOUT_CLASSIFICATION	this handles hhh-354 where there is a strange property name in a where clause. if the lookahead contains a dot then something that isn't an ident
WITHOUT_CLASSIFICATION	see if the second lookahed token can be an identifier.
WITHOUT_CLASSIFICATION	set it!
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	strip the " where "
WITHOUT_CLASSIFICATION	don't really know all the codes required to adequately decipher returned jdbc exceptions here. simply allow the failure to be eaten and the subsequent insert-selects/deletes should fail
WITHOUT_CLASSIFICATION	at the very least cleanup the data )
WITHOUT_CLASSIFICATION	first save off the pertinent ids as the return value
WITHOUT_CLASSIFICATION	jdbc params are 1-based
WITHOUT_CLASSIFICATION	jdbc params are 1-based
WITHOUT_CLASSIFICATION	start performing the updates
WITHOUT_CLASSIFICATION	first save off the pertinent ids saving the number of pertinent ids for return
WITHOUT_CLASSIFICATION	start performing the deletes
WITHOUT_CLASSIFICATION	otherwise everything ok.
WITHOUT_CLASSIFICATION	visit width-first then depth
WITHOUT_CLASSIFICATION	if the types report logical equivalence return true
WITHOUT_CLASSIFICATION	otherwise perform a "deep equivalence" check
WITHOUT_CLASSIFICATION	if there is no where node make one.
WITHOUT_CLASSIFICATION	inject the where after the parent
WITHOUT_CLASSIFICATION	never include subclasses for implied from elements.
WITHOUT_CLASSIFICATION	moved here from selectclause [jsd]
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	use the table fromelement and the property name to get the array of column names.
WITHOUT_CLASSIFICATION	set the attributes of the property reference expression.
WITHOUT_CLASSIFICATION	if the uresolved property path isn't set yet just use the property name.
WITHOUT_CLASSIFICATION	the 'from element' that the property is in.
WITHOUT_CLASSIFICATION	prepare the left hand side and get the data type.
WITHOUT_CLASSIFICATION	prepare the left hand side and get the data type.
WITHOUT_CLASSIFICATION	if this dot has already been resolved stop now.
WITHOUT_CLASSIFICATION	if there is no data type for this node and we're at the end of the path (top most dot node) then this might be a java constant.
WITHOUT_CLASSIFICATION	the property is a collection
WITHOUT_CLASSIFICATION	the property is a component
WITHOUT_CLASSIFICATION	the property is another class..
WITHOUT_CLASSIFICATION	otherwise this is a primitive type.
WITHOUT_CLASSIFICATION	foo.bars.size (also handles deprecated stuff like foo.bars.maxelement for backwardness)
WITHOUT_CLASSIFICATION	this 'dot' expression now refers to the resulting from element.
WITHOUT_CLASSIFICATION	always add the collection's query spaces.
WITHOUT_CLASSIFICATION	in non-select queries the only time we should need to join is if we are in a subquery from clause
WITHOUT_CLASSIFICATION	this is the regression style determination which matches the logic of the classic translator
WITHOUT_CLASSIFICATION	this 'dot' expression now refers to the resulting from element.
WITHOUT_CLASSIFICATION	even though we might find a pre-existing element by join path we may not be able to reuse it
WITHOUT_CLASSIFICATION	note addduplicatealias() already performs nullness checks on the alias.
WITHOUT_CLASSIFICATION	if the from-clauses are the same we can be a little more aggressive in terms of what we reuse
WITHOUT_CLASSIFICATION	again null != null here
WITHOUT_CLASSIFICATION	if this is an implied join in a from element then use the impled join type which is part of the tree parser's state (set by the gramamar actions).
WITHOUT_CLASSIFICATION	otherwise (subquery case) dont reuse the fromelement if we are processing the from-clause of the subquery
WITHOUT_CLASSIFICATION	we know only the lhs-hand type so use that
WITHOUT_CLASSIFICATION	the referenced node text is the special 'id'
WITHOUT_CLASSIFICATION	only the identifier property field name can be a reference to the associated entity's pk
WITHOUT_CLASSIFICATION	special shortcut for id properties skip the join! this must only occur at the _end_ of a path expression
WITHOUT_CLASSIFICATION	append the new property name onto the unresolved path.
WITHOUT_CLASSIFICATION	if the lhs is a collection use collectionpropertymapping
WITHOUT_CLASSIFICATION	tell the destination fromelement to 'includesubclasses'.
WITHOUT_CLASSIFICATION	use theta style (for regression) move the node up after the origin node.
WITHOUT_CLASSIFICATION	don't resolve the node again.
WITHOUT_CLASSIFICATION	for expected parameter type injection we expect that the lhs represents some form of property ref and that the children of the in-list represent one-or-more params.
WITHOUT_CLASSIFICATION	we need to strip off the embedded parens so that sql-gen does not double these up
WITHOUT_CLASSIFICATION	we have something like "? [op] rhs"
WITHOUT_CLASSIFICATION	we have something like "lhs [op] ?"
WITHOUT_CLASSIFICATION	we know only the rhs-hand type so use that
WITHOUT_CLASSIFICATION	handle the (assumed) valid cases #1 - the only valid datetime addition synatx is one or the other is a datetime (but not both)
WITHOUT_CLASSIFICATION	one or the other needs to be a datetime for us to get into this method in the first place
WITHOUT_CLASSIFICATION	#3 - note that this is also true of "datetime - param"
WITHOUT_CLASSIFICATION	#2
WITHOUT_CLASSIFICATION	generate the inner join -- the elements need to be joined to the collection they are in.
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	the 'from element' that represents the elements of the collection.
WITHOUT_CLASSIFICATION	add the condition to the join sequence that qualifies the indexed element.
WITHOUT_CLASSIFICATION	sometimes use the element table alias sometimes use the umm collection table alias (many to many)
WITHOUT_CLASSIFICATION	now set the text for this node. it should be the element columns.
WITHOUT_CLASSIFICATION	get the function return value type based on the type of the first argument.
WITHOUT_CLASSIFICATION	this will call initialize(tok)!
WITHOUT_CLASSIFICATION	mutation depends on the types of nodes invloved
WITHOUT_CLASSIFICATION	"pass along" our initial embedded parameter node(s) to the first generated sql fragment so that it can be handled later for parameter binding
WITHOUT_CLASSIFICATION	logic operators by definition resolve to booleans
WITHOUT_CLASSIFICATION	generated select expressions are already resolved nothing to do.
WITHOUT_CLASSIFICATION	the path may be a reference to an alias defined in the parent query.
WITHOUT_CLASSIFICATION	the hql class alias refers to the class name.
WITHOUT_CLASSIFICATION	associate the table alias with the element.
WITHOUT_CLASSIFICATION	try the parent fromclause
WITHOUT_CLASSIFICATION	add the new node to the map so that we don't create it twice.
WITHOUT_CLASSIFICATION	make sure that all from elements registered with this from clause are actually in the ast.
WITHOUT_CLASSIFICATION	invoke setscalarcolumntext on each constructor argument.
WITHOUT_CLASSIFICATION	collect the select expressions skip the first child because it is the class name.
WITHOUT_CLASSIFICATION	return an empty type array
WITHOUT_CLASSIFICATION	constructors are always considered scalar results.
WITHOUT_CLASSIFICATION	this is the exception returned by reflecthelper.getconstructor() if it cannot locate an appropriate constructor
WITHOUT_CLASSIFICATION	if there is no order by make one
WITHOUT_CLASSIFICATION	find the where if there is no where find the from
WITHOUT_CLASSIFICATION	now inject the newly built order by into the tree
WITHOUT_CLASSIFICATION	parametercontainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	logic operators by definition resolve to boolean.
WITHOUT_CLASSIFICATION	render the identifier select fragment using the table alias.
WITHOUT_CLASSIFICATION	class names in the from clause result in a joinsequence (the old fromparser does this).
WITHOUT_CLASSIFICATION	for many-to-many joins use the tablename from the queryable collection for the default text.
WITHOUT_CLASSIFICATION	otherwise use the property mapping.
WITHOUT_CLASSIFICATION	should be safe to only ever expect entitypersister references here
WITHOUT_CLASSIFICATION	if the property is a special collection property name return a collectionpropertymapping.
WITHOUT_CLASSIFICATION	collection of components.
WITHOUT_CLASSIFICATION	make sure the lhs is "assignable"
WITHOUT_CLASSIFICATION	false indicates to not generate parens around the assignment
WITHOUT_CLASSIFICATION	register the fromelement with the from clause now that we have the names and aliases.
WITHOUT_CLASSIFICATION	currently allowed
WITHOUT_CLASSIFICATION	hhh-276 implied joins in a subselect where clause - the destination needs to be added to the destination's from clause. not sure if this is will fix everything but it works.
WITHOUT_CLASSIFICATION	return classalias == null ? classname classalias
WITHOUT_CLASSIFICATION	this is an explicit from element.
WITHOUT_CLASSIFICATION	parametercontainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	fetch can't be used with scroll() or iterate().
WITHOUT_CLASSIFICATION	if it's not implied or it is implied and it's a many to many join where the target wasn't found.
WITHOUT_CLASSIFICATION	since this is an explicit from element it can't be implied in the from clause.
WITHOUT_CLASSIFICATION	do nothing eplicit from elements are always in the projection list.
WITHOUT_CLASSIFICATION	propertyname refers to something like collection.size
WITHOUT_CLASSIFICATION	property name is a sub-path of a component
WITHOUT_CLASSIFICATION	always add the collection's query spaces.
WITHOUT_CLASSIFICATION	nothing to do even if the operand is a parameter no way we could infer an appropriate expected type here
WITHOUT_CLASSIFICATION	logic operators by definition resolve to booleans
WITHOUT_CLASSIFICATION	dotnode uses null here
WITHOUT_CLASSIFICATION	we represent a from-clause alias
WITHOUT_CLASSIFICATION	we are the lhs of the dot representing a naked comp-prop-ref
WITHOUT_CLASSIFICATION	we are the rhs of the dot representing a naked comp-prop-ref
WITHOUT_CLASSIFICATION	we represent a naked (simple) prop-ref
WITHOUT_CLASSIFICATION	early exit!!! return so the resolve call explicitly coming from dotnode can resolve this
WITHOUT_CLASSIFICATION	assume this ident's text does not refer to a property on the given persister
WITHOUT_CLASSIFICATION	just ignore it for now it'll get resolved later
WITHOUT_CLASSIFICATION	this is not actually a constant but a reference to from element.
WITHOUT_CLASSIFICATION	check to see if our "proppath" actually represents a property on the persister
WITHOUT_CLASSIFICATION	these pieces are needed for usage in select clause
WITHOUT_CLASSIFICATION	used to set the type of the parent dot node
WITHOUT_CLASSIFICATION	assume we do not refer to a property on the given persister
WITHOUT_CLASSIFICATION	assume we do not refer to a property on the given persister
WITHOUT_CLASSIFICATION	naked property-refs cannot be used with an aliased from element
WITHOUT_CLASSIFICATION	this piece is needed for usage in select clause
WITHOUT_CLASSIFICATION	do not over-write the column text as that has already been "rendered" during resolve
WITHOUT_CLASSIFICATION	for some reason the antlr.commonast initialization routines force this method to get called twice. the first time with an empty string
WITHOUT_CLASSIFICATION	look up class name using the first identifier in the path.
WITHOUT_CLASSIFICATION	add to the query spaces.
WITHOUT_CLASSIFICATION	if the from element isn't in the same clause create a new from element.
WITHOUT_CLASSIFICATION	this is the root level node. generate an explicit from clause at the root.
WITHOUT_CLASSIFICATION	correlated subqueries create 'special' implied from nodes because correlated subselects can't use an ansi-style join
WITHOUT_CLASSIFICATION	super-duper-classic-parser-regression-testing-mojo-magic
WITHOUT_CLASSIFICATION	a collection of entities
WITHOUT_CLASSIFICATION	a collection of components
WITHOUT_CLASSIFICATION	a collection of scalar elements
WITHOUT_CLASSIFICATION	according to both the ansi-sql and ejb3 specs trim can either take exactly one parameter or a variable number of parameters between 1 and 4. from the sql spec <trim function> = trim <left paren> <trim operands> <right paren> <trim operands> = [ [ <trim specification> ] [ <trim character> ] from ] <trim source> <trim specification> = leading | trailing | both if only <trim specification> is omitted both is assumed if <trim character> is omitted space is assumed
WITHOUT_CLASSIFICATION	don't include sub-classes for implied collection joins or subquery joins.
WITHOUT_CLASSIFICATION	treat explict from elements in sub-queries properly.
WITHOUT_CLASSIFICATION	( implied && dotnode.usethetastyleimplicitjoins ) ) {
WITHOUT_CLASSIFICATION	the "root from-element" in correlated subqueries do need this piece
WITHOUT_CLASSIFICATION	create the from element for the target (the elements of the collection).
WITHOUT_CLASSIFICATION	if the join is implied then don't include sub-classes on the element.
WITHOUT_CLASSIFICATION	overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	the associated entity is implied but it must be included in the from. the collection alias is the role.
WITHOUT_CLASSIFICATION	tag this node as a join. don't include subclasses in the join. this is a clollection join.
WITHOUT_CLASSIFICATION	get the class name of the associated entity.
WITHOUT_CLASSIFICATION	origin path implied columns classalias
WITHOUT_CLASSIFICATION	implied
WITHOUT_CLASSIFICATION	for implied many-to-many just add the end join.
WITHOUT_CLASSIFICATION	overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	the standard sql function name is current_timestamp
WITHOUT_CLASSIFICATION	this causes the factory to instantiate the desired class.
WITHOUT_CLASSIFICATION	private type[] sqlresulttypes
WITHOUT_CLASSIFICATION	frontbase has no known variation of a "select for update" syntax
WITHOUT_CLASSIFICATION	the types represented in the sql result set. @return the types represented in the sql result set.
WITHOUT_CLASSIFICATION	public type[] getsqlresulttypes() {return sqlresulttypes}
WITHOUT_CLASSIFICATION	first collect all of the select expressions. note this must be done before invoking setscalarcolumntext() because setscalarcolumntext() changes the ast!!!
WITHOUT_CLASSIFICATION	first allow the actual type to control the return value. (the actual underlying sqltype could actually be different)
WITHOUT_CLASSIFICATION	sqlresulttypelist.addall( constructorargumenttypelist )
WITHOUT_CLASSIFICATION	if the data type is not an association type it could not have been in the from clause.
WITHOUT_CLASSIFICATION	sqlresulttypelist.add( type )
WITHOUT_CLASSIFICATION	always add the type to the return type list.
WITHOUT_CLASSIFICATION	add the fetched entities
WITHOUT_CLASSIFICATION	get ready to start adding nodes.
WITHOUT_CLASSIFICATION	function support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	if there are any scalars (non-entities) selected render the select column aliases.
WITHOUT_CLASSIFICATION	sqlresulttypelist
WITHOUT_CLASSIFICATION	arraylist sqlresulttypelist
WITHOUT_CLASSIFICATION	sqlresulttypes = ( type[] ) sqlresulttypelist.toarray( new type[sqlresulttypelist.size()] )
WITHOUT_CLASSIFICATION	lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	todo
WITHOUT_CLASSIFICATION	add the type to the list of returned sqlresulttypes.
WITHOUT_CLASSIFICATION	generate an 2d array of column names the first dimension is parallel with the return types array. the second dimension is the list of column names for each type.
WITHOUT_CLASSIFICATION	generate the select expression.
WITHOUT_CLASSIFICATION	union subclass support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	skip 'distinct' and 'all' so we return the first expression node.
WITHOUT_CLASSIFICATION	create sql_token nodes for the columns.
WITHOUT_CLASSIFICATION	generate the property select tokens.
WITHOUT_CLASSIFICATION	get the function name node.
WITHOUT_CLASSIFICATION	method expressions in a select should always be considered scalar.
WITHOUT_CLASSIFICATION	if this is 'elements' then create a new from element.
WITHOUT_CLASSIFICATION	not elements(x)
WITHOUT_CLASSIFICATION	dialect function
WITHOUT_CLASSIFICATION	collection 'property function'
WITHOUT_CLASSIFICATION	if the constant is an ident figure out what it means
WITHOUT_CLASSIFICATION	ident is a class alias in the from.
WITHOUT_CLASSIFICATION	resolve to an identity column.
WITHOUT_CLASSIFICATION	otherwise it's a literal.
WITHOUT_CLASSIFICATION	the name of an entity class
WITHOUT_CLASSIFICATION	the class discriminator value
WITHOUT_CLASSIFICATION	chop off the rest of the tree.
WITHOUT_CLASSIFICATION	add a space before the display text.
WITHOUT_CLASSIFICATION	find or create the where clause
WITHOUT_CLASSIFICATION	child == parent.getfirstchild()
WITHOUT_CLASSIFICATION	find or create the where clause
WITHOUT_CLASSIFICATION	filter conditions need to be inserted before the hql where condition and the theta join node. this is because org.hibernate.loader.loader binds the filter parameters first then it binds all the hql query parameters see org.hibernate.loader.loader.processfilterparameters().
WITHOUT_CLASSIFICATION	put the filters node before the hql condition and theta joins
WITHOUT_CLASSIFICATION	add the current fragment to the filters node
WITHOUT_CLASSIFICATION	create a new theta_joins node as a parent of all filters
WITHOUT_CLASSIFICATION	put the theta_joins node before the hql condition after the filters.
WITHOUT_CLASSIFICATION	add the current fragment to the theta_joins node
WITHOUT_CLASSIFICATION	first try to get the persister using the given name directly.
WITHOUT_CLASSIFICATION	unable to locate it using this name
WITHOUT_CLASSIFICATION	if that didn't work try using the 'import' name.
WITHOUT_CLASSIFICATION	implicit joins use theta style (where pk = fk) explicit joins use join (after from)
WITHOUT_CLASSIFICATION	locate the registered function by the given name
WITHOUT_CLASSIFICATION	determine the type of the first argument
WITHOUT_CLASSIFICATION	use the dot node to emit the first column name. create the column names folled by the column aliases.
WITHOUT_CLASSIFICATION	note this simply constructs a "raw" sql_token representing the where fragment and injects this into the tree. this "works" however it is probably not the best long-term solution. at some point we probably want to apply an additional grammar to properly tokenize this where fragment into constituent parts focused on the operators embedded within the fragment.
WITHOUT_CLASSIFICATION	append the text of the current node.
WITHOUT_CLASSIFICATION	if the node has a first child recurse into the first child.
WITHOUT_CLASSIFICATION	if there is a second child (rhs) recurse into that child.
WITHOUT_CLASSIFICATION	iterate through the aliasjoinsequence pairs and generate sql token nodes.
WITHOUT_CLASSIFICATION	if the from element represents a join_fragment and it is a theta-style join convert its type from join_fragment to from_fragment
WITHOUT_CLASSIFICATION	this is used during sqlgenerator processing
WITHOUT_CLASSIFICATION	if there is a from fragment and the from element is an explicit then add the from part.
WITHOUT_CLASSIFICATION	&& stringhelper.isnotempty( frag )
WITHOUT_CLASSIFICATION	the from fragment will probably begin with ' '. remove this if it is present.
WITHOUT_CLASSIFICATION	this uses a pathexpressionparser but notice that compound paths are not valid only bare names and simple paths
WITHOUT_CLASSIFICATION	select p from p in class eg.person order by p.name p.address p
WITHOUT_CLASSIFICATION	the reason for this is sql doesn't let you sort by an expression you are not returning in the result set.
WITHOUT_CLASSIFICATION	named query parameter
WITHOUT_CLASSIFICATION	default mode
WITHOUT_CLASSIFICATION	queryjoinfragment join = q.createjoinfragment(usethetastylejoin)
WITHOUT_CLASSIFICATION	reset the dotcount (but not the path) after reset!
WITHOUT_CLASSIFICATION	after reset!
WITHOUT_CLASSIFICATION	we don't need to worry about any condition in the on clause here (tofromfragmentstring) since anything in the on condition is already applied to the whole query
WITHOUT_CLASSIFICATION	bit_length feels a bit broken to me. we have to cast to char in order to pass when a numeric value is supplied. but of course the answers given will be wildly different for these two datatypes. 1234.5678 will be 9 bytes as a char string but will be 8 or 16 bytes as a true numeric. jay nance 2006-09-22
WITHOUT_CLASSIFICATION	dotcount>=2
WITHOUT_CLASSIFICATION	do the corresponding rhs
WITHOUT_CLASSIFICATION	if its "id"
WITHOUT_CLASSIFICATION	or its the id property name
WITHOUT_CLASSIFICATION	join = q.createjoinfragment(usethetastylejoin)
WITHOUT_CLASSIFICATION	important!!
WITHOUT_CLASSIFICATION	string[] keycols = collpersister.getkeycolumnnames()
WITHOUT_CLASSIFICATION	an association
WITHOUT_CLASSIFICATION	allow index() function
WITHOUT_CLASSIFICATION	here assume sqlserver2005 using snapshot isolation which does not have this problem
WITHOUT_CLASSIFICATION	the reason for this is sql doesn't let you sort by an expression you are not returning in the result set.
WITHOUT_CLASSIFICATION	many-to-many
WITHOUT_CLASSIFICATION	collections of values
WITHOUT_CLASSIFICATION	opening paren in new foo ( )
WITHOUT_CLASSIFICATION	if we are inside a new result() but not inside a nested function
WITHOUT_CLASSIFICATION	special case
WITHOUT_CLASSIFICATION	the name of an sql function
WITHOUT_CLASSIFICATION	null child could occur for no from clause in a filter
WITHOUT_CLASSIFICATION	this is basically a copy/paste of orderbyparser might be worth refactoring
WITHOUT_CLASSIFICATION	select p from p in class eg.person group by p.name p.address p
WITHOUT_CLASSIFICATION	return aliases not supported in classic translator!
WITHOUT_CLASSIFICATION	register collection role
WITHOUT_CLASSIFICATION	the keyword used to specify an identity column if identity column key generation is supported.
WITHOUT_CLASSIFICATION	.getelementpropertymapping()
WITHOUT_CLASSIFICATION	crossjoins.add(name)
WITHOUT_CLASSIFICATION	ie no select clause in hql
WITHOUT_CLASSIFICATION	initialize the set of queried identifier spaces (ie. tables)
WITHOUT_CLASSIFICATION	ie. no select clause
WITHOUT_CLASSIFICATION	there _was_ a select clause
WITHOUT_CLASSIFICATION	return the concrete type or the underlying type if a concrete type was not specified
WITHOUT_CLASSIFICATION	many-to-many
WITHOUT_CLASSIFICATION	q.addcollection(collectionname collectionrole)
WITHOUT_CLASSIFICATION	classic parser does not support bulk manipulation statements
WITHOUT_CLASSIFICATION	can't cache this stuff either (per-invocation)
WITHOUT_CLASSIFICATION	unfortunately this stuff can't be cached because it is per-invocation not constant for the querytranslator instance
WITHOUT_CLASSIFICATION	this is the legacy behaviour for hql queries
WITHOUT_CLASSIFICATION	not known!
WITHOUT_CLASSIFICATION	not known!
WITHOUT_CLASSIFICATION	we have the form trim(trimsource) so we trim leading and trailing spaces early exit!!!!
WITHOUT_CLASSIFICATION	not known!
WITHOUT_CLASSIFICATION	not known!
WITHOUT_CLASSIFICATION	need this since join condition can appear inside parens!
WITHOUT_CLASSIFICATION	tokens that close a sub expression tokens that open a sub expression tokens that would indicate a sub expression is a boolean expression
WITHOUT_CLASSIFICATION	expressionterminators.add("") deliberately excluded
WITHOUT_CLASSIFICATION	expressionopeners.add("") deliberately excluded
WITHOUT_CLASSIFICATION	we have the form trim(from trimsource). this is functionally equivalent to trim(trimsource) early exit!!!!
WITHOUT_CLASSIFICATION	otherwise a trim-specification and/or a trim-character have been specified we need to decide which options are present and "do the right thing" should leading trim-characters be trimmed? should trailing trim-characters be trimmed? the trim-character (what is to be trimmed off?) the trim-source (from where should it be trimmed?)
WITHOUT_CLASSIFICATION	inside a between and expression
WITHOUT_CLASSIFICATION	were an odd or even number of nots encountered the join string built up by compound paths inside this expression a flag indicating if the subexpression is known to be boolean
WITHOUT_CLASSIFICATION	ie. a many-to-many
WITHOUT_CLASSIFICATION	cope with []
WITHOUT_CLASSIFICATION	cope with a continued path expression (ie. ].baz)
WITHOUT_CLASSIFICATION	note early return
WITHOUT_CLASSIFICATION	cope with a subselect
WITHOUT_CLASSIFICATION	cope with special cases of and not ()
WITHOUT_CLASSIFICATION	close extra brackets we opened
WITHOUT_CLASSIFICATION	take note when this is a boolean expression
WITHOUT_CLASSIFICATION	assumes that types are all of span 1
WITHOUT_CLASSIFICATION	process a token mapping oo path expressions to sql expressions
WITHOUT_CLASSIFICATION	open any extra brackets we might need.
WITHOUT_CLASSIFICATION	cope with special cases of and not )
WITHOUT_CLASSIFICATION	the next one up must also be
WITHOUT_CLASSIFICATION	add any joins
WITHOUT_CLASSIFICATION	assumes that types are all of span 1
WITHOUT_CLASSIFICATION	named query parameter
WITHOUT_CLASSIFICATION	path expression
WITHOUT_CLASSIFICATION	saves / updates don't cascade to uninitialized collections
WITHOUT_CLASSIFICATION	persists don't cascade to uninitialized collections
WITHOUT_CLASSIFICATION	anything else
WITHOUT_CLASSIFICATION	the path expression continues after a ]
WITHOUT_CLASSIFICATION	careful with this!
WITHOUT_CLASSIFICATION	the path expression ends at the ]
WITHOUT_CLASSIFICATION	"finish off" the join
WITHOUT_CLASSIFICATION	notice no " or . since they are part of (compound) identifiers
WITHOUT_CLASSIFICATION	cannot instantiate
WITHOUT_CLASSIFICATION	start by looking for hql keywords
WITHOUT_CLASSIFICATION	inner joins can be abbreviated to 'join'
WITHOUT_CLASSIFICATION	'outer' is optional and is ignored
WITHOUT_CLASSIFICATION	now anything that is not a hql keyword
WITHOUT_CLASSIFICATION	process the "old" hql style where aliases appear _first_ ie. using the in or in class constructions
WITHOUT_CLASSIFICATION	treat it as a classname
WITHOUT_CLASSIFICATION	treat it as a path expression
WITHOUT_CLASSIFICATION	starts with the name of a mapped class (new style)
WITHOUT_CLASSIFICATION	starts with a path expression (new style)
WITHOUT_CLASSIFICATION	allow odmg oql style from person p p.cars c
WITHOUT_CLASSIFICATION	handle quoted strings
WITHOUT_CLASSIFICATION	object insertions updates and deletions have list semantics because they must happen in the right order so as to respect referential integrity
WITHOUT_CLASSIFICATION	"finish off" the join
WITHOUT_CLASSIFICATION	ignore whitespace
WITHOUT_CLASSIFICATION	do replacements
WITHOUT_CLASSIFICATION	handle hql2 collection syntax
WITHOUT_CLASSIFICATION	uuid.hex is deprecated
WITHOUT_CLASSIFICATION	abstractselectingdelegate impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	hilo params
WITHOUT_CLASSIFICATION	sql = query
WITHOUT_CLASSIFICATION	performance opt
WITHOUT_CLASSIFICATION	sql = update
WITHOUT_CLASSIFICATION	hilo config
WITHOUT_CLASSIFICATION	so we "clock over" on the first invocation
WITHOUT_CLASSIFICATION	don't allow comments on these insert statements as comments totally blow up the oracle getgeneratedkeys "support" (
WITHOUT_CLASSIFICATION	abort the save (the object is already saved by a circular cascade)
WITHOUT_CLASSIFICATION	throw new identifiergenerationexception("save associated object first or disable cascade for inverse association")
WITHOUT_CLASSIFICATION	intentionally empty
WITHOUT_CLASSIFICATION	do nothing to avoid a lazy property initialization
WITHOUT_CLASSIFICATION	keep the behavior consistent even for boundary usages
WITHOUT_CLASSIFICATION	so we "clock over" on the first invocation
WITHOUT_CLASSIFICATION	do nothing until we hit the rsult set containing the generated id
WITHOUT_CLASSIFICATION	column and table should be renamed but it would break the public api
WITHOUT_CLASSIFICATION	loaded entity instances by entitykey
WITHOUT_CLASSIFICATION	if the given name is un-qualified we may neen to qualify it
WITHOUT_CLASSIFICATION	the default
WITHOUT_CLASSIFICATION	unfortunately not really safe to normalize this to 1 as an initial value like we do the others because we would not be able to control this if we are using a sequence
WITHOUT_CLASSIFICATION	intentionally empty
WITHOUT_CLASSIFICATION	identity map of collectionentry instances by the collection wrapper
WITHOUT_CLASSIFICATION	general purpose parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	table-specific parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	configurable implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	identifiergenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	persistentidentifiergenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	prepare and execute the insert
WITHOUT_CLASSIFICATION	prepare and execute the insert
WITHOUT_CLASSIFICATION	fetch the generated id in a separate query
WITHOUT_CLASSIFICATION	we just hit the last position
WITHOUT_CLASSIFICATION	scroll ahead
WITHOUT_CLASSIFICATION	scroll backward
WITHOUT_CLASSIFICATION	we have not yet hit the last result
WITHOUT_CLASSIFICATION	constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	do this when all the properties are updateable since there is a certain likelihood that the information will already be snapshot-cached.
WITHOUT_CLASSIFICATION	inner classes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	caches
WITHOUT_CLASSIFICATION	generators
WITHOUT_CLASSIFICATION	cache region is defined by the root-class in the hierarchy
WITHOUT_CLASSIFICATION	check if the detached object being merged is the parent
WITHOUT_CLASSIFICATION	after all persisters and named queries are registered
WITHOUT_CLASSIFICATION	if we get here it is possible that we have a proxy 'in the way' of the merge map resolution note decided to put this here rather than in the above loop as i was nervous about the performance of the loop-in-loop especially considering this is far more likely the 'edge case'
WITHOUT_CLASSIFICATION	jndi + serialization
WITHOUT_CLASSIFICATION	checking for named queries
WITHOUT_CLASSIFICATION	stats
WITHOUT_CLASSIFICATION	entitynotfounddelegate
WITHOUT_CLASSIFICATION	check named hql queries
WITHOUT_CLASSIFICATION	this will throw an error if there's something wrong.
WITHOUT_CLASSIFICATION	prevents this session from adding things to cache
WITHOUT_CLASSIFICATION	from javax.naming.referenceable
WITHOUT_CLASSIFICATION	look for the instance by uuid
WITHOUT_CLASSIFICATION	for a dynamic-class
WITHOUT_CLASSIFICATION	test this entity to see if we must query it
WITHOUT_CLASSIFICATION	note early exit
WITHOUT_CLASSIFICATION	for backward-compatability
WITHOUT_CLASSIFICATION	ignore this error for now
WITHOUT_CLASSIFICATION	to stop the class from being unloaded
WITHOUT_CLASSIFICATION	in case we were deserialized in a different jvm look for an instance with the same name (alternatively we could do an actual jndi lookup here.)
WITHOUT_CLASSIFICATION	must add to jndi _after_ adding to hashmaps because some jndi servers use serialization
WITHOUT_CLASSIFICATION	make sure this is a defined parameter and check the incoming value type
WITHOUT_CLASSIFICATION	for each of the defined parameters make sure its value has been set
WITHOUT_CLASSIFICATION	we never need to apply locks to the sql
WITHOUT_CLASSIFICATION	inserts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	deletes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	during deserialization we need to reconnect all proxies and collections to this session as well as the entityentry and collectionentry instances these associations are transient because serialization is used for different things.
WITHOUT_CLASSIFICATION	updates ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	loading ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	final boolean forcecacherefresh
WITHOUT_CLASSIFICATION	final boolean forcecacherefresh
WITHOUT_CLASSIFICATION	first try to load it from the temp pc associated to this ss
WITHOUT_CLASSIFICATION	if the metadata allowed proxy creation and caller did not request forceful eager loading generate a proxy
WITHOUT_CLASSIFICATION	otherwise immediately materialize it
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	no auto-flushing to support in stateless session
WITHOUT_CLASSIFICATION	after setting values to object entitymode
WITHOUT_CLASSIFICATION	for ejb3
WITHOUT_CLASSIFICATION	just ignore
WITHOUT_CLASSIFICATION	do a check
WITHOUT_CLASSIFICATION	saveorupdate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	update() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	lock() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	persist() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	persistonflush() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	merge() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	saveorupdatecopy() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	delete() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	load()/get() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	refresh() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	replicate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	do not auto-flush while outside a transaction
WITHOUT_CLASSIFICATION	this is an internal error of some sort
WITHOUT_CLASSIFICATION	stops flush being called multiple times if this method is recursively called
WITHOUT_CLASSIFICATION	only collections belonging to deleted entities are allowed to be dereferenced in the case of orphan delete
WITHOUT_CLASSIFICATION	if it was previously unreferenced we need to flush in order to get its state into the database in order to execute query
WITHOUT_CLASSIFICATION	not for internal use
WITHOUT_CLASSIFICATION	otherwise we only need to flush if there are in-memory changes to the queried tables
WITHOUT_CLASSIFICATION	might need to run a different filter entirely after the flush because the collection role may have changed
WITHOUT_CLASSIFICATION	stops flush being called multiple times if this method is recursively called
WITHOUT_CLASSIFICATION	stops flush being called multiple times if this method is recursively called
WITHOUT_CLASSIFICATION	if it is initialized see if the underlying instance is contained since we need to account for the fact that it might have been evicted
WITHOUT_CLASSIFICATION	basically just an adapted copy of find(criteriaimpl)
WITHOUT_CLASSIFICATION	it is possible for this method to be called during flush processing so make certain that we do not accidently initialize an uninitialized proxy
WITHOUT_CLASSIFICATION	nothing to do in a stateful session
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore this error for now
WITHOUT_CLASSIFICATION	we need to writeobject() on this since interceptor is user defined
WITHOUT_CLASSIFICATION	the old-time stand-by
WITHOUT_CLASSIFICATION	parameter bind values
WITHOUT_CLASSIFICATION	parameter handling code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	prepend value and type list with null for any positions before the wanted position.
WITHOUT_CLASSIFICATION	execution methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	we have a cglib enhanced entity
WITHOUT_CLASSIFICATION	we have a cglib enhanced entity
WITHOUT_CLASSIFICATION	we have a javassist enhanced entity
WITHOUT_CLASSIFICATION	we have a javassist enhanced entity
WITHOUT_CLASSIFICATION	fieldinterceptor impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	subclass accesses ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	let's assume that there is only one lazy fetch group for now!
WITHOUT_CLASSIFICATION	fieldhandler impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	should not need to grow beyond the size of the total number of columns in the rs
WITHOUT_CLASSIFICATION	should probably no-op commit/rollback here at least in jta scenarios
WITHOUT_CLASSIFICATION	base expectation impls ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	various expectation instances ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	explicitly perform no checking
WITHOUT_CLASSIFICATION	used from testsuite
WITHOUT_CLASSIFICATION	assume we are in an auto-commit state
WITHOUT_CLASSIFICATION	package
WITHOUT_CLASSIFICATION	register synch stats.connect()
WITHOUT_CLASSIFICATION	noncritical swallow and let the other propagate!
WITHOUT_CLASSIFICATION	calls executebatch()
WITHOUT_CLASSIFICATION	no big deal
WITHOUT_CLASSIFICATION	no big deal
WITHOUT_CLASSIFICATION	no big deal
WITHOUT_CLASSIFICATION	sybase driver (jconnect) throwing npe here in certain cases but we'll just handle the general "unexpected" case
WITHOUT_CLASSIFICATION	see explanation above
WITHOUT_CLASSIFICATION	if we are in the process of releasing no sense checking for aggressive-release possibility.
WITHOUT_CLASSIFICATION	early exit!!!!
WITHOUT_CLASSIFICATION	resultset impl ("overridden") ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	resultset impl (delegated) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	refer to comment in statefulpersistencecontext.addcollection()
WITHOUT_CLASSIFICATION	connectionmanager.callback implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	note success = false because we don't know the outcome of the transaction
WITHOUT_CLASSIFICATION	we already have a callback registered either a local (org.hibernate.transaction) transaction has accepted callback responsibilities or we have previously registered a transaction synch.
WITHOUT_CLASSIFICATION	the configured transaction-factory says it only supports local callback mode so no sense attempting to register a jta synchronization
WITHOUT_CLASSIFICATION	transactions marked for rollback-only cause some tm impls to throw exceptions
WITHOUT_CLASSIFICATION	serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	postinitialize() will be called after initialization
WITHOUT_CLASSIFICATION	cannot handle single quotes
WITHOUT_CLASSIFICATION	todo for 4.0 private static final logger log = loggerfactory.getlogger( sqlstatementlogger.class ) this is the legacy logging 'category'
WITHOUT_CLASSIFICATION	note that for sequential scrolling we make the assumption that the first persister element is the "root entity"
WITHOUT_CLASSIFICATION	don't even bother trying to read further
WITHOUT_CLASSIFICATION	don't even bother trying to read any further
WITHOUT_CLASSIFICATION	position cursor to the last row
WITHOUT_CLASSIFICATION	sequentially read the result set in reverse until we recognize a change in the key value. at that point we are pointed at the last physical sequential row for the logical row in which we are interested in processing
WITHOUT_CLASSIFICATION	read backwards until we read past the first physical sequential row with the key we are interested in loading
WITHOUT_CLASSIFICATION	finally read ahead one row to position result set cursor at the first physical row we are interested in loading
WITHOUT_CLASSIFICATION	now get an existing proxy for each row element (if there is one)
WITHOUT_CLASSIFICATION	force the proxy to resolve itself
WITHOUT_CLASSIFICATION	this is equivalent to the old behavior
WITHOUT_CLASSIFICATION	if null owner will be retrieved from session
WITHOUT_CLASSIFICATION	final string querystring
WITHOUT_CLASSIFICATION	if it was a reference to self don't need to nullify unless we are using native id generation in which case we definitely need to nullify
WITHOUT_CLASSIFICATION	end of array start filling again from start
WITHOUT_CLASSIFICATION	in an effort to avoid concurrent-modification-exceptions (from potential recursive calls back through here as a result of the eventual call to persistentcollection#endread) we scan the internal loadingcollections map for matches and store those matches in a temp collection. the temp collection is then used to "drive" the #endread processing.
WITHOUT_CLASSIFICATION	we can reuse it for each row
WITHOUT_CLASSIFICATION	can't reuse in this case
WITHOUT_CLASSIFICATION	first we need to suspend any current jta transaction and obtain a jdbc connection
WITHOUT_CLASSIFICATION	getresultlist(results)
WITHOUT_CLASSIFICATION	if we only returned one entity query by key is more efficient
WITHOUT_CLASSIFICATION	a collection loaded in the current session can not possibly be the collection belonging to the entity passed to update()
WITHOUT_CLASSIFICATION	handle empty collection
WITHOUT_CLASSIFICATION	else no collection element but also no owner
WITHOUT_CLASSIFICATION	handle empty collections
WITHOUT_CLASSIFICATION	else this is not a collection initializer (and empty collections will be detected by looking for the owner's identifier in the result set)
WITHOUT_CLASSIFICATION	validate() instances of validatable
WITHOUT_CLASSIFICATION	if we know there is exactly 1 row we can skip. it would be great if we could _always_ skip this it is a problem for <key-many-to-one>
WITHOUT_CLASSIFICATION	remove all collections for the entity from the session-level cache
WITHOUT_CLASSIFICATION	null version means the object is in the process of being loaded somewhere else in the resultset
WITHOUT_CLASSIFICATION	problematic for <key-many-to-one>!
WITHOUT_CLASSIFICATION	use the id passed in
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	prefer re-generation of identity!
WITHOUT_CLASSIFICATION	no point doing this if none was requested
WITHOUT_CLASSIFICATION	if the object is already loaded return the loaded one
WITHOUT_CLASSIFICATION	its already loaded so don't need to hydrate it
WITHOUT_CLASSIFICATION	cascade the refresh prior to refreshing this entity
WITHOUT_CLASSIFICATION	the load() which takes an entity does not pass an entityname
WITHOUT_CLASSIFICATION	we only check the version when _upgrading_ lock modes
WITHOUT_CLASSIFICATION	look for a proxy
WITHOUT_CLASSIFICATION	we need to upgrade the lock mode to the mode requested
WITHOUT_CLASSIFICATION	its the given optional object
WITHOUT_CLASSIFICATION	instantiate a new instance
WITHOUT_CLASSIFICATION	need to hydrate it.
WITHOUT_CLASSIFICATION	return a newly loaded object
WITHOUT_CLASSIFICATION	will be ignored using the existing entry instead
WITHOUT_CLASSIFICATION	key is an entity involved with the operation performed by the listener value can be either a copy of the entity or the entity itself
WITHOUT_CLASSIFICATION	materialize associations (and initialize the object) later
WITHOUT_CLASSIFICATION	get the persister for the _subclass_
WITHOUT_CLASSIFICATION	ok in normal hibernate usage to delete a detached entity jpa however forbids it thus this is a hook for hem to affect this behavior
WITHOUT_CLASSIFICATION	the entry will be removed after the flush and will no longer override the stale snapshot this is now handled by removeentity() in entitydeleteaction persistencecontext.removedatabasesnapshot(key)
WITHOUT_CLASSIFICATION	addinitializedcollection(collection persister id)
WITHOUT_CLASSIFICATION	early exit!
WITHOUT_CLASSIFICATION	early exit!
WITHOUT_CLASSIFICATION	|| oj.getjoinable().consumescollectionalias()
WITHOUT_CLASSIFICATION	here we do not bother with the discriminator.
WITHOUT_CLASSIFICATION	code to handle subclasses of topclass
WITHOUT_CLASSIFICATION	woops we got an instance of another class hierarchy branch
WITHOUT_CLASSIFICATION	we can go straight to the first required row
WITHOUT_CLASSIFICATION	we need to step through the rows one row at a time (slow)
WITHOUT_CLASSIFICATION	synchronized to avoid multi-thread access issues defined as method synch to avoid potential deadlock issues due to nature of code.
WITHOUT_CLASSIFICATION	allows various loaders (ok mainly the queryloader ) to check whether scrolling of their result set should be allowed. by default it is allowed.
WITHOUT_CLASSIFICATION	before adding to collection!
WITHOUT_CLASSIFICATION	if the current depth is 0 the root thing being loaded is the many-to-many collection itself. here it is alright to use an inner join
WITHOUT_CLASSIFICATION	operations which cascade as far as the collection also cascade to collection elements
WITHOUT_CLASSIFICATION	simple because we can't have a one-to-one or a collection (or even a property-ref) in a composite-element
WITHOUT_CLASSIFICATION	a composite key
WITHOUT_CLASSIFICATION	if no batch use "foo = ? and bar = ?"
WITHOUT_CLASSIFICATION	it must be a collection fetch
WITHOUT_CLASSIFICATION	needed later for many-to-many/filter application
WITHOUT_CLASSIFICATION	&& etype.isreferencetoprimarykey()
WITHOUT_CLASSIFICATION	it might still need to apply a collection ordering based on a many-to-many defined order-by
WITHOUT_CLASSIFICATION	if a composite key use "( (foo = ? and bar = ?) or (foo = ? and bar = ?) )" for batching todo unnecessary for databases with ansi-style joins
WITHOUT_CLASSIFICATION	belong to other persister belong to other persister
WITHOUT_CLASSIFICATION	we found it
WITHOUT_CLASSIFICATION	we can use an inner join for the many-to-many
WITHOUT_CLASSIFICATION	disable a join back to this same association
WITHOUT_CLASSIFICATION	note unlike all other loaders this one is not multithreaded or cacheable!!
WITHOUT_CLASSIFICATION	the user visible aliases which are unknown to the superclass these are not the actual "physical" sql aliases
WITHOUT_CLASSIFICATION	root entity comes last
WITHOUT_CLASSIFICATION	deliberately ignore return value!
WITHOUT_CLASSIFICATION	alias may be null early exit
WITHOUT_CLASSIFICATION	if it is a compound path
WITHOUT_CLASSIFICATION	otherwise assume the parent is the the criteria that created us
WITHOUT_CLASSIFICATION	if its the root criteria we are done
WITHOUT_CLASSIFICATION	otherwise recurse
WITHOUT_CLASSIFICATION	the criteria instance
WITHOUT_CLASSIFICATION	the entity name
WITHOUT_CLASSIFICATION	not found in inner query try the outer query
WITHOUT_CLASSIFICATION	not found in inner query try the outer query
WITHOUT_CLASSIFICATION	it refers to an alias of a projection
WITHOUT_CLASSIFICATION	should never happen i think
WITHOUT_CLASSIFICATION	detect discriminator values
WITHOUT_CLASSIFICATION	convert the string value into the proper type.
WITHOUT_CLASSIFICATION	and the qualifier is not the alias of this criteria -> check to see if we belong to some criteria other than the one that created us
WITHOUT_CLASSIFICATION	it does not refer to an alias of a projection look for a property
WITHOUT_CLASSIFICATION	otherwise this is an ordinary value.
WITHOUT_CLASSIFICATION	currently not cachable if autodiscover types is in effect (e.g. "select ")
WITHOUT_CLASSIFICATION	private final string[] sqlaliases private final string[] sqlaliassuffixes
WITHOUT_CLASSIFICATION	this is only needed (afaict) for resulttransformer processing
WITHOUT_CLASSIFICATION	determine if the collection elements are entities
WITHOUT_CLASSIFICATION	build an array with indices equal to the total number of actual returns in the result hibernate will return for this query (scalars + non-scalars)
WITHOUT_CLASSIFICATION	replace {.} with corresponding column aliases
WITHOUT_CLASSIFICATION	no additional open braces found in the string append the rest of the string in its entirty and quit this loop
WITHOUT_CLASSIFICATION	apend everything up until the next encountered open brace
WITHOUT_CLASSIFICATION	it is a simple table alias {foo}
WITHOUT_CLASSIFICATION	passing through anything we do not know to support jdbc escape sequences hb-898
WITHOUT_CLASSIFICATION	passing through anything we do not know to support jdbc escape sequences hb-898
WITHOUT_CLASSIFICATION	the current alias is referencing the collection to be eagerly fetched
WITHOUT_CLASSIFICATION	it is a property reference {foo.bar}
WITHOUT_CLASSIFICATION	possibly handle something parameters for the query ?
WITHOUT_CLASSIFICATION	let return-propertys override whatever the persister has for aliases.
WITHOUT_CLASSIFICATION	private final list persisters = new arraylist()
WITHOUT_CLASSIFICATION	package
WITHOUT_CLASSIFICATION	note early exit!
WITHOUT_CLASSIFICATION	private final list scalartypes = new arraylist() private final list scalarcolumnaliases = new arraylist()
WITHOUT_CLASSIFICATION	now process the returns
WITHOUT_CLASSIFICATION	private list collectionowneraliases = new arraylist() private list collectionaliases = new arraylist() private list collectionpersisters = new arraylist() private list collectionresults = new arraylist()
WITHOUT_CLASSIFICATION	already been processed
WITHOUT_CLASSIFICATION	already been processed
WITHOUT_CLASSIFICATION	make sure the owner alias is known
WITHOUT_CLASSIFICATION	first break down the returns into maps keyed by alias so that role returns can be more easily resolved to their owners
WITHOUT_CLASSIFICATION	scalarcolumnaliases.add( typereturn.getcolumnalias() ) scalartypes.add( typereturn.gettype() )
WITHOUT_CLASSIFICATION	if this return's alias has not been processed yet do so b4 further processing of this return
WITHOUT_CLASSIFICATION	collectionowneraliases.add( owneralias )
WITHOUT_CLASSIFICATION	for merging of versioned entities we consider the version having been changed only when 1) the two version values are different and 2) the target actually represents database state! this second condition is a special case which allows an entity to be merged during the same transaction (though during a seperate operation) in which it was originally persisted/saved
WITHOUT_CLASSIFICATION	this is the second pass through on a merge op so here we limit the replacement to associations types (value types were already replaced during the first pass)
WITHOUT_CLASSIFICATION	early exit
WITHOUT_CLASSIFICATION	cascade-save to collections after the collection owner was saved
WITHOUT_CLASSIFICATION	initialize the error handling delegate.
WITHOUT_CLASSIFICATION	use the delegate.
WITHOUT_CLASSIFICATION	currently only the hibernate-supplied dbtimestamptype is supported here
WITHOUT_CLASSIFICATION	this is called when it's time to fully resolve a path expression.
WITHOUT_CLASSIFICATION	make a new one
WITHOUT_CLASSIFICATION	not so sure this is even valid subtree. but if it was it'd represent two unrelated table references
WITHOUT_CLASSIFICATION	(not (gt a b) ) => (le a b)
WITHOUT_CLASSIFICATION	private type[] sqlresulttypes
WITHOUT_CLASSIFICATION	include the discriminator and class-level where but not filters
WITHOUT_CLASSIFICATION	sqlresulttypes = selectclause.getsqlresulttypes()
WITHOUT_CLASSIFICATION	by default
WITHOUT_CLASSIFICATION	this is now handled earlier in this method.
WITHOUT_CLASSIFICATION	-- loader implementation --
WITHOUT_CLASSIFICATION	-- loader overrides --
WITHOUT_CLASSIFICATION	(not (is_null a b) ) => (is_not_null a b)
WITHOUT_CLASSIFICATION	none because its the requested lock mode not the actual!
WITHOUT_CLASSIFICATION	meant to handle dynamic instantiation queries
WITHOUT_CLASSIFICATION	--- query translator methods ---
WITHOUT_CLASSIFICATION	-- implementation private methods --
WITHOUT_CLASSIFICATION	deduplicate unique constraints sharing the same columns this is needed by hibernate annotations since it creates automagically unique constraints for the user
WITHOUT_CLASSIFICATION	try to find out the name of the primary key to create it as identity if the identitygenerator is used
WITHOUT_CLASSIFICATION	to support dialects that have their own identity data type
WITHOUT_CLASSIFICATION	prepare the left hand side and get the data type.
WITHOUT_CLASSIFICATION	used also for generation of fk names!
WITHOUT_CLASSIFICATION	usually useless
WITHOUT_CLASSIFICATION	added this caching as i noticed that gettype() is being called multiple times
WITHOUT_CLASSIFICATION	do not add unique constraint on db not supporting unique and nullable columns
WITHOUT_CLASSIFICATION	for backward compatibility disable this
WITHOUT_CLASSIFICATION	may be final may be final may be final
WITHOUT_CLASSIFICATION	may be final
WITHOUT_CLASSIFICATION	may be final
WITHOUT_CLASSIFICATION	custom sql
WITHOUT_CLASSIFICATION	primary key constraint
WITHOUT_CLASSIFICATION	the root of the incoming property path matched one of the embedded composite identifier properties
WITHOUT_CLASSIFICATION	ignore it
WITHOUT_CLASSIFICATION	flat recursive algorithm
WITHOUT_CLASSIFICATION	an identifier mapper => getkey will be included in the getnonduplicatedpropertyiterator() and checked later so it needs to be excluded
WITHOUT_CLASSIFICATION	if the hibernate-mapping did not specify a schema/catalog use the defaults specified by properties - but note that if the schema/catalog were specified in hibernate-mapping or as params they will already be initialized and will override the values set here (they are in identifiergeneratorproperties)
WITHOUT_CLASSIFICATION	pass the entity-name if not a collection-id
WITHOUT_CLASSIFICATION	custom sql
WITHOUT_CLASSIFICATION	primary key constraint
WITHOUT_CLASSIFICATION	pass the column name (a generated id almost always has a single column)
WITHOUT_CLASSIFICATION	needed to satisfy keyvalue
WITHOUT_CLASSIFICATION	empty means no scoping
WITHOUT_CLASSIFICATION	index should be last column listed
WITHOUT_CLASSIFICATION	if it is a formula index use the element columns in the pk
WITHOUT_CLASSIFICATION	don't create a unique key 'cos some databases don't like a uk on nullable columns
WITHOUT_CLASSIFICATION	arraylist list = new arraylist()list.addall( getkey().getconstraintcolumns() )list.addall( getindex().getconstraintcolumns() )getcollectiontable().createuniquekey(list)
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	no foreign key element of for a one-to-many
WITHOUT_CLASSIFICATION	todo we could just return all false
WITHOUT_CLASSIFICATION	the case of a foreign key to something other than the pk is handled in createpropertyrefconstraints
WITHOUT_CLASSIFICATION	todo we could just return all false
WITHOUT_CLASSIFICATION	if the property mapping consists of all formulas make it non-updateable
WITHOUT_CLASSIFICATION	columnupdateability.length==0 ||
WITHOUT_CLASSIFICATION	if the property mapping consists of all formulas make it insertable
WITHOUT_CLASSIFICATION	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	expected type is intrinsic here
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	return memberpersister.getpropertytype(propertyname)
WITHOUT_CLASSIFICATION	return memberpersister.tocolumns(alias propertyname)
WITHOUT_CLASSIFICATION	return memberpersister.gettype()
WITHOUT_CLASSIFICATION	&& !indexisformula
WITHOUT_CLASSIFICATION	return !isonetomany()
WITHOUT_CLASSIFICATION	instanceof associationtype
WITHOUT_CLASSIFICATION	we need to determine the best way to know that two joinables represent a single many-to-many
WITHOUT_CLASSIFICATION	strip leading ''
WITHOUT_CLASSIFICATION	public boolean issubselectloadable()
WITHOUT_CLASSIFICATION	key
WITHOUT_CLASSIFICATION	columns
WITHOUT_CLASSIFICATION	sql statements
WITHOUT_CLASSIFICATION	extra information about the element type
WITHOUT_CLASSIFICATION	types
WITHOUT_CLASSIFICATION	custom sql
WITHOUT_CLASSIFICATION	private final string unquotedidentifiercolumnname
WITHOUT_CLASSIFICATION	dynamic filters specifically for many-to-many inside the collection
WITHOUT_CLASSIFICATION	dynamic filters for the collection
WITHOUT_CLASSIFICATION	nativesql collect key column and auto-aliases
WITHOUT_CLASSIFICATION	unquotedkeycolumnnames = stringhelper.unquote(keycolumnaliases)
WITHOUT_CLASSIFICATION	element
WITHOUT_CLASSIFICATION	nativesql collect element column and auto-aliases
WITHOUT_CLASSIFICATION	index and row select
WITHOUT_CLASSIFICATION	nativesql collect index column and auto-aliases
WITHOUT_CLASSIFICATION	unquotedidentifiercolumnname = identifiercolumnalias
WITHOUT_CLASSIFICATION	unquotedidentifiercolumnname = null
WITHOUT_CLASSIFICATION	generate the sql
WITHOUT_CLASSIFICATION	for non-arrays we don't need to know the element class elementtype.returnedclass()
WITHOUT_CLASSIFICATION	not all classpersisters implement propertymapping!
WITHOUT_CLASSIFICATION	handle any filters applied to this collection
WITHOUT_CLASSIFICATION	handle any filters applied to this collection for many-to-many
WITHOUT_CLASSIFICATION	if there is a user-specified loader return that todo filters!?
WITHOUT_CLASSIFICATION	take care of any entities that might have been evicted!
WITHOUT_CLASSIFICATION	strip leading ''
WITHOUT_CLASSIFICATION	run a subquery loader
WITHOUT_CLASSIFICATION	needed by arrays
WITHOUT_CLASSIFICATION	todo something with formulas
WITHOUT_CLASSIFICATION	an assertion
WITHOUT_CLASSIFICATION	remove all the old entries
WITHOUT_CLASSIFICATION	create all the new entries
WITHOUT_CLASSIFICATION	&& !indexisformula
WITHOUT_CLASSIFICATION	&& !indexisformula
WITHOUT_CLASSIFICATION	delete all the deleted entries
WITHOUT_CLASSIFICATION	insert all the new entries
WITHOUT_CLASSIFICATION	==elementtype ??
WITHOUT_CLASSIFICATION	update all the modified entries
WITHOUT_CLASSIFICATION	identifier collections not supported for 1-to-many
WITHOUT_CLASSIFICATION	update removed rows fks to null
WITHOUT_CLASSIFICATION	will still be issued when it used to be null
WITHOUT_CLASSIFICATION	now update all changed or added rows fks
WITHOUT_CLASSIFICATION	buf.append( selectfragment( lhsalias "" ) )ignore suffix for collection columns!
WITHOUT_CLASSIFICATION	use suffix for the entity columns
WITHOUT_CLASSIFICATION	the class hierarchy structure
WITHOUT_CLASSIFICATION	private final string roottablename
WITHOUT_CLASSIFICATION	initialization
WITHOUT_CLASSIFICATION	custom sql
WITHOUT_CLASSIFICATION	the class hierarchy structure
WITHOUT_CLASSIFICATION	execute the sql
WITHOUT_CLASSIFICATION	this could also just be true all the time
WITHOUT_CLASSIFICATION	chop the last union (all)
WITHOUT_CLASSIFICATION	todo check this.
WITHOUT_CLASSIFICATION	initialization
WITHOUT_CLASSIFICATION	properties of this class including inherited properties
WITHOUT_CLASSIFICATION	the closure of all properties in the entire hierarchy including subclasses and superclasses of this class
WITHOUT_CLASSIFICATION	the closure of all columns used by the entire hierarchy including subclasses and superclasses of this class
WITHOUT_CLASSIFICATION	subclass discrimination works by assigning particular values to certain combinations of null primary key values in the outer join using an sql case
WITHOUT_CLASSIFICATION	multitables
WITHOUT_CLASSIFICATION	custom sql
WITHOUT_CLASSIFICATION	subclass closure properties
WITHOUT_CLASSIFICATION	subclasses
WITHOUT_CLASSIFICATION	( (column) model.gettable().getprimarykey().getcolumniterator().next() ).getname()
WITHOUT_CLASSIFICATION	( (column) sc.gettable().getprimarykey().getcolumniterator().next() ).getname()
WITHOUT_CLASSIFICATION	don't need subclass tables because they can't appear in conditions
WITHOUT_CLASSIFICATION	special case where we need to force incloude all subclass joins
WITHOUT_CLASSIFICATION	the class hierarchy structure
WITHOUT_CLASSIFICATION	properties of this class including inherited properties
WITHOUT_CLASSIFICATION	the closure of all columns used by the entire hierarchy including subclasses and superclasses of this class
WITHOUT_CLASSIFICATION	get em on the second pass!
WITHOUT_CLASSIFICATION	now look up the object we are really interested in! (this lets us correctly handle proxies and multi-row or multi-column queries)
WITHOUT_CLASSIFICATION	discriminator column
WITHOUT_CLASSIFICATION	initialization
WITHOUT_CLASSIFICATION	private final map propertytablenumbersbyname = new hashmap()
WITHOUT_CLASSIFICATION	class + table
WITHOUT_CLASSIFICATION	discriminator
WITHOUT_CLASSIFICATION	properties
WITHOUT_CLASSIFICATION	subclasses
WITHOUT_CLASSIFICATION	execute the sql
WITHOUT_CLASSIFICATION	joins
WITHOUT_CLASSIFICATION	propertytablenumbersbyname.put( prop.getname() join )
WITHOUT_CLASSIFICATION	access cached sql
WITHOUT_CLASSIFICATION	figure out which tables need to be fetched
WITHOUT_CLASSIFICATION	figure out which columns are needed
WITHOUT_CLASSIFICATION	figure out which formulas are needed
WITHOUT_CLASSIFICATION	render the sql
WITHOUT_CLASSIFICATION	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	moved up from abstractentitypersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	the optional sql string defined in the where attribute
WITHOUT_CLASSIFICATION	information about lazy properties of this class
WITHOUT_CLASSIFICATION	information about all properties in class hierarchy
WITHOUT_CLASSIFICATION	information about all columns/formulas in class hierarchy
WITHOUT_CLASSIFICATION	dynamic filters attached to the class-level
WITHOUT_CLASSIFICATION	sql strings
WITHOUT_CLASSIFICATION	for objects that came in via update()
WITHOUT_CLASSIFICATION	properties
WITHOUT_CLASSIFICATION	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	identifier
WITHOUT_CLASSIFICATION	version
WITHOUT_CLASSIFICATION	where string
WITHOUT_CLASSIFICATION	subclass property closure
WITHOUT_CLASSIFICATION	before add -)
WITHOUT_CLASSIFICATION	handle any filters applied to the class level
WITHOUT_CLASSIFICATION	only one-to-one is lazy fetched
WITHOUT_CLASSIFICATION	note early exit here
WITHOUT_CLASSIFICATION	object have been loaded with setreadonly(true) hhh-2236
WITHOUT_CLASSIFICATION	note this assumes something about how propertyselectfragment is implemented by the subclass!
WITHOUT_CLASSIFICATION	strip leading " "
WITHOUT_CLASSIFICATION	if there is no resulting row return null
WITHOUT_CLASSIFICATION	otherwise return the "hydrated" state (ie. associations are not resolved)
WITHOUT_CLASSIFICATION	null owner ok??
WITHOUT_CLASSIFICATION	null sql means that the only lazy properties are shared pk one-to-one associations which are handled differently in the type#nullsafeget code
WITHOUT_CLASSIFICATION	create a new from node for the referenced class.
WITHOUT_CLASSIFICATION	the difficulty here is exactly what do we update in order to force the version to be incremented in the db
WITHOUT_CLASSIFICATION	performance op to avoid the array search
WITHOUT_CLASSIFICATION	properly handle property-ref-based associations
WITHOUT_CLASSIFICATION	enable for hhh-440 which we don't like
WITHOUT_CLASSIFICATION	aliases
WITHOUT_CLASSIFICATION	aliases named identifier ( alias.idname )
WITHOUT_CLASSIFICATION	aliases for composite-id's
WITHOUT_CLASSIFICATION	fetch embedded identifiers propertynames from the "virtual" identifier component
WITHOUT_CLASSIFICATION	embedded composite ids ( alias.idname1 alias.idname2 )
WITHOUT_CLASSIFICATION	todo skip formulas?
WITHOUT_CLASSIFICATION	don't need filters for the static loaders
WITHOUT_CLASSIFICATION	do two passes for collection property-ref!
WITHOUT_CLASSIFICATION	select the correct row by either pk or rowid
WITHOUT_CLASSIFICATION	todo eventually rowidname[j]
WITHOUT_CLASSIFICATION	this is a property of the table which we are updating
WITHOUT_CLASSIFICATION	special shortcut for id properties skip the join! this must only occur at the _end_ of a path expression
WITHOUT_CLASSIFICATION	we are using "all" or "dirty" property-based optimistic locking
WITHOUT_CLASSIFICATION	nothing to do even if the operand is a parameter no way we could infer an appropriate expected type here
WITHOUT_CLASSIFICATION	this property belongs on the table and is to be inserted
WITHOUT_CLASSIFICATION	add normal properties
WITHOUT_CLASSIFICATION	add the discriminator
WITHOUT_CLASSIFICATION	more specifically "? [op] datetime" 1) if the operator is minus the param needs to be of some datetime type 2) if the operator is plus the param needs to be of some numeric type
WITHOUT_CLASSIFICATION	add normal properties
WITHOUT_CLASSIFICATION	this property belongs on the table and is to be inserted
WITHOUT_CLASSIFICATION	add the discriminator
WITHOUT_CLASSIFICATION	add the primary key
WITHOUT_CLASSIFICATION	delegate already handles pk columns
WITHOUT_CLASSIFICATION	we can't batch joined inserts especially not if it is an identity insert nor can we batch statements where the expectation is based on an output param
WITHOUT_CLASSIFICATION	render the sql query
WITHOUT_CLASSIFICATION	write the values of fields onto the prepared statement - we must use the state at the time the insert was issued (cos of foreign key constraints). not necessarily the object's current state
WITHOUT_CLASSIFICATION	todo shouldnt inserts be expectations.none?
WITHOUT_CLASSIFICATION	don't bother trying to update we know there is no row there yet
WITHOUT_CLASSIFICATION	if all fields are null we might need to delete existing row
WITHOUT_CLASSIFICATION	there is probably a row there so try to update if no rows were updated we will find out
WITHOUT_CLASSIFICATION	note updates to joined tables can't be batched
WITHOUT_CLASSIFICATION	starting index
WITHOUT_CLASSIFICATION	now write the values of fields onto the prepared statement
WITHOUT_CLASSIFICATION	write any appropriate versioning conditional parameters
WITHOUT_CLASSIFICATION	render the sql query
WITHOUT_CLASSIFICATION	do the key. the key is immutable so we can use the _current_ object state - not necessarily the state at the time the delete was issued
WITHOUT_CLASSIFICATION	we should use the _current_ object state (ie. after any updates that occurred during flush)
WITHOUT_CLASSIFICATION	this property belongs to the table and it is not specifically excluded from optimistic locking by optimistic-lock="false"
WITHOUT_CLASSIFICATION	note dirtyfields==null means we had no snapshot and we couldn't get one using select-before-update oldfields==null just means we had no snapshot to begin with (we might have used select-before-update to get the dirtyfields)
WITHOUT_CLASSIFICATION	more specifically "datetime [op] ?" 1) if the operator is minus we really cannot determine the expected type as either another datetime or numeric would be valid 2) if the operator is plus the param needs to be of some numeric type
WITHOUT_CLASSIFICATION	for the case of dynamic-update="true" we need to generate the update sql
WITHOUT_CLASSIFICATION	don't need to check laziness (dirty checking algorithm handles that)
WITHOUT_CLASSIFICATION	for the case of dynamic-update="false" or no snapshot we use the static sql
WITHOUT_CLASSIFICATION	if not "get" then try "is"
WITHOUT_CLASSIFICATION	now update only the tables with dirty properties (and the table with the version number)
WITHOUT_CLASSIFICATION	for the case of dynamic-insert="true" we need to generate the insert sql
WITHOUT_CLASSIFICATION	for the case of dynamic-insert="true" we need to generate the insert sql
WITHOUT_CLASSIFICATION	for the case of dynamic-insert="false" use the static sql
WITHOUT_CLASSIFICATION	for the case of dynamic-insert="false" use the static sql
WITHOUT_CLASSIFICATION	not supported
WITHOUT_CLASSIFICATION	this property belongs to the table and it is not specifically excluded from optimistic locking by optimistic-lock="false"
WITHOUT_CLASSIFICATION	we need to utilize dynamic delete statements
WITHOUT_CLASSIFICATION	otherwise utilize the static delete statements
WITHOUT_CLASSIFICATION	just a performance opt!
WITHOUT_CLASSIFICATION	just a performance opt!
WITHOUT_CLASSIFICATION	all joins join to the pk of the driving table
WITHOUT_CLASSIFICATION	notice that we skip the first table it is the driving table!
WITHOUT_CLASSIFICATION	we can inner join to superclass tables (the row must be there) we can never inner join to subclass tables
WITHOUT_CLASSIFICATION	skip the driving table
WITHOUT_CLASSIFICATION	get 'em in the right order (not that it really matters)
WITHOUT_CLASSIFICATION	here we work under the following assumptions ------------ valid cases -------------------------------------- 1) datetime + {something other than datetime} always results in a datetime ( db will catch invalid conversions ) 2) datetime - datetime always results in a double 3) datetime - {something other than datetime} always results in a datetime ( db will catch invalid conversions ) ------------ invalid cases ------------------------------------ 4) datetime + datetime 5) {something other than datetime} - datetime 6) datetime {any type} 7) datetime / {any type} 8) {any type} / datetime doing so allows us to properly handle parameters as either the left or right side here in the majority of cases
WITHOUT_CLASSIFICATION	render the where and from parts
WITHOUT_CLASSIFICATION	we could regerate this inside each called method!
WITHOUT_CLASSIFICATION	now render the joins
WITHOUT_CLASSIFICATION	this will add the new from element to the origin.
WITHOUT_CLASSIFICATION	now render the select clause
WITHOUT_CLASSIFICATION	now tie it all together
WITHOUT_CLASSIFICATION	insert/update/delete sql
WITHOUT_CLASSIFICATION	select sql
WITHOUT_CLASSIFICATION	no need to check laziness dirty checking handles that
WITHOUT_CLASSIFICATION	fully resolve the map reference create implicit joins.
WITHOUT_CLASSIFICATION	temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	the basic implementation is to simply use the node's text
WITHOUT_CLASSIFICATION	for dialects which are known to not support ansi-sql row-value-constructor syntax we should mutate the tree.
WITHOUT_CLASSIFICATION	due to the complexity in initializing the selectclause do not generate one here. if it is not found simply return null also do not cache since it gets generated well after we are created.
WITHOUT_CLASSIFICATION	check the version unsaved-value if appropriate
WITHOUT_CLASSIFICATION	let this take precedence if defined since it works for assigned identifiers
WITHOUT_CLASSIFICATION	check the id unsaved-value
WITHOUT_CLASSIFICATION	check to see if it is in the second-level cache
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	for property references generate <tablealias>.<columnname> as <projectionalias>
WITHOUT_CLASSIFICATION	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	if there is no resulting row return null
WITHOUT_CLASSIFICATION	force immediate execution of the insert
WITHOUT_CLASSIFICATION	if this from element is a collection and the path is a collection property (maxindex etc.) then generate a sub-query.
WITHOUT_CLASSIFICATION	entities ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	collections ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	cannot occur
WITHOUT_CLASSIFICATION	cannot occur
WITHOUT_CLASSIFICATION	only carry on if the method has no parameters
WITHOUT_CLASSIFICATION	try "get"
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	should be safe to only ever expect entitypersister references here
WITHOUT_CLASSIFICATION	this page intentionally left blank )
WITHOUT_CLASSIFICATION	do not do anything
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	cant instantiate
WITHOUT_CLASSIFICATION	if it is a property of an embedded component invoke on the "identifier"
WITHOUT_CLASSIFICATION	otherwise
WITHOUT_CLASSIFICATION	skip finalize methods
WITHOUT_CLASSIFICATION	note interfaces is assumed to already contain hibernateproxy.class
WITHOUT_CLASSIFICATION	note interfaces is assumed to already contain hibernateproxy.class
WITHOUT_CLASSIFICATION	hhh-2481 make sure the callback gets cleared otherwise the instance stays in a static thread local.
WITHOUT_CLASSIFICATION	while constructor is running
WITHOUT_CLASSIFICATION	while constructor is running
WITHOUT_CLASSIFICATION	note interface is assumed to already contain hibernateproxy.class
WITHOUT_CLASSIFICATION	interfaces arguments
WITHOUT_CLASSIFICATION	todo!
WITHOUT_CLASSIFICATION	get the caller
WITHOUT_CLASSIFICATION	get the caller principals
WITHOUT_CLASSIFICATION	private static final alias default_alias = new alias(10 null)
WITHOUT_CLASSIFICATION	needed to bump this up to dotnode because that is the only thing which currently knows about the property-ref path in the correct format it is either this or recurse over the dotnodes constructing the property path just like dotnode does internally
WITHOUT_CLASSIFICATION	if the identifier is quoted remove the quotes
WITHOUT_CLASSIFICATION	truncate the identifier to the max alias length less the suffix length
WITHOUT_CLASSIFICATION	full joins are not supported.. yet!
WITHOUT_CLASSIFICATION	null is not considered the same type as integer. $non-nls-1 $non-nls-1
WITHOUT_CLASSIFICATION	the outerjoinsafterwhere needs to come before where clause to properly handle dynamic filters
WITHOUT_CLASSIFICATION	$non-nls-1
WITHOUT_CLASSIFICATION	$non-nls-1
WITHOUT_CLASSIFICATION	$non-nls-1
WITHOUT_CLASSIFICATION	$non-nls-1
WITHOUT_CLASSIFICATION	strip off any leading 'and' token
WITHOUT_CLASSIFICATION	if the condition is not already there
WITHOUT_CLASSIFICATION	dontspace.add("'")
WITHOUT_CLASSIFICATION	for mysql
WITHOUT_CLASSIFICATION	hashmap columnsunique = new hashmap()
WITHOUT_CLASSIFICATION	null caused some problems
WITHOUT_CLASSIFICATION	package
WITHOUT_CLASSIFICATION	not sure if this would ever be null but wanted to be careful
WITHOUT_CLASSIFICATION	even on inverse="true"
WITHOUT_CLASSIFICATION	package
WITHOUT_CLASSIFICATION	package
WITHOUT_CLASSIFICATION	if true then execute db updates otherwise just generate and display updates
WITHOUT_CLASSIFICATION	we only release the connection
WITHOUT_CLASSIFICATION	deprecated option
WITHOUT_CLASSIFICATION	if an exception occurs during flush user must call rollback()
WITHOUT_CLASSIFICATION	actually this last test is probably unnecessary since beforecompletion() doesn't get called during rollback
WITHOUT_CLASSIFICATION	this one only really needed for badly-behaved applications! (if the transactionmanager has a sychronization registered its a noop) (actually we do need it for downgrading locks)
WITHOUT_CLASSIFICATION	create an dotnode ast for the path and resolve it.
WITHOUT_CLASSIFICATION	if an exception occurs during flush user must call rollback()
WITHOUT_CLASSIFICATION	if we could not register a synchronization do the before/after completion callbacks ourself (but we need to let jdbccontext know that this is what we are going to do so it doesn't keep trying to register synchronizations)
WITHOUT_CLASSIFICATION	swallow it and continue to roll back jta transaction
WITHOUT_CLASSIFICATION	so the transaction is already rolled back by jta spec
WITHOUT_CLASSIFICATION	this method is a noop if there is a synchronization!
WITHOUT_CLASSIFICATION	two conditions where we need to transform this to a theta-join syntax 1) 'elem' is the "root from-element" in correlated subqueries 2) the dotnode.usethetastyleimplicitjoins has been set to true and 'elem' represents an implicit join
WITHOUT_CLASSIFICATION	websphere however is not a sane jee/jta container
WITHOUT_CLASSIFICATION	for sane jee/jta containers the transaction itself functions as its identifier
WITHOUT_CLASSIFICATION	swallow the transaction was finished
WITHOUT_CLASSIFICATION	all aliastoentitymapresulttransformer are considered equal ~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	create the join element under the from element.
WITHOUT_CLASSIFICATION	all distinctrootentityresulttransformer are considered equal ~~~~~~~~~~~
WITHOUT_CLASSIFICATION	map of entitymode -> tuplizer
WITHOUT_CLASSIFICATION	this is a virtual id property
WITHOUT_CLASSIFICATION	this one needed only for guessentitymode()
WITHOUT_CLASSIFICATION	create our own copy of the user-supplied tuplizer impl map
WITHOUT_CLASSIFICATION	todo move this to sf per hhh-3517 also see hhh-1907 and componentmetamodel
WITHOUT_CLASSIFICATION	then the pojo tuplizer using the dynamic-map tuplizer if no pojo representation is available
WITHOUT_CLASSIFICATION	build the dynamic-map tuplizer
WITHOUT_CLASSIFICATION	then dom4j tuplizer if dom4j representation is available
WITHOUT_CLASSIFICATION	build the dynamic-map tuplizer
WITHOUT_CLASSIFICATION	put the "standard" tuplizers into the tuplizer map first
WITHOUT_CLASSIFICATION	found a ctor but it was not publicly accessible so try to request accessibility
WITHOUT_CLASSIFICATION	private final sessionfactoryimplementor sessionfactory
WITHOUT_CLASSIFICATION	cached for efficiency
WITHOUT_CLASSIFICATION	public componentmetamodel(component component sessionfactoryimplementor sessionfactory) {
WITHOUT_CLASSIFICATION	this.sessionfactory = sessionfactory
WITHOUT_CLASSIFICATION	it was not embedded so the argument is just an id
WITHOUT_CLASSIFICATION	then the pojo tuplizer using the dynamic-map tuplizer if no pojo representation is available
WITHOUT_CLASSIFICATION	then dom4j tuplizer if dom4j representation is available
WITHOUT_CLASSIFICATION	put the "standard" tuplizers into the tuplizer map first
WITHOUT_CLASSIFICATION	then handle any user-defined entity modes
WITHOUT_CLASSIFICATION	return currentid
WITHOUT_CLASSIFICATION	reset the id
WITHOUT_CLASSIFICATION	origin.adddestination( destination ) this was the cause of hhh-242 origin.settype( from_fragment ) set the parent node type so that the ast is properly formed. the destination node will have all the from text. the parent node is a collection join too (voodoo - see joinprocessor)
WITHOUT_CLASSIFICATION	reset the version
WITHOUT_CLASSIFICATION	the default is to simply not lazy fetch properties for now
WITHOUT_CLASSIFICATION	add the second join the one that ends in the destination table.
WITHOUT_CLASSIFICATION	temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	found a ctor but it was not publicly accessible so try to request accessibility
WITHOUT_CLASSIFICATION	determine the id getter and setter methods from the proxy interface (if any) determine all interfaces needed by the resulting proxy
WITHOUT_CLASSIFICATION	return getfactory().getsettings().getbytecodeprovider().getproxyfactoryfactory().buildproxyfactory()
WITHOUT_CLASSIFICATION	not final because proxy factory creation can fail
WITHOUT_CLASSIFICATION	superclass entity-name
WITHOUT_CLASSIFICATION	temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	init the aliases after initing the constructornode
WITHOUT_CLASSIFICATION	temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	legacy behavior (with no abstract attribute specified)
WITHOUT_CLASSIFICATION	get ready to start adding nodes.
WITHOUT_CLASSIFICATION	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	note this affects the return value!
WITHOUT_CLASSIFICATION	need to account for allowable '_' within the variant
WITHOUT_CLASSIFICATION	add the type to the list of returned sqlresulttypes.
WITHOUT_CLASSIFICATION	collection types
WITHOUT_CLASSIFICATION	convenience methods relating to operations across arrays of types
WITHOUT_CLASSIFICATION	lobs cannot be compared
WITHOUT_CLASSIFICATION	blobs are ignored by merge()
WITHOUT_CLASSIFICATION	value is the entity name
WITHOUT_CLASSIFICATION	early exit!
WITHOUT_CLASSIFICATION	generate id select fragment and then property select fragment for each expression just like generateselectfragments().
WITHOUT_CLASSIFICATION	todo!
WITHOUT_CLASSIFICATION	xml is the entity name
WITHOUT_CLASSIFICATION	special case this is the leaf of the containment graph even though not immutable
WITHOUT_CLASSIFICATION	tolerates nulls
WITHOUT_CLASSIFICATION	sqlresulttypelist
WITHOUT_CLASSIFICATION	metatype is assumed to be single-column type
WITHOUT_CLASSIFICATION	get all the select expressions (that we just generated) and render the select.
WITHOUT_CLASSIFICATION	look through the fromelement's children to find any collections of values that should be fetched
WITHOUT_CLASSIFICATION	return associationtype.foreign_key_to_parent this is better but causes a transient object exception
WITHOUT_CLASSIFICATION	use the lower case function name. remember whether we're in a select clause or not.
WITHOUT_CLASSIFICATION	ident might be the name of a class.
WITHOUT_CLASSIFICATION	todo!!!
WITHOUT_CLASSIFICATION	st.settimestamp( index new timestamp( cal.gettimeinmillis() ) cal ) jdk 1.5 only
WITHOUT_CLASSIFICATION	st.setdate( index new date( cal.gettimeinmillis() ) cal ) jdk 1.5 only
WITHOUT_CLASSIFICATION	both are timestamps
WITHOUT_CLASSIFICATION	at least one is a plain old date
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	if the corresponding sql value is null the reader we got is null as well
WITHOUT_CLASSIFICATION	fetch reader content up to the end - and put characters in a stringbuffer
WITHOUT_CLASSIFICATION	return stringbuffer content as a large string
WITHOUT_CLASSIFICATION	or types.longvarchar?
WITHOUT_CLASSIFICATION	not called at runtime so doesn't matter if its slow )
WITHOUT_CLASSIFICATION	todo
WITHOUT_CLASSIFICATION	chop off the rest of the tree.
WITHOUT_CLASSIFICATION	different nullability rules for pk/fk
WITHOUT_CLASSIFICATION	cache this
WITHOUT_CLASSIFICATION	only really need new array during semiresolve!
WITHOUT_CLASSIFICATION	forcefully remove leading ands from where fragments the grammar will handle adding them
WITHOUT_CLASSIFICATION	todo!!!!!!!
WITHOUT_CLASSIFICATION	create a new filters node as a parent of all filters
WITHOUT_CLASSIFICATION	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	public object instantiate(object parent sessionimplementor session) throws hibernateexception
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	versiontype impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ note simply returns null for seed() and next() as the only known application of binary types for versioning is for use with the timestamp datatype supported by sybase and sql server which are completely db-generated values
WITHOUT_CLASSIFICATION	lobs cannot be compared
WITHOUT_CLASSIFICATION	not really necessary i guess
WITHOUT_CLASSIFICATION	clobs are ignored by merge() operation
WITHOUT_CLASSIFICATION	we do not have to worry about queued additions to uninitialized collections since they can only occur for inverse collections!
WITHOUT_CLASSIFICATION	collections cannot be compared
WITHOUT_CLASSIFICATION	remember the uk value
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	processcollectionproperty(token q.getcollectionpersister(collectionrole) collectionname)
WITHOUT_CLASSIFICATION	we must use the "remembered" uk value since it is not available from the entityentry during assembly
WITHOUT_CLASSIFICATION	collections don't dirty an unversioned parent entity
WITHOUT_CLASSIFICATION	return false
WITHOUT_CLASSIFICATION	this just handles a particular case of component projection perhaps get rid of it and throw an exception
WITHOUT_CLASSIFICATION	note we avoid joining to the next table if the named property is just the foreign key value
WITHOUT_CLASSIFICATION	the key is the owning entity itself so get the id from the key
WITHOUT_CLASSIFICATION	if the original is a persistentcollection and that original was not flagged as dirty then reset the target's dirty flag here after the copy operation. </p> one thing to be careful of here is a "bare" original collection in which case we should never ever ever reset the dirty flag on the target because we simply do not know
WITHOUT_CLASSIFICATION	ignore subselect keywords
WITHOUT_CLASSIFICATION	copy elements into newly empty target collection
WITHOUT_CLASSIFICATION	for a null target or a target which is the same as the original we need to put the merged elements in a new collection
WITHOUT_CLASSIFICATION	by default just use an unanticipated capacity since we don't know how to extract the capacity to use from original here
WITHOUT_CLASSIFICATION	get the elements back into the target making sure to handle dirty flag
WITHOUT_CLASSIFICATION	check if collection is currently being loaded
WITHOUT_CLASSIFICATION	check if it is already completely loaded but unowned
WITHOUT_CLASSIFICATION	cache the actual id of the object not the value of the property-ref which might not be initialized
WITHOUT_CLASSIFICATION	todo!!!!!!!
WITHOUT_CLASSIFICATION	create a new collection wrapper to be initialized later
WITHOUT_CLASSIFICATION	some jdbc drivers erroneously return an empty array here for a null db value /
WITHOUT_CLASSIFICATION	our column span is the number of columns in the pk
WITHOUT_CLASSIFICATION	cannot batch fetch by unique key (property-ref associations)
WITHOUT_CLASSIFICATION	we already know current is not null
WITHOUT_CLASSIFICATION	the ids are fully resolved so compare them with isdirty() not ismodified()
WITHOUT_CLASSIFICATION	the owner of the association is not the owner of the id
WITHOUT_CLASSIFICATION	----------------------------------------------------------- constructors
WITHOUT_CLASSIFICATION	----------------------------------------------------- instance variables
WITHOUT_CLASSIFICATION	public static jdbcexception newjdbcexception(string string sqlexception root string sql) { string = string + " [" + sql + ']' log.error(string root) logexceptions(root) return new jdbcexception(string root sql) } public static jdbcexception newjdbcexception(string string sqlexception root) { log.error(string root) logexceptions(root) return new jdbcexception(string root) }
WITHOUT_CLASSIFICATION	--------------------------------------------------------- public methods
WITHOUT_CLASSIFICATION	compare the two maps for equality
WITHOUT_CLASSIFICATION	simple tests that require no synchronization
WITHOUT_CLASSIFICATION	sybase fail if we don't do that sigh
WITHOUT_CLASSIFICATION	handles things like a and b or c a and ( b or c ) not a and not b not ( a and b ) x between y and z (overloaded "and") x in ( a b c ) (overloaded brackets) not not a a is not null (overloaded "not") etc and expressions like foo = bar (maps to foo.id = bar.id) foo.bar = 'foo' (maps to foo.bar = 'foo') foo.bar.baz = 1.0 (maps to foo.bar = bar.id and bar.baz = 1.0) 1.0 = foo.bar.baz (maps to bar.baz = 1.0 and foo.bar = bar.id) foo.bar.baz = a.b.c (maps to bar.baz = b.c and foo.bar = bar.id and a.b = b.id) foo.bar.baz + a.b.c (maps to bar.baz + b.c and foo.bar = bar.id and a.b = b.id) ( foo.bar.baz + 1.0 ) < 2.0 (maps to ( bar.baz + 1.0 ) < 2.0 and foo.bar = bar.id)
WITHOUT_CLASSIFICATION	release the jdk internal caches everytime to ensure this plays nicely with destroyable class-loaders
WITHOUT_CLASSIFICATION	release the jdk internal caches everytime to ensure this plays nicely with destroyable class-loaders
WITHOUT_CLASSIFICATION	try to "pretty print" it
WITHOUT_CLASSIFICATION	otherwise just dump it
WITHOUT_CLASSIFICATION	its an interface so we can't really tell anything
WITHOUT_CLASSIFICATION	its an interface so we can't really tell anything
WITHOUT_CLASSIFICATION	use default behavior
WITHOUT_CLASSIFICATION	note early return
WITHOUT_CLASSIFICATION	the mru cache used to keep hard references to the most recently used query plans note lru here is a bit of a misnomer it indicates that lru entries are removed the actual kept entries are the mru entries
WITHOUT_CLASSIFICATION	we want to be able to just use the defaults if jndi environment properties are not supplied so don't put null in anywhere
WITHOUT_CLASSIFICATION	clone -----------------------------------------------------------------------
WITHOUT_CLASSIFICATION	serialize -----------------------------------------------------------------------
WITHOUT_CLASSIFICATION	stream closed in the finally
WITHOUT_CLASSIFICATION	stream closed in the finally
WITHOUT_CLASSIFICATION	deserialize -----------------------------------------------------------------------
WITHOUT_CLASSIFICATION	static methods only - hide constructor
WITHOUT_CLASSIFICATION	&& !('_'==character)
WITHOUT_CLASSIFICATION	returnign null!
WITHOUT_CLASSIFICATION	returnign null!
WITHOUT_CLASSIFICATION	includes last '.'
WITHOUT_CLASSIFICATION	+1 to include the following '.'
WITHOUT_CLASSIFICATION	impl note takes advantage of the fact that an escpaed single quote embedded within a quote-block can really be handled as two seperate quote-blocks for the purposes of this method
WITHOUT_CLASSIFICATION	first time we find match!
WITHOUT_CLASSIFICATION	entitynames may now include slashes for the representations classname may be an inner class
WITHOUT_CLASSIFICATION	wrapped iterators
WITHOUT_CLASSIFICATION	index of current iterator in the wrapped iterators array
WITHOUT_CLASSIFICATION	the current iterator
WITHOUT_CLASSIFICATION	the last used iterator
WITHOUT_CLASSIFICATION	it was a boolean expression
WITHOUT_CLASSIFICATION	public static object[] clone(class elementclass object[] array) {object[] result = (object[]) array.newinstance( elementclass array.length )system.arraycopy(array 0 result 0 array.length)return result}
WITHOUT_CLASSIFICATION	call this before any iterator method to make sure that the current iterator is not exhausted
WITHOUT_CLASSIFICATION	doable if needed
WITHOUT_CLASSIFICATION	set last used iterator here in case the user calls remove before calling hasnext() or next() (although they shouldn't)
WITHOUT_CLASSIFICATION	peek ahead
WITHOUT_CLASSIFICATION	if we reach the end of the string w/o finding the matching end that is an exception
WITHOUT_CLASSIFICATION	we have a placeholder spin forward till we find the end
WITHOUT_CLASSIFICATION	make sure spinning forward did not put us past the end of the buffer
WITHOUT_CLASSIFICATION	first try to locate this resource through the current context classloader.
WITHOUT_CLASSIFICATION	next try to locate this resource through this class's classloader
WITHOUT_CLASSIFICATION	next try to locate this resource through the system classloader
WITHOUT_CLASSIFICATION	anywhere else we should look?
WITHOUT_CLASSIFICATION	would need an identityset for this!
WITHOUT_CLASSIFICATION	arrays.aslist doesn't do primitive arrays
WITHOUT_CLASSIFICATION	faster?
WITHOUT_CLASSIFICATION	the name of a class
WITHOUT_CLASSIFICATION	its the listener class name
WITHOUT_CLASSIFICATION	allow 987654321
WITHOUT_CLASSIFICATION	default to element set if no elements() specified
WITHOUT_CLASSIFICATION	look for the instance by uuid
WITHOUT_CLASSIFICATION	in case we were deserialized in a different jvm look for an instance with the same name (alternatively we could do an actual jndi lookup here.)
WITHOUT_CLASSIFICATION	first lets determine whether to apply cglib or javassist based instrumentation
WITHOUT_CLASSIFICATION	make sure we don't override previous set values
WITHOUT_CLASSIFICATION	entirely optional!!
WITHOUT_CLASSIFICATION	its the listener instance (or better be)
WITHOUT_CLASSIFICATION	context.unbind(boundname)
WITHOUT_CLASSIFICATION	readresolveobject
WITHOUT_CLASSIFICATION	cfg.setproperty("hibernate.show_sql" "true")
WITHOUT_CLASSIFICATION	defensive convenience methods
WITHOUT_CLASSIFICATION	create the sessionfactory from hibernate.cfg.xml
WITHOUT_CLASSIFICATION	make sure you log the exception as it might be swallowed
WITHOUT_CLASSIFICATION	begin unit of work
WITHOUT_CLASSIFICATION	write html header
WITHOUT_CLASSIFICATION	handle actions
WITHOUT_CLASSIFICATION	print page
WITHOUT_CLASSIFICATION	write html footer
WITHOUT_CLASSIFICATION	end unit of work
WITHOUT_CLASSIFICATION	start the session to be used for this request
WITHOUT_CLASSIFICATION	make the session available to the session factory's "current context"
WITHOUT_CLASSIFICATION	pass control along to the rest of the processing chain
WITHOUT_CLASSIFICATION	remove session from "current context"
WITHOUT_CLASSIFICATION	eager fetch the collection so we can use it detached
WITHOUT_CLASSIFICATION	if we want to handle it bidirectional and detached we also need to load this collection with an eager outer-join fetch this time with criteria and not hql
WITHOUT_CLASSIFICATION	event anevent = (event) session .createcriteria(event.class).setfetchmode("participants" fetchmode.join) .add( expression.eq("id" eventid) ) .uniqueresult() eager fetch the colleciton so we can use it detached
WITHOUT_CLASSIFICATION	end of first unit of work
WITHOUT_CLASSIFICATION	or bidirectional safety method setting both sides aperson.addtoevent(anevent)
WITHOUT_CLASSIFICATION	begin second unit of work
WITHOUT_CLASSIFICATION	reattachment of aperson
WITHOUT_CLASSIFICATION	the getemailaddresses() might trigger a lazy load of the collection
WITHOUT_CLASSIFICATION	we need our tm so get it now and avoid doing other work if there is a problem
WITHOUT_CLASSIFICATION	don't hold the jbc node lock throughout the tx as that prevents reads and other updates
WITHOUT_CLASSIFICATION	don't hold the jbc node lock throughout the tx as that prevents reads and other updates
WITHOUT_CLASSIFICATION	jbc put a version in the node when it created as part of some internal operation. we are always newer but if the jbc version is > 1 something odd has happened
WITHOUT_CLASSIFICATION	swaldman 2006-08-28 define c3p0-style configuration parameters for properties with hibernate-specific overrides to detect and warn about conflicting declarations
WITHOUT_CLASSIFICATION	not null if the isolation level has been specified in the configuration file. otherwise it is left to the driver's default value.
WITHOUT_CLASSIFICATION	configured outside of hibernate (i.e. servlet container or java bean container already has proxool pools running and this provider is to just borrow one of these
WITHOUT_CLASSIFICATION	if you're closing down the connectionprovider chances are an is not a real big deal just warn
WITHOUT_CLASSIFICATION	(as is always optional for consistency with sql/oql)
WITHOUT_CLASSIFICATION	process the "new" hql style where aliases are assigned _after_ the class name or path expression ie. using the as construction
WITHOUT_CLASSIFICATION	the loaded owner will be set to null after the collection is removed so capture its value as the affected owner so it is accessible to both pre- and post- events
WITHOUT_CLASSIFICATION	is a primitive type invokespecial
WITHOUT_CLASSIFICATION	array of primitive type do nothing
WITHOUT_CLASSIFICATION	handle a path expression or class name that appears at the start in the "new" hql style or an alias that appears at the start in the "old" hql style
WITHOUT_CLASSIFICATION	handle <= >= != is not not between not in
WITHOUT_CLASSIFICATION	the loop ensures atomicity of the select + update even for no transaction or read committed isolation level
WITHOUT_CLASSIFICATION	transfer an explicitly defined entity name handle the lazy attribute
WITHOUT_CLASSIFICATION	keep the behavior consistent even for boundary usages
WITHOUT_CLASSIFICATION	keep the behavior consistent even for boundary usages
WITHOUT_CLASSIFICATION	get meta's from <joined-subclass>
WITHOUT_CLASSIFICATION	parameters on the property mapping should override parameters in the typedef
WITHOUT_CLASSIFICATION	fetch="join" overrides default laziness fetch="join" overrides default laziness
WITHOUT_CLASSIFICATION	note special case default to join and non-lazy for the "second join" of the many-to-many
WITHOUT_CLASSIFICATION	so we "clock over" on the first invocation
WITHOUT_CLASSIFICATION	state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	void setcomponenttuplizerfactory(componenttuplizerfactory componenttuplizerfactory) { this.componenttuplizerfactory = componenttuplizerfactory }
WITHOUT_CLASSIFICATION	element index -> id
WITHOUT_CLASSIFICATION	note that it might be better to iterate the snapshot but this is safe assuming the user implements equals() properly as required by the set contract!
WITHOUT_CLASSIFICATION	collections detect changes made via their public interface and mark themselves as dirty as a performance optimization
WITHOUT_CLASSIFICATION	essentially if the real session is closed allow any method call to pass through since the real session will complain by throwing an appropriate exception note that allowing close() above has the same basic effect but we capture that there simply to perform the unbind
WITHOUT_CLASSIFICATION	the default sqlexceptionconverter for all dialects is based on sqlstate since sqlerrorcode is extremely vendor-specific. specific dialects may override to return whatever is most appropriate for that vendor.
WITHOUT_CLASSIFICATION	only necessary for postgre < 7.4 httpanoncvs.postgresql.org/cvsweb.cgi/pgsql/doc/src/sgml/ref/create_sequence.sgml
WITHOUT_CLASSIFICATION	select topic syntax from information_schema.help where section like 'function%' order by section topic see also -> httpwww.h2database.com/html/functions.html
WITHOUT_CLASSIFICATION	registercolumntype(types.varbinary "character($l)") registercolumntype(types.blob "character($l)" ) for use prior to cp 11.0 registercolumntype(types.clob "character($l)" )
WITHOUT_CLASSIFICATION	the blob type requires a size arguement - this defaults to bytes - no arg defaults to 1 whole byte! other argument mods include k - kilobyte m - megabyte g - gigabyte. refer to the pbdevelopers guide for more info.
WITHOUT_CLASSIFICATION	we must return a valid rdms/rsa command from this method to prevent rdms/rsa from issuing error 400
WITHOUT_CLASSIFICATION	oracle driver reports to support getgeneratedkeys() but they only support the version taking an array of the names of the columns to be returned (via its returning clause). no other driver seems to support this overloaded version.
WITHOUT_CLASSIFICATION	add the comment nest the main query in an outer select add the rownnumber bit into the outer query select list
WITHOUT_CLASSIFICATION	you may still have other resultsets or update counts left to process here but you can't do it now or the resultset you just got will be closed
WITHOUT_CLASSIFICATION	note for object <-> sql datatype mappings see configuration manager | advanced | sql | system ddl datatype mappings tbdregistercolumntype(types.binary "binary($1)") changed 08-11-2005 jsl
WITHOUT_CLASSIFICATION	trim(end_keyword string-expression-1 from string-expression-2) use hibernate implementation "from" is one of the parameters they pass in position ?3 registerfunction( "trim" new sqlfunctiontemplate(hibernate.string "trim(?1 ?2 from ?3)") )
WITHOUT_CLASSIFICATION	whether this dialect has an identity clause added to the data type or a completely seperate identity data type
WITHOUT_CLASSIFICATION	according to both the ansi-sql and jpa specs trim takes a variable number of parameters between 1 and 4. at least one paramer (trimsource) is required. from the sql spec <trim function> = trim <left paren> <trim operands> <right paren> <trim operands> = [ [ <trim specification> ] [ <trim character> ] from ] <trim source> <trim specification> = leading | trailing | both if <trim specification> is omitted both is assumed. if <trim character> is omitted space is assumed
WITHOUT_CLASSIFICATION	/ prepare persisters and link them up with their cache region/access-strategy
WITHOUT_CLASSIFICATION	named queries
WITHOUT_CLASSIFICATION	this will throw an error if there's something wrong.
WITHOUT_CLASSIFICATION	does not handle arrays (thats ok cos they can't be lazy) or newly instantiated collections so we can do the cast
WITHOUT_CLASSIFICATION	collection deletions are a special case since update() can add deletions of collections not loaded by the session.
WITHOUT_CLASSIFICATION	we can do the cast since orphan-delete does not apply to 1. newly instantiated collections 2. arrays (we can't track orphans for detached arrays)
WITHOUT_CLASSIFICATION	if the natural-id is marked as non-mutable it is not retrieved during a normal database-snapshot operation
WITHOUT_CLASSIFICATION	watch out for a case where old is still referenced somewhere in the object graph! (which is a user error)
WITHOUT_CLASSIFICATION	slice to get the columns for this component property
WITHOUT_CLASSIFICATION	int result = 17 result = 37 result + type.hashcode() result = 37 result + ( value==null ? 0 value.hashcode() ) return result
WITHOUT_CLASSIFICATION	the collectionentry.isreached() stuff is just to detect any silly users who set up circular or shared references between/to collections.
WITHOUT_CLASSIFICATION	detached collection wrappers that get found + reattached during flush shouldn't be ignored
WITHOUT_CLASSIFICATION	the unique property value represented here may or may not be serializable so we do an explicit check here in order to generate a better error message
WITHOUT_CLASSIFICATION	if the version of a newly instantiated object is not the same as the version seed value use that as the unsaved-value
WITHOUT_CLASSIFICATION	ie. we never have to null out a reference to an uninitialized proxy
WITHOUT_CLASSIFICATION	ignore this row the collection is in process of being loaded somewhere further "up" the stack
WITHOUT_CLASSIFICATION	entity load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ currently not yet used
WITHOUT_CLASSIFICATION	should be ok performance-wise to generate new delegate instances for each request since these are locally stack-scoped. besides it makes the code much easier to read than the old transactionhelper stuff
WITHOUT_CLASSIFICATION	this implementation is supposed to tolerate incorrect unsaved-value mappings for the purpose of backward-compatibility
WITHOUT_CLASSIFICATION	this implementation is supposed to tolerate incorrect unsaved-value mappings for the purpose of backward-compatibility
WITHOUT_CLASSIFICATION	wrap up any new collections directly referenced by the object or its components
WITHOUT_CLASSIFICATION	remove any snapshot not really for memory management purposes but rather because it might now be stale and there is no longer any entityentry to take precedence this is now handled by removeentity() session.getpersistencecontext().removedatabasesnapshot(key)
WITHOUT_CLASSIFICATION	skip this check for composite-ids relating to dom4j entity-mode alternatively we could add a check to make sure the incoming id value is an instance of element
WITHOUT_CLASSIFICATION	upgrade the lock if necessary lock(result lockmode)
WITHOUT_CLASSIFICATION	now any collections that are initialized inside this block do not get updated - they are ignored until the next flush
WITHOUT_CLASSIFICATION	we must clone embedded composite identifiers or we will get back the same instance that we pass in
WITHOUT_CLASSIFICATION	sub-insertions should occur before containing insertion so try to do the callback now
WITHOUT_CLASSIFICATION	the entity is not associated with the session so try interceptor and unsaved-value
WITHOUT_CLASSIFICATION	scan the query string for class names appearing in the from clause and replace with all persistent implementors of the class/interface returning multiple query strings (make sure we don't pick up a class in the select clause!)
WITHOUT_CLASSIFICATION	save() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	evict() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	stops flush being called multiple times if this method is recursively called
WITHOUT_CLASSIFICATION	if it is an uninitialized proxy pointing with this session then when it is accessed the underlying instance will be "contained"
WITHOUT_CLASSIFICATION	generate an explicit join for the root dot node. the implied joins will be collected and passed up to the root dot node.
WITHOUT_CLASSIFICATION	a session is considered to contain an entity only if the entity has an entry in the session's persistence context and the entry reports that the entity has not been removed
WITHOUT_CLASSIFICATION	does the collection referenced by this fromelement specify an order-by attribute? if so attach it to the query's order-by
WITHOUT_CLASSIFICATION	and the token could be an identifer and the error is a mismatched token error
WITHOUT_CLASSIFICATION	if a where clause was specified in the update/delete query use it to limit the returned ids here
WITHOUT_CLASSIFICATION	int parameterstart = getwalker().getnumberofparametersinsetclause() list allparams = getidselectparameterspecifications() iterator whereparams = allparams.sublist( parameterstart allparams.size() ).iterator()
WITHOUT_CLASSIFICATION	default implementation if this node has a data type and that data type is not an association then this is scalar.
WITHOUT_CLASSIFICATION	resolve the lhs fully generate implicit joins. pass in the property name so that the resolver can discover foreign key (id) properties.
WITHOUT_CLASSIFICATION	if the propertytype is null and there isn't a parent just stop now there was a problem resolving the node anyway.
WITHOUT_CLASSIFICATION	we do not look for an existing join on the same path because it makes sense to join twice on the same collection role
WITHOUT_CLASSIFICATION	our parent is another dot node meaning we are being further dereferenced. thus we need to generate a join unless the parent refers to the associated entity's pk (because 'our' table would know the fk).
WITHOUT_CLASSIFICATION	public final currency getcurrency(int col) throws hibernateexception {return (currency) get(col)}
WITHOUT_CLASSIFICATION	here we have two possibilities 1) the property-name matches the explicitly identifier property name 2) the property-name matches the implicit 'id' property name
WITHOUT_CLASSIFICATION	set the unresolved path in this node and the parent. set the text for the parent.
WITHOUT_CLASSIFICATION	get the first child to be considered. sub-classes may do this differently in order to skip nodes that are not select expressions (e.g. distinct).
WITHOUT_CLASSIFICATION	if this is an entity and the property is the identifier property then use getidentifiertype(). note that the propertyname.equals( propertypath ) checks whether we have a component key reference where the component class property name is the same as the entity id property name if the two are not equal this is the case and we'd need to "fall through" to using the property mapping.
WITHOUT_CLASSIFICATION	for a subquery the alias to use depends on a few things (we already know this is not an overall select) 1) if this from_element represents a correlation to the outer-most query a) if the outer query represents a multi-table persister we need to use the given alias in anticipation of one of the multi-table executors being used (as this subquery will actually be used in the "id select" phase of that multi-table executor) b) otherwise we need to use the persister's table name as the column qualification 2) otherwise (not correlated) use the given alias
WITHOUT_CLASSIFICATION	not a collection? return the entity property mapping.
WITHOUT_CLASSIFICATION	collection of <many-to-any/> mappings used to circumvent the component-collection check below
WITHOUT_CLASSIFICATION	otherwise the destination node was implied by the from clause and the from clause processor will automatically add it in the right place.
WITHOUT_CLASSIFICATION	if the first identifier in the path referrs to the class alias (not the class name) then this is a correlated subselect. if it's a correlated sub-select use the existing table alias. otherwise generate a new one.
WITHOUT_CLASSIFICATION	check to see if our "proppath" actually represents a property on the persister
WITHOUT_CLASSIFICATION	an ident node can represent an index expression if the ident represents a naked property ref note this makes the assumption (which is currently the case in the hql-sql grammar) that the ident is first resolved itself (addrexpr -> resolve()). the other option if that changes is to call resolve from here but it is currently un-needed overhead.
WITHOUT_CLASSIFICATION	this uses a pathexpressionparser but notice that compound paths are not valid only bare names and simple paths
WITHOUT_CLASSIFICATION	if this is an implied join in a from clause then use ansi-style joining and set the flag on the fromelement that indicates that it was implied in the from clause itself.
WITHOUT_CLASSIFICATION	origin.adddestination(destination) add the query spaces.
WITHOUT_CLASSIFICATION	for an explicit many-to-many relationship add a second join from the intermediate (many-to-many) table to the destination table. also make sure that the from element's idea of the destination is the destination table.
WITHOUT_CLASSIFICATION	reset the node type because the rest of the system is expecting from_fragment all we wanted was for the factory to create the right sub-class. this might get reset again later on anyway to make the sql generation simpler.
WITHOUT_CLASSIFICATION	explicit = true this is an explict select. arraylist sqlresulttypelist = new arraylist()
WITHOUT_CLASSIFICATION	sqlresulttypelist.add( type ) generate the select expression.
WITHOUT_CLASSIFICATION	if the expression list has exactly one expression and the type of the expression is a collection then this might be a collection function such as index(c) or size(c).
WITHOUT_CLASSIFICATION	need to parse off the column qualifiers this is assuming (which is true as of now) that this is only used from update and delete hql statement parsing
WITHOUT_CLASSIFICATION	for regression testing against output from the old parser found it easiest to simply reorder the fromelements here into ascending order in terms of injecting them into the resulting sql ast in orders relative to those expected by the old parser this is definitely another of those "only needed for regression purposes". the syntheticandfactory then simply injects them as it encounters them.
WITHOUT_CLASSIFICATION	the uber-rule here is that we need to include subclass joins if the fromelement is in any way dereferenced by a property from the subclass table otherwise we end up with column references qualified by a non-existent table reference in the resulting sql
WITHOUT_CLASSIFICATION	classic translator does not support collection of ordinal param metadata
WITHOUT_CLASSIFICATION	the following variables are stacks that keep information about each subexpression in the list of nested subexpressions we are currently processing.
WITHOUT_CLASSIFICATION	the loop ensures atomicity of the select + update even for no transaction or read committed isolation level
WITHOUT_CLASSIFICATION	should not be able to reach last without maxposition being set unless there are no results
WITHOUT_CLASSIFICATION	we found it in the temp pc. should indicate we are in the midst of processing a result set containing eager fetches via join fetch
WITHOUT_CLASSIFICATION	do not use proxiesbykey since not all proxies that point to this session's instances are in that collection!
WITHOUT_CLASSIFICATION	if there is no tm configured we will not be able to access the javax.transaction.transaction object in order to register a synch anyway.
WITHOUT_CLASSIFICATION	since the result set cursor is always left at the first physical row after the "last processed" we need to jump back one position to get the key value we are interested in skipping
WITHOUT_CLASSIFICATION	true if this is a query and we are loading multiple instances of the same collection role otherwise this is a collectioninitializer and we are loading up a single collection or batch
WITHOUT_CLASSIFICATION	we don't need to worry about existing version being uninitialized because this block isn't called by a re-entrant load (re-entrant loads _always_ have lock mode none)
WITHOUT_CLASSIFICATION	add temp entry so that the next step is circular-reference safe - only needed because some types don't take proper advantage of two-phase-load (esp. components)
WITHOUT_CLASSIFICATION	assume we are in an auto-commit state
WITHOUT_CLASSIFICATION	log a message about potential connection leaks
WITHOUT_CLASSIFICATION	ps.close() just close it do not try to return it to the pool! note early exit!
WITHOUT_CLASSIFICATION	this has been shown to happen occasionally in rare cases when using a transaction manager + transaction-timeout where the timeout calls back through hibernate's registered transaction synchronization on a separate "reaping" thread. in cases where that reaping thread executes through this block at the same time the main application thread does we can get into situations where these cmes occur. and though it is not "allowed" per-se the end result without handling it specifically is infinite looping. so here we simply break the loop
WITHOUT_CLASSIFICATION	unfortunately this stuff can't be cached because it is per-invocation not constant for the querytranslator instance
WITHOUT_CLASSIFICATION	can't cache this stuff either (per-invocation) we are given a map of user-alias -> lock mode create a new map of sql-alias -> lock mode
WITHOUT_CLASSIFICATION	don't create a unique key 'cos some databases don't like a uk on nullable columns getcollectiontable().createuniquekey( getidentifier().getconstraintcolumns() )
WITHOUT_CLASSIFICATION	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is persister-centric and/or entityinfo-centric ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	isset = collection.isset() issorted = collection.issorted()
WITHOUT_CLASSIFICATION	lists arrays sets maps bags
WITHOUT_CLASSIFICATION	we finish all the "removes" first to take care of possible unique constraints and so that we can take better advantage of batching
WITHOUT_CLASSIFICATION	use a combination of foreign key columns and pk columns since the ordering of removal and addition is not guaranteed when a child moves from one parent to another
WITHOUT_CLASSIFICATION	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is persister-centric and/or entityinfo-centric ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	information about properties of this class including inherited properties (only really needed for updatable/insertable properties)
WITHOUT_CLASSIFICATION	all this only really needs to consider properties of this class not its subclasses but since we are reusing code used for sequential selects we use the subclass closure
WITHOUT_CLASSIFICATION	here we render the select column list based on the properties defined as being generated. for partial component generation we currently just re-select the whole component rather than trying to handle the individual generated portions.
WITHOUT_CLASSIFICATION	this is the root (versioned) table and we are using version-based optimistic locking if we are not updating the version also don't check it (unless this is a "generated" version column)!
WITHOUT_CLASSIFICATION	optimistic-lock="all" include all updatable properties optimistic-lock="dirty" include all properties we are updating this time
WITHOUT_CLASSIFICATION	this property belongs to the table and it is not specifically excluded from optimistic locking by optimistic-lock="false"
WITHOUT_CLASSIFICATION	check to see if the connection is in auto-commit mode (no connection means aggressive connection release outside a jta transaction context so must be autocommit mode)
WITHOUT_CLASSIFICATION	need to treat this as if it where optimistic-lock="all" (dirty does not make sense) first we need to locate the "loaded" state note it potentially could be a proxy so perform the location the safe way
WITHOUT_CLASSIFICATION	we always assume an instance with a null identifier or no identifier property is unsaved!
WITHOUT_CLASSIFICATION	need to use the identifier type of the collection owner since the incoming is value is actually the owner's id. using the collection's key type causes problems with property-ref keys
WITHOUT_CLASSIFICATION	allow any identifier quoted with backtick only recognizes identifiers beginning with a letter
WITHOUT_CLASSIFICATION	following doesn't handle (null not null) but unnecessary since this would mean all rows
WITHOUT_CLASSIFICATION	impl note due to the delayed population of setters (setters cached for performance) we really cannot pro0perly define equality for this transformer
WITHOUT_CLASSIFICATION	we need to dirty check collections since they can cause an owner version number increment
WITHOUT_CLASSIFICATION	return the id so we can use it to reset the proxy id return result
WITHOUT_CLASSIFICATION	optimizer = getfactory().getsettings().getbytecodeprovider().getreflectionoptimizer( mappedclass getternames setternames proptypes )
WITHOUT_CLASSIFICATION	cache the actual id of the object not the value of the property-ref which might not be initialized
WITHOUT_CLASSIFICATION	we now have the value of the property-ref we reference. however we need to dig a little deeper as that property might also be an entity type in which case we need to resolve its identitifier
WITHOUT_CLASSIFICATION	retrieve the value of the designated column in the current row of this resultset object as a java.io.reader object
WITHOUT_CLASSIFICATION	not absolutely necessary but helps for some equals()/hashcode() implementations
WITHOUT_CLASSIFICATION	this should be a call to resolve() not resolveidentifier() 'cos it might be a property-ref and we did not cache the referenced value
WITHOUT_CLASSIFICATION	if we have <tt>not-found="ignore"</tt> association mapped to a formula we always need to dirty check it so we can update the second-level cache
WITHOUT_CLASSIFICATION	can't just return null here since that would cause an owning component to become null
WITHOUT_CLASSIFICATION	for arrays replaceelements() may return a different reference since the array length might not match
WITHOUT_CLASSIFICATION	actual cache of the entries. soft references are used for both the keys and the values here since the values pertaining to the mru entries are kept in a seperate hard reference cache (to avoid their enqueuement/garbage-collection).
WITHOUT_CLASSIFICATION	as soon as we encounter our first letter return the substring from that position
WITHOUT_CLASSIFICATION	note expected in the syntax type=listenerclass ({sep}type=listenerclass) where {sep} is any whitespace or comma
WITHOUT_CLASSIFICATION	istransactioncallbackregistered denotes whether any hibernate transaction has registered as a callback against this jdbccontext only one such callback is allowed. directly serializing this value causes problems with jdbctransaction or really any transaction impl where the callback is local to the transaction instance itself since that transaction is not serialized along with the jdbccontext. thus we handle that fact here explicitly
WITHOUT_CLASSIFICATION	note that for sequential scrolling we make the assumption that the first persister element is the "root entity"
WITHOUT_CLASSIFICATION	we call getkeyfromresultset() here so that we can know the key value upon which to perform the breaking logic. however it is also then called from getrowfromresultset() which is certainly not the most efficient. but the call here is needed and there currently is no other way without refactoring of the doquery()/getrowfromresultset() methods
WITHOUT_CLASSIFICATION	this check is needed since processing leaves the cursor after the last physical row for the current logical row thus if we are after the last physical row this might be caused by either 1) scrolling to the last logical row 2) scrolling past the last logical row in the latter scenario the previous logical row really is the last logical row. in all other cases we should process back two logical records (the current logic row plus the previous logical row).
WITHOUT_CLASSIFICATION	and perform the load
WITHOUT_CLASSIFICATION	important reuse the same event instances for performance!
WITHOUT_CLASSIFICATION	this is a query and we are loading multiple instances of the same collection role
WITHOUT_CLASSIFICATION	we found a collection element in the result set
WITHOUT_CLASSIFICATION	we did not find a collection element in the result set so we ensure that a collection is created with the owner's identifier since what we have is an empty collection
WITHOUT_CLASSIFICATION	this is a collection initializer so we must create a collection for each of the passed-in keys to account for the possibility that the collection is empty and has no rows in the result set
WITHOUT_CLASSIFICATION	grab its state from the resultset and keep it in the session (but don't yet initialize the object itself) note that we acquire lockmode.read even if it was not requested
WITHOUT_CLASSIFICATION	a many-to-many decrement currentdepth here to allow join across the association table without exceeding max_fetch_depth (i.e. the "currentdepth - 1" bit)
WITHOUT_CLASSIFICATION	if not a composite key use "foo in (? ? ?)" for batching if no batch and not a composite key use "foo = ?"
WITHOUT_CLASSIFICATION	the user visible aliases which are unknown to the superclass these are not the actual "physical" sql aliases
WITHOUT_CLASSIFICATION	first look for a reference to a projection alias
WITHOUT_CLASSIFICATION	first look for a reference to a projection alias
WITHOUT_CLASSIFICATION	it does not refer to an alias of a projection look for a property
WITHOUT_CLASSIFICATION	determine if the collection elements are entities
WITHOUT_CLASSIFICATION	let return-propertys override whatever the persister has for aliases.
WITHOUT_CLASSIFICATION	translates an ast join type (i.e. the token type) into a joinfragment.xxx join type. @param astjointype the ast join type (from hqlsqltokentypes or sqltokentypes) @return a joinfragment.xxx join type. @see joinfragment @see sqltokentypes
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	public list getcollectionaliases() { return collectionaliases } public list getcollectionowners() { return collectionowners } public list getcollectionowneraliases() { return collectionowneraliases } public list getcollectionpersisters() { return collectionpersisters } public map getalias2persister() { return alias2persister } public boolean iscollectioninitializer() { return iscollectioninitializer } public list getpersisters() { return persisters } public map getalias2owneralias() { return alias2owneralias } public list getscalartypes() { return scalartypes } public list getscalarcolumnaliases() { return scalarcolumnaliases } public list getpropertyresults() { return propertyresults } public list getcollectionpropertyresults() { return collectionresults } public map getalias2return() { return alias2return }
WITHOUT_CLASSIFICATION	sqlqueryparser parser = new sqlqueryparser( sqlquery processor.getalias2persister() processor.getalias2return() aliases collaliases collpersisters suffixes collsuffixes ) sql = parser.process() namedparameterbindpoints = parser.getnamedparameters()
WITHOUT_CLASSIFICATION	include the discriminator and class-level where but not filters
WITHOUT_CLASSIFICATION	sqlaliassuffixes[i] = element.getcolumnaliassuffix()
WITHOUT_CLASSIFICATION	none because its the requested lock mode not the actual!
WITHOUT_CLASSIFICATION	at this point we have (drivingsqlalias) the sql alias of the driving table corresponding to the given user alias. however the driving table is not (necessarily) the table against which we want to apply locks. mainly the exception case here is joined-subclass hierarchies where we instead want to apply the lock against the root table (for all other strategies it just happens that driving and root are the same).
WITHOUT_CLASSIFICATION	the column doesnt exist at all.
WITHOUT_CLASSIFICATION	we have a mapped identifier property and the root of the incoming property path matched that identifier property
WITHOUT_CLASSIFICATION	we have an embedded composite identifier
WITHOUT_CLASSIFICATION	both many-to-one and one-to-one are represented as a property. entitypersister is relying on this value to determine "lazy fetch groups" in terms of field-level interception. so we need to make sure that we return true here for the case of many-to-one and one-to-one with lazy="no-proxy" impl note - lazy="no-proxy" currently forces both lazy and unwrap to be set to true. the other case we are extremely interested in here is that of lazy="proxy" where lazy is set to true but unwrap is set to false. thus we use both here under the assumption that this return is really only ever used during persister construction to determine the lazy property/field fetch groupings. if that assertion changes then this check needs to change as well. partially this is an issue with the overloading of the term "lazy" here
WITHOUT_CLASSIFICATION	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is tuplizer-centric but is passed a session ~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is tuplizer-centric but is passed a session ~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	roottablename = persistentclass.getroottable().getqualifiedname( factory.getdialect() factory.getdefaultcatalog() factory.getdefaultschema() )
WITHOUT_CLASSIFICATION	subclasses
WITHOUT_CLASSIFICATION	custom sql
WITHOUT_CLASSIFICATION	protected void initpropertypaths(final string pathfinal type typefinal string[] columnsfinal string[] formulatemplatesfinal mapping factory)throws mappingexception {addformulapropertypath(path type formulatemplates)initpropertypaths(path type columns formulatemplates factory)}
WITHOUT_CLASSIFICATION	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	custom sql (would be better if these were private)
WITHOUT_CLASSIFICATION	moved up from abstractentitypersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	aliases for identifier ( alias.id ) skip if the entity defines a non-id property named 'id'
WITHOUT_CLASSIFICATION	decide which resultset to get the property value from
WITHOUT_CLASSIFICATION	note it is conceptually possible that a usertype could map null to a non-null value so the following is arguable
WITHOUT_CLASSIFICATION	the contract of entitytuplizer.determineconcretesubclassentityname says that returning null is an indication that the specified entity-name (this.getentityname) should be used.
WITHOUT_CLASSIFICATION	need to use the identifier type of the collection owner since the incoming is value is actually the owner's id. using the collection's key type causes problems with property-ref keys
WITHOUT_CLASSIFICATION	cache these since they are stateless this one could even be static
WITHOUT_CLASSIFICATION	"as" is not in keywords
WITHOUT_CLASSIFICATION	--commented out by inspection (12/4/04 910 am) public abstract void addcondition(string alias string[] columns string condition)
WITHOUT_CLASSIFICATION	use the id column alias
WITHOUT_CLASSIFICATION	private list aliases = new arraylist()
WITHOUT_CLASSIFICATION	columns.add(columnname) aliases.add(tablealias)
WITHOUT_CLASSIFICATION	where fragment must be empty!
WITHOUT_CLASSIFICATION	revert to traditional hibernate behavior of setting initialpoolsize to minpoolsize unless otherwise specified with a c3p0.-style parameter.
WITHOUT_CLASSIFICATION	arbitrary on clause ignored!!
WITHOUT_CLASSIFICATION	might happen with a managed connection
WITHOUT_CLASSIFICATION	might happen with a managed connection
WITHOUT_CLASSIFICATION	if an exception occurs during flush user must call rollback()
WITHOUT_CLASSIFICATION	essentially 1) if we have a local (hibernate) transaction in progress and it already has the usertransaction cached use that usertransaction to determine the status. 2) if a transaction manager has been located use that transaction manager to determine the status. 3) finally as the last resort try to lookup the usertransaction via jndi and use that to determine the status.
WITHOUT_CLASSIFICATION	package
WITHOUT_CLASSIFICATION	swallow it (the transaction _was_ successful or successfully rolled back)
WITHOUT_CLASSIFICATION	ignore it
WITHOUT_CLASSIFICATION	we need to dirty check many-to-ones with not-found="ignore" in order to update the cache (not the database) since in this case a null entity reference can lose information
WITHOUT_CLASSIFICATION	create our own copy of the user-supplied tuplizer impl map
WITHOUT_CLASSIFICATION	regions can get instantiated in the course of normal work (e.g. a named query region will be created the first time the query is executed) so suspend any ongoing tx
WITHOUT_CLASSIFICATION	then handle any user-defined entity modes
WITHOUT_CLASSIFICATION	establish the region root node with a non-locking data version
WITHOUT_CLASSIFICATION	temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	note this is being used from the process of shutting down a sessionfactory. specific things to consider (1) this clearing of the region should not propagate to other nodes on the cluster (if any) this is the cache-mode-local option bit (2) really just trying a best effort to cleanup after ourselves lock failures etc are not critical here this is the fail-silently option bit
WITHOUT_CLASSIFICATION	need to extract the component values and check for subtype replacements
WITHOUT_CLASSIFICATION	we ignore minimalputoverride. jbosscache putforexternalread is already about as minimal as we can get it will promptly return if it discovers that the node we want to write to already exists
WITHOUT_CLASSIFICATION	for now just "re-flatten" the metamodel since this is temporary stuff anyway (hhh-1907)
WITHOUT_CLASSIFICATION	configure the cache to use our tm
WITHOUT_CLASSIFICATION	this solution would allow us to eliminate the owner arg to disassemble() but what if the collection was null and then later had elements added? seems unsafe session.getpersistencecontext().getcollectionentry( (persistentcollection) value ).getkey()
WITHOUT_CLASSIFICATION	make sure jbc doesn't look one up
WITHOUT_CLASSIFICATION	some collections are not lazy
WITHOUT_CLASSIFICATION	here we don't want to suspend the tx. if we do 1) we might be caching query results that reflect uncommitted changes. no tx == no wl on cache node so other threads can prematurely see those query results 2) no tx == immediate replication. more overhead plus we spread issue #1 above around the cluster
WITHOUT_CLASSIFICATION	return the (fully resolved) identifier value but do not resolve to the actual referenced entity instance note the owner of the association is not really the owner of the id!
WITHOUT_CLASSIFICATION	add a zero (or quite low) timeout option so we don't block. ignore any timeoutexception. basically we forego caching the query result in order to avoid blocking. reads are done with suspended tx so they should not hold the lock for long. not caching the query result is ok since any subsequent read will just see the old result with its out-of-date timestamp that result will be discarded and the db query performed again.
WITHOUT_CLASSIFICATION	impl note takes advantage of the fact that an escpaed single quote embedded within a quote-block can really be handled as two seperate quote-blocks for the purposes of this method
WITHOUT_CLASSIFICATION	we have the jbcwritemutex so no other local thread will be trying to write this key. it's possible here some remote thread has come in and changed the values again but since we are reading the values to write to jbc right now we know we are writing the latest values i.e. we don't assume that what we cached in entry.update() above is what we should write to jbc now. our write could be redundant i.e. we are writing what some remote thread just came in an wrote. there is a chance that yet another remote thread will update us and we'll then overwrite that later data in jbc. but all remote nodes will ignore that change in their localcache the only place it will live will be in jbc where it can only effect the initial state transfer values on newly joined nodes (i.e. populatelocalcache()).
WITHOUT_CLASSIFICATION	local cache so we use synchronization
WITHOUT_CLASSIFICATION	local cache so we use synchronization
WITHOUT_CLASSIFICATION	don't need to lock the cache here since if someone else inserted the same pk first the insert would fail
WITHOUT_CLASSIFICATION	we need to grab the version value from the entity otherwise we have issues with generated-version entities that may have multiple actions queued during the same flush
WITHOUT_CLASSIFICATION	we need to obtain the lock before any actions are executed since this may be an inverse="true" bidirectional association and it is one of the earlier entity actions which actually updates the database (this action is resposible for second-level cache invalidation only)
WITHOUT_CLASSIFICATION	postdelete after actually deleting a row record the fact that the instance no longer exists on the database (needed for identity-column key generation) and remove it from the session cache
WITHOUT_CLASSIFICATION	intentionally empty
DESIGN	todo what else to do here?
DESIGN	put() has nowait semantics is this really appropriate? note that it needs to be async replication never local or sync
DESIGN	'hibernate.temp.use_jdbc_metadata_defaults' is a temporary magic value. the need for it is intended to be alleviated with future developement thus it is not defined as an environment constant it is used to control whether we should consult the jdbc metadata to determine certain settings default values it is useful to not do this when the database may not be available (mainly in tools usage).
DESIGN	todo get sql rendering out of this package!
DESIGN	todo get sql rendering out of this package!
DESIGN	todo eventually merge this with treecache and just add optional opt-lock support there.
DESIGN	can happen because of the multiple ways cache.remove() can be invoked (
DESIGN	work around the "feature" where tree cache is validating the inserted node during the next transaction. no idea
DESIGN	fixme per the regionfactory class javadoc this constructor version should not be necessary. @param props the configuration properties
DESIGN	fixme per the regionfactory class javadoc this constructor version should not be necessary. @param props the configuration properties
DESIGN	fixme hacky workaround to jbcache-1202
DESIGN	fixme hacky workaround to jbcache-1202
DESIGN	todo i considered validating ts cache config here but decided to defer unti gettimestampscacheinstance() in case the cache is never actually used
DESIGN	todo is this a valid operation on a timestamps cache?
DESIGN	todo is this a valid operation on a timestamps cache?
DESIGN	todo why not use the timestamp in a dataversion?
DESIGN	can happen because of the multiple ways cache.remove() can be invoked (
DESIGN	work around the "feature" where tree cache is validating the inserted node during the next transaction. no idea
DESIGN	swaldman 2004-02-07 modify to allow null values to signify fall through to c3p0 poolconfig defaults
DESIGN	turn hibernate.c3p0. into c3p0. so c3p0 gets a chance to see all hibernate.c3p0.
DESIGN	todo this bit actually has to be called after all cascades! but since identity insert is called synchronously instead of asynchronously as other actions it isn't
DESIGN	todo reenable if we also fix the above todo
DESIGN	todo inefficient if that cache is just going to ignore the updated state!
DESIGN	we may be screwed here since the collection action is about to execute and we do not know the final owner key value
DESIGN	create an action that will evict collection and entity regions based on queryspaces (table names). todo cache the autodetected information and pass it in instead.
DESIGN	todo what else to do here?
DESIGN	todo modify the class definition if not already transformed
DESIGN	todo what else to do here?
DESIGN	this is called by sessionfactory irregardless we just disregard here could also add a check to sessionfactory to only conditionally call start
DESIGN	this is called by sessionfactory irregardless we just disregard here could also add a check to sessionfactory to only conditionally call stop
DESIGN	todo to handle concurrent writes correctly this should return a lock to the client
DESIGN	put() has nowait semantics is this really appropriate? note that it needs to be async replication never local or sync
DESIGN	todo to handle concurrent writes correctly the client should pass in a lock
DESIGN	todo assumes all collections disassemble to an array!
DESIGN	todo reuse the preloadevent
DESIGN	todo this was added to support initializing an entity's entityentry snapshot during reattach this should be refactored to instead expose a method to assemble a entityentry based on this state for return.
DESIGN	todo what is the implication of this?
DESIGN	use count as the default. this mimics the old behavior although none might be a better option moving forward in the case of callable
DESIGN	todo joinkeycolumnname & foreignkeycolumnname should be called either here or at a slightly higer level in the stack (to get all the information we need) right now hbmbinder does not support the
DESIGN	todo suck this into initlaziness!
DESIGN	we have to set up the table later!! yuck
DESIGN	todo better to degrade to lazy="false" if uninstrumented
DESIGN	todo again how should this work for non-pojo entities?
DESIGN	todo this is a bit of copy/paste from indexedcollection.createprimarykey()
DESIGN	this inner class implements a case statement.perhaps im being a bit over-clever here
DESIGN	todo bad implementation cos it depends upon ordering of mapping doc fixing this requires that collection/persistentclass gain access to the mappings reference from configuration (or the filterdefinitions map directly) sometime during configuration.buildsessionfactory (after all the types/filter-defs are known and before building persisters).
DESIGN	use of a stringbuffer to workaround a jdk bug
DESIGN	hack/workaround as sqlquery impl depend on having a key.
DESIGN	fixme get the persistentclass
DESIGN	fixme get the persistentclass
DESIGN	icky workaround for mysql bug
DESIGN	todo somehow add the newly created foreign keys to the internal collection
DESIGN	todo possibly relax that
DESIGN	todo possibly relax that
DESIGN	todo possibly relax that
DESIGN	use of a stringbuffer to workaround a jdk bug
DESIGN	use a degenerated strategy for backward compatibility
DESIGN	sets can be just a view of a part of another collection. do we need to copy it to be sure it won't be changing underneath us? ie. this.set.addall(set)
DESIGN	note that i parameter is now unused (delete it?)
DESIGN	just to help out during the load (ugly i know)
DESIGN	todo safe to interpret "map.remove(key) == null" as non-dirty?
DESIGN	yick! need this for proper serialization/deserialization handling
DESIGN	todo get sql rendering out of this package!
DESIGN	todo get sql rendering out of this package!
DESIGN	yuck!
DESIGN	todo get sql rendering out of this package!
DESIGN	todo not sure this is correct could not find docs on how to do this.
DESIGN	hsql has no blob/clob support . but just put these here for now!
DESIGN	does this need holdlock also? return tablename + " with (updlock rowlock holdlock)"
DESIGN	sql-server at least needed this dropped after use strange!
DESIGN	todo is there really any reason to kkeep trying if this fails once?
DESIGN	tbd should this be varbinary($1)? registercolumntype(types.varbinary "binary($1)")
DESIGN	is it necessary to register %exact since it can only appear in a where clause?
DESIGN	xmlforest requires a new kind of function constructor
DESIGN	does this dialect support the alter table syntax?
DESIGN	do we need to qualify index names with the schema name?
DESIGN	does this dialect support the unique column syntax?
DESIGN	does this dialect support check constraints?
DESIGN	do we need to drop constraints before dropping tables in this dialect?
DESIGN	does this dialect support the for update syntax?
DESIGN	does this dialect support the oracle-style for update nowait syntax?
DESIGN	does this dialect support for update of allowing particular rows to be locked?
DESIGN	note there is a wierd implementation in the client side
DESIGN	todo never reached since gettypename() actually throws an exception!
DESIGN	todo should we additionally check the current isolation mode explicitly?
DESIGN	todo remove this and just have subclasses use isolater/isolatedwork directly
DESIGN	todo should orphans really be deleted during lock???
DESIGN	orphans should not be deleted during merge??
DESIGN	orphans should not be deleted during copy??
DESIGN	i suppose?
DESIGN	todo suck this logic into the collection!
DESIGN	todo an alternative is to check if the owner has changed if it hasn't then get the id from collection.getowner()
DESIGN	todorefactor + make this method private
DESIGN	todo we can actually just determine this from the incoming entityentry-s
DESIGN	todo should this be an initializeentityeventlistener??? (watch out for performance!)
DESIGN	todo better to pass the id in as an argument?
DESIGN	todo potentially look at optimizing these two arrays
DESIGN	trim done to workaround stupid oracle bug that cant handle whitespaces before a { in a sp
DESIGN	trim done to workaround stupid oracle bug that cant handle whitespaces before a { in a sp
DESIGN	todo temporary
DESIGN	todo not quite sure about the full implications of this!
DESIGN	todo not quite sure about the full implications of this!
DESIGN	todo ugly here
DESIGN	this is kinda the best we can do
DESIGN	todo this needn't exclude subclasses
DESIGN	todo need map? the prob is a proper key right?
DESIGN	todo i'd much rather have this done from #endloadingcollection(collectionpersisterloadingcollectionentry)
DESIGN	todo hack!!! note here we cleanup the load context when we have no more local lce entries. this "works" for the time being because really only the collection load contexts are implemented. long term this cleanup should become part of the "close result set" processing from the (sandbox/jdbc) jdbc-container code.
DESIGN	todo should really move this log statement to collectiontype where this is used from
DESIGN	todo keep seperate notions of qt[] here for shallow/non-shallow queries
DESIGN	todo add this info to the translator and aggregate it here
DESIGN	todo move into collection type so we can use polymorphism!
DESIGN	todo should we check the current isolation mode explicitly?
DESIGN	todo suck into event class
DESIGN	do we even really need this? the update will fail anyway.
DESIGN	hum should we cascade anyway? throw an exception? fine like it is?
DESIGN	todo would it be better to do a refresh from db?
DESIGN	todo we use two visitors here inefficient!
DESIGN	this class has no proxies (so do a shortcut)
DESIGN	postload is needed for ejb3 todo reuse the postloadevent
DESIGN	todo put this stuff back in to read snapshot from the second-level cache (needs some extra work)
DESIGN	null or brand new collection this will also (inefficiently) handle arrays which have no snapshot so we can't do any better
DESIGN	todo is this 100% correct?
DESIGN	todo iteratively get transient entities and retry merge until one of the following conditions 1) transientcopycache.size() == 0 2) transientcopycache.size() is not decreasing and copycache.size() is not increasing todo find out if retrying can add entities to copycache (don't think it can) for now just retry once throw transientobjectexception if there are still any transient entities
DESIGN	entity name will not be available for non-pojo entities todo cache the entity name somewhere so that it is available to this exception
DESIGN	todo we should throw an exception if we really know for sure that this is a detached instance rather than just assuming throw new staleobjectstateexception(entityname id)
DESIGN	todo perhaps we should additionally require that the incoming entity version be equivalent to the defined unsaved-value?
DESIGN	perhaps this should be an exception since it is only ever used in the above method?
DESIGN	put a placeholder in entries so we don't recurse back and try to save() the same object again. question should this be done before onsave() is called? likewise should it be done before onupdate()?
DESIGN	todo merge into one method!
DESIGN	todo refactor to .sql package
DESIGN	provides query splitting methods which were originally in querytranslator. <br> todo this will need to be refactored at some point. @author josh
DESIGN	todo this is one of the ugliest and most fragile pieces of code in hibernate.
DESIGN	todo temporary needed because currently persister is the one that creates and renders the join fragments for inheritence hierarchies
DESIGN	todo better way?!?
DESIGN	not possible to simply re-use the versionpropertynode here as it causes oom errors due to circularity (
DESIGN	todothis is only needed during compilation .. can we eliminate the instvar?
DESIGN	todo this is a bit dodgy come up with a better way to check this (plus see above comment)
DESIGN	even here if only properties mapped to the "base table" are referenced in the set and where clauses this could be handled by the basicdelegate. todo decide if it is better performance-wise to perform that check or to simply use the multitableupdatedelegate
DESIGN	todo switch statements are always evil! we already had bugs because of forgotten token types. use polymorphism for this!
DESIGN	todo we really need to be able to deal with component paths here also this is difficult because the hql-sql grammar expects all those node types to be fromreferencenodes. one potential fix here would be to convert the intoclause to just use a fromclause/fromelement combo (as a child of the insertstatement) and move all this logic into the insertstatement. that's probably the easiest approach (read least amount of changes to the grammar and code) but just doesn't feel right as then an insert would contain 2 from-clauses
DESIGN	really there are two situations where it should be ok to allow the insertion into properties defined on a superclass 1) union-subclass with an abstract root entity 2) discrim-subclass #1 is handled already because of the fact that unionsubclasspersister alreay always returns 0 for this call we may want to disallow it for discrim-subclass just for consistency-sake (currently does not work anyway)
DESIGN	yuck!
DESIGN	implicit joins are always(?) ok to reuse
DESIGN	todo we may also want to check that the types here map to exactly one column/jdbc-type can't think of a situation where arithmetic expression between multi-column mappings makes any sense.
DESIGN	we do not know either type blind guess!
DESIGN	todo used to be exprnoparens! was this needed?
DESIGN	todo replace this with a more elegant solution.
DESIGN	todo should this really return null? if not figure out something better to do here.
DESIGN	todo get sql rendering out of this package!
DESIGN	yuck!
DESIGN	ignore it the incoming property could not be found so we cannot be sure what to do here. at the very least the safest is to simply not apply any dereference toggling
DESIGN	todo most of below was taken verbatim from dotnode should either delegate this logic or super-type it
DESIGN	otherwise a trim-specification and/or a trim-character have been specified we need to decide which options are present and "do the right thing" should leading trim-characters be trimmed? should trailing trim-characters be trimmed? the trim-character the trim-source
DESIGN	todo we should really just collect these from the various selectexpressions rather than regenerating here
DESIGN	todo is this a bit ugly?
DESIGN	need a better way to define the suffixes here
DESIGN	todo something much better - look at the type of the other expression! todo have comparisonexpression and/or arithmeticexpression rules complete the resolution of boolean nodes.
DESIGN	todo what amount of significant digits need to be supported here? - from the decimalformat docs [significant digits] = [minimum integer digits] + [maximum fraction digits]
DESIGN	needed the "clazz_" check to work around union-subclasses todo is there a way to tell whether a persister is truly discrim-column based inheritence?
DESIGN	we should actually rework this class to not implement parser and just process path expressions in the most convenient way.
DESIGN	the class is now way to complex!
DESIGN	todo get sql rendering out of here
DESIGN	todo is there a better way?
DESIGN	must be done here because of side-effect! yuck
DESIGN	name from a super query (a bit inelegant that it shows up here)
DESIGN	we should reengineer this class so that rather than the current ad - hoc linear approach to processing a stream of tokens we instead build up a tree of expressions.
DESIGN	this is ugly here but needed because its a subquery
DESIGN	unhappy about this being public is there a better way?
DESIGN	make sure this is a defined parameter and check the incoming value type todo what should be the actual exception type here?
DESIGN	todo this constructor form is only used from constructor directly below us can it go away?
DESIGN	todo copy/paste from sessionimpl pull up!
DESIGN	todo should remove this exposure and have all references to the session's batcher use the connectionmanager.
DESIGN	todo should this get moved to persistentcontext? logically is persistentcontext the "thing" to which an interceptor gets attached?
DESIGN	todo what type?
DESIGN	todo should seriously consider not allowing a txn to begin from a child session can always route the request to the root session
DESIGN	short-circuit for performance
DESIGN	not absolutely necessary but does help with aggressive release
DESIGN	todo remove these last two as batcher is no longer managing connections
DESIGN	work around a bug in all known connection pools.
DESIGN	todo make this the factory for "entity mode related" sessions also means making this the target of transaction-synch and the thing that knows how to cascade things between related sessions at that point perhaps this thing is a "sessioncontext" and connectionmanager is a "jdbccontext"? a "sessioncontext" should live in the impl package
DESIGN	todo does this really need to be here? does the collection already have it's own up-to-date snapshot?
DESIGN	todo the i==entityspan-1 bit depends upon subclass implementation (very bad)
DESIGN	this form used from annotations (?). essentially the same as the above using a resultset-mapping reference but without cachemode readonly and comment. fixme annotations do not use it so it can be remove from my pov @deprecated @param query the sql query string @param resultsetref the result-set-mapping name @param queryspaces any specified query spaces (used for auto-flushing) @param cacheable whether the query results are cacheable @param cacheregion if cacheable the region into which to store the results @param timeout a jdbc-level timeout to be applied @param fetchsize a jdbc-level fetch-size to be applied @param flushmode the flush mode to use for this query @param parametertypes parameter type map @param callable does the query string represent a callable object (i.e. proc)
DESIGN	todo add the notion of enabled filters to the cachekey to differentiate filtered collections from non-filtered but cachekey is currently used for both collections and entities would ideally need to define two seperate ones currently this works in conjuction with the check on defaultinitializecollectioneventhandler.initializecollectionfromcache() (which makes sure to not read from cache with enabled filters). early exit!!!!!
DESIGN	for sets we should end the collection load after resolving the entities since we might call hashcode() on the elements todo or we could do this polymorphically and have two different operations implemented differently for arrays
DESIGN	this is not very nice (and quite slow)
DESIGN	use of trim() here is ugly?
DESIGN	todo this is too conservative if all preceding joins were also inner joins we could use an inner join here
DESIGN	todo look at the owning property and check that it isn't lazy (by instrumentation)
DESIGN	todo inefficient
DESIGN	why does this matter?
DESIGN	from the collection of associations locate oja for the manytoone corresponding to this persister to fully define the many-to-many we need that oja so that we can use its alias here todo is there a better way here?
DESIGN	todo this class depends directly upon criteriaimpl in the impl package add a criteriaimplementor interface
DESIGN	todo add a criteriaimplementor interface this class depends directly upon criteriaimpl in the impl package
DESIGN	todo not so sure this is needed
DESIGN	meant to handle dynamic instantiation queries(copy from queryloader)
DESIGN	todo the order in which entities are saved may matter (e.g. a particular transient entity may need to be saved before other transient entities can be saved keep retrying the batch of transient entities until either 1) there are no transient entities left in transientcopycache or 2) no transient entities were saved in the last batch for now just run through the transient entities and retry the merge
DESIGN	todo this might really even be moved into the cfg package and used as the basis for all things which are configurable.
DESIGN	todo currently expects that the individual with expressions apply to the same sql table join. this may not be the case for joined-subclass where the property values might be coming from different tables in the joined hierarchy. at some point we should expand this to support that capability. however that has some difficulties 1) the biggest is how to handle ors when the individual comparisons are linked to different sql joins. 2) here we would need to track each comparison individually along with the join alias to which it applies and then pass that information back to the fromelement so it can pass it along to the joinsequence
DESIGN	this function has a template -> restore output apply the template and write the result out todo downcast to avoid using an interface? yuck.
DESIGN	at some point the generate phase needs to be moved out of here because a single object-level dml might spawn multiple sql dml command executions. possible to just move the sql generation for dml stuff but for consistency-sake probably best to just move responsiblity for the generation phase completely into the delegates (queryloader/statementexecutor) themselves. also not sure why queryloader currently even has a dependency on this at all does it need it? ideally like to see the walker itself given to the delegates directly
DESIGN	get the right object from the list would it be easier to just call getentity() ??
DESIGN	todo should we just collect these like with the collections above?
DESIGN	todo better to handle dynamic filters through implicit dynamicfilterparameterspecification see the discussion there in dynamicfilterparameterspecification's javadocs as to why it is currently not done that way.
DESIGN	/ used only for regression testing!!!! todo obviously get rid of all this junk ) /
DESIGN	create an index on the key columns??
DESIGN	todo deprecated remove eventually
DESIGN	create an index on the key columns??
DESIGN	todo improve this hack!
DESIGN	inheritance cycle detection (paranoid check)
DESIGN	todo remove use of instanceof!
DESIGN	shortcut
DESIGN	todo handle the case of a foreign key to something other than the pk
DESIGN	create an index on the key columns??
DESIGN	todo remove
DESIGN	todo remove
DESIGN	todo remove
DESIGN	todo throw exception?
DESIGN	todo throw exception? maybe warn if not the same?
DESIGN	todo make entitypersister not depend on sessionfactoryimplementor interface if possible
DESIGN	todo is there a more elegant way than downcasting?
DESIGN	todo encapsulate the protected instance variables!
DESIGN	should indicate that we are processing an insert/update/delete query with a subquery implied via a collection property function. here we need to use the table name itself as the qualification alias. todo verify this works for all databases todo is this also the case in non-"indexed" scenarios?
DESIGN	todo copy/paste from insertrows()
DESIGN	todo copy/paste from recreate()
DESIGN	should this interface extend propertymapping?
DESIGN	ie. the subquery! yuck!
DESIGN	todo move to .sql package!!
DESIGN	todo code duplication with singletableentitypersister
DESIGN	todo it would be really really nice to use this to also model components!
DESIGN	todo two hashmap lookups here is one too many
DESIGN	todo code duplication with joinedsubclassentitypersister
DESIGN	perhaps not really necessary
DESIGN	note this assumes something about how propertyselectfragment is implemented by the subclass! was tounqotedaliasstrings( getidentifercolumnnames() ) before - now tried to remove that unqoting and missing aliases..
DESIGN	note this assumes something about how propertyselectfragment is implemented by the subclass! was tounqotedaliasstrings( getdiscriminatorcolumnname() ) before - now tried to remove that unqoting and missing aliases..
DESIGN	todo should we use select .. for update?
DESIGN	todo optimize this better!
DESIGN	todo should we allow suffixes on these ?
DESIGN	this is really ugly but necessary
DESIGN	ugly little workaround for fact that createuniquekeyloaders() does not handle component properties
DESIGN	todo disable batch loading if lockmode > read?
DESIGN	append the sql to return the generated identifier todo suck into insert
DESIGN	todo i am not so sure about the exception handling in this bit!
DESIGN	todo is this really necessary????
DESIGN	todo move to .sql package and refactor with similar things!
DESIGN	todo implement functionality this might be painful to do here as the "join post processing" for the subquery has already been performed (meaning that for theta-join dialects the join conditions have already been moved over to the where clause). a "simple" solution here might to perform "join post processing" once for the entire query (including any subqueries) at one fell swoop
DESIGN	todo this eventually needs to be removed
DESIGN	kinda ugly but needed for collections with a "." node mapping
DESIGN	is this ok?
DESIGN	todo perhaps this should be some other runtimeexception
DESIGN	todo make this a bit nicer
DESIGN	yuck
DESIGN	todo we should provide some way to get keys of collection of statistics to make it easier to retrieve from a gui perspective
DESIGN	@return collection removal fixme even if isinverse="true"?
DESIGN	todo will need reference to session factory to fully complete hhh-1907
DESIGN	todo currently keeps getters and setters (instead of propertyaccessors) because of the way getgetter() and getsetter() are implemented currently yuck!
DESIGN	todo redesign how propertyaccessors are acquired
DESIGN	todo yuck!!!
DESIGN	todo yuck!!! fix after hhh-1907 is complete
DESIGN	todo need to make the majority of this functionality into a top-level support class for custom impl support
DESIGN	todo design new lifecycle for proxyfactory
DESIGN	todo would be nice to handle proxy classes elegantly!
DESIGN	todo copy/paste from manytoonetype
DESIGN	todo should this be session.instantiate(persister )?
DESIGN	todo this is a bit arbitrary expose a switch to the user?
DESIGN	todo implement caching?! proxies?!
DESIGN	todo is this right??
DESIGN	is this really necessary?
DESIGN	todo move these to a new joinabletype abstract class extended by entitytype and persistentcollectiontype
DESIGN	todo this is very suboptimal for some subclasses (namely components) since it does not take advantage of two-phase-load
DESIGN	worrying about proxies is perhaps a little bit of overkill here
DESIGN	note very hackish workaround!! todo fix this so it will work for non-pojo entity mode
DESIGN	todo fix this so it will work for non-pojo entity mode
DESIGN	we would probably refactor to have logicparser (builds a tree of simple expressions connected by and or not) expressionparser (translates from oo terms like foo foo.bar foo.bar.baz to sql terms like foos.id foos.bar_id etc) and pathexpressionparser (which does much the same thing it does now)
DESIGN	todo this is a little inefficient don't need to do a whole deep replaceelements() call
DESIGN	workaround for weblogic
DESIGN	todo this dependency is kinda bad
DESIGN	ick!
DESIGN	short cut check
DESIGN	todo move to stringhelper?
DESIGN	yukky! don't you have subclasses for that! todo race conditions can happen here
DESIGN	todo we probably should have a statisticsnotpublishedexception to make it clean
DESIGN	fixme hack to work around fact that calling node added = root.addchild( fqn ) doesn't properly set the version on the node
DESIGN	todo i considered validating the presence of the ts cache here but decided to defer unti getquerycacheinstance() in case the cache is never actually used
DESIGN	need to do that here rather than in the save event listener to let the post insert events to have a id-filled entity when identity is used (ejb3)
DESIGN	todo simply remove this override if we fix the above todos
DESIGN	this is used by sessionfactoryimpl to hand to the generated sessionimpl was the only reason i could see that we cannot just use null as settings.cacheprovider
DESIGN	this is done here 'cos we might only know the type here (ugly!) todo improve this a lot
DESIGN	todo would love to have this work on a notification basis where the successful binding of an entity/subclass would emit a notification which the extendsqueue entries could react to
DESIGN	todo not sure the best way to handle this. the non-performant way
DESIGN	would be better to use the element-type to determine whether the old and the new are equal here the problem being we do not necessarily have access to the element type in all cases
DESIGN	this next bit is to allow for both unsaved-value="negative" and for "older" behavior where version number did not get seeded if it was already set in the object todo shift it into unsaved-value strategy
DESIGN	merges don't cascade to uninitialized collections todo perhaps this does need to cascade after all.
DESIGN	todo an alternative is to check if the owner has changed if it hasn't then return collection.getowner()
DESIGN	it is possible that the tree-walking in outerjoinloader can get to an association defined by a subclass in which case the property-ref might refer to a property defined on a subclass of the current class in this case the table name is not known - this temporary solution assumes that the property-ref refers to a property of the subclass table that the association belongs to (a reasonable guess) todo fix this add outerjoinloadable.getsubclasspropertytablename(string propertyname)
DESIGN	this only works because collection entries are kept in a sequenced map by persistence context (maybe we should do like entities and keep a separate sequences set) todo calling entryset on an identitymap is slow!!
DESIGN	important to account for newly saved entities in query todo some kind of check for new status
DESIGN	brand new collection todo or an array!! we can't lock objects with arrays now??
DESIGN	todo if object was an uninitialized proxy this is inefficient resulting in two sql selects
DESIGN	before cascade! todo should this be session.instantiate(persister )?
DESIGN	todo absolutely no usages of this constructor form can it go away?
DESIGN	todo need to find a clean way to handle the "event source" role a seperate classs responsible for generating/dispatching events just duplicates most of the session methods passing around seperate reto interceptor factory actionqueue and persistentcontext is not manageable
DESIGN	todo remove
DESIGN	aliasrefnode.resolve( false false aliasrefnode.gettext() ) todo is it kosher to do it here? todo is it kosher to do it here?
DESIGN	no explicit select expression render the id and properties projection lists for every persister in the from clause into a single 'token node'. todo the only reason we need this stuff now is collection filters we should get rid of derived select clause completely!
DESIGN	todo an optimization here would be to consider cascade deletes and not gen those delete statements the difficulty is the ordering of the tables here vs the cascade attributes on the persisters -> the table info gotten here should really be self-contained (i.e. a class representation defining all the needed attributes) then we could then get an array of those
DESIGN	todo get sql rendering out of here create an ast for the join expressions. use the sql generator grammar to generate the sql text for the index expression.
DESIGN	todo this really needs to be delayed unitl after we definitively know all node types where this is currently a problem is parameters for which where we cannot unequivocally resolve an expected type
DESIGN	todo figure out a better way to get the from elements in a proper tree structure. if this is not the destination of a many-to-many add it as a child of the origin.
DESIGN	work around that crazy issue where the tree contains "empty" fromelements (no text) afaict this is caused by fromelementfactory.createcollectionjoin()
DESIGN	todo this class does too many things! we need a different kind of path expression parser for each of the diffferent ways in which path expressions can occur
DESIGN	real hacky used to count the nesting of parentheses
DESIGN	todo would be really nice to cache the spec on the query-def so as to not have to re-calc the hash currently not doable though because of the resultset-ref stuff
DESIGN	for arrays we should end the collection load before resolving the entities since the actual array instances are not instantiated during loading todo or we could do this polymorphically and have two different operations implemented differently for arrays
DESIGN	polymorphism not really handled completely correctly perhapswell actually its ok assuming that the entity name used in the lookup is the same as the the one used here which it will be
DESIGN	todo should "record" how many properties we have reffered to - and if we don't get'em'all we throw an exception! way better than trial and error )
DESIGN	very important!!!! - this class needs to be free of any static references to any cglib or javassist classes. otherwise users will always need both on their classpaths no matter which (if either) they use. another option here would be to remove the hibernate.ispropertyinitialized() method and have the users go through the sessionfactory to get this information.
DESIGN	todo is it really neceassry to provide configuration to collectionpersisters ? should it not be enough with associated class ? or why does entitypersister's not get access to configuration ? the only reason i could see that configuration gets passed to collection persisters is so that they can look up the dom4j node name of the entity element in case no explicit node name was applied at the collection element level. are you kidding me? trivial to fix then. just store and expose the node name on the entity persister (which the collection persister looks up anyway via other means).
DESIGN	for backward compatibility allow a set with no not-null element columns using all columns in the row locater sql todo create an implicit not null constraint on all cols?
DESIGN	spaces todo i'm not sure but perhaps we should exclude abstract denormalized tables?
DESIGN	workaround for backward compatibility of sets with no not-null columns assume all columns are used in the row locator sql
DESIGN	note that this method could easily be moved up to basicentitypersister if we ever needed to reuse it from other subclasses
DESIGN	index += getpropertycolumnspan( i ) todo this is kinda slow
DESIGN	todo need some caching scheme? really comes down to decision regarding amount of state (if any) kept on propertyaccessors
DESIGN	todo here is why we need to make bytecode provider global ( todo again fix this after hhh-1907 is complete
DESIGN	todo yuck! this is not quite good enough it's a quick hack around the problem of having a to-one association that refers to an embedded component
DESIGN	for dom4j "collections" only todo it would be better if this was done at the higher level by printer
DESIGN	would be great to move all this below here into another method that could also be used from the new scrolling stuff. would need to change the way the max-row stuff is handled (i.e. behind an interface) so that i could do the control breaking at the means to know when to stop
DESIGN	todo can we always use the "null property" approach for everything?
DESIGN	polymorphism comment above
DESIGN	some messy complex stuff here since createcriteria() can take an aliased path or a path rooted at the creating criteria instance
DESIGN	todo really bad evil hack to fix!!!
DESIGN	ugly hack for cases like "elements(foo.bar.collection)" (multi-part path expression ending in elements or indices)
DESIGN	try block is a hack around fact that currently tuplizers are not given the opportunity to resolve a subclass entity name. this allows the (we assume custom) interceptor the ability to influence this decision if we were not able to based on the given entityname
DESIGN	/ hack alert !!!!!!!!!!!!!!!!!!!!!!!!!!!! attempt to work around "ghost" impliedfromelements that occasionally show up between the actual things being joined. this consistently occurs from index nodes (at least against many-to-many). not sure if there are other conditions essentially look-ahead to the next fromelement that actually writes something to the sql
DESIGN	init the table here instead of earlier so that we can get a quoted table name todo would it be better to simply pass the qualified table name instead of splitting it up into schema/catalog/table names
DESIGN	todo would be great to have a mapping#hasnonidentifierpropertynamedid method i don't believe that mapping#getreferencedpropertytype accounts for the identifier property so if it returns for a property named 'id' then we should have a non-id field named id
DESIGN	todo is this really necessary????
DESIGN	todo ideally we need the construction of propertyaccessor to take the following 1) entitymode 2) entitymode-specific data (i.e. the classname for pojo entities) 3) property-specific data based on the entitymode (i.e. property-name or dom4j-node-name) the easiest way with the introduction of the new runtime-metamodel classes would be the the following predicates 1) propertyaccessorfactory.getpropertyaccessor() takes references to both a org.hibernate.metadata.entitymodemetadata and org.hibernate.metadata.property 2) what is now termed a "propertyaccessor" stores any values needed from those two pieces of information 3) code can then simply call propertyaccess.getgetter() with no parameters likewise with propertyaccessor.getsetter()
DESIGN	todo this is temporary in that the end result will probably not take a property reference per-se.
DESIGN	todo this eventually needs to be removed
DESIGN	todo make this a bit nicer
DESIGN	todo we can remove this once the deprecated ctor can be made private
DESIGN	todo we can remove this once the deprecated ctor can be made private
DESIGN	todo we can remove this once the deprecated ctor can be made private
DESIGN	todo we can remove this once the deprecated ctor can be made private
DESIGN	todo we can remove this once the deprecated ctor can be made private
DESIGN	todo we can remove this once the deprecated ctor can be made private
DESIGN	todo we can remove this once the deprecated ctor can be made private
DESIGN	todo we can remove this once the deprecated ctor can be made private
DESIGN	fixme per the regionfactory class javadoc this constructor version should not be necessary. @param props the configuration properties
DESIGN	fixme per the regionfactory class javadoc this constructor version should not be necessary. @param props the configuration properties
DESIGN	fixme per the regionfactory class javadoc this constructor version should not be necessary. @param props the configuration properties
DESIGN	todo probably better to calculate these and pass them in as it'll be more performant
WITHOUT_CLASSIFICATION	???
WITHOUT_CLASSIFICATION	class to be used to create the method. will be non-null if either class or object was provided during construction. can be used instead of invokee e.g. when using interfaces.
WITHOUT_CLASSIFICATION	if invokee was provided then clazz has been set up
WITHOUT_CLASSIFICATION	now eliminate any classpath entries that do not "match" the search
WITHOUT_CLASSIFICATION	finds all classes that extend the classes in the listsuperclasses arraylist searching in the listallclasses arraylist. @param superclasses the base classes to find subclasses for @param listallclasses the collection of classes to search in @param innerclasses indicate whether to include inner classes in the search @return arraylist of the subclasses
WITHOUT_CLASSIFICATION	finds all classes that extend the class searching in the listallclasses arraylist. @param theclass the parent class @param listallclasses the collection of classes to search in @param listsubclasses the collection of discovered subclasses @param innerclasses indicates whether inners classes should be included in the search
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	thread properties
WITHOUT_CLASSIFICATION	number of threads
WITHOUT_CLASSIFICATION	ramp-up
WITHOUT_CLASSIFICATION	loop count
WITHOUT_CLASSIFICATION	mainpanel.add(threadpropspanel borderlayout.north) add(mainpanel borderlayout.center)
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	sampler error action buttons
WITHOUT_CLASSIFICATION	defaults to continue
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------ fields ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------- methods -------------------------------------------
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------- methods implemented from org.xml.sax.contenthandler -----------------------------------------------------------------------
WITHOUT_CLASSIFICATION	an additional note on using hashsets to store urls i just discovered that obtaining the hashcode of a java.net.url implies a domain-name resolution process. this means significant delays can occur even more so if the domain name is not resolvable. whether this can be a problem in practical situations i can't tell but thought i'd keep a note just in case btw note that using a list and removing duplicates via scan would not help since url.equals requires name resolution too. the above problem has now been addressed with the urlstring and urlcollection classes.
WITHOUT_CLASSIFICATION	a dummy class to pass the pointer of url.
WITHOUT_CLASSIFICATION	now parse the dom tree
WITHOUT_CLASSIFICATION	clear maps
WITHOUT_CLASSIFICATION	defaults
WITHOUT_CLASSIFICATION	if it was a http get request then all parameters in the url has been handled by the sampler.setpath above so we just need to do parse the rest of the request if it is not a get request
WITHOUT_CLASSIFICATION	check if it was a multipart http post request
WITHOUT_CLASSIFICATION	get the post data using the content encoding of the request
WITHOUT_CLASSIFICATION	we start to iterate through the elements
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	synchronize with fixedqueueexecutor
WITHOUT_CLASSIFICATION	jmsmessageid cannot be null
WITHOUT_CLASSIFICATION	++ these are jmx file names and must not be changed $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	+jmx file attribute names - do not change any values! $non-nls-1$
WITHOUT_CLASSIFICATION	this will only work with an applet .class file. ideally this should be upgraded to work with objects (ie) and archives (.jar and .zip) files as well.
WITHOUT_CLASSIFICATION	instantiate the sampler
WITHOUT_CLASSIFICATION	ok because find only returns correct element types
WITHOUT_CLASSIFICATION	property was found in a config element. whether or not it matched the value in the sampler we're done with this property -- don't look at lower-priority configs
WITHOUT_CLASSIFICATION	hashmap to save ssl connection between jmeter proxy and browser
WITHOUT_CLASSIFICATION	get the component parts assume domains must have at least 2 parts e.g. apache.org don't try matching against .org however we don't check .co.uk here
WITHOUT_CLASSIFICATION	check if we found an accept-charset attribute on the form
WITHOUT_CLASSIFICATION	the next line looks odd but proxied http requests look like get httpwww.apache.org/foundation/ http/1.1 i.e. url starts with "http" not "/" whereas https proxy requests look like connect www.google.co.uk443 http/1.1 followed by get /?gws_rd=cr http/1.1
WITHOUT_CLASSIFICATION	a http response header looks alot like http/1.0 200 ok date wednesday 02-feb-94 230412 gmt server ncsa/1.1 mime-version 1.0 last-modified monday 15-nov-93 233316 gmt content-type text/html content-length 2345 \r\n
WITHOUT_CLASSIFICATION	count the retries as well in the time
WITHOUT_CLASSIFICATION	for result
WITHOUT_CLASSIFICATION	make sure the sample start time and sample end time are recorded in order not to confuse the statistics calculation methods if an error occurs and an exception is thrown it is possible that the result.samplestart() or result.sampleend() won't be called
WITHOUT_CLASSIFICATION	we've finished with the request so we can add the localaddress to it for display
WITHOUT_CLASSIFICATION	handle the various methods
WITHOUT_CLASSIFICATION	set up the local address if one exists
WITHOUT_CLASSIFICATION	a well-behaved browser is supposed to send 'connection close' with the last request to an http server. instead most browsers leave it to the server to close the connection after their timeout period. leave it to the jmeter user to decide.
WITHOUT_CLASSIFICATION	encoding does not really matter here
WITHOUT_CLASSIFICATION	add any files cannot retrieve parts once added to the multipartentity so have to save them here.
WITHOUT_CLASSIFICATION	we get the posted bytes using the encoding used to create it
WITHOUT_CLASSIFICATION	in a post request which is not multipart we only support parameters no file upload is allowed
WITHOUT_CLASSIFICATION	just append all the parameter values and use that as the post body
WITHOUT_CLASSIFICATION	allow the mimetype of the file to control the content type this is not obvious in gui if you are not uploading any files but just sending the content of nameless parameters
WITHOUT_CLASSIFICATION	allow the mimetype of the file to control the content type this is not obvious in gui if you are not uploading any files but just sending the content of nameless parameters
WITHOUT_CLASSIFICATION	we use the encoding which should be used according to the http spec which is utf-8
WITHOUT_CLASSIFICATION	n.b. revision 323346 introduced the classcast check but then used iter.next() to fetch the item to be cast thus skipping the element that did not cast. reverted to work more like the original code but with the check in place. added a warning message so can track whether it is necessary
WITHOUT_CLASSIFICATION	don't break the world just because this failed
WITHOUT_CLASSIFICATION	if concurrent download emb. resources add to a list for async gets later
WITHOUT_CLASSIFICATION	thread pool executor to get resources use a linkedblockingqueue note max pool size doesn't effect
WITHOUT_CLASSIFICATION	the following three can be discussed should they be from the first request or from the final one? i chose to do it this way because that's what browsers do they show the final url of the redirect chain in the location field.
WITHOUT_CLASSIFICATION	commons httpclient only
WITHOUT_CLASSIFICATION	set the content length
WITHOUT_CLASSIFICATION	make the connection ready for sending post data
WITHOUT_CLASSIFICATION	check if target of merge is reasonable
WITHOUT_CLASSIFICATION	we must ask the user if it is ok to close current project i.e. it is open
WITHOUT_CLASSIFICATION	don't change name if merging
WITHOUT_CLASSIFICATION	allow for missing optional jars
WITHOUT_CLASSIFICATION	does not appear to be used externally called by #loadprojectfile()
WITHOUT_CLASSIFICATION	converttree(tree)
WITHOUT_CLASSIFICATION	if we are loading a new test plan initialize the tree with the testplan node we are loading
WITHOUT_CLASSIFICATION	these are handled specially by addtotree
WITHOUT_CLASSIFICATION	document doc = null
WITHOUT_CLASSIFICATION	write to file
WITHOUT_CLASSIFICATION	make the connection ready for sending post data
WITHOUT_CLASSIFICATION	make the connection ready for sending post data
WITHOUT_CLASSIFICATION	@see org.apache.jmeter.gui.action.command#getactionnames()
WITHOUT_CLASSIFICATION	boolean toreturn = true
WITHOUT_CLASSIFICATION	don't automatically expand when merging
WITHOUT_CLASSIFICATION	+jmx file attributes - do not change values! $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ -jmx file attributes
WITHOUT_CLASSIFICATION	called by jmeter#startgui()
WITHOUT_CLASSIFICATION	no error as default
WITHOUT_CLASSIFICATION	helper method to simplify code
WITHOUT_CLASSIFICATION	one builder for all requests in a thread
WITHOUT_CLASSIFICATION	but we do trap this error to make tests work better
WITHOUT_CLASSIFICATION	may well happen
WITHOUT_CLASSIFICATION	should never happen
WITHOUT_CLASSIFICATION	note initialised with error = failure = false
WITHOUT_CLASSIFICATION	hc3.1 does not have the method
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	should never happen
WITHOUT_CLASSIFICATION	means counting from end
WITHOUT_CLASSIFICATION	no point continuing mainly for bsh.evalerror
WITHOUT_CLASSIFICATION	create a parser
WITHOUT_CLASSIFICATION	doc =
WITHOUT_CLASSIFICATION	if everything went fine then xml schema validation is valid
WITHOUT_CLASSIFICATION	only set message if error not yet flagged
WITHOUT_CLASSIFICATION	helper method to construct sax error details
WITHOUT_CLASSIFICATION	can be caused by - failure to read xsd file - xml does not match xsd
WITHOUT_CLASSIFICATION	can be caused by - premature end of file - non-whitespace content after trailer
WITHOUT_CLASSIFICATION	static int to signify the type of logical comparitor to assert
WITHOUT_CLASSIFICATION	is the sample the correct size?
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	use the name of the test element otherwise cannot enable/disable debug from the gui
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	the signer certificate
WITHOUT_CLASSIFICATION	@param response @return
WITHOUT_CLASSIFICATION	has the sample lasted too long?
WITHOUT_CLASSIFICATION	ensure the manager is initialised we don't currently need to do anything further as this sets the default https protocol
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$ $non-nls-3$ $non-nls-1$ $non-nls-2$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ these are the names of the get/set methods
WITHOUT_CLASSIFICATION	no point in checking if we don't have anything to compare against
WITHOUT_CLASSIFICATION	no error as default
WITHOUT_CLASSIFICATION	create parser
WITHOUT_CLASSIFICATION	string md5result = digestutils.md5hex(resultdata)
WITHOUT_CLASSIFICATION	evaluate result
WITHOUT_CLASSIFICATION	package protected so can be accessed by test class
WITHOUT_CLASSIFICATION	return with an error
WITHOUT_CLASSIFICATION	these constants are used both for the jmx file and for the setters/getters $non-nls-1$
WITHOUT_CLASSIFICATION	return with an error
WITHOUT_CLASSIFICATION	flush
WITHOUT_CLASSIFICATION	run tidy.
WITHOUT_CLASSIFICATION	return with no error
WITHOUT_CLASSIFICATION	write output to file
WITHOUT_CLASSIFICATION	return with no error
WITHOUT_CLASSIFICATION	check if filename defined
WITHOUT_CLASSIFICATION	close file
WITHOUT_CLASSIFICATION	open file
WITHOUT_CLASSIFICATION	"" is not the same as no realm
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	no error as default
WITHOUT_CLASSIFICATION	mask should contain all types (but not not)
WITHOUT_CLASSIFICATION	the string to check (url or data)
WITHOUT_CLASSIFICATION	allow testing of failure codes
WITHOUT_CLASSIFICATION	what are we testing against?
WITHOUT_CLASSIFICATION	assume it is the url
WITHOUT_CLASSIFICATION	assume it is the url
WITHOUT_CLASSIFICATION	do it once outside loop
WITHOUT_CLASSIFICATION	not should always succeed against an empty result
WITHOUT_CLASSIFICATION	get the matcher for this thread
WITHOUT_CLASSIFICATION	should never happen
WITHOUT_CLASSIFICATION	+ jmx file attributes $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ - jmx file attributes
WITHOUT_CLASSIFICATION	reset the bsh.interpreter before each execution
WITHOUT_CLASSIFICATION	script file name (if present)
WITHOUT_CLASSIFICATION	parameters to pass to script file (or script)
WITHOUT_CLASSIFICATION	script area
WITHOUT_CLASSIFICATION	don't let the input field shrink too much
WITHOUT_CLASSIFICATION	send post data from <code>entry</code> to the open connection. @param connection <code>urlconnection</code> where post data should be sent @return a string show what was posted. will not contain actual file upload content @exception ioexception if an i/o exception occurs
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	file panel $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	assume it is the url
WITHOUT_CLASSIFICATION	user_input
WITHOUT_CLASSIFICATION	class attributes
WITHOUT_CLASSIFICATION	user_input
WITHOUT_CLASSIFICATION	user_input
WITHOUT_CLASSIFICATION	user_input
WITHOUT_CLASSIFICATION	doctype
WITHOUT_CLASSIFICATION	doctype
WITHOUT_CLASSIFICATION	names for the fields $non-nls-1$
WITHOUT_CLASSIFICATION	instance attributes
WITHOUT_CLASSIFICATION	format (hmtl xhtml xml)
WITHOUT_CLASSIFICATION	errors only
WITHOUT_CLASSIFICATION	thresholds
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	drop the last character
WITHOUT_CLASSIFICATION	store the operator
WITHOUT_CLASSIFICATION	default
WITHOUT_CLASSIFICATION	put the check boxes in a column in a panel
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.modifytestelement(testelement)
WITHOUT_CLASSIFICATION	assume url
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	user_input
WITHOUT_CLASSIFICATION	user_input
WITHOUT_CLASSIFICATION	initialize to empty string this will fail the assertion
WITHOUT_CLASSIFICATION	md5hexinput.addfocuslistener(this)
WITHOUT_CLASSIFICATION	@return
WITHOUT_CLASSIFICATION	should tidy be quiet?
WITHOUT_CLASSIFICATION	@param element
WITHOUT_CLASSIFICATION	should we download external dtds?
WITHOUT_CLASSIFICATION	called by xpathassertiongui
WITHOUT_CLASSIFICATION	report tidy errors as assertion failure?
WITHOUT_CLASSIFICATION	process tolerant settings
WITHOUT_CLASSIFICATION	show tidy warnings ?
WITHOUT_CLASSIFICATION	called by xpathassertiongui
WITHOUT_CLASSIFICATION	non-tidy options
WITHOUT_CLASSIFICATION	tidy options
WITHOUT_CLASSIFICATION	called by xpathextractorgui
WITHOUT_CLASSIFICATION	called by xpathextractorgui
WITHOUT_CLASSIFICATION	samp.setdomain(this.getdomain()) samp.setport(this.getport())
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	panel.add(signercheckbyfile)
WITHOUT_CLASSIFICATION	access needed from csvdataset
WITHOUT_CLASSIFICATION	store the resource keys
WITHOUT_CLASSIFICATION	default (e.g. if test plan does not have definition)
WITHOUT_CLASSIFICATION	n.b. this class is shared between threads (nothreadclone) so all access to variables needs to be protected by a lock (either sync. or volatile) to ensure safe publication.
WITHOUT_CLASSIFICATION	this class is not cloned per thread so this is shared
WITHOUT_CLASSIFICATION	used for per-thread/user numbers cannot be static as random numbers are not to be shared between instances
WITHOUT_CLASSIFICATION	nextint(n) returns values in the range [0n) so n must be set to max-min+1
WITHOUT_CLASSIFICATION	this can overflow
WITHOUT_CLASSIFICATION	this is used as an error indicator
WITHOUT_CLASSIFICATION	check for overflow too
WITHOUT_CLASSIFICATION	cannot use getthreadcontext() as we are not cloned per thread
WITHOUT_CLASSIFICATION	use format to create number if it fails use the default
WITHOUT_CLASSIFICATION	the original name of the property
WITHOUT_CLASSIFICATION	variables are unlikely to contain spaces so most likely a translation
WITHOUT_CLASSIFICATION	reset the value
WITHOUT_CLASSIFICATION	user-specified key
WITHOUT_CLASSIFICATION	treat the same as eof
WITHOUT_CLASSIFICATION	i.e. eof
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	n.b. must be in this class for the testbean code to work
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	allow for missing optional jars
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	these variable names must have .displayname properties and agree with the getxxx()/setxxx() methods $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	these group names must have .displayname properties $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	if we found a testplan then we are on our way to the testfragment
WITHOUT_CLASSIFICATION	only try to load the jmx test plan if there is one
WITHOUT_CLASSIFICATION	filter the tree for a testfragment.
WITHOUT_CLASSIFICATION	ensure counts are updated correctly
WITHOUT_CLASSIFICATION	these items are shared between threads in a group by the clone() method they are initialised by teststarted() so don't need to be serialised
WITHOUT_CLASSIFICATION	todo ?? (jmetertreenode) selectednode.clone()
WITHOUT_CLASSIFICATION	ensure global counters and lock are shared across threads in the group
WITHOUT_CLASSIFICATION	insert the subcontrollersandsamplers into random list positions.
WITHOUT_CLASSIFICATION	nodepath.add(selectednode.getname())
WITHOUT_CLASSIFICATION	we clone to avoid enabling existing node
WITHOUT_CLASSIFICATION	returns the selection value as a int with the value set to zero if it is out of range.
WITHOUT_CLASSIFICATION	set the selection once per iteration
WITHOUT_CLASSIFICATION	create a new list containing numelements null elements.
WITHOUT_CLASSIFICATION	replace subcontrollersandsamplers with reordered copy.
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	retrieve the formatted data using the same encoding used to create it
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.modifytestelement(testelement)
WITHOUT_CLASSIFICATION	set the position when next is first called and don't overwrite until reinitialize is called.
WITHOUT_CLASSIFICATION	setdone(true)
WITHOUT_CLASSIFICATION	we've gone through the whole list and are now back at the start point of our search.
WITHOUT_CLASSIFICATION	$non-nls-1$ throughput.addactionlistener(this)
WITHOUT_CLASSIFICATION	start/end index default value for string getters and setters
WITHOUT_CLASSIFICATION	implements unsharedcomponent
WITHOUT_CLASSIFICATION	although the default is not the same as for the string value it is only used internally
WITHOUT_CLASSIFICATION	although the default is not the same as for the string value it is only used internally
WITHOUT_CLASSIFICATION	prevent entry if nothing to do
WITHOUT_CLASSIFICATION	these must not be static otherwise language change does not work $non-nls-1$
WITHOUT_CLASSIFICATION	perthread field
WITHOUT_CLASSIFICATION	in case we are converting back from floating point drop the decimal fraction $non-nls-1$
WITHOUT_CLASSIFICATION	type field
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	text field
WITHOUT_CLASSIFICATION	text field
WITHOUT_CLASSIFICATION	text field
WITHOUT_CLASSIFICATION	text field
WITHOUT_CLASSIFICATION	text field
WITHOUT_CLASSIFICATION	standalone
WITHOUT_CLASSIFICATION	embedded
WITHOUT_CLASSIFICATION	jpanel looppanel = new jpanel(new borderlayout(5 0))
WITHOUT_CLASSIFICATION	only replace default if it is provided
WITHOUT_CLASSIFICATION	may be null for put in an application/x-www-form-urlencoded request we only support parameters no file upload is allowed
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	should not happen
WITHOUT_CLASSIFICATION	implements unsharedcomponent
WITHOUT_CLASSIFICATION	fetch some variables
WITHOUT_CLASSIFICATION	loop label $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	+ jmx file attributes $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ - jmx file attributes
WITHOUT_CLASSIFICATION	checkbox $non-nls-1$
WITHOUT_CLASSIFICATION	================= internal business =================
WITHOUT_CLASSIFICATION	drop-down menu
WITHOUT_CLASSIFICATION	number of previous matches
WITHOUT_CLASSIFICATION	reset previous result
WITHOUT_CLASSIFICATION	e.g. dtd not reachable
WITHOUT_CLASSIFICATION	this method assumes utf-8 input data
WITHOUT_CLASSIFICATION	can happen for bad input document
WITHOUT_CLASSIFICATION	============= object properties ================
WITHOUT_CLASSIFICATION	permissible values true - match against headers false or absent - match against body (this was the original default) url - match against url these are passed to the setusefield() method do not change these values!
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	will already have been logged by xpathutil fail the sample
WITHOUT_CLASSIFICATION	just in case clear any other remaining variables
WITHOUT_CLASSIFICATION	what to match against. n.b. do not change the string value or test plans will break! $non-nls-1$
WITHOUT_CLASSIFICATION	note responsedata encoding is server specific therefore we do byte -> unicode -> byte conversion to ensure utf-8 encoding as required by xpathutil convert unicode string -> utf-8 bytes $non-nls-1$
WITHOUT_CLASSIFICATION	ensure old value is not left defined
WITHOUT_CLASSIFICATION	ensure old value is not left defined
WITHOUT_CLASSIFICATION	fetch some variables
WITHOUT_CLASSIFICATION	only replace default if it is provided
WITHOUT_CLASSIFICATION	note match.groups() includes group 0
WITHOUT_CLASSIFICATION	refname has already been set to the default (if present)
WITHOUT_CLASSIFICATION	number of refname_n variable sets to keep
WITHOUT_CLASSIFICATION	number of refname_n variable sets to keep
WITHOUT_CLASSIFICATION	save the count
WITHOUT_CLASSIFICATION	original match behaviour
WITHOUT_CLASSIFICATION	original match behaviour
WITHOUT_CLASSIFICATION	< 0 means we save all the matches
WITHOUT_CLASSIFICATION	remove any single matches
WITHOUT_CLASSIFICATION	remove any left-over variables
WITHOUT_CLASSIFICATION	no need to process further
WITHOUT_CLASSIFICATION	remove the group count
WITHOUT_CLASSIFICATION	how many groups are there?
WITHOUT_CLASSIFICATION	remove the remaining _gn vars
WITHOUT_CLASSIFICATION	trailing string is not empty
WITHOUT_CLASSIFICATION	contains strings and integers
WITHOUT_CLASSIFICATION	remove the g0g1gn vars
WITHOUT_CLASSIFICATION	add match as integer
WITHOUT_CLASSIFICATION	string is not empty
WITHOUT_CLASSIFICATION	allow for property not yet being set (probably only applies to test cases)
WITHOUT_CLASSIFICATION	random match
WITHOUT_CLASSIFICATION	for request data
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ e.g. "transfer-encoding chunked" which is processed automatically by the underlying protocol $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ pseudo-header for reporting local address $non-nls-1$ $non-nls-1$ $non-nls-1$ for handling caching $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ e.g. public max-age=259200 e.g. date header of response
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	use format to create number if it fails use the default
WITHOUT_CLASSIFICATION	< 0 means we save all the matches
WITHOUT_CLASSIFICATION	save the count
WITHOUT_CLASSIFICATION	remove any left-over variables
WITHOUT_CLASSIFICATION	no need to process further
WITHOUT_CLASSIFICATION	random match
WITHOUT_CLASSIFICATION	next line
WITHOUT_CLASSIFICATION	next line
WITHOUT_CLASSIFICATION	used for per-thread/user storage of increment in thread group main loop
WITHOUT_CLASSIFICATION	so we know which button is selected
WITHOUT_CLASSIFICATION	reset
WITHOUT_CLASSIFICATION	used for per-thread/user numbers
WITHOUT_CLASSIFICATION	cannot use getthreadcontext() as not cloned per thread
WITHOUT_CLASSIFICATION	get to 'path' part of the url preserving schema auth host if present
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	can be specified in jmeter.properties $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	this class is not cloned per thread so this is shared @guardedby("this")
WITHOUT_CLASSIFICATION	although the lock appears to be an instance lock in fact the lock is shared between all threads in a thread group but different thread groups have different locks - see the clone() method below the lock ensures that all the variables are processed together which is important for functions such as __csvread and _stringfromfile.
WITHOUT_CLASSIFICATION	lock object must exist
WITHOUT_CLASSIFICATION	ensure that clones share the same lock object
WITHOUT_CLASSIFICATION	super.mergein(element)
WITHOUT_CLASSIFICATION	don't process the name column
WITHOUT_CLASSIFICATION	enable delete (which may already be enabled but it won't hurt)
WITHOUT_CLASSIFICATION	enable delete (which may already be enabled but it won't hurt)
WITHOUT_CLASSIFICATION	highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	disable delete if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	disable delete if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	verify for a ".." component at next iteration
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	table still contains one or more rows so highlight (select) the appropriate one.
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	table still contains one or more rows so highlight (select) the appropriate one.
WITHOUT_CLASSIFICATION	paramtable.setrowselectionallowed(true) paramtable.setcolumnselectionallowed(true)
WITHOUT_CLASSIFICATION	property values are strings
WITHOUT_CLASSIFICATION	paramtable.setcellselectionenabled(true) paramtable.setpreferredscrollableviewportsize(new dimension(100 70))
WITHOUT_CLASSIFICATION	send the mail
WITHOUT_CLASSIFICATION	send the mail
WITHOUT_CLASSIFICATION	create some properties and get the default session
WITHOUT_CLASSIFICATION	create a message
WITHOUT_CLASSIFICATION	this can't happen (how should utf8 not be supported!?!) so just throw an error
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	for request data
WITHOUT_CLASSIFICATION	setter/getter - javadoc-comments not needed
WITHOUT_CLASSIFICATION	-1 is the code for a failed sample.
WITHOUT_CLASSIFICATION	private void setsuccesscount(long count) { this.successcount = count }
WITHOUT_CLASSIFICATION	private void setfailurecount(long count) { this.failurecount = count }
WITHOUT_CLASSIFICATION	sends the result to the visualiser updates the model used for sending e-mails
WITHOUT_CLASSIFICATION	actions
WITHOUT_CLASSIFICATION	action targets
WITHOUT_CLASSIFICATION	public static final int thread_group = 1
WITHOUT_CLASSIFICATION	this means no sample is saved
WITHOUT_CLASSIFICATION	take copy so cannot get npe
WITHOUT_CLASSIFICATION	gui components
WITHOUT_CLASSIFICATION	private buttongroup actionbuttons
WITHOUT_CLASSIFICATION	state variables
WITHOUT_CLASSIFICATION	target
WITHOUT_CLASSIFICATION	action
WITHOUT_CLASSIFICATION	duration
WITHOUT_CLASSIFICATION	the property name to be used to look up the display string
WITHOUT_CLASSIFICATION	for calculating throughput across all threads
WITHOUT_CLASSIFICATION	for holding the througputinfo objects for all threadgroups. keyed by abstractthreadgroup objects
WITHOUT_CLASSIFICATION	if previous time is zero then target will be in the past. this is what we want so first sample is run without a delay.
WITHOUT_CLASSIFICATION	assume the sample will run as soon as the delay has expired
WITHOUT_CLASSIFICATION	calculate the delay based on the mode
WITHOUT_CLASSIFICATION	n.b. we fetch the throughput each time as it may vary during a test
WITHOUT_CLASSIFICATION	total number of threads
WITHOUT_CLASSIFICATION	active threads in this group
WITHOUT_CLASSIFICATION	all threads - alternate calculation
WITHOUT_CLASSIFICATION	all threads in this group - alternate calculation
WITHOUT_CLASSIFICATION	no need to sync as one per instance
WITHOUT_CLASSIFICATION	add to cache
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	can be specified in jmeter.properties $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	cannot happen
WITHOUT_CLASSIFICATION	string in the panel do not make these static otherwise language changes don't work $non-nls-1$
WITHOUT_CLASSIFICATION	we did not replace the entry so use the existing one
WITHOUT_CLASSIFICATION	e.g. 0 i.e. 1
WITHOUT_CLASSIFICATION	we're behind schedule -- try to catch up assume the sample will run immediately
WITHOUT_CLASSIFICATION	for access from test code
WITHOUT_CLASSIFICATION	synchronize on the info object's mutex to ensure multiple threads don't update the scheduled time simultaneously
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	for access from test code
WITHOUT_CLASSIFICATION	unique barrier creation ensured by synchronized setup
WITHOUT_CLASSIFICATION	must be defined
WITHOUT_CLASSIFICATION	instantiate requestview classes
WITHOUT_CLASSIFICATION	ensure transient object is created by the server
WITHOUT_CLASSIFICATION	delay deviation
WITHOUT_CLASSIFICATION	lazy init
WITHOUT_CLASSIFICATION	use later
WITHOUT_CLASSIFICATION	avg delay
WITHOUT_CLASSIFICATION	prepare the request tabbed pane
WITHOUT_CLASSIFICATION	place raw tab in first position (first tab)
WITHOUT_CLASSIFICATION	hint to background color on bottom tabs (grey not blue)
WITHOUT_CLASSIFICATION	we assume the argument value is encoded according to the http spec i.e. utf-8
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	create the panels for the regexp tab
WITHOUT_CLASSIFICATION	go to first line
WITHOUT_CLASSIFICATION	construct a multi-line string with all matches
WITHOUT_CLASSIFICATION	add regexp tester pane $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	private static final int limit_str_size = 100 private boolean isroot
WITHOUT_CLASSIFICATION	if other node type we will just skip it
WITHOUT_CLASSIFICATION	main panel
WITHOUT_CLASSIFICATION	name
WITHOUT_CLASSIFICATION	description panel
WITHOUT_CLASSIFICATION	number panel
WITHOUT_CLASSIFICATION	information display panel
WITHOUT_CLASSIFICATION	boolean resized = true
WITHOUT_CLASSIFICATION	rounds!
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	main panel
WITHOUT_CLASSIFICATION	name
WITHOUT_CLASSIFICATION	set up the table itself
WITHOUT_CLASSIFICATION	everyone is free to swing on its side ) add(infopanel borderlayout.east)
WITHOUT_CLASSIFICATION	note the resource string won't respond to locale-changes however this does not matter as it is only used when pasting to the clipboard
WITHOUT_CLASSIFICATION	dimension of the splinegraph is the same resized = false
WITHOUT_CLASSIFICATION	sample number (string) start time thread name label sample time status bytes
WITHOUT_CLASSIFICATION	dimension changed resized = true
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	add the main panel and the graph
WITHOUT_CLASSIFICATION	column renderers
WITHOUT_CLASSIFICATION	the object used for each row
WITHOUT_CLASSIFICATION	table.gettableheader().setreorderingallowed(false)
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	make a internal list of all results to allow reload data with filter or interval
WITHOUT_CLASSIFICATION	default checked $non-nls-1$
WITHOUT_CLASSIFICATION	set up footer of table which displays numerics of the graphs
WITHOUT_CLASSIFICATION	generate x-axis label and associated color
WITHOUT_CLASSIFICATION	set up the table with footer
WITHOUT_CLASSIFICATION	sampler selection
WITHOUT_CLASSIFICATION	internal list of all results
WITHOUT_CLASSIFICATION	use for x-axis scale
WITHOUT_CLASSIFICATION	we check the count to see if we have exceeded the number of lines to parse. there's no way to know where to stop in the file. therefore we use break to escape the while loop when we've reached the count.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	main panel
WITHOUT_CLASSIFICATION	reset colors index
WITHOUT_CLASSIFICATION	list of value by sampler
WITHOUT_CLASSIFICATION	we want to retain insertion order so linkedhashmap is necessary
WITHOUT_CLASSIFICATION	canvas size
WITHOUT_CLASSIFICATION	draw the graph
WITHOUT_CLASSIFICATION	test can't have a duration more than 2^31 secs (cast from long to int)
WITHOUT_CLASSIFICATION	calculate intermediate values (if needed)
WITHOUT_CLASSIFICATION	log.debug("data["+s+"]["+idx+"] " + data[s][idx])
WITHOUT_CLASSIFICATION	if clic on the graph tab make the graph (without apply interval or filter)
WITHOUT_CLASSIFICATION	if use dynamic graph size is checked we disable the dimension fields
WITHOUT_CLASSIFICATION	force reload data
WITHOUT_CLASSIFICATION	not 'else if' because forcereloaddata
WITHOUT_CLASSIFICATION	reload data from file
WITHOUT_CLASSIFICATION	reload data form internal list of results
WITHOUT_CLASSIFICATION	calculate the test duration. needs to xaxis labels and getdata.
WITHOUT_CLASSIFICATION	button
WITHOUT_CLASSIFICATION	button
WITHOUT_CLASSIFICATION	search field
WITHOUT_CLASSIFICATION	checkboxes
WITHOUT_CLASSIFICATION	$non-nls-1$ default bold
WITHOUT_CLASSIFICATION	default circle
WITHOUT_CLASSIFICATION	default option
WITHOUT_CLASSIFICATION	keep copies of the two editors needed
WITHOUT_CLASSIFICATION	could be <html lang=""> $non-nls-1$
WITHOUT_CLASSIFICATION	look for a case variation
WITHOUT_CLASSIFICATION	ditto $non-nls-1$
WITHOUT_CLASSIFICATION	to disable downloading and rendering of images and frames enable the editor-kit. the stream property can then be
WITHOUT_CLASSIFICATION	must be done before setcontenttype
WITHOUT_CLASSIFICATION	now we create the compiled pattern and add it to the arraylist
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	the child to be removed will always be 0 'cos as the nodes are removed the nth node will become (n-1)th
WITHOUT_CLASSIFICATION	get the text response and image icon to determine which is not null
WITHOUT_CLASSIFICATION	bug can generate rte
WITHOUT_CLASSIFICATION	number of nodes
WITHOUT_CLASSIFICATION	number of non extreme nodes (_m-2)
WITHOUT_CLASSIFICATION	the number of nodes is defined by the length of r
WITHOUT_CLASSIFICATION	grab the nodes
WITHOUT_CLASSIFICATION	computes interpolation coefficients
WITHOUT_CLASSIFICATION	creation of the interpolation structure
WITHOUT_CLASSIFICATION	local variables
WITHOUT_CLASSIFICATION	local variables
WITHOUT_CLASSIFICATION	initialize system structures (just to be safe)
WITHOUT_CLASSIFICATION	initialize the diagonal of the system matrix (a) to 4
WITHOUT_CLASSIFICATION	initialize the two minor diagonals of a to 1
WITHOUT_CLASSIFICATION	initialize b
WITHOUT_CLASSIFICATION	di (degree 0)
WITHOUT_CLASSIFICATION	ci (degree 1)
WITHOUT_CLASSIFICATION	bi (degree 2)
WITHOUT_CLASSIFICATION	ai (degree 3)
WITHOUT_CLASSIFICATION	intermediate arrays
WITHOUT_CLASSIFICATION	jacobi convergence test
WITHOUT_CLASSIFICATION	init newx and oldx arrays to 0
WITHOUT_CLASSIFICATION	main iteration
WITHOUT_CLASSIFICATION	verify t belongs to the curve (range [0 _m-1])
WITHOUT_CLASSIFICATION	silent error consider the curve is constant outside its range
WITHOUT_CLASSIFICATION	seek the good interval for t and get the piece of curve on it
WITHOUT_CLASSIFICATION	the polynomial calculation is done by the (fast) euler method
WITHOUT_CLASSIFICATION	computes auto-scaling and absolute plots
WITHOUT_CLASSIFICATION	shouldn't draw negative values
WITHOUT_CLASSIFICATION	we want to return the context that is actually in the map if it's the first put we will have a null result
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	main panel
WITHOUT_CLASSIFICATION	settings panes
WITHOUT_CLASSIFICATION	the number of non extreme nodes is the number of intervals minus 1 i.e. the length of r minus 2
WITHOUT_CLASSIFICATION	the upper limit of the curve range belongs by definition to the last interval
WITHOUT_CLASSIFICATION	jacobi system resolving results are stored in _rs computes the coefficients (di ci bi ai) from the results
WITHOUT_CLASSIFICATION	computes relative auto-scaled plots to fit in the specified area
WITHOUT_CLASSIFICATION	computes the value of the curve at the pecified abscissa and relative to the beginning of the right piece of spline curve
WITHOUT_CLASSIFICATION	return label
WITHOUT_CLASSIFICATION	initialize gui.
WITHOUT_CLASSIFICATION	show the grid lines to turn it off set it to zero
WITHOUT_CLASSIFICATION	test mail button
WITHOUT_CLASSIFICATION	reset the paint counter
WITHOUT_CLASSIFICATION	failures count
WITHOUT_CLASSIFICATION	set the y axis to round
WITHOUT_CLASSIFICATION	does not need to be synch. because it is only accessed from the sampler thread the clientpool does access it in a different thread but clientpool is fully synch.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	used by request panel $non-nls-1$
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.visualizers.request.requestview#init()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.visualizers.request.requestview#cleardata()
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	go to first line
WITHOUT_CLASSIFICATION	construct a multi-line string with all matches
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	don't display request headers label if rh is null or empty
WITHOUT_CLASSIFICATION	implementation of the actionlistener-interface.
WITHOUT_CLASSIFICATION	methods used to store and retrieve the mailervisualizer.
WITHOUT_CLASSIFICATION	methods to implement the modellistener.
WITHOUT_CLASSIFICATION	$non-nls-1$ don't set empty to keep cssjquery cssjqueryfield.settext("") $non-nls-1$ $non-nls-1$ don't set empty to keep attribute this.attributefield.settext("") $non-nls-1$ don't change impl this.cssjquerylabeledchoice.settext(htmlextractor.default_extractor)
WITHOUT_CLASSIFICATION	create the panels for the cssjquery tab
WITHOUT_CLASSIFICATION	most current subclasses can process text
WITHOUT_CLASSIFICATION	could be sampleresult or assertionresult
WITHOUT_CLASSIFICATION	add a message when no request data (ex. java request)
WITHOUT_CLASSIFICATION	to save last select tab (raw/parsed)
WITHOUT_CLASSIFICATION	result column renderers
WITHOUT_CLASSIFICATION	response headers column renderers
WITHOUT_CLASSIFICATION	response fields column renderers
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	the object used for each row
WITHOUT_CLASSIFICATION	the object used for each row
WITHOUT_CLASSIFICATION	add cssjquery tester pane $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	n.b. these are not multi-threaded so don't make it static iso format $non-nls-1$
WITHOUT_CLASSIFICATION	one space for blank header $non-nls-1$ one space for blank header $non-nls-1$
WITHOUT_CLASSIFICATION	key value
WITHOUT_CLASSIFICATION	key value
WITHOUT_CLASSIFICATION	key value
WITHOUT_CLASSIFICATION	create tables the object used for each row
WITHOUT_CLASSIFICATION	response data $non-nls-1$ request data $non-nls-1$ sampler result $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ create the panels for the other tabs
WITHOUT_CLASSIFICATION	clear all data before display a new
WITHOUT_CLASSIFICATION	we are displaying a sampleresult
WITHOUT_CLASSIFICATION	reset for reuse
WITHOUT_CLASSIFICATION	reset for reuse
WITHOUT_CLASSIFICATION	no need to change the foreground color
WITHOUT_CLASSIFICATION	response message label
WITHOUT_CLASSIFICATION	done
WITHOUT_CLASSIFICATION	parsed response headers
WITHOUT_CLASSIFICATION	reset search
WITHOUT_CLASSIFICATION	restore tabbed pane parsed if needed
WITHOUT_CLASSIFICATION	restore last selected tab
WITHOUT_CLASSIFICATION	remove the other (parsed) tab if present
WITHOUT_CLASSIFICATION	cache for object-message only used when parsing from a file because in text-area property replacement might have been used
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	hint to background color on bottom tabs (grey not blue)
WITHOUT_CLASSIFICATION	set up the 1st table result with empty headers
WITHOUT_CLASSIFICATION	quieten findbugs default - do nothing
WITHOUT_CLASSIFICATION	add styles to use for different types of status messages
WITHOUT_CLASSIFICATION	prepare the results tabbed pane
WITHOUT_CLASSIFICATION	set up the 3rd table
WITHOUT_CLASSIFICATION	set up the 2nd table
WITHOUT_CLASSIFICATION	create the split pane
WITHOUT_CLASSIFICATION	create the split pane
WITHOUT_CLASSIFICATION	add search text extension
WITHOUT_CLASSIFICATION	maximum size that we will display
WITHOUT_CLASSIFICATION	add sample
WITHOUT_CLASSIFICATION	add any assertion that failed as children of the sample node
WITHOUT_CLASSIFICATION	add any assertion that failed as children of the sample node
WITHOUT_CLASSIFICATION	prepare the common tab
WITHOUT_CLASSIFICATION	init right side with first render
WITHOUT_CLASSIFICATION	to restore last tab used
WITHOUT_CLASSIFICATION	drop-down list for renderer
WITHOUT_CLASSIFICATION	if no results render in jmeter.properties load standard (default)
WITHOUT_CLASSIFICATION	instantiate render classes
WITHOUT_CLASSIFICATION	preset to "text" option
WITHOUT_CLASSIFICATION	to restore last selected tab (better user-friendly)
WITHOUT_CLASSIFICATION	remove old right side
WITHOUT_CLASSIFICATION	create and add a new right side
WITHOUT_CLASSIFICATION	to display current sampler result before change
WITHOUT_CLASSIFICATION	in the case the test uses a file we set it locally and prevent loading the file repeatedly
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	main panel
WITHOUT_CLASSIFICATION	name
WITHOUT_CLASSIFICATION	the child to be removed will always be 0 'cos as the nodes are removed the nth node will become (n-1)th
WITHOUT_CLASSIFICATION	processes assertions display a sampleresult
WITHOUT_CLASSIFICATION	set the status for the node
WITHOUT_CLASSIFICATION	noop state is held by component
WITHOUT_CLASSIFICATION	textarea label
WITHOUT_CLASSIFICATION	textarea
WITHOUT_CLASSIFICATION	define max scale y axis
WITHOUT_CLASSIFICATION	if the title graph is empty we can assume some default
WITHOUT_CLASSIFICATION	replace _xaxistitle to null (don't display x axis title)
WITHOUT_CLASSIFICATION	stroke and shape line settings
WITHOUT_CLASSIFICATION	lines colors
WITHOUT_CLASSIFICATION	define chart type (line)
WITHOUT_CLASSIFICATION	y axis ruler
WITHOUT_CLASSIFICATION	~a tic every 50 px
WITHOUT_CLASSIFICATION	increment cannot be < 1
WITHOUT_CLASSIFICATION	manage legend placement
WITHOUT_CLASSIFICATION	return new dimension(width 400)
WITHOUT_CLASSIFICATION	int width = getwidth()
WITHOUT_CLASSIFICATION	will always be within range of an int as must be < width
WITHOUT_CLASSIFICATION	don't start yet if stop between samples
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	we want to retain insertion order so linkedhashmap is necessary
WITHOUT_CLASSIFICATION	define max scale y axis
WITHOUT_CLASSIFICATION	replace _xaxistitle to null (don't display x axis title)
WITHOUT_CLASSIFICATION	if the "title of graph" is empty we can assume some default
WITHOUT_CLASSIFICATION	same viewresultstree
WITHOUT_CLASSIFICATION	needed by visualizer interface
WITHOUT_CLASSIFICATION	educated guess
WITHOUT_CLASSIFICATION	if the labels are too long they'll be "squeezed" to make the chart viewable.
WITHOUT_CLASSIFICATION	y axis
WITHOUT_CLASSIFICATION	new font("sansserif" font.plain 10)
WITHOUT_CLASSIFICATION	enable embedded html resources
WITHOUT_CLASSIFICATION	----------- get/set methods -------------------
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	main panel
WITHOUT_CLASSIFICATION	column renderers
WITHOUT_CLASSIFICATION	todo charset ?
WITHOUT_CLASSIFICATION	synch is needed because multiple threads can update the counts.
WITHOUT_CLASSIFICATION	sortfiltermodel mysortedmodel = new sortfiltermodel(mystattablemodel)
WITHOUT_CLASSIFICATION	search field
WITHOUT_CLASSIFICATION	prepare highlighter to show text find with search command
WITHOUT_CLASSIFICATION	new search?
WITHOUT_CLASSIFICATION	save search position
WITHOUT_CLASSIFICATION	display not found message and reset search
WITHOUT_CLASSIFICATION	add listener to intercept texttofind changes and reset search
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	main panel
WITHOUT_CLASSIFICATION	column renderers
WITHOUT_CLASSIFICATION	checkboxes
WITHOUT_CLASSIFICATION	reset search
WITHOUT_CLASSIFICATION	synch is needed because multiple threads can update the counts.
WITHOUT_CLASSIFICATION	buttons
WITHOUT_CLASSIFICATION	when enter is pressed search start
WITHOUT_CLASSIFICATION	default not visible
WITHOUT_CLASSIFICATION	search text in response data
WITHOUT_CLASSIFICATION	documentlistener method
WITHOUT_CLASSIFICATION	documentlistener method
WITHOUT_CLASSIFICATION	documentlistener method
WITHOUT_CLASSIFICATION	desactivate or not specials regexp char
WITHOUT_CLASSIFICATION	label count mean min max std dev. error %age throughput kb/sec avg. pagesize
WITHOUT_CLASSIFICATION	all rows have this class
WITHOUT_CLASSIFICATION	synch is needed because a clear can occur while add occurs
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	main panel
WITHOUT_CLASSIFICATION	add the main panel and the graph
WITHOUT_CLASSIFICATION	a button for adding new arguments to the table. private jbutton add a button for removing arguments from the table. private jbutton delete
WITHOUT_CLASSIFICATION	force a minimum table height of 70 pixels
WITHOUT_CLASSIFICATION	p.add(makebuttonpanel() borderlayout.south)
WITHOUT_CLASSIFICATION	new functor("setname") $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	ok because used in synchronised method
WITHOUT_CLASSIFICATION	we have received one more sample
WITHOUT_CLASSIFICATION	set up the graph with header footer y axis and graph display
WITHOUT_CLASSIFICATION	methods used in creating the gui
WITHOUT_CLASSIFICATION	protected void initializetablemodel() { tablemodel = new objecttablemodel( new string[] { argumentspanel.column_names_0 argumentspanel.column_names_1 encode_or_not include_equals } new functor[] { new functor("getname") new functor("getvalue") new functor("isalwaysencoded") new functor("isuseequals") } new functor[] { new functor("setname") new functor("setvalue") new functor("setalwaysencoded") new functor("setuseequals") } new class[] { string.class string.class boolean.class boolean.class }) }
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	column renderers
WITHOUT_CLASSIFICATION	default checked $non-nls-1$
WITHOUT_CLASSIFICATION	default checked $non-nls-1$
WITHOUT_CLASSIFICATION	default checked $non-nls-1$
WITHOUT_CLASSIFICATION	the text field should expand horizontally but have a fixed height
WITHOUT_CLASSIFICATION	this column actually consists of a row with two sub-columns the first column contains the labels and the second column contains the fields.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	main panel
WITHOUT_CLASSIFICATION	sampler selection
WITHOUT_CLASSIFICATION	canvas size
WITHOUT_CLASSIFICATION	if clic on the graph tab make the graph (without apply interval or filter)
WITHOUT_CLASSIFICATION	if use dynamic graph size is checked we disable the dimension fields
WITHOUT_CLASSIFICATION	force reload data
WITHOUT_CLASSIFICATION	not 'else if' because forcereloaddata
WITHOUT_CLASSIFICATION	button
WITHOUT_CLASSIFICATION	button
WITHOUT_CLASSIFICATION	search field
WITHOUT_CLASSIFICATION	checkboxes
WITHOUT_CLASSIFICATION	$non-nls-1$ default bold
WITHOUT_CLASSIFICATION	default option
WITHOUT_CLASSIFICATION	todo charset ?
WITHOUT_CLASSIFICATION	$non-nls-1$ default normal
WITHOUT_CLASSIFICATION	label count mean median 90% min max error %age throughpur pagesize
WITHOUT_CLASSIFICATION	api expects null not empty array
WITHOUT_CLASSIFICATION	api expects null not empty array
WITHOUT_CLASSIFICATION	changing color for column
WITHOUT_CLASSIFICATION	called from ctor so must not be overridable
WITHOUT_CLASSIFICATION	first lets draw the grid
WITHOUT_CLASSIFICATION	draw the x axis
WITHOUT_CLASSIFICATION	draw the y axis
WITHOUT_CLASSIFICATION	now draw the bar chart
WITHOUT_CLASSIFICATION	we sort the objects
WITHOUT_CLASSIFICATION	calculate the height
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	the test plan has to have more than 200 samples for it to generate half way decent distribution graph. the larger the sample the better the results.
WITHOUT_CLASSIFICATION	if the height is less than one we set it to one pixel
WITHOUT_CLASSIFICATION	draw a red line for 90% point
WITHOUT_CLASSIFICATION	draw an orange line for 50% point
WITHOUT_CLASSIFICATION	"<?xml "
WITHOUT_CLASSIFICATION	skip the leading bytes (if any)
WITHOUT_CLASSIFICATION	there is also a javax.swing.text.document class.
WITHOUT_CLASSIFICATION	clear result tab on ctrl-e
WITHOUT_CLASSIFICATION	must return a valid node or may generate an npe
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	main panel
WITHOUT_CLASSIFICATION	add the main panel and the graph
WITHOUT_CLASSIFICATION	we have received one more sample
WITHOUT_CLASSIFICATION	set up the graph with header footer y axis and graph display
WITHOUT_CLASSIFICATION	methods used in creating the gui
WITHOUT_CLASSIFICATION	these are not currently updated
WITHOUT_CLASSIFICATION	@guardedby("this")
WITHOUT_CLASSIFICATION	@guardedby("this")
WITHOUT_CLASSIFICATION	@guardedby("this")
WITHOUT_CLASSIFICATION	this.graph.clear()
WITHOUT_CLASSIFICATION	compute the new spline curve
WITHOUT_CLASSIFICATION	do nothing wait for the next pile to complete
WITHOUT_CLASSIFICATION	made currentsample volatile
WITHOUT_CLASSIFICATION	find jmeter home dir from the initial classpath
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	java on mac os can add a second entry to the initial classpath $non-nls-1$
WITHOUT_CLASSIFICATION	e.g. started from ide with full classpath allow override $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	add standard jar locations to initial classpath
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	only accept jar files $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-1$ $non-nls-2$ $non-nls-1$
WITHOUT_CLASSIFICATION	usesunc
WITHOUT_CLASSIFICATION	classfinder needs the classpath
WITHOUT_CLASSIFICATION	ensure that directory urls end in "/" $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	classfinder needs this
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	make the addurl method visible
WITHOUT_CLASSIFICATION	needed for shutdownclient
WITHOUT_CLASSIFICATION	if the -t flag is to "last" then the last loaded file (if any) is used
WITHOUT_CLASSIFICATION	set it
WITHOUT_CLASSIFICATION	reset it
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ jmeter.log $non-nls-1$ sample result log file $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	properties to be sent to remote servers
WITHOUT_CLASSIFICATION	should remote engines be stopped at end of non-gui test?
WITHOUT_CLASSIFICATION	check option combinations
WITHOUT_CLASSIFICATION	also initialises jmeter logging
WITHOUT_CLASSIFICATION	the following is needed for httpclient. (originally tried doing this in httpsampler2 but it appears that it was done too late when running in gui mode) set the commons logging default to avalon logkit if not already defined
WITHOUT_CLASSIFICATION	set some (hopefully!) useful properties
WITHOUT_CLASSIFICATION	start the server
WITHOUT_CLASSIFICATION	most recent
WITHOUT_CLASSIFICATION	update classloader if necessary
WITHOUT_CLASSIFICATION	bshinitlog)
WITHOUT_CLASSIFICATION	do what would be done earlier
WITHOUT_CLASSIFICATION	do what would be done earlier
WITHOUT_CLASSIFICATION	should not have any text arguments
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	set it
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	for httpclient for httpclient
WITHOUT_CLASSIFICATION	process command line property definitions these can potentially occur multiple times
WITHOUT_CLASSIFICATION	set it
WITHOUT_CLASSIFICATION	reset it
WITHOUT_CLASSIFICATION	set category
WITHOUT_CLASSIFICATION	set root level
WITHOUT_CLASSIFICATION	checks for last or lastsuffix. returns the last name with .jmx replaced by suffix.
WITHOUT_CLASSIFICATION	most recent $non-nls-1$
WITHOUT_CLASSIFICATION	run test in batch mode
WITHOUT_CLASSIFICATION	only add summariser if it can not be shared with the resultcollector
WITHOUT_CLASSIFICATION	not replaceable controller
WITHOUT_CLASSIFICATION	not enabled
WITHOUT_CLASSIFICATION	not enabled
WITHOUT_CLASSIFICATION	not a testelement
WITHOUT_CLASSIFICATION	not a replaceablecontroller
WITHOUT_CLASSIFICATION	listen to test and handle tidyup after non-gui test completes. if running a remote test then after waiting a few seconds for listeners to finish files it calls clientjmeterengine.tidyrmi() to deal with the naming timer thread.
WITHOUT_CLASSIFICATION	keep track of remote tests
WITHOUT_CLASSIFICATION	not yet used private jmeter _parent
WITHOUT_CLASSIFICATION	_parent = unused
WITHOUT_CLASSIFICATION	it will be null unless remotestop = true
WITHOUT_CLASSIFICATION	allow listeners to close files
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	allow enough time for jvm to exit
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	replacement only needs to occur when starting the engine @see standardjmeterengine.run()
WITHOUT_CLASSIFICATION	highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	deliberate use of deprecated ctor create non-gui version to avoid headless problems
WITHOUT_CLASSIFICATION	remove the disabled items for gui runs this is done in start.java
WITHOUT_CLASSIFICATION	this cannot be a jmeter class variable because properties are not initialised until later.
WITHOUT_CLASSIFICATION	this is a daemon thread which should only reach here if there are other non-daemon threads still active
WITHOUT_CLASSIFICATION	only accept commands from the local host
WITHOUT_CLASSIFICATION	needs to be public for tests
WITHOUT_CLASSIFICATION	needs to be public for testing
WITHOUT_CLASSIFICATION	skip parameters with a blank name (allows use of optional variables in parameter lists)
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.modifytestelement(testelement)
WITHOUT_CLASSIFICATION	enable delete (which may already be enabled but it won't hurt)
WITHOUT_CLASSIFICATION	enable delete (which may already be enabled but it won't hurt)
WITHOUT_CLASSIFICATION	highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	disable delete if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	disable delete if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	disable delete if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	disable delete if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	because collectionproperty.mergein will not prevent adding two properties of the same name we need to select the first value so that this element's values prevail over defaults provided by configuration elements
WITHOUT_CLASSIFICATION	will only contain argument or httpargument
WITHOUT_CLASSIFICATION	add(maketitlepanel() borderlayout.north)
WITHOUT_CLASSIFICATION	force the table to be at least 70 pixels high
WITHOUT_CLASSIFICATION	only contains argument (or httpargument)
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.modifytestelement(testelement)
WITHOUT_CLASSIFICATION	enable delete (which may already be enabled but it won't hurt)
WITHOUT_CLASSIFICATION	table still contains one or more rows so highlight (select) the appropriate one.
WITHOUT_CLASSIFICATION	table still contains one or more rows so highlight (select) the appropriate one.
WITHOUT_CLASSIFICATION	force a minimum table height of 70 pixels
WITHOUT_CLASSIFICATION	if a table cell is being edited we should accept the current value and stop the editing before adding a new row.
WITHOUT_CLASSIFICATION	evaluate the condition which can be blank or last = was the last sampler ok? otherwise evaluate the condition to see if it is not "false" if blank only evaluate at the end of the loop must only be called at start and end of loop @param loopend - are we at loop end? @return true means ok to continue
WITHOUT_CLASSIFICATION	if a table cell is being edited we must cancel the editing before deleting the row
WITHOUT_CLASSIFICATION	if a table cell is being edited we must cancel the editing before deleting the row
WITHOUT_CLASSIFICATION	highlight (select) the appropriate rows.
WITHOUT_CLASSIFICATION	hide window on esc
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	change to false after the first insert
WITHOUT_CLASSIFICATION	do update on enter
WITHOUT_CLASSIFICATION	in spite of the name this is actually used to determine if the loop controller is repeatable. the value is only used in nextisnull() when the loop end condition has been detected if forever==true then it calls resetloopcount() otherwise it calls setdone(true). loop controllers always set forever=true so that they will be executed next time the parent invokes them. thread group sets the value false so nextisnull() sets done and the thread group will not be repeated. however it's not clear that a thread group could ever be repeated.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	for unit test code @see testifcontroller
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	if blank only check previous sample when at end of loop $non-nls-1$
WITHOUT_CLASSIFICATION	cnd may be null if next() called us $non-nls-1$
WITHOUT_CLASSIFICATION	evaluation occurs when nbloops is not yet evaluated or when nbloops is equal to special value infinite_loop_count
WITHOUT_CLASSIFICATION	now evaluate the condition using javascript
WITHOUT_CLASSIFICATION	we should only evalute the condition if it is the first time ( first "iteration" ) we are called. for subsequent calls we are inside the ifcontrollergroup so then we just pass the control to the next item inside the if control
WITHOUT_CLASSIFICATION	if-test is false need to re-initialize indexes
WITHOUT_CLASSIFICATION	for getitercount
WITHOUT_CLASSIFICATION	runtime is zero - no point staying around
WITHOUT_CLASSIFICATION	??
WITHOUT_CLASSIFICATION	this is needed for onceonly to work like other loop controllers
WITHOUT_CLASSIFICATION	only create the map if it is required
WITHOUT_CLASSIFICATION	may be replaced by randomordercontroller
WITHOUT_CLASSIFICATION	incrementcurrent()
WITHOUT_CLASSIFICATION	must be a controller
WITHOUT_CLASSIFICATION	must be a controller
WITHOUT_CLASSIFICATION	can only match once
WITHOUT_CLASSIFICATION	i.e. "true"
WITHOUT_CLASSIFICATION	default true for compatibility
WITHOUT_CLASSIFICATION	/ transaction controller - parent
WITHOUT_CLASSIFICATION	check if transaction is done
WITHOUT_CLASSIFICATION	this transaction is done
WITHOUT_CLASSIFICATION	sample the children of the transaction
WITHOUT_CLASSIFICATION	if we do not get any sub samplers the transaction is done
WITHOUT_CLASSIFICATION	transaction controller - additional sample
WITHOUT_CLASSIFICATION	must be the start of the subtree
WITHOUT_CLASSIFICATION	assume success
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.modifytestelement(testelement)
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.modifytestelement(testelement)
WITHOUT_CLASSIFICATION	standalone
WITHOUT_CLASSIFICATION	embedded
WITHOUT_CLASSIFICATION	this transaction is done
WITHOUT_CLASSIFICATION	assume success
WITHOUT_CLASSIFICATION	check if it is the start of a new transaction must be the start of the subtree
WITHOUT_CLASSIFICATION	we need to call the super.next instead of this.next which is done in genericcontroller because if we call this.next() it will return the transactionsampler and we do not want that. we need to get the next real sampler or controller
WITHOUT_CLASSIFICATION	must be the end of the controller
WITHOUT_CLASSIFICATION	we have sampled one of our children
WITHOUT_CLASSIFICATION	we must set res to null now before sending the event for the transaction so that we can ignore that event in our sampleoccured method
WITHOUT_CLASSIFICATION	check if we are still sampling our children
WITHOUT_CLASSIFICATION	accumulate waiting time for later
WITHOUT_CLASSIFICATION	log.warn("constructor only intended for use in testing")
WITHOUT_CLASSIFICATION	ensure name is available for debugging
WITHOUT_CLASSIFICATION	it is the jmeterthread which knows how to sample a real sampler
WITHOUT_CLASSIFICATION	another subsample for the transaction
WITHOUT_CLASSIFICATION	set response code of transaction
WITHOUT_CLASSIFICATION	the transaction fails if any sub sample fails
WITHOUT_CLASSIFICATION	add the sub result to the transaction result
WITHOUT_CLASSIFICATION	add current time to total for later use (exclude pause time)
WITHOUT_CLASSIFICATION	if selected then generate parent sample otherwise as per original controller
WITHOUT_CLASSIFICATION	if selected add duration of timers to total runtime
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.modifytestelement(testelement)
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.modifytestelement(testelement)
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.modifytestelement(testelement)
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.modifytestelement(testelement)
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	the loop controller panel can be displayed standalone or inside another panel. for standalone we want to display the title name etc. (everything). however if we want to display it within another panel we just display the loop count fields (not the title and name).
WITHOUT_CLASSIFICATION	the loop controller panel can be displayed standalone or inside another panel. for standalone we want to display the title name etc. (everything). however if we want to display it within another panel we just display the loop count fields (not the title and name).
WITHOUT_CLASSIFICATION	standalone
WITHOUT_CLASSIFICATION	standalone
WITHOUT_CLASSIFICATION	embedded
WITHOUT_CLASSIFICATION	embedded
WITHOUT_CLASSIFICATION	text field $non-nls-1$
WITHOUT_CLASSIFICATION	loop label $non-nls-1$
WITHOUT_CLASSIFICATION	seconds label $non-nls-1$
WITHOUT_CLASSIFICATION	text field $non-nls-1$
WITHOUT_CLASSIFICATION	this check-box defines whether to save workbench content or not
WITHOUT_CLASSIFICATION	forever checkbox $non-nls-1$
WITHOUT_CLASSIFICATION	don't wrap this error - display it as is
WITHOUT_CLASSIFICATION	condition label
WITHOUT_CLASSIFICATION	limit the changes to client only test elements
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	text field $non-nls-1$
WITHOUT_CLASSIFICATION	use expression instead of javascript $non-nls-1$
WITHOUT_CLASSIFICATION	evaluate all checkbox $non-nls-1$
WITHOUT_CLASSIFICATION	text field this means exit if last sample failed $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	used by both standardjmeterengine and clientjmeterengine. in the latter case only resultcollectors are updated as only these are relevant to the client and updating other elements causes all sorts of problems. skip certain processing for remote tests
WITHOUT_CLASSIFICATION	called by jmeter listentotest if remotestop is true
WITHOUT_CLASSIFICATION	sent later
WITHOUT_CLASSIFICATION	should we create our own copy of the rmi registry?
WITHOUT_CLASSIFICATION	create this object using the specified port (0 means anonymous)
WITHOUT_CLASSIFICATION	should perhaps be log.warn but this causes the client-server test to fail
WITHOUT_CLASSIFICATION	throw an exception to ensure caller knows
WITHOUT_CLASSIFICATION	close window where another remote client might jump in
WITHOUT_CLASSIFICATION	sets active = true
WITHOUT_CLASSIFICATION	mail on userlist reported npe here - looks like only happens if there are network errors but check anyway
WITHOUT_CLASSIFICATION	called by - clientjmeterengine.exe() which is called on remotestop
WITHOUT_CLASSIFICATION	tidy up any objects we created
WITHOUT_CLASSIFICATION	help with garbage control
WITHOUT_CLASSIFICATION	the list of current thread groups may be setup main or teardown.
WITHOUT_CLASSIFICATION	may be null if called from unit test
WITHOUT_CLASSIFICATION	may be null if called from unit test
WITHOUT_CLASSIFICATION	e.g. not yet started
WITHOUT_CLASSIFICATION	concurrenthashmap does not need synch. here
WITHOUT_CLASSIFICATION	end of code to allow engine to be controlled remotely
WITHOUT_CLASSIFICATION	is testplan serialised?
WITHOUT_CLASSIFICATION	can't use for loop here because we remove elements
WITHOUT_CLASSIFICATION	deliberate use of deprecated method
WITHOUT_CLASSIFICATION	we totally failed to stop the test
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	concurrenthashmap does not need synch. here
WITHOUT_CLASSIFICATION	allow engine and threads to be stopped from outside a thread e.g. from beanshell server assumes that there is only one instance of the engine at any one time so it is not guaranteed to work
WITHOUT_CLASSIFICATION	concurrenthashmap does not need synch. here
WITHOUT_CLASSIFICATION	concurrenthashmap does not need synch. here
WITHOUT_CLASSIFICATION	else will be done by threadfinished()
WITHOUT_CLASSIFICATION	no point continuing
WITHOUT_CLASSIFICATION	tl - s&e
WITHOUT_CLASSIFICATION	merge in any additional test listeners currently only used by the function parser
WITHOUT_CLASSIFICATION	no longer needed
WITHOUT_CLASSIFICATION	for each thread group generate threads hand each thread the sampler controller and the listeners and the timer
WITHOUT_CLASSIFICATION	for each setup thread group
WITHOUT_CLASSIFICATION	for each setup thread group
WITHOUT_CLASSIFICATION	wait for all setup threads to exit
WITHOUT_CLASSIFICATION	the groups have all completed now
WITHOUT_CLASSIFICATION	here's where the test really starts. run a full gc now it's no harm at all (just delays test start by a tiny amount) and hitting one too early in the test can impair results for short tests.
WITHOUT_CLASSIFICATION	still running at this point i.e. setup was not cancelled for each thread group
WITHOUT_CLASSIFICATION	wait for all test threads to exit
WITHOUT_CLASSIFICATION	the groups have all completed now
WITHOUT_CLASSIFICATION	wait for post threads to stop
WITHOUT_CLASSIFICATION	concurrenthashmap does not need protecting
WITHOUT_CLASSIFICATION	will be null if stoptest thread has started
WITHOUT_CLASSIFICATION	needs to be run in a separate thread to allow rmi call to return ok
WITHOUT_CLASSIFICATION	allow rmi to complete
WITHOUT_CLASSIFICATION	tl - all
WITHOUT_CLASSIFICATION	don't add the timer
WITHOUT_CLASSIFICATION	should we match using regexes?
WITHOUT_CLASSIFICATION	created during class init not modified thereafter
WITHOUT_CLASSIFICATION	ignore self
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	i.e. shutdown/stopped during main thread groups re-enable for teardown if necessary
WITHOUT_CLASSIFICATION	ignore setup and post here. we could have filtered the searcher. but then future thread group objects wouldn't execute.
WITHOUT_CLASSIFICATION	must not convert testelement.gui_class etc
WITHOUT_CLASSIFICATION	end of thread groups no tgs found
WITHOUT_CLASSIFICATION	this should be enough to allow server to exit. default is false
WITHOUT_CLASSIFICATION	remote exit called by remotejmeterengineimpl.rexit() and by notifytestlistenersofend() iff exitaftertest is true in turn that is called by the run() method and the stoptest class also called
WITHOUT_CLASSIFICATION	classnames must contain this string [.functions.] $non-nls-1$ classnames must not contain this string [.gui.] $non-nls-1$
WITHOUT_CLASSIFICATION	check can cast for clone don't clone nothreadclone unless honournothreadclone == false
WITHOUT_CLASSIFICATION	clone will produce correct type
WITHOUT_CLASSIFICATION	dummy methods needed by function interface
WITHOUT_CLASSIFICATION	for use by functionhelper
WITHOUT_CLASSIFICATION	for use by functionhelper
WITHOUT_CLASSIFICATION	handle escapes
WITHOUT_CLASSIFICATION	found "${"
WITHOUT_CLASSIFICATION	i.e. '\\'
WITHOUT_CLASSIFICATION	save leading text
WITHOUT_CLASSIFICATION	set to start of string
WITHOUT_CLASSIFICATION	function does not exist so treat as per missing variable
WITHOUT_CLASSIFICATION	variable or function with no parameter list
WITHOUT_CLASSIFICATION	ensure that setparameters() is called.
WITHOUT_CLASSIFICATION	end of buffer
WITHOUT_CLASSIFICATION	store the following character
WITHOUT_CLASSIFICATION	detect functionname() so this does not generate empty string as the parameter
WITHOUT_CLASSIFICATION	normal exit occurs here
WITHOUT_CLASSIFICATION	should not happen with stringreader
WITHOUT_CLASSIFICATION	dropped out i.e. did not find closing ')'
WITHOUT_CLASSIFICATION	needed for serialisation testing
WITHOUT_CLASSIFICATION	the default title for the menu bar
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	process escaped characters store the \
WITHOUT_CLASSIFICATION	the application name $non-nls-1$
WITHOUT_CLASSIFICATION	this is used to keep track of local (non-remote) tests the name is chosen to be an unlikely host-name $non-nls-1$
WITHOUT_CLASSIFICATION	allow display/hide loggerpanel
WITHOUT_CLASSIFICATION	transparent jbutton with no border
WITHOUT_CLASSIFICATION	allow display/hide toolbar
WITHOUT_CLASSIFICATION	file new operation may set to null so just return app name
WITHOUT_CLASSIFICATION	allow display/hide log error/fatal counter
WITHOUT_CLASSIFICATION	teststatelistener implementation
WITHOUT_CLASSIFICATION	enable drag&drop install a custom transfer handler
WITHOUT_CLASSIFICATION	add the toolbar
WITHOUT_CLASSIFICATION	check for file lists specifically
WITHOUT_CLASSIFICATION	used by abstractreportgui
WITHOUT_CLASSIFICATION	helper method - also used by constructor
WITHOUT_CLASSIFICATION	this stores the state of the testelement
WITHOUT_CLASSIFICATION	ensure we use default bundle
WITHOUT_CLASSIFICATION	sampler error action buttons
WITHOUT_CLASSIFICATION	are we saving the whole tree?
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	n.b. originally called clear() @see also clearable
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	textarea
WITHOUT_CLASSIFICATION	allow for windows / chars in filename $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	beaninfo objects also contain locale-sensitive data -- flush them away
WITHOUT_CLASSIFICATION	$non-nls-1$ define awt wm_class string
WITHOUT_CLASSIFICATION	throws headlessexception
WITHOUT_CLASSIFICATION	defaults to continue
WITHOUT_CLASSIFICATION	space between borders and text
WITHOUT_CLASSIFICATION	generates configure pop-up dialogue for listeners from all methods in samplesaveconfiguration with the signature "boolean savexxx()". there must be a corresponding "void setxxx(boolean)" method and a property save_xxx which is used to name the field on the dialogue.
WITHOUT_CLASSIFICATION	target server panel
WITHOUT_CLASSIFICATION	limit length of log content
WITHOUT_CLASSIFICATION	if logger_panel_max_length is 0 it means all log events are kept
WITHOUT_CLASSIFICATION	the current node is now updated
WITHOUT_CLASSIFICATION	probably a missing jar
WITHOUT_CLASSIFICATION	forget about all guis we've created so far we'll need to re-created them all!
WITHOUT_CLASSIFICATION	first make sure we save the content of the current gui (since we will flush it away)
WITHOUT_CLASSIFICATION	should we allow directories?
WITHOUT_CLASSIFICATION	enable file revert action if a file is used
WITHOUT_CLASSIFICATION	if saveworkbench
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	@see org.apache.jmeter.gui.action.command#getactionnames()
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	now put the current gui in place. [this code was copied from the editcommand action -- we can't just trigger the action because that would populate the current node with the contents of the new gui -- which is empty.] fetch once probably caused by unit testing on headless system
WITHOUT_CLASSIFICATION	strpathsorjars - pathnames or jarfiles to search for classes classnames - required parent class(es) or annotations $non-nls-1$ innerclasses - should we include inner classes? contains - classname should contain this string ignore the classes which are specific to the reporting tool $non-nls-1$ notcontains - classname should not contain this string annotations - true if classnames are annotations
WITHOUT_CLASSIFICATION	whether to skip the delete confirmation dialogue $non-nls-1$
WITHOUT_CLASSIFICATION	save parent node for later
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	set the window visible immediately
WITHOUT_CLASSIFICATION	n.b. this only reloads if necessary (ignores the reference)
WITHOUT_CLASSIFICATION	add this node
WITHOUT_CLASSIFICATION	add all the child nodes of the node we are adding
WITHOUT_CLASSIFICATION	ensure the dialog is only created when it is first needed in turn this avoids scanning the templates until first needed
WITHOUT_CLASSIFICATION	make sure the file ends with proper extension
WITHOUT_CLASSIFICATION	check if the user is trying to save to an existing file
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	prevent instantiation
WITHOUT_CLASSIFICATION	prevent instantiation
WITHOUT_CLASSIFICATION	vk_plus + ctrl_down_mask did not work
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	note windows user preferences are stored relative to hkey_current_user\software\javasoft\prefs
WITHOUT_CLASSIFICATION	do not save user does not want to overwrite
WITHOUT_CLASSIFICATION	only update the stored copy of the tree for a full save refetch because convertsubtree affects it
WITHOUT_CLASSIFICATION	package protected to allow access from test code
WITHOUT_CLASSIFICATION	requires jmetertreenode
WITHOUT_CLASSIFICATION	we can only move a single node
WITHOUT_CLASSIFICATION	move to the parent
WITHOUT_CLASSIFICATION	move as a child of the next sibling
WITHOUT_CLASSIFICATION	commented as per sebb httpmail-archives.apache.org/mod_mbox/jmeter-dev/201307.mbox/%3ccaogo0vz0z3gmbfsq_gsb%2bp7ntuqlng6gy2ecvybd8_akb-dt5w%40mail.gmail.com%3e
WITHOUT_CLASSIFICATION	so elements can only be added as children
WITHOUT_CLASSIFICATION	select the node
WITHOUT_CLASSIFICATION	we must ask the user if it is ok to close current project
WITHOUT_CLASSIFICATION	load the file for this recent file command
WITHOUT_CLASSIFICATION	get the preference for the recent files
WITHOUT_CLASSIFICATION	create the menu item
WITHOUT_CLASSIFICATION	use the index as the name used when processing the action
WITHOUT_CLASSIFICATION	set the keystroke to use
WITHOUT_CLASSIFICATION	add the menu item
WITHOUT_CLASSIFICATION	add separator as the last item
WITHOUT_CLASSIFICATION	update menu items to reflect recent files
WITHOUT_CLASSIFICATION	update menu items to reflect recent files
WITHOUT_CLASSIFICATION	check if the new file is already in the recent list
WITHOUT_CLASSIFICATION	add the new file at the start of the list
WITHOUT_CLASSIFICATION	remove the last item from the list if it was a brand new file
WITHOUT_CLASSIFICATION	store the recent files
WITHOUT_CLASSIFICATION	assume no recent files
WITHOUT_CLASSIFICATION	update the menu items
WITHOUT_CLASSIFICATION	get the menu item
WITHOUT_CLASSIFICATION	at least one recent file menu item is visible
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ reduce font
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.gui.action.abstractaction#getactionnames()
WITHOUT_CLASSIFICATION	(non-javadoc) @see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.gui.action.abstractaction#doaction(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	reset previous result
WITHOUT_CLASSIFICATION	hide window on esc
WITHOUT_CLASSIFICATION	do not save user does not want to overwrite
WITHOUT_CLASSIFICATION	note windows user preferences are stored relative to hkey_current_user\software\javasoft\prefs
WITHOUT_CLASSIFICATION	limit the length of the menu text if needed
WITHOUT_CLASSIFICATION	if we are merging in another test plan we know the test plan is dirty now
WITHOUT_CLASSIFICATION	only check if we have not found any differences so far
WITHOUT_CLASSIFICATION	do search on enter
WITHOUT_CLASSIFICATION	do search
WITHOUT_CLASSIFICATION	don't clear the plan
WITHOUT_CLASSIFICATION	get the file name of the current project
WITHOUT_CLASSIFICATION	check if the user has loaded any file
WITHOUT_CLASSIFICATION	check if the user wants to drop any changes
WITHOUT_CLASSIFICATION	check if the user wants to revert
WITHOUT_CLASSIFICATION	close the current project
WITHOUT_CLASSIFICATION	reload the project
WITHOUT_CLASSIFICATION	spaces are not allowed in property names read from files
WITHOUT_CLASSIFICATION	e.g. windows xp => windows
WITHOUT_CLASSIFICATION	get the jcomponent from the visualizer
WITHOUT_CLASSIFICATION	$non-nls-1$ jmeter.properties
WITHOUT_CLASSIFICATION	engine may be null if it has not correctly started
WITHOUT_CLASSIFICATION	guipackage.getinstance().getmainframe().showstoppingmessage(name)
WITHOUT_CLASSIFICATION	minimal dimensions for dialog box
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	don't clear the plan
WITHOUT_CLASSIFICATION	check if the user wants to drop any changes
WITHOUT_CLASSIFICATION	get the string given from the choose and check the file extension.
WITHOUT_CLASSIFICATION	check if the user wants to create from template
WITHOUT_CLASSIFICATION	bottom buttons bar
WITHOUT_CLASSIFICATION	center position and 50% of screen size
WITHOUT_CLASSIFICATION	created by xstream reading templates.xml
WITHOUT_CLASSIFICATION	n.b. must use linkedhashmap for field type xstream creates a plain hashmap if one uses map as the field type.
WITHOUT_CLASSIFICATION	templates i
WITHOUT_CLASSIFICATION	field templatemanager#templates $non-nls-1$
WITHOUT_CLASSIFICATION	field template#name $non-nls-1$
WITHOUT_CLASSIFICATION	for relative links
WITHOUT_CLASSIFICATION	i.e. no disabled icon found
WITHOUT_CLASSIFICATION	must therefore set the enabled icon so there is at least some icon
WITHOUT_CLASSIFICATION	super(new jmetertreenode(new workbenchgui().createtestelement() null)) testelement tp = new testplangui().createtestelement() inittree(tp)
WITHOUT_CLASSIFICATION	super(new jmetertreenode(new workbench() null)) testelement tp = new testplan() inittree(tp new workbench())
WITHOUT_CLASSIFICATION	the node can be added in non gui mode at startup
WITHOUT_CLASSIFICATION	remove the workbench and testplan nodes
WITHOUT_CLASSIFICATION	insert the test plan node
WITHOUT_CLASSIFICATION	endwindow = window
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	check for file lists specifically
WITHOUT_CLASSIFICATION	check for file lists specifically
WITHOUT_CLASSIFICATION	this check the state of the testelement and if returns false it disable the loaded node
WITHOUT_CLASSIFICATION	init the tree assumes this is only called from gui mode
WITHOUT_CLASSIFICATION	let others know that the tree content has changed. this should not be necessary but without it nodes are not shown when the user uses the close menu item
WITHOUT_CLASSIFICATION	container endwindow jpopupmenu pop
WITHOUT_CLASSIFICATION	get the main frame.
WITHOUT_CLASSIFICATION	close any main menu that is open
WITHOUT_CLASSIFICATION	updatemainmenu(((jmeterguicomponent) getcurrentnode().getuserobject()).createpopupmenu())
WITHOUT_CLASSIFICATION	hold the nodes that should be removed on drop
WITHOUT_CLASSIFICATION	only allow a drag&drop inside the current jvm
WITHOUT_CLASSIFICATION	sort the selected tree path by row
WITHOUT_CLASSIFICATION	if child and a parent are selected only keep the parent
WITHOUT_CLASSIFICATION	remove unneeded nodes
WITHOUT_CLASSIFICATION	the tree accepts a jmx file
WITHOUT_CLASSIFICATION	the copy is disabled
WITHOUT_CLASSIFICATION	do not allow a drop on the drag source selections.
WITHOUT_CLASSIFICATION	testplan and workbench are the only children of the root
WITHOUT_CLASSIFICATION	do not allow a non-leaf node to be moved into one of its children
WITHOUT_CLASSIFICATION	re-use node association logic
WITHOUT_CLASSIFICATION	deal with the jmx files
WITHOUT_CLASSIFICATION	get drop location and mode
WITHOUT_CLASSIFICATION	drop mode == dropmode.on
WITHOUT_CLASSIFICATION	first copy the children as the call to copy.add will modify the collection we're iterating on
WITHOUT_CLASSIFICATION	expand the destination node
WITHOUT_CLASSIFICATION	if icon has not been defined then use gui_class property
WITHOUT_CLASSIFICATION	may be null during startup
WITHOUT_CLASSIFICATION	override in order to provide type safety
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$$non-nls-2$
WITHOUT_CLASSIFICATION	close.setpreferredsize(d)
WITHOUT_CLASSIFICATION	c.gridx = 1 c.gridy = 2 g.setconstraints(close c) panel.add(close)
WITHOUT_CLASSIFICATION	jfilechooser jfc = null
WITHOUT_CLASSIFICATION	for use by test code only
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	modifying
WITHOUT_CLASSIFICATION	override the implementations of the superclass forwarding all methods from the celleditor interface to our delegate.
WITHOUT_CLASSIFICATION	implementing the treecelleditor interface
WITHOUT_CLASSIFICATION	implementing the celleditor interface
WITHOUT_CLASSIFICATION	protected editordelegate class
WITHOUT_CLASSIFICATION	this won't work right if we remove components. but we don't so i'm not going to worry about it right now.
WITHOUT_CLASSIFICATION	datefields are not thread-safe $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	help menu $non-nls-1$
WITHOUT_CLASSIFICATION	options menu $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	dummy constructor to allo junit tests to work
WITHOUT_CLASSIFICATION	do nothing the current time will be returned
WITHOUT_CLASSIFICATION	convert position in buffer to calendar type assumes that pos >=0 (which is true for getcaretposition())
WITHOUT_CLASSIFICATION	if beyond the end then set to the end
WITHOUT_CLASSIFICATION	update the current field. the addend is only expected to be +1/-1 but other values will work. n.b. the roll() method only supports changes by a single unit - up or down
WITHOUT_CLASSIFICATION	jmenu reportmenu jmenuitem analyze
WITHOUT_CLASSIFICATION	restore position
WITHOUT_CLASSIFICATION	list for recent files menu items
WITHOUT_CLASSIFICATION	lists for remote engines menu items
WITHOUT_CLASSIFICATION	if the add menu already exists remove it.
WITHOUT_CLASSIFICATION	insert the add menu as the first menu item in the edit menu.
WITHOUT_CLASSIFICATION	called by mainframe#seteditmenu() which is called by editcommand#doaction and guipackage#localechanged
WITHOUT_CLASSIFICATION	there was a npe being thrown without the null check here.. jkb
WITHOUT_CLASSIFICATION	if we are enabling the edit-->add menu item then we also need to enable the edit menu. the edit menu may already be enabled but there's no harm it trying to enable it again.
WITHOUT_CLASSIFICATION	show the classname to the user
WITHOUT_CLASSIFICATION	this is used by the changelanguage class to define the locale
WITHOUT_CLASSIFICATION	also used by org.apache.jmeter.resources.packagetest
WITHOUT_CLASSIFICATION	note the item name is used by changelanguage to create a locale for that language so need to ensure that the language strings are valid if they exist use the locale language constants. also need to ensure that the names are valid resource entries too.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	overrides superclass method
WITHOUT_CLASSIFICATION	from the java look and feel guidelines if all items in a menu are disabled then disable the menu. makes sense.
WITHOUT_CLASSIFICATION	listener on model changes to maintain correct focusability
WITHOUT_CLASSIFICATION	add the recent files which will also add a separator that is visible when needed
WITHOUT_CLASSIFICATION	override action behaviour
WITHOUT_CLASSIFICATION	this is also used by lookandfeelcommand
WITHOUT_CLASSIFICATION	for testing only at present
WITHOUT_CLASSIFICATION	mostly delegates to model
WITHOUT_CLASSIFICATION	set default single model
WITHOUT_CLASSIFICATION	next two methods implement new api by delegation to model
WITHOUT_CLASSIFICATION	restore state display
WITHOUT_CLASSIFICATION	listen for enable changes
WITHOUT_CLASSIFICATION	empty override of superclass method
WITHOUT_CLASSIFICATION	convenience cast
WITHOUT_CLASSIFICATION	assume that the ui has not changed since the checkbos was created
WITHOUT_CLASSIFICATION	iterate state
WITHOUT_CLASSIFICATION	overrides of superclass methods
WITHOUT_CLASSIFICATION	fire actionevent
WITHOUT_CLASSIFICATION	force the events to fire
WITHOUT_CLASSIFICATION	empty overrides of superclass methods
WITHOUT_CLASSIFICATION	send itemevent
WITHOUT_CLASSIFICATION	set internal state
WITHOUT_CLASSIFICATION	send changeevent
WITHOUT_CLASSIFICATION	derived from httpwww.coderanch.com/t/342563/gui/java/tristate-checkbox
WITHOUT_CLASSIFICATION	nimbus works - after a fashion - with this
WITHOUT_CLASSIFICATION	drawcross(g x y)
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	href="#"
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	this won't work right if we remove components. but we don't so i'm not going to worry about it right now.
WITHOUT_CLASSIFICATION	predefined strings for makemenu(). these are used as menu categories in the menumap hashmap and also for resource lookup in messages.properties
WITHOUT_CLASSIFICATION	needed for all but nimbus nimbus works - after a fashion - with this nimbus works - after a fashion - with this reset
WITHOUT_CLASSIFICATION	private void drawcross(graphics g int x int y) { g.drawline(x + (iconwidth - 4) y + 2 x + 3 y + (iconheight - 5)) g.drawline(x + (iconwidth - 4) y + 3 x + 3 y + (iconheight - 4)) g.drawline(x + 3 y + 2 x + (iconwidth - 4) y + (iconheight - 5)) g.drawline(x + 3 y + 3 x + (iconwidth - 4) y + (iconheight - 4)) }
WITHOUT_CLASSIFICATION	painticon
WITHOUT_CLASSIFICATION	for use by test code only
WITHOUT_CLASSIFICATION	menu_add_xxx - controls which items are in the add menu menu_parent_xxx - controls which items are in the insert parent menu
WITHOUT_CLASSIFICATION	if type is unknown
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ don't try to instantiate these
WITHOUT_CLASSIFICATION	no point instantiating class
WITHOUT_CLASSIFICATION	allow headless testing
WITHOUT_CLASSIFICATION	don't add it again
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	empty box $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	can't add a workbench anywhere
WITHOUT_CLASSIFICATION	can't add a testplan anywhere
WITHOUT_CLASSIFICATION	force testfragment to only be pastable under a test plan
WITHOUT_CLASSIFICATION	allow everything else
WITHOUT_CLASSIFICATION	samplers and controllers need not apply but abstractthreadgroup (controller) is ok
WITHOUT_CLASSIFICATION	abstractthreadgroup is only allowed under a testplan
WITHOUT_CLASSIFICATION	includes thread group anything goes
WITHOUT_CLASSIFICATION	samplers and controllers need not apply
WITHOUT_CLASSIFICATION	all other
WITHOUT_CLASSIFICATION	is any node an instance of one of the classes?
WITHOUT_CLASSIFICATION	is any node an instance of one of the classes but not an exception?
WITHOUT_CLASSIFICATION	methods used for test cases
WITHOUT_CLASSIFICATION	all table cells are editable
WITHOUT_CLASSIFICATION	close action dialog box when tapping escape key
WITHOUT_CLASSIFICATION	prepare dialog box
WITHOUT_CLASSIFICATION	determine location on screen
WITHOUT_CLASSIFICATION	must be close or save_close commands
WITHOUT_CLASSIFICATION	text backup
WITHOUT_CLASSIFICATION	double click
WITHOUT_CLASSIFICATION	view only
WITHOUT_CLASSIFICATION	double (pressed) click
WITHOUT_CLASSIFICATION	in main table (evt mousepressed because cell is editable)
WITHOUT_CLASSIFICATION	else do nothing (cell isn't a string to edit)
WITHOUT_CLASSIFICATION	add the button to the button group
WITHOUT_CLASSIFICATION	add the button
WITHOUT_CLASSIFICATION	implicit return empty toolbar if icons == null
WITHOUT_CLASSIFICATION	get the standard toolbar properties
WITHOUT_CLASSIFICATION	already reported by icontoolbarbean
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	in seconds
WITHOUT_CLASSIFICATION	in seconds
WITHOUT_CLASSIFICATION	if a table cell is being edited we must cancel the editing before deleting the row
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	this.setpreferredsize(new dimension(400150))
WITHOUT_CLASSIFICATION	i.e. bypass the functors
WITHOUT_CLASSIFICATION	mainly needed for unit test serialisable tests
WITHOUT_CLASSIFICATION	n.b. nothreadclone is used to ensure that the teststarted() methods will share the same instance as the sampleoccured() methods so the teststarted() method can fetch the totals accumulator object for the samples to be stored in.
WITHOUT_CLASSIFICATION	ensure that a report is not skipped if we are slightly late in checking the time.
WITHOUT_CLASSIFICATION	this map allows summarisers with the same name to contribute to the same totals.
WITHOUT_CLASSIFICATION	@guardedby("accumulators") - needed to ensure consistency between this and instancecount
WITHOUT_CLASSIFICATION	@guardedby("accumulators") number of active tests
WITHOUT_CLASSIFICATION	cached copy of totals for this instance. the variables do not need to be synchronised as they are not shared between threads however the contents do need to be synchronized.
WITHOUT_CLASSIFICATION	@guardedby("mytotals")
WITHOUT_CLASSIFICATION	name of the accumulator. set up by teststarted().
WITHOUT_CLASSIFICATION	constructor is initially called once for each occurrence in the test plan. for gui several more instances are created. then clear is called at start of test. called several times during test startup. the name will not necessarily have been set at this point.
WITHOUT_CLASSIFICATION	contains the items needed to collect stats for a summariser
WITHOUT_CLASSIFICATION	copy the data to minimise the synch time
WITHOUT_CLASSIFICATION	stop double-reporting
WITHOUT_CLASSIFICATION	only if we have updated them
WITHOUT_CLASSIFICATION	$non-nls-1$ for intermediate use output line buffer
WITHOUT_CLASSIFICATION	rate is effectively infinite
WITHOUT_CLASSIFICATION	e.g. nullpointerexception
WITHOUT_CLASSIFICATION	avalon only
WITHOUT_CLASSIFICATION	avalon only
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	only print final delta if there were some samples in the delta and there has been at least one sample reported previously
WITHOUT_CLASSIFICATION	rounded seconds no point displaying decimals (less than 1% error) decimal would be zero
WITHOUT_CLASSIFICATION	fractional seconds this will round
WITHOUT_CLASSIFICATION	the teststarted/testended methods are called at the start and end of a test. however when a test is run on multiple nodes there is no guarantee that all the teststarted() methods will be called before all the threadstart() or sampleoccurred() methods for other threads - nor that testended() will only be called after all sampleoccurred() calls. the ordering is only guaranteed within a single test.
WITHOUT_CLASSIFICATION	we're not done yet
WITHOUT_CLASSIFICATION	boolean autoscale = true
WITHOUT_CLASSIFICATION	setup drawing area
WITHOUT_CLASSIFICATION	draw grid
WITHOUT_CLASSIFICATION	draw axis
WITHOUT_CLASSIFICATION	draw data lines
WITHOUT_CLASSIFICATION	constructor is initially called once for each occurrence in the test plan for gui several more instances are created then clear is called at start of test called several times during test startup the name will not necessarily have been set at this point.
WITHOUT_CLASSIFICATION	e.g. in non-gui mode
WITHOUT_CLASSIFICATION	this string is used to identify local test runs so must not be a valid host name $non-nls-1$
WITHOUT_CLASSIFICATION	static variables
WITHOUT_CLASSIFICATION	lock used to guard static mutable variables
WITHOUT_CLASSIFICATION	@guardedby("lock")
WITHOUT_CLASSIFICATION	@guardedby("lock")
WITHOUT_CLASSIFICATION	keep track of the file writer and the configuration as the instance used to close them is not the same as the instance that creates them. this means one cannot use the saved printwriter or use getsaveconfig()
WITHOUT_CLASSIFICATION	instance variables (guarded by volatile)
WITHOUT_CLASSIFICATION	unfortunately abstracttestelement does not call super.clone()
WITHOUT_CLASSIFICATION	successonly and erroronly cannot both be set
WITHOUT_CLASSIFICATION	no need for the hook now
WITHOUT_CLASSIFICATION	only add the hook once
WITHOUT_CLASSIFICATION	no point reading the file if there's no visualiser
WITHOUT_CLASSIFICATION	probably avalon format
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	only for use by csvsaveservice
WITHOUT_CLASSIFICATION	constructor is initially called once for each occurrence in the test plan for gui several more instances are created then clear is called at start of test called several times during test startup the name will not necessarily have been set at this point.
WITHOUT_CLASSIFICATION	@guardedby("lock")
WITHOUT_CLASSIFICATION	@guardedby("lock")
WITHOUT_CLASSIFICATION	we are processing xml assume xstream
WITHOUT_CLASSIFICATION	ensure that the sample save config is not shared between copied nodes n.b. clone only seems to be used for client-server tests
WITHOUT_CLASSIFICATION	find the name of the directory containing the file and create it - if there is one
WITHOUT_CLASSIFICATION	todo charset ? get the first line and see if it is xml
WITHOUT_CLASSIFICATION	can't do it as a static initialisation because saveservice is being constructed when this is called
WITHOUT_CLASSIFICATION	write the eol separately so we generate lf line ends on unix and windows $non-nls-1$
WITHOUT_CLASSIFICATION	write the eol separately so we generate lf line ends on unix and windows $non-nls-1$
WITHOUT_CLASSIFICATION	added in version 1.1 $non-nls-1$
WITHOUT_CLASSIFICATION	returns false if directory already exists so need to check again
WITHOUT_CLASSIFICATION	else if might have been created by another process so not a problem
WITHOUT_CLASSIFICATION	returns false if the file did not contain the terminator
WITHOUT_CLASSIFICATION	found the string
WITHOUT_CLASSIFICATION	reads to end of line or end of file
WITHOUT_CLASSIFICATION	!saveasxml
WITHOUT_CLASSIFICATION	truncate the file
WITHOUT_CLASSIFICATION	should throw exception back to caller
WITHOUT_CLASSIFICATION	used by monitorhealthvisualizer.add(sampleresult res)
WITHOUT_CLASSIFICATION	+ jmx property names do not change
WITHOUT_CLASSIFICATION	- jmx property names
WITHOUT_CLASSIFICATION	constructor for use during startup (intended for non-gui use) @param name of summariser
WITHOUT_CLASSIFICATION	this is called once for each occurrence in the test plan before the start of the test. the super.clear() method clears the name (and all other properties) so it is called last.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	notused private static final string database = "db" $non_nls-1$
WITHOUT_CLASSIFICATION	only for use by csvsaveservice
WITHOUT_CLASSIFICATION	associate sample with file name
WITHOUT_CLASSIFICATION	mutable int to keep track of sample count
WITHOUT_CLASSIFICATION	chunk the output if necessary
WITHOUT_CLASSIFICATION	should we save the sample?
WITHOUT_CLASSIFICATION	finish processing samples
WITHOUT_CLASSIFICATION	needed to avoid class cast error in clear.java
WITHOUT_CLASSIFICATION	may be the empty string
WITHOUT_CLASSIFICATION	client log file
WITHOUT_CLASSIFICATION	n.b. to add a new field remember the following - static _xyz - instance xyz=_xyz - clone s.xyz = xyz (perhaps) - setxyz(boolean) - savexyz() - update samplesaveconfigurationconverter to add new fields to marshall() and shouldserialisemember() - update sampleresultconverter and/or httpsampleconverter - update csvsaveservice csv_xxxx makeresultfromdelimitedstring printablefieldnamestostring static{} - update messages.properties to add save_xyz entry - update jmeter.properties to add new property - update listeners.xml to add new property csv and xml names etc. - take screenshot sample_result_config.png - update listeners.xml and component_reference.xml with new dimensions (might not change)
WITHOUT_CLASSIFICATION	not currently needed by any remoteable classes anyway would probably be too expensive in terms of network traffic void testiterationstart(loopiterationevent event)
WITHOUT_CLASSIFICATION	ensure output is flushed
WITHOUT_CLASSIFICATION	server log file
WITHOUT_CLASSIFICATION	holds details of which sample attributes to save. the pop-up dialogue for this is created by the class savepropertydialog which assumes for each field xxx - methods have the signature "boolean savexxx()" - a corresponding "void setxxx(boolean)" method - messages.properties contains the key save_xxx
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	--------------------------------------------------------------------- property file constants ---------------------------------------------------------------------
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	initialise values from properties
WITHOUT_CLASSIFICATION	save bytes read $non_nls-1$
WITHOUT_CLASSIFICATION	save url $non_nls-1$
WITHOUT_CLASSIFICATION	save filename for resultsaver $non_nls-1$
WITHOUT_CLASSIFICATION	save hostname for resultsaver $non_nls-1$
WITHOUT_CLASSIFICATION	don't save this as it is derived from the time format
WITHOUT_CLASSIFICATION	$non_nls-1$ $non_nls-1$ $non_nls-1$ $non_nls-1$ $non_nls-1$ $non_nls-1$ $non_nls-1$
WITHOUT_CLASSIFICATION	prepare for a pretty date
WITHOUT_CLASSIFICATION	make transient as we don't want to save the simpledataformat class also there's currently no way to change the value via the gui so changing it later means editting the jmx or recreating the listener.
WITHOUT_CLASSIFICATION	defaults from properties
WITHOUT_CLASSIFICATION	reversed compare allows for null
WITHOUT_CLASSIFICATION	don't save this as not settable via gui
WITHOUT_CLASSIFICATION	don't save this - only needed for processing csv headers currently
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	optional processing instruction for line 2 e.g. <?xml-stylesheet type="text/xsl" href="../extras/jmeter-results-detail-report_21.xsl"?> $non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$ n.b. remember to update the equals and hashcode methods when adding new variables.
WITHOUT_CLASSIFICATION	give access to initial configuration
WITHOUT_CLASSIFICATION	is derived from properties only
WITHOUT_CLASSIFICATION	we know we are comparing to another samplesaveconfiguration
WITHOUT_CLASSIFICATION	/ start of standard save/set access methods /
WITHOUT_CLASSIFICATION	as per 2.0 branch
WITHOUT_CLASSIFICATION	/ end of standard field accessors /
WITHOUT_CLASSIFICATION	maintain relationship
WITHOUT_CLASSIFICATION	defaults to empty
WITHOUT_CLASSIFICATION	used by old save service
WITHOUT_CLASSIFICATION	used by samplesaveconfigurationconverter.unmarshall()
WITHOUT_CLASSIFICATION	get appropriate sender class governed by the behaviour set in the jmeter property
WITHOUT_CLASSIFICATION	static fields are set by the server when the class is constructed
WITHOUT_CLASSIFICATION	@guardedby("samplestore")
WITHOUT_CLASSIFICATION	locate the statistical sample colector
WITHOUT_CLASSIFICATION	store the new statistical result collector
WITHOUT_CLASSIFICATION	add a new wrapper samplevent
WITHOUT_CLASSIFICATION	checking for and creating initial timestamp to check against
WITHOUT_CLASSIFICATION	synchronized(samplestore)
WITHOUT_CLASSIFICATION	list of variable names to be saved in jtl files
WITHOUT_CLASSIFICATION	the values. entries may be null but there will be the correct number.
WITHOUT_CLASSIFICATION	the hostname cannot change during a run so safe to cache it just once
WITHOUT_CLASSIFICATION	only for unit tests
WITHOUT_CLASSIFICATION	needs to be accessible from test code
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	variables maintained by server code @guardedby("samplestore") maintain separate count of samples for speed
WITHOUT_CLASSIFICATION	the default used by {@link #setresponsedata(string string)}
WITHOUT_CLASSIFICATION	empty arrays which can be returned instead of null
WITHOUT_CLASSIFICATION	never return null
WITHOUT_CLASSIFICATION	never return null
WITHOUT_CLASSIFICATION	never return null
WITHOUT_CLASSIFICATION	never return null
WITHOUT_CLASSIFICATION	e.g. text/html charset=utf-8
WITHOUT_CLASSIFICATION	todo timestamp == 0 means either not yet initialised or no stamp available (e.g. when loading a results file)
WITHOUT_CLASSIFICATION	allow for non-sample time
WITHOUT_CLASSIFICATION	don't return null if not set
WITHOUT_CLASSIFICATION	@guardedby("this"")
WITHOUT_CLASSIFICATION	(is this really the character set?) e.g. iso-8895-1 utf-8
WITHOUT_CLASSIFICATION	allows override of sample size in case sampler does not want to store all the data
WITHOUT_CLASSIFICATION	allow read-only access from test code
WITHOUT_CLASSIFICATION	how long between checks of nanotime default 5000ms set to <=0 to disable the thread
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	make sure we start with a reasonable value
WITHOUT_CLASSIFICATION	allow testcode access to the settings
WITHOUT_CLASSIFICATION	allow test code to change the default usenanotime setting
WITHOUT_CLASSIFICATION	allow test code to change the default usenanotime and nanothreadsleep settings
WITHOUT_CLASSIFICATION	helper method to get 1 ms resolution timing.
WITHOUT_CLASSIFICATION	helper method to maintain timestamp relationships
WITHOUT_CLASSIFICATION	for use by saveservice only. @param stamp - this may be a start time or an end time @param elapsed
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	ok todo ??
WITHOUT_CLASSIFICATION	create unique object as marker for end of queue
WITHOUT_CLASSIFICATION	ok ok ok ok files is created automatically and applies per instance ok
WITHOUT_CLASSIFICATION	ok ok ok
WITHOUT_CLASSIFICATION	ok ok don't copy this it is per instance resultfilename = res.resultfilename
WITHOUT_CLASSIFICATION	todo ?? ok ok
WITHOUT_CLASSIFICATION	n.b. default charset is used deliberately here
WITHOUT_CLASSIFICATION	n.b. default charset is used deliberately here
WITHOUT_CLASSIFICATION	extract charset and store as dataencoding n.b. the meta tag <meta http-equiv="content-type" content="text/html charset=foobar"> is now processed by httpsampleresult#getdataencodingwithdefault $non-nls-1$
WITHOUT_CLASSIFICATION	handle contenttype text/plain charset=iso-8859-1 format=flowed
WITHOUT_CLASSIFICATION	check for quoted string $non-nls-1$ remove quotes
WITHOUT_CLASSIFICATION	list of types that are known to be binary
WITHOUT_CLASSIFICATION	list of types that are known to be ascii although they may appear to be binary
WITHOUT_CLASSIFICATION	determine if content-type is known to be binary i.e. not displayable as text. @param ct content type @return true if content-type is of type binary.
WITHOUT_CLASSIFICATION	helper methods n.b. setstarttime must be called before setendtime setstarttime is used by httpsampleresult to clone the parent sampler and allow the original start time to be kept
WITHOUT_CLASSIFICATION	how many times we had to wait to queue a sample
WITHOUT_CLASSIFICATION	can now afford to wait a bit longer between checks
WITHOUT_CLASSIFICATION	created by client
WITHOUT_CLASSIFICATION	created by server in readresolve method
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	note this is an instance field (and is not transient) so is created by the jmeter client and propagated to the server instance by rmi. [a static field would be recreated on the server and would pick up the server properties] $non-nls-1$
WITHOUT_CLASSIFICATION	client
WITHOUT_CLASSIFICATION	client log file
WITHOUT_CLASSIFICATION	server log file
WITHOUT_CLASSIFICATION	checking for and creating initial timestamp to check against
WITHOUT_CLASSIFICATION	synchronized(samplestore)
WITHOUT_CLASSIFICATION	how long we had to wait (nanoseconds)
WITHOUT_CLASSIFICATION	for reading from csv files ignored currently
WITHOUT_CLASSIFICATION	returns null if nothing on queue currently
WITHOUT_CLASSIFICATION	wait longer than a clock pulse (generally 10-15ms) catch an early clock pulse to reduce slop.
WITHOUT_CLASSIFICATION	ok because samplestore is of type arraylist<sampleevent>
WITHOUT_CLASSIFICATION	created by samplesenderfactory
WITHOUT_CLASSIFICATION	strip the response data before writing but only for a successful request.
WITHOUT_CLASSIFICATION	we failed to add the element first time
WITHOUT_CLASSIFICATION	server
WITHOUT_CLASSIFICATION	try to process as many as possible
WITHOUT_CLASSIFICATION	compute bytes before stripping
WITHOUT_CLASSIFICATION	configuration items set up by readresolve
WITHOUT_CLASSIFICATION	should be a user provided class name
WITHOUT_CLASSIFICATION	static fields are resolved on the server
WITHOUT_CLASSIFICATION	instance fields are copied from the client instance
WITHOUT_CLASSIFICATION	set clonedset
WITHOUT_CLASSIFICATION	server-only work item
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	extended property name $non-nls-1$
WITHOUT_CLASSIFICATION	clonedset = new hashset()
WITHOUT_CLASSIFICATION	need to maintain our own elapsed timer to ensure more accurate aggregation
WITHOUT_CLASSIFICATION	may be called by xstream
WITHOUT_CLASSIFICATION	copy data that is shared between samples (i.e. the key items)
WITHOUT_CLASSIFICATION	assume result is ok because we add the sample count in later
WITHOUT_CLASSIFICATION	add sample counter
WITHOUT_CLASSIFICATION	add error counter
WITHOUT_CLASSIFICATION	overrides sampleresult
WITHOUT_CLASSIFICATION	for reading csv files
WITHOUT_CLASSIFICATION	superclass is not typed
WITHOUT_CLASSIFICATION	ensure output follows version
WITHOUT_CLASSIFICATION	names of dataholder entries for jtl processing $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	names of dataholder entries for jmx processing $non-nls-1$
WITHOUT_CLASSIFICATION	override wrapmapper in order to insert the wrapper in the chain
WITHOUT_CLASSIFICATION	provide our own aliasing using strings rather than classes
WITHOUT_CLASSIFICATION	translate alias to classname and then delegate to wrapped class
WITHOUT_CLASSIFICATION	translate to alias and then delegate to wrapped class
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	was type but that caused findbugs warning
WITHOUT_CLASSIFICATION	this is needed to stop xstream keeping copies of each class
WITHOUT_CLASSIFICATION	the xml header with placeholder for encoding since that is controlled by property $non-nls-1$
WITHOUT_CLASSIFICATION	default file name $non-nls-1$
WITHOUT_CLASSIFICATION	property name used to define file name $non-nls-1$
WITHOUT_CLASSIFICATION	default to overall format and then to version 2.2
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	define file format property names $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	define file format versions $non-nls-1$
WITHOUT_CLASSIFICATION	holds the mappings from the saveservice properties file key alias entry full class name there may be multiple aliases which map to the same class
WITHOUT_CLASSIFICATION	holds the reverse mappings key full class name entry primary alias
WITHOUT_CLASSIFICATION	this is written to jmx files by scriptwrapperconverter read from properties file written to jmx files
WITHOUT_CLASSIFICATION	must match _version property value in saveservice.properties used to ensure saveservice.properties and saveservice are updated simultaneously expected version $non-nls-1$
WITHOUT_CLASSIFICATION	internal information only read from saveservice.properties file $non-nls-1$ must match revision id value in saveservice.properties used to ensure saveservice.properties and saveservice are updated simultaneously expected value $non-nls-1$ read from properties file $non-nls-1$
WITHOUT_CLASSIFICATION	helper method to simplify alias creation from properties
WITHOUT_CLASSIFICATION	can have multiple aliases for same target classname
WITHOUT_CLASSIFICATION	load the alias properties
WITHOUT_CLASSIFICATION	now create the aliases
WITHOUT_CLASSIFICATION	remove the leading "_"
WITHOUT_CLASSIFICATION	for converters to use
WITHOUT_CLASSIFICATION	called by save function
WITHOUT_CLASSIFICATION	get the outputwriter to use
WITHOUT_CLASSIFICATION	use deprecated method to avoid duplicating code
WITHOUT_CLASSIFICATION	use deprecated method to avoid duplicating code
WITHOUT_CLASSIFICATION	ensure terminated properly
WITHOUT_CLASSIFICATION	used by test code
WITHOUT_CLASSIFICATION	used by test code
WITHOUT_CLASSIFICATION	get the inputreader to use
WITHOUT_CLASSIFICATION	used by resultcollector.sampleoccurred(sampleevent event)
WITHOUT_CLASSIFICATION	used by resultcollector#recordstats()
WITHOUT_CLASSIFICATION	routines for testsaveservice
WITHOUT_CLASSIFICATION	allow test code to check for spurious class references
WITHOUT_CLASSIFICATION	boolean ok = true
WITHOUT_CLASSIFICATION	don't bother checking class is present if it is to be updated
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	extract version digits from string of the form #revision n.mm # (where # is actually $ above)
WITHOUT_CLASSIFICATION	check if we have a encoding to use from properties
WITHOUT_CLASSIFICATION	check if we have a encoding to use from properties
WITHOUT_CLASSIFICATION	check if we have a encoding to use from properties
WITHOUT_CLASSIFICATION	we use the default character set encoding of the jre
WITHOUT_CLASSIFICATION	we use the default character set encoding of the jre
WITHOUT_CLASSIFICATION	we use the default character set encoding of the jre
WITHOUT_CLASSIFICATION	used by resultcollector when creating output files
WITHOUT_CLASSIFICATION	write xml header if we have the charset to use for encoding
WITHOUT_CLASSIFICATION	we do not use getencoding method of writer since that returns the historical name
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	--------------------------------------------------------------------- xml result file constants and field name constants ---------------------------------------------------------------------
WITHOUT_CLASSIFICATION	used by scriptwrapperconverter
WITHOUT_CLASSIFICATION	shared with testelementsaver $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	probably no point in converting this to return a sampleevent
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	called by saveservice.loadtree(inputstream reader) if xstream loading fails
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	ok $non-nls-1$
WITHOUT_CLASSIFICATION	do upgrade translation
WITHOUT_CLASSIFICATION	must always agree
WITHOUT_CLASSIFICATION	delete any properties whose name converts to the empty string
WITHOUT_CLASSIFICATION	create the property
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	called by resultcollector#loadexistingfile() if xstream loading fails
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	--------------------------------------------------------------------- additional csv result file constants and field name constants ---------------------------------------------------------------------
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	used to enclose variable name labels to distinguish from any of the above labels $non-nls-1$
WITHOUT_CLASSIFICATION	initial config from properties
WITHOUT_CLASSIFICATION	date formats to try if the time format does not parse as milliseconds
WITHOUT_CLASSIFICATION	$non-nls-1$ (for compatibility this is the original default)
WITHOUT_CLASSIFICATION	enough to read the header column names get the first line and see if it is the header
WITHOUT_CLASSIFICATION	not a valid header
WITHOUT_CLASSIFICATION	may change the format later restart from beginning
WITHOUT_CLASSIFICATION	may be updated
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	this assumes the header names are all single words with no spaces word followed by 0 or more repeats of (non-word char + word) where the non-word char (\2) is the same e.g. abc|def|ghi but not abd|def~ghi $non-nls-1$ last entries may be quoted strings
WITHOUT_CLASSIFICATION	save the name for error reporting
WITHOUT_CLASSIFICATION	method is only ever called from one thread at a time so it's ok to use a static dateformat
WITHOUT_CLASSIFICATION	can this happen?
WITHOUT_CLASSIFICATION	strip off the trailing delimiter
WITHOUT_CLASSIFICATION	map header names to set() methods
WITHOUT_CLASSIFICATION	these entries must be in the same order as columns are saved/restored.
WITHOUT_CLASSIFICATION	both these are needed in the list even though they set the same variable
WITHOUT_CLASSIFICATION	try default delimiter
WITHOUT_CLASSIFICATION	now validate the result
WITHOUT_CLASSIFICATION	failed to recognise the header
WITHOUT_CLASSIFICATION	we know the column names all exist so create the config
WITHOUT_CLASSIFICATION	check if the line is a header
WITHOUT_CLASSIFICATION	check for quoted variable names
WITHOUT_CLASSIFICATION	they are always last
WITHOUT_CLASSIFICATION	unknown column name
WITHOUT_CLASSIFICATION	out of order
WITHOUT_CLASSIFICATION	don't add delimiter first time round
WITHOUT_CLASSIFICATION	these methods handle parameters that could contain delimiters or quotes
WITHOUT_CLASSIFICATION	these methods handle parameters that cannot contain delimiters or quotes
WITHOUT_CLASSIFICATION	find the first non-null message
WITHOUT_CLASSIFICATION	need both sample and error count to be any use
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	did not find \n put the character back
WITHOUT_CLASSIFICATION	need to append something so delimiter is added
WITHOUT_CLASSIFICATION	=================================== csv quote/unquote handling ==============================
WITHOUT_CLASSIFICATION	private versions of what might eventually be part of commons-csv or commons-lang/io
WITHOUT_CLASSIFICATION	double the quote char
WITHOUT_CLASSIFICATION	doubled quote => quote
WITHOUT_CLASSIFICATION	state of the parser
WITHOUT_CLASSIFICATION	remove following \n if present
WITHOUT_CLASSIFICATION	do we have some data or a trailing empty field? we have some data we've started a field just seen ""
WITHOUT_CLASSIFICATION	while not eof eof (or end of string) so collect any remaining data
WITHOUT_CLASSIFICATION	this is not currently used by jmeter code. as it uses sun-specific code (the only such in jmeter) it has been commented out for now.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	delete any properties whose name converts to the empty string
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	rethrow other errors
WITHOUT_CLASSIFICATION	mainly for testelementconverter
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	don't save empty comments - except for the testplan (to maintain compatibility)
WITHOUT_CLASSIFICATION	skip special properties if required
WITHOUT_CLASSIFICATION	remap the class name
WITHOUT_CLASSIFICATION	could be null if it has been deleted via nameupdater
WITHOUT_CLASSIFICATION	could be null if it has been deleted via nameupdater
WITHOUT_CLASSIFICATION	no need to check version just process the attributes if present
WITHOUT_CLASSIFICATION	only decode strings if inversion = 1.0
WITHOUT_CLASSIFICATION	names of properties that are handled specially
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	otherwise don't save anything - no point
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	if we have a file but no data then read the file
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	skip special properties if required
WITHOUT_CLASSIFICATION	no need to check version just process the attributes if present
WITHOUT_CLASSIFICATION	could be null if it has been deleted via nameupdater
WITHOUT_CLASSIFICATION	don't save empty comments
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	always decode
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	$non-nls-1$ must be same as header.hname - but that is built later
WITHOUT_CLASSIFICATION	n.b. these must agree with the new member names in samplesaveconfiguration $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	additional member names which are currently not written out $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	these are new fields not saved unless true
WITHOUT_CLASSIFICATION	these fields are not currently saved or restored
WITHOUT_CLASSIFICATION	save most things
WITHOUT_CLASSIFICATION	save the new fields - but only if they are not the default
WITHOUT_CLASSIFICATION	helper method to simplify marshall routine
WITHOUT_CLASSIFICATION	maintain backward compatibility (bytes was not in the jmx file)
WITHOUT_CLASSIFICATION	make sure decoding follows input file
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	@guardedby("this")
WITHOUT_CLASSIFICATION	@guardedby("this") note this also guards against possible window in checkforopenfiles()
WITHOUT_CLASSIFICATION	volatile needed to ensure safe publication
WITHOUT_CLASSIFICATION	cannot be instantiated
WITHOUT_CLASSIFICATION	getparentfile() may not work on relative paths
WITHOUT_CLASSIFICATION	checks for entries in use
WITHOUT_CLASSIFICATION	tidy up any unused entries
WITHOUT_CLASSIFICATION	must first convert to absolute path names to ensure parents are available
WITHOUT_CLASSIFICATION	read first line and forget
WITHOUT_CLASSIFICATION	need to check if we are at eof already
WITHOUT_CLASSIFICATION	already at eof
WITHOUT_CLASSIFICATION	ok we still have some data restore it
WITHOUT_CLASSIFICATION	if file encoding is specified read using that encoding otherwise use default platform encoding
WITHOUT_CLASSIFICATION	if file encoding is specified write using that encoding otherwise use default platform encoding
WITHOUT_CLASSIFICATION	package access for test code only
WITHOUT_CLASSIFICATION	some known attribute names just for convenience
WITHOUT_CLASSIFICATION	store the resource bundle as an attribute of the beandescriptor
WITHOUT_CLASSIFICATION	localize the property names and descriptions
WITHOUT_CLASSIFICATION	we also provide the resource bundle
WITHOUT_CLASSIFICATION	i is used below
WITHOUT_CLASSIFICATION	set the bean's property to the value we just obtained
WITHOUT_CLASSIFICATION	we can't assign null to primitive types.
WITHOUT_CLASSIFICATION	can occur running headless on jenkins
WITHOUT_CLASSIFICATION	value was not provided and this is allowed
WITHOUT_CLASSIFICATION	not an expression (isn't or can't be) not null.
WITHOUT_CLASSIFICATION	the known tags are assumed to be valid
WITHOUT_CLASSIFICATION	was not a tag so if we can't accept other values
WITHOUT_CLASSIFICATION	delegate the final check to the typeeditor
WITHOUT_CLASSIFICATION	setastext failed not valid
WITHOUT_CLASSIFICATION	setastext succeeded valid
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	/ final because called from ctor
WITHOUT_CLASSIFICATION	localize the bean name $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	not an expression (isn't or can't be) not null.
WITHOUT_CLASSIFICATION	provide an initial edit value if necessary -- this is an heuristic that tries to provide the most convenient initial edit value
WITHOUT_CLASSIFICATION	not interested in this method.
WITHOUT_CLASSIFICATION	not an expression (isn't or can't be) not null. may throw illegalargumentexc.
WITHOUT_CLASSIFICATION	not an expression (can't be or isn't) not null.
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	so we can detect it
WITHOUT_CLASSIFICATION	so we can detect it
WITHOUT_CLASSIFICATION	revert to the previous value
WITHOUT_CLASSIFICATION	ensure value is propagated to editor
WITHOUT_CLASSIFICATION	get and sort the property descriptors
WITHOUT_CLASSIFICATION	should be quicker to find the editors if they are registered.
WITHOUT_CLASSIFICATION	private static final logger log = loggingmanager.getloggerforclass()
WITHOUT_CLASSIFICATION	$non-nls-$
WITHOUT_CLASSIFICATION	obtain the propertyeditors
WITHOUT_CLASSIFICATION	index is also used for accessing editors array
WITHOUT_CLASSIFICATION	don't get editors for hidden or non-read-write properties
WITHOUT_CLASSIFICATION	we check the class type above
WITHOUT_CLASSIFICATION	initialize the editor with the provided default value or null
WITHOUT_CLASSIFICATION	in case of bsf and jsr elements i want to add textareaeditor as a listener to scriptlanguage combobox.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	some editors do tiny transformations (e.g. "true" to "true") may throw illegalargumentexception
WITHOUT_CLASSIFICATION	initialize the gui
WITHOUT_CLASSIFICATION	acceptsnull acceptsexpressions acceptsother
WITHOUT_CLASSIFICATION	uninitialized -- set it to the defaults
WITHOUT_CLASSIFICATION	now set the editors to the element's values
WITHOUT_CLASSIFICATION	for labels
WITHOUT_CLASSIFICATION	for editors
WITHOUT_CLASSIFICATION	for panels
WITHOUT_CLASSIFICATION	if the displayname is the empty string leave it like that.
WITHOUT_CLASSIFICATION	might be null (e.g. in testing)
WITHOUT_CLASSIFICATION	map of translations for tags only created if there is at least one tag and a resourcebundle has been provided.
WITHOUT_CLASSIFICATION	the minimum index of the tags in the combo box
WITHOUT_CLASSIFICATION	the maximum index of the tags in the combo box
WITHOUT_CLASSIFICATION	only for use from test code
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	called from ctor so must not be overridable
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	add a 0-sized invisible component that will take all the vertical space that nobody wants
WITHOUT_CLASSIFICATION	track where tags start
WITHOUT_CLASSIFICATION	and where they end
WITHOUT_CLASSIFICATION	check if the entry index corresponds to a tag if so return the tag this also works if the tags were not translated
WITHOUT_CLASSIFICATION	not a tag entry return the original value
WITHOUT_CLASSIFICATION	will revert to last valid value if invalid
WITHOUT_CLASSIFICATION	replace a string with its translation if one exists
WITHOUT_CLASSIFICATION	not sure if null is passed in but no harm in setting it
WITHOUT_CLASSIFICATION	not sure if null is passed in but no harm in setting it
WITHOUT_CLASSIFICATION	a quick verification just in case
WITHOUT_CLASSIFICATION	get the beaninfo
WITHOUT_CLASSIFICATION	in other gui component cleargui resets the value to defaults one as there is one gui per element with testbeangui as it's shared its default values are only known here we must call setvalues with element (as it holds default values) otherwise we will get values as computed by customizer reset and not default ones
WITHOUT_CLASSIFICATION	fetch data from screen fields
WITHOUT_CLASSIFICATION	copy all property values from the map into the element
WITHOUT_CLASSIFICATION	cannot be null
WITHOUT_CLASSIFICATION	copy all property values into the map
WITHOUT_CLASSIFICATION	handles hex as well
WITHOUT_CLASSIFICATION	some editors may need the descriptor
WITHOUT_CLASSIFICATION	create a button to trigger the file chooser
WITHOUT_CLASSIFICATION	create a panel containing the combo and the button
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	not sure if null is passed in but no harm in setting it
WITHOUT_CLASSIFICATION	handles hex as well
WITHOUT_CLASSIFICATION	configure(element) super.clear() set name enabled. put the default values back into the new element
WITHOUT_CLASSIFICATION	programming error. don't continue.
WITHOUT_CLASSIFICATION	programming error. don't continue.
WITHOUT_CLASSIFICATION	we don't want to show expert beans in the menus unless we're in expert mode
WITHOUT_CLASSIFICATION	may be impossible but no harm in checking
WITHOUT_CLASSIFICATION	- jmx
WITHOUT_CLASSIFICATION	get a wrappereditor to provide the field or combo -- we'll delegate most methods to it
WITHOUT_CLASSIFICATION	acceptsnull acceptsexpressions acceptsother default
WITHOUT_CLASSIFICATION	assume it's string
WITHOUT_CLASSIFICATION	+ jmx attributes - do not change
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	there's only 1 test plan so can cache the mode here
WITHOUT_CLASSIFICATION	- jmx field names
WITHOUT_CLASSIFICATION	create transient item
WITHOUT_CLASSIFICATION	we set the classpath
WITHOUT_CLASSIFICATION	action to be taken when a sampler error occurs
WITHOUT_CLASSIFICATION	property name
WITHOUT_CLASSIFICATION	thread-specific variables saved here to save recalculation
WITHOUT_CLASSIFICATION	clone should never return null
WITHOUT_CLASSIFICATION	clone should never return null
WITHOUT_CLASSIFICATION	only samplers have the thread context set up by jmeterthread at present so suppress the warning for now
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.samplers.remotethreadslistener#threadfinished()
WITHOUT_CLASSIFICATION	clone should never return null
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	this("test plan") setfunctionalmode(false) setserialized(false)
WITHOUT_CLASSIFICATION	setfunctionalmode(false) setserialized(false)
WITHOUT_CLASSIFICATION	log.warn("threadcontext was not set up - should only happen in junit testing" new throwable("debug"))
WITHOUT_CLASSIFICATION	default implementation
WITHOUT_CLASSIFICATION	moved from jmeter class
WITHOUT_CLASSIFICATION	lifecycle methods
WITHOUT_CLASSIFICATION	jmx property name do not change
WITHOUT_CLASSIFICATION	value is the correct class
WITHOUT_CLASSIFICATION	value is of type collection<jmeterproperty>
WITHOUT_CLASSIFICATION	private static stringproperty defaultproperty = new stringproperty()
WITHOUT_CLASSIFICATION	name cannot be null
WITHOUT_CLASSIFICATION	two null values -- return equal
WITHOUT_CLASSIFICATION	empty collection local var is here to allow suppresswarnings
WITHOUT_CLASSIFICATION	empty collection
WITHOUT_CLASSIFICATION	empty collection
WITHOUT_CLASSIFICATION	should not happen
WITHOUT_CLASSIFICATION	should not happen
WITHOUT_CLASSIFICATION	empty collection ok to cast local var is here to allow suppresswarnings
WITHOUT_CLASSIFICATION	n.b. other classes rely on this returning just the string.
WITHOUT_CLASSIFICATION	|| !ctx.issamplingstarted()
WITHOUT_CLASSIFICATION	synch is probably not needed as only called before run starts
WITHOUT_CLASSIFICATION	this is only possible for 3rd party controllers by default
WITHOUT_CLASSIFICATION	called from multiple threads
WITHOUT_CLASSIFICATION	backward compatibility
WITHOUT_CLASSIFICATION	check there is a gui
WITHOUT_CLASSIFICATION	check there is a gui
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	expensive so do once
WITHOUT_CLASSIFICATION	i.e. "true"
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	based on this scheduler is enabled or disabled
WITHOUT_CLASSIFICATION	gives access to parent thread threadgroup
WITHOUT_CLASSIFICATION	for access to stop methods.
WITHOUT_CLASSIFICATION	the following variables may be set/read from multiple threads.
WITHOUT_CLASSIFICATION	may be set from a different thread
WITHOUT_CLASSIFICATION	ensure that interrupt cannot overlap with shutdown
WITHOUT_CLASSIFICATION	tl - is
WITHOUT_CLASSIFICATION	see below for reason for this change. just in case this causes problems allow the change to be backed out
WITHOUT_CLASSIFICATION	threadcontext is not thread-safe so keep within thread
WITHOUT_CLASSIFICATION	might be found by contoller.next()
WITHOUT_CLASSIFICATION	prevent any further interrupts
WITHOUT_CLASSIFICATION	make sure current interrupt is finished prevent another starting yet
WITHOUT_CLASSIFICATION	allow any pending interrupt to complete (ok because currentsampler == null)
WITHOUT_CLASSIFICATION	find parent controllers of current sampler
WITHOUT_CLASSIFICATION	ok to call testbeanhelper.prepare()
WITHOUT_CLASSIFICATION	check if we are running a transaction
WITHOUT_CLASSIFICATION	find the package for the transaction
WITHOUT_CLASSIFICATION	check if the transaction is done
WITHOUT_CLASSIFICATION	get the transaction sample result
WITHOUT_CLASSIFICATION	check assertions for the transaction sample
WITHOUT_CLASSIFICATION	notify listeners with the transaction sample result
WITHOUT_CLASSIFICATION	transaction is done we do not have a sampler to sample
WITHOUT_CLASSIFICATION	recursive call
WITHOUT_CLASSIFICATION	check if we have a sampler to sample
WITHOUT_CLASSIFICATION	get the sampler ready to sample
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	testbeanhelper.prepare() is ok
WITHOUT_CLASSIFICATION	check there is a gui
WITHOUT_CLASSIFICATION	check there is a gui
WITHOUT_CLASSIFICATION	ok to call testbeanhelper.prepare()
WITHOUT_CLASSIFICATION	must not ignore this one make sure errors are output to the log file
WITHOUT_CLASSIFICATION	tell the monitor we are done remove the threadlocal entry
WITHOUT_CLASSIFICATION	perform the actual sample
WITHOUT_CLASSIFICATION	if we got any results then perform processing on the result
WITHOUT_CLASSIFICATION	do not send subsamples to listeners which receive the transaction sample
WITHOUT_CLASSIFICATION	do not send subsamples to listeners which receive the transaction sample
WITHOUT_CLASSIFICATION	add the result as subsample of transaction if we are in a transaction
WITHOUT_CLASSIFICATION	check if thread or test should be stopped
WITHOUT_CLASSIFICATION	finish up
WITHOUT_CLASSIFICATION	checks the scheduler to stop the iteration
WITHOUT_CLASSIFICATION	check if this instance is present in transaction listener list
WITHOUT_CLASSIFICATION	check for the same instance
WITHOUT_CLASSIFICATION	listeners = controller.getlisteners()
WITHOUT_CLASSIFICATION	set the scheduler to start
WITHOUT_CLASSIFICATION	call threadlistener.threadstarted()
WITHOUT_CLASSIFICATION	call threadlistener.threadfinished()
WITHOUT_CLASSIFICATION	probably not possible but check anyway
WITHOUT_CLASSIFICATION	called by standardjmeterengine testaction and accesslogsampler
WITHOUT_CLASSIFICATION	delay between checks
WITHOUT_CLASSIFICATION	don't bother reporting stop test interruptions
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	fetch once must be done under lock (also protects against null)
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	delay between checks
WITHOUT_CLASSIFICATION	used by debugsampler
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	only create the map if it is required
WITHOUT_CLASSIFICATION	all implementations extend testelement
WITHOUT_CLASSIFICATION	all implementations extend testelement
WITHOUT_CLASSIFICATION	int
WITHOUT_CLASSIFICATION	number of active threads in this group
WITHOUT_CLASSIFICATION	copy our name into that of the controller otherwise name reverts
WITHOUT_CLASSIFICATION	5 seconds
WITHOUT_CLASSIFICATION	+ jmx entries - do not change the string values
WITHOUT_CLASSIFICATION	- jmx entries
WITHOUT_CLASSIFICATION	if true the scheduler is enabled
WITHOUT_CLASSIFICATION	set the start time for the thread duration is in seconds
WITHOUT_CLASSIFICATION	force a sensible start time
WITHOUT_CLASSIFICATION	enables the scheduler
WITHOUT_CLASSIFICATION	maximum pause to use
WITHOUT_CLASSIFICATION	fetch once needs to stay constant
WITHOUT_CLASSIFICATION	needs to be same time for all threads in the group
WITHOUT_CLASSIFICATION	set start and end time
WITHOUT_CLASSIFICATION	n.b. context needs to be fetched in the correct thread
WITHOUT_CLASSIFICATION	store context from root thread to pass it to created threads
WITHOUT_CLASSIFICATION	copy in threadstarter thread context from calling thread
WITHOUT_CLASSIFICATION	needs to be constant for all threads
WITHOUT_CLASSIFICATION	else start immediately
WITHOUT_CLASSIFICATION	set the endtime for the thread
WITHOUT_CLASSIFICATION	duration is in seconds starting from when the threads start
WITHOUT_CLASSIFICATION	ramp-up delay (except first)
WITHOUT_CLASSIFICATION	no point continuing beyond the end time
WITHOUT_CLASSIFICATION	already waited
WITHOUT_CLASSIFICATION	threadstarter is daemon but we don't want sampler threads to be so too
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	return all the associated counts together
WITHOUT_CLASSIFICATION	set stop flag interrupt sampler if possible
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	set the start time for the thread duration is in seconds
WITHOUT_CLASSIFICATION	@guardedgy("this")
WITHOUT_CLASSIFICATION	@guardedgy("this")
WITHOUT_CLASSIFICATION	@guardedgy("this")
WITHOUT_CLASSIFICATION	@guardedgy("this")
WITHOUT_CLASSIFICATION	@guardedgy("this")
WITHOUT_CLASSIFICATION	currently only used by jmeterthread
WITHOUT_CLASSIFICATION	check if the property exists
WITHOUT_CLASSIFICATION	relative start-up time
WITHOUT_CLASSIFICATION	not used
WITHOUT_CLASSIFICATION	must be an old test plan
WITHOUT_CLASSIFICATION	initialise the gui field values
WITHOUT_CLASSIFICATION	maximum size to convert a document to text (default 10mb)
WITHOUT_CLASSIFICATION	-1 to disable the write limit
WITHOUT_CLASSIFICATION	open the stream
WITHOUT_CLASSIFICATION	close the stream
WITHOUT_CLASSIFICATION	the string is made private so the compiler can't propagate it into jmeterutils. (java compilers may make copies of final variables) this ensures that jmeterutils always gets the correct version even if jmeterutils is not re-compiled during the build.
WITHOUT_CLASSIFICATION	this assumes that the jmv treats a class file as a resource (not all do).
WITHOUT_CLASSIFICATION	convert to url for manifest
WITHOUT_CLASSIFICATION	default to plain version
WITHOUT_CLASSIFICATION	not instantiable
WITHOUT_CLASSIFICATION	allow reversion to original shared session context
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	if we are using a single session otherwise
WITHOUT_CLASSIFICATION	also set up httpclient defaults
WITHOUT_CLASSIFICATION	no point doing this on a per-connection basis as there is currently no way to configure it. so we leave it to the defaults set up in the ssl context
WITHOUT_CLASSIFICATION	httpsurlconnection secureconn = (httpsurlconnection) conn secureconn.setsslsocketfactory(this.getcontext().getsocketfactory())
WITHOUT_CLASSIFICATION	creates new ssl context @return ssl context @throws generalsecurityexception
WITHOUT_CLASSIFICATION	now wrap the default managers with our key manager
WITHOUT_CLASSIFICATION	get the default trust managers
WITHOUT_CLASSIFICATION	wrap the defaults in our custom trust manager
WITHOUT_CLASSIFICATION	implementation moved to jmeterkeystore as only that has the keytype info
WITHOUT_CLASSIFICATION	++ for testbean implementations only passed to file or script
WITHOUT_CLASSIFICATION	file to source (overrides script)
WITHOUT_CLASSIFICATION	script (if file not provided)
WITHOUT_CLASSIFICATION	bsf/jsr223 language to use -- for testbean implementations only
WITHOUT_CLASSIFICATION	can be the empty string
WITHOUT_CLASSIFICATION	for use by the server script
WITHOUT_CLASSIFICATION	characters per second to emulate
WITHOUT_CLASSIFICATION	save the actual socket
WITHOUT_CLASSIFICATION	override so we can intercept the stream
WITHOUT_CLASSIFICATION	forward all the sslsocket methods to the input socket
WITHOUT_CLASSIFICATION	also forward all the socket methods.
WITHOUT_CLASSIFICATION	scriptruntime.call(cx fun global args global)
WITHOUT_CLASSIFICATION	must wrap non-scriptable objects before presenting to rhino
WITHOUT_CLASSIFICATION	includes javascriptexception rethrows errors
WITHOUT_CLASSIFICATION	superclass does not support types
WITHOUT_CLASSIFICATION	initialize context and global scope object
WITHOUT_CLASSIFICATION	read-only access after class has been initialised
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	re-throw errors because we're supposed to let the jvm see it don't re-throw stackoverflows because we know we've corrected the situation by aborting the loop and a long stacktrace would end up on the user's console
WITHOUT_CLASSIFICATION	calculate each time as likely to be called for each add
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	characters per second to emulate
WITHOUT_CLASSIFICATION	likely a wrapped exception from a liveconnect call. display its stack trace as a diagnostic
WITHOUT_CLASSIFICATION	for n values in an aggregate sample the average value = (val/n) so need to add n (val/n) (val/n) = val val / n
WITHOUT_CLASSIFICATION	load additionnal name conversion rules from plugins
WITHOUT_CLASSIFICATION	if we are creating a jsr223 element add the cache key property. note that this cannot be done in the jsr223beaninfosupport class because that causes problems with the group its properties are not always set up before they are needed. this cause various issues with the gui - wrong field attributes (should not allow null) - sometimes gui is completely mangled - field appears at start rather than at end. - the following warning is logged jmeter.testbeans.gui.generictestbeancustomizer org.apache.jmeter.util.jsr223testelement#cachekey does not appear to have been configured adding the group here solves these issues and it's also possible to add the key just before the script panel to which it relates. it's not yet clear why this should be but it looks as though createpropertygroup does not work properly if it is called from any subclasses of this class.
WITHOUT_CLASSIFICATION	names are strings
WITHOUT_CLASSIFICATION	no point dividing by 1
WITHOUT_CLASSIFICATION	1024=bytes per kb
WITHOUT_CLASSIFICATION	account for multiple samples not yet intialised
WITHOUT_CLASSIFICATION	1000 = millisecs/sec
WITHOUT_CLASSIFICATION	conversions for milli and nano seconds
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	characters per second to emulate
WITHOUT_CLASSIFICATION	use actual class name for log
WITHOUT_CLASSIFICATION	most subclasses will need these
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	@guardedby("this")
WITHOUT_CLASSIFICATION	@guardedby("this")
WITHOUT_CLASSIFICATION	@guardedby("this")
WITHOUT_CLASSIFICATION	we have a file read and process it
WITHOUT_CLASSIFICATION	we have a file read and process it
WITHOUT_CLASSIFICATION	wraps the socket in a slow ssl socket if necessary
WITHOUT_CLASSIFICATION	what host am i running on?
WITHOUT_CLASSIFICATION	special flag for use in debugging resources
WITHOUT_CLASSIFICATION	provide random numbers to whomever wants one
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	for java sockets for commons httpclient sockets
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	done by finally block filereader.close()
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ for use in debugging $non-nls-1$
WITHOUT_CLASSIFICATION	are we the default language?
WITHOUT_CLASSIFICATION	jmeter.fail("could not read internal resource. " + "archive is broken.")
WITHOUT_CLASSIFICATION	keep existing settings
WITHOUT_CLASSIFICATION	don't change locale from en_gb to en
WITHOUT_CLASSIFICATION	language change worked check if we at least found the correct language
WITHOUT_CLASSIFICATION	no need to reset locale
WITHOUT_CLASSIFICATION	reset locale if necessary so other locales are properly handled
WITHOUT_CLASSIFICATION	special mode for debugging resource handling
WITHOUT_CLASSIFICATION	special mode for debugging resource handling
WITHOUT_CLASSIFICATION	can be returned by headless hosts
WITHOUT_CLASSIFICATION	can be returned by headless hosts
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	redisplay.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	file to source (overrides script)
WITHOUT_CLASSIFICATION	script (if file not provided)
WITHOUT_CLASSIFICATION	use actual class name for log
WITHOUT_CLASSIFICATION	most subclasses will need these
WITHOUT_CLASSIFICATION	end method
WITHOUT_CLASSIFICATION	$non-nls-1$ reader = xmlfactory.newsaxparser().getxmlreader()
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	done
WITHOUT_CLASSIFICATION	todo charset ?
WITHOUT_CLASSIFICATION	todo charset ?
WITHOUT_CLASSIFICATION	empty value $non-nls-1$
WITHOUT_CLASSIFICATION	if not empty then script in scripttext will be compiled and cached
WITHOUT_CLASSIFICATION	lrumap does not support generics (yet)
WITHOUT_CLASSIFICATION	add variables for access to context and variables
WITHOUT_CLASSIFICATION	for use in debugging
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	also handles read(byte[])
WITHOUT_CLASSIFICATION	-- for testbean implementations only
WITHOUT_CLASSIFICATION	ensure variables are not null
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ set params as a single line $non-nls-1$ and set as an array $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	characters per second to emulate
WITHOUT_CLASSIFICATION	override so we can intercept the stream
WITHOUT_CLASSIFICATION	override so we can intercept the stream
WITHOUT_CLASSIFICATION	overridden by non-testbean implementations to return the property value instead
WITHOUT_CLASSIFICATION	overridden by non-testbean implementations to return the property value instead
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	@guardedby("this")
WITHOUT_CLASSIFICATION	now temp2 has the lowest of the three components
WITHOUT_CLASSIFICATION	this sequence is borrowed from org.apache.commons.httpclient.protocol.reflectionsocketfactory.createsocket
WITHOUT_CLASSIFICATION	convert to telnet port
WITHOUT_CLASSIFICATION	prompt is unnecessary
WITHOUT_CLASSIFICATION	reset for other users
WITHOUT_CLASSIFICATION	tell server that we are done
WITHOUT_CLASSIFICATION	todo - charset?
WITHOUT_CLASSIFICATION	this.setdaemon(true)
WITHOUT_CLASSIFICATION	have we yet tried to load the truststore?
WITHOUT_CLASSIFICATION	ensure not null
WITHOUT_CLASSIFICATION	the password can be defined as a property this dialogue is provided to allow it to be entered at run-time. however this does not gain much as the dialogue does not (yet) support hidden input
WITHOUT_CLASSIFICATION	we've tried
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	should not happen
WITHOUT_CLASSIFICATION	empty if not provided use the system property to determine the type otherwise use the name
WITHOUT_CLASSIFICATION	also handles write(byte[])
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	@guardedby("this")
WITHOUT_CLASSIFICATION	@guardedby("this")
WITHOUT_CLASSIFICATION	temporary copies so can set the final ones
WITHOUT_CLASSIFICATION	this class is not serialised the interpreter instance for this class
WITHOUT_CLASSIFICATION	script file to initialize the interpreter with
WITHOUT_CLASSIFICATION	logger to use during initialization and script run
WITHOUT_CLASSIFICATION	called from ctor so must be private (or final but it does not seem useful elsewhere)
WITHOUT_CLASSIFICATION	do this before starting the script
WITHOUT_CLASSIFICATION	check file so we can distinguish file error from script error
WITHOUT_CLASSIFICATION	cannot find the file locally so try the bin directory
WITHOUT_CLASSIFICATION	programming error
WITHOUT_CLASSIFICATION	also programming error
WITHOUT_CLASSIFICATION	for use by unit tests
WITHOUT_CLASSIFICATION	configure the document builder factory
WITHOUT_CLASSIFICATION	elements have empty nodevalue but we are usually interested in their content
WITHOUT_CLASSIFICATION	default empty array to prevent npes
WITHOUT_CLASSIFICATION	no point checking an empty keystore
WITHOUT_CLASSIFICATION	note if is == null the arrays will be empty
WITHOUT_CLASSIFICATION	api expects null not empty array see httpdocs.oracle.com/javase/6/docs/api/javax/net/ssl/x509keymanager.html
WITHOUT_CLASSIFICATION	i.e. is == null
WITHOUT_CLASSIFICATION	i.e. is == null
WITHOUT_CLASSIFICATION	number of samples in this entry
WITHOUT_CLASSIFICATION	the following getters may appear not to be used - however they are invoked via the functor class
WITHOUT_CLASSIFICATION	no samples collected
WITHOUT_CLASSIFICATION	better behaviour when howlong=0 or lasttime=0
WITHOUT_CLASSIFICATION	better behaviour when howlong=0 or lasttime=0
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.modifytestelement(testelement)
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	1024=bytes per kb
WITHOUT_CLASSIFICATION	we really should never get here because eval will throw an exception if xpath is invalid but whatever better safe
WITHOUT_CLASSIFICATION	no samples collected
WITHOUT_CLASSIFICATION	better behaviour when howlong=0 or lasttime=0
WITHOUT_CLASSIFICATION	this is our first sample set the start time to current timestamp
WITHOUT_CLASSIFICATION	this is our first sample set the start time to current timestamp
WITHOUT_CLASSIFICATION	always update the end time
WITHOUT_CLASSIFICATION	= elapsed
WITHOUT_CLASSIFICATION	appears not to be used - however it is invoked via the functor class
WITHOUT_CLASSIFICATION	only for use by test code
WITHOUT_CLASSIFICATION	code duplicated from getpagesize()
WITHOUT_CLASSIFICATION	a checkbox choosing whether or not only successes should be logged.
WITHOUT_CLASSIFICATION	overrides abstractjmeterguicomponent.configure(testelement)
WITHOUT_CLASSIFICATION	keep track of classes created
WITHOUT_CLASSIFICATION	(for instructional purposes only!)
WITHOUT_CLASSIFICATION	perform the sampling
WITHOUT_CLASSIFICATION	start timing
WITHOUT_CLASSIFICATION	do something here
WITHOUT_CLASSIFICATION	set up the sample result details
WITHOUT_CLASSIFICATION	end timimg
WITHOUT_CLASSIFICATION	helper method
WITHOUT_CLASSIFICATION	helper method to set up the gui screen
WITHOUT_CLASSIFICATION	standard setup
WITHOUT_CLASSIFICATION	add the standard title
WITHOUT_CLASSIFICATION	specific setup
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	the name of the property used to hold our data $non-nls-1$
WITHOUT_CLASSIFICATION	note the file panel already includes the error logging checkbox so we don't have to add it explicitly.
WITHOUT_CLASSIFICATION	did sample succeed? sampler data
WITHOUT_CLASSIFICATION	create a data input text field @return the panel for entering the data
WITHOUT_CLASSIFICATION	do something
WITHOUT_CLASSIFICATION	do something
WITHOUT_CLASSIFICATION	a string property
WITHOUT_CLASSIFICATION	number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	we have a default
WITHOUT_CLASSIFICATION	throwable wanted
WITHOUT_CLASSIFICATION	comment wanted
WITHOUT_CLASSIFICATION	common output function
WITHOUT_CLASSIFICATION	routine to perform the output (also used by __logn() function)
WITHOUT_CLASSIFICATION	$non-nls-1
WITHOUT_CLASSIFICATION	$non-nls-1
WITHOUT_CLASSIFICATION	n.b. if the string is not recognised debug is assumed
WITHOUT_CLASSIFICATION	thread method is potentially expensive
WITHOUT_CLASSIFICATION	allow variable to be omitted
WITHOUT_CLASSIFICATION	vars can be null if run from testplan
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	@see testregexfunction for unit tests
WITHOUT_CLASSIFICATION	remove initial empty entry
WITHOUT_CLASSIFICATION	$non-nls1$ $non-nls1$
WITHOUT_CLASSIFICATION	vars will be null on testplan
WITHOUT_CLASSIFICATION	did we find beanshell?
WITHOUT_CLASSIFICATION	number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	relatively expensive operation so do it once
WITHOUT_CLASSIFICATION	pass in some variables
WITHOUT_CLASSIFICATION	mainly for bsh.evalerror
WITHOUT_CLASSIFICATION	execute the script
WITHOUT_CLASSIFICATION	helper method for use by scripts
WITHOUT_CLASSIFICATION	can happen if called during test closedown
WITHOUT_CLASSIFICATION	parameters are stored here
WITHOUT_CLASSIFICATION	for unit tests see testjexlfunction
WITHOUT_CLASSIFICATION	string or integer
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	n.b. stop reading the file if we get a blank line this allows for trailing comments in the file
WITHOUT_CLASSIFICATION	vars will be null on testplan
WITHOUT_CLASSIFICATION	now evaluate the script getting the result
WITHOUT_CLASSIFICATION	two delimiters in a row add an empty string
WITHOUT_CLASSIFICATION	lines in the file split into columns
WITHOUT_CLASSIFICATION	0-based
WITHOUT_CLASSIFICATION	name of the file
WITHOUT_CLASSIFICATION	catch the trailing delimiter
WITHOUT_CLASSIFICATION	the beginning of the line is a "delimiter" so that abc returns "" "a" "b" "c"
WITHOUT_CLASSIFICATION	will be null if function is used on testplan
WITHOUT_CLASSIFICATION	return jmetercontextservice.getcontext().getcurrentsampler().getname()
WITHOUT_CLASSIFICATION	added to support external testing
WITHOUT_CLASSIFICATION	only modified by static block so no need to synchronize subsequent read-only access
WITHOUT_CLASSIFICATION	may be null if function is used on testplan
WITHOUT_CLASSIFICATION	@guardedby("this")
WITHOUT_CLASSIFICATION	@guardedby("this")
WITHOUT_CLASSIFICATION	@guardedby("this")
WITHOUT_CLASSIFICATION	@guardedby("this")
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	desc.add("use fully qualified host name true/false (default false)") $non-nls-1$
WITHOUT_CLASSIFICATION	vars will be null on testplan
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	we have a default
WITHOUT_CLASSIFICATION	throwable wanted
WITHOUT_CLASSIFICATION	@guardedby("this") needed for error messages
WITHOUT_CLASSIFICATION	@guardedby("this") buffered reader
WITHOUT_CLASSIFICATION	decimalformat adds the number to the end of the format if there are no formatting characters so we need a way to prevent this from messing up the file name.
WITHOUT_CLASSIFICATION	@guardedby("this") should we try to open the file?
WITHOUT_CLASSIFICATION	have we used mycurrent yet? set to 1 if start number is missing (to allow for end without start)
WITHOUT_CLASSIFICATION	low chances to be non numeric we parse
WITHOUT_CLASSIFICATION	low chances to be non numeric we parse
WITHOUT_CLASSIFICATION	to avoid re-opening the file repeatedly after an error only try to open it in the first execute() call (it may be re=opened at eof but that will cause at most one failure.)
WITHOUT_CLASSIFICATION	don't process invalid numbers
WITHOUT_CLASSIFICATION	don't process invalid numbers (including "")
WITHOUT_CLASSIFICATION	has chances to be a var
WITHOUT_CLASSIFICATION	for next time
WITHOUT_CLASSIFICATION	eof re-open file
WITHOUT_CLASSIFICATION	did we open the file?
WITHOUT_CLASSIFICATION	can be null if called from config item testended() method
WITHOUT_CLASSIFICATION	are we processing a file sequence?
WITHOUT_CLASSIFICATION	there is no variable name
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	this map serves two purposes - maps names to containers - ensures only one container per file across all threads the key is the concatenation of the file name and the xpath string
WITHOUT_CLASSIFICATION	file was not opened successfully are we processing a file sequence?
WITHOUT_CLASSIFICATION	n.b. setparameters is called before the test proper is started and thus variables are not interpreted at this point so defer the file open until later to allow variable file names to be used.
WITHOUT_CLASSIFICATION	varname keeps its value and sum has not taken into account non numeric or overflowing number
WITHOUT_CLASSIFICATION	split string provided
WITHOUT_CLASSIFICATION	@guardedby("filecontainers")
WITHOUT_CLASSIFICATION	we don't have a local copy
WITHOUT_CLASSIFICATION	prevent separate instantiation
WITHOUT_CLASSIFICATION	the cache of file packs - for faster local access
WITHOUT_CLASSIFICATION	save the global copy
WITHOUT_CLASSIFICATION	there's no global copy either
WITHOUT_CLASSIFICATION	save our local copy
WITHOUT_CLASSIFICATION	parameter list
WITHOUT_CLASSIFICATION	all done so return
WITHOUT_CLASSIFICATION	all done now so return the empty string - this allows the caller to append __csvread(filenext) to the last instance of __csvread(filecol) n.b. it is important not to read any further lines at this point otherwise the wrong line can be retrieved when using multiple threads.
WITHOUT_CLASSIFICATION	need to reset the containers for repeated runs about the only way for functions to detect that a run is starting seems to be the setparameters() call.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	may be null if function is used on testplan
WITHOUT_CLASSIFICATION	can be null if called from config item testended() method
WITHOUT_CLASSIFICATION	parameter list
WITHOUT_CLASSIFICATION	what column is wanted?
WITHOUT_CLASSIFICATION	need to reset the containers for repeated runs about the only way for functions to detect that a run is starting seems to be the setparameters() call.
WITHOUT_CLASSIFICATION	the cache of file packs - used to improve thread access
WITHOUT_CLASSIFICATION	means platform default
WITHOUT_CLASSIFICATION	empty encoding return to platorm default
WITHOUT_CLASSIFICATION	only needed locally
WITHOUT_CLASSIFICATION	this map serves two purposes - maps file names to containers - ensures only one container per file across all threads
WITHOUT_CLASSIFICATION	called by csvread(xnext) - sets the row to nil so the next row will be picked up the next time round
WITHOUT_CLASSIFICATION	called by csvread(filealias)
WITHOUT_CLASSIFICATION	first call
WITHOUT_CLASSIFICATION	already logged
WITHOUT_CLASSIFICATION	already logged
WITHOUT_CLASSIFICATION	save in case needed later
WITHOUT_CLASSIFICATION	not yet open
WITHOUT_CLASSIFICATION	we have a variable name
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	vars will be null on testplan
WITHOUT_CLASSIFICATION	for unit tests see testjexlfunction
WITHOUT_CLASSIFICATION	now evaluate the script getting the result
WITHOUT_CLASSIFICATION	name of the file
WITHOUT_CLASSIFICATION	0-based
WITHOUT_CLASSIFICATION	can be null if called from config item testended() method
WITHOUT_CLASSIFICATION	can be null if called from config item testended() method
WITHOUT_CLASSIFICATION	means no restriction
WITHOUT_CLASSIFICATION	only obtain and cast the return if needed
WITHOUT_CLASSIFICATION	empty chars return to null
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	should we return original value?
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	vars will be null on testplan
WITHOUT_CLASSIFICATION	vars will be null on testplan
WITHOUT_CLASSIFICATION	has chances to be a var
WITHOUT_CLASSIFICATION	there is no variable name
WITHOUT_CLASSIFICATION	default to milliseconds
WITHOUT_CLASSIFICATION	probably does not need to be synch (always accessed through threadlocal?) give access to test code
WITHOUT_CLASSIFICATION	vars will be null on test plan
WITHOUT_CLASSIFICATION	maxint = 2147483647
WITHOUT_CLASSIFICATION	not found
WITHOUT_CLASSIFICATION	only modified in class init
WITHOUT_CLASSIFICATION	we have a 3rd parameter
WITHOUT_CLASSIFICATION	resolve any aliases
WITHOUT_CLASSIFICATION	$non_nls-1$ $non_nls-1$
WITHOUT_CLASSIFICATION	not synchronised so can't be shared
WITHOUT_CLASSIFICATION	allow for empty name
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	vars will be null on testplan
WITHOUT_CLASSIFICATION	varname keeps its value and sum has not taken into account non numeric or overflowing number
WITHOUT_CLASSIFICATION	values for creating tokens
WITHOUT_CLASSIFICATION	divisor is a positive number should never case nfe
WITHOUT_CLASSIFICATION	convert to a shorter string for test purposes @return the string value
WITHOUT_CLASSIFICATION	this may need mangling due to peeks
WITHOUT_CLASSIFICATION	cached character == integer.max_value when invalid
WITHOUT_CLASSIFICATION	reached end of input arguments - perform final processing
WITHOUT_CLASSIFICATION	key is string or integer
WITHOUT_CLASSIFICATION	strip the null
WITHOUT_CLASSIFICATION	variables used while parsing options.
WITHOUT_CLASSIFICATION	yes so the second argument is missing
WITHOUT_CLASSIFICATION	keep track of token separator
WITHOUT_CLASSIFICATION	should never get to here when stringindex != 0
WITHOUT_CLASSIFICATION	long optional arg must have = as separator
WITHOUT_CLASSIFICATION	non-null comparators don't appear to be used at present
WITHOUT_CLASSIFICATION	consume stray character
WITHOUT_CLASSIFICATION	are we about to start a new option?
WITHOUT_CLASSIFICATION	strip the -
WITHOUT_CLASSIFICATION	2nd argument
WITHOUT_CLASSIFICATION	its a long option
WITHOUT_CLASSIFICATION	parse the arguments that are not options
WITHOUT_CLASSIFICATION	if it is a short option then parse it else
WITHOUT_CLASSIFICATION	equivalent to new treemap((comparator)null)
WITHOUT_CLASSIFICATION	private static final logger log = loggingmanager.getloggerforclass()
WITHOUT_CLASSIFICATION	make sure the hashcode depends on the order as well
WITHOUT_CLASSIFICATION	super-class does not use generics
WITHOUT_CLASSIFICATION	super-class does not use generics
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	todo - charset?
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	this occurs when id == 0 and user has not supplied a descriptor for arguments
WITHOUT_CLASSIFICATION	if get to an arg barrier then return to normal mode else continue accumulating options
WITHOUT_CLASSIFICATION	strip the - -- sequence .. it can either mean a change of state to state_no_options or else a long option
WITHOUT_CLASSIFICATION	find order.indexof(currentkey) using == rather than equals() there may be multiple entries which compare equals (bug 50898) this will be slightly slower than the built-in method but replace() is not used frequently.
WITHOUT_CLASSIFICATION	used for the runtimeexception to short-circuit the traversal $non-nls-1$
WITHOUT_CLASSIFICATION	n.b. the keys can be either jmetertreenode or testelement
WITHOUT_CLASSIFICATION	do nothing - means object is found
WITHOUT_CLASSIFICATION	just in case
WITHOUT_CLASSIFICATION	short circuit traversal when found
WITHOUT_CLASSIFICATION	saves current position in data list
WITHOUT_CLASSIFICATION	end method
WITHOUT_CLASSIFICATION	capture the output
WITHOUT_CLASSIFICATION	helper method to allow input and output to be changed for chaining
WITHOUT_CLASSIFICATION	ensure the application does not hang if it requests input
WITHOUT_CLASSIFICATION	capture the intermediate output
WITHOUT_CLASSIFICATION	not yet terminated
WITHOUT_CLASSIFICATION	not yet terminated n.b. proc.destroy() is called by the finally clause in the run() method
WITHOUT_CLASSIFICATION	we are capturing output default charset is probably appropriate here.
WITHOUT_CLASSIFICATION	the dname which is used if none is provided $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ (do not change) $non-nls-1$ (firefox and windows) $non-nls-1$ (opera)
WITHOUT_CLASSIFICATION	i.e. does keytool support -gencert and -ext ?
WITHOUT_CLASSIFICATION	not instantiable
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	create cert for ca using root (requires java 7 for gencert)
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	import the signed ca cert into the store (root already there) - both are needed to sign the domain certificates
WITHOUT_CLASSIFICATION	create the self-signed keypairs (requires java 7 for -ext flag)
WITHOUT_CLASSIFICATION	rem generate cert for domain using ca (requires java7 for gencert) and import it
WITHOUT_CLASSIFICATION	generate the request
WITHOUT_CLASSIFICATION	export the root ca for firefox/chrome/ie
WITHOUT_CLASSIFICATION	generate the certificate and store in output file
WITHOUT_CLASSIFICATION	generate the keypair for the host
WITHOUT_CLASSIFICATION	create the certificate rem kuc=digkeye means keyusagecriticial=digitalsignaturekeyencipherment
WITHOUT_CLASSIFICATION	copy for opera
WITHOUT_CLASSIFICATION	alias subject
WITHOUT_CLASSIFICATION	a temporary cache for the focus listener
WITHOUT_CLASSIFICATION	get the certificate request
WITHOUT_CLASSIFICATION	default charset
WITHOUT_CLASSIFICATION	inport the certificate
WITHOUT_CLASSIFICATION	add the sub components
WITHOUT_CLASSIFICATION	register the handler for focus listening. this handler will only notify the registered when the text changes from when the focus is gained to when it is lost.
WITHOUT_CLASSIFICATION	add the sub components
WITHOUT_CLASSIFICATION	functor count = 0 is handled specially
WITHOUT_CLASSIFICATION	necessary to avoid npe when testing serialisation
WITHOUT_CLASSIFICATION	necessary to avoid npe when testing serialisation
WITHOUT_CLASSIFICATION	if provided
WITHOUT_CLASSIFICATION	compare if the value has changed since we received focus.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	@guardedby("this")
WITHOUT_CLASSIFICATION	should not happen
WITHOUT_CLASSIFICATION	register the handler for focus listening. this handler will only notify the registered when the text changes from when the focus is gained to when it is lost.
WITHOUT_CLASSIFICATION	register the handler for focus listening. this handler will only notify the registered when the text changes from when the focus is gained to when it is lost.
WITHOUT_CLASSIFICATION	add the sub components
WITHOUT_CLASSIFICATION	compare if the value has changed since we received focus.
WITHOUT_CLASSIFICATION	a temporary cache for the focus listener
WITHOUT_CLASSIFICATION	used by tableeditor
WITHOUT_CLASSIFICATION	used by tableeditor
WITHOUT_CLASSIFICATION	we use 80% of height
WITHOUT_CLASSIFICATION	private jmenu menu
WITHOUT_CLASSIFICATION	(comment 16 huw)
WITHOUT_CLASSIFICATION	uninstantiable
WITHOUT_CLASSIFICATION	treats last line specially last line allow for missing terminator
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	notused dimension dim = layoutsize(parent false)
WITHOUT_CLASSIFICATION	work out the total size
WITHOUT_CLASSIFICATION	otherwise there's a vgap too many work out the anchor paint
WITHOUT_CLASSIFICATION	do layout
WITHOUT_CLASSIFICATION	closes reader as well
WITHOUT_CLASSIFICATION	n.b time pattern is passed to java.text.simpledateformat
WITHOUT_CLASSIFICATION	predefined format patterns selected by the property log_format_type (see jmeter.properties) the new-line is added later
WITHOUT_CLASSIFICATION	$non_nls-1$ $non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$ $non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	non-instantiable - static methods only
WITHOUT_CLASSIFICATION	now set the individual categories (if any)
WITHOUT_CLASSIFICATION	further configuration
WITHOUT_CLASSIFICATION	make sure same hierarchy is used
WITHOUT_CLASSIFICATION	this happens if the default log-target id-ref specifies a non-existent target
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	key is the type to collect (usually long) value = count of entries
WITHOUT_CLASSIFICATION	we use a treemap because we need the entries to be sorted
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	for n values in an aggregate sample the average value = (val/n) so need to add n (val/n) (val/n) = val val / n
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	running values updated for each sample
WITHOUT_CLASSIFICATION	set the top-level defaults $non_nls-1$
WITHOUT_CLASSIFICATION	this can happen if a log-target id-ref specifies a non-existent target
WITHOUT_CLASSIFICATION	helper method to ensure that format is initialised if initializelogging() has not yet been called.
WITHOUT_CLASSIFICATION	if the name contains at least one set of paired single-quotes reformat using dateformat
WITHOUT_CLASSIFICATION	remove the package prefix
WITHOUT_CLASSIFICATION	e.g. long.max_value
WITHOUT_CLASSIFICATION	e.g. long.min_value
WITHOUT_CLASSIFICATION	use math.round () instead of simple (long) to provide correct value rounding
WITHOUT_CLASSIFICATION	ignored. may happen occasionally but no harm done if so.
WITHOUT_CLASSIFICATION	for n same values in sum of square is equal to nval^2
WITHOUT_CLASSIFICATION	no need to divide by 1
WITHOUT_CLASSIFICATION	insert new value
WITHOUT_CLASSIFICATION	if non-null then any object provided to invoke() is ignored.
WITHOUT_CLASSIFICATION	methondname must always be provided.
WITHOUT_CLASSIFICATION	if non-null then any argument list passed to invoke() will be ignored.
WITHOUT_CLASSIFICATION	argument types used to create the method. may be provided explicitly or derived from the constructor argument list.
WITHOUT_CLASSIFICATION	this depends on the class or invokee and either args or types it is set once by docreatemethod() which must be the only method to access it.
WITHOUT_CLASSIFICATION	if class not provided default to invokee class else null
WITHOUT_CLASSIFICATION	if types not provided default to argument types else null
WITHOUT_CLASSIFICATION	low level invocation routine. should only be called after any defaults have been applied.
WITHOUT_CLASSIFICATION	if invokee was provided then clazz has been set up
WITHOUT_CLASSIFICATION	low-level (recursive) routine to define the method - if not already defined. synchronized to protect access to methodtoinvoke.
WITHOUT_CLASSIFICATION	static only
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	should never happen
WITHOUT_CLASSIFICATION	use constructor class if present use invokee if provided use argumenrs if provided
WITHOUT_CLASSIFICATION	parent classes to check are inner classes ok?
WITHOUT_CLASSIFICATION	potentially expensive do it once
WITHOUT_CLASSIFICATION	potentially expensive do it once
WITHOUT_CLASSIFICATION	no need to check it again
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	no need to check it again
WITHOUT_CLASSIFICATION	it does not contain a required string
WITHOUT_CLASSIFICATION	it contains a banned string
WITHOUT_CLASSIFICATION	are inner classes ok?
WITHOUT_CLASSIFICATION	annotation classes to check
WITHOUT_CLASSIFICATION	for each directory in the search path add all the jars found there
WITHOUT_CLASSIFICATION	find all jars in the search path
WITHOUT_CLASSIFICATION	should only be called with classes that extend annotations
WITHOUT_CLASSIFICATION	first get all the classes
WITHOUT_CLASSIFICATION	subclasslist)
WITHOUT_CLASSIFICATION	returns the classpath entries that match the search list of jars and paths
WITHOUT_CLASSIFICATION	find all jar files or paths that end with strpathorjar
WITHOUT_CLASSIFICATION	no need to look further
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	might throw an exception assume this is ignorable
WITHOUT_CLASSIFICATION	converts a class file from the text stored in a jar file to a version that can be used in class.forname(). @param strclassname the class name from a jar file @return string the java-style dotted version of the name
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$ remove ".class"
WITHOUT_CLASSIFICATION	recursive call
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	we have a single character could be a token it is a token
WITHOUT_CLASSIFICATION	remove trailing splitter
WITHOUT_CLASSIFICATION	found splitchar at end of line
WITHOUT_CLASSIFICATION	this is the new length
WITHOUT_CLASSIFICATION	we saw a delimiter last time so add the default
WITHOUT_CLASSIFICATION	"<?xml "
WITHOUT_CLASSIFICATION	eof
WITHOUT_CLASSIFICATION	$non-nls-1$ add zero padding
WITHOUT_CLASSIFICATION	@see testjorphanutils for unit tests
WITHOUT_CLASSIFICATION	$non-nls-1$ add zero padding
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	this is the name of the hotspot diagnostic platform mbean (sun java 1.6) see httpdownload.oracle.com/javase/6/docs/jre/api/management/extension/com/sun/management/hotspotdiagnosticmxbean.html
WITHOUT_CLASSIFICATION	singletonholder idiom for lazy initialisation
WITHOUT_CLASSIFICATION	these are needed for invoking the method
WITHOUT_CLASSIFICATION	if we could not find the method store the exception here
WITHOUT_CLASSIFICATION	only invoked by iodh class
WITHOUT_CLASSIFICATION	get the platform beans
WITHOUT_CLASSIFICATION	should never fail see if we can actually find the object should never happen
WITHOUT_CLASSIFICATION	prevent useless dump attempts
WITHOUT_CLASSIFICATION	the string so far
WITHOUT_CLASSIFICATION	opened tags
WITHOUT_CLASSIFICATION	don't do anything
WITHOUT_CLASSIFICATION	java.util.date d = null
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	potentially expensive do it once
WITHOUT_CLASSIFICATION	-- jmx file attributes - do not change
WITHOUT_CLASSIFICATION	don't instantiate class
WITHOUT_CLASSIFICATION	++ jmx file attributes - do not change
WITHOUT_CLASSIFICATION	i.e. no filter
WITHOUT_CLASSIFICATION	the test object i.e. the instance of the class containing the test method this is the same as testcase for junit3 tests but different for junit4 tests which use a wrapper
WITHOUT_CLASSIFICATION	the testcase to run
WITHOUT_CLASSIFICATION	the method objects for setup (@before) and teardown (@after) methods will be null if not provided or not required
WITHOUT_CLASSIFICATION	the method name to be invoked
WITHOUT_CLASSIFICATION	method should add the junit testxxx method to the list at the end since the sequence matters. @param methodname
WITHOUT_CLASSIFICATION	the wrapper used to invoke the method
WITHOUT_CLASSIFICATION	assume success
WITHOUT_CLASSIFICATION	the name of the class containing the method
WITHOUT_CLASSIFICATION	do not use testcase.run(testresult) method since it will call setup and teardown. doing that will result in calling the setup and teardown method twice and the elapsed time will include setup and teardown.
WITHOUT_CLASSIFICATION	create a new testresult
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	convert junit4 failure to junit3 style
WITHOUT_CLASSIFICATION	copy the original stack trace
WITHOUT_CLASSIFICATION	we should log a warning but allow the test to keep running
WITHOUT_CLASSIFICATION	this should be externalized to the properties
WITHOUT_CLASSIFICATION	probably should not happen
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	copy the original stack trace
WITHOUT_CLASSIFICATION	if the string constructor is not null we use it. if the string constructor is null we use the empty constructor to get a new instance
WITHOUT_CLASSIFICATION	first we see if the class declares a string constructor. if it is doesn't we look for empty constructor.
WITHOUT_CLASSIFICATION	we have to check and make sure the constructor is accessible. if we didn't it would throw an exception and cause a npe.
WITHOUT_CLASSIFICATION	must be final to create instance
WITHOUT_CLASSIFICATION	no need to initialize when getcreateoneinstancepersample is true cause it will be done in sample
WITHOUT_CLASSIFICATION	convert junit4 assertionerror failures to junit3 style so will be treated as failure rather than error.
WITHOUT_CLASSIFICATION	calling a method via reflection results in wrapping any exceptions in ite unwrap these here so runprotected can allocate them correctly.
WITHOUT_CLASSIFICATION	dummy to ensure there is a test to run
WITHOUT_CLASSIFICATION	generates expected exception
WITHOUT_CLASSIFICATION	dummy to ensure there is a test to run
WITHOUT_CLASSIFICATION	dummy to ensure there is a test to run
WITHOUT_CLASSIFICATION	dummy to ensure there is a test to run
WITHOUT_CLASSIFICATION	dummy to ensure there is a test to run
WITHOUT_CLASSIFICATION	let bad input fail silently
WITHOUT_CLASSIFICATION	succeeds only if before method - verifytwo() - is run.
WITHOUT_CLASSIFICATION	fails to generate expected exception
WITHOUT_CLASSIFICATION	or if you have assertions enabled
WITHOUT_CLASSIFICATION	should always fail
WITHOUT_CLASSIFICATION	should not fail
WITHOUT_CLASSIFICATION	generate a test error
WITHOUT_CLASSIFICATION	will generate divide by zero error
WITHOUT_CLASSIFICATION	will generate divide by zero error
WITHOUT_CLASSIFICATION	normal test failure
WITHOUT_CLASSIFICATION	generate test error
WITHOUT_CLASSIFICATION	equation for calculating the weight w = (int)(33 (used/max))
WITHOUT_CLASSIFICATION	changed the logic for bea weblogic in the case a user uses tomcat's status servlet without any modifications. weblogic will return nothing for the connector therefore we need to check the size of the list. peter 12.22.04
WITHOUT_CLASSIFICATION	int spare = cntr.getthreadinfo().getmaxsparethreads()
WITHOUT_CLASSIFICATION	loop to fetch desired connector
WITHOUT_CLASSIFICATION	default get first connector
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	crlf blank line found
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	private monitormodel data
WITHOUT_CLASSIFICATION	log.warn("only for use in unit testing")
WITHOUT_CLASSIFICATION	log.warn("only for use in unit testing")
WITHOUT_CLASSIFICATION	log.warn("only for use in unit testing")
WITHOUT_CLASSIFICATION	log.warn("only for use in unit testing")
WITHOUT_CLASSIFICATION	we check to see if the lastselectedpath is null after we clear it would return null
WITHOUT_CLASSIFICATION	this.data = null this.data = stat
WITHOUT_CLASSIFICATION	i18n contains fixed english text
WITHOUT_CLASSIFICATION	data = model
WITHOUT_CLASSIFICATION	draw grid only when x is 1. if we didn't the grid line would draw over the data lines making it look bad.
WITHOUT_CLASSIFICATION	optional connector name prefix
WITHOUT_CLASSIFICATION	private list workerslist
WITHOUT_CLASSIFICATION	the equations
WITHOUT_CLASSIFICATION	for now just swallow the exception
WITHOUT_CLASSIFICATION	surl can be null if read from a file
WITHOUT_CLASSIFICATION	let bad input fail silently
WITHOUT_CLASSIFICATION	main panel
WITHOUT_CLASSIFICATION	add the main panel and the graph
WITHOUT_CLASSIFICATION	called from ctor so must not be overridable
WITHOUT_CLASSIFICATION	called from ctor so must not be overridable
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	let bad input fail silently
WITHOUT_CLASSIFICATION	should never happen
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	private boolean startdoc = false private boolean enddoc = false
WITHOUT_CLASSIFICATION	this.startdoc = true reset all work variables so reusing the instance starts afresh.
WITHOUT_CLASSIFICATION	this.startdoc = false this.enddoc = true
WITHOUT_CLASSIFICATION	let bad input fail silently
WITHOUT_CLASSIFICATION	note the element is a configtestelement so cannot use ftpsampler access methods
WITHOUT_CLASSIFICATION	n.b. originally there was only one filename and only get(retr) was supported to maintain backwards compatibility the property name needs to remain the same $non-nls-1$
WITHOUT_CLASSIFICATION	use binary mode file transfer? $non-nls-1$
WITHOUT_CLASSIFICATION	used for interrupting the sampler
WITHOUT_CLASSIFICATION	assume failure
WITHOUT_CLASSIFICATION	should probably come from the setup dialog
WITHOUT_CLASSIFICATION	could not access file or other error
WITHOUT_CLASSIFICATION	todo - charset?
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	todo
WITHOUT_CLASSIFICATION	todo
WITHOUT_CLASSIFICATION	called by httprequesthdr
WITHOUT_CLASSIFICATION	lf blank line found
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	main panel
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	are we uploading? $non-nls-1$
WITHOUT_CLASSIFICATION	should the file data be saved in the response? $non-nls-1$
WITHOUT_CLASSIFICATION	no need to close this no need to close this
WITHOUT_CLASSIFICATION	the value is not encoded
WITHOUT_CLASSIFICATION	let the gui show that it will not be encoded
WITHOUT_CLASSIFICATION	get the filename
WITHOUT_CLASSIFICATION	set the values retrieved for the file upload
WITHOUT_CLASSIFICATION	find the first empty line of the multipart it signals end of headers for multipart agents are supposed to terminate lines in crlf
WITHOUT_CLASSIFICATION	regular expression used to match against embedded resource urls
WITHOUT_CLASSIFICATION	need to clear because the
WITHOUT_CLASSIFICATION	optional tasks
WITHOUT_CLASSIFICATION	2 columns size
WITHOUT_CLASSIFICATION	used by httptestsamplegui
WITHOUT_CLASSIFICATION	web request panel
WITHOUT_CLASSIFICATION	set this false to suppress some items for use in http request defaults
WITHOUT_CLASSIFICATION	called from ctor so must not be overridable
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	set false for ajp
WITHOUT_CLASSIFICATION	body data
WITHOUT_CLASSIFICATION	tabbed pane that contains parameters and raw body
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	default changed in 2.3 and again in 2.4
WITHOUT_CLASSIFICATION	concurrent resources download $non-nls-1$
WITHOUT_CLASSIFICATION	see modifytestelement
WITHOUT_CLASSIFICATION	embedded url match regex $non-nls-1$
WITHOUT_CLASSIFICATION	web request panel
WITHOUT_CLASSIFICATION	textfield uses \n (lf) to delimit lines we need to send crlf. rather than change the way that arguments are processed by the samplers for raw data it is easier to fix the data. on retrival crlf is converted back to lf for storage in the text field. see
WITHOUT_CLASSIFICATION	if raw data and parameters match we allow switching
WITHOUT_CLASSIFICATION	convert crlf to cr see modifytestelement
WITHOUT_CLASSIFICATION	all sub-components with setfont(null) inherit this font
WITHOUT_CLASSIFICATION	only display the port number if it is meaningfully specified
WITHOUT_CLASSIFICATION	web server panel
WITHOUT_CLASSIFICATION	autoredirects and followredirects cannot both be selected
WITHOUT_CLASSIFICATION	implementation
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	protocol
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	content_encoding
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	called from ctor so must not be overridable
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	if there is no data then switching between parameters and raw should be allowed with no further user interaction.
WITHOUT_CLASSIFICATION	if there is data in the raw panel then the user should be prevented from switching (that would be easy to track).
WITHOUT_CLASSIFICATION	if the parameter data can be converted (i.e. no names) we warn the user that the parameter data will be lost.
WITHOUT_CLASSIFICATION	if the parameter data cannot be converted to raw then the user should be prevented from doing so raise an error dialog
WITHOUT_CLASSIFICATION	cached value
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	package-protected to allow access by unit-test cases
WITHOUT_CLASSIFICATION	helper method to save the cache entry
WITHOUT_CLASSIFICATION	invalid dates must be treated as expired
WITHOUT_CLASSIFICATION	if no-cache is present ensure that expiresdate remains null which forces revalidation
WITHOUT_CLASSIFICATION	the max-age directive overrides the expires header
WITHOUT_CLASSIFICATION	no max-age && no expires
WITHOUT_CLASSIFICATION	date or lastmodified may be null or in bad format
WITHOUT_CLASSIFICATION	else expiresdate computed in (expires!=null) condition is used
WITHOUT_CLASSIFICATION	helper method to deal with missing headers - commons httpclient
WITHOUT_CLASSIFICATION	apache httpclient
WITHOUT_CLASSIFICATION	is the sample result ok to cache? i.e is it in the 2xx range?
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	+ jmx attributes do not change values $non-nls-1$ $non-nls-1$ $non-nls-1$ -
WITHOUT_CLASSIFICATION	i.e. not using expires check that we are processing expires/cachecontrol
WITHOUT_CLASSIFICATION	see httpsdeveloper.mozilla.org/en/http_caching_faq see httpwww.ietf.org/rfc/rfc2616.txt#13.2.4
WITHOUT_CLASSIFICATION	cache the value
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	echo back
WITHOUT_CLASSIFICATION	check if we have read all the headers
WITHOUT_CLASSIFICATION	we know when to stop reading so we can allow the read method to block
WITHOUT_CLASSIFICATION	no divider was found
WITHOUT_CLASSIFICATION	use null for no expiry
WITHOUT_CLASSIFICATION	store session cookies as well as unexpired ones
WITHOUT_CLASSIFICATION	store session cookies as well as unexpired ones
WITHOUT_CLASSIFICATION	has its own debug log removes matching cookies
WITHOUT_CLASSIFICATION	has its own debug log removes matching cookies
WITHOUT_CLASSIFICATION	this means the cookie was wrong for the url
WITHOUT_CLASSIFICATION	this means the cookie was wrong for the url
WITHOUT_CLASSIFICATION	tweak diff hc3 vs hc4
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	the headers and body are divided by a blank line (the \r is to allow for the cr before lf) $non-nls-1$
WITHOUT_CLASSIFICATION	if we know the content length we can allow the reading of the request to block until more data arrives. if it is chunked transfer we cannot allow the reading to block because we do not know when to stop reading because the chunked transfer is not properly supported yet
WITHOUT_CLASSIFICATION	check how much of the body we have already read as part of reading the headers we subtract two bytes for the crlf divider between header and body
WITHOUT_CLASSIFICATION	the reqest has no body or it has a transfer encoding we do not support. in either case we read any data available
WITHOUT_CLASSIFICATION	we use multi-line mask so can prefix the line with ^ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	use null for no expiry
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	needs to be package-protected to avoid problem with serialisation tests
WITHOUT_CLASSIFICATION	start off with a merged object as a copy of the local object
WITHOUT_CLASSIFICATION	iterate thru each of the other headers
WITHOUT_CLASSIFICATION	find the same property in the local headers
WITHOUT_CLASSIFICATION	we have a match
WITHOUT_CLASSIFICATION	prefer values from the other object
WITHOUT_CLASSIFICATION	the other object has an empty value so remove this value from the merged object
WITHOUT_CLASSIFICATION	use the other object's value
WITHOUT_CLASSIFICATION	break out of the inner loop
WITHOUT_CLASSIFICATION	the other object has a new value to be added to the merged
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	todo charset ?
WITHOUT_CLASSIFICATION	finally merge the names so it's clear they've been merged
WITHOUT_CLASSIFICATION	saves the error if one occurs
WITHOUT_CLASSIFICATION	listen on main socket
WITHOUT_CLASSIFICATION	pass request to new thread
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	todo charset ? $non-nls-1$
WITHOUT_CLASSIFICATION	todo charset ? $non-nls-1$
WITHOUT_CLASSIFICATION	only used by gui
WITHOUT_CLASSIFICATION	timeout occurred. ignore and keep looping until we're told to stop running.
WITHOUT_CLASSIFICATION	ensure that there is always a collection available
WITHOUT_CLASSIFICATION	default level allow override by system properties
WITHOUT_CLASSIFICATION	final int _ignored = 1
WITHOUT_CLASSIFICATION	++ jmx tag values $non-nls-1$
WITHOUT_CLASSIFICATION	can't have two matching cookies
WITHOUT_CLASSIFICATION	ensure that the initial cookies are copied to the per-thread instances
WITHOUT_CLASSIFICATION	long max was used to represent a non-expiring cookie but that caused problems
WITHOUT_CLASSIFICATION	used by gui
WITHOUT_CLASSIFICATION	used by gui
WITHOUT_CLASSIFICATION	$non-nls-1$ -- jmx tag values
WITHOUT_CLASSIFICATION	only save unexpired cookies
WITHOUT_CLASSIFICATION	flag - if all machines within a given domain can access the variable. (from httpwww.cookiecentral.com/faq/ 3.5)
WITHOUT_CLASSIFICATION	ensure data is set up ok initially
WITHOUT_CLASSIFICATION	do nothing the cookie manager has to accept changes.
WITHOUT_CLASSIFICATION	do nothing the cookie manager has to accept changes.
WITHOUT_CLASSIFICATION	scan for any matching cookies
WITHOUT_CLASSIFICATION	todo charset ?
WITHOUT_CLASSIFICATION	remove all the cookies.
WITHOUT_CLASSIFICATION	used by httpmirrorserver
WITHOUT_CLASSIFICATION	no need to call clear
WITHOUT_CLASSIFICATION	and as a string
WITHOUT_CLASSIFICATION	used for saving entries to a file
WITHOUT_CLASSIFICATION	wait for server to stop
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	regular expression used to match against embedded resource urls
WITHOUT_CLASSIFICATION	optional tasks
WITHOUT_CLASSIFICATION	use this instead of getlabelresource() otherwise getdocanchor() below does not work
WITHOUT_CLASSIFICATION	flag - if all machines within a given domain can access the variable. (from httpwww.cookiecentral.com/faq/ 3.5)
WITHOUT_CLASSIFICATION	column numbers - must agree with order above
WITHOUT_CLASSIFICATION	only http and https are supported
WITHOUT_CLASSIFICATION	obtain another url with an explicit port
WITHOUT_CLASSIFICATION	allow for old format file without mechanism support
WITHOUT_CLASSIFICATION	this should never happen anyway we'll continue with url2 set to null.
WITHOUT_CLASSIFICATION	for use by ajp
WITHOUT_CLASSIFICATION	allow for old format file without the extra columnns
WITHOUT_CLASSIFICATION	needs to be package protected for unit test
WITHOUT_CLASSIFICATION	embedded url match regex
WITHOUT_CLASSIFICATION	does not apply to java implementation
WITHOUT_CLASSIFICATION	add a listener to activate or not concurrent dwn.
WITHOUT_CLASSIFICATION	url config
WITHOUT_CLASSIFICATION	includes \n
WITHOUT_CLASSIFICATION	bottom (embedded resources source address and optional tasks)
WITHOUT_CLASSIFICATION	2 column size
WITHOUT_CLASSIFICATION	called from ctor so must not be overridable
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	retrieve images $non-nls-1$
WITHOUT_CLASSIFICATION	go to 1st line
WITHOUT_CLASSIFICATION	download concurrent resources $non-nls-1$
WITHOUT_CLASSIFICATION	is monitor $non-nls-1$
WITHOUT_CLASSIFICATION	only contains httpfilearg elements
WITHOUT_CLASSIFICATION	use md5 $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	add a new field source ip address (for hc implementations only) default ip/hostname
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ default ip/hostname
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	button for browsing webservice wsdl
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	web methods
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	improve xml display
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	add the proxy elements
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	main panel
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	we only put httpfileargs in it
WITHOUT_CLASSIFICATION	$non-nls-1$ permit dynamic resize of textarea
WITHOUT_CLASSIFICATION	we get the authmanager and pass it to the wsdlhelper once the sampler is updated to axis all of this stuff should not be necessary. now i just need to find the time and motivation to do it.
WITHOUT_CLASSIFICATION	if use proxy is checked we enable the text fields for the host and port
WITHOUT_CLASSIFICATION	required for unit tests
WITHOUT_CLASSIFICATION	disable delete and browse buttons if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	disable delete and browse if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	create the jtable that holds header per row
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.modifytestelement(testelement)
WITHOUT_CLASSIFICATION	enable delete (which may already be enabled but it won't hurt)
WITHOUT_CLASSIFICATION	highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	force a minimum table height of 70 pixels
WITHOUT_CLASSIFICATION	called from ctor so must not be overridable
WITHOUT_CLASSIFICATION	highlight (select) the appropriate rows.
WITHOUT_CLASSIFICATION	all table cells are editable
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	table still contains one or more rows so highlight (select) the appropriate one.
WITHOUT_CLASSIFICATION	if a table cell is being edited we must cancel the editing before deleting the row.
WITHOUT_CLASSIFICATION	if a table cell is being edited we must cancel the editing before deleting the row.
WITHOUT_CLASSIFICATION	disable the delete and save buttons if no rows remaining after delete
WITHOUT_CLASSIFICATION	$non-nls-1$ --
WITHOUT_CLASSIFICATION	enable the delete and save buttons if they are currently disabled.
WITHOUT_CLASSIFICATION	if a table cell is being edited we should accept the current value and stop the editing before adding a new row.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	non-expiring
WITHOUT_CLASSIFICATION	disable the delete and save buttons if no rows remaining after delete.
WITHOUT_CLASSIFICATION	preset to default impl
WITHOUT_CLASSIFICATION	create the jtable that holds one cookie per row
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	++ action command names $non-nls-1$
WITHOUT_CLASSIFICATION	highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	table still contains one or more rows so highlight (select) the appropriate one.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	drop-down list for renderer
WITHOUT_CLASSIFICATION	if no results render in jmeter.properties load standard (default)
WITHOUT_CLASSIFICATION	called from ctor so must not be overridable
WITHOUT_CLASSIFICATION	if a table cell is being edited we should accept the current value and stop the editing before adding a new row.
WITHOUT_CLASSIFICATION	if a table cell is being edited we must cancel the editing before deleting the row
WITHOUT_CLASSIFICATION	only contains argument (or httpargument)
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ removed expiration because it's just an annoyance for static cookies
WITHOUT_CLASSIFICATION	if a table cell is being edited we must cancel the editing before deleting the row.
WITHOUT_CLASSIFICATION	table still contains one or more rows so highlight (select) the appropriate one.
WITHOUT_CLASSIFICATION	table still contains one or more rows so highlight (select) the appropriate one.
WITHOUT_CLASSIFICATION	if a table cell is being edited we should accept the current value and stop the editing before adding a new row.
WITHOUT_CLASSIFICATION	enable the delete and save buttons if they are currently disabled.
WITHOUT_CLASSIFICATION	enable the delete and save buttons if they are currently disabled.
WITHOUT_CLASSIFICATION	disable the delete and save buttons if no rows remaining after delete.
WITHOUT_CLASSIFICATION	button panel
WITHOUT_CLASSIFICATION	create the jtable that holds auth per row
WITHOUT_CLASSIFICATION	ignore non-http samplers
WITHOUT_CLASSIFICATION	&& !ispathextensionnoquestionmark()
WITHOUT_CLASSIFICATION	&& !ispathextensionnoequals()
WITHOUT_CLASSIFICATION	&& !ispathextensionnoequals() && !ispathextensionnoquestionmark()
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	if ! ispathextension()
WITHOUT_CLASSIFICATION	highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	all table cells are editable
WITHOUT_CLASSIFICATION	don't get tripped up by re chars in the arg name
WITHOUT_CLASSIFICATION	name="sessionid" value="value"
WITHOUT_CLASSIFICATION	----------------------------------------------------------------------- methods -----------------------------------------------------------------------
WITHOUT_CLASSIFICATION	return the current value (don't forget the prefix!)
WITHOUT_CLASSIFICATION	increment the value
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	transient perl5compiler compiler = new perl5compiler() $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	preprocessors are cloned per-thread so this will be saved per-thread $non-nls-1$
WITHOUT_CLASSIFICATION	sessionid=value $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	value="value" name="sessionid" $non-nls-1$ $non-nls-1$ $non-nls-2$ $non-nls-3$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------ constructors ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------ methods implemented from interface org.apache.jmeter.config.modifier ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------ methods ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	if a mask for this argument exists
WITHOUT_CLASSIFICATION	values to be masked must be set in the webapp to ""
WITHOUT_CLASSIFICATION	create instances needed for parsing
WITHOUT_CLASSIFICATION	xmlreaderfactory.createxmlreader(vendorparseclass)
WITHOUT_CLASSIFICATION	register content handler
WITHOUT_CLASSIFICATION	register error handler
WITHOUT_CLASSIFICATION	parse
WITHOUT_CLASSIFICATION	------------------------------------------- constants and data members -------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------- constructors -------------------------------------------
WITHOUT_CLASSIFICATION	initalise pointer to first user
WITHOUT_CLASSIFICATION	use round robin allocation of user details
WITHOUT_CLASSIFICATION	no entries in all users therefore create an empty map object
WITHOUT_CLASSIFICATION	if parameter name exists in http request then change its value with value obtained with regular expression
WITHOUT_CLASSIFICATION	verify if regex groups exists
WITHOUT_CLASSIFICATION	note userparameterxml accesses this variable to obtain the set data via method getparsedparameters()
WITHOUT_CLASSIFICATION	cannot be first line either
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	------------------------------------------- constants and data members -------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------- methods -------------------------------------------
WITHOUT_CLASSIFICATION	haven't got to reset paramname & paramvalue but did it to keep the code looking correct
WITHOUT_CLASSIFICATION	these are used as gui item names lowerbound upperbound and increment are used in the focuslost() method
WITHOUT_CLASSIFICATION	must create a new object or else end up with a set full of the same map object
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------- methods (used by userparameterxml to get xml parameters from xml file) -----------------------------------------------------------------------
WITHOUT_CLASSIFICATION	this.updateui()
WITHOUT_CLASSIFICATION	boolean pass = true
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	next line
WITHOUT_CLASSIFICATION	called from ctor so must not be overridable
WITHOUT_CLASSIFICATION	utf-8 unsupported? you must be joking!
WITHOUT_CLASSIFICATION	n.b. since the tags are extracted from an html form any values must already have been encoded
WITHOUT_CLASSIFICATION	the value is in the second group
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	cache of parsers - parsers must be re-usable
WITHOUT_CLASSIFICATION	is there a cached parser?
WITHOUT_CLASSIFICATION	cache the parser
WITHOUT_CLASSIFICATION	the set is used to ignore duplicated binary files. using a linkedhashset to avoid unnecessary overhead in iterating the elements in the set later on. as a side-effect this will keep them roughly in order which should be a better model of browser behaviour.
WITHOUT_CLASSIFICATION	a dummy class to pass the pointer of url.
WITHOUT_CLASSIFICATION	then we need to download the binary
WITHOUT_CLASSIFICATION	we check the input tag type for image
WITHOUT_CLASSIFICATION	putting the string first means it works even if the attribute is null
WITHOUT_CLASSIFICATION	now look for urls in the style attribute
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	we check the input tag type for image
WITHOUT_CLASSIFICATION	then we need to download the binary
WITHOUT_CLASSIFICATION	putting the string first means it works even if the attribute is null
WITHOUT_CLASSIFICATION	now look for urls in the style attribute
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	case node.text_node break
WITHOUT_CLASSIFICATION	helper method to get an attribute value if it exists @param attrs list of attributs @param attname attribute name @return
WITHOUT_CLASSIFICATION	note there's 3 capturing groups per value
WITHOUT_CLASSIFICATION	number of capturing groups possibly containing base hrefs
WITHOUT_CLASSIFICATION	check for a base href
WITHOUT_CLASSIFICATION	doesn't even look like a url? maybe it isn't ignore the exception.
WITHOUT_CLASSIFICATION	url.replace('+'' ')
WITHOUT_CLASSIFICATION	no warn message to avoid performance impact
WITHOUT_CLASSIFICATION	private iterator used to unwrap the url from the urlstring class
WITHOUT_CLASSIFICATION	unwraps the urlstring class to return the url
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	try to ensure that more javascript code is processed ok
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	listen on main socket
WITHOUT_CLASSIFICATION	timeout occurred. ignore and keep looping until we're told to stop running.
WITHOUT_CLASSIFICATION	a dummy class to pass the pointer of url.
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	we check the input tag type for image
WITHOUT_CLASSIFICATION	then we need to download the binary
WITHOUT_CLASSIFICATION	putting the string first means it works even if the attribute is null
WITHOUT_CLASSIFICATION	now look for urls in the style attribute
WITHOUT_CLASSIFICATION	now parse the dom tree
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	a url is always in a tag.
WITHOUT_CLASSIFICATION	first we check to see if body tag has a background set
WITHOUT_CLASSIFICATION	look for applets
WITHOUT_CLASSIFICATION	look for objects
WITHOUT_CLASSIFICATION	second if the tag was a composite tag recursively parse its children.
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ proxy.binary.filetype=binary
WITHOUT_CLASSIFICATION	optionally number the requests
WITHOUT_CLASSIFICATION	running number
WITHOUT_CLASSIFICATION	pass request to new proxy thread
WITHOUT_CLASSIFICATION	use default encoding
WITHOUT_CLASSIFICATION	tell the sampler to do a multipart post
WITHOUT_CLASSIFICATION	set the form data
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	used by gui
WITHOUT_CLASSIFICATION	and as a string
WITHOUT_CLASSIFICATION	set the file uploads
WITHOUT_CLASSIFICATION	remove the header for content-type and content-length since those values will most likely be incorrect when the sampler performs the multipart request because the boundary string will change
WITHOUT_CLASSIFICATION	used when postdata is pure xml (eg. an xml-rpc call) or for put
WITHOUT_CLASSIFICATION	it is the most common post request with parameter name and values we also assume this if no content type is present to be most backwards compatible but maybe we should only parse arguments if the content type is as expected standard name=value postdata
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	just put the whole postbody as the value of a parameter used when postdata is pure xml (ex. an xml-rpc call)
WITHOUT_CLASSIFICATION	although the spec says utf-8 should be used for encoding url parameters most browser use iso-8859-1 for default if encoding is not known. we use null for contentencoding then the url parameters will be added with the value in the url and the "encode?" flag set to false
WITHOUT_CLASSIFICATION	set the content encoding
WITHOUT_CLASSIFICATION	check if the request itself tells us what the encoding is
WITHOUT_CLASSIFICATION	check if we know the encoding of the page
WITHOUT_CLASSIFICATION	check if we know the encoding of the form
WITHOUT_CLASSIFICATION	form encoding has priority over page encoding
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	wait for server to stop
WITHOUT_CLASSIFICATION	must agree with the order of entries in the drop-down created in proxycontrolgui.creategroupingpanel() private static final int grouping_no_groups = 0
WITHOUT_CLASSIFICATION	$non-nls-1$ - jmx file attributes
WITHOUT_CLASSIFICATION	note windows user preferences are stored relative to hkey_current_user\software\javasoft\prefs
WITHOUT_CLASSIFICATION	original numeric order (we now use strings)
WITHOUT_CLASSIFICATION	$non-nls-1$ detect if user has pressed a new link
WITHOUT_CLASSIFICATION	for ssl connection
WITHOUT_CLASSIFICATION	proxy configuration ssl
WITHOUT_CLASSIFICATION	should not happen
WITHOUT_CLASSIFICATION	keys for user preferences
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	should we match using regexes?
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	whether to use dymanic key generation (if supported) $non-nls-1$
WITHOUT_CLASSIFICATION	the alias to be used if dynamic host names are not possible $non-nls-1$
WITHOUT_CLASSIFICATION	if this is defined it is assumed to be the alias of a user-supplied certificate overrides dynamic mode $non-nls-1$
WITHOUT_CLASSIFICATION	user-provided keystore keystore generated by jmeter single entry
WITHOUT_CLASSIFICATION	whether to use the redirect disabling feature (can be switched off if it does not work)
WITHOUT_CLASSIFICATION	although this field is mutable it is only accessed within the synchronized method deliversampler()
WITHOUT_CLASSIFICATION	when was the last sample seen?
WITHOUT_CLASSIFICATION	maintain original behaviour
WITHOUT_CLASSIFICATION	convert the old numeric types - just in case someone wants to reload the workbench
WITHOUT_CLASSIFICATION	make sure we log the error
WITHOUT_CLASSIFICATION	the url matches the last redirect
WITHOUT_CLASSIFICATION	save location so resulting sample can be disabled
WITHOUT_CLASSIFICATION	ok because find only returns correct element types
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	package protected to allow test case access
WITHOUT_CLASSIFICATION	package protected to allow test case access
WITHOUT_CLASSIFICATION	if no expressions are specified we let the sample pass
WITHOUT_CLASSIFICATION	check that we have a content type
WITHOUT_CLASSIFICATION	check if the include pattern is matched
WITHOUT_CLASSIFICATION	check if the exclude pattern is matched
WITHOUT_CLASSIFICATION	not 100% sure but i believe this can't happen so i'll log and throw an error
WITHOUT_CLASSIFICATION	not 100% sure but i believe this can't happen so i'll log and throw an error
WITHOUT_CLASSIFICATION	look for elements directly within the http proxy
WITHOUT_CLASSIFICATION	look for arguments elements in the target controller or higher up
WITHOUT_CLASSIFICATION	special case for the testplan's arguments sub-element
WITHOUT_CLASSIFICATION	remember this was first in its batch
WITHOUT_CLASSIFICATION	decent value for timers
WITHOUT_CLASSIFICATION	huh! don't store this one!
WITHOUT_CLASSIFICATION	if we're not storing subsequent samplers we'll need the first sampler to do all the work
WITHOUT_CLASSIFICATION	find the last controller in the target to store the sampler there
WITHOUT_CLASSIFICATION	there's a few properties which are excluded from this processing
WITHOUT_CLASSIFICATION	go on with next property.
WITHOUT_CLASSIFICATION	build the replacer from all the variables in the collection
WITHOUT_CLASSIFICATION	tl - te
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	assume we have already created the store
WITHOUT_CLASSIFICATION	assume we have already created the store
WITHOUT_CLASSIFICATION	no ca key - probably the wrong store type. cannot continue
WITHOUT_CLASSIFICATION	store is faulty we need to recreate it if cert is not valid flag up to recreate it
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	store is faulty we need to recreate it if cert is not valid flag up to recreate it
WITHOUT_CLASSIFICATION	message includes the file name
WITHOUT_CLASSIFICATION	no existing file or not valid alphanum to avoid issues with command-line quoting we use same password for both
WITHOUT_CLASSIFICATION	no existing file or not valid alphanum to avoid issues with command-line quoting we use same password for both
WITHOUT_CLASSIFICATION	this should now work
WITHOUT_CLASSIFICATION	this should now work
WITHOUT_CLASSIFICATION	the subject may be either a host or a domain
WITHOUT_CLASSIFICATION	reload to pick up new aliases reloading is very quick compared with creating an entry currently
WITHOUT_CLASSIFICATION	not a wildcard
WITHOUT_CLASSIFICATION	this should only be called for a specific host
WITHOUT_CLASSIFICATION	ensure proxy threads cannot interfere with each other
WITHOUT_CLASSIFICATION	reload after adding alias
WITHOUT_CLASSIFICATION	safer to start afresh
WITHOUT_CLASSIFICATION	the keystore for use by the proxy
WITHOUT_CLASSIFICATION	allow list of headers to be overridden $non-nls-1$
WITHOUT_CLASSIFICATION	use with ssl connection
WITHOUT_CLASSIFICATION	for identifying log messages
WITHOUT_CLASSIFICATION	keystore for ssl keys fixed at config except for dynamic host key generation
WITHOUT_CLASSIFICATION	check which httpsampler class we should use
WITHOUT_CLASSIFICATION	now parse initial request (in case it is a connect request)
WITHOUT_CLASSIFICATION	should not happen but if it does we don't want to continue
WITHOUT_CLASSIFICATION	re-parse (now it's the http request over ssl)
WITHOUT_CLASSIFICATION	most likely this is because of a certificate error
WITHOUT_CLASSIFICATION	now parse the dom tree
WITHOUT_CLASSIFICATION	we start to iterate through the elements
WITHOUT_CLASSIFICATION	a url is always in a tag.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	with ssl request url is hostport (without https or path) $non-nls-1$
WITHOUT_CLASSIFICATION	create a header manager to ensure that the browsers headers are captured and sent to the server
WITHOUT_CLASSIFICATION	needed for httpsampler2
WITHOUT_CLASSIFICATION	needed for httpsampler2
WITHOUT_CLASSIFICATION	find the page encoding and possibly encodings for forms in the page in the response from the web server
WITHOUT_CLASSIFICATION	ignored already processed
WITHOUT_CLASSIFICATION	generate result (if nec.) and populate it
WITHOUT_CLASSIFICATION	generate result (if nec.) and populate it
WITHOUT_CLASSIFICATION	generate result (if nec.) and populate it
WITHOUT_CLASSIFICATION	we don't want to store any cookies in the generated test plan
WITHOUT_CLASSIFICATION	always remove cookies always remove authorization remove additional headers
WITHOUT_CLASSIFICATION	deliversampler allows sampler to be null but result must not be null
WITHOUT_CLASSIFICATION	pick up any recent changes from other threads
WITHOUT_CLASSIFICATION	the host has a key already
WITHOUT_CLASSIFICATION	the host matches a domain use its key
WITHOUT_CLASSIFICATION	add the remaining parts
WITHOUT_CLASSIFICATION	check if alias is suitable here rather than waiting for connection to fail
WITHOUT_CLASSIFICATION	drop empty trailing content
WITHOUT_CLASSIFICATION	we don't want this passed on to browser
WITHOUT_CLASSIFICATION	we don't want this passed on to browser
WITHOUT_CLASSIFICATION	fix the content length
WITHOUT_CLASSIFICATION	get rid of the query and the ?
WITHOUT_CLASSIFICATION	remaining implementations delegate to the wrapped key manager
WITHOUT_CLASSIFICATION	only check form tags
WITHOUT_CLASSIFICATION	find the action / form url
WITHOUT_CLASSIFICATION	just use the first one of the possible many charsets
WITHOUT_CLASSIFICATION	notread $non-nls-1$
WITHOUT_CLASSIFICATION	saved copy of first line for error reports
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	second if the tag was a composite tag recursively parse its children.
WITHOUT_CLASSIFICATION	get rid of the query and the ?
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	todo - charset?
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	parse other header lines looking for content-length
WITHOUT_CLASSIFICATION	save the last valid content length one
WITHOUT_CLASSIFICATION	keep the raw post data
WITHOUT_CLASSIFICATION	will be hostport for connect
WITHOUT_CLASSIFICATION	ssl connection
WITHOUT_CLASSIFICATION	don't try to adjust the host name
WITHOUT_CLASSIFICATION	it must be a proxied https request $non-nls-1$
WITHOUT_CLASSIFICATION	java impl accepts urls with unsafe characters so don't do anything
WITHOUT_CLASSIFICATION	split line into name/value pairs and store in headers if relevant if name = "content-length" then return value as int else return 0
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	get the boundary string for the multiparts from the content type
WITHOUT_CLASSIFICATION	parsing methods
WITHOUT_CLASSIFICATION	chop to "server.namex/thing"
WITHOUT_CLASSIFICATION	chop to "server.namex/thing"
WITHOUT_CLASSIFICATION	chop to server.namexx $non-nls-1$
WITHOUT_CLASSIFICATION	chop to server.name $non-nls-1$
WITHOUT_CLASSIFICATION	handle ipv6 urls
WITHOUT_CLASSIFICATION	chop to server.namexx
WITHOUT_CLASSIFICATION	chop to server.name
WITHOUT_CLASSIFICATION	generate error body
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	prevent both redirect types from being selected
WITHOUT_CLASSIFICATION	300 codes tell client to do actions
WITHOUT_CLASSIFICATION	use regexes to match the source data
WITHOUT_CLASSIFICATION	proxy can take some while to start up show a wating cursor
WITHOUT_CLASSIFICATION	this is applied to fields that should cause a restart when changed $non-nls-1$
WITHOUT_CLASSIFICATION	- action names
WITHOUT_CLASSIFICATION	resource names for column headers $non-nls-1$
WITHOUT_CLASSIFICATION	used by itemlistener $non-nls-1$
WITHOUT_CLASSIFICATION	system.err.println("enable restart")
WITHOUT_CLASSIFICATION	handles groupingmode. actionperfomed is not suitable as that seems to be activated whenever the proxy is selected in the test plan also handles samplertypename
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	drop the last character
WITHOUT_CLASSIFICATION	highlight (select) the appropriate rows.
WITHOUT_CLASSIFICATION	highlight (select) the appropriate rows.
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	default value $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ maintain original default
WITHOUT_CLASSIFICATION	default value $non-nls-1$
WITHOUT_CLASSIFICATION	action listener will be added later
WITHOUT_CLASSIFICATION	ignore everything else
WITHOUT_CLASSIFICATION	note position of these elements in the menu must match the corresponding proxycontrol.grouping_ values. $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	stop action notifications while we shuffle this around
WITHOUT_CLASSIFICATION	include request body if it is a post or put or patch
WITHOUT_CLASSIFICATION	reinstate action notifications
WITHOUT_CLASSIFICATION	never null
WITHOUT_CLASSIFICATION	set the current value
WITHOUT_CLASSIFICATION	never null
WITHOUT_CLASSIFICATION	can share these
WITHOUT_CLASSIFICATION	don't redirect the following 300 = multiple choice 304 = not modified 305 = use proxy 306 = (unused)
WITHOUT_CLASSIFICATION	get the start of the file
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	preserve original case
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	update the dataencoding
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	extract the content-type if present $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ maximum connection retries
WITHOUT_CLASSIFICATION	$non-nls-1$ temporary copies so can set the final ones
WITHOUT_CLASSIFICATION	n.b. this needs to be done before opening the connection
WITHOUT_CLASSIFICATION	update follow redirects setting just for this connection
WITHOUT_CLASSIFICATION	n.b. must be done after opening connection
WITHOUT_CLASSIFICATION	works ok even if contentencoding is null
WITHOUT_CLASSIFICATION	normal inputstream is not available
WITHOUT_CLASSIFICATION	n.b. this closes 'in'
WITHOUT_CLASSIFICATION	add all the headers from the headermanager
WITHOUT_CLASSIFICATION	get all the request properties which are the headers set on the connection
WITHOUT_CLASSIFICATION	exclude the cookie header since cookie is reported separately in the sample
WITHOUT_CLASSIFICATION	value is a list of strings
WITHOUT_CLASSIFICATION	count the retries as well in the time
WITHOUT_CLASSIFICATION	check cache for an entry with an expires header in the future
WITHOUT_CLASSIFICATION	start with 0 so tries at least once and retries at most max_conn_retries times
WITHOUT_CLASSIFICATION	attempt the connection
WITHOUT_CLASSIFICATION	we don't want interrupt to try disconnection again
WITHOUT_CLASSIFICATION	try again
WITHOUT_CLASSIFICATION	this should never happen but
WITHOUT_CLASSIFICATION	nice we've got a connection. finish sending the request
WITHOUT_CLASSIFICATION	request sent. now get the response
WITHOUT_CLASSIFICATION	done with the sampling proper.
WITHOUT_CLASSIFICATION	now collect the results into the httpsampleresult
WITHOUT_CLASSIFICATION	cannot be null here
WITHOUT_CLASSIFICATION	e.g. text/html charset=iso-8859-1
WITHOUT_CLASSIFICATION	if either a file or path location is given get the file object. we have a file
WITHOUT_CLASSIFICATION	set details from the actual response needs to be done before response can be stored
WITHOUT_CLASSIFICATION	sampling proper - establish the connection and read the response repeatedly try to connect
WITHOUT_CLASSIFICATION	store any cookies received in the cookie manager
WITHOUT_CLASSIFICATION	if we redirected automatically the url may have changed
WITHOUT_CLASSIFICATION	has been seen in a redirect use header (if possible) if no message found
WITHOUT_CLASSIFICATION	don't process again
WITHOUT_CLASSIFICATION	save cache information
WITHOUT_CLASSIFICATION	random class for generating random numbers.
WITHOUT_CLASSIFICATION	return the absolutepath of the file
WITHOUT_CLASSIFICATION	the method will check to see if jmeter was started in nongui mode. if it was it will try to pick up the proxy host and port values if they were passed to jmeter.java.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	+ jmx file attribut names - do not change! $non-nls-1$
WITHOUT_CLASSIFICATION	we check to see if the proxy host and port are set
WITHOUT_CLASSIFICATION	this method uses apache soap util to create the proper dom elements. @return element
WITHOUT_CLASSIFICATION	get filename or ""
WITHOUT_CLASSIFICATION	note that the filename is also used as a key to the pool (if used) documents provided in the testplan are not currently pooled as they may change between samples.
WITHOUT_CLASSIFICATION	we created the document
WITHOUT_CLASSIFICATION	must be local content - or not using pool
WITHOUT_CLASSIFICATION	consider using apache commons pool to create a pool of document builders or make sure xmlparserutils creates builders efficiently.
WITHOUT_CLASSIFICATION	suppress messages to stdout
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	we don't want interrupt to try disconnection again we don't want to continue using this connection even if keepalive is set may not exist
WITHOUT_CLASSIFICATION	calling disconnect doesn't close the connection immediately but indicates we're through with it. the jvm should close it when necessary. we don't want interrupt to try disconnection again disconnect unless using keepalive
WITHOUT_CLASSIFICATION	it's not set lets check if the user passed proxy host and port from command line
WITHOUT_CLASSIFICATION	it's not set lets check if the user passed proxy host and port from command line
WITHOUT_CLASSIFICATION	must be a "here" document
WITHOUT_CLASSIFICATION	required to satisfy httpsamplerbase should not be called as we override sample()
WITHOUT_CLASSIFICATION	$non-nls-1$ - jmx file attribut names - do not change!
WITHOUT_CLASSIFICATION	assume it will fail ditto $non-nls-1$
WITHOUT_CLASSIFICATION	set the response defaults
WITHOUT_CLASSIFICATION	warning - could be large
WITHOUT_CLASSIFICATION	if a blank headermanager exists try to get the soaphttpconnection. after the first request there should be a connection object stored with the cookie header info.
WITHOUT_CLASSIFICATION	set the auth. thanks to kiyun roe for contributing the patch i cleaned up the patch slightly. 5-26-05
WITHOUT_CLASSIFICATION	check the proxy
WITHOUT_CLASSIFICATION	if use proxy is set we try to pick up the proxy host and port from either the text fields or from jmeterutil if they were passed from command line
WITHOUT_CLASSIFICATION	if for some reason the host is blank and the port is zero the sampler will fail silently
WITHOUT_CLASSIFICATION	api uses raw types
WITHOUT_CLASSIFICATION	it is not possible to access the actual http response code so we assume no data means failure
WITHOUT_CLASSIFICATION	scheme used for slow http sockets. cannot be set as a default because must be set on an httpclient instance.
WITHOUT_CLASSIFICATION	we always want to override the https scheme because we want to trust all certificates and hosts
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	done with the sampling proper.
WITHOUT_CLASSIFICATION	now collect the results into the httpsampleresult
WITHOUT_CLASSIFICATION	if we redirected automatically the url may have changed
WITHOUT_CLASSIFICATION	store any cookies received in the cookie manager
WITHOUT_CLASSIFICATION	save cache information
WITHOUT_CLASSIFICATION	condensed length (without \r) add \r for each header add \r for initial header final \r\n before data
WITHOUT_CLASSIFICATION	by not reading the response for real it improves the performance on slow clients
WITHOUT_CLASSIFICATION	reponse code doesn't really apply since the soap driver doesn't provide a response code
WITHOUT_CLASSIFICATION	create a set of default parameters from the ones initially created. this allows the defaults to be overridden if necessary from the properties file.
WITHOUT_CLASSIFICATION	set up http scheme override if necessary
WITHOUT_CLASSIFICATION	we always want to override the https scheme
WITHOUT_CLASSIFICATION	accessed from multiple threads
WITHOUT_CLASSIFICATION	can throw ioexception
WITHOUT_CLASSIFICATION	perform the sample
WITHOUT_CLASSIFICATION	needs to be done after execute to pick up all the headers
WITHOUT_CLASSIFICATION	we've finished with the request so we can add the localaddress to it for display
WITHOUT_CLASSIFICATION	http protocol violation but avoids npe
WITHOUT_CLASSIFICATION	record some sizes to allow httpsampleresult.getbytes() with different options
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	follow redirects and download page resources if appropriate
WITHOUT_CLASSIFICATION	pick up headers if failed to execute the request
WITHOUT_CLASSIFICATION	protocol[userpass@]host[port]
WITHOUT_CLASSIFICATION	always create hash because we will always need it
WITHOUT_CLASSIFICATION	allow for null strings
WITHOUT_CLASSIFICATION	otherwise proxy string fields may be null
WITHOUT_CLASSIFICATION	no proxy so don't check proxy fields
WITHOUT_CLASSIFICATION	lookup key - must agree with all the values used to create the httpclient.
WITHOUT_CLASSIFICATION	one-time init for this client
WITHOUT_CLASSIFICATION	set retry count
WITHOUT_CLASSIFICATION	override the defualt schemes as necessary
WITHOUT_CLASSIFICATION	set up proxy details
WITHOUT_CLASSIFICATION	save the agent for next time round
WITHOUT_CLASSIFICATION	use special field ip source address (for pseudo 'ip spoofing')
WITHOUT_CLASSIFICATION	reset in case was set previously
WITHOUT_CLASSIFICATION	allow the mimetype of the file to control the content type
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	exclude the cookie header since cookie is reported separately in the sample
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	n.b. need to separate protocol from authority otherwise httpserver would match httpserver could use separate fields but simpler to combine them
WITHOUT_CLASSIFICATION	method left empty here but allows subclasses to override
WITHOUT_CLASSIFICATION	header[0] is not the status line $non-nls-1$
WITHOUT_CLASSIFICATION	remove any port specification $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	no need to specify the port if it is the default
WITHOUT_CLASSIFICATION	get all the request headers
WITHOUT_CLASSIFICATION	helper class so we can generate request data without dumping entire file contents
WITHOUT_CLASSIFICATION	encoding does not really matter here
WITHOUT_CLASSIFICATION	buffer to hold the post body except file content
WITHOUT_CLASSIFICATION	check if we should do a multipart/form-data or an application/x-www-form-urlencoded post request
WITHOUT_CLASSIFICATION	if a content encoding is specified we use that as the encoding of any parameter values
WITHOUT_CLASSIFICATION	write the request to our own stream
WITHOUT_CLASSIFICATION	create the parts add any parameters
WITHOUT_CLASSIFICATION	we get the posted bytes using the encoding used to create it
WITHOUT_CLASSIFICATION	$non-nls-1$ this is the default used by httpclient
WITHOUT_CLASSIFICATION	not multipart check if the header manager had a content type header this allows the user to specify his own content-type for a post request
WITHOUT_CLASSIFICATION	if there are no arguments we can send a file as the body of the request todo needs a multiple file upload scenerio
WITHOUT_CLASSIFICATION	if getsendfileaspostbody returned true it's sure that file is not null
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	we get the posted bytes using the encoding used to create it
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	we just add placeholder text for file content
WITHOUT_CLASSIFICATION	if a content encoding is specified we set it as http parameter so that the post body will be encoded in the specified content encoding
WITHOUT_CLASSIFICATION	if none of the arguments have a name specified we just send all the values as the post body
WITHOUT_CLASSIFICATION	just append all the parameter values and use that as the post body
WITHOUT_CLASSIFICATION	note if "encoded?" is not selected arg.getencodedvalue is equivalent to arg.getvalue
WITHOUT_CLASSIFICATION	note if "encoded?" is not selected arg.getencodedvalue is equivalent to arg.getvalue
WITHOUT_CLASSIFICATION	let stringentity perform the encoding
WITHOUT_CLASSIFICATION	it is a normal post request with parameter names and values
WITHOUT_CLASSIFICATION	set the content type
WITHOUT_CLASSIFICATION	add the parameters
WITHOUT_CLASSIFICATION	use the default encoding for urls
WITHOUT_CLASSIFICATION	the httpclient always urlencodes both name and value so if the argument is already encoded we have to decode it before adding it to the post request
WITHOUT_CLASSIFICATION	the value is already encoded by the user must decode the value now so that when the httpclient encodes it we end up with the same value as the user had entered.
WITHOUT_CLASSIFICATION	add the parameter httpclient will urlencode it
WITHOUT_CLASSIFICATION	buffer to hold the entity body
WITHOUT_CLASSIFICATION	we provide the mime type here
WITHOUT_CLASSIFICATION	check for local contentencoding (charset) override fall back to default for content body we do this here rather so we can use the same charset to retrieve the data
WITHOUT_CLASSIFICATION	only create this if we are overriding whatever default there may be if there are no arguments we can send a file as the body of the request
WITHOUT_CLASSIFICATION	just append all the parameter values and use that as the entity body
WITHOUT_CLASSIFICATION	check if we have any content to send for body
WITHOUT_CLASSIFICATION	we get the posted bytes using the charset that was used to create them
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	if getsendfileaspostbody returned true it's sure that file is not null no need for content-type here
WITHOUT_CLASSIFICATION	if none of the arguments have a name specified we just send all the values as the entity body
WITHOUT_CLASSIFICATION	if the request entity is repeatable we can send it first to our own stream so we can return it
WITHOUT_CLASSIFICATION	this probably cannot happen
WITHOUT_CLASSIFICATION	does not need to be synchronised as all access is from same thread
WITHOUT_CLASSIFICATION	don't try twice
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	may be the empty string
WITHOUT_CLASSIFICATION	n.b. it's not po ssible to forward threadstarted() to the implementation class. this is because config items are not processed until later and httpdefaults may define the implementation
WITHOUT_CLASSIFICATION	forward to sampler
WITHOUT_CLASSIFICATION	forward to sampler
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-2$ $non-nls-3$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-2$ $non-nls-3$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	force reopen on next sample
WITHOUT_CLASSIFICATION	content-length
WITHOUT_CLASSIFICATION	marker for query string attribute
WITHOUT_CLASSIFICATION	+ jmx names - do not change $non-nls-1$
WITHOUT_CLASSIFICATION	more general attributes not supported
WITHOUT_CLASSIFICATION	authorization
WITHOUT_CLASSIFICATION	host always
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	content-type
WITHOUT_CLASSIFICATION	content-type
WITHOUT_CLASSIFICATION	we need to use up the int now
WITHOUT_CLASSIFICATION	int mark =
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	dummy
WITHOUT_CLASSIFICATION	methods needed by subclasses to get access to the implementation
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	help convert existing jmx files which use httpsampler[2] nodes
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.protocol.http.sampler.httpsamplerbase#testiterationstart(org.apache.jmeter.engine.event.loopiterationevent)
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	key = tcpkey or errkey entry= socket or string
WITHOUT_CLASSIFICATION	superclass does not support types
WITHOUT_CLASSIFICATION	todo - charset?
WITHOUT_CLASSIFICATION	$non-nls-1$ default value false
WITHOUT_CLASSIFICATION	default for concurrent pool (do not change)
WITHOUT_CLASSIFICATION	shown as parameter name on the gui
WITHOUT_CLASSIFICATION	- jmx names
WITHOUT_CLASSIFICATION	default concurrent pool size for download embedded resources
WITHOUT_CLASSIFICATION	the default setting to be used (i.e. historic)
WITHOUT_CLASSIFICATION	for thread pool for resources but no need to use a special value?
WITHOUT_CLASSIFICATION	use for combobox source address type. preserve order (specially with localization)
WITHOUT_CLASSIFICATION	$non-nls-1$ default value 60 secs
WITHOUT_CLASSIFICATION	file_field is kept for backward compatibility with old test plans $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ supported methods
WITHOUT_CLASSIFICATION	image_parser now really means embedded_parser $non-nls-1$
WITHOUT_CLASSIFICATION	i.e. get
WITHOUT_CLASSIFICATION	derive the mapping of content types to parsers
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	store md5 hash instead of storing response $non-nls-1$
WITHOUT_CLASSIFICATION	not synch but it is not modified after creation
WITHOUT_CLASSIFICATION	returns empty array for null
WITHOUT_CLASSIFICATION	code /
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	skip parameters with a blank name (allows use of optional variables in parameter lists)
WITHOUT_CLASSIFICATION	if there is one file with no parameter name the file will be sent as post body.
WITHOUT_CLASSIFICATION	we use multipart if we have been told so or files are present and the files should not be send as the post body
WITHOUT_CLASSIFICATION	we know that url arguments should always be encoded in utf-8 according to spec
WITHOUT_CLASSIFICATION	parse the arguments in querystring assuming specified encoding for values
WITHOUT_CLASSIFICATION	check if there are any difference between name and value and their encoded name and value
WITHOUT_CLASSIFICATION	if there is no difference we mark it as not needing encoding
WITHOUT_CLASSIFICATION	private method to allow asyncsample to reset the value without performing checks
WITHOUT_CLASSIFICATION	private method to allow asyncsample to reset the value without performing checks
WITHOUT_CLASSIFICATION	allow use of relative file urls
WITHOUT_CLASSIFICATION	http urls must be absolute allow file to be relative $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	add the query string if it is a http get or delete request
WITHOUT_CLASSIFICATION	get the query string encoded in specified encoding if no encoding is specified by user we will get it encoded in utf-8 which is what the http spec says
WITHOUT_CLASSIFICATION	already contains a prefix
WITHOUT_CLASSIFICATION	if default port for protocol is used we do not include port in url
WITHOUT_CLASSIFICATION	we use the encoding which should be used according to the http spec which is utf-8
WITHOUT_CLASSIFICATION	check if the sampler has a specified content encoding
WITHOUT_CLASSIFICATION	encode the parameter value in the specified content encoding
WITHOUT_CLASSIFICATION	records the existance of an equal sign
WITHOUT_CLASSIFICATION	we do not know the content encoding of the query string
WITHOUT_CLASSIFICATION	append body if it is a post or put
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	need to handle four cases - string contains name=value - string contains name= - string contains name - empty string
WITHOUT_CLASSIFICATION	is there a separator? case of name=value name=
WITHOUT_CLASSIFICATION	if we know the encoding we can decode the argument value to make it easier to read for the user
WITHOUT_CLASSIFICATION	if we do not know the encoding we just use the encoded value the browser has already done the encoding so save the values as is
WITHOUT_CLASSIFICATION	we have a name
WITHOUT_CLASSIFICATION	we don't use the default parser
WITHOUT_CLASSIFICATION	iterate through the urls and download each image
WITHOUT_CLASSIFICATION	get the url matcher
WITHOUT_CLASSIFICATION	don't fetch unless pattern compiles
WITHOUT_CLASSIFICATION	for concurrent get resources
WITHOUT_CLASSIFICATION	see catch clause below
WITHOUT_CLASSIFICATION	there were some spaces in the url
WITHOUT_CLASSIFICATION	i don't think localmatcher can be null here but check just in case
WITHOUT_CLASSIFICATION	we have a pattern and the url does not match so skip it
WITHOUT_CLASSIFICATION	default serial download embedded resources
WITHOUT_CLASSIFICATION	if for download concurrent embedded resources
WITHOUT_CLASSIFICATION	init with default value
WITHOUT_CLASSIFICATION	sample all resources with threadpool
WITHOUT_CLASSIFICATION	call normal shutdown (wait ending all tasks)
WITHOUT_CLASSIFICATION	put a timeout if tasks couldn't terminate
WITHOUT_CLASSIFICATION	add result to main sampleresult
WITHOUT_CLASSIFICATION	did all the tasks finish?
WITHOUT_CLASSIFICATION	not intended to be instantiated
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	kill any remaining tasks
WITHOUT_CLASSIFICATION	@param res httpsampleresult to check @return parser class name (may be "") or null if entry does not exist
WITHOUT_CLASSIFICATION	browsers seem to tolerate location headers with spaces replacing them automatically with %20. we want to emulate this behaviour.
WITHOUT_CLASSIFICATION	the redirect url we got was not a valid url
WITHOUT_CLASSIFICATION	only add sample if it is a sample of valid url redirect i.e. that we have actually sampled the url
WITHOUT_CLASSIFICATION	now populate the any totalres fields that need to come from lastres
WITHOUT_CLASSIFICATION	method to set files list to be uploaded. @param value httpfileargs object that stores file list to be uploaded.
WITHOUT_CLASSIFICATION	no point saving an empty list
WITHOUT_CLASSIFICATION	method to get files list to be uploaded.
WITHOUT_CLASSIFICATION	weed out the empty files
WITHOUT_CLASSIFICATION	noop to provide based empty impl and avoid breaking existing implementations
WITHOUT_CLASSIFICATION	may also happen if long value > int.max
WITHOUT_CLASSIFICATION	for new test plans that don't have file/param/mime properties
WITHOUT_CLASSIFICATION	updated the property lists
WITHOUT_CLASSIFICATION	we don't want to use cachemanager clone but the parent one and cachemanager is thread safe
WITHOUT_CLASSIFICATION	non-instantiable
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	if we redirected automatically the url may have changed
WITHOUT_CLASSIFICATION	if getsendfileaspostbody returned true it's sure that file is not null
WITHOUT_CLASSIFICATION	allow the mimetype of the file to control the content type
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	implement these here to avoid re-implementing for sub-classes (previously these were implemented in all testelements)
WITHOUT_CLASSIFICATION	8kb is the (max) size to have the latency ('the first packet') enough for md5
WITHOUT_CLASSIFICATION	ok we have an old-style file definition save it now deal with any additional file arguments
WITHOUT_CLASSIFICATION	-1 means not defined
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	control reuse of cached ssl context in subsequent iterations
WITHOUT_CLASSIFICATION	e.g. .apache.org $non-nls-1$
WITHOUT_CLASSIFICATION	e.g. www.apache.org
WITHOUT_CLASSIFICATION	get hostname
WITHOUT_CLASSIFICATION	n.b. these values are used in jmeter.properties (jmeter.httpsampler) - do not change they can alse be used as the implementation name
WITHOUT_CLASSIFICATION	+ jmx implementation attribute values (also displayed in gui) - do not change $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ - jmx
WITHOUT_CLASSIFICATION	helper class (callback) for applying parameter definitions
WITHOUT_CLASSIFICATION	get past separator
WITHOUT_CLASSIFICATION	put request does not use multipart so no need for boundary
WITHOUT_CLASSIFICATION	get the encoding to use for the request
WITHOUT_CLASSIFICATION	if there are no arguments we can send a file as the body of the request
WITHOUT_CLASSIFICATION	create the content length we are going to write
WITHOUT_CLASSIFICATION	we create the post body content now so we know the size
WITHOUT_CLASSIFICATION	just append all the parameter values and use that as the put body
WITHOUT_CLASSIFICATION	keep the content will be sent later
WITHOUT_CLASSIFICATION	set the content length
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	request sent. now get the response
WITHOUT_CLASSIFICATION	done with the sampling proper.
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	now collect the results into the httpsampleresult
WITHOUT_CLASSIFICATION	e.g. text/html charset=iso-8859-1
WITHOUT_CLASSIFICATION	needs to be done after execute to pick up all the headers
WITHOUT_CLASSIFICATION	http protocol violation but avoids npe
WITHOUT_CLASSIFICATION	record some sizes to allow httpsampleresult.getbytes() with different options
WITHOUT_CLASSIFICATION	handle the various methods
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	allows httpsamplerproxy to call threadfinished subclasses can override if necessary
WITHOUT_CLASSIFICATION	allows httpsamplerproxy to call notifyfirstsampleafterlooprestart subclasses can override if necessary
WITHOUT_CLASSIFICATION	provide access to httpsamplerbase methods
WITHOUT_CLASSIFICATION	did not want to spoof the ip address
WITHOUT_CLASSIFICATION	ok to set pre-emptive auth?
WITHOUT_CLASSIFICATION	needs to be accessible by httpsampler2
WITHOUT_CLASSIFICATION	set default parameters as needed
WITHOUT_CLASSIFICATION	process commons httpclient parameters file $non-nls-1$
WITHOUT_CLASSIFICATION	if the pre-emptive parameter is undefined then we can set it as needed otherwise we should do what the user requested.
WITHOUT_CLASSIFICATION	handle old-style jmeter properties
WITHOUT_CLASSIFICATION	this must be done last as must not be overridden
WITHOUT_CLASSIFICATION	we do our own cookie handling
WITHOUT_CLASSIFICATION	may generate illegalargumentexception
WITHOUT_CLASSIFICATION	hc3.1 does not have the method
WITHOUT_CLASSIFICATION	set any default request headers
WITHOUT_CLASSIFICATION	setup connection
WITHOUT_CLASSIFICATION	will be null for head
WITHOUT_CLASSIFICATION	tmp inputstream needs to have a good counting
WITHOUT_CLASSIFICATION	pick up actual path (after redirects)
WITHOUT_CLASSIFICATION	can be missing e.g. on redirect
WITHOUT_CLASSIFICATION	exclude the cookie header since cookie is reported separately in the sample
WITHOUT_CLASSIFICATION	store any cookies received in the cookie manager
WITHOUT_CLASSIFICATION	save cache information
WITHOUT_CLASSIFICATION	follow redirects and download page resources if appropriate
WITHOUT_CLASSIFICATION	pick up headers if failed to execute the request
WITHOUT_CLASSIFICATION	set up the local address if one exists
WITHOUT_CLASSIFICATION	use special field ip source address (for pseudo 'ip spoofing')
WITHOUT_CLASSIFICATION	method left empty here but allows subclasses to override
WITHOUT_CLASSIFICATION	remove any port specification $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	get all the request headers
WITHOUT_CLASSIFICATION	add a \r\n
WITHOUT_CLASSIFICATION	e.g. some kinds of invalid url
WITHOUT_CLASSIFICATION	already include the \r\n
WITHOUT_CLASSIFICATION	last \r\n before response data
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	we use the hostconfiguration as the key to retrieve the httpclient so need to ensure that any items used in its equals/hashcode methods are not changed after use i.e. host port protocol localaddress proxy
WITHOUT_CLASSIFICATION	all needed to ensure re-usablility
WITHOUT_CLASSIFICATION	null means use the default
WITHOUT_CLASSIFICATION	dynamic proxy overrules static proxy
WITHOUT_CLASSIFICATION	n.b. hostconfiguration.equals() includes proxy settings in the compare.
WITHOUT_CLASSIFICATION	set up any required proxy credentials
WITHOUT_CLASSIFICATION	allow httpclient to handle the redirects
WITHOUT_CLASSIFICATION	set all the headers from the headermanager
WITHOUT_CLASSIFICATION	header[0] is not the status line $non-nls-1$
WITHOUT_CLASSIFICATION	buffer to hold the post body except file content
WITHOUT_CLASSIFICATION	set the content type
WITHOUT_CLASSIFICATION	check if we should do a multipart/form-data or an application/x-www-form-urlencoded post request
WITHOUT_CLASSIFICATION	if a content encoding is specified we use that as the encoding of any parameter values
WITHOUT_CLASSIFICATION	write the request to our own stream
WITHOUT_CLASSIFICATION	create the parts add any parameters
WITHOUT_CLASSIFICATION	$non-nls-1$ this is the default used by httpclient
WITHOUT_CLASSIFICATION	if getsendfileaspostbody returned true it's sure that file is not null
WITHOUT_CLASSIFICATION	allow the mimetype of the file to control the content type
WITHOUT_CLASSIFICATION	we just add placeholder text for file content
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	nt includes other types of credentials
WITHOUT_CLASSIFICATION	we have credentials - should we set pre-emptive authentication?
WITHOUT_CLASSIFICATION	we don't know how many entries will be skipped
WITHOUT_CLASSIFICATION	add any files
WITHOUT_CLASSIFICATION	we do not know the char set of the file to be uploaded so we set it to null
WITHOUT_CLASSIFICATION	we do not know what the char set of the file is
WITHOUT_CLASSIFICATION	set the multipart for the post
WITHOUT_CLASSIFICATION	.sendmultipartwithoutfilecontent(bos)
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	we get the posted bytes using the encoding used to create it
WITHOUT_CLASSIFICATION	if there are no arguments we can send a file as the body of the request todo needs a multiple file upload scenerio
WITHOUT_CLASSIFICATION	if getsendfileaspostbody returned true it's sure that file is not null
WITHOUT_CLASSIFICATION	if a content encoding is specified we set it as http parameter so that the post body will be encoded in the specified content encoding
WITHOUT_CLASSIFICATION	if none of the arguments have a name specified we just send all the values as the post body
WITHOUT_CLASSIFICATION	it is a normal post request with parameter names and values
WITHOUT_CLASSIFICATION	just append all the parameter values and use that as the post body
WITHOUT_CLASSIFICATION	set the content type
WITHOUT_CLASSIFICATION	add the parameters
WITHOUT_CLASSIFICATION	use the default encoding for urls
WITHOUT_CLASSIFICATION	the httpclient always urlencodes both name and value so if the argument is already encoded we have to decode it before adding it to the post request
WITHOUT_CLASSIFICATION	the value is already encoded by the user must decode the value now so that when the httpclient encodes it we end up with the same value as the user had entered.
WITHOUT_CLASSIFICATION	add the parameter httpclient will urlencode it
WITHOUT_CLASSIFICATION	check if we have any content to send for body
WITHOUT_CLASSIFICATION	we get the posted bytes using the charset that was used to create them
WITHOUT_CLASSIFICATION	does not need to be synchronised as all access is from same thread
WITHOUT_CLASSIFICATION	if there are no arguments we can send a file as the body of the request
WITHOUT_CLASSIFICATION	set the content length
WITHOUT_CLASSIFICATION	for all the file multiparts we must tell it to not include the actual file content
WITHOUT_CLASSIFICATION	for all the file multiparts we must revert the hiding of the actual file content
WITHOUT_CLASSIFICATION	check if the header manager had a content type header this allows the user to specify his own content-type for a post request
WITHOUT_CLASSIFICATION	buffer to hold the put body except file content
WITHOUT_CLASSIFICATION	should be true
WITHOUT_CLASSIFICATION	count the retries as well in the time
WITHOUT_CLASSIFICATION	request sent. now get the response
WITHOUT_CLASSIFICATION	buffer to hold the post body except file content
WITHOUT_CLASSIFICATION	we just add placeholder text for file content
WITHOUT_CLASSIFICATION	if a content encoding is specified we set it as http parameter so that the post body will be encoded in the specified content encoding
WITHOUT_CLASSIFICATION	if the request entity is repeatable we can send it first to our own stream so we can return it
WITHOUT_CLASSIFICATION	if the request entity is repeatable we can send it first to our own stream so we can return it
WITHOUT_CLASSIFICATION	check if the header manager had a content type header this allows the user to specify his own content-type for a post request
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	if none of the arguments have a name specified we just send all the values as the put body
WITHOUT_CLASSIFICATION	check if we should send only placeholder text for the file content or the real file content
WITHOUT_CLASSIFICATION	can cause npe in httpclient 3.1 ((simplehttpconnectionmanager)cl.gethttpconnectionmanager()).shutdown() closes the connection revert to original method closes the connection
WITHOUT_CLASSIFICATION	implemented by parent class
WITHOUT_CLASSIFICATION	take length from file
WITHOUT_CLASSIFICATION	use this to override file length
WITHOUT_CLASSIFICATION	all the other headers are set up by httpsampler2.setupconnection()
WITHOUT_CLASSIFICATION	no header provided
WITHOUT_CLASSIFICATION	so we don't generate chunked encoding
WITHOUT_CLASSIFICATION	will use chunked encoding
WITHOUT_CLASSIFICATION	some headers are set by executemethod()
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	done with the sampling proper.
WITHOUT_CLASSIFICATION	now collect the results into the httpsampleresult
WITHOUT_CLASSIFICATION	e.g. text/html charset=iso-8859-1
WITHOUT_CLASSIFICATION	if we redirected automatically the url may have changed
WITHOUT_CLASSIFICATION	store any cookies received in the cookie manager
WITHOUT_CLASSIFICATION	save cache information
WITHOUT_CLASSIFICATION	follow redirects and download page resources if appropriate
WITHOUT_CLASSIFICATION	buffer to hold the post body except file content
WITHOUT_CLASSIFICATION	if there are no arguments we can send a file as the body of the request
WITHOUT_CLASSIFICATION	will be null for head
WITHOUT_CLASSIFICATION	pick up actual path (after redirects)
WITHOUT_CLASSIFICATION	can be missing e.g. on redirect
WITHOUT_CLASSIFICATION	e.g. some kinds of invalid url
WITHOUT_CLASSIFICATION	add any files
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	charset must agree with content-type below $non-nls-1$
WITHOUT_CLASSIFICATION	contentlength > 0 ? contentlength default_initial_buffer_size)
WITHOUT_CLASSIFICATION	first response
WITHOUT_CLASSIFICATION	save the latency
WITHOUT_CLASSIFICATION	set up the defaults (may be overridden below)
WITHOUT_CLASSIFICATION	notused private class parserclass = null
WITHOUT_CLASSIFICATION	was there an error?
WITHOUT_CLASSIFICATION	n.b. must be in this class for the testbean code to work
WITHOUT_CLASSIFICATION	retrieve the formatted data using the same encoding used to create it
WITHOUT_CLASSIFICATION	write end of multipart
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	check if we should do a multipart/form-data or an application/x-www-form-urlencoded post request
WITHOUT_CLASSIFICATION	set the content type
WITHOUT_CLASSIFICATION	get the encoding to use for the request
WITHOUT_CLASSIFICATION	if there are no arguments we can send a file as the body of the request
WITHOUT_CLASSIFICATION	keep the content will be sent later
WITHOUT_CLASSIFICATION	set the content length
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	write the form data post body which we have constructed in the setheaders. this contains the multipart start divider and any form data i.e. arguments
WITHOUT_CLASSIFICATION	first write the start multipart file todo - charset?
WITHOUT_CLASSIFICATION	retrieve the formatted data using the same encoding used to create it todo - charset? write the actual file content
WITHOUT_CLASSIFICATION	we just add placeholder text for file content $non-nls-1$ write the end of multipart file
WITHOUT_CLASSIFICATION	we're sure that there is at least one file because of getsendfileaspostbody method's return value.
WITHOUT_CLASSIFICATION	we just add placeholder text for file content $non-nls-1$
WITHOUT_CLASSIFICATION	write the form section
WITHOUT_CLASSIFICATION	first the multipart start divider
WITHOUT_CLASSIFICATION	add any parameters
WITHOUT_CLASSIFICATION	end the previous multipart
WITHOUT_CLASSIFICATION	end the previous multipart
WITHOUT_CLASSIFICATION	write multipart for parameter
WITHOUT_CLASSIFICATION	if there are any files we need to end the previous multipart
WITHOUT_CLASSIFICATION	write multipart for file
WITHOUT_CLASSIFICATION	add also the length of the file content
WITHOUT_CLASSIFICATION	and the end of the file multipart
WITHOUT_CLASSIFICATION	add the end of multipart
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	check if we should do a multipart/form-data or an application/x-www-form-urlencoded post request
WITHOUT_CLASSIFICATION	allow the mimetype of the file to control the content type
WITHOUT_CLASSIFICATION	if none of the arguments have a name specified we just send all the values as the post body
WITHOUT_CLASSIFICATION	if we have a file but no data then read the file
WITHOUT_CLASSIFICATION	override so we can intercept the stream
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	override so we can intercept the stream
WITHOUT_CLASSIFICATION	superclass does not support types
WITHOUT_CLASSIFICATION	todo - charset?
WITHOUT_CLASSIFICATION	just append all the parameter values and use that as the post body
WITHOUT_CLASSIFICATION	it is a normal post request with parameter names and values
WITHOUT_CLASSIFICATION	set the content type
WITHOUT_CLASSIFICATION	create the content length we are going to write
WITHOUT_CLASSIFICATION	we create the post body content now so we know the size
WITHOUT_CLASSIFICATION	keep the content will be sent later
WITHOUT_CLASSIFICATION	set the content length
WITHOUT_CLASSIFICATION	check if the header manager had a content type header this allows the user to specify his own content-type for a post request
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	now we just construct any multipart for the files we only construct the file multipart start we do not write the actual file content
WITHOUT_CLASSIFICATION	we're sure that there is one file because of getsendfileaspostbody method's return value.
WITHOUT_CLASSIFICATION	exception in progress
WITHOUT_CLASSIFICATION	write boundary end marker
WITHOUT_CLASSIFICATION	get access to buffer
WITHOUT_CLASSIFICATION	wrap read() methods to track output buffer
WITHOUT_CLASSIFICATION	preload the output so that can be read back as http
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	1k - the previous 100k made no sense (there's tons of buffers elsewhere in the chain) and it caused oom when many concurrent uploads were being done. could be fixed by increasing the evacuation ratio in bin/jmeter[.bat] but this is better.
WITHOUT_CLASSIFICATION	make sure buffer details track the output
WITHOUT_CLASSIFICATION	characters per second to emulate
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	override all the super-class socket methods.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	timeout to retrieve wsdl when server not response
WITHOUT_CLASSIFICATION	notused string portname = pnode.getattribute("name") used to check binding but now it doesn't. it was failing when wsdl did not using binding as expected
WITHOUT_CLASSIFICATION	check soap12
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.http.conn.ssl.sslsocketfactory#createsocket()
WITHOUT_CLASSIFICATION	characters per second to emulate
WITHOUT_CLASSIFICATION	in the rare case the wsdl is protected and requires authentication use the authmanager to set the authorization. basic and digest authorization are pretty weak and don't provide real security.
WITHOUT_CLASSIFICATION	get the node
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	get the soapoperation
WITHOUT_CLASSIFICATION	there should only be one soapoperation node per operation
WITHOUT_CLASSIFICATION	first we iterate through the bindings
WITHOUT_CLASSIFICATION	now we iterate through the operations
WITHOUT_CLASSIFICATION	if the first child is soapoperation we add it to the array
WITHOUT_CLASSIFICATION	new wsdlhelper("httpservices.bio.ifi.lmu.de1046/prothesaurus/services/biologicalnameservice?wsdl")
WITHOUT_CLASSIFICATION	remove quotes from charset name
WITHOUT_CLASSIFICATION	get ../ or ../../ etc.
WITHOUT_CLASSIFICATION	find index of path start
WITHOUT_CLASSIFICATION	absolute url
WITHOUT_CLASSIFICATION	find path endindex
WITHOUT_CLASSIFICATION	install new path
WITHOUT_CLASSIFICATION	this ensures tha httpclient knows about the protocol
WITHOUT_CLASSIFICATION	now allow the url handling to work.
WITHOUT_CLASSIFICATION	not needed for httpclient
WITHOUT_CLASSIFICATION	check if we have it in the cache
WITHOUT_CLASSIFICATION	perform the encoding
WITHOUT_CLASSIFICATION	lrumap does not support generics currently
WITHOUT_CLASSIFICATION	we assume the argument value is encoded according to the http spec i.e. utf-8
WITHOUT_CLASSIFICATION	we assume the name is always encoded according to spec
WITHOUT_CLASSIFICATION	the value is encoded in the specified encoding
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	skip expensive processing if it cannot apply $non-nls-1$
WITHOUT_CLASSIFICATION	match /../[../] etc. $non-nls-1$
WITHOUT_CLASSIFICATION	document or context-relative url like '/path/to' or '../path/to' or '/path/to/../path/'
WITHOUT_CLASSIFICATION	path is between idx='pathstartindex' (inclusive) and idx='pathendindex' (exclusive)
WITHOUT_CLASSIFICATION	append '/' if this isn't the last token or it is but the original path terminated w/ a '/'
WITHOUT_CLASSIFICATION	this can't happen (how should utf8 not be supported!?!) so just throw an error
WITHOUT_CLASSIFICATION	encode according to the http spec i.e. utf-8
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	indicate that an error occured
WITHOUT_CLASSIFICATION	we check the count to see if we have exceeded the number of lines to parse. there's no way to know where to stop in the file. therefore we use break to escape the while loop when we've reached the count.
WITHOUT_CLASSIFICATION	this.reader = new bufferedreader(new filereader(this.source)) parse(this.readerel)
WITHOUT_CLASSIFICATION	we clean the line to get rid of extra stuff
WITHOUT_CLASSIFICATION	now we set request method
WITHOUT_CLASSIFICATION	increment the current count
WITHOUT_CLASSIFICATION	increment the current count
WITHOUT_CLASSIFICATION	we filter the line first before we try to separate the url into file and parameters.
WITHOUT_CLASSIFICATION	in the case when the filter is not set we parse all the lines
WITHOUT_CLASSIFICATION	check the url for "?" symbol
WITHOUT_CLASSIFICATION	now that we have stripped the file we can parse the parameters
WITHOUT_CLASSIFICATION	if the string contains atleast one double quote and checkmethod is true go ahead and tokenize the string.
WITHOUT_CLASSIFICATION	we return the original string
WITHOUT_CLASSIFICATION	convert the parameters
WITHOUT_CLASSIFICATION	avoid possible npe when trimming the name
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	indicate that an error occured
WITHOUT_CLASSIFICATION	read one line at a time using bufferedreader
WITHOUT_CLASSIFICATION	this.reader = new bufferedreader(new filereader(this.source)) parse(this.readerel)
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	called from ctor so must not be overridable
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	we tokenize using double quotes. this means for tomcat we should have 3 tokens if there isn't any additional information in the logs
WITHOUT_CLASSIFICATION	if checkmethod on the token is true we tokenzie it using space and escape the while loop. only the first matching token will be used
WITHOUT_CLASSIFICATION	there should only be one token that starts with slash character
WITHOUT_CLASSIFICATION	do nothing. it's naive but since the utility is meant to parse access logs the formatting should be correct
WITHOUT_CLASSIFICATION	first have to release the cookie we were using so other threads stuck in wait can move on
WITHOUT_CLASSIFICATION	let notified threads move on and get lock on managersinuse
WITHOUT_CLASSIFICATION	here is the core routine to find appropriate cookie manager and check it's not being used. if used wait until whoever's using it gives it up
WITHOUT_CLASSIFICATION	no implementation at this time since we bypass the idea of having a console tool to generate test plans. instead i decided to have a sampler that uses the generator and parser directly
WITHOUT_CLASSIFICATION	now we create the compiled pattern and add it to the arraylist
WITHOUT_CLASSIFICATION	we do a quick check to see if any filters are set. if not we just return false to be efficient.
WITHOUT_CLASSIFICATION	double check this logic make sure it makes sense
WITHOUT_CLASSIFICATION	inclusion filter assumes most of the files are not wanted therefore usefile is set to false unless it matches.
WITHOUT_CLASSIFICATION	exclusion filter assumes most of the files are used therefore usefile is set to true unless it matches.
WITHOUT_CLASSIFICATION	request headers column renderers
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	request headers column renderers
WITHOUT_CLASSIFICATION	request headers column renderers
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	clear results table before filling
WITHOUT_CLASSIFICATION	display with same order http protocol
WITHOUT_CLASSIFICATION	can be null - e.g. if url was invalid
WITHOUT_CLASSIFICATION	display cookie in headers table (same location on http protocol)
WITHOUT_CLASSIFICATION	parsed request headers
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.visualizers.request.requestview#init()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.visualizers.request.requestview#cleardata()
WITHOUT_CLASSIFICATION	$non-nls-1$ soap request (generally) blank name $non-nls-1$
WITHOUT_CLASSIFICATION	blank name $non-nls-1$
WITHOUT_CLASSIFICATION	empty init $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	hint to background color on bottom tabs (grey not blue)
WITHOUT_CLASSIFICATION	the object used for each row
WITHOUT_CLASSIFICATION	the object used for each row
WITHOUT_CLASSIFICATION	the object used for each row
WITHOUT_CLASSIFICATION	key value
WITHOUT_CLASSIFICATION	key value
WITHOUT_CLASSIFICATION	key value
WITHOUT_CLASSIFICATION	set up the 1st table result with empty headers
WITHOUT_CLASSIFICATION	set up the 2nd table
WITHOUT_CLASSIFICATION	set up the 3rd table
WITHOUT_CLASSIFICATION	create the split pane
WITHOUT_CLASSIFICATION	called from ctor so must not be overridable
WITHOUT_CLASSIFICATION	$non-nls-1$ concatenate query post if exists
WITHOUT_CLASSIFICATION	add a message when no http sample $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	better iso-8859-1 than utf-8
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	find all the classes which implement the javasamplerclient interface.
WITHOUT_CLASSIFICATION	remove the javaconfig class from the list since it only implements the interface for error conditions.
WITHOUT_CLASSIFICATION	if a user has set parameters in one test and then selects a different test which supports the same parameters those parameters should have the same values that they did in the original test.
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.modifytestelement(testelement)
WITHOUT_CLASSIFICATION	entry tends to be ignored
WITHOUT_CLASSIFICATION	default (can be overridden by the script)
WITHOUT_CLASSIFICATION	these are not useful yet as have not found how to get updated values back mgr.declarebean("responsecode" "200" string.class) $non-nls-1$ mgr.declarebean("responsemessage" "ok" string.class) $non-nls-1$ mgr.declarebean("issuccess" boolean.true boolean.class) $non-nls-1$
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.gui.abstractjmeterguicomponent#cleargui()
WITHOUT_CLASSIFICATION	overrides abstractjmeterguicomponent.configure(testelement)
WITHOUT_CLASSIFICATION	n.b. some engines (e.g. javascript) cannot handle certain declarebean() calls after the engine has been initialised so create the engine last
WITHOUT_CLASSIFICATION	catch evaluation errors
WITHOUT_CLASSIFICATION	reset the bsh.interpreter before each execution
WITHOUT_CLASSIFICATION	script file name (if present)
WITHOUT_CLASSIFICATION	parameters to pass to script file (or script)
WITHOUT_CLASSIFICATION	script area
WITHOUT_CLASSIFICATION	don't let the input field shrink too much
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	entry tends to be ignored
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	implements javasamplerclient.setuptest(javasamplercontext)
WITHOUT_CLASSIFICATION	implements javasamplerclient.teardowntest(javasamplercontext)
WITHOUT_CLASSIFICATION	implements javasamplerclient.getdefaultparameters()
WITHOUT_CLASSIFICATION	ensure that the required class variables are cloned as this is not currently done by the super-implementation.
WITHOUT_CLASSIFICATION	allow sampler access to test element name
WITHOUT_CLASSIFICATION	only set the default label if it has not been set
WITHOUT_CLASSIFICATION	failed to initialise the class
WITHOUT_CLASSIFICATION	but we do trap this error to make tests work better
WITHOUT_CLASSIFICATION	no point continuing mainly for bsh.evalerror
WITHOUT_CLASSIFICATION	implements teststatelistener.teststarted()
WITHOUT_CLASSIFICATION	implements teststatelistener.teststarted(string)
WITHOUT_CLASSIFICATION	implements teststatelistener.testended(string)
WITHOUT_CLASSIFICATION	implementation notes all of the methods in this class are currently read-only. if update methods are included in the future they should be defined so that a single instance of javasamplercontext can be associated with each thread. therefore no synchronization should be needed. the same instance should be used for the call to setuptest all calls to runtest and the call to teardowntest.
WITHOUT_CLASSIFICATION	teststatelistener implementation
WITHOUT_CLASSIFICATION	set default values $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	log.info(getlabel()+" "+getfilename())
WITHOUT_CLASSIFICATION	assume text output - script can override if necessary
WITHOUT_CLASSIFICATION	set response data
WITHOUT_CLASSIFICATION	script can also use setresponsedata() so long as it returns null
WITHOUT_CLASSIFICATION	set if we were successful or not
WITHOUT_CLASSIFICATION	private static final string label_default = "javatest"
WITHOUT_CLASSIFICATION	utility method to set up all the values
WITHOUT_CLASSIFICATION	default to name of element
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	record sample start time.
WITHOUT_CLASSIFICATION	record sample start time.
WITHOUT_CLASSIFICATION	generate a random-ish offset value using the current time.
WITHOUT_CLASSIFICATION	generate a random-ish offset value using the current time.
WITHOUT_CLASSIFICATION	execute the sample. in this case sleep for the specified time if any
WITHOUT_CLASSIFICATION	record end time and populate the results.
WITHOUT_CLASSIFICATION	the name of the sampler
WITHOUT_CLASSIFICATION	should not happen
WITHOUT_CLASSIFICATION	only do the calculation if it is needed
WITHOUT_CLASSIFICATION	execute the sample. in this case sleep for the specified time.
WITHOUT_CLASSIFICATION	string used to indicate a null value
WITHOUT_CLASSIFICATION	key name (lowercase) from java.sql.types entry corresponding int value
WITHOUT_CLASSIFICATION	read-only after class init
WITHOUT_CLASSIFICATION	based on e291. getting the name of a jdbc type from javaalmanac.com httpjavaalmanac.com/egs/java.sql/jdbcint2str.html
WITHOUT_CLASSIFICATION	get all fields in java.sql.types and store the corresponding int values
WITHOUT_CLASSIFICATION	query types (used to communicate with gui) n.b. these must not be changed as they are used in the jmx files $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	based on query return value get results
WITHOUT_CLASSIFICATION	user provided incorrect query type
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	as a connection is held by only one thread we cannot already have a preparedstatementmap put by another thread
WITHOUT_CLASSIFICATION	save the value in the variable if present
WITHOUT_CLASSIFICATION	save the value in the variable if present
WITHOUT_CLASSIFICATION	in case
WITHOUT_CLASSIFICATION	can't have an output parameter type null
WITHOUT_CLASSIFICATION	preparedstatementmap is associated to one connection so 2 threads cannot use the same preparedstatement map at the same time
WITHOUT_CLASSIFICATION	thrown by derby jdbc (at least) if there are no "?" markers in statement
WITHOUT_CLASSIFICATION	save the current count
WITHOUT_CLASSIFICATION	lrumap is not generic
WITHOUT_CLASSIFICATION	i starts at 1
WITHOUT_CLASSIFICATION	the datasource is set up by teststarted and cleared by testended. these are called from different threads so access must be synchronized. the same instance is called in each case.
WITHOUT_CLASSIFICATION	remove any additional values from previous sample
WITHOUT_CLASSIFICATION	call to testbeanhelper.prepare() is intentional
WITHOUT_CLASSIFICATION	$non-nls-1$ get the previous count
WITHOUT_CLASSIFICATION	keep a record of the pre-thread pools so that they can be disposed of at the end of a test
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	i.e. if we want per thread pooling pool will be created later
WITHOUT_CLASSIFICATION	utility routine to get the connection from the pool. purpose - allows jdbcsampler to be entirely independent of the pooling classes - allows the pool storage mechanism to be changed if necessary
WITHOUT_CLASSIFICATION	set up the datasource - maxpool is a parameter so the same code can also be used for setting up the per-thread pools.
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	log is required to ensure errors are available
WITHOUT_CLASSIFICATION	used to hold per-thread singleton connection pools
WITHOUT_CLASSIFICATION	wrapper class to allow getconnection() to be implemented for both shared and per-thread pools.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	i.e. shared pool
WITHOUT_CLASSIFICATION	make sure setting the new isolation mode is done in an auto committed transaction
WITHOUT_CLASSIFICATION	will use default isolation
WITHOUT_CLASSIFICATION	assume we will be successful
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	use latency to measure connection time
WITHOUT_CLASSIFICATION	the environment is supposed to use string keys only
WITHOUT_CLASSIFICATION	webspheremq does not allow corr. id. to be set using setstringproperty() $non-nls-1$
WITHOUT_CLASSIFICATION	we use a linkedblockingqueue (rather than a concurrentlinkedqueue) because it has a poll-with-wait method that avoids the need to use a polling loop.
WITHOUT_CLASSIFICATION	using onmessage listener
WITHOUT_CLASSIFICATION	allow for short/negative times
WITHOUT_CLASSIFICATION	allow for short/negative times
WITHOUT_CLASSIFICATION	called from threadfinished() thread
WITHOUT_CLASSIFICATION	guardedby("this")
WITHOUT_CLASSIFICATION	guardedby("this")
WITHOUT_CLASSIFICATION	there was an object in map destroy the temporary and return one in map (oldctx)
WITHOUT_CLASSIFICATION	else no object in map ctx is the one
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ --
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	renamed from clear
WITHOUT_CLASSIFICATION	(testelement) el.getproperty(jmssampler.jms_properties).getobjectvalue())
WITHOUT_CLASSIFICATION	(testelement) el.getproperty(jmssampler.jndi_properties).getobjectvalue())
WITHOUT_CLASSIFICATION	button group resources
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	button group resources
WITHOUT_CLASSIFICATION	these are the names of properties used to define the labels $non-nls-1$
WITHOUT_CLASSIFICATION	these are the names of properties used to define the labels $non-nls-1$
WITHOUT_CLASSIFICATION	button group resources when bytes message is selected
WITHOUT_CLASSIFICATION	$non-nls-1$ button group resources
WITHOUT_CLASSIFICATION	$non-nls-1$ button group resources
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	--
WITHOUT_CLASSIFICATION	++ these names are used in the jmx files and must not be changed
WITHOUT_CLASSIFICATION	cache for file. only used by sample() in a single thread
WITHOUT_CLASSIFICATION	cache for bytes-message only used when parsing from a file
WITHOUT_CLASSIFICATION	allow shorthand names
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	assume it will fail ditto $non-nls-1$
WITHOUT_CLASSIFICATION	todo - charset?
WITHOUT_CLASSIFICATION	todo - charset?
WITHOUT_CLASSIFICATION	not found
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	in the case the test uses a file we set it locally and prevent loading the file repeatedly
WITHOUT_CLASSIFICATION	in the case the test uses a file we set it locally and prevent loading the file repeatedly
WITHOUT_CLASSIFICATION	allow for the old jmx file which used the local language string
WITHOUT_CLASSIFICATION	------------- get/set properties ----------------------
WITHOUT_CLASSIFICATION	these static variables are only used to convert existing files
WITHOUT_CLASSIFICATION	will be the 3rd option which is not checked specifically
WITHOUT_CLASSIFICATION	note originally the code did use the clientpool to "share" subscribers however since the key was "this" and each sampler is unique - nothing was actually shared.
WITHOUT_CLASSIFICATION	default wait (ms) for a message if timeouts are not enabled this is the maximum time the sampler can be blocked.
WITHOUT_CLASSIFICATION	no need to synch/ - only used by sampler and clientpool (which does its own synch)
WITHOUT_CLASSIFICATION	this will be null if initialization succeeds.
WITHOUT_CLASSIFICATION	if true start/stop subscriber for each sample
WITHOUT_CLASSIFICATION	don't change the string as it is used in jmx files $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	run threadstarted only if destination setup on each sample
WITHOUT_CLASSIFICATION	if so we need to start collection here
WITHOUT_CLASSIFICATION	run threadfinished only if destination setup on each sample (stop listen queue)
WITHOUT_CLASSIFICATION	mapnames are strings
WITHOUT_CLASSIFICATION	disabled thread start if listen on sample choice
WITHOUT_CLASSIFICATION	don't start yet if stop between samples
WITHOUT_CLASSIFICATION	listen on sample
WITHOUT_CLASSIFICATION	can be null if init fails
WITHOUT_CLASSIFICATION	listen on sample
WITHOUT_CLASSIFICATION	so we break the loops in samplewithlistener and samplewithreceive
WITHOUT_CLASSIFICATION	assume failure
WITHOUT_CLASSIFICATION	--
WITHOUT_CLASSIFICATION	------------- get/set properties ----------------------
WITHOUT_CLASSIFICATION	++ these are jmx names and must not be changed $non-nls-1$
WITHOUT_CLASSIFICATION	convert the old test plan entry (which is the language dependent string) to the resource name
WITHOUT_CLASSIFICATION	this was the old value that was checked for $non-nls-1$
WITHOUT_CLASSIFICATION	default to be applied
WITHOUT_CLASSIFICATION	++ these are jmx file attribute names and must not be changed $non-nls-1$
WITHOUT_CLASSIFICATION	n.b. cannot change value as that is used in jmx files $non-nls-1$
WITHOUT_CLASSIFICATION	is destination setup static? else dynamic $non-nls-1$ default to maintain compatibility
WITHOUT_CLASSIFICATION	-- end of jmx file attribute names
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	member variables
WITHOUT_CLASSIFICATION	these constants are used in the jmx files and so must not be changed
WITHOUT_CLASSIFICATION	msgid not available until after send() is called note there is only one admin object which is shared between all threads interlock with receiver
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	this used to be request.wait(timeout_ms) where 0 means forever however 0 means return immediately for the latch
WITHOUT_CLASSIFICATION	$non-nls$
WITHOUT_CLASSIFICATION	$non-nls$
WITHOUT_CLASSIFICATION	$non-nls$
WITHOUT_CLASSIFICATION	$non-nls$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	n.b. these entry indexes must agree with the searchcontrols scope_levels i.e. javax.naming.directory.searchcontrols.object_scope onelevel_scope subtree_scope these have the values 012 so can be used as indexes in the array as well as the value for the search itself. n.b. although the strings are used to set and get the options language change does not currently cause a problem because that always saves the current settings first and then recreates all the gui classes.
WITHOUT_CLASSIFICATION	names for the cards $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	e.g unbind
WITHOUT_CLASSIFICATION	take note of when buttong are changed so can change panel
WITHOUT_CLASSIFICATION	private static final logger log = loggingmanager.getloggerforclass()
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	$non-nls$
WITHOUT_CLASSIFICATION	$non-nls$
WITHOUT_CLASSIFICATION	$non-nls$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	only contains ldapargument entries
WITHOUT_CLASSIFICATION	resize the table columns to appropriate widths. @param _table the table to resize columns for private void sizecolumns(jtable _table) { }
WITHOUT_CLASSIFICATION	sizecolumns(table)
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.modifytestelement(testelement)
WITHOUT_CLASSIFICATION	enable delete (which may already be enabled but it won't hurt)
WITHOUT_CLASSIFICATION	highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	disable delete if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	disable delete if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	table still contains one or more rows so highlight (select) the appropriate one.
WITHOUT_CLASSIFICATION	main panel
WITHOUT_CLASSIFICATION	main panel
WITHOUT_CLASSIFICATION	force a minimum table height of 70 pixels
WITHOUT_CLASSIFICATION	if a table cell is being edited we should accept the current value and stop the editing before adding a new row.
WITHOUT_CLASSIFICATION	if a table cell is being edited we must cancel the editing before deleting the row
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	set if we were successful or not
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	count limit time limit attributes (null = all) return object ? dereference links?
WITHOUT_CLASSIFICATION	the following strings are used in the test plan and the values must not be changed if test plans are to be upwardly compatible.
WITHOUT_CLASSIFICATION	for in build test case using this counter create the new entry in the server
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	replace (update) attribute $non-nls-1$ $non-nls-2$ add mobile phone number attribute $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	these are values for the test attribute above $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ end of test values
WITHOUT_CLASSIFICATION	the createtest() method creates an extra context which needs to be closed
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	log.warn("debug"ex) e.g. javax.naming.sizelimitexceededexception [ldap error code 4 - sizelimit exceeded] remaining name '' 123456789012345678901 todo tidy this up
WITHOUT_CLASSIFICATION	write out search results in a stable order (including order of all subelements which might be reordered like attributes and their values) so that simple textual comparison can be done unless the number of results exceeds {@link #max_sorted_results} in which case just stream the results out without sorting.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	read all sortedresults into memory so we can guarantee ordering
WITHOUT_CLASSIFICATION	must be done prior to sorting
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	show what we did manage to retrieve
WITHOUT_CLASSIFICATION	if there's anything left
WITHOUT_CLASSIFICATION	assume it's senstive data
WITHOUT_CLASSIFICATION	ensure any remaining contexts are closed
WITHOUT_CLASSIFICATION	parent folder (or single message file)
WITHOUT_CLASSIFICATION	== servername from mail sampler
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	perform the sampling
WITHOUT_CLASSIFICATION	start timing
WITHOUT_CLASSIFICATION	-
WITHOUT_CLASSIFICATION	rfc 822 uses ascii per default
WITHOUT_CLASSIFICATION	use the actual class so the name must be correct.
WITHOUT_CLASSIFICATION	special value
WITHOUT_CLASSIFICATION	did sample succeed?
WITHOUT_CLASSIFICATION	create empty properties
WITHOUT_CLASSIFICATION	requires javamail 1.4.2+
WITHOUT_CLASSIFICATION	requires javamail 1.4.2+
WITHOUT_CLASSIFICATION	get session
WITHOUT_CLASSIFICATION	get the store
WITHOUT_CLASSIFICATION	get folder
WITHOUT_CLASSIFICATION	get directory
WITHOUT_CLASSIFICATION	don't save headers - they are already in the raw message
WITHOUT_CLASSIFICATION	save raw message
WITHOUT_CLASSIFICATION	javadoc for the api says this is ok
WITHOUT_CLASSIFICATION	avoid double-call if addsubresult was called.
WITHOUT_CLASSIFICATION	close connection
WITHOUT_CLASSIFICATION	not been set by any child samples
WITHOUT_CLASSIFICATION	gui components
WITHOUT_CLASSIFICATION	labels - don't make these static else language change will not work
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	todo - charset?
WITHOUT_CLASSIFICATION	helper method to set up the gui screen
WITHOUT_CLASSIFICATION	store the content-type rfc 822 uses ascii per default parse the content-type
WITHOUT_CLASSIFICATION	no need to log normally as we set the status $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ may be null
WITHOUT_CLASSIFICATION	$non-nls-1$ may be null
WITHOUT_CLASSIFICATION	used to separate attachment file names in jmx fields - do not change!
WITHOUT_CLASSIFICATION	-jmx file attribute names
WITHOUT_CLASSIFICATION	process address lists
WITHOUT_CLASSIFICATION	needed for measuring sending time
WITHOUT_CLASSIFICATION	calculate message size
WITHOUT_CLASSIFICATION	set up the sample result details
WITHOUT_CLASSIFICATION	perform the sampling
WITHOUT_CLASSIFICATION	username / password incorrect
WITHOUT_CLASSIFICATION	ssl not supported starttls not supported other messagingexception
WITHOUT_CLASSIFICATION	general exception
WITHOUT_CLASSIFICATION	process the sampler result
WITHOUT_CLASSIFICATION	throws me
WITHOUT_CLASSIFICATION	throws ioe me
WITHOUT_CLASSIFICATION	throws ioe me
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	part is only needed if we don't send an .eml-file
WITHOUT_CLASSIFICATION	getallheaders() is not yet genericised throws me
WITHOUT_CLASSIFICATION	throws me throws ioe me
WITHOUT_CLASSIFICATION	api not yet generic throws me
WITHOUT_CLASSIFICATION	we have at least one potential address
WITHOUT_CLASSIFICATION	local vars
WITHOUT_CLASSIFICATION	ensure correctly set on initial display ensure correctly set on initial display
WITHOUT_CLASSIFICATION	server settings
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	e-mail settings
WITHOUT_CLASSIFICATION	auth settings
WITHOUT_CLASSIFICATION	security settings
WITHOUT_CLASSIFICATION	(non-javadoc) message settings
WITHOUT_CLASSIFICATION	add the header panel
WITHOUT_CLASSIFICATION	additional settings
WITHOUT_CLASSIFICATION	tfmailfrom.setenabled(true) tfmailto.setenabled(true) tfmailtocc.setenabled(true) tfmailtobcc.setenabled(true) tfsubject.setenabled(true)
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	use the actual class so the name must be correct.
WITHOUT_CLASSIFICATION	requires javamail 1.4.2+
WITHOUT_CLASSIFICATION	standard setup
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	local vars
WITHOUT_CLASSIFICATION	add the standard title
WITHOUT_CLASSIFICATION	must follow the checkbox setting
WITHOUT_CLASSIFICATION	not compatible
WITHOUT_CLASSIFICATION	not compatible must follow the checkbox setting
WITHOUT_CLASSIFICATION	ensure correctly set on initial display
WITHOUT_CLASSIFICATION	might be nullproperty
WITHOUT_CLASSIFICATION	case we are measuring real time of spedition
WITHOUT_CLASSIFICATION	set properties using jaf
WITHOUT_CLASSIFICATION	handle body and attachments
WITHOUT_CLASSIFICATION	i.e. mailbody is empty
WITHOUT_CLASSIFICATION	set from field and subject
WITHOUT_CLASSIFICATION	synchronousmode==true
WITHOUT_CLASSIFICATION	listener cannot be null here
WITHOUT_CLASSIFICATION	ok it has been supplied
WITHOUT_CLASSIFICATION	empty arrays are immutable
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	httpapi.mongodb.org/java/2.7.2/com/mongodb/mongo.html
WITHOUT_CLASSIFICATION	httpapi.mongodb.org/java/2.7.2/com/mongodb/mongo.html
WITHOUT_CLASSIFICATION	httpapi.mongodb.org/java/2.7.2/com/mongodb/mongooptions.html/
WITHOUT_CLASSIFICATION	httpapi.mongodb.org/java/2.7.2/com/mongodb/mongooptions.html/
WITHOUT_CLASSIFICATION	mongo is thread safe
WITHOUT_CLASSIFICATION	there is no harm in trying to clear up
WITHOUT_CLASSIFICATION	helper
WITHOUT_CLASSIFICATION	+ jmx names do not change their values
WITHOUT_CLASSIFICATION	- jmx names
WITHOUT_CLASSIFICATION	default charset is deliberate here
WITHOUT_CLASSIFICATION	n.b. this will be a config element so we cannot use the getxxx() methods
WITHOUT_CLASSIFICATION	default to original behaviour i.e. re-use connection
WITHOUT_CLASSIFICATION	n.b. this will be a config element so we cannot use the setxxx() methods
WITHOUT_CLASSIFICATION	overrides abstractjmeterguicomponent.configure(testelement)
WITHOUT_CLASSIFICATION	element.setproperty(tcpsampler.filename filename.gettext())
WITHOUT_CLASSIFICATION	element.setproperty(tcpsampler.nodelay setnodelay.isselected())
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	don't use default for saving tristates element.setproperty(tcpsampler.close_connection closeconnection.isselected() tcpsampler.close_connection_default)
WITHOUT_CLASSIFICATION	5 columns size
WITHOUT_CLASSIFICATION	3 columns size
WITHOUT_CLASSIFICATION	mainpanel.add(createfilenamepanel())
WITHOUT_CLASSIFICATION	-- jmx file constants - do not change
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ key for hashmap
WITHOUT_CLASSIFICATION	$non-nls-1$ key for hashmap
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	entry tends to be ignored
WITHOUT_CLASSIFICATION	set if we were successful or not
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	++ jmx file constants - do not change $non-nls-1$
WITHOUT_CLASSIFICATION	if set this is the regex that is used to extract the status from the response not implemented yet private static final string status_regex = jmeterutils.getpropdefault("tcp.status.regex""")
WITHOUT_CLASSIFICATION	are we processing the first sample?
WITHOUT_CLASSIFICATION	used for handling interrupt
WITHOUT_CLASSIFICATION	not in cache so create new one and cache it
WITHOUT_CLASSIFICATION	do stuff we cannot do as part of threadstarted()
WITHOUT_CLASSIFICATION	use the test element name for the label
WITHOUT_CLASSIFICATION	calculate response time
WITHOUT_CLASSIFICATION	reset the status code if the message contains one
WITHOUT_CLASSIFICATION	cannot do this as part of threadstarted() because the config elements have not been processed.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	fetch in case gets nulled later
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	the data implementation
WITHOUT_CLASSIFICATION	preserve sign on first byte
WITHOUT_CLASSIFICATION	do we need to close byte array (or flush it?)
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	process command line property definitions (can occur multiple times)
WITHOUT_CLASSIFICATION	private imageicon runningicon = jmeterutils.getimage("thread.enabled.gif")
WITHOUT_CLASSIFICATION	private set hosts = new hashset()
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.modifytestelement(testelement)
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	called from ctor so must not be overridable
WITHOUT_CLASSIFICATION	called from ctor so must not be overridable
WITHOUT_CLASSIFICATION	set it
WITHOUT_CLASSIFICATION	set it
WITHOUT_CLASSIFICATION	reset it
WITHOUT_CLASSIFICATION	reset it
WITHOUT_CLASSIFICATION	set category
WITHOUT_CLASSIFICATION	set root level
WITHOUT_CLASSIFICATION	the default title for the menu bar
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	probably a missing jar
WITHOUT_CLASSIFICATION	programming error bail out.
WITHOUT_CLASSIFICATION	programming error bail out.
WITHOUT_CLASSIFICATION	$non-nsl-1$
WITHOUT_CLASSIFICATION	editmenu.setenabled(false)
WITHOUT_CLASSIFICATION	if we are enabling the edit-->remove menu item then we also need to enable the edit menu. the edit menu may already be enabled but there's no harm it trying to enable it again.
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	called from ctor so must not be overridable
WITHOUT_CLASSIFICATION	file new operation may set to null so just return app name
WITHOUT_CLASSIFICATION	first make sure we save the content of the current gui (since we will flush it away)
WITHOUT_CLASSIFICATION	forget about all guis we've created so far we'll need to re-created them all!
WITHOUT_CLASSIFICATION	beaninfo objects also contain locale-sensitive data -- flush them away
WITHOUT_CLASSIFICATION	now put the current gui in place. [this code was copied from the editcommand action -- we can't just trigger the action because that would populate the current node with the contents of the new gui -- which is empty.] fetch once probably caused by unit testing on headless system
WITHOUT_CLASSIFICATION	jmenu reportmenu jmenuitem analyze
WITHOUT_CLASSIFICATION	if the add menu already exists remove it.
WITHOUT_CLASSIFICATION	insert the add menu as the first menu item in the edit menu.
WITHOUT_CLASSIFICATION	there was a npe being thrown without the null check here.. jkb
WITHOUT_CLASSIFICATION	if we are enabling the edit-->add menu item then we also need to enable the edit menu. the edit menu may already be enabled but there's no harm it trying to enable it again.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	help menu $non-nls-1$
WITHOUT_CLASSIFICATION	options menu $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	strings used to set up and process actions in this menu the strings need to agree with the those in the action routines
WITHOUT_CLASSIFICATION	run menu $non-nls-1$
WITHOUT_CLASSIFICATION	edit menu $non-nls-1$ from the java look and feel guidelines if all items in a menu are disabled then disable the menu. makes sense.
WITHOUT_CLASSIFICATION	file menu $non-nls-1$
WITHOUT_CLASSIFICATION	set default save menu item to disabled since the default node that is selected is root which does not allow items to be inserted.
WITHOUT_CLASSIFICATION	$non-nls-1$ file_merge.setaccelerator( keystroke.getkeystroke(keyevent.vk_o keyevent.ctrl_mask))
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$ $non-nls-3$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$ $non-nls-3$ $non-nls-1$ $non-nls-2$ $non-nls-3$ $non-nls-1$ $non-nls-2$ $non-nls-3$ $non-nls-1$ $non-nls-2$ $non-nls-3$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	menu_add_xxx - controls which items are in the add menu menu_parent_xxx - controls which items are in the insert parent menu
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$ $non-nls-3$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	private static final logger log = loggingmanager.getloggerforclass()
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$ $non-nls-3$ $non-nls-1$ $non-nls-2$ $non-nls-3$ $non-nls-1$ $non-nls-2$ $non-nls-3$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$ $non-nls-3$ $non-nls-1$ $non-nls-2$ $non-nls-3$
WITHOUT_CLASSIFICATION	don't try to instantiate these
WITHOUT_CLASSIFICATION	called from ctor so must not be overridable
WITHOUT_CLASSIFICATION	called from ctor so must not be overridable
WITHOUT_CLASSIFICATION	jfilechooser jfc = null
WITHOUT_CLASSIFICATION	private static final logger log = loggingmanager.getloggerforclass()
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	same code as for default jmeter class
WITHOUT_CLASSIFICATION	avoid npe in resetpage()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.gui.jmeterguicomponent#createtestelement()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.gui.jmeterguicomponent#modifytestelement(org.apache.jmeter.testelement.testelement)
WITHOUT_CLASSIFICATION	don't change name if merging
WITHOUT_CLASSIFICATION	allow for missing optional jars
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	clear the name of the test plan file
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$ $non-nls-1$
WITHOUT_CLASSIFICATION	can't be null - this is checked by canaddto
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	save parent node for later
WITHOUT_CLASSIFICATION	so elements can only be added as children
WITHOUT_CLASSIFICATION	can't be null - this is checked by canaddto
WITHOUT_CLASSIFICATION	log.info("classname " + strclassname)
WITHOUT_CLASSIFICATION	match all
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	special handling
WITHOUT_CLASSIFICATION	converttree(tree)
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	not implemented public static final string save = "save_as" not implemented public static final string save_all = "save_all" not implemented public static final string save_to_previous = "save"
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	get the jcomponent from the visualizer
WITHOUT_CLASSIFICATION	get the string given from the choose and check the file extension.
WITHOUT_CLASSIFICATION	i.e. no disabled icon found
WITHOUT_CLASSIFICATION	must therefore set the enabled icon so there is at least some icon
WITHOUT_CLASSIFICATION	put the gui object back to the way it was.
WITHOUT_CLASSIFICATION	this check the state of the testelement and if returns false it disable the loaded node
WITHOUT_CLASSIFICATION	container endwindow jpopupmenu pop
WITHOUT_CLASSIFICATION	endwindow = window
WITHOUT_CLASSIFICATION	get the main frame.
WITHOUT_CLASSIFICATION	close any main menu that is open
WITHOUT_CLASSIFICATION	transient private static final logger log = loggingmanager.getloggerforclass()
WITHOUT_CLASSIFICATION	boolean enabled = true
WITHOUT_CLASSIFICATION	if icon has not been defined then use gui_class property
WITHOUT_CLASSIFICATION	mkdir() returns false if the directory was not created could be because it exists
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	there's only 1 test plan so can cache the mode here
WITHOUT_CLASSIFICATION	private static final logger log = loggingmanager.getloggerforclass()
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	called from ctor so must not be overridable
WITHOUT_CLASSIFICATION	if the directory already exists and is a directory we just renamed to "archive.date"
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	return the pagesize divided by 1024 to get kilobytes
WITHOUT_CLASSIFICATION	we add the entry
WITHOUT_CLASSIFICATION	we should make this configurable eventually
WITHOUT_CLASSIFICATION	private static reportplan plan
WITHOUT_CLASSIFICATION	now add the samples to the hashmap
WITHOUT_CLASSIFICATION	iterator itr = data.iterator()
WITHOUT_CLASSIFICATION	duplicates
WITHOUT_CLASSIFICATION	incompatable (blee/all)
WITHOUT_CLASSIFICATION	check that optional args work woth long options
WITHOUT_CLASSIFICATION	"-t3""-a"
WITHOUT_CLASSIFICATION	"-t3""-a"
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	result.setresponsedata - not set
WITHOUT_CLASSIFICATION	todo - charset?
WITHOUT_CLASSIFICATION	"-t""-a"
WITHOUT_CLASSIFICATION	"-dstupid=idiot""are""--all""--all""here"
WITHOUT_CLASSIFICATION	check delimiters are allowed
WITHOUT_CLASSIFICATION	check delimiters are allowed
WITHOUT_CLASSIFICATION	should not detect trailing option
WITHOUT_CLASSIFICATION	should detect trailing option
WITHOUT_CLASSIFICATION	"-dstupid=idiot""are""--all""here"
WITHOUT_CLASSIFICATION	check "-" is allowed in arg2
WITHOUT_CLASSIFICATION	"-dstupid="
WITHOUT_CLASSIFICATION	"-dstupid=""-c"
WITHOUT_CLASSIFICATION	"-dstupid""-c"
WITHOUT_CLASSIFICATION	canonical form
WITHOUT_CLASSIFICATION	test optional arguments
WITHOUT_CLASSIFICATION	ok should treat b as separate should have no arg
WITHOUT_CLASSIFICATION	convert between eclipse jar name and build.properties name
WITHOUT_CLASSIFICATION	remove docs-only jars
WITHOUT_CLASSIFICATION	assume default charset is ok here <classpathentry kind="lib" path="lib/geronimo-jms_1.1_spec-1.1.1.jar"/> <classpathentry kind="lib" path="lib/activation-1.1.1.jar"/> <classpathentry kind="lib" path="lib/jtidy-r938.jar"/>
WITHOUT_CLASSIFICATION	special handling
WITHOUT_CLASSIFICATION	this would be done by the run command
WITHOUT_CLASSIFICATION	testlog.setpriority(org.apache.log.priority.debug)
WITHOUT_CLASSIFICATION	not present
WITHOUT_CLASSIFICATION	wrong
WITHOUT_CLASSIFICATION	wrong
WITHOUT_CLASSIFICATION	loggingmanager.setpriority("debug""jmeter")
WITHOUT_CLASSIFICATION	restart file
WITHOUT_CLASSIFICATION	check random number
WITHOUT_CLASSIFICATION	this would be done by the run command
WITHOUT_CLASSIFICATION	test csv file with a header line
WITHOUT_CLASSIFICATION	test csv file with a header line
WITHOUT_CLASSIFICATION	test csv file with a header line and recycle is true
WITHOUT_CLASSIFICATION	read 1st line read 5 lines + restart to file begin line 2 line 3 line 4 line 5 return to 2nd line (first line is names)
WITHOUT_CLASSIFICATION	needs to be initialised
WITHOUT_CLASSIFICATION	etc
WITHOUT_CLASSIFICATION	genericcontroller sub_1 = new genericcontroller() sub_1.addtestelement(new ifcontroller("3==3")) controller.addtestelement(sub_1) controller.addtestelement(new ifcontroller("false==true"))
WITHOUT_CLASSIFICATION	ifcontroller controller = new ifcontroller("12==12") controller.initialize()
WITHOUT_CLASSIFICATION	should not enter the loop
WITHOUT_CLASSIFICATION	test with simplecontroller as first item
WITHOUT_CLASSIFICATION	should not enter the loop next time
WITHOUT_CLASSIFICATION	should not enter the loop next time but should continue to the end of the loop
WITHOUT_CLASSIFICATION	get next sample and its name
WITHOUT_CLASSIFICATION	match by name
WITHOUT_CLASSIFICATION	should not run any children should match the default entry
WITHOUT_CLASSIFICATION	selection controller with two sub-controllers but each has only 1 child
WITHOUT_CLASSIFICATION	controller + before + switch (cond) + + zero + + controller sub_1 + + + one + + two + + controller sub_2 + + + three + after
WITHOUT_CLASSIFICATION	test before selection controller - zero (default) - simple controller 1 - - one - - two - simple controller 2 - - three - - four - five - six after cond = switch condition exp[] = expected results
WITHOUT_CLASSIFICATION	n.b. requires apachejmeter_functions.jar to be on the classpath otherwise the function cannot be resolved.
WITHOUT_CLASSIFICATION	while (blank) previous sample ok - should loop until false
WITHOUT_CLASSIFICATION	log.info("testblankprevok")
WITHOUT_CLASSIFICATION	while (last) previous sample ok - should loop until false
WITHOUT_CLASSIFICATION	while (last) previous sample ok - should loop until false
WITHOUT_CLASSIFICATION	log.info("testlastprevok")
WITHOUT_CLASSIFICATION	dummy for testing functions
WITHOUT_CLASSIFICATION	log.info("testotherprevok")
WITHOUT_CLASSIFICATION	while (blank) previous sample failed - should run once
WITHOUT_CLASSIFICATION	log.info("testblankprevfailed")
WITHOUT_CLASSIFICATION	run entire test again
WITHOUT_CLASSIFICATION	should not enter the loop
WITHOUT_CLASSIFICATION	while last previous sample failed - should not run
WITHOUT_CLASSIFICATION	log.info("testlastprevfailed")
WITHOUT_CLASSIFICATION	while false previous sample failed - should not run
WITHOUT_CLASSIFICATION	log.info("testfalseprevfailed")
WITHOUT_CLASSIFICATION	should behave the same for blank and last because success on input
WITHOUT_CLASSIFICATION	should be ok
WITHOUT_CLASSIFICATION	e.printstacktrace()
WITHOUT_CLASSIFICATION	set up the test plan
WITHOUT_CLASSIFICATION	onlyonce samples
WITHOUT_CLASSIFICATION	outer sample
WITHOUT_CLASSIFICATION	inner loop
WITHOUT_CLASSIFICATION	sample in inner loop
WITHOUT_CLASSIFICATION	compute the expected sample names
WITHOUT_CLASSIFICATION	outer only once + ("three" + ("four" + "five" + "six" + "seven") innerloopcount) outerloopcount
WITHOUT_CLASSIFICATION	the only once samples
WITHOUT_CLASSIFICATION	the outer sample and the inner loop samples
WITHOUT_CLASSIFICATION	execute the test pan
WITHOUT_CLASSIFICATION	outer sample
WITHOUT_CLASSIFICATION	inner loop
WITHOUT_CLASSIFICATION	inner loop
WITHOUT_CLASSIFICATION	sample in inner loop
WITHOUT_CLASSIFICATION	compute the expected sample names
WITHOUT_CLASSIFICATION	compute the expected sample names
WITHOUT_CLASSIFICATION	the only once samples
WITHOUT_CLASSIFICATION	the only once samples
WITHOUT_CLASSIFICATION	the outer sample and the inner loop samples
WITHOUT_CLASSIFICATION	execute the test pan
WITHOUT_CLASSIFICATION	execute the test pan
WITHOUT_CLASSIFICATION	test plan with onlyoncecontroller inside inner loop set up the test plan
WITHOUT_CLASSIFICATION	onlyonce inside inner loop
WITHOUT_CLASSIFICATION	outer only once + ("three" + "only once five and six" + ("four" + "seven") innerloopcount) outerloopcount
WITHOUT_CLASSIFICATION	test skipped for now as behaviour is not yet properly defined
WITHOUT_CLASSIFICATION	interleavecontroller in inner loop
WITHOUT_CLASSIFICATION	onlyonce inside interleavecontroller
WITHOUT_CLASSIFICATION	samples inside interleavecontroller
WITHOUT_CLASSIFICATION	sample in inner loop
WITHOUT_CLASSIFICATION	outer only once + ("three" + "only once five and six" + "eight in interleave only once" + ("four" + "interleave" + "eleven") innerloopcount) outerloopcount
WITHOUT_CLASSIFICATION	escaped dollar commma and backslash with no variable reference
WITHOUT_CLASSIFICATION	escaped dollar commma and backslash with variable reference
WITHOUT_CLASSIFICATION	n.b. backslashes are removed before dollar comma and backslash
WITHOUT_CLASSIFICATION	n.b. backslashes are removed before dollar comma and backslash
WITHOUT_CLASSIFICATION	escaped dollar commma and backslash with missing variable reference
WITHOUT_CLASSIFICATION	escaped dollar commma and backslash with missing function reference
WITHOUT_CLASSIFICATION	log.debug("domain property = " + element.getproperty("domain"))
WITHOUT_CLASSIFICATION	log.debug("domain property = " + element.getproperty("domain"))
WITHOUT_CLASSIFICATION	set up the non-wild variables
WITHOUT_CLASSIFICATION	should not clear this?
WITHOUT_CLASSIFICATION	check when match fails
WITHOUT_CLASSIFICATION	extractor.setdefaultvalue("default")
WITHOUT_CLASSIFICATION	now rerun with match fail
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	this would be done by the run command
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	has child but child is empty
WITHOUT_CLASSIFICATION	has no child
WITHOUT_CLASSIFICATION	no text
WITHOUT_CLASSIFICATION	test fragment
WITHOUT_CLASSIFICATION	now get its text
WITHOUT_CLASSIFICATION	no text but using fragment mode
WITHOUT_CLASSIFICATION	there aren't any
WITHOUT_CLASSIFICATION	try to get data from subresult needed for addsubresult()
WITHOUT_CLASSIFICATION	get data from both
WITHOUT_CLASSIFICATION	get data from child
WITHOUT_CLASSIFICATION	create the stringfromfile function and set its parameters.
WITHOUT_CLASSIFICATION	create the splitfile function and set its parameters.
WITHOUT_CLASSIFICATION	create the beanshell function and set its parameters.
WITHOUT_CLASSIFICATION	reset files
WITHOUT_CLASSIFICATION	check some initial variables
WITHOUT_CLASSIFICATION	check source works
WITHOUT_CLASSIFICATION	check persistence
WITHOUT_CLASSIFICATION	check that bsh has read the file
WITHOUT_CLASSIFICATION	restarts
WITHOUT_CLASSIFICATION	test that only loops twice
WITHOUT_CLASSIFICATION	function objects to be tested
WITHOUT_CLASSIFICATION	helper class used to implement co-routine between two threads
WITHOUT_CLASSIFICATION	allow other thread to start
WITHOUT_CLASSIFICATION	open as a
WITHOUT_CLASSIFICATION	open as b
WITHOUT_CLASSIFICATION	col2 line 1
WITHOUT_CLASSIFICATION	a next
WITHOUT_CLASSIFICATION	col 1 line 2 a
WITHOUT_CLASSIFICATION	b next
WITHOUT_CLASSIFICATION	col2 line 2 b
WITHOUT_CLASSIFICATION	xpathfilecontainer tests
WITHOUT_CLASSIFICATION	assertequals("expected 4 lines"4f.size())
WITHOUT_CLASSIFICATION	the suite() method creates separate test suites for each of the types of test. the suitexxx() methods create a list of items to be tested and create a new test instance for each. each test type has its own constructor which saves the item to be tested note that the suite() method must be static and the methods to run the tests must be instance methods so that they can pick up the item value which was saved by the constructor.
WITHOUT_CLASSIFICATION	use same xpath for both threads
WITHOUT_CLASSIFICATION	string s =
WITHOUT_CLASSIFICATION	prevent accidental use of is below
WITHOUT_CLASSIFICATION	wrap-round check
WITHOUT_CLASSIFICATION	no wrap-round check
WITHOUT_CLASSIFICATION	perform a sum and check the results
WITHOUT_CLASSIFICATION	trailing space
WITHOUT_CLASSIFICATION	test with output variable name
WITHOUT_CLASSIFICATION	template match number all separator
WITHOUT_CLASSIFICATION	template match number all separator
WITHOUT_CLASSIFICATION	test with empty output variable name
WITHOUT_CLASSIFICATION	not full test plans
WITHOUT_CLASSIFICATION	start in new state
WITHOUT_CLASSIFICATION	suite.addtest(new testload("checkguipackage"))
WITHOUT_CLASSIFICATION	save the method name
WITHOUT_CLASSIFICATION	constructor for testelement tests
WITHOUT_CLASSIFICATION	save the method name
WITHOUT_CLASSIFICATION	save the method name
WITHOUT_CLASSIFICATION	save the method name
WITHOUT_CLASSIFICATION	constructor for serializable tests
WITHOUT_CLASSIFICATION	constructor for gui tests
WITHOUT_CLASSIFICATION	constructor for function tests
WITHOUT_CLASSIFICATION	only show classpath once
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	used by testanchormodifier used by testanchormodifier used by testsaveservice
WITHOUT_CLASSIFICATION	use a suite to allow the tests to be generated at run-time
WITHOUT_CLASSIFICATION	the locale used to instantiate the gui objects
WITHOUT_CLASSIFICATION	needs to be done before any gui classes are instantiated
WITHOUT_CLASSIFICATION	restore the original locale
WITHOUT_CLASSIFICATION	extract titles from component_reference.xml
WITHOUT_CLASSIFICATION	not a true gui component
WITHOUT_CLASSIFICATION	add titles that don't need to be documented guititles.put("root" boolean.false)
WITHOUT_CLASSIFICATION	extract titles from functions.xml
WITHOUT_CLASSIFICATION	first time
WITHOUT_CLASSIFICATION	we don't mind if this is left over ditto not a sampler
WITHOUT_CLASSIFICATION	test gui elements - create the suite of tests
WITHOUT_CLASSIFICATION	test functions - create the suite of tests
WITHOUT_CLASSIFICATION	jmeterguicomponent item = (jmeterguicomponent) iter.next()
WITHOUT_CLASSIFICATION	test gui elements - run the test
WITHOUT_CLASSIFICATION	so we can detect extra entries
WITHOUT_CLASSIFICATION	is this a work in progress or an internal gui component? will be "" for internal components
WITHOUT_CLASSIFICATION	skip the example samplers
WITHOUT_CLASSIFICATION	record in log as well
WITHOUT_CLASSIFICATION	record in log as well
WITHOUT_CLASSIFICATION	run the function test
WITHOUT_CLASSIFICATION	for detecting extra entries
WITHOUT_CLASSIFICATION	check that function descriptions are ok
WITHOUT_CLASSIFICATION	test gui elements - run for all components
WITHOUT_CLASSIFICATION	test gui elements - not run for testbeangui items
WITHOUT_CLASSIFICATION	test serializable elements - create the suite of tests
WITHOUT_CLASSIFICATION	test serializable elements - test the object
WITHOUT_CLASSIFICATION	test testelements - implement the test case
WITHOUT_CLASSIFICATION	don't try to instantiate remote server
WITHOUT_CLASSIFICATION	try with a parameter-less constructor first
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	no luck. ignore this class
WITHOUT_CLASSIFICATION	we won't test restricted-access classes.
WITHOUT_CLASSIFICATION	not thrown so need to check here
WITHOUT_CLASSIFICATION	only dump it once
WITHOUT_CLASSIFICATION	[sebb] assertequals(item2 cloneditem.getproperty(item2.getname()))
WITHOUT_CLASSIFICATION	used by findtestfile
WITHOUT_CLASSIFICATION	jmeterutils assumes unix-style separators
WITHOUT_CLASSIFICATION	used to be done in initializeproperties
WITHOUT_CLASSIFICATION	needed for scripts
WITHOUT_CLASSIFICATION	display actual encoding used (will differ if file.encoding is not recognised)
WITHOUT_CLASSIFICATION	helper method to find a file
WITHOUT_CLASSIFICATION	add the offset
WITHOUT_CLASSIFICATION	add the offset
WITHOUT_CLASSIFICATION	helper method to find a test path
WITHOUT_CLASSIFICATION	number of samples taken
WITHOUT_CLASSIFICATION	same as above
WITHOUT_CLASSIFICATION	not same
WITHOUT_CLASSIFICATION	this is needed in order to set up the cookie policy
WITHOUT_CLASSIFICATION	this should be ignored as there is no value
WITHOUT_CLASSIFICATION	starts empty
WITHOUT_CLASSIFICATION	should not be stored
WITHOUT_CLASSIFICATION	test session cookie is returned
WITHOUT_CLASSIFICATION	test old cookie is not returned
WITHOUT_CLASSIFICATION	test multi-cookie header handling
WITHOUT_CLASSIFICATION	test duplicate cookie handling
WITHOUT_CLASSIFICATION	assumes some kind of list is used
WITHOUT_CLASSIFICATION	test cookie matching
WITHOUT_CLASSIFICATION	defaults to caller url
WITHOUT_CLASSIFICATION	ensure policy is picked up
WITHOUT_CLASSIFICATION	assertequals("/"man.get(0).getpath())
WITHOUT_CLASSIFICATION	cookies are ignored
WITHOUT_CLASSIFICATION	cookies again ignored
WITHOUT_CLASSIFICATION	show that maxlong now saved as 0
WITHOUT_CLASSIFICATION	shutdown the http server
WITHOUT_CLASSIFICATION	wait up to 1 second
WITHOUT_CLASSIFICATION	already failed
WITHOUT_CLASSIFICATION	succeeded
WITHOUT_CLASSIFICATION	connect to the http server and do a simple http get
WITHOUT_CLASSIFICATION	write to the socket
WITHOUT_CLASSIFICATION	headers
WITHOUT_CLASSIFICATION	check that the request and response matches
WITHOUT_CLASSIFICATION	close the connection
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	write to the socket
WITHOUT_CLASSIFICATION	headers
WITHOUT_CLASSIFICATION	headers
WITHOUT_CLASSIFICATION	headers
WITHOUT_CLASSIFICATION	read the response
WITHOUT_CLASSIFICATION	read the response
WITHOUT_CLASSIFICATION	read the response
WITHOUT_CLASSIFICATION	check that the request and response matches
WITHOUT_CLASSIFICATION	check that the request and response matches
WITHOUT_CLASSIFICATION	check that the request and response matches
WITHOUT_CLASSIFICATION	close the connection
WITHOUT_CLASSIFICATION	close the connection
WITHOUT_CLASSIFICATION	close the connection
WITHOUT_CLASSIFICATION	connect to the http server and do a simple http get with a pause in the middle of transmitting the header
WITHOUT_CLASSIFICATION	write the start of the headers and then sleep so that the mirror thread will have to block to wait for more data to appear
WITHOUT_CLASSIFICATION	write the rest of the headers
WITHOUT_CLASSIFICATION	the content sent
WITHOUT_CLASSIFICATION	the content sent
WITHOUT_CLASSIFICATION	connect to the http server and do a simple http post
WITHOUT_CLASSIFICATION	construct body
WITHOUT_CLASSIFICATION	construct body
WITHOUT_CLASSIFICATION	write the headers and body
WITHOUT_CLASSIFICATION	connect to the http server and do a simple http post with a pause after transmitting the headers
WITHOUT_CLASSIFICATION	write the headers and then sleep
WITHOUT_CLASSIFICATION	write the body
WITHOUT_CLASSIFICATION	write the body
WITHOUT_CLASSIFICATION	check that the request and response matches
WITHOUT_CLASSIFICATION	$sid$
WITHOUT_CLASSIFICATION	arguments args = sampler.getarguments()
WITHOUT_CLASSIFICATION	no entry check it is still present
WITHOUT_CLASSIFICATION	test https works too
WITHOUT_CLASSIFICATION	these are some of the special characters
WITHOUT_CLASSIFICATION	can't instantiate
WITHOUT_CLASSIFICATION	list of parsers to test. should probably be derived automatically
WITHOUT_CLASSIFICATION	dummy as the file has no entries
WITHOUT_CLASSIFICATION	dummy as the file has no entries
WITHOUT_CLASSIFICATION	relative filenames
WITHOUT_CLASSIFICATION	identify subtests
WITHOUT_CLASSIFICATION	this is ok
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	a http get request with encoding not known
WITHOUT_CLASSIFICATION	private testdata(string f string b string s) { this(f b s null) }
WITHOUT_CLASSIFICATION	does the order matter?
WITHOUT_CLASSIFICATION	convert both to sets
WITHOUT_CLASSIFICATION	get expected results as a list
WITHOUT_CLASSIFICATION	a http get request
WITHOUT_CLASSIFICATION	check arguments
WITHOUT_CLASSIFICATION	check arguments
WITHOUT_CLASSIFICATION	a http post request
WITHOUT_CLASSIFICATION	a http get request with encoding not known
WITHOUT_CLASSIFICATION	a http post request with content-type text/plain
WITHOUT_CLASSIFICATION	a http get request with utf-8 encoding
WITHOUT_CLASSIFICATION	when the encoding is not known the argument will get the encoded value and the "encode?" set to false
WITHOUT_CLASSIFICATION	when the encoding is not known the argument will get the encoded value and the "encode?" set to false
WITHOUT_CLASSIFICATION	when the encoding is not known the argument will get the encoded value and the "encode?" set to false
WITHOUT_CLASSIFICATION	a http post request with utf-8 encoding
WITHOUT_CLASSIFICATION	a http post request with unknown encoding
WITHOUT_CLASSIFICATION	a http post request with utf-8 encoding
WITHOUT_CLASSIFICATION	a http get request with iso-8859-1 encoding
WITHOUT_CLASSIFICATION	a http get request with utf-8 encoding
WITHOUT_CLASSIFICATION	a http post request with encoding not known
WITHOUT_CLASSIFICATION	check arguments we should have one argument with the value equal to the post body
WITHOUT_CLASSIFICATION	a http post request with content-type text/plain charset=utf-8 the encoding should be picked up from the header we send with the request
WITHOUT_CLASSIFICATION	a http post request with content-type text/plain charset=utf-8 the encoding should be picked up from the header we send with the request
WITHOUT_CLASSIFICATION	use null for url to simulate that httprequesthdr do not know the encoding for the page. specify contentencoding so the request is "sent" using that encoding
WITHOUT_CLASSIFICATION	use null for url to simulate that httprequesthdr do not know the encoding for the page. specify contentencoding so the request is "sent" using that encoding
WITHOUT_CLASSIFICATION	use null for url and contentencoding to simulate that httprequesthdr do not know the encoding for the page
WITHOUT_CLASSIFICATION	use null for url and contentencoding to simulate that httprequesthdr do not know the encoding for the page
WITHOUT_CLASSIFICATION	a http post request with iso-8859-1 encoding
WITHOUT_CLASSIFICATION	a http post request multipart/form-data simple values
WITHOUT_CLASSIFICATION	a http post request multipart/form-data simple values
WITHOUT_CLASSIFICATION	no space after
WITHOUT_CLASSIFICATION	spaces after
WITHOUT_CLASSIFICATION	assume there's at least one file
WITHOUT_CLASSIFICATION	title multipart
WITHOUT_CLASSIFICATION	description multipart
WITHOUT_CLASSIFICATION	file upload multipart
WITHOUT_CLASSIFICATION	most browsers use iso-8859-1 as default encoding even if spec says utf-8
WITHOUT_CLASSIFICATION	most browsers use iso-8859-1 as default encoding even if spec says utf-8
WITHOUT_CLASSIFICATION	no filters
WITHOUT_CLASSIFICATION	empty filters
WITHOUT_CLASSIFICATION	non empty filters
WITHOUT_CLASSIFICATION	simple inclusion and exclusion filter
WITHOUT_CLASSIFICATION	allow all but images
WITHOUT_CLASSIFICATION	throw new unsupportedoperationexception("for test purposes only")
WITHOUT_CLASSIFICATION	this must be the original (java) http sampler
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	a http post request multipart/form-data with value that will change if they are url encoded values are similar to __viewstate parameter that .net uses
WITHOUT_CLASSIFICATION	most browsers use iso-8859-1 as default encoding even if spec says utf-8 todo - charset?
WITHOUT_CLASSIFICATION	create the test file content
WITHOUT_CLASSIFICATION	create a temporary file to make sure we always have a file to give to the postwriter whereever we are or whatever the current path is.
WITHOUT_CLASSIFICATION	delete temporay file
WITHOUT_CLASSIFICATION	test sending data with default encoding
WITHOUT_CLASSIFICATION	test sending data with default encoding
WITHOUT_CLASSIFICATION	test sending data with default encoding
WITHOUT_CLASSIFICATION	test sending data as iso-8859-1
WITHOUT_CLASSIFICATION	test sending data as iso-8859-1
WITHOUT_CLASSIFICATION	test sending data as iso-8859-1
WITHOUT_CLASSIFICATION	test sending data as iso-8859-1
WITHOUT_CLASSIFICATION	test sending data as iso-8859-1
WITHOUT_CLASSIFICATION	test sending data as utf-8
WITHOUT_CLASSIFICATION	test sending data as utf-8
WITHOUT_CLASSIFICATION	test sending data as utf-8
WITHOUT_CLASSIFICATION	test sending data as utf-8
WITHOUT_CLASSIFICATION	test sending data as utf-8
WITHOUT_CLASSIFICATION	test sending utf-8 data with iso-8859-1 content encoding
WITHOUT_CLASSIFICATION	test method for 'org.apache.jmeter.protocol.http.sampler.postwriter.sendpostdata(urlconnection httpsampler)' this method test sending a httpsampler with form parameters and only the filename of a file.
WITHOUT_CLASSIFICATION	test method for 'org.apache.jmeter.protocol.http.sampler.postwriter.sendpostdata(urlconnection httpsampler)' this method test sending file content as the only content of the post body
WITHOUT_CLASSIFICATION	check using default encoding
WITHOUT_CLASSIFICATION	check using a different encoding
WITHOUT_CLASSIFICATION	file content is sent as binary so the content encoding should not change the file data
WITHOUT_CLASSIFICATION	if we have both file as body and form data then only form data will be sent
WITHOUT_CLASSIFICATION	test method for 'org.apache.jmeter.protocol.http.sampler.postwriter.sendpostdata(urlconnection httpsampler)' this method test sending only a file multipart.
WITHOUT_CLASSIFICATION	test method for 'org.apache.jmeter.protocol.http.sampler.postwriter.sendpostdata(urlconnection httpsampler)' this method test sending only a formdata as a multipart/form-data request.
WITHOUT_CLASSIFICATION	tell sampler to do multipart even if we have no files to upload
WITHOUT_CLASSIFICATION	test sending data as iso-8859-1 with values that need to be urlencoded
WITHOUT_CLASSIFICATION	test sending data as iso-8859-1 with values that need to be urlencoded
WITHOUT_CLASSIFICATION	test method for 'org.apache.jmeter.protocol.http.sampler.postwriter.sendpostdata(urlconnection httpsampler)' this method test sending only a formdata as urlencoded data
WITHOUT_CLASSIFICATION	test sending data as utf-8 with values that needs to be urlencoded
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	delete temporay file
WITHOUT_CLASSIFICATION	test sending data as iso-8859-1
WITHOUT_CLASSIFICATION	test sending data as iso-8859-1
WITHOUT_CLASSIFICATION	test sending data as iso-8859-1
WITHOUT_CLASSIFICATION	test sending data as utf-8
WITHOUT_CLASSIFICATION	test sending data as utf-8
WITHOUT_CLASSIFICATION	check that other encoding is not the current encoding todo - charset?
WITHOUT_CLASSIFICATION	test sending data as utf-8 with values that would have been urlencoded if it was not sent as multipart
WITHOUT_CLASSIFICATION	test sending parameters which are urlencoded beforehand the values must be url encoded with utf-8 encoding because that is what the httpargument assumes %c3%85 in utf-8 is the same as %c5 in iso-8859-1 which is the same as &aring
WITHOUT_CLASSIFICATION	httpsampler uses iso-8859-1 as default encoding httpsampler uses iso-8859-1 as default encoding
WITHOUT_CLASSIFICATION	test method for 'org.apache.jmeter.protocol.http.sampler.postwriter.setheaders(urlconnection httpsampler)'
WITHOUT_CLASSIFICATION	create the multiparts
WITHOUT_CLASSIFICATION	join the two multiparts
WITHOUT_CLASSIFICATION	the encoding used for http headers and control information
WITHOUT_CLASSIFICATION	replace all backslash with double backslash
WITHOUT_CLASSIFICATION	different from testhttpmirrorthread port and standard mirror server
WITHOUT_CLASSIFICATION	additional ctor for processing tests which use int parameters
WITHOUT_CLASSIFICATION	this is used to emulate @before class and @after class
WITHOUT_CLASSIFICATION	add parameterised tests. for simplicity we assune each has cases 0-10
WITHOUT_CLASSIFICATION	shutdown mirror server
WITHOUT_CLASSIFICATION	test sending data as utf-8 with values that will change when urlencoded
WITHOUT_CLASSIFICATION	test sending data as utf-8 with values that have been urlencoded
WITHOUT_CLASSIFICATION	test sending data as utf-8 with values similar to __viewstate parameter that .net uses
WITHOUT_CLASSIFICATION	test sending data as utf-8 with values similar to __viewstate parameter that .net uses
WITHOUT_CLASSIFICATION	replace the variables in the sampler
WITHOUT_CLASSIFICATION	replace the variables in the sampler
WITHOUT_CLASSIFICATION	ensure only values are used
WITHOUT_CLASSIFICATION	test sending data with default encoding
WITHOUT_CLASSIFICATION	test sending data as iso-8859-1
WITHOUT_CLASSIFICATION	test sending data as utf-8 with values that would have been urlencoded if it was not sent as multipart
WITHOUT_CLASSIFICATION	test sending data as utf-8 with values that will change when urlencoded
WITHOUT_CLASSIFICATION	test sending data as utf-8 with values that have been urlencoded
WITHOUT_CLASSIFICATION	test sending data as utf-8 with values similar to __viewstate parameter that .net uses
WITHOUT_CLASSIFICATION	replace the variables in the sampler
WITHOUT_CLASSIFICATION	test sending data as utf-8 where user defined variables are used to set the value for form data
WITHOUT_CLASSIFICATION	test sending data as utf-8 where user defined variables are used to set the value for form data
WITHOUT_CLASSIFICATION	replace the variables in the sampler
WITHOUT_CLASSIFICATION	ensure only values are used
WITHOUT_CLASSIFICATION	test sending data as utf-8 with values that have been urlencoded and where we tell the sampler to urlencode the parameter values
WITHOUT_CLASSIFICATION	test sending data with iso-8859-1 encoding
WITHOUT_CLASSIFICATION	test sending data with iso-8859-1 encoding
WITHOUT_CLASSIFICATION	test sending data with utf-8 encoding
WITHOUT_CLASSIFICATION	test sending data with utf-8 encoding
WITHOUT_CLASSIFICATION	test sending data as utf-8 with values that changes when urlencoded
WITHOUT_CLASSIFICATION	check url
WITHOUT_CLASSIFICATION	check the request
WITHOUT_CLASSIFICATION	check request headers
WITHOUT_CLASSIFICATION	check post body from the result query string
WITHOUT_CLASSIFICATION	find the data sent to the mirror server which the mirror server is sending back to us
WITHOUT_CLASSIFICATION	skip the blank line with crlf dividing headers and body
WITHOUT_CLASSIFICATION	check response headers
WITHOUT_CLASSIFICATION	check url
WITHOUT_CLASSIFICATION	test sending data as utf-8 with + as part of the value where the value is set in sampler as not urluencoded but the isalwaysencoded flag of the argument is set to false. this mimics the httpconstants.addnonencodedargument which the proxy server calls in some cases
WITHOUT_CLASSIFICATION	test sending simple http get test sending data with default encoding
WITHOUT_CLASSIFICATION	test sending simple http get test sending data with default encoding
WITHOUT_CLASSIFICATION	check request headers
WITHOUT_CLASSIFICATION	check post body from the result query string
WITHOUT_CLASSIFICATION	find the data sent to the mirror server which the mirror server is sending back to us
WITHOUT_CLASSIFICATION	find the data sent to the mirror server which the mirror server is sending back to us
WITHOUT_CLASSIFICATION	skip the blank line with crlf dividing headers and body
WITHOUT_CLASSIFICATION	check response headers
WITHOUT_CLASSIFICATION	check response headers
WITHOUT_CLASSIFICATION	check post body which was sent to the mirror server and sent back by the mirror server
WITHOUT_CLASSIFICATION	check method path and query sent
WITHOUT_CLASSIFICATION	check method path and query sent
WITHOUT_CLASSIFICATION	find the data sent to the mirror server which the mirror server is sending back to us
WITHOUT_CLASSIFICATION	skip the blank line with crlf dividing headers and body
WITHOUT_CLASSIFICATION	skip the blank line with crlf dividing headers and body
WITHOUT_CLASSIFICATION	check method path and query sent
WITHOUT_CLASSIFICATION	check method path and query sent
WITHOUT_CLASSIFICATION	check method
WITHOUT_CLASSIFICATION	check method
WITHOUT_CLASSIFICATION	check that the query string is empty
WITHOUT_CLASSIFICATION	no body should have been sent
WITHOUT_CLASSIFICATION	no body should have been sent
WITHOUT_CLASSIFICATION	check the request uri sent to the mirror server and sent back by the mirror server
WITHOUT_CLASSIFICATION	we should have a query string part
WITHOUT_CLASSIFICATION	we should not have a query string part
WITHOUT_CLASSIFICATION	check path
WITHOUT_CLASSIFICATION	check query
WITHOUT_CLASSIFICATION	is it only the parameter values which are encoded in the specified content encoding the rest of the query is encoded in utf-8 therefore we compare the whole query using utf-8
WITHOUT_CLASSIFICATION	find the data sent to the mirror server which the mirror server is sending back to us we assume the headers are in iso_8859_1 and the body can be in any content encoding.
WITHOUT_CLASSIFICATION	find the data sent to the mirror server which the mirror server is sending back to us we assume the headers are in iso_8859_1 and the body can be in any content encoding. therefore we get the data sent in iso_8859_1 to be able to determine the end of the header part and then we just construct a byte array to hold the body part not taking encoding of the body into consideration because it can contain file data which is sent as raw byte data
WITHOUT_CLASSIFICATION	no divider was found
WITHOUT_CLASSIFICATION	set the form data
WITHOUT_CLASSIFICATION	todo - charset?
WITHOUT_CLASSIFICATION	todo - charset?
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	join the two multiparts
WITHOUT_CLASSIFICATION	the encoding used for http headers and control information
WITHOUT_CLASSIFICATION	replace all backslash with double backslash
WITHOUT_CLASSIFICATION	the value is in the first group group 0 is the whole match
WITHOUT_CLASSIFICATION	the headers and body are divided by a blank line
WITHOUT_CLASSIFICATION	header may contain charset= regexp extracts it so computed boundary is wrong
WITHOUT_CLASSIFICATION	string domain = "localhost"
WITHOUT_CLASSIFICATION	set the file upload data
WITHOUT_CLASSIFICATION	parse arguments singly
WITHOUT_CLASSIFICATION	parse arguments all at once
WITHOUT_CLASSIFICATION	test cases for making url and exercise method addargument(string namestring valuestring metadata)
WITHOUT_CLASSIFICATION	test cases for making url and exercise method parsearguments(string querystring)
WITHOUT_CLASSIFICATION	ignore empty file specs
WITHOUT_CLASSIFICATION	ignore trailing empty spec
WITHOUT_CLASSIFICATION	ignore leading empty spec
WITHOUT_CLASSIFICATION	show that can bypass encoding
WITHOUT_CLASSIFICATION	the sample does not use a valid encoding
WITHOUT_CLASSIFICATION	by default name/value are encoded on fetch
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	try a real encoded argument
WITHOUT_CLASSIFICATION	trailing file
WITHOUT_CLASSIFICATION	trailing directory
WITHOUT_CLASSIFICATION	file exclf inclf exclp inclp
WITHOUT_CLASSIFICATION	odd chars
WITHOUT_CLASSIFICATION	invalid
WITHOUT_CLASSIFICATION	'12345'
WITHOUT_CLASSIFICATION	check illegal array lengths
WITHOUT_CLASSIFICATION	current default language properties file
WITHOUT_CLASSIFICATION	messages.properties
WITHOUT_CLASSIFICATION	read resource into resourcebundle and store in list
WITHOUT_CLASSIFICATION	read resource file saving the keys
WITHOUT_CLASSIFICATION	only relevant for messages
WITHOUT_CLASSIFICATION	store the key
WITHOUT_CLASSIFICATION	helper method to construct resource name
WITHOUT_CLASSIFICATION	check that there aren't any extra entries
WITHOUT_CLASSIFICATION	perform the checks on the resources
WITHOUT_CLASSIFICATION	holds keys from file
WITHOUT_CLASSIFICATION	look for duplicate keys in the file
WITHOUT_CLASSIFICATION	must be the default resource file
WITHOUT_CLASSIFICATION	check all the keys are in the default props file
WITHOUT_CLASSIFICATION	also check key is in default
WITHOUT_CLASSIFICATION	better error than npe
WITHOUT_CLASSIFICATION	fix up windows paths
WITHOUT_CLASSIFICATION	use a suite to ensure that the default is done first
WITHOUT_CLASSIFICATION	load the default resource
WITHOUT_CLASSIFICATION	don't try to check the default language
WITHOUT_CLASSIFICATION	e.g. "/org/apache/jmeter/resources/messages"
WITHOUT_CLASSIFICATION	check that calls to getresstring use a valid property key name
WITHOUT_CLASSIFICATION	leading comment
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	\u00e7 = latin small letter c with cedilla \u00e9 = latin small letter e with acute
WITHOUT_CLASSIFICATION	change the original back again
WITHOUT_CLASSIFICATION	a and b should be equal
WITHOUT_CLASSIFICATION	a and b should not be equal
WITHOUT_CLASSIFICATION	needs to be greater than the minimum to allow for boundary errors
WITHOUT_CLASSIFICATION	needs to be greater than the minimum to allow for boundary errors
WITHOUT_CLASSIFICATION	re-increment
WITHOUT_CLASSIFICATION	re-increment
WITHOUT_CLASSIFICATION	n.b. this needs to divert the log for sampleresult
WITHOUT_CLASSIFICATION	temp test case for exploring settings
WITHOUT_CLASSIFICATION	don't use nanothread
WITHOUT_CLASSIFICATION	this test tries to emulate a http sample with two subsamples representing images that are downloaded for the page representing the first sample.
WITHOUT_CLASSIFICATION	sample that will get two sub results simulates a web page load
WITHOUT_CLASSIFICATION	sample with no sub results simulates an image download
WITHOUT_CLASSIFICATION	sample with no sub results simulates an image download
WITHOUT_CLASSIFICATION	now add the subsamples to the sample
WITHOUT_CLASSIFICATION	timemillis has granularity of 10-20
WITHOUT_CLASSIFICATION	check that calculator gets the correct statistics from the sample
WITHOUT_CLASSIFICATION	allow for some margin of error check that the throughput uses the time elapsed for the sub results
WITHOUT_CLASSIFICATION	check default
WITHOUT_CLASSIFICATION	check null changes nothing
WITHOUT_CLASSIFICATION	check no charset
WITHOUT_CLASSIFICATION	check unquoted charset
WITHOUT_CLASSIFICATION	check quoted charset
WITHOUT_CLASSIFICATION	this is what jorphanutils.split() does
WITHOUT_CLASSIFICATION	these tests should agree with those for jorphanutils.split() as far as possible
WITHOUT_CLASSIFICATION	\u00e7 = latin small letter c with cedilla \u00e9 = latin small letter e with acute
WITHOUT_CLASSIFICATION	blank line
WITHOUT_CLASSIFICATION	empty strings at eof
WITHOUT_CLASSIFICATION	testloadandsave test files
WITHOUT_CLASSIFICATION	graphaccumvisualizer obsolete bsfsamplergui now a testbean graphaccumvisualizer obsolete bsfsamplergui now a testbean graphaccumvisualizer now obsolete ctt changed to use intprop for mode
WITHOUT_CLASSIFICATION	test files for testload output will generally be different in size and line count
WITHOUT_CLASSIFICATION	did a test fail?
WITHOUT_CLASSIFICATION	make sure all the data is flushed out
WITHOUT_CLASSIFICATION	test non-empty parameters
WITHOUT_CLASSIFICATION	unrecognised files are ignored
WITHOUT_CLASSIFICATION	does not open file
WITHOUT_CLASSIFICATION	does not open file
WITHOUT_CLASSIFICATION	re-read 1st line
WITHOUT_CLASSIFICATION	re-read 1st line
WITHOUT_CLASSIFICATION	should not be able to write to it
WITHOUT_CLASSIFICATION	does not remove the entry
WITHOUT_CLASSIFICATION	removes all entries
WITHOUT_CLASSIFICATION	test code intentional
WITHOUT_CLASSIFICATION	check "undefined" does not become a "reserved word"
WITHOUT_CLASSIFICATION	errordetected()
WITHOUT_CLASSIFICATION	errordetected()
WITHOUT_CLASSIFICATION	programming error. don't continue.
WITHOUT_CLASSIFICATION	check that all keys in the bundle are also in the default bundle
WITHOUT_CLASSIFICATION	will throw missingresourceexception if key is not there.
WITHOUT_CLASSIFICATION	check that all necessary keys are there
WITHOUT_CLASSIFICATION	displayname is always mandatory
WITHOUT_CLASSIFICATION	skip the rest of this test for alpha/experimental beans
WITHOUT_CLASSIFICATION	check for property- and group-related texts
WITHOUT_CLASSIFICATION	skip non-editable properties that is ignore hidden read-only and write-only properties
WITHOUT_CLASSIFICATION	ignore testelement properties which don't have an explicit editor
WITHOUT_CLASSIFICATION	done -- we're working with an editable property.
WITHOUT_CLASSIFICATION	throw new error("no default bundle for class " + classname)
WITHOUT_CLASSIFICATION	string samplelog = "c/eclipse3/workspace/jmeter-21/bin/testfiles/sample_log1.jtl"
WITHOUT_CLASSIFICATION	string samplelog = "c/eclipse3/workspace/jmeter-21/bin/testfiles/sample_log1.jtl"
WITHOUT_CLASSIFICATION	tweak.
WITHOUT_CLASSIFICATION	tweak.
WITHOUT_CLASSIFICATION	test needs to run in this package in order to give access to abstracttestelement.addproperty()
WITHOUT_CLASSIFICATION	this test should work whether or not all nulls are equal
WITHOUT_CLASSIFICATION	do not check hashcodes unequal objects may have equal hashcodes
WITHOUT_CLASSIFICATION	give access to the method for test code
WITHOUT_CLASSIFICATION	give access to the method for test code
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	p.add(makebuttonpanel() borderlayout.south)
WITHOUT_CLASSIFICATION	assume this thread only 1 per second should delay for 1 second 1 per milli-second should delay for 1 milli-second
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	10 per second should delay for 1 second 10 per milli-second should delay for 1 milli-second
WITHOUT_CLASSIFICATION	1000 per milli-second should delay for 1 milli-second
WITHOUT_CLASSIFICATION	not sure we can test anything else here
WITHOUT_CLASSIFICATION	use old style
WITHOUT_CLASSIFICATION	probably needed to avoid npes with guis
WITHOUT_CLASSIFICATION	tree1.add("a3")
WITHOUT_CLASSIFICATION	no duplicates when adding
WITHOUT_CLASSIFICATION	add duplicates
WITHOUT_CLASSIFICATION	as above but with aggregate sample instead
WITHOUT_CLASSIFICATION	add duplicates as per bug
WITHOUT_CLASSIFICATION	assertequals("t2"f2.invoke())
WITHOUT_CLASSIFICATION	assertequals("1aaa."f1a.invoke())
WITHOUT_CLASSIFICATION	can't call invoke using super class
WITHOUT_CLASSIFICATION	ok (currently) to invoke using sub-class
WITHOUT_CLASSIFICATION	args will be provided later
WITHOUT_CLASSIFICATION	should use original object
WITHOUT_CLASSIFICATION	check how class definition behaves
WITHOUT_CLASSIFICATION	logprop("java.class.path")
WITHOUT_CLASSIFICATION	don't call isheadless() here as it has a side effect. --
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	send different event wether we are merging a test plan into another test plan or loading a testplan from scratch
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	private static final string rootdn = "rootdn" private static final string test = "test" private static string testvalue="nnnn"
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	test ignore trailing split characters ignore adjacent delimiters
WITHOUT_CLASSIFICATION	tests for split(stringstringboolean)
WITHOUT_CLASSIFICATION	test leading split characters
WITHOUT_CLASSIFICATION	test leading split characters
WITHOUT_CLASSIFICATION	empty string
WITHOUT_CLASSIFICATION	tests for split(stringstringstring)
WITHOUT_CLASSIFICATION	empty default
WITHOUT_CLASSIFICATION	empty delimiter
WITHOUT_CLASSIFICATION	multiple delimiters
WITHOUT_CLASSIFICATION	delimiter same as splitter
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	node node = tidy.parsedom(new bytearrayinputstream(response.getresponsedata()) null)
WITHOUT_CLASSIFICATION	values for test_field n.b. we cannot change the text value as it is in test plans $non-nls-1$
WITHOUT_CLASSIFICATION	in case parse fails $non-nls-1$ in case parse fails $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ make it easier to enter a tab $non-nls-1$
WITHOUT_CLASSIFICATION	the loop controller panel can be displayed standalone or inside another panel. for standalone we want to display the title name etc. (everything). however if we want to display it within another panel we just display the loop count fields (not the title and name).
WITHOUT_CLASSIFICATION	$non-nls-1$ don't set empty to keep regexp regexpfield.settext("") $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	this 'other value' regex is deliberately weak even accepting an empty string to be useful when reporting malformed data. $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	condition label $non-nls-1$
WITHOUT_CLASSIFICATION	if the -j or -l flag is set to last or last.log|last.jtl then the last loaded file name is used to generate the log file name by removing .jmx and replacing it with .log|.jtl
WITHOUT_CLASSIFICATION	if a table cell is being edited we should accept the current value and stop the editing before adding a new row.
WITHOUT_CLASSIFICATION	$non-nls-1$ i.e. boolean savexxx() $non-nls-1$ i.e. void setxxx(boolean) $non-nls-1$ e.g. save_xxx property
WITHOUT_CLASSIFICATION	keep the '\' unless it is one of the escapable chars '$' '' or '\' n.b. this method is used to parse function parameters so must treat '' as special
WITHOUT_CLASSIFICATION	en fr de $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ ja zh_cn zh_tw
WITHOUT_CLASSIFICATION	@guardedby("lock") keep track of how many instances are active
WITHOUT_CLASSIFICATION	sampleoccurred is called from multiple threads not safe to write from multiple threads. also decouples the file io from sample generation
WITHOUT_CLASSIFICATION	file name sequence number @guardedby("lock")
WITHOUT_CLASSIFICATION	instance fields are constructed by the client when the instance is create in the test plan and the field values are then transferred to the server copy by rmi serialisation/deserialisation
WITHOUT_CLASSIFICATION	process special keys $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	if there are some recent files we must make the separator visisble the separator is the last item in the list
WITHOUT_CLASSIFICATION	put the gui object back to the way it was.
WITHOUT_CLASSIFICATION	make sure decoding follows input file
WITHOUT_CLASSIFICATION	save (selection) as save testplan as save
WITHOUT_CLASSIFICATION	y y y y sp m m / d d / h h m m s s end
WITHOUT_CLASSIFICATION	ok todo ??
WITHOUT_CLASSIFICATION	support original property name $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	allow for windows / chars in filename $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	updatemainmenu(((jmeterguicomponent) getcurrentnode().getuserobject()).createpopupmenu())
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	a http post request multipart/form-data simple values with \r\n as end of line which is according to spec and with more headers in each multipart
WITHOUT_CLASSIFICATION	two jars same version two jars same version
WITHOUT_CLASSIFICATION	test plan with onlyoncecontroller inside inner loop set up the test plan
WITHOUT_CLASSIFICATION	the following used to be jacks_password but the arguments class uses hashmap for which the order is not defined.
WITHOUT_CLASSIFICATION	myrow = f.nextrow() assertequals(3myrow) assertequals(0f.getnextrow())
WITHOUT_CLASSIFICATION	is this a work in progress ? no not a work in progress
WITHOUT_CLASSIFICATION	assumes some kind of list is use if not using a list that retains the order then the asserts would need to change
WITHOUT_CLASSIFICATION	test sending data as utf-8 with values that will change when urlencoded and where we tell the sampler to urlencode the parameter value
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	pick up headers if failed to execute the request httpmethod can be null if method is unexpected
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	resource keys cannot contain spaces and are forced to lower case $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	nulls cannot be written using prettyprintwriter - they cause an npe $non-nls-1$
WITHOUT_CLASSIFICATION	default is 1 default is 0
WITHOUT_CLASSIFICATION	n.b. jvms other than sun may return different instances each time so we cache the value here (and avoid having to fetch it every time)
WITHOUT_CLASSIFICATION	programming error. don't continue.
WITHOUT_CLASSIFICATION	+ jmx attributes - do not change $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ - jmx
WITHOUT_CLASSIFICATION	note this is only used to implement testiterationlistener#testiterationstart since this is a frequent event it makes sense to create the list once rather than scanning each time the memory used will be released when the thread finishes
WITHOUT_CLASSIFICATION	we only check the length of the result. comparing the actual result (out.tobytearray==original) will usually fail because the order of the properties within each test element may change. comparing the lengths should be enough to detect most problem cases
WITHOUT_CLASSIFICATION	assume this thread only 1 per second initialise
WITHOUT_CLASSIFICATION	test ignore trailing split characters ignore adjacent delimiters
WITHOUT_CLASSIFICATION	write a ok reponse to browser to engage ssl exchange $non-nls-1$
WITHOUT_CLASSIFICATION	we use the page encoding where the form resides as the default encoding for the form
WITHOUT_CLASSIFICATION	+ action names $non-nls-1$
WITHOUT_CLASSIFICATION	set up list of potential targets and enable listener
WITHOUT_CLASSIFICATION	.equals caused npe
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	record headers size to allow httpsampleresult.getbytes() with different options $non-nls-1$ $non-nls-2$ add 2 for a '\r\n' at end of headers (before data)
WITHOUT_CLASSIFICATION	a well-bahaved browser is supposed to send 'connection close' with the last request to an http server. instead most browsers leave it to the server to close the connection after their timeout period. leave it to the jmeter user to decide.
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	one space for blank header $non-nls-1$ one space for blank header $non-nls-1$
WITHOUT_CLASSIFICATION	a well-behaved browser is supposed to send 'connection close' with the last request to an http server. instead most browsers leave it to the server to close the connection after their timeout period. leave it to the jmeter user to decide.
WITHOUT_CLASSIFICATION	process apache httpclient parameters file $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	in a post request which is not multipart we only support parameters no file upload is allowed
WITHOUT_CLASSIFICATION	embedded urls must match this re (if provided) $non-nls-1$
WITHOUT_CLASSIFICATION	mark walsh 2002-08-03 modified to also parse a parameter name value string where string contains only the parameter name and no equal sign.
WITHOUT_CLASSIFICATION	check if the header manager had a content type header this allows the user to specify his own content-type for a put request
WITHOUT_CLASSIFICATION	if the multipart is repeatable we can send it first to our own stream without the actual file content so we can return it
WITHOUT_CLASSIFICATION	headermanager was set so let's set the connection to use it.
WITHOUT_CLASSIFICATION	we call parse with 1 to get only one. this also means if we change the implementation to use 2 it would use every other entry and so on. not that it is really useful but a person could use it that way if they have a huge gigabyte log file and they only want to use a quarter of the entries.
WITHOUT_CLASSIFICATION	the document should only have one service node if it doesn't it may not work!
WITHOUT_CLASSIFICATION	new wsdlhelper("httplocalhost/wstest/wstest.asmx?wsdl") new wsdlhelper("httplocalhost/axiswsdl.xml") new wsdlhelper("httplocalhost8080/wsmyupper.wsdl") new wsdlhelper("httplocalhost8080/test.wsdl")
WITHOUT_CLASSIFICATION	read one line at a time using bufferedreader
WITHOUT_CLASSIFICATION	there's little point saving the manager between invocations as we need to reset most of the beans anyway
WITHOUT_CLASSIFICATION	/ only do the calculation if it is needed
WITHOUT_CLASSIFICATION	a callablestatement can return more than 1 resultsets plus a number of update counts.
WITHOUT_CLASSIFICATION	++ do not change these strings they are used in jmx files to record the button settings $non-nls-1$
WITHOUT_CLASSIFICATION	timeouts not active how much left
WITHOUT_CLASSIFICATION	needs to be accessible from test code only contains ldapargument entries
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	the default is false so we can remove the property to simplify jmx files this also allows httpdefaults to work for this checkbox
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	++ for testbean implementations only passed to file or script
WITHOUT_CLASSIFICATION	put a warning if tika-app.jar missing (or some dependencies in only tika-core|parsers packages are using) $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	resource keys cannot contain spaces and are forced to lower case $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	can occur at run-time could be caused by the bsh exceptions evalerror parseexception or targeterror
WITHOUT_CLASSIFICATION	errorlogging and successonlylogging are mutually exclusive $non-nls-1$
WITHOUT_CLASSIFICATION	a testbean is a java bean. just define some properties and they will automagically show up in the gui. a string property
WITHOUT_CLASSIFICATION	only try to format if there is a number
WITHOUT_CLASSIFICATION	requires java 7 $non-nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$ don't match the empty category
WITHOUT_CLASSIFICATION	if a table cell is being edited we should accept the current value and stop the editing before adding a new row.
WITHOUT_CLASSIFICATION	read the header part we will be looking for a content-length header so we know how much we should read. we assume headers are in iso_8859_1 if we do not find such a header we will just have to read until we have to block to read more until we support chunked transfer
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	request validation $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ no point trying these
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	+ jmx file attributes $non-nls-1$
WITHOUT_CLASSIFICATION	this is not the result of a redirect so break the chain
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	+ jmx attributes - do not change the values $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	did sample succeed?
WITHOUT_CLASSIFICATION	requires javamail 1.4.2+
WITHOUT_CLASSIFICATION	requires javamail 1.4.2+
WITHOUT_CLASSIFICATION	requires javamail 1.4.2+
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	no need to log normally as we set the status $non-nls-1$
WITHOUT_CLASSIFICATION	no need to log normally as we set the status $non-nls-1$
WITHOUT_CLASSIFICATION	not been set by any child samples
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	throws me
WITHOUT_CLASSIFICATION	throws me
WITHOUT_CLASSIFICATION	tfmailfrom.setenabled(false) tfmailto.setenabled(false) tfmailtocc.setenabled(false) tfmailtobcc.setenabled(false) tfsubject.setenabled(false)
WITHOUT_CLASSIFICATION	++jmx attribute names - do not change the values! these were moved from smtpsampler which is why the prefix is still smtsampler $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ --jmx attribute names
WITHOUT_CLASSIFICATION	for completeness
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ default is not in range of a byte
WITHOUT_CLASSIFICATION	programming error bail out.
WITHOUT_CLASSIFICATION	if we are disabling the edit-->remove menu item and the edit-->add menu item is disabled then we also need to disable the edit menu. the java look and feel guidelines say to disable a menu if all menu items are disabled.
WITHOUT_CLASSIFICATION	set default save menu item to disabled since the default node that is selected is root which does not allow items to be inserted.
WITHOUT_CLASSIFICATION	we add the entry
WITHOUT_CLASSIFICATION	we should make this configurable eventually
WITHOUT_CLASSIFICATION	we clean up the resultcollector to make sure there's no slow leaks
WITHOUT_CLASSIFICATION	just like the aggregate listener we use the sample label to represent a row. in this case we use it as a key.
WITHOUT_CLASSIFICATION	check that optional args work woth long options
WITHOUT_CLASSIFICATION	separate argument
WITHOUT_CLASSIFICATION	assume default charset is ok here <apache-bsf.version>2.4.0</apache-bsf.version>
WITHOUT_CLASSIFICATION	used to be 'dábale' but caused trouble on gump. reasons unknown.
WITHOUT_CLASSIFICATION	this would be done by the run command
WITHOUT_CLASSIFICATION	result.setresponsedata - not set
WITHOUT_CLASSIFICATION	expected results established using the dda algorithm (see httpwww.siggraph.org/education/materials/hypergraph/scanline/outprims/drawline.htm) 0/1 vs. 1/1 -> 0 is closer to 33.33 0/2 vs. 1/2 -> 50.0 is closer to 33.33 1/3 vs. 2/3 -> 33.33 is closer to 33.33 1/4 vs. 2/4 -> 25.0 is closer to 33.33 1/5 vs. 2/5 -> 40.0 is closer to 33.33 2/6 vs. 3/6 -> 33.33 is closer to 33.33
WITHOUT_CLASSIFICATION	genericcontroller controller = new genericcontroller() genericcontroller sub_1 = new genericcontroller() sub_1.addtestelement(new ifcontroller("10<100")) sub_1.addtestelement(new ifcontroller("true==false")) controller.addtestelement(sub_1) controller.addtestelement(new ifcontroller("false==false")) ifcontroller sub_2 = new ifcontroller() sub_2.setcondition( "10<10000") genericcontroller sub_3 = new genericcontroller() sub_2.addtestelement(new ifcontroller( " \"a\".equals(\"a\")" ) ) sub_3.addtestelement(new ifcontroller("2>100")) sub_3.addtestelement(new ifcontroller("false==true")) sub_2.addtestelement(sub_3) sub_2.addtestelement(new ifcontroller("2==3")) controller.addtestelement(sub_2)
WITHOUT_CLASSIFICATION	get next sample and its name
WITHOUT_CLASSIFICATION	match by name
WITHOUT_CLASSIFICATION	match by name
WITHOUT_CLASSIFICATION	simple test with single selection controller generic controller + sampler "before" + switch controller + + sampler "zero" + + sampler "one" + + sampler "two" + + sampler "three" + sampler "after"
WITHOUT_CLASSIFICATION	generic controller - before - while controller ${var} - - one - - two - - simple controller - - - three - - - four - after
WITHOUT_CLASSIFICATION	onlyonce samples
WITHOUT_CLASSIFICATION	onlyonce samples
WITHOUT_CLASSIFICATION	outer sample
WITHOUT_CLASSIFICATION	sample in inner loop
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	the outer sample and the inner loop samples
WITHOUT_CLASSIFICATION	onlyonce inside inner loop
WITHOUT_CLASSIFICATION	test to show current problem with interleavecontroller i am not sure if the expected order of the samples below are correct because i am not sure if it is properly defined how the interleavecontroller and onlyoncecontroller should function.
WITHOUT_CLASSIFICATION	n.b. backslashes are removed before dollar comma and backslash
WITHOUT_CLASSIFICATION	log.debug("domain property = " + element.getproperty("domain"))
WITHOUT_CLASSIFICATION	check old values don't hang around fewer matches
WITHOUT_CLASSIFICATION	same as parent
WITHOUT_CLASSIFICATION	create the csvread function and set its parameters.
WITHOUT_CLASSIFICATION	check init file functioning
WITHOUT_CLASSIFICATION	restarts
WITHOUT_CLASSIFICATION	col 1 line 1 a
WITHOUT_CLASSIFICATION	col2 line 1 b
WITHOUT_CLASSIFICATION	check blank lines are treated as eof
WITHOUT_CLASSIFICATION	myrow = f.nextrow() assertequals(0myrow) assertequals(1f.getnextrow())
WITHOUT_CLASSIFICATION	use different xpath for both threads
WITHOUT_CLASSIFICATION	wrap-round check
WITHOUT_CLASSIFICATION	perform a sum and check the results
WITHOUT_CLASSIFICATION	template match number all separator
WITHOUT_CLASSIFICATION	template match number all separator
WITHOUT_CLASSIFICATION	template match number all separator
WITHOUT_CLASSIFICATION	template match number all separator
WITHOUT_CLASSIFICATION	template match number all separator
WITHOUT_CLASSIFICATION	template match number all separator
WITHOUT_CLASSIFICATION	template match number all separator
WITHOUT_CLASSIFICATION	template match number all separator
WITHOUT_CLASSIFICATION	template match number all separator
WITHOUT_CLASSIFICATION	extract titles from component_reference.xml
WITHOUT_CLASSIFICATION	test gui elements - create the suite of tests
WITHOUT_CLASSIFICATION	skip report packages as implementation is incomplete skip report gui as implementation is incomplete no not a work in progress
WITHOUT_CLASSIFICATION	test testelements - create the suite
WITHOUT_CLASSIFICATION	events often have this constructor
WITHOUT_CLASSIFICATION	no luck. ignore this class
WITHOUT_CLASSIFICATION	if not running under alltests.java make sure that the properties (and log file) are set up correctly. n.b. in order for this to work correctly the junit test must be started in the bin directory and all the jmeter jars (plus any others needed at run-time) need to be on the classpath.
WITHOUT_CLASSIFICATION	display actual encoding used (will differ if file.encoding is not recognised)
WITHOUT_CLASSIFICATION	test new cookie is returned
WITHOUT_CLASSIFICATION	ensure policy is picked up
WITHOUT_CLASSIFICATION	ensure policy is picked up
WITHOUT_CLASSIFICATION	write to the socket
WITHOUT_CLASSIFICATION	write to the socket
WITHOUT_CLASSIFICATION	write to the socket
WITHOUT_CLASSIFICATION	headers
WITHOUT_CLASSIFICATION	read the response
WITHOUT_CLASSIFICATION	read the response
WITHOUT_CLASSIFICATION	close the connection
WITHOUT_CLASSIFICATION	the content sent
WITHOUT_CLASSIFICATION	write the headers and then sleep
WITHOUT_CLASSIFICATION	connect to the http server and do a simple http post with utf-8 encoding of the body which caused problems when reader/writer classes were used in the httpmirrorthread
WITHOUT_CLASSIFICATION	the response includes the headers from the mirror server we want to skip those to only keep the content mirrored. look for the first crlfcrlf section
WITHOUT_CLASSIFICATION	can't instantiate
WITHOUT_CLASSIFICATION	test if can instantiate parser using property name
WITHOUT_CLASSIFICATION	check arguments
WITHOUT_CLASSIFICATION	check arguments
WITHOUT_CLASSIFICATION	check arguments
WITHOUT_CLASSIFICATION	check arguments
WITHOUT_CLASSIFICATION	check arguments
WITHOUT_CLASSIFICATION	check arguments
WITHOUT_CLASSIFICATION	check arguments
WITHOUT_CLASSIFICATION	check arguments
WITHOUT_CLASSIFICATION	check arguments
WITHOUT_CLASSIFICATION	check arguments
WITHOUT_CLASSIFICATION	check arguments
WITHOUT_CLASSIFICATION	check arguments
WITHOUT_CLASSIFICATION	check arguments
WITHOUT_CLASSIFICATION	check arguments
WITHOUT_CLASSIFICATION	check arguments
WITHOUT_CLASSIFICATION	check arguments we should have one argument with the value equal to the post body
WITHOUT_CLASSIFICATION	use null for url and contentencoding to simulate that httprequesthdr do not know the encoding for the page
WITHOUT_CLASSIFICATION	use null for url and contentencoding to simulate that httprequesthdr do not know the encoding for the page
WITHOUT_CLASSIFICATION	when the encoding is not known the argument will get the encoded value and the "encode?" set to false
WITHOUT_CLASSIFICATION	a http post request multipart/form-data simple values with \n as end of line which should also be handled and with more headers in each multipart
WITHOUT_CLASSIFICATION	create the test file content
WITHOUT_CLASSIFICATION	create a temporary file to make sure we always have a file to give to the postwriter whereever we are or whatever the current path is.
WITHOUT_CLASSIFICATION	test method for 'org.apache.jmeter.protocol.http.sampler.postwriter.sendpostdata(urlconnection httpsampler)' this method test sending a request which contains both formdata and file content
WITHOUT_CLASSIFICATION	test sending data with default encoding
WITHOUT_CLASSIFICATION	test sending data with default encoding
WITHOUT_CLASSIFICATION	test sending data with default encoding
WITHOUT_CLASSIFICATION	test sending data with default encoding
WITHOUT_CLASSIFICATION	test sending data with default encoding
WITHOUT_CLASSIFICATION	test sending data with default encoding
WITHOUT_CLASSIFICATION	test sending data as iso-8859-1
WITHOUT_CLASSIFICATION	test sending data as utf-8
WITHOUT_CLASSIFICATION	test sending data as utf-8
WITHOUT_CLASSIFICATION	test method for 'org.apache.jmeter.protocol.http.sampler.postwriter.setheaders(urlconnection httpsampler)'
WITHOUT_CLASSIFICATION	create the multiparts
WITHOUT_CLASSIFICATION	test sending data as utf-8 with values that have been urlencoded
WITHOUT_CLASSIFICATION	test sending data as utf-8 with values that have been urlencoded
WITHOUT_CLASSIFICATION	test sending data as utf-8 with values similar to __viewstate parameter that .net uses with values urlencoded but the always encode set to false for the arguments this is how the http proxy server adds arguments to the sampler
WITHOUT_CLASSIFICATION	test sending data as utf-8 where user defined variables are used to set the value for form data
WITHOUT_CLASSIFICATION	test sending data as utf-8 where user defined variables are used to set the value for form data
WITHOUT_CLASSIFICATION	check url
WITHOUT_CLASSIFICATION	check url
WITHOUT_CLASSIFICATION	check url
WITHOUT_CLASSIFICATION	check url
WITHOUT_CLASSIFICATION	check request headers
WITHOUT_CLASSIFICATION	find the data sent to the mirror server which the mirror server is sending back to us
WITHOUT_CLASSIFICATION	check post body which was sent to the mirror server and sent back by the mirror server
WITHOUT_CLASSIFICATION	check post body which was sent to the mirror server and sent back by the mirror server
WITHOUT_CLASSIFICATION	check method path and query sent
WITHOUT_CLASSIFICATION	cannot check the query string of the result because the mirror server replies without including query string in url
WITHOUT_CLASSIFICATION	show that can bypass encoding
WITHOUT_CLASSIFICATION	set the required variables
WITHOUT_CLASSIFICATION	test invalid byte arrays
WITHOUT_CLASSIFICATION	ensure properties files don't use special characters
WITHOUT_CLASSIFICATION	now check for invalid message format if string contains {0} and ' there may be a problem so do a format with dummy parameters and check if there is a { in the output. a bit crude but should be enough for now.
WITHOUT_CLASSIFICATION	original and clone should be equal
WITHOUT_CLASSIFICATION	change the original
WITHOUT_CLASSIFICATION	check sample increments ok
WITHOUT_CLASSIFICATION	check sample increments ok
WITHOUT_CLASSIFICATION	check sample increments ok
WITHOUT_CLASSIFICATION	check sample increments ok
WITHOUT_CLASSIFICATION	parent elapsed total should be no smaller than the sum of the individual samples. it may be greater by the timer granularity.
WITHOUT_CLASSIFICATION	test files for testloadandsave output will generally be different in size but same number of lines
WITHOUT_CLASSIFICATION	note this test will fail if a property is added or removed to any of the components used in the test files. the way to solve this is to appropriately change the test file.
WITHOUT_CLASSIFICATION	test code intentional
WITHOUT_CLASSIFICATION	test code intentional
WITHOUT_CLASSIFICATION	test code intentional
WITHOUT_CLASSIFICATION	p.add(makemainpanel() borderlayout.center) force a minimum table height of 70 pixels
WITHOUT_CLASSIFICATION	check reflexive
WITHOUT_CLASSIFICATION	this is not a requirement
WITHOUT_CLASSIFICATION	this is not a requirement
WITHOUT_CLASSIFICATION	assertequals("t1"f1.invoke())
WITHOUT_CLASSIFICATION	assertequals("1aaa."f1.invoke()) n.b. returns different result from before
WITHOUT_CLASSIFICATION	++ gui tests throw the error testargumentcreation(org.apache.jmeter.config.gui.argumentspanel$test)java.lang.noclassdeffounderror at java.lang.class.forname0(native method) at java.lang.class.forname(class.java141) at java.awt.graphicsenvironment.getlocalgraphicsenvironment(graphicsenvironment.java62) try to find out why this is
WITHOUT_CLASSIFICATION	externally callable suite() method for use by junit allows tests to be run directly under junit rather than using the startup code in the rest of the module. no parameters can be passed in so it is less flexible.
WITHOUT_CLASSIFICATION	testsuite only finds testxxx() methods and does not look for suite() methods. to provide more compatibilty with stand-alone tests where junit does look for a suite() method check for it first here.
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ modal dialog box
WITHOUT_CLASSIFICATION	$non-nls-1$ return unknown action names for display error msg
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	set up some objects for the script to play with $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ previously mis-spelt as theadname $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	for omitted file names $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	desc.add("use fully qualified host name true/false (default false)") $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	names of junit3 methods $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	leave header as is headerbuf.append(conn.getheaderfield(0).substring(0 8)) headerbuf.append(" ") headerbuf.append(conn.getresponsecode()) headerbuf.append(" ") headerbuf.append(conn.getresponsemessage()) $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	otherwise the response is scanned for these strings $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	allow access to context and variables directly $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$ $non-nls-1$
WITHOUT_CLASSIFICATION	can be specified in jmeter.properties $non-nls-1$
WITHOUT_CLASSIFICATION	these names must agree case-wise with the variable and property names $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	can be specified in jmeter.properties $non-nls-1$
WITHOUT_CLASSIFICATION	add variables for access to context and variables $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	identifiers $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ default normal
WITHOUT_CLASSIFICATION	$non-nls-1$ test can't have a duration more than 2^31 secs (cast from long to int)
WITHOUT_CLASSIFICATION	default sans serif $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	default normal $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	default sans serif $non-nls-1$
WITHOUT_CLASSIFICATION	default 16 $non-nls-1$
WITHOUT_CLASSIFICATION	default sans serif $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	change cancel label to close $non-nls-1$
WITHOUT_CLASSIFICATION	default for writing$non-nls-1$
WITHOUT_CLASSIFICATION	only encode strings if outversion = 1.0 $non-nls-1$
WITHOUT_CLASSIFICATION	element tags. must be unique. keep sorted. $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	+ jmx field names - do not change values $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	regex $non-nls-1$ template $non-nls-1$ which match $non-nls-1$ between text $non-nls-1$ default text $non-nls-1$ output variable name $non-nls-1$ input variable $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ previously mis-spelt as theadname $non-nls-1$ $non-nls-1$ (may be null) $non-nls-1$ (may be null) $non-nls-1$
WITHOUT_CLASSIFICATION	function name $non-nls-1$
WITHOUT_CLASSIFICATION	process __csvread(filenamealias) $non-nls-1$
WITHOUT_CLASSIFICATION	if argument is 'next' - go to the next line $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ we have a default
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ previously mis-spelt as theadname $non-nls-1$ $non-nls-1$ (may be null) $non-nls-1$ (may be null) $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	ensure that these are set even if no paramters are provided $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ change the classname drop down
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	don't make these static otherwise language change does not work $non-nls-1$
WITHOUT_CLASSIFICATION	notused font plaintext = new font("plain" font.plain 9) these must not be static otherwise language change does not work $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ check if it is form data $non-nls-1$ get the form field name $non-nls-1$
WITHOUT_CLASSIFICATION	check if it is a file being uploaded $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ see testelementpropertyconverter
WITHOUT_CLASSIFICATION	look for special response length header $non-nls-1$
WITHOUT_CLASSIFICATION	look for special response length header $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	look for special cookie request $non-nls-1$
WITHOUT_CLASSIFICATION	check if we have found a content-length header $non-nls-1$
WITHOUT_CLASSIFICATION	look for special sleep request $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ resource name
WITHOUT_CLASSIFICATION	$non-nls-1$ resource name
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$$non-nls-2$
WITHOUT_CLASSIFICATION	cookie $non-nls-1$
WITHOUT_CLASSIFICATION	list of parsers $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$$non-nls-2$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	obtain message formats $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	independent frame to allow it to be overlaid by the main frame $non-nls-1$
WITHOUT_CLASSIFICATION	needed by abstracttestelement. also testelementconverter and testelementpropertyconverter for handling empty comments $non-nls-1$ n.b. comments originally only applied to test plans hence the name - which can now not be easily changed
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	value to return at eof $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	add variables for access to context and variables $non-nls-1$
WITHOUT_CLASSIFICATION	default 16 $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	default 3.0f $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ default bottom $non-nls-1$
WITHOUT_CLASSIFICATION	default sans serif $non-nls-1$
WITHOUT_CLASSIFICATION	default 10 $non-nls-1$
WITHOUT_CLASSIFICATION	tabbed results fill table $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	set the title for the first tab $non-nls-1$ add the other tabs if not present $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	fields table $non-nls-1$ not sure needs i18n? $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ select last tab
WITHOUT_CLASSIFICATION	setup bottom tabs first raw second parsed $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	can be specified in jmeter.properties $non-nls-1$
WITHOUT_CLASSIFICATION	should header be saved with the data? $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	label count mean median 90% min max error %age $non-nls-1$ throughput $non-nls-1$ pagesize $non-nls-1$
WITHOUT_CLASSIFICATION	default 10 $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ default bottom $non-nls-1$
WITHOUT_CLASSIFICATION	default sans serif $non-nls-1$
WITHOUT_CLASSIFICATION	default 10 $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	add local system properties if the file is found $non-nls-1$
WITHOUT_CLASSIFICATION	add local jmeter properties if the file is found $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	hide window on esc $non-nls-1$
WITHOUT_CLASSIFICATION	do search on enter $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ file_merge.setaccelerator( keystroke.getkeystroke(keyevent.vk_o keyevent.ctrl_mask)) set default save menu item to disabled since the default node that is selected is root which does not allow items to be inserted.
WITHOUT_CLASSIFICATION	$non-nls-1$ set default save menu item to disabled since the default node that is selected is root which does not allow items to be inserted.
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	search menu $non-nls-1$
WITHOUT_CLASSIFICATION	no must be csv $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ (flash media manifest)
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	attributes for testelement and testelementproperty must all be unique $non-nls-1$ also used by propertyconverter classes $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	not used protected static final string tag_url = "requesturl" $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	samplerdata attributes. must be unique. keep sorted by string value. ensure the listener documentation is updated when new attributes are added $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	n.b. originally the response code was saved with the code "rs" but retrieved with the code "rc". changed to always use "rc" but allow for "rs" when restoring values. $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	needs to be visible to test cases $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ add variables for access to context and variables
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ ensure variable has been provided
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	otherwise we use "text/xml" as the default $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	could time this res.sampleend() if sampleend() is not called elapsed time will remain zero todo distinguish errors better $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ - all threads all threads
WITHOUT_CLASSIFICATION	$non-nls-1$ -- end of names used in jmx files
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	package access for use by test code $non-nls-1$
WITHOUT_CLASSIFICATION	set the title for the first tab $non-nls-1$ remove the other tabs if present $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-2$ $non-nls-3$ $non-nls-1$
WITHOUT_CLASSIFICATION	public final static string connection = "mongosourceelement.connection" $non-nls-1$ public final static string source = "mongosourceelement.source" $non-nls-1$ public final static string auto_connect_retry = "mongosourceelement.autoconnectretry" $non-nls-1$ public final static string connections_per_host = "mongosourceelement.connectionsperhost" $non-nls-1$ public final static string connect_timeout = "mongosourceelement.connecttimeout" $non-nls-1$ public final static string continue_on_insert_error = "mongosourceelement.continueoninserterror" $non-nls-1$ public final static string max_auto_connect_retry_time = "mongosourceelement.maxautoconnectretrytime" $non-nls-1$ public final static string max_wait_time = "mongosourceelement.maxwaittime" $non-nls-1$ public final static string socket_timeout = "mongosourceelement.sockettimeout" $non-nls-1$ public final static string socket_keep_alive = "mongosourceelement.socketkeepalive" $non-nls-1$ public final static string threads_allowed_to_block_multiplier = "mongosourceelement.threadsallowedtoblockforconnectionmultiplier" $non-nls-1$ public final static string fsync = "mongosourceelement.fsync" $non-nls-1$ public final static string safe = "mongosourceelement.safe" $non-nls-1$ public final static string wait_for_journaling = "mongosourceelement.waitforjournaling" $non-nls-1$ public final static string write_operation_number_of_servers = "mongosourceelement.writeoperationnumberofservers" $non-nls-1$ public final static string write_operation_timeout = "mongosourceelement.writeoperationtimeout" $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.http.conn.ssl.sslsocketfactory#createlayeredsocket(java.net.socket java.lang.string int boolean)
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.protocol.http.util.accesslog.logfilter#excpattern(java.lang.string)
WITHOUT_CLASSIFICATION	(non-javadoc) a new instance is created for each thread group and the clone() method is then called to create copies for each thread in a thread group. this means that the lock object is common to a thread group separate thread groups have separate locks. if this is not intended the lock object could be made static. @see java.lang.object#clone()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.visualizers.request.requestview#setsamplerresult(java.lang.object)
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.visualizers.request.requestview#getpanel()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.visualizers.request.requestview#getlabel()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.visualizers.samplerresulttab#cleardata()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.log.logtarget#processevent(org.apache.log.logevent)
WITHOUT_CLASSIFICATION	this is required so that @see org.apache.jmeter.gui.tree.jmetertreemodel.getnodesoftype() can find the clearable nodes - the userobject has to implement the interface.
WITHOUT_CLASSIFICATION	n.b. originally called clear() @see also jmeterguicomponent
WITHOUT_CLASSIFICATION	for unit tests @see testcsvsaveservice
WITHOUT_CLASSIFICATION	@see getstaticlabel
WITHOUT_CLASSIFICATION	(non-javadoc) @see javax.swing.jtabbedpane#setselectedindex(int)
WITHOUT_CLASSIFICATION	(non-javadoc) @see jodd.lagarto.emptytagvisitor#script(jodd.lagarto.tag java.lang.charsequence)
WITHOUT_CLASSIFICATION	(non-javadoc) @see jodd.lagarto.emptytagvisitor#tag(jodd.lagarto.tag)
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.protocol.http.parser.htmlparser#isreusable()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.protocol.http.parser.htmlparser#isreusable()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.xml.sax.helpers.defaulthandler#error(org.xml.sax.saxparseexception)
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.xml.sax.helpers.defaulthandler#fatalerror(org.xml.sax.saxparseexception)
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.protocol.http.sampler.httpsamplerbase#testended()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.protocol.http.sampler.httpsamplerbase#testended(java.lang.string)
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.protocol.http.sampler.httpsamplerbase#testiterationstart(org.apache.jmeter.engine.event.loopiterationevent)
WITHOUT_CLASSIFICATION	@see mergefileproperties must be private as the file list needs special handling $non-nls-1$ mimetype is kept for backward compatibility with old test plans $non-nls-1$ file_name is kept for backward compatibility with old test plans $non-nls-1$
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.http.conn.ssl.sslsocketfactory#createsocket(org.apache.http.params.httpparams)
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.visualizers.request.requestview#setsamplerresult(java.lang.object)
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.visualizers.request.requestview#getlabel()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.gui.abstractjmeterguicomponent#cleargui()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.util.localechangelistener#localechanged(org.apache.jmeter.util.localechangeevent)
WITHOUT_CLASSIFICATION	(non-javadoc) @see java.lang.runnable#run()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.report.engine.reportengine#configure(org.apache.jorphan.collections.hashtree)
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.report.engine.reportengine#runreport()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.report.engine.reportengine#stopreport()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.report.engine.reportengine#reset()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.report.engine.reportengine#exit()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.gui.jmeterguicomponent#getlabelresource()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.gui.jmeterguicomponent#createpopupmenu()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.gui.jmeterguicomponent#getmenucategories()
WITHOUT_CLASSIFICATION	@see org.apache.jmeter.report.gui.action.command#getactionnames()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.report.writers.pagesummary#getfilename()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.report.writers.pagesummary#getpagetitle()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.report.writers.pagesummary#issuccessful()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.report.writers.pagesummary#pagestarted()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.report.writers.pagesummary#pageended()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.report.writers.pagesummary#setfilename(java.lang.string)
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.report.writers.pagesummary#setpagetitle(java.lang.string)
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.report.writers.pagesummary#setsuccessful(boolean)
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.gui.jmeterguicomponent#createtestelement()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.gui.jmeterguicomponent#modifytestelement(org.apache.jmeter.testelement.testelement)
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.testelement.teststatelistener#testended()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.testelement.teststatelistener#testended(java.lang.string)
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.testelement.teststatelistener#teststarted()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.testelement.teststatelistener#teststarted(java.lang.string)
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.protocol.http.sampler.httpsamplerbase#testiterationstart(org.apache.jmeter.engine.event.loopiterationevent)
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ so we can add them again in init
WITHOUT_CLASSIFICATION	independent frame to allow it to be overlaid by the main frame $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$$non-nls-2$
WITHOUT_CLASSIFICATION	run menu $non-nls-1$
WITHOUT_CLASSIFICATION	edit menu $non-nls-1$
WITHOUT_CLASSIFICATION	file menu $non-nls-1$
WITHOUT_CLASSIFICATION	protected fields jmetertoolbar class can be use to create another toolbar (plugin etc.) $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	reuse documentation $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ resource name
WITHOUT_CLASSIFICATION	$non-nls-1$ resource name
WITHOUT_CLASSIFICATION	$non-nls-1$ resource name
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	the following are used to set the result details on return from the script $non-nls-1$ $non-nls-2$ $non-nls-1$
WITHOUT_CLASSIFICATION	add samplerdata for consistency with beanshell sampler $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	add alias for original stringfromfile name (had only one underscore) $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	functions are wrapped in ${ and } $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$$non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	the headers are written using iso_8859_1 encoding $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ we only support chunked transfer encoding
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ resource name
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$$non-nls-2$$non-nls-3$ $non-nls-1$
WITHOUT_CLASSIFICATION	allow headers to override host setting $non-nls-1$ host
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	revert
WITHOUT_CLASSIFICATION	revert to previous behaviour $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	not a real sampler
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	if we still can't find it just try using all of the text
WITHOUT_CLASSIFICATION	method called by add is synchronized this is a different model from the one used by the result collector
WITHOUT_CLASSIFICATION	we are displaying an assertionresult
WITHOUT_CLASSIFICATION	creates one of the fields used to display the graph's current values. @param color the color used to draw the value. by convention this is the same color that is used to draw the graph for this value and in the choose panel. @param length the number of digits which the field should be able to display @return a text field configured to display one of the current graph values private jtextfield createinfofield(color color int length) { jtextfield field = new jtextfield(length) field.setborder(borderfactory.createemptyborder(0 0 0 0)) field.seteditable(false) field.setforeground(color) field.setbackground(getbackground()) the text field should expand horizontally but have a fixed height field.setmaximumsize(new dimension( field.getmaximumsize().width field.getpreferredsize().height)) return field }
WITHOUT_CLASSIFICATION	allow functions etc to register for teststopped notification. only used by the function parser so far. the list is merged with the testlisteners and then cleared.
WITHOUT_CLASSIFICATION	insert the workbench node
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ look and feel prefix $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ enable/disable $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	we stay within the same parent node
WITHOUT_CLASSIFICATION	we stay within the same parent node
WITHOUT_CLASSIFICATION	get the preference for the recent files
WITHOUT_CLASSIFICATION	get the preference for the recent files
WITHOUT_CLASSIFICATION	find and set the file for this recent file command
WITHOUT_CLASSIFICATION	check if laf is a built-in one
WITHOUT_CLASSIFICATION	using index 0 is voluntary as child is removed in next step and added to new parent
WITHOUT_CLASSIFICATION	or a treenode from the same tree
WITHOUT_CLASSIFICATION	extract transfer data.
WITHOUT_CLASSIFICATION	insert a clone of the node the original one will be removed by the exportdone method the children are not cloned but moved to the cloned node working on the original node would be harder as you'll have to deal with the insertion index offset if you re-order a node inside a parent
WITHOUT_CLASSIFICATION	the following array must agree with dateformat it is used to translate the positions in the buffer to the values used by the calendar class for the field id. current format mm/dd/yyyy hhmmss 01234567890123456789 ^buffer positions
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	used by samplesaveconfigurationconverter.unmarshall()
WITHOUT_CLASSIFICATION	note that samplestarted() and samplestopped() is not made to appear in synch with sampleoccured() when replaying held samples. for now this is not critical since samplestarted() and samplestopped() is not used but it may become an issue in the future. then these events must also be stored so that replay of all events may occur and in the right order. each stored event must then be tagged with something that lets you distinguish between occured started and ended.
WITHOUT_CLASSIFICATION	allow testresultwrapper to feed back the samples this is effectively the same as saver.fromxml(inputstream) except we get to provide the dataholder don't know why there is no method for this in the xstream class
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	n.b. default charset is used deliberately here
WITHOUT_CLASSIFICATION	catch errors and rethrow as conversionexception so we get location details
WITHOUT_CLASSIFICATION	version information for test plan header this is written to jmx files by scriptwrapperconverter also to jtl files by resultcollector $non-nls-1$
WITHOUT_CLASSIFICATION	for converters to use
WITHOUT_CLASSIFICATION	get the outputwriter to use
WITHOUT_CLASSIFICATION	use deprecated method to avoid duplicating code
WITHOUT_CLASSIFICATION	get the inputreader to use
WITHOUT_CLASSIFICATION	get the inputreader to use
WITHOUT_CLASSIFICATION	normal output ---- debugging information ---- required-type org.apache.jorphan.collections.listedhashtree cause-message webservicesampler webservicesampler class org.apache.jmeter.save.scriptwrapper message webservicesampler webservicesampler line number 929 path /jmetertestplan/hashtree/hashtree/hashtree[4]/hashtree[5]/webservicesampler cause-exception com.thoughtworks.xstream.alias.cannotresolveclassexception -------------------------------
WITHOUT_CLASSIFICATION	--------------------------------------------------------------------- xml result file constants and field name constants ---------------------------------------------------------------------
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	it is the sub sampler of the transaction that will be sampled
WITHOUT_CLASSIFICATION	n.b. this is only called at the start and end of a thread so there is not necessary to cache the search results thus saving memory
WITHOUT_CLASSIFICATION	if parent is ok but child failed add a message and flag the parent as failed
WITHOUT_CLASSIFICATION	private static configuration getconfiguration(assertionresult assresult) { defaultconfiguration config = new defaultconfiguration(assertion_result_tag_name "jmeter save service") config.setattribute(failure_message assresult.getfailuremessage()) config.setattribute(error "" + assresult.iserror()) config.setattribute(failure "" + assresult.isfailure()) return config }
WITHOUT_CLASSIFICATION	see if this works it did not let's try some other formats
WITHOUT_CLASSIFICATION	both these are needed in the list even though they set the same variable
WITHOUT_CLASSIFICATION	class to handle generating the delimited string. - adds the delimiter if not the first call - quotes any strings that require it
WITHOUT_CLASSIFICATION	<p> returns a <code>string</code> value for a character-delimited column value enclosed in the quote character if required. </p> <p> if the value contains a special character then the string value is returned enclosed in the quote character. </p> <p> any quote characters in the value are doubled up. </p> <p> if the value does not contain any special characters then the string value is returned unchanged. </p> <p> n.b. the list of special characters includes the quote character. </p> @param input the input column string may be null (without enclosing delimiters) @param specialchars special characters second one must be the quote character @return the input string enclosed in quote characters if the value contains a special character <code>null</code> for null string input
WITHOUT_CLASSIFICATION	read first line and forget
WITHOUT_CLASSIFICATION	read first line and forget
WITHOUT_CLASSIFICATION	obtain a value of the appropriate type for this property.
WITHOUT_CLASSIFICATION	use negative condition so missing (null) value is treated as false
WITHOUT_CLASSIFICATION	the default class convert int to integer etc
WITHOUT_CLASSIFICATION	might be null (e.g. in testing)
WITHOUT_CLASSIFICATION	true iff we're currently processing an event triggered by the user selecting the "edit" option. used to prevent reverting the combo to non-editable during processing of secondary events.
WITHOUT_CLASSIFICATION	programming error. don't continue.
WITHOUT_CLASSIFICATION	creation of the customizer and gui initialization is delayed until the first configure call. we don't need all that just to find out the static label menu categories etc!
WITHOUT_CLASSIFICATION	<p> super-class for testelements that can be applied to main sample sub-samples or both. [assertions use a different class because they use a different value for the {@link #getscopename()} constant] </p> <p> their corresponding gui classes need to add the scopepanel to the gui using the abstractxxxgui methods <ul> <li>createscopepanel()</li> <li>savescopesettings()</li> <li>showscopesettings()</li> </ul> </p>
WITHOUT_CLASSIFICATION	testbeanhelper.prepare() is ok
WITHOUT_CLASSIFICATION	trigger end of loop condition on all parent controllers of current sampler
WITHOUT_CLASSIFICATION	ok to call testbeanhelper.prepare()
WITHOUT_CLASSIFICATION	ok to call testbeanhelper.prepare()
WITHOUT_CLASSIFICATION	ok to call testbeanhelper.prepare()
WITHOUT_CLASSIFICATION	original (rather odd) behaviour start at the end
WITHOUT_CLASSIFICATION	property names to preload into jmeter variables
WITHOUT_CLASSIFICATION	list of active threads
WITHOUT_CLASSIFICATION	set the endtime for the thread duration is in seconds
WITHOUT_CLASSIFICATION	n.b. we don't wait for the thread to complete as that would prevent parallel tgs
WITHOUT_CLASSIFICATION	for example jarfile/jmeter/lib/ext/apachejmeter_core.jar!/org/apache/jmeter/util/jmeterversion.class or if using an ide file/workspaces/jmeter/build/core/org/apache/jmeter/util/jmeterversion.class
WITHOUT_CLASSIFICATION	for use by the server script
WITHOUT_CLASSIFICATION	override so we can intercept the stream
WITHOUT_CLASSIFICATION	todo - charset?
WITHOUT_CLASSIFICATION	todo - charset?
WITHOUT_CLASSIFICATION	todo - charset?
WITHOUT_CLASSIFICATION	todo - charset?
WITHOUT_CLASSIFICATION	todo - charset?
WITHOUT_CLASSIFICATION	api expects null not empty array see httpdocs.oracle.com/javase/6/docs/api/javax/net/ssl/x509keymanager.html
WITHOUT_CLASSIFICATION	the copying thread won't generally detect eof
WITHOUT_CLASSIFICATION	n.b. it seems that opera needs a chain in order to accept server keys signed by the intermediate ca opera does not seem to like server keys signed by the root (self-signed) cert.
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	needs to be volatile as may be referenced from multiple threads todo see if this can be made final somehow
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
DESIGN	add logtargets to root logger fixme what's the clean way to add a logtarget afterwards ? @param logtargets logtarget array
DESIGN	todo find a way to avoid the cost of creating a string here -- probably a new patternmatcherinput working on a byte[] would do better.
DESIGN	not clear what can cause this ? conflicting versions perhaps
DESIGN	result.seterror(true) todo is this the correct strategy? throw exception allow assertion to pass
DESIGN	todo replace with proper exception
DESIGN	todo replace with proper exception return with an error
DESIGN	mask values for test_type todo remove either match or contains - they are mutually exckusive
DESIGN	todo ought to be a filechooser
DESIGN	todo do we need to add a charset for the file contents? $non-nls-1$
DESIGN	this could perhaps be a variable name
DESIGN	todo - should we skip processing here?
DESIGN	should we return fragment as text rather than text of fragment?
DESIGN	todo should this be cleardata()?
DESIGN	todo - is this used? (apart from test code)
DESIGN	provide a description of this timer class. todo is this ever used? i can't remember where. remove if it isn't -- todo or obtain text from bean's displayname or shortdescription. @return the description of this timer class.
DESIGN	todo - is this needed?
DESIGN	n.b. needs to implement visualizer so that testbeangui can find the correct gui class
DESIGN	todo should these fields be public? they don't appear to be used externally. also are they any different from httpconstants.get etc. ? in some cases they seem to be used as the method name from the tomcat log. however the rmethod field is used as the value for httpsamplerbase.method for which httpconstants is most approriate.
DESIGN	in milli-seconds todo properties?
DESIGN	allow jmeter to render frames (and relative images) must be done after setcontenttype [why?]
DESIGN	n.b. needs to implement visualizer so that testbeangui can find the correct gui class
DESIGN	showing large strings can be very costly so we will avoid doing so if the response data is larger than 200k. todo instead we could delay doing the result.settext call until the user chooses the "response data" tab. plus we could warn the user if this happens and revert the choice if he doesn't confirm he's ready to wait.
DESIGN	n.b. needs to implement visualizer so that testbeangui can find the correct gui class todo - remove unsharedcomponent ? probably does not make sense for a testbean.
DESIGN	it might be useful also to make this available in the 'request' tab for when posting json.
DESIGN	should header be saved with the data? $non-nls-1$
DESIGN	should header be saved with the data? $non-nls-1$
DESIGN	not used protected double[][] data = null
DESIGN	todo work out how to search the xml pane
DESIGN	notused long[] longsample = getsamples() load each node
DESIGN	hack to allow automated tests to find when test has ended transient boolean testended = false
DESIGN	$non-nls-1$ so it agrees with above todo perhaps should share code with __time() function for this $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$
DESIGN	hack to resolve modulecontrollers in non gui mode
DESIGN	todo this bit of code needs to be tidied up unfortunately modulecontroller is in components not core bug 47165
DESIGN	todo move this to components -- the only reason why it's in core is because it's used as a guinea pig by a couple of tests.
DESIGN	todo - should this use setfirst() ?
DESIGN	if child of transactioncontroller is a throughputcontroller and tpc does not sample its children then we will have this todo should this be at warn level ?
DESIGN	hack to allow external control
DESIGN	todo should level be more than debug ?
DESIGN	todo should this also clear isdynamic rawparameters permanentresults?
DESIGN	todo make the running indicator its own class instead of a jbutton
DESIGN	todo this method doesn't appear to be used.
DESIGN	todo this method doesn't appear to be used.
DESIGN	todo - why lower case? ok to use the default locale?
DESIGN	todo consider removing this method and providing method wrappers instead. this would allow the gui package to do any additional clearups if required as has been done with cleartestplan()
DESIGN	fixme why is searchtf not getting focus correctly after having been setvisible(false) once
DESIGN	todo i believe the following code (to the end of the method) is obsolete since namepanel no longer seems to be the gui for any component
DESIGN	notused private void initbuttonmap() { }
DESIGN	allow serializable test to work todo is the serializable test necessary now that jmetertreenode is no longer a gui component?
DESIGN	avoid error in ant task tests (good way?)
DESIGN	does not appear to be used called by mainframe#seteditaddmenu() but that is not called
DESIGN	jmetertreenode and testbeangui are special gui classes and aren't intended to be added to menus todo find a better way of checking this
DESIGN	should the testbean be hidden?
DESIGN	not used
DESIGN	not used
DESIGN	todo should class implement samplelistener?
DESIGN	not used
DESIGN	not used
DESIGN	todo - perhaps save other items such as headers?
DESIGN	todo should errors be thrown back through rmi?
DESIGN	not used
DESIGN	not used
DESIGN	@guardedby("samplestore") todo perhaps use concurrenthashmap ?
DESIGN	todo should this throw an error?
DESIGN	not used
DESIGN	yuck tiffimageencoder uses error to report runtime problems
DESIGN	todo clazz is probably always the same as testclass
DESIGN	todo does not work yet need to determine the sample type
DESIGN	programming error bail out.
DESIGN	todo - use or remove
DESIGN	a check just in case
DESIGN	a check just in case
DESIGN	todo should this implement supportscustomeditor() ?
DESIGN	todo is this ever used?
DESIGN	programming error bail out.
DESIGN	todo - yet another ambiguous name - does it need changing? see also clearable jmeterguicomponent
DESIGN	surely this is always null in the constructor?
DESIGN	note source and line arguments are nonsense in a call(). any way to make these arguments sensible?
DESIGN	todo probably not needed
DESIGN	clone will produce correct type todo but why do we need to clone the list?
DESIGN	all keys in messages.properties are lowercase (historical reasons?)
DESIGN	todo needs to be synch? probably not changed after threads have started jmeter home directory (excludes trailing separator) jmeter bin directory (excludes trailing separator)
DESIGN	todo why empty block ?
DESIGN	todo is sync really needed?
DESIGN	todo is this correct?
DESIGN	todo should equals and hashcode depend on field other than count?
DESIGN	todo does this method need to be public? it isn't currently called outside of this class.
DESIGN	todo should this method be synchronized ? all other function execute are
DESIGN	todo improve the error handling
DESIGN	todo improve the error handling
DESIGN	not used
DESIGN	keep the unexpanded path todo - allow directories to end with .jar by removing this check?
DESIGN	todo should we allow null for non-primitive types?
DESIGN	todo field always true what for ?
DESIGN	todo - should this be done for embedded usage? note the element is a configtestelement when used standalone so we cannot use ftpsampler access methods
DESIGN	not currently used
DESIGN	todo is this possible?
DESIGN	todo not used by gui
DESIGN	todo replace all this url2 mess with a proper method "areequivalent(url1 url2)" that would also ignore case in protocol and host names etc. -- use that method in the cookiemanager too.
DESIGN	todo should really return most specific (i.e. longest) match.
DESIGN	todo improve string version to better match browser behaviour? e.g. do browsers regard httphost/ and httphost80/ as the same? if so it would be better to reflect this in the string
DESIGN	todo is it the best way ? httpsissues.apache.org/bugzilla/show_bug.cgi?id=55634
DESIGN	$non-nls-1$ todo should this be a variable?
DESIGN	todo - should this be done when the client is created? if so then the details need to be added as part of httpclientkey
DESIGN	todo is null correct?
DESIGN	$non-nls-1$ todo can this be obtained from the file somehow?
DESIGN	todo - belongs elsewhere
DESIGN	todo - should we call start() and stop()?
DESIGN	$non-nls-1$ todo - change to use url version? will this affect test plans?
DESIGN	todo - is this the correct default?
DESIGN	$non-nls-1$ todo should this be variable?
DESIGN	may be replaced later
DESIGN	todo move to utils class (jmeterutils?)
DESIGN	todo find out how to retrieve these from the script at present the script has to use sampleresult methods to set them. $non-nls-1$ $non-nls-1$
DESIGN	todo ought to be a filechooser
DESIGN	remember to change this when the class changes
DESIGN	todo process warnings? set code and message to success?
DESIGN	$non-nls-1$ todo - probably wrong
DESIGN	should we use java.naming.security.[principal|credentials] to create the queueconnection?
DESIGN	dircontext dc = todo perhaps return this?
DESIGN	todo is this sensible?
DESIGN	$non-nls-1$ todo - use a different format here?
DESIGN	todo - charset? todo this should really be request data but there is none
DESIGN	results.setresponsecode("???") todo what code should be set here?
DESIGN	results.setresponsecode("???") todo what code should be set here?
DESIGN	notused yet private jtextfield filename
DESIGN	todo should this be indeterminate? todo should this be indeterminate? $non-nls-1$ $non-nls-1$
DESIGN	all the others could be private too?
DESIGN	todo fetch list of languages from a file? n.b. changes to language list need to be reflected in resources/packagetest.java
DESIGN	method is broken anyway
DESIGN	todo fix this when there is a real implementation
DESIGN	jmetertreenode and testbeangui are special gui classes and aren't intended to be added to menus todo find a better way of checking this
DESIGN	fixme broken code
DESIGN	todo i believe the following code (to the end of the method) is obsolete since namepanel no longer seems to be the gui for any component
DESIGN	allow serializable test to work todo is the serializable test necessary now that jmetertreenode is no longer a gui component?
DESIGN	todo can this ever happen?
DESIGN	method is broken anyway
DESIGN	todo fix this when there is a real implementation
DESIGN	notused org.apache.jmeter.monitor.model.status st = todo - charset?
DESIGN	todo this is a bit fragile
DESIGN	todo should this be ok ? assertequals(contentencoding s.getcontentencoding()) check arguments we should have one argument with the value equal to the post body
DESIGN	all form parameter always have text/plain as mime type todo make this a parameter?
DESIGN	maps to contain page and form encodings todo - do these really need to be shared between all proxy instances?
DESIGN	java 1.6.0_22+ no longer allows content-length to be set so don't check it. see httpbugs.sun.com/bugdatabase/view_bug.do?bug_id=6996110 todo any point in checking the other headers?
DESIGN	find all beans out there and check their resource property files - check that non-default property files don't have any extra keys. - check all necessary properties are defined at least in the default property file except for beans whose name contains "experimental" or "alpha". todo - check property files don't have duplicate keys (is this important)
DESIGN	todo should setbaseforscript be called here rather than above?
DESIGN	provide dummy implementations to suppress download and display of related resources - frames - images todo create better dummy displays todo suppress link somehow
DESIGN	should we run a beanshell script on startup? $non-nls-1$
DESIGN	add a system property so samplers can check to see if jmeter is running in nongui mode $non-nls-1$ todo - why does it create a new instance?
DESIGN	todo this class looks a lot like argumentspanel. what exactly is the difference? could they be combined? note it seems that this class is not actually used
DESIGN	todo - why use space?
DESIGN	todo - why use space?
DESIGN	menubar related methods todo do we really need to have all these menubar methods duplicated here? perhaps we can make the menu bar accessible through guipackage?
DESIGN	programming error bail out.
DESIGN	programming error bail out.
DESIGN	programming error bail out.
DESIGN	todo - can this eever happen?
DESIGN	todo fix up for nimbus laf
DESIGN	maybe do nothing at all?
DESIGN	does not appear to be used (yet)
DESIGN	make it easier to enter a tab (can use \<tab> but that is awkward)
DESIGN	settings readresolve sets these from the server/client values as appropriate todo would be nice to make these final not 100% sure volatile is needed as not changed after creation
DESIGN	todo - should this be restored?
DESIGN	todo should this be restored?
DESIGN	programming error bail out.
DESIGN	not used as the <testresult> element is generated by the resultcollector class
DESIGN	todo the above works in the current situation but it's just a hack. how to get each editor to report whether it wants to grow bigger? whether the property label should be at the left or at the top of the editor? ?
DESIGN	how many classes can we assign from? todo there must be a nicer way
DESIGN	does not appear to be used yet
DESIGN	setting samplingstarted before the contollers are initialised allows them to access the running values of functions and variables (however it does not seem to help with the listeners)
DESIGN	does not appear to be used
DESIGN	todo should equals and hashcode depend on field other than count?
DESIGN	todo what is this for?
DESIGN	todo cpercent is the same as cmedian here - why? and why pass it to "distributionline"?
DESIGN	todo does this method need to be public? it isn't currently called outside of this class.
DESIGN	todo should the method signature of this method be changed to match the super-implementation (using a testelement parameter instead of abstractlistenerelement)? this would require an instanceof check before adding the listener (below) but would also make the behavior a bit more obvious for sub-classes -- the java rules dealing with this situation aren't always intuitive and a subclass may think it is calling this version of the method when it is really calling the superclass version instead.
DESIGN	todo only clear the relevant entry - if possible
DESIGN	todo only clear the relevant entry - if possible
DESIGN	not used
DESIGN	todo not used?
DESIGN	todo should this be getmin()?
DESIGN	n.b. commons io ioutils has equivalent methods these were added before io was included todo - perhaps deprecate these in favour of commons io?
DESIGN	remember to change this when the class changes
DESIGN	wrapper to convert a junit4 class into a testcase todo - work out how to convert junit4 assertions so they are treated as failures rather than errors
DESIGN	very wrong.
DESIGN	sampleevent is not passed jmetervariables because they don't make sense for proxy recording todo - is this the correct threadgroup name?
DESIGN	todo perhaps make more specific than this? no point parsing anything else e.g. gif
DESIGN	set the content type todo - needed? string multipartcontenttype = multipart.getcontenttype().getvalue() post.setheader(header_content_type multipartcontenttype)
DESIGN	todo merge put and post methods as far as possible. e.g. post checks for multipart form/files and if not invokes senddata(httpentityenclosingrequestbase)
DESIGN	todo needed here because currently done on sample completion in jmeterthread but that only catches top-level samples.
DESIGN	todo can this happen?
DESIGN	todo downcase upper case non-final variables
DESIGN	not used transient protected threadgroup threadgroup = null anyway was this supposed to be the class from java.lang or jmeter.threads?
DESIGN	todo - should the encoding be configurable? $non-nls-1$
DESIGN	maybe we should consider creating a global cache for the random files to make jmeter more efficient.
DESIGN	maybe we should consider creating a global cache for the random files to make jmeter more efficient.
DESIGN	todo do we need to implement any kind of connection pooling? if so which connections should be shared? should threads share connections to the same destination? what about cross-thread sharing?
DESIGN	menubar related methods todo do we really need to have all these menubar methods duplicated here? perhaps we can make the menu bar accessible through guipackage?
DESIGN	notused private string chosenfile
DESIGN	todo fix this when there is a real implementation
DESIGN	todo - should lf-only eol be allowed?
DESIGN	get the content length it tells us how much data to read todo maybe support chunked encoding then we cannot rely on content length
DESIGN	this is effectively the same as saver.toxml(object writer) except we get to provide the dataholder don't know why there is no method for this in the xstream class
DESIGN	todo should this set the thread names for all the subsamples? might be more efficient than fetching the name elsewehere
DESIGN	todo is this the right thing to do?
DESIGN	hack to reduce the need to load every class in non-gui mode which only needs functions todo perhaps use bcel to scan class files instead? class name should contain this string class name should not contain this string
DESIGN	note the handling of simple- vs. double-quotes could be formally more accurate but i can't imagine a session id containing either so we should be ok. the whole set of expressions is a quick hack anyway so who cares.
DESIGN	don't allow override of content-length this helps with soapsampler hack too todo - what other headers are not allowed?
DESIGN	aggregates sample results for use by the statistical remote batch mode. samples are aggregated by the key defined by getkey(). todo merge error count into parent class?
DESIGN	todo strings should be resources
DESIGN	should we add the "_" separator?
DESIGN	todo validate contenttype for reasonable types?
DESIGN	a dom tree panel for to display response as tree view author <a href="mailtod.maung@mdl.com">dave maung</a> todo implement to find any nodes in the tree using treepath.
DESIGN	todo implement other non-text types
DESIGN	notused guipackage guipack =
DESIGN	todo - could this be return?
DESIGN	does the system support unc paths? if so may need to fix them up later
DESIGN	todo could these be done earlier (or just once?)
DESIGN	a little hack - add each listener to the start of the list - this ensures that the thread running the show is the first listener and can modify certain values before other listeners are called.
DESIGN	ensure that the sample variables are correctly initialised for each run. todo is this the best way to do this? should it be done elsewhere ?
DESIGN	a hack to make user-defined variables in the testplan element more dynamic
DESIGN	add fix for deadlocks see see httpsissues.apache.org/bugzilla/show_bug.cgi?id=48350
DESIGN	todo should level be more than debug ?
DESIGN	todo does not appear to be used
DESIGN	todo does not appear to be used
DESIGN	todo does not appear to be used
DESIGN	hack to get full modifier value
DESIGN	todo not used - make private?
DESIGN	should the samples be aggregated on thread name or thread group (default) ?
DESIGN	should the samples be aggregated on thread name or thread group (default) ?
DESIGN	todo do contenttype and/or dataencoding belong in httpsampleresult instead?
DESIGN	todo do this more efficiently
DESIGN	todo is this really necessary?
DESIGN	houston we have a problem !!
DESIGN	todo turn into method?
DESIGN	todo appears to duplicate the threadname field in sampleresult
DESIGN	todo should this be jtlsaver? only seems to be called by monitorhealthvisualzer
DESIGN	todo provide proper name?
DESIGN	slight hack - we need to ensure the testclass is not reset by the previous call
DESIGN	these must be set before reading/writing the xml. rather a hack but saves changing all the method calls to include an extra variable. afaik the variables should only be accessed from one thread so no need to synchronize.
DESIGN	todo - convert to work more like upgrade.properties/nameupdater.java special processing is carried out for the header class the string property testelement.name is converted to header.name for example <elementprop name="user-agent" elementtype="org.apache.jmeter.protocol.http.control.header"> <stringprop name="header.value">mozilla%2f4.0+%28compatible%3b+msie+5.5%3b+windows+98%29</stringprop> <stringprop name="testelement.name">user-agent</stringprop> </elementprop> becomes <elementprop name="user-agent" elementtype="org.apache.jmeter.protocol.http.control.header"> <stringprop name="header.value">mozilla%2f4.0+%28compatible%3b+msie+5.5%3b+windows+98%29</stringprop> <stringprop name="header.name">user-agent</stringprop> </elementprop>
DESIGN	todo should this be called if basedir == null?
DESIGN	todo is this silent exception intended
DESIGN	todo - does not appear to be called directly
DESIGN	todo only called by userparameterxmlparser.getxmlparameters which is a deprecated class
DESIGN	todo - move to jorphanutils?
DESIGN	todo - move to jorphanutils?
DESIGN	todo - move to jorphanutils?
DESIGN	todo - perhaps this should be a fatal error?
DESIGN	hack bsh-2.0b5.jar bshscriptengine implements compilable but throws "java.lang.error unimplemented"
DESIGN	is it an exception wrapped in a javascriptexception?
DESIGN	custom trustmanager ignores all certificate errors todo implement conditional checking and logging (derived from authsslx509trustmanager in httpclient contrib directory)
DESIGN	todo is this correct? if this is not the first file we can't write its header now for simplicity we always save it even if there is only one file
DESIGN	temporary fix to allow default protocol to be changed
DESIGN	todo why not use the super class value?
DESIGN	todo should the engine be static?
DESIGN	todo - not sure this is the best method
DESIGN	todo - is this the correct default?
DESIGN	todo is this the correct default?
DESIGN	todo hack to be removed later
DESIGN	could we drop the sync here?
DESIGN	may be replaced later
DESIGN	may be replaced later
DESIGN	hack force the controller to load its tree
DESIGN	todo needs cleaning up
DESIGN	todo - should this return something else?
DESIGN	hack to allow entire url to be provided in host field
DESIGN	todo make static?
DESIGN	todo should we allow mimetype only?
DESIGN	todo method with 0 reference really useful ?
DESIGN	todo method with 0 reference really useful ?
DESIGN	todo set different status if not enough messages found?
DESIGN	todo turn into parameter?
DESIGN	todo improve this
DESIGN	todo exact ordering is only required for some tests change the comparison to do a set compare where necessary.
DESIGN	todo does it matter that an empty line will terminate the loop? csv output files should never contain empty lines so probably not if so then need to check whether the reader is at eof
DESIGN	check if a string is a valid jmeter 'expression'. <p> the current implementation is very basic it just accepts any string containing "${" as a valid expression. todo improve but keep returning true for "${}".
DESIGN	i guess this can happen as a result of a bad file read? in this case it would be better to replace the incorrect value with anything valid e.g. the default value for the property. but for the time being i just prefer to be aware of any problems occuring here most likely programming errors so i'll bail out. (ms note) can't bail out - newly create elements have blank values and must get the defaults. also when loading previous versions of jmeter test scripts some values may not be right and should get default values - ms todo review this and possibly change to
DESIGN	todo temporary hack to avoid unnecessary bug reports for subclasses
DESIGN	remember to change this when the class changes
DESIGN	remember to change this when the class changes
DESIGN	remember to change this when the class changes
DESIGN	todo consider using private logs for each derived class
DESIGN	the following variables are set by standardjmeterengine. this is done before start() is called so the values will be published to the thread safely todo - consider passing them to the constructor so that they can be made final (to avoid adding lots of parameters perhaps have a parameter wrapper object.
DESIGN	hack save the package for any transaction controllers
DESIGN	todo remove this useless entry parameter
DESIGN	todo - how to handle thread stopped here
DESIGN	fix bug -d arg1=arg2 was causing parse error however --define arg1=arg2 is ok this seems to be because the parser skips the terminator for the long options but was not doing so for the short options.
DESIGN	todo specify collection type without breaking callers
DESIGN	todo should this just call super()?
DESIGN	todo should this just call super()?
DESIGN	maybe move to vector if mt problems occur
DESIGN	maybe move to vector if mt problems occur
DESIGN	maybe move to vector if mt problems occur
DESIGN	todo field always true what for ?
DESIGN	code also allows for lf only (not sure why - perhaps because the test code uses it?)
DESIGN	holder for storing cache details. perhaps add original response later?
DESIGN	todo correct url?
DESIGN	hack to skip processing
DESIGN	hack to skip processing
DESIGN	hack to skip processing
DESIGN	won't work writeerrortoclient(httpreplyhdr.forminternalerror()) generate result (if nec.) and populate it hack to skip processing
DESIGN	todo replace repeated substr() above and below with more efficient method.
DESIGN	todo this assumes that the redirected response will always immediately follow the original response. this may not always be true. is there a better way to do this?
DESIGN	todo - could be converted to generic class?
DESIGN	hack
DESIGN	todo - needs more work
DESIGN	todo is this a sensible number? $non-nls-1$
DESIGN	can be null (not sure why)
DESIGN	todo this is not populated currently
DESIGN	this can lead to code smell meh! do we care
DESIGN	todo is this the best way to do this?
DESIGN	todo - should this be a failure?
DESIGN	todo - improve this check
DESIGN	todo add some real tests now that split() has been removed
DESIGN	why does this not call guiinstance.cleartestplan() ? is there a reason for not clearing everything?
DESIGN	programming error bail out.
WITHOUT_CLASSIFICATION	private mainframe _mainframe
WITHOUT_CLASSIFICATION	setup the applications look and feel.
WITHOUT_CLASSIFICATION	i18n[application.error.closefileviewers=unable to close all file viewers]
WITHOUT_CLASSIFICATION	save options selected for datatype-specific properties
WITHOUT_CLASSIFICATION	return _mainframe
WITHOUT_CLASSIFICATION	_mainframe = new mainframe(this)
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	i18n[application.splash.showmainwindow=showing main window]
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	i18n[oracle.sqltext=sql text]
WITHOUT_CLASSIFICATION	i18n[application.error.loadsqlhistory=unable to load sql history from persistant storage.]
WITHOUT_CLASSIFICATION	history file not found for user - first time user ran pgm.
WITHOUT_CLASSIFICATION	i18n[application.error.savesqlhistory=unable to write sql queries to persistant storage.]
WITHOUT_CLASSIFICATION	get the history into an array.
WITHOUT_CLASSIFICATION	cell import/export file not found for user - first time user ran pgm.
WITHOUT_CLASSIFICATION	todo
WITHOUT_CLASSIFICATION	i18n[application.error.writecellselections=unable to write cell import/export options to persistant storage.]
WITHOUT_CLASSIFICATION	cell import/export file not found for user - first time user ran pgm.
WITHOUT_CLASSIFICATION	cell import/export file not found for user - first time user ran pgm.
WITHOUT_CLASSIFICATION	nothing needed here??
WITHOUT_CLASSIFICATION	todo
WITHOUT_CLASSIFICATION	todo
WITHOUT_CLASSIFICATION	todo
WITHOUT_CLASSIFICATION	todo
WITHOUT_CLASSIFICATION	todo
WITHOUT_CLASSIFICATION	todo
WITHOUT_CLASSIFICATION	todo
WITHOUT_CLASSIFICATION	todo
WITHOUT_CLASSIFICATION	todo
WITHOUT_CLASSIFICATION	nothing needed here??
WITHOUT_CLASSIFICATION	todo
WITHOUT_CLASSIFICATION	todo
WITHOUT_CLASSIFICATION	i18n[application.error.savedatatypeprops=unable to write datatype properties to persistant storage.]
WITHOUT_CLASSIFICATION	don't prevent the user from overriding the laf is they choose to use swing's default laf prop
WITHOUT_CLASSIFICATION	todo
WITHOUT_CLASSIFICATION	todo
WITHOUT_CLASSIFICATION	i18n[application.info.setjdbcdebuglog=attempting to set jdbc debug log to output stream]
WITHOUT_CLASSIFICATION	if logging has changed.
WITHOUT_CLASSIFICATION	close any previous logging.
WITHOUT_CLASSIFICATION	generic sql
WITHOUT_CLASSIFICATION	set up array to return for public access to cmd line args
WITHOUT_CLASSIFICATION	empty body.
WITHOUT_CLASSIFICATION	isession[] getactivesessions()
WITHOUT_CLASSIFICATION	add(new dropselectedtablesaction(_app))
WITHOUT_CLASSIFICATION	i18n[logpanel.titleinfo=last log entry (entry type info)]
WITHOUT_CLASSIFICATION	i18n[logpanel.titlewarn=last log entry (entry type warning)]
WITHOUT_CLASSIFICATION	i18n[logpanel.logmsg=logged by {0} at {1}\n\n {2}]
WITHOUT_CLASSIFICATION	empty body.
WITHOUT_CLASSIFICATION	impossible.
WITHOUT_CLASSIFICATION	i18n[logpanel.titleunknown=last log entry (entry type unknown)]
WITHOUT_CLASSIFICATION	i18n[memorypanel.memsize={0} of {1} mb]
WITHOUT_CLASSIFICATION	paintnumwaitinggc(g)
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	i18n[oracle.rows=rows]
WITHOUT_CLASSIFICATION	i18n[oracle.buffergets=buffer gets]
WITHOUT_CLASSIFICATION	i18n[oracle.diskreadsperrow=disk reads per row]
WITHOUT_CLASSIFICATION	private final aliaswindowfactory _aliaswinfactory
WITHOUT_CLASSIFICATION	oracle sql
WITHOUT_CLASSIFICATION	private int _lastsessionidx = 1
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	i18n[windowmanager.registersessionsheet=registering {0} in windowmanager]
WITHOUT_CLASSIFICATION	store ptr to newly open window in list of windows per session.
WITHOUT_CLASSIFICATION	set the cell width to the width of the header
WITHOUT_CLASSIFICATION	left
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	bottom
WITHOUT_CLASSIFICATION	regression for harmony-2146
WITHOUT_CLASSIFICATION	i18n[windowmanager.error.bringtofront=error bringing internal frame to the front]
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	end else
WITHOUT_CLASSIFICATION	mockdatabasemetadata
WITHOUT_CLASSIFICATION	ialiaseslist al = getaliaseslistinternalframe().getaliaseslist()
WITHOUT_CLASSIFICATION	_driverslistwindow.nowvisible(true)
WITHOUT_CLASSIFICATION	regression test for harmony-1497
WITHOUT_CLASSIFICATION	i18n[windowmanager.errorselectingwindow=error selecting window]
WITHOUT_CLASSIFICATION	_driverslistwindow.nowvisible(false)
WITHOUT_CLASSIFICATION	add an item to the windows menu for this window and store the menu item back in the internal frame.
WITHOUT_CLASSIFICATION	enable/disable actions that require open session frames.
WITHOUT_CLASSIFICATION	only remove the frame if the entire session is not closing
WITHOUT_CLASSIFICATION	remove menu item from windows menu that relates to this internal frame.
WITHOUT_CLASSIFICATION	enable/disable actions that require open session frames.
WITHOUT_CLASSIFICATION	add the message handler to the session
WITHOUT_CLASSIFICATION	allocate the current session to the actions.
WITHOUT_CLASSIFICATION	make sure that the session menu is enabled.
WITHOUT_CLASSIFICATION	clear session info from all actions.
WITHOUT_CLASSIFICATION	guaranteed to be non-null.
WITHOUT_CLASSIFICATION	guiutils.setjbuttonsizesthesame(new jbutton[] {_okbtn _closebtn new jbutton(i18n.cancel)})
WITHOUT_CLASSIFICATION	i18n
WITHOUT_CLASSIFICATION	builder.addgridded(new jbutton("alter")) builder.addrelatedgap()
WITHOUT_CLASSIFICATION	setpreferredsize(new dimension(400 400))
WITHOUT_CLASSIFICATION	copys the gathered values into the lookup table.
WITHOUT_CLASSIFICATION	table
WITHOUT_CLASSIFICATION	guaranteed to be non-null.
WITHOUT_CLASSIFICATION	causes npe in jdk 1.3.1 _contentstxt.settext("")
WITHOUT_CLASSIFICATION	lazily create the event.
WITHOUT_CLASSIFICATION	lazily create the event.
WITHOUT_CLASSIFICATION	i18n[helpviewerwindow.help=help]
WITHOUT_CLASSIFICATION	i18n[helpviewerwindow.squirrel=squirrel]
WITHOUT_CLASSIFICATION	i18n[helpviewerwindow.changelogs=change logs]
WITHOUT_CLASSIFICATION	i18n[helpviewerwindow.error.loadwelcomefile=error retrieving help file url for {0}]
WITHOUT_CLASSIFICATION	add squirrel licence to the licence node.
WITHOUT_CLASSIFICATION	strip local part of url.
WITHOUT_CLASSIFICATION	renderer for tree.
WITHOUT_CLASSIFICATION	&& node != _tree.getlastselectedpathcomponent())
WITHOUT_CLASSIFICATION	add squirrel help to the help node.
WITHOUT_CLASSIFICATION	first put the welcome to squirrel node.
WITHOUT_CLASSIFICATION	i18n[helpviewerwindow.squirrel=squirrel]
WITHOUT_CLASSIFICATION	i18n[helpviewerwindow.error.loadchangelogfile=error retrieving change log file url for {0}]
WITHOUT_CLASSIFICATION	i18n[helpviewerwindow.squirrel=squirrel]
WITHOUT_CLASSIFICATION	add squirrel change log to the licence node.
WITHOUT_CLASSIFICATION	generate contents file.
WITHOUT_CLASSIFICATION	add plugin help licence and change log documents to the tree.
WITHOUT_CLASSIFICATION	licence document.
WITHOUT_CLASSIFICATION	help document.
WITHOUT_CLASSIFICATION	faq.
WITHOUT_CLASSIFICATION	change log.
WITHOUT_CLASSIFICATION	final string doctitle = (string)_doctitles.get(i)
WITHOUT_CLASSIFICATION	using a thread for this gets rid of most of the "white flash".
WITHOUT_CLASSIFICATION	stop refresh if it is running.
WITHOUT_CLASSIFICATION	i18n[viewlogssheet.error.processinglogfile=error occured processing log file]
WITHOUT_CLASSIFICATION	i18n[viewlogssheet.info.nulllogfile=null log file name]
WITHOUT_CLASSIFICATION	position to the start of the last line in log.
WITHOUT_CLASSIFICATION	i18n[viewlogssheet.error.setcaret=error positioning caret in log text component]
WITHOUT_CLASSIFICATION	_logcontentstxt.seteditable(false)
WITHOUT_CLASSIFICATION	true true true true)
WITHOUT_CLASSIFICATION	throws ioexception
WITHOUT_CLASSIFICATION	viewer.addinternalframelistener(_lis)
WITHOUT_CLASSIFICATION	private final class myinternalframelistener extends internalframeadapter
WITHOUT_CLASSIFICATION	removeviewer((htmlviewersheet)evt.getinternalframe())
WITHOUT_CLASSIFICATION	super.internalframeclosed(evt)
WITHOUT_CLASSIFICATION	empty method.
WITHOUT_CLASSIFICATION	settings gap sizes
WITHOUT_CLASSIFICATION	filling columns
WITHOUT_CLASSIFICATION	appending labels with optional components ------------------------------
WITHOUT_CLASSIFICATION	appending internationalized labels with optional components ------------
WITHOUT_CLASSIFICATION	adding titles ----------------------------------------------------------
WITHOUT_CLASSIFICATION	appending separators ---------------------------------------------------
WITHOUT_CLASSIFICATION	instance creation
WITHOUT_CLASSIFICATION	overriding superclass behavior
WITHOUT_CLASSIFICATION	adding rows
WITHOUT_CLASSIFICATION	adding labels and separators
WITHOUT_CLASSIFICATION	helper code
WITHOUT_CLASSIFICATION	setrenderer(new cellrenderer())
WITHOUT_CLASSIFICATION	private sqldriverpropertycollection _props = new sqldriverpropertycollection()
WITHOUT_CLASSIFICATION	loaddriverproperties()
WITHOUT_CLASSIFICATION	i18n[columnlistdialog.dropprimarykeytitle=drop primary key]
WITHOUT_CLASSIFICATION	columns
WITHOUT_CLASSIFICATION	_usedriverpropschk.setselected(_alias.getusedriverproperties()) _driverpropsbtn.setenabled(_usedriverpropschk.isselected()) this is mainly for long urls that cannot be fully displayed in the label.
WITHOUT_CLASSIFICATION	abort first..
WITHOUT_CLASSIFICATION	set focus to password control if default user name has been setup.
WITHOUT_CLASSIFICATION	rows
WITHOUT_CLASSIFICATION	i18n[columnlistdialog.modifytitle=select column to modify]
WITHOUT_CLASSIFICATION	table name
WITHOUT_CLASSIFICATION	column list
WITHOUT_CLASSIFICATION	user cannot be allowed to drop all columns from a table
WITHOUT_CLASSIFICATION	removed for reformatting
WITHOUT_CLASSIFICATION	means load all schemas from database.
WITHOUT_CLASSIFICATION	current schema says don't load
WITHOUT_CLASSIFICATION	removed for duplicate line
WITHOUT_CLASSIFICATION	private sqldriverpropertycollection _sqldriverprops
WITHOUT_CLASSIFICATION	removed for comment
WITHOUT_CLASSIFICATION	i18n[aliasinternalframe.illegalvalue=illegal value of {0} passed for maintenance type]
WITHOUT_CLASSIFICATION	_usedriverpropschk.setselected(_sqlalias.getusedriverproperties())
WITHOUT_CLASSIFICATION	this is a tool window.
WITHOUT_CLASSIFICATION	title label at top.
WITHOUT_CLASSIFICATION	separated by a line.
WITHOUT_CLASSIFICATION	separated by a line.
WITHOUT_CLASSIFICATION	next the buttons.
WITHOUT_CLASSIFICATION	make it grow when added
WITHOUT_CLASSIFICATION	i18n[aliasinternalframe.error.sessioncreation=test button has created a session this is a programming error]
WITHOUT_CLASSIFICATION	empty.
WITHOUT_CLASSIFICATION	i18n[aliaswindowfactory.error.copyalias=error occured copying the alias]
WITHOUT_CLASSIFICATION	i18n[aliaswindowfactory.schemapropscopiedwarning=warning your target alias contains database specific schema properties copied from the source alias.\n schema loading of the target alias may be errorneous. please check your target alias's schema properties.]
WITHOUT_CLASSIFICATION	empty body.
WITHOUT_CLASSIFICATION	add listener to listen for items added/removed from list.
WITHOUT_CLASSIFICATION	select the one just added.
WITHOUT_CLASSIFICATION	only a single selection can be made at a time.
WITHOUT_CLASSIFICATION	more than one selection is allowed - check to see if we should change the selection
WITHOUT_CLASSIFICATION	_driverslist = new driverslist(app)
WITHOUT_CLASSIFICATION	_tb.add(actions.get(showloadeddriversonlyaction.class))
WITHOUT_CLASSIFICATION	to change body of overridden methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	_tree.expandpath(new treepath(newfolder.getpath()))
WITHOUT_CLASSIFICATION	not required.
WITHOUT_CLASSIFICATION	first time user has run pgm.
WITHOUT_CLASSIFICATION	if this happens then this is a programming error as we said in the above call to ingore these errors.
WITHOUT_CLASSIFICATION	i18n[driverinternalframe.error.illegalvalue=illegal value of {0} passed for maintenance type]
WITHOUT_CLASSIFICATION	this is a tool window.
WITHOUT_CLASSIFICATION	title label at top.
WITHOUT_CLASSIFICATION	first time user has run pgm.
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	separated by a line.
WITHOUT_CLASSIFICATION	separated by a line.
WITHOUT_CLASSIFICATION	reset the background to the colour that the current look and feel uses for internal frames.
WITHOUT_CLASSIFICATION	_javaclasspathlist.addlistselectionlistener(new javaclasspathlistboxlistener())
WITHOUT_CLASSIFICATION	scrollbars are "shown always" to stop sheet resizing when they are shown/hidden.
WITHOUT_CLASSIFICATION	this can take a long time for big jars - so it is not done on the edt.
WITHOUT_CLASSIFICATION	removed for uncomment
WITHOUT_CLASSIFICATION	i18n[driverwindowfactory.error.copyingdriver=error occured copying the driver]
WITHOUT_CLASSIFICATION	empty block.
WITHOUT_CLASSIFICATION	if the user wants to select for right mouse clicks then change the selection before popup appears
WITHOUT_CLASSIFICATION	this is a tool window.
WITHOUT_CLASSIFICATION	pane to add window content to.
WITHOUT_CLASSIFICATION	put toolbar at top of window.
WITHOUT_CLASSIFICATION	the main list for window.
WITHOUT_CLASSIFICATION	list in the centre of the window.
WITHOUT_CLASSIFICATION	add mouse listener for displaying popup menu.
WITHOUT_CLASSIFICATION	removed for cut sql
WITHOUT_CLASSIFICATION	removed for copy sql
WITHOUT_CLASSIFICATION	i18n[columndetailsdialog.columnnamelabel=column name ]
WITHOUT_CLASSIFICATION	i18n[columndetailsdialog.tablenamelabel=table name ]
WITHOUT_CLASSIFICATION	table name
WITHOUT_CLASSIFICATION	these are not used
WITHOUT_CLASSIFICATION	column name
WITHOUT_CLASSIFICATION	dialect list
WITHOUT_CLASSIFICATION	i18n[columndetailsdialog.columncommentlabel={0} does not support column comments]
WITHOUT_CLASSIFICATION	i18n[columndetailsdialog.columnnametoottip={0} does not support altering column name]
WITHOUT_CLASSIFICATION	length
WITHOUT_CLASSIFICATION	type list
WITHOUT_CLASSIFICATION	scale
WITHOUT_CLASSIFICATION	precision
WITHOUT_CLASSIFICATION	default value
WITHOUT_CLASSIFICATION	nullable
WITHOUT_CLASSIFICATION	comment
WITHOUT_CLASSIFICATION	i18n[colorpropertiescontroller.hint=set session colors for this alias]
WITHOUT_CLASSIFICATION	i18n[colorpropertiescontroller.title=color properties]
WITHOUT_CLASSIFICATION	don't need tooltips any more.
WITHOUT_CLASSIFICATION	register so that we can display different tooltips depending which entry in list mouse is over.
WITHOUT_CLASSIFICATION	i18n[schemapropertiescontroller.tableheader.tables=tables]
WITHOUT_CLASSIFICATION	i18n[schemapropertiescontroller.tableheader.views=views]
WITHOUT_CLASSIFICATION	i18n[oracle.dboutputtitle=oracle db output for {0}]
WITHOUT_CLASSIFICATION	i18n[schemapropertiescontroller.cachetodelnotexists=cache file for alias "{0}" does not exist. no file was deleted]
WITHOUT_CLASSIFICATION	i18n[schemapropertiescontroller.hint=schemas (loading and caching)]
WITHOUT_CLASSIFICATION	i18n[aliaspropertiesinternalframe.ok=ok]
WITHOUT_CLASSIFICATION	i18n[colorpropertiespanel.backgroundcolorlabel=background color]
WITHOUT_CLASSIFICATION	i18n[aliaspropertiesinternalframe.close=close]
WITHOUT_CLASSIFICATION	toolbar
WITHOUT_CLASSIFICATION	object tree
WITHOUT_CLASSIFICATION	status bar
WITHOUT_CLASSIFICATION	i18n[colorpropertiespanel.synccomponentbackgroundcolorchklabel=use toolbar background color for all components]
WITHOUT_CLASSIFICATION	i18n[colorpropertiespanel.toolbarbackgroundcolorbtnlabel=choose toolbar color]
WITHOUT_CLASSIFICATION	instructions
WITHOUT_CLASSIFICATION	toolbar color checkbox
WITHOUT_CLASSIFICATION	object tree color checkbox
WITHOUT_CLASSIFICATION	object tree color checkbox
WITHOUT_CLASSIFICATION	set object tree color button
WITHOUT_CLASSIFICATION	set object tree color button
WITHOUT_CLASSIFICATION	set toolbar color button
WITHOUT_CLASSIFICATION	set object tree color panel
WITHOUT_CLASSIFICATION	set object tree color panel
WITHOUT_CLASSIFICATION	set toolbar color panel
WITHOUT_CLASSIFICATION	i18n[schemapropertiespanel.loadandcacheall=load all and cache all schemas]
WITHOUT_CLASSIFICATION	i18n[schemapropertiespanel.cacheschemaindependentmetadata=cache schema independent meta data (catalogs keywords data types global functions)]
WITHOUT_CLASSIFICATION	i18n[schemapropertiespanel.printcachefilelocation=print cache file path to message panel]
WITHOUT_CLASSIFICATION	i18n[schemapropertiespanel.deletecache=delete cache file]
WITHOUT_CLASSIFICATION	i18n
WITHOUT_CLASSIFICATION	i18n[schemapropertiespanel.schematableupdateapply=apply]
WITHOUT_CLASSIFICATION	turn off auto refresh when we are shutting down.
WITHOUT_CLASSIFICATION	i18n[driverpropertiescontroller.loadingdriverfailed=loading jdbc driver "{0}" failed.\ncan not load driver properties tab.]
WITHOUT_CLASSIFICATION	i18n[driverpropertiescontroller.gettingdriverpropetiesfailed=loading the properties from the jdbc driver failed.\ncan not load driver properties tab.]
WITHOUT_CLASSIFICATION	i18n[driverpropertiescontroller.hint=driverproperties]
WITHOUT_CLASSIFICATION	i18n[driverpropertiescontroller.title=driverproperties]
WITHOUT_CLASSIFICATION	i18n[schematablecboitem.schemaid.loadandcache=load and cache]
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	removed for close session
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	size non-tool child window.
WITHOUT_CLASSIFICATION	tab button
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	implements actionlistener
WITHOUT_CLASSIFICATION	make the button looks the same for all laf's
WITHOUT_CLASSIFICATION	make it transparent
WITHOUT_CLASSIFICATION	no need to be focusable
WITHOUT_CLASSIFICATION	making nice rollover effect we use the same listener for all buttons
WITHOUT_CLASSIFICATION	close the proper tab by clicking the button addactionlistener(this)
WITHOUT_CLASSIFICATION	we don't want to update ui for this button
WITHOUT_CLASSIFICATION	paint the cross
WITHOUT_CLASSIFICATION	shift the image for pressed buttons
WITHOUT_CLASSIFICATION	without this the split moves when the window is resized.
WITHOUT_CLASSIFICATION	create spinner for update period
WITHOUT_CLASSIFICATION	i18n[oracle.seconds2=(seconds)]
WITHOUT_CLASSIFICATION	i18n[fileeditordroptargetlistener.onefiledropmessage=only one file may be dropped onto the editor at a time.]
WITHOUT_CLASSIFICATION	make sure a deselect is followed by a select when a new selected tab exists.
WITHOUT_CLASSIFICATION	this event does not always hit the righr editor !? that's why we can't use _sqlentrypanelidentifier
WITHOUT_CLASSIFICATION	check to see if the string is a file uri.
WITHOUT_CLASSIFICATION	not a uri - assume it is a string filename.
WITHOUT_CLASSIFICATION	the line is a comment (as per the rfc 2483)
WITHOUT_CLASSIFICATION	malformed uri
WITHOUT_CLASSIFICATION	the uri is not a valid 'file' uri
WITHOUT_CLASSIFICATION	light blue colors
WITHOUT_CLASSIFICATION	58 110 165) 189 220 251) 153 179 205)
WITHOUT_CLASSIFICATION	i18n[allbluesboldmetaltheme.name=all blues - bold]
WITHOUT_CLASSIFICATION	jason messages height should be stored with this.
WITHOUT_CLASSIFICATION	basemdiparentframe
WITHOUT_CLASSIFICATION	empty body.
WITHOUT_CLASSIFICATION	initial load of prefs.
WITHOUT_CLASSIFICATION	i18n[mainframe.savesize=save size]
WITHOUT_CLASSIFICATION	i18n[mainframe.restoresize=restore saved size]
WITHOUT_CLASSIFICATION	position window to where it was when last closed. if this is not on the screen move it back on to the screen.
WITHOUT_CLASSIFICATION	empty body.
WITHOUT_CLASSIFICATION	under jdk1.4 an empty jcombobox has an almost zero width.
WITHOUT_CLASSIFICATION	_app.getdatacache().addaliaseslistener(new myaliaseslistener(this))
WITHOUT_CLASSIFICATION	under jdk1.4 an empty jcombobox has an almost zero width.
WITHOUT_CLASSIFICATION	dont enable the session drop down if it is empty
WITHOUT_CLASSIFICATION	needes to be done via event queque because adding the session to the drop down happens via the event queue too.
WITHOUT_CLASSIFICATION	private final jmenu _editmenu
WITHOUT_CLASSIFICATION	squirrelaction descriptions already contain the accelerator
WITHOUT_CLASSIFICATION	super.setvisible(value)
WITHOUT_CLASSIFICATION	_msgsplit.setdividerlocation(0.9d) _msgsplit.setresizeweight(1.0)
WITHOUT_CLASSIFICATION	actions.get(executesqlaction.class).setenabled(false)
WITHOUT_CLASSIFICATION	send a tree expansion event to the object tree
WITHOUT_CLASSIFICATION	i18n
WITHOUT_CLASSIFICATION	i18n
WITHOUT_CLASSIFICATION	refresh the currently selected tab.
WITHOUT_CLASSIFICATION	to change body of overridden methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	needed to make the panel set the divider location from preferences
WITHOUT_CLASSIFICATION	required on linux.
WITHOUT_CLASSIFICATION	i18n[createdriveraction.error.loaddefaultdrivers]
WITHOUT_CLASSIFICATION	i18n[createdriveraction.error.loaddefaultdrivers]
WITHOUT_CLASSIFICATION	size to set child windows to.
WITHOUT_CLASSIFICATION	i18n[dumpapplicationaction.titlesuccess=dump successful]
WITHOUT_CLASSIFICATION	i18n[deletealiasaction.error.selectingwindow=error selecting window]
WITHOUT_CLASSIFICATION	determine size of grid to tile into. e.g 3x3 for 9 cells.
WITHOUT_CLASSIFICATION	ignore.
WITHOUT_CLASSIFICATION	ignore.
WITHOUT_CLASSIFICATION	empty.
WITHOUT_CLASSIFICATION	i18n[connecttoaliascommand.error.closeconnection=error occured closing connection]
WITHOUT_CLASSIFICATION	after this it can't be stopped anymore!
WITHOUT_CLASSIFICATION	i18n[deletedriveraction.error.selectingwindow=error selecting window]
WITHOUT_CLASSIFICATION	i18n[dumpapplicationcommand.title.status=application status bean]
WITHOUT_CLASSIFICATION	prompt the user to add a website url for this driver
WITHOUT_CLASSIFICATION	i18n[dumpapplicationcommand.title.drivers=drivers]
WITHOUT_CLASSIFICATION	i18n[dumpapplicationcommand.error.dumpingdrivers=error dumping drivers]
WITHOUT_CLASSIFICATION	i18n[dumpapplicationcommand.error.dumpingaliases=error dumping aliases]
WITHOUT_CLASSIFICATION	i18n[dumpapplicationcommand.title.aliases=aliases]
WITHOUT_CLASSIFICATION	dump drivers
WITHOUT_CLASSIFICATION	dump system properties.
WITHOUT_CLASSIFICATION	dump aliases.
WITHOUT_CLASSIFICATION	i18n[dumpapplicationcommand.title.sessiondump=session dump {0}]
WITHOUT_CLASSIFICATION	i18n[dumpapplicationcommand.error.sessiondump=error dumping sessions]
WITHOUT_CLASSIFICATION	dump sessions.
WITHOUT_CLASSIFICATION	i18n[dumpapplicationcommand.error.combiningtempfiles=error combining temp files into dump file]
WITHOUT_CLASSIFICATION	i18n[dumpapplicationcommand.error.deletetempfile=couldn't delete temporary dumpsession file]
WITHOUT_CLASSIFICATION	nil out the timer so that it can be gc'd
WITHOUT_CLASSIFICATION	get 10 lines at a time.
WITHOUT_CLASSIFICATION	i18n[oracleexceptionformatter.positionlabel=position ]
WITHOUT_CLASSIFICATION	isessionlistener interface methods
WITHOUT_CLASSIFICATION	don't try to find it if we have already created it.
WITHOUT_CLASSIFICATION	since we depend upon the connection class associated with the isession we need to keep a reference to the isession we are associated with. however this session could be closed at which time we want to give up our reference so that it can be garbage collected.
WITHOUT_CLASSIFICATION	no rows selected.
WITHOUT_CLASSIFICATION	label containing the location of the plugins at top of dialog.
WITHOUT_CLASSIFICATION	imainpaneltab[] getmaintabbedpanepanels(isession session)
WITHOUT_CLASSIFICATION	table of loaded plugins in centre of dialog.
WITHOUT_CLASSIFICATION	column 1 is internal name
WITHOUT_CLASSIFICATION	column 3 is loaded status
WITHOUT_CLASSIFICATION	empty body purely to shorten the interface name for convienience.
WITHOUT_CLASSIFICATION	renames the source column.
WITHOUT_CLASSIFICATION	empty body.
WITHOUT_CLASSIFICATION	empty body.
WITHOUT_CLASSIFICATION	empty method.
WITHOUT_CLASSIFICATION	throws pluginexception
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	folder to store user settings.
WITHOUT_CLASSIFICATION	adds the new column (type integer).
WITHOUT_CLASSIFICATION	see if plugin has any jars in lib dir.
WITHOUT_CLASSIFICATION	throws pluginexception
WITHOUT_CLASSIFICATION	i18n[preferencespanel.usecustomqtlabel=use custom query tokenizer]
WITHOUT_CLASSIFICATION	i18n[preferencespanel.removemultilinecommentlabeltiptext=]
WITHOUT_CLASSIFICATION	i18n[preferencespanel.linecommentlabel=start of line comment]
WITHOUT_CLASSIFICATION	i18n[preferencespanel.procedureseparatorlabel=procedure/function separator]
WITHOUT_CLASSIFICATION	i18n[preferencespanel.borderlabel={0} script settings]
WITHOUT_CLASSIFICATION	column 0 row 0
WITHOUT_CLASSIFICATION	span across two columns
WITHOUT_CLASSIFICATION	span across two columns
WITHOUT_CLASSIFICATION	increases component width by 40 pixels
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	jason what are its valid values?
WITHOUT_CLASSIFICATION	property file not found for user - first time user ran pgm.
WITHOUT_CLASSIFICATION	this is a tool window.
WITHOUT_CLASSIFICATION	add panels for core squirrel functionality.
WITHOUT_CLASSIFICATION	go thru all loaded plugins asking for panels.
WITHOUT_CLASSIFICATION	add all panels to the tabbed pane.
WITHOUT_CLASSIFICATION	i18n[generalpreferencespanel.squirrelhomepath=home directory -home {0}]
WITHOUT_CLASSIFICATION	i18n[updatepreferencestab.hint=software update settings]
WITHOUT_CLASSIFICATION	i18n[updatepreferencestab.title=update]
WITHOUT_CLASSIFICATION	this is a tool window.
WITHOUT_CLASSIFICATION	add panels for core squirrel functionality.
WITHOUT_CLASSIFICATION	go thru all loaded plugins asking for panels.
WITHOUT_CLASSIFICATION	add all panels to the tabbed pane.
WITHOUT_CLASSIFICATION	i18n[datatypepreferencespanel.propspanel.hint=set options for specific data types]
WITHOUT_CLASSIFICATION	i18n[datatypepreferencespanel.propspanel.title=data type controls]
WITHOUT_CLASSIFICATION	we need this method to satisfy one of the interfaces we implement but since we have moved all operations to the datatype sub-panels which initialize their own data during creation there is nothing for us to do here
WITHOUT_CLASSIFICATION	i18n[sqlpreferencespanel.largescriptstmtcount=large script statement count ]
WITHOUT_CLASSIFICATION	jscrollpane sp = new jscrollpane(createdatatypespanel()) sp.setpreferredsize(new dimension(600 450)) add(sp gbc)
WITHOUT_CLASSIFICATION	add each of the panels created by the datatype objects for editing their own properties
WITHOUT_CLASSIFICATION	i18n[updatepreferencespanel.channel=channel]
WITHOUT_CLASSIFICATION	i18n[updatepreferencespanel.updatesiteborderlabel=update site]
WITHOUT_CLASSIFICATION	i18n[updatepreferencespanel.path=path]
WITHOUT_CLASSIFICATION	test connection button panel (both the button and the status label
WITHOUT_CLASSIFICATION	site type
WITHOUT_CLASSIFICATION	update server name
WITHOUT_CLASSIFICATION	separator
WITHOUT_CLASSIFICATION	update server port
WITHOUT_CLASSIFICATION	path to release.xml
WITHOUT_CLASSIFICATION	local update directory
WITHOUT_CLASSIFICATION	channnel combo-box
WITHOUT_CLASSIFICATION	url text field
WITHOUT_CLASSIFICATION	separators need preferred size in gridbaglayout
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	string edit = "edit"
WITHOUT_CLASSIFICATION	activate another session since the current active session has closed.
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	get an array since we dont want trouble with the sessionslist when we remove the sessions from it.
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	i18n[filemanager.confirm.filereplace={0} \nalready exists. do you want to replace it?]
WITHOUT_CLASSIFICATION	invokelater to make the call synchronto the event queue
WITHOUT_CLASSIFICATION	do not do new hashmap() here.
WITHOUT_CLASSIFICATION	public sqlexecutioninfo(int idx) { this(idx "") }
WITHOUT_CLASSIFICATION	i18n[filemanager.error.cannotwritefile=file {0} \ncannot be written to.]
WITHOUT_CLASSIFICATION	i18n
WITHOUT_CLASSIFICATION	i18n[filemanager.savedfile=saved to {0}]
WITHOUT_CLASSIFICATION	i18n[cancelstatementthread.cancelfailed=failed to cancel statement. perhaps the driver/rddbms does not support cancelling statements. see logs for further details ({0})]
WITHOUT_CLASSIFICATION	i18n[cancelstatementthread.cancelsucceeded=the database has been asked to cancel the statment.]
WITHOUT_CLASSIFICATION	i18n[messagepanel.clearlabel=clear]
WITHOUT_CLASSIFICATION	add mouse listener for displaying popup menu.
WITHOUT_CLASSIFICATION	/ warning
WITHOUT_CLASSIFICATION	a light yellow
WITHOUT_CLASSIFICATION	styleconstants.setbackground(_saseterror color.red)
WITHOUT_CLASSIFICATION	styleconstants.setbackground(saseterrorhistory color.pink)
WITHOUT_CLASSIFICATION	start loading table/column info about the current database.
WITHOUT_CLASSIFICATION	this is set here as sessionpanel.dispose() will attempt to close the session.
WITHOUT_CLASSIFICATION	this is a reasonable default and makes initialization code run well
WITHOUT_CLASSIFICATION	if there is no sqlpanelapi (e.g. the object tree find editor) we assume no parser is necessary and thus provide a dummy impl.
WITHOUT_CLASSIFICATION	at this point we know that we have a 1.4 or higher java runtime
WITHOUT_CLASSIFICATION	i18n[session.drivercompliancetitle=jre/jdbc version mismatch]
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.session.isession#confirmclosewithunsavededits()
WITHOUT_CLASSIFICATION	i18n[datasetupdateabletablemodelimpl.error.tablenotfound=cannot edit table because table cannot be found\nor table name is not unique in db.]
WITHOUT_CLASSIFICATION	re-calculate fulltablename the next time it's requested.
WITHOUT_CLASSIFICATION	_session.getproperties().forcetablecontentsoutputclassnamechange()
WITHOUT_CLASSIFICATION	forced edit mode ended because user changed the session properties
WITHOUT_CLASSIFICATION	start with illegal number of rows matching query
WITHOUT_CLASSIFICATION	if we could not identify which table to edit tell user
WITHOUT_CLASSIFICATION	start with illegal number of rows matching query
WITHOUT_CLASSIFICATION	i18n[oracle.sequencedetails=details]
WITHOUT_CLASSIFICATION	drops the original column.
WITHOUT_CLASSIFICATION	adds a foreign key constraint to the source table for the new column.
WITHOUT_CLASSIFICATION	get where clause using original value
WITHOUT_CLASSIFICATION	if the user has said to not use this column then skip it
WITHOUT_CLASSIFICATION	everything seems to have worked ok
WITHOUT_CLASSIFICATION	the edited column is in the resultset twice (example select myname from mytable). we won't add the this col to the where clause.
WITHOUT_CLASSIFICATION	convert user representation of null into an actual null
WITHOUT_CLASSIFICATION	do different things depending on data type
WITHOUT_CLASSIFICATION	insert the "where" at the front if there is anything in the clause
WITHOUT_CLASSIFICATION	get the sql session
WITHOUT_CLASSIFICATION	i18n[datasetupdateabletablemodelimpl.error.rowmatched=\n row {0} matched {1} rows in db]
WITHOUT_CLASSIFICATION	i18n[datasetupdateabletablemodelimpl.error.rownotmatch=\n row {0} did not match any row in db]
WITHOUT_CLASSIFICATION	get where clause for the selected row the -1 says to just use the contents of the values without any substitutions
WITHOUT_CLASSIFICATION	count how many rows this where matches
WITHOUT_CLASSIFICATION	do the delete and add the number of rows deleted to the count
WITHOUT_CLASSIFICATION	i18n[oracle.displayssequencedetails=display sequence details]
WITHOUT_CLASSIFICATION	i18n[datasetupdateabletablemodelimpl.error.tabledbmismatch=there may be a mismatch between the table and the db\n{0}\ndo you wish to proceed with the deletes anyway?]
WITHOUT_CLASSIFICATION	execute the sql synchronously
WITHOUT_CLASSIFICATION	i18n[datasetupdateabletablemodelimpl.info.deletecancelled=delete canceled at user request.]
WITHOUT_CLASSIFICATION	do the delete and add the number of rows deleted to the count
WITHOUT_CLASSIFICATION	try to delete
WITHOUT_CLASSIFICATION	cache
WITHOUT_CLASSIFICATION	cycled
WITHOUT_CLASSIFICATION	do nothing.
WITHOUT_CLASSIFICATION	do nothing.
WITHOUT_CLASSIFICATION	we return something valid even if there is a db error
WITHOUT_CLASSIFICATION	if we could not identify which table to edit just return
WITHOUT_CLASSIFICATION	do nothing.
WITHOUT_CLASSIFICATION	do nothing.
WITHOUT_CLASSIFICATION	do nothing.
WITHOUT_CLASSIFICATION	find the entry in coldefs matching this column
WITHOUT_CLASSIFICATION	db cols are in same order as coldefs
WITHOUT_CLASSIFICATION	i18n[datasetupdateabletablemodelimpl.error.retrievingdefaultvalues=error retrieving default column values]
WITHOUT_CLASSIFICATION	if we could not identify which table to edit tell user
WITHOUT_CLASSIFICATION	assuming that the columns in table match coldefs bump the index to point to the next coldef entry
WITHOUT_CLASSIFICATION	start the string for use in the prepared statment
WITHOUT_CLASSIFICATION	add a variable position for each of the columns
WITHOUT_CLASSIFICATION	replace the last "" with ")"
WITHOUT_CLASSIFICATION	i18n[oracle.displaysessionstatistics=display database session statistics]
WITHOUT_CLASSIFICATION	have the datatype object fill in the appropriate kind of value into the appropriate variable position in the prepared stmt
WITHOUT_CLASSIFICATION	i18n[datasetupdateabletablemodelimpl.error.unknownerrorupdate=unknown problem during update.\nno count of inserted rows was returned.\ndatabase may be corrupted!]
WITHOUT_CLASSIFICATION	insert succeeded
WITHOUT_CLASSIFICATION	this might be because an table alias is used maybe with an as before it.
WITHOUT_CLASSIFICATION	i18n[objecttreesearch.error.objectnotfound=could not locate the database object ''{0}'' in object tree]
WITHOUT_CLASSIFICATION	(allows_editing_false == ret)
WITHOUT_CLASSIFICATION	no support for undo
WITHOUT_CLASSIFICATION	jason removed as part of patch void addsessionlistener(isessionlistener lis)
WITHOUT_CLASSIFICATION	process each individual query.
WITHOUT_CLASSIFICATION	some driver don't correctly support setmaxrows. in these cases use setmaxrows only if this is a select.
WITHOUT_CLASSIFICATION	display any warnings generated by the sql execution.
WITHOUT_CLASSIFICATION	user has cancelled the query execution.
WITHOUT_CLASSIFICATION	now we have reached an output that is not a result. we now have to aks for this outputs update count.
WITHOUT_CLASSIFICATION	filter the list of all db objects looking for things with the given name
WITHOUT_CLASSIFICATION	ok that didn't work - let's see if the table looks fully qualified. if so we'll split the name from the schema/catalog and try that.
WITHOUT_CLASSIFICATION	ok maybe catalog was really a schema instead.
WITHOUT_CLASSIFICATION	(non-javadoc) @see javax.swing.event.undoableeditlistener#undoableedithappened(javax.swing.event.undoableeditevent)
WITHOUT_CLASSIFICATION	i18n[sqlpanelapi.untitledlabel=untitled]
WITHOUT_CLASSIFICATION	can't work with isessionaction because if a result window is on top the session in a isessionaction is null.
WITHOUT_CLASSIFICATION	dump meta data.
WITHOUT_CLASSIFICATION	dump driver information.
WITHOUT_CLASSIFICATION	dump session properties.
WITHOUT_CLASSIFICATION	dump general connection info.
WITHOUT_CLASSIFICATION	dump alias information.
WITHOUT_CLASSIFICATION	dump data types.
WITHOUT_CLASSIFICATION	dump schemas.
WITHOUT_CLASSIFICATION	dump catalogs.
WITHOUT_CLASSIFICATION	dump general connection info.
WITHOUT_CLASSIFICATION	@see actionlistener#actionperformed(actionevent)
WITHOUT_CLASSIFICATION	@see iclientsessionaction#setsession(isession)
WITHOUT_CLASSIFICATION	i18n[deletetablescommand.loadingprefix=analyzing table]
WITHOUT_CLASSIFICATION	get all the selected object names and place in a comma separated list.
WITHOUT_CLASSIFICATION	remove trailing " ".
WITHOUT_CLASSIFICATION	ensure that the proper type of object is selected in the object tree.
WITHOUT_CLASSIFICATION	can't delete records in snapshots (oracle materialized views)
WITHOUT_CLASSIFICATION	execute the sql synchronously
WITHOUT_CLASSIFICATION	only oracle supports materialized views directly.
WITHOUT_CLASSIFICATION	execute command
WITHOUT_CLASSIFICATION	i18n[dumpsessionaction.success=session successfuly dumped to {0}]
WITHOUT_CLASSIFICATION	the math.min is for the caret at the end of the text
WITHOUT_CLASSIFICATION	@see actionlistener#actionperformed(actionevent)
WITHOUT_CLASSIFICATION	empty body.
WITHOUT_CLASSIFICATION	ensure that the proper type of object is selected in the object tree before allowing the sql filter to be activated.
WITHOUT_CLASSIFICATION	empty body
WITHOUT_CLASSIFICATION	empty bbody
WITHOUT_CLASSIFICATION	empty body
WITHOUT_CLASSIFICATION	empty body
WITHOUT_CLASSIFICATION	private jtabbedpane _tabbedresultspanel
WITHOUT_CLASSIFICATION	private map _alltabs = new hashmap()
WITHOUT_CLASSIFICATION	private list _availabletabs = new arraylist()
WITHOUT_CLASSIFICATION	private arraylist _usedtabs = new arraylist()
WITHOUT_CLASSIFICATION	_listeners.remove(isqlexecutionlistener.class lis)
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	guaranteed to be non-null.
WITHOUT_CLASSIFICATION	guaranteed to be non-null.
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	_tabbedresultspanel = uifactory.getinstance().createtabbedpane()
WITHOUT_CLASSIFICATION	i18n[sqlpanel.limitrowscheckbox.hint=limit rows ]
WITHOUT_CLASSIFICATION	set focus to the sql entry panel.
WITHOUT_CLASSIFICATION	i18n[pleasewaitdialog.queryexecuting=query is executing]
WITHOUT_CLASSIFICATION	columns
WITHOUT_CLASSIFICATION	rows
WITHOUT_CLASSIFICATION	prepare to have a lot of documentevent.eventtype.change
WITHOUT_CLASSIFICATION	display the result set.
WITHOUT_CLASSIFICATION	display the result set metadata.
WITHOUT_CLASSIFICATION	why null??
WITHOUT_CLASSIFICATION	1.5 "@ident" annotation noi18n
WITHOUT_CLASSIFICATION	i18n[resulttab.executedlabel=executed]
WITHOUT_CLASSIFICATION	and the query info.
WITHOUT_CLASSIFICATION	final resources rsrc = _session.getapplication().getresources()
WITHOUT_CLASSIFICATION	i18n[resulttab.elapsedtimelabel=elapsed time (seconds)]
WITHOUT_CLASSIFICATION	empty method.
WITHOUT_CLASSIFICATION	empty method.
WITHOUT_CLASSIFICATION	needs to be done in both cases because if the window goes back to the default layer it goes back behind all other windows too.
WITHOUT_CLASSIFICATION	the sqlhistorycomboboxmodel has a static member that prevents garbage collection. therefore we need to remove the model.
WITHOUT_CLASSIFICATION	guaranteed to be non-null.
WITHOUT_CLASSIFICATION	sticky is turned off. just remove sticky and return.
WITHOUT_CLASSIFICATION	remove old sticky tab
WITHOUT_CLASSIFICATION	check for whitespace
WITHOUT_CLASSIFICATION	guaranteed to be non-null.
WITHOUT_CLASSIFICATION	check for digit
WITHOUT_CLASSIFICATION	white space
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	guaranteed to be non-null.
WITHOUT_CLASSIFICATION	guaranteed to be non-null.
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	!!! return sqltokencontext.incomplete_string_literal
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	either resulttabtoreplace or _stickytab must be not null here
WITHOUT_CLASSIFICATION	transparent
WITHOUT_CLASSIFICATION	i18n[sqlresultexecuterpanel.close=close]
WITHOUT_CLASSIFICATION	just add the tab
WITHOUT_CLASSIFICATION	i18n[sqlresultexecuterpanel.closeall=close all]
WITHOUT_CLASSIFICATION	i18n[sqlresultexecuterpanel.togglesticky=toggle sticky]
WITHOUT_CLASSIFICATION	i18n[sqlresultexecuterpanel.execstatus=executing sql]
WITHOUT_CLASSIFICATION	track the time in aggregate for the script.
WITHOUT_CLASSIFICATION	!!! return sqltokencontext.incomplete_char_literal
WITHOUT_CLASSIFICATION	break
WITHOUT_CLASSIFICATION	options
WITHOUT_CLASSIFICATION	i18n[sqlresultexecuterpanel.rowsupdated={0} row(s) inserted]
WITHOUT_CLASSIFICATION	i18n[sqlresultexecuterpanel.rowsdeleted={0} row(s) deleted]
WITHOUT_CLASSIFICATION	i18n[sqlresultexecuterpanel.rowsupdated={0} row(s) updated]
WITHOUT_CLASSIFICATION	i18n[sqlresultexecuterpanel.outputstatus=building output]
WITHOUT_CLASSIFICATION	i18n[sqlresultexecuterpanel.cancelbuttonlabel=cancel]
WITHOUT_CLASSIFICATION	i18n[sqlresultexecuterpanel.currentsqllabel={0} of {1} - {2}]
WITHOUT_CLASSIFICATION	i18n[sqlresultexecuterpanel.statuslabel=status]
WITHOUT_CLASSIFICATION	i18n[sqltab.title=sql]
WITHOUT_CLASSIFICATION	empty body.
WITHOUT_CLASSIFICATION	corresponding to columns
WITHOUT_CLASSIFICATION	make sure no duplicates are kept in history.
WITHOUT_CLASSIFICATION	standard expanders.
WITHOUT_CLASSIFICATION	must be done in the gui thread
WITHOUT_CLASSIFICATION	register tabs to display in the details panel for database nodes.
WITHOUT_CLASSIFICATION	register tabs to display in the details panel for schema nodes.
WITHOUT_CLASSIFICATION	register tabs to display in the details panel for udt nodes.
WITHOUT_CLASSIFICATION	register tabs to display in the details panel for table nodes.
WITHOUT_CLASSIFICATION	setuptabbedpane((objecttreetabbedpane)it.next())
WITHOUT_CLASSIFICATION	private final isession _session
WITHOUT_CLASSIFICATION	_session = session
WITHOUT_CLASSIFICATION	add actions to the popup menu.
WITHOUT_CLASSIFICATION	options for global popup menu.
WITHOUT_CLASSIFICATION	empty.
WITHOUT_CLASSIFICATION	empty.
WITHOUT_CLASSIFICATION	empty.
WITHOUT_CLASSIFICATION	register so that we can display different tooltips depending which entry in list mouse is over.
WITHOUT_CLASSIFICATION	don't need tooltips any more.
WITHOUT_CLASSIFICATION	no need to this in background when schemainfo is not reloaded.
WITHOUT_CLASSIFICATION	we only show row counts for tables and views. other objects won't be affected by changing row counts.
WITHOUT_CLASSIFICATION	if node hasn't already been expanded.
WITHOUT_CLASSIFICATION	guaranteed to be non-null.
WITHOUT_CLASSIFICATION	see if all selected nodes are of the same type.
WITHOUT_CLASSIFICATION	guaranteed to be non-null.
WITHOUT_CLASSIFICATION	lazily create the event.
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	lazily create the event.
WITHOUT_CLASSIFICATION	menues that are also shown in the main window session menu might be in this popup. if we don't remove them the session won't be garbage collected.
WITHOUT_CLASSIFICATION	get the node to be expanded.
WITHOUT_CLASSIFICATION	empty body.
WITHOUT_CLASSIFICATION	empty body.
WITHOUT_CLASSIFICATION	else
WITHOUT_CLASSIFICATION	add table types to list.
WITHOUT_CLASSIFICATION	add stored proc parent node.
WITHOUT_CLASSIFICATION	add udt parent node.
WITHOUT_CLASSIFICATION	i18n[oracle.columns=columns]
WITHOUT_CLASSIFICATION	i18n[databaseobjectinfotab.title=info]
WITHOUT_CLASSIFICATION	i18n[databaseobjectinfotab.hint=basic information]
WITHOUT_CLASSIFICATION	i18n[basesourcetab.title=source]
WITHOUT_CLASSIFICATION	default is no reference
WITHOUT_CLASSIFICATION	we need the try/catch just to keep the compiler happy
WITHOUT_CLASSIFICATION	private isession _session
WITHOUT_CLASSIFICATION	linenumber height (abends when i use max_value)
WITHOUT_CLASSIFICATION	set right/left margin
WITHOUT_CLASSIFICATION	variables for this linenumber component
WITHOUT_CLASSIFICATION	i18n[keywordstab.title=keywords]
WITHOUT_CLASSIFICATION	update sizes when number of digits in the line number changes
WITHOUT_CLASSIFICATION	paint the background
WITHOUT_CLASSIFICATION	determine the number of lines to draw in the foreground.
WITHOUT_CLASSIFICATION	i18n[stringfunctionstab.title=string functions]
WITHOUT_CLASSIFICATION	'' outside comment
WITHOUT_CLASSIFICATION	i18n[stringfunctionstab.hint=show all the string functions available in dbms]
WITHOUT_CLASSIFICATION	i18n[datatypestab.title=data types]
WITHOUT_CLASSIFICATION	i18n[schemastab.hint=show all the schemas]
WITHOUT_CLASSIFICATION	i18n[procedurecolumnstab.hint=show columns for the selected procedure]
WITHOUT_CLASSIFICATION	i18n[procedurecolumnstab.title=columns]
WITHOUT_CLASSIFICATION	break
WITHOUT_CLASSIFICATION	i18n[indexestab.title=indexes]
WITHOUT_CLASSIFICATION	frontbase describes it's tables as "base table".
WITHOUT_CLASSIFICATION	i18n[rowcounttab.title=row count]
WITHOUT_CLASSIFICATION	provide the actual integer value as well as it's meaning
WITHOUT_CLASSIFICATION	i18n[contentstab.title=content]
WITHOUT_CLASSIFICATION	i18n[rowcounttab.hint=number of rows in the selected table]
WITHOUT_CLASSIFICATION	break
WITHOUT_CLASSIFICATION	break
WITHOUT_CLASSIFICATION	needed to prevent an infinite loop
WITHOUT_CLASSIFICATION	props.forcetablecontentsoutputclassnamechange()
WITHOUT_CLASSIFICATION	break
WITHOUT_CLASSIFICATION	we assume here that if the pseudocolumn was used in the query then it was likely to have caused the sqlexception. if not (length == 0) then retrying the query won't help - just throw the exception.
WITHOUT_CLASSIFICATION	break
WITHOUT_CLASSIFICATION	get the nullability information and pass it into the resultset unfortunately not all dbmss provide the column number in object 17 as stated in the sql documentation so we have to guess that the result set is in column order
WITHOUT_CLASSIFICATION	restore the paths
WITHOUT_CLASSIFICATION	only do this if the object tree (and hence this contents tab) is visible.
WITHOUT_CLASSIFICATION	save off selections so that selection/focus can be restored later.
WITHOUT_CLASSIFICATION	i18n[versioncolumnstab.title=versions]
WITHOUT_CLASSIFICATION	i18n[versioncolumnstab.hint=show columns that are automatically updated when the row is updated]
WITHOUT_CLASSIFICATION	i18n[primarykeytab.title=primary key]
WITHOUT_CLASSIFICATION	i18n[primarykeytab.hint=show primary key for the selected table]
WITHOUT_CLASSIFICATION	i18n[rowidtab.title=row ids]
WITHOUT_CLASSIFICATION	i18n[tablepriviligestab.hint=show access rights for the selected table]
WITHOUT_CLASSIFICATION	token kind token position in the source text (starting at 0) token column (starting at 0) token line (starting at 1) exact string value token string value (uppercase if ignorecase)
WITHOUT_CLASSIFICATION	set of characters to be ignored by the scanner
WITHOUT_CLASSIFICATION	error messages
WITHOUT_CLASSIFICATION	input scanner last recognized token lookahead token
WITHOUT_CLASSIFICATION	or a white space must be in front of the keyword.
WITHOUT_CLASSIFICATION	-1 because column starts with 1 put pos with 0
WITHOUT_CLASSIFICATION	either are at teh beginning
WITHOUT_CLASSIFICATION	on errors we restart the parser behind the error
WITHOUT_CLASSIFICATION	wait for pending chars to be processed post new characters
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	tell the ui that this _workingbuffer is through
WITHOUT_CLASSIFICATION	i18n[parserthread.undefinedtable=undefined table]
WITHOUT_CLASSIFICATION	number of errors detected
WITHOUT_CLASSIFICATION	i18n[errorstream.error.syntax=syntax error {0}]
WITHOUT_CLASSIFICATION	i18n[errorstream.notexpected=not expected]
WITHOUT_CLASSIFICATION	i18n[errorstream.unexpectedsymbol=this symbol not expected in]
WITHOUT_CLASSIFICATION	i18n[errorstream.invalid=invalid]
WITHOUT_CLASSIFICATION	i18n[errorstream.error.semantic=semantic error {0}]
WITHOUT_CLASSIFICATION	i18n[errorstream.noerrors=no errors detected]
WITHOUT_CLASSIFICATION	i18n[errorstream.multipleerrors={0} errors detected]
WITHOUT_CLASSIFICATION	fa_xxx
WITHOUT_CLASSIFICATION	schema should be identical to the statement. ignore
WITHOUT_CLASSIFICATION	check if this completion request is outside the original definition point
WITHOUT_CLASSIFICATION	try as an alias
WITHOUT_CLASSIFICATION	could also be a table name
WITHOUT_CLASSIFICATION	see if its a one-table statement
WITHOUT_CLASSIFICATION	now match the columns
WITHOUT_CLASSIFICATION	no need to return if completion is identical
WITHOUT_CLASSIFICATION	new line
WITHOUT_CLASSIFICATION	new line
WITHOUT_CLASSIFICATION	new line
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	try to save the selection. do not dispose of this panel if there is a problem
WITHOUT_CLASSIFICATION	i18n[editwhercolssheet.ok=ok]
WITHOUT_CLASSIFICATION	this is a tool window.
WITHOUT_CLASSIFICATION	leave a blank line just to make it look a bit nicer
WITHOUT_CLASSIFICATION	leave a blank line just to make it look a bit nicer
WITHOUT_CLASSIFICATION	i18n[generalsessionpropertiespanel.editabletable=editable table]
WITHOUT_CLASSIFICATION	i18n[generalsessionpropertiespanel.tablecontents=table contents]
WITHOUT_CLASSIFICATION	i18n[generalsessionpropertiespanel.datatype2='general preferences' window under the 'data type controls' tab.]
WITHOUT_CLASSIFICATION	i18n[editwhercolssheet.output=output]
WITHOUT_CLASSIFICATION	i18n[generalpropertiespanel.bottom=bottom]
WITHOUT_CLASSIFICATION	i18n[editwherecolspanel.limitcolsincell=limit columns in cell edit]
WITHOUT_CLASSIFICATION	i18n[editwherecolspanel.limitcolsincellhint=limit columns used in where clause when editing table]
WITHOUT_CLASSIFICATION	save the input for use later
WITHOUT_CLASSIFICATION	look up the table in the editwherecols list
WITHOUT_CLASSIFICATION	i18n[editwherecolspanel.cannotremoveallcols=you cannot remove all of the fields from the 'use columns' list.]
WITHOUT_CLASSIFICATION	create all of the gui objects now
WITHOUT_CLASSIFICATION	if all cols are in the "to use" side delete from editwherecols
WITHOUT_CLASSIFICATION	some cols are not to be used
WITHOUT_CLASSIFICATION	do not let user remove everything from the list
WITHOUT_CLASSIFICATION	i18n[editwherecolspanel.usecolumns=use columns]
WITHOUT_CLASSIFICATION	create the hashmap of names to use and put it in editwherecols
WITHOUT_CLASSIFICATION	get the values from the "not use" list and convert to sorted set
WITHOUT_CLASSIFICATION	get the values from the "use" list
WITHOUT_CLASSIFICATION	create an empty set for the "use" list
WITHOUT_CLASSIFICATION	get the values from the "use" list and convert to sorted set
WITHOUT_CLASSIFICATION	get the values from the "not use" list
WITHOUT_CLASSIFICATION	create an empty set for the "not use" list
WITHOUT_CLASSIFICATION	for each element in the "not use" set if selected then add to "use" otherwise add to new "not use" set
WITHOUT_CLASSIFICATION	i18n[sessionpropertiespanel.catalogprefix=limit catalog objects using these comma-delimited prefixes]
WITHOUT_CLASSIFICATION	i18n[sessionpropertiespanel.limitrowscontents=contents - limit rows]
WITHOUT_CLASSIFICATION	add node for each object.
WITHOUT_CLASSIFICATION	i18n[sessionpropertiespanel.showrowcount=show row count for tables (can slow application)]
WITHOUT_CLASSIFICATION	i18n[sessionpropertiespanel.objecttree=object tree]
WITHOUT_CLASSIFICATION	i18n[generalpropertiespanel.rows=rows]
WITHOUT_CLASSIFICATION	i18n[sessionobjecttreepropetiespanel.filters=filters]
WITHOUT_CLASSIFICATION	new line
WITHOUT_CLASSIFICATION	new line
WITHOUT_CLASSIFICATION	impossible.
WITHOUT_CLASSIFICATION	empty body.
WITHOUT_CLASSIFICATION	i18n[sessionpropertiessheet.sessionproperties=- session properties]
WITHOUT_CLASSIFICATION	to change body of overridden methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	this is a tool window.
WITHOUT_CLASSIFICATION	property panels for squirrel.
WITHOUT_CLASSIFICATION	i18n[sessionpropertiessheet.close=close]
WITHOUT_CLASSIFICATION	i18n[sessionpropertiessheet.ok=ok]
WITHOUT_CLASSIFICATION	go thru all plugins attached to this session asking for panels.
WITHOUT_CLASSIFICATION	add all panels to the tabbed panel.
WITHOUT_CLASSIFICATION	first convert internal data into the string array
WITHOUT_CLASSIFICATION	get each table's info
WITHOUT_CLASSIFICATION	put this into the data array
WITHOUT_CLASSIFICATION	make sure we are starting clean
WITHOUT_CLASSIFICATION	convert each string into key+hashmap and fill it into the data
WITHOUT_CLASSIFICATION	we are at the last one in the list
WITHOUT_CLASSIFICATION	i18n[schemainfo.loadingfunctions=loading functions]
WITHOUT_CLASSIFICATION	i18n[schemainfo.loadingschemas=loading schemas]
WITHOUT_CLASSIFICATION	by default null == types we return only cached types
WITHOUT_CLASSIFICATION	put the map into the tables db with the table name as the key
WITHOUT_CLASSIFICATION	extra keywords that this dbms supports.
WITHOUT_CLASSIFICATION	the sessionmanager is global to squirrel. if we don't remove the listeners the session won't get garbeage collected.
WITHOUT_CLASSIFICATION	load tables with catalog = doi.getcatalog() and schema = doi.getschema()
WITHOUT_CLASSIFICATION	load views with catalog = doi.getcatalog() and schema = doi.getschema()
WITHOUT_CLASSIFICATION	load procedures with catalog = null
WITHOUT_CLASSIFICATION	load procedures with schema = null
WITHOUT_CLASSIFICATION	it's error to have '8' and '9' in octal number
WITHOUT_CLASSIFICATION	'8' and '9' already handled
WITHOUT_CLASSIFICATION	/ schema dependent data. are changed only in this class
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	null == schemaloadinfos[0].schemaname is the case when there are no _schemas specified schemaloadinfos.length will then be 1.
WITHOUT_CLASSIFICATION	only single dot
WITHOUT_CLASSIFICATION	now create an array large enough to hold the original and the new
WITHOUT_CLASSIFICATION	append the new tables to the new array starting at the end of the original
WITHOUT_CLASSIFICATION	sort it and store in a new copyonwritearraylist
WITHOUT_CLASSIFICATION	copyonwritearraylist has snapshot iterators that don't support iterator.remove()
WITHOUT_CLASSIFICATION	unfortunately conversion to uppercase does not work properly for the georgian alphabet which has strange rules about case conversion. so we need to make one last check before exiting.
WITHOUT_CLASSIFICATION	current alias schema properties dont want cache. so we don't cache.
WITHOUT_CLASSIFICATION	reload complete schemainfo
WITHOUT_CLASSIFICATION	db2 stores all names in upper case. postgresql stores table names in lower case. that's why we may not find table as it was written in the create statement. so we try out the upper and lower case names too.
WITHOUT_CLASSIFICATION	i18n[oracle.displaycolumns=display index column information]
WITHOUT_CLASSIFICATION	stay in line-comment state
WITHOUT_CLASSIFICATION	i18n[sessionstartuptimehintdlg.dontshowagain=don't show this message again]
WITHOUT_CLASSIFICATION	stay in block-comment state
WITHOUT_CLASSIFICATION	i18n[whereclausepanel.columnlabel=columns]
WITHOUT_CLASSIFICATION	i18n[sessionstartuptimehintdlg.close=close]
WITHOUT_CLASSIFICATION	i18n[sessionstartuptimehintdlg.showaliasprops=open alias schema properties]
WITHOUT_CLASSIFICATION	hold the state
WITHOUT_CLASSIFICATION	i18n[whereclausepanel.valuelabel=value]
WITHOUT_CLASSIFICATION	i18n[whereclausepanel.whereclauselabel=where clause]
WITHOUT_CLASSIFICATION	i18n[whereclausepanel.hint=where clause for the selected table]
WITHOUT_CLASSIFICATION	hold the state
WITHOUT_CLASSIFICATION	put the 'and' or the 'or' in front of the clause if there are already values in the text area.
WITHOUT_CLASSIFICATION	i18n[oracle.triggerdetails=details]
WITHOUT_CLASSIFICATION	if the column is a text column and there aren't single quotes around the value put them there.
WITHOUT_CLASSIFICATION	i18n[oracle.displaytriggerdetails=display trigger details]
WITHOUT_CLASSIFICATION	first parse the sql string
WITHOUT_CLASSIFICATION	[i18n[orderbyclausepanel.columnslabel=columns]
WITHOUT_CLASSIFICATION	[i18n[orderbyclausepanel.hint=order by clause for the selected table]
WITHOUT_CLASSIFICATION	users.
WITHOUT_CLASSIFICATION	these must not be internationalized since sql tokens must be in english no i18n no i18n
WITHOUT_CLASSIFICATION	1. find the local release.xml file
WITHOUT_CLASSIFICATION	i18n[sqlfiltersheet.error.columnlist=unable to get list of columns {0}]
WITHOUT_CLASSIFICATION	i18n[downloadstatuseventhandler.downloadingupdatesmsg=downloading files]
WITHOUT_CLASSIFICATION	this is a tool window.
WITHOUT_CLASSIFICATION	boolean isuptodate() throws exception
WITHOUT_CLASSIFICATION	to change body of created methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	channel that provides stable release updates
WITHOUT_CLASSIFICATION	check once a day check once a week check every time the app launches
WITHOUT_CLASSIFICATION	channel that provides snapshot release updates - more frequent and less stable
WITHOUT_CLASSIFICATION	when all updates are retrieved tell the user that the updates will be installed upon the next startup.
WITHOUT_CLASSIFICATION	i18n[updatecontrollerimpl.changesrecordedmsg=requested changes will be made when squirrel is restarted]
WITHOUT_CLASSIFICATION	2. load the local release.xml file as a channelxmlbean.
WITHOUT_CLASSIFICATION	2. load the local release.xml file as a channelxmlbean.
WITHOUT_CLASSIFICATION	3. determine the channel that the user wants (stable or snapshot)
WITHOUT_CLASSIFICATION	4. get the release.xml file as a channelxmlbean from the server or filesystem.
WITHOUT_CLASSIFICATION	5. is it the same as the local copy which was placed either by the installer or the last update?
WITHOUT_CLASSIFICATION	build data
WITHOUT_CLASSIFICATION	build ui
WITHOUT_CLASSIFICATION	persists the change list to the update directory.
WITHOUT_CLASSIFICATION	kick off a thread to go and fetch the files one-by-one and register callback class - downloadstatuseventhandler
WITHOUT_CLASSIFICATION	1. wait for user to click ok/close
WITHOUT_CLASSIFICATION	2. display global preferences
WITHOUT_CLASSIFICATION	helper methods
WITHOUT_CLASSIFICATION	2. when the user clicks ok then display update dialog again.
WITHOUT_CLASSIFICATION	check to see if to is a directory and convert tofile to be the name of the file in that directory.
WITHOUT_CLASSIFICATION	helper methods
WITHOUT_CLASSIFICATION	if the update dir is actually a file log an error.
WITHOUT_CLASSIFICATION	if the downloads dir doesn't already exist just create it.
WITHOUT_CLASSIFICATION	1. find the local release.xml file. bail with exception if we cannot find it.
WITHOUT_CLASSIFICATION	5. is it the same as the local copy which was placed either by the installer or the last update?
WITHOUT_CLASSIFICATION	-1 is stored if the checksum operation failed. this will ensure that comparison with any other file's checksum will be different - even if they happen to be the same file.
WITHOUT_CLASSIFICATION	3. & 3a. get the release.xml file as a channelxmlbean from the server or filesystem.
WITHOUT_CLASSIFICATION	record now as the last time we checked for updates.
WITHOUT_CLASSIFICATION	3a. for server determine the channel that the user has (stable or snapshot)
WITHOUT_CLASSIFICATION	since this timer must be started when squirrel is launched wait a couple of minutes for squirrel to get done initializing the ui.
WITHOUT_CLASSIFICATION	since the user only wants to be notified of updates at startup return here thereby freeing up the thread.
WITHOUT_CLASSIFICATION	since this thread is not a ui thread it is ok to run the task synchronously.
WITHOUT_CLASSIFICATION	no update done to underlying data
WITHOUT_CLASSIFICATION	all currently installed artifacts will be marked with install action.
WITHOUT_CLASSIFICATION	copy the app module jar to core downloads directory
WITHOUT_CLASSIFICATION	get the type of artifact
WITHOUT_CLASSIFICATION	remove the core items since they are the most recent and the user is not allowed to remove them
WITHOUT_CLASSIFICATION	is it installed?
WITHOUT_CLASSIFICATION	core artifacts are not displayed
WITHOUT_CLASSIFICATION	artifactname type installed? install/update/remove
WITHOUT_CLASSIFICATION	label panel containing the versions for the update at top of dialog.
WITHOUT_CLASSIFICATION	install directories
WITHOUT_CLASSIFICATION	gui widgets
WITHOUT_CLASSIFICATION	helper methods
WITHOUT_CLASSIFICATION	helper methods
WITHOUT_CLASSIFICATION	spring-injected dependencies
WITHOUT_CLASSIFICATION	download directories
WITHOUT_CLASSIFICATION	backup directories
WITHOUT_CLASSIFICATION	skip files that are not installed - new files
WITHOUT_CLASSIFICATION	artifact name for plugins is <plugin internal name>.zip
WITHOUT_CLASSIFICATION	translations are most likely to be found in core lib dir.
WITHOUT_CLASSIFICATION	need to remove the existing jar in the plugins directory and all of the files beneath the plugin-named directory.
WITHOUT_CLASSIFICATION	skip the artifact if it is identical to the one that is already installed
WITHOUT_CLASSIFICATION	we have a core or translation file that is not already installed - add it
WITHOUT_CLASSIFICATION	handle squirrel-sql.jar and documentation archive carefully - they live at the top
WITHOUT_CLASSIFICATION	strange that release xml file wasn't found but not a problem at this point - just log it.
WITHOUT_CLASSIFICATION	this file is a zip it needs to be extracted into the install directory. all zips are packaged in such a way that the extraction beneath install directory is all that is required.
WITHOUT_CLASSIFICATION	--------------------------- spring=injected dependencies --------------------------------------------
WITHOUT_CLASSIFICATION	spring-injected
WITHOUT_CLASSIFICATION	spring-injected
WITHOUT_CLASSIFICATION	----------------------------------- public api ------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------- helper methods ------------------------------------------------
WITHOUT_CLASSIFICATION	f is a module
WITHOUT_CLASSIFICATION	time to wait between checks that the event dispatch thread isn't hung.
WITHOUT_CLASSIFICATION	maximum time we won't warn about.
WITHOUT_CLASSIFICATION	when we started dispatching the current event in milliseconds.
WITHOUT_CLASSIFICATION	have we already dumped a stack trace for the current event dispatch?
WITHOUT_CLASSIFICATION	the event dispatch thread for the purpose of getting stack traces.
WITHOUT_CLASSIFICATION	don't keep reporting the same hang every 100 ms.
WITHOUT_CLASSIFICATION	i18n[prelaunchhelperimpl.restorefailedmessage=restore from backup failed. re-installation may be required.
WITHOUT_CLASSIFICATION	used as the value of startedlasteventdispatchat when we're not in the middle of event dispatch.
WITHOUT_CLASSIFICATION	synchronize on the outer class because that's where all the state lives.
WITHOUT_CLASSIFICATION	we know that it's not interesting to show any code above where we get involved in event dispatch so we stop printing the stack trace when we get as far back as our code.
WITHOUT_CLASSIFICATION	i don't know of any api for getting the event dispatch thread but we can assume that it's the current thread if we're in the middle of dispatching an awt event
WITHOUT_CLASSIFICATION	get size of document width in pixels height in pixels height of printer page width of printer page
WITHOUT_CLASSIFICATION	make sure not print empty pages
WITHOUT_CLASSIFICATION	shift graphic to line up with beginning of print-imageable region
WITHOUT_CLASSIFICATION	shift graphic to line up with beginning of next page to print
WITHOUT_CLASSIFICATION	scale the page so the width fits
WITHOUT_CLASSIFICATION	for faster printing turn off double buffering
WITHOUT_CLASSIFICATION	repaint the page for printing
WITHOUT_CLASSIFICATION	first time through this method in program so go cleanup old log files
WITHOUT_CLASSIFICATION	public file getdebuglogfile() { return new file(_usersettingsdir + file.separator + "squirrel-sql-debug.log") }
WITHOUT_CLASSIFICATION	the number of files to keep is arbitrarilly set here
WITHOUT_CLASSIFICATION	define filter to select only names using the filebase
WITHOUT_CLASSIFICATION	get the directory
WITHOUT_CLASSIFICATION	create filename filter and attach to directory
WITHOUT_CLASSIFICATION	get list of files using that base name
WITHOUT_CLASSIFICATION	not too many old files
WITHOUT_CLASSIFICATION	we do not expect a lot of files in this directory so just do things linearly
WITHOUT_CLASSIFICATION	sort the list
WITHOUT_CLASSIFICATION	delete the old file
WITHOUT_CLASSIFICATION	a.put("built-by" "manningr") argmap.get(built_by_key)
WITHOUT_CLASSIFICATION	inserts are not properly separated. we give up.
WITHOUT_CLASSIFICATION	i18n[editextras.reformatfailed=reformat failed normalized strings differ]
WITHOUT_CLASSIFICATION	if our separator is the regular expression special char '|' then quote it before formatting.
WITHOUT_CLASSIFICATION	no special treatment
WITHOUT_CLASSIFICATION	no special treatment
WITHOUT_CLASSIFICATION	not successful
WITHOUT_CLASSIFICATION	not successful
WITHOUT_CLASSIFICATION	split the first two matching toplevel brakets here
WITHOUT_CLASSIFICATION	/ now check length of strings in splitpieces1 again
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	the next top level ket is the counterpart to bra
WITHOUT_CLASSIFICATION	no flaten. we would turn statement parts to comment
WITHOUT_CLASSIFICATION	light yellow
WITHOUT_CLASSIFICATION	without this the completion panel's size will be weird
WITHOUT_CLASSIFICATION	needs to be done later because when reinitlist is called the text componetes model is not yet up to date. e.g. the last character is missing.
WITHOUT_CLASSIFICATION	needed to resize completion panle appropriately see initializationof _curcompletionpanelsize
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	update the bounds of the popup
WITHOUT_CLASSIFICATION	convert to layered pane's coordinates
WITHOUT_CLASSIFICATION	can't fit -> hide
WITHOUT_CLASSIFICATION	valid bounds
WITHOUT_CLASSIFICATION	not in scroll pane
WITHOUT_CLASSIFICATION	i18n[databasemetadata.nullabletypenullableunknown=unknown]
WITHOUT_CLASSIFICATION	i18n[databasemetadata.searchabletypepredbasic=supports all except 'wherelike']
WITHOUT_CLASSIFICATION	guaranteed to be non-null.
WITHOUT_CLASSIFICATION	searchable column of result set.
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	resolve largest and preferred placements if possible
WITHOUT_CLASSIFICATION	compute available height above the cursor
WITHOUT_CLASSIFICATION	more space below
WITHOUT_CLASSIFICATION	more space above
WITHOUT_CLASSIFICATION	popup does not fit with the orig placement
WITHOUT_CLASSIFICATION	do one or two passes
WITHOUT_CLASSIFICATION	temporary events need to be included in case a modla dialog opens.
WITHOUT_CLASSIFICATION	place popup according to caret position and placement
WITHOUT_CLASSIFICATION	private boolean _showheadings
WITHOUT_CLASSIFICATION	note temporary events need to be included in case a modla dialog opens.
WITHOUT_CLASSIFICATION	some drivers will give null.
WITHOUT_CLASSIFICATION	nullable column of result set.
WITHOUT_CLASSIFICATION	private columndisplaydefinition[] _hdgs = new columndisplaydefinition[0]
WITHOUT_CLASSIFICATION	get the conentpane into a variable for convenience
WITHOUT_CLASSIFICATION	ignore - unused.
WITHOUT_CLASSIFICATION	the table containing the user's input
WITHOUT_CLASSIFICATION	object that called us and that we want to return data to when done
WITHOUT_CLASSIFICATION	save data passed in to us
WITHOUT_CLASSIFICATION	set layout
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	user said to insert so collect all the data from the jtable and send it to the datasetviewer for insertion into db and on-screen tables
WITHOUT_CLASSIFICATION	data_type column of result set. int data = _rs.getint(idx)
WITHOUT_CLASSIFICATION	if all columns in a table have empty strings as the headings then the row height of the label row is zero. we dont want this.
WITHOUT_CLASSIFICATION	create the jtable for input and put in the top of window
WITHOUT_CLASSIFICATION	add row headers to help user understand what the second row is
WITHOUT_CLASSIFICATION	create the buttons for input done and cancel
WITHOUT_CLASSIFICATION	this frame should really go away when done
WITHOUT_CLASSIFICATION	display the frame
WITHOUT_CLASSIFICATION	do not recognize this button request
WITHOUT_CLASSIFICATION	first make sure that user's last input has been included (it is too easy for user to enter data and forget to click on another field to force it to be set.)
WITHOUT_CLASSIFICATION	put the data into the db and the on-screen jtable. if there was a failure do not make this form go away since the user may be able to fix the problem by changing the data.
WITHOUT_CLASSIFICATION	the insert worked so make this input form go away
WITHOUT_CLASSIFICATION	create column model
WITHOUT_CLASSIFICATION	set up cell editors on first row
WITHOUT_CLASSIFICATION	the second row contains a multi-line description so make that row high enough to display it
WITHOUT_CLASSIFICATION	add mouse listener for popup
WITHOUT_CLASSIFICATION	for now ignore popup request rowdatajtable.this.displaypopupmenu(evt)
WITHOUT_CLASSIFICATION	for now ignore popup request rowdatajtable.this.displaypopupmenu(evt)
WITHOUT_CLASSIFICATION	figure out which column the user clicked on so we can pass in the right column description
WITHOUT_CLASSIFICATION	only the first row (containing data) is editable
WITHOUT_CLASSIFICATION	for entries past the first one use the default renderer
WITHOUT_CLASSIFICATION	i18n[rowinputdataframe.conversionerr=conversion error]
WITHOUT_CLASSIFICATION	coldefs[i].getsqltypename() + "\n" + ((coldefs[i].isnullable()) ? "nullable" "not nullable") + "\n" + "precision="+ coldefs[i].getprecision() + "\n" + "scale=" + coldefs[i].getscale()
WITHOUT_CLASSIFICATION	data is an object - assume already validated
WITHOUT_CLASSIFICATION	data is a string so we need to convert to real object
WITHOUT_CLASSIFICATION	display error message and do not update the table
WITHOUT_CLASSIFICATION	data converted ok so update the table
WITHOUT_CLASSIFICATION	set up the list of column names and the data for the rows
WITHOUT_CLASSIFICATION	set column heading set data in first row
WITHOUT_CLASSIFICATION	put a description of the field in the following rows
WITHOUT_CLASSIFICATION	put the data and header names into the model
WITHOUT_CLASSIFICATION	the text area displaying the object contents
WITHOUT_CLASSIFICATION	the scroll pane that holds the text area
WITHOUT_CLASSIFICATION	description needed to handle conversion of data to/from object
WITHOUT_CLASSIFICATION	name of file to do export/import/process on
WITHOUT_CLASSIFICATION	command to use when processing data with an external program
WITHOUT_CLASSIFICATION	save the original value for re-use by clob/blob types in conversion
WITHOUT_CLASSIFICATION	binary data viewing option which radix to use this object is only non-null when the data is binary data
WITHOUT_CLASSIFICATION	binary data viewing option view ascii as char rather than as numeric value
WITHOUT_CLASSIFICATION	user asked to see binary data in a different format default to hex
WITHOUT_CLASSIFICATION	return the expected format for this data default to hex
WITHOUT_CLASSIFICATION	tell user it is editable
WITHOUT_CLASSIFICATION	add a panel containing binary data editing options if needed
WITHOUT_CLASSIFICATION	this is a binary field so allow for multiple viewing options
WITHOUT_CLASSIFICATION	instances.
WITHOUT_CLASSIFICATION	sessions.
WITHOUT_CLASSIFICATION	i18n[popupeditableiopanel.withcommand=with command]
WITHOUT_CLASSIFICATION	get osx_file for export & external processing
WITHOUT_CLASSIFICATION	symbol used by user in command field to indicate "put the file name here" when the command is executed.
WITHOUT_CLASSIFICATION	import and external processing can only be done if panel is editable
WITHOUT_CLASSIFICATION	use default sequential layout
WITHOUT_CLASSIFICATION	load filename and command with previously entered info if not the default
WITHOUT_CLASSIFICATION	add some space
WITHOUT_CLASSIFICATION	add external processing command field and button
WITHOUT_CLASSIFICATION	add controls for file handling but only if datatype can do file operations
WITHOUT_CLASSIFICATION	do not do import
WITHOUT_CLASSIFICATION	yes it can so add controls
WITHOUT_CLASSIFICATION	add combo box for command to execute
WITHOUT_CLASSIFICATION	load the info into the text fields
WITHOUT_CLASSIFICATION	no entry selected
WITHOUT_CLASSIFICATION	do not do import
WITHOUT_CLASSIFICATION	make this the same size as the filenamefield
WITHOUT_CLASSIFICATION	file object for doing io
WITHOUT_CLASSIFICATION	reset width to normal
WITHOUT_CLASSIFICATION	add note to user about including file name in command
WITHOUT_CLASSIFICATION	user has entered some non-default info so save it
WITHOUT_CLASSIFICATION	get name of file which must exist
WITHOUT_CLASSIFICATION	import object from osx_file
WITHOUT_CLASSIFICATION	not allowed - must have existing file for import
WITHOUT_CLASSIFICATION	guard against something really stupid
WITHOUT_CLASSIFICATION	not something we can read
WITHOUT_CLASSIFICATION	i18n[popupeditableiopanel.noexportfile=no file name given for export.\nplease enter a file name or use browse before clicking export.]
WITHOUT_CLASSIFICATION	if file name default and cmd is null or empty make sure this entry is not being held in cellimportexportinfosaver
WITHOUT_CLASSIFICATION	save the user options - we know that it is not the default because we do not allow importing from "temp file"
WITHOUT_CLASSIFICATION	user has not entered anything or has reset to defaults so make sure there is no entry for this column in the saved info
WITHOUT_CLASSIFICATION	get the real name for use later
WITHOUT_CLASSIFICATION	now that we have the file do the import. note the sequence of operations is divided into two sections at this point. the preceeding code ensures that we have a readable file and the code in the following method call does the import. the reason for splitting at this point is that the execute operation needs to do an import and it will already have the file to do the import from (which is the same as the file it exported into).
WITHOUT_CLASSIFICATION	file name verification operations are the same for both export and execute so do that work here for both. if file name is null or empty do not proceed
WITHOUT_CLASSIFICATION	create the file to open
WITHOUT_CLASSIFICATION	user must have supplied a file name.
WITHOUT_CLASSIFICATION	user wants us to create a temp file
WITHOUT_CLASSIFICATION	see if file exists
WITHOUT_CLASSIFICATION	user does not want to overwrite the file
WITHOUT_CLASSIFICATION	file does not already exist so try to create it
WITHOUT_CLASSIFICATION	i18n[popupeditableiopanel.cannotopenfile=cannot open file {0}.\nerror was{1}]
WITHOUT_CLASSIFICATION	i18n[popupeditableiopanel.exportedtofile=data successfully exported to file {0}]
WITHOUT_CLASSIFICATION	i18n[popupeditableiopanel.exportsuccess=export success]
WITHOUT_CLASSIFICATION	we have done everything we can prior to this point to ensure that the the file is accessible but it is still possible that an existing file was removed at a bad moment. also the compiler insists that we put this in a try statement
WITHOUT_CLASSIFICATION	file exists is normal and is writable so see if user wants to overwrite contents of file
WITHOUT_CLASSIFICATION	user is ok with overwriting file we do not need to do anything special to overwrite (as opposed to appending) since the outputstring starts at the beginning of the file by default.
WITHOUT_CLASSIFICATION	we could tell user here that export was canceled but i don't think its necessary and that avoids forcing user to do yet another annoying mouse click.
WITHOUT_CLASSIFICATION	if we get here then everything worked correctly so tell user that data was put into file. this is different from the import strategy because the user may not know the name of the file that was used if they selected the automatic temp file operation or they may not know what directory the file was actually put into so this tells them the full file path.
WITHOUT_CLASSIFICATION	this may be called either when the table is editable or when it is read-only. when it is read-only there is no command to be saved but when it is editable there may be a command.
WITHOUT_CLASSIFICATION	if user did anything other than default then save their options
WITHOUT_CLASSIFICATION	export object to osx_file
WITHOUT_CLASSIFICATION	export object to osx_file execute program on it import it back
WITHOUT_CLASSIFICATION	export data to file
WITHOUT_CLASSIFICATION	replace any instance of flag in command with file name
WITHOUT_CLASSIFICATION	cannot execute a null command
WITHOUT_CLASSIFICATION	wait for command to complete
WITHOUT_CLASSIFICATION	bad export - do not proceed with command the exportdata() method has already put up a message to the user saying the export failed.
WITHOUT_CLASSIFICATION	import the data back from the same file
WITHOUT_CLASSIFICATION	check for possibly bad return from child
WITHOUT_CLASSIFICATION	the dataobject returns a string to put into the popup which can later be converted to the appropriate object type.
WITHOUT_CLASSIFICATION	command returned non-standard value. ask user before proceeding.
WITHOUT_CLASSIFICATION	end of combined export and execute operations
WITHOUT_CLASSIFICATION	if the file was a temp file delete it now. we assume that export-only operations want to leave the file in place but execute operations just want a temp space to work with and do not want it lying around afterwards.
WITHOUT_CLASSIFICATION	it is handy to have the cannonical path name to show user in error messages. since getting that name might involve an ioexception we need to put it inside a try statement. however since the file does exist there is no good reason for getting an ioexception at this point but if we get one there is something seriously wrong and we want to abort. therefore it make sense to get that name here and save it for later use.
WITHOUT_CLASSIFICATION	create the imput stream (so that datatype objects don't have to)
WITHOUT_CLASSIFICATION	hand file input stream to datatype object for import also handle file io errors here so that datatype objects do not have to.
WITHOUT_CLASSIFICATION	return the expected format for this data
WITHOUT_CLASSIFICATION	since the above did not throw an exception we now have a good new data object so change the text area to reflect that new object.
WITHOUT_CLASSIFICATION	cleanup resources used
WITHOUT_CLASSIFICATION	i18n[popupeditableiopanel.reformatxml=reformat xml]
WITHOUT_CLASSIFICATION	i18n[popupeditableiopanel.errorwritingfile=there was an error while writing file {0}.\nthe error was\n{1}]
WITHOUT_CLASSIFICATION	return the expected format for this data
WITHOUT_CLASSIFICATION	if the user has selected a non-cannonical binary format we need to convert the text appropriately
WITHOUT_CLASSIFICATION	we need to convert to a different format default to hex
WITHOUT_CLASSIFICATION	i cannot think of any reason for doing anything at all here
WITHOUT_CLASSIFICATION	hand file output stream to datatype object for export also handle file io errors here so that datatype objects do not have to.
WITHOUT_CLASSIFICATION	hand the current text to the datatype object. datatype object is responsible for validating that the text makes sense for this type of object and converting it to the proper form for output. all errors are handled as ioexceptions
WITHOUT_CLASSIFICATION	handle null
WITHOUT_CLASSIFICATION	if the data is not binary then there is no need for conversion. if the data is hex with ascii not shown as chars then no conversion needed.
WITHOUT_CLASSIFICATION	no need for conversion
WITHOUT_CLASSIFICATION	the following can cause and exception if the text is not formatted correctly
WITHOUT_CLASSIFICATION	the field is binary and not in the format expected by the datatype default to hex
WITHOUT_CLASSIFICATION	better safe than sorry!
WITHOUT_CLASSIFICATION	make sure there is an instance
WITHOUT_CLASSIFICATION	in case superclass modifies them.
WITHOUT_CLASSIFICATION	i18n[mapdataset.value=value]
WITHOUT_CLASSIFICATION	i18n[xmlreformatter.xmlwarning2=xml warning]
WITHOUT_CLASSIFICATION	datatypes may limit the initial data read from the db e.g. to minimize the time needed for the initial load of the table. to edit the contents of a cell we require that the entire contents of the data element be present in the cell before editing. therefore we ask the datatype if we need to re-read the data contents without limiting it and do that read if needed. if there is a problem during the read (e.g. we cannot identify exactly one row in the db matching the current row in the table) then the cell is not editable. the reverse is not true - if we succeed in reading the data there may still be other reasons why we cannot edit it so we need to check for it being editable after the read
WITHOUT_CLASSIFICATION	the following pointer is needed to allow the "make editable button to tell the application to set up an editable display panel
WITHOUT_CLASSIFICATION	the list of rows may be empty in which case we just return.
WITHOUT_CLASSIFICATION	save the pointer needed to enable editing of data on-demand
WITHOUT_CLASSIFICATION	there was a problem with the read it would be nice to report this to the user but if we try we get in trouble in some cases where the data is continually re-read after the dialog goes away (because the cell is being re-painted). cell is not editable
WITHOUT_CLASSIFICATION	gwg xml format check code
WITHOUT_CLASSIFICATION	if no columns defined return a generic class to avoid anything throwing an exception.
WITHOUT_CLASSIFICATION	sort the indexes into ascending order (because that is the only function easilly available from the arrays class)
WITHOUT_CLASSIFICATION	we want to delete rows from the end of the table towards the beginning of the table. if we delete from the front to the back that throws off the indexes of the rows after each delete and we would have to compensate for that. example if we want to delete rows 2 and 4 and do it in that order then after deleteing row 2 the row that used to be row 4 is now actually row 3 so we would have to subtract 1 from the index to get the row to delete. on the other hand if we delete row 4 first then the indexes of all rows prior to that one have not been affected so we can then delete row 2 without any complications.
WITHOUT_CLASSIFICATION	delete the row from the table
WITHOUT_CLASSIFICATION	the indexes are in ascending order but we want to delete in descending order (see previous comment) so run through the list backwards.
WITHOUT_CLASSIFICATION	the parse did not find xml or it was mal-formed
WITHOUT_CLASSIFICATION	do a simple check to see if the string might contain xml or not
WITHOUT_CLASSIFICATION	the parse did not find xml or it was mal-formed
WITHOUT_CLASSIFICATION	no tags so cannot be xml
WITHOUT_CLASSIFICATION	the parse did not find xml or it was mal-formed
WITHOUT_CLASSIFICATION	gwg format check code follows
WITHOUT_CLASSIFICATION	gwg xml format check code
WITHOUT_CLASSIFICATION	see if there was a problem during parsing
WITHOUT_CLASSIFICATION	end gwg format check code
WITHOUT_CLASSIFICATION	assume that all start tags are "<>" or include a space after the tag name (e.g. as in "<sometag args>" and all end tags are "</>". remove the syntactic markers then remove any spaces and convert to upper case for comparison
WITHOUT_CLASSIFICATION	check for "malformed" xml or text that happens to contain a "<" with no corresponding ">"
WITHOUT_CLASSIFICATION	done before actually reading the data from the resultset. if done after reading the data from the resultset oracle throws a nullpointerexception when processing resultsetmetadata methods for the resultset returned for databasemetadata.getexportedkeys.
WITHOUT_CLASSIFICATION	read the entire row since some drivers complain if columns are read out of sequence
WITHOUT_CLASSIFICATION	ss now select/reorder columns
WITHOUT_CLASSIFICATION	don't log an error message here. it is possible that the user interrupted the query because it was taking too long. just throw the exception and let the caller decide whether or not the exception should be logged.
WITHOUT_CLASSIFICATION	ss modified to auto-compute column widths if <computewidths> is true
WITHOUT_CLASSIFICATION	ss update dynamic column widths
WITHOUT_CLASSIFICATION	empty block
WITHOUT_CLASSIFICATION	oracle throws this ex on blob data types
WITHOUT_CLASSIFICATION	hsqldb 1.7.1 throws error.
WITHOUT_CLASSIFICATION	matt dahlman this causes problems with the jdbc driver delivered with teradata v2r05.00.00.11
WITHOUT_CLASSIFICATION	the jtable used for displaying all db resultset info.
WITHOUT_CLASSIFICATION	we want to allow editing of read-only tables on-demand but it would be confusing to include the "make editable" option when we are already in edit mode so only allow that option when the background model is updateable and we are not already editing
WITHOUT_CLASSIFICATION	just in case table is editable call creator to set up cell editors
WITHOUT_CLASSIFICATION	override the jtable method so that whenever something asks for the celleditor we save a reference to that cell editor. our assumption is that the cell editor is only requested when it is about to be activated.
WITHOUT_CLASSIFICATION	handle special case of delete with <null> contents
WITHOUT_CLASSIFICATION	ignore the user input
WITHOUT_CLASSIFICATION	data is an object - assume already validated
WITHOUT_CLASSIFICATION	generally for key_typed this means add the typed char to the end of the text but there are some things (e.g. control chars) that are ignored so let the normal processing do its thing
WITHOUT_CLASSIFICATION	now check to see if the original contents were <null> and we have actually added the input char to the end of it
WITHOUT_CLASSIFICATION	check that we did not just add a char to a <null>
WITHOUT_CLASSIFICATION	replace the null with just the char
WITHOUT_CLASSIFICATION	figure out which column the user clicked on so we can pass in the right column description
WITHOUT_CLASSIFICATION	data is a string so we need to convert to real object
WITHOUT_CLASSIFICATION	display error message and do not update the table
WITHOUT_CLASSIFICATION	data converted ok so update the table
WITHOUT_CLASSIFICATION	just in case table is editable call creator to set up cell editors
WITHOUT_CLASSIFICATION	_coldefs = hdgs
WITHOUT_CLASSIFICATION	column not in model
WITHOUT_CLASSIFICATION	call the datatype object for this column and have it check the current value
WITHOUT_CLASSIFICATION	call the underlying model to get the whole data if possible
WITHOUT_CLASSIFICATION	underlaying data cannot be changed
WITHOUT_CLASSIFICATION	cannot delete rows in read-only table
WITHOUT_CLASSIFICATION	cannot insert row into read-only table
WITHOUT_CLASSIFICATION	default is 12 point so define font relative to that
WITHOUT_CLASSIFICATION	reset each time we start a new print
WITHOUT_CLASSIFICATION	double headerwidth = tableheader.getwidth() scale
WITHOUT_CLASSIFICATION	while
WITHOUT_CLASSIFICATION	if are more columns left part page
WITHOUT_CLASSIFICATION	begin code related to printing
WITHOUT_CLASSIFICATION	variables used in printing
WITHOUT_CLASSIFICATION	at least 1 more row left
WITHOUT_CLASSIFICATION	page number message (in smaller type)
WITHOUT_CLASSIFICATION	draw the header on every page
WITHOUT_CLASSIFICATION	cut table image and draw on the page
WITHOUT_CLASSIFICATION	double pagebottom = pagetop + clipheight + headerheight
WITHOUT_CLASSIFICATION	end of code related to printing
WITHOUT_CLASSIFICATION	since user is now using popup stop editing using the in-cell editor if any
WITHOUT_CLASSIFICATION	fixes classcastexception see below.
WITHOUT_CLASSIFICATION	((imainframe) comp).addinternalframe(taif false) taif.setlayer(jlayeredpane.popup_layer)
WITHOUT_CLASSIFICATION	getroot() doesn't appear to return the deepest window but the first one. if you have a dialog owned by a window you get the dialog not the window.
WITHOUT_CLASSIFICATION	fudge for larger inset windows
WITHOUT_CLASSIFICATION	determine the position to place the new internal frame. ensure that the right end of the internal frame doesn't exend past the right end the parent frame.use a fudge factor as the dim.width doesn't appear to get the final width of the internal frame (e.g. where pt.x + dim.width == parentbounds.width the new internal frame still extends past the right end of the parent frame).
WITHOUT_CLASSIFICATION	inner class for the data display pane
WITHOUT_CLASSIFICATION	data is editable in popup
WITHOUT_CLASSIFICATION	since data is editable we need to add control panel to manage user requests for db update file io etc.
WITHOUT_CLASSIFICATION	data is not editable in popup
WITHOUT_CLASSIFICATION	create update/cancel controls using default layout
WITHOUT_CLASSIFICATION	try to convert the text in the popup into a valid instance of type of data object being held in the table cell
WITHOUT_CLASSIFICATION	handle an error in conversion of text to object
WITHOUT_CLASSIFICATION	no problem in conversion - proceed with update ((datasetviewertablepanel.myjtable)_table).setconvertedvalueat( newvalue _row _col)
WITHOUT_CLASSIFICATION	add buttons to button panel
WITHOUT_CLASSIFICATION	add button panel to main panel
WITHOUT_CLASSIFICATION	save various information which is needed to do update & cancel.
WITHOUT_CLASSIFICATION	the following is only useable for a root type of internalframe. if the root type is dialog or frame then other code must be used.
WITHOUT_CLASSIFICATION	we need to table column model to be able to add celleditors to the individual columns
WITHOUT_CLASSIFICATION	i18n[datasetviewereditabletablepanel.warning=warning]
WITHOUT_CLASSIFICATION	check to see if new data is same as old data in which case we do not update the underlying data. this is not an optimization (though it does speed things up). we need to do this to avoid an error when we check for rows being changed in the db. if the new value and old value are the same when we look to see if any rows already exist with the new value it will find the existing row and claim that the update will make one row identical to the changed row (i.e. that there will be two identical rows in the db) which is not true. so we avoid the problem by not updating the db if the data has not been changed. this can happen if user changes the cell contents then changes them back before exiting the cell.
WITHOUT_CLASSIFICATION	menu for right-mouse-click when in cell editors
WITHOUT_CLASSIFICATION	use factory to get the appropriate editor
WITHOUT_CLASSIFICATION	cannot edit something that we do not know anything about
WITHOUT_CLASSIFICATION	if there is no updateable model then we cannot update anything (should never happen - just being safe here)
WITHOUT_CLASSIFICATION	cannot edit the rowid column if present
WITHOUT_CLASSIFICATION	add right-click menu to cell editor
WITHOUT_CLASSIFICATION	no underlying data so cannot be changed
WITHOUT_CLASSIFICATION	we have to look for the modelindex because of the row number column
WITHOUT_CLASSIFICATION	ask the datatype object if the two values are the same
WITHOUT_CLASSIFICATION	at this point the user input has been validated and both the new and old values are objects of the appropriate data type. either or both of newvalue and oldvalue may be null.
WITHOUT_CLASSIFICATION	first look to see if they are identical objects e.g. both null
WITHOUT_CLASSIFICATION	the caller does not need to know that nothing happened
WITHOUT_CLASSIFICATION	the caller does not need to know that nothing happened
WITHOUT_CLASSIFICATION	no update done to underlying data
WITHOUT_CLASSIFICATION	if we reach this point the value has been changed so fall through to next section
WITHOUT_CLASSIFICATION	if either of the values is null and the other is not then the data has changed and we fall-through to the change process. otherwise check the object contents.
WITHOUT_CLASSIFICATION	no update done to underlying data
WITHOUT_CLASSIFICATION	call the function in the app code that checks for unexpected conditions in the current db
WITHOUT_CLASSIFICATION	call the function in the app code that saves the data in the persistant storage (e.g. a database). the success or failure of that function (as indicated by the absance or presence of a result errpor/warning message) determines the result of this call. (since the table is supposed to be editable we should have an idatasetupdateabletablemodel object set in our super class.)
WITHOUT_CLASSIFICATION	no problems so indicate a successful update of the underlying data. in case we are editing an sql result that contains the edited colum more than once we need to tell the caller to update all columns. otherwise generation of where clauses for further editing will fail.
WITHOUT_CLASSIFICATION	the list of rows may be empty in which case we tell user they should select something first
WITHOUT_CLASSIFICATION	non-empty set of rows to delete. make sure user wants to delete
WITHOUT_CLASSIFICATION	determine the position to place the new internal frame. ensure that the right end of the internal frame doesn't exend past the right end the parent frame.use a fudge factor as the dim.width doesn't appear to get the final width of the internal frame (e.g. where pt.x + dim.width == parentbounds.width the new internal frame still extends past the right end of the parent frame).
WITHOUT_CLASSIFICATION	cancel any current cell editing operations
WITHOUT_CLASSIFICATION	tell creator to delete from db
WITHOUT_CLASSIFICATION	tell user that there was a problem
WITHOUT_CLASSIFICATION	setting the starting position is ugly. i just picked a point.
WITHOUT_CLASSIFICATION	get the default values from the db for the table columns
WITHOUT_CLASSIFICATION	based on defaults from db get the default object instance for each column
WITHOUT_CLASSIFICATION	((imainframe)comp).addinternalframe(rdif false) rdif.setlayer(jlayeredpane.popup_layer)
WITHOUT_CLASSIFICATION	there was a problem inserting into the db
WITHOUT_CLASSIFICATION	non-null return tells caller there was a problem
WITHOUT_CLASSIFICATION	add the data to the existing tables
WITHOUT_CLASSIFICATION	do not try to be fancy and insert the data where the user is looking just stuff it into the actual model and re-paint the table when the 'table changed' event is fired.
WITHOUT_CLASSIFICATION	everything is ok
WITHOUT_CLASSIFICATION	setters and getters for each field.
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	_leftdata.add(row[0]) _rightdata.add(row[1])
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	the jtextcomponent that is being used for editing
WITHOUT_CLASSIFICATION	first we have the methods for in-cell and text-table operations
WITHOUT_CLASSIFICATION	this datatype does not limit the data read during the initial load of the table so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. this happens only in the jtextfield not the jtextarea so we can make this an inner class within this method rather than a separate inner class as is done with the keytexthandler class.
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	now the functions for the popup-related operations.
WITHOUT_CLASSIFICATION	return a jtextarea usable in the cellpopupdialog and fill in the value.
WITHOUT_CLASSIFICATION	the following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	user wants field to be true
WITHOUT_CLASSIFICATION	user wants field to be false
WITHOUT_CLASSIFICATION	1646886 if we've already seen the parameter don't create another instance as this will force the user to enter the same value twice. add the previous instance to itemsinsql though so that the parameters value gets propagated to the right spot(s) in the sql statement.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data the same one used in text and in-cell operations.
WITHOUT_CLASSIFICATION	let user enter t t y y or 1 for true and f f n n or 0 for false
WITHOUT_CLASSIFICATION	tabs and newlines get put into the text before this check so remove them this only applies to popup editing since these chars are not passed to this level by the in-cell editor.
WITHOUT_CLASSIFICATION	remove all instances of the offending char
WITHOUT_CLASSIFICATION	truncate string
WITHOUT_CLASSIFICATION	handle cases of null the only legal input in this case is a delete
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	when field is not null delete means set to null so do it
WITHOUT_CLASSIFICATION	field is not nullable or input was not a delete we have already handled all legal input so just tell user this is being ignored
WITHOUT_CLASSIFICATION	database-related functions
WITHOUT_CLASSIFICATION	try to use the db default value
WITHOUT_CLASSIFICATION	no default in db. if nullable use null.
WITHOUT_CLASSIFICATION	field is not nullable so create a reasonable default value
WITHOUT_CLASSIFICATION	file io related functions
WITHOUT_CLASSIFICATION	convert file text into a string special case some systems tack a newline at the end of the text read. assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid data value
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	the jtextcomponent that is being used for editing
WITHOUT_CLASSIFICATION	the cellrenderer used for this data type
WITHOUT_CLASSIFICATION	first we have the methods for in-cell and text-table operations
WITHOUT_CLASSIFICATION	this datatype does not limit the data read during the initial load of the table so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. this happens only in the jtextfield not the jtextarea so we can make this an inner class within this method rather than a separate inner class as is done with the keytexthandler class.
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	now the functions for the popup-related operations.
WITHOUT_CLASSIFICATION	return a jtextarea usable in the cellpopupdialog and fill in the value.
WITHOUT_CLASSIFICATION	the following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	internal class for handling key events during editing of both jtextfield and jtextarea.
WITHOUT_CLASSIFICATION	the sql results page puts text into the table cells rather than objects of the appropriate type so we need to convert befor proceeding
WITHOUT_CLASSIFICATION	use the default settings for the conversion
WITHOUT_CLASSIFICATION	first convert internal data into the string array
WITHOUT_CLASSIFICATION	tabs and newlines get put into the text before this check so remove them this only applies to popup editing since these chars are not passed to this level by the in-cell editor.
WITHOUT_CLASSIFICATION	remove all instances of the offending char
WITHOUT_CLASSIFICATION	truncate string
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	database-related functions
WITHOUT_CLASSIFICATION	try to use the db default value
WITHOUT_CLASSIFICATION	field is not nullable so create a reasonable default value
WITHOUT_CLASSIFICATION	file io related functions
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	handle cases of null the processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	about to delete last thing in field so replace with null
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	?? there does not seem to be any standard way to represent ?? binary data in a where clause tell caller we cannot use this in where clause
WITHOUT_CLASSIFICATION	no default in db. if nullable use null.
WITHOUT_CLASSIFICATION	convert bytes to bytes
WITHOUT_CLASSIFICATION	return the text converted from the file
WITHOUT_CLASSIFICATION	convert bytes to bytes
WITHOUT_CLASSIFICATION	the numberformat object to use for all locale-dependent formatting.
WITHOUT_CLASSIFICATION	handle null
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	the jtextcomponent that is being used for editing
WITHOUT_CLASSIFICATION	the cellrenderer used for this data type
WITHOUT_CLASSIFICATION	get each datatype's info
WITHOUT_CLASSIFICATION	convert each string into classname prop & value and fill it into the data
WITHOUT_CLASSIFICATION	put the property into the hashmap
WITHOUT_CLASSIFICATION	get the hashmap for this type or create it if this is a new property
WITHOUT_CLASSIFICATION	conversion constants
WITHOUT_CLASSIFICATION	number of chars used to represent byte the base radix
WITHOUT_CLASSIFICATION	convert each byte and put into string buffer
WITHOUT_CLASSIFICATION	if user wants to see ascii chars as characters see if this is one that should be displayed that way
WITHOUT_CLASSIFICATION	convert signed to unsigned
WITHOUT_CLASSIFICATION	fall through to default
WITHOUT_CLASSIFICATION	some formats (e.g. hex & octal) extend a negative number to multiple places (e.g. fc becomes fffc) so chop off extra stuff in front
WITHOUT_CLASSIFICATION	front pad with zeros and add to output
WITHOUT_CLASSIFICATION	always add spaces at end for consistancy
WITHOUT_CLASSIFICATION	get the text to be converted
WITHOUT_CLASSIFICATION	handle ascii chars irrespective of the radix the second byte will always be a space when the data is displayed as a single ascii character.
WITHOUT_CLASSIFICATION	convert the char into its numeric value
WITHOUT_CLASSIFICATION	default to hex if unknown base passed in
WITHOUT_CLASSIFICATION	the whole column definition
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. this happens only in the jtextfield not the jtextarea so we can make this an inner class within this method rather than a separate inner class as is done with the keytexthandler class.
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	value is a simple string representation of the data the same one used in text and in-cell operations.
WITHOUT_CLASSIFICATION	remove all instances of the offending char
WITHOUT_CLASSIFICATION	truncate string
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	first we have the methods for in-cell and text-table operations
WITHOUT_CLASSIFICATION	return (string)_renderer.renderobject(value)
WITHOUT_CLASSIFICATION	now the functions for the popup-related operations.
WITHOUT_CLASSIFICATION	the following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	internal class for handling key events during editing of both jtextfield and jtextarea.
WITHOUT_CLASSIFICATION	several number formats use '.' as decimal separator others use ''
WITHOUT_CLASSIFICATION	try to use the db default value
WITHOUT_CLASSIFICATION	if there was a problem with converting then just fall through and continue as if there was no default given in the db. otherwise use the converted object
WITHOUT_CLASSIFICATION	field is not nullable so create a reasonable default value
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	about to delete last thing in field so replace with null
WITHOUT_CLASSIFICATION	no default in db. if nullable use null.
WITHOUT_CLASSIFICATION	database-related functions
WITHOUT_CLASSIFICATION	since we cannot do exact matches on floating point numbers we cannot use this field in the where clause.
WITHOUT_CLASSIFICATION	file io related functions
WITHOUT_CLASSIFICATION	convert number conversion issue into io issue for consistancy
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	the jtextcomponent that is being used for editing
WITHOUT_CLASSIFICATION	the cellrenderer used for this data type
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid data value
WITHOUT_CLASSIFICATION	whether number is signed or unsigned
WITHOUT_CLASSIFICATION	the number of decimal digits allowed in the number
WITHOUT_CLASSIFICATION	this datatype does not limit the data read during the initial load of the table so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	now the functions for the popup-related operations.
WITHOUT_CLASSIFICATION	return a jtextarea usable in the cellpopupdialog and fill in the value.
WITHOUT_CLASSIFICATION	the following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	internal class for handling key events during editing of both jtextfield and jtextarea.
WITHOUT_CLASSIFICATION	tabs and newlines get put into the text before this check so remove them this only applies to popup editing since these chars are not passed to this level by the in-cell editor.
WITHOUT_CLASSIFICATION	remove all instances of the offending char
WITHOUT_CLASSIFICATION	truncate string
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	database-related functions
WITHOUT_CLASSIFICATION	try to use the db default value
WITHOUT_CLASSIFICATION	field is not nullable so create a reasonable default value
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	handle cases of null the processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	about to delete last thing in field so replace with null
WITHOUT_CLASSIFICATION	no default in db. if nullable use null.
WITHOUT_CLASSIFICATION	convert number conversion issue into io issue for consistancy
WITHOUT_CLASSIFICATION	look for illegal chars
WITHOUT_CLASSIFICATION	cannot use '-' when unsigned
WITHOUT_CLASSIFICATION	check for max size reached (only works when db provides non-zero scale info
WITHOUT_CLASSIFICATION	max size reached
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	the jtextcomponent that is being used for editing
WITHOUT_CLASSIFICATION	first we have the methods for in-cell and text-table operations
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid data value
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	convert file text into a string special case some systems tack a newline at the end of the text read. assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	properties settable by the user
WITHOUT_CLASSIFICATION	flag for whether we have already loaded the properties or not
WITHOUT_CLASSIFICATION	set to the default
WITHOUT_CLASSIFICATION	set to default
WITHOUT_CLASSIFICATION	no existing blob to re-use
WITHOUT_CLASSIFICATION	for convenience cast the existing object
WITHOUT_CLASSIFICATION	now the functions for the popup-related operations.
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. this happens only in the jtextfield not the jtextarea so we can make this an inner class within this method rather than a separate inner class as is done with the keytexthandler class.
WITHOUT_CLASSIFICATION	return a jtextarea usable in the cellpopupdialog and fill in the value.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data the same one used in text and in-cell operations.
WITHOUT_CLASSIFICATION	the following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	database-related functions
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	about to delete last thing in field so replace with null
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	blobs are different from normal data types in that what is actually read from the db is a descriptor pointing to the data rather than the data itself. during the initial load of the table the values read from the descriptor may have been limited but the descriptor itself has been completely read therefore we do not need to re-read the datum from the database because we know that we have the entire descriptor. if the contents of the blob have been limited during the initial table load that will be discovered when we check if the cell is editable and the full data will be read at that time using this descriptor.
WITHOUT_CLASSIFICATION	if the original object is not null then it contains a blob object that we need to re-use since that is the dbs reference to the blob data area. otherwise we set the original blob to null and the write method needs to know to set the field to null.
WITHOUT_CLASSIFICATION	create new object to hold the different value but use the same internal blob pointer as the original
WITHOUT_CLASSIFICATION	internal class for handling key events during editing of both jtextfield and jtextarea.
WITHOUT_CLASSIFICATION	make sure the entire blob data is read in. return true if it has been read successfully and false if not.
WITHOUT_CLASSIFICATION	can use an empty blob for editing
WITHOUT_CLASSIFICATION	the whole blob has been previously read in
WITHOUT_CLASSIFICATION	data was not fully read in before so try to do that now
WITHOUT_CLASSIFICATION	read succeeded so reset the blobdescriptor to match
WITHOUT_CLASSIFICATION	we successfully read the whole thing
WITHOUT_CLASSIFICATION	end of constructor for inner class
WITHOUT_CLASSIFICATION	i18n[datatypeblob.blobtype=blob (sql type 2004)]
WITHOUT_CLASSIFICATION	try to use the db default value
WITHOUT_CLASSIFICATION	if there was a problem with converting then just fall through and continue as if there was no default given in the db. otherwise use the converted object
WITHOUT_CLASSIFICATION	field is not nullable so create a reasonable default value
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	handle cases of null the processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	no default in db. if nullable use null.
WITHOUT_CLASSIFICATION	convert bytes to bytes
WITHOUT_CLASSIFICATION	return the text converted from the file
WITHOUT_CLASSIFICATION	convert bytes to bytes
WITHOUT_CLASSIFICATION	?? what to do with this error? ?? error message = "could not read the complete data. error was "+ex.getmessage())
WITHOUT_CLASSIFICATION	we always get the blob even when we are not reading the contents. since the blob is just a pointer to the blob data rather than the data itself this operation should not take much time (as opposed to getting all of the data in the blob).
WITHOUT_CLASSIFICATION	blob exists so try to read the data from it based on the user's directions
WITHOUT_CLASSIFICATION	user said to read at least some of the data from the blob
WITHOUT_CLASSIFICATION	determine whether we read all there was in the blob or not
WITHOUT_CLASSIFICATION	user said not to read any of the data from the blob
WITHOUT_CLASSIFICATION	blob cannot be used in where clause
WITHOUT_CLASSIFICATION	for convenience cast the object to blobdescriptor
WITHOUT_CLASSIFICATION	file io related functions
WITHOUT_CLASSIFICATION	property change control panel
WITHOUT_CLASSIFICATION	if this panel is called before any instances of the class have been created we need to load the properties from the dtproperties.
WITHOUT_CLASSIFICATION	gui components - need to be here because they need to be accessible from the event handlers to alter each other's state.
WITHOUT_CLASSIFICATION	check box for whether to read contents during table load or not
WITHOUT_CLASSIFICATION	combo box for read-all/read-part of blob
WITHOUT_CLASSIFICATION	combo box for read-all/read-part of blob
WITHOUT_CLASSIFICATION	text field for how many bytes of blob to read
WITHOUT_CLASSIFICATION	set up the controls
WITHOUT_CLASSIFICATION	checkbox for read/not-read on table load
WITHOUT_CLASSIFICATION	handle cross-connection between fields
WITHOUT_CLASSIFICATION	create the panel and add the gui items to it
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	the jtextcomponent that is being used for editing
WITHOUT_CLASSIFICATION	first we have the methods for in-cell and text-table operations
WITHOUT_CLASSIFICATION	this datatype does not limit the data read during the initial load of the table so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. this happens only in the jtextfield not the jtextarea so we can make this an inner class within this method rather than a separate inner class as is done with the keytexthandler class.
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	now the functions for the popup-related operations.
WITHOUT_CLASSIFICATION	return a jtextarea usable in the cellpopupdialog and fill in the value.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data the same one used in text and in-cell operations.
WITHOUT_CLASSIFICATION	the following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	tabs and newlines get put into the text before this check so remove them this only applies to popup editing since these chars are not passed to this level by the in-cell editor.
WITHOUT_CLASSIFICATION	remove all instances of the offending char
WITHOUT_CLASSIFICATION	truncate string
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	handle cases of null the processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	about to delete last thing in field so replace with null
WITHOUT_CLASSIFICATION	whether number is signed or unsigned
WITHOUT_CLASSIFICATION	the number of decimal digits allowed in the number
WITHOUT_CLASSIFICATION	look for illegal chars
WITHOUT_CLASSIFICATION	cannot use '-' when unsigned
WITHOUT_CLASSIFICATION	check for max size reached (only works when db provides non-zero scale info
WITHOUT_CLASSIFICATION	max size reached
WITHOUT_CLASSIFICATION	get the values from the controls and set them in the static properties
WITHOUT_CLASSIFICATION	end of inner class
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	the jtextcomponent that is being used for editing
WITHOUT_CLASSIFICATION	the cellrenderer used for this data type
WITHOUT_CLASSIFICATION	first we have the methods for in-cell and text-table operations
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	database-related functions
WITHOUT_CLASSIFICATION	try to use the db default value
WITHOUT_CLASSIFICATION	field is not nullable so create a reasonable default value
WITHOUT_CLASSIFICATION	file io related functions
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid data value
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	no default in db. if nullable use null.
WITHOUT_CLASSIFICATION	convert file text into a string special case some systems tack a newline at the end of the text read. assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	convert number conversion issue into io issue for consistancy
WITHOUT_CLASSIFICATION	properties settable by the user
WITHOUT_CLASSIFICATION	flag for whether we have already loaded the properties or not
WITHOUT_CLASSIFICATION	get parameters previously set by user or set default values set to the default
WITHOUT_CLASSIFICATION	set to the default
WITHOUT_CLASSIFICATION	set to the default
WITHOUT_CLASSIFICATION	set to default
WITHOUT_CLASSIFICATION	for convenience cast the value object to its type
WITHOUT_CLASSIFICATION	all the data from the clob has been read. make sure there are no newlines in it
WITHOUT_CLASSIFICATION	since we do not have all of the data from the clob we cannot allow editing
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. this happens only in the jtextfield not the jtextarea so we can make this an inner class within this method rather than a separate inner class as is done with the keytexthandler class.
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	for convenience cast the existing object
WITHOUT_CLASSIFICATION	no existing clob to re-use
WITHOUT_CLASSIFICATION	create new object to hold the different value but use the same internal clob pointer as the original
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	now the functions for the popup-related operations.
WITHOUT_CLASSIFICATION	return a jtextarea usable in the cellpopupdialog and fill in the value.
WITHOUT_CLASSIFICATION	the following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data but not the same one used in the text and in-cell operations. the in-cell version may replace newline chars with "\n" while this version does not. in other respects it is the same as the in-cell version because both use the _renderer object to do the rendering.
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	database-related functions
WITHOUT_CLASSIFICATION	handle cases of null the processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	about to delete last thing in field so replace with null
WITHOUT_CLASSIFICATION	we successfully read the whole thing
WITHOUT_CLASSIFICATION	make sure the entire clob data is read in. return true if it has been read successfully and false if not.
WITHOUT_CLASSIFICATION	can use an empty clob for editing
WITHOUT_CLASSIFICATION	the whole clob has been previously read in
WITHOUT_CLASSIFICATION	read succeeded so reset the clobdescriptor to match
WITHOUT_CLASSIFICATION	try to use the db default value
WITHOUT_CLASSIFICATION	field is not nullable so create a reasonable default value
WITHOUT_CLASSIFICATION	file io related functions
WITHOUT_CLASSIFICATION	no default in db. if nullable use null.
WITHOUT_CLASSIFICATION	?? what to do with this error? ?? error message = "could not read the complete data. error was "+ex.getmessage())
WITHOUT_CLASSIFICATION	we always get the clob even when we are not reading the contents. since the clob is just a pointer to the clob data rather than the data itself this operation should not take much time (as opposed to getting all of the data in the clob).
WITHOUT_CLASSIFICATION	clob exists so try to read the data from it based on the user's directions
WITHOUT_CLASSIFICATION	user said to read at least some of the data from the clob
WITHOUT_CLASSIFICATION	determine whether we read all there was in the clob or not
WITHOUT_CLASSIFICATION	user said not to read any of the data from the clob
WITHOUT_CLASSIFICATION	clob cannot be used in where clause
WITHOUT_CLASSIFICATION	for convenience cast the object to clobdescriptor
WITHOUT_CLASSIFICATION	if there was a problem with converting then just fall through and continue as if there was no default given in the db. otherwise use the converted object
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	convert number conversion issue into io issue for consistancy
WITHOUT_CLASSIFICATION	gui components - need to be here because they need to be accessible from the event handlers to alter each other's state.
WITHOUT_CLASSIFICATION	property change control panel
WITHOUT_CLASSIFICATION	check box for whether to read contents during table load or not i18n[datatypebigdecimal.readcontentsonfirstload=read contents when table is first loaded]
WITHOUT_CLASSIFICATION	i18n[datatypeclob.typeclob=clob (sql type 2005)]
WITHOUT_CLASSIFICATION	if this panel is called before any instances of the class have been created we need to load the properties from the dtproperties.
WITHOUT_CLASSIFICATION	combo box for read-all/read-part of blob
WITHOUT_CLASSIFICATION	combo box for read-all/read-part of blob
WITHOUT_CLASSIFICATION	text field for how many bytes of blob to read
WITHOUT_CLASSIFICATION	set up the controls
WITHOUT_CLASSIFICATION	checkbox for read/not-read on table load
WITHOUT_CLASSIFICATION	handle cross-connection between fields
WITHOUT_CLASSIFICATION	end of constructor for inner class
WITHOUT_CLASSIFICATION	get the values from the controls and set them in the static properties
WITHOUT_CLASSIFICATION	end of inner class
WITHOUT_CLASSIFICATION	check box for whether to show newlines as "\n" for in-cell display
WITHOUT_CLASSIFICATION	checkbox for displaying newlines as \n in-cell
WITHOUT_CLASSIFICATION	field for size of text to read
WITHOUT_CLASSIFICATION	create the panel and add the gui items to it
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	convert number conversion issue into io issue for consistancy
WITHOUT_CLASSIFICATION	special case the input is exactly the output
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	the jtextcomponent that is being used for editing
WITHOUT_CLASSIFICATION	the cellrenderer used for this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid data value
WITHOUT_CLASSIFICATION	first we have the methods for in-cell and text-table operations
WITHOUT_CLASSIFICATION	convert file text into a string special case some systems tack a newline at the end of the text read. assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	flag for whether we have already loaded the properties or not
WITHOUT_CLASSIFICATION	properties set-able by the user
WITHOUT_CLASSIFICATION	which locale-dependent format to use short medium long or full
WITHOUT_CLASSIFICATION	whether to force user to enter dates in exact format or use heuristics to guess it
WITHOUT_CLASSIFICATION	the dateformat object to use for all locale-dependent formatting. this is reset each time the user changes the previous settings.
WITHOUT_CLASSIFICATION	values for how to use timestamps in where clauses
WITHOUT_CLASSIFICATION	define whether or not to use timestamp in internally generated where clauses and if so what format to use.
WITHOUT_CLASSIFICATION	get parameters previously set by user or set default values set to use the java default
WITHOUT_CLASSIFICATION	use the java default date-to-string
WITHOUT_CLASSIFICATION	use a date formatter
WITHOUT_CLASSIFICATION	use the dateformat to parse
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	value is a simple string representation of the data the same one used in text and in-cell operations.
WITHOUT_CLASSIFICATION	as a coding convenience create a reference to the text component that is typecast to jtextcomponent. this is not essential as we could typecast every reference but this makes the code cleaner
WITHOUT_CLASSIFICATION	tabs and newlines get put into the text before this check so remove them this only applies to popup editing since these chars are not passed to this level by the in-cell editor.
WITHOUT_CLASSIFICATION	now the functions for the popup-related operations.
WITHOUT_CLASSIFICATION	return a jtextarea usable in the cellpopupdialog and fill in the value.
WITHOUT_CLASSIFICATION	the following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	internal class for handling key events during editing of both jtextfield and jtextarea.
WITHOUT_CLASSIFICATION	get which locale-dependent format to use set to use the java default
WITHOUT_CLASSIFICATION	use lenient input or force user to enter exact format set to allow less stringent input
WITHOUT_CLASSIFICATION	how to use timestamp in where clauses default to sql standard
WITHOUT_CLASSIFICATION	truncate string
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	try to use the db default value
WITHOUT_CLASSIFICATION	field is not nullable so create a reasonable default value
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	about to delete last thing in field so replace with null
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	no default in db. if nullable use null.
WITHOUT_CLASSIFICATION	database-related functions
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	if there was a problem with converting then just fall through and continue as if there was no default given in the db. otherwise use the converted object
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid data value
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	file io related functions
WITHOUT_CLASSIFICATION	convert number conversion issue into io issue for consistancy
WITHOUT_CLASSIFICATION	whether number is signed or unsigned
WITHOUT_CLASSIFICATION	property change control panel
WITHOUT_CLASSIFICATION	warning this depends on entries in buttongroup being in the same order as the values for whereclauseusage
WITHOUT_CLASSIFICATION	i18n[datetypetimestamp.generatewhereclause=for internally generated where clauses]
WITHOUT_CLASSIFICATION	combo box for read-all/read-part of blob
WITHOUT_CLASSIFICATION	combo box for read-all/read-part of blob
WITHOUT_CLASSIFICATION	set up the controls
WITHOUT_CLASSIFICATION	handle cross-connection between fields
WITHOUT_CLASSIFICATION	end of constructor for inner class
WITHOUT_CLASSIFICATION	get the values from the controls and set them in the static properties
WITHOUT_CLASSIFICATION	end of inner class
WITHOUT_CLASSIFICATION	gui components - need to be here because they need to be accessible from the event handlers to alter each other's state.
WITHOUT_CLASSIFICATION	if you add this method to one of the standard datatypes in the fw/datasetviewer/cellcomponent directory you must also add the name of that datatype class to the list in cellcomponentfactory method getcontrolpanels variable named initialclassnamelist. if the class is being registered with the factory using registerdatatype then you should not include the class name in the list (it will be found automatically) but if the datatype is part of the case statement in the factory method getdatatypeobject then it does need to be explicitly listed in the getcontrolpanels method also.
WITHOUT_CLASSIFICATION	important put the buttons into the array in same order as their associated values defined for whereclauseusage.
WITHOUT_CLASSIFICATION	class that displays the various formats available for dates
WITHOUT_CLASSIFICATION	where clause usage group
WITHOUT_CLASSIFICATION	check box for whether to use java default or a locale-dependent format
WITHOUT_CLASSIFICATION	checkbox for java default/non-default format
WITHOUT_CLASSIFICATION	objects needed to handle radio buttons
WITHOUT_CLASSIFICATION	lenient is set next
WITHOUT_CLASSIFICATION	create the panel and add the gui items to it
WITHOUT_CLASSIFICATION	lenient checkbox
WITHOUT_CLASSIFICATION	add label for the radio button group
WITHOUT_CLASSIFICATION	the jtextcomponent that is being used for editing
WITHOUT_CLASSIFICATION	the cellrenderer used for this data type
WITHOUT_CLASSIFICATION	first we have the methods for in-cell and text-table operations
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	now the functions for the popup-related operations.
WITHOUT_CLASSIFICATION	the number of decimal digits allowed in the number
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	return a jtextarea usable in the cellpopupdialog and fill in the value.
WITHOUT_CLASSIFICATION	the following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	tabs and newlines get put into the text before this check so remove them this only applies to popup editing since these chars are not passed to this level by the in-cell editor.
WITHOUT_CLASSIFICATION	as a coding convenience create a reference to the text component that is typecast to jtextcomponent. this is not essential as we could typecast every reference but this makes the code cleaner
WITHOUT_CLASSIFICATION	look for illegal chars
WITHOUT_CLASSIFICATION	cannot use '-' when unsigned
WITHOUT_CLASSIFICATION	remove all instances of the offending char
WITHOUT_CLASSIFICATION	truncate string
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	about to delete last thing in field so replace with null
WITHOUT_CLASSIFICATION	check for max size reached (only works when db provides non-zero scale info
WITHOUT_CLASSIFICATION	max size reached
WITHOUT_CLASSIFICATION	database-related functions
WITHOUT_CLASSIFICATION	try to use the db default value
WITHOUT_CLASSIFICATION	if there was a problem with converting then just fall through and continue as if there was no default given in the db. otherwise use the converted object
WITHOUT_CLASSIFICATION	field is not nullable so create a reasonable default value
WITHOUT_CLASSIFICATION	file io related functions
WITHOUT_CLASSIFICATION	no default in db. if nullable use null.
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid data value
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	convert number conversion issue into io issue for consistancy
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	the jtextcomponent that is being used for editing
WITHOUT_CLASSIFICATION	whether number is signed or unsigned
WITHOUT_CLASSIFICATION	the number of decimal digits allowed in the number
WITHOUT_CLASSIFICATION	this datatype does not limit the data read during the initial load of the table so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. this happens only in the jtextfield not the jtextarea so we can make this an inner class within this method rather than a separate inner class as is done with the keytexthandler class.
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	now the functions for the popup-related operations.
WITHOUT_CLASSIFICATION	return a jtextarea usable in the cellpopupdialog and fill in the value.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data the same one used in text and in-cell operations.
WITHOUT_CLASSIFICATION	the following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	if there are parameters in the sql string then we need to prompt for some answers.
WITHOUT_CLASSIFICATION	remove all instances of the offending char
WITHOUT_CLASSIFICATION	truncate string
WITHOUT_CLASSIFICATION	handle cases of null the processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	look for illegal chars
WITHOUT_CLASSIFICATION	cannot use '-' when unsigned
WITHOUT_CLASSIFICATION	check for max size reached (only works when db provides non-zero scale info
WITHOUT_CLASSIFICATION	max size reached
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	about to delete last thing in field so replace with null
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	try to use the db default value
WITHOUT_CLASSIFICATION	database-related functions
WITHOUT_CLASSIFICATION	if there was a problem with converting then just fall through and continue as if there was no default given in the db. otherwise use the converted object
WITHOUT_CLASSIFICATION	field is not nullable so create a reasonable default value
WITHOUT_CLASSIFICATION	file io related functions
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid data value
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	no default in db. if nullable use null.
WITHOUT_CLASSIFICATION	convert file text into a string special case some systems tack a newline at the end of the text read. assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	convert number conversion issue into io issue for consistancy
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	the jtextcomponent that is being used for editing
WITHOUT_CLASSIFICATION	the cellrenderer used for this data type
WITHOUT_CLASSIFICATION	flag for whether we have already loaded the properties or not
WITHOUT_CLASSIFICATION	flag for whether to use the default java format (true) or the locale-dependent format (false)
WITHOUT_CLASSIFICATION	which locale-dependent format to use short medium long or full
WITHOUT_CLASSIFICATION	whether to force user to enter dates in exact format or use heuristics to guess it
WITHOUT_CLASSIFICATION	the dateformat object to use for all locale-dependent formatting. this is reset each time the user changes the previous settings.
WITHOUT_CLASSIFICATION	if the cell is editable we really must have a valid datatype object so the 'else' clause should never be used. it is just there as defensive programming.
WITHOUT_CLASSIFICATION	properties settable by the user
WITHOUT_CLASSIFICATION	first we have the methods for in-cell and text-table operations
WITHOUT_CLASSIFICATION	get parameters previously set by user or set default values set to use the java default
WITHOUT_CLASSIFICATION	get which locale-dependent format to use set to use the java default
WITHOUT_CLASSIFICATION	use lenient input or force user to enter exact format set to allow less stringent input
WITHOUT_CLASSIFICATION	use the java default date-to-string
WITHOUT_CLASSIFICATION	use a date formatter
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. this happens only in the jtextfield not the jtextarea so we can make this an inner class within this method rather than a separate inner class as is done with the keytexthandler class.
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	now the functions for the popup-related operations.
WITHOUT_CLASSIFICATION	return a jtextarea usable in the cellpopupdialog and fill in the value.
WITHOUT_CLASSIFICATION	the following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	internal class for handling key events during editing of both jtextfield and jtextarea.
WITHOUT_CLASSIFICATION	use the dateformat to parse
WITHOUT_CLASSIFICATION	allow the user to enter just the hour or just hour and minute and assume the un-entered values are 0
WITHOUT_CLASSIFICATION	user just entered the hour so append min & sec
WITHOUT_CLASSIFICATION	user entered hour an min. see if they also entered secs
WITHOUT_CLASSIFICATION	user did not enter seconds
WITHOUT_CLASSIFICATION	truncate string
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	tabs and newlines get put into the text before this check so remove them this only applies to popup editing since these chars are not passed to this level by the in-cell editor.
WITHOUT_CLASSIFICATION	try to use the db default value
WITHOUT_CLASSIFICATION	field is not nullable so create a reasonable default value
WITHOUT_CLASSIFICATION	handle cases of null the processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	about to delete last thing in field so replace with null
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	no default in db. if nullable use null.
WITHOUT_CLASSIFICATION	database-related functions
WITHOUT_CLASSIFICATION	i18n[datatypetime.typetime=time (sql type 92)]
WITHOUT_CLASSIFICATION	if there was a problem with converting then just fall through and continue as if there was no default given in the db. otherwise use the converted object
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid data value
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	the whole column definition
WITHOUT_CLASSIFICATION	file io related functions
WITHOUT_CLASSIFICATION	convert file text into a string special case some systems tack a newline at the end of the text read. assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	convert number conversion issue into io issue for consistancy
WITHOUT_CLASSIFICATION	if this panel is called before any instances of the class have been created we need to load the properties from the dtproperties.
WITHOUT_CLASSIFICATION	combo box for read-all/read-part of blob
WITHOUT_CLASSIFICATION	combo box for read-all/read-part of blob
WITHOUT_CLASSIFICATION	set up the controls
WITHOUT_CLASSIFICATION	handle cross-connection between fields
WITHOUT_CLASSIFICATION	end of constructor for inner class
WITHOUT_CLASSIFICATION	get the values from the controls and set them in the static properties
WITHOUT_CLASSIFICATION	end of inner class
WITHOUT_CLASSIFICATION	property change control panel
WITHOUT_CLASSIFICATION	if you add this method to one of the standard datatypes in the fw/datasetviewer/cellcomponent directory you must also add the name of that datatype class to the list in cellcomponentfactory method getcontrolpanels variable named initialclassnamelist. if the class is being registered with the factory using registerdatatype then you should not include the class name in the list (it will be found automatically) but if the datatype is part of the case statement in the factory method getdatatypeobject then it does need to be explicitly listed in the getcontrolpanels method also.
WITHOUT_CLASSIFICATION	class that displays the various formats available for dates
WITHOUT_CLASSIFICATION	gui components - need to be here because they need to be accessible from the event handlers to alter each other's state.
WITHOUT_CLASSIFICATION	check box for whether to use java default or a locale-dependent format
WITHOUT_CLASSIFICATION	checkbox for java default/non-default format
WITHOUT_CLASSIFICATION	lenient checkbox
WITHOUT_CLASSIFICATION	create the panel and add the gui items to it
WITHOUT_CLASSIFICATION	lenient is set next
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	the jtextcomponent that is being used for editing
WITHOUT_CLASSIFICATION	the cellrenderer used for this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. this happens only in the jtextfield not the jtextarea so we can make this an inner class within this method rather than a separate inner class as is done with the keytexthandler class.
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	value is a simple string representation of the data the same one used in text and in-cell operations.
WITHOUT_CLASSIFICATION	remove all instances of the offending char
WITHOUT_CLASSIFICATION	truncate string
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	try to use the db default value
WITHOUT_CLASSIFICATION	field is not nullable so create a reasonable default value
WITHOUT_CLASSIFICATION	as a coding convenience create a reference to the text component that is typecast to jtextcomponent. this is not essential as we could typecast every reference but this makes the code cleaner
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	about to delete last thing in field so replace with null
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	no default in db. if nullable use null.
WITHOUT_CLASSIFICATION	the numberformat object to use for all locale-dependent formatting.
WITHOUT_CLASSIFICATION	first we have the methods for in-cell and text-table operations
WITHOUT_CLASSIFICATION	return (string)_renderer.renderobject(value)
WITHOUT_CLASSIFICATION	now the functions for the popup-related operations.
WITHOUT_CLASSIFICATION	return a jtextarea usable in the cellpopupdialog and fill in the value.
WITHOUT_CLASSIFICATION	the following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	internal class for handling key events during editing of both jtextfield and jtextarea.
WITHOUT_CLASSIFICATION	several number formats use '.' as decimal separator others use ''
WITHOUT_CLASSIFICATION	database-related functions
WITHOUT_CLASSIFICATION	the jtextcomponent that is being used for editing
WITHOUT_CLASSIFICATION	the cellrenderer used for this data type
WITHOUT_CLASSIFICATION	this datatype does not limit the data read during the initial load of the table so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. this happens only in the jtextfield not the jtextarea so we can make this an inner class within this method rather than a separate inner class as is done with the keytexthandler class.
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	database-related functions
WITHOUT_CLASSIFICATION	try to use the db default value
WITHOUT_CLASSIFICATION	if there was a problem with converting then just fall through and continue as if there was no default given in the db. otherwise use the converted object
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid data value
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	since we cannot do exact matches on floating point numbers we cannot use this field in the where clause.
WITHOUT_CLASSIFICATION	file io related functions
WITHOUT_CLASSIFICATION	convert file text into a string special case some systems tack a newline at the end of the text read. assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	convert number conversion issue into io issue for consistancy
WITHOUT_CLASSIFICATION	properties settable by the user
WITHOUT_CLASSIFICATION	flag for whether we have already loaded the properties or not
WITHOUT_CLASSIFICATION	get parameters previously set by user or set default values set to the default
WITHOUT_CLASSIFICATION	return ((string)obj1).equals(obj2)
WITHOUT_CLASSIFICATION	first we have the cell-related and text-table operations.
WITHOUT_CLASSIFICATION	now define the popup-related operations.
WITHOUT_CLASSIFICATION	return a jtextarea usable in the cellpopupdialog.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data the same one used in the text and in-cell operations.
WITHOUT_CLASSIFICATION	the following is used by both in-cell and popup operations.
WITHOUT_CLASSIFICATION	internal class for handling key events during editing of both jtextfield and jtextarea. since neither cell nor popup are allowed to edit just ignore anything seen here.
WITHOUT_CLASSIFICATION	special handling of operations while editing strings
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	the jtextcomponent that is being used for editing
WITHOUT_CLASSIFICATION	the cellrenderer used for this data type
WITHOUT_CLASSIFICATION	first we have the methods for in-cell and text-table operations
WITHOUT_CLASSIFICATION	this datatype does not limit the data read during the initial load of the table so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	file io related functions
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	as a coding convenience create a reference to the text component that is typecast to jtextcomponent. this is not essential as we could typecast every reference but this makes the code cleaner
WITHOUT_CLASSIFICATION	no default in db. if nullable use null.
WITHOUT_CLASSIFICATION	the whole column definition
WITHOUT_CLASSIFICATION	the numberformat object to use for all locale-dependent formatting.
WITHOUT_CLASSIFICATION	return (string)_renderer.renderobject(value)
WITHOUT_CLASSIFICATION	if this panel is called before any instances of the class have been created we need to load the properties from the dtproperties.
WITHOUT_CLASSIFICATION	check box for whether to read contents during table load or not
WITHOUT_CLASSIFICATION	set up the controls
WITHOUT_CLASSIFICATION	checkbox for read/not-read on table load
WITHOUT_CLASSIFICATION	end of constructor for inner class
WITHOUT_CLASSIFICATION	get the values from the controls and set them in the static properties
WITHOUT_CLASSIFICATION	end of inner class
WITHOUT_CLASSIFICATION	property change control panel
WITHOUT_CLASSIFICATION	field is not nullable so create a reasonable default value cannot create default value for unknown data type
WITHOUT_CLASSIFICATION	create the panel and add the gui items to it
WITHOUT_CLASSIFICATION	the total number of decimal digits allowed in the number
WITHOUT_CLASSIFICATION	the number of decimal digits allowed to the right of the decimal point in the number
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. this happens only in the jtextfield not the jtextarea so we can make this an inner class within this method rather than a separate inner class as is done with the keytexthandler class.
WITHOUT_CLASSIFICATION	return a jtextarea usable in the cellpopupdialog and fill in the value.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data the same one used in text and in-cell operations.
WITHOUT_CLASSIFICATION	the following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	tabs and newlines get put into the text before this check so remove them this only applies to popup editing since these chars are not passed to this level by the in-cell editor.
WITHOUT_CLASSIFICATION	remove all instances of the offending char
WITHOUT_CLASSIFICATION	truncate string
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	try to use the db default value
WITHOUT_CLASSIFICATION	field is not nullable so create a reasonable default value
WITHOUT_CLASSIFICATION	handle cases of null the processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	about to delete last thing in field so replace with null
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	no default in db. if nullable use null.
WITHOUT_CLASSIFICATION	several number formats use '.' as decimal separator others use ''
WITHOUT_CLASSIFICATION	convert number conversion issue into io issue for consistancy
WITHOUT_CLASSIFICATION	now the functions for the popup-related operations.
WITHOUT_CLASSIFICATION	internal class for handling key events during editing of both jtextfield and jtextarea.
WITHOUT_CLASSIFICATION	file io related functions
WITHOUT_CLASSIFICATION	some dbs give a negative number when they do not have a value for the scale. assume that if the _scale is 0 or positive that the db really means for that to be the scale but if it is negative then we do not check.
WITHOUT_CLASSIFICATION	check the total number of digits in the number. since the string version of the number is therepresentation of the digits in that number and including possibly a plus or minus and a decimal start by counting the number of digits in the string.
WITHOUT_CLASSIFICATION	now remove the non-digit chars if any
WITHOUT_CLASSIFICATION	some drivers (e.g. oracle) give precision as 0 in some cases. when precision is 0 we cannot check the length so do not try.
WITHOUT_CLASSIFICATION	user entered '+' or '-' at a bad place
WITHOUT_CLASSIFICATION	database-related functions
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	if there was a problem with converting then just fall through and continue as if there was no default given in the db. otherwise use the converted object
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	convert file text into a string special case some systems tack a newline at the end of the text read. assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid value of this data type
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	the jtextcomponent that is being used for editing
WITHOUT_CLASSIFICATION	the cellrenderer used for this data type
WITHOUT_CLASSIFICATION	this datatype does not limit the data read during the initial load of the table so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	properties settable by the user
WITHOUT_CLASSIFICATION	flag for whether we have already loaded the properties or not
WITHOUT_CLASSIFICATION	get parameters previously set by user or set default values set to the default
WITHOUT_CLASSIFICATION	first we have the cell-related and text-table operations.
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	return a jtextarea usable in the cellpopupdialog.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data the same one used in the text and in-cell operations.
WITHOUT_CLASSIFICATION	the following is used by both in-cell and popup operations.
WITHOUT_CLASSIFICATION	database-related functions
WITHOUT_CLASSIFICATION	try to use the db default value
WITHOUT_CLASSIFICATION	if there was a problem with converting then just fall through and continue as if there was no default given in the db. otherwise use the converted object
WITHOUT_CLASSIFICATION	file io related functions
WITHOUT_CLASSIFICATION	no default in db. if nullable use null.
WITHOUT_CLASSIFICATION	property change control panel
WITHOUT_CLASSIFICATION	special handling of operations while editing strings
WITHOUT_CLASSIFICATION	if this panel is called before any instances of the class have been created we need to load the properties from the dtproperties.
WITHOUT_CLASSIFICATION	check box for whether to read contents during table load or not
WITHOUT_CLASSIFICATION	set up the controls
WITHOUT_CLASSIFICATION	checkbox for read/not-read on table load
WITHOUT_CLASSIFICATION	end of constructor for inner class
WITHOUT_CLASSIFICATION	get the values from the controls and set them in the static properties
WITHOUT_CLASSIFICATION	end of inner class
WITHOUT_CLASSIFICATION	field is not nullable so create a reasonable default value cannot create default value for unknown data type
WITHOUT_CLASSIFICATION	create the panel and add the gui items to it
WITHOUT_CLASSIFICATION	gui components - need to be here because they need to be accessible from the event handlers to alter each other's state.
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	the other obj is null so see if this non-null obj contains a null value which is equivilent. assume that if we have read some of the data and we still have _data == null then the value in the db is actually null.
WITHOUT_CLASSIFICATION	the other obj has not read the data yet.
WITHOUT_CLASSIFICATION	the other obj has not read the data yet.
WITHOUT_CLASSIFICATION	the other object has real data
WITHOUT_CLASSIFICATION	this one does not so they are not equal
WITHOUT_CLASSIFICATION	both have actual data so compare the strings note that if one has read all of the data and the other has read only part of the data that we will say that they are not equal.
WITHOUT_CLASSIFICATION	convert the data into an ascii representation using the standard convention
WITHOUT_CLASSIFICATION	we have the whole contents of the blob tell user the data is truncated
WITHOUT_CLASSIFICATION	getters and setters
WITHOUT_CLASSIFICATION	restore the contents to the original value.
WITHOUT_CLASSIFICATION	set the contents of the component without resetting the original value.
WITHOUT_CLASSIFICATION	as a coding convenience create a reference to the text component that is typecast to jtextcomponent. this is not essential as we could typecast every reference but this makes the code cleaner
WITHOUT_CLASSIFICATION	handle cases of null the processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	check for max size reached (only works when db provides non-zero scale info
WITHOUT_CLASSIFICATION	max size reached
WITHOUT_CLASSIFICATION	special handling of operations while editing strings
WITHOUT_CLASSIFICATION	the other object has real data
WITHOUT_CLASSIFICATION	this one does not so they are not equal
WITHOUT_CLASSIFICATION	we have the whole contents of the clob
WITHOUT_CLASSIFICATION	tell user the data is truncated
WITHOUT_CLASSIFICATION	getters and setters
WITHOUT_CLASSIFICATION	note tabs and newlines are allowed in string fields even though they are unusual.
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	the jtextcomponent that is being used for editing
WITHOUT_CLASSIFICATION	the cellrenderer used for this data type
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	about to delete last thing in field so replace with null
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	properties settable by the user
WITHOUT_CLASSIFICATION	flag for whether we have already loaded the properties or not
WITHOUT_CLASSIFICATION	get parameters previously set by user or set default values set to the default
WITHOUT_CLASSIFICATION	set to the default
WITHOUT_CLASSIFICATION	set to default
WITHOUT_CLASSIFICATION	set to default
WITHOUT_CLASSIFICATION	set to default
WITHOUT_CLASSIFICATION	for strings a "blank" field is allowed so only switch to null when there is nothing left in the field and user does delete
WITHOUT_CLASSIFICATION	the number of characters allowed in this field
WITHOUT_CLASSIFICATION	first we have the cell-related and text-table operations.
WITHOUT_CLASSIFICATION	prevent editing if text contains newlines
WITHOUT_CLASSIFICATION	if we are not limiting anything return false
WITHOUT_CLASSIFICATION	if the value is null then it was read ok
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. this happens only in the jtextfield not the jtextarea so we can make this an inner class within this method rather than a separate inner class as is done with the keytexthandler class.
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	internal class for handling key events during editing of both jtextfield and jtextarea.
WITHOUT_CLASSIFICATION	the following is used by both in-cell and popup operations.
WITHOUT_CLASSIFICATION	special handling of operations while editing strings
WITHOUT_CLASSIFICATION	if the data is longer than the limit then we have previously re-read the contents and we do not need to re-read it again
WITHOUT_CLASSIFICATION	if we are limiting all columns then we need to re-read because we do not know if we have all the data or not
WITHOUT_CLASSIFICATION	check for the case where we are limiting some columns but not limiting this particular column
WITHOUT_CLASSIFICATION	column is limited and length == limit so need to re-read column is not limited so we have the whole thing
WITHOUT_CLASSIFICATION	now define the popup-related operations.
WITHOUT_CLASSIFICATION	the only thing that would prevent us from editing a string in the popup is if that string has been truncated when read from the db. thus being able to edit the string is the same as not needing to re-read the data.
WITHOUT_CLASSIFICATION	return a jtextarea usable in the cellpopupdialog.
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	handle cases of null the processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	check for max size reached (only works when db provides non-zero scale info
WITHOUT_CLASSIFICATION	max size reached
WITHOUT_CLASSIFICATION	note tabs and newlines are allowed in string fields even though they are unusual.
WITHOUT_CLASSIFICATION	for strings a "blank" field is allowed so only switch to null when there is nothing left in the field and user does delete
WITHOUT_CLASSIFICATION	database-related functions
WITHOUT_CLASSIFICATION	data is longer than the limit so we need to do more checking
WITHOUT_CLASSIFICATION	this column is limited so truncate the data
WITHOUT_CLASSIFICATION	this column cannot be used in a where clause
WITHOUT_CLASSIFICATION	we cannot use this data in the where clause if it has been truncated. since being truncated is the same as needing to re-read only use this in the where clause if we do not need to re-read
WITHOUT_CLASSIFICATION	value is truncated so do not use in where clause
WITHOUT_CLASSIFICATION	no default in db. if nullable use null.
WITHOUT_CLASSIFICATION	file io related functions
WITHOUT_CLASSIFICATION	data must fit into the column's max size
WITHOUT_CLASSIFICATION	for string just send the text to the output file
WITHOUT_CLASSIFICATION	i18n[datatypestring.allowlongvarchar=allow longvarchar type to be used in where clause]
WITHOUT_CLASSIFICATION	i18n[datatypestring.newlines=show newlines as \\n within cells]
WITHOUT_CLASSIFICATION	i18n[datatypestring.limitsize=limit size of strings read during initial table load to max of]
WITHOUT_CLASSIFICATION	property change control panel
WITHOUT_CLASSIFICATION	if you add this method to one of the standard datatypes in the fw/datasetviewer/cellcomponent directory you must also add the name of that datatype class to the list in cellcomponentfactory method getcontrolpanels variable named initialclassnamelist. if the class is being registered with the factory using registerdatatype then you should not include the class name in the list (it will be found automatically) but if the datatype is part of the case statement in the factory method getdatatypeobject then it does need to be explicitly listed in the getcontrolpanels method also.
WITHOUT_CLASSIFICATION	gui components - need to be here because they need to be accessible from the event handlers to alter each other's state.
WITHOUT_CLASSIFICATION	set up the controls
WITHOUT_CLASSIFICATION	check box for whether to show newlines as "\n" for in-cell display
WITHOUT_CLASSIFICATION	check box for whether to show newlines as "\n" for in-cell display
WITHOUT_CLASSIFICATION	check box for whether to use longvarchar in where clause (oracle does not allow that type in where clause)
WITHOUT_CLASSIFICATION	check box for whether to do any limiting of the data read during initial table load
WITHOUT_CLASSIFICATION	check box for whether to show newlines as "\n" for in-cell display
WITHOUT_CLASSIFICATION	check box for whether to show newlines as "\n" for in-cell display
WITHOUT_CLASSIFICATION	i18n[datatypestring.typechar=char varchar longvarchar (sql types 1 12 -1)]
WITHOUT_CLASSIFICATION	handle cross-connection between fields
WITHOUT_CLASSIFICATION	get the values from the controls and set them in the static properties
WITHOUT_CLASSIFICATION	checkbox for displaying newlines as \n in-cell
WITHOUT_CLASSIFICATION	checkbox for using long in where clause
WITHOUT_CLASSIFICATION	checkbox for limit/no-limit on data read during initial table load
WITHOUT_CLASSIFICATION	fill in the current limit length
WITHOUT_CLASSIFICATION	fill in list of column names to check against
WITHOUT_CLASSIFICATION	create the panel and add the gui items to it
WITHOUT_CLASSIFICATION	end while
WITHOUT_CLASSIFICATION	end of inner class
WITHOUT_CLASSIFICATION	handle list of column names
WITHOUT_CLASSIFICATION	remove old name list from map
WITHOUT_CLASSIFICATION	extract column names from text area
WITHOUT_CLASSIFICATION	find the next name in the text
WITHOUT_CLASSIFICATION	cleanup and standardize the name and add it to the map
WITHOUT_CLASSIFICATION	skip blank lines
WITHOUT_CLASSIFICATION	add name to comma-separated string for saving in properties
WITHOUT_CLASSIFICATION	end ok
WITHOUT_CLASSIFICATION	flag for whether we have already loaded the properties or not
WITHOUT_CLASSIFICATION	if this panel is called before any instances of the class have been created we need to load the properties from the dtproperties.
WITHOUT_CLASSIFICATION	get the values from the controls and set them in the static properties
WITHOUT_CLASSIFICATION	end of inner class
WITHOUT_CLASSIFICATION	flag for whether to use the default java format (true) or the locale-dependent format (false)
WITHOUT_CLASSIFICATION	get parameters previously set by user or set default values set to use the java default
WITHOUT_CLASSIFICATION	map of existing datatype objects for each column. the key is the columndisplaydefinition object and the value is the datatypeobject for that column's data type.
WITHOUT_CLASSIFICATION	map of dbms-specific registered data handlers. the key is a string of the form <sql type as a string><sql type name> and the value is a factory that can create instances of dbms-specific datatypecomponets.
WITHOUT_CLASSIFICATION	the current jtable that we are working with. this is used only to see when the user moves to a different jtable so we know when to clear the hashmap of datatypeobjects.
WITHOUT_CLASSIFICATION	logging mechanism for errors
WITHOUT_CLASSIFICATION	operations for text and in-cell work
WITHOUT_CLASSIFICATION	default behavior tostring
WITHOUT_CLASSIFICATION	use a cyan background to indicate that the cell is editable in the popup
WITHOUT_CLASSIFICATION	since the previous entry might have changed the color we need to reset the color back to default value for table cells taking into account whether the cell is selected or not.
WITHOUT_CLASSIFICATION	default behavior if no datatype object is to use the defaultcolumnrenderer with no modification.
WITHOUT_CLASSIFICATION	there was no data type object so this data type is unknown to squirrel and thus cannot be edited.
WITHOUT_CLASSIFICATION	default - if we do not know the data type then we cannot re-read it
WITHOUT_CLASSIFICATION	we have an appropriate data type object
WITHOUT_CLASSIFICATION	there was no data type object so this data type is unknown to squirrel and thus cannot be edited.
WITHOUT_CLASSIFICATION	we have an appropriate data type object
WITHOUT_CLASSIFICATION	we have an appropriate data type object
WITHOUT_CLASSIFICATION	default operation
WITHOUT_CLASSIFICATION	no object so do not assume binary editing will work
WITHOUT_CLASSIFICATION	operations for popup work.
WITHOUT_CLASSIFICATION	database-related functions
WITHOUT_CLASSIFICATION	we have an appropriate data type object
WITHOUT_CLASSIFICATION	default operation
WITHOUT_CLASSIFICATION	file io related functions
WITHOUT_CLASSIFICATION	we have an appropriate data type object
WITHOUT_CLASSIFICATION	if no object for this data type then cannot use value in where clause
WITHOUT_CLASSIFICATION	there was no data type object so this data type is unknown to squirrel and thus cannot be edited.
WITHOUT_CLASSIFICATION	if no datatype object then there is nothing to handle file io so cannot do it
WITHOUT_CLASSIFICATION	if no datatype object then there is nothing to handle file io so cannot do it
WITHOUT_CLASSIFICATION	if no datatype object then there is nothing to handle file io so cannot do it
WITHOUT_CLASSIFICATION	let datatype object speak for itself
WITHOUT_CLASSIFICATION	let datatype object speak for itself
WITHOUT_CLASSIFICATION	let datatype object speak for itself
WITHOUT_CLASSIFICATION	get control panels to let user adjust properties on datatype classes.
WITHOUT_CLASSIFICATION	this is the list of names of classes that - support standard sql type codes and thus do not need to be registered - provide the getcontrolpanel method to allow manipulation of properties these classes should all be named net.sourceforge.squirrel_sql.fw.datasetviewer.cellcomponent.datatypexxxx because they are part of the standard delivery of the product and thus should be local to this directory.
WITHOUT_CLASSIFICATION	make a single list of all class names that we need to check. start with the names of known standard classes that provide control panels
WITHOUT_CLASSIFICATION	now go through the list in the given order to get the panels
WITHOUT_CLASSIFICATION	internal method used for both cell and popup work.
WITHOUT_CLASSIFICATION	keep a hash table of the column objects so we can reuse them.
WITHOUT_CLASSIFICATION	new table - clear hash map
WITHOUT_CLASSIFICATION	see if we have a custom data-type registered.
WITHOUT_CLASSIFICATION	should never happen
WITHOUT_CLASSIFICATION	remember this datatype object so we can reuse it
WITHOUT_CLASSIFICATION	use the standard sql type code to get the right handler for this data type.
WITHOUT_CLASSIFICATION	some databases store a time component in date columns (oracle) the user can set a preference for dates that allows them to be read as timestamp columns instead. this doesn't appear to have ill effects for databases that are standards compliant (such as mysql or postgresql). if the user prefers it use the timestamp data type instead of date.
WITHOUT_CLASSIFICATION	set up for integers
WITHOUT_CLASSIFICATION	set up for string types
WITHOUT_CLASSIFICATION	-8 is rowid in oracle. it's a string but it's auto-assigned
WITHOUT_CLASSIFICATION	set up for binary types
WITHOUT_CLASSIFICATION	add begin
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	oracle jdbc driver doesn't properly identify this column in resultsetmetadata as read-only. for now just use isautoincrement flag to simulate this setting.
WITHOUT_CLASSIFICATION	add end
WITHOUT_CLASSIFICATION	data type is unknown to us. it may be an unusual type like "java object" or "array" or it may be a dbms-specific type
WITHOUT_CLASSIFICATION	the jtextcomponent that is being used for editing
WITHOUT_CLASSIFICATION	the cellrenderer used for this data type
WITHOUT_CLASSIFICATION	properties settable by the user
WITHOUT_CLASSIFICATION	flag for whether we have already loaded the properties or not
WITHOUT_CLASSIFICATION	flag for whether to use the default java format (true) or the locale-dependent format (false)
WITHOUT_CLASSIFICATION	which locale-dependent format to use short medium long or full
WITHOUT_CLASSIFICATION	whether to force user to enter dates in exact format or use heuristics to guess it
WITHOUT_CLASSIFICATION	whether or not to read date type columns with rs.gettimestamp()
WITHOUT_CLASSIFICATION	first we have the methods for in-cell and text-table operations
WITHOUT_CLASSIFICATION	this datatype does not limit the data read during the initial load of the table so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. this happens only in the jtextfield not the jtextarea so we can make this an inner class within this method rather than a separate inner class as is done with the keytexthandler class.
WITHOUT_CLASSIFICATION	field is not nullable so create a reasonable default value
WITHOUT_CLASSIFICATION	get parameters previously set by user or set default values set to use the java default
WITHOUT_CLASSIFICATION	get which locale-dependent format to use set to use the java default
WITHOUT_CLASSIFICATION	use lenient input or force user to enter exact format set to allow less stringent input
WITHOUT_CLASSIFICATION	use the java default date-to-string
WITHOUT_CLASSIFICATION	use a date formatter
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	return a jtextarea usable in the cellpopupdialog and fill in the value.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data the same one used in text and in-cell operations.
WITHOUT_CLASSIFICATION	the following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	remove all instances of the offending char
WITHOUT_CLASSIFICATION	truncate string
WITHOUT_CLASSIFICATION	as a coding convenience create a reference to the text component that is typecast to jtextcomponent. this is not essential as we could typecast every reference but this makes the code cleaner
WITHOUT_CLASSIFICATION	now the functions for the popup-related operations.
WITHOUT_CLASSIFICATION	internal class for handling key events during editing of both jtextfield and jtextarea.
WITHOUT_CLASSIFICATION	use the dateformat to parse
WITHOUT_CLASSIFICATION	tabs and newlines get put into the text before this check so remove them this only applies to popup editing since these chars are not passed to this level by the in-cell editor.
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	try to use the db default value
WITHOUT_CLASSIFICATION	handle cases of null the processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	about to delete last thing in field so replace with null
WITHOUT_CLASSIFICATION	no default in db. if nullable use null.
WITHOUT_CLASSIFICATION	database-related functions
WITHOUT_CLASSIFICATION	if value contains "-" it probably has a date component
WITHOUT_CLASSIFICATION	treat it like a timestamp
WITHOUT_CLASSIFICATION	treat it like a time - no date component
WITHOUT_CLASSIFICATION	if there was a problem with converting then just fall through and continue as if there was no default given in the db. otherwise use the converted object
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	convert number conversion issue into io issue for consistancy
WITHOUT_CLASSIFICATION	file io related functions
WITHOUT_CLASSIFICATION	property change control panel
WITHOUT_CLASSIFICATION	if this panel is called before any instances of the class have been created we need to load the properties from the dtproperties.
WITHOUT_CLASSIFICATION	class that displays the various formats available for dates
WITHOUT_CLASSIFICATION	oracle stores time information in java.sql.types.date columns this tells oracle that we are only talking about the date part.
WITHOUT_CLASSIFICATION	i18n[datatypedate.typedate=date (sql type 91)]
WITHOUT_CLASSIFICATION	checkbox for whether to interpret input leniently or not i18n[datatypedate.allowinexact=allow inexact format on input]
WITHOUT_CLASSIFICATION	gui components - need to be here because they need to be accessible from the event handlers to alter each other's state.
WITHOUT_CLASSIFICATION	combo box for read-all/read-part of blob
WITHOUT_CLASSIFICATION	combo box for read-all/read-part of blob
WITHOUT_CLASSIFICATION	set up the controls
WITHOUT_CLASSIFICATION	handle cross-connection between fields
WITHOUT_CLASSIFICATION	end of constructor for inner class
WITHOUT_CLASSIFICATION	get the values from the controls and set them in the static properties
WITHOUT_CLASSIFICATION	check box for whether to use java default or a locale-dependent format
WITHOUT_CLASSIFICATION	checkbox for java default/non-default format
WITHOUT_CLASSIFICATION	lenient checkbox
WITHOUT_CLASSIFICATION	readddateastimestamp checkbox
WITHOUT_CLASSIFICATION	create the panel and add the gui items to it
WITHOUT_CLASSIFICATION	whether or not to read date type columns with rs.gettimestamp() i18n[datatypedate.readdateastimestamp=interpret date columns as timestamp]
WITHOUT_CLASSIFICATION	end of inner class
WITHOUT_CLASSIFICATION	lenient is set next
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	the jtextcomponent that is being used for editing
WITHOUT_CLASSIFICATION	the cellrenderer used for this data type
WITHOUT_CLASSIFICATION	database-related functions
WITHOUT_CLASSIFICATION	properties settable by the user
WITHOUT_CLASSIFICATION	flag for whether we have already loaded the properties or not
WITHOUT_CLASSIFICATION	the original value set in this cell by the table
WITHOUT_CLASSIFICATION	used by editing operations to set textfield value without changing the original text saved in the class
WITHOUT_CLASSIFICATION	used by editing operations to reset the field to its original value.
WITHOUT_CLASSIFICATION	cell related methods come next.
WITHOUT_CLASSIFICATION	first we have the methods for in-cell and text-table operations
WITHOUT_CLASSIFICATION	this datatype does not limit the data read during the initial load of the table so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. this happens only in the jtextfield not the jtextarea so we can make this an inner class within this method rather than a separate inner class as is done with the keytexthandler class.
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	now the functions for the popup-related operations.
WITHOUT_CLASSIFICATION	return a jtextarea usable in the cellpopupdialog and fill in the value.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data the same one used in text and in-cell operations.
WITHOUT_CLASSIFICATION	the following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	get parameters previously set by user or set default values set to the default
WITHOUT_CLASSIFICATION	i18n[datatypeunknown.readcontentsonload=read contents when table is first loaded and display as string]
WITHOUT_CLASSIFICATION	try to use the db default value
WITHOUT_CLASSIFICATION	file io related functions
WITHOUT_CLASSIFICATION	no default in db. if nullable use null.
WITHOUT_CLASSIFICATION	if this panel is called before any instances of the class have been created we need to load the properties from the dtproperties.
WITHOUT_CLASSIFICATION	gui components - need to be here because they need to be accessible from the event handlers to alter each other's state.
WITHOUT_CLASSIFICATION	check box for whether to read contents during table load or not
WITHOUT_CLASSIFICATION	property change control panel
WITHOUT_CLASSIFICATION	field is not nullable so create a reasonable default value cannot create default value for unknown data type
WITHOUT_CLASSIFICATION	set up the controls
WITHOUT_CLASSIFICATION	checkbox for read/not-read on table load
WITHOUT_CLASSIFICATION	end of constructor for inner class
WITHOUT_CLASSIFICATION	get the values from the controls and set them in the static properties
WITHOUT_CLASSIFICATION	end of inner class
WITHOUT_CLASSIFICATION	the original value set in this cell by the table
WITHOUT_CLASSIFICATION	when the table initiates editing and sets this field remember the value as the original value of the field
WITHOUT_CLASSIFICATION	used by editing operations to set textfield value without changing the original text saved in the class
WITHOUT_CLASSIFICATION	used by editing operations to reset the field to its original value.
WITHOUT_CLASSIFICATION	we don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	we don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	we don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	anticipate the same issue for blobs as for binary and longvarbinary. registercolumntype(types.blob 2147000000 "bit varying($l)")
WITHOUT_CLASSIFICATION	don't use bit(1) for boolean as frontbase then reports it as binary type instead of bit.
WITHOUT_CLASSIFICATION	anticipate the same issue for varbinary as for binary and longvarbinary. registercolumntype(types.varbinary 2147000000 "bit varying($l)")
WITHOUT_CLASSIFICATION	frontbase requires cascade or restrict keywords.
WITHOUT_CLASSIFICATION	"drop index $indexname$"
WITHOUT_CLASSIFICATION	public string getdropindexsql(string tablename string indexname boolean cascade databaseobjectqualifier qualifier sqlgenerationpreferences prefs) { return null }
WITHOUT_CLASSIFICATION	we don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	db2 spec says max=2147483647 but the driver throws an exception
WITHOUT_CLASSIFICATION	db2 spec says max=2147483647 but the driver throws an exception
WITHOUT_CLASSIFICATION	db2 spec says max=2147483647 but the driver throws an exception
WITHOUT_CLASSIFICATION	derby is real close to db2. only difference i've found so far is 48 instead of 53 for float length llimit.
WITHOUT_CLASSIFICATION	convert each column that will be a member key to non-null - this doesn't hurt if they are already null.
WITHOUT_CLASSIFICATION	derby requires that columns be not-null before applying a unique constraint
WITHOUT_CLASSIFICATION	select v.viewdefinition from sys.sysviews v sys.systables t sys.sysschemas s where v.tableid = t.tableid and s.schemaid = t.schemaid and upper(t.tablename) = 'viewname'and upper(s.schemaname) = 'schemaname'
WITHOUT_CLASSIFICATION	driver returns 8 for "long byte" yet it can store 2gb of data.
WITHOUT_CLASSIFICATION	"create $unique$ $storageoption$ index $indexname$ " + "on $tablename$ ( $columnname separator=\"\"$ )"
WITHOUT_CLASSIFICATION	there is a reason that we don't want to use databaseobjecttype.session here. the "session" nodes that this expander is creating should not be confused with the squirrel session. these session nodes are oracle sessions that an administrator has the privileges to see. so we must not use databaseobjecttype.session or else these nodes get expanded with the database defaultdatabasexpander.
WITHOUT_CLASSIFICATION	string st_create_index_style_two = "create $unique$ $storageoption$ index $indexname$ " + "on $tablename$ ( $columnname separator=\"\"$ )"
WITHOUT_CLASSIFICATION	<create_sequence_statement> = create sequence [<schema_name>.]<sequence_name> [increment by <integer>] [start with <integer>] [maxvalue <integer> | nomaxvalue] [minvalue <integer> | nominvalue] [cycle | nocycle] [cache <unsigned_integer> | nocache] [order | noorder]
WITHOUT_CLASSIFICATION	"create sequence $sequencename$ $startwith$ $increment$ $minimum$ $maximum$ $cache$ $cycle$"
WITHOUT_CLASSIFICATION	<create_view_statement> = create [or replace] view <table_name> [(<alias_name>)] as <query_expression> [with check option]
WITHOUT_CLASSIFICATION	"create view $viewname$ " + "as $selectstatement$ $withcheckoption$"
WITHOUT_CLASSIFICATION	"drop sequence $sequencename$ $cascade$"
WITHOUT_CLASSIFICATION	"drop view $viewname$"
WITHOUT_CLASSIFICATION	"rename table $oldobjectname$ to $newobjectname$"
WITHOUT_CLASSIFICATION	"rename view $oldobjectname$ to $newobjectname$"
WITHOUT_CLASSIFICATION	alter column clauses
WITHOUT_CLASSIFICATION	alter name clauses
WITHOUT_CLASSIFICATION	alter default clauses
WITHOUT_CLASSIFICATION	additional index creation
WITHOUT_CLASSIFICATION	alter type clauses
WITHOUT_CLASSIFICATION	drop column clauses
WITHOUT_CLASSIFICATION	cascade constraint clauses
WITHOUT_CLASSIFICATION	sequence clauses
WITHOUT_CLASSIFICATION	view clauses
WITHOUT_CLASSIFICATION	clauses
WITHOUT_CLASSIFICATION	i18n[dialectutils.columndropunsupported={0} doesn''t support dropping a column]
WITHOUT_CLASSIFICATION	alter table tablename add constraint constraintname unique (column1 column2)
WITHOUT_CLASSIFICATION	deletes the last " "
WITHOUT_CLASSIFICATION	drop index indexname [ cascade ]
WITHOUT_CLASSIFICATION	drop index indexname [ cascade ] [ on <tablename> ]
WITHOUT_CLASSIFICATION	deletes the last " "
WITHOUT_CLASSIFICATION	drop sequence sequencename cascade
WITHOUT_CLASSIFICATION	drop view viewname cascade
WITHOUT_CLASSIFICATION	create unique index indexname on tablename using btree (column1 column2) tablespace where constraints
WITHOUT_CLASSIFICATION	alter table oldtablename rename to newtablename
WITHOUT_CLASSIFICATION	alter view oldtablename rename to newtablename rename oldtablename to newtablename
WITHOUT_CLASSIFICATION	since dialect doesn't support altering sequences drop then re-create.
WITHOUT_CLASSIFICATION	alter sequence sequencename increment by increment minvalue minimum maxvalue maxvalue restart with restart cache cache cycle
WITHOUT_CLASSIFICATION	insert into tablename (column1 column2) query
WITHOUT_CLASSIFICATION	string templatestr = null
WITHOUT_CLASSIFICATION	desc_t1
WITHOUT_CLASSIFICATION	i18n[oracle.displaydetails=display index details]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.btnok=ok]
WITHOUT_CLASSIFICATION	i18n[dialectutils.error.getprimarykey=unable to get primary key info for table {0}]
WITHOUT_CLASSIFICATION	group all columns by index
WITHOUT_CLASSIFICATION	serveral dbs automatically create an index for primary key fields and return this index in getindexinfo(). we remove this index from the script because it would break the script with an index already exists error.
WITHOUT_CLASSIFICATION	append nothing - standard says this is equivalent to no action and some dbs (e.g. oracle don't accept no action)
WITHOUT_CLASSIFICATION	i18n[createtablescriptcommand.error.getprimarykey=unable to get primary key info for table {0}]
WITHOUT_CLASSIFICATION	override common behavior to use drop column style two
WITHOUT_CLASSIFICATION	no go through the parse sql and build the final sql replacing parameters with values is goes.
WITHOUT_CLASSIFICATION	strip quotes from the column name
WITHOUT_CLASSIFICATION	we don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	"alter table $tablename$ alter column $columnname$ identity"
WITHOUT_CLASSIFICATION	add package node to contain standalone procedures.
WITHOUT_CLASSIFICATION	add packages.
WITHOUT_CLASSIFICATION	i18n[oracle.explainplan=explain plan]
WITHOUT_CLASSIFICATION	"alter table $tablename$ " + "add $constraint$ $constraintname$ unique $index$ $indexname$ $indextype$ ( $indexcolumnname$ )"
WITHOUT_CLASSIFICATION	"alter sequence $sequencename$ " + "$restartwith$ $startvalue$ " + "$incrementby$ $incrementvalue$ "
WITHOUT_CLASSIFICATION	operation column increased
WITHOUT_CLASSIFICATION	options column increased
WITHOUT_CLASSIFICATION	expand all of the rows in the tree if the root is non null.
WITHOUT_CLASSIFICATION	clear any previous plan
WITHOUT_CLASSIFICATION	create sequence [if not exists] newsequencename [start with long] [increment by long] [cache long]
WITHOUT_CLASSIFICATION	create [force] view [if not exists] newviewname [(columnname [..])] as select "create view $viewname$ " + "as $selectstatement$ $with$ $checkoptiontype$ $checkoption$"
WITHOUT_CLASSIFICATION	i18n[oracle.userdetails=details]
WITHOUT_CLASSIFICATION	i18n[oracle.displayuserdetails=display user details]
WITHOUT_CLASSIFICATION	"drop index $indexname$"
WITHOUT_CLASSIFICATION	"drop sequence $sequencename$ $cascade$"
WITHOUT_CLASSIFICATION	"drop view $viewname$"
WITHOUT_CLASSIFICATION	alter table $tablename$ drop constraint $constraintname$
WITHOUT_CLASSIFICATION	"alter table $oldobjectname$ rename to $newobjectname$"
WITHOUT_CLASSIFICATION	"select view_definition " + "from information_schema.views " + "where table_schema = ? " + "and table_name = ? "
WITHOUT_CLASSIFICATION	"create $unique$ $storageoption$ index $indexname$ " + "on $tablename$ ( $columnname separator=\"\"$ )"
WITHOUT_CLASSIFICATION	mysql disallows quoted column identifiers.
WITHOUT_CLASSIFICATION	always use "to" column name since name changes happen first
WITHOUT_CLASSIFICATION	alter table <tablename> modify <columnname> mediumint not null auto_increment primary key
WITHOUT_CLASSIFICATION	sqlexecutertask task = new sqlexecutertask(_session sql new defaultsqlexecuterhandler(_session)) jmh to run async_session.getapplication().getthreadpool().addtask(task) jmhtask.run() set the ? to the statement identifier
WITHOUT_CLASSIFICATION	i18n[oracle.nosql=no sql selected for execution.]
WITHOUT_CLASSIFICATION	only check once per session
WITHOUT_CLASSIFICATION	if doesnt exist prompt to create it.
WITHOUT_CLASSIFICATION	from mysql 5.0 manual
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.createplantablemsg=the oracle plan table '{0}' doesnt exist in the current schema. do you want to create it?]
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.createplantabletitle=create plan table]
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.plantableunavailable=explain plans will be unavailable for this session]
WITHOUT_CLASSIFICATION	mysql disallows quoted column identifiers.
WITHOUT_CLASSIFICATION	mysql disallows quoted column identifiers.
WITHOUT_CLASSIFICATION	tell the user that they won't be able to show the explain plan
WITHOUT_CLASSIFICATION	mysql disallows quoted column identifiers when dropping a column.
WITHOUT_CLASSIFICATION	mysql disallows quoted column identifiers when adding a primary key.
WITHOUT_CLASSIFICATION	mysql disallows quoted constraint names
WITHOUT_CLASSIFICATION	mysql disallows quoted constraint names
WITHOUT_CLASSIFICATION	we don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	postgresql 8.0 reports length as -1 sometimes. why??
WITHOUT_CLASSIFICATION	alter table oldtablename rename to newtablename
WITHOUT_CLASSIFICATION	can be done as follows in postgresinsert into mytable(idname) select 1 'pizza' union select 2 'donuts' union select 3 'milk'
WITHOUT_CLASSIFICATION	sql.append(dialectutils.shapequalifiableidentifier(newtablename qualifier prefs this))
WITHOUT_CLASSIFICATION	rename view has that same syntax as that of tables.
WITHOUT_CLASSIFICATION	drop index indexname cascade
WITHOUT_CLASSIFICATION	select last_value max_value min_value cache_value increment_by is_cycled from sequencename
WITHOUT_CLASSIFICATION	alter table tablename alter column columnname set default nextval('tablename_columnname_seq') alter sequence tablename_columnname_seq owned by tablename.columnname
WITHOUT_CLASSIFICATION	in postgresql we need to add a sequence to support auto-increment (name tablename_colname_seq)
WITHOUT_CLASSIFICATION	registercolumntype(types.clob 31982 "varchar($l)")
WITHOUT_CLASSIFICATION	we don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	"alter table $tablename$ rename column $oldcolumnname$ to $newcolumnname$"
WITHOUT_CLASSIFICATION	oracle won't allow in-place conversion between clob and varchar
WITHOUT_CLASSIFICATION	add <columnname>_2 null as clob
WITHOUT_CLASSIFICATION	update table set <columnname>_2 = <columnname>
WITHOUT_CLASSIFICATION	drop <columnname>
WITHOUT_CLASSIFICATION	rename <columnname>_2 to <columnname>
WITHOUT_CLASSIFICATION	cannot use a sequence for the default value of a column. however we could always reference the ssequence in a trigger
WITHOUT_CLASSIFICATION	new.id = seq_name@nextval
WITHOUT_CLASSIFICATION	throw new unsupportedoperationexception("oracle doesn't support using sequences for column defaults")
WITHOUT_CLASSIFICATION	create add sequence sql
WITHOUT_CLASSIFICATION	create trigger sql for column that is to be auto-incremented
WITHOUT_CLASSIFICATION	in oracle no action is implied when the on delete clause is omitted
WITHOUT_CLASSIFICATION	in oracle matchfull modifier is not supported
WITHOUT_CLASSIFICATION	oracle doesn't allow unique bitmap indexes.
WITHOUT_CLASSIFICATION	sybase adaptive server enterprise
WITHOUT_CLASSIFICATION	we don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.chooseplantablemsg=choose a plan_table to store the result in]
WITHOUT_CLASSIFICATION	mysql 4.x and below mysql 5.x and above
WITHOUT_CLASSIFICATION	registercolumntype(types.longvarchar 31982 "varchar($l)")
WITHOUT_CLASSIFICATION	"alter table $tablename$ alter column $columnname$ set $nullable$"
WITHOUT_CLASSIFICATION	add a default value "alter table $tablename$ " + "alter $columnname$ set default $defaultvalue$"
WITHOUT_CLASSIFICATION	"alter table $tablename$ rename column $oldcolumnname$ to $newcolumnname$"
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.chooseplantabletitle=available plan_tables]
WITHOUT_CLASSIFICATION	alter table fktestchildtable add constraint foo_const unique (myid)
WITHOUT_CLASSIFICATION	this is what the spec says create sequence [schema_name.]sequence_name [increment by value] [start with value] [maxvalue value | nomaxvalue] [minvalue value | nominvalue] [cylce | nocylce]
WITHOUT_CLASSIFICATION	currently openedge only supports the pub schema for sequences.
WITHOUT_CLASSIFICATION	names of the columns.
WITHOUT_CLASSIFICATION	create view name [(view_col [ view_col …])] as <select> [with check option]
WITHOUT_CLASSIFICATION	we don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	we don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	"create view $viewname$ " + "as $selectstatement$ $withcheckoption$"
WITHOUT_CLASSIFICATION	"drop sequence $sequencename$ $cascade$"
WITHOUT_CLASSIFICATION	"alter table $oldobjectname$ rename to $newobjectname$"
WITHOUT_CLASSIFICATION	currently openedge only supports the pub schema for sequences.
WITHOUT_CLASSIFICATION	select 'create view fooview as ' || viewtext from sysprogress.sysviews where viewname = 'fooview' and owner = 'manningr'
WITHOUT_CLASSIFICATION	oddly enough progress will let you add pks to existing tables but not drop them.
WITHOUT_CLASSIFICATION	the registrations below are made in support for new types introduced in java6
WITHOUT_CLASSIFICATION	replace "-8" with types.rowid when java6 is the minimum supported version
WITHOUT_CLASSIFICATION	replace "-9" with types.nvarchar when java6 is the minimum supported version
WITHOUT_CLASSIFICATION	replace "-15" with types.nchar when java6 is the minimum supported version
WITHOUT_CLASSIFICATION	replace "-16" with types.longnvarchar when java6 is the minimum supported version
WITHOUT_CLASSIFICATION	replace "2009" with types.sqlxml when java6 is the minimum supported version
WITHOUT_CLASSIFICATION	replace "2011" with types.nclob when java6 is the minimum supported version
WITHOUT_CLASSIFICATION	registercolumntype(types.boolean "bit")
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.enumeration=#]
WITHOUT_CLASSIFICATION	"alter table $tablename$ alter column $columnname$ identity"
WITHOUT_CLASSIFICATION	"alter table $tablename$ alter column $columnname$ set $nullable$"
WITHOUT_CLASSIFICATION	"alter table $tablename$ " + "add constraint $constraintname$ unique ($columnname separator=\"\"$)"
WITHOUT_CLASSIFICATION	"alter table $childtablename$ " + "add $constraint$ $constraintname$ foreign key ( $childcolumn separator=\"\"$ ) " + "references $parenttablename$ ( $parentcolumn separator=\"\"$ )"
WITHOUT_CLASSIFICATION	alter table <tablename> add [constraint <constraintname>] primary key (<column list>)
WITHOUT_CLASSIFICATION	pre-requisites are that column needs to be primary key and it must be integer type. alter table identitytest2 alter column myid identity
WITHOUT_CLASSIFICATION	"create $unique$ $storageoption$ index $indexname$ " + "on $tablename$ ( $columnname separator=\"\"$ )"
WITHOUT_CLASSIFICATION	"alter table $tablename$ " + "add constraint $constraintname$ unique ($columnname separator=\"\"$)"
WITHOUT_CLASSIFICATION	alter table <tablename> add [constraint <constraintname>] unique (<column list>)
WITHOUT_CLASSIFICATION	alter sequence <sequencename> restart with <value>
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.operation=operation]
WITHOUT_CLASSIFICATION	create [unique] index <index> on <table> (<column> [desc] [ ]) [desc]
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.options=options]
WITHOUT_CLASSIFICATION	"drop index $indexname$"
WITHOUT_CLASSIFICATION	"drop sequence $sequencename$ $cascade$"
WITHOUT_CLASSIFICATION	"drop view $viewname$"
WITHOUT_CLASSIFICATION	alter table $tablename$ drop constraint $constraintname$
WITHOUT_CLASSIFICATION	create view <viewname>[(<viewcolumn>..) as select from [where expression] [order by orderexpression [ ]] [limit <limit> [offset <offset>]]
WITHOUT_CLASSIFICATION	"create view $viewname$ " + "as $selectstatement$ $with$ $checkoptiontype$ $checkoption$"
WITHOUT_CLASSIFICATION	drop index index [if exists]
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.mode=mode]
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.cost=cost]
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.objectname=object name]
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.cardinality=cardinality]
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.bytes=bytes]
WITHOUT_CLASSIFICATION	we don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	types of the columns.
WITHOUT_CLASSIFICATION	"drop index $indexname$"
WITHOUT_CLASSIFICATION	treenode interface
WITHOUT_CLASSIFICATION	we don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	axion doesn't allow column alterations of the nullable attribute. fortunately it doesn't require this to add a primary key.
WITHOUT_CLASSIFICATION	we don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	keys that can be embedded in templates for replacement later.
WITHOUT_CLASSIFICATION	check option not supported
WITHOUT_CLASSIFICATION	"create view $viewname$ " + "as $selectstatement$ $with$ $checkoptiontype$ $checkoption$"
WITHOUT_CLASSIFICATION	template bodies
WITHOUT_CLASSIFICATION	sql reference guide says 32k but i get the specified row size exceeded the maximum allowable row width. sql state 50002 error code 2045 when i go above 8000.
WITHOUT_CLASSIFICATION	i tried 8000 for the max length of varchar and ingres gives an exception (cannot assign a value of type long varchar to a varchar field). so i limit this field to 4000 for now - the ingres product documentation indicated that 32k was acceptable. i've tested 4k and it seems to work fine.
WITHOUT_CLASSIFICATION	we don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	"alter table $childtablename$ " + "add $constraint$ $constraintname$ foreign key ( $childcolumn separator=\"\"$ ) " + "references $parenttablename$ ( $parentcolumn separator=\"\"$ )"
WITHOUT_CLASSIFICATION	"create $unique$ $storageoption$ index $indexname$ " + "on $tablename$ ( $columnname separator=\"\"$ )"
WITHOUT_CLASSIFICATION	alter table foo add constraint foocon unique (myid)
WITHOUT_CLASSIFICATION	alter table <table> add constraint <constraint>
WITHOUT_CLASSIFICATION	"create view $viewname$ " + "as $selectstatement$ $with$ $checkoptiontype$ $checkoption$"
WITHOUT_CLASSIFICATION	"create sequence $sequencename$ $startwith$ $increment$ $minimum$ $maximum$ $cache$ $cycle$"
WITHOUT_CLASSIFICATION	"alter sequence $sequencename$ $startwith$ $increment$ $minimum$ $maximum$ $cache$ $cycle$"
WITHOUT_CLASSIFICATION	[exec sql] create view view_name [(column_name { column_name})] as select_stmt [with check option]
WITHOUT_CLASSIFICATION	"drop view $viewname$"
WITHOUT_CLASSIFICATION	select text_segment from iiviews where table_name = <viewname> and table_owner = <schemaname>
WITHOUT_CLASSIFICATION	"drop sequence $sequencename$ $cascade$"
WITHOUT_CLASSIFICATION	the treetablenode interface.
WITHOUT_CLASSIFICATION	we don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	alter table test3 alter column nullvc varchar(30)
WITHOUT_CLASSIFICATION	alter table fktestchildtable add constraint foo_const unique (myid)
WITHOUT_CLASSIFICATION	create view name [(view_col [ view_col …])] as <select> [with check option]
WITHOUT_CLASSIFICATION	"select 'create view ' || viewname || ' as ' || viewdefinition " + "from pointbase.sysviews v pointbase.sysschemata s " + "where v.schemaid = s.schemaid " + "and v.viewname = 'testview' " + "and s.schemaname = 'dbcopy' "
WITHOUT_CLASSIFICATION	we don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	"alter table $oldobjectname$ rename to $newobjectname$"
WITHOUT_CLASSIFICATION	sql-server doesn't support a cascade clause.
WITHOUT_CLASSIFICATION	can be done as follows in ms sqlserver insert into mytable(idname) select 1 'pizza' union select 2 'donuts' union select 3 'milk'
WITHOUT_CLASSIFICATION	we don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	alter table fktestchildtable add constraint foo_const unique (myid)
WITHOUT_CLASSIFICATION	<drop_index_statement> = drop index <index_name> [on <table_name>]
WITHOUT_CLASSIFICATION	"drop sequence $sequencename$ $cascade$"
WITHOUT_CLASSIFICATION	the problem with this is data is longvarbinary and there are no mckoi sql functions to convert it to a character string which is executing the sql produced by this method is supposed to return. return "select data from sys_info.susrview where name = '" + viewname + "'"
WITHOUT_CLASSIFICATION	private static final db2400dialect db2400dialect = new db2400dialect()
WITHOUT_CLASSIFICATION	dbnamedialectmap.put("db2/390" db2390dialect) dbnamedialectmap.put("db2/400" db2400dialect)
WITHOUT_CLASSIFICATION	db2 spec says max=2147483647 but the driver throws an exception
WITHOUT_CLASSIFICATION	db2 spec says max=2147483647 but the driver throws an exception
WITHOUT_CLASSIFICATION	db2 spec says max=2147483647 but the driver throws an exception
WITHOUT_CLASSIFICATION	user doesn't wish for us to try to auto-detect the dest db.
WITHOUT_CLASSIFICATION	the driver throws an exception for varchar with length > 3924
WITHOUT_CLASSIFICATION	db2 spec says max=2147483647 but the driver throws an exception
WITHOUT_CLASSIFICATION	the registrations below are made in support for new types introduced in java6
WITHOUT_CLASSIFICATION	replace "-8" with types.rowid when java6 is the minimum supported version
WITHOUT_CLASSIFICATION	replace "-9" with types.nvarchar when java6 is the minimum supported version
WITHOUT_CLASSIFICATION	replace "-15" with types.nchar when java6 is the minimum supported version
WITHOUT_CLASSIFICATION	replace "-16" with types.longnvarchar when java6 is the minimum supported version
WITHOUT_CLASSIFICATION	we don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	replace "2009" with types.sqlxml when java6 is the minimum supported version
WITHOUT_CLASSIFICATION	replace "2011" with types.nclob when java6 is the minimum supported version
WITHOUT_CLASSIFICATION	alter table <tablename> drop column <columnname>
WITHOUT_CLASSIFICATION	db2 needs to reorg table after changing nullabolity
WITHOUT_CLASSIFICATION	select seqschemaseqnamedefinerdefinertypeownerownertypeseqidseqtypeincrementstartmaxvalueminvalue nextcachefirstvaluecyclecacheorderdatatypeidsourcetypeidcreate_timealter_timeprecisionorigin remarks from syscat.sequences where seqname = ? and seqschema = <schema>
WITHOUT_CLASSIFICATION	we don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	db2 doesn't support cascade set default or set null for fk constraint update action
WITHOUT_CLASSIFICATION	db2 doesn't support set default for fk constraint delete action
WITHOUT_CLASSIFICATION	db2 requires that columns be not-null before applying a unique constraint
WITHOUT_CLASSIFICATION	rename table <tablename> to <newtablename>
WITHOUT_CLASSIFICATION	select 'create view <newviewname> as ' || substr(text locate('as' text)+2 length(text)) from syscat.views where viewschema = '<schema>' and viewname = '<oldviewname>'
WITHOUT_CLASSIFICATION	this is another way to do this. modifying the column type to serial is much easier. thanks to doug lawry for setting me straight!!
WITHOUT_CLASSIFICATION	create sequence testautoincrementtable_myid_seq increment by 1 minvalue 1 nomaxvalue start with 1 nocycle create function nextautoval () returning integer return testautoincrementtable_myid_seq.nextval end function i finally did get a trigger to work but i had to use a function create trigger myid_trigger insert on testautoincrementtable for each row (execute function nextautoval() into myid)
WITHOUT_CLASSIFICATION	must not qualify column name
WITHOUT_CLASSIFICATION	unfortunately we cannot simply call getcolumntypealtersql since "serial" type is 4 (which is the same as java.sql.types.integer so we would get back an integer column not a serial column). so we piece it together ourselves alter table dbcopydest"informix".serialtest modify myid integer
WITHOUT_CLASSIFICATION	we only want the index sql which is the second statement in the array. informix requires the constraint stuck onto the end of the statement.
WITHOUT_CLASSIFICATION	informix doesn't allow quoting column names.
WITHOUT_CLASSIFICATION	deletes the last " "
WITHOUT_CLASSIFICATION	deletes the last " " deletes the last " "
WITHOUT_CLASSIFICATION	must not quote column names
WITHOUT_CLASSIFICATION	alter table <tablename> add constraint unique (<columnlist>) constraint <constraintname>
WITHOUT_CLASSIFICATION	alter table test drop constraint u_test
WITHOUT_CLASSIFICATION	deletes the last " "
WITHOUT_CLASSIFICATION	select 'unknown' as last_value t1.max_val as max_value t1.min_val as min_value t1.cache as cache_size t1.inc_val as increment_by case t1.cycle as is_cycled from informix.syssequences as t1 informix.systables as t2 where t2.tabid = t1.tabid and t2.owner = '<schema>' and t2.tabname = '<sequencename>'
WITHOUT_CLASSIFICATION	must not qualify the new table name
WITHOUT_CLASSIFICATION	select viewtext from informix.systables as t1 informix.sysviews as t2 where tabname = 'a_view' and t2.tabid = t1.tabid
WITHOUT_CLASSIFICATION	we don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	alter table fktestchildtable add constraint foo_const unique (myid)
WITHOUT_CLASSIFICATION	"drop index $indexname$"
WITHOUT_CLASSIFICATION	alter table $tablename$ drop constraint $constraintname$
WITHOUT_CLASSIFICATION	create view name [(view_col [ view_col …])] as <select> [with check option]
WITHOUT_CLASSIFICATION	"alter table $tablename$ " + "add constraint $constraintname$ unique ($columnname separator=\"\"$)"
WITHOUT_CLASSIFICATION	autoinc_gen_<column>
WITHOUT_CLASSIFICATION	"create $unique$ $storageoption$ index $indexname$ " + "on $tablename$ ( $columnname separator=\"\"$ )"
WITHOUT_CLASSIFICATION	set generator name to int
WITHOUT_CLASSIFICATION	create [unique] [asc[ending] | desc[ending]] index index on table (col [ col …])
WITHOUT_CLASSIFICATION	"drop view $viewname$"
WITHOUT_CLASSIFICATION	we don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	what follows comes from the squirrel firebird dialect extension.
WITHOUT_CLASSIFICATION	i18n[sqlcatalogscombobox.nonelabel=none]
WITHOUT_CLASSIFICATION	sort the rows by the property name.
WITHOUT_CLASSIFICATION	look for places to break the string
WITHOUT_CLASSIFICATION	get the largest width and height
WITHOUT_CLASSIFICATION	private int _lastx
WITHOUT_CLASSIFICATION	parentrect = new rectangle(toolkit.getdefaulttoolkit().getscreensize())
WITHOUT_CLASSIFICATION	i18n ? what is this used for?
WITHOUT_CLASSIFICATION	impossible.
WITHOUT_CLASSIFICATION	the following pointer is needed to allow the "make editable button to tell the application to set up an editable display panel
WITHOUT_CLASSIFICATION	save the pointer needed to enable editing of data on-demand
WITHOUT_CLASSIFICATION	save the pointer needed to enable editing of data on-demand
WITHOUT_CLASSIFICATION	object obj = action.getvalue(baseaction.ibaseactionpropertynames.rollover_icon)
WITHOUT_CLASSIFICATION	pointer to the viewer this is needed for insert and delete operations
WITHOUT_CLASSIFICATION	save the pointer needed for insert and delete operations
WITHOUT_CLASSIFICATION	add the menu items to the menu
WITHOUT_CLASSIFICATION	add entries for insert and delete rows only if table is updateable and already editable (ie. allowediting is false)
WITHOUT_CLASSIFICATION	cut and paste need to be worked on so for now do not include them also the copy operations do not seem to work right - we may need special versions for the celleditor menu. add(_cut) add(_copy) add(_copyhtml) add(_paste) addseparator()
WITHOUT_CLASSIFICATION	i18n[tablepopupmenu.export=export csv / ms excel ]
WITHOUT_CLASSIFICATION	ss display complete column header as tooltip if the column isn't wide enough to display it
WITHOUT_CLASSIFICATION	tell the datasetviewer to delete the rows note rows are indexes in the sortable model not the actual model
WITHOUT_CLASSIFICATION	int modelcol = gettable().convertcolumnindextomodel(col)
WITHOUT_CLASSIFICATION	gettable().dolayout()
WITHOUT_CLASSIFICATION	gettable().dolayout()
WITHOUT_CLASSIFICATION	added by patch 2856103 for apple/mac
WITHOUT_CLASSIFICATION	added by patch 2856103 for apple/mac
WITHOUT_CLASSIFICATION	rendering the column that the mouse has been pressed in.
WITHOUT_CLASSIFICATION	if this is the column that the table is currently is currently sorted by then display the sort icon.
WITHOUT_CLASSIFICATION	this is not the column that the mouse has been pressed in.
WITHOUT_CLASSIFICATION	ignore.
WITHOUT_CLASSIFICATION	point pt = jfcutilities.computepopuplocation(evt evt.getcomponent() this)
WITHOUT_CLASSIFICATION	the message area is on the right of the statusbar and takes up all available space.
WITHOUT_CLASSIFICATION	any other components are on the right.
WITHOUT_CLASSIFICATION	void reload()
WITHOUT_CLASSIFICATION	dimension dim = sp.getpreferredsize() dim.width = preferred_width sp.setpreferredsize(new dimension(sp.getpreferredsize().width 200))
WITHOUT_CLASSIFICATION	dimension dim = getpreferredsize() dim.width = preferred_width setpreferredsize(dim) setrows(3)
WITHOUT_CLASSIFICATION	first attempt to add data to underlying table model
WITHOUT_CLASSIFICATION	comparable c1 = (comparable)data1 return c1.compareto(data2) _iascending
WITHOUT_CLASSIFICATION	i18n[tableexportcsvcontroller.nofile=you must provide a export file name.]
WITHOUT_CLASSIFICATION	i18n[tableexportcsvcontroller.replacefile=the export file already exisits. would you like to replace it?]
WITHOUT_CLASSIFICATION	menues that are also shown in the main window session menu might be in this popup. if we don't remove them the session won't be garbage collected.
WITHOUT_CLASSIFICATION	this was originaly done every time. and the count of instantiated objects was amazing
WITHOUT_CLASSIFICATION	we look forward
WITHOUT_CLASSIFICATION	top
WITHOUT_CLASSIFICATION	right
WITHOUT_CLASSIFICATION	can't happen
WITHOUT_CLASSIFICATION	i18n[tableexportcsvdlg.formatxls=export ms excel (xls) file]
WITHOUT_CLASSIFICATION	tell the underlying data model to make itself editable which includes telling the gui to rebuild itself
WITHOUT_CLASSIFICATION	show all tooltips for ten seconds before hiding
WITHOUT_CLASSIFICATION	row 1
WITHOUT_CLASSIFICATION	abort the export
WITHOUT_CLASSIFICATION	row 2
WITHOUT_CLASSIFICATION	abort the export
WITHOUT_CLASSIFICATION	row 3
WITHOUT_CLASSIFICATION	private static final stringmanager s_stringmgr = stringmanagerfactory.getstringmanager(tablecopycommand.class)
WITHOUT_CLASSIFICATION	all sheets and cells added. now write out the workbook
WITHOUT_CLASSIFICATION	_table.requestfocus()
WITHOUT_CLASSIFICATION	only for restoring from xml etc.
WITHOUT_CLASSIFICATION	tell the underlying data model to stop forcing edit mode and return to the mode specified in the session parameters which includes telling the gui to rebuild itself
WITHOUT_CLASSIFICATION	only for restoring from xml etc.
WITHOUT_CLASSIFICATION	register as a listener for mouse events
WITHOUT_CLASSIFICATION	we look backwards
WITHOUT_CLASSIFICATION	we look backwards
WITHOUT_CLASSIFICATION	view
WITHOUT_CLASSIFICATION	i18n[tableexportcsvcommand.writefilesuccess=export to file "{0}" is complete.]
WITHOUT_CLASSIFICATION	string sql = "a'''' sss go go'" string sql = "a\n--x\n--y\n\nb" string sql = "go go"
WITHOUT_CLASSIFICATION	/ handling of comments
WITHOUT_CLASSIFICATION	skip ahead so the cursor is now immediately after the begin comment string
WITHOUT_CLASSIFICATION	this is responsible that comments are not in curquery
WITHOUT_CLASSIFICATION	add end
WITHOUT_CLASSIFICATION	some drivers for db2 don't return sysfun as a schema name. a number of system stored procs are kept in this schema.
WITHOUT_CLASSIFICATION	postgresql (at least 7.3.2) returns false for supportsstoredprocedures() even though it does support them.
WITHOUT_CLASSIFICATION	use a set rather than a list as some combinations of ms sql and the jdbc/odbc return multiple copies of each table type.
WITHOUT_CLASSIFICATION	treating indexes as tables interferes with the operation of the postgresql plugin
WITHOUT_CLASSIFICATION	treating sequences as tables interferes with the operation of the postgresql plugin
WITHOUT_CLASSIFICATION	there are many of these "tables" that postgresql throws sqlexceptions for whenever a table-like operation is attempted.
WITHOUT_CLASSIFICATION	informix when no database is given in the connect url then no table types are returned. the catalog can be changed which will select a database but by that time it is too late.
WITHOUT_CLASSIFICATION	create a mapping of names if we have supertable info since we need to find the itableinfo again for re-ordering.
WITHOUT_CLASSIFICATION	store all plain table info we have.
WITHOUT_CLASSIFICATION	re-order nodes if the tables are stored hierachically
WITHOUT_CLASSIFICATION	remove from toplevel.
WITHOUT_CLASSIFICATION	mm-mysql driver doesnt support null for column name.
WITHOUT_CLASSIFICATION	see if there is a plugin-registered datatypecomponent that can handle this column.
WITHOUT_CLASSIFICATION	oracle's 'timestamp with time zone' == -101 oracle's 'timestamp with local time zone' == -102
WITHOUT_CLASSIFICATION	i18n[metadatadecoratordataset.nojarfiles=no files specified in 'extra classpath' tab for driver]
WITHOUT_CLASSIFICATION	impossible.
WITHOUT_CLASSIFICATION	since we are reading meta-data about the db we should never see a blob. if we do the contents are not interpretable by squirrel so just tell the user that it is a blob and that it has data.
WITHOUT_CLASSIFICATION	since we are reading meta-data about the db we should never see a clob. however if we do we assume that it is printable text and that the user wants to see it so read in the entire thing.
WITHOUT_CLASSIFICATION	add begin
WITHOUT_CLASSIFICATION	add end
WITHOUT_CLASSIFICATION	?? }
WITHOUT_CLASSIFICATION	final string columnclassname = _rsmd.getcolumnclassname(idx)
WITHOUT_CLASSIFICATION	binary types
WITHOUT_CLASSIFICATION	1i8n[metadatadecoratordataset.classnamelabel=jdbc driver classname]
WITHOUT_CLASSIFICATION	1i8n[metadatadecoratordataset.classpathlabel=jdbc driver classpath]
WITHOUT_CLASSIFICATION	empty body.
WITHOUT_CLASSIFICATION	private final static ilogger s_log = loggercontroller.createlogger(resultsetcolumnreader.class)
WITHOUT_CLASSIFICATION	empty body.
WITHOUT_CLASSIFICATION	check for informix - it has very "special" qualified names
WITHOUT_CLASSIFICATION	progress claims to support catalogs in data manip - but it actually doesn't honor that claim.
WITHOUT_CLASSIFICATION	in case the connection won't be able to tell its auto commit state this is the best default we have.
WITHOUT_CLASSIFICATION	databaseobjecttype.database_type_dbo=database type
WITHOUT_CLASSIFICATION	databaseobjecttype.index_type_dbo=index type
WITHOUT_CLASSIFICATION	databaseobjecttype.proc_type_dbo=stored procedure type
WITHOUT_CLASSIFICATION	databaseobjecttype.sequence_type_dbo=sequence type
WITHOUT_CLASSIFICATION	databaseobjecttype.table_type_dbo=table type
WITHOUT_CLASSIFICATION	databaseobjecttype.trigger_type_dbo=trigger type
WITHOUT_CLASSIFICATION	databaseobjecttype.udt_type_dbo=udt type
WITHOUT_CLASSIFICATION	impossible.
WITHOUT_CLASSIFICATION	tables that have at least one parent table
WITHOUT_CLASSIFICATION	tables that have at least one child table
WITHOUT_CLASSIFICATION	tables that have at least one child table and have a least one parent table
WITHOUT_CLASSIFICATION	avoid the hit next time
WITHOUT_CLASSIFICATION	avoid the hit next time
WITHOUT_CLASSIFICATION	close the resultset
WITHOUT_CLASSIFICATION	close the resultset's statement if it is non-null. this frees open cursors.
WITHOUT_CLASSIFICATION	t1 depends on t2
WITHOUT_CLASSIFICATION	t2 depends on t1
WITHOUT_CLASSIFICATION	build up datastructure. final cache.
WITHOUT_CLASSIFICATION	i18n
WITHOUT_CLASSIFICATION	guaranteed to be non-null.
WITHOUT_CLASSIFICATION	classes.add(((cacheentry)it.next())._objclass)
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	empty.
WITHOUT_CLASSIFICATION	empty.
WITHOUT_CLASSIFICATION	empty.
WITHOUT_CLASSIFICATION	guaranteed to be non-null.
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	lazily create the event.
WITHOUT_CLASSIFICATION	return get().getproperty("mrj.version") != null
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	i18n[taskthreadpool.errorduringtaskexecmsg=error ocured during task execution]
WITHOUT_CLASSIFICATION	item.seticon(null)
WITHOUT_CLASSIFICATION	some actions dont have accelerators
WITHOUT_CLASSIFICATION	this slash stuff is a
WITHOUT_CLASSIFICATION	-- constructors --
WITHOUT_CLASSIFICATION	-- path-component accessors --
WITHOUT_CLASSIFICATION	-- attribute accessors --
WITHOUT_CLASSIFICATION	-- file operations --
WITHOUT_CLASSIFICATION	-- filesystem interface --
WITHOUT_CLASSIFICATION	-- basic infrastructure --
WITHOUT_CLASSIFICATION	count of available or free threads.
WITHOUT_CLASSIFICATION	should there me a max number of threads?
WITHOUT_CLASSIFICATION	empty
WITHOUT_CLASSIFICATION	impossible.
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	assume unix or linux
WITHOUT_CLASSIFICATION	private boolean _bstopexecution = false
WITHOUT_CLASSIFICATION	_bstopexecution = false
WITHOUT_CLASSIFICATION	these arrays are parallel.
WITHOUT_CLASSIFICATION	line should look like this is a line with an <span>embedded key</span> in it.
WITHOUT_CLASSIFICATION	no exceptions during logging
WITHOUT_CLASSIFICATION	no exceptions during logging
WITHOUT_CLASSIFICATION	folder to store user settings.
WITHOUT_CLASSIFICATION	no exceptions during logging
WITHOUT_CLASSIFICATION	no exceptions during logging
WITHOUT_CLASSIFICATION	no exceptions during logging
WITHOUT_CLASSIFICATION	ctor. @parammsg message describing the error.
WITHOUT_CLASSIFICATION	ctor. wraps this exception around another. @paramwrapee the exception that this one is wrapped around.
WITHOUT_CLASSIFICATION	convert data from stringwrappers to strings
WITHOUT_CLASSIFICATION	es mach nichts wenn es die pid nicht g�be. sie wird dann einfach oben nicht zugeordnet.
WITHOUT_CLASSIFICATION	if we are blocked by a member of a deadlock chain but do not belong to the deadlock chain ourselves this prevents a forever loop.
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	die 200 braucht nur sql server 7.0 sql server 2000 nicht mehr sagt san
WITHOUT_CLASSIFICATION	dataholder res = conn.runclassmethod("%library.cmutilities" "getexecutionplan" argv database.ret_object)
WITHOUT_CLASSIFICATION	newindentdepth == indentdepth
WITHOUT_CLASSIFICATION	jdbccachecachensw-and1972/shdtest
WITHOUT_CLASSIFICATION	load plugin preferences.
WITHOUT_CLASSIFICATION	plugin supports only session main window
WITHOUT_CLASSIFICATION	plugin supports only session main window
WITHOUT_CLASSIFICATION	user.home/.squirrel-sql/plugins/dbcopy
WITHOUT_CLASSIFICATION	i18n[codecompletion.usesyntaxplugin=code completion will work better if you use the syntax plugin. get it from squirrelsql.org it's free!]
WITHOUT_CLASSIFICATION	i have seen the reference to the outer class being null when this method is called. i have seen it only with the runtime jars and on linux. i could not reproduce in my ide.
WITHOUT_CLASSIFICATION	figure out which column the user clicked on so we can pass in the right column description
WITHOUT_CLASSIFICATION	folder within plugins folder that belongs to this plugin.
WITHOUT_CLASSIFICATION	coll.add(new scriptprocedureaction(app _resources this _usersettingsfolder)) coll.add(new refreshrepositoryaction(app _resources this _usersettingsfolder))
WITHOUT_CLASSIFICATION	these objects do not depend on catalogs or schemas. it is enough if we load them once.
WITHOUT_CLASSIFICATION	for example postgres returns table names as datatypes. in those cases this prevents to have the table names twice.
WITHOUT_CLASSIFICATION	completioninfos are still loading
WITHOUT_CLASSIFICATION	completioninfos are still loading
WITHOUT_CLASSIFICATION	1 < buf.size()
WITHOUT_CLASSIFICATION	might also be a catalog or a schema name
WITHOUT_CLASSIFICATION	first check aliases
WITHOUT_CLASSIFICATION	see if this is the same statement
WITHOUT_CLASSIFICATION	makes sure that the last name is always in top of the list.
WITHOUT_CLASSIFICATION	code completion has been done within code completion. and relaunch completion popup.
WITHOUT_CLASSIFICATION	new testcompletionfunction()
WITHOUT_CLASSIFICATION	remove the function name
WITHOUT_CLASSIFICATION	needed for example on postgresql
WITHOUT_CLASSIFICATION	i18n[codecompletion.spwithparams=stored procedure with parameter info {call mysp(<in integer tid>)}]
WITHOUT_CLASSIFICATION	i18n[codecompletion.globalfunctcompltion=if there is no matching prefix configuration functions should complete like]
WITHOUT_CLASSIFICATION	i18n[codecompletion.prefs.table.udfwithoutparams=udf without params]
WITHOUT_CLASSIFICATION	just a test
WITHOUT_CLASSIFICATION	i18n[codecompletion.prefixconfig.deleteselrows=delete selected rows]
WITHOUT_CLASSIFICATION	i18n[codecompletion.prefixconfig.newrow=add new row]
WITHOUT_CLASSIFICATION	this holds all the values for switches that the user is allowed to set
WITHOUT_CLASSIFICATION	this will be our working buffer to hold data chunks read in from the data file
WITHOUT_CLASSIFICATION	these are all more or less global loop variables to keep from needing to pass them all into various methods during parsing
WITHOUT_CLASSIFICATION	use clone here to prevent the outside code from setting values on the array directly which would throw off the index lookup based on header name
WITHOUT_CLASSIFICATION	use headersholder.length here in case headers is null
WITHOUT_CLASSIFICATION	need to return a clone and can't use clone because values.length might be greater than columnscount
WITHOUT_CLASSIFICATION	check to see if we've already found the end of data
WITHOUT_CLASSIFICATION	loop over the data stream until the end of data is found or the end of the record is found
WITHOUT_CLASSIFICATION	grab the current letter as a char
WITHOUT_CLASSIFICATION	grab the current letter as a char
WITHOUT_CLASSIFICATION	this will be a text qualified column so we need to set startedwithqualifier to make it enter the seperate branch to handle text qualified columns
WITHOUT_CLASSIFICATION	read qualified
WITHOUT_CLASSIFICATION	can only happen for escape_mode_backslash
WITHOUT_CLASSIFICATION	make sure to clear the flag for next run of the loop
WITHOUT_CLASSIFICATION	keep track of the last letter because we need it for several key decisions
WITHOUT_CLASSIFICATION	end else
WITHOUT_CLASSIFICATION	this will skip blank lines
WITHOUT_CLASSIFICATION	keep track of the last letter because we need it for several key decisions
WITHOUT_CLASSIFICATION	end else
WITHOUT_CLASSIFICATION	we encountered a column with no data so just send the end column
WITHOUT_CLASSIFICATION	do nothing this will trim leading whitespace for both text qualified columns and non
WITHOUT_CLASSIFICATION	since the letter wasn't a special letter this will be the first letter of our current column
WITHOUT_CLASSIFICATION	check to see if we hit the end of the file without processing the current record
WITHOUT_CLASSIFICATION	for hasmoredata to ever be false all data would have had to have been copied to the raw buffer
WITHOUT_CLASSIFICATION	if no more data could be found set flag stating that the end of the data was found
WITHOUT_CLASSIFICATION	copy the header data from the column array to the header string array
WITHOUT_CLASSIFICATION	if there are duplicate header names we will save the last one
WITHOUT_CLASSIFICATION	check to see if we have read the header record yet
WITHOUT_CLASSIFICATION	return the processed header data for this column
WITHOUT_CLASSIFICATION	must be called before setting startedcolumn = false
WITHOUT_CLASSIFICATION	check to see if our current holder array for column chunks is still big enough to handle another column chunk
WITHOUT_CLASSIFICATION	holder array needs to grow to be able to hold another column
WITHOUT_CLASSIFICATION	create column list
WITHOUT_CLASSIFICATION	keep track of the last letter because we need it for several key decisions
WITHOUT_CLASSIFICATION	end else
WITHOUT_CLASSIFICATION	clear public column values for current line
WITHOUT_CLASSIFICATION	just eat the exception
WITHOUT_CLASSIFICATION	/ <summary> / the position of the cursor in the buffer when the / current column was started or the last time data / was moved out to the column buffer. / </summary>
WITHOUT_CLASSIFICATION	ascii/ansi escape
WITHOUT_CLASSIFICATION	having these as publicly accessible members will prevent the overhead of the method call that exists on properties
WITHOUT_CLASSIFICATION	these are static instead of final so they can be changed in unit test isn't visible outside this class and is only accessed once during csvreader construction
WITHOUT_CLASSIFICATION	i18n[importtabledatacommand.settingsdialogtitle=import file settings]
WITHOUT_CLASSIFICATION	i18n[importdataintotableexecutor.wrongformat=imported column has not the required format.\nline is {0} column is {1}]
WITHOUT_CLASSIFICATION	1968807 unsigned int problem with import file functionality if we are working with a signed integer then it should be ok to store in a java integer which is always signed. however if we are working with an unsigned integer type java doesn't have this so use a long instead.
WITHOUT_CLASSIFICATION	try it as a long in case the database driver didn't correctly identify an unsigned field
WITHOUT_CLASSIFICATION	show a warning dialog and let the user confirm it.
WITHOUT_CLASSIFICATION	i18n[importtabledatacommand.ioerroroccured=an error occured while reading import file data.]
WITHOUT_CLASSIFICATION	columns
WITHOUT_CLASSIFICATION	not needed
WITHOUT_CLASSIFICATION	i18n[importfiledialog.suggestcolumns=suggest columns (find matching columns)]
WITHOUT_CLASSIFICATION	i18n[importfiledialog.headersincluded=headers in first line]
WITHOUT_CLASSIFICATION	i18n[importfiledialog.datapreview=data preview]
WITHOUT_CLASSIFICATION	columns
WITHOUT_CLASSIFICATION	rows
WITHOUT_CLASSIFICATION	if the user chooses neither fixed value nor auto-increment then clear the "fixed value" field if it has a value.
WITHOUT_CLASSIFICATION	if the user picks auto-increment auto-fill the "fixed value" column with 0 for the start value if it is currently empty.
WITHOUT_CLASSIFICATION	i18n[importfiledialog.column=column]
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	i18n[progressbardialog.error.getdialog=getdialog unable to invokeandwait for dialog]
WITHOUT_CLASSIFICATION	i18n[importfiledialog.fixedvalue=fixed value]
WITHOUT_CLASSIFICATION	i18n[importfiledialog.importfilecolumn=import file column]
WITHOUT_CLASSIFICATION	i18n[progressbardialog.insertingrecordslabel=copying records]
WITHOUT_CLASSIFICATION	i18n[specialcolumnmapping.auto_increment=auto increment]
WITHOUT_CLASSIFICATION	columns
WITHOUT_CLASSIFICATION	rows
WITHOUT_CLASSIFICATION	ignore that
WITHOUT_CLASSIFICATION	rows
WITHOUT_CLASSIFICATION	impossible.
WITHOUT_CLASSIFICATION	folder to store user settings.
WITHOUT_CLASSIFICATION	expanders - trigger and index expanders are added inside the table expander
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	register custom datatypecomponent factory for db2 xml
WITHOUT_CLASSIFICATION	install db2jccexceptionformatter iff we're using the jcc driver
WITHOUT_CLASSIFICATION	tableexpander.settableindexextractor(extractor)
WITHOUT_CLASSIFICATION	as the jcc driver code is obfuscated we do not check the full class name but resort to checking a prefix and suffix instead. in my version the full class name is "com.ibm.db2.jcc.c.sqlexception"
WITHOUT_CLASSIFICATION	prefix for the jcc sqlexception class name
WITHOUT_CLASSIFICATION	class name for the jcc sqlexception class
WITHOUT_CLASSIFICATION	names of the various methods we need to invoke
WITHOUT_CLASSIFICATION	db2sqlca sqlca = ((db2diagnosable) t).getsqlca()
WITHOUT_CLASSIFICATION	string msg = sqlca.getmessage()
WITHOUT_CLASSIFICATION	int sqlcode = sqlca.getsqlcode()
WITHOUT_CLASSIFICATION	int sqlstate = sqlca.getsqlstate()
WITHOUT_CLASSIFICATION	i18n[indexdetailstab.title=details]
WITHOUT_CLASSIFICATION	i18n[sequencedetailstab.hint=display sequence details]
WITHOUT_CLASSIFICATION	i18n[sequencedetailstab.title=details]
WITHOUT_CLASSIFICATION	we may have more than one statement in sql at this point
WITHOUT_CLASSIFICATION	mqts only ever have one sql statement
WITHOUT_CLASSIFICATION	i18n[triggerdetailstab.title=details]
WITHOUT_CLASSIFICATION	i18n[triggerdetailstab.hint=display trigger details]
WITHOUT_CLASSIFICATION	at the moment no default value
WITHOUT_CLASSIFICATION	yes to all
WITHOUT_CLASSIFICATION	cancel
WITHOUT_CLASSIFICATION	i18n[oracle.owner=owner]
WITHOUT_CLASSIFICATION	no decimal digits strongly suggests an integer of some type. since it's not real easy to tell what kind of int (int2 int4 int8) just make it an int8 (i.e. bigint)
WITHOUT_CLASSIFICATION	numbers and such.
WITHOUT_CLASSIFICATION	i18n[oracle.objectname=object name]
WITHOUT_CLASSIFICATION	i18n[oracle.objecttype=object type]
WITHOUT_CLASSIFICATION	as a last resort get the length of the longest value in the specified column.
WITHOUT_CLASSIFICATION	yes || yes to all
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	no need to check column name validity when source and dest are of the same type of database.
WITHOUT_CLASSIFICATION	don't fool around with manual commit later.
WITHOUT_CLASSIFICATION	loop through source records
WITHOUT_CLASSIFICATION	mysql driver gets unhappy when we use the same preparedstatement to bind null and non-null lob variables without clearing the parameters first.
WITHOUT_CLASSIFICATION	i18n[oracle.invalidtitle=oracle invalid objects for {0}]
WITHOUT_CLASSIFICATION	only resize once.
WITHOUT_CLASSIFICATION	if source column is type 1111 (other) try to use the column type name to find a type that isn't 1111.
WITHOUT_CLASSIFICATION	if source column is type 1111 (other) try to use the column type name to find a type that isn't 1111.
WITHOUT_CLASSIFICATION	icommand interface implementation
WITHOUT_CLASSIFICATION	can't paste from a session that is no longer around.
WITHOUT_CLASSIFICATION	md = new memorydiagnostics()
WITHOUT_CLASSIFICATION	copy action object tree types
WITHOUT_CLASSIFICATION	paste action object tree types
WITHOUT_CLASSIFICATION	mysql shows databases as "catalogs" not "schemas"
WITHOUT_CLASSIFICATION	nothing to do for an sql internal frame
WITHOUT_CLASSIFICATION	when the user pastes on a table label which is located under a schema/catalog build the schema databaseobjectinfo.
WITHOUT_CLASSIFICATION	i18n[pastetableaction.error.destdbobj=the destination database doesn't support copying tables into '{0}' objects.\n please select a schema to paste into.]
WITHOUT_CLASSIFICATION	isession sourcesession = sessioninfoprov.getcopysourcesession() isession destsession = sessioninfoprov.getcopydestsession()
WITHOUT_CLASSIFICATION	column 0 row 0
WITHOUT_CLASSIFICATION	span across two columns
WITHOUT_CLASSIFICATION	calculate the average time / item
WITHOUT_CLASSIFICATION	todo check to be sure that the source and destination schemas are different. abort if they are the same and inform the user.
WITHOUT_CLASSIFICATION	only concerned about order when more than one table.
WITHOUT_CLASSIFICATION	column 0 row 1
WITHOUT_CLASSIFICATION	how many items left
WITHOUT_CLASSIFICATION	span across two columns c.ipadx = 40
WITHOUT_CLASSIFICATION	increases component width by 40 pixels
WITHOUT_CLASSIFICATION	increases component width by 40 pixels
WITHOUT_CLASSIFICATION	increases component width by 40 pixels
WITHOUT_CLASSIFICATION	increases component width by 40 pixels
WITHOUT_CLASSIFICATION	increases component width by 20 pixels
WITHOUT_CLASSIFICATION	selectfetchsizelabel.sethorizontalalignment(jlabel.left)
WITHOUT_CLASSIFICATION	impossible.
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	folder to store user settings.
WITHOUT_CLASSIFICATION	probably shutting down.
WITHOUT_CLASSIFICATION	i18n[dbutil.info.executeupdate=executeupdate running sql\n '{0}']
WITHOUT_CLASSIFICATION	timesten allows a maximum fetch size of 128.
WITHOUT_CLASSIFICATION	allow the user to set "0" for the fetch size to indicate that this should not be called. jdbc-odbc bridge driver fails to execute sql once you have set the fetch size to any value.
WITHOUT_CLASSIFICATION	i18n[dbutil.error.tablenotfound=couldn't locate table '{0}' in schema '(1)']
WITHOUT_CLASSIFICATION	only close the statement if sqlexception - otherwise it has to remain open until the resultset is read through by the caller.
WITHOUT_CLASSIFICATION	do nothing - this can happen when the table doesn't exist
WITHOUT_CLASSIFICATION	currently as of milestone 3 axion doesn't support "schemas" like other databases. so set the schema to emtpy string if we detect an axion session.
WITHOUT_CLASSIFICATION	mysql uses catalogs and not schemas
WITHOUT_CLASSIFICATION	trim the table name in case of hadb
WITHOUT_CLASSIFICATION	fallback to the old method going directly to the database instead of using schemainfo since schemainfo didn't have it.
WITHOUT_CLASSIFICATION	user.home/.squirrel-sql/plugins/dbcopy/scripts
WITHOUT_CLASSIFICATION	fix the case according to what the database tells us.
WITHOUT_CLASSIFICATION	sql float requires support for 15 digits of mantissa.
WITHOUT_CLASSIFICATION	column_name
WITHOUT_CLASSIFICATION	i18n[dbutil.error.unknowntype=unknown java sql column type '{0}']
WITHOUT_CLASSIFICATION	if we failed to bind the blob in a file try memory.
WITHOUT_CLASSIFICATION	i18n[dbutil.info.bindcloblength=bindclobvarinfile writing '{0}' bytes.]
WITHOUT_CLASSIFICATION	i18n[dbutil.info.bindclobfile=bindclobvarinfile opening temp file '{0}']
WITHOUT_CLASSIFICATION	i18n[dbutil.info.bindblobfile=bindblobvarinfile opening temp file '{0}']
WITHOUT_CLASSIFICATION	i18n[dbutil.info.bindblobmem=bindblobvarinmemory binding '{0}' bytes]
WITHOUT_CLASSIFICATION	i18n[dbutil.error.bindblobfailure=bindblobvar failed to bind blob using filesystem - attempting to bind blob using memory]
WITHOUT_CLASSIFICATION	if we failed to bind the blob in a file try memory.
WITHOUT_CLASSIFICATION	set the ps to read from the file we just created.
WITHOUT_CLASSIFICATION	get ascii stream from rs
WITHOUT_CLASSIFICATION	read rs input stream write to file output stream
WITHOUT_CLASSIFICATION	open file output stream
WITHOUT_CLASSIFICATION	open file output stream
WITHOUT_CLASSIFICATION	read rs input stream write to file output stream
WITHOUT_CLASSIFICATION	set the ps to read from the file we just created.
WITHOUT_CLASSIFICATION	get binary stream from rs
WITHOUT_CLASSIFICATION	if the user wants the primary key copied and the source session isn't axion (axion throws sqlexception for getprimarykeys())
WITHOUT_CLASSIFICATION	user.home/.squirrel-sql/plugins
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	ignore any sqlexceptions. this would only if we could not get column info from the sql database meta data.
WITHOUT_CLASSIFICATION	replace the next question mark with nextval
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	resultset rs = con.getmetadata().gettables("dbcopysrc" null "bigint_type_table" new string[]{ "table" })
WITHOUT_CLASSIFICATION	listener.setshowsqlstatements(true)
WITHOUT_CLASSIFICATION	result = false
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getglobalpreferencepanels()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#gethelpfilename()
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getwebsite()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#initialize()
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getdescriptivename()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getauthor()
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	diffsourcesession = nullsetpastemenuenabled(false)preferencesmanager.unload()
WITHOUT_CLASSIFICATION	dbcopyglobalpreferencestab tab = new dbcopyglobalpreferencestab()return new iglobalpreferencespanel[] { tab }
WITHOUT_CLASSIFICATION	uses menu.dbdiff. in dbdiff.properties
WITHOUT_CLASSIFICATION	interface sessioninfoprovider implementation
WITHOUT_CLASSIFICATION	column is in table 1 but not table 2
WITHOUT_CLASSIFICATION	i18n[diffexecutor.nodiffsmessage=no differences were detected]
WITHOUT_CLASSIFICATION	table exists in source db but not dest
WITHOUT_CLASSIFICATION	table doesn't exist in source db
WITHOUT_CLASSIFICATION	assume objs[0] is a schema/catalog
WITHOUT_CLASSIFICATION	nothing to do for an sql internal frame
WITHOUT_CLASSIFICATION	icommand interface implementation
WITHOUT_CLASSIFICATION	the header for the scrollable part which presents column differences
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	corner.validate()
WITHOUT_CLASSIFICATION	jscrollpane1.setrowheaderview(_rowheader)
WITHOUT_CLASSIFICATION	_tableheader.adoptallcolwidths(true) _tableheader.initcolwidths()
WITHOUT_CLASSIFICATION	corner.createdefaultcolumnsfrommodel()
WITHOUT_CLASSIFICATION	jscrollpane1.setcorner(jscrollpane.upper_left_corner corner)
WITHOUT_CLASSIFICATION	result.setautoresizemode(javax.swing.jtable.auto_resize_off)
WITHOUT_CLASSIFICATION	throw new illegalstateexception("wrong constructor")
WITHOUT_CLASSIFICATION	do nothing - this can happen when the table doesn't exist
WITHOUT_CLASSIFICATION	mysql uses catalogs and not schemas
WITHOUT_CLASSIFICATION	currently as of milestone 3 axion doesn't support "schemas" like other databases. so set the schema to emtpy string if we detect an axion session.
WITHOUT_CLASSIFICATION	don't change the case of the identifier if database allows mixed case.
WITHOUT_CLASSIFICATION	fix the case according to what the database tells us.
WITHOUT_CLASSIFICATION	register custom datatypecomponent factory for derby clob type
WITHOUT_CLASSIFICATION	_treeapi.adddetailtab(databaseobjecttype.sequence new databaseobjectinfotab()) _treeapi.adddetailtab(databaseobjecttype.sequence new sequencedetailstab())
WITHOUT_CLASSIFICATION	expanders - trigger and index expanders are added inside the table expander _treeapi.addexpander(databaseobjecttype.schema new schemaexpander())
WITHOUT_CLASSIFICATION	the code bellow is only for embedded derby driver
WITHOUT_CLASSIFICATION	getting java.sql.driver to run shutdown command
WITHOUT_CLASSIFICATION	re-registering driver is necessary for embedded derby
WITHOUT_CLASSIFICATION	span across two columns
WITHOUT_CLASSIFICATION	the jtextcomponent that is being used for editing
WITHOUT_CLASSIFICATION	the cellrenderer used for this data type
WITHOUT_CLASSIFICATION	for convenience cast the value object to its type
WITHOUT_CLASSIFICATION	we have the whole contents of the clob
WITHOUT_CLASSIFICATION	getters and setters
WITHOUT_CLASSIFICATION	if both objs are null then they matched in the previous test so at this point we know that at least one of them (or both) is not null. however one of them may still be null and we cannot call equals() on the null object so make sure that the one we call it on is not null. the equals() method handles the other one being null if it is.
WITHOUT_CLASSIFICATION	first we have the methods for in-cell and text-table operations
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	return a jtextarea usable in the cellpopupdialog and fill in the value.
WITHOUT_CLASSIFICATION	as a coding convenience create a reference to the text component that is typecast to jtextcomponent. this is not essential as we could typecast every reference but this makes the code cleaner
WITHOUT_CLASSIFICATION	for convenience cast the existing object
WITHOUT_CLASSIFICATION	no existing clob to re-use
WITHOUT_CLASSIFICATION	if the original object is not null then it contains a clob object that we need to re-use since that is the dbs reference to the clob data area. otherwise we set the original clob to null and the write method needs to know to set the field to null.
WITHOUT_CLASSIFICATION	create new object to hold the different value but use the same internal clob pointer as the original
WITHOUT_CLASSIFICATION	now the functions for the popup-related operations.
WITHOUT_CLASSIFICATION	the following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	internal class for handling key events during editing of both jtextfield and jtextarea.
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	try to use the db default value
WITHOUT_CLASSIFICATION	if there was a problem with converting then just fall through and continue as if there was no default given in the db. otherwise use the converted object
WITHOUT_CLASSIFICATION	no default in db. if nullable use null.
WITHOUT_CLASSIFICATION	field is not nullable so create a reasonable default value
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	convert number conversion issue into io issue for consistancy
WITHOUT_CLASSIFICATION	clob cannot be used in where clause
WITHOUT_CLASSIFICATION	for convenience cast the object to clobdescriptor
WITHOUT_CLASSIFICATION	about to delete last thing in field so replace with null
WITHOUT_CLASSIFICATION	database-related functions
WITHOUT_CLASSIFICATION	file io related functions
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid data value
WITHOUT_CLASSIFICATION	i18n[editextras.date=date]
WITHOUT_CLASSIFICATION	new removequotescommand(_session.getsqlpanelapi(_plugin)).execute()
WITHOUT_CLASSIFICATION	load resources.
WITHOUT_CLASSIFICATION	to make the shortcut visible in the popup
WITHOUT_CLASSIFICATION	some people put new line characters in their sql to have nice debug output. remove these new line characters too.
WITHOUT_CLASSIFICATION	new converttostringbuffercommand(_session.getsqlpanelapi(_plugin)).execute()
WITHOUT_CLASSIFICATION	/ ibm db 2 specific code to read procedure definitions.
WITHOUT_CLASSIFICATION	new inquotescommand(_session.getsqlpanelapi(_plugin)).execute()
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	plugin knows only how to script views and stored procedures on db2. so if it's not a db2 session we tell squirrel the plugin should not be used.
WITHOUT_CLASSIFICATION	folder to store user settings.
WITHOUT_CLASSIFICATION	add context menu items to the object tree's view and procedure nodes.
WITHOUT_CLASSIFICATION	i18n[exportconfig.filewillbecreated={0} not found - will be created]
WITHOUT_CLASSIFICATION	load plugin preferences.
WITHOUT_CLASSIFICATION	i18n[exportconfig.fileexistsreplace={0}\nalready exists. do you want to replace it?]
WITHOUT_CLASSIFICATION	i18n[exportconfig.databasedrivers=database drivers]
WITHOUT_CLASSIFICATION	i18n[exportconfig.databasealiases=database aliases]
WITHOUT_CLASSIFICATION	i18n[exportconfig.applicationsettings=application settings]
WITHOUT_CLASSIFICATION	i18n[exportconfig.errorreslovingfilename=error resolving file name]
WITHOUT_CLASSIFICATION	i18n[favs.namemustnotbeblank=name cannot be blank.]
WITHOUT_CLASSIFICATION	impossible.
WITHOUT_CLASSIFICATION	first time user has run pgm.
WITHOUT_CLASSIFICATION	add mouse listener for displaying popup menu.
WITHOUT_CLASSIFICATION	private string getfilename(file dir string name) { return getfilename(new file(dir name)) }
WITHOUT_CLASSIFICATION	chooser.setdialogtitle("select???")
WITHOUT_CLASSIFICATION	setmodel(_model)
WITHOUT_CLASSIFICATION	addtreeexpansionlistener(new myexpansionlistener())
WITHOUT_CLASSIFICATION	register so that we can display different tooltips depending which entry in tree mouse is over.
WITHOUT_CLASSIFICATION	ihasname
WITHOUT_CLASSIFICATION	= new querytree()
WITHOUT_CLASSIFICATION	_mainsplitpane.add(getdesktoppane() jsplitpane.right)
WITHOUT_CLASSIFICATION	setbounds(new rectangle(600 400))
WITHOUT_CLASSIFICATION	impossible.
WITHOUT_CLASSIFICATION	i18n[favs.newfolder=new folder] ?? i18n
WITHOUT_CLASSIFICATION	supports session main window only
WITHOUT_CLASSIFICATION	expanders.
WITHOUT_CLASSIFICATION	i18n[firebird.showtrigger=show trigger source]
WITHOUT_CLASSIFICATION	i18n[firebird.showproceduresource=show procedure source]
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	i18n[firebird.seqdetails=display sequence details]
WITHOUT_CLASSIFICATION	i18n[firebird.gendetails=details]
WITHOUT_CLASSIFICATION	execute the sql command in the sql tab and then display the sql tab.
WITHOUT_CLASSIFICATION	private static ilogger s_log = loggercontroller.createlogger(databaseexpander.class)
WITHOUT_CLASSIFICATION	i18n[firebird.details=details]
WITHOUT_CLASSIFICATION	i18n[firebird.trigdetails=details]
WITHOUT_CLASSIFICATION	i18n[firebird.trigdetails=details]
WITHOUT_CLASSIFICATION	empty body.
WITHOUT_CLASSIFICATION	logger for this class
WITHOUT_CLASSIFICATION	private utility constructor
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	sheet types
WITHOUT_CLASSIFICATION	result of checking for jaybird driver with major version >= 2
WITHOUT_CLASSIFICATION	logger for this class
WITHOUT_CLASSIFICATION	plugin supports session main window only
WITHOUT_CLASSIFICATION	plugin supports session main window only
WITHOUT_CLASSIFICATION	line separator for easy using -)
WITHOUT_CLASSIFICATION	jdbcfirebirdsql[host[port]/
WITHOUT_CLASSIFICATION	filefilter
WITHOUT_CLASSIFICATION	getter/setter
WITHOUT_CLASSIFICATION	data objects
WITHOUT_CLASSIFICATION	-- edit
WITHOUT_CLASSIFICATION	tree
WITHOUT_CLASSIFICATION	select
WITHOUT_CLASSIFICATION	labels
WITHOUT_CLASSIFICATION	layout ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	jradiobuttonroles.setselected(true)
WITHOUT_CLASSIFICATION	btnsetpermissions.setenabled(false)
WITHOUT_CLASSIFICATION	private void appendprivelegetobuffer(stringbuffer pbuffer string psprivilege)
WITHOUT_CLASSIFICATION	data ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	false)
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	get grant target
WITHOUT_CLASSIFICATION	tables and views
WITHOUT_CLASSIFICATION	procedures
WITHOUT_CLASSIFICATION	roles
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	super.iscelleditable(row column)
WITHOUT_CLASSIFICATION	" with admin option"
WITHOUT_CLASSIFICATION	super.iscelleditable(row column)
WITHOUT_CLASSIFICATION	########################################################################
WITHOUT_CLASSIFICATION	setting color
WITHOUT_CLASSIFICATION	root
WITHOUT_CLASSIFICATION	set default colors
WITHOUT_CLASSIFICATION	set default colors
WITHOUT_CLASSIFICATION	root
WITHOUT_CLASSIFICATION	childs
WITHOUT_CLASSIFICATION	groups
WITHOUT_CLASSIFICATION	groups
WITHOUT_CLASSIFICATION	childs
WITHOUT_CLASSIFICATION	-- backup
WITHOUT_CLASSIFICATION	setting color
WITHOUT_CLASSIFICATION	session preferences
WITHOUT_CLASSIFICATION	setting value
WITHOUT_CLASSIFICATION	setting value
WITHOUT_CLASSIFICATION	labels
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	-- restore
WITHOUT_CLASSIFICATION	errors
WITHOUT_CLASSIFICATION	info
WITHOUT_CLASSIFICATION	"ignore bad checksums" "ignore transaction in limbo"
WITHOUT_CLASSIFICATION	"backup file"
WITHOUT_CLASSIFICATION	"server" "port" "database file"
WITHOUT_CLASSIFICATION	"deactivate indexes during restore" "restore without creating shadows" "do not reserve space for record versions" "restores one table at a time" "do not restore database validity conditions" "replace database from backup file" "override old page size" "new page size" "restore"
WITHOUT_CLASSIFICATION	jscrollpane jscrollpane1 = new jscrollpane()
WITHOUT_CLASSIFICATION	global preferences
WITHOUT_CLASSIFICATION	preferences from the last session
WITHOUT_CLASSIFICATION	load properties and fill missing entries with the global preferences
WITHOUT_CLASSIFICATION	######################################################################## ########## events ######################################################################## ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	i18n[graph.invalidwidth=invalid width]
WITHOUT_CLASSIFICATION	session preferences
WITHOUT_CLASSIFICATION	visible (gui) ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	read map with users
WITHOUT_CLASSIFICATION	errors
WITHOUT_CLASSIFICATION	i18n[oracle.sequencedetails=details]
WITHOUT_CLASSIFICATION	labels
WITHOUT_CLASSIFICATION	preferences from the last session
WITHOUT_CLASSIFICATION	load properties and fill missing entries with the global preferences
WITHOUT_CLASSIFICATION	messages
WITHOUT_CLASSIFICATION	set dialog
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	labels
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	visible (gui) ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	display mode
WITHOUT_CLASSIFICATION	table data objects
WITHOUT_CLASSIFICATION	tooltips and questions
WITHOUT_CLASSIFICATION	questions
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.util.ioptionpanel#gettitle()
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	session preferences
WITHOUT_CLASSIFICATION	display mode
WITHOUT_CLASSIFICATION	controlling ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	user checks ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	global references
WITHOUT_CLASSIFICATION	labels
WITHOUT_CLASSIFICATION	preferences from the last session
WITHOUT_CLASSIFICATION	table data objects
WITHOUT_CLASSIFICATION	tooltips and questions
WITHOUT_CLASSIFICATION	questions
WITHOUT_CLASSIFICATION	usermanager of jaybird
WITHOUT_CLASSIFICATION	handle of connected server
WITHOUT_CLASSIFICATION	init user list
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	######################################################################## ########## events ######################################################################## ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	controlling ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	user checks ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	logger for this class private final static ilogger log = loggercontroller.createlogger(preferencespanel.class)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.util.ioptionpanel#applychanges()
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	labels
WITHOUT_CLASSIFICATION	internationalized strings for this class.
WITHOUT_CLASSIFICATION	gui
WITHOUT_CLASSIFICATION	private jlabel lbltitle = new jlabel()
WITHOUT_CLASSIFICATION	----------------------------------------------------
WITHOUT_CLASSIFICATION	logger for this class
WITHOUT_CLASSIFICATION	labels
WITHOUT_CLASSIFICATION	name of the preferences files
WITHOUT_CLASSIFICATION	folder to store the user settings in
WITHOUT_CLASSIFICATION	bean for the global preferences
WITHOUT_CLASSIFICATION	the plugin
WITHOUT_CLASSIFICATION	case session_bean_grant_and_revoke return firebirdmanagergrantpreferencebean.class.getclassloader()
WITHOUT_CLASSIFICATION	we try to cascade
WITHOUT_CLASSIFICATION	i18n[graph.zoom=zoom]
WITHOUT_CLASSIFICATION	printing
WITHOUT_CLASSIFICATION	if we reach here we could not calculate a place to add the new table frame. now it will automatically be added at (00).
WITHOUT_CLASSIFICATION	printbtnprefsize.width -=10
WITHOUT_CLASSIFICATION	no paper edges. we print the graph as it is to a single image.
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	/ printing
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	btncopytoclipprefsize.width -=10
WITHOUT_CLASSIFICATION	public int getpixelwidth() { int pixelbycm = (int) (toolkit.getdefaulttoolkit().getscreenresolution() cm_by_inch + 0.5) return (int)(_format.getwidth() pixelbycm + 0.5) } public int getpixelheight() { int pixelbycm = (int) (toolkit.getdefaulttoolkit().getscreenresolution() cm_by_inch + 0.5) return (int)(_format.getheight() pixelbycm + 0.5) }
WITHOUT_CLASSIFICATION	i18n[graph.dina5=din a 5]
WITHOUT_CLASSIFICATION	i18n[graph.inch=inch]
WITHOUT_CLASSIFICATION	transferable
WITHOUT_CLASSIFICATION	center text vertically.
WITHOUT_CLASSIFICATION	double zoom = _desktopcontroller.getzoomer().getzoom()
WITHOUT_CLASSIFICATION	defines the opening angle of the arrow (not rad or so but something fancy)
WITHOUT_CLASSIFICATION	serialized attributes
WITHOUT_CLASSIFICATION	defines the size of the arrow
WITHOUT_CLASSIFICATION	g.filloval((int)(zoomfp.x + 0.5) - rad (int)(zoomfp.y+0.5) - rad 2 rad 2 rad)
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	i18n[graph.btncreatenewgraph=create new graph]
WITHOUT_CLASSIFICATION	i18n[graph.orderyname=order by name]
WITHOUT_CLASSIFICATION	i18n[graph.save=save]
WITHOUT_CLASSIFICATION	hit is on folding point
WITHOUT_CLASSIFICATION	hit is on folding point
WITHOUT_CLASSIFICATION	_constraintgraph.movelasthitfoldingpointto(point)
WITHOUT_CLASSIFICATION	table was deleted from db
WITHOUT_CLASSIFICATION	the old view is preserved to eventually preserve folding points
WITHOUT_CLASSIFICATION	+ 6
WITHOUT_CLASSIFICATION	getselectedcontroller() == null means create a new graph
WITHOUT_CLASSIFICATION	clear
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	pktable_name pkcolumn_name fkcolumn_name fk_name
WITHOUT_CLASSIFICATION	i18n[postgresplugin.showindexsource=show index source]
WITHOUT_CLASSIFICATION	sequence tabs
WITHOUT_CLASSIFICATION	i18n[postgresplugin.showproceduresource=show procedure source]
WITHOUT_CLASSIFICATION	view tab
WITHOUT_CLASSIFICATION	trigger tabs
WITHOUT_CLASSIFICATION	i18n[triggerdetailstab.title=details]
WITHOUT_CLASSIFICATION	i18n[sequencedetailstab.title=details]
WITHOUT_CLASSIFICATION	i18n[hibernate.hqltosqllong=hql to sql]
WITHOUT_CLASSIFICATION	if this isn't instanceof org.hibernate.type.collectiontype a nosuchmethodexception will be thrown
WITHOUT_CLASSIFICATION	uifactory.getinstance().createtabbedpane()
WITHOUT_CLASSIFICATION	if this is not a hibernate error we write a log entry
WITHOUT_CLASSIFICATION	i18n[bookmarksaccessor.bookmarkspluginneeded=running bookmarks is only available with the bookmarks plugin.\nget the plugin from www.squirrelsql.org. it's free.]
WITHOUT_CLASSIFICATION	i18n[hqlpanelcontroller.hqltosqlsuccess=generated {0} sql(s) in {1} milliseconds.]
WITHOUT_CLASSIFICATION	private static final string perf_key_hql_tab_divider_location = "squirrel.hibernateplugin.hqltabdivloc"
WITHOUT_CLASSIFICATION	i18n[hibernatetabpanel.configuration=configuration]
WITHOUT_CLASSIFICATION	code completion has been done within code completion. now just replace what all candidates have in common.
WITHOUT_CLASSIFICATION	will be called asynchronously to the event dispatch thread
WITHOUT_CLASSIFICATION	-- ejbql tokens --
WITHOUT_CLASSIFICATION	one synchron call for first completion
WITHOUT_CLASSIFICATION	handle table source
WITHOUT_CLASSIFICATION	i18n[hibernateconfigcontroller.noprovidermsg=missing sessionfactoryimplprovider .\nchanges cannot be applied.]
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	we need this buffer because this method may be called asynchronously to the event dispatch thread what could happen is that _currentaliasinfos ist changed.
WITHOUT_CLASSIFICATION	we assume that classes and attributes won't be in the same completion list. classes will be completed fully qualified when the user works with fully qualified class names
WITHOUT_CLASSIFICATION	misc functions - based on oracle dialect
WITHOUT_CLASSIFICATION	standard sql92 functions
WITHOUT_CLASSIFICATION	time functions mapped to ansi extract
WITHOUT_CLASSIFICATION	i18n[hibernateconfigpanel.removeconfig=remove]
WITHOUT_CLASSIFICATION	i18n[hibernateconfigpanel.toobtainsessionfact=to obtain a hibernate sessionfactoryimpl instance squirrel should]
WITHOUT_CLASSIFICATION	example for this code completion should from kv k inner join fetch k.positionen as posses where posses.artnr = 'sdfsdf'
WITHOUT_CLASSIFICATION	i18n[hibernateprefstab.hint=hibernate configurations]
WITHOUT_CLASSIFICATION	i18n[hibernateprefstab.title=hibernate]
WITHOUT_CLASSIFICATION	i18n[mappedobjectpanel.qualifiednames=show qualified names]
WITHOUT_CLASSIFICATION	string catalog string schema string simplename string tabletype string remarks
WITHOUT_CLASSIFICATION	private static final string perf_key_obj_tab_div_loc = "squirrel.hibernateplugin.objtabdivlocasint"
WITHOUT_CLASSIFICATION	i18n[oraclepluginpreferencespanel.sessiontimezonett=set the session timezone to view 'with local timezone' data types]
WITHOUT_CLASSIFICATION	i18n[mappingroot.tostring=mapping]
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	dist
WITHOUT_CLASSIFICATION	i18n[mappingroot.user=jdbc user (hibernate)]
WITHOUT_CLASSIFICATION	i18n[hibernateattribuitedataset.attrname=attribute name]
WITHOUT_CLASSIFICATION	i18n[hibernateattribuitedataset.identifier=identifier]
WITHOUT_CLASSIFICATION	i18n[i18n.openioneditor=open in editor]
WITHOUT_CLASSIFICATION	i18n[i18n.nofilesopened=no file found.\nsee message panel for details.]
WITHOUT_CLASSIFICATION	i18n[i18n.nonativetoasciioutdir=cannot convert files without a native2ascii output dir.]
WITHOUT_CLASSIFICATION	i18n[i18n.workdirisnotadirectory=working directory {0} is not a directory]
WITHOUT_CLASSIFICATION	i18n[i18n.noworkdirspecified=no working directory specified.]
WITHOUT_CLASSIFICATION	i18n[i18n.bundle=bundle]
WITHOUT_CLASSIFICATION	i18n[i18n.missingtarnslation=missing translations]
WITHOUT_CLASSIFICATION	i18n[i18n.sourcedir=source directory]
WITHOUT_CLASSIFICATION	i18n[i18n.translationsgenerationcount=generated {0} templates to {1}]
WITHOUT_CLASSIFICATION	i18n[i18n.parsingfinish=parsing finished]
WITHOUT_CLASSIFICATION	i18n[i18n.info=info]
WITHOUT_CLASSIFICATION	i18n[i18n.developers=developers]
WITHOUT_CLASSIFICATION	i18n[i18n.translators=translators]
WITHOUT_CLASSIFICATION	i18n[mssql.allobjects=all objects]
WITHOUT_CLASSIFICATION	no i18n developers should write english props.
WITHOUT_CLASSIFICATION	print the i18n comment
WITHOUT_CLASSIFICATION	i18n[i18n.parsesuccess=added {0} new and {1} replaced properties to {2}]
WITHOUT_CLASSIFICATION	no i18n developers should write english props.
WITHOUT_CLASSIFICATION	i18n[i18n.sourcedirdoesnotexist=source directory {0} does not exist.]
WITHOUT_CLASSIFICATION	i18n[i18n.nosourcedir=please choose a source directory.]
WITHOUT_CLASSIFICATION	i18n[i18n.sourcedirisnotadirectory=source directory {0} is not a directory.]
WITHOUT_CLASSIFICATION	rob removed replacement via regexp because it needed several regexp escapes in val.
WITHOUT_CLASSIFICATION	i18n[i18n.wrotefixedfile=wrote file {0}]
WITHOUT_CLASSIFICATION	no end bracket params might follow
WITHOUT_CLASSIFICATION	we see that the replacement was already done before so we can count this as replaced
WITHOUT_CLASSIFICATION	these files contain images etc. we try to filter out these props.
WITHOUT_CLASSIFICATION	i18n[informixplugin.showviewsource=show view source]
WITHOUT_CLASSIFICATION	i18n[informixplugin.showproceduresource=show procedure source]
WITHOUT_CLASSIFICATION	postgres pg_proc table doesn't appear to have schema. i couldn't locate another table to join with to get this info either.
WITHOUT_CLASSIFICATION	i18n[mssql.alltables=all tables]
WITHOUT_CLASSIFICATION	expanders - trigger and index expanders are added inside the table expander
WITHOUT_CLASSIFICATION	i18n[oraclepluginpreferencespanel.showerroroffsetlabel=show syntax error offset in sql editor]
WITHOUT_CLASSIFICATION	i18n[sequencedetailstab.hint=display sequence details]
WITHOUT_CLASSIFICATION	isessionlistener interface methods
WITHOUT_CLASSIFICATION	since we depend upon the informix-specific ifmxconnection class we need to keep a reference to the isession we are associated with. however this session could be closed at which time we want to give up our reference so that it can be garbage collected.
WITHOUT_CLASSIFICATION	i18n[sequencedetailstab.hint=display sequence details]
WITHOUT_CLASSIFICATION	i18n[triggerdetailstab.hint=display trigger details]
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	i18n[indexdetailstab.hint=display index details]
WITHOUT_CLASSIFICATION	first time through skip the double spacing
WITHOUT_CLASSIFICATION	folder within plugins folder that belongs to this plugin.
WITHOUT_CLASSIFICATION	i18n[mssql.allrules=all rules]
WITHOUT_CLASSIFICATION	name of directory to store extra lafs in for the user.
WITHOUT_CLASSIFICATION	folder that stores themepacks for this laf.
WITHOUT_CLASSIFICATION	i18n[laf.jarzip=jar/zip files]
WITHOUT_CLASSIFICATION	i18n[laf.skinthempack=theme pack]
WITHOUT_CLASSIFICATION	i18n[laf.skinthemepackdir=theme pack directory]
WITHOUT_CLASSIFICATION	load resources.
WITHOUT_CLASSIFICATION	folder to store user settings.
WITHOUT_CLASSIFICATION	load plugin preferences.
WITHOUT_CLASSIFICATION	folder that stores look and feel jars.
WITHOUT_CLASSIFICATION	folder to contain extra lafs supplied by the user.
WITHOUT_CLASSIFICATION	create empty required files in user settings directory.
WITHOUT_CLASSIFICATION	property file not found for user - first time user ran pgm.
WITHOUT_CLASSIFICATION	property file not found for user - first time user ran pgm.
WITHOUT_CLASSIFICATION	setup preferences to make jgoodies laf look better. uimanager.put(options.use_system_fonts_app_key boolean.true) uimanager.put(options.use_narrow_buttons_key boolean.true)
WITHOUT_CLASSIFICATION	create the look and feel register.
WITHOUT_CLASSIFICATION	listen for gui components being created.
WITHOUT_CLASSIFICATION	update font used for status bars.
WITHOUT_CLASSIFICATION	ensure that this is a plastic theme.
WITHOUT_CLASSIFICATION	editable text
WITHOUT_CLASSIFICATION	menus
WITHOUT_CLASSIFICATION	static text
WITHOUT_CLASSIFICATION	save the current ui defaults.
WITHOUT_CLASSIFICATION	get look and feel class object.
WITHOUT_CLASSIFICATION	i18n[laf.statictext=static text]
WITHOUT_CLASSIFICATION	i18n[laf.statusbars=status bars]
WITHOUT_CLASSIFICATION	i18n[laf.other=other]
WITHOUT_CLASSIFICATION	i18n[laf.statusfonteanbled=enabled]
WITHOUT_CLASSIFICATION	i18n[laf.staticfonteanbled=enabled]
WITHOUT_CLASSIFICATION	i18n[laf.otherfonteanbled=enabled]
WITHOUT_CLASSIFICATION	i18n[laf.tabfonts=fonts]
WITHOUT_CLASSIFICATION	i18n[laf.tabtitle=fonts]
WITHOUT_CLASSIFICATION	impossible.
WITHOUT_CLASSIFICATION	map of jar file urls containing lafs keyed by the laf class name.
WITHOUT_CLASSIFICATION	get the new look and feel object.
WITHOUT_CLASSIFICATION	initialize all the laf controllers.
WITHOUT_CLASSIFICATION	if a different laf to the current one has been requested then change to the requested laf.
WITHOUT_CLASSIFICATION	retrieve urls of all the look and feel jars and store in lafurls.
WITHOUT_CLASSIFICATION	set look and feel.
WITHOUT_CLASSIFICATION	forever
WITHOUT_CLASSIFICATION	directory containing the standard laf jar files.
WITHOUT_CLASSIFICATION	create a classloader for all the laf jars. install all look and feels into the uimanager.
WITHOUT_CLASSIFICATION	forever
WITHOUT_CLASSIFICATION	load info about the standard lafs that come with this plugin.
WITHOUT_CLASSIFICATION	we have read in all properties.
WITHOUT_CLASSIFICATION	private lafpreferences _prefs
WITHOUT_CLASSIFICATION	load info about any extra lafs supplied by the user.
WITHOUT_CLASSIFICATION	private lafpreferences _prefs
WITHOUT_CLASSIFICATION	skybluer
WITHOUT_CLASSIFICATION	_prefs = plugin.getlafpreferences()
WITHOUT_CLASSIFICATION	private iapplication _app
WITHOUT_CLASSIFICATION	_lafregister.updateallframes()
WITHOUT_CLASSIFICATION	_app = app
WITHOUT_CLASSIFICATION	i18n[laf.lookandfeel=look and feel]
WITHOUT_CLASSIFICATION	i18n[laf.jars=l & f jars]
WITHOUT_CLASSIFICATION	_prefs = plugin.getlafpreferences()
WITHOUT_CLASSIFICATION	_app = app
WITHOUT_CLASSIFICATION	force the laf to be set even if tonic is the current one. this allows changes to take affect.
WITHOUT_CLASSIFICATION	i18n[laf.themepack=theme pack]
WITHOUT_CLASSIFICATION	folder that stores themepacks for this laf.
WITHOUT_CLASSIFICATION	i18n[laf.themepacloc=theme pack directory]
WITHOUT_CLASSIFICATION	put all available "look and feel" objects into collections keyed by laf name and by the class name.
WITHOUT_CLASSIFICATION	add the names of all laf objects to control. by doing thru the map these will be sorted.
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	i18n[sybaseaseplugin.title=sybasease]
WITHOUT_CLASSIFICATION	i18n[mmsql.catalogerr=the dbname of the session's url is set to '{0}' but the session's current catalog is set to '{1}'.\n\nsql server doesn't support this in most cases. this is a current issue.]
WITHOUT_CLASSIFICATION	i18n[sybaseaseplugin.hint=preferences for sybasease]
WITHOUT_CLASSIFICATION	fapplication.addapplicationlistener(applicationadapter) fapplication.addpreferencesmenuitem() fapplication.setenabledpreferencesmenu(true)
WITHOUT_CLASSIFICATION	fine don't add any data files. throw new wrappedsqlexception(ex)
WITHOUT_CLASSIFICATION	fine don't show any indexes. throw new wrappedsqlexception(ex)
WITHOUT_CLASSIFICATION	because of the cross-catalog problem let's not invoke this if the current catalog isn't equal to the catalog specified in the url.
WITHOUT_CLASSIFICATION	there's a dbname specified so make sure it matches the current catalog.
WITHOUT_CLASSIFICATION	i18n[mmsql.sqlscripts=sql scripts]
WITHOUT_CLASSIFICATION	table name column name column size column size
WITHOUT_CLASSIFICATION	this is a udf not a stored procedure.
WITHOUT_CLASSIFICATION	since .execute() returned true the first result is a resultset.
WITHOUT_CLASSIFICATION	get the names of all the selected tables in a comma separated list
WITHOUT_CLASSIFICATION	note a procedure may also be a udf!
WITHOUT_CLASSIFICATION	the constructor above sets this from resources but we'll override it with the name of the database file and its size.
WITHOUT_CLASSIFICATION	i18n[mssql.toscript=objects to script]
WITHOUT_CLASSIFICATION	i18n[mssql.foematting=formatting]
WITHOUT_CLASSIFICATION	the constructor above sets this from resources but we'll override it with the name of the index.
WITHOUT_CLASSIFICATION	by default it is not running.
WITHOUT_CLASSIFICATION	create the timer but do not start it.
WITHOUT_CLASSIFICATION	don't bother changing the delay but stop it if it's running.
WITHOUT_CLASSIFICATION	change the delay and start it if it was stopped.
WITHOUT_CLASSIFICATION	i18n[mssql.remove_mnemonic=r]
WITHOUT_CLASSIFICATION	i18n[mssql.objectstobescripted=objects to be scripted]
WITHOUT_CLASSIFICATION	i18n[mssql.alluserdef=all user-defined data types]
WITHOUT_CLASSIFICATION	add the tables.
WITHOUT_CLASSIFICATION	component glue = box.createglue() c.gridx = 1 c.gridy = 10 gridbag.setconstraints(glue c) panel.add(glue)
WITHOUT_CLASSIFICATION	don't increment i if you're removing something otherwise you'd skip the next item.
WITHOUT_CLASSIFICATION	we must iterate through this in descending order to avoid removing say item #2 making item #4 into item #3 inadvertently removing item #5.
WITHOUT_CLASSIFICATION	add the procedures.
WITHOUT_CLASSIFICATION	add the views.
WITHOUT_CLASSIFICATION	i18n[mssql.generatedrop=generate the drop <object> command for each object]
WITHOUT_CLASSIFICATION	i18n[mssql.generatedependend=generate scripts for all dependent objects]
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	add the udts.
WITHOUT_CLASSIFICATION	iprocedureinfo[] procs = metadata.getprocedures(catalognullnull)
WITHOUT_CLASSIFICATION	i18n[mssql.scripttemplate=script template]
WITHOUT_CLASSIFICATION	i18n[mssql.only70compatible=only script 7.0 compatible features]
WITHOUT_CLASSIFICATION	--- security panel ----------------------------------------------
WITHOUT_CLASSIFICATION	i18n[mssql.scriptlogins=script sql server logins (windows and sql server logins)]
WITHOUT_CLASSIFICATION	i18n[mssql.scriptingoptions=table scripting options]
WITHOUT_CLASSIFICATION	-----------------------------------------------------------------
WITHOUT_CLASSIFICATION	--- table scripting panel ----------------------------------------------
WITHOUT_CLASSIFICATION	i18n[mssql.scriptindexses=script indexes]
WITHOUT_CLASSIFICATION	i18n[mssql.scriptfulltext=script full-text indexes]
WITHOUT_CLASSIFICATION	-----------------------------------------------------------------
WITHOUT_CLASSIFICATION	i18n[mssql.fileformat=file format]
WITHOUT_CLASSIFICATION	impossible.
WITHOUT_CLASSIFICATION	folder to store user settings.
WITHOUT_CLASSIFICATION	-----------------------------------------------------------------
WITHOUT_CLASSIFICATION	--- table scripting panel ----------------------------------------------
WITHOUT_CLASSIFICATION	the columns in the referenced table
WITHOUT_CLASSIFICATION	keep scanning until we're either eol or find a different filegroup.
WITHOUT_CLASSIFICATION	this works because all the idatabaseobjectinfo objects come from the same source so their references are equal.
WITHOUT_CLASSIFICATION	not so simple -- we want to keep the filegroups together.
WITHOUT_CLASSIFICATION	if we're still in this function just add it at the end.
WITHOUT_CLASSIFICATION	j is the index of the first file in the next filegroup.
WITHOUT_CLASSIFICATION	chop off "default on column "
WITHOUT_CLASSIFICATION	chop off "check on column "
WITHOUT_CLASSIFICATION	note there are two rows. note mssqlconstraint holds the columns in the table participating in the key. note foreignkeyconstraint holds the columns in the referenced table in the same order.
WITHOUT_CLASSIFICATION	constraintkeys looks like this --> `references pubs.dbo.foo (fooid quuxid)' chop off "references "
WITHOUT_CLASSIFICATION	now tableandcolumns[0] contains the table name and tableandcolumns[1] contains the bracketed list of columns.
WITHOUT_CLASSIFICATION	probably just no results -- return it empty.
WITHOUT_CLASSIFICATION	if it's primary just write it without the filegroup prefix.
WITHOUT_CLASSIFICATION	no indexes i guess.
WITHOUT_CLASSIFICATION	span across two columns
WITHOUT_CLASSIFICATION	`clustered unique primary key located on primary'
WITHOUT_CLASSIFICATION	no triggers i guess.
WITHOUT_CLASSIFICATION	no permissions i guess.
WITHOUT_CLASSIFICATION	owner object grantee grantor protecttype action column ------ ---------------------- ------------------ ------- ----------- ------ ------------------ dbo billing_bak public dbo grant delete .dbo billing_bak public dbo grant insert .dbo billing_bak public dbo grant select (all+new)dbo billing_bak public dbo grant update (all+new)dbo billing_bak usbilling dbo deny insert .
WITHOUT_CLASSIFICATION	i18n[mysql.createtablebtn=create table]
WITHOUT_CLASSIFICATION	since .execute() returned true the first result is a resultset.
WITHOUT_CLASSIFICATION	name owner type created_datetime --------------------------------------------------------- billing dbo user table 2004-03-08 104105.030
WITHOUT_CLASSIFICATION	column_name type computed length prec scale nullable trimtrailingblanks fixedlennullinsource collation ------------------------------------------------------------------------------------------------------------------------------------------------------- location char no 2 yes no yes latin1_general_ci_as totalbilledamnt money no 8 19 4 yes (n/a) (n/a) null
WITHOUT_CLASSIFICATION	length
WITHOUT_CLASSIFICATION	collation
WITHOUT_CLASSIFICATION	there can be only one default in truth but the model allows more than one.
WITHOUT_CLASSIFICATION	there can be only one pk in truth but the model allows more than one.
WITHOUT_CLASSIFICATION	i18n[mysqlplugin.showviewsource=show view source]
WITHOUT_CLASSIFICATION	i18n[mysqlplugin.title=mysql]
WITHOUT_CLASSIFICATION	tabs to add to the database node.
WITHOUT_CLASSIFICATION	add users to the role.
WITHOUT_CLASSIFICATION	stored procedures and functions have that dangling version thing.
WITHOUT_CLASSIFICATION	one column for the object name another column for the object's owner.
WITHOUT_CLASSIFICATION	public boolean iscelleditable(int rowindex int columnindex) { return (columnindex == 0) }
WITHOUT_CLASSIFICATION	coll.add(new createtableaction(app _resources this))
WITHOUT_CLASSIFICATION	show users in the object tee.
WITHOUT_CLASSIFICATION	tabs to add to the catalog nodes.
WITHOUT_CLASSIFICATION	tabs to add to the table nodes.
WITHOUT_CLASSIFICATION	tabs to add to the user nodes.
WITHOUT_CLASSIFICATION	options in popup menu.
WITHOUT_CLASSIFICATION	tab to add to view nodes.
WITHOUT_CLASSIFICATION	show triggers for tables
WITHOUT_CLASSIFICATION	_resources.addtomenu(coll.get(createtableaction.class) mysqlmenu)
WITHOUT_CLASSIFICATION	_resources.addtomenu(coll.get(dropdatabaseaction.class) mysqlmenu)
WITHOUT_CLASSIFICATION	tabs for triggers
WITHOUT_CLASSIFICATION	i18n[mysql.copyok=ok]
WITHOUT_CLASSIFICATION	i18n[mysql.suredropping=are you sure?]
WITHOUT_CLASSIFICATION	execute the sql command in the sql tab and then display the sql tab.
WITHOUT_CLASSIFICATION	private object[] fields
WITHOUT_CLASSIFICATION	private jcheckbox[] chfields
WITHOUT_CLASSIFICATION	defaultlistmodel listmodel = (defaultlistmodel) listfields.getmodel()
WITHOUT_CLASSIFICATION	chfields = new jcheckbox[colnames.length]
WITHOUT_CLASSIFICATION	private final static ilogger s_log = loggercontroller.createlogger(copytablecommand.class)
WITHOUT_CLASSIFICATION	set the boolean value when the user selects b/w structure and data
WITHOUT_CLASSIFICATION	set the list disabled if allfields of table are to be copied
WITHOUT_CLASSIFICATION	i18n[mysql.createtablecomm=create table]
WITHOUT_CLASSIFICATION	i18n[mysql.createadd=add]
WITHOUT_CLASSIFICATION	i18n[mysql.lengtset=length/set]
WITHOUT_CLASSIFICATION	private dbutils dbutils
WITHOUT_CLASSIFICATION	i18n[mysql.msgtablecreated=table {0} created]
WITHOUT_CLASSIFICATION	i18n[mysql.btcancel=cancel]
WITHOUT_CLASSIFICATION	set the attributes for the fields in the class fielddetails
WITHOUT_CLASSIFICATION	display the field attributes when selected in the list
WITHOUT_CLASSIFICATION	reset the checkbox selected index false when fieldname gains focus
WITHOUT_CLASSIFICATION	remove the fields added to the list
WITHOUT_CLASSIFICATION	logger for this class. private final static ilogger s_log = loggercontroller.createlogger(altertablecommand.class)
WITHOUT_CLASSIFICATION	initcomponents()
WITHOUT_CLASSIFICATION	span across two columns
WITHOUT_CLASSIFICATION	action performed for the cancel button private void buttoncancelactionperformed(java.awt.event.actionevent evt) { _dlog.setvisible(false) _dlog.dispose() }
WITHOUT_CLASSIFICATION	span across two columns
WITHOUT_CLASSIFICATION	private void closedialog(java.awt.event.windowevent evt) { _dlog.setvisible(false) _dlog.dispose() }
WITHOUT_CLASSIFICATION	i18n[sessionscript.save=save]
WITHOUT_CLASSIFICATION	execute the sql command in the sql tab and then display the sql tab.
WITHOUT_CLASSIFICATION	get the names of all the selected tables in a comma separated list
WITHOUT_CLASSIFICATION	remove trailing ""
WITHOUT_CLASSIFICATION	private static ilogger s_log = loggercontroller.createlogger(sessionexpander.class)
WITHOUT_CLASSIFICATION	users.
WITHOUT_CLASSIFICATION	private final static ilogger s_log = loggercontroller.createlogger(altertabledialog.class)
WITHOUT_CLASSIFICATION	i18n[mysql.alterdlgalter=alter]
WITHOUT_CLASSIFICATION	i18n[mysql.alterdlgclose=close]
WITHOUT_CLASSIFICATION	private final static ilogger s_log = loggercontroller.createlogger(altercolumnspanelbuilder.class)
WITHOUT_CLASSIFICATION	selectedindex = cbfieldname.getselectedindex() defaultcomboboxmodel combomodel = (defaultcomboboxmodel) cbfieldname.getmodel() fielddetails fd = (fielddetails) combomodel.getelementat(selectedindex) cbfieldname.setselecteditem(fd.getfieldname()) cbfieldtype.setselecteditem(fd.getfieldtype()) tffielddefault.settext(fd.getdefault()) chautoincrement.setselected(fd.isautoincrement()) chnotnull.setselected(fd.isnotnull())
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	i18n[mysql.displaystatus=(mysql) display database status]
WITHOUT_CLASSIFICATION	i18n[mysql.status=mysql status]
WITHOUT_CLASSIFICATION	private final static ilogger s_log = loggercontroller.createlogger(databasestatustab.class)
WITHOUT_CLASSIFICATION	i18n[mysql.displayopentables=(mysql) display open tables]
WITHOUT_CLASSIFICATION	private final static ilogger s_log = loggercontroller.createlogger(processestab.class)
WITHOUT_CLASSIFICATION	private final static ilogger s_log = loggercontroller.createlogger(opentablestab.class)
WITHOUT_CLASSIFICATION	i18n[mysql.variables=mysql variables]
WITHOUT_CLASSIFICATION	private final static ilogger s_log = loggercontroller.createlogger(showmasterlogstab.class)
WITHOUT_CLASSIFICATION	i18n[mysqltriggerdetailstab.hint=display trigger details]
WITHOUT_CLASSIFICATION	mysql allows statement separators in procedure blocks. the process of tokenizing above renders these procedure blocks as separate statements which are not valid to be executed separately. here we re-assemble any create procedure/function/trigger statements that we find using the beginning procedure block pattern and the procedure separator.
WITHOUT_CLASSIFICATION	stray sep - or we failed to find pattern
WITHOUT_CLASSIFICATION	to get the tableinfo for the selected object in the tree
WITHOUT_CLASSIFICATION	get all the data types available
WITHOUT_CLASSIFICATION	we got to the end of the script without finding a proc separator. just add it as if we had.
WITHOUT_CLASSIFICATION	delimiter sets the separator that tells us when a procedure. this is mysql-specific
WITHOUT_CLASSIFICATION	i18n[oraclealiasprefspanel.all=allow all schemas]
WITHOUT_CLASSIFICATION	i18n[oracleplugin.title=oracle]
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	expanders.
WITHOUT_CLASSIFICATION	this fixes the issue where the tree is getting constructed prior to the oracle plugin expanders being registered.(users sessions instances nodes have no children until the tree is refreshed). even though this is a hack it doesn't seem to negatively impact performance even when loading all schemas.
WITHOUT_CLASSIFICATION	register custom datatypecomponent factory for oracles xmltype
WITHOUT_CLASSIFICATION	not all oracle's just 10g and above.
WITHOUT_CLASSIFICATION	i18n[oracle.displayoptions=display database options]
WITHOUT_CLASSIFICATION	i18n[oracle.secons3=(seconds)]
WITHOUT_CLASSIFICATION	create checkbox for enabling auto refresh i18n[oracle.enableautorefresh=enable auto refresh]
WITHOUT_CLASSIFICATION	i18n[oracle.options=options]
WITHOUT_CLASSIFICATION	i18n
WITHOUT_CLASSIFICATION	i18n[oracle.refreshsecons=(seconds)]
WITHOUT_CLASSIFICATION	i18n
WITHOUT_CLASSIFICATION	i18n[oracle.infotitle=oracle session info for {0}]
WITHOUT_CLASSIFICATION	i18n[oracle.sgatitle=oracle sga trace for {0}]
WITHOUT_CLASSIFICATION	needs to be done in both cases because if the window goes back to the default layer it goes back behind all other windows too.
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	nil out the timer so that it can be gc'd
WITHOUT_CLASSIFICATION	create spinner for update period
WITHOUT_CLASSIFICATION	create spinner for update period
WITHOUT_CLASSIFICATION	only resize once.
WITHOUT_CLASSIFICATION	jmh remove the current sql text. create a tabbed pane for session details (including sql text)
WITHOUT_CLASSIFICATION	i18n[oracle.displaysessiondetails=display session details]
WITHOUT_CLASSIFICATION	if we don't invokelater here no short-cut-key is sent to the internal frame seen under java version "1.4.1_01" and linux
WITHOUT_CLASSIFICATION	at the moment no default value
WITHOUT_CLASSIFICATION	stray sep - or we failed to find pattern
WITHOUT_CLASSIFICATION	oracle allows statement separators in pl/sql blocks. the process of tokenizing above renders these procedure blocks as separate statements which is invalid for oracle. since "/" is the way in sql-plus to denote the end of a procedure or function we re-assemble any create procedure/function/trigger statements that we find. this should be done before expanding file includes. otherwise any create sql found in files will already be joined causing this to find create sql without matching "/". the process of expanding 'file includes' already joins the sql fragments that it finds.
WITHOUT_CLASSIFICATION	jmh for additional performance we could utilise the fixed_table_sequence column from the session to investigate which rows need to be updated on a refresh see v$session doco for more info.
WITHOUT_CLASSIFICATION	this seems to work for both oracle 9i and 10g
WITHOUT_CLASSIFICATION	since it is likely to have "/" on it's own line and it is key to letting us know that proceeding statements form a multi-statement procedure or function it deserves it's own place in the _queries arraylist. if it is followed by other procedure or function creation blocks we may fail to detect that so this just goes through the list and breaks apart statements on newline so that this cannot happen.
WITHOUT_CLASSIFICATION	below is equivalent to the following stringvalueresult = xmltype.getstringval()
WITHOUT_CLASSIFICATION	for oracle 10g we could say something like "where xmlserialize(content " + _coldef.getlabel() +") like '<value>'" this doesn't appear to work on oracle 9i at the moment so we will avoid using this column in any where clause if the value is non-null which is what the superclass implementation does. todo find a way to do this for both versions or split this behavior so that it works on 10g and is disabled on 9i.
WITHOUT_CLASSIFICATION	below is equivalent to the following stringvalueresult = xmltype.getstringval()
WITHOUT_CLASSIFICATION	below is equivalent to the following xmltype = xmltype.createxml(o)
WITHOUT_CLASSIFICATION	throws an exception claiming that 2007 isn't a valid type - go figure. pstmt.setnull(position _coldef.getsqltype())
WITHOUT_CLASSIFICATION	now bind the string..
WITHOUT_CLASSIFICATION	both of these throw an exception claiming that it got a clob and expected a number (inconsistent data types) pstmt.setclob(position null) pstmt.setnull(position java.sql.types.clob)
WITHOUT_CLASSIFICATION	at the moment no default value
WITHOUT_CLASSIFICATION	at the moment no default value
WITHOUT_CLASSIFICATION	view tab
WITHOUT_CLASSIFICATION	index tab
WITHOUT_CLASSIFICATION	trigger tabs
WITHOUT_CLASSIFICATION	sequence tabs
WITHOUT_CLASSIFICATION	analyze checkbox
WITHOUT_CLASSIFICATION	plugin supports only the main session window
WITHOUT_CLASSIFICATION	extractors
WITHOUT_CLASSIFICATION	object tree expanders schema expanders - sequence
WITHOUT_CLASSIFICATION	super.sqlexecutionwarning(warn)
WITHOUT_CLASSIFICATION	table expanders - trigger and index expander
WITHOUT_CLASSIFICATION	detail tabs procedure tab
WITHOUT_CLASSIFICATION	analyze checkbox
WITHOUT_CLASSIFICATION	lock tab
WITHOUT_CLASSIFICATION	popup menus
WITHOUT_CLASSIFICATION	s_log.info("not all selected objects where tables.")
WITHOUT_CLASSIFICATION	catalog
WITHOUT_CLASSIFICATION	catalog
WITHOUT_CLASSIFICATION	this causes locks own by other pids to be excluded from the result. + " pgl.pid = pg_stat_get_backend_pid(svrid) and "
WITHOUT_CLASSIFICATION	schema
WITHOUT_CLASSIFICATION	table list
WITHOUT_CLASSIFICATION	we don't know if this type can be used in where clauses so always exclude it.
WITHOUT_CLASSIFICATION	options full checkbox
WITHOUT_CLASSIFICATION	options full checkbox
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	handle null which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	do the conversion into the object in a safe manner special case the input is exactly the output
WITHOUT_CLASSIFICATION	fail("not yet implemented")
WITHOUT_CLASSIFICATION	stored procedures can have comments embedded in them so don't line-wrap them.
WITHOUT_CLASSIFICATION	table type dbo
WITHOUT_CLASSIFICATION	index
WITHOUT_CLASSIFICATION	view type dbo (doesn't exist yet)
WITHOUT_CLASSIFICATION	view
WITHOUT_CLASSIFICATION	sequence type dbo
WITHOUT_CLASSIFICATION	sequence
WITHOUT_CLASSIFICATION	it is important to process the name change first - so that we can use the new name instead of the old in subsequent alterations
WITHOUT_CLASSIFICATION	implemented in all originally supported dialects
WITHOUT_CLASSIFICATION	skip comments
WITHOUT_CLASSIFICATION	create new columns in table
WITHOUT_CLASSIFICATION	update <destinationtable> s set destcolumn = ( select f.desc_t1 from <fromtable> f where f.myid = s.myid)
WITHOUT_CLASSIFICATION	arraylist<string> result = new arraylist<string>()
WITHOUT_CLASSIFICATION	deletes the " "
WITHOUT_CLASSIFICATION	deletes the " "
WITHOUT_CLASSIFICATION	selects the values from the merge table
WITHOUT_CLASSIFICATION	selects the values for the where part
WITHOUT_CLASSIFICATION	maybe with inner join better performance
WITHOUT_CLASSIFICATION	selects the values from the existing table
WITHOUT_CLASSIFICATION	merge columns in a new column
WITHOUT_CLASSIFICATION	merge columns in an existing column
WITHOUT_CLASSIFICATION	add column if neeeded
WITHOUT_CLASSIFICATION	getcolumnaddsql
WITHOUT_CLASSIFICATION	don't show indexes dialog if only one index exists to be modified
WITHOUT_CLASSIFICATION	execute the sql synchronously
WITHOUT_CLASSIFICATION	execute the sql synchronously
WITHOUT_CLASSIFICATION	only oracle supports materialized views directly.
WITHOUT_CLASSIFICATION	implemented in all originally supported dialects
WITHOUT_CLASSIFICATION	implemented in all originally supported dialects
WITHOUT_CLASSIFICATION	implemented in all originally supported dialects
WITHOUT_CLASSIFICATION	implemented in all originally supported dialects
WITHOUT_CLASSIFICATION	getcolumnaddsql
WITHOUT_CLASSIFICATION	show the user a dialog with a list of columns and ask them to select one or more columns to drop
WITHOUT_CLASSIFICATION	don't show foreignkeys dialog if only one index exists to be modified
WITHOUT_CLASSIFICATION	if the table has only one column it cannot be dropped
WITHOUT_CLASSIFICATION	set a default primary key name based on the name of the table
WITHOUT_CLASSIFICATION	adds a foreign key constraint to the source table.
WITHOUT_CLASSIFICATION	only gives the sql without the cascade/restrict constraint
WITHOUT_CLASSIFICATION	here we use index inside of column names so that we don't have to alias the columns in the dialect. different dialects call these sequence information columns by different names. just make sure to preserve the order in the dialect. last_value max_value min_value cache_value increment_by is_cycled
WITHOUT_CLASSIFICATION	show the user a dialog with a list of columns and ask them to select
WITHOUT_CLASSIFICATION	show the user a dialog with a list of columns and ask them to select
WITHOUT_CLASSIFICATION	if there is only one column in the table
WITHOUT_CLASSIFICATION	copys the distinct values from the source column into the lookup table.
WITHOUT_CLASSIFICATION	creates the lookup table with it's columns (depenting on the mode).
WITHOUT_CLASSIFICATION	getaddforeignkeyconstraintsql
WITHOUT_CLASSIFICATION	getinsertintosql
WITHOUT_CLASSIFICATION	getcolumnnamealtersql
WITHOUT_CLASSIFICATION	getupdatesql
WITHOUT_CLASSIFICATION	getcolumnnullablealtersql
WITHOUT_CLASSIFICATION	getcolumndropsql
WITHOUT_CLASSIFICATION	add column name to the list
WITHOUT_CLASSIFICATION	no point to ordering less than 2 tables
WITHOUT_CLASSIFICATION	create the analysis dialog using the edt and wait for it to finish.
WITHOUT_CLASSIFICATION	columns
WITHOUT_CLASSIFICATION	catalog
WITHOUT_CLASSIFICATION	schema
WITHOUT_CLASSIFICATION	column
WITHOUT_CLASSIFICATION	a map for quick lookup later - we want to pass tablecolumninfos to the dialect not merely column names.
WITHOUT_CLASSIFICATION	new name of the table
WITHOUT_CLASSIFICATION	there are more dependancies then just fks (like views etc.) therefore cascadeconstraints is used as a parameter for the tabledropsql.
WITHOUT_CLASSIFICATION	local constraint
WITHOUT_CLASSIFICATION	now get the drop order (same as delete) and update the dialog status while doing so.
WITHOUT_CLASSIFICATION	view list
WITHOUT_CLASSIFICATION	foreign key
WITHOUT_CLASSIFICATION	table
WITHOUT_CLASSIFICATION	table
WITHOUT_CLASSIFICATION	if the check gets till here we have all the need information
WITHOUT_CLASSIFICATION	if the check gets till here we have all the need information
WITHOUT_CLASSIFICATION	mode
WITHOUT_CLASSIFICATION	drop conflicts
WITHOUT_CLASSIFICATION	"fki_" is default startname
WITHOUT_CLASSIFICATION	add to the button group
WITHOUT_CLASSIFICATION	adding all colums together
WITHOUT_CLASSIFICATION	add to the button group
WITHOUT_CLASSIFICATION	pre-selection
WITHOUT_CLASSIFICATION	pre-selection
WITHOUT_CLASSIFICATION	add to jpanel pane
WITHOUT_CLASSIFICATION	add to the panel - update
WITHOUT_CLASSIFICATION	add to the panel - update
WITHOUT_CLASSIFICATION	_columntab = new mergecolumndialog.columnstab()
WITHOUT_CLASSIFICATION	private columnstab _columntab
WITHOUT_CLASSIFICATION	increment
WITHOUT_CLASSIFICATION	name
WITHOUT_CLASSIFICATION	maximum
WITHOUT_CLASSIFICATION	last value
WITHOUT_CLASSIFICATION	start
WITHOUT_CLASSIFICATION	minimum
WITHOUT_CLASSIFICATION	impossible.
WITHOUT_CLASSIFICATION	table name
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	folder to store user settings.
WITHOUT_CLASSIFICATION	column 0 row 0
WITHOUT_CLASSIFICATION	catalog
WITHOUT_CLASSIFICATION	catalog
WITHOUT_CLASSIFICATION	schema
WITHOUT_CLASSIFICATION	schema
WITHOUT_CLASSIFICATION	schema
WITHOUT_CLASSIFICATION	view list
WITHOUT_CLASSIFICATION	table
WITHOUT_CLASSIFICATION	column
WITHOUT_CLASSIFICATION	if the check gets till here we have all the need information
WITHOUT_CLASSIFICATION	if the check gets till here we have all the need information
WITHOUT_CLASSIFICATION	if the check gets till here we have all the need information
WITHOUT_CLASSIFICATION	local constraint
WITHOUT_CLASSIFICATION	adding all colums together
WITHOUT_CLASSIFICATION	labels should stay put while user-input fields are allowed to grow as the user desires.
WITHOUT_CLASSIFICATION	catalog
WITHOUT_CLASSIFICATION	table list
WITHOUT_CLASSIFICATION	just plain data
WITHOUT_CLASSIFICATION	cascade constraints checkbox
WITHOUT_CLASSIFICATION	cascade constraints checkbox
WITHOUT_CLASSIFICATION	adding all colums together
WITHOUT_CLASSIFICATION	some data
WITHOUT_CLASSIFICATION	some data
WITHOUT_CLASSIFICATION	all rules passed so activate the button
WITHOUT_CLASSIFICATION	adding all colums together
WITHOUT_CLASSIFICATION	if the check gets till here we have all the needed information
WITHOUT_CLASSIFICATION	all tables except the merge into table
WITHOUT_CLASSIFICATION	all local and columns for the other tables..
WITHOUT_CLASSIFICATION	column list
WITHOUT_CLASSIFICATION	errors
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.nodeleteselection=please select the bookmark to delete]
WITHOUT_CLASSIFICATION	i18n[sessionscript.startupscripts=startup scripts]
WITHOUT_CLASSIFICATION	first time user has run pgm.
WITHOUT_CLASSIFICATION	folder to store user settings.
WITHOUT_CLASSIFICATION	folder within plugins folder that belongs to this plugin.
WITHOUT_CLASSIFICATION	logger for this class
WITHOUT_CLASSIFICATION	variables ======================================================================== non visible logger for this class
WITHOUT_CLASSIFICATION	sheet types
WITHOUT_CLASSIFICATION	add context menu items to the object tree's session node. as popup menu
WITHOUT_CLASSIFICATION	plugin supports session main window only
WITHOUT_CLASSIFICATION	plugin supports session main window only
WITHOUT_CLASSIFICATION	variables ======================================================================== non visible ------------------------------------------------------------------------ logger for this class
WITHOUT_CLASSIFICATION	line separator for easy using -)
WITHOUT_CLASSIFICATION	labels
WITHOUT_CLASSIFICATION	######################################################################## ########## events ######################################################################## ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	visible (gui) ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	questions
WITHOUT_CLASSIFICATION	controlling ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	this should never happen as we check above for the duplicate.
WITHOUT_CLASSIFICATION	iapplication application = getapplication() application.addtomenu(imenuids.plugins_menu getsmarttoolsmenu(getapplication() null false))
WITHOUT_CLASSIFICATION	private final int table_col_datatype = 3 not used
WITHOUT_CLASSIFICATION	tblresult.setautocreaterowsorter(true)
WITHOUT_CLASSIFICATION	global misc
WITHOUT_CLASSIFICATION	global errors
WITHOUT_CLASSIFICATION	misc
WITHOUT_CLASSIFICATION	entries
WITHOUT_CLASSIFICATION	tooltips
WITHOUT_CLASSIFICATION	info
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------ thread searching ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	threadsearching
WITHOUT_CLASSIFICATION	init progressbar
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.noeditselection=please select the bookmark to edit]
WITHOUT_CLASSIFICATION	i18n.lbl_title_used_tables)
WITHOUT_CLASSIFICATION	variables ======================================================================== non visible ------------------------------------------------------------------------ logger for this class
WITHOUT_CLASSIFICATION	variables ======================================================================== non visible ------------------------------------------------------------------------ logger for this class
WITHOUT_CLASSIFICATION	labels
WITHOUT_CLASSIFICATION	labels
WITHOUT_CLASSIFICATION	labels
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	######################################################################## ########## events ######################################################################## ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	visible (gui) ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	visible (gui) ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	tooltips and questions
WITHOUT_CLASSIFICATION	tooltips and questions
WITHOUT_CLASSIFICATION	questions
WITHOUT_CLASSIFICATION	questions
WITHOUT_CLASSIFICATION	questions
WITHOUT_CLASSIFICATION	controlling ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	user checks ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	global misc
WITHOUT_CLASSIFICATION	global misc
WITHOUT_CLASSIFICATION	tooltips
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------ table classes ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	infos
WITHOUT_CLASSIFICATION	infos
WITHOUT_CLASSIFICATION	infos
WITHOUT_CLASSIFICATION	create a new bookmark manager
WITHOUT_CLASSIFICATION	rebuild the bookmark menu.
WITHOUT_CLASSIFICATION	this gets called before initialize()
WITHOUT_CLASSIFICATION	i18n[sqlparam.inputparametervalues=please input the parameter values]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.prefok=ok]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.squirrelmarksinpopup=show squirrel bookmarks in ctrl+j popup]
WITHOUT_CLASSIFICATION	i18n[sqlparam.valuefor=value for {0}]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.script=script]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.noadd=no text to be added.]
WITHOUT_CLASSIFICATION	columns
WITHOUT_CLASSIFICATION	rows
WITHOUT_CLASSIFICATION	load plugin preferences.
WITHOUT_CLASSIFICATION	load plugin preferences.
WITHOUT_CLASSIFICATION	######################################################################## ########## events ######################################################################## ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	visible (gui) ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	controlling ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	user checks ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	this gets called before initialize()
WITHOUT_CLASSIFICATION	load resources such as menu items etc
WITHOUT_CLASSIFICATION	load resources such as menu items etc
WITHOUT_CLASSIFICATION	log.info("sql executed " + sql)
WITHOUT_CLASSIFICATION	private static final string prefs_file_name = "sqlparamprefs.xml"
WITHOUT_CLASSIFICATION	nothing to do if object tree is opened.
WITHOUT_CLASSIFICATION	log.info("sql starting to execute " + sql)
WITHOUT_CLASSIFICATION	flag indicates changing in textarea
WITHOUT_CLASSIFICATION	keylistener to indicate changing of text
WITHOUT_CLASSIFICATION	impossible.
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	folder to store user settings.
WITHOUT_CLASSIFICATION	column 0 row 0
WITHOUT_CLASSIFICATION	here we do the replacement
WITHOUT_CLASSIFICATION	old version before multible sesssion windows return session.getsqlpanelapi(plugin)
WITHOUT_CLASSIFICATION	old version return session.getobjecttreeapi(sqlscriptplugin)
WITHOUT_CLASSIFICATION	move over leading whitespaces
WITHOUT_CLASSIFICATION	some databases cannot order by long/lob columns.
WITHOUT_CLASSIFICATION	iobjecttreeapi api = _session.getobjecttreeapi(_plugin)
WITHOUT_CLASSIFICATION	just a helper to make the fromresultset ? below look nicer.
WITHOUT_CLASSIFICATION	postgresql uses literal values true/false instead of 1/0.
WITHOUT_CLASSIFICATION	version this is optional. if you don't want to give out this info please enter "n/a"
WITHOUT_CLASSIFICATION	postgresql uses literal values true/false instead of 1/0.
WITHOUT_CLASSIFICATION	types.char types.varchar types.longvarchar types.binary types.varbinary types.longvarbinary types.null types.java_object types.distinct types.array types.blob types.clob types.ref types.datalink
WITHOUT_CLASSIFICATION	delete last ''
WITHOUT_CLASSIFICATION	close it.
WITHOUT_CLASSIFICATION	as in java.sql.types
WITHOUT_CLASSIFICATION	this method makes the web service call if you want to you can create a web service proxy from the wsdl file 9 times out of 10 that's what you really want to do.
WITHOUT_CLASSIFICATION	set the target server and name space
WITHOUT_CLASSIFICATION	set the target server and name space
WITHOUT_CLASSIFICATION	add the parameter names and types use the session id you got from the opensession call here
WITHOUT_CLASSIFICATION	use the session key you got from the opensession call here
WITHOUT_CLASSIFICATION	the sql statement to be validated against the standard
WITHOUT_CLASSIFICATION	the format of the result. this must be "text" or "html". hopefully some type of xml format will be available as well
WITHOUT_CLASSIFICATION	qname l_qn = new qname( "httpsqlvalidator.mimer.com/v1" "validatorresult" )
WITHOUT_CLASSIFICATION	set the return type
WITHOUT_CLASSIFICATION	set the return type
WITHOUT_CLASSIFICATION	supply the user name. if you use anonymous you will be logged in and the pw will be ignored
WITHOUT_CLASSIFICATION	the pw. if user name is anonymous this can be anything. but it has to be supplied anyway.
WITHOUT_CLASSIFICATION	and the version of the calling program. this is optional. if you don't want to give out this info please enter "n/a"
WITHOUT_CLASSIFICATION	the target dbms could be mimer sql engine oracle this is optional. if you don't want to give out this info please enter "n/a"
WITHOUT_CLASSIFICATION	fail("not yet implemented")
WITHOUT_CLASSIFICATION	qname l_qn = new qname( "httpsqlvalidator.mimer.com/v1" "sessiondata" )
WITHOUT_CLASSIFICATION	create self and
WITHOUT_CLASSIFICATION	make a few calls
WITHOUT_CLASSIFICATION	the pw. if user name is anonymous this can be anything. but it has to be supplied anyway.
WITHOUT_CLASSIFICATION	impossible.
WITHOUT_CLASSIFICATION	folder to store user settings.
WITHOUT_CLASSIFICATION	load plugin preferences.
WITHOUT_CLASSIFICATION	set the target server and name space
WITHOUT_CLASSIFICATION	set the target server and name space
WITHOUT_CLASSIFICATION	use the session key you got from the opensession call here
WITHOUT_CLASSIFICATION	the sql statement to be validated against the standard
WITHOUT_CLASSIFICATION	the format of the result. this must be "text" or "html". hopefully some type of xml format will be available as well
WITHOUT_CLASSIFICATION	set the return type
WITHOUT_CLASSIFICATION	the connection technology used could be odbc jdbc ado this is optional. if you don't want to give out this info please enter "n/a"
WITHOUT_CLASSIFICATION	the version of the target dbms this is optional. if you don't want to give out this info please enter "n/a"
WITHOUT_CLASSIFICATION	for testing on the local machine url l_url = new url("httplocalhost8081/services")
WITHOUT_CLASSIFICATION	parameters for call.
WITHOUT_CLASSIFICATION	version this is optional. if you don't want to give out this info please enter "n/a"
WITHOUT_CLASSIFICATION	for testing on the live server url l_url = new url("httpsqlvalidator.mimer.com/beta2/services")
WITHOUT_CLASSIFICATION	set this to 1 if your application is interactive where the user enters queries and then runs them set it to 2 if it is non interactive such as for instance a jdbc bridge driver that intercepts sql
WITHOUT_CLASSIFICATION	execute validator and return results.
WITHOUT_CLASSIFICATION	set the url for subsequent calls this is to allow for load balancing to a server on the other side of the world
WITHOUT_CLASSIFICATION	close existing session.
WITHOUT_CLASSIFICATION	current version of the validator webservice cannot handle anything greater than 30.
WITHOUT_CLASSIFICATION	connect.
WITHOUT_CLASSIFICATION	add menu.
WITHOUT_CLASSIFICATION	supply the user name. if you use anonymous you will be logged in and the pw will be ignored
WITHOUT_CLASSIFICATION	impossible.
WITHOUT_CLASSIFICATION	impossible.
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	add context menu items to the object tree's view and procedure nodes.
WITHOUT_CLASSIFICATION	set the return type
WITHOUT_CLASSIFICATION	the name of the calling client program. this is optional. if you don't want to give out this info please enter "n/a"
WITHOUT_CLASSIFICATION	and the version of the calling program. this is optional. if you don't want to give out this info please enter "n/a"
WITHOUT_CLASSIFICATION	the target dbms could be mimer sql engine oracle this is optional. if you don't want to give out this info please enter "n/a"
WITHOUT_CLASSIFICATION	the version of the target dbms this is optional. if you don't want to give out this info please enter "n/a"
WITHOUT_CLASSIFICATION	the connection technology used could be odbc jdbc ado this is optional. if you don't want to give out this info please enter "n/a"
WITHOUT_CLASSIFICATION	set this to 1 if your application is interactive where the user enters queries and then runs them set it to 2 if it is non interactive such as for instance a jdbc bridge driver that intercepts sql
WITHOUT_CLASSIFICATION	add a new formatter for sybase-errors/warnings
WITHOUT_CLASSIFICATION	open the session.
WITHOUT_CLASSIFICATION	open connection to the webservice.
WITHOUT_CLASSIFICATION	1 = interactive 0 = batch
WITHOUT_CLASSIFICATION	/ sybasease specific code to read procedure definitions.
WITHOUT_CLASSIFICATION	plugin supports session main window only
WITHOUT_CLASSIFICATION	otapi.adddetailtab(databaseobjecttype.index new indexdetailstab())
WITHOUT_CLASSIFICATION	plugin supports session main window only
WITHOUT_CLASSIFICATION	/ sybase ase specific code to read view definitions.
WITHOUT_CLASSIFICATION	private boolean _blockcaretenabled = false
WITHOUT_CLASSIFICATION	trigger source "select text " + "from dbo.sysobjects " + "inner join syscomments on syscomments.id = sysobjects.id " + "where loginame = ? " + "and name = ? " + "and type = 'tr' "
WITHOUT_CLASSIFICATION	only reformat sqlwarning
WITHOUT_CLASSIFICATION	private boolean _showendoflinemarkers = false
WITHOUT_CLASSIFICATION	private boolean _blinkcaret = true
WITHOUT_CLASSIFICATION	private boolean _brackethighlighting = true
WITHOUT_CLASSIFICATION	impossible.
WITHOUT_CLASSIFICATION	string current_line_highlighting = "currentlinehighlighting" string current_line_highlight_color = "currentlinehighlightcolor"
WITHOUT_CLASSIFICATION	final textareadefaults dfts = textareadefaults.getdefaults() _columnstyle = dfts.styles[token.column] _commentstyle = dfts.styles[token.comment1] _keyword1style = dfts.styles[token.keyword] _keyword2style = dfts.styles[token.data_type] _keyword3style = dfts.styles[token.function] _labelstyle = dfts.styles[token.label] _literalstyle = dfts.styles[token.literal1] _operatorstyle = dfts.styles[token.operator] _otherstyle = dfts.styles[token.null] _tablestyle = dfts.styles[token.table]
WITHOUT_CLASSIFICATION	string eol_markers = "eolmarkers" string eol_marker_color = "eolmarkercolor"
WITHOUT_CLASSIFICATION	string line_number_color = "linenumbercolor" string selection_color = "selectioncolor" string show_line_nbrs = "showlinenumbers"
WITHOUT_CLASSIFICATION	note sessioninternalframe and sqlinternalframe should never provide a toolspopupaccessor. their tools popup ist configured in the syntaxplugin class with standard actions from actioncollection.
WITHOUT_CLASSIFICATION	private boolean _currentlinehighlighting = true
WITHOUT_CLASSIFICATION	i8n[syntax.abrevnewlinenote=use \n in corrections for line break. note bookmarks are more powerful than abreviations.]
WITHOUT_CLASSIFICATION	private boolean _showlinenumbers = false
WITHOUT_CLASSIFICATION	private int _caretrgb = color.red.getrgb() private int _selectionrgb = 0xccccff private int _linehighlightrgb = color.lightgray.getrgb() private int _eolmarkerrgb = 0x009999 private int _brackethighlightrgb = color.black.getrgb() private int _linenumberrgb = color.black.getrgb()
WITHOUT_CLASSIFICATION	create the actual panel that will be displayed in dialog.
WITHOUT_CLASSIFICATION	navy.
WITHOUT_CLASSIFICATION	folder to store user settings.
WITHOUT_CLASSIFICATION	property file not found for user - first time user ran pgm.
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	load plugin preferences.
WITHOUT_CLASSIFICATION	one may ask why we don't register the key strokes permanently. when we did so with two internal frames open the key stroke event sometimes went to the wrong frame. this doesn't happen if we procede like we do. the question is why?
WITHOUT_CLASSIFICATION	install the factory for creating sql entry text controls.
WITHOUT_CLASSIFICATION	_sqlentryfactoryproxy = new ostersqlentryareafactory(this originalfactory)
WITHOUT_CLASSIFICATION	not the textcontrol itself changed but some other of the syntax preferences for example a color. so we tell the current control to update the preferences.
WITHOUT_CLASSIFICATION	we don't support switching the entry control during a sessionbecause serveral things that are attached to the entry controlfrom outside this plugin would need to reinitialze too.for example code completion and edit extras.synchronized (_session){isqlentrypanelfactory factory = _plugin.getsqlentryareafactory()isqlentrypanel pnl = factory.createsqlentrypanel(_session)_session.getsqlpanelapi(_plugin).installsqlentrypanel(pnl)}
WITHOUT_CLASSIFICATION	_knowntables is just a cache to prevent creating a new string each time
WITHOUT_CLASSIFICATION	no new here method is called very often.
WITHOUT_CLASSIFICATION	suppress warnings for issues that are present in this old release of netbeans editor libraries we are using.
WITHOUT_CLASSIFICATION	update java colorings
WITHOUT_CLASSIFICATION	list of the additional colorings
WITHOUT_CLASSIFICATION	extcaret highlighting options
WITHOUT_CLASSIFICATION	extcaret highlighting colorings
WITHOUT_CLASSIFICATION	formatting settings
WITHOUT_CLASSIFICATION	new multikeybinding(keystroke.getkeystroke(keyevent.vk_open_bracket menu_mask) extkit.matchbraceaction) new multikeybinding(keystroke.getkeystroke(keyevent.vk_open_bracket menu_mask | inputevent.shift_mask) extkit.selectionmatchbraceaction) new multikeybinding(keystroke.getkeystroke(keyevent.vk_f10 inputevent.shift_mask) extkit.showpopupmenuaction)
WITHOUT_CLASSIFICATION	new multikeybinding( keystroke.getkeystroke(keyevent.vk_d inputevent.ctrl_mask) sqlkit.duplicatelineaction)
WITHOUT_CLASSIFICATION	dialogsupport.setdialogfactory(new nbdialogsupport())
WITHOUT_CLASSIFICATION	once and again the netbeans editor calls createsyntax() after sessionending() was called. then sess is null and the code below would break.
WITHOUT_CLASSIFICATION	the ctrl enter short cut in the netbeans editor is set in org.netbeans.editor.ext.basekit to the org.netbeans.editor.ext.basekit.splitlineaction. since the ctrl enter shorcut is a basic squirrel short cut and is defined via the main menu action we must remove this binding here.
WITHOUT_CLASSIFICATION	removed for the sqlbookmark plugin
WITHOUT_CLASSIFICATION	removed for the tools popup
WITHOUT_CLASSIFICATION	reasons for this code mailed to rob by gerd on 9/20/2008. the problem are methods like basesqlentrypanel.getboundsofsqltobeexecuted() basesqlentrypanel.movecarettoprevioussqlbegin() they rely on the line break being a single char. also i suppose some of our code generation (scripting) functions do the same. at least i'm pretty sure if \r\n would be preserved they could produce a mixture of \n and \r\n.
WITHOUT_CLASSIFICATION	i thought this prevented gc. it doesn't but if two sessions are open and one is closed the one left open looses key bindings. for example the arrow navigation keys. getkeymap().removebindings()
WITHOUT_CLASSIFICATION	the sqlsettingsinitializer added above holds a reference to the syntaxpreferences of the current session which itself holds a reference to the session. we remove the sqlsettingsinitializer to give the session the chance to get garbage collected.
WITHOUT_CLASSIFICATION	internal states inside white space inside line comment inside block comment inside string constant inside string constant after backslash inside char constant inside char constant after backslash inside identifier slash char after '=' after '>' after '>>' after '>>>' after '<' after '<<' after '+' after '-' after '' after '' after '|' after '%' after '&' after '^' after '!' after '0' integer number octal number double number double number hex number after '.'
WITHOUT_CLASSIFICATION	with an hanging sessionlistener a session nvere gets garbage collected.
WITHOUT_CLASSIFICATION	example alter table kvpos add constraint kv_kvpos foreign key (kvid) kv(kvid) -------------------------------------------------------------^ ("references" expected) kv will not be marked with the condition above because errinf.endpos <= absoluteposition + len is never true.
WITHOUT_CLASSIFICATION	public static final string duplicatelineaction = "duplicate-line-action"
WITHOUT_CLASSIFICATION	at this stage there's no more text in the scanned buffer but this buffer is not the last so the scan will continue on another buffer. the scanner tries to minimize the amount of characters that will be prescanned in the next buffer by returning the token where possible.
WITHOUT_CLASSIFICATION	protected action[] createactions() { action[] javaactions = new action[] { new netbeansduplicatelineaction() } return textaction.augmentlist(super.createactions() javaactions) }
WITHOUT_CLASSIFICATION	/ this formula can be found in the api doc for methode relocate() of class org.netbeans.editor.syntax. see the description of the last parameter 'stopposition'. relocate() is always called before the parsetocken() method of this class.
WITHOUT_CLASSIFICATION	nothing found
WITHOUT_CLASSIFICATION	gridlayout makes equal cells
WITHOUT_CLASSIFICATION	isession[] activesessions = _plugin.getapplication().getsessionmanager().getactivesessions()
WITHOUT_CLASSIFICATION	data type keyword numeric-ids
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	create the dialog with given content
WITHOUT_CLASSIFICATION	redirect the esc key to cancel button
WITHOUT_CLASSIFICATION	add the buttons to it
WITHOUT_CLASSIFICATION	this didn't work final int pos = getcaretposition() final document doc = _textarea.getstyleddocument() final element docelem = doc.getdefaultrootelement() final element lineelem = docelem.getelement(getcaretlinenumber()) return lineelem.getelementindex(pos)
WITHOUT_CLASSIFICATION	add listener to buttons
WITHOUT_CLASSIFICATION	listen on windowclosing and redirect it to cancel button
WITHOUT_CLASSIFICATION	register the default button if available
WITHOUT_CLASSIFICATION	void type keyword numeric-id
WITHOUT_CLASSIFICATION	register the cancel button helpers if available
WITHOUT_CLASSIFICATION	see sqlsettingsinitializer to find out how fonts are handled in the netbeans editor. _textarea.setfont(font)
WITHOUT_CLASSIFICATION	token category-ids
WITHOUT_CLASSIFICATION	other keywords numeric-ids
WITHOUT_CLASSIFICATION	numeric-ids for token-ids
WITHOUT_CLASSIFICATION	operator numeric-ids = < > << >> >>> + - / & | ^ % ! ~ == <= >= <<= >>= >>>= += -= = /= &= |= ^= %= != . ? ( ) [ ] { } ++ -- && ||
WITHOUT_CLASSIFICATION	incomplete tokens
WITHOUT_CLASSIFICATION	jdk1.5 vararg's ""
WITHOUT_CLASSIFICATION	token-categories
WITHOUT_CLASSIFICATION	token-ids
WITHOUT_CLASSIFICATION	operators
WITHOUT_CLASSIFICATION	data types
WITHOUT_CLASSIFICATION	void type
WITHOUT_CLASSIFICATION	rest of the keywords
WITHOUT_CLASSIFICATION	jdk1.5 vararg's ""
WITHOUT_CLASSIFICATION	incomplete and error token-ids
WITHOUT_CLASSIFICATION	context instance declaration
WITHOUT_CLASSIFICATION	case sqltokencontext.annotation_id jdk 1.5 annotations return new coloring(null new color(0 111 0) null)
WITHOUT_CLASSIFICATION	printing set
WITHOUT_CLASSIFICATION	print fore color will be gray
WITHOUT_CLASSIFICATION	we do abrevs ourselfs in the documentlistener in netbeanssqlentrypanel. we don't use the netbeans implementation mainly because it is case sensitive. if we come across a performance problem one day we can still try to use this.
WITHOUT_CLASSIFICATION	hashtable autocorrects = plugin.getautocorrectproviderimpl().getautocorrects() javaabbrevmap.putall(autocorrects)
WITHOUT_CLASSIFICATION	start the thread that does the coloring
WITHOUT_CLASSIFICATION	set up the hash table that contains the styles.
WITHOUT_CLASSIFICATION	create the new document.
WITHOUT_CLASSIFICATION	put the initial text into the text pane and set it's initial coloring style.
WITHOUT_CLASSIFICATION	this stops the text control from line wrapping.
WITHOUT_CLASSIFICATION	color.maroon
WITHOUT_CLASSIFICATION	color.maroon
WITHOUT_CLASSIFICATION	if we just finish we can't go to sleep until we ensure there is nothing else for us to do. use try again to keep track of this.
WITHOUT_CLASSIFICATION	forever
WITHOUT_CLASSIFICATION	only if the text did really changed (null != re.change) intervals must be adjusted. if the text did not change there is nothing to adjust.
WITHOUT_CLASSIFICATION	we are playing some games with the lexer for efficiency. we could just create a new lexer each time here but instead we will just reset it so that it thinks it is starting at the beginning of the document but reporting a funny start colorstartpos. reseting the lexer causes the close() method on the reader to be called but because the close() method has no effect on the documentreader we can do this.
WITHOUT_CLASSIFICATION	after the lexer has been set up scroll the reader so that it is in the correct spot as well.
WITHOUT_CLASSIFICATION	this is the actual command that colors the stuff. color stuff with the description of the style matched to the hash table that has been set up ahead of time.
WITHOUT_CLASSIFICATION	record the colorstartpos of the last bit of text that we colored
WITHOUT_CLASSIFICATION	the interval is involved even if pos lied one point before or after the interval. this way for example we get -- select out of comment coloring when the first "-" is removed.
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	the ostermiller sqllexer crashes with an arrayindexoutofboundsexception if the char is greater then 255. so we prevent the char from being greater. this is surely not a proper unicode treatment but it doesn't seem to do no harm and it keeps the sqllexer working.
WITHOUT_CLASSIFICATION	we will highlight tokens until we reach a good stopping place. the first obvious stopping place is the end of the document. the lexer will return null at the end of the document and wee need to stop there.
WITHOUT_CLASSIFICATION	iobjecttreeapi api = m_session.getobjecttreeapi(m_plugin)
WITHOUT_CLASSIFICATION	since we did something we should check that there is nothing else to do before going back to sleep.
WITHOUT_CLASSIFICATION	todo columns tables
WITHOUT_CLASSIFICATION	though in api-doc they say setcharacterattributes() is thread save we received observed java.lang.errors from swing as well as dead locks. that's why we do changes synchron now.
WITHOUT_CLASSIFICATION	iobjecttreeapi api = m_session.getobjecttreeapi(m_plugin)
WITHOUT_CLASSIFICATION	synchronized (doclock) {
WITHOUT_CLASSIFICATION	synchronized (doclock) {
WITHOUT_CLASSIFICATION	todosetfont(style.createstyledfont(getfont()))
WITHOUT_CLASSIFICATION	m_session.getsqlpanelapi(m_plugin).addtosqlentryareamenu(actsql)
WITHOUT_CLASSIFICATION	_session.getsqlpanelapi(_plugin)
WITHOUT_CLASSIFICATION	iobjecttreeapi api = session.getobjecttreeapi(this)
WITHOUT_CLASSIFICATION	targettype == target_type_sql
WITHOUT_CLASSIFICATION	dialog is shown only when it is written to.
WITHOUT_CLASSIFICATION	string sql = m_session.getsqlpanelapi(m_plugin).getsqlscripttobeexecuted()
WITHOUT_CLASSIFICATION	scriptenvironment env = new scriptenvironment(m_session.getsqlpanelapi(m_plugin) ownerframe)
WITHOUT_CLASSIFICATION	string catalog string schema string simplename string tabletype string remarks
WITHOUT_CLASSIFICATION	/ setting the model initializes columns. we want to initialize the columns ourselves below.
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	tablename
WITHOUT_CLASSIFICATION	create the threads
WITHOUT_CLASSIFICATION	start the threads
WITHOUT_CLASSIFICATION	join with the threads
WITHOUT_CLASSIFICATION	the following gives java.sql.sqlexception conversion to character stream failed
WITHOUT_CLASSIFICATION	"other" types are treated as strings internally in squirrel.
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	string catalog string schema string simplename
WITHOUT_CLASSIFICATION	utilundertest =
WITHOUT_CLASSIFICATION	utilundertest = null
WITHOUT_CLASSIFICATION	string path = "/downloads/"
WITHOUT_CLASSIFICATION	updateutil util = new updateutilimpl()
WITHOUT_CLASSIFICATION	string path = "/release/snapshot/"
WITHOUT_CLASSIFICATION	two columns to represent a primary key in the pktest table
WITHOUT_CLASSIFICATION	this is the constraint that is dropped in drop constraint test
WITHOUT_CLASSIFICATION	this is the column on which the constraint to be dropped is defined
WITHOUT_CLASSIFICATION	mocks for generic dialect test
WITHOUT_CLASSIFICATION	private databasemetadata mockgenericdialectdbmetadata = mockhelper.createmock(databasemetadata.class)
WITHOUT_CLASSIFICATION	for some reason frontbase doesn't find tables that have been previously created.
WITHOUT_CLASSIFICATION	quiet
WITHOUT_CLASSIFICATION	views will depend on tables so drop them first
WITHOUT_CLASSIFICATION	now sequences should go.
WITHOUT_CLASSIFICATION	alterations fail for some reason unless you do this
WITHOUT_CLASSIFICATION	mysql spatial index requires a not null column
WITHOUT_CLASSIFICATION	db2 requires primary keys to also be declared "not null"
WITHOUT_CLASSIFICATION	db2 cannot alter a column's null attribute directly (only through constraints). not only that but it's apparently not a valid thing to do to create a primary key using a column that has been made "not null" via a check constraint. therefore the only columns that qualify to be made pks are those that were declared not null at the time of table creation.
WITHOUT_CLASSIFICATION	test whether or not the dialect correctly converts nullable columns to not-null before applying the primary key - if necessary
WITHOUT_CLASSIFICATION	don't care if it's not there
WITHOUT_CLASSIFICATION	this is what we expect
WITHOUT_CLASSIFICATION	convert nullint into a varchar(100)
WITHOUT_CLASSIFICATION	this is what we expect.
WITHOUT_CLASSIFICATION	couldn't locate the table - just try to fake it.
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	now that we have run the view definition query and retrieved the sql that is the body of the view (that is it's query part minus the "create view as" prefix) we can drop the view.
WITHOUT_CLASSIFICATION	create a table with a default value to use as the model
WITHOUT_CLASSIFICATION	test the create statement
WITHOUT_CLASSIFICATION	build the sql statement(s) to create the table
WITHOUT_CLASSIFICATION	system.err.println("("+extractor.getclass().getsimplename()+")the sql generated by " + referencedialect.getdisplayname() + " works !!!")
WITHOUT_CLASSIFICATION	drop the table so that we can test our create statement
WITHOUT_CLASSIFICATION	create a test view that we will get view def for then drop and re-create
WITHOUT_CLASSIFICATION	postgres has some special indexes that only work on certain columns. skip tests for those
WITHOUT_CLASSIFICATION	viewdefsql is the sql that can be used to query the data dictionary for the body of a view. this should exclude the "create view <viewname> as" prefix and just return the query.
WITHOUT_CLASSIFICATION	create a unique index on myuniquechar
WITHOUT_CLASSIFICATION	now drop the first
WITHOUT_CLASSIFICATION	create a non-unique index on mychar
WITHOUT_CLASSIFICATION	now drop the second.
WITHOUT_CLASSIFICATION	create it.
WITHOUT_CLASSIFICATION	create it.
WITHOUT_CLASSIFICATION	axion cannot handle ts escape sequence - so skip this test for now.
WITHOUT_CLASSIFICATION	progress throws an exception if you try to drop the first index that was created
WITHOUT_CLASSIFICATION	verify insert worked only if the dialect supports sub-second timestamp values
WITHOUT_CLASSIFICATION	unused methods - this is not a real dialog just a fake.
WITHOUT_CLASSIFICATION	utility methods
WITHOUT_CLASSIFICATION	ms sqlserver yields "conversion failed when converting datetime from character string" for {ts '2008-02-21 212623.966123'}
WITHOUT_CLASSIFICATION	system.err.println("attempt to use dialect sql from " + referencedialect.getdisplayname() + " failed " + e2.getmessage())
WITHOUT_CLASSIFICATION	catalog schema tablename columnname datatype typename columnsize decimaldigits radix isnullallowed remarks defaultvalue octet length ordinal position isnullable
WITHOUT_CLASSIFICATION	tablename columns pkcolumns prefs qualifier
WITHOUT_CLASSIFICATION	mocks
WITHOUT_CLASSIFICATION	helpers
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#initialize()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getexternalservice()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getglobalpreferencepanels()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#gethelpfilename()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getlicencefilename()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getnewsessionpropertiespanels()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getpluginappsettingsfolder()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getpluginusersettingsfolder()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getwebsite()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#unload()
WITHOUT_CLASSIFICATION	system.err.println("mockapplication.getmainframe stub not yet implemented")
WITHOUT_CLASSIFICATION	mockconnection2 mockcon = getmockconnection()
WITHOUT_CLASSIFICATION	sessionpanel = new sessionpanel(this)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getpluginusersettingsfolder()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#nullsaresortedhigh()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getwebsite()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#load(net.sourceforge.squirrel_sql.client.iapplication)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#unload()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getinternalname()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getdescriptivename()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getauthor()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getversion()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.session.isession#getschemainfo()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.session.isession#getmetadata()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.idatabaseobjectinfo#getcatalogname()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.idatabaseobjectinfo#getdatabaseobjecttype()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.idatabaseobjectinfo#getqualifiedname()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.idatabaseobjectinfo#getschemaname()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.idatabaseobjectinfo#getsimplename()
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	need to adjust param which is 1-based(jdbc) to a 0-based number for array access
WITHOUT_CLASSIFICATION	fail("not yet implemented")
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	mocksession
WITHOUT_CLASSIFICATION	mocksession
WITHOUT_CLASSIFICATION	mockpreferences
WITHOUT_CLASSIFICATION	mocksessionproperties
WITHOUT_CLASSIFICATION	mockfontinfo
WITHOUT_CLASSIFICATION	mockapplication
WITHOUT_CLASSIFICATION	mocksquirrelresources
WITHOUT_CLASSIFICATION	null tests
WITHOUT_CLASSIFICATION	other tests
WITHOUT_CLASSIFICATION	mock objects
WITHOUT_CLASSIFICATION	simulate the user changing the session properties
WITHOUT_CLASSIFICATION	querytokenizer tests
WITHOUT_CLASSIFICATION	this should be a default tokenizer which uses "" as statement sep
WITHOUT_CLASSIFICATION	this should override the default tokenizer
WITHOUT_CLASSIFICATION	check to ensure that the tokenizer received is not the default one that should have been overridden.
WITHOUT_CLASSIFICATION	simulate the user switching the statement separator for the session
WITHOUT_CLASSIFICATION	test to ensure that we allow sessions that are ending to be gc'd.
WITHOUT_CLASSIFICATION	mock objects
WITHOUT_CLASSIFICATION	we don't stub return because we want to verify that the object filter was actually used.
WITHOUT_CLASSIFICATION	should at least bind the tablename to a bind var in the sql
WITHOUT_CLASSIFICATION	common mocks
WITHOUT_CLASSIFICATION	test data
WITHOUT_CLASSIFICATION	mocksessionmanager
WITHOUT_CLASSIFICATION	mocksqlconnection
WITHOUT_CLASSIFICATION	mocksqlmetadata
WITHOUT_CLASSIFICATION	mockschemainfo
WITHOUT_CLASSIFICATION	mockthreadpool
WITHOUT_CLASSIFICATION	mockconnection
WITHOUT_CLASSIFICATION	mocksqldriver
WITHOUT_CLASSIFICATION	mockdatabaseobjectinfo
WITHOUT_CLASSIFICATION	helper methods
WITHOUT_CLASSIFICATION	data
WITHOUT_CLASSIFICATION	test to see that table(100) matches table(0). it should since only the row count is different.
WITHOUT_CLASSIFICATION	test to see if we can fool matchkeyprefix into assuming that there will be '(' on the end of the path since row count is enabled. yet we'll send in a string that doesn't have this characteristic.
WITHOUT_CLASSIFICATION	pick a tableinfo to remove and replace
WITHOUT_CLASSIFICATION	remove table with name table10
WITHOUT_CLASSIFICATION	add it back
WITHOUT_CLASSIFICATION	mock objects
WITHOUT_CLASSIFICATION	setup expectations
WITHOUT_CLASSIFICATION	setup expectations
WITHOUT_CLASSIFICATION	mock objects
WITHOUT_CLASSIFICATION	create mocks to be injected
WITHOUT_CLASSIFICATION	inject mocks
WITHOUT_CLASSIFICATION	common expectations
WITHOUT_CLASSIFICATION	downloads directory
WITHOUT_CLASSIFICATION	downloads/plugin directory
WITHOUT_CLASSIFICATION	squirrel installed lib dir
WITHOUT_CLASSIFICATION	downloads/core directory
WITHOUT_CLASSIFICATION	setup source mock file
WITHOUT_CLASSIFICATION	setup dest mock file
WITHOUT_CLASSIFICATION	cannot mock urls they are final and so they cannot be subclassed.
WITHOUT_CLASSIFICATION	class to test
WITHOUT_CLASSIFICATION	common mock objects
WITHOUT_CLASSIFICATION	common mock objects
WITHOUT_CLASSIFICATION	this is acceptable
WITHOUT_CLASSIFICATION	this is acceptable
WITHOUT_CLASSIFICATION	artifactxmlbean
WITHOUT_CLASSIFICATION	data
WITHOUT_CLASSIFICATION	for the serialization test in superclass - cannot use mockhelper because the replay needs to be done here.
WITHOUT_CLASSIFICATION	original object another object that has the same values as the original another object with different values
WITHOUT_CLASSIFICATION	a subclass of foo with the same values as the original
WITHOUT_CLASSIFICATION	different only by type - same name
WITHOUT_CLASSIFICATION	test constants
WITHOUT_CLASSIFICATION	expect getfile for updated files that will be removed
WITHOUT_CLASSIFICATION	expect getfile for updated files that were downloaded
WITHOUT_CLASSIFICATION	expected fileoperationinfos for files that will be installed
WITHOUT_CLASSIFICATION	expectations that are specific to this test
WITHOUT_CLASSIFICATION	failure tests
WITHOUT_CLASSIFICATION	helper methods
WITHOUT_CLASSIFICATION	check reference equality to be sure that it isn't the exact same object.
WITHOUT_CLASSIFICATION	private tablecolumnsdataset iut = null
WITHOUT_CLASSIFICATION	todo
WITHOUT_CLASSIFICATION	helper methods
WITHOUT_CLASSIFICATION	helper methods
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	helpers
WITHOUT_CLASSIFICATION	data
WITHOUT_CLASSIFICATION	mock objects
WITHOUT_CLASSIFICATION	a subclass of foo with the same values as the original
WITHOUT_CLASSIFICATION	"unknown" types are treated as strings internally in squirrel.
WITHOUT_CLASSIFICATION	not necessarily the case - i'm just curious if we have any components that need to be re-read
WITHOUT_CLASSIFICATION	1757076 (date column seen as timestamp update in editable mode fails) we should always return false for this when the user hasn't specified
WITHOUT_CLASSIFICATION	cannot pass byte array to class.forname
WITHOUT_CLASSIFICATION	not a real database but no driver should match this.
WITHOUT_CLASSIFICATION	some dialects support adding columns but the logic has not been added yet to the dialect. if that is the case the message is "not yet implemented" - fail for all other messages.
WITHOUT_CLASSIFICATION	tests
WITHOUT_CLASSIFICATION	here the max line length == original line size - so it doesn't get trimmed of white space.
WITHOUT_CLASSIFICATION	data
WITHOUT_CLASSIFICATION	the first time that schemas are asked for return just one
WITHOUT_CLASSIFICATION	the second time that schemas are asked for return two
WITHOUT_CLASSIFICATION	check to be sure we get only one schema
WITHOUT_CLASSIFICATION	check to be sure we get only one schema
WITHOUT_CLASSIFICATION	now check to be sure we get both schemas.
WITHOUT_CLASSIFICATION	the first time that catalogs are asked for return just one
WITHOUT_CLASSIFICATION	the second time that catalogs are asked for return two
WITHOUT_CLASSIFICATION	now check to be sure we get both catalogs.
WITHOUT_CLASSIFICATION	build the table types returned by postgresql
WITHOUT_CLASSIFICATION	scope
WITHOUT_CLASSIFICATION	typename
WITHOUT_CLASSIFICATION	int precision
WITHOUT_CLASSIFICATION	short scale
WITHOUT_CLASSIFICATION	short pseudocolumn
WITHOUT_CLASSIFICATION	setup values.length columns
WITHOUT_CLASSIFICATION	setup one row
WITHOUT_CLASSIFICATION	setup one column in multiple rows
WITHOUT_CLASSIFICATION	mocks
WITHOUT_CLASSIFICATION	test case for 1742033 (skipping quoting escape in table dropping)
WITHOUT_CLASSIFICATION	original object
WITHOUT_CLASSIFICATION	another object that has the same values as the original
WITHOUT_CLASSIFICATION	another object with different values
WITHOUT_CLASSIFICATION	don't forget to set this to the number of statements in result
WITHOUT_CLASSIFICATION	class under test
WITHOUT_CLASSIFICATION	making sure that the directory does not exist.
WITHOUT_CLASSIFICATION	todo
WITHOUT_CLASSIFICATION	todo
WITHOUT_CLASSIFICATION	todo
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	column name sqltype
WITHOUT_CLASSIFICATION	sybase 12.5 doesn't support quotation marks for identifiers yet reports " as the identifier quote string - go figure!
WITHOUT_CLASSIFICATION	sybase 15 fully supports quotation marks for identifiers and reports " as the identifier quote string - yeah they got it right!
WITHOUT_CLASSIFICATION	since catalog schema and table are all identifiers they all need to be quoted.
WITHOUT_CLASSIFICATION	construct mock objects
WITHOUT_CLASSIFICATION	local expectations
WITHOUT_CLASSIFICATION	execute test
WITHOUT_CLASSIFICATION	execute test
WITHOUT_CLASSIFICATION	execute test
WITHOUT_CLASSIFICATION	constructor tests
WITHOUT_CLASSIFICATION	method tests
WITHOUT_CLASSIFICATION	fail ??
WITHOUT_CLASSIFICATION	fail ??
WITHOUT_CLASSIFICATION	helpers
WITHOUT_CLASSIFICATION	construct the name of executable file
WITHOUT_CLASSIFICATION	add classpath string
WITHOUT_CLASSIFICATION	parse hy.test.vmargs if was given
WITHOUT_CLASSIFICATION	add custom args given as parameter
WITHOUT_CLASSIFICATION	execute java process
WITHOUT_CLASSIFICATION	wait for errthread to start
WITHOUT_CLASSIFICATION	" a read "
WITHOUT_CLASSIFICATION	this should just produce an error message.
WITHOUT_CLASSIFICATION	delete all old temporary files
WITHOUT_CLASSIFICATION	regression test for harmony-382
WITHOUT_CLASSIFICATION	regression test for harmony-21
WITHOUT_CLASSIFICATION	test data used in a few places below
WITHOUT_CLASSIFICATION	check filename is preserved correctly
WITHOUT_CLASSIFICATION	check null argument is handled
WITHOUT_CLASSIFICATION	expected.
WITHOUT_CLASSIFICATION	regression for harmony-46
WITHOUT_CLASSIFICATION	a valid file uri
WITHOUT_CLASSIFICATION	canread only returns if the file exists so cannot be fully tested.
WITHOUT_CLASSIFICATION	canwrite only returns if the file exists so cannot be fully tested.
WITHOUT_CLASSIFICATION	test for trying to create a file in a directory that does not exist.
WITHOUT_CLASSIFICATION	try to create a file in a directory that does not exist
WITHOUT_CLASSIFICATION	try to create a file in a directory that does not exist
WITHOUT_CLASSIFICATION	test for creating a file that already exists.
WITHOUT_CLASSIFICATION	test create an illegal file
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	error protection against using a suffix without a "."?
WITHOUT_CLASSIFICATION	test to see if correct suffix was used to create the tempfile.
WITHOUT_CLASSIFICATION	testing two files one with suffix ".tmp" and one with null
WITHOUT_CLASSIFICATION	tests for creating a tempfile with a filename shorter than 3 characters.
WITHOUT_CLASSIFICATION	test to make sure that the tempfile was saved in the correct location and with the correct prefix/suffix.
WITHOUT_CLASSIFICATION	test for creating a tempfile in a directory that does not exist.
WITHOUT_CLASSIFICATION	set dir to a non-existent directory inside the temporary directory
WITHOUT_CLASSIFICATION	if the directory exists add one to the directory number (making it a new directory name.)
WITHOUT_CLASSIFICATION	create the file
WITHOUT_CLASSIFICATION	test for when long directory/file names in windows
WITHOUT_CLASSIFICATION	if the "short file name" doesn't exist then assume that the 8.3 file name compatibility is disabled.
WITHOUT_CLASSIFICATION	should work for unix/windows.
WITHOUT_CLASSIFICATION	finding a non-existent directory for tests 3 and 4 this is necessary because getcanonicalpath is case sensitive and could cause a failure in the test if the directory exists but with different case letters (e.g "temp" and "temp")
WITHOUT_CLASSIFICATION	test for long file names on windows
WITHOUT_CLASSIFICATION	regression for harmony-444
WITHOUT_CLASSIFICATION	regression for harmony-829
WITHOUT_CLASSIFICATION	regression for harmony-3869
WITHOUT_CLASSIFICATION	regression for harmony-53
WITHOUT_CLASSIFICATION	one or the other should be absolute on windows or ce
WITHOUT_CLASSIFICATION	on unix hidden files are marked with a "." at the beginning of the file name.
WITHOUT_CLASSIFICATION	for windows the file is being set hidden by the attrib command.
WITHOUT_CLASSIFICATION	finding a non-existent directory to create.
WITHOUT_CLASSIFICATION	finding a non-existent directory to create.
WITHOUT_CLASSIFICATION	test for attempting to call listfiles on a non-existent directory.
WITHOUT_CLASSIFICATION	test to make sure that listfiles can read hidden files.
WITHOUT_CLASSIFICATION	creating a filter that catches directories.
WITHOUT_CLASSIFICATION	testbitcoltype(sourcename destname)
WITHOUT_CLASSIFICATION	old test left behind "garbage files" so this time it creates a directory that is guaranteed not to already exist (and deletes it afterward.)
WITHOUT_CLASSIFICATION	finding a non-existent directory to create.
WITHOUT_CLASSIFICATION	checking to make sure the correct files were are listed in the array.
WITHOUT_CLASSIFICATION	checking to make sure the correct files were are listed in the array.
WITHOUT_CLASSIFICATION	test to make sure that only the 3 files that were created are listed.
WITHOUT_CLASSIFICATION	checking to make sure the correct files were are listed in the array.
WITHOUT_CLASSIFICATION	if the directory exists add one to the directory number (making it a new directory name.)
WITHOUT_CLASSIFICATION	if the directory exists add one to the directory number (making it a new directory name.)
WITHOUT_CLASSIFICATION	creating a filter that catches files.
WITHOUT_CLASSIFICATION	test to see if the correct number of directories are returned.
WITHOUT_CLASSIFICATION	test to see if the directory was saved with the correct name.
WITHOUT_CLASSIFICATION	test to see if the correct number of files are returned.
WITHOUT_CLASSIFICATION	creating a filter that catches ".tst" files.
WITHOUT_CLASSIFICATION	creating a filter that catches ".tmp" files.
WITHOUT_CLASSIFICATION	if the suffix is ".tmp" then send it to the array
WITHOUT_CLASSIFICATION	tests to see if the correct number of files were returned.
WITHOUT_CLASSIFICATION	24 chars
WITHOUT_CLASSIFICATION	test make a long path
WITHOUT_CLASSIFICATION	test make many paths
WITHOUT_CLASSIFICATION	regression test for harmony-3656
WITHOUT_CLASSIFICATION	in case it already exists
WITHOUT_CLASSIFICATION	in case it already exists
WITHOUT_CLASSIFICATION	subtracting 100 000 milliseconds from the orgtime of file f1
WITHOUT_CLASSIFICATION	subtracting 10 000 000 milliseconds from the orgtime of file f1
WITHOUT_CLASSIFICATION	adding 100 000 milliseconds to the orgtime of file f1
WITHOUT_CLASSIFICATION	adding 10 000 000 milliseconds from the orgtime of file f1
WITHOUT_CLASSIFICATION	trying to set time to an exact number
WITHOUT_CLASSIFICATION	trying to set time to a large exact number
WITHOUT_CLASSIFICATION	trying to set time to a negative number
WITHOUT_CLASSIFICATION	attempt to write to a file that is setreadonly.
WITHOUT_CLASSIFICATION	write to a file.
WITHOUT_CLASSIFICATION	similarly trying to delete a read-only directory should succeed
WITHOUT_CLASSIFICATION	need a directory that exists
WITHOUT_CLASSIFICATION	test for touri when the file is a directory.
WITHOUT_CLASSIFICATION	test for touri with a file name with illegal chars.
WITHOUT_CLASSIFICATION	test for tourl when the file is a directory.
WITHOUT_CLASSIFICATION	test for tourl with a file.
WITHOUT_CLASSIFICATION	regression test for harmony-4493
WITHOUT_CLASSIFICATION	no invalid columns in this tablemodel implementation
WITHOUT_CLASSIFICATION	don't care to see tons of debug from coltypemapper
WITHOUT_CLASSIFICATION	helper methods
WITHOUT_CLASSIFICATION	mock objects
WITHOUT_CLASSIFICATION	mock objects
WITHOUT_CLASSIFICATION	assert is flawed because canwrite does not work. asserttrue("file f1 is set to readonly." f1.canwrite())
WITHOUT_CLASSIFICATION	assert is flawed because canwrite does not work. asserttrue("file f1 is not set to readonly." !f1.canwrite())
WITHOUT_CLASSIFICATION	assert is flawed because canwrite does not work. asserttrue("file f2 is set to readonly." f2.canwrite())
WITHOUT_CLASSIFICATION	assert is flawed because canwrite does not work. asserttrue("file f2 is not set to readonly." !f2.canwrite())
WITHOUT_CLASSIFICATION	attempt to write to a file that has previously been written to. and is now set to read only.
WITHOUT_CLASSIFICATION	regression test for harmony-3207 current directory
WITHOUT_CLASSIFICATION	regression test for harmony-3207 current directory
WITHOUT_CLASSIFICATION	testbooleancoltype(sourcename destname) testcharcoltype(sourcename destname)
WITHOUT_CLASSIFICATION	testdecimalcoltype(sourcename destname) testdoublecoltype(sourcename destname) testfloatcoltype(sourcename destname)
WITHOUT_CLASSIFICATION	this is for brute force detection of columns whose column size is 0
WITHOUT_CLASSIFICATION	this is for brute force detection of blob/clob lengths if necessary
WITHOUT_CLASSIFICATION	this is for brute force detection of blob/clob lengths if necessary
WITHOUT_CLASSIFICATION	test for npe in dbutil.getforeignkeysql when the tableinfo returns null for getimportedkeys
WITHOUT_CLASSIFICATION	case shouldn't be changed in this test because the context is the source database.
WITHOUT_CLASSIFICATION	instance under test
WITHOUT_CLASSIFICATION	init class under test
WITHOUT_CLASSIFICATION	init mocks
WITHOUT_CLASSIFICATION	setcolumns error conditions
WITHOUT_CLASSIFICATION	sunny day
WITHOUT_CLASSIFICATION	create a test bean to clone
WITHOUT_CLASSIFICATION	create a test bean to clone
WITHOUT_CLASSIFICATION	clone the test bean and change every bean property
WITHOUT_CLASSIFICATION	clone the test bean and change every bean property
WITHOUT_CLASSIFICATION	verify that changing the clone didn't affect the original
WITHOUT_CLASSIFICATION	verify that changing the clone didn't affect the original
WITHOUT_CLASSIFICATION	call class under test
WITHOUT_CLASSIFICATION	common mocks
WITHOUT_CLASSIFICATION	we cannot mock dtproperties because it is designed to be accessed statically. ( simulate missing property.
WITHOUT_CLASSIFICATION	accessible query
WITHOUT_CLASSIFICATION	sga query
WITHOUT_CLASSIFICATION	expect(session.getmessagehandler()).andreturn(messagehandler).anytimes()
WITHOUT_CLASSIFICATION	an interface
WITHOUT_CLASSIFICATION	a class
WITHOUT_CLASSIFICATION	i18n[application.error.loadcellselections=unable to load cell import/export selections from persistant storage.]
WITHOUT_CLASSIFICATION	_mainframe.setvisible(true) _mainframe.tofront() required on linux
WITHOUT_CLASSIFICATION	i18n[application.error.loaddatatypeprops=unable to load datatype properties selections from persistant storage.]
WITHOUT_CLASSIFICATION	if we don't invokelater here no short-cut-key is sent to the internal frame seen under java version "1.4.1_01" and linux
WITHOUT_CLASSIFICATION	set the singleton instance of the saver class to be the instance just created by the xmlbeanreader
WITHOUT_CLASSIFICATION	for all windows (other than the first one opened) for a session add a number on the end of the title to differentiate them in menus etc.
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	final map map = getalleditwherecolssheets(tree) return (editwherecolssheet)map.get(objectinfo.getqualifiedname())
WITHOUT_CLASSIFICATION	has to be done directly on the main frame because of racing condition at start up. _aliaseslistwindow.nowvisible(true)
WITHOUT_CLASSIFICATION	has to be done directly on the main frame because of racing condition at start up. _aliaseslistwindow.nowvisible(false)
WITHOUT_CLASSIFICATION	if the active window isn't for the currently selected session then select the main window for the session.
WITHOUT_CLASSIFICATION	we are in the closing event of the session main window. we don't want to send this event again therefore we pass withevents = false.
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	add(_okbtn) add(_closebtn)
WITHOUT_CLASSIFICATION	ok button at bottom of dialog. jpanel btnspnl = new jpanel() jbutton okbtn = new jbutton("ok")
WITHOUT_CLASSIFICATION	get list of all plugin developers names. allow for multiple developers for a plugin in the form "john smith james brown".
WITHOUT_CLASSIFICATION	_thread = new thread(new memorytimer()) _thread.start()
WITHOUT_CLASSIFICATION	typename columnsize decimaldigits radix isnullallowable
WITHOUT_CLASSIFICATION	defaultvalue octetlength ordinalposition isnullable
WITHOUT_CLASSIFICATION	easymock class extension helpers. since classextension and interface easymock methods cannot be used on the same mocks this provides convenience to not have to specify the package name for classextension mocks.
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	parent.addinternalframe(viewer true null) guiutils.centerwithindesktop(viewer)
WITHOUT_CLASSIFICATION	done after the set of the selected item above so that we control when the initial build is done. we want to make sure that under all versions of the jdk that the window is shown before the (possibly lengthy) refresh starts.
WITHOUT_CLASSIFICATION	private static final class cellrenderer extends basiccomboboxrenderer { public component getlistcellrenderercomponent(jlist list object value int index boolean isselected boolean cellhasfocus) { settext(((tablecolumninfo)value).getcolumnname()) return this } }
WITHOUT_CLASSIFICATION	i18n[driverpropertiescontroller.invalidurl=according to the driver "{0}" the url "{1}" is invalid.]
WITHOUT_CLASSIFICATION	if no columns are selected and we're not dropping the pk then there is nothing to do.
WITHOUT_CLASSIFICATION	alias.setusedriverproperties(_usedriverpropschk.isselected()) alias.setdriverproperties(_sqldriverprops)
WITHOUT_CLASSIFICATION	if auto logon is true in connecttoaliascommand user name/password of the alias definiton may have changed. here we transfere this information back into the controls.
WITHOUT_CLASSIFICATION	if this happens then this is a programming error as we said in the above call to ingore these errors.
WITHOUT_CLASSIFICATION	scrollbars are "shown always" to stop sheet resizing when they are shown/hidden.
WITHOUT_CLASSIFICATION	use valueof when min supported jdk is 1.4 return boolean.valueof(_props[row].required)
WITHOUT_CLASSIFICATION	return boolean.class don't show checkbox for output only field.
WITHOUT_CLASSIFICATION	jinternalframe[] frames = guiutils.getopennontoolwindows(getdesktoppane().getallframes()) _app.getactioncollection().internalframeopenedorclosed(frames.length)
WITHOUT_CLASSIFICATION	_inwidgetsetvisible was introduced to allow movetofront to be called from within setvisible. see editwherecolssheet or sqlfiltersheet
WITHOUT_CLASSIFICATION	is done in dispose itself because listeners must be fired even in do_nothing_on_close mode tabhandle.fireclosed(e) /
WITHOUT_CLASSIFICATION	we can have more than one file in the string so tokenize on whitespace. let the user know if we find multiple tokens that they cannot place drop than one file at a time
WITHOUT_CLASSIFICATION	private aliaseslistinternalframe _aliaseslistwindow private driverslistinternalframe _driverslistwindow
WITHOUT_CLASSIFICATION	under jdk1.4 the first item in a jcombobox is no longer automatically selected.
WITHOUT_CLASSIFICATION	under jdk1.4 the first item in a jcombobox is no longer automatically selected.
WITHOUT_CLASSIFICATION	done this late so that plugins have time to register expanders with the object tree prior to it being built. getsession().getobjecttreeapi(_app.getdummyappplugin()).refreshtree()
WITHOUT_CLASSIFICATION	done this late so that plugins have time to register expanders with the object tree prior to it being built.
WITHOUT_CLASSIFICATION	this seems to be necessary to get background colours correct. without it labels added to the content pane have a dark background while those added to a jpanel in the content pane have a light background under the java look and feel. similar effects occur for other look and feels.
WITHOUT_CLASSIFICATION	if the user checked auto logon but gave wrong username/password in the alias definition. he will be asked to enter username/password again in an extra dialog. here for convenience we transfer these data back into the alias. note don't do this when auto logon is false.
WITHOUT_CLASSIFICATION	if blocked that means that it doesn't help anymore or an error dialog is shown or the connection is made and the sessionframe is being constructed/shown.
WITHOUT_CLASSIFICATION	/ message
WITHOUT_CLASSIFICATION	we need this in order to allow the user to see this plugin - which isn't loaded - in the plugin summary dialog so that they can enable it.
WITHOUT_CLASSIFICATION	if the old preference file exists and is newer than the newuserpreference file then use it for reading preferences
WITHOUT_CLASSIFICATION	private jlabel _executionlogfilenamelbl = new outputlabel(" ") must have at least 1 blank otherwise width gets set to zero. private jlabel _logconfigfilenamelbl = new outputlabel(" ") must have at least 1 blank otherwise width gets set to zero.
WITHOUT_CLASSIFICATION	we need this method to satisfy one of the interfaces we implement but since we have moved all operations to the datatype sub-panels which initialize their own data during creation there is nothing for us to do here
WITHOUT_CLASSIFICATION	we need this method to satisfy one of the interfaces we implement but since we have moved all operations to the datatype sub-panels which initialize their own data during creation there is nothing for us to do here
WITHOUT_CLASSIFICATION	get an array since we dont want trouble with the sessionslist when we remove the sessions from it.
WITHOUT_CLASSIFICATION	give the resultsetreader some time to realize that the user requested cancel and stop fetching results. this allows us to stop the query processing gracefully.
WITHOUT_CLASSIFICATION	public sqlexecutioninfo() { this(1 "") }
WITHOUT_CLASSIFICATION	/ error attention do not use background colors here. color blind people cannot read black writing on red background.
WITHOUT_CLASSIFICATION	/ checks if the former message should be highlighted in a 'history' color.
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	since 1.4 implements interfaces that became available in jdbc 3.0 let's warn the user if the driver doesn't support databasemetadata methods that were added in jdbc 2.1 and jdbc 3.0 specifications.
WITHOUT_CLASSIFICATION	no tokenizer has been set by any installed plugin. go ahead and give the default tokenizer. it is important to not cache this object so that session property changes to the current session are reflected in this default tokenizer.
WITHOUT_CLASSIFICATION	public sqlfilterclauses getsqlfilterclauses() { return _sqlfilterclauses }
WITHOUT_CLASSIFICATION	if the user selected editable table in the session properties then the display will be an editable table otherwise the display is read-only
WITHOUT_CLASSIFICATION	it is possible for a table to contain only columns of types that we cannot process or do selects on so check for that. since this check is on the structure of the table rather than the contents we only need to do it once (ie it is not needed in getwarningonprojectedupdate)
WITHOUT_CLASSIFICATION	there should not be more than one row in the db that matches the table and if there is we cannot determine which one to read so check that there are no more
WITHOUT_CLASSIFICATION	we don't care if these throw an sqlexception. just squelch them and report to the user what the outcome of the previous statements were.
WITHOUT_CLASSIFICATION	no problems found so do not return a warning message. nothing for user to worry about
WITHOUT_CLASSIFICATION	no problems found so do not return a warning message. nothing for user to worry about
WITHOUT_CLASSIFICATION	get where clause the -1 says to ignore the last arg and use the contents of the values array for the column that we care about. however since the data in that column has been limited when getwhereclause calls that datatype with that value the datatype will see that the data has been limited and therefore cannnot be used in the where clause. in some cases it may be possible for the datatype to use the partial data such as "matches <data>" but that may not be standard accross all databases and thus may be risky.
WITHOUT_CLASSIFICATION	have the datatype object fill in the appropriate kind of value into the first (and only) variable position in the prepared stmt
WITHOUT_CLASSIFICATION	it would be nice to tell the user what happened but if we try to put up a dialog box at this point we run into trouble in some cases where the field continually tries to re-read after the dialog closes (because it is being re-painted).
WITHOUT_CLASSIFICATION	when we get to the last statement if the script is large show the user the total execution time.
WITHOUT_CLASSIFICATION	there used to be a frame.pack() here but it resized the frame to be very wide if text output was used.
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	get where clause for the selected row the -1 says to just use the contents of the values without any substitutions
WITHOUT_CLASSIFICATION	for tables that have a lot of columns the user may have limited the set of columns to use in the where clause so see if there is a table of col names
WITHOUT_CLASSIFICATION	the user has restricted the set of columns to use. if this name is not in the list then skip it otherwise we fall through and use the column in the where clause
WITHOUT_CLASSIFICATION	for the column that is being changed use the value passed in by the caller (which may be either the current value or the new replacement value)
WITHOUT_CLASSIFICATION	string used as error indicator and description of problems seen when checking for 0 or mulitple matches in db
WITHOUT_CLASSIFICATION	for each row in table count how many rows match where clause if not exactly one generate message describing situation
WITHOUT_CLASSIFICATION	if the rows do not match 1-for-1 to db ask user if they really want to do delete
WITHOUT_CLASSIFICATION	read the db metadata info and fill in the value if any note that the resultset info and the coldefs should be in the same order but we cannot guarantee that.
WITHOUT_CLASSIFICATION	if value was null we do not need to do anything else with this column. also assume that a value of "" is equivilent to null
WITHOUT_CLASSIFICATION	add the list of column names we will be inserting into - be sure to skip the rowid column and any auto increment columns.
WITHOUT_CLASSIFICATION	jason sqlfilterclauses getsqlfilterclauses()
WITHOUT_CLASSIFICATION	loop while we either have a resultset to process or rows have been updated/inserted/deleted.
WITHOUT_CLASSIFICATION	this method is called from a thread. in case listeners update swing controls we invoke later here.
WITHOUT_CLASSIFICATION	this can happen if an impl of isqlexecutionlistener returns null from the statementexecuting api method to indicate that the sql shouldn't be executed.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data the same one used in text and in-cell operations.
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	can't work with isessionaction because if a result window is on top the session in a isessionaction is null.
WITHOUT_CLASSIFICATION	implementataion of idatasetupdateabletablemodel delegation to _datasetupdateabletablemodel
WITHOUT_CLASSIFICATION	final jscrollpane sp = new jscrollpane() sp.setborder(borderfactory.createemptyborder()) sp.setviewportview(_tree) sp.setpreferredsize(new dimension(200 200))
WITHOUT_CLASSIFICATION	there is no good way using jdbc metadata to tell if the table is a materialized view. so we need to query the data dictionary to find that out. get all table names whose comment indicates that they are a materialized view.
WITHOUT_CLASSIFICATION	option to select default catalog only applies to sessions that support catalogs.
WITHOUT_CLASSIFICATION	if the user wants to select for right mouse clicks then change the selection before popup appears
WITHOUT_CLASSIFICATION	go through each child of the parent and see if it was previously expanded. if it was recursively call this method in order to expand the child.
WITHOUT_CLASSIFICATION	add together the standard expanders for this node type and any individual expanders that there are for the node and process them.
WITHOUT_CLASSIFICATION	if a driver says it supports schemas/catalogs but doesn't provide schema/catalog nodes try to get other nodes.
WITHOUT_CLASSIFICATION	if a driver says it supports schemas but doesn't provide schema nodes try to get other nodes.
WITHOUT_CLASSIFICATION	any errors here result in an un-editable table which should be no problem
WITHOUT_CLASSIFICATION	dont need to close the resultset as databasetypesdataset will do so when its finished with it.
WITHOUT_CLASSIFICATION	some dbms's (eg think sql) throw an exception on a call to getbestrowidentifier.
WITHOUT_CLASSIFICATION	create data structure containing contents of rows to be deleted we cannot use the getrow() method because that uses myjtable whereas the indexes that we have are indexes in the sortabletablemodel.
WITHOUT_CLASSIFICATION	for example case 0 s = "invalid character" break perhaps insert application specific error messages here
WITHOUT_CLASSIFICATION	pseudocolumn query failed so reset it. otherwise we'll mistake the last column for a pseudocolumn and make it uneditable
WITHOUT_CLASSIFICATION	to allow the fw to save and reload user options related to specific columns we construct a unique name for the table so the column can be associcated with only that table. some drivers do not provide the catalog or schema info so those parts of the name will end up as null. that's ok since this string is never viewed by the user and is just used to distinguish this table from other tables in the db. we also include the url used to connect to the db so that the same table/db on different machines is treated differently.
WITHOUT_CLASSIFICATION	data random accessible current token current input character (original) current input character (for token) last input character position of current character line number of current character start position of current line
WITHOUT_CLASSIFICATION	/ we are through with parsing. now we store the outcome in _lastrun and tell the listeners.
WITHOUT_CLASSIFICATION	if this session doesn't share sql history with other sessions then disable the controls that relate to sql history.
WITHOUT_CLASSIFICATION	belong together
WITHOUT_CLASSIFICATION	use just the columns listed in the table and set the not-used cols to the ones that are not mentioned in the table
WITHOUT_CLASSIFICATION	for each element in the "use" set if selected then add to "not use" otherwise add to new "use" set
WITHOUT_CLASSIFICATION	detect whether or not the object tree needs refreshing by comparing old value to new and see if they changed.
WITHOUT_CLASSIFICATION	it causes a lot of pain in serveral places to cope with nulls or emptys here.
WITHOUT_CLASSIFICATION	create a hashmap containing the column names. by convention the value and key is the same for each column name
WITHOUT_CLASSIFICATION	int progress = loadschemas(1) load tables with catalog = null
WITHOUT_CLASSIFICATION	int progress = loadcatalogs(1) load tables with schema = null
WITHOUT_CLASSIFICATION	if called here it is called far to often and restoring selection in the object tree doesn't work. fireschemainfoupdate()
WITHOUT_CLASSIFICATION	reload all matching table types
WITHOUT_CLASSIFICATION	reload all matching procedure types
WITHOUT_CLASSIFICATION	call the function in the app code that checks for unexpected conditions in the db as it will be after doing the update
WITHOUT_CLASSIFICATION	unfortunately conversion to uppercase does not work properly for the georgian alphabet which has strange rules about case conversion. so we need to make one last check before exiting.
WITHOUT_CLASSIFICATION	if characters don't match but case may be ignored try converting both characters to uppercase. if the results match then the comparison scan should continue.
WITHOUT_CLASSIFICATION	this datatype does not limit the data read during the initial load of the table so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	db2 stores all names in upper case. postgresql stores all names in lower case. that's why we may not find proc as it was written in the create statement. so we try out the upper and lower case names too.
WITHOUT_CLASSIFICATION	the following strings are sql tokens and should therefore not be internationalized no i18n no i18n no i18n no i18n no i18n no i18n
WITHOUT_CLASSIFICATION	if the operator is 'in' and there are no parenthesis around the value put them there.
WITHOUT_CLASSIFICATION	this method is called from the super class's constructor therfore _titlelbl is null for that call.
WITHOUT_CLASSIFICATION	if the release version doesn't change we won't be pulling down core artifacts. so we just need to make sure that all core files have been copied from their installed locations into the corresponding directory in download which is in the classpath of the updater. this covers the case where the update is being run for the first time after install and no new version is available but the user wants to install/remove plugins and/or translations.
WITHOUT_CLASSIFICATION	since the base name file exists we need to skip it and bump up the endindex
WITHOUT_CLASSIFICATION	tell scrollpane to use table size with the height adjusted to leave room for the scrollbar at the bottom if needed
WITHOUT_CLASSIFICATION	text put in file name field to indicate that we should create a temp file for export
WITHOUT_CLASSIFICATION	should not happen since the file that was selected was just being shown in the chooser dialog but just to be safe
WITHOUT_CLASSIFICATION	an error here may mean that the file cannot be reached or has moved or some such. in any case the file cannot be used for export.
WITHOUT_CLASSIFICATION	at this point we have an actual file that we can output to so create the output stream (so that data type objects do not have to).
WITHOUT_CLASSIFICATION	if the table+column already has a data object in the map then remove it.
WITHOUT_CLASSIFICATION	notify table that rows have changed the deleted rows may not be contiguous in the actual data model because the gui may be showing a version of the data sorted in some other order so we cannot use firerowsdeleted.
WITHOUT_CLASSIFICATION	columndisplaydefinition[] coldefs = createcolumndefinitions(md columnindices computewidths) _datasetdefinition = new datasetdefinition(coldefs)
WITHOUT_CLASSIFICATION	if this was done when the header was clicked it prevents ms excel like adopition of column sizes by double click. see class buttontableheader.
WITHOUT_CLASSIFICATION	/ override the functions that need to be changed to tell the table mechanisms how to do editing.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data the same one used in text and in-cell operations.
WITHOUT_CLASSIFICATION	tabs and newlines get put into the text before this check so remove them this only applies to popup editing since these chars are not passed to this level by the in-cell editor.
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid data value
WITHOUT_CLASSIFICATION	as a coding convenience create a reference to the text component that is typecast to jtextcomponent. this is not essential as we could typecast every reference but this makes the code cleaner
WITHOUT_CLASSIFICATION	handle cases of null the processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	we should never get here because the areequal function is only called when we are trying to update the database so we know that we have a datatype object for this column (or we would have been stopped from editing by the iseditablexxx methods) but we need a return here to keep the compiler happy.
WITHOUT_CLASSIFICATION	get parameters previously set by user or set default values set to the default
WITHOUT_CLASSIFICATION	if the original object is not null then it contains a clob object that we need to re-use since that is the dbs reference to the clob data area. otherwise we set the original clob to null and the write method needs to know to set the field to null.
WITHOUT_CLASSIFICATION	if all of the data has been read then the blob can be edited in the popup otherwise it cannot
WITHOUT_CLASSIFICATION	if this panel is called before any instances of the class have been created we need to load the properties from the dtproperties.
WITHOUT_CLASSIFICATION	flag for whether to use the default java format (true) or the locale-dependent format (false)
WITHOUT_CLASSIFICATION	if all of the data has been read then the clob can be edited in the popup otherwise it cannot
WITHOUT_CLASSIFICATION	place to save reference to datatype object needed for calling the appropriate renderer on the object value
WITHOUT_CLASSIFICATION	if text cannot be edited in the cell but can be edited in the popup show that by changing the text colors.
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. this happens only in the jtextfield not the jtextarea so we can make this an inner class within this method rather than a separate inner class as is done with the keytexthandler class.
WITHOUT_CLASSIFICATION	if there was a problem with converting then just fall through and continue as if there was no default given in the db. otherwise use the converted object
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid data value
WITHOUT_CLASSIFICATION	as a coding convenience create a reference to the text component that is typecast to jtextcomponent. this is not essential as we could typecast every reference but this makes the code cleaner
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	if this panel is called before any instances of the class have been created we need to load the properties from the dtproperties.
WITHOUT_CLASSIFICATION	we have read data so that is not the same state odd-ball case assume if neither has read data that they are equal
WITHOUT_CLASSIFICATION	we have read data so that is not the same state odd-ball case assume if neither has read data that they are equal
WITHOUT_CLASSIFICATION	the list of specific column names is in comma-separated format with a comma in front of the first entry as well empty the map of old values
WITHOUT_CLASSIFICATION	do the conversion into the object in a safe manner special case the input is exactly the output
WITHOUT_CLASSIFICATION	if this column is being limited then truncate the data if needed (start with a quick check for the data being shorter than the limit in which case we don't need to worry about it).
WITHOUT_CLASSIFICATION	when changing the backgroud color it helps to set the inner component's border to zero. otherwise the border can obscure the text and make it hard to see. this is especially seen when using the kunstoff l&f.
WITHOUT_CLASSIFICATION	default behavior if no appropriate data type found is to create a simple jtextarea with no special handling. in theory this cannot happen because if there is no data type object for this column's data type then iseditableinpopup returns false so we should not get here. if there is a data type object and iseditableinpopup returns true then we would have executed the return statement above. assume that the value can be represented as a string.
WITHOUT_CLASSIFICATION	we have not already created a datatype object for this column so do that now and save it
WITHOUT_CLASSIFICATION	hadb reports "10" for column size of blob/clob 2gb (2^32)
WITHOUT_CLASSIFICATION	create table tablename ( column1 int column2 varchar(20) not null default 'hello world' constraint tablename_pkey primary key(column1column2) )
WITHOUT_CLASSIFICATION	"create $unique$ $storageoption$ index $indexname$ " + "on $tablename$ ( $columnname separator=\"\"$ )"
WITHOUT_CLASSIFICATION	<drop_index_statement> = drop index <index_name> [on <table_name>]
WITHOUT_CLASSIFICATION	alter table localtablename add constraint constraintname foreign key (localcolumn1 localcolumn2) references referencedtablename (referencedcolumn1 referencedcolumn2) match full on update restrict on delete no action deferrable initially deferred
WITHOUT_CLASSIFICATION	deletes the last " " deletes the last " "
WITHOUT_CLASSIFICATION	alter table tablename drop constraint constraintname
WITHOUT_CLASSIFICATION	create view viewname as definition
WITHOUT_CLASSIFICATION	myid myid stringtemplate st = new stringtemplate(templatestr)
WITHOUT_CLASSIFICATION	foreign key (columnname []) references [reftablename] [(refcolumnname[])] [on delete {cascade | restrict | no action | set default | set null}] [on update {cascade | set default | set null}]
WITHOUT_CLASSIFICATION	"alter table $childtablename$ " + "add $constraint$ $constraintname$ foreign key ( $childcolumn separator=\"\"$ ) " + "references $parenttablename$ ( $parentcolumn separator=\"\"$ )"
WITHOUT_CLASSIFICATION	"create $unique$ $storageoption$ index $indexname$ " + "on $tablename$ ( $columnname separator=\"\"$ )"
WITHOUT_CLASSIFICATION	create {[unique [hash]] index [[if not exists] newindexname] | primary key [hash]} on (columnname [])
WITHOUT_CLASSIFICATION	"create sequence $sequencename$ start with $startvalue$ " + "increment by $incrementvalue$ $cache$ $cachevalue$"
WITHOUT_CLASSIFICATION	"select current_value 'none' 'none' cache increment 0 " + "from information_schema.sequences " + "where sequence_schema = ? " + "and sequence_name = ? "
WITHOUT_CLASSIFICATION	"create $unique$ $storageoption$ index $indexname$ " + "on $tablename$ ( $columnname separator=\"\"$ )"
WITHOUT_CLASSIFICATION	alter table <tablename> add [constraint <constraintname>] foreign key (<column list>) references <exptablename> (<column list>) [on {delete | update} {cascade | set default | set null}]
WITHOUT_CLASSIFICATION	ingres requires that columns that are to become not null must have a default value.
WITHOUT_CLASSIFICATION	create sequence <sequencename> [as {integer | bigint}] [start with <startvalue>] [increment by <incrementvalue>]
WITHOUT_CLASSIFICATION	"create sequence $sequencename$ $startwith$ " + "$increment$ $minimum$ $maximum$ $cache$ $cycle$"
WITHOUT_CLASSIFICATION	convert all columns in key to not null - this doesn't hurt if they are already null.
WITHOUT_CLASSIFICATION	i tried the following for values under 8000 but i get encountered unexpected exception - line 1 you cannot assign a value of type 'long byte' to a column of type 'byte varying'. explicitly convert the value to the required type. registercolumntype(types.varbinary 8000 "byte varying($l)")
WITHOUT_CLASSIFICATION	float(54) produces an exception invalid column format 'float' on column 'float_column'. sql state 42000 error code 2014
WITHOUT_CLASSIFICATION	alter table <table> add constraint <constraint> foreign key(<column>) references <table>(<column>) on delete set null
WITHOUT_CLASSIFICATION	"alter table $tablename$ " + "add constraint $constraintname$ unique ($columnname separator=\"\"$)"
WITHOUT_CLASSIFICATION	"alter table $tablename$ " + "add constraint $constraintname$ unique ($columnname separator=\"\"$)"
WITHOUT_CLASSIFICATION	int featureid = dialectutils.column_type_alter_type string msg = dialectutils.getunsupportedmessage(this featureid) throw new unsupportedoperationexception(msg)
WITHOUT_CLASSIFICATION	"alter table $tablename$ " + "alter $columnname$ set data type $datatype$"
WITHOUT_CLASSIFICATION	"alter table $tablename$ " + "add constraint $constraintname$ unique ($columnname separator=\"\"$)"
WITHOUT_CLASSIFICATION	create [unique|fulltext|spatial] index index_name [index_type] on tbl_name (index_col_name) index_col_name col_name [(length)] [asc | desc] index_type using {btree | hash} note indextype is unused at the moment because the index dialog doesn't accept this. see below.
WITHOUT_CLASSIFICATION	postgresql follows the standard for sql bit. it's a string of bits. so bit(10) is a string of 10 bits. jdbc treats sql bit as if it were only a single bit. it specifies that bit is equivalent to boolean. it claims that the preparedstatement set method that should be used with bit is setboolean and getboolean. this is not compliant with the standard. so sql bit type support is broken in java there is nothing we can do about that. best thing to do for now is try to convert the bit type to a boolean like the jdbc spec says and hope for the best. hope that the source database isn't using the bit column as a sequence of multiple bits.
WITHOUT_CLASSIFICATION	set on update action to no action as oracle doesn't currently support this. no action causes the update clause to be omitted.
WITHOUT_CLASSIFICATION	select last_number max_value min_value cache_size increment_by cycle_flag from user_sequences where sequence_name = ?
WITHOUT_CLASSIFICATION	alter table test alter mychar set default 'foo' alter table test alter mychar drop default
WITHOUT_CLASSIFICATION	drop the existing default value. "alter table $tablename$ " + "alter $columnname$ drop default"
WITHOUT_CLASSIFICATION	"alter table $tablename$ " + "add constraint $constraintname$ unique ($columnname separator=\"\"$)"
WITHOUT_CLASSIFICATION	"create sequence $sequencename$ " + "$increment$ $startwith$ $minimum$ $maximum$ $cache$ $cycle$"
WITHOUT_CLASSIFICATION	"create sequence $sequencename$ " + "$increment$ $minimum$ $maximum$ $startwith$ $cache$ $cycle$"
WITHOUT_CLASSIFICATION	genericdialect must be last since it will claim that it supports any product/version. that is also why there is no isgenericdialect - it would always return true if there was one making it useless.
WITHOUT_CLASSIFICATION	double and float have no scale - that is decimal_digits is null. assume that is because it's variable - "floating" point.
WITHOUT_CLASSIFICATION	alter table <tablename> add constraint null_field check (<field> is not null)
WITHOUT_CLASSIFICATION	sort the rows by the property name. collections.sort(_data new datasorter())
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	"alter table $childtablename$ " + "add $constraint$ $constraintname$ foreign key ( $childcolumn separator=\"\"$ ) " + "references $parenttablename$ ( $parentcolumn separator=\"\"$ )"
WITHOUT_CLASSIFICATION	firebird doesn't natively support altering a columns nullable property. will have to simulate in a future release.
WITHOUT_CLASSIFICATION	create generator empno_gen commit set term !! create trigger create_empno for employees before insert position 0 as begin new.empno = gen_id(empno_gen 1) end
WITHOUT_CLASSIFICATION	dimension dim = getpreferredsize() dim.width = preferred_width setpreferredsize(dim) setrows(3)
WITHOUT_CLASSIFICATION	if the "none" place-holder is in the list in the first position remove it. it is not possible to select the "none" place-holder upon startup because it is already selected in the list if it is present.
WITHOUT_CLASSIFICATION	instantdb (at least version 3.13) only returns "tables" for gettabletypes(). if you try to use this in a call to databasemetadata.gettables() no tables will be found. for the moment hard code the types for instantdb.
WITHOUT_CLASSIFICATION	some drivers for both ms sql and sybase don't return guest as a schema name.
WITHOUT_CLASSIFICATION	the mode_decode routine may or may not be there. we don't care if it is not there but log an info if we failed to drop it for some other reason.
WITHOUT_CLASSIFICATION	table_cat table_schem table_name column_name data_type type_name column_size decimal_digits num_prec_radix nullable remarks column_def char_octet_length ordinal_position is_nullable
WITHOUT_CLASSIFICATION	don't bother the user with details about where the result fetch failed if they cancelled the query.
WITHOUT_CLASSIFICATION	/ we use vectors because a messagehandler might be called from different threads.
WITHOUT_CLASSIFICATION	if truncate was attempted and not supported then try delete. if on the other hand delete was attempted just throw the sqlexception that resulted from the delete.
WITHOUT_CLASSIFICATION	all the data from the clob has been read. make sure there are no newlines in it
WITHOUT_CLASSIFICATION	the other obj is null so see if this non-null obj contains a null value which is equivilent. assume that if we have read some of the data and we still have _data == null then the value in the db is actually null.
WITHOUT_CLASSIFICATION	uh-oh! we shouldn't have more than one plugin registering a custom exception handler for a given session. the first one wins and all others get an error message.
WITHOUT_CLASSIFICATION	pid 25493 lock examples 5 [" /db1/shd_data_4_3/"]user.ygwabvbposkorrd(1) 25493 1d 25499 x e 5 [" /db1/shd_data_4_3/"]user.ygwabvbposkorrd(1) 25493 1d 2549925506 xx ee 5 [" /db1/shd_data_4_3/"]user.ygwabvbposkorrd(1) 25493 1d 254992550625508 xxx eee oder 6 [" d\db\shd_data_lov\"]user.wlagerartikeld(76) 5544 1d 7 [" d\db\shd_data_lov\"]user.wlagerartikeld(77) 5544 1d 3804 s e 8 [" d\db\shd_data_lov\"]user.wvorgangd(24) 5544 1d oder fuer kein lock 3 [" f\db\shd_data\"]user.ygwatestd(989) 3792 1d 4 [" f\db\shd_data\"]user.ygwatestd(990) 3792 1d 5 [" f\db\shd_data\"]user.ygwatestd(991) 3792 1d 6 [" f\db\shd_data\"]user.ygwatestd(992) 3792 1d 7 [" f\db\shd_data\"]user.ygwatestd(993) 3792 1d 8 [" f\db\shd_data\"]user.ygwatestd(994) 3792 1d 9 [" f\db\shd_data\"]user.ygwatestd(995) 3792 1d
WITHOUT_CLASSIFICATION	/ the colums of the last completed table/view that match the tablenamepat will be returned on top of the collection
WITHOUT_CLASSIFICATION	if source column is type 1111 (other) try to use the column type name to find a type that isn't 1111.
WITHOUT_CLASSIFICATION	jdbc spec says that bit refers to a boolean column - i.e. a single binary digit with value either "0" or "1". also the same spec encourages use of getboolean/setboolean. however the sql-92 standard clearly states that the bit type is a bit string with length >= 0. so for sql-92 compliant databases (like postgresql) the jdbc spec's support for bit is at best broken and unusable. still we do what the jdbc spec suggests as that is all that we can do.
WITHOUT_CLASSIFICATION	only close the statement if sqlexception - otherwise it has to remain open until the resultset is read through by the caller.
WITHOUT_CLASSIFICATION	we still have to bind a value or else the ps will throw an exception.
WITHOUT_CLASSIFICATION	string sourceschema = null mysql uses catalogs instead of schemas
WITHOUT_CLASSIFICATION	column is in table 2 but not table 1 - how else would we get here??
WITHOUT_CLASSIFICATION	view name schema name
WITHOUT_CLASSIFICATION	new line to the begining so that sb.append( will be removed new line to the end so that a semi colon at the end will be removed.
WITHOUT_CLASSIFICATION	handle cases of null the processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	span across two columns c.ipadx = 40
WITHOUT_CLASSIFICATION	rows "12dlu 6dlu 12dlu 6dlu 80dlugrow 6dlu 12dlu 6dlu 80dlugrow 6dlu pref"
WITHOUT_CLASSIFICATION	expanders - trigger and index expanders are added inside the table expander
WITHOUT_CLASSIFICATION	oracle can only store decimal type numbers. since regular non-decimal numbers appear as "decimal" oracle's decimal numbers can be rather large compared to other databases (precision up to 38). other databases can only handle this large precision in bigint fields not decimal so try to figure out if oracle is really storing a bigint and claiming it is a decimal. if so convert the type to bigint before going any further.
WITHOUT_CLASSIFICATION	for char or date types this is the maximum number of characters for numeric or decimal types this is precision.
WITHOUT_CLASSIFICATION	this doesn't appear to work for progress rdbms result[i] = dbutil.gettablecount(con ti.getsimplename())
WITHOUT_CLASSIFICATION	todo tell the user that the selected destination schema is the same as the source schema. monitor.showmessagedialog()
WITHOUT_CLASSIFICATION	######################################################################## ########## events ######################################################################## ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	alter table ti.getsimplename() add foreign key (fktablecol) references pktablename(pktablecol)
WITHOUT_CLASSIFICATION	final applicationfiles appfiles = new applicationfiles() _exportprefstext.settext(getfilename(here appfiles.getuserpreferencesfile().getname())) _exportdriverstext.settext(getfilename(here appfiles.getdatabasedriversfile().getname())) _exportaliasestext.settext(getfilename(here appfiles.getdatabasealiasesfile().getname()))
WITHOUT_CLASSIFICATION	add context menu items to the object tree's session node. as popup menu
WITHOUT_CLASSIFICATION	variables ======================================================================== non visible ------------------------------------------------------------------------ logger for this class
WITHOUT_CLASSIFICATION	misc ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	######################################################################## ########## events ######################################################################## ------------------------------------------------------------------------ ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	"server" "port" "database file" "backup file"
WITHOUT_CLASSIFICATION	######################################################################## ########## events ######################################################################## ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	visible (gui) ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	dbstatus -> `status=online updateability=read_write useraccess=multi_user recovery=simple version=539 collation=sql_latin1_general_cp1_ci_as sqlsortorder=52 istornpagedetectionenabled isautocreatestatistic'
WITHOUT_CLASSIFICATION	for reasons that i cannot exmplain this is out by two probably due to the border or insets around a cell??
WITHOUT_CLASSIFICATION	if we don't invokelater here no short-cut-key is sent to the internal frame seen under java version "1.4.1_01" and linux
WITHOUT_CLASSIFICATION	expanders - trigger and index expanders are added inside the table expander
WITHOUT_CLASSIFICATION	tricky alias and chaining completion examples au to auftr in from kv auftr where au au to auftr in from kv.positionen.kv auftr where au positionen. to fields of kv aggregate positionen in from kv auftr where auftr.positionen. positionen. to fields of kv aggregate positionen in from kv where positionen.
WITHOUT_CLASSIFICATION	while attributes used in qualified expressions will not be completed qualified. that means for pack.foo. the completion popup will be placed behind the last dot.
WITHOUT_CLASSIFICATION	double space since this is a new version of the stored procedure (overloading name with different parameters)
WITHOUT_CLASSIFICATION	force the laf to be set even if skin is the current one. this allows a change in theme to take affect.
WITHOUT_CLASSIFICATION	_treeapi.addtopopup(databaseobjecttype.session coll.get(createtableaction.class)) _treeapi.addtopopup(databaseobjecttype.catalog coll.get(createtableaction.class))
WITHOUT_CLASSIFICATION	private final static ilogger s_log = loggercontroller.createlogger(createmysqltablescriptcommand.class)
WITHOUT_CLASSIFICATION	public columnscombobox(sqlconnection conn itableinfo ti) throws sqlexception { super(conn.getsqlmetadata().getcolumninfo(ti)) setrenderer(new cellrenderer()) } this renderer uses the unqualified column name as the text to display in the combo. private static final class cellrenderer extends basiccomboboxrenderer { cellrenderer() { super() setopaque(true) } public component getlistcellrenderercomponent(jlist list object value int index boolean isselected boolean cellhasfocus) { settext(((tablecolumninfo)value).getcolumnname()) return this } }
WITHOUT_CLASSIFICATION	in an effort to avoid non jdbc standard out parameter types ie oracle specific ones the dbms_output.get_line is used rather than the dbms_output.getlines. the disadvantage is there are more trips to the server to return multiple lines.
WITHOUT_CLASSIFICATION	if we don't invokelater here no short-cut-key is sent to the internal frame seen under java version "1.4.1_01" and linux
WITHOUT_CLASSIFICATION	folder within plugins folder that belongs to this plugin.
WITHOUT_CLASSIFICATION	variables ======================================================================== non visible ------------------------------------------------------------------------ logger for this class
WITHOUT_CLASSIFICATION	add the parameter names and types use the session id you got from the opensession call here
WITHOUT_CLASSIFICATION	action performed for the update button private void buttonupdateactionperformed(java.awt.event.actionevent evt) { string query = getquery() dbutils.execute(query) _dlog.setvisible(false) _dlog.dispose() joptionpane.showmessagedialog(null "field updated") }
WITHOUT_CLASSIFICATION	private static final ilogger s_log = loggercontroller.createlogger(userparentexpander.class)
WITHOUT_CLASSIFICATION	the treemodel interface
WITHOUT_CLASSIFICATION	sets constraints like not null for the new column depending on the constraints for the old column.
WITHOUT_CLASSIFICATION	dec 31 235959 est 2107 is overflow on fat file systems and the call fails
WITHOUT_CLASSIFICATION	the name of the calling client program. this is optional. if you don't want to give out this info please enter "n/a"
WITHOUT_CLASSIFICATION	string blink_caret = "blinkcaret" string block_caret_enabled = "blockcaretenabled" string bracket_highlighting = "brackethighlighting" string bracket_highlight_color = "brackethighlightcolor" string caret_color = "caretcolor"
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	jdk1.5 "@ident" annotation "@keyword" gets returned as two tokens "@" and "keyword"
WITHOUT_CLASSIFICATION	jdk1.5 "@ident" annotation "@keyword" gets returned as two tokens "@" and "keyword"
WITHOUT_CLASSIFICATION	old test left behind "garbage files" so this time it creates a directory that is guaranteed not to already exist (and deletes it afterward.)
WITHOUT_CLASSIFICATION	/ there are a lot of goodies in the extsettingsinitializer that might be interesting in th future. unfortunately some conflicts with some of squirrels shortcuts are in extsettingsinitializer settings.removeinitializer(extsettingsinitializer.name) settings.addinitializer(new extsettingsinitializer() settings.core_level) /
WITHOUT_CLASSIFICATION	these should be different since we are providing two different statement separators in sessionproperties
WITHOUT_CLASSIFICATION	we don't add a listener to a button twice because the finddialogsupport class will call this method with the same button instances whenever the replace dialog is opened. if we add the listener again and again replace will be done as often as the dialog is opened. this is especially nasty if the text to replace is part of the replacement text.
WITHOUT_CLASSIFICATION	mysql requires myisam storage engine for spatial and fulltext indexes. don't test them for now. see the todo in the mysqldialect for getcreateindexsql.
WITHOUT_CLASSIFICATION	these two columns will be the only ones in the pktest table. they will start out being nullable and we will test that the dialect correctly converts them to non-null then applies the pk constraint to them. this test shall not be run against any database dialect that claims not to support changing the nullability of a column.
WITHOUT_CLASSIFICATION	firebird gives weird exception unsuccessful metadata update object fktestparenttable is in use squelch it and continue.
WITHOUT_CLASSIFICATION	this test disabled for now until we figure out a better way to do concurrent modifications to the schemainfocache. @test
WITHOUT_CLASSIFICATION	these tell the dialect test runner where tables that is creates can be found.
WITHOUT_CLASSIFICATION	catalog schema tablename columnname datatype 1 == char typename columnsize decimaldigits radix isnullallowed defaultvalue isnullable
WITHOUT_CLASSIFICATION	private resultset mockresultset = null private static int[] columnindices = new int[] { 4 6 18 9 7 13 12 5 8 10 11 14 15 16 17 }
WITHOUT_CLASSIFICATION	if the directory exists add one to the directory number (making it a new directory name.)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.progresscallback#currentlyloading(java.lang.string)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getauthor()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getdescriptivename()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getinternalname()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getversion()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getauthor()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getdescriptivename()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getinternalname()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getversion()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.util.ioptionpanel#applychanges()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.util.ioptionpanel#getpanelcomponent()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.util.ioptionpanel#gettitle()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.util.ioptionpanel#gethint()
WITHOUT_CLASSIFICATION	@see isqlentrypanel#hasownundoablemanager()
WITHOUT_CLASSIFICATION	@see isqlentrypanel#getcaretlinenumber()
WITHOUT_CLASSIFICATION	@see isqlentrypanel#addcaretlistener(caretlistener)
WITHOUT_CLASSIFICATION	@see isqlentrypanel#removecaretlistener(caretlistener)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.session.isqlentrypanel#setundomanager(javax.swing.undo.undomanager)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.session.isqlpanelapi#fileappend()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.session.isqlpanelapi#fileclose()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.session.isqlpanelapi#filenew()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.session.isqlpanelapi#filesaveas()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.session.isqlpanelapi#fileopen()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.session.isqlpanelapi#fileprint()
WITHOUT_CLASSIFICATION	@see actionlistener#actionperformed(actionevent)
WITHOUT_CLASSIFICATION	@see mousemotionlistener#mousedragged(mouseevent)
WITHOUT_CLASSIFICATION	@see basedatasetviewerdestination#allrowsadded()
WITHOUT_CLASSIFICATION	@see idatasetviewer#getrowcount()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.datasetviewer.idataset#get(int)
WITHOUT_CLASSIFICATION	@see basedatasetviewerdestination#addrow(object[])
WITHOUT_CLASSIFICATION	@see basedatasetviewerdestination#getrow(row)
WITHOUT_CLASSIFICATION	@see basedatasetviewerdestination#allrowsadded()
WITHOUT_CLASSIFICATION	@see idatasetviewer#getrowcount()
WITHOUT_CLASSIFICATION	@see idatasetviewer#getrowcount()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.dialects.hibernatedialect#supportsschemasintabledefinition()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.dialects.hibernatedialect#getlengthfunction()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.dialects.hibernatedialect#getmaxfunction()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.dialects.hibernatedialect#getmaxprecision(int)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.dialects.hibernatedialect#getmaxscale(int)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.dialects.hibernatedialect#getprecisiondigits(int int)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.dialects.hibernatedialect#getcolumnlength(int int)
WITHOUT_CLASSIFICATION	@see mouselistener#mousepressed(mouseevent)
WITHOUT_CLASSIFICATION	@see mouselistener#mousereleased(mouseevent)
WITHOUT_CLASSIFICATION	@see mousemotionlistener#mousemoved(mouseevent)
WITHOUT_CLASSIFICATION	@see tablecellrenderer#gettablecellrenderercomponent(jtable object boolean boolean int int)
WITHOUT_CLASSIFICATION	@see tablemodel#getcolumnname(int)
WITHOUT_CLASSIFICATION	@see tablemodel#getcolumnclass(int)
WITHOUT_CLASSIFICATION	@see comparator#compare(object object)
WITHOUT_CLASSIFICATION	(non-javadoc) @see java.awt.datatransfer.transferable#gettransferdataflavors()
WITHOUT_CLASSIFICATION	(non-javadoc) @see java.awt.datatransfer.transferable#isdataflavorsupported(java.awt.datatransfer.dataflavor)
WITHOUT_CLASSIFICATION	(non-javadoc) @see java.awt.datatransfer.transferable#gettransferdata(java.awt.datatransfer.dataflavor)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.iquerytokenizer#getsqlstatementseparator()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.isqldatabasemetadata#getusername()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.isqldatabasemetadata#getdatabaseproductname()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.isqldatabasemetadata#getdatabaseproductversion()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.isqldatabasemetadata#getdrivername()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.isqldatabasemetadata#getjdbcversion()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.isqldatabasemetadata#getcascadeclause()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.isqldatabasemetadata#supportsschemas()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.isqldatabasemetadata#supportsschemasindatamanipulation()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.isqldatabasemetadata#supportsschemasintabledefinitions()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.isqldatabasemetadata#supportsstoredprocedures()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.isqldatabasemetadata#supportssavepoints()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.isqldatabasemetadata#supportsresultsettype(int)
WITHOUT_CLASSIFICATION	not cached. (non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.isqldatabasemetadata#getcatalogs()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.isqldatabasemetadata#geturl()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.isqldatabasemetadata#getcatalogterm()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.isqldatabasemetadata#getschematerm()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.isqldatabasemetadata#getprocedureterm()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.isqldatabasemetadata#getcatalogseparator()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.isqldatabasemetadata#supportscatalogs()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.isqldatabasemetadata#supportscatalogsintabledefinitions()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.isqldatabasemetadata#supportscatalogsindatamanipulation()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.isqldatabasemetadata#supportscatalogsinprocedurecalls()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.isqldatabasemetadata#getjdbcmetadata()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.isqldatabasemetadata#getmetadataset()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.isqldatabasemetadata#gettypeinfo() @deprecated replaced by getdatatypes
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.isqldatabasemetadata#gettypesdataset()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.isqldatabasemetadata#getdatatypes()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.isqldatabasemetadata#getprocedures(java.lang.string java.lang.string java.lang.string net.sourceforge.squirrel_sql.fw.sql.progresscallback)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.isqldatabasemetadata#gettabletypes()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.isqldatabasemetadata#gettables(java.lang.string java.lang.string java.lang.string java.lang.string[] net.sourceforge.squirrel_sql.fw.sql.progresscallback)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.isqldatabasemetadata#getudts(java.lang.string java.lang.string java.lang.string int[])
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.isqldatabasemetadata#getnumericfunctions()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.isqldatabasemetadata#getstringfunctions()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.isqldatabasemetadata#getsystemfunctions()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.isqldatabasemetadata#gettimedatefunctions()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.isqldatabasemetadata#getsqlkeywords()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.isqldatabasemetadata#getimportedkeysinfo(net.sourceforge.squirrel_sql.fw.sql.itableinfo)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.isqldatabasemetadata#getprimarykeys(net.sourceforge.squirrel_sql.fw.sql.itableinfo) @deprecated use getprimarykey instead
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.isqldatabasemetadata#getprimarykey(net.sourceforge.squirrel_sql.fw.sql.itableinfo)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.isqldatabasemetadata#getprimarykey(java.lang.string java.lang.string java.lang.string)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.isqldatabasemetadata#getprocedurecolumns(net.sourceforge.squirrel_sql.fw.sql.iprocedureinfo) @deprecated use getprocedurecolumnsdataset instead
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.isqldatabasemetadata#gettableprivileges(net.sourceforge.squirrel_sql.fw.sql.itableinfo) @deprecated use gettableprivilegesdataset instead
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.isqldatabasemetadata#getversioncolumns(net.sourceforge.squirrel_sql.fw.sql.itableinfo) @deprecated use getversioncolumnsdataset instead
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.isqldatabasemetadata#getcolumninfo(java.lang.string java.lang.string java.lang.string)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.isqldatabasemetadata#getcolumninfo(net.sourceforge.squirrel_sql.fw.sql.itableinfo)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.isqldriver#getwebsiteurl()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.isqldriver#setwebsiteurl(java.lang.string)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.metadatadataset#get(int)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.metadatadataset#next(net.sourceforge.squirrel_sql.fw.util.imessagehandler)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.itableinfo#getexportedkeys()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.itableinfo#getimportedkeys()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.preferences.iglobalpreferencespanel#initialize(net.sourceforge.squirrel_sql.client.iapplication)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.preferences.iglobalpreferencespanel#uninitialize(net.sourceforge.squirrel_sql.client.iapplication)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.util.ioptionpanel#applychanges()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.util.ioptionpanel#gethint()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.util.ioptionpanel#getpanelcomponent()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.util.ioptionpanel#gettitle()
WITHOUT_CLASSIFICATION	(non-javadoc) @see javax.swing.table.tablemodel#getcolumncount()
WITHOUT_CLASSIFICATION	(non-javadoc) @see javax.swing.table.tablemodel#getrowcount()
WITHOUT_CLASSIFICATION	(non-javadoc) @see javax.swing.table.tablemodel#getvalueat(int int)
WITHOUT_CLASSIFICATION	(non-javadoc) @see javax.swing.table.abstracttablemodel#iscelleditable(int int)
WITHOUT_CLASSIFICATION	(non-javadoc) @see javax.swing.table.abstracttablemodel#setvalueat(java.lang.object int int)
WITHOUT_CLASSIFICATION	(non-javadoc) @see javax.swing.table.abstracttablemodel#getcolumnname(int)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.ifileimporter#open()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.ifileimporter#close()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.ifileimporter#getpreview(int)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.ifileimporter#getrows()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.ifileimporter#next()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.ifileimporter#reset()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.ifileimporter#getint(int)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.ifileimporter#getdate(int)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.ifileimporter#getconfigurationpanel()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.ifileimporter#open()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.ifileimporter#close()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.ifileimporter#getpreview(int)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.ifileimporter#reset()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.ifileimporter#getrows()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.ifileimporter#next()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.ifileimporter#getint(int)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.ifileimporter#getdate(int)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.ifileimporter#getconfigurationpanel()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.copytablelistener#copystarted(net.sourceforge.squirrel_sql.plugins.dbcopy.event.copyevent)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.copytablelistener#statementexecuted(net.sourceforge.squirrel_sql.plugins.dbcopy.event.statementevent)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.copytablelistener#copyfinished(int)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.copytablelistener#copystarted()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.copytablelistener#tablecopystarted(net.sourceforge.squirrel_sql.plugins.dbcopy.event.tableevent)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.copytablelistener#recordcopied(net.sourceforge.squirrel_sql.plugins.dbcopy.event.recordevent)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.copytablelistener#statementexecuted(net.sourceforge.squirrel_sql.plugins.dbcopy.event.statementevent)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.copytablelistener#tablecopyfinished(net.sourceforge.squirrel_sql.plugins.dbcopy.event.tableevent)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.copytablelistener#copyfinished(int)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.copytablelistener#handleerror(net.sourceforge.squirrel_sql.plugins.dbcopy.event.errorevent)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.copypreference#deletetabledata(java.lang.string)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.copytablelistener#analyzingtable(net.sourceforge.squirrel_sql.plugins.dbcopy.event.tableevent)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.copytablelistener#tableanalysisstarted(net.sourceforge.squirrel_sql.plugins.dbcopy.event.analysisevent)
WITHOUT_CLASSIFICATION	(non-javadoc) @see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.copytablelistener#analyzingtable(net.sourceforge.squirrel_sql.plugins.dbcopy.event.tableevent)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.copytablelistener#tableanalysisstarted(net.sourceforge.squirrel_sql.plugins.dbcopy.event.analysisevent)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.copytablelistener#copystarted(net.sourceforge.squirrel_sql.plugins.dbcopy.event.copyevent)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.copytablelistener#tablecopystarted(net.sourceforge.squirrel_sql.plugins.dbcopy.event.tableevent)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.copytablelistener#tablecopyfinished(net.sourceforge.squirrel_sql.plugins.dbcopy.event.tableevent)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.copytablelistener#recordcopied(net.sourceforge.squirrel_sql.plugins.dbcopy.event.recordevent)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.copytablelistener#statementexecuted(net.sourceforge.squirrel_sql.plugins.dbcopy.event.statementevent)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.copytablelistener#copyfinished(int)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.copytablelistener#handleerror(net.sourceforge.squirrel_sql.plugins.dbcopy.event.errorevent)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.util.ioptionpanel#applychanges()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.util.ioptionpanel#getpanelcomponent()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.util.ioptionpanel#gettitle()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.util.ioptionpanel#gethint()
WITHOUT_CLASSIFICATION	(non-javadoc) @see java.lang.runnable#run()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.sessioninfoprovider#getdestselecteddatabaseobject()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.sessioninfoprovider#setdestselecteddatabaseobject(net.sourceforge.squirrel_sql.fw.sql.idatabaseobjectinfo)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getexternalservice()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getlicencefilename()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getnewsessionpropertiespanels()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getpluginappsettingsfolder()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getpluginusersettingsfolder()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#load(net.sourceforge.squirrel_sql.client.iapplication)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#unload()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getinternalname()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getversion()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.isessionplugin#sessionstarted(net.sourceforge.squirrel_sql.client.session.isession)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getinternalname()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getdescriptivename()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getauthor()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.defaultplugin#getcontributors()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getversion()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.sessioninfoprovider#getcopysourcesession()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.sessioninfoprovider#setcopysourcesession(net.sourceforge.squirrel_sql.client.session.isession)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.sessioninfoprovider#getselecteddatabaseobjects()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.sessioninfoprovider#getcopydestsession()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.sessioninfoprovider#setdestcopysession(net.sourceforge.squirrel_sql.client.session.isession)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.sessioninfoprovider#getdestselecteddatabaseobject()
WITHOUT_CLASSIFICATION	(non-javadoc) @see java.util.comparator#compare(java.lang.object java.lang.object)
WITHOUT_CLASSIFICATION	(non-javadoc) @see javax.swing.table.defaulttablemodel#getcolumncount()
WITHOUT_CLASSIFICATION	(non-javadoc) @see javax.swing.table.defaulttablemodel#getcolumnname(int)
WITHOUT_CLASSIFICATION	(non-javadoc) @see javax.swing.table.defaulttablemodel#getrowcount()
WITHOUT_CLASSIFICATION	(non-javadoc) @see javax.swing.table.defaulttablemodel#getvalueat(int int)
WITHOUT_CLASSIFICATION	(non-javadoc) @see javax.swing.table.defaulttablemodel#getcolumncount()
WITHOUT_CLASSIFICATION	(non-javadoc) @see javax.swing.table.defaulttablemodel#getcolumnname(int)
WITHOUT_CLASSIFICATION	(non-javadoc) @see javax.swing.table.defaulttablemodel#getrowcount()
WITHOUT_CLASSIFICATION	(non-javadoc) @see javax.swing.table.defaulttablemodel#getvalueat(int int)
WITHOUT_CLASSIFICATION	(non-javadoc) @see javax.swing.table.defaulttablemodel#iscelleditable(int int)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getauthor()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getdescriptivename()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getinternalname()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getversion()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.util.ioptionpanel#gethint()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.util.ioptionpanel#getpanelcomponent()
WITHOUT_CLASSIFICATION	idatatypecomponent interface methods @see net.sourceforge.squirrel_sql.fw.datasetviewer.cellcomponent.idatatypecomponent#candofileio()
WITHOUT_CLASSIFICATION	idatatypecomponent interface methods @see net.sourceforge.squirrel_sql.fw.datasetviewer.cellcomponent.idatatypecomponent#candofileio()
WITHOUT_CLASSIFICATION	idatatypecomponent interface methods @see net.sourceforge.squirrel_sql.fw.datasetviewer.cellcomponent.idatatypecomponent#candofileio()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.util.ioptionpanel#applychanges()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.util.ioptionpanel#getpanelcomponent()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.util.ioptionpanel#gettitle()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.util.ioptionpanel#gethint()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getauthor()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getdescriptivename()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getinternalname()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getversion()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.plugins.smarttools.gui.ismarttoolframe#setfocustofirstemptyinputfield()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.preferences.iglobalpreferencespanel#initialize(net.sourceforge.squirrel_sql.client.iapplication)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.preferences.iglobalpreferencespanel#uninitialize(net.sourceforge.squirrel_sql.client.iapplication)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.util.ioptionpanel#applychanges()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.util.ioptionpanel#gethint()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.util.ioptionpanel#getpanelcomponent() return the panel that will contain the prefernces ui. @return panel containing preferences.
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.util.ioptionpanel#gettitle()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.session.event.isqlexecutionlistener#statementexecuted(java.lang.string)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.session.event.isqlexecutionlistener#statementexecuting(java.lang.string)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.util.ioptionpanel#applychanges()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.util.ioptionpanel#getpanelcomponent()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.util.ioptionpanel#gettitle()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.util.ioptionpanel#gethint()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.session.isqlentrypanel#setundomanager(javax.swing.undo.undomanager)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.session.isqlentrypanel#setundomanager(javax.swing.undo.undomanager)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getexternalservice()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getglobalpreferencepanels()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#gethelpfilename()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getlicencefilename()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getnewsessionpropertiespanels()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getpluginappsettingsfolder()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getpluginusersettingsfolder()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getwebsite()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#load(net.sourceforge.squirrel_sql.client.iapplication)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#unload()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getinternalname()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getdescriptivename()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getauthor()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getversion()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#load(net.sourceforge.squirrel_sql.client.iapplication)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getinternalname()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getdescriptivename()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getauthor()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getversion()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getexternalservice()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getglobalpreferencepanels()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#gethelpfilename()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getlicencefilename()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getnewsessionpropertiespanels()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#getpluginappsettingsfolder()
WITHOUT_CLASSIFICATION	(non-javadoc) @see java.lang.comparable#compareto(java.lang.object)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.sqldatabasemetadata#getexportedkeysinfo(net.sourceforge.squirrel_sql.fw.sql.itableinfo)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.sqldatabasemetadata#getimportedkeysinfo(net.sourceforge.squirrel_sql.fw.sql.itableinfo)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.itableinfo#getexportedkeys()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.itableinfo#getimportedkeys()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.itableinfo#setexportedkeys(net.sourceforge.squirrel_sql.fw.sql.foreignkeyinfo[])
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.sql.itableinfo#setimportedkeys(net.sourceforge.squirrel_sql.fw.sql.foreignkeyinfo[])
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.fw.util.imessagehandler#showwarningmessage(java.lang.string)
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportsschemasindatamanipulation()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportscatalogsindatamanipulation()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#gettabletypes()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#getdatabaseproductname()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#getdatabaseproductname()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#allproceduresarecallable()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#alltablesareselectable()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#deletesaredetected(int)
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#doesmaxrowsizeincludeblobs()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#insertsaredetected(int)
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#iscatalogatstart()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#isreadonly()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#locatorsupdatecopy()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#nullplusnonnullisnull()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#nullsaresortedatend()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#nullsaresortedatstart()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#nullsaresortedlow()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#othersdeletesarevisible(int)
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#othersinsertsarevisible(int)
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#othersupdatesarevisible(int)
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#owndeletesarevisible(int)
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#owninsertsarevisible(int)
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#ownupdatesarevisible(int)
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#setupdrivername(java.lang.string)
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#storeslowercaseidentifiers()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#storeslowercasequotedidentifiers()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#storesmixedcaseidentifiers()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#storesmixedcasequotedidentifiers()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#storesuppercaseidentifiers()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#storesuppercasequotedidentifiers()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportsaltertablewithaddcolumn()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportsaltertablewithdropcolumn()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportsansi92entrylevelsql()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportsansi92fullsql()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportsansi92intermediatesql()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportsbatchupdates()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportscatalogsinindexdefinitions()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportscatalogsinprivilegedefinitions()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportscatalogsinprocedurecalls()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportscatalogsintabledefinitions()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportscolumnaliasing()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportsconvert()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportsconvert(int int)
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportscoresqlgrammar()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportscorrelatedsubqueries()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportsdatadefinitionanddatamanipulationtransactions()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportsdatamanipulationtransactionsonly()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportsdifferenttablecorrelationnames()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportsexpressionsinorderby()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportsextendedsqlgrammar()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportsfullouterjoins()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportsgetgeneratedkeys()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportsgroupby()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportsgroupbybeyondselect()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportsgroupbyunrelated()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportsintegrityenhancementfacility()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportslikeescapeclause()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportslimitedouterjoins()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportsminimumsqlgrammar()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportsmixedcaseidentifiers()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportsmixedcasequotedidentifiers()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportsmultipleopenresults()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportsmultipleresultsets()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportsmultipletransactions()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportsnamedparameters()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportsnonnullablecolumns()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportsopencursorsacrosscommit()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportsopencursorsacrossrollback()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportsopenstatementsacrosscommit()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportsopenstatementsacrossrollback()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportsorderbyunrelated()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportsouterjoins()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportspositioneddelete()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportspositionedupdate()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportsresultsetconcurrency(int int)
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportsresultsetholdability(int)
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportsresultsettype(int)
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportssavepoints()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportsschemasinindexdefinitions()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportsschemasinprivilegedefinitions()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportsschemasinprocedurecalls()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportsschemasintabledefinitions()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportsselectforupdate()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportsstatementpooling()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportsstoredprocedures()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportssubqueriesincomparisons()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportssubqueriesinexists()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportssubqueriesinins()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportssubqueriesinquantifieds()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportstablecorrelationnames()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportstransactionisolationlevel(int)
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportstransactions()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportsunion()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#supportsunionall()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#updatesaredetected(int)
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#useslocalfilepertable()
WITHOUT_CLASSIFICATION	(non-javadoc) @see com.mockobjects.sql.mockdatabasemetadata#useslocalfiles()
WITHOUT_CLASSIFICATION	(non-javadoc) @see java.lang.comparable#compareto(java.lang.object)
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.session.mainpanel.basemainpaneltab#refreshcomponent()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.session.mainpanel.imainpaneltab#getcomponent()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.session.mainpanel.imainpaneltab#gethint()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.session.mainpanel.imainpaneltab#gettitle()
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	??
WITHOUT_CLASSIFICATION	nothing to do.
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	ignore.
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore.
WITHOUT_CLASSIFICATION	ignore.
WITHOUT_CLASSIFICATION	ignore.
WITHOUT_CLASSIFICATION	ignore.
WITHOUT_CLASSIFICATION	ignore.
WITHOUT_CLASSIFICATION	ignore.
WITHOUT_CLASSIFICATION	errors
WITHOUT_CLASSIFICATION	errors
WITHOUT_CLASSIFICATION	errors
WITHOUT_CLASSIFICATION	errors
WITHOUT_CLASSIFICATION	errors
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	else
WITHOUT_CLASSIFICATION	??
WITHOUT_CLASSIFICATION	save application level sql history.
WITHOUT_CLASSIFICATION	save options selected for cell import export operations
WITHOUT_CLASSIFICATION	save options selected for edit where columns
WITHOUT_CLASSIFICATION	aliasmaintsheetfactory.initialize(this) drivermaintsheetfactory.initialize(this)
WITHOUT_CLASSIFICATION	aliasmaintsheetfactory.initialize(this) drivermaintsheetfactory.initialize(this)
WITHOUT_CLASSIFICATION	i18n[sqlhistorydlg.filtercbostartswith=starts with]
WITHOUT_CLASSIFICATION	i18n[sqlval.info=this plugin uses version 1.0 of the sql validator web service developed by mimersql httpsqlvalidator.mimer.com. the sql statement is stored anonymously to be used by the iso sql standards committee.]
WITHOUT_CLASSIFICATION	i18n[datatypeother.sqlothertype=sql other (sql type 1111)]
WITHOUT_CLASSIFICATION	i18n[editextras.month=month]
WITHOUT_CLASSIFICATION	i18n[aboutboxdialog.error.creditsfile=error reading credits file]
WITHOUT_CLASSIFICATION	i18n[popupeditableiopanel.errorreadingfile=there was an error while reading file {0}.\nthe error was\n{1}]
WITHOUT_CLASSIFICATION	i18n[createtablescriptcommand.jdbcodbcmessage=jdbc-odbc bridge doesn't provide all of the necessary metadata. the script may be incomplete.]
WITHOUT_CLASSIFICATION	i18n[updatesummarydialog.close=close]
WITHOUT_CLASSIFICATION	i18n[userscript.dlgtabscriptsexecute=execute]
WITHOUT_CLASSIFICATION	i18n[db2plugin.showviewsource=show view source]
WITHOUT_CLASSIFICATION	i18n[downloadstatuseventhandler.updatedownloadfailedtitle=update download failed]
WITHOUT_CLASSIFICATION	create checkbox for enabling auto refresh i18n[oracle.dboutputenableautorefer=enable auto refresh]
WITHOUT_CLASSIFICATION	i18n[datacache.msg.driverregisteredsucessfully=driver class {0} sucessfully registered for driver definition {1}]
WITHOUT_CLASSIFICATION	i18n[datasetviewereditabletablepanel.error2=error]
WITHOUT_CLASSIFICATION	i18n[abstractrefactoringdialog.executebuttonlabel=execute]
WITHOUT_CLASSIFICATION	i18n[popupeditableiopanel.exporterror6=export error]
WITHOUT_CLASSIFICATION	i18n[datatypebigdecimal.precisioneceeded=precision exceeded number of digits in number ({0})\nis greater than allowed in column ({1})]
WITHOUT_CLASSIFICATION	i18n[editextras.second=second]
WITHOUT_CLASSIFICATION	i18n[mssql.windows=windows text (ansi)]
WITHOUT_CLASSIFICATION	i18n[db2plugin.showudfsource=show udf source]
WITHOUT_CLASSIFICATION	i18n[application.splash.loadsqlhistory=loading sql history]
WITHOUT_CLASSIFICATION	i18n[abstractrefactoringdialog.tablenamelabel=table name ]
WITHOUT_CLASSIFICATION	i18n[derbydialect.typemessage=derby doesn't allow the column type to be altered]
WITHOUT_CLASSIFICATION	i18n[exportconfig.xmlerrorwritingto=xml error writing to\n{0}]
WITHOUT_CLASSIFICATION	i18n[popupeditableiopanel.exporterror2=export error]
WITHOUT_CLASSIFICATION	i18n[droptabledialog.cataloglabel=catalog]
WITHOUT_CLASSIFICATION	i18n[oracle.parsecalla=parse calls]
WITHOUT_CLASSIFICATION	i18n[datasetupdateabletablemodelimpl.error.unknownerror=unknown error during check on db. update is probably not safe.\ndo you wish to proceed?]
WITHOUT_CLASSIFICATION	i18n[graph.scriptplugneeded=scripting is only available with the sql scripts plugin.\nget the plugin from www.squirrelsql.org. it's free.]
WITHOUT_CLASSIFICATION	i18n[columnlistdialog.tablenamelabel=table name ]
WITHOUT_CLASSIFICATION	i18n[editextras.year=year]
WITHOUT_CLASSIFICATION	i18n[application.splash.loaddatatypeprops=loading data type properties]
WITHOUT_CLASSIFICATION	i18n[oracle.triggerdetails=details]
WITHOUT_CLASSIFICATION	i18n[graph.showzoompaper=show/zoom paper edges]
WITHOUT_CLASSIFICATION	i18n[sequencedetailstab.title=details]
WITHOUT_CLASSIFICATION	i18n[datatypeunknown.unknowntypes=unknown datatypes (non-standard sql type codes)]
WITHOUT_CLASSIFICATION	i18n[mssql.cancel=cancel]
WITHOUT_CLASSIFICATION	i18n[pastetableaction.error.multischemapaste=the paste operation may only be applied to one schema at a time]
WITHOUT_CLASSIFICATION	i18n[graph.showddl=show ddl]
WITHOUT_CLASSIFICATION	i18n[schemapropertiespanel.hint=here you may pecify which schemas to be loaded and displayed in a session's object tree. code completion and syntax highlighting will work only for loaded schemas. if schemas take a long time to load you may cache them on your hard disk. then loading will take long only when you open a session for the first time. you can always refesh the cache either by using the session's 'refresh all' toolbar button or by using the 'refresh item' right mouse menu on an object tree node.]
WITHOUT_CLASSIFICATION	i18n[hibernatetabcontroller.noconfigselected=please select a hibernate configuration to connect to.\nhibernate configurations can be defined in the global preferences window.\nwould you like to open the window now?]
WITHOUT_CLASSIFICATION	i18n[updatesummarytable.alltranslationslabel=all translations]
WITHOUT_CLASSIFICATION	i18n[sqlval.logon=sql validation logon]
WITHOUT_CLASSIFICATION	i18n[sqlhistorydlg.filtercboendswith=ends with]
WITHOUT_CLASSIFICATION	i18n[createtableofcurrentsqlcommand.noquery=no query found to create the script from.]
WITHOUT_CLASSIFICATION	i18n[sqlscript.dropifexists=drop table if exists]
WITHOUT_CLASSIFICATION	i18n[datasetupdateabletablemodelimpl.error.updateproblem=there was a problem reported during the update. the db message was\n{0}\nthis may or may not be serious depending on the above message.\nthe data was probably not changed in the database.\nyou may need to refresh the table to get an accurate view of the current data.]
WITHOUT_CLASSIFICATION	i18n[popupeditableiopanel.selectimportdatafile=you must select an existing file to import data from.]
WITHOUT_CLASSIFICATION	i18n[sqlscript.tablescriptok=ok]
WITHOUT_CLASSIFICATION	i18n[datatypebigdecimal.newlinesasbackslashn=show newlines as \\n within cells]
WITHOUT_CLASSIFICATION	create checkbox for enabling auto refresh i18n[oracle.auotrefresh2=enable auto refresh]
WITHOUT_CLASSIFICATION	i18n[aboutboxdialog.creditspanelcreatetime=creditspanel created in ]
WITHOUT_CLASSIFICATION	i18n[graph.cm=cm]
WITHOUT_CLASSIFICATION	i18n[updatesummarytable.allpluginslabel=all plugins]
WITHOUT_CLASSIFICATION	checkbox for whether to interpret input leniently or not i18n[datetypetimestamp.allowinexact=allow inexact format on input]
WITHOUT_CLASSIFICATION	i18n[sqlscript.configyourmultitablescriptconstr=include constraints to tables not in selection]
WITHOUT_CLASSIFICATION	i18n[sqltab.hint=execute sql statements]
WITHOUT_CLASSIFICATION	i18n[downloadstatuseventhandler.changesrecordedtitle=changes recorded]
WITHOUT_CLASSIFICATION	i18n[rowdatainputframe.coldescription=\ncolumn\ndescription\n]
WITHOUT_CLASSIFICATION	i18n[syntax.cols=columns]
WITHOUT_CLASSIFICATION	i18n[updatepreferencespanel.connectionfailuredialogmsg=unable to download release.xml from the specified location]
WITHOUT_CLASSIFICATION	i18n[sqlresultexecuterpanel.closeallbutthis=close all but this]
WITHOUT_CLASSIFICATION	i18n[graph.printgraph=print graph]
WITHOUT_CLASSIFICATION	i18n[mysql.enterdbname=enter database name]
WITHOUT_CLASSIFICATION	i18n[userscript.dlgtabscriptsedit=edit]
WITHOUT_CLASSIFICATION	i18n[xmlreformatter.xmlwarning5=xml warning]
WITHOUT_CLASSIFICATION	i18n[popupeditableiopanel.importerror2=import error]
WITHOUT_CLASSIFICATION	i18n[baselistinternalframe.error.execdoubleclick=error occured executing doubleclick event]
WITHOUT_CLASSIFICATION	i18n[udfdetailstab.hint=display udf details]
WITHOUT_CLASSIFICATION	i18n[colorpropertiespanel.statusbarbackgroundcolorchooserdialogtitle=select background color for status bar]
WITHOUT_CLASSIFICATION	i18n[helpviewerwindow.error.loadfaqfile=error retrieving faq from url = {0}]
WITHOUT_CLASSIFICATION	i18n[generalsessionpropertiespanel.metadata=meta data]
WITHOUT_CLASSIFICATION	i18n[csvsettingspanel.usetab=tab seperated]
WITHOUT_CLASSIFICATION	i18n[aboutboxdialog.aboutpanelcreatetime=aboutpanel created in ]
WITHOUT_CLASSIFICATION	i18n[columnlistdialog.columnnamelabel=column ]
WITHOUT_CLASSIFICATION	i18n[csvsettingspanel.inputfileencoding=input file encoding]
WITHOUT_CLASSIFICATION	i18n[graph.delgraph=do you really wish to delete this graph?]
WITHOUT_CLASSIFICATION	i18n[sqlval.dbmsversion=dbms version]
WITHOUT_CLASSIFICATION	some kind of problem - tell user i18n[datasetupdateabletablemodelimpl.error.preparingdelete=while preparing for delete saw exception\n{0}]
WITHOUT_CLASSIFICATION	i18n[importdataintotableexecutor.ioexception=an error occured while reading the input file.]
WITHOUT_CLASSIFICATION	i18n[datatypedate.medium=medium ({0})]
WITHOUT_CLASSIFICATION	i18n[graph.btnok=ok]
WITHOUT_CLASSIFICATION	i18n[dualprogressbardialog.cancelbuttonlabel=cancel]
WITHOUT_CLASSIFICATION	i18n[session.drivercompliancetitle=jre/jdbc version mismatch]
WITHOUT_CLASSIFICATION	i18n[downloadstatuseventhandler.filelabel=file]
WITHOUT_CLASSIFICATION	i18n[datetypetimestamp.jdbcescape=use jdbc standard escape format ]
WITHOUT_CLASSIFICATION	i18n[syntax.background=select background color]
WITHOUT_CLASSIFICATION	i18n[colorpropertiespanel.toolbarbackgroundcolorchooserdialogtitle=select background color for toolbar]
WITHOUT_CLASSIFICATION	i18n[refactoringpreferencespanel.quotetooltip=identifiers appear in quotes]
WITHOUT_CLASSIFICATION	i18n[sqlscript.successcreate=successfully created table {0}]
WITHOUT_CLASSIFICATION	i18n[tableexportcsvcontroller.nocommand=you must provide a command string or uncheck "execute command".]
WITHOUT_CLASSIFICATION	i18n[graph.removegraph=remove graph]
WITHOUT_CLASSIFICATION	i18n[datasetupdateabletablemodelimpl.error.staleupdaterow=this row in the database has been changed since you refreshed the data.\nno rows will be updated by this operation.\ndo you wish to proceed?]
WITHOUT_CLASSIFICATION	i18n[popupeditableiopanel.importwarning=import warning]
WITHOUT_CLASSIFICATION	i18n[graph.dina4=din a 4]
WITHOUT_CLASSIFICATION	i18n
WITHOUT_CLASSIFICATION	i18n[sqlfiltersheet.okbuttonlabel=ok]
WITHOUT_CLASSIFICATION	i18n[graph.width=width]
WITHOUT_CLASSIFICATION	i18n[columndetailsdialog.showbuttonlabel=show sql]
WITHOUT_CLASSIFICATION	i18n[columndetailsdialog.addcolumntitle=add column]
WITHOUT_CLASSIFICATION	i18n[syntaxplugin.duplicateline=duplicateline]
WITHOUT_CLASSIFICATION	i18n[userscript.executing=executing script]
WITHOUT_CLASSIFICATION	i18n[helpviewerwindow.faq=faq]
WITHOUT_CLASSIFICATION	i18n[editextrasaccessor.editextraspluginneeded=quoting is only available with the edit extras plugin.\nget the plugin from www.squirrelsql.org. it's free.]
WITHOUT_CLASSIFICATION	i18n[triggerdetailstab.hint=display trigger details]
WITHOUT_CLASSIFICATION	i18n[dbutil.error.firebirdcommit=firebird requires commit table create before inserting records. please adjust your preferences.]
WITHOUT_CLASSIFICATION	i18n[userscript.selclasspathtodel=please select the classpath entry to delete]
WITHOUT_CLASSIFICATION	i18n[editwherecolspanel.usepklabel=use pk]
WITHOUT_CLASSIFICATION	i18n[graph.selgraphtoadd=select the graph to add the selected tables to]
WITHOUT_CLASSIFICATION	i18n[schemapropertiescontroller.cachefilepath=cache file path for alias "{0}" {1}]
WITHOUT_CLASSIFICATION	i18n[datatypetimestamp.medium=medium ({0})]
WITHOUT_CLASSIFICATION	i18n[sqlhistorydlg.close=close]
WITHOUT_CLASSIFICATION	i18n[generalsessionpropertiespanel.showtoolbar=show toolbar]
WITHOUT_CLASSIFICATION	i18n[tableexportcsvcommand.missingclobdatamsg=found clob placeholder ({0}) amongst data to be exported. continue exporting cell data?]
WITHOUT_CLASSIFICATION	i18n[dualprogressbardialog.copyingtableslabel=copying table]
WITHOUT_CLASSIFICATION	i18n[graph.dborder=db order]
WITHOUT_CLASSIFICATION	i18n[graph.invalidheight=invalid height]
WITHOUT_CLASSIFICATION	i18n[hibernateconfigpanel.classpathremove=remove selected entries]
WITHOUT_CLASSIFICATION	i18n[datasetupdateabletablemodelimpl.error.unknownerror=unknown error during check on db. update is probably not safe.\ndo you wish to proceed?]
WITHOUT_CLASSIFICATION	i18n[aboutboxdialog.error.creditsfileurl=couldn't retrieve credits file url]
WITHOUT_CLASSIFICATION	i18n[editextras.errorquotesql=error processing quote sql command {0}]
WITHOUT_CLASSIFICATION	i18n[mssql.fileoptions=file options]
WITHOUT_CLASSIFICATION	i18n[userscript.dlgtabscriptsremove2=remove]
WITHOUT_CLASSIFICATION	i18n[sequencedetailstab.hint=display sequence details]
WITHOUT_CLASSIFICATION	i18n[memorypanel.rungc=run garbage collection]
WITHOUT_CLASSIFICATION	i18n[splashscreen.error.updatingprogressbar=error occured updating progress bar]
WITHOUT_CLASSIFICATION	i18n[datasetupdateabletablemodelimpl.error.exceptionduringcheck=exception seen during check on db. exception was\n{0}\nupdate is probably not safe to do.\ndo you wish to proceed?]
WITHOUT_CLASSIFICATION	i18n[codecompletion.prefstabtitle=code completion]
WITHOUT_CLASSIFICATION	i18n[dataimportglobalpreferencestab.hint=preferences for data import]
WITHOUT_CLASSIFICATION	i18n[updatepreferencespanel.autocheckfrequency=how often to check for updates]
WITHOUT_CLASSIFICATION	i18n[abstractrefactoringdialog.tablenamelabel=table name ]
WITHOUT_CLASSIFICATION	i18n[application.splash.loadcellselections=loading cell import/export selections]
WITHOUT_CLASSIFICATION	i18n[application.info.jdbcwriter=attempting to set jdbc debug log to writer]
WITHOUT_CLASSIFICATION	i18n[droptabledialog.tablelabel=table(s)]
WITHOUT_CLASSIFICATION	i18n[factoryproviderdialog.desc=please enter the fully qualified class name of a sessionfactorimpl provider class. the compiled class file must be in one of your additional classpath entries.]
WITHOUT_CLASSIFICATION	i18n[helpviewerwindow.error.loadpluginhelp=error generating help entry for plugin {0}]
WITHOUT_CLASSIFICATION	i18n[mssql.ok=ok]
WITHOUT_CLASSIFICATION	label for type combo - used to enable/disable text associated with the combo i18n[datatypebigdecimal.read2=read]
WITHOUT_CLASSIFICATION	i18n[hashtabledataset.key=key]
WITHOUT_CLASSIFICATION	i18n[codecompletion.function.mustendwith=function must end with '']
WITHOUT_CLASSIFICATION	i18n[copydriveraction.error.selectingwindow=error selecting window]
WITHOUT_CLASSIFICATION	i18n[schemainfo.loadingcatalogs=loading catalogs]
WITHOUT_CLASSIFICATION	i18n[sqlscriptpreferencespanel.updateactionlabel=action to take on update]
WITHOUT_CLASSIFICATION	i18n[graph.scriptdd=script ddl]
WITHOUT_CLASSIFICATION	i18n[mysql.copycancel=cancel]
WITHOUT_CLASSIFICATION	i18n[syntax.autocorrapply=apply]
WITHOUT_CLASSIFICATION	i18n[postgresqlxmltypedatatypecomponent.cellerrormsg=<error see log file>]
WITHOUT_CLASSIFICATION	i18n[actioncollection.createactionerror=error occured creating action {0}]
WITHOUT_CLASSIFICATION	i18n[graph.newname=please enter a new name]
WITHOUT_CLASSIFICATION	i18n[resulttab.cannotedit=this sql can not be edited.]
WITHOUT_CLASSIFICATION	i18n[datasetviewertablepanel.conversionerror=conversion error]
WITHOUT_CLASSIFICATION	i18n[datatypetime.full=full ({0})]
WITHOUT_CLASSIFICATION	i18n[sqlscriptpreferencespanel.updaterefactiontooltip=append on update ]
WITHOUT_CLASSIFICATION	i18n[syntax.tables=tables]
WITHOUT_CLASSIFICATION	i18n[sqlval.clientlogon=client]
WITHOUT_CLASSIFICATION	i18n[i18n.failedtoparse=failed to parse {0}\n{1}]
WITHOUT_CLASSIFICATION	i18n[htmlviewerpanel.error.displayurl=error displaying url]
WITHOUT_CLASSIFICATION	i18n[derbydialect.varcharmessage=derby only allows varchar columns to be altered]
WITHOUT_CLASSIFICATION	i18n
WITHOUT_CLASSIFICATION	add import control i18n[popupeditableiopanel.import44=import]
WITHOUT_CLASSIFICATION	i18n[syntax.literals=literals]
WITHOUT_CLASSIFICATION	here we've hit the second line of a multi-line i18n stanza just skip it we're not that sophisticated.
WITHOUT_CLASSIFICATION	i18n[tableexportcsvcommand.failedtowritefile=failed to write file\n{0}\nerror message\n{1}\nsee last log entry for details.]
WITHOUT_CLASSIFICATION	i18n[codecompletion.function.needstwoargs=function needs at least two arguments]
WITHOUT_CLASSIFICATION	i18n[viewsourcetab.display=show view source]
WITHOUT_CLASSIFICATION	i18n[columndetailsdialog.commentlabel=comment ]
WITHOUT_CLASSIFICATION	i18n[sqlval.nosql=no sql specified]
WITHOUT_CLASSIFICATION	i18n[graph.mnudelete=delete]
WITHOUT_CLASSIFICATION	i18n[columndetailsdialog.defaultvaluelabel=default value ]
WITHOUT_CLASSIFICATION	i18n[factoryproviderdialog.cancel=cancel]
WITHOUT_CLASSIFICATION	i18n[tableexportcsvcontroller.commandchooserbutton=choose]
WITHOUT_CLASSIFICATION	i18n[supportedrefactoringstab.hint=show refactorings that are supported by the plugin]
WITHOUT_CLASSIFICATION	i18n[columndetailsdialog.editbuttonlabel=edit sql]
WITHOUT_CLASSIFICATION	i18n[resulttab.metadatatabtitle=metadata]
WITHOUT_CLASSIFICATION	i18n[codecompletion.prefstabtitlehint=configure code completion]
WITHOUT_CLASSIFICATION	label for the date format combo used to enable/disable text i18n[datatypedate.orlocaleindependent= or locale-dependent format]
WITHOUT_CLASSIFICATION	i18n[oraclepluginpreferencespanel.readclobsfullycheckboxtt=read all clob data when the contents tab is displayed]
WITHOUT_CLASSIFICATION	i18n[updatesummarydialog.currentversionprefix=current version]
WITHOUT_CLASSIFICATION	i18n[laf.lafperformancewarning=also note some look and feels may cause performance problems. if you think your selected look and feel slows down squirrel switch to a metal or plastic look and feel.]
WITHOUT_CLASSIFICATION	i18n[i18n.notgeneratedinworkdir=file {0} has not been generated. cannot continue.]
WITHOUT_CLASSIFICATION	i18n[hibernateconfigcontroller.reallyremoveconfig=are you sure you want to delete configuration "{0}".]
WITHOUT_CLASSIFICATION	i18n[hibernatesqlpanel.alwaysformat=always format]
WITHOUT_CLASSIFICATION	i18n[oracle.execution=executions]
WITHOUT_CLASSIFICATION	i18n[mysqlplugin.showproceduresource=show procedure source]
WITHOUT_CLASSIFICATION	i18n[userscript.codetemplate=script code template]
WITHOUT_CLASSIFICATION	i18n[mappingroot.drivername=jdbc driver name (hibernate)]
WITHOUT_CLASSIFICATION	i18n[derbyplugin.prefstitle=derby]
WITHOUT_CLASSIFICATION	i18n[generalsessionpropertiespanel.sqlresults=sql results]
WITHOUT_CLASSIFICATION	i18n[abstractrefactoringdialog.showbuttonlabel=show sql]
WITHOUT_CLASSIFICATION	i18n[dumpsessionaction.warning=<html><body><b>warning</b> plain<br>text passwords<br>may be saved<br>in this file.</body></html>]
WITHOUT_CLASSIFICATION	i18n[updatemanagerdialog.settingslabel=settings]
WITHOUT_CLASSIFICATION	i18n[sqlfilteraction.singleobjectmessage=you must have a single table or view selected to activate the sql filter]
WITHOUT_CLASSIFICATION	i18n[mysql.droppingdbs=dropping database(s)]
WITHOUT_CLASSIFICATION	i18n[logpanel.loginfolabel=logs errors {0} warnings {1} infos {2}]
WITHOUT_CLASSIFICATION	i18n[graph.format=format ]
WITHOUT_CLASSIFICATION	i18n[userscript.dlgtabscripts=scripts]
WITHOUT_CLASSIFICATION	i18n[syntax.bold=bold]
WITHOUT_CLASSIFICATION	i18n[artifactstatus.corelabel=core]
WITHOUT_CLASSIFICATION	i18n[indexdetailstab.hint=display index details]
WITHOUT_CLASSIFICATION	i18n[oraclepluginpreferencespanel.sessiontimezonelabel=initialize session timezone]
WITHOUT_CLASSIFICATION	i18n[exportconfig.errorresolvingfile=error resolving file name]
WITHOUT_CLASSIFICATION	copy i18n files to i18n downloads directory
WITHOUT_CLASSIFICATION	i18n[userscript.scriptprops=script properties]
WITHOUT_CLASSIFICATION	i18n[sqlresultexecuterpanel.title=results]
WITHOUT_CLASSIFICATION	i18n[dbutil.error.bindclobfailure=bindblobvar failed to bind blob using filesystem - attempting to bind blob using memory]
WITHOUT_CLASSIFICATION	i18n[sqlhistoryitemwrapper.lastused=last used]
WITHOUT_CLASSIFICATION	i18n[sqlhistoryitemwrapper.sql=sql]
WITHOUT_CLASSIFICATION	i18n[hibernateconfigpanel.toobtainsessionfactpersunit=persitence-unit name]
WITHOUT_CLASSIFICATION	i18n[triggerdetailstab.hint=display trigger details]
WITHOUT_CLASSIFICATION	i18n[sybaseaseplugin.triggerhint=show trigger source]
WITHOUT_CLASSIFICATION	i18n[exportconfig.errorcreatingfile=error occured reading from preferences file {0}]
WITHOUT_CLASSIFICATION	i18n[threadcheckingrepaintmanager.workinwrongthread=gui work done in wrong thread]
WITHOUT_CLASSIFICATION	i18n[timedatefunctionstab.title=time/date functions]
WITHOUT_CLASSIFICATION	i18n[sqlscriptpreferencespanel.deleterefactioncheckboxlabel=add delete referential action to the fk definition]
WITHOUT_CLASSIFICATION	i18n[updatesummarytable.yes=yes]
WITHOUT_CLASSIFICATION	i18n[supportedrefactoringstab.title=supported refactorings]
WITHOUT_CLASSIFICATION	i18n[tableexportcsvdlg.cancel=cancel]
WITHOUT_CLASSIFICATION	i18n[exportconfig.errorsavingdrivers=error saving drivers]
WITHOUT_CLASSIFICATION	i18n[memorypanel.sessioninfo.tostring3=session id={0} alias={1} created at {2} closed at {3} finalized at {4}]
WITHOUT_CLASSIFICATION	i18n[hibernateconfigpanel.editfactoryprovider=edit]
WITHOUT_CLASSIFICATION	i18n[syntaxplugin.comment=comment]
WITHOUT_CLASSIFICATION	i18n[tableexportcsvcommand.failedtoexecutecommand=failed to execute\n{0}\nerror message\n{1}\nsee last log entry for details.]
WITHOUT_CLASSIFICATION	i18n[databasemetadata.searchabletypeprednone=no support]
WITHOUT_CLASSIFICATION	i18n[importdataintotableexecutor.importingdatainto=importing data into {0}]
WITHOUT_CLASSIFICATION	i18n[refactoringpreferencespanel.bordertitle=refactoring preferences]
WITHOUT_CLASSIFICATION	i18n[oraclealiasprefspanel.applynow=apply now]
WITHOUT_CLASSIFICATION	i18n[datasetupdateabletablemodelimpl.error.multimatchingrows=muliple rows in db match current row in table - cannot re-read data.]
WITHOUT_CLASSIFICATION	i18n[schemapropertiescontroller.tableheader.schema=schema]
WITHOUT_CLASSIFICATION	i18n[tableexportcsvcontroller.filechoosertitel=choose export file]
WITHOUT_CLASSIFICATION	i18n[graph.savegraphimagestofile=copy graph to clipboard]
WITHOUT_CLASSIFICATION	i18n[sqlval.logonclose=close]
WITHOUT_CLASSIFICATION	i18n[userscript.execontargets=execute script on selected targets]
WITHOUT_CLASSIFICATION	i18n[tableexportcsvdlg.columnseparator=column separator]
WITHOUT_CLASSIFICATION	i18n[downloadstatuseventhandler.updatedownloadfailedmsg=please consult the log for details]
WITHOUT_CLASSIFICATION	i18n[colorpropertiespanel.objecttreebackgroundcolorchooserdialogtitle=select background color for object tree]
WITHOUT_CLASSIFICATION	i18n[sqlresultexecuterpanel.cancelerequested=query execution cancel requested by user.]
WITHOUT_CLASSIFICATION	i18n[mapdataset.unsupported=<unsupported>]
WITHOUT_CLASSIFICATION	i18n[csvsettingspanel.seperatorchartooltip=specify the character that is used to seperate the columns in this file (e.g. '' or '')]
WITHOUT_CLASSIFICATION	i18n[csvsettingspanel.usechar=seperated by character]
WITHOUT_CLASSIFICATION	i18n[syntax.prefuseplain=use plain editor]
WITHOUT_CLASSIFICATION	i18n[application.error.loadcolsinfo=unable to load edit 'where' columns selections.]
WITHOUT_CLASSIFICATION	i18n[graph.showqualifiedtablenames=show qualified table names]
WITHOUT_CLASSIFICATION	i18n[userscript.scriptclass=script class]
WITHOUT_CLASSIFICATION	i18n[sqlscript.scriptwritten=script was written to the sql editor of the main session window.]
WITHOUT_CLASSIFICATION	tell user that there was a problem i18n[basedatasetviewerdestination.error=error]
WITHOUT_CLASSIFICATION	i18n[graph.refreshtable=refresh table]
WITHOUT_CLASSIFICATION	i18n[oracle.displaysnstancedetails=display instance details]
WITHOUT_CLASSIFICATION	i18n[actioncollection.actionnotfound=action {0} not found in actioncollection.]
WITHOUT_CLASSIFICATION	i18n[sqlfiltersheet.closebuttonlabel=close]
WITHOUT_CLASSIFICATION	i18n[userscript.execoutput=script execution output]
WITHOUT_CLASSIFICATION	copy core files minus any i18n jars to core downloads directory
WITHOUT_CLASSIFICATION	i18n[artifactstatus.pluginlabel=plugin]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.desc=description]
WITHOUT_CLASSIFICATION	i18n[validatorglobalpreferencestab.hint=preferences for sql validation]
WITHOUT_CLASSIFICATION	i18n[specialcolumnmapping.fixed_value=fixed value]
WITHOUT_CLASSIFICATION	i18n[datasetupdateabletablemodelimpl.info.norowsupdated=no rows updated.]
WITHOUT_CLASSIFICATION	i18n[userscript.confirmremove=do you want to remove script {0} from the list?]
WITHOUT_CLASSIFICATION	i18n[i18n.executingcommand=executing command {0}]
WITHOUT_CLASSIFICATION	i18n[mmsql.textfiles=text files]
WITHOUT_CLASSIFICATION	i18n[editextras.errorprocessingformat=error processing format sql command {0}]
WITHOUT_CLASSIFICATION	i18n[mssql.monitor=monitor]
WITHOUT_CLASSIFICATION	i18n[postgresqlxmltypedatatypecomponent.cellerrormsg=<error see log file>]
WITHOUT_CLASSIFICATION	i18n[modifydriveraction.error.selectingwindow=error selecting window]
WITHOUT_CLASSIFICATION	i18n[indexdetailstab.title=details]
WITHOUT_CLASSIFICATION	i18n[sqlval.user=user]
WITHOUT_CLASSIFICATION	i18n[hashtabledataset.value=value]
WITHOUT_CLASSIFICATION	i18n[helpviewerwindow.error.displaydocument=error displaying document]
WITHOUT_CLASSIFICATION	i18n[updatemanagerdialog.channellabel=channel]
WITHOUT_CLASSIFICATION	i18n[mysql.copytable=copy table]
WITHOUT_CLASSIFICATION	i18n[lockdetailstab.hint=display locks]
WITHOUT_CLASSIFICATION	i18n[syntax.osterwarning=you are using the oster editor. please consider using the netbeans editor. see menu file --> new session properties --> syntax]
WITHOUT_CLASSIFICATION	i18n[resulttab.infotabtitle=info]
WITHOUT_CLASSIFICATION	i18n[generalsessionpropertiespanel.general=general]
WITHOUT_CLASSIFICATION	i18n[sqlresultexecuterpanel.nonstickypanel=cannot make a cancel panel sticky]
WITHOUT_CLASSIFICATION	i18n[cancelstatementthread.cancelsucceededlate=canceling statement succeeded now. but took longer than one second.]
WITHOUT_CLASSIFICATION	i18n[generalsessionpropertiespanel.sqlexectabs=sql execution tabs]
WITHOUT_CLASSIFICATION	i18n[popupeditableiopanel.fileerror=file name error]
WITHOUT_CLASSIFICATION	i18n[hibernateconfigcontroller.noconfigtoremove=no configuration selected to remove.]
WITHOUT_CLASSIFICATION	i18n[syntax.errabrev=error / abreviation]
WITHOUT_CLASSIFICATION	i18n[userscript.showinstandardmenues1=show in standard menues]
WITHOUT_CLASSIFICATION	i18n[i18n.noeditorcommand=can not open files withou an editor command.]
WITHOUT_CLASSIFICATION	i18n[dumpapplicationcommand.header=squirrel sql client application dump {0}]
WITHOUT_CLASSIFICATION	i18n[popupeditableiopanel.exporterror5=export error]
WITHOUT_CLASSIFICATION	i18n[sqlscriptpreferencespanel.qualifycheckboxlabel=qualify table names in scripts with schema]
WITHOUT_CLASSIFICATION	i18n[datetypetimestamp.defaultformat=use default format ]
WITHOUT_CLASSIFICATION	i18n[refactoringpreferencestab.title=refactoring]
WITHOUT_CLASSIFICATION	i18n[syntax.prefsyntax=syntax]
WITHOUT_CLASSIFICATION	i18n[sqlhistorydlg.filtercboregex=regular exp]
WITHOUT_CLASSIFICATION	i18n[objecttreetab.title=objects]
WITHOUT_CLASSIFICATION	i18n[dualprogressbardialog.copyingrecordslabel=copying records]
WITHOUT_CLASSIFICATION	i18n[artifactstatus.translationlabel=translation]
WITHOUT_CLASSIFICATION	i18n[dbutil.error.maptype=couldn't map type for table='{0}' column='{1}']
WITHOUT_CLASSIFICATION	i18n[mysql.btremove=remove]
WITHOUT_CLASSIFICATION	i18n[aboutboxdialog.error.systemprops=error occured displaying system properties]
WITHOUT_CLASSIFICATION	i18n[triggerdetailstab.hint=display trigger details]
WITHOUT_CLASSIFICATION	i18n[syntaxplugin.tolowercase=tolowercase]
WITHOUT_CLASSIFICATION	_treeapi.adddetailtab(databaseobjecttype.procedure new proceduresourcetab(i18n.show_procedure_source))
WITHOUT_CLASSIFICATION	i18n[memorypanel.sessioninfo.tostring2=session id={0} alias={1} created at {2}]
WITHOUT_CLASSIFICATION	i18n[defaultdatabaseexpander.error.retrieveuserroles=unable to retrieve user roles]
WITHOUT_CLASSIFICATION	i18n[createdriveraction.error.selectingwindow=error selecting window]
WITHOUT_CLASSIFICATION	i18n[rowdatainputframe.data=data]
WITHOUT_CLASSIFICATION	i18n[preferencespanel.removemultilinecommentlabel=remove multi-line comments () from sql before executing
WITHOUT_CLASSIFICATION	i18n[tableexportcsvcontroller.commandchoosertitel=choose command executable]
WITHOUT_CLASSIFICATION	i18n[graph.nosel=no selection]
WITHOUT_CLASSIFICATION	i18n[helpviewerwindow.pageloaded=page loaded.]
WITHOUT_CLASSIFICATION	i18n[oracle.sorts=sorts]
WITHOUT_CLASSIFICATION	i18n[sessionstartuptimehintdlg.title=session startup time hint]
WITHOUT_CLASSIFICATION	i18n[i18n.executingcommandfailed=execution failed with error {0}]
WITHOUT_CLASSIFICATION	i18n[oracle.displaydetails=display index details]
WITHOUT_CLASSIFICATION	i18n[sqlhistorydlg.applyfilter=apply]
WITHOUT_CLASSIFICATION	i18n[factoryproviderdialog.title=name of sessionfactorimpl provider]
WITHOUT_CLASSIFICATION	label for type combo - used to enable/disable text associated with the combo i18n[datatypeblob.read=read]
WITHOUT_CLASSIFICATION	i18n[tableexportcsvdlg.withheaders=include column headers]
WITHOUT_CLASSIFICATION	i18n[mssql.currentactivity=current activity]
WITHOUT_CLASSIFICATION	i18n[popupeditableiopanel.exporterror=export error]
WITHOUT_CLASSIFICATION	i18n[progresscallbackdialog.initialloadingprefix=loading]
WITHOUT_CLASSIFICATION	i18n[userscript.scriptadminerr=err msg]
WITHOUT_CLASSIFICATION	i18n[actioncollection.createactioninfo=attempting to load action class - {0}]
WITHOUT_CLASSIFICATION	i18n[xmlrefomatter.xmlwarning=xml warning]
WITHOUT_CLASSIFICATION	i18n[schemainfo.loadingkeywords=loading keywords]
WITHOUT_CLASSIFICATION	i18n[mssql.general=general]
WITHOUT_CLASSIFICATION	i18n[columndetailsdialog.nullablelabel=nullable ]
WITHOUT_CLASSIFICATION	i18n[popupeditableiopanel.cannotcreatetempfile=cannot create temp file..\nerror was\n{0}]
WITHOUT_CLASSIFICATION	i18n[preferencespanel.procedureseparatortooltip=multiple statements within a procedure or function can be terminated with this.]
WITHOUT_CLASSIFICATION	i18n[schemapropertiescontroller.cachefilepathnotexists=cache file for alias "{0}" does not exist. if it existed the path would be {1}]
WITHOUT_CLASSIFICATION	i18n[updatesummarytable.installoptionslabel=install options]
WITHOUT_CLASSIFICATION	add button to execute external command i18n[popupeditableiopanel.execute34=execute]
WITHOUT_CLASSIFICATION	i18n[dialectutils.dropprimarykeyunsupported={0} doesn''t support dropping primary keys]
WITHOUT_CLASSIFICATION	i18n[mssql.objectson=objects on {0}]
WITHOUT_CLASSIFICATION	i18n[updatesummarydialog.title=update summary]
WITHOUT_CLASSIFICATION	i18n[hibernate.hibernatetabpanel.openconfigs=open hibernate configurations]
WITHOUT_CLASSIFICATION	i18n[oracle.sessiondetails=details]
WITHOUT_CLASSIFICATION	i18n[graphtofile.imagefilespec=jpg image format]
WITHOUT_CLASSIFICATION	i18n[syntaxplugin.replace=replace]
WITHOUT_CLASSIFICATION	i18n[copytablescommand.progressdialogtitle=analyzing fks in tables to copy]
WITHOUT_CLASSIFICATION	i18n[dataimportglobalpreferencestab.title=data import]
WITHOUT_CLASSIFICATION	i18n[codecompletion.prefs.table.spwithoutparams=sp without params]
WITHOUT_CLASSIFICATION	i18n[triggerdetailstab.hint=display trigger details]
WITHOUT_CLASSIFICATION	i18n[hqlentrypanelmanager.unquotehql=unquote hql]
WITHOUT_CLASSIFICATION	i18n[syntax.selcolor=select color]
WITHOUT_CLASSIFICATION	i18n[editwherecolsaction.singleobjectmessage=you must have a single table selected to limit the colums used in the edit where clause]
WITHOUT_CLASSIFICATION	i18n[sqlval.logonok=ok]
WITHOUT_CLASSIFICATION	i18n[updatecontrollerimpl.updatechecktitle=update check]
WITHOUT_CLASSIFICATION	i18n[codecompletion.prefs.table.col.prefix=prefix]
WITHOUT_CLASSIFICATION	i18n[datasetupdateabletablemodelimpl.info.updateidenticalrows=this operation will update {0} identical rows.\ndo you wish to proceed?]
WITHOUT_CLASSIFICATION	i18n[popupeditableiopanel.filedoesnotexist=file {0} does not exist\nor is not a readable normal file.\nplease enter a valid file name or use browse to select a file.]
WITHOUT_CLASSIFICATION	i18n[syntax.prefusenetbeans=use netbeans editor (recommended)]
WITHOUT_CLASSIFICATION	i18n[userscript.showinstandardmenues=show in standard menues]
WITHOUT_CLASSIFICATION	i18n[hqlentrypanelmanager.quotehqlsb=quote hql as stingbuffer]
WITHOUT_CLASSIFICATION	i18n[mappingroot.url=jdbc url (hibernate)]
WITHOUT_CLASSIFICATION	i18n[indexdetailstab.title=details]
WITHOUT_CLASSIFICATION	i18n[syntax.datatypes=data types]
WITHOUT_CLASSIFICATION	i18n[updatemanagerdialog.title=update manager]
WITHOUT_CLASSIFICATION	i18n[hibernateconfigcontroller.classpathentrydesc=jars zips or directories]
WITHOUT_CLASSIFICATION	i18n[syntax.replacenetbeansonly=replace is only available when the netbeans editor is used.\nsee menu file --> new session properties --> tab syntax]
WITHOUT_CLASSIFICATION	i18n[session.drivercompliance=the driver being used for alias ''{0}'' is not jdbc 2.1 compliant.\nyou should consider getting a more recent version of this driver]
WITHOUT_CLASSIFICATION	i18n[csvsettingspanel.dateformat=date format]
WITHOUT_CLASSIFICATION	i18n[informixexceptionformatter.positionlabel=position ]
WITHOUT_CLASSIFICATION	i18n[celldatapopup.valueofcolumn=value of column {0}]
WITHOUT_CLASSIFICATION	i18n[sqlscript.enternameoftable=enter name of table]
WITHOUT_CLASSIFICATION	i18n[syntax.reswords=reserved words]
WITHOUT_CLASSIFICATION	i18n[sqlscript.configyourmultitablescriptixaftereach=constraints and indexes after each table]
WITHOUT_CLASSIFICATION	i18n[syntax.removerows=remove selected rows]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.editbookmark=edit bookmark]
WITHOUT_CLASSIFICATION	i18n[updatepreferencespanel.urllabel=url]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.btntextedit=edit]
WITHOUT_CLASSIFICATION	i18n[schematablecboitem.schemaid.loadbutdontcache=load but don't cache]
WITHOUT_CLASSIFICATION	i18n[mysql.copytonewtable=copy to new table]
WITHOUT_CLASSIFICATION	i18n[oracle.bufferperexec=buffer gets per exec]
WITHOUT_CLASSIFICATION	i18n[schematableupdatewhatitem.procedures=procedures]
WITHOUT_CLASSIFICATION	i18n[rowdatainputframe.cancel=cancel]
WITHOUT_CLASSIFICATION	i18n[syntax.functions=functions]
WITHOUT_CLASSIFICATION	i18n[columndetailsdialog.modifybuttonlabel=modify column]
WITHOUT_CLASSIFICATION	i18n[sqlscriptpreferencestab.title=sql scripts]
WITHOUT_CLASSIFICATION	i18n[updatepreferencespanel.localpathlabel=local path]
WITHOUT_CLASSIFICATION	i18n[pleasewaitdialog.cancel=cancel]
WITHOUT_CLASSIFICATION	i18n[userscript.propsdlgcancel=cancel]
WITHOUT_CLASSIFICATION	i18n[schemapropertiescontroller.tableheader.procedures=procedures]
WITHOUT_CLASSIFICATION	i18n[dumpsessionaction.error=error occured dumping session {0}]
WITHOUT_CLASSIFICATION	i18n[graph.showconstr=show constraint names]
WITHOUT_CLASSIFICATION	i18n[updatemanagerdialog.repositorytablabel=repository]
WITHOUT_CLASSIFICATION	i18n[mssql.options=options]
WITHOUT_CLASSIFICATION	i18n[oracle.diskreads=disk reads]
WITHOUT_CLASSIFICATION	i18n[userscript.scriptcompletederr=script completed with errors]
WITHOUT_CLASSIFICATION	i18n[objecttreetab.hint=show database objects]
WITHOUT_CLASSIFICATION	i18n[dialectutils.addprimarykeyunsupported={0} doesn''t support adding primary keys]
WITHOUT_CLASSIFICATION	i18n[udfdetailstab.title=details]
WITHOUT_CLASSIFICATION	i18n[generalpropertiespanel.left=left]
WITHOUT_CLASSIFICATION	i18n[syntax.osterexplain=note the preferable editor is the netbeans editor. the netbeans editor\n - is less memory consuming\n - its highlightning is more exact\n - can handle many lines well.\n the oster editor is still there because it can handle very long lines better than the netbeans editor. this is due to a known bug in the netbeans editor (issue #41241). as soon as this bug is fixed the oster editor will be removed.]
WITHOUT_CLASSIFICATION	i18n[columndiffdialog.sessionlabelprefix=session]
WITHOUT_CLASSIFICATION	i18n[indexdetailstab.title=details]
WITHOUT_CLASSIFICATION	i18n[memorypanel.sessioninfo.tostring1=session id={0} alias={1} created at {2} closed at {3}]
WITHOUT_CLASSIFICATION	i18n[graph.addchildtables=add child tables]
WITHOUT_CLASSIFICATION	i18n[userscript.dlgtabscriptsremove=remove]
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.plantableunavailabletitle= plan_table not found]
WITHOUT_CLASSIFICATION	i18n[hibernateconfigpanel.toobtainsessionfactconfiguration=call "new org.hibernate.cfg.configuration().configure().buildsessionfactory()"]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.prefname=name]
WITHOUT_CLASSIFICATION	i18n[sequencedetailstab.hint=display sequence details]
WITHOUT_CLASSIFICATION	i18n[sqlscript.dlgcreattableofsql=create table of sql]
WITHOUT_CLASSIFICATION	i18n[triggerdetailstab.title=details]
WITHOUT_CLASSIFICATION	i18n[refactoringpreferencespanel.prefstooltip=table names appear in scripts as schema.table]
WITHOUT_CLASSIFICATION	i18n[mysql.tabstatus=mysql table status]
WITHOUT_CLASSIFICATION	i18n[oracle.diplayscriptdetails=display script details]
WITHOUT_CLASSIFICATION	i18n[triggerdetailstab.title=details]
WITHOUT_CLASSIFICATION	i18n[mysql.logs=mysql logs]
WITHOUT_CLASSIFICATION	i18n[schemainfo.loadingtables=loading tables]
WITHOUT_CLASSIFICATION	i18n[sqlhistorycontroller.mnuappendselectiontoeditor=append selected statements to sql editor]
WITHOUT_CLASSIFICATION	i18n[userscript.classnotfoundin=class {0} found in\n{1}]
WITHOUT_CLASSIFICATION	i18n[dialectutils.columndefaultunsupported={0} doesn''t support altering a column''s default value]
WITHOUT_CLASSIFICATION	i18n[csvfileimporter.invaliddateformat=invalid date format given]
WITHOUT_CLASSIFICATION	i18n[triggerdetailstab.title=details]
WITHOUT_CLASSIFICATION	i18n[preferencespanel.statementseparatorlabel=statement separator]
WITHOUT_CLASSIFICATION	i18n[schemainfo.loadingstoredprocedures=loading stored procedures]
WITHOUT_CLASSIFICATION	i18n[threadcheckingrepaintmanager.workinwrongthread=gui work done in wrong thread]
WITHOUT_CLASSIFICATION	i18n[importfiledialog.tablecolumn=table column]
WITHOUT_CLASSIFICATION	i18n[triggerdetailstab.title=details]
WITHOUT_CLASSIFICATION	i18n[triggerdetailstab.hint=display trigger details]
WITHOUT_CLASSIFICATION	i18n[sqlhistoryitemwrapper.index=index]
WITHOUT_CLASSIFICATION	file handling controls i18n[popupeditableiopanel.usefile=use file ]
WITHOUT_CLASSIFICATION	i18n[db2plugin.showtriggersource=show trigger source]
WITHOUT_CLASSIFICATION	i18n[popupeditableiopanel.cannotfindfile=cannot find file {0}\ncheck file name and re-try export.]
WITHOUT_CLASSIFICATION	i18n[datasetviewereditabletablepanel.deleterosquestion=do you wish to delete {0} rows from this table?]
WITHOUT_CLASSIFICATION	i18n[indexdetailstab.hint=display index details]
WITHOUT_CLASSIFICATION	i18n[xmlreformatter.seeothererrs={0}\ndo you wish to see other errors?"]
WITHOUT_CLASSIFICATION	i18n[factoryproviderdialog.example=save example code for a sessionfactorimpl provider class to ]
WITHOUT_CLASSIFICATION	i18n[hibernateconfigpanel.newfactoryclasspathborder=additional classpath entries to create a sessionfactoryimpl]
WITHOUT_CLASSIFICATION	i18n[oracle.displaytriggercolumns=display trigger column information]
WITHOUT_CLASSIFICATION	i18n[postgresplugin.showindexsource=show index source]
WITHOUT_CLASSIFICATION	i18n[htmlviewerpanel.error.processhyperlink=error processing hyperlink]
WITHOUT_CLASSIFICATION	i18n[schematableupdatewhatitem.views=views]
WITHOUT_CLASSIFICATION	i18n[popupeditableiopanel.executeerror2=execute error]
WITHOUT_CLASSIFICATION	i18n[hibernatesqlpanel.code=sql code]
WITHOUT_CLASSIFICATION	i18n[updatecontrollerimpl.exceptionmsg=exception was ]
WITHOUT_CLASSIFICATION	i18n[droptabledialog.title=drop table(s)]
WITHOUT_CLASSIFICATION	i18n[hibernateconfigcontroller.nocfgnamemsg=not a valid configuration name\nchanges cannot be applied.]
WITHOUT_CLASSIFICATION	i18n[schemapropertiespanel.specifyschemas=specify schema loading and caching]
WITHOUT_CLASSIFICATION	i18n[codecompletion.listtruncated=completion list truncated. narrow by typing to get missing entries.]
WITHOUT_CLASSIFICATION	i18n[sqlval.anonymous=anonymous]
WITHOUT_CLASSIFICATION	i18n[javabeandataset.value=value]
WITHOUT_CLASSIFICATION	i18n[derbyplugin.showproceduresource=show procedure source]
WITHOUT_CLASSIFICATION	i18n[graph.graphsaved=graph "{0}" saved to "{1}"]
WITHOUT_CLASSIFICATION	i18n[sqlval.descriptivename=sql validator plugin]
WITHOUT_CLASSIFICATION	i18n[splashscreen.error.updatingprogressbar=error occured updating progress bar]
WITHOUT_CLASSIFICATION	i18n[columnlistdialog.executebuttonlabel=execute]
WITHOUT_CLASSIFICATION	i18n[preferencespanel.linecommenttooltip=sequence of characters at the beginning of a line to indicate that whole line is a comment]
WITHOUT_CLASSIFICATION	i18n[mysql.shoevariables=(mysql) show variables]
WITHOUT_CLASSIFICATION	i18n[userscript.codetemplatesave=save]
WITHOUT_CLASSIFICATION	i18n[mappingroot.connectionerr=error getting sql connection data from hibernate]
WITHOUT_CLASSIFICATION	i18n[datasetupdateabletablemodelimpl.error.rereadingdb=there was a problem reported while re-reading the db. the db message was\n{0}]
WITHOUT_CLASSIFICATION	i18n[resultsetmentadataset.propname=property name]
WITHOUT_CLASSIFICATION	i18n[scriptwriter.error.nouserhome=the system property <user.home> is null. cannot determine where to write dbcopy sql scripts. disabling writing sql scripts for dbcopy operations.]
WITHOUT_CLASSIFICATION	i18n[graph.addparenttables=add parent tables]
WITHOUT_CLASSIFICATION	i18n[syntax.findnetbeansonly=find is only available when the netbeans editor is used.\nsee menu file --> new session properties --> tab syntax]
WITHOUT_CLASSIFICATION	i18n[userscript.selscripttoexec=please select the script to execute]
WITHOUT_CLASSIFICATION	i18n[updatepreferencespanel.weeklylabel=weekly]
WITHOUT_CLASSIFICATION	i18n[hibernateconfigpanel.classpathadd=add classpath entry]
WITHOUT_CLASSIFICATION	i18n[updatemanagerdialog.hostlabel=host]
WITHOUT_CLASSIFICATION	i18n[sqlval.technology=technology]
WITHOUT_CLASSIFICATION	i18n[columnlistdialog.editsqlbuttonlabel=edit sql]
WITHOUT_CLASSIFICATION	i18n[editextras.time=time]
WITHOUT_CLASSIFICATION	i18n[postgresplugin.showproceduresource=show procedure source]
WITHOUT_CLASSIFICATION	i18n[hibernateconfigcontroller.nopersistenceunitname=missing persitence-unit name .\nchanges cannot be applied.]
WITHOUT_CLASSIFICATION	i18n[splashscreen.info.loadingfile=loading file - ]
WITHOUT_CLASSIFICATION	i18n[copyprogressmonitor.analyzingtablemessage=analyzing table ]
WITHOUT_CLASSIFICATION	i18n[updatepreferencespanel.atstartuplabel=at startup]
WITHOUT_CLASSIFICATION	i18n[laf.lf=l & f]
WITHOUT_CLASSIFICATION	i18n[mssql.scriptprimary=script primary keys foreign keys defaults and check constraints]
WITHOUT_CLASSIFICATION	i18n[popupeditableiopanel.createfileerror=failed to create file {0}.\nchange file name or select a differnt file for export.]
WITHOUT_CLASSIFICATION	i18n[pleasewaitdialog.pleasewait=please wait while the query is executed]
WITHOUT_CLASSIFICATION	i18n[mssql.delay={0}s delay]
WITHOUT_CLASSIFICATION	i18n[mapdataset.key=key]
WITHOUT_CLASSIFICATION	i18n[userscript.applicableto=scripts applicable to objects of type {0}]
WITHOUT_CLASSIFICATION	i18n[syntax.whitespace=white space]
WITHOUT_CLASSIFICATION	i18n[numericfunctionstab.hint=show all the numeric functions available in dbms]
WITHOUT_CLASSIFICATION	i18n[derbyplugin.showviewsource=show view source]
WITHOUT_CLASSIFICATION	i18n[indexdetailstab.hint=display index details]
WITHOUT_CLASSIFICATION	i18n[syntax.textlimitlinevisible=show text limit line]
WITHOUT_CLASSIFICATION	i18n[popupeditableiopanel.exporterror3=export error]
WITHOUT_CLASSIFICATION	i18n[mssql.performace=performance counters]
WITHOUT_CLASSIFICATION	i18n[hibernateconfigpanel.toobtainsessionfactjpa=call "javax.persistence.persistence.createentitymanagerfactory("<persitence-unit name>")"]
WITHOUT_CLASSIFICATION	i18n[abstractrefactoringdialog.cancelbuttonlabel=cancel]
WITHOUT_CLASSIFICATION	i18n[helpviewerwindow.error.loadpluginsettings=error retrieving app settings folder for plugin {0}]
WITHOUT_CLASSIFICATION	i18n[tableexportcsvdlg.exporttitlenew=csv / ms excel export]
WITHOUT_CLASSIFICATION	i18n[mysqlplugin.hint=preferences for mysql]
WITHOUT_CLASSIFICATION	i18n[oraclealiasprefspanel.accessiblebutsys=allow accessible schemas excluding sys]
WITHOUT_CLASSIFICATION	i18n[mysql.fieldprops=field properties]
WITHOUT_CLASSIFICATION	i18n[metadatatab.hint=show database metadata]
WITHOUT_CLASSIFICATION	i18n[prelaunchhelperimpl.installfailedmessage=unexpected error while attempting to install updates]
WITHOUT_CLASSIFICATION	i18n[datatypejavaobject.readcontentswhenloaded=read contents when table is first loaded and display as string]
WITHOUT_CLASSIFICATION	i18n[excelsettingspanel.xlssettings=excel import settings]
WITHOUT_CLASSIFICATION	i18n[colorpropertiespanel.statusbarbackgroundcolorbtnlabel=choose status bar color]
WITHOUT_CLASSIFICATION	i18n[catalogstab.hint=show all the catalogs]
WITHOUT_CLASSIFICATION	i18n[generalsessionpropertiespanel.sqlresulttabs=sql results tabs]
WITHOUT_CLASSIFICATION	i18n[sqlval.infoborder=info]
WITHOUT_CLASSIFICATION	i18n[progressbardialog.cancelbuttonlabel=cancel]
WITHOUT_CLASSIFICATION	i18n[sqlscript.configmultitablescript=configuration of multi table scripts]
WITHOUT_CLASSIFICATION	i18n[formattersourcetab.nosourceavailable=no object source code is available]
WITHOUT_CLASSIFICATION	i18n[updatemanagerdialog.closelabel=close]
WITHOUT_CLASSIFICATION	i18n[installdefaultdriversaction.error.selectingwindow=error selecting window]
WITHOUT_CLASSIFICATION	i18n[driverpropertiespanel.usedriverproperties=use driver properties]
WITHOUT_CLASSIFICATION	i18n[viewsourcetab.display=show view source]
WITHOUT_CLASSIFICATION	i18n[sessionpropertiespanel.loadschemascatalogs=load schemas/catalogs into object tree]
WITHOUT_CLASSIFICATION	i18n[sqlfiltersheet.clearbuttonlabel=clear {0}]
WITHOUT_CLASSIFICATION	i18n[graph.chkislandscape=landscape]
WITHOUT_CLASSIFICATION	i18n[oracle.dboutputstayontop=stay on top]
WITHOUT_CLASSIFICATION	i18n[sqlval.disconnected=disconnected from the sql validation web service]
WITHOUT_CLASSIFICATION	i18n[updatesummarytable.no=no]
WITHOUT_CLASSIFICATION	i18n[colorpropertiespanel.objecttreebackgroundcolorbuttonlabel=choose object tree color]
WITHOUT_CLASSIFICATION	i18n[updatecontrollerimpl.releasefiledownloadfailedmsg=release file couldn't be downloaded. please check your settings.]
WITHOUT_CLASSIFICATION	i18n[sqlresultexecuterpanel.nosqlselected=no sql selected for execution.]
WITHOUT_CLASSIFICATION	i18n[oracleplugin.hint=preferences for oracle]
WITHOUT_CLASSIFICATION	i18n[columnlistdialog.showsqlbuttonlabel=show sql]
WITHOUT_CLASSIFICATION	i18n[popupeditableiopanel.exporterror4=export error]
WITHOUT_CLASSIFICATION	i18n[oraclealiasprefspanel.accessibleandsys=allow accessible schemas and sys]
WITHOUT_CLASSIFICATION	i18n[removecolumncommand.singlecolumnmessage=the table's only column cannot be removed - a table must have a least one column.]
WITHOUT_CLASSIFICATION	i18n[dbutil.error.nocolumns=table '{0}' in schema '{1}' has no columns to copy]
WITHOUT_CLASSIFICATION	i18n[i18n.nonativetoasciicommand=cannot convert files without a native2ascii command.]
WITHOUT_CLASSIFICATION	i18n[aboutboxdialog.info.endmemtimer=ending memory timer (aboutbox)]
WITHOUT_CLASSIFICATION	i18n[editwherecolssheet.unabletoedit=unable to get list of columns {0}]
WITHOUT_CLASSIFICATION	i18n[oracle.displaysnapshotdetails=display materialized view details]
WITHOUT_CLASSIFICATION	i18n[editextras.errorremovequotes=error processing remove quotes sql command {0}]
WITHOUT_CLASSIFICATION	i18n[hibernateattribuitedataset.dbtablename=database table name]
WITHOUT_CLASSIFICATION	i18n[sqlval.dbms=dbms]
WITHOUT_CLASSIFICATION	i18n[columnlistdialog.droperrormessage=can't drop all columns - a table must have at least one column
WITHOUT_CLASSIFICATION	add button for brows i18n[popupeditableiopanel.browse=browse]
WITHOUT_CLASSIFICATION	i18n[sqlscriptpreferencestab.hint=settings for the sql script plugin]
WITHOUT_CLASSIFICATION	i18n[sqlhistorydlg.sqlpref=sql]
WITHOUT_CLASSIFICATION	i18n[exportconfig.errorsavingalials=error saving aliases]
WITHOUT_CLASSIFICATION	i18n[sqlscript.scriptonly=generate script only]
WITHOUT_CLASSIFICATION	i18n[datacache.msg.driverclassnotfound=could not find class {0} in neither the java class path nor the extra class path of the {1} driver definition\n{2}]
WITHOUT_CLASSIFICATION	i18n[oraclealiasprefspanel.header=configure oracle schema loading properties]
WITHOUT_CLASSIFICATION	i18n[syntax.errors=errors]
WITHOUT_CLASSIFICATION	i18n[generalsessionpropertiespanel.appearance=appearance]
WITHOUT_CLASSIFICATION	i18n[logpanel.loginfolabel=logs errors {0} warnings {1} infos {2}]
WITHOUT_CLASSIFICATION	i18n[graph.addtablerefby=add table referenced by {0}]
WITHOUT_CLASSIFICATION	i18n[colorpropertiespanel.instructions=these settings control the background colors]
WITHOUT_CLASSIFICATION	i18n[dumpapplicationcommand.error.dumpingstatus=error dumping application status bean]
WITHOUT_CLASSIFICATION	i18n[datetypetimestamp.stringversion=use string version of timestamp ]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.entersql=please enter a bookmark sql]
WITHOUT_CLASSIFICATION	i18n[indexdetailstab.title=details]
WITHOUT_CLASSIFICATION	i18n[oracleprefspanelcontroller.hint=oracle plugin preferences]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.prefclose=close]
WITHOUT_CLASSIFICATION	i18n[dialectutils.columnnullunsupported={0} doesn''t support altering a column's nullable attribute]
WITHOUT_CLASSIFICATION	i18n[editextras.minute=minute]
WITHOUT_CLASSIFICATION	i18n[droptabledialog.schemalabel=schema]
WITHOUT_CLASSIFICATION	i18n[sqlscript.storesqlintablefailed=an error occured during storing sql result in table {0}. see messages for details.\ni will create the copy script. you may correct errors and run it again.]
WITHOUT_CLASSIFICATION	i18n[codecompletion.prefsexplain=when completing functions squirrel doesn't know if a function is a stored procedure or a user defined function. to make code completion of these two kinds of functions convenient squirrel offers to configure which way completion should work.]
WITHOUT_CLASSIFICATION	i18n[codecompletion.spwithoutparams=stored procedure without parameter info {call mysp()}]
WITHOUT_CLASSIFICATION	i18n[mssql.genereatecreate=generate the create <object> command for each object]
WITHOUT_CLASSIFICATION	i18n[catalogstab.title=catalogs]
WITHOUT_CLASSIFICATION	i18n[mssql.alludfs=all user-defined functions]
WITHOUT_CLASSIFICATION	i18n[prelaunchhelperimpl.installupdatestitle=updates available]
WITHOUT_CLASSIFICATION	i18n[editextras.hour=hour]
WITHOUT_CLASSIFICATION	i18n[syntax.identifiers=identifiers]
WITHOUT_CLASSIFICATION	i18n[updatesummarydialog.installedversionprefix=installed version]
WITHOUT_CLASSIFICATION	i18n[errorstream.expected=expected]
WITHOUT_CLASSIFICATION	i18n[whereclausepanel.addlabel=add]
WITHOUT_CLASSIFICATION	i18n[sequencedetailstab.title=details]
WITHOUT_CLASSIFICATION	i18n[application.splash.loadeditselections=loading edit 'where' columns selections]
WITHOUT_CLASSIFICATION	i18n[copyexecutor.tablecolmismatch=column count for table {0} in source database is {1} but column count for table {2} in destination database is {3}
WITHOUT_CLASSIFICATION	i18n[updatepreferencespanel.autoborderlabel=automatic updates]
WITHOUT_CLASSIFICATION	i18n[datasetupdateabletablemodelimpl.confirmupdateallrows=the table has no columns that can be selected on.\nall rows will be updated.\ndo you wish to proceed?]
WITHOUT_CLASSIFICATION	i18n[popupeditableiopanel.cannotaccessfile=cannot access file name {0}\naborting export.]
WITHOUT_CLASSIFICATION	i18n[sqlscriptpreferencespanel.deleterefactiontooltip=append on delete ]
WITHOUT_CLASSIFICATION	some kind of problem - tell user i18n[datasetupdateabletablemodelimpl.error.deletefailed=one of the delete operations failed with exception\n{0}\ndatabase is in an unknown state and may be corrupted.]
WITHOUT_CLASSIFICATION	i18n[editwherecolssheet.limitsizeofwhereclause=limit the size of the where clause used behind the scenes when editing cell contents.]
WITHOUT_CLASSIFICATION	i18n[hibernateconfigpanel.factoryprovider=sessionfactoryimpl provider]
WITHOUT_CLASSIFICATION	i18n[prelaunchhelperimpl.restorefrombackupmessage=restore squirrel to previous version before last update?]
WITHOUT_CLASSIFICATION	i18n[datasetviewertablepanel.makeeditable=make editable]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.btntextedit=edit]
WITHOUT_CLASSIFICATION	i18n[exportconfig.fileexistsbutreadonly={0}\nexists and you cannot write to it.\nplease use a different name.]
WITHOUT_CLASSIFICATION	i18n[application.error.savecolsinfo=unable to write edit where cols options to persistant storage.]
WITHOUT_CLASSIFICATION	i18n[celldatapopup.conversionerror=conversion error]
WITHOUT_CLASSIFICATION	i18n[graph.renamegraph=rename graph]
WITHOUT_CLASSIFICATION	i18n[postgresplugin.showviewsource=show view source]
WITHOUT_CLASSIFICATION	i18n[codecompletion.prefs.table.col.config=configuration]
WITHOUT_CLASSIFICATION	i18n[indexdetailstab.hint=display index details]
WITHOUT_CLASSIFICATION	i18n[datatypestab.hint=show all the data types available in dbms]
WITHOUT_CLASSIFICATION	i18n[tablepriviligestab.title=privileges]
WITHOUT_CLASSIFICATION	i18n[tableexportcsvdlg.charset=charset]
WITHOUT_CLASSIFICATION	i18n[helpviewerwindow.error.loadpluginlicence=error generating licence entry for plugin {0}]
WITHOUT_CLASSIFICATION	i18n[sqlfiltersheet.contentsmsg=you must have the contents tab selected to activate the sql filter]
WITHOUT_CLASSIFICATION	i18n[popupeditableiopanel.notanormalfile=file is not a normal file.\n cannot do export to a directory or system file.]
WITHOUT_CLASSIFICATION	i18n[generalpreferencespanel.paths=squirrel paths]
WITHOUT_CLASSIFICATION	i18n[oracle.details=details]
WITHOUT_CLASSIFICATION	i18n[sybaseaseplugin.title=sybasease]
WITHOUT_CLASSIFICATION	i18n[mssql.monitorasof=monitor (as of {0datefull})]
WITHOUT_CLASSIFICATION	i18n[graph.landscape=landscape]
WITHOUT_CLASSIFICATION	i18n[laf.broderlaf=look and feel]
WITHOUT_CLASSIFICATION	i18n[dbutil.info.executequery=executequery running sql\n '{0}']
WITHOUT_CLASSIFICATION	i18n[resulttab.limitmessage=limited to <font color='red'> {0} </font> rows]
WITHOUT_CLASSIFICATION	i18n[datasetviewereditabletablepanel.error=error]
WITHOUT_CLASSIFICATION	i18n[preferencespanel.transferoptionsborderlabel=transfer options]
WITHOUT_CLASSIFICATION	i18n[syntax.font=select font color]
WITHOUT_CLASSIFICATION	i18n[syntax.prefsyntaxhint=syntax highlighting]
WITHOUT_CLASSIFICATION	i18n[favs.deletelfolder=are you sure to want to delete the folder \"{0}\" and all of its contents?]
WITHOUT_CLASSIFICATION	i18n[syntax.switchingnotsupported=switching the editor of a runninig session is not supported.\nyou may switch the entry area in the new session properties dialog]
WITHOUT_CLASSIFICATION	i18n[laf.otmfiles=otm files]
WITHOUT_CLASSIFICATION	i18n[hibernatesqlpanel.appendsql=append]
WITHOUT_CLASSIFICATION	i18n[columnpriviligestab.title=column privileges]
WITHOUT_CLASSIFICATION	i18n[toolspopupcontroller.toolspopupmsg=please try out the tools popup by hitting ctrl+t in the sql editor. do it three times to stop this message.]
WITHOUT_CLASSIFICATION	i18n[graph.orderpksconstr=order pks/constraints on top]
WITHOUT_CLASSIFICATION	i18n[resultframe.stayontop=stay on top]
WITHOUT_CLASSIFICATION	i18n[prelaunchhelperimpl.backupfailedmessage=backup of existing files failed. installation cannot proceed]
WITHOUT_CLASSIFICATION	i18n[codecompletion.prefs.table.udfwithparams=udf with params]
WITHOUT_CLASSIFICATION	i18n[databasemetadata.searchabletypesearchable=supports all where]
WITHOUT_CLASSIFICATION	i18n[importdataintotableexecutor.success={0choice0#no records|1#one record|1<{0} records} successfully inserted.]
WITHOUT_CLASSIFICATION	i18n[graph.btncancel=cancel]
WITHOUT_CLASSIFICATION	i18n[syntax.configautocorr=configure auto correct /abreviation]
WITHOUT_CLASSIFICATION	i18n[systemfunctionstab.title=system functions]
WITHOUT_CLASSIFICATION	i18n[mssql.scriptusers=script database users and database roles]
WITHOUT_CLASSIFICATION	i18n[mysql.defaultvalue=default value]
WITHOUT_CLASSIFICATION	i18n[abstractrefactoringdialog.showbuttonlabel=show sql]
WITHOUT_CLASSIFICATION	i18n[mappingroot.cfgname=configuration]
WITHOUT_CLASSIFICATION	i18n[deletetablescommand.progressdialogtitle=analyzing tables to delete]
WITHOUT_CLASSIFICATION	i18n[schematableupdatewhatitem.allobjects=all objects]
WITHOUT_CLASSIFICATION	i18n[mssql.scriptingoptionsdlg=scripting options allow you to specify how an object will be scripted.]
WITHOUT_CLASSIFICATION	i18n[sqlval.anonymous2=anonymous]
WITHOUT_CLASSIFICATION	i18n[viewlogssheet.error.clearlogcontents=error clearing the log contents]
WITHOUT_CLASSIFICATION	i18n[popupeditableiopanel.notwriteable=file is not writeable.\nchange file permissions or select a differnt file for export.]
WITHOUT_CLASSIFICATION	checkbox for whether to interpret input leniently or not i18n[datatypetime.inexact=allow inexact format on input]
WITHOUT_CLASSIFICATION	i18n[userscript.propsdlgok=ok]
WITHOUT_CLASSIFICATION	i18n[schemapropertiescontroller.cachedeletefailed=could not delete {0}]
WITHOUT_CLASSIFICATION	i18n[tableexportcsvdlg.exportcompletetable=export complete table]
WITHOUT_CLASSIFICATION	i18n[indexdetailstab.hint=display index details]
WITHOUT_CLASSIFICATION	i18n[syntax.comments=comments]
WITHOUT_CLASSIFICATION	i18n[columnstab.hint=show columns for the selected table]
WITHOUT_CLASSIFICATION	i18n[editwhercolssheet.reset=reset]
WITHOUT_CLASSIFICATION	i18n[schemapropertiespanel.refreshschemas=connect database to refresh schema table]
WITHOUT_CLASSIFICATION	i18n[i18n.nonativetoasciioutdirnodir=native2ascii output dir is not a directory. native2ascii will not be executed.]
WITHOUT_CLASSIFICATION	i18n[editextras.errorremovenewlines=error processing remove newlines sql command {0}]
WITHOUT_CLASSIFICATION	i18n[fileeditordroptargetlistener.internalerrormessage=internal error occurred. see log for details]
WITHOUT_CLASSIFICATION	i18n[graph.new=new]
WITHOUT_CLASSIFICATION	i18n[tableexportcsvdlg.lineseparatorlabel=line separator]
WITHOUT_CLASSIFICATION	i18n[graph.viewtableinobjecttree=view table in object tree]
WITHOUT_CLASSIFICATION	i18n[sqlresultexecuterpanel.querystatistics=query {0} of {1} elapsed time (seconds) - total {2} sql query {3} building output {4}]
WITHOUT_CLASSIFICATION	i18n[popupeditableiopanel.export44=export]
WITHOUT_CLASSIFICATION	i18n[graph.selgraph=select graph]
WITHOUT_CLASSIFICATION	i18n[generalpropertiespanel.top=top]
WITHOUT_CLASSIFICATION	i18n[databasemetadata.nullabletypenullable=true]
WITHOUT_CLASSIFICATION	i18n[hibernateconfigpanel.newconfig=new]
WITHOUT_CLASSIFICATION	i18n[sqlscriptpreferencespanel.prefstooltip=table names appear in scripts as schema.table]
WITHOUT_CLASSIFICATION	i18n[dbcopyglobalpreferencestab.hint=preferences for db copy]
WITHOUT_CLASSIFICATION	i18n[mssql.filestogenerate=files to generate]
WITHOUT_CLASSIFICATION	i18n[hibernateconfigpanel.configname=configuration name]
WITHOUT_CLASSIFICATION	i18n[mappingroot.classpath=classpath]
WITHOUT_CLASSIFICATION	i18n[mssql.includeheaders=include descriptive headers in the script files]
WITHOUT_CLASSIFICATION	i18n[hibernatetabcontroller.title=hibernate]
WITHOUT_CLASSIFICATION	i18n[sqlscript.configyourmultitablescriptcancel=cancel]
WITHOUT_CLASSIFICATION	i18n[popupeditableiopanel.fileoverwrite=file {0} already exists.\n\ndo you wish to overwrite this file?]
WITHOUT_CLASSIFICATION	i18n[columnstab.title=columns]
WITHOUT_CLASSIFICATION	i18n[tableexportcsvdlg.exportselection=export selection]
WITHOUT_CLASSIFICATION	i18n[preferencespanel.statementseparatortooltip=when multiple statements are selected use this to separate them into single statements.]
WITHOUT_CLASSIFICATION	i18n[sqlval.dbmsname=dbms name]
WITHOUT_CLASSIFICATION	i18n[helpviewerwindow.licences=licences]
WITHOUT_CLASSIFICATION	i18n[refactoringpreferencespanel.quotecheckboxlabel=quote identifiers in scripts]
WITHOUT_CLASSIFICATION	i18n[updatepreferencespanel.dailylabel=daily]
WITHOUT_CLASSIFICATION	i18n[popupeditableiopanel.fileopenerror=there was an error opening file {0}.\nthe error was\n{1}]
WITHOUT_CLASSIFICATION	i18n[userscript.propsdlgcheck=check]
WITHOUT_CLASSIFICATION	i18n[proceduresourcetab.clanguageprocmsg=this is a c-language routine. the source code is unavailable.]
WITHOUT_CLASSIFICATION	i18n[laf.lafwarning=note controls may not be drawn correctly after changes in this panel until the application is restarted.]
WITHOUT_CLASSIFICATION	set up dialog to ask user if it is ok to proceed important this dialog is synchronous (ie. we do not proceed until user gives a response). this is critical since this function provides a return value to its caller that depends on the user input. i18n[basedatasetviewerdestination.warning=warning]
WITHOUT_CLASSIFICATION	i18n[graph.zoomprint=zoom/print]
WITHOUT_CLASSIFICATION	i18n[graph.removefoldingpoint=remove folding point]
WITHOUT_CLASSIFICATION	i18n[schemapropertiescontroller.cachedeleted=deleted {0}]
WITHOUT_CLASSIFICATION	i18n[connectionstatustab.hint=connection status]
WITHOUT_CLASSIFICATION	i18n[editwherecolssheet.editwherecolumns=edit 'where' columns]
WITHOUT_CLASSIFICATION	i18n[mssql.allviews=all views]
WITHOUT_CLASSIFICATION	i18n[sqlscript.tablescriptcancel=cancel]
WITHOUT_CLASSIFICATION	i18n[xmlreformatter.yes=yes]
WITHOUT_CLASSIFICATION	i18n[droptabledialog.cascadelabel=cascade constraints]
WITHOUT_CLASSIFICATION	i18n[userscript.dlgtabscriptsadd2=add]
WITHOUT_CLASSIFICATION	i18n[errorstream.oneerror=1 error detected]
WITHOUT_CLASSIFICATION	i18n[sessionsqlpropertiespanel.removemultilinecomment=remove multi line comment () from sql before sending to database]
WITHOUT_CLASSIFICATION	i18n[datatypedate.usedefaultformat=use default format ({0})]
WITHOUT_CLASSIFICATION	i18n[mysql.selectsingletable=must select a single table]
WITHOUT_CLASSIFICATION	i18n[popupeditableiopanel.replacefile=(in command the string {0} is replaced by the file name when executed.)]
WITHOUT_CLASSIFICATION	i18n[userscript.tablecolname=name]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.qureyparams=query parameters]
WITHOUT_CLASSIFICATION	i18n[datetypetimestamp.timestampinwhere=do not use timestamp in where clause]
WITHOUT_CLASSIFICATION	i18n[datatypestring.limitreadonly=limit read only on columns with these names]
WITHOUT_CLASSIFICATION	i18n[firebird.domaindetails=display domain details]
WITHOUT_CLASSIFICATION	i18n[abstractrefactoringdialog.executebuttonlabel=execute]
WITHOUT_CLASSIFICATION	i18n [memorypanel.gcstatus={0}\n\n sessions waiting for garbage collection\n ==================================================\n {1}\n sessions open\n ==================================================\n {2}\n sessions garbage collected\n ==================================================\n {3}\n]
WITHOUT_CLASSIFICATION	i18n[oracle.sortsperexec=sorts per row]
WITHOUT_CLASSIFICATION	i18n[sqlresultexecuterpanel.exec=executing sql]
WITHOUT_CLASSIFICATION	i18n[codecompletionpreferencespanel.maxlastselectedcompletionnames=if you call code completion without being in the scope of a table for which number of tables the parser last found would you like to see colums on top of the completion list?]
WITHOUT_CLASSIFICATION	i18n[tableexportcsvcontroller.invalidseparator=you must provide a single separator character or check "use tab" to use the tab character.]
WITHOUT_CLASSIFICATION	i18n[aliaseslistinternalframe.error.ctrlf4key=probably closed by the ctrl f4 key. see basicdesktoppaneui.closeaction]
WITHOUT_CLASSIFICATION	i18n[laf.menufonteanbled=enabled]
WITHOUT_CLASSIFICATION	i18n[syntaxplugin.uncomment=uncomment]
WITHOUT_CLASSIFICATION	i18n[tableexportcsvdlg.sepeartortab=use tab character]
WITHOUT_CLASSIFICATION	i18n[defaultdatabaseexpander.error.retrieveschemaprivs=unable to retrieve schema privileges]
WITHOUT_CLASSIFICATION	label for the date format combo used to enable/disable text i18n[datatypetime.usedefaultformat2= or locale-dependent format]
WITHOUT_CLASSIFICATION	i18n[sqlval.version=version]
WITHOUT_CLASSIFICATION	i18n[resulttab.rowcountlabel=row count]
WITHOUT_CLASSIFICATION	i18n[codecompletion.beingloaded=code competion infomation is still being loaded.\ntry again later.]
WITHOUT_CLASSIFICATION	i18n[keywordstab.hint=show all the non-standard keywords available in dbms]
WITHOUT_CLASSIFICATION	i18n[hibernatesqlpanel.sql=sql]
WITHOUT_CLASSIFICATION	i18n[popupeditableiopanel.showascii=show ascii as chars]
WITHOUT_CLASSIFICATION	i18n[syntaxplugin.find=find]
WITHOUT_CLASSIFICATION	i18n[updatecontrollerimpl.softwareversioncurrentmsg=this software's version is the most recent]
WITHOUT_CLASSIFICATION	i18n[updatesummarydialog.applylabel=apply changes]
WITHOUT_CLASSIFICATION	i18n[datatypeother.readcontentswhenloaded=read contents when table is first loaded and display as string]
WITHOUT_CLASSIFICATION	i18n[abstractrefactoringdialog.editbuttonlabel=edit sql]
WITHOUT_CLASSIFICATION	i18n[popupeditableiopanel.errwhileexecutin=error while executing command.\nthe command was\n {0}\nthe error was\n{1}]
WITHOUT_CLASSIFICATION	add button for applying file & cmd info without doing anything else i18n[popupeditableiopanel.applyfile=apply file & cmd]
WITHOUT_CLASSIFICATION	i18n[graph.name=name]
WITHOUT_CLASSIFICATION	i18n[hashtabledataset.unsupported=<unsupported>]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.nosqlpanel=to run a bookmark you must open this window\nusing the "edit bookmarks" toolbar button of a session window.\nthe bookmars sql code will then be written to the session's sql editor.]
WITHOUT_CLASSIFICATION	i18n[syntaxplugin.autocorr=autocorr]
WITHOUT_CLASSIFICATION	i18n[updatecontrollerimpl.changesrecordedtitle=changes recorded]
WITHOUT_CLASSIFICATION	i18n[datatypetime.usedefaultformat=use default format ({0})]
WITHOUT_CLASSIFICATION	i18n[specialcolumnmapping.null=null]
WITHOUT_CLASSIFICATION	i18n[schemapropertiespanel.schematableupdatelable1=set]
WITHOUT_CLASSIFICATION	i18n[columndiffdialog.missinglabel=missing]
WITHOUT_CLASSIFICATION	i18n[oracle.triggercolumns=columns]
WITHOUT_CLASSIFICATION	i18n[mssql.extprops=include extended properties]
WITHOUT_CLASSIFICATION	i18n[syntax.textlimitlinewidth=text limit line width]
WITHOUT_CLASSIFICATION	i18n[createdriveraction.error.selectingwindow=error selecting window]
WITHOUT_CLASSIFICATION	i18n[excelsettingspanel.sheetname=sheet name]
WITHOUT_CLASSIFICATION	i18n[datasetviewereditabletablepanel.selectionneeded=you must select something in the table to delete.]
WITHOUT_CLASSIFICATION	i18n[hibernateconfigpanel.toobtainsessionfactfactoryprovider=invoke the user defined provider method below]
WITHOUT_CLASSIFICATION	i18n[popupeditableiopanel.errorgettingpath=error getting full path name for selected file]
WITHOUT_CLASSIFICATION	i18n[generalsessionpropertiespanel.generalsettings=general settings for the current session]
WITHOUT_CLASSIFICATION	i18n[session.drivercompliance3.0=the driver being used for alias ''{0}'' is not jdbc 3.0 compliant.\nyou should consider getting a more recent version of this driver]
WITHOUT_CLASSIFICATION	i18n[javabeandataset.name=property name]
WITHOUT_CLASSIFICATION	i18n[progresscallbackdialog.defaultloadingprefix=loading]
WITHOUT_CLASSIFICATION	i18n[schematablecboitem.schemaid.dontload=don't load]
WITHOUT_CLASSIFICATION	i18n[hibernateconfigpanel.configuirationdef=configuration definition]
WITHOUT_CLASSIFICATION	i18n[logpanel.viewlastlog=press to view last log entry]
WITHOUT_CLASSIFICATION	i18n[copytablescommand.loadingprefix=analyzing table]
WITHOUT_CLASSIFICATION	i18n[oraclepluginpreferencespanel.showerroroffsettt=creates and uses a user-defined function that is used to determine the syntax error token]
WITHOUT_CLASSIFICATION	i18n[columndetailsdialog.precisionlabel=precision ]
WITHOUT_CLASSIFICATION	i18n[mssql.onefile=create one file]
WITHOUT_CLASSIFICATION	i18n[syntax.operators=operators]
WITHOUT_CLASSIFICATION	i18n[userscript.classnotfound=class {0} not found]
WITHOUT_CLASSIFICATION	i18n[userscript.dlgtabscriptsadd=add]
WITHOUT_CLASSIFICATION	i18n[mysql.structure=structure]
WITHOUT_CLASSIFICATION	i18n[sqlpanel.copylastbutton.hint=copy current sql history to entry area]
WITHOUT_CLASSIFICATION	i18n[updatemanagerdialog.portlabel=port]
WITHOUT_CLASSIFICATION	i18n[hibernateconfigpanel.applyconfigchanges=apply changes to this configuration]
WITHOUT_CLASSIFICATION	i18n[editextras.day=day]
WITHOUT_CLASSIFICATION	i18n[cancelstatementthread.canceltimedout=failed to cancel statement within one second. perhaps your driver/database does not support cancelling statements. if cancelling succeeds later you'll get a further messages.]
WITHOUT_CLASSIFICATION	i18n[driverslist.tooltiptext=list of database drivers that can be used to configure an alias]
WITHOUT_CLASSIFICATION	i18n[rownumbertablecolumn.rownumber=row number]
WITHOUT_CLASSIFICATION	i18n[userscript1.scriptclass=script class]
WITHOUT_CLASSIFICATION	i18n[userscript.enterscriptclass=please enter a script class]
WITHOUT_CLASSIFICATION	i18n[datasetupdateabletablemodelimpl.info.identicalrows=this operation will result in {0} identical rows.\ndo you wish to proceed?]
WITHOUT_CLASSIFICATION	i18n[tableexportcsvcommand.failedtowritefile=failed to write file\n{0}\nerror message\n{1}\nsee last log entry for details.]
WITHOUT_CLASSIFICATION	i18n[hibernatesqlpanel.execute=execute sql]
WITHOUT_CLASSIFICATION	i18n[sqlscriptpreferencespanel.bordertitle=sql script preferences]
WITHOUT_CLASSIFICATION	i18n[sqlval.connected=connected to the sql validation web service]
WITHOUT_CLASSIFICATION	i18n[editwherecolssheet.shouldincludepks=the 'use' window should include at least the primary keys for the table.]
WITHOUT_CLASSIFICATION	i18n[derbydialect.columnlengthmessage=derby only allows varchar column length to be increased]
WITHOUT_CLASSIFICATION	i18n[columndetailsdialog.cancelbuttonlabel=cancel]
WITHOUT_CLASSIFICATION	i18n[graph.unit=unit]
WITHOUT_CLASSIFICATION	i18n[pluginsummarydialog.unload=unload]
WITHOUT_CLASSIFICATION	i18n[tableexportcsvdlg.formatcsv=export csv file]
WITHOUT_CLASSIFICATION	i18n[abstractrefactoringdialog.editbuttonlabel=edit sql]
WITHOUT_CLASSIFICATION	i18n[reconnectaction.confirmreconnect=close the current connection to the database and open a new one?]
WITHOUT_CLASSIFICATION	i18n[sqlscriptpreferencespanel.updaterefactioncheckboxlabel=add update referential action to the fk definition]
WITHOUT_CLASSIFICATION	i18n[generalpropertiespanel.right=right]
WITHOUT_CLASSIFICATION	set up cancel button i18n[celldatapopup.cancel=cancel]
WITHOUT_CLASSIFICATION	i18n[helpviewerwindow.welcome=welcome]
WITHOUT_CLASSIFICATION	label for the date format combo used to enable/disable text i18n[datetypetimestamp.orlocaledependend= or locale-dependent format]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.entername=please enter a bookmark name with no blanks]
WITHOUT_CLASSIFICATION	i18n[schemapropertiescontroller.title=schemas]
WITHOUT_CLASSIFICATION	i18n[updatecontrollerimpl.updatecheckfailedtitle=update check failed]
WITHOUT_CLASSIFICATION	i18n[graph.invalidnumberformat=invalid number format. can not calculate new unit.]
WITHOUT_CLASSIFICATION	i18n[sqlpanel.opensqlhistory.hint=open sql history]
WITHOUT_CLASSIFICATION	i18n[editextras.escapedate=escape date]
WITHOUT_CLASSIFICATION	i18n[factoryprovidercontroller.filecreatefailed=file {0} could not be created {1}]
WITHOUT_CLASSIFICATION	i18n[sessionpropertiespanel.schemaprefix=limit schema objects using these comma-delimited prefixes]
WITHOUT_CLASSIFICATION	i18n[xmlrefomatter.noxml=the data does not contain any xml tags. no reformatting done.]
WITHOUT_CLASSIFICATION	i18n[createdatascriptofcurrentsqlcommand.noquery=no query found to create the script from.]
WITHOUT_CLASSIFICATION	i18n[helpviewerwindow.error.congen=error generating contents file]
WITHOUT_CLASSIFICATION	i18n[sqlresultexecuterpanel.rowsselected={0} row(s) selected]
WITHOUT_CLASSIFICATION	i18n[systemfunctionstab.hint=show all the system functions available in dbms]
WITHOUT_CLASSIFICATION	i18n[oracle.buffer.getsperrow=buffer gets per row]
WITHOUT_CLASSIFICATION	i18n[oracle.displaytriggerdetails=display trigger details]
WITHOUT_CLASSIFICATION	i18n[triggerdetailstab.hint=display trigger details]
WITHOUT_CLASSIFICATION	i18n[application.info.setjdbcdebuglogsuccess=jdbc debug log set to output stream successfully]
WITHOUT_CLASSIFICATION	i18n[sqlhistorydlg.filtered=filtered]
WITHOUT_CLASSIFICATION	i18n[graph.scripttable=script table]
WITHOUT_CLASSIFICATION	i18n[sequencedetailstab.title=details]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.nodeusermarks=user bookmarks]
WITHOUT_CLASSIFICATION	i18n[prelaunchhelperimpl.installupdatesmessage=updates are ready to be installed. install them now?]
WITHOUT_CLASSIFICATION	i18n[oracle.firstloadtime=first load time]
WITHOUT_CLASSIFICATION	i18n[laf.tabhint=fonts]
WITHOUT_CLASSIFICATION	i18n[editextras.convertstringbuferr=error executing convert to stringbuffer command {0}]
WITHOUT_CLASSIFICATION	i18n[syntax.abrevclose=close]
WITHOUT_CLASSIFICATION	i18n[graph.graphremoved=removed graph file "{0}"]
WITHOUT_CLASSIFICATION	i18n[firebird.triggerdetails=display trigger details]
WITHOUT_CLASSIFICATION	i18n[showdriverwebsitecommand.comfirm=no website url for the specified driver. would you like to add one?]
WITHOUT_CLASSIFICATION	i18n[userscript.scriptcompleted=script completed]
WITHOUT_CLASSIFICATION	i18n[indexdetailstab.hint=display index details]
WITHOUT_CLASSIFICATION	i18n[mysql.grants=mysql grants]
WITHOUT_CLASSIFICATION	i18n[application.error.showhelpwindow=error showing help window]
WITHOUT_CLASSIFICATION	i18n[graph.hidescrollbars=hide scrollbars]
WITHOUT_CLASSIFICATION	i18n[connectionstatustab.title=status]
WITHOUT_CLASSIFICATION	i18n[schemainfocacheserializer.beginstore=starting to write schema cache for alias {0}. file {1}]
WITHOUT_CLASSIFICATION	i18n[mssql.activity=displays the current activity on the sql server.]
WITHOUT_CLASSIFICATION	i18n[columnlistdialog.cancelbuttonlabel=cancel]
WITHOUT_CLASSIFICATION	i18n[graph.formats=formats]
WITHOUT_CLASSIFICATION	i18n[oracle.sessionstatistics=session statistics]
WITHOUT_CLASSIFICATION	i18n[codecompletion.udfwithoutparams=user defined function without parameter info myfunct()]
WITHOUT_CLASSIFICATION	i18n[logpanel.openlogs=press to open logs]
WITHOUT_CLASSIFICATION	i18n[triggerdetailstab.title=details]
WITHOUT_CLASSIFICATION	string null = "<null>" i18n[resultsetmentadataset.val=value]
WITHOUT_CLASSIFICATION	i18n[mssql.scriptpermission=script object-level permissions]
WITHOUT_CLASSIFICATION	i18n[columndetailsdialog.lengthlabel=length ]
WITHOUT_CLASSIFICATION	i18n[graph.newgraph=new table graph]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.nodesquirrelmarks=squirrel bookmarks]
WITHOUT_CLASSIFICATION	i18n[columndetailsdialog.dialectlabel=dialect ]
WITHOUT_CLASSIFICATION	i18n[timedatefunctionstab.hint=show all the time/date functions available in dbms]
WITHOUT_CLASSIFICATION	i18n[oracle.rowsperexec=rows per exec]
WITHOUT_CLASSIFICATION	i18n[sqlhistorydlg.filtercbocontains=contains]
WITHOUT_CLASSIFICATION	i18n[datatypeblob.readonfirstload=read contents when table is first loaded]
WITHOUT_CLASSIFICATION	i18n[derbyplugin.prefshint=set preferences for derby plugin]
WITHOUT_CLASSIFICATION	i18n[graphtofile.filechoosertitle=save image file(s)]
WITHOUT_CLASSIFICATION	i18n[mssql.msdos=ms-dos text (oem)]
WITHOUT_CLASSIFICATION	i18n[mysql.displayprocesses=(mysql) display database processes]
WITHOUT_CLASSIFICATION	i18n[exportconfig.ioerrorwritingto=io error writing to\n{0}]
WITHOUT_CLASSIFICATION	i18n[sqlscriptpreferencespanel.deleteactionlabel=action to take on delete]
WITHOUT_CLASSIFICATION	i18n[generalsessionpropertiespanel.table=table]
WITHOUT_CLASSIFICATION	i18n[logpanel.titleerror=last log entry (entry type error)]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.btntextview=view]
WITHOUT_CLASSIFICATION	i18n[dbutil.info.bindclobmem=bindclobvarinmemory binding '{0}' bytes]
WITHOUT_CLASSIFICATION	i18n[oracleprefspanel.description= "interactions with schema alias properties (see 'schemas' tab)\n \n 1. 'load all schemas cache none' oracle alias properties will take effect immediately.\n \n 2. 'load and cache all schemas' oracle alias properties will take effect on next 'refresh all' inside a session.\n \n 3. 'specify schema loading and caching' oracle alias properties will take effect when the schemas table on the 'schemas' tab is refreshed.\n \n note if schema alias properties are set to load all cache none and oracle alias properties is set to 'allow all schemas' this may result in very long session startup time.]
WITHOUT_CLASSIFICATION	i18n[datatypedate.full=full ({0})]
WITHOUT_CLASSIFICATION	i18n[dumpapplicationcommand.error.dumpingsystemprops=error dumping metadata]
WITHOUT_CLASSIFICATION	i18n[oraclepluginpreferencespanel.hiderecyclebincheckboxtooltip=recycle bin tables are a flashback database option in oracle 10g]
WITHOUT_CLASSIFICATION	i18n[userscript.selscripttodel=please select the script to delete]
WITHOUT_CLASSIFICATION	i18n[hibernateconfigpanel.config=configuration]
WITHOUT_CLASSIFICATION	i18n[driverslistinternalframe.error.ctrlf4key=probably closed by the ctrl f4 key. see basicdesktoppaneui.closeaction]
WITHOUT_CLASSIFICATION	i18n[databasemetadata.nullabletypenonulls=false]
WITHOUT_CLASSIFICATION	i18n[sequencedetailstab.hint=display sequence details]
WITHOUT_CLASSIFICATION	i18n[triggerdetailstab.title=details]
WITHOUT_CLASSIFICATION	i18n[oraclepluginpreferencespanel.hiderecyclebincheckboxlabel=remove recycle bin tables from the object tree]
WITHOUT_CLASSIFICATION	i18n[preferencespanel.truncatetable=truncate table before inserting data]
WITHOUT_CLASSIFICATION	i18n[graphtoclipboard.copybutton=copy image from selected tab]
WITHOUT_CLASSIFICATION	i18n[abstractrefactoringdialog.cancelbuttonlabel=cancel]
WITHOUT_CLASSIFICATION	i18n[preferencespanel.usecustomqttooltip=gives enhanced capabilities over the default query tokenizer for handling {0} scripts]
WITHOUT_CLASSIFICATION	i18n[oracle.parseschema=parse schema]
WITHOUT_CLASSIFICATION	i18n[graph.addtablerefbynohit=add table referenced by (no hit on fk)]
WITHOUT_CLASSIFICATION	i18n[sqlparam.quotevalues=quote values]
WITHOUT_CLASSIFICATION	i18n[updatepreferencespanel.statuslablesuccessmsg=connected successfully]
WITHOUT_CLASSIFICATION	i18n[application.error.setlaf=error setting laf]
WITHOUT_CLASSIFICATION	i18n[factoryproviderdialog.ok=ok]
WITHOUT_CLASSIFICATION	i18n[importtabledatacommand.cancel=cancel]
WITHOUT_CLASSIFICATION	i18n[popupeditableiopanel.commandreturnnot0=the convention for command returns is that 0 means success but this command returned {0}.\ndo you wish to import the file contents anyway?]
WITHOUT_CLASSIFICATION	i18n[datatypejavaobject.sqljavaobjecttype=sql javaobject (sql type 2000)]
WITHOUT_CLASSIFICATION	i18n[tableexportcsvdlg.useglobalprefsformatingexcel=use formating as configured in global prefs (recommended for ms excel)]
WITHOUT_CLASSIFICATION	i18n[schemapropertiespanel.schematableupdatelable2=in all schemas to]
WITHOUT_CLASSIFICATION	i18n[firebird.triggerdetails=display trigger details]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.enterdescription=please enter a bookmark description]
WITHOUT_CLASSIFICATION	i18n[dbutil.info.bindbloblength=bindblobvarinfile writing '{0}' bytes.]
WITHOUT_CLASSIFICATION	i18n[derbypluginpreferencespanel.readclobsfullycheckboxlabel=enable extended derby clob support]
WITHOUT_CLASSIFICATION	i18n[sessionstartuptimehintdlg.text=this session seems to take considerable time to load. you may configure alias schema properties to improve startup performance.]
WITHOUT_CLASSIFICATION	i18n[rowdatainputframe.insert=insert]
WITHOUT_CLASSIFICATION	i18n[mysql.tablenamelbl=table name]
WITHOUT_CLASSIFICATION	i18n[userscript.scriptpropsname=name]
WITHOUT_CLASSIFICATION	i18n[updatepreferencespanel.enableautoupdate=enable automatic updates]
WITHOUT_CLASSIFICATION	i18n[columnlistdialog.primarykeytitle=choose column(s) for primary key]
WITHOUT_CLASSIFICATION	i18n[exportconfig.errorwritingprefs=error occured writing to preferences file {0}]
WITHOUT_CLASSIFICATION	i18n[mssql.remove=<< remove]
WITHOUT_CLASSIFICATION	i18n[sqlval.pwdpref=password]
WITHOUT_CLASSIFICATION	i18n[schemapropertiespanel.loadallandcachenone=load all schemas cache none]
WITHOUT_CLASSIFICATION	i18n[syntax.hasbeenautocorr={0} has been auto corrected / extended to {1}. to configure auto correct / abreviations see menu session --> syntax --> configure auto correct / abreviation]
WITHOUT_CLASSIFICATION	i18n[oraclexmltypedatatypecomponent.cellerrormsg=<error see log file>]
WITHOUT_CLASSIFICATION	i18n[syntax.selcolor2=select color]
WITHOUT_CLASSIFICATION	i18n[generalsessionpropertiespanel.text=text]
WITHOUT_CLASSIFICATION	i18n[sqlval.settingsanon=anonymous]
WITHOUT_CLASSIFICATION	i18n[popupeditableiopanel.nofile=no file selected]
WITHOUT_CLASSIFICATION	i18n[codecompletionpreferencespanel.numberoftables=number of tables]
WITHOUT_CLASSIFICATION	i18n[firebird.showview=show view source]
WITHOUT_CLASSIFICATION	i18n[dialectutils.columncommentunsupported={0} doesn''t support column comments]
WITHOUT_CLASSIFICATION	i18n[favs.savedqueries=saved queries]
WITHOUT_CLASSIFICATION	i18n[postgresplugin.showviewsource=show view source]
WITHOUT_CLASSIFICATION	i18n[factoryprovidercontroller.filecreated=file {0} has been successfully created.]
WITHOUT_CLASSIFICATION	i18n[tabletypestab.title=table types]
WITHOUT_CLASSIFICATION	i18n[specialcolumnmapping.skip=skip]
WITHOUT_CLASSIFICATION	i18n[generalpreferencespanel.squirreluserpath=user directory -userdir {0}]
WITHOUT_CLASSIFICATION	i18n[graph.dina3=din a 3]
WITHOUT_CLASSIFICATION	impossible.
WITHOUT_CLASSIFICATION	i18n[updatepreferencespanel.sitetypelabel=site type]
WITHOUT_CLASSIFICATION	i18n[myurlclassloader.noassigncheck=failed to load {0} in {1} to check if it is assignable to {2}. reason {3}]
WITHOUT_CLASSIFICATION	i18n[importtabledatacommand.sqlerroroccured=an error occured while reading database data.] i18n[importtabledatacommand.error=error]
WITHOUT_CLASSIFICATION	i18n[dbutil.error.tablenotfound=couldn't locate table '{0}' in schema '(1)']
WITHOUT_CLASSIFICATION	i18n[laf.menus=menus]
WITHOUT_CLASSIFICATION	i18n[graph.invalidname=invalid name]
WITHOUT_CLASSIFICATION	i18n[popupeditableiopanel.executeerror=execute error]
WITHOUT_CLASSIFICATION	i18n[mssql.unicode=international text (unicode)]
WITHOUT_CLASSIFICATION	i18n[importdataintotableexecutor.sqlexception=a database error occured while inserting data] i18n[importdataintotableexecutor.error=error]
WITHOUT_CLASSIFICATION	i18n[downloadstatuseventhandler.changesrecordedmsg=requested changes will be made when squirrel is restarted]
WITHOUT_CLASSIFICATION	i18n[whereclausepanel.operatorslabel=operators]
WITHOUT_CLASSIFICATION	i18n[graph.height=height]
WITHOUT_CLASSIFICATION	i18n[informixexceptionformatter.notavailablemsg=not available]
WITHOUT_CLASSIFICATION	i18n[mysql.hinttabstatus=(mysql) table status]
WITHOUT_CLASSIFICATION	i18n[syntax.addrow=add row]
WITHOUT_CLASSIFICATION	i18n[helpviewerwindow.error.loadlicencefile=error retrieving licence file url for {0}]
WITHOUT_CLASSIFICATION	i18n[datasetviewertablepanel.textcantbeconverted=the given text cannot be converted into the internal object.\nthe database has not been changed.\nthe conversion error was\n{0}]
WITHOUT_CLASSIFICATION	i18n[mysql.processes=mysql processes]
WITHOUT_CLASSIFICATION	i18n[editwherecolspanel.nopk=the table ''{0}'' doesn't have a primary key.]
WITHOUT_CLASSIFICATION	i18n[cancelstatementthread.closefailed=failed to close statement. propably the driver/rddbms does not support canceling statements. see logs for further details ({0})]
WITHOUT_CLASSIFICATION	i18n[xmlrefomatter.malformedxml=possible mal-formed xml\n starting tag was {0}\nending tag was {1}\ncontinuing with reformatting xml."]
WITHOUT_CLASSIFICATION	i18n[sequencedetailstab.hint=display sequence details]
WITHOUT_CLASSIFICATION	i18n[syntax.corext=correction / extension]
WITHOUT_CLASSIFICATION	i18n[oracle.displayssequencedetails=display sequence details]
WITHOUT_CLASSIFICATION	i18n[memorypanel.statusdialogtitle=session garbage collection status]
WITHOUT_CLASSIFICATION	i18n[mssql.refreshnow=refresh now]
WITHOUT_CLASSIFICATION	i18n[rowdatainputframe.propname=input new row data]
WITHOUT_CLASSIFICATION	i18n[mssql.scriptdatabase=script database]
WITHOUT_CLASSIFICATION	i18n[resulttab.elapsedtime=total {0} sql query {1} building output {2}]
WITHOUT_CLASSIFICATION	i18n[schemastab.title=schemas]
WITHOUT_CLASSIFICATION	i18n[sqlhistorydlg.title=sql history for {0}]
WITHOUT_CLASSIFICATION	i18n[mssql.allsps=all stored procedures]
WITHOUT_CLASSIFICATION	i18n[userscript.dlgtabecp=extra class path]
WITHOUT_CLASSIFICATION	i18n[columnlistdialog.primarykeynamelabel=primary key name ]
WITHOUT_CLASSIFICATION	i18n[columndetailsdialog.columntypetoottip={0} does not support altering column type]
WITHOUT_CLASSIFICATION	i18n[codecompletion.udfwithparams=user defined function with parameter info myfunct(<in integer tid>)]
WITHOUT_CLASSIFICATION	i18n[datasetupdateabletablemodelimpl.error.unknownupdateerror=unknown problem during update.\nno count of updated rows was returned.\ndatabase may be corrupted!]
WITHOUT_CLASSIFICATION	i18n[columndetailsdialog.modifycolumntitle=modify column]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.deleteconfirm=do you really wish to delete the selected bookmark?]
WITHOUT_CLASSIFICATION	i18n[tableexportcsvdlg.ok=ok]
WITHOUT_CLASSIFICATION	i18n[mssql.generatesqlscript=generate sql script]
WITHOUT_CLASSIFICATION	i18n[mysql.opentables=mysql open tables]
WITHOUT_CLASSIFICATION	i18n[sybaseaseplugin.hint=preferences for sybasease]
WITHOUT_CLASSIFICATION	i18n[preferencespanel.coltypemappingborderlabel=column type mapping]
WITHOUT_CLASSIFICATION	i18n[syntax.italic=italic]
WITHOUT_CLASSIFICATION	i18n[mysql.hintgrants=(mysql) grants]
WITHOUT_CLASSIFICATION	i18n[columndetailsdialog.typelabel=type ]
WITHOUT_CLASSIFICATION	i18n[hqlentrypanelmanager.quotehql=quote hql]
WITHOUT_CLASSIFICATION	i18n[schemapropertiespanel.schematabletitle=schema table]
WITHOUT_CLASSIFICATION	i18n[sqlval.loonas=log on as]
WITHOUT_CLASSIFICATION	i18n[application.info.jdbcwritersuccess=jdbc debug log set to writer successfully]
WITHOUT_CLASSIFICATION	i18n[graph.savegraph=save graph]
WITHOUT_CLASSIFICATION	i18n[updatecontrollerimpl.prompttodownloadavailableupdatesmsg=there are updates available. do you want to download them now?]
WITHOUT_CLASSIFICATION	i18n[mysqltriggerdetailstab.title=details]
WITHOUT_CLASSIFICATION	i18n[columnlistdialog.droptitle=select column(s) to drop]
WITHOUT_CLASSIFICATION	i18n[hibernatesqlpanel.result=sql result]
WITHOUT_CLASSIFICATION	i18n[helpviewerwindow.title=squirrel sql client help]
WITHOUT_CLASSIFICATION	i18n[contentstab.hint=view the contents of the selected table]
WITHOUT_CLASSIFICATION	i18n[generalsessionpropertiespanel.datatype1=properties for the individual data types may be set in the]
WITHOUT_CLASSIFICATION	i18n[sqlresultexecuterpanel.sqllabel=sql]
WITHOUT_CLASSIFICATION	i18n[hibernatesqlpanel.format=format]
WITHOUT_CLASSIFICATION	i18n[syntaxplugin.touppercase=touppercase]
WITHOUT_CLASSIFICATION	i18n[tableexportcsvdlg.executecommand=execute command (%file will be replaced by export file name)]
WITHOUT_CLASSIFICATION	i18n[indexestab.hint=show indexes for the selected table]
WITHOUT_CLASSIFICATION	i18n[sqlval.clientborder=client]
WITHOUT_CLASSIFICATION	i18n[sqlresultexecuterpanel.scriptquerystatistics=executed {0} queries elapsed time (seconds) - total {1} sql query {2} building output {3}]
WITHOUT_CLASSIFICATION	[i18n[orderbyclausepanel.orderbyclauselabel=order by clause]
WITHOUT_CLASSIFICATION	[i18n[orderbyclausepanel.addlabel=add]
WITHOUT_CLASSIFICATION	i18n[userscript.execon=execute script on {0}]
WITHOUT_CLASSIFICATION	i18n[validatorglobalpreferencestab.title=sql validator]
WITHOUT_CLASSIFICATION	i18n[rowinputdataframe.conversiontointernerr=the given text cannot be converted into the internal object.\nthe database has not been changed.\nthe conversion error was\n{0}]
WITHOUT_CLASSIFICATION	i18n[graphtoclipboard.closebutton=close]
WITHOUT_CLASSIFICATION	i18n[xmlreformatter.malformedxmlat=malformed xml. no ending tag seen for text starting at\n{0}]
WITHOUT_CLASSIFICATION	i18n[mssql.alldefaults=all defaults]
WITHOUT_CLASSIFICATION	i18n[graph.rightclicktable=right click table in object tree to add to graph]
WITHOUT_CLASSIFICATION	i18n[userscript.dlgtabscriptsgentempl=generate script template]
WITHOUT_CLASSIFICATION	i18n[editextras.timestamp=time stamp]
WITHOUT_CLASSIFICATION	i18n[popupeditableiopanel.fileopenerrorheader=file open error]
WITHOUT_CLASSIFICATION	i18n[sequencedetailstab.title=details]
WITHOUT_CLASSIFICATION	i18n[dumpapplicationcommand.title.systemprops=system properties]
WITHOUT_CLASSIFICATION	i18n[updatemanagerdialog.pathlabel=path]
WITHOUT_CLASSIFICATION	i18n[updatepreferencespanel.testlabel=test connection]
WITHOUT_CLASSIFICATION	i18n[aboutboxdialog.info.startmemtime=starting memory timer (aboutbox)]
WITHOUT_CLASSIFICATION	i18n[datasetupdateabletablemodelimpl.error.duringinsert=exception seen during check on db. exception was\n{0}\ninsert was probably not completed correctly. db may be corrupted!]
WITHOUT_CLASSIFICATION	i18n[mssql.onefileperobject=create one file per object]
WITHOUT_CLASSIFICATION	i18n[columnpriviligestab.hint=show access rights for columns in the selected table]
WITHOUT_CLASSIFICATION	[i18n[orderbyclausepanel.orderdirectionlabel=order direction]
WITHOUT_CLASSIFICATION	i18n[popupeditableiopanel.overwritewarning=file overwrite warning]
WITHOUT_CLASSIFICATION	i18n[popupeditableiopanel.exporterror100=export error]
WITHOUT_CLASSIFICATION	i18n [memorypanel.gcstatustooltip={0} sessions waiting for garbage collection]
WITHOUT_CLASSIFICATION	i18n[metadatatab.title=metadata]
WITHOUT_CLASSIFICATION	i18n[xmlreformatter.no=no]
WITHOUT_CLASSIFICATION	i18n[hibernate.hibernatetabpanel.connect=connect/disconnect configuration selected configuration]
WITHOUT_CLASSIFICATION	i18n[sqlscript.configyourmultitablescriptixatend=constraints and indexes at end of script]
WITHOUT_CLASSIFICATION	no first row so we cannot retrieve the data i18n[datasetupdateabletablemodelimpl.error.nomatchingrow=could not find any row in db matching current row in table]
WITHOUT_CLASSIFICATION	i18n[mysql.structureanddata=structure and data]
WITHOUT_CLASSIFICATION	i18n[popupeditableiopanel.numberbase=number base]
WITHOUT_CLASSIFICATION	i18n[hibernatetabpanel.mappedobjects=mapped objects]
WITHOUT_CLASSIFICATION	i18n[graphtoclipboard.title=copy graph image pages to clipboard]
WITHOUT_CLASSIFICATION	i18n[generalsessionpropertiespanel.maintabs=main tabs]
WITHOUT_CLASSIFICATION	i18n[popupeditableiopanel.cannotexec=cannot execute a null command.\nplease enter a command in the command field before clicking on execute.]
WITHOUT_CLASSIFICATION	i18n[sequencedetailstab.title=details]
WITHOUT_CLASSIFICATION	i18n[datatypebigdecimal.scaleeceeded=scale exceeded number of digits to right of decimal place ({0})\nis greater than allowed in column ({1}).]
WITHOUT_CLASSIFICATION	i18n[tabletypestab.hint=show all the table types available in dbms]
WITHOUT_CLASSIFICATION	i18n[oracle.details=details]
WITHOUT_CLASSIFICATION	i18n[helpviewerwindow.error.loadchangelog=error generating change log entry for plugin {0}]
WITHOUT_CLASSIFICATION	i18n[datatypetimestamp.full=full ({0})]
WITHOUT_CLASSIFICATION	i18n[hibernatetabcontroller.hint=support for hibernate]
WITHOUT_CLASSIFICATION	i18n[columndetailsdialog.columnnulllabel={0} does not support altering column nullability]
WITHOUT_CLASSIFICATION	i18n[graph.scriptalltables=script all tables]
WITHOUT_CLASSIFICATION	i18n[syntax.styles=syntax styles]
WITHOUT_CLASSIFICATION	i18n[mysql.showlogs=(mysql) show logs]
WITHOUT_CLASSIFICATION	i18n[aboutboxdialog.systempanelcreatetime=systempanel created in ]
WITHOUT_CLASSIFICATION	i18n[laf.settings=look and feel settings]
WITHOUT_CLASSIFICATION	i18n[sqlscript.configyourmultitablescript=configure your multi table script]
WITHOUT_CLASSIFICATION	i18n[sqlval.technologyversion=technology version]
WITHOUT_CLASSIFICATION	i18n[dialectutils.columntypeunsupported={0} doesn''t support altering a column's type attribute]
WITHOUT_CLASSIFICATION	i18n[hibernate.hqltosqlshort=convert hql to sql (ctrl + enter)]
WITHOUT_CLASSIFICATION	i18n[popupeditableiopanel.wraplines=wrap lines on/off]
WITHOUT_CLASSIFICATION	i18n[schemainfo.loadingdatatypes=loading data types]
WITHOUT_CLASSIFICATION	i18n[updatemanagerdialog.checkbuttonlabel=check]
WITHOUT_CLASSIFICATION	i18n[oracleprefspanelcontroller.title=oracle]
WITHOUT_CLASSIFICATION	i18n[rowidtab.hint=show columns that uniquely identify a row]
WITHOUT_CLASSIFICATION	i18n[numericfunctionstab.title=numeric functions]
WITHOUT_CLASSIFICATION	i18n[userscript.enterscriptname=please enter a script name]
WITHOUT_CLASSIFICATION	i18n[dialectutils.columnnameunsupported={0} doesn''t support altering a column''s name]
WITHOUT_CLASSIFICATION	i18n[tableexportcsvdlg.exportcsvfile=export to file]
WITHOUT_CLASSIFICATION	i18n[hibernateattribuitedataset.attrclassname=attribute class name]
WITHOUT_CLASSIFICATION	i18n[aliaspropertiesinternalframe.title=properties for alias {0}]
WITHOUT_CLASSIFICATION	i18n[triggerdetailstab.hint=display trigger details]
WITHOUT_CLASSIFICATION	i18n[mssql.add_menmonic="]
WITHOUT_CLASSIFICATION	i18n[oracle.diskreadsperexec=disk reads per exec]
WITHOUT_CLASSIFICATION	i18n[editwherecolspanel.notusecolumns=not use columns]
WITHOUT_CLASSIFICATION	i18n[updatecontrollerimpl.prompttodownloadavailableupdatestitle=updates available]
WITHOUT_CLASSIFICATION	i18n[xmlrefomatter.unexpectedproblem=unexpected problem during formatting.]
WITHOUT_CLASSIFICATION	i18n[laf.warning=note changes may not take effect until the application is restarted.]
WITHOUT_CLASSIFICATION	i18n[popupeditableiopanel.wrapword=wrap on word on/off]
WITHOUT_CLASSIFICATION	i18n[datatypetime.medium=medium ({0})]
WITHOUT_CLASSIFICATION	i18n[oracle.diplayscriptdetails=display script details]
WITHOUT_CLASSIFICATION	i18n[mysqlplugin.showtriggersource=show trigger source]
WITHOUT_CLASSIFICATION	i18n[mysql.withallfields=with all fields]
WITHOUT_CLASSIFICATION	i18n[resulttab.resultstabtitle=results]
WITHOUT_CLASSIFICATION	i18n[mappingroot.driverversion=jdbc driver version (hibernate)]
WITHOUT_CLASSIFICATION	i18n[sqlresultexecuterpanel.cancelmsg=press cancel to stop]
WITHOUT_CLASSIFICATION	i18n[helpviewerwindow.error.loadwelcomefile=error retrieving welcome file url for {0}]
WITHOUT_CLASSIFICATION	i18n[syntax.separators=separators]
WITHOUT_CLASSIFICATION	i18n[codecompletion.prefixconfig=configure function completion for function name prefixes]
WITHOUT_CLASSIFICATION	i18n[mssql.add=add >>]
WITHOUT_CLASSIFICATION	i18n[sybaseaseplugin.showviewsource=show view source]
WITHOUT_CLASSIFICATION	i18n[exportconfig.errorsavingaliases=error saving aliases]
WITHOUT_CLASSIFICATION	i18n[columndetailsdialog.newcolumnvalue=newcolumn]
WITHOUT_CLASSIFICATION	i18n[codecompletion.unknowntable=unknown table {0}]
WITHOUT_CLASSIFICATION	i18n[columnlistdialog.droperrortitle=too many columns selected]
WITHOUT_CLASSIFICATION	i18n[hibernatetabpanel.hql=hql]
WITHOUT_CLASSIFICATION	i18n[schematableupdatewhatitem.tables=tables]
WITHOUT_CLASSIFICATION	i18n[datasetviewereditabletablepanel.norowsdeleted={0}\nno rows deleted from database.]
WITHOUT_CLASSIFICATION	i18n[tableexportcsvcontroller.filechooserbutton=choose]
WITHOUT_CLASSIFICATION	i18n[popupeditableiopanel.filechoosererror=file chooser error]
WITHOUT_CLASSIFICATION	i18n[tableexportcsvdlg.usedefaultformating=use default formating]
WITHOUT_CLASSIFICATION	i18n[oracle.showtriggersource=show trigger source]
WITHOUT_CLASSIFICATION	i18n[databasemetadata.searchabletypepredchar=only supports 'wherelike']
WITHOUT_CLASSIFICATION	i18n[userscript.applicabletotarget=scripts applicable to selected targets]
WITHOUT_CLASSIFICATION	i18n[graph.addfoldingpoint=add folding point]
WITHOUT_CLASSIFICATION	i18n[sqlscript.configyourmultitablescriptok=ok]
WITHOUT_CLASSIFICATION	i18n[oracleplugin.timestampwarning=the setting to use string literals for timestamps may result in the inability to edit tables containing these columns. if this problem occurs open global preferences -> data type controls and set timestamps to use "jdbc standard escape format"]
WITHOUT_CLASSIFICATION	i18n[prelaunchhelperimpl.restorefrombackuptitle=confirm restore from backup
WITHOUT_CLASSIFICATION	i18n[datetypetimestamp.typetimestamp=timestamp (sql type 93)]
WITHOUT_CLASSIFICATION	i18n[graph.addreltables=add all related tables]
WITHOUT_CLASSIFICATION	i18n[exportconfig.filesavedto={0} saved to {1}]
WITHOUT_CLASSIFICATION	i18n[columndetailsdialog.executebuttonlabel=execute]
WITHOUT_CLASSIFICATION	set up update button i18n[celldatapopup.updatedata=update data]
WITHOUT_CLASSIFICATION	i18n[schemainfocacheserializer.endstore=finished writing schema cache for alias{0}. file {1}]
WITHOUT_CLASSIFICATION	i18n[codecompletion.prefs.table.spwithparams=sp with params]
WITHOUT_CLASSIFICATION	i18n[refactoringpreferencespanel.qualifycheckboxlabel=qualify table names in scripts with schema]
WITHOUT_CLASSIFICATION	i18n[updatepreferencespanel.server=server]
WITHOUT_CLASSIFICATION	set up dialog to ask user if it is ok to proceed important this dialog is synchronous (ie. we do not proceed until user gives a response). this is critical since this function provides a return value to its caller that depends on the user input. i18n[basedatasetviewerdestination.warning2=warning]
WITHOUT_CLASSIFICATION	i18n[dbcopyglobalpreferencestab.title=db copy]
WITHOUT_CLASSIFICATION	i18n[syntax.enableautocorr=enable auto correct / abreviation]
WITHOUT_CLASSIFICATION	i18n[lockdetailstab.title=locks]
WITHOUT_CLASSIFICATION	i18n[oracle.instancedetails=details]
WITHOUT_CLASSIFICATION	columns
WITHOUT_CLASSIFICATION	i18n[refactoringpreferencestab.hint=settings for the refactoring plugin]
WITHOUT_CLASSIFICATION	i18n[oracle.sortsperexec=sorts per exec]
WITHOUT_CLASSIFICATION	i18n[columndetailsdialog.modifycolumntitle=modify column]
WITHOUT_CLASSIFICATION	i18n[importfiledialog.suggestcolumnsignorecase=ignore case]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.norunselection=please select the bookmark to run]
WITHOUT_CLASSIFICATION	i18n[csvsettingspanel.csvsettings=csv settings]
WITHOUT_CLASSIFICATION	i18n[resulttab.statementlabel=sql]
WITHOUT_CLASSIFICATION	i18n[syntax.findexplain=press f3 to go to next result. press ctrl+shift+f7 to toggle highlight search.]
WITHOUT_CLASSIFICATION	i18n[popupeditableiopanel.exporterror8=export error]
WITHOUT_CLASSIFICATION	i18n[importfiledialog.fileimport=import file]
WITHOUT_CLASSIFICATION	add help licence and change log nodes to the tree. i18n[helpviewerwindow.help=help]
WITHOUT_CLASSIFICATION	i18n[editwhercolssheet.close=close]
WITHOUT_CLASSIFICATION	i18n[graph.graphrenamed=renamed "{0}" to "{1}"]
WITHOUT_CLASSIFICATION	i18n[indexdetailstab.title=details]
WITHOUT_CLASSIFICATION	i18n[datasetupdateabletablemodelimpl.error.exceptionduringcheck=exception seen during check on db. exception was\n{0}\nupdate is probably not safe to do.\ndo you wish to proceed?]
WITHOUT_CLASSIFICATION	i18n[windowmanager.errorselectingwindow=error selecting window]
WITHOUT_CLASSIFICATION	i18n[columndetailsdialog.scalelabel=scale ]
WITHOUT_CLASSIFICATION	i18n[generalsessionpropertiespanel.objecttabs=object tabs]
WITHOUT_CLASSIFICATION	i18n[popupeditableiopanel.exporterror7=export error]
WITHOUT_CLASSIFICATION	i18n[dbutil.info.executequery=executequery running sql\n '{0}']
WITHOUT_CLASSIFICATION	pane.addtab(mergecolumndialog.i18n.tabbedpane_columns_label _columntab)
WITHOUT_CLASSIFICATION	i18n[updatepreferencespanel.port=port]
WITHOUT_CLASSIFICATION	i18n[userscript.selscripttoedit=please select the script to edit]
WITHOUT_CLASSIFICATION	i18n[hibernateattribuitedataset.tablecols=table columns]
WITHOUT_CLASSIFICATION	i18n[indexdetailstab.title=details]
WITHOUT_CLASSIFICATION	i18n[syntax.prefuseoster=use ostermiller editor]
WITHOUT_CLASSIFICATION	i18n[updatepreferencespanel.statuslablefailuremsg=connection failed. see log for error.]
WITHOUT_CLASSIFICATION	i18n[graph.close=close]
WITHOUT_CLASSIFICATION	i18n[sqlresultexecuterpanel.scriptstmtcounts=row update counts {0} inserts {1} selects {2} updates {3} deletes
WITHOUT_CLASSIFICATION	i18n[dualprogressbardialog.error.getdialog=getdialog unable to invokeandwait for dialog]
WITHOUT_CLASSIFICATION	i18n[graph.refreshalltables=refresh all tables]
WITHOUT_CLASSIFICATION	i18n[triggerdetailstab.title=details]
WITHOUT_CLASSIFICATION	i18n[celldatapopup.cannnotbgeconverted=the given text cannot be converted into the internal object.\n please change the data or cancel editing.\n the conversion error was\n{0}]
WITHOUT_CLASSIFICATION	i18n[dbutil.error.missingtable=getforeignkeysql table '{0}' has a column '{1}' that references table '{2}' column '{3}'. however that table is not being copied. skipping this foreign key.]
WITHOUT_CLASSIFICATION	i18n[db2plugin.showproceduresource=show procedure source]
WITHOUT_CLASSIFICATION	empty body.
WITHOUT_CLASSIFICATION	empty body.
WITHOUT_CLASSIFICATION	empty body.
WITHOUT_CLASSIFICATION	empty body.
WITHOUT_CLASSIFICATION	empty body.
WITHOUT_CLASSIFICATION	if we don't invokelater here no short-cut-key is sent to the internal frame seen under java version "1.4.1_01" and linux
WITHOUT_CLASSIFICATION	if we don't invokelater here no short-cut-key is sent to the internal frame seen under java version "1.4.1_01" and linux
WITHOUT_CLASSIFICATION	if we don't invokelater here no short-cut-key is sent to the internal frame seen under java version "1.4.1_01" and linux
WITHOUT_CLASSIFICATION	this is a funny functionality anyway and leads to problems with the docktabstyle. e.g. when sessionproperties is closed first tab gets selected.
WITHOUT_CLASSIFICATION	find the internal frame in the list of internal frames and remove it.
WITHOUT_CLASSIFICATION	has to be done directly on the main frame because of racing condition at start up.
WITHOUT_CLASSIFICATION	has to be done directly on the main frame because of racing condition at start up.
WITHOUT_CLASSIFICATION	root.setdefaultbutton(_okbtn)
WITHOUT_CLASSIFICATION	guaranteed to be non-null.
WITHOUT_CLASSIFICATION	guaranteed to be non-null.
WITHOUT_CLASSIFICATION	guaranteed to be non-null.
WITHOUT_CLASSIFICATION	guaranteed to be non-null.
WITHOUT_CLASSIFICATION	guaranteed to be non-null.
WITHOUT_CLASSIFICATION	guaranteed to be non-null.
WITHOUT_CLASSIFICATION	guaranteed to be non-null.
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	required with the first beta of jdk1.4.1 to stop this scrollpane from being too tall.
WITHOUT_CLASSIFICATION	lazily create the event.
WITHOUT_CLASSIFICATION	viewer.removeinternalframelistener(_lis)
WITHOUT_CLASSIFICATION	empty block.
WITHOUT_CLASSIFICATION	instance creation
WITHOUT_CLASSIFICATION	primary key name
WITHOUT_CLASSIFICATION	all rules passed so enable the buttons.
WITHOUT_CLASSIFICATION	see also loadschemanames()
WITHOUT_CLASSIFICATION	note if we are here _cacheschemaindependentmetadata must be false
WITHOUT_CLASSIFICATION	this seems to be necessary to get background colours correct. without it labels added to the content pane have a dark background while those added to a jpanel in the content pane have a light background under the java look and feel. similar effects occur for other look and feels.
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	i18n[i18n.includetimestamp=include timestamp in modified properties file]
WITHOUT_CLASSIFICATION	i18n[i18n.couldnotcreateworkdir=could not create working directory {0}]
WITHOUT_CLASSIFICATION	i18n[i18n.propscopymsg=copied existing translations from {0} to {1}]
WITHOUT_CLASSIFICATION	i18n[i18n.workingdir=working directory]
WITHOUT_CLASSIFICATION	i18n[i18n.editorcommand=editor command]
WITHOUT_CLASSIFICATION	i18n[i18n.tranlationsgenerationmessage=\n#\n#missing translation generated by i18n plugin on {0}\n#]
WITHOUT_CLASSIFICATION	startparts[1] contains our i18n string key followed by </span>
WITHOUT_CLASSIFICATION	i18n[i18n.nativetoascii=path to native to unicode converter (jdk's native2ascii)]
WITHOUT_CLASSIFICATION	i18n[i18n.workdirdoesnotexistquestioncreate=working directory {0} does not exist.\ndo you want to create it?]
WITHOUT_CLASSIFICATION	i18n[i18n.nativetoasciioutdir=native2ascii output dir]
WITHOUT_CLASSIFICATION	i18n[i18n.noworkdir=working directory doesn't exist.\ndo you want to create it?]
WITHOUT_CLASSIFICATION	dump table types.
WITHOUT_CLASSIFICATION	i18n[i18n.tranlations=translations]
WITHOUT_CLASSIFICATION	i18n[i18n.bundles=bundles]
WITHOUT_CLASSIFICATION	i18n[i18n.failedtoopenzip=failed to open zip/jar {0}]
WITHOUT_CLASSIFICATION	i18n[i18n.executenativetoascii=execute nativetoascii]
WITHOUT_CLASSIFICATION	i18n[i18n.appendi18nstringsprops=create/append i18nstring.properties files]
WITHOUT_CLASSIFICATION	i18n[i18n.changeapplicationdefaultlocalenote=example vm parameters to change locale used by squirrel -duser.language=en -duser.country=us]
WITHOUT_CLASSIFICATION	i18n[i18n.noworkdir=please choose a work dir to store your translations.]
WITHOUT_CLASSIFICATION	i18n[i18n.locales=locales]
WITHOUT_CLASSIFICATION	i18n[i18n.generatetemplatecomments=generate template comments for missing translations]
WITHOUT_CLASSIFICATION	i18n[i18n.loadbundles=load bundles]
WITHOUT_CLASSIFICATION	i18n[driverpropertiescontroller.nodriverselected=no driver available in this alias.\ncan not load driver properties tab.]
WITHOUT_CLASSIFICATION	i18n[i18n.workdirisnodir=the working directory is not a directory.\nno bundles will be loaded from {0}]
WITHOUT_CLASSIFICATION	i18n[driverpropertiescontroller.loadingdriverfailed=loading jdbc driver "{0}" failed.\ncan not load driver properties tab.]
WITHOUT_CLASSIFICATION	add more space between the label and the button
WITHOUT_CLASSIFICATION	add more space to the top of the component
WITHOUT_CLASSIFICATION	has to be done here e.g. when "close all sessions" menu was used.
WITHOUT_CLASSIFICATION	needes to be done via event queque because method is not called from the event disptach thread.
WITHOUT_CLASSIFICATION	actions.get(sqlfilteraction.class).setenabled(false)
WITHOUT_CLASSIFICATION	needed to guarantee other components a focus lost and to allow to enter the tabs components via tab key in a well defined way (the user can see where the focus is).
WITHOUT_CLASSIFICATION	_tree.addtreeselectionlistener(new objecttreeselectionlistener()) _objtreesellis = new objecttreeselectionlistener() _tree.addtreeselectionlistener(_objtreesellis)
WITHOUT_CLASSIFICATION	metrics of the component used in the constructor
WITHOUT_CLASSIFICATION	we don't destroy the timer when there's nothing happening because it would mean a lot more work on every single awt event that gets dispatched.
WITHOUT_CLASSIFICATION	break when first braket found
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	void sessioninternalframeopened(sessioninternalframe sessioninternalframe isession sess)
WITHOUT_CLASSIFICATION	span across two columns
WITHOUT_CLASSIFICATION	span across two columns
WITHOUT_CLASSIFICATION	span across two columns
WITHOUT_CLASSIFICATION	span across two columns
WITHOUT_CLASSIFICATION	span across two columns
WITHOUT_CLASSIFICATION	span across two columns
WITHOUT_CLASSIFICATION	span across two columns
WITHOUT_CLASSIFICATION	span across two columns
WITHOUT_CLASSIFICATION	increases component width by 40 pixels
WITHOUT_CLASSIFICATION	increases component width by 20 pixels
WITHOUT_CLASSIFICATION	private simpleattributeset _saseterrorhistory
WITHOUT_CLASSIFICATION	thread safe support for every call to this method
WITHOUT_CLASSIFICATION	if we could not identify which table to edit tell user
WITHOUT_CLASSIFICATION	if we could not identify which table to edit tell user
WITHOUT_CLASSIFICATION	if we could not identify which table to edit tell user
WITHOUT_CLASSIFICATION	if we could not identify which table to edit tell user
WITHOUT_CLASSIFICATION	mouse listener used to display popup menu.
WITHOUT_CLASSIFICATION	if the object representing the actual data (i.e. this object) can be edited by the user then the fw objects need to have a reference to it. updateable objects must implement an interface derived from idatasetupdateablecomponent in the net.sourceforge.squirrel_sql.fw.datasetviewer package. if the component does not implement that interface then we just keep going but if it does implement it then we need to tell the datasetscrollingpanel that the object that fw needs to call is this one.
WITHOUT_CLASSIFICATION	if the file using the base name with no extention exists it is first. the other files are in order from oldest to newest. the set of files to delete is slightly different depending on whether the base name file exists or not.
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	there are some fields that cannot be used in a where clause either because there cannot be an exact match (e.g. real float) or because we may not have the actual data in hand (blob/clob) or because the data cannot be expressed in a string form (e.g. binary). an update to one of those fields will look like we are replacing one row with an identical row (because we can only "see" the fields that we know how to do wheres on). therefore when we are updating them there should be exactly one row that matches all of our other fields and when we are not updating one of these special types of fields there should be no rows that exactly match our criteria (we hope). we determine whether this field is one that cannot be used in the where clause by checking the value returned for that field to use in the where clause. any field that can be used there will return something of the form "<fieldname> = <value>" and a field that cannot be used will return a null or zero-length string.
WITHOUT_CLASSIFICATION	there should be one row in the data so try to move to it
WITHOUT_CLASSIFICATION	we have at least one row so try to retrieve the object do not limit the read of this data
WITHOUT_CLASSIFICATION	return the whole contents of this column in the db
WITHOUT_CLASSIFICATION	go on to the next item
WITHOUT_CLASSIFICATION	for each row in table do delete and add to number of rows deleted from db
WITHOUT_CLASSIFICATION	we need to keep track of the bind var index separately since the number of column defs may not be the number of bind vars (for example auto-increment columns are excluded)
WITHOUT_CLASSIFICATION	no support for undo
WITHOUT_CLASSIFICATION	jason removed as part of patch void removesessionlistener(isessionlistener lis)
WITHOUT_CLASSIFICATION	if the user has cancelled the query don't bother logging an error message. it is likely that the cancel request interfered with the attempt to fetch results from the resultset which is to be expected when the statement is closed. so let's not bug the user with obvious error messages that we can do nothing about.
WITHOUT_CLASSIFICATION	each call to _stmt.getmoreresults() places the to the next output. as long as it is a resultset we process it
WITHOUT_CLASSIFICATION	there is no need to close result sets if we call _stmt.getmoreresults() because it implicitly closes any current resultset. on db2 version 7.1 it is even harmful to close a resultset explicitly. _stmt.getmoreresults() will never return true anymore if you do.
WITHOUT_CLASSIFICATION	implementataion of idatasetupdateabletablemodel delegation to _datasetupdateabletablemodel
WITHOUT_CLASSIFICATION	always wrap on word boundaries
WITHOUT_CLASSIFICATION	nextch already done
WITHOUT_CLASSIFICATION	touppercase replaces the german ß by ss. this will kill reformating later. since upperin is just for building pieces it is ok to place ß here.
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	execute the sql synchronously
WITHOUT_CLASSIFICATION	execute the sql synchronously
WITHOUT_CLASSIFICATION	execute the sql synchronously
WITHOUT_CLASSIFICATION	execute the sql synchronously
WITHOUT_CLASSIFICATION	execute the sql synchronously
WITHOUT_CLASSIFICATION	execute the sql synchronously
WITHOUT_CLASSIFICATION	execute the sql synchronously
WITHOUT_CLASSIFICATION	execute the sql synchronously
WITHOUT_CLASSIFICATION	execute the sql synchronously
WITHOUT_CLASSIFICATION	execute the sql synchronously
WITHOUT_CLASSIFICATION	execute the sql synchronously
WITHOUT_CLASSIFICATION	execute the sql synchronously
WITHOUT_CLASSIFICATION	execute the sql synchronously
WITHOUT_CLASSIFICATION	execute the sql synchronously
WITHOUT_CLASSIFICATION	execute the sql synchronously
WITHOUT_CLASSIFICATION	execute the sql synchronously
WITHOUT_CLASSIFICATION	execute the sql synchronously
WITHOUT_CLASSIFICATION	execute the sql synchronously
WITHOUT_CLASSIFICATION	execute the sql synchronously
WITHOUT_CLASSIFICATION	iapplication app = getapplication() cursorchanger cursorchg = new cursorchanger(app.getmainframe()) cursorchg.show() try { new shownativesqlcommand(_session).execute() } finally { cursorchg.restore() }
WITHOUT_CLASSIFICATION	private integeridentifierfactory _idfactory = new integeridentifierfactory()
WITHOUT_CLASSIFICATION	_listeners.add(isqlexecutionlistener.class lis)
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	i have seen the reference to the outer class being null when this method is called. i have seen it only with the runtime jars and on linux. i could not reproduce in my ide.
WITHOUT_CLASSIFICATION	sql contains columns from multiple tables so we cannot use all of the columns in a where clause and it becomes difficult to know which table (or tables!) an edited column belongs to. therefore limit the output to be read-only
WITHOUT_CLASSIFICATION	sticky tab was closed
WITHOUT_CLASSIFICATION	back-off a bit after a hundred updates to allow the ui to update
WITHOUT_CLASSIFICATION	must not be done in the gui thread
WITHOUT_CLASSIFICATION	register tabs to display in the details panel for catalog nodes.
WITHOUT_CLASSIFICATION	register tabs to display in the details panel for procedure nodes.
WITHOUT_CLASSIFICATION	assume dbms doesn't support catalogs.
WITHOUT_CLASSIFICATION	no more automatic restarts because key events will restart the parser from now on.
WITHOUT_CLASSIFICATION	do not change the values of this constants. these constants where introduced to make the parser code more readable. care was taken. still it can not be guaranteed that changing a value will not be harmful.
WITHOUT_CLASSIFICATION	new line
WITHOUT_CLASSIFICATION	new line
WITHOUT_CLASSIFICATION	new line
WITHOUT_CLASSIFICATION	new line
WITHOUT_CLASSIFICATION	new line
WITHOUT_CLASSIFICATION	new line
WITHOUT_CLASSIFICATION	use all of the columns
WITHOUT_CLASSIFICATION	private string _sqloutputmetadataclassname = idatasetdestinations.read_only_table
WITHOUT_CLASSIFICATION	make sure we are starting clean
WITHOUT_CLASSIFICATION	note a caseinsensitivestring can be a mutable string. in fact it is a mutable string here because this is usually called from within syntax coloring which uses a mutable string.
WITHOUT_CLASSIFICATION	note a caseinsensitivestring can be a mutable string. in fact it is a mutable string here because this is usually called from within syntax coloring which uses a mutable string.
WITHOUT_CLASSIFICATION	load all table types with catalog = doi.getcatalog() and schema = doi.getschema()
WITHOUT_CLASSIFICATION	private transient string[] availabletypesindatabase
WITHOUT_CLASSIFICATION	copyonwritearraylist is unfortunately not sort-able as a list. so this will throw an unsupportedoperationexception collections.sort(_itableinfos new tableinfosimplenamecomparator()) the following is the best approach according to concurrency master doug lea in this post httposdir.com/ml/java.jsr.166-concurrency/2004-06/msg00001.html here we copy the existing internal array into a new array that is large enough to hold the original and new elements. then sort it. and finally create a new copyonwritearraylist with the sorted array.
WITHOUT_CLASSIFICATION	columns have not yet been loaded
WITHOUT_CLASSIFICATION	if characters don't match but case may be ignored try converting both characters to uppercase. if the results match then the comparison scan should continue.
WITHOUT_CLASSIFICATION	helper methods
WITHOUT_CLASSIFICATION	first time through this method in program so go cleanup old log files
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	noi18n
WITHOUT_CLASSIFICATION	when user leaves a cell after editing it the contents of that cell need to be converted from a string into an object of the appropriate type before updating the table. however when the call comes from the popup window the data has already been converted and validated. we assume that a string being passed in here is a value from a text field that needs to be converted to an object and a non-string object has already been validated and converted.
WITHOUT_CLASSIFICATION	when user leaves a cell after editing it the contents of that cell need to be converted from a string into an object of the appropriate type before updating the table. however when the call comes from the popup window the data has already been converted and validated. we assume that a string being passed in here is a value from a text field that needs to be converted to an object and a non-string object has already been validated and converted.
WITHOUT_CLASSIFICATION	default is to do nothing. derived classes must override this to accomplish anything.
WITHOUT_CLASSIFICATION	save for possible future use
WITHOUT_CLASSIFICATION	better safe than sorry!
WITHOUT_CLASSIFICATION	better safe than sorry!
WITHOUT_CLASSIFICATION	save various info about the column for use in user input validation when editing table contents. note that the columndisplaysize is included two times where the first entry may be adjusted for actual display while the second entry is the size expected by the db. the isnullable() method returns three values that we convert into two by saying that if it is not known whether or not a column allows nulls we will allow the user to enter nulls and any problems will be caught when they try to save the data to the db
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	/ implement the idatasettablecontrols interface functions needed to support table operations these functions are called from within myjtable and mytable to tell those classes how to operate. the code in these functions will be different depending on whether the table is read-only or editable. the definitions below are for read-only operation. the editable table panel overrides these functions with the versions that tell the tables how to set up for editing operations. /
WITHOUT_CLASSIFICATION	double tablewidth =_table.getcolumnmodel().gettotalcolumnwidth() scale
WITHOUT_CLASSIFICATION	return method.getparametertypes().length == 1 && method.getparametertypes()[0] == int.class && method.getreturntype() != void.type
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	the cellrenderer used for this data type
WITHOUT_CLASSIFICATION	the cellrenderer used for this data type
WITHOUT_CLASSIFICATION	the cellrenderer used for this data type
WITHOUT_CLASSIFICATION	the cellrenderer used for this data type
WITHOUT_CLASSIFICATION	first we have the methods for in-cell and text-table operations
WITHOUT_CLASSIFICATION	first we have the methods for in-cell and text-table operations
WITHOUT_CLASSIFICATION	this datatype does not limit the data read during the initial load of the table so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	this datatype does not limit the data read during the initial load of the table so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	this datatype does not limit the data read during the initial load of the table so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	this datatype does not limit the data read during the initial load of the table so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. this happens only in the jtextfield not the jtextarea so we can make this an inner class within this method rather than a separate inner class as is done with the keytexthandler class.
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. this happens only in the jtextfield not the jtextarea so we can make this an inner class within this method rather than a separate inner class as is done with the keytexthandler class.
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. this happens only in the jtextfield not the jtextarea so we can make this an inner class within this method rather than a separate inner class as is done with the keytexthandler class.
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. this happens only in the jtextfield not the jtextarea so we can make this an inner class within this method rather than a separate inner class as is done with the keytexthandler class.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data the same one used in text and in-cell operations.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data the same one used in text and in-cell operations.
WITHOUT_CLASSIFICATION	internal class for handling key events during editing of both jtextfield and jtextarea.
WITHOUT_CLASSIFICATION	internal class for handling key events during editing of both jtextfield and jtextarea.
WITHOUT_CLASSIFICATION	internal class for handling key events during editing of both jtextfield and jtextarea.
WITHOUT_CLASSIFICATION	internal class for handling key events during editing of both jtextfield and jtextarea.
WITHOUT_CLASSIFICATION	internal class for handling key events during editing of both jtextfield and jtextarea.
WITHOUT_CLASSIFICATION	as a coding convenience create a reference to the text component that is typecast to jtextcomponent. this is not essential as we could typecast every reference but this makes the code cleaner
WITHOUT_CLASSIFICATION	tabs and newlines get put into the text before this check so remove them this only applies to popup editing since these chars are not passed to this level by the in-cell editor.
WITHOUT_CLASSIFICATION	tabs and newlines get put into the text before this check so remove them this only applies to popup editing since these chars are not passed to this level by the in-cell editor.
WITHOUT_CLASSIFICATION	remove all instances of the offending char
WITHOUT_CLASSIFICATION	remove all instances of the offending char
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	database-related functions
WITHOUT_CLASSIFICATION	try to use the db default value
WITHOUT_CLASSIFICATION	if there was a problem with converting then just fall through and continue as if there was no default given in the db. otherwise use the converted object
WITHOUT_CLASSIFICATION	if there was a problem with converting then just fall through and continue as if there was no default given in the db. otherwise use the converted object
WITHOUT_CLASSIFICATION	if there was a problem with converting then just fall through and continue as if there was no default given in the db. otherwise use the converted object
WITHOUT_CLASSIFICATION	if there was a problem with converting then just fall through and continue as if there was no default given in the db. otherwise use the converted object
WITHOUT_CLASSIFICATION	if there was a problem with converting then just fall through and continue as if there was no default given in the db. otherwise use the converted object
WITHOUT_CLASSIFICATION	if there was a problem with converting then just fall through and continue as if there was no default given in the db. otherwise use the converted object
WITHOUT_CLASSIFICATION	field is not nullable so create a reasonable default value
WITHOUT_CLASSIFICATION	file io related functions
WITHOUT_CLASSIFICATION	convert file text into a string special case some systems tack a newline at the end of the text read. assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	as a coding convenience create a reference to the text component that is typecast to jtextcomponent. this is not essential as we could typecast every reference but this makes the code cleaner
WITHOUT_CLASSIFICATION	as a coding convenience create a reference to the text component that is typecast to jtextcomponent. this is not essential as we could typecast every reference but this makes the code cleaner
WITHOUT_CLASSIFICATION	as a coding convenience create a reference to the text component that is typecast to jtextcomponent. this is not essential as we could typecast every reference but this makes the code cleaner
WITHOUT_CLASSIFICATION	as a coding convenience create a reference to the text component that is typecast to jtextcomponent. this is not essential as we could typecast every reference but this makes the code cleaner
WITHOUT_CLASSIFICATION	as a coding convenience create a reference to the text component that is typecast to jtextcomponent. this is not essential as we could typecast every reference but this makes the code cleaner
WITHOUT_CLASSIFICATION	as a coding convenience create a reference to the text component that is typecast to jtextcomponent. this is not essential as we could typecast every reference but this makes the code cleaner
WITHOUT_CLASSIFICATION	as a coding convenience create a reference to the text component that is typecast to jtextcomponent. this is not essential as we could typecast every reference but this makes the code cleaner
WITHOUT_CLASSIFICATION	as a coding convenience create a reference to the text component that is typecast to jtextcomponent. this is not essential as we could typecast every reference but this makes the code cleaner
WITHOUT_CLASSIFICATION	as a coding convenience create a reference to the text component that is typecast to jtextcomponent. this is not essential as we could typecast every reference but this makes the code cleaner
WITHOUT_CLASSIFICATION	as a coding convenience create a reference to the text component that is typecast to jtextcomponent. this is not essential as we could typecast every reference but this makes the code cleaner
WITHOUT_CLASSIFICATION	handle cases of null the processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	handle cases of null the processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	handle cases of null the processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	about to delete last thing in field so replace with null
WITHOUT_CLASSIFICATION	if we have seen a property for this datatype before then the hashmap already exists. otherwise we need to create it now.
WITHOUT_CLASSIFICATION	if use is not looking for ascii chars or if this one is one that is not printable then convert it into numeric form
WITHOUT_CLASSIFICATION	return a jtextarea usable in the cellpopupdialog and fill in the value.
WITHOUT_CLASSIFICATION	file io related functions
WITHOUT_CLASSIFICATION	convert file text into a string special case some systems tack a newline at the end of the text read. assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	convert file text into a string special case some systems tack a newline at the end of the text read. assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	convert file text into a string special case some systems tack a newline at the end of the text read. assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	convert file text into a string special case some systems tack a newline at the end of the text read. assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	convert file text into a string special case some systems tack a newline at the end of the text read. assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	if both objs are null then they matched in the previous test so at this point we know that at least one of them (or both) is not null. however one of them may still be null and we cannot call equals() on the null object so make sure that the one we call it on is not null. the equals() method handles the other one being null if it is.
WITHOUT_CLASSIFICATION	if both objs are null then they matched in the previous test so at this point we know that at least one of them (or both) is not null. however one of them may still be null and we cannot call equals() on the null object so make sure that the one we call it on is not null. the equals() method handles the other one being null if it is.
WITHOUT_CLASSIFICATION	first convert the string representation into the binary bytes it is describing
WITHOUT_CLASSIFICATION	data was not fully read in before so try to do that now
WITHOUT_CLASSIFICATION	if you add this method to one of the standard datatypes in the fw/datasetviewer/cellcomponent directory you must also add the name of that datatype class to the list in cellcomponentfactory method getcontrolpanels variable named initialclassnamelist. if the class is being registered with the factory using registerdatatype then you should not include the class name in the list (it will be found automatically) but if the datatype is part of the case statement in the factory method getdatatypeobject then it does need to be explicitly listed in the getcontrolpanels method also.
WITHOUT_CLASSIFICATION	if you add this method to one of the standard datatypes in the fw/datasetviewer/cellcomponent directory you must also add the name of that datatype class to the list in cellcomponentfactory method getcontrolpanels variable named initialclassnamelist. if the class is being registered with the factory using registerdatatype then you should not include the class name in the list (it will be found automatically) but if the datatype is part of the case statement in the factory method getdatatypeobject then it does need to be explicitly listed in the getcontrolpanels method also.
WITHOUT_CLASSIFICATION	gui components - need to be here because they need to be accessible from the event handlers to alter each other's state.
WITHOUT_CLASSIFICATION	end of constructor for inner class
WITHOUT_CLASSIFICATION	we are limiting some things. if the string we have is less than the limit then we are ok and do not need to re-read (because we already have the whole thing).
WITHOUT_CLASSIFICATION	total number of threads.
WITHOUT_CLASSIFICATION	return empty list if source string is empty.
WITHOUT_CLASSIFICATION	need to adjust param which is 1-based(jdbc) to a 0-based number for array access
WITHOUT_CLASSIFICATION	clobs are different from normal data types in that what is actually read from the db is a descriptor pointing to the data rather than the data itself. during the initial load of the table the values read from the descriptor may have been limited but the descriptor itself has been completely read therefore we do not need to re-read the datum from the database because we know that we have the entire descriptor. if the contents of the clob have been limited during the initial table load that will be discovered when we check if the cell is editable and the full data will be read at that time using this descriptor.
WITHOUT_CLASSIFICATION	if you add this method to one of the standard datatypes in the fw/datasetviewer/cellcomponent directory you must also add the name of that datatype class to the list in cellcomponentfactory method getcontrolpanels variable named initialclassnamelist. if the class is being registered with the factory using registerdatatype then you should not include the class name in the list (it will be found automatically) but if the datatype is part of the case statement in the factory method getdatatypeobject then it does need to be explicitly listed in the getcontrolpanels method also.
WITHOUT_CLASSIFICATION	if you add this method to one of the standard datatypes in the fw/datasetviewer/cellcomponent directory you must also add the name of that datatype class to the list in cellcomponentfactory method getcontrolpanels variable named initialclassnamelist. if the class is being registered with the factory using registerdatatype then you should not include the class name in the list (it will be found automatically) but if the datatype is part of the case statement in the factory method getdatatypeobject then it does need to be explicitly listed in the getcontrolpanels method also.
WITHOUT_CLASSIFICATION	if you add this method to one of the standard datatypes in the fw/datasetviewer/cellcomponent directory you must also add the name of that datatype class to the list in cellcomponentfactory method getcontrolpanels variable named initialclassnamelist. if the class is being registered with the factory using registerdatatype then you should not include the class name in the list (it will be found automatically) but if the datatype is part of the case statement in the factory method getdatatypeobject then it does need to be explicitly listed in the getcontrolpanels method also.
WITHOUT_CLASSIFICATION	if you add this method to one of the standard datatypes in the fw/datasetviewer/cellcomponent directory you must also add the name of that datatype class to the list in cellcomponentfactory method getcontrolpanels variable named initialclassnamelist. if the class is being registered with the factory using registerdatatype then you should not include the class name in the list (it will be found automatically) but if the datatype is part of the case statement in the factory method getdatatypeobject then it does need to be explicitly listed in the getcontrolpanels method also.
WITHOUT_CLASSIFICATION	the dateformat object to use for all locale-dependent formatting. this is reset each time the user changes the previous settings.
WITHOUT_CLASSIFICATION	save pointer to object needed to render value for use in the inner class delegate
WITHOUT_CLASSIFICATION	we want to detect two empty text values in a row before we decide to restore the original value. since 'text' contains the new value we want to allow the first empty 'text' so that the user can clear the field and on the second one we will set it to the original value.
WITHOUT_CLASSIFICATION	now define the popup-related operations.
WITHOUT_CLASSIFICATION	internal class for handling key events during editing of both jtextfield and jtextarea. since neither cell nor popup are allowed to edit just ignore anything seen here.
WITHOUT_CLASSIFICATION	create the panel and add the gui items to it
WITHOUT_CLASSIFICATION	the other obj is null so see if this non-null obj contains a null value which is equivilent. assume that if we have read some of the data and we still have _data == null then the value in the db is actually null.
WITHOUT_CLASSIFICATION	both have actual data so compare the strings note that if one has read all of the data and the other has read only part of the data that we will say that they are not equal.
WITHOUT_CLASSIFICATION	both have actual data so compare the strings note that if one has read all of the data and the other has read only part of the data that we will say that they are not equal.
WITHOUT_CLASSIFICATION	tables that are netiher children nor parents - utility tables
WITHOUT_CLASSIFICATION	value is a simple string representation of the data but not the same one used in the text and in-cell operations. the in-cell version may replace newline chars with "\n" while this version does not. in other respects it is the same as the in-cell version because both use the _renderer object to do the rendering.
WITHOUT_CLASSIFICATION	first do special check to see if we should use longvarchar in the where clause. (oracle does not allow this.)
WITHOUT_CLASSIFICATION	convert to string special case some systems tack a newline at the end of the text read. assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	set the flag for whether or not to limit only on specific fields
WITHOUT_CLASSIFICATION	if you add this method to one of the standard datatypes in the fw/datasetviewer/cellcomponent directory you must also add the name of that datatype class to the list in cellcomponentfactory method getcontrolpanels variable named initialclassnamelist. if the class is being registered with the factory using registerdatatype then you should not include the class name in the list (it will be found automatically) but if the datatype is part of the case statement in the factory method getdatatypeobject then it does need to be explicitly listed in the getcontrolpanels method also.
WITHOUT_CLASSIFICATION	we have an appropriate data type object
WITHOUT_CLASSIFICATION	the first argument is a jtable which is only used by instances of jtextfield to convert coordinates on a double-click. since that cannot happen with the jtextarea do not bother passing the table.
WITHOUT_CLASSIFICATION	we should never not have an object here because we only get here when a datatype object has claimed that the column is editable. if there is no datatype for the column then the default in the iseditablexxx() methods in this class is to say that the column is not editable and therefore we should never have this method called in that case.
WITHOUT_CLASSIFICATION	if we get here then no data type object was found for this column. (should not get here because switch default returns null.)
WITHOUT_CLASSIFICATION	oracle's 'timestamp with time zone' == -101 oracle's 'timestamp with local time zone' == -102
WITHOUT_CLASSIFICATION	add begin
WITHOUT_CLASSIFICATION	if value contains "" it probably has a time component
WITHOUT_CLASSIFICATION	when the table initiates editing and sets this field remember the value as the original value of the field
WITHOUT_CLASSIFICATION	now the popup-related methods. these are not quite symmetric with the in-cell calls because the conversion of the object into the text to display in the popup is handled internally to the datatype object inside getjtextarea() so we do not need a "renderobjectinpopup" function visible to the rest of the world.
WITHOUT_CLASSIFICATION	internal class for handling key events during editing of both jtextfield and jtextarea. since the unknown data type is not editable either in the cell or in the popup we should never get here but we have provided appropriate code just in case.
WITHOUT_CLASSIFICATION	public static final int no_action = 0 public static final int cascade_delete = 1 public static final int set_default = 2 public static final int set_null = 3
WITHOUT_CLASSIFICATION	we don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	i tried to use the length from the source database (postgresql) which yielded 8192 for this test. so the column def in fb was binary_column bit varying(8192). yet it gave me an exception that indicated truncation (string data right truncation???) so for now go back to hard-coded maximal length. registercolumntype(types.binary 2147000000"bit varying($l)")
WITHOUT_CLASSIFICATION	alter table fktestchildtable add constraint foo_const unique (myid)
WITHOUT_CLASSIFICATION	alter table fktestchildtable add constraint foo_const unique (myid)
WITHOUT_CLASSIFICATION	"alter table $tablename$ " + "add constraint $constraintname$ unique ($columnname separator=\"\"$)"
WITHOUT_CLASSIFICATION	db2 spec says max=2147483647 but the driver throws an exception
WITHOUT_CLASSIFICATION	db2 spec says max=2147483647 but the driver throws an exception
WITHOUT_CLASSIFICATION	alter table <table_name> add foreign key [<referential_constraint_name>] (<referencing_column>) references <referenced_table> [(<referenced_column>)] [<delete_rule>]
WITHOUT_CLASSIFICATION	"alter table $childtablename$ " + "add $constraint$ $constraintname$ foreign key ( $childcolumn separator=\"\"$ ) " + "references $parenttablename$ ( $parentcolumn separator=\"\"$ )"
WITHOUT_CLASSIFICATION	<create_index_statement> = create [unique] index <index_name> on <table_name> (<index_spec>) <index_spec> = <index_column_name> | <dbfunction_name> (<column_name>) [asc|desc] <index_column_name> = <column_name> [asc|desc]
WITHOUT_CLASSIFICATION	"create view $viewname$ " + "as $selectstatement$ $withcheckoption$"
WITHOUT_CLASSIFICATION	"create view $viewname$ " + "as $selectstatement$ $withcheckoption$"
WITHOUT_CLASSIFICATION	<rename_view_statement> = rename view <old_table_name> to <new_table_name> <old_table_name> = <table_name> <new_table_name> = <table_name
WITHOUT_CLASSIFICATION	features
WITHOUT_CLASSIFICATION	additional index creation
WITHOUT_CLASSIFICATION	in sybase default keyword must appear prior to null/not null
WITHOUT_CLASSIFICATION	create sequence sequencename increment by increment minvalue minimum maxvalue maxvalue restart with restart cache cache cycle
WITHOUT_CLASSIFICATION	finally try to set the catalog which appears to be a no-op in the informix driver.
WITHOUT_CLASSIFICATION	need to adjust param which is 1-based(jdbc) to a 0-based number for array access
WITHOUT_CLASSIFICATION	if we've loop through one time for each character in the string then something must be wrong. get out!
WITHOUT_CLASSIFICATION	since we can use a correlated sub-query to update all rows in one statement we don't care about the set values unless fromtables is null in which case we go with a normal update. using the set values would require an update statement for each row in the merged table for each column that was merged in which is incredibly inefficient. however the api is intended to support database dialects that can't handle correlated sub-queries.
WITHOUT_CLASSIFICATION	"alter sequence $sequencename$ " + "$restartwith$ $startvalue$ " + "$incrementby$ $incrementvalue$ "
WITHOUT_CLASSIFICATION	mysql disallows quoted column identifiers.
WITHOUT_CLASSIFICATION	from mysql 5.0 reference alter table tbl_name add [constraint symbol] foreign key [id] (index_col_name ) references tbl_name (index_col_name ) [on delete {restrict | cascade | set null | no action}] [on update {restrict | cascade | set null | no action}]
WITHOUT_CLASSIFICATION	from mysql 5.0 reference manual alter [ignore] table tbl_name alter_specification [ alter_specification] alter_specification | add [constraint [symbol]] unique [index|key] [index_name] [index_type] (index_col_name)
WITHOUT_CLASSIFICATION	from postgresql 8.2 documentation create [ unique ] index [ concurrently ] name on table [ using method ] ( { column | ( expression ) } [ opclass ] [ ] ) [ with ( storage_parameter = value [ ] ) ] [ tablespace tablespace ] [ where predicate ]
WITHOUT_CLASSIFICATION	update tablename set setcolumn1 = setvalue1 setcolumn2 = setvalue2 from fromtable1 fromtable2 where wherecolumn1 = wherevalue1 and wherecolumn2 = wherevalue2
WITHOUT_CLASSIFICATION	in oracle on update actions are not supported
WITHOUT_CLASSIFICATION	alter table <tablename> add [constraint <constraintname>] primary key (<column list>)
WITHOUT_CLASSIFICATION	the index is needed in case this method is called with schema = null catalog = null and two tables with the same name in different schemas/catalogs. without the index the same ordinal position could only occur once.
WITHOUT_CLASSIFICATION	during assignable checks many classes can't be loaded but don't cause problems either. so we just issue an info.
WITHOUT_CLASSIFICATION	no exceptions during logging
WITHOUT_CLASSIFICATION	variables ======================================================================== non visible logger for this class
WITHOUT_CLASSIFICATION	timesten reference claims this is a supported operation but it yields an exception for me alter table test modify nodefaultvarcharcol default 'default value' exception in thread "main" java.sql.sqlexception [timesten][timesten 6.0.1 odbc driver][timesten]tt1001 syntax error in sql statement before or at "nodefaultvarcharcol" character position 26 -- file "ptsqly.y" lineno 1940 procedure "sbptparsesql()" string alterclause = dialectutils.modify_clause string defaultclause = dialectutils.default_clause return dialectutils.getcolumndefaultaltersql(this info alterclause false defaultclause) so for now just throw an exception
WITHOUT_CLASSIFICATION	do not use axion's bigint data type. i get the following exception in my test org.axiondb.axionexception invalid value "3074478078827346" for column (bigint_type_table).bigint_column expected numeric(2010) data exception numeric value out of range can someone please tell me why axion expects big integers to be limited to 20 precision and 10 scale?(integers should have scale == 0 right?) so an axion bigint is limited to just 20 digits to the left of the decimal point. todo consider filing a bug report against axion build m3. 38 is the maximum precision for axion's numeric type.
WITHOUT_CLASSIFICATION	db2 needs to reorg table after changing nullabolity
WITHOUT_CLASSIFICATION	db2 doesn't support adding an auto-increment column once the table has already been created. so this can simulate one using trigger on the table to access a sequence. found this idea at wikibooks httpen.wikibooks.org/wiki/sql_dialects_reference/data_structure_definition/auto-increment_column create sequence sequence_name create table table_name ( column_name int ) create trigger insert_trigger no cascade before insert on table_name referencing new as n for each row set n.column_name = nextval for sequence_name
WITHOUT_CLASSIFICATION	update t set a = (select a from t2 where t.b = t2.b) string templatestr = "update $desttablename$ set $columnname$ = " + "(select $columnname$ from $sourcetablename$ " + "where $sourcetablename$.$wherecolumnname$ = $desttablename$.$wherecolumnvalue$" stringtemplate st = new stringtemplate(templatestr)
WITHOUT_CLASSIFICATION	"create $unique$ $storageoption$ index $indexname$ " + "on $tablename$ ( $columnname separator=\"\"$ )"
WITHOUT_CLASSIFICATION	save the pointer needed for insert and delete operations
WITHOUT_CLASSIFICATION	tell the rest of the world that the table has changed. the 'fire' method used here is very course - it says that the whole table has been changed when really only one row has been added. however finer-grained methods did not seem to cause the right effect so i'm using this one untill someone reports a problem with it. also if either of these notifications (the actual model and the sortable model) are eliminated it either throws an exception or does not update the gui. go figure. finally the 'fire' on the _acutalmodel is triggered from this method rather than from inside the myjtable code because the add() method used to add a row is also used when loading the table with lots of rows and in that case we do not want to generate events until all of the rows have been added so the 'fire' cannot happen there.
WITHOUT_CLASSIFICATION	at least one version of postgresql through the jdbc/odbc bridge returns an empty result set for the list of table types. another version of postgresql returns 6 entries of "system table" (which we have already filtered back to one).
WITHOUT_CLASSIFICATION	catalog schema tablename columnname keysequence pkname
WITHOUT_CLASSIFICATION	pointbase doesn't follow the spec with regard to column 11 of getcolumns (should return a type constant but instead returns a boolean.
WITHOUT_CLASSIFICATION	databaseobjecttype.udf_type_dbo=udf type
WITHOUT_CLASSIFICATION	-- path operations --
WITHOUT_CLASSIFICATION	/ a deadlock chain is circular and does not have a defined beginning pid. in order to make the string representation of a deadlock chain unique we put the smallest pid at the beginning of the chain.
WITHOUT_CLASSIFICATION	grab the current letter as a char
WITHOUT_CLASSIFICATION	grab the current letter as a char
WITHOUT_CLASSIFICATION	this will skip blank lines
WITHOUT_CLASSIFICATION	encountered a comment character at the beginning of the line so just ignore the rest of the line
WITHOUT_CLASSIFICATION	check to see if the column index is within the bounds of our header array
WITHOUT_CLASSIFICATION	this flag is used as a loop exit condition during parsing
WITHOUT_CLASSIFICATION	/ <summary> / how much usable data has been read into the stream / which will not always be as long as buffer.length. / </summary>
WITHOUT_CLASSIFICATION	idatatypecomponent interface methods
WITHOUT_CLASSIFICATION	copytablelistener interface methods
WITHOUT_CLASSIFICATION	yes
WITHOUT_CLASSIFICATION	no
WITHOUT_CLASSIFICATION	if the source column is distinct and the session is postgresql try to get the underlying type.
WITHOUT_CLASSIFICATION	date/time types never declare a length. just return something larger than 0 so we bypass other checks above.
WITHOUT_CLASSIFICATION	oracle declares the column size to be 4000 regardless of the maximum length of the clob field. so if the oracle blob/clob column contains values that exceed 4000 chars and we use colinfo.getcolumnsize() we might create a destination column that is too small for the data that will be copied from oracle. we specify a default value of 4000 in case the table has no records or if the blob/clob column contains only null values.
WITHOUT_CLASSIFICATION	skip this table try the next.
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	trim the column name in case of hadb
WITHOUT_CLASSIFICATION	trim the column name in case of hadb
WITHOUT_CLASSIFICATION	final iobjecttreeapi api = compat.getiobjecttreeapi(session this)
WITHOUT_CLASSIFICATION	break
WITHOUT_CLASSIFICATION	mockapplication
WITHOUT_CLASSIFICATION	only close the statement if sqlexception - otherwise it has to remain open until the resultset is read through by the caller.
WITHOUT_CLASSIFICATION	only close the statement if sqlexception - otherwise it has to remain open until the resultset is read through by the caller.
WITHOUT_CLASSIFICATION	trim the table name in case of hadb
WITHOUT_CLASSIFICATION	reads the value from the specified resultset at column index index and based on the type calls the appropriate setxxx method on ps with the value obtained. @param ps @param sourcecoltype @param destcoltype @param index @param rs @return a string representation of the value that was bound. @throws sqlexception
WITHOUT_CLASSIFICATION	don't change the case of the identifier if database allows mixed case.
WITHOUT_CLASSIFICATION	resultset rs = con.getmetadata().gettables("dbcopysrc" null "bigint_type_table" new string[]{ "table" })
WITHOUT_CLASSIFICATION	private class dbcopypluginresources extends pluginresources {dbcopypluginresources(string rsrcbundlebasename iplugin plugin) { super(rsrcbundlebasename plugin)}}
WITHOUT_CLASSIFICATION	column is in both table 1 and 2
WITHOUT_CLASSIFICATION	tablemodel tm = new defaulttablemodel(new string [] { "table" "column" } 4) { private static final long serialversionuid = -8826914717673025881l public boolean iscelleditable(int rowindex int columnindex) { return false }}
WITHOUT_CLASSIFICATION	add session ended listener -- needs for embedded derby db
WITHOUT_CLASSIFICATION	_treeapi.adddetailtab(databaseobjecttype.index new databaseobjectinfotab()) _treeapi.adddetailtab(databaseobjecttype.index new indexdetailstab())
WITHOUT_CLASSIFICATION	shutdown embedded derby db
WITHOUT_CLASSIFICATION	it is always thrown as said in embedded derby api. so it is not error it is info
WITHOUT_CLASSIFICATION	value is a simple string representation of the data but not the same one used in the text and in-cell operations. the in-cell version may replace newline chars with "\n" while this version does not. in other respects it is the same as the in-cell version because both use the _renderer object to do the rendering.
WITHOUT_CLASSIFICATION	/ ibm db 2 specific code to read view definitions.
WITHOUT_CLASSIFICATION	public folder getsubfolder(int idx) throws indexoutofboundsexception { / return (folder)_folders.get(idx) }
WITHOUT_CLASSIFICATION	string check_table = "checktable"
WITHOUT_CLASSIFICATION	supports session main window only
WITHOUT_CLASSIFICATION	tabs to add to the database node.
WITHOUT_CLASSIFICATION	variables ======================================================================== non visible ------------------------------------------------------------------------ logger for this class
WITHOUT_CLASSIFICATION	variables ======================================================================== non visible ------------------------------------------------------------------------ logger for this class
WITHOUT_CLASSIFICATION	variables ======================================================================== non visible ------------------------------------------------------------------------ logger for this class
WITHOUT_CLASSIFICATION	variables ======================================================================== non visible ------------------------------------------------------------------------ logger for this class
WITHOUT_CLASSIFICATION	visible (gui) ------------------------------------------------------------------------ -- main
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	visible (gui) ------------------------------------------------------------------------ -- misc
WITHOUT_CLASSIFICATION	"backup metadata only" "inhibit garbage collection" "save old style metadata descriptions" "transportable format" "backup external files as tables" "start backup"
WITHOUT_CLASSIFICATION	load properties and fill missing entries with the global preferences
WITHOUT_CLASSIFICATION	######################################################################## ########## events ######################################################################## ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	lbltitle.setbackground(new color(204204204)) lbltitle.setname("lbltitle") lbltitle.setopaque(true) lbltitle.settext("default values") etchedborder etchedborder1 = new etchedborder(etchedborder.raisednullnull) lbltitle.setborder(etchedborder1) jpanel1.add(lbltitlecc.xywh(2291))
WITHOUT_CLASSIFICATION	case session_bean_grant_and_revoke return new firebirdmanagergrantpreferencebean()
WITHOUT_CLASSIFICATION	/ we try to find a completely free space for the new table frame.
WITHOUT_CLASSIFICATION	index tab
WITHOUT_CLASSIFICATION	these classes have no package see swingsetthemes.jar
WITHOUT_CLASSIFICATION	/ this theme was presented to squirrel by karsten lentzsch of jgoodies.com. it is squirrel's default theme if the laf plugin is not used. here we make the allbluesboldmetaltheme also available within the laf plugin. thanks a lot karsten.
WITHOUT_CLASSIFICATION	call sp_help on the stored procedure then look at the second resultset for the parameter information.
WITHOUT_CLASSIFICATION	the constructor above sets this from resources but we'll override it with the name of the index.
WITHOUT_CLASSIFICATION	i do believe the getsimplename() will end in 1 if it's a procedure and 0 if it's a udf.
WITHOUT_CLASSIFICATION	grant { all [ privileges ] | permission [ n ] } { [ ( column [ n ] ) ] on { table | view } | on { table | view } [ ( column [ n ] ) ] | on { stored_procedure | extended_procedure } | on { user_defined_function } } to security_account [ n ] [ with grant option ] [ as { group | role } ] revoke [ grant option for ] { all [ privileges ] | permission [ n ] } { [ ( column [ n ] ) ] on { table | view } | on { table | view } [ ( column [ n ] ) ] | on { stored_procedure | extended_procedure } | on { user_defined_function } } { to | from } security_account [ n ] [ cascade ] [ as { group | role } ]
WITHOUT_CLASSIFICATION	private javax.swing.jcombobox cbfieldtype private javax.swing.jcheckbox chautoincrement private javax.swing.jcheckbox chbinary private javax.swing.jcheckbox chnotnull private javax.swing.jcheckbox chunsigned private javax.swing.jlabel lbattributes private javax.swing.jlabel lbdefault private javax.swing.jlabel lbfieldlength private javax.swing.jlabel lbfieldname private javax.swing.jlabel lbfieldtype private javax.swing.jlabel lbfields private javax.swing.jtextfield tffielddefault private javax.swing.jtextfield tffieldlength private javax.swing.jcombobox cbfieldname private javax.swing.jbutton buttonupdate private javax.swing.jbutton buttoncancel private jdialog _dlog private fielddetails fd private int selectedindex private dbutils dbutils protected string sqlcommandroot = "alter table " protected string sqlcommand = "" end of variables declaration
WITHOUT_CLASSIFICATION	action performed for the combo box private void cbfieldnameactionperformed(java.awt.event.actionevent evt) { selectedindex = cbfieldname.getselectedindex() defaultcomboboxmodel combomodel = (defaultcomboboxmodel) cbfieldname.getmodel() fielddetails fd = (fielddetails) combomodel.getelementat(selectedindex) cbfieldname.setselecteditem(fd.getfieldname()) cbfieldtype.setselecteditem(fd.getfieldtype()) tffieldlength.settext(fd.getfieldlength()) tffielddefault.settext(fd.getdefault()) chautoincrement.setselected(fd.isautoincrement()) chnotnull.setselected(fd.isnotnull()) }
WITHOUT_CLASSIFICATION	final formlayout layout = new formlayout( "3dlu 75dlugrow(1.0) 3dlu" "centerprefgrow(1.0) 8dlu bottompref") final defaultformbuilder builder = new defaultformbuilder(layout) builder.setdefaultdialogborder() builder.setleadingcolumnoffset(1) builder.append(buildmainpanel(session ti)) builder.nextline() builder.appendseparator() builder.nextline() builder.append(buildtoolbar()) return builder.getpanel()
WITHOUT_CLASSIFICATION	boolean isselected = _exportprefschk.isselected() _exportprefstext.seteditable(isselected) _exportprefsbtn.setenabled(isselected) isselected = _exportdriverschk.isselected() _exportdriverstext.seteditable(isselected) _exportdriversbtn.setenabled(isselected) isselected = _exportaliaseschk.isselected() _exportaliasestext.seteditable(isselected) _exportaliasesbtn.setenabled(isselected) _includeusernameschk.setenabled(isselected) _includepasswordschk.setenabled(isselected)
WITHOUT_CLASSIFICATION	_exportdriverschk.addactionlistener(_mediator) _exportaliaseschk.addactionlistener(_mediator) _exportprefsbtn.addactionlistener(new browsebuttonlistener(_exportprefstext)) _exportdriversbtn.addactionlistener(new browsebuttonlistener( _exportdriverstext)) _exportaliasesbtn.addactionlistener(new browsebuttonlistener(_exportaliasestext)) _exportprefschk.setselected(prefs.getexportpreferences()) _exportdriverschk.setselected(prefs.getexportdrivers()) _exportaliaseschk.setselected(prefs.getexportaliases()) _includeusernameschk.setselected(prefs.getincludeusernames()) _includepasswordschk.setselected(prefs.getincludepasswords()) _exportprefstext.settext(prefs.getpreferencesfilename()) _exportdriverstext.settext(prefs.getdriversfilename()) _exportaliasestext.settext(prefs.getaliasesfilename())
WITHOUT_CLASSIFICATION	since it is likely to have the procedure separator on it's own line and it is key to letting us know that proceeding statements form a multi-statement procedure or function it deserves it's own place in the _queries arraylist. if it is followed by other procedure or function creation blocks we may fail to detect that so this just goes through the list and breaks apart statements on newline so that this cannot happen.
WITHOUT_CLASSIFICATION	nil out the timer so that it can be gc'd
WITHOUT_CLASSIFICATION	selects the distinct values from the source column.
WITHOUT_CLASSIFICATION	inserts all keys into the new column depending on the content in the old column.
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------ thread searching ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	/ there are a lot of goodies in the extsettingsinitializer that might be interesting in th future. unfortunately some conflicts with some of squirrels shortcuts are in extsettingsinitializer settings.removeinitializer(extsettingsinitializer.name) settings.addinitializer(new extsettingsinitializer() settings.core_level) /
WITHOUT_CLASSIFICATION	needs to be done at this moment. that's why we can't call updatefrompreferences() here.
WITHOUT_CLASSIFICATION	formatting
WITHOUT_CLASSIFICATION	printing set
WITHOUT_CLASSIFICATION	the parser didn't get triggered on shift+insert. we do it here by hand
WITHOUT_CLASSIFICATION	check for identifier
WITHOUT_CLASSIFICATION	case isa_slash state = init return sqltokencontext.minus
WITHOUT_CLASSIFICATION	this didn't work final int pos = getcaretposition() final document doc = _textarea.getstyleddocument() final element docelem = doc.getdefaultrootelement() final element lineelem = docelem.getelement(getcaretlinenumber()) return lineelem.getelementindex(pos)
WITHOUT_CLASSIFICATION	good - converting a url to a file this way is fine when the file path contains spaces
WITHOUT_CLASSIFICATION	this column is created in the create script abd unused unless testing db2
WITHOUT_CLASSIFICATION	tables might have triggers that depend on sequences so drop tables next.
WITHOUT_CLASSIFICATION	db2pkcol is used to create a pk when using db2. db2 doesn't allow you to add a pk to a table after it has been constructed unless the column(s) that comprise the pk were originally there when created and created not null.
WITHOUT_CLASSIFICATION	we need to add a second column to have a unique constraint so that we can drop that one. progress doesn't allow the very first index to ever be dropped.
WITHOUT_CLASSIFICATION	todo move to new standard location and rewrite test to be less static
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#initialize()
WITHOUT_CLASSIFICATION	(non-javadoc) @see net.sourceforge.squirrel_sql.client.plugin.iplugin#initialize()
WITHOUT_CLASSIFICATION	catalog schema tablename columnname datatype 1 == char typename columnsize decimaldigits radix isnullallowed defaultvalue isnullable
WITHOUT_CLASSIFICATION	need to adjust param which is 1-based(jdbc) to a 0-based number for array access
WITHOUT_CLASSIFICATION	null tests
WITHOUT_CLASSIFICATION	null tests
WITHOUT_CLASSIFICATION	this should throw an exception - should not allow multiple custom tokenizers to be installed for a single session.
WITHOUT_CLASSIFICATION	mock objects
WITHOUT_CLASSIFICATION	we could make this expectation more restrictive currently. however we might have impls that have wildly different queries in the future. we don't want to sacrifice flexibility to use this test for a "perceived" benefit of mirroring the current implementations.
WITHOUT_CLASSIFICATION	should at least bind the tablename to a bind var in the sql
WITHOUT_CLASSIFICATION	data
WITHOUT_CLASSIFICATION	mock objects
WITHOUT_CLASSIFICATION	filewrapper mockdownloadsdirectory = mockhelper.createmock("mockdownloadsdirectory" filewrapper.class) expect(mockdownloadsdirectory.isdirectory()).andstubreturn(true) expect(mockfilewrapperfactory.create(mockupdatedirectory updateutil.downloads_dir_name)) expectlastcall().andreturn(mockdownloadsdirectory)
WITHOUT_CLASSIFICATION	expect(backupfile.getabsolutepath()).andreturn("mockbackupframeworkjarfile")
WITHOUT_CLASSIFICATION	mockresultset = mockhelper.createmock(resultset.class)
WITHOUT_CLASSIFICATION	java6 types rowid nvarchar nchar longnvarchar nclob sqlxml
WITHOUT_CLASSIFICATION	local expectations
WITHOUT_CLASSIFICATION	local expectations
WITHOUT_CLASSIFICATION	this function returns the resulting process from the exec
WITHOUT_CLASSIFICATION	regression test for harmony-382
WITHOUT_CLASSIFICATION	invalid file uris not hierarchical not file scheme not absolute non empty authority non empty query non empty fragment
WITHOUT_CLASSIFICATION	making sure that the directory does not exist.
WITHOUT_CLASSIFICATION	making sure that the directory does not exist.
WITHOUT_CLASSIFICATION	making sure that the directory does not exist.
WITHOUT_CLASSIFICATION	making sure that the directory does not exist.
WITHOUT_CLASSIFICATION	if the directory exists add one to the directory number (making it a new directory name.)
WITHOUT_CLASSIFICATION	tests to see if the correct prefix was used to create the tempfiles.
WITHOUT_CLASSIFICATION	tests for creating a tempfile with a filename shorter than 3 characters.
WITHOUT_CLASSIFICATION	if the "short file name" doesn't exist then assume that the 8.3 file name compatibility is disabled.
WITHOUT_CLASSIFICATION	old test left behind "garbage files" so this time it creates a directory that is guaranteed not to already exist (and deletes it afterward.)
WITHOUT_CLASSIFICATION	checking to make sure the correct files were are listed in the array.
WITHOUT_CLASSIFICATION	do not return null when trying to use list(filename filter) on a file rather than a directory. all other "list" methods return null for this test case.
WITHOUT_CLASSIFICATION	assert is flawed because canwrite does not work. asserttrue("file f1 is set to readonly." f1.canwrite())
WITHOUT_CLASSIFICATION	need a directory that exists
WITHOUT_CLASSIFICATION	regression for harmony-2674
WITHOUT_CLASSIFICATION	testlongvarbinarycoltype(sourcename destname) testnumericcoltype(sourcename destname) testrealcoltype(sourcename destname) testsmallintcoltype(sourcename destname) testtimestampcoltype(sourcename destname) testtimecoltype(sourcename destname) testtinyintcoltype(sourcename destname)
WITHOUT_CLASSIFICATION	isession mocksession = mockhelper.createmock(isession.class) iapplication mockapplication = mockhelper.createmock(iapplication.class) expect(mocksession.getapplication()).andstubreturn(mockapplication) taskthreadpool mockthreadpool = mockhelper.createmock(taskthreadpool.class) mockthreadpool.addtask(easymock.isa(runnable.class)) expectlastcall().anytimes() expect(mockapplication.getthreadpool()).andstubreturn(mockthreadpool) string[] tabletypes = new string[] { "table" } isqlconnection mocksqlconnection = mockhelper.createmock(isqlconnection.class) expect(mocksession.getsqlconnection()).andstubreturn(mocksqlconnection) sqldatabasemetadata mocksqldatabasemetadata = mockhelper.createmock(sqldatabasemetadata.class) expect(mocksqlconnection.getsqlmetadata()).andstubreturn(mocksqldatabasemetadata) expect(mocksqldatabasemetadata.gettabletypes()).andstubreturn(tabletypes) mockhelper.replayall() classundertest = new defaultdatabaseexpander(mocksession) mockhelper.verifyall() mockhelper.resetall()
WITHOUT_CLASSIFICATION	imessagehandler messagehandler = geteasymockmessagehandler()
DESIGN	todo pass in a message handler so user gets error msgs.
DESIGN	should probably create my own table model but i am being a bit slack.
DESIGN	todo move all code other than for window creation up to aliaswindowmanager factory to handle creation of maintenance sheets for sql alias objects. @author <a href="mailtocolbell@users.sourceforge.net">colin bell</a>
DESIGN	required otherwise it gets too wide.
DESIGN	required otherwise it gets too wide.
DESIGN	jason should be part of status bar?
DESIGN	don't call super. packing this frame causes problems.
DESIGN	todo this is a nasty quick hack. needs an api to do this.
DESIGN	todo this should not be public. check all usages of it and put appropriate methods in an api object.
DESIGN	todo this shouldn't be public. its only been done for the jcomplete plugin. at some stage this method will be returned to package visibility.
DESIGN	?? extract this out into a class like cascadeinternalframepositioner.
DESIGN	cast is not so nice but framework doesn't meet new requirements.
DESIGN	silently ignore what could we do anyway?
DESIGN	??need to tell object to display itself in a panel.
DESIGN	todo clean this mess up!!!! load plugins. load all plugin jars into class loader.
DESIGN	todo clean this mess up!!!! load plugins. load all plugin jars into class loader.
DESIGN	?? need to associate a panel with an object type somehow.
DESIGN	todo should have session listeners instead of these calls.
DESIGN	multiple rows - not good
DESIGN	hear no evil see no evil
DESIGN	facade methods for imessagehandler. we don't want to allow code to directly access an internal imessagehandler now that the imessagehandler interface requires an exceptionformatter to be injected for methods that accept exceptions.
DESIGN	implement idatasetupdateablemodel interface and idatasetupdateabletablemodel interface todo this code was copied from contentstab. it should probably be put into a common location and shared by both this class and contentstab.
DESIGN	jason do we need these?
DESIGN	jason remove?? _session.getsessionsheet().getsqlpanel().executesql(sql)
DESIGN	sqlfilteraction.java created on march 22 2003 1055 am adapted from sessionpropertiesaction.java by colin bell. todo change name to contentstabfilteraction
DESIGN	jason do we need this? getsqlpanel().selected()
DESIGN	todo rename to iobjecttreenodeexpander
DESIGN	end-kludge
DESIGN	????? if desired get fancy and use icons in buttons instead of text ?????????
DESIGN	todo find out why kludge for some reason i am not able to get the sheet to size correctly. it always displays with a size that causes the sub-panels to have their scrollbars showing. add a bit of an increase in the size of the panel so the scrollbars are not displayed.
DESIGN	end-kludge
DESIGN	todo spring-inject when this class is a spring bean
DESIGN	todo spring-inject when this class is a spring bean
DESIGN	the utility class that reads and writes release info from/to the release.xml file todo spring-inject when this class is a spring bean
DESIGN	todo move to ioutilities @see net.sourceforge.squirrel_sql.client.update.updateutil#createzipfile(filewrapper filewrapper[])
DESIGN	todo move this to ioutilities extracts the specified zip file to the specified output directory. @param zipfile @param outputdirectory @throws ioexception
DESIGN	we set expected and checksum to -1 here since we don't have that information for release.xml file todo can httpclient be used to get the byte-size of release.xml so we can perform this check?
DESIGN	always add plugins - there is not a good way to compare plugin zips and their extracted contents at the moment. todo determine the best way to derive the filesize and checksum of the plugin zip that was last extracted. should we keep it around? how about using the current release.xml file ? come to think of it perhaps we shouldn't be computing the checksum of any existing files why don't we just get it from the current release.xml file?
DESIGN	cse moved this code down here to fix repaint problems on first display - bounds should be set before install uninstall the old popup from root pane and install the new one. even in case they are the same objects it's necessary to cover the workspace switches etc.
DESIGN	??getridofthis
DESIGN	we are displaying a new dataset so if there was a cell editor in operation tell it to cancel. ???? how does this impact popup display?
DESIGN	check the error stream for a problem this is a bit questionable since it is possible for processes to output something on stderr but continue processing. but without this some problems are not seen (e.g. "bad argument" type messages from the process).
DESIGN	todo these 2 should be handled with an iterator.
DESIGN	todo this should be handled with an iterator
DESIGN	todo these 2 should be handled with an iterator!!!
DESIGN	todo this should be handled with an iterator!!!
DESIGN	todo when 1.4 is the earliest version supported add the following linesetsurrendersfocusonkeystroke(true) this should help handle some problems with navigation using tab & return to move through cells.
DESIGN	the following only works if swingutilities.getroot(table) returns and instanceof basemdiparentframe. if swingtuilities.getroot(table) returns and instance of dialog or frame then other code must be used.
DESIGN	tell caller that the underlying data was not updated ?? is this always true or could the data be updated with a warning?
DESIGN	the following only works if swingutilities.getroot(table) returns and instanceof basemdiparentframe. if swingtuilities.getroot(table) returns and instance of dialog or frame then other code must be used.
DESIGN	todo rename to datasetviewerpropertydestination
DESIGN	??? for now use the same renderer as everyone else. ?? ?? in future change this to use a new instance of renderer ?? for this data type.
DESIGN	this is a bit hard coded but if we use _scale here some number displays go crazy.
DESIGN	??? for now use the same renderer as everyone else. ?? ?? in future change this to use a new instance of renederer ?? for this data type.
DESIGN	??? for now use the same renderer as everyone else. ?? ?? in future change this to use a new instance of renederer ?? for this data type.
DESIGN	set the property values note this may have already been done by another instance of this datatype created to handle a different column.
DESIGN	??? for now use the same renderer as everyone else. ?? ?? in future change this to use a new instance of renederer ?? for this data type.
DESIGN	set the property values note this may have already been done by another instance of this datatype created to handle a different column.
DESIGN	??? for now use the same renderer as everyone else. ?? ?? in future change this to use a new instance of renederer ?? for this data type.
DESIGN	this is a bit hard coded but if we use _scale here some number displays go crazy.
DESIGN	set the property values note this may have already been done by another instance of this datatype created to handle a different column.
DESIGN	??? for now use the same renderer as everyone else. ?? ?? in future change this to use a new instance of renederer ?? for this data type.
DESIGN	set the property values note this may have already been done by another instance of this datatype created to handle a different column.
DESIGN	?? is there any way to check for invalid input? valid input includes ?? at least any printable character but could it also include unprintable ?? characters?
DESIGN	set the property values note this may have already been done by another instance of this datatype created to handle a different column.
DESIGN	no appropriate datatype for this column so do the best we can with what we know. this may not be the best behavior here!!!!!!!
DESIGN	no appropriate datatype for this column so do the best we can with what we know. this may not be the best behavior here!!!!!!!
DESIGN	todo need to define a better approach to getting dialects. that is we don't really want to ever prompt the user in this case. it's always oracle. yet we may have a new oracledialect at some point.
DESIGN	todo hard coded -. jdbc/odbc bridge jdk1.4 brings back -9 for nvarchar columns in ms sql server tables.
DESIGN	set the property values note this may have already been done by another instance of this datatype created to handle a different column.
DESIGN	unfortunately we need to remove the exising tree table component and create a new one due to limitations with replacing models in the existing sun implementation. why on earth they couldnt formalise the tree table example on jfc (which we use) a bit more is anyones guess.
DESIGN	this is a work-around for what looks like a bug to me - it is a syntax error to qualify with the schema the new table name but not the old as in alter table "public"."tablerenametest" rename to "public"."tablewasrenamed" the second "public". is apparently not (currently) a valid thing to do.
DESIGN	total hack! type other(1111) can be other types as well?
DESIGN	a dialect delegate for the progress database. todo progress specification says that the sum of all column lengths of a table row may not exceed 31960. need to add an interface method to the hibernatedialect interface that takes an array of lengths and and checks the sum of columns for a row. this maximum number may be different across databases so this check method needs to be implemented by each dialect. @author manningr
DESIGN	todo bizarre that i couldn't find a valid sql to drop an index.
DESIGN	todo verify this is correct
DESIGN	todo need to have a generic hibernate dialect extend this to provide the types.
DESIGN	don't use "real" type. axion sets the column size to 12 by default yet it can handle more precision. so data being copied from the real column can potentially be larger than what the column claims to support. this will be a problem for other databases that pay attention to the column size. todo perhaps re-introduce the real type but use the new getprecisiondigits to max out the precision.
DESIGN	discovered that the loginame field can be null - in that case how to know we have the correct view?
DESIGN	todo subclass these hibernate dialects to provide the "canpasteto" api method in hibernatedialect interface. private static final db2390dialect db2390dialect = new db2390dialect()
DESIGN	todo should the constraint name simply be the column name or something more like a constraint name?
DESIGN	todo figure out why bind variables aren't working
DESIGN	todo should i be adding quotes if user wants identifiers quoted??
DESIGN	todo verify this
DESIGN	todo once we're happy that jfcutilities is no longer required
DESIGN	should the data be first cloned so that the sorting doesn't take place on the array that is used in getvalue() todo this is a must if sorting is done in a thread! ??
DESIGN	copied from java doc matcher.replaceall note that backslashes (\) and dollar signs ($) in the replacement string may cause the results to be different than if it were being treated as a literal replacement string. dollar signs may be treated as references to captured subsequences as described above and backslashes are used to escape literal characters in the replacement string.
DESIGN	need to somehow call sqlresultexecuterpanel.rerunselectedresulttab(true) something like sqlresultexecuterpanel panel = getpanel() panel.rerunselectedresulttab(true) however that doesn't apply when the user is exporting from the table contents table. there needs to be a more generic way to do this for all tables containing data that is to be exported where some of the fields contain placeholders. for now we just inform the user and let them either continue or abort and change the configuration manually re-run the query / reload the table data and re-export.
DESIGN	work around some utc and daylight saving offsets
DESIGN	todo delete me
DESIGN	work-around for bug which means we must use "dbo" for schema
DESIGN	todo hard coded -. jdbc/odbc bridge jdk1.4 brings back -9 for nvarchar columns in ms sql server tables. -8 is rowid in oracle.
DESIGN	all of the following have been converted to use the datatype objects so why not just have case types.null and default??? (this seems pointless) rmm 20070726
DESIGN	todo put in all the property accessors
DESIGN	todo decide whether this should be a bound property or not. getpropertychangereporter().firepropertychange(isqldriver.ipropertynames.name _name _name)
DESIGN	todo when jdk1.4 is the earliest jdk supported by squirrel then remove the hardcoding of the boolean data type.
DESIGN	todo rename this to gettabletype.
DESIGN	should probably create my own table model but i am being a bit slack.
DESIGN	todo is this right???
DESIGN	todo figure out a more reliable way to handle other type which indicates a database-specific type.
DESIGN	hack to deal with ingres iie meta tables.
DESIGN	hack to deal with axion axion_ tables.
DESIGN	hack to deal with firebird's rdb meta tables.
DESIGN	hack to deal with sybase's sys tables
DESIGN	this is weird - if i don't set this the column header doesn't line up with the column contents.
DESIGN	?? split these 4 functions off into a subclass of basefavouriteaction
DESIGN	todo how to let the user customize this??
DESIGN	this could (perhaps more elegantly) be done by recursion
DESIGN	skip formatting for stored procedures - they can have comments embedded in them and i'm presently not sure how the formatter handles this.
DESIGN	todo what about these viewport.font colorchooser.font internalframe.font optionpane.font "panel.font" scrollpane.font desktopicon.font
DESIGN	this should just bring back one table i hope.
DESIGN	todo what i really want to do here is get the sql script and replace "create procedure" with "alter procedure" then put that in the sql pane and not execute it.
DESIGN	todo get rid of this class. this combobox contains all the columns in an sql table. @author <a href="mailtocolbell@users.sourceforge.net">colin bell</a>
DESIGN	todo delete this class - unused
DESIGN	should probably create my own table model but i am being a bit slack.
DESIGN	todo ? dialog handling on cancelled ?
DESIGN	empty string ('') seems to be represented as null in some drivers. not sure if this is the best thing to do here but it fixes an issue where sql returns is set default to '' when it is already null.
DESIGN	this refactoring depends on the following dialect api methods getupdatesql
DESIGN	this refactoring depends on the following dialect api methods getupdatesql
DESIGN	hack!!! hopefully the fk name will always be the last token!
DESIGN	drop fk constraints before dropping any tables. otherwise we may drop the child table prior to dropping it's fks which would be an error. todo this should be done in the dialect's gettabledropsql method for a database specific handling(or ignoring) of this problem.
DESIGN	this refactoring depends on the following api methods getcreatetablesql
DESIGN	todo do we need this one.
DESIGN	todo do we need this one.
DESIGN	todo do we need this one.
DESIGN	todo do we need this one.
DESIGN	bad - converting a url to a file this way is problematic when the file path contains spaces
DESIGN	todo temporary until we sort out a better way to do guido's fix assertequals(second_stmt_sep qt2.getsqlstatementseparator())
DESIGN	todo make properties file application.properties so we can use class name to generate properties file name.
DESIGN	the following is a work-around for the problem on mac os x where the apple laf delegates to the swing popup factory but then tries to set a 90% alpha on the underlying cocoa window which will always be null if you're using jgoodies l&f see httpwww.caimito.net/pebble/2005/07/26/1122392314480.html#comment1127522262179 this has no effect on linux/windows
DESIGN	jason mow that multiple object trees exist storing the edit where by objectinfo within session won't work. it needs to be objectinfo within something else. private final map _editwherecolssheets = new hashmap()
DESIGN	todo maybe we should have a checkbox to allow the user to toggle default value on/off. some dbs (like db2) treat empty string "" as a different default value than null.
DESIGN	the call here is the result of a desperate fight to find a place where the components in the split had not height = 0. if someone knows a better way please tell me i'll apreciate any advice. gerdwagner@users.sourceforge.net
DESIGN	on win 2000 & xp mnemonics are normally hidden. to make them visible you press the alt key. under the windows l&f pressing alt may not work. this code is a workaround. see bug report 4736093 for more information.
DESIGN	coldefs not in same order as db so search for matching coldef entry note linear search here will normally be not too bad because most tables do not have huge numbers of columns.
DESIGN	if sql executing produced warnings then write them out to the session message handler. todo this is a pain. postgresql sends "raise notice" messages to the connection not to the statment so they will be mixed up with warnings from other statements.
DESIGN	todo figure out why the selection of the root node in the object tree is undone if we don't delay. it seems like some other thread racing to set the selected node to none. when this happens the detail pane for the root node disappears when a session is first opened or when an objecttree frame is created. this is a really crappy and unreliable way to fix this problem but it hides the problem for now. a better understanding of the architecture of session creation is required before a proper solution can be attempted. rmm 20051217
DESIGN	for some reason when the oracle plugin adds details tabs for triggers the _tabpnl's first tab ends up being the trigger details tab and not the generic database object info tab. this causes the _tabs length to be 1 tab greater than the tabs that are actually in the _tabpnl. this throws off the selection such that the tab selected in the tab panel doesn't get rendered until the tab to the right of the selected tab is selected. this is a work-around for this problem until i can determine why the databaseobjectinfotab never makes it into the _tabpnl in the first place.
DESIGN	this info is merely a placeholder in the tree that we can use to get index name and parent name more easily. we probably should create a indexcolumninfo that has this extra info in it.
DESIGN	note. some dbmss such as oracle do not allow "select rowid from table" you cannot have any column name in the columns clause if you have in there. aliasing the table name seems to be the best way to get around the problem.
DESIGN	kludge we want some info about the columns to be available for validating the user input during cell editing operations. ideally we would get that info inside the resultsetdataset class during the creation of the columndefinition objects by using various functions in resultsetmetadata such as isnullable(idx). unfortunately in at least some dbmss (e.g. postgres hsdb) the results of those calls are not the same (and are less accurate than) the sqlmetadata.getcolumns() call used in columnstab to get the column info. even more unfortunate is the fact that the set of attributes reported on by the two calls is not the same with the resultsetmetadata listing things not provided by getcolumns. most of the data provided by the resultsetmetadata calls is correct. however the nullable/not-nullable property is not set correctly in at least two dbmss while it is correct for those dbmss in the getcolumns() info. therefore we collect the collumn nullability information from getcolumns() and pass that info to the resultset to override what it got from the resultsetmetadata.
DESIGN	??? for now use the same renderer as everyone else. ?? ?? in future change this to use a new instance of renederer ?? for this data type.
DESIGN	??? for now use the same renderer as everyone else. ?? ?? in future change this to use a new instance of renederer ?? for this data type.
DESIGN	??? for now use the same renderer as everyone else. ?? ?? in future change this to use a new instance of renederer ?? for this data type.
DESIGN	set the property values note this may have already been done by another instance of this datatype created to handle a different column.
DESIGN	?? best guess read object? ?? this is probably the wrong thing to do here but ?? i don't know what else to try.
DESIGN	??? for now use the same renderer as everyone else. ?? ?? in future change this to use a new instance of renederer ?? for this data type.
DESIGN	??? for now use the same renderer as everyone else. ?? ?? in future change this to use a new instance of renederer ?? for this data type.
DESIGN	set the property values note this may have already been done by another instance of this datatype created to handle a different column.
DESIGN	todo probably want to allow the user to set these sequence properties ?? sequence settings.
DESIGN	don't use tinyint for now even though mckoi "supports" it. it's notion of tinyint is 7-bit (not 8-bit) so it is not compatible with other dbs and leads to overflow (resulting in negative values which are a corruption of the actual value inserted/updated). this is not a great work-around. i filed a bug report on the mailing list hopefully it will get fixed soon.
DESIGN	todo hard coded -. jdbc/odbc bridge jdk1.4 brings back -9 for nvarchar columns in ms sql server tables. -8 is rowid in oracle.
DESIGN	arrays of strings are a special case. in xmlbeanwriter method processproperty an array of strings is turned into a list of stringwrapper objects in the xml (presumably so that when reading them back we have a class that we can call setters on). thus when reading back an array of strings we actually read an array of stringwrappers which gives a type mis-match in the following arraycopy. therefore we need to convert the data that is currently in the stringwrapper objects into actual strings.
DESIGN	todo just noticed that mysql 5.0 supports a multi-bit bit column by using the getobject/setobject methods with a byte[]. so it would be valuable at some point to make this code a bit more dbms-specific
DESIGN	todo is giving a fk constraint a name universally supported and done the same way on every database?
DESIGN	h2 uses java classes that implement the "trigger" interface to operate on database tables rows when an action triggers them. therefore there is currently no way to access the source for a trigger. hopefully this will change at some point in the future. _treeapi.adddetailtab(databaseobjecttype.trigger new triggersourcetab("the source of the trigger"))
DESIGN	todo this won't work when the column has values with quotes in them. use preparedstatements instead. hmmm instead of insert statements could we not just create a sequence and generate a select statement that a) uses the sequence for the pkid b) selects distinct values that would be a more efficient approach that would also eliminate this quoting problem
DESIGN	todo make parameter implement sqlitem interface which has a getstring method which can also be implemented by sqlstring or sqlfragment or some such. we can then eliminate the use of instanceof below and clean up the code a bit by making itemsinsql look like arraylist<sqlitem> itemsinsql = new arraylist<sqlitem>()
DESIGN	some dbs (like mckoi) make -1 the default for scale. apply the same hack as above.
DESIGN	evil hack to split the vacuum output a little.
DESIGN	hack some dbs (like frontbase) don't support boolean types. i've tried tinyint bit and boolean as the column type and setboolean fails for all three. it's a mystery at this point what column the getboolean/setboolean methods actually work on iin frontbase.
DESIGN	not used
DESIGN	jason make menu smarter. when second window for the same session is added create a hierarchical menu for all windows for the session.
DESIGN	todo move all code other than for window creation up to aliaswindowmanager factory to handle creation of maintenance sheets for sql driver objects. @author <a href="mailtocolbell@users.sourceforge.net">colin bell</a>
DESIGN	todo delete this class copyright (c) 2001 colin bell colbell@users.sourceforge.net this library is free software you can redistribute it and/or modify it under the terms of the gnu lesser general public license as published by the free software foundation either version 2.1 of the license or (at your option) any later version. this library is distributed in the hope that it will be useful but without any warranty without even the implied warranty of merchantability or fitness for a particular purpose. see the gnu lesser general public license for more details. you should have received a copy of the gnu lesser general public license along with this library if not write to the free software foundation inc. 59 temple place suite 330 boston ma 02111-1307 usa
DESIGN	todo delete this class copyright (c) 2001 colin bell colbell@users.sourceforge.net this library is free software you can redistribute it and/or modify it under the terms of the gnu lesser general public license as published by the free software foundation either version 2.1 of the license or (at your option) any later version. this library is distributed in the hope that it will be useful but without any warranty without even the implied warranty of merchantability or fitness for a particular purpose. see the gnu lesser general public license for more details. you should have received a copy of the gnu lesser general public license along with this library if not write to the free software foundation inc. 59 temple place suite 330 boston ma 02111-1307 usa
DESIGN	todo delete this class copyright (c) 2001 colin bell colbell@users.sourceforge.net this library is free software you can redistribute it and/or modify it under the terms of the gnu lesser general public license as published by the free software foundation either version 2.1 of the license or (at your option) any later version. this library is distributed in the hope that it will be useful but without any warranty without even the implied warranty of merchantability or fitness for a particular purpose. see the gnu lesser general public license for more details. you should have received a copy of the gnu lesser general public license along with this library if not write to the free software foundation inc. 59 temple place suite 330 boston ma 02111-1307 usa
DESIGN	todo delete me
DESIGN	this is (a logically not sufficent) try to cope with the problem that there are the following contradictory rules in the jdbc api doc statement.getresultset() this method should be called only once per result. statement.getupdatecount() this method should be called only once per result. statement.getmoreresults() there are no more results when the following is true (!getmoreresults() && (getupdatecount() == -1) if getmoreresults() returns false we don't know if we have more results we only know that it isn't a result set. since we called getupdatecount() before getmoreresults() because we would like to know the update count of the first result we might not be allowed to call getupdatecount() again. the intersystems cache driver for example always returns the same updatecount on simple insert update delete statements not matter if getmoreresults() was called. so updatecount never gets -1 and this will loop forever. when i discussed the issue with the intersystems people they just told me not to call getupdatecount() twice. that simple. my hope is that this will cure problems with dbs that just don't care for multiple result sets.
DESIGN	jason do we need these?
DESIGN	todo delete me copyright (c) 2002-2003 johan compagner jcompagner@j-com.nl this library is free software you can redistribute it and/or modify it under the terms of the gnu lesser general public license as published by the free software foundation either version 2.1 of the license or (at your option) any later version. this library is distributed in the hope that it will be useful but without any warranty without even the implied warranty of merchantability or fitness for a particular purpose. see the gnu lesser general public license for more details. you should have received a copy of the gnu lesser general public license along with this library if not write to the free software foundation inc. 59 temple place suite 330 boston ma 02111-1307 usa
DESIGN	this <code>icommand</code> displays a dialog box that allows the user to enter a 'where' clause or an 'order by' clause used when getting data via the 'contents' tab. @author <a href="mailtomjhammel@users.sourceforge.net">maury hammel</a> todo change name to contentstabfiltercommand
DESIGN	todo - col - add method to databasemetadata that returns array of objects for getbestrowidentifier. for postgresql put this kludge in the new function. this way all the kludges are kept in one place. kludge!!!!!! for some dbs (e.g. postgresql) there is actually a pseudo-column providing the rowid but the getbestrowidentifier function is not implemented. this kludge hardcodes the knowledge that specific dbs use a specific pseudo-column. additionally as of pg 8.1 you must create the table using "with oid" appended to the create statement. otherwise oid column is not available by default.
DESIGN	some tables have pseudo column primary keys and others do not. jdbc on some dbmss does not handle pseudo columns 'correctly'. also gettables returns 'views' as well as tables so the thing we are looking at might not be a table. (jdbc does not give a simple way to determine what we are looking at since the type of object is described in a dbms-specific encoding.) for these reasons rather than testing for all these conditions we just try using the pseudo column info to get the table data and if that fails we try to get the table data without using the pseudo column. todo should we change the mode from editable to non-editable?
DESIGN	todo work out why kludge for some reason i am not able to get the sheet to size correctly. it always displays with a size that causes the sub-panels to have their scrollbars showing. add a bit of an increase in the size of the panel so the scrollbars are not displayed.
DESIGN	todo spring-inject when this class is a spring bean
DESIGN	todo spring-inject when this class is a spring bean
DESIGN	db delete worked correctly so now delete from table important the user and the creator both work through the sortabletablemodel not the actual model. thus the row indexes to delete are given in the sortabletablemodel row numbers so we must work through that model model to actually do the delete.
DESIGN	??? for now use the same renderer as everyone else. ?? ?? in future change this to use a new instance of renderer ?? for this data type.
DESIGN	the following ugly conversion from text to byte is necessary because the byte class is inconsistant. when asked to output as hex it does so as an unsigned byte but when asked to read back the same thing using the hex radix it insists that the input must be signed. to get around this we up-size the conversion to integer then truncate that to a byte and finally convert the byte to a byte. yech.
DESIGN	??? for now use the same renderer as everyone else. ?? ?? in future change this to use a new instance of renederer ?? for this data type.
DESIGN	??? for now use the same renderer as everyone else. ?? ?? in future change this to use a new instance of renederer ?? for this data type.
DESIGN	??? for now use the same renderer as everyone else. ?? ?? in future change this to use a new instance of renederer ?? for this data type.
DESIGN	??? for now use the same renderer as everyone else. ?? ?? in future change this to use a new instance of renederer ?? for this data type.
DESIGN	??? for now use the same renderer as everyone else. ?? ?? in future change this to use a new instance of renederer ?? for this data type.
DESIGN	??? for now use the same renderer as everyone else. ?? ?? in future change this to use a new instance of renederer ?? for this data type.
DESIGN	set the password for this alias. @parampasswordthe new password. @throwsvalidationexception todo what conditions?
DESIGN	handle mouse events for double-click creation of popup dialog. this happens only in the jtextfield not the jtextarea so we can make this an inner class within this method rather than a separate inner class as is done with the keytexthandler class.
DESIGN	this is a bit hard coded but if we use _scale here some number displays go crazy. _numberformat.setmaximumfractiondigits(_scale)
DESIGN	?? is there any way to check for invalid input? valid input includes ?? at least any printable character but could it also include unprintable ?? characters?
DESIGN	when i tried using a length for longvarbinary that is the max length of the source records i get the following exception exception condition 239. data exception - string data right truncation. i tried bit varying(32767) with data that had max length of 16384. so it's back to maximum length hard-coded for now. registercolumntype(types.longvarbinary 2147000000 "bit varying($l)")
DESIGN	todo spatial and fulltext indexes require a myisam engine for the table. is there a way to tell what engine is being used for a table? it may not be necessary since the following doens't hurt if already a myisam engine alter table my_table engine = myisam still this is not the kind of thing we would want to do automatically since myisam engine is non-transactional. we will probably need to tell the user - somehow - that they need this otherwise the create index statement will fail. maybe a comment in the script and if they happen to read it they could uncomment the conversion of the engine? maybe a custom dialog?
DESIGN	todo why shouldn't we call registersqldriver here? rmm 20070401
DESIGN	work-around for this driver which must have "dbo" for schema. the jconnect family of drivers appears to not be affected and can accept a null schema which is necessary to find tables in other schemas within the same catalog. similarly jtds 1.2.2 doesn't require this yet it doesn't return non-dbo schema tables unfortunately.
DESIGN	ok this is a hack. currently when precision == scale i have no way to determine if this is valid for the actual data. the problem comes when the source db's precision/scale are greater - or reported to be greater - than the precision/scale of the destination db. in this case it maximimizes both for the destination causing a definition that allows 0 digits to the left of the decimal. trouble is without looking at the actual data there is no way to tell if this is valid - in some cases it will be ok (0.0000000789) in others it will not be ok (100.123). so for now make the scale be approx. one-half of the precision to accomodate the most digits to the left and right of the decimal and hopefully that covers the majority of cases.
DESIGN	for pointbase if type maps to pointbase "blob" and the size isn't valid (pb requires size for blobs) then set it to something reasonably large like 16mb. 1 is the default size if no size is specified. that's practically useless )
DESIGN	todo is this right???
DESIGN	todo is this right???
DESIGN	todo maybe instead of throwing an exception we could ask the user if they would like us to adjust their preference for them.
DESIGN	?? split these 4 functions off into a subclass of basefavouriteaction
DESIGN	?? split these 4 functions off into a subclass of basefavouriteaction
DESIGN	?? split these 4 functions off into a subclass of basefavouriteaction
DESIGN	todo do we need this one.
DESIGN	todo do we need this one.
DESIGN	todo do we need this one.
DESIGN	todo do we need this one.
DESIGN	todo do we need this one.
DESIGN	todo temporary until we sort out a better way to do guido's fix iquerytokenizer qt2 = sessionundertest.getquerytokenizer()
DESIGN	here i don't completely understand how these types are to be used in all databases and i haven't yet had time to implement support in the dialects for them. so this exclude list will keep these less commonly used types from failing the test. also since not all of these types appear in java5 and we currently support compiling the code base with it i use the integer values for new types that were introduces in java6 rather than the type constant name.
WITHOUT_CLASSIFICATION	onlystatic
WITHOUT_CLASSIFICATION	onlystatic
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	doing instanceof? next node is a type.
WITHOUT_CLASSIFICATION	{{{ inner classes
WITHOUT_CLASSIFICATION	{{{ parentdirectoryrenderer class
WITHOUT_CLASSIFICATION	{{{ tablemousehandler class
WITHOUT_CLASSIFICATION	{{{ mouseclicked() method
WITHOUT_CLASSIFICATION	install man page
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	can't happen
WITHOUT_CLASSIFICATION	set proxy authentication
WITHOUT_CLASSIFICATION	{{{ autodetect() method
WITHOUT_CLASSIFICATION	file does not begin with utf-8-y signature. reset stream read as utf-8.
WITHOUT_CLASSIFICATION	determine whether we are dealing with a one- two- three- or four- byte sequence.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ insidecompoundedit() method
WITHOUT_CLASSIFICATION	1-byte sequence 000000000xxxxxxx = 0xxxxxxx
WITHOUT_CLASSIFICATION	null object ref is not instance of any type
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getname() method
WITHOUT_CLASSIFICATION	{{{ getdocument() method
WITHOUT_CLASSIFICATION	{{{ getparentelement() method
WITHOUT_CLASSIFICATION	{{{ getattributes() method
WITHOUT_CLASSIFICATION	{{{ ensurecapacity() method
WITHOUT_CLASSIFICATION	{{{ rootelement constructor
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getstartoffset() method
WITHOUT_CLASSIFICATION	{{{ getendoffset() method
WITHOUT_CLASSIFICATION	{{{ getelementindex() method
WITHOUT_CLASSIFICATION	no super method try to invoke regular method could be a superfluous "super." which is legal.
WITHOUT_CLASSIFICATION	local variables.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ loadclass() method
WITHOUT_CLASSIFICATION	{{{ getzipfile() method
WITHOUT_CLASSIFICATION	defer to whoever loaded us (such as jshell echidna etc)
WITHOUT_CLASSIFICATION	remember that this class doesn't exist for future reference
WITHOUT_CLASSIFICATION	{{{ getresourceasstream() method
WITHOUT_CLASSIFICATION	{{{ getresource() method
WITHOUT_CLASSIFICATION	{{{ getresourceaspath() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ dump() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ package-private members
WITHOUT_CLASSIFICATION	{{{ jarclassloader constructor
WITHOUT_CLASSIFICATION	{{{ finalize() method
WITHOUT_CLASSIFICATION	{{{ activate() method
WITHOUT_CLASSIFICATION	{{{ deactivate() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	boolean
WITHOUT_CLASSIFICATION	boolean
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ _loadclass() method
WITHOUT_CLASSIFICATION	{{{ servicelisthandler constructor
WITHOUT_CLASSIFICATION	{{{ resolveentity() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ attribute() method
WITHOUT_CLASSIFICATION	{{{ doctypedecl() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getelementcount() method
WITHOUT_CLASSIFICATION	{{{ chardata() method
WITHOUT_CLASSIFICATION	{{{ startelement() method
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	can't happen
WITHOUT_CLASSIFICATION	{{{ getelement() method
WITHOUT_CLASSIFICATION	{{{ endelement() method
WITHOUT_CLASSIFICATION	{{{ startdocument() method
WITHOUT_CLASSIFICATION	{{{ getcachedservices() method
WITHOUT_CLASSIFICATION	{{{ isleaf() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ pushelement() method
WITHOUT_CLASSIFICATION	{{{ peekelement() method
WITHOUT_CLASSIFICATION	{{{ popelement() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getname() method
WITHOUT_CLASSIFICATION	{{{ getlabel() method
WITHOUT_CLASSIFICATION	{{{ optiongroup constructor
WITHOUT_CLASSIFICATION	{{{ optiongroup constructor
WITHOUT_CLASSIFICATION	{{{ addoptiongroup() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ addoptionpane() method
WITHOUT_CLASSIFICATION	{{{ addoptionpane() method
WITHOUT_CLASSIFICATION	{{{ getmembers() method
WITHOUT_CLASSIFICATION	{{{ getmember() method
WITHOUT_CLASSIFICATION	{{{ getmemberindex() method
WITHOUT_CLASSIFICATION	{{{ getmembercount() method
WITHOUT_CLASSIFICATION	{{{ setsort() method
WITHOUT_CLASSIFICATION	{{{ insertionsort() method
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ invoke() method
WITHOUT_CLASSIFICATION	{{{ getname() method
WITHOUT_CLASSIFICATION	{{{ getlabel() method
WITHOUT_CLASSIFICATION	{{{ removefrombus() method
WITHOUT_CLASSIFICATION	{{{ addtobus() method
WITHOUT_CLASSIFICATION	{{{ getcomponents() method
WITHOUT_CLASSIFICATION	{{{ send() method
WITHOUT_CLASSIFICATION	can't create new instances
WITHOUT_CLASSIFICATION	{{{ editaction constructor
WITHOUT_CLASSIFICATION	{{{ getmouseovertext() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getview() method
WITHOUT_CLASSIFICATION	{{{ istoggle() method
WITHOUT_CLASSIFICATION	{{{ isselected() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getcode() method
WITHOUT_CLASSIFICATION	{{{ norepeat() method
WITHOUT_CLASSIFICATION	{{{ norecord() method
WITHOUT_CLASSIFICATION	{{{ norememberlast() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ wrapper class
WITHOUT_CLASSIFICATION	{{{ setinterval() method
WITHOUT_CLASSIFICATION	{{{ stop() method
WITHOUT_CLASSIFICATION	{{{ actionperformed() method
WITHOUT_CLASSIFICATION	might come in handy useful some time
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ animator class
WITHOUT_CLASSIFICATION	{{{ abbreveditor constructor
WITHOUT_CLASSIFICATION	{{{ getabbrev() method
WITHOUT_CLASSIFICATION	{{{ setabbrev() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}} {{{ key_released
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	on some windows versions connections to localhost fail if the network is not running. to avoid confusing newbies with weird error messages log errors that occur while starting the server as notice not error
WITHOUT_CLASSIFICATION	{{{ run() method
WITHOUT_CLASSIFICATION	{{{ handleclient() method
WITHOUT_CLASSIFICATION	{{{ handleclient() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	no background mode and opening a new view
WITHOUT_CLASSIFICATION	no background mode and reusing existing view
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	{{{ handleclient() method
WITHOUT_CLASSIFICATION	un-iconify using jdk 1.3 api
WITHOUT_CLASSIFICATION	{{{ isok() method
WITHOUT_CLASSIFICATION	{{{ getport method
WITHOUT_CLASSIFICATION	{{{ stopserver() method
WITHOUT_CLASSIFICATION	{{{ invoke() method
WITHOUT_CLASSIFICATION	reset the timeout
WITHOUT_CLASSIFICATION	{{{ beanshellaction constructor
WITHOUT_CLASSIFICATION	some characters that we like to use in action names ('.' '-') are not allowed in beanshell identifiers.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getcode() method
WITHOUT_CLASSIFICATION	{{{ isselected() method
WITHOUT_CLASSIFICATION	{{{ norepeat() method
WITHOUT_CLASSIFICATION	{{{ norecord() method
WITHOUT_CLASSIFICATION	{{{ norememberlast() method
WITHOUT_CLASSIFICATION	so that in the future we don't see streams of exceptions
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ resolveentity() method
WITHOUT_CLASSIFICATION	{{{ attribute() method
WITHOUT_CLASSIFICATION	{{{ doctypedecl() method
WITHOUT_CLASSIFICATION	runtime runtime = runtime.getruntime()int freememory = (int)(runtime.freememory() / 1024)int totalmemory = (int)(runtime.totalmemory() / 1024)int usedmemory = (totalmemory - freememory)log.log(log.debugthis"java heap " + usedmemory + "kb / "+ totalmemory + "kb " + (usedmemory 100 / totalmemory)+ "%")
WITHOUT_CLASSIFICATION	save list of open files
WITHOUT_CLASSIFICATION	flush log
WITHOUT_CLASSIFICATION	{{{ actionlisthandler constructor
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	can't happen
WITHOUT_CLASSIFICATION	{{{ chardata() method
WITHOUT_CLASSIFICATION	{{{ startelement() method
WITHOUT_CLASSIFICATION	{{{ endelement() method
WITHOUT_CLASSIFICATION	{{{ startdocument() method
WITHOUT_CLASSIFICATION	{{{ pushelement() method
WITHOUT_CLASSIFICATION	{{{ paste() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ copy() method
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	{{{ peekelement() method
WITHOUT_CLASSIFICATION	{{{ popelement() method
WITHOUT_CLASSIFICATION	protected members
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ append() method
WITHOUT_CLASSIFICATION	{{{ append() method
WITHOUT_CLASSIFICATION	{{{ append() method
WITHOUT_CLASSIFICATION	{{{ paste() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ setregister() method
WITHOUT_CLASSIFICATION	{{{ setregister() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	to avoid data loss only do this if the above completed successfully
WITHOUT_CLASSIFICATION	{{{ clearregister() method
WITHOUT_CLASSIFICATION	{{{ getregisters() method
WITHOUT_CLASSIFICATION	{{{ getregisterstatusprompt() method
WITHOUT_CLASSIFICATION	{{{ saveregisters() method
WITHOUT_CLASSIFICATION	{{{ loadregisters() method
WITHOUT_CLASSIFICATION	log.log(log.debugregisters.classfnf)
WITHOUT_CLASSIFICATION	{{{ inner classes
WITHOUT_CLASSIFICATION	{{{ register interface
WITHOUT_CLASSIFICATION	{{{ clipboardregister class
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ resolveentity() method
WITHOUT_CLASSIFICATION	remove trailing \n
WITHOUT_CLASSIFICATION	{{{ stringregister class
WITHOUT_CLASSIFICATION	{{{ registershandler class
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ attribute() method
WITHOUT_CLASSIFICATION	{{{ doctypedecl() method
WITHOUT_CLASSIFICATION	{{{ chardata() method
WITHOUT_CLASSIFICATION	{{{ endelement() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ ebmessage constructor
WITHOUT_CLASSIFICATION	{{{ ebmessage constructor
WITHOUT_CLASSIFICATION	{{{ getsource() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ deprecated methods
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getview() method
WITHOUT_CLASSIFICATION	{{{ getbuffer() method
WITHOUT_CLASSIFICATION	{{{ setbuffer() method
WITHOUT_CLASSIFICATION	{{{ gettextarea() method
WITHOUT_CLASSIFICATION	only do this if we are the current edit pane
WITHOUT_CLASSIFICATION	only do this after all i/o requests are complete
WITHOUT_CLASSIFICATION	avoid a race condition see bug #834338
WITHOUT_CLASSIFICATION	{{{ prevbuffer() method
WITHOUT_CLASSIFICATION	{{{ nextbuffer() method
WITHOUT_CLASSIFICATION	{{{ recentbuffer() method
WITHOUT_CLASSIFICATION	{{{ focusontextarea() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getlabel() method
WITHOUT_CLASSIFICATION	{{{ actionset constructor
WITHOUT_CLASSIFICATION	{{{ actionset constructor
WITHOUT_CLASSIFICATION	{{{ actionset constructor
WITHOUT_CLASSIFICATION	{{{ setlabel() method
WITHOUT_CLASSIFICATION	{{{ getpluginjar() method
WITHOUT_CLASSIFICATION	{{{ addaction() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ removeaction() method
WITHOUT_CLASSIFICATION	{{{ removeallactions() method
WITHOUT_CLASSIFICATION	{{{ getaction() method
WITHOUT_CLASSIFICATION	{{{ getactioncount() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getactions() method
WITHOUT_CLASSIFICATION	{{{ package-private members
WITHOUT_CLASSIFICATION	{{{ load() method
WITHOUT_CLASSIFICATION	{{{ getactionnames() method
WITHOUT_CLASSIFICATION	{{{ getactionnames() method
WITHOUT_CLASSIFICATION	{{{ getcacheableactionnames() method
WITHOUT_CLASSIFICATION	{{{ contains() method
WITHOUT_CLASSIFICATION	{{{ size() method
WITHOUT_CLASSIFICATION	{{{ initkeybindings() method
WITHOUT_CLASSIFICATION	actions.clear()
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ draganddropcallback() method
WITHOUT_CLASSIFICATION	{{{ inittextarea() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ initbufferswitcher() method
WITHOUT_CLASSIFICATION	{{{ myfocusmanager class
WITHOUT_CLASSIFICATION	{{{ myfocustraversalpolicy class
WITHOUT_CLASSIFICATION	{{{ mousewheelhandler class
WITHOUT_CLASSIFICATION	{{{ textareatransferhandler class
WITHOUT_CLASSIFICATION	i assume that there can be only one drag operation at the time
WITHOUT_CLASSIFICATION	if user drops into the sameselection where they started donothing.
WITHOUT_CLASSIFICATION	if user drops into a selectionreplace selection
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	otherwise just insert the text
WITHOUT_CLASSIFICATION	correctly handle text flavor + file list flavor + text area read only do an or of all flags
WITHOUT_CLASSIFICATION	{{{ drophandler class
WITHOUT_CLASSIFICATION	textarea.getbuffer().begincompoundedit()
WITHOUT_CLASSIFICATION	textarea.getbuffer().endcompoundedit()
WITHOUT_CLASSIFICATION	textarea.getbuffer().endcompoundedit()
WITHOUT_CLASSIFICATION	{{{ textareaselection class
WITHOUT_CLASSIFICATION	{{{ showbufferswitcher() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ path name methods
WITHOUT_CLASSIFICATION	{{{ constructpath() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ canonpath() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	get rid of mixed paths on windows
WITHOUT_CLASSIFICATION	also get rid of trailing spaces on windows
WITHOUT_CLASSIFICATION	do the same on os x
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ resolvesymlinks() method
WITHOUT_CLASSIFICATION	{{{ isabsolutepath() method
WITHOUT_CLASSIFICATION	not sure if this is correct for openvms.
WITHOUT_CLASSIFICATION	nice and simple
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ savecaretinfo() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ concatpath() method
WITHOUT_CLASSIFICATION	make all child paths relative.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getfileextension() method
WITHOUT_CLASSIFICATION	{{{ getfilename() method
WITHOUT_CLASSIFICATION	{{{ getfilenamenoextension() method
WITHOUT_CLASSIFICATION	{{{ getfileparent() method
WITHOUT_CLASSIFICATION	{{{ getparentofpath() method
WITHOUT_CLASSIFICATION	{{{ getfileprotocol() method
WITHOUT_CLASSIFICATION	{{{ getprotocolofurl() method
WITHOUT_CLASSIFICATION	{{{ isurl() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	c\autoexec.bat
WITHOUT_CLASSIFICATION	/etc/passwd
WITHOUT_CLASSIFICATION	d\windows or doesn't contain at all
WITHOUT_CLASSIFICATION	if backups is 1 create ~ file
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	selection[] selection = (selection[])buffer.getproperty(buffer.selection)
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	if backup file was created less than 'backuptimedistance' ago we do not create the backup
WITHOUT_CLASSIFICATION	if backups > 1 move old ~n~ files create ~1~ file
WITHOUT_CLASSIFICATION	delete a backup created using above method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ filetoclass() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ classtofile() method
WITHOUT_CLASSIFICATION	treat lhs and rhs as arbitrary objects and do the operation.(including null and void represented by their primitive types)
WITHOUT_CLASSIFICATION	{{{ text methods
WITHOUT_CLASSIFICATION	{{{ getleadingwhitespace() method
WITHOUT_CLASSIFICATION	fall through to default case!!!
WITHOUT_CLASSIFICATION	object is a non-null and non-void primitive type
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	bsh scripted object
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ gettrailingwhitespace() method
WITHOUT_CLASSIFICATION	{{{ getleadingwhitespacewidth() method
WITHOUT_CLASSIFICATION	{{{ getvirtualwidth() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getoffsetofvirtualcolumn() method
WITHOUT_CLASSIFICATION	{{{ createwhitespace() method
WITHOUT_CLASSIFICATION	{{{ createwhitespace() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ globtore() method
WITHOUT_CLASSIFICATION	{{{ escapestochars() method
WITHOUT_CLASSIFICATION	{{{ charstoescapes() method
WITHOUT_CLASSIFICATION	{{{ charstoescapes() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ compareversions() method
WITHOUT_CLASSIFICATION	{{{ comparestrings() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	_i--
WITHOUT_CLASSIFICATION	_j--
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ stringsequal() method
WITHOUT_CLASSIFICATION	{{{ objectsequal() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ isvms() method
WITHOUT_CLASSIFICATION	{{{ ismacoslf() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ hasscreenmenubar
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ isjava14() method
WITHOUT_CLASSIFICATION	{{{ isjava15() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ class initializer
WITHOUT_CLASSIFICATION	for debugging make jedit think its using a different version of java than it really is.
WITHOUT_CLASSIFICATION	{{{ some constants
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ charstoentities() method
WITHOUT_CLASSIFICATION	{{{ formatfilesize() method
WITHOUT_CLASSIFICATION	{{{ getlongestprefix() method
WITHOUT_CLASSIFICATION	{{{ getlongestprefix() method
WITHOUT_CLASSIFICATION	{{{ getlongestprefix() method
WITHOUT_CLASSIFICATION	delcaredonly
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ sorting methods
WITHOUT_CLASSIFICATION	{{{ quicksort() method
WITHOUT_CLASSIFICATION	{{{ quicksort() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ quicksort() method
WITHOUT_CLASSIFICATION	{{{ compare interface
WITHOUT_CLASSIFICATION	{{{ stringcompare class
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ stringicasecompare class
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	java object
WITHOUT_CLASSIFICATION	{{{ menuitemcompare class
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	map types to assignable forms need to keep this fast
WITHOUT_CLASSIFICATION	{{{ buildtoversion() method
WITHOUT_CLASSIFICATION	first 2 chars are the major version number
WITHOUT_CLASSIFICATION	second 2 are the minor number
WITHOUT_CLASSIFICATION	then the pre-release status
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	finally the bug fix release
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ 1. check whether tools.jar is in the system classpath
WITHOUT_CLASSIFICATION	log.log(log.debug miscutilities.class "- is not in system classpath.") }}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ 2. check whether it is in the jedit user settings jars folder
WITHOUT_CLASSIFICATION	jedit will load it automatically
WITHOUT_CLASSIFICATION	jedit will load it automatically
WITHOUT_CLASSIFICATION	{{{ 3. check whether it is in jedit's system jars folder
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ 4. check whether it is in <java.home>/lib
WITHOUT_CLASSIFICATION	{{{ load it if not yet done
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getencodings() method
WITHOUT_CLASSIFICATION	{{{ issupportedencoding() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ comparechars()
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ handlemessage() method
WITHOUT_CLASSIFICATION	{{{ maybereload() method
WITHOUT_CLASSIFICATION	on windows and macos path names are case insensitive
WITHOUT_CLASSIFICATION	{{{ input/output methods
WITHOUT_CLASSIFICATION	onlystatic
WITHOUT_CLASSIFICATION	unwrap any primitives
WITHOUT_CLASSIFICATION	onlystatic
WITHOUT_CLASSIFICATION	onlystatic
WITHOUT_CLASSIFICATION	onlystatic
WITHOUT_CLASSIFICATION	no field try property acces
WITHOUT_CLASSIFICATION	not a field try property access
WITHOUT_CLASSIFICATION	shouldn't happen
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getexpandoninput() method
WITHOUT_CLASSIFICATION	{{{ setexpandoninput() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ expandabbrev() method
WITHOUT_CLASSIFICATION	{{{ figure out some minor things
WITHOUT_CLASSIFICATION	we reuse the 'pp' vector to save time
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ load() method
WITHOUT_CLASSIFICATION	positional parameters will be inserted where $1 $2 $3 occurs in the expansion
WITHOUT_CLASSIFICATION	{{{ handle abbrevs of the form abbrev#pos1#pos2#pos3#
WITHOUT_CLASSIFICATION	have to check again since above might set new_file flag
WITHOUT_CLASSIFICATION	{{{ reload() method
WITHOUT_CLASSIFICATION	for `reload' command
WITHOUT_CLASSIFICATION	only on initial load
WITHOUT_CLASSIFICATION	{{{ do some stuff once loading is finished
WITHOUT_CLASSIFICATION	if reloading a file clear dirty flag
WITHOUT_CLASSIFICATION	view text areas temporarily blank out while a buffer is being loaded to indicate to the user that there is no data available yet.
WITHOUT_CLASSIFICATION	theoretically a segment could have seg.offset != 0 but segmentbuffer never does that
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ setmode() method
WITHOUT_CLASSIFICATION	{{{ setmode() method
WITHOUT_CLASSIFICATION	{{{ setmode() method
WITHOUT_CLASSIFICATION	this protects against stupid people (like me) doing stuff like buffer.setmode(jedit.getmode())
WITHOUT_CLASSIFICATION	this must be in reverse order so that modes from the user catalog get checked first!
WITHOUT_CLASSIFICATION	{{{ marktokens() method
WITHOUT_CLASSIFICATION	{{{ indentation
WITHOUT_CLASSIFICATION	{{{ removetrailingwhitespace() method
WITHOUT_CLASSIFICATION	blank line
WITHOUT_CLASSIFICATION	no whitespace
WITHOUT_CLASSIFICATION	{{{ shiftindentleft() method
WITHOUT_CLASSIFICATION	{{{ shiftindentright() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getvirtualwidth() method
WITHOUT_CLASSIFICATION	{{{ getoffsetofvirtualcolumn() method
WITHOUT_CLASSIFICATION	{{{ getopenparenindent() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	the first element of pp is the abbrev itself
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} {{{ handle ordinary abbrevs
WITHOUT_CLASSIFICATION	{{{ maybe show add abbrev dialog
WITHOUT_CLASSIFICATION	{{{ getglobalabbrevs() method
WITHOUT_CLASSIFICATION	{{{ setglobalabbrevs() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getmodeabbrevs() method
WITHOUT_CLASSIFICATION	{{{ setmodeabbrevs() method
WITHOUT_CLASSIFICATION	{{{ addglobalabbrev() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	{{{ load() method
WITHOUT_CLASSIFICATION	{{{ addmodeabbrev() method
WITHOUT_CLASSIFICATION	only load global abbrevs if user abbrevs file could not be loaded
WITHOUT_CLASSIFICATION	{{{ countnewlines() method
WITHOUT_CLASSIFICATION	try mode-specific abbrevs first
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ expandabbrev() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ loadabbrevs() method
WITHOUT_CLASSIFICATION	{{{ saveabbrevs() method
WITHOUT_CLASSIFICATION	{{{ saveabbrevs() method
WITHOUT_CLASSIFICATION	write global abbrevs
WITHOUT_CLASSIFICATION	write mode abbrevs
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	number of positional parameters in abbreviation expansion
WITHOUT_CLASSIFICATION	{{{ expansion constructor
WITHOUT_CLASSIFICATION	{{{ handle backslash
WITHOUT_CLASSIFICATION	$n is 1-indexed but vector contents is zero indexed
WITHOUT_CLASSIFICATION	$key will be $key for example
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ insertatcolumn() method
WITHOUT_CLASSIFICATION	{{{ insertindented() method
WITHOUT_CLASSIFICATION	obtain the leading indent for later use
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ start() method
WITHOUT_CLASSIFICATION	{{{ stop() method
WITHOUT_CLASSIFICATION	{{{ getclassname() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getpluginjar() method
WITHOUT_CLASSIFICATION	this one only finds public (and in interfaces etc.)
WITHOUT_CLASSIFICATION	try declaredfield
WITHOUT_CLASSIFICATION	{{{ createmenuitems() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ package-private members
WITHOUT_CLASSIFICATION	{{{ createmenuitems() method
WITHOUT_CLASSIFICATION	{{{ createbrowsermenuitems() method
WITHOUT_CLASSIFICATION	{{{ deprecated methods
WITHOUT_CLASSIFICATION	{{{ createoptionpanes() method
WITHOUT_CLASSIFICATION	{{{ getjar() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	package-private members
WITHOUT_CLASSIFICATION	{{{ deferred class
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	package-private members
WITHOUT_CLASSIFICATION	{{{ jar class
WITHOUT_CLASSIFICATION	{{{ getversion() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getbuild() method
WITHOUT_CLASSIFICATION	(major).(minor).(<99 = prex 99 = final).(bug fix)
WITHOUT_CLASSIFICATION	{{{ main() method
WITHOUT_CLASSIFICATION	{{{ check for java 1.3 or later
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ miscellaneous methods
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getnext() method
WITHOUT_CLASSIFICATION	macos users expect the app to keep running after all windows are closed
WITHOUT_CLASSIFICATION	{{{ getprev() method
WITHOUT_CLASSIFICATION	{{{ setwaitsocket() method
WITHOUT_CLASSIFICATION	{{{ getindex() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ parse command line
WITHOUT_CLASSIFICATION	open initial view?
WITHOUT_CLASSIFICATION	script to run
WITHOUT_CLASSIFICATION	{{{ we need these initializations very early on
WITHOUT_CLASSIFICATION	{{{ try connecting to another running jedit instance
WITHOUT_CLASSIFICATION	block until its closed
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ initialize settings directory
WITHOUT_CLASSIFICATION	write a warning message
WITHOUT_CLASSIFICATION	{{{ get things rolling
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ initialize server
WITHOUT_CLASSIFICATION	{{{ do more stuff
WITHOUT_CLASSIFICATION	buffer sort
WITHOUT_CLASSIFICATION	{{{ initialize java 1.4-specific code
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ activate plugins that must be activated at startup
WITHOUT_CLASSIFICATION	{{{ load macros and run startup scripts after plugins and settings are loaded
WITHOUT_CLASSIFICATION	{{{ run script specified with -run= parameter
WITHOUT_CLASSIFICATION	open files create the view and hide the splash screen.
WITHOUT_CLASSIFICATION	{{{ property methods
WITHOUT_CLASSIFICATION	{{{ getproperties() method
WITHOUT_CLASSIFICATION	{{{ getproperty() method
WITHOUT_CLASSIFICATION	{{{ getproperty() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getproperty() method
WITHOUT_CLASSIFICATION	{{{ getbooleanproperty() method
WITHOUT_CLASSIFICATION	{{{ getbooleanproperty() method
WITHOUT_CLASSIFICATION	{{{ getintegerproperty() method
WITHOUT_CLASSIFICATION	{{{ getdoubleproperty() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	not found fall through to next class
WITHOUT_CLASSIFICATION	now on with the hunt
WITHOUT_CLASSIFICATION	quick check catches public fields include those in interfaces
WITHOUT_CLASSIFICATION	{{{ getfontproperty() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getfontproperty() method
WITHOUT_CLASSIFICATION	{{{ getcolorproperty() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ setcolorproperty() method
WITHOUT_CLASSIFICATION	{{{ setproperty() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ settemporaryproperty() method
WITHOUT_CLASSIFICATION	{{{ setbooleanproperty() method
WITHOUT_CLASSIFICATION	{{{ setintegerproperty() method
WITHOUT_CLASSIFICATION	{{{ setdoubleproperty() method
WITHOUT_CLASSIFICATION	{{{ setfontproperty() method
WITHOUT_CLASSIFICATION	{{{ unsetproperty() method
WITHOUT_CLASSIFICATION	{{{ resetproperty() method
WITHOUT_CLASSIFICATION	{{{ propertieschanged() method
WITHOUT_CLASSIFICATION	give all text areas the same font
WITHOUT_CLASSIFICATION	defaults.put("textfield.font"font)
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	enable/disable tooltips
WITHOUT_CLASSIFICATION	we do this here instead of adding buffers to the bus.
WITHOUT_CLASSIFICATION	{{{ getpluginjars() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getplugin() method
WITHOUT_CLASSIFICATION	{{{ plugin management methods
WITHOUT_CLASSIFICATION	{{{ getnotloadedpluginjars() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getpluginjar() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ _getlinemanager() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getplugin(string boolean) method
WITHOUT_CLASSIFICATION	{{{ getplugins() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ addpluginjar() method
WITHOUT_CLASSIFICATION	backwards compatibility
WITHOUT_CLASSIFICATION	{{{ addpluginjarsfromdirectory() method
WITHOUT_CLASSIFICATION	remove this when 4.1 plugin api is deprecated
WITHOUT_CLASSIFICATION	{{{ removepluginjar() method
WITHOUT_CLASSIFICATION	{{{ action methods
WITHOUT_CLASSIFICATION	{{{ getactioncontext() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ addactionset() method
WITHOUT_CLASSIFICATION	{{{ removeactionset() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getaction() method
WITHOUT_CLASSIFICATION	{{{ getbuiltinactionset() method
WITHOUT_CLASSIFICATION	{{{ getactionsets() method
WITHOUT_CLASSIFICATION	{{{ getactionsetforaction() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getactions() method
WITHOUT_CLASSIFICATION	{{{ getactionnames() method
WITHOUT_CLASSIFICATION	{{{ getactionsetforaction() method
WITHOUT_CLASSIFICATION	{{{ edit mode methods
WITHOUT_CLASSIFICATION	{{{ reloadmodes() method
WITHOUT_CLASSIFICATION	try to guess the eventual size to avoid unnecessary copying
WITHOUT_CLASSIFICATION	{{{ load the global catalog
WITHOUT_CLASSIFICATION	{{{ load user catalog
WITHOUT_CLASSIFICATION	create dummy catalog
WITHOUT_CLASSIFICATION	{{{ getmode() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ openfile() method
WITHOUT_CLASSIFICATION	{{{ openfile() method
WITHOUT_CLASSIFICATION	{{{ openfile() method
WITHOUT_CLASSIFICATION	{{{ getmodes() method
WITHOUT_CLASSIFICATION	{{{ buffer creation methods
WITHOUT_CLASSIFICATION	{{{ openfiles() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ openfile() method
WITHOUT_CLASSIFICATION	{{{ opentemporary() method
WITHOUT_CLASSIFICATION	{{{ committemporary() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ buffer constructor
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	if loadautosave is false we loaded an autosave file so we set 'dirty' to true
WITHOUT_CLASSIFICATION	note that we don't use setdirty() because a) that would send an unnecessary message b) it would also set the autosave_dirty flag which will make the autosave thread write out a redundant autosave file
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ keyhandler class
WITHOUT_CLASSIFICATION	{{{ renderer class
WITHOUT_CLASSIFICATION	{{{ keypressed() method
WITHOUT_CLASSIFICATION	int
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	send full range of events to avoid breaking plugins
WITHOUT_CLASSIFICATION	{{{ newfile() method
WITHOUT_CLASSIFICATION	don't want 'new file' to create a read only buffer if current file is on sql vfs or something
WITHOUT_CLASSIFICATION	return the newly created 'untitled-1'
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	find the highest untitled-n file
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ buffer management methods
WITHOUT_CLASSIFICATION	{{{ closebuffer() method
WITHOUT_CLASSIFICATION	send some editbus messages
WITHOUT_CLASSIFICATION	editbus.send(new bufferupdate(buffer.this viewbufferupdate.markers_changed))
WITHOUT_CLASSIFICATION	{{{ keytyped() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ insertfile() method
WITHOUT_CLASSIFICATION	this returns false if initial sanity checks (if the file is a directory etc) fail
WITHOUT_CLASSIFICATION	{{{ checkfilestatus() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ autosave() method
WITHOUT_CLASSIFICATION	{{{ saveas() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	files[] should have length 1 since the dialog type is save_dialog
WITHOUT_CLASSIFICATION	once save is complete do a few other things
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	fall through
WITHOUT_CLASSIFICATION	{{{ mousehandler class
WITHOUT_CLASSIFICATION	\t handled above
WITHOUT_CLASSIFICATION	eg foo<c+b> will insert foobar
WITHOUT_CLASSIFICATION	{{{ getname() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ isfocustraversable() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getters/setter methods for various buffer meta-data
WITHOUT_CLASSIFICATION	{{{ getlastmodified() method
WITHOUT_CLASSIFICATION	{{{ setlastmodified() method
WITHOUT_CLASSIFICATION	{{{ getvfs() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ _closebuffer() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getpath() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getsymlinkpath() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ isclosed() method
WITHOUT_CLASSIFICATION	{{{ getdirectory() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ isloaded() method
WITHOUT_CLASSIFICATION	{{{ isperformingio() method
WITHOUT_CLASSIFICATION	{{{ isnewfile() method
WITHOUT_CLASSIFICATION	{{{ setnewfile() method
WITHOUT_CLASSIFICATION	{{{ isuntitled() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	zero it here so that buffertabs doesn't have any problems
WITHOUT_CLASSIFICATION	{{{ saveallbuffers() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ reloadallbuffers() method
WITHOUT_CLASSIFICATION	save caret info. buffer.load() will load it.
WITHOUT_CLASSIFICATION	{{{ _getbuffer() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getbuffer() method
WITHOUT_CLASSIFICATION	{{{ getbuffers() method
WITHOUT_CLASSIFICATION	{{{ getbuffercount() method
WITHOUT_CLASSIFICATION	{{{ getfirstbuffer() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getlastbuffer() method
WITHOUT_CLASSIFICATION	{{{ checkbufferstatus() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ isdirty() method
WITHOUT_CLASSIFICATION	{{{ isreadonly() method
WITHOUT_CLASSIFICATION	{{{ iseditable() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ setdirty() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ setreadonly() method
WITHOUT_CLASSIFICATION	fixes dirty flag not being reset on save/insert/undo/redo/undo
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	fall through
WITHOUT_CLASSIFICATION	{{{ view methods
WITHOUT_CLASSIFICATION	{{{ getinputhandler() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ istemporary() method
WITHOUT_CLASSIFICATION	{{{ geticon() method
WITHOUT_CLASSIFICATION	{{{ thread safety
WITHOUT_CLASSIFICATION	{{{ readlock() method
WITHOUT_CLASSIFICATION	{{{ readunlock() method
WITHOUT_CLASSIFICATION	{{{ writelock() method
WITHOUT_CLASSIFICATION	{{{ writeunlock() method
WITHOUT_CLASSIFICATION	{{{ line offset methods
WITHOUT_CLASSIFICATION	{{{ getlength() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	no need to lock since this just returns a value and that's it
WITHOUT_CLASSIFICATION	no need to lock since this just returns a value and that's it
WITHOUT_CLASSIFICATION	{{{ getlinecount() method
WITHOUT_CLASSIFICATION	{{{ getlineofoffset() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getlinestartoffset() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getlineendoffset() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getlinelength() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ invalidatecachedscreenlinecounts() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ text getters and setters
WITHOUT_CLASSIFICATION	{{{ getlinetext() method
WITHOUT_CLASSIFICATION	{{{ getlinetext() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ gettext() method
WITHOUT_CLASSIFICATION	{{{ gettext() method
WITHOUT_CLASSIFICATION	{{{ insert() method
WITHOUT_CLASSIFICATION	{{{ insert() method
WITHOUT_CLASSIFICATION	{{{ remove() method
WITHOUT_CLASSIFICATION	otherwise it will be delivered later
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ undo
WITHOUT_CLASSIFICATION	{{{ undo() method
WITHOUT_CLASSIFICATION	{{{ redo() method
WITHOUT_CLASSIFICATION	{{{ istransactioninprogress() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ begincompoundedit() method
WITHOUT_CLASSIFICATION	{{{ endcompoundedit() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ insidecompoundedit() method
WITHOUT_CLASSIFICATION	{{{ buffer events
WITHOUT_CLASSIFICATION	{{{ addbufferchangelistener() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ removebufferchangelistener() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getbufferchangelisteners() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ propertieschanged() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getproperty() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getindentsize() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ gettabsize() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ setproperty() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	now try buffer.<property>
WITHOUT_CLASSIFICATION	{{{ initproxy() method
WITHOUT_CLASSIFICATION	for backwards compatibility
WITHOUT_CLASSIFICATION	first try the buffer-local properties
WITHOUT_CLASSIFICATION	now try mode.<mode>.<property>
WITHOUT_CLASSIFICATION	try returning it as an integer first
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ newview() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	set proxy host
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ newview() method
WITHOUT_CLASSIFICATION	{{{ newview() method
WITHOUT_CLASSIFICATION	{{{ newview() method
WITHOUT_CLASSIFICATION	set proxy port
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	show tip of the day
WITHOUT_CLASSIFICATION	set non proxy hosts list
WITHOUT_CLASSIFICATION	{{{ closeview() method
WITHOUT_CLASSIFICATION	{{{ getviews() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getviewcount() method
WITHOUT_CLASSIFICATION	{{{ getfirstview() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getlastview() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getactiveview() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	eg user just closed a view and didn't focus another
WITHOUT_CLASSIFICATION	{{{ miscellaneous methods
WITHOUT_CLASSIFICATION	{{{ ismainthread() method
WITHOUT_CLASSIFICATION	{{{ isbackgroundmode() method
WITHOUT_CLASSIFICATION	{{{ showmemorystatusdialog() method
WITHOUT_CLASSIFICATION	{{{ getjedithome() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getsettingsdirectory() method
WITHOUT_CLASSIFICATION	{{{ getjarcachedirectory() method
WITHOUT_CLASSIFICATION	{{{ backupsettingsfile() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ exit() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ savesettings() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	wait for pending i/o requests
WITHOUT_CLASSIFICATION	close dialog view.close() call need a view
WITHOUT_CLASSIFICATION	send editorexitrequested
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	close all buffers
WITHOUT_CLASSIFICATION	if we are running in background mode and reallyexit was not specified then return here.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	save settings in case user kills the backgrounded jedit process
WITHOUT_CLASSIFICATION	save view properties here
WITHOUT_CLASSIFICATION	stop autosave timer
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	send editorexiting
WITHOUT_CLASSIFICATION	save settings
WITHOUT_CLASSIFICATION	close activity log stream
WITHOUT_CLASSIFICATION	byebye
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ package-private members
WITHOUT_CLASSIFICATION	{{{ geteditserver() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ addmode() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ loadmode() method
WITHOUT_CLASSIFICATION	package-private
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ addpluginprops() method
WITHOUT_CLASSIFICATION	{{{ removepluginprops() method
WITHOUT_CLASSIFICATION	{{{ pluginerror() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ static variables
WITHOUT_CLASSIFICATION	{{{ setactiveview() method
WITHOUT_CLASSIFICATION	buffer link list
WITHOUT_CLASSIFICATION	makes opentemporary() thread-safe
WITHOUT_CLASSIFICATION	view link list
WITHOUT_CLASSIFICATION	{{{ usage() method
WITHOUT_CLASSIFICATION	{{{ version() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ initmisc() method
WITHOUT_CLASSIFICATION	{{{ makeserverscript() method
WITHOUT_CLASSIFICATION	add our protocols to java.net.url's list
WITHOUT_CLASSIFICATION	determine installation directory. if the jedit.home property is set use that. then look for jedit.jar in the classpath. if that fails assume this is the web start version.
WITHOUT_CLASSIFICATION	set the user-agent string used by the java.net http handler
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	check if web start
WITHOUT_CLASSIFICATION	use user.dir as last resort
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ unsetproperty() method
WITHOUT_CLASSIFICATION	add an editbus component that will reload edit modes and macros if they are changed from within the editor
WITHOUT_CLASSIFICATION	{{{ initsiteproperties() method
WITHOUT_CLASSIFICATION	{{{ initsystemproperties() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	site properties are loaded as default properties overwriting jedit's system properties
WITHOUT_CLASSIFICATION	{{{ initresources() method
WITHOUT_CLASSIFICATION	{{{ initplugins() method
WITHOUT_CLASSIFICATION	{{{ inituserproperties() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ initplaf() method
WITHOUT_CLASSIFICATION	give all swing components our colors
WITHOUT_CLASSIFICATION	defaults.put(prefix + ".inactiveforeground"foreground)
WITHOUT_CLASSIFICATION	{{{ runstartupscripts() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	null not supported?
WITHOUT_CLASSIFICATION	{{{ firewallauthenticator class
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ finishstartup() method
WITHOUT_CLASSIFICATION	start i/o threads
WITHOUT_CLASSIFICATION	start edit server
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ report any plugin errors
WITHOUT_CLASSIFICATION	{{{ showpluginerrordialog() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	in one case not a single awt class will have been touched (splash screen off + -nogui -nobackground switches on command line)
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ addbuffertolist() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	can't happen
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getnotloadedpluginjars() method
WITHOUT_CLASSIFICATION	{{{ gotomarker() method
WITHOUT_CLASSIFICATION	handle line number
WITHOUT_CLASSIFICATION	handle marker
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	default value
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ sort buffer list
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ removeviewfromlist() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	fixes the hang that can occur if we 'save as' to a new filename which requires re-sorting
WITHOUT_CLASSIFICATION	{{{ addviewtolist() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ initkeybindings() method
WITHOUT_CLASSIFICATION	{{{ getproperties() method
WITHOUT_CLASSIFICATION	{{{ closeview() method
WITHOUT_CLASSIFICATION	exit does editor event & save
WITHOUT_CLASSIFICATION	{{{ loadmodecatalog() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ loadsystemprops() method
WITHOUT_CLASSIFICATION	{{{ loadsiteprops() method
WITHOUT_CLASSIFICATION	{{{ loaduserprops() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ saveuserprops() method
WITHOUT_CLASSIFICATION	{{{ loadpluginprops() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getproperty() method
WITHOUT_CLASSIFICATION	{{{ setproperty() method
WITHOUT_CLASSIFICATION	{{{ addpluginprops() method
WITHOUT_CLASSIFICATION	{{{ removepluginprops() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ settemporaryproperty() method
WITHOUT_CLASSIFICATION	{{{ unsetproperty() method
WITHOUT_CLASSIFICATION	{{{ resetproperty() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ getdefaultproperty() method
WITHOUT_CLASSIFICATION	{{{ loadprops() method
WITHOUT_CLASSIFICATION	{{{ mode constructor
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	{{{ gettokenmarker() method
WITHOUT_CLASSIFICATION	{{{ settokenmarker() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getproperty() method
WITHOUT_CLASSIFICATION	{{{ getbooleanproperty() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ setproperty() method
WITHOUT_CLASSIFICATION	{{{ unsetproperty() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ accept() method
WITHOUT_CLASSIFICATION	{{{ getname() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ runscript() method
WITHOUT_CLASSIFICATION	{{{ runscript() method
WITHOUT_CLASSIFICATION	{{{ evalselection() method
WITHOUT_CLASSIFICATION	{{{ showevaluatedialog() method
WITHOUT_CLASSIFICATION	{{{ showevaluatelinesdialog() method
WITHOUT_CLASSIFICATION	{{{ _runscript() method
WITHOUT_CLASSIFICATION	{{{ _runscript() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getbooleanproperty() method
WITHOUT_CLASSIFICATION	user cancelled???
WITHOUT_CLASSIFICATION	{{{ getstringproperty() method
WITHOUT_CLASSIFICATION	{{{ setstringproperty() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ setbooleanproperty() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getintegerproperty() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ setintegerproperty() method
WITHOUT_CLASSIFICATION	will be cached from now on
WITHOUT_CLASSIFICATION	{{{ getregexpproperty() method
WITHOUT_CLASSIFICATION	{{{ getrulesetatoffset() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	{{{ eval() method
WITHOUT_CLASSIFICATION	{{{ _eval() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	{{{ cacheblock() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ runscript() method
WITHOUT_CLASSIFICATION	{{{ runscript() method
WITHOUT_CLASSIFICATION	{{{ eval() method
WITHOUT_CLASSIFICATION	{{{ eval() method
WITHOUT_CLASSIFICATION	never called
WITHOUT_CLASSIFICATION	{{{ runcachedblock() method
WITHOUT_CLASSIFICATION	{{{ isscriptrunning() method
WITHOUT_CLASSIFICATION	{{{ getnamespace() method
WITHOUT_CLASSIFICATION	{{{ deprecated functions
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ static variables
WITHOUT_CLASSIFICATION	{{{ resetclassmanager() method
WITHOUT_CLASSIFICATION	{{{ setupdefaultvariables() method
WITHOUT_CLASSIFICATION	{{{ resetdefaultvariables() method
WITHOUT_CLASSIFICATION	{{{ unwrapexception() method
WITHOUT_CLASSIFICATION	{{{ handleexception() method
WITHOUT_CLASSIFICATION	{{{ createinterpreter() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	garbage collected
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	clean up old listeners
WITHOUT_CLASSIFICATION	system.err.println("cleaned up weak ref "+deadref)
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getkeywordmapatoffset() method
WITHOUT_CLASSIFICATION	{{{ getcontextsensitiveproperty() method
WITHOUT_CLASSIFICATION	remove duplicates
WITHOUT_CLASSIFICATION	remove duplicates
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ used to store property values
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	clean up old listeners
WITHOUT_CLASSIFICATION	system.err.println("cleaned up weak ref "+deadref)
WITHOUT_CLASSIFICATION	clear the static caches in bshclassmanager
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	garbage collected
WITHOUT_CLASSIFICATION	{{{ user interface
WITHOUT_CLASSIFICATION	{{{ groups
WITHOUT_CLASSIFICATION	{{{ addtoolbar() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	common layers
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	layers for top group
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	layers for bottom group
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getdockablewindowmanager() method
WITHOUT_CLASSIFICATION	{{{ gettoolbar() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ addtoolbar() method
WITHOUT_CLASSIFICATION	{{{ addtoolbar() method
WITHOUT_CLASSIFICATION	{{{ removetoolbar() method
WITHOUT_CLASSIFICATION	{{{ showwaitcursor() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	still needed even though glass pane has a wait cursor
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ hidewaitcursor() method
WITHOUT_CLASSIFICATION	{{{ getstatus() method
WITHOUT_CLASSIFICATION	{{{ getactionbar() method
WITHOUT_CLASSIFICATION	{{{ getsearchbar() method
WITHOUT_CLASSIFICATION	{{{ quickincrementalsearch() method
WITHOUT_CLASSIFICATION	{{{ quickhypersearch() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getinputhandler() method
WITHOUT_CLASSIFICATION	{{{ input handling
WITHOUT_CLASSIFICATION	{{{ getkeyeventinterceptor() method
WITHOUT_CLASSIFICATION	{{{ setkeyeventinterceptor() method
WITHOUT_CLASSIFICATION	{{{ setinputhandler() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getmacrorecorder() method
WITHOUT_CLASSIFICATION	{{{ setmacrorecorder() method
WITHOUT_CLASSIFICATION	{{{ processkeyevent() method
WITHOUT_CLASSIFICATION	{{{ processkeyevent() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ processkeyevent() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	@bgen(jjtree) formalparameters
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	gather all of the methods of class and parents
WITHOUT_CLASSIFICATION	{{{ togglewordwrap() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	boolean
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ buffers edit panes split panes
WITHOUT_CLASSIFICATION	{{{ splithorizontally() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	type name and expression syntax follows.
WITHOUT_CLASSIFICATION	{{{ splitvertically() method
WITHOUT_CLASSIFICATION	{{{ split() method
WITHOUT_CLASSIFICATION	{{{ unsplit() method
WITHOUT_CLASSIFICATION	{{{ unsplitcurrent() method
WITHOUT_CLASSIFICATION	find first split pane parenting current edit pane
WITHOUT_CLASSIFICATION	succeeded. cache the resolved method.
WITHOUT_CLASSIFICATION	is the method public or are we in accessibility mode?
WITHOUT_CLASSIFICATION	yes it is.
WITHOUT_CLASSIFICATION	found at least one matching method but couldn't use
WITHOUT_CLASSIFICATION	ignore and move on
WITHOUT_CLASSIFICATION	no it is not.
WITHOUT_CLASSIFICATION	is this a class?
WITHOUT_CLASSIFICATION	@bgen(jjtree) type
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	find an appropriate constructor.use declared here to see package and private as well(there are no inherited constructors to worry about)
WITHOUT_CLASSIFICATION	get rid of any edit pane that is a child of the current edit pane's parent splitter
WITHOUT_CLASSIFICATION	{{{ nexttextarea() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	pull out the method signatures with matching names
WITHOUT_CLASSIFICATION	method matches name
WITHOUT_CLASSIFICATION	this method should parallel findmostspecificmethod()
WITHOUT_CLASSIFICATION	{{{ prevtextarea() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getbuffer() method
WITHOUT_CLASSIFICATION	{{{ getsplitpane() method
WITHOUT_CLASSIFICATION	{{{ setbuffer() method
WITHOUT_CLASSIFICATION	{{{ gotobuffer() method
WITHOUT_CLASSIFICATION	ignore zero-height splits etc
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ gettextarea() method
WITHOUT_CLASSIFICATION	{{{ geteditpane() method
WITHOUT_CLASSIFICATION	{{{ geteditpanes() method
WITHOUT_CLASSIFICATION	{{{ getviewconfig() method
WITHOUT_CLASSIFICATION	@bgen(jjtree) formalparameter
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	fall through
WITHOUT_CLASSIFICATION	bcm
WITHOUT_CLASSIFICATION	bcm
WITHOUT_CLASSIFICATION	shouldn't happen
WITHOUT_CLASSIFICATION	why so cute?
WITHOUT_CLASSIFICATION	add interpereter and namespace to args list
WITHOUT_CLASSIFICATION	@bgen(jjtree)
WITHOUT_CLASSIFICATION	@bgen(jjtree)
WITHOUT_CLASSIFICATION	this originally handled postfix array dimensionsvoid variabledeclaratorid() #variabledeclaratorid { token t }{ t=<identifier> { jjtthis.name = t.image } ( "[" "]" { jjtthis.addundefineddimension() } )}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	gather modifiers for a class method or field.i lookahead is true then we are being called as part of a lookahead and weshould not enforce any rules. otherwise we validate based on context(field method class)
WITHOUT_CLASSIFICATION	@bgen(jjtree) classdeclaration
WITHOUT_CLASSIFICATION	@bgen(jjtree) methoddeclaration
WITHOUT_CLASSIFICATION	@bgen(jjtree) packagedeclaration
WITHOUT_CLASSIFICATION	@bgen(jjtree) importdeclaration
WITHOUT_CLASSIFICATION	@bgen(jjtree) variabledeclarator
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	@bgen(jjtree) returntype
WITHOUT_CLASSIFICATION	@bgen(jjtree) primitivetype
WITHOUT_CLASSIFICATION	@bgen(jjtree) ambiguousname
WITHOUT_CLASSIFICATION	@bgen(jjtree) assignment
WITHOUT_CLASSIFICATION	this production is to determine lookahead only.
WITHOUT_CLASSIFICATION	@bgen(jjtree) castexpression
WITHOUT_CLASSIFICATION	@bgen(jjtree) primaryexpression
WITHOUT_CLASSIFICATION	@bgen(jjtree) primarysuffix
WITHOUT_CLASSIFICATION	@bgen(jjtree) literal
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	leave these on the stack for arguments() to handle
WITHOUT_CLASSIFICATION	@bgen(jjtree) allocationexpression
WITHOUT_CLASSIFICATION	@bgen(jjtree) arraydimensions
WITHOUT_CLASSIFICATION	statement syntax follows.
WITHOUT_CLASSIFICATION	@bgen(jjtree) block
WITHOUT_CLASSIFICATION	@bgen(jjtree) #formalcomment( retaincomments)
WITHOUT_CLASSIFICATION	@bgen(jjtree) switchstatement
WITHOUT_CLASSIFICATION	@bgen(jjtree) switchlabel
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	@bgen(jjtree) whilestatement
WITHOUT_CLASSIFICATION	do statement is just a while statement with a special hook to executeat least once.
WITHOUT_CLASSIFICATION	@bgen(jjtree) forstatement
WITHOUT_CLASSIFICATION	@bgen(jjtree) enhancedforstatement
WITHOUT_CLASSIFICATION	@bgen(jjtree) typedvariabledeclaration
WITHOUT_CLASSIFICATION	@bgen(jjtree) statementexpressionlist
WITHOUT_CLASSIFICATION	@bgen(jjtree) returnstatement
WITHOUT_CLASSIFICATION	@bgen(jjtree) throwstatement
WITHOUT_CLASSIFICATION	@bgen(jjtree) trystatement
WITHOUT_CLASSIFICATION	all core awt listeners
WITHOUT_CLASSIFICATION	all listeners in javax.swing.event as of swing 1.1
WITHOUT_CLASSIFICATION	handleevent gets all events
WITHOUT_CLASSIFICATION	squeltch
WITHOUT_CLASSIFICATION	send to specific event handler
WITHOUT_CLASSIFICATION	listener interfaces
WITHOUT_CLASSIFICATION	listener interfaces
WITHOUT_CLASSIFICATION	used for the delayed evaluation
WITHOUT_CLASSIFICATION	token was accepted
WITHOUT_CLASSIFICATION	paramtypes
WITHOUT_CLASSIFICATION	returntype
WITHOUT_CLASSIFICATION	bshtype will cache the type for us
WITHOUT_CLASSIFICATION	hashtable implements map
WITHOUT_CLASSIFICATION	bshformalparameters will cache the type for us
WITHOUT_CLASSIFICATION	hashtable implements map
WITHOUT_CLASSIFICATION	arrays incomplete need to use the array setter
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	hypothetical question can you have a re that matches 1 times 3 times 5 times but not 2 times or 4 times? does having the subexpression back-reference operator allow that?
WITHOUT_CLASSIFICATION	{{{ isclosed() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	possible positions for the next repeat to match at
WITHOUT_CLASSIFICATION	declare variables used in loop
WITHOUT_CLASSIFICATION	try next repeat at all possible positions
WITHOUT_CLASSIFICATION	add all items in current to doables array
WITHOUT_CLASSIFICATION	find new doableslast
WITHOUT_CLASSIFICATION	if none of the possibilities worked out break out of do/while
WITHOUT_CLASSIFICATION	reassign where the next repeat can match
WITHOUT_CLASSIFICATION	increment how many repeats we've successfully found
WITHOUT_CLASSIFICATION	if there aren't enough repeats then fail
WITHOUT_CLASSIFICATION	we're greedy but ease off until a true match is found
WITHOUT_CLASSIFICATION	else did not match rest of the tokens try again on smaller sample
WITHOUT_CLASSIFICATION	does this get all?
WITHOUT_CLASSIFICATION	if we fall out no matches.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ isplainview() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	clone() separates a single match from the chain
WITHOUT_CLASSIFICATION	chain results to doneindex
WITHOUT_CLASSIFICATION	find new doneindexlast
WITHOUT_CLASSIFICATION	matches after a newline
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	position in retoken.newline
WITHOUT_CLASSIFICATION	don't match at all if reg_notbol is set.
WITHOUT_CLASSIFICATION	value for end
WITHOUT_CLASSIFICATION	closer to end
WITHOUT_CLASSIFICATION	allocate more space in the buffer.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	value for end
WITHOUT_CLASSIFICATION	big enough for a \r\n pair lookbehind[0] = most recent lookbehind[1] = second most recent
WITHOUT_CLASSIFICATION	this.index is index of next pos relative to charat(0)
WITHOUT_CLASSIFICATION	set flag that next should fail next time?
WITHOUT_CLASSIFICATION	move read position [index] clicks from 'charat(0)'
WITHOUT_CLASSIFICATION	if we have buffered replace data use it.
WITHOUT_CLASSIFICATION	this is prone to infinite loops if replace string turns out empty.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	closer to end
WITHOUT_CLASSIFICATION	allocate more space in the buffer.
WITHOUT_CLASSIFICATION	this.index is index of next pos relative to charat(0)
WITHOUT_CLASSIFICATION	set flag that next should fail next time?
WITHOUT_CLASSIFICATION	move read position [index] clicks from 'charat(0)'
WITHOUT_CLASSIFICATION	convert the byte read into a char
WITHOUT_CLASSIFICATION	error conditions from gnu regcomp(3) manual
WITHOUT_CLASSIFICATION	package scope constructor is used by re.getmatchenumeration()
WITHOUT_CLASSIFICATION	else
WITHOUT_CLASSIFICATION	else
WITHOUT_CLASSIFICATION	no match
WITHOUT_CLASSIFICATION	doesn't happen
WITHOUT_CLASSIFICATION	need to deep clone?
WITHOUT_CLASSIFICATION	cut off alternates
WITHOUT_CLASSIFICATION	cut off alternates
WITHOUT_CLASSIFICATION	anchor position refers to the index into the source input at which the matching operation began. this is also useful for the anchorindex option.
WITHOUT_CLASSIFICATION	offset in source text where match was tried. this is zero-based the actual position in the source text is given by (offset + anchor).
WITHOUT_CLASSIFICATION	package scope used by re. used while matching to mark current match position in input start positions (relative to offset) for each (sub)exp. end positions for the same other possibility (to avoid having to use arrays)
WITHOUT_CLASSIFICATION	position in newline
WITHOUT_CLASSIFICATION	assume for now that next can only be one character
WITHOUT_CLASSIFICATION	overrides retoken.chain() to optimize for strings
WITHOUT_CLASSIFICATION	note that there is some debate over whether '_' should be included
WITHOUT_CLASSIFICATION	the re constructor uses this to look up the constant for a string
WITHOUT_CLASSIFICATION	array indices correspond to constants defined above.
WITHOUT_CLASSIFICATION	this is the number of subexpressions in this regular expression with a minimum value of zero. returned by getnumsubs()
WITHOUT_CLASSIFICATION	the localized strings are kept in a separate file
WITHOUT_CLASSIFICATION	this string will be returned by getversion()
WITHOUT_CLASSIFICATION	retrieves a message from the resourcebundle
WITHOUT_CLASSIFICATION	internal constructor used for alternation
WITHOUT_CLASSIFICATION	subexpression index of this token.
WITHOUT_CLASSIFICATION	for use by subclasses
WITHOUT_CLASSIFICATION	the meat of construction
WITHOUT_CLASSIFICATION	number of subexpressions in this token.
WITHOUT_CLASSIFICATION	linked list of tokens (sort of -- some closed loops can exist)
WITHOUT_CLASSIFICATION	precalculate these so we don't pay for the math every time we need to access them.
WITHOUT_CLASSIFICATION	this is the case of {x}
WITHOUT_CLASSIFICATION	this is used for {xy} calculations
WITHOUT_CLASSIFICATION	{{{ getminimumsize() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	buffer a token so we can create a tokenrepeated etc.
WITHOUT_CLASSIFICATION	read the next character unit (including backslash escapes)
WITHOUT_CLASSIFICATION	make everything up to here be a branch. create vector if nec.
WITHOUT_CLASSIFICATION	list operator [] | [^]
WITHOUT_CLASSIFICATION	check for initial caret negation
WITHOUT_CLASSIFICATION	check for leading right bracket literal
WITHOUT_CLASSIFICATION	create a new retokenoneof
WITHOUT_CLASSIFICATION	{{{ setwaitsocket() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	find end of subexpression
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	not a comment subexpression
WITHOUT_CLASSIFICATION	{{{ getnext() method
WITHOUT_CLASSIFICATION	start of line operator ^
WITHOUT_CLASSIFICATION	end of line operator $
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	read string of digits
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	backreference operator \1 \2 \9 not available if re_no_bk_refs is set
WITHOUT_CLASSIFICATION	check for stingy matching on retokenrepeated
WITHOUT_CLASSIFICATION	start of string operator \a if re_string_anchors is set
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	word end operator \> if ????
WITHOUT_CLASSIFICATION	non-word break operator \b if ????
WITHOUT_CLASSIFICATION	non-digit operator \d
WITHOUT_CLASSIFICATION	newline escape \n
WITHOUT_CLASSIFICATION	return escape \r
WITHOUT_CLASSIFICATION	whitespace operator \s if re_char_class_escapes is set
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	alphanumeric operator \w
WITHOUT_CLASSIFICATION	non-alphanumeric operator \w
WITHOUT_CLASSIFICATION	end of string operator \z
WITHOUT_CLASSIFICATION	not a special character
WITHOUT_CLASSIFICATION	end while
WITHOUT_CLASSIFICATION	add final buffered token and an endsub marker
WITHOUT_CLASSIFICATION	compact the vector
WITHOUT_CLASSIFICATION	trivial case
WITHOUT_CLASSIFICATION	overrides retoken.setuncle
WITHOUT_CLASSIFICATION	to deal with empty subexpressions
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	handle pathological case of zero-length match
WITHOUT_CLASSIFICATION	implements abstract method retoken.match()
WITHOUT_CLASSIFICATION	note the start of this subexpression
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	read string of digits
WITHOUT_CLASSIFICATION	find longest match of them all to observe leftmost longest
WITHOUT_CLASSIFICATION	append character to buffer if needed
WITHOUT_CLASSIFICATION	{{{ getprev() method
WITHOUT_CLASSIFICATION	helper function for constructor
WITHOUT_CLASSIFICATION	didn't match up
WITHOUT_CLASSIFICATION	precondition input[index-1] == '{' minmax != null
WITHOUT_CLASSIFICATION	this constructor is used for convenience when we know the set beforehand e.g. \d --> new retokenoneof("0123456789"false ..) \d --> new retokenoneof("0123456789"true ..)
WITHOUT_CLASSIFICATION	we know min and max now and they are valid.
WITHOUT_CLASSIFICATION	return the index following the '}'
WITHOUT_CLASSIFICATION	cast input appropriately or throw exception
WITHOUT_CLASSIFICATION	do we lose index info?
WITHOUT_CLASSIFICATION	match was successful
WITHOUT_CLASSIFICATION	add trymatch to list of possibilities.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ handlemessage() method
WITHOUT_CLASSIFICATION	set contents of mymatch equal to newmatch
WITHOUT_CLASSIFICATION	try each one that matched
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ package-private members
WITHOUT_CLASSIFICATION	{{{ view constructor
WITHOUT_CLASSIFICATION	index+1 works for [^abc] lists not for generic lookahead (--> index)
WITHOUT_CLASSIFICATION	if we have buffered replace data use it.
WITHOUT_CLASSIFICATION	check if input is at a valid position
WITHOUT_CLASSIFICATION	handled by re
WITHOUT_CLASSIFICATION	true for the constant defined syntaxes
WITHOUT_CLASSIFICATION	values for constants are bit indexes
WITHOUT_CLASSIFICATION	impl.
WITHOUT_CLASSIFICATION	single line mode (/s)
WITHOUT_CLASSIFICATION	define syntaxes
WITHOUT_CLASSIFICATION	p1003.2/d11.2 section 4.20.7.1 lines 5078ff.
WITHOUT_CLASSIFICATION	differs from re_syntax_posix_extended in that re_context_invalid_ops replaces re_context_indep_ops and re_no_bk_refs is added.
WITHOUT_CLASSIFICATION	there is no official perl spec but here's a "best guess"
WITHOUT_CLASSIFICATION	except for '{' apparently
WITHOUT_CLASSIFICATION	\d\d\w\w\s\s
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	undone
WITHOUT_CLASSIFICATION	xxx
WITHOUT_CLASSIFICATION	unexpected eof!
WITHOUT_CLASSIFICATION	per patrick beard
WITHOUT_CLASSIFICATION	always in the range 0 .. 9. the current block size is 100000 this number.
WITHOUT_CLASSIFICATION	index of the last char in the block so the block size == last + 1.
WITHOUT_CLASSIFICATION	index in zptr[] of original string after sorting.
WITHOUT_CLASSIFICATION	throw new ccoruptionerror()
WITHOUT_CLASSIFICATION	throw new ioexception("invalid block size")
WITHOUT_CLASSIFICATION	not a char and not eof
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	a bad crc is considered a fatal error.
WITHOUT_CLASSIFICATION	currblockno++
WITHOUT_CLASSIFICATION	now the selectors
WITHOUT_CLASSIFICATION	now the coding tables
WITHOUT_CLASSIFICATION	create the huffman decoding tables
WITHOUT_CLASSIFICATION	receive the mapping table
WITHOUT_CLASSIFICATION	xxx
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	if you are ever unlucky/improbable enough to get a stack overflow whilst sorting increase the following constant and try again. in practice i have never seen the stack go above 27 elems so the following limit seems very generous.
WITHOUT_CLASSIFICATION	knuth's increments seem to work better than incerpi-sedgewick here. possibly because the number of elems to sort is usually small typically <= 20.
WITHOUT_CLASSIFICATION	used when sorting. if too many long comparisons happen we stop sorting randomise the block slightly and try again.
WITHOUT_CLASSIFICATION	ch = 0
WITHOUT_CLASSIFICATION	index in zptr[] of original string after sorting.
WITHOUT_CLASSIFICATION	the back end needs a place to store the mtf values whilst it calculates the coding tables. we could put them in the zptr array. however these values will fit in a short so we overlay szptr at the start of zptr in the hope of reducing the number of cache misses induced by the multiple traversals of the mtf values when calculating coding tables. seems to improve compression speed by about 1%.
WITHOUT_CLASSIFICATION	nodes and heap entries run from 1. entry 0 for both the heap and nodes is a sentinel.
WITHOUT_CLASSIFICATION	throw new cerror()
WITHOUT_CLASSIFICATION	szptr = zptr
WITHOUT_CLASSIFICATION	blockno++
WITHOUT_CLASSIFICATION	write 8-bit
WITHOUT_CLASSIFICATION	write 8-bit
WITHOUT_CLASSIFICATION	sort the block and establish posn of original string
WITHOUT_CLASSIFICATION	now the block's crc so it is in a known place.
WITHOUT_CLASSIFICATION	now a single bit indicating randomisation.
WITHOUT_CLASSIFICATION	finally block's contents proper.
WITHOUT_CLASSIFICATION	now another magic 48-bit number 0x177245385090 to indicate the end of the last block. (sqrt(pi) if you want to know. i did want to use e but it contains too much repetition -- 27 18 28 18 28 46 -- for me to feel statistically comfortable. call me paranoid.)
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	in the various block-sized structures live data runs from 0 to last+num_overshoot_bytes inclusive. first set up the overshoot area for block.
WITHOUT_CLASSIFICATION	use simplesort() since the full sorting mechanism has quite a large constant overhead.
WITHOUT_CLASSIFICATION	now ftab contains the first loc of every small bucket. calculate the running order from smallest to largest big bucket.
WITHOUT_CLASSIFICATION	the main sorting loop.
WITHOUT_CLASSIFICATION	process big buckets starting with the least full.
WITHOUT_CLASSIFICATION	{{{ close() method
WITHOUT_CLASSIFICATION	handle 16 bit signed numbers
WITHOUT_CLASSIFICATION	decide how many coding tables to use
WITHOUT_CLASSIFICATION	generate an initial set of coding tables
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	iterate up to n_iters times to improve the tables.
WITHOUT_CLASSIFICATION	set group start & end marks.
WITHOUT_CLASSIFICATION	calculate the cost of this group as coded by each of the coding tables.
WITHOUT_CLASSIFICATION	run jeditlauncher installation
WITHOUT_CLASSIFICATION	increment the symbol frequencies for the selected table.
WITHOUT_CLASSIFICATION	recompute the tables based on the accumulated frequencies.
WITHOUT_CLASSIFICATION	compute mtf values for the selectors.
WITHOUT_CLASSIFICATION	assign actual codes for the tables.
WITHOUT_CLASSIFICATION	transmit the mapping table.
WITHOUT_CLASSIFICATION	now the selectors.
WITHOUT_CLASSIFICATION	11
WITHOUT_CLASSIFICATION	and finally the block data proper
WITHOUT_CLASSIFICATION	copy 1
WITHOUT_CLASSIFICATION	copy 2
WITHOUT_CLASSIFICATION	( (this.assemlen + numtowrite ) < this.recordbuf.length )
WITHOUT_CLASSIFICATION	when we get here we have either o an empty "assemble" buffer. o no bytes to write (numtowrite == 0)
WITHOUT_CLASSIFICATION	in.close()
WITHOUT_CLASSIFICATION	pass 1 compute preferred row heights / column widths
WITHOUT_CLASSIFICATION	pass 2 redistribute free space
WITHOUT_CLASSIFICATION	synchronized
WITHOUT_CLASSIFICATION	on by default
WITHOUT_CLASSIFICATION	create app start script
WITHOUT_CLASSIFICATION	delete existing copy
WITHOUT_CLASSIFICATION	write simple script
WITHOUT_CLASSIFICATION	make it executable
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ package-private members
WITHOUT_CLASSIFICATION	xxx
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	new jeditlauncherostask(installer)
WITHOUT_CLASSIFICATION	install user-selected packages
WITHOUT_CLASSIFICATION	do operating system specific stuff (creating startup scripts installing man pages etc.)
WITHOUT_CLASSIFICATION	system.err.println(filename)
WITHOUT_CLASSIFICATION	label == null means no configurable options
WITHOUT_CLASSIFICATION	can't happen
WITHOUT_CLASSIFICATION	{{{ getshortcut() method
WITHOUT_CLASSIFICATION	{{{ getposition() method
WITHOUT_CLASSIFICATION	{{{ marker constructor
WITHOUT_CLASSIFICATION	{{{ setshortcut() method
WITHOUT_CLASSIFICATION	{{{ createposition() method
WITHOUT_CLASSIFICATION	{{{ removeposition() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	forget the cached position instance
WITHOUT_CLASSIFICATION	{{{ setposition() method
WITHOUT_CLASSIFICATION	{{{ isperspectivedirty() method
WITHOUT_CLASSIFICATION	{{{ setperspectivedirty() method
WITHOUT_CLASSIFICATION	{{{ loadperspective() method
WITHOUT_CLASSIFICATION	{{{ saveperspective() method
WITHOUT_CLASSIFICATION	backgrounded
WITHOUT_CLASSIFICATION	{{{ input() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ runscript() method
WITHOUT_CLASSIFICATION	{{{ perspectivehandler class
WITHOUT_CLASSIFICATION	this will result in a slight speed up since we don't need to read the dtd anyway as aelfred is non-validating
WITHOUT_CLASSIFICATION	{{{ showrunscriptdialog() method
WITHOUT_CLASSIFICATION	{{{ message() method
WITHOUT_CLASSIFICATION	{{{ error() method
WITHOUT_CLASSIFICATION	save dockable window geometry and close 'em
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ input() method
WITHOUT_CLASSIFICATION	only executed if above loop falls through ie there is no handler for this file
WITHOUT_CLASSIFICATION	{{{ confirm() method
WITHOUT_CLASSIFICATION	{{{ confirm() method
WITHOUT_CLASSIFICATION	{{{ loadmacros() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ registerhandler() method
WITHOUT_CLASSIFICATION	{{{ gethandlers() method
WITHOUT_CLASSIFICATION	{{{ gethandlerforfilename() method
WITHOUT_CLASSIFICATION	{{{ gethandler() method
WITHOUT_CLASSIFICATION	{{{ getmacrohierarchy() method
WITHOUT_CLASSIFICATION	{{{ getmacroactionset() method
WITHOUT_CLASSIFICATION	{{{ getmacro() method
WITHOUT_CLASSIFICATION	{{{ macro class
WITHOUT_CLASSIFICATION	{{{ macro constructor
WITHOUT_CLASSIFICATION	{{{ getpath() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ gethandler() method
WITHOUT_CLASSIFICATION	{{{ invoke() method
WITHOUT_CLASSIFICATION	{{{ getcode() method
WITHOUT_CLASSIFICATION	{{{ macronametolabel() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ loadmacros() method
WITHOUT_CLASSIFICATION	{{{ recordtemporarymacro() method
WITHOUT_CLASSIFICATION	{{{ recordmacro() method
WITHOUT_CLASSIFICATION	{{{ stoprecording() method
WITHOUT_CLASSIFICATION	{{{ runtemporarymacro() method
WITHOUT_CLASSIFICATION	i already wrote a comment expaining this in macro.invoke().
WITHOUT_CLASSIFICATION	{{{ static variables
WITHOUT_CLASSIFICATION	{{{ class initializer
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ recordmacro() method
WITHOUT_CLASSIFICATION	do nothing!
WITHOUT_CLASSIFICATION	{{{ try to merge with an existing menu first
WITHOUT_CLASSIFICATION	{{{ addmacro() method
WITHOUT_CLASSIFICATION	ignore if already added. see comment in loadmacros().
WITHOUT_CLASSIFICATION	setting the message to 'null' causes the status bar to check if a recording is in progress
WITHOUT_CLASSIFICATION	{{{ recorder class
WITHOUT_CLASSIFICATION	{{{ recorder constructor
WITHOUT_CLASSIFICATION	{{{ record() method
WITHOUT_CLASSIFICATION	{{{ record() method
WITHOUT_CLASSIFICATION	{{{ handlemessage() method
WITHOUT_CLASSIFICATION	{{{ recordinput() method
WITHOUT_CLASSIFICATION	{{{ recordinput() method
WITHOUT_CLASSIFICATION	{{{ append() method
WITHOUT_CLASSIFICATION	{{{ dispose() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ accept() method
WITHOUT_CLASSIFICATION	{{{ createmacro() method
WITHOUT_CLASSIFICATION	{{{ handler class
WITHOUT_CLASSIFICATION	setting the message to 'null' causes the status bar to check if a recording is in progress
WITHOUT_CLASSIFICATION	{{{ flushinput() method
WITHOUT_CLASSIFICATION	{{{ getname() method
WITHOUT_CLASSIFICATION	{{{ getlabel() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ runmacro() method
WITHOUT_CLASSIFICATION	{{{ runmacro() method
WITHOUT_CLASSIFICATION	{{{ handler constructor
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ createmacro() method
WITHOUT_CLASSIFICATION	{{{ runmacro() method
WITHOUT_CLASSIFICATION	{{{ runmacro() method
WITHOUT_CLASSIFICATION	{{{ beanshellhandler class
WITHOUT_CLASSIFICATION	{{{ beanshellhandler constructor
WITHOUT_CLASSIFICATION	remove '.bsh'
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ some predefined icons
WITHOUT_CLASSIFICATION	{{{ icon methods
WITHOUT_CLASSIFICATION	{{{ seticonpath() method
WITHOUT_CLASSIFICATION	{{{ loadicon() method
WITHOUT_CLASSIFICATION	check if there is a cached version first
WITHOUT_CLASSIFICATION	get the icon
WITHOUT_CLASSIFICATION	{{{ geteditoricon() method
WITHOUT_CLASSIFICATION	{{{ getpluginicon() method
WITHOUT_CLASSIFICATION	{{{ menus tool bars
WITHOUT_CLASSIFICATION	{{{ loadmenubar() method
WITHOUT_CLASSIFICATION	{{{ loadmenubar() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ message() method
WITHOUT_CLASSIFICATION	{{{ error() method
WITHOUT_CLASSIFICATION	{{{ input() method
WITHOUT_CLASSIFICATION	{{{ input() method
WITHOUT_CLASSIFICATION	{{{ confirm() method
WITHOUT_CLASSIFICATION	{{{ inputproperty() method
WITHOUT_CLASSIFICATION	{{{ loadmenu() method
WITHOUT_CLASSIFICATION	{{{ loadmenu() method
WITHOUT_CLASSIFICATION	{{{ loadtoolbar() method
WITHOUT_CLASSIFICATION	{{{ loadpopupmenu() method
WITHOUT_CLASSIFICATION	{{{ loadpopupmenu() method
WITHOUT_CLASSIFICATION	{{{ loadtoolbar() method
WITHOUT_CLASSIFICATION	{{{ loadmenuitem() method
WITHOUT_CLASSIFICATION	{{{ loadmenuitem() method
WITHOUT_CLASSIFICATION	{{{ loadmenuitem() method
WITHOUT_CLASSIFICATION	{{{ inputproperty() method
WITHOUT_CLASSIFICATION	{{{ loadtoolbutton() method
WITHOUT_CLASSIFICATION	{{{ loadtoolbutton() method
WITHOUT_CLASSIFICATION	{{{ prettifymenulabel() method
WITHOUT_CLASSIFICATION	{{{ showvfsfiledialog() method
WITHOUT_CLASSIFICATION	{{{ canned dialog boxes
WITHOUT_CLASSIFICATION	{{{ colors and styles
WITHOUT_CLASSIFICATION	{{{ parsecolor() method
WITHOUT_CLASSIFICATION	{{{ parsecolor() method
WITHOUT_CLASSIFICATION	{{{ parsestyle() method
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ parsestyle() method
WITHOUT_CLASSIFICATION	{{{ loadstyles() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ loadstyles() method
WITHOUT_CLASSIFICATION	start at 1 not 0 to skip token.null
WITHOUT_CLASSIFICATION	{{{ loading saving window geometry
WITHOUT_CLASSIFICATION	{{{ loadgeometry() method
WITHOUT_CLASSIFICATION	{{{ adjustforscreenbounds() method
WITHOUT_CLASSIFICATION	make sure the window is displayed in visible region
WITHOUT_CLASSIFICATION	{{{ componenthandler class
WITHOUT_CLASSIFICATION	{{{ componentmoved() method
WITHOUT_CLASSIFICATION	{{{ componentresized() method
WITHOUT_CLASSIFICATION	{{{ windowhandler class
WITHOUT_CLASSIFICATION	{{{ windowopened() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ savegeometry() method
WITHOUT_CLASSIFICATION	{{{ getextendedstate() method
WITHOUT_CLASSIFICATION	{{{ setextendedstate() method
WITHOUT_CLASSIFICATION	{{{ centeronscreen() method
WITHOUT_CLASSIFICATION	{{{ hidesplashscreen() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ createmultilinelabel() method
WITHOUT_CLASSIFICATION	{{{ requestfocus() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ package-private members
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	{{{ ismiddlebutton() method
WITHOUT_CLASSIFICATION	{{{ ispopuptrigger() method
WITHOUT_CLASSIFICATION	{{{ isancestorof() method
WITHOUT_CLASSIFICATION	system.err.println("x overflow")
WITHOUT_CLASSIFICATION	{{{ isrightbutton() method
WITHOUT_CLASSIFICATION	{{{ getcomponentparent() method
WITHOUT_CLASSIFICATION	{{{ showpopupmenu() method
WITHOUT_CLASSIFICATION	{{{ showpopupmenu() method
WITHOUT_CLASSIFICATION	{{{ advancesplashprogress() method
WITHOUT_CLASSIFICATION	{{{ getparentdialog() method
WITHOUT_CLASSIFICATION	{{{ showsplashscreen() method
WITHOUT_CLASSIFICATION	{{{ getview() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getname() method
WITHOUT_CLASSIFICATION	{{{ abstractoptionpane constructor
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	only show class decs in classes
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getcomponent() method
WITHOUT_CLASSIFICATION	final in 4.2
WITHOUT_CLASSIFICATION	final in 4.2
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ addcomponent() method
WITHOUT_CLASSIFICATION	{{{ addcomponent() method
WITHOUT_CLASSIFICATION	{{{ addcomponent() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	all
WITHOUT_CLASSIFICATION	{{{ addcomponent() method
WITHOUT_CLASSIFICATION	{{{ addcomponent() method
WITHOUT_CLASSIFICATION	{{{ addseparator() method
WITHOUT_CLASSIFICATION	cons.insets = new insets(1010)
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ addseparator() method
WITHOUT_CLASSIFICATION	{{{ protected members
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getentry() method
WITHOUT_CLASSIFICATION	{{{ setentry() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ gethistory() method
WITHOUT_CLASSIFICATION	{{{ getbufferhistory() method
WITHOUT_CLASSIFICATION	{{{ load() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	log.log(log.debugbufferhistory.classfnf)
WITHOUT_CLASSIFICATION	to avoid data loss only do this if the above completed successfully
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ class initializer
WITHOUT_CLASSIFICATION	{{{ addentry() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	try to squeltch the native code stack trace if the exceptionwas caused by a reflective call back into the bsh interpreter(e.g. eval() or source()
WITHOUT_CLASSIFICATION	classexists caches info for us
WITHOUT_CLASSIFICATION	classexists caches info for us
WITHOUT_CLASSIFICATION	classexists caches the tests for us
WITHOUT_CLASSIFICATION	note do not change this to bshclassmanager plainclassforname() or equivalent.this class must not touch any other bsh classes.
WITHOUT_CLASSIFICATION	child is array initializer. evaluate it and fill in the dimensions it returns. initialized arrays are always fully defined(no undefined dimensions to worry about). the syntax uses the undefineddimension count.e.g. int [][] { 1 2 }
WITHOUT_CLASSIFICATION	fill in defineddimensions [] lengths
WITHOUT_CLASSIFICATION	evaluate the defined dimensions of the array
WITHOUT_CLASSIFICATION	unsafe caching of types
WITHOUT_CLASSIFICATION	first label
WITHOUT_CLASSIFICATION	get the first label
WITHOUT_CLASSIFICATION	while more labels or blocks and haven't hit return control
WITHOUT_CLASSIFICATION	if label is default or equals switchval
WITHOUT_CLASSIFICATION	eval it
WITHOUT_CLASSIFICATION	should check to disallow continue here?
WITHOUT_CLASSIFICATION	skip nodes until next label
WITHOUT_CLASSIFICATION	binaryoperation can return primitive or wrapper type
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ activateplugin() method
WITHOUT_CLASSIFICATION	private
WITHOUT_CLASSIFICATION	{{{ removeentry() method
WITHOUT_CLASSIFICATION	xxx e.printstacktrace()
WITHOUT_CLASSIFICATION	delegate to the static method
WITHOUT_CLASSIFICATION	create the class static namespace
WITHOUT_CLASSIFICATION	evaluate any inner class class definitions in the block effectively recursively call this method for contained classes first
WITHOUT_CLASSIFICATION	override
WITHOUT_CLASSIFICATION	override
WITHOUT_CLASSIFICATION	generate the type for our class
WITHOUT_CLASSIFICATION	if debug write out the class file to debugclasses directory
WITHOUT_CLASSIFICATION	define the new class in the classloader
WITHOUT_CLASSIFICATION	bcm.donedefiningclass( fqclassname )
WITHOUT_CLASSIFICATION	import the unq name into parent
WITHOUT_CLASSIFICATION	classstaticnamespace.importclass( fqclassname.replace('$''.') )
WITHOUT_CLASSIFICATION	strictjava
WITHOUT_CLASSIFICATION	evaluate the static portion of the block in the static space
WITHOUT_CLASSIFICATION	set the static bsh this callback
WITHOUT_CLASSIFICATION	strict
WITHOUT_CLASSIFICATION	value
WITHOUT_CLASSIFICATION	value error shouldn't happen
WITHOUT_CLASSIFICATION	declaringnamespace
WITHOUT_CLASSIFICATION	{{{ getfile() method
WITHOUT_CLASSIFICATION	also cache it in the static namespace classstaticnamespace.cacheclass( name genclass )
WITHOUT_CLASSIFICATION	give the static space its class static import important to do this after all classes are defined
WITHOUT_CLASSIFICATION	look for the specially named super delegate method
WITHOUT_CLASSIFICATION	onlystatic
WITHOUT_CLASSIFICATION	onlystatic
WITHOUT_CLASSIFICATION	make all buttons the same size
WITHOUT_CLASSIFICATION	cancel button goes on far left
WITHOUT_CLASSIFICATION	prev and next buttons are on the right
WITHOUT_CLASSIFICATION	calculate size for current page
WITHOUT_CLASSIFICATION	{{{ getpath() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getcachepath() method
WITHOUT_CLASSIFICATION	{{{ getzipfile() method
WITHOUT_CLASSIFICATION	{{{ getclassloader() method
WITHOUT_CLASSIFICATION	{{{ getactions() method
WITHOUT_CLASSIFICATION	{{{ getactionset() method
WITHOUT_CLASSIFICATION	{{{ getbrowseractionset() method
WITHOUT_CLASSIFICATION	{{{ checkdependencies() method
WITHOUT_CLASSIFICATION	{{{ getdependentplugins() method
WITHOUT_CLASSIFICATION	{{{ getplugin() method
WITHOUT_CLASSIFICATION	recursive call
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	package-private members package-private not private for speedy access by inner classes
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	for thread safety
WITHOUT_CLASSIFICATION	{{{ activateifnecessary() method
WITHOUT_CLASSIFICATION	4.1 plugin
WITHOUT_CLASSIFICATION	4.2 plugin
WITHOUT_CLASSIFICATION	if at least one property listed here is true load the plugin
WITHOUT_CLASSIFICATION	{{{ deactivateplugin() method
WITHOUT_CLASSIFICATION	see if this is a 4.1-style plugin
WITHOUT_CLASSIFICATION	{{{ getdockablesuri() method
WITHOUT_CLASSIFICATION	{{{ getservicesuri() method
WITHOUT_CLASSIFICATION	{{{ package-private members
WITHOUT_CLASSIFICATION	{{{ static methods
WITHOUT_CLASSIFICATION	{{{ getplugincache() method
WITHOUT_CLASSIFICATION	returns false with outdated cache
WITHOUT_CLASSIFICATION	{{{ setplugincache() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ pluginjar constructor
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	{{{ uninit() method
WITHOUT_CLASSIFICATION	{{{ getclasses() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	check if a plugin with the same name is already loaded
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	{{{ actionspresentbutnotcoreclass() method
WITHOUT_CLASSIFICATION	{{{ loadcache() method
WITHOUT_CLASSIFICATION	{{{ generatecache() method
WITHOUT_CLASSIFICATION	{{{ startplugin() method
WITHOUT_CLASSIFICATION	old plugins expected jedit 4.1-style behavior where a propertieschanged was sent after plugins were started
WITHOUT_CLASSIFICATION	buffers retain a reference to the fold handler in question and the easiest way to handle fold handler loading is this
WITHOUT_CLASSIFICATION	== null before loaded
WITHOUT_CLASSIFICATION	{{{ startpluginlater() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	{{{ breakplugin() method
WITHOUT_CLASSIFICATION	but we want properties to hang around
WITHOUT_CLASSIFICATION	{{{ plugincacheentry class
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ read() method
WITHOUT_CLASSIFICATION	read() and write() must be kept perfectly in sync its a very simple file format. doing it this way is faster than serializing since serialization calls reflection etc.
WITHOUT_CLASSIFICATION	{{{ readstringarray() method
WITHOUT_CLASSIFICATION	{{{ readuri() method
WITHOUT_CLASSIFICATION	{{{ write() method
WITHOUT_CLASSIFICATION	{{{ readbooleanarray() method
WITHOUT_CLASSIFICATION	{{{ readmap() method
WITHOUT_CLASSIFICATION	{{{ writestringarray() method
WITHOUT_CLASSIFICATION	{{{ writebooleanarray() method
WITHOUT_CLASSIFICATION	{{{ writemap() method
WITHOUT_CLASSIFICATION	{{{ roster constructor
WITHOUT_CLASSIFICATION	{{{ addremove() method
WITHOUT_CLASSIFICATION	{{{ addinstall() method
WITHOUT_CLASSIFICATION	{{{ getoperation() method
WITHOUT_CLASSIFICATION	{{{ getoperationcount() method
WITHOUT_CLASSIFICATION	{{{ isempty() method
WITHOUT_CLASSIFICATION	{{{ performoperationsinworkthread() method
WITHOUT_CLASSIFICATION	{{{ performoperationsinawtthread() method
WITHOUT_CLASSIFICATION	add the jars before checking deps since dep check might require all jars to be present
WITHOUT_CLASSIFICATION	now activate the plugins
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ operation interface
WITHOUT_CLASSIFICATION	{{{ addoperation() method
WITHOUT_CLASSIFICATION	{{{ getdownloaddir() method
WITHOUT_CLASSIFICATION	{{{ runinawtthread() method
WITHOUT_CLASSIFICATION	{{{ remove constructor
WITHOUT_CLASSIFICATION	{{{ remove class
WITHOUT_CLASSIFICATION	{{{ runinawtthread() method
WITHOUT_CLASSIFICATION	close jar file and all jars that depend on this
WITHOUT_CLASSIFICATION	remove cache file
WITHOUT_CLASSIFICATION	move jar first
WITHOUT_CLASSIFICATION	{{{ unloadpluginjar() method
WITHOUT_CLASSIFICATION	{{{ equals() method
WITHOUT_CLASSIFICATION	{{{ install class
WITHOUT_CLASSIFICATION	{{{ install constructor
WITHOUT_CLASSIFICATION	catch those hooligans passing null urls
WITHOUT_CLASSIFICATION	{{{ getmaximum() method
WITHOUT_CLASSIFICATION	{{{ runinworkthread() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ equals() method
WITHOUT_CLASSIFICATION	check if download failed
WITHOUT_CLASSIFICATION	if download ok remove existing version
WITHOUT_CLASSIFICATION	even if installdirectory is different
WITHOUT_CLASSIFICATION	{{{ download() method
WITHOUT_CLASSIFICATION	do nothing user clicked 'stop'
WITHOUT_CLASSIFICATION	{{{ copy() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ constructor
WITHOUT_CLASSIFICATION	{{{ construct() method
WITHOUT_CLASSIFICATION	{{{ menuselected() method
WITHOUT_CLASSIFICATION	{{{ menudeselected() method
WITHOUT_CLASSIFICATION	{{{ menucanceled() method
WITHOUT_CLASSIFICATION	{{{ showrecentmenuitem class
WITHOUT_CLASSIFICATION	allocate the array to store the initializers description of the array the other dimensions default to zero and are assigned when the values are set.
WITHOUT_CLASSIFICATION	evaluate the initializers
WITHOUT_CLASSIFICATION	unwrap primitive to the wrapper type
WITHOUT_CLASSIFICATION	don't deal with object types here unless above
WITHOUT_CLASSIFICATION	store the value in the array
WITHOUT_CLASSIFICATION	i think this can happen
WITHOUT_CLASSIFICATION	supply any defaulted attributes.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	constants.
WITHOUT_CLASSIFICATION	constants for element content type.
WITHOUT_CLASSIFICATION	constants for the entity type.
WITHOUT_CLASSIFICATION	constants for attribute type.
WITHOUT_CLASSIFICATION	constants for supported encodings.
WITHOUT_CLASSIFICATION	constants for attribute default value.
WITHOUT_CLASSIFICATION	read the version.
WITHOUT_CLASSIFICATION	try reading an encoding declaration.
WITHOUT_CLASSIFICATION	try reading a standalone declaration
WITHOUT_CLASSIFICATION	read an optional version.
WITHOUT_CLASSIFICATION	read the encoding.
WITHOUT_CLASSIFICATION	8-bit encodings
WITHOUT_CLASSIFICATION	16-bit encodings
WITHOUT_CLASSIFICATION	32-bit encodings
WITHOUT_CLASSIFICATION	read the document type name.
WITHOUT_CLASSIFICATION	read the externalids.
WITHOUT_CLASSIFICATION	look for a declaration subset.
WITHOUT_CLASSIFICATION	loop until the subset ends
WITHOUT_CLASSIFICATION	end of subset
WITHOUT_CLASSIFICATION	read the external subset if any
WITHOUT_CLASSIFICATION	loop until we end up back at '>'
WITHOUT_CLASSIFICATION	no external subset.
WITHOUT_CLASSIFICATION	read the element type name.
WITHOUT_CLASSIFICATION	determine the current content type.
WITHOUT_CLASSIFICATION	read the element type name.
WITHOUT_CLASSIFICATION	flags for parsing context.
WITHOUT_CLASSIFICATION	major syntactic productions.
WITHOUT_CLASSIFICATION	skip all white pis and comments if this doesn't throw an exception
WITHOUT_CLASSIFICATION	expand general entities in default values of attributes. (do this after the doctypedecl event!). expandattributedefaultvalues()
WITHOUT_CLASSIFICATION	this is the (global) counter for the array of specified attributes.
WITHOUT_CLASSIFICATION	read the attributes if any. after this loop we should be just in front of the closing delimiter.
WITHOUT_CLASSIFICATION	see if it was specified.
WITHOUT_CLASSIFICATION	i guess not
WITHOUT_CLASSIFICATION	figure out if this is a start tag or an empty element and dispatch an event accordingly.
WITHOUT_CLASSIFICATION	restore the previous state.
WITHOUT_CLASSIFICATION	read the attribute name.
WITHOUT_CLASSIFICATION	parse '='
WITHOUT_CLASSIFICATION	handle delimiters
WITHOUT_CLASSIFICATION	found "&"
WITHOUT_CLASSIFICATION	found "<"
WITHOUT_CLASSIFICATION	found "<!"
WITHOUT_CLASSIFICATION	found "<!-"
WITHOUT_CLASSIFICATION	found "<!["
WITHOUT_CLASSIFICATION	found "</"
WITHOUT_CLASSIFICATION	found "<" followed by something else
WITHOUT_CLASSIFICATION	read the content model.
WITHOUT_CLASSIFICATION	parse the first content particle
WITHOUT_CLASSIFICATION	check for end or for a separator.
WITHOUT_CLASSIFICATION	register the separator.
WITHOUT_CLASSIFICATION	parse the rest of the content model.
WITHOUT_CLASSIFICATION	check for the occurrence indicator.
WITHOUT_CLASSIFICATION	check for pcdata alone.
WITHOUT_CLASSIFICATION	parse mixed content.
WITHOUT_CLASSIFICATION	read the attribute type.
WITHOUT_CLASSIFICATION	read the default value.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	note that the attribute has been specified.
WITHOUT_CLASSIFICATION	read the first token.
WITHOUT_CLASSIFICATION	read the remaining tokens.
WITHOUT_CLASSIFICATION	no surrogates needed
WITHOUT_CLASSIFICATION	> 16 bits surrogate needed
WITHOUT_CLASSIFICATION	too big for surrogate
WITHOUT_CLASSIFICATION	check for a parameter entity.
WITHOUT_CLASSIFICATION	read the entity name and prepend '%' if necessary.
WITHOUT_CLASSIFICATION	read the entity value.
WITHOUT_CLASSIFICATION	internal entity.
WITHOUT_CLASSIFICATION	read the external ids
WITHOUT_CLASSIFICATION	check for ndata declaration.
WITHOUT_CLASSIFICATION	finish the declaration.
WITHOUT_CLASSIFICATION	read the external identifiers.
WITHOUT_CLASSIFICATION	register the notation.
WITHOUT_CLASSIFICATION	start with a little cheat -- in most cases the entire sequence of character data will already be in the readbuffer if not fall through to the normal approach.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	high-level reading and scanning methods.
WITHOUT_CLASSIFICATION	else fall through
WITHOUT_CLASSIFICATION	else fall through
WITHOUT_CLASSIFICATION	ok do it by the book.
WITHOUT_CLASSIFICATION	read the first character.
WITHOUT_CLASSIFICATION	find the delimiter.
WITHOUT_CLASSIFICATION	read the literal.
WITHOUT_CLASSIFICATION	literals never have line ends
WITHOUT_CLASSIFICATION	references may be allowed
WITHOUT_CLASSIFICATION	check the next character
WITHOUT_CLASSIFICATION	return the value.
WITHOUT_CLASSIFICATION	public id
WITHOUT_CLASSIFICATION	system id
WITHOUT_CLASSIFICATION	expand buffer if necessary.
WITHOUT_CLASSIFICATION	skip whitespace at the start.
WITHOUT_CLASSIFICATION	skip whitespace at the end.
WITHOUT_CLASSIFICATION	start copying to the left.
WITHOUT_CLASSIFICATION	normalise all other whitespace to a single space.
WITHOUT_CLASSIFICATION	generate a hash code.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	error
WITHOUT_CLASSIFICATION	get the bucket.
WITHOUT_CLASSIFICATION	stop when we hit a null index.
WITHOUT_CLASSIFICATION	if they're the same length check for a match. if the loop finishes 'index' will contain the current bucket position.
WITHOUT_CLASSIFICATION	stop if there are no more tuples.
WITHOUT_CLASSIFICATION	that's it we have a match!
WITHOUT_CLASSIFICATION	not found -- we'll have to add it.
WITHOUT_CLASSIFICATION	do we have to grow the bucket?
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	xml query routines.
WITHOUT_CLASSIFICATION	elements
WITHOUT_CLASSIFICATION	try looking up the element
WITHOUT_CLASSIFICATION	make a new one if necessary.
WITHOUT_CLASSIFICATION	insert the content model if any.
WITHOUT_CLASSIFICATION	insert the attributes if any.
WITHOUT_CLASSIFICATION	save the element info.
WITHOUT_CLASSIFICATION	create a new hashtable if necessary.
WITHOUT_CLASSIFICATION	check that the attribute doesn't already exist!
WITHOUT_CLASSIFICATION	use content_undeclared to avoid overwriting existing element declaration.
WITHOUT_CLASSIFICATION	entities
WITHOUT_CLASSIFICATION	notations.
WITHOUT_CLASSIFICATION	location.
WITHOUT_CLASSIFICATION	as long as there's nothing in the read buffer try reading more data (for an external entity) or popping the entity stack (for either).
WITHOUT_CLASSIFICATION	normal condition.
WITHOUT_CLASSIFICATION	push the existing status.
WITHOUT_CLASSIFICATION	create a new read buffer. (note the four-character margin)
WITHOUT_CLASSIFICATION	flush any remaining data.
WITHOUT_CLASSIFICATION	make the url absolute.
WITHOUT_CLASSIFICATION	see if the application wants to redirect the system id and/or supply its own character stream.
WITHOUT_CLASSIFICATION	start the entity.
WITHOUT_CLASSIFICATION	figure out what we're reading from.
WITHOUT_CLASSIFICATION	there's an explicit character stream.
WITHOUT_CLASSIFICATION	we have to open our own stream to the url.
WITHOUT_CLASSIFICATION	set the new status
WITHOUT_CLASSIFICATION	if we get to here there must be an inputstream available.
WITHOUT_CLASSIFICATION	attempt to detect the encoding.
WITHOUT_CLASSIFICATION	read an xml or text declaration.
WITHOUT_CLASSIFICATION	read the xml/encoding declaration.
WITHOUT_CLASSIFICATION	read the first four bytes for autodetection.
WITHOUT_CLASSIFICATION	look for a known signature.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	ucs-4 must begin with "<!xml" 0x00 0x00 0x3c 0x00 ucs-4 unusual (2143)
WITHOUT_CLASSIFICATION	ucs-2 with a byte-order marker. 0xfe 0xff ucs-2 big-endian (12)
WITHOUT_CLASSIFICATION	ucs-2 without a bom must begin with "<?xml" 0x00 0x3c 0x00 0x3f ucs-2 big-endian no byte-order mark
WITHOUT_CLASSIFICATION	ucs-2 without a bom must begin with "<?xml" 0x3c 0x00 0x3f 0x00 ucs-2 little-endian no byte-order mark
WITHOUT_CLASSIFICATION	some kind of 8-bit encoding with "<?xml" 0x3c 0x3f 0x78 0x6d utf-8 or other 8-bit markup (read encoding)
WITHOUT_CLASSIFICATION	push the existing status
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	don't bother if there is no input.
WITHOUT_CLASSIFICATION	push it onto the stack.
WITHOUT_CLASSIFICATION	throw an eofexception if there is nothing else to pop.
WITHOUT_CLASSIFICATION	read the character
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	see if we have any overflow.
WITHOUT_CLASSIFICATION	special situation -- we're taking input from a character stream.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	filter out all carriage returns if we've seen any.
WITHOUT_CLASSIFICATION	reset the position.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	2-byte sequence 00000yyyyyxxxxxx = 110yyyyy 10xxxxxx
WITHOUT_CLASSIFICATION	3-byte sequence zzzzyyyyyyxxxxxx = 1110zzzz 10yyyyyy 10xxxxxx
WITHOUT_CLASSIFICATION	4-byte sequence 11101110wwwwzzzzyy + 110111yyyyxxxxxx = 11110uuu 10uuzzzz 10yyyyyy 10xxxxxx (uuuuu = wwww + 1)
WITHOUT_CLASSIFICATION	otherwise the 8th bit may not be set in utf-8
WITHOUT_CLASSIFICATION	how many characters have we read?
WITHOUT_CLASSIFICATION	take a character from the buffer or from the actual input stream.
WITHOUT_CLASSIFICATION	check for the correct bits at the start.
WITHOUT_CLASSIFICATION	return the significant bits.
WITHOUT_CLASSIFICATION	no errors first line
WITHOUT_CLASSIFICATION	set up the buffers for data and names
WITHOUT_CLASSIFICATION	set up the dtd hash tables
WITHOUT_CLASSIFICATION	set up the variables for the current element context.
WITHOUT_CLASSIFICATION	set up the input variables
WITHOUT_CLASSIFICATION	the current xml handler interface.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	hashtables for dtd information on elements entities and notations.
WITHOUT_CLASSIFICATION	element type currently in force.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	base external identifiers for resolution.
WITHOUT_CLASSIFICATION	stack of entity names to help detect recursion.
WITHOUT_CLASSIFICATION	are we in a context where pes are allowed?
WITHOUT_CLASSIFICATION	symbol table for internalising names.
WITHOUT_CLASSIFICATION	{{{ variables
WITHOUT_CLASSIFICATION	{{{ start() method
WITHOUT_CLASSIFICATION	app.setservicesprovider(delegate)
WITHOUT_CLASSIFICATION	{{{ handlemessage() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ constructor
WITHOUT_CLASSIFICATION	{{{ variables
WITHOUT_CLASSIFICATION	utility flag have we noticed a cr while reading the last data chunk? if so we will have to go back and normalise cr/lf.
WITHOUT_CLASSIFICATION	set type/creator codes for files
WITHOUT_CLASSIFICATION	{{{ osok() method
WITHOUT_CLASSIFICATION	according to slava this is better
WITHOUT_CLASSIFICATION	{{{ showinfinder() method
WITHOUT_CLASSIFICATION	{{{ runscript() method
WITHOUT_CLASSIFICATION	{{{ scriptrunner class
WITHOUT_CLASSIFICATION	{{{ openselection() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ variables
WITHOUT_CLASSIFICATION	remember to make this an option later nsapplication.sharedapplication().hide(jedit.getplugin("macosplugin"))
WITHOUT_CLASSIFICATION	swingutilities.invokelater(new scriptrunner(path)) }}}
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	{{{ getsettings() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ constructor
WITHOUT_CLASSIFICATION	{{{ handlers
WITHOUT_CLASSIFICATION	{{{ handleabout() method
WITHOUT_CLASSIFICATION	{{{ handlefilecodes() method
WITHOUT_CLASSIFICATION	set type/creator on save
WITHOUT_CLASSIFICATION	fail silently since we may be using ufs
WITHOUT_CLASSIFICATION	add type/creator to local buffer property list on open
WITHOUT_CLASSIFICATION	this will happen when a new file is created
WITHOUT_CLASSIFICATION	{{{ handleopenfile() method
WITHOUT_CLASSIFICATION	{{{ handleopenfile() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ handlepreferences() method
WITHOUT_CLASSIFICATION	{{{ handlequit() method
WITHOUT_CLASSIFICATION	{{{ delegate methods
WITHOUT_CLASSIFICATION	{{{ applicationdockmenu() method
WITHOUT_CLASSIFICATION	notify clients with -wait
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	buffers
WITHOUT_CLASSIFICATION	recent buffers
WITHOUT_CLASSIFICATION	recent directories
WITHOUT_CLASSIFICATION	macros
WITHOUT_CLASSIFICATION	{{{ applicationopenfiles() method
WITHOUT_CLASSIFICATION	{{{ applicationshouldterminate() method
WITHOUT_CLASSIFICATION	{{{ services
WITHOUT_CLASSIFICATION	{{{ openfile() method
WITHOUT_CLASSIFICATION	{{{ insertselection() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ constructor
WITHOUT_CLASSIFICATION	{{{ construct() method
WITHOUT_CLASSIFICATION	{{{ menuselected() method
WITHOUT_CLASSIFICATION	{{{ dock menu
WITHOUT_CLASSIFICATION	{{{ buffermenu class
WITHOUT_CLASSIFICATION	item.setimage(nsworkspace.sharedworkspace().iconforfile( buffs[i].getpath()))
WITHOUT_CLASSIFICATION	{{{ macrosmenu class
WITHOUT_CLASSIFICATION	{{{ recentmenu class
WITHOUT_CLASSIFICATION	{{{ recentdirmenu class
WITHOUT_CLASSIFICATION	{{{ macroaction class
WITHOUT_CLASSIFICATION	{{{ newviewaction class
WITHOUT_CLASSIFICATION	{{{ showfileaction class
WITHOUT_CLASSIFICATION	{{{ constructor
WITHOUT_CLASSIFICATION	{{{ construct() method
WITHOUT_CLASSIFICATION	{{{ menuselected() method
WITHOUT_CLASSIFICATION	{{{ menudeselected() method
WITHOUT_CLASSIFICATION	{{{ menudeselected() method
WITHOUT_CLASSIFICATION	{{{ menucanceled() method
WITHOUT_CLASSIFICATION	{{{ showrecentdirmenuitem class
WITHOUT_CLASSIFICATION	{{{ constructor
WITHOUT_CLASSIFICATION	{{{ menucanceled() method
WITHOUT_CLASSIFICATION	{{{ showfileaction class
WITHOUT_CLASSIFICATION	{{{ showbuffermenuitem class
WITHOUT_CLASSIFICATION	{{{ updateeverytime() method
WITHOUT_CLASSIFICATION	{{{ update() method
WITHOUT_CLASSIFICATION	{{{ showdiraction class
WITHOUT_CLASSIFICATION	{{{ accept() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ accept() method
WITHOUT_CLASSIFICATION	{{{ createmacro() method
WITHOUT_CLASSIFICATION	{{{ runmacro() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ runmacro() method
WITHOUT_CLASSIFICATION	{{{ handler constructor
WITHOUT_CLASSIFICATION	begin beanshell modification - serializable
WITHOUT_CLASSIFICATION	end beanshell modification - serializable
WITHOUT_CLASSIFICATION	should normally be
WITHOUT_CLASSIFICATION	do the for init
WITHOUT_CLASSIFICATION	do not invoke special override for block (see above)
WITHOUT_CLASSIFICATION	put it back
WITHOUT_CLASSIFICATION	default impl
WITHOUT_CLASSIFICATION	{{{ stringtoselection() method
WITHOUT_CLASSIFICATION	declaringnamespace
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	begin method components
WITHOUT_CLASSIFICATION	arguments
WITHOUT_CLASSIFICATION	scripted method body
WITHOUT_CLASSIFICATION	java method
WITHOUT_CLASSIFICATION	end method components
WITHOUT_CLASSIFICATION	paramnames
WITHOUT_CLASSIFICATION	method.block
WITHOUT_CLASSIFICATION	modifiers
WITHOUT_CLASSIFICATION	note bshmethod needs to re-evaluate arg types herethis is broken.
WITHOUT_CLASSIFICATION	note bshmethod needs to re-evaluate the method return type here.this is broken.
WITHOUT_CLASSIFICATION	isnative
WITHOUT_CLASSIFICATION	is this a syncrhonized method?
WITHOUT_CLASSIFICATION	???
WITHOUT_CLASSIFICATION	cardinality (number of args) mismatch
WITHOUT_CLASSIFICATION	make the local namespace for the method invocation
WITHOUT_CLASSIFICATION	set the method parameters in the local namespace
WITHOUT_CLASSIFICATION	override
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	set typed variable
WITHOUT_CLASSIFICATION	getassignable would catch this for typed param
WITHOUT_CLASSIFICATION	push the new namespace on the call stack
WITHOUT_CLASSIFICATION	save the callstack including the called method just for error mess
WITHOUT_CLASSIFICATION	get back to caller namespace
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	return type is a class
WITHOUT_CLASSIFICATION	point to return statement point if we had one. (else it was implicit return? what's the case here?)
WITHOUT_CLASSIFICATION	the token.image text of the name never changes.
WITHOUT_CLASSIFICATION	null value means no value
WITHOUT_CLASSIFICATION	check for easy mistake
WITHOUT_CLASSIFICATION	need to scrape a value from the last line?
WITHOUT_CLASSIFICATION	i/o error
WITHOUT_CLASSIFICATION	read results
WITHOUT_CLASSIFICATION	bad posturl
WITHOUT_CLASSIFICATION	?
WITHOUT_CLASSIFICATION	first node will either be primitivetype or ambiguousname
WITHOUT_CLASSIFICATION	ease debugging xthis.this refers to the enclosing class instance
WITHOUT_CLASSIFICATION	if equals() is not explicitly defined we must override the default implemented by the this object protocol for scriptedobject. to support xthis equals() must test for equality with the generated proxy object not the scripted bsh this objectotherwise callers from outside in java will not see a the proxy object as equal to itself.
WITHOUT_CLASSIFICATION	leave null
WITHOUT_CLASSIFICATION	leave null
WITHOUT_CLASSIFICATION	xthis.this refers to the enclosing class instance
WITHOUT_CLASSIFICATION	return cached type if available
WITHOUT_CLASSIFICATION	ordinals for various reasons why an error of this type can be thrown.
WITHOUT_CLASSIFICATION	put it back
WITHOUT_CLASSIFICATION	return cached type if available
WITHOUT_CLASSIFICATION	first node will either be primitivetype or ambiguousname
WITHOUT_CLASSIFICATION	finaly block
WITHOUT_CLASSIFICATION	constructors of various flavors follow.
WITHOUT_CLASSIFICATION	unwrap the target error
WITHOUT_CLASSIFICATION	if the param is typed check assignability
WITHOUT_CLASSIFICATION	get catch block
WITHOUT_CLASSIFICATION	if we have an exception find a catch
WITHOUT_CLASSIFICATION	found match execute catch block
WITHOUT_CLASSIFICATION	set a typed variable (directly in the block)
WITHOUT_CLASSIFICATION	set an untyped variable directly in the block
WITHOUT_CLASSIFICATION	put cbnamespace on the top of the stack
WITHOUT_CLASSIFICATION	handled target
WITHOUT_CLASSIFICATION	evaluate finally block
WITHOUT_CLASSIFICATION	exception fell through throw it upward
WITHOUT_CLASSIFICATION	note no way to mutate the throwable message must maintain our own
WITHOUT_CLASSIFICATION	freeze the callstack for the stack trace.
WITHOUT_CLASSIFICATION	users should not normally see this.
WITHOUT_CLASSIFICATION	type
WITHOUT_CLASSIFICATION	type
WITHOUT_CLASSIFICATION	check this.value
WITHOUT_CLASSIFICATION	strictjava
WITHOUT_CLASSIFICATION	see notes in getthis()
WITHOUT_CLASSIFICATION	log.log(log.errorthisio)
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	prepare to execute the block. we must create a new blocknamespace to hold the catch parameter and swap it on the stack after initializing it.
WITHOUT_CLASSIFICATION	begin instance data note if we add something here we should reset it in the clear() method.
WITHOUT_CLASSIFICATION	|| ( getparent()!=null && getparent().classstatic != null )
WITHOUT_CLASSIFICATION	end instance data
WITHOUT_CLASSIFICATION	begin constructors
WITHOUT_CLASSIFICATION	note in this case parent must have a class manager.
WITHOUT_CLASSIFICATION	register for notification of classloader change
WITHOUT_CLASSIFICATION	end constructors
WITHOUT_CLASSIFICATION	if localscoping switch follow strictjava else recurse
WITHOUT_CLASSIFICATION	recurse
WITHOUT_CLASSIFICATION	primitives should have been wrapped
WITHOUT_CLASSIFICATION	locate the variable definition if it exists.
WITHOUT_CLASSIFICATION	found an existing variable here (or above if recurse allowed)
WITHOUT_CLASSIFICATION	no previous variable definition found here (or above if recurse)
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	namespacechanged() on new variable addition
WITHOUT_CLASSIFICATION	modifiers
WITHOUT_CLASSIFICATION	recurse
WITHOUT_CLASSIFICATION	if we are disconnected from root we need to handle the def imports
WITHOUT_CLASSIFICATION	interp
WITHOUT_CLASSIFICATION	interp
WITHOUT_CLASSIFICATION	interpreter.debug("no class manager namespace" +this)
WITHOUT_CLASSIFICATION	try parent
WITHOUT_CLASSIFICATION	change import precedence if we are a class body/instance
WITHOUT_CLASSIFICATION	change import precedence if we are a class body/instance get imported first.
WITHOUT_CLASSIFICATION	checkvariablemodifiers( name modifiers )
WITHOUT_CLASSIFICATION	get variables declared in this namespace.
WITHOUT_CLASSIFICATION	setting a typed variable is always a local operation.
WITHOUT_CLASSIFICATION	does the variable already exist?
WITHOUT_CLASSIFICATION	is it typed?
WITHOUT_CLASSIFICATION	else set it and return
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	checkmethodmodifiers( method )
WITHOUT_CLASSIFICATION	vector
WITHOUT_CLASSIFICATION	declaredonly
WITHOUT_CLASSIFICATION	change import precedence if we are a class body/instance get import first.
WITHOUT_CLASSIFICATION	m contains either bshmethod or vector of bshmethod
WITHOUT_CLASSIFICATION	unwrap
WITHOUT_CLASSIFICATION	apply most specific signature matching
WITHOUT_CLASSIFICATION	onlystatic
WITHOUT_CLASSIFICATION	onlystatic
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	try object imports
WITHOUT_CLASSIFICATION	try static imports
WITHOUT_CLASSIFICATION	object
WITHOUT_CLASSIFICATION	here we catch any evalerror from the interpreter because we areusing it as a tool to load the command not as part of theexecution path.
WITHOUT_CLASSIFICATION	look for the loaded command
WITHOUT_CLASSIFICATION	cachecount++ debug
WITHOUT_CLASSIFICATION	check the cache
WITHOUT_CLASSIFICATION	unqualified (simple non-compound) name
WITHOUT_CLASSIFICATION	unqualified name check imported
WITHOUT_CLASSIFICATION	try imported class
WITHOUT_CLASSIFICATION	if found as imported also cache it
WITHOUT_CLASSIFICATION	not found
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	try absolute
WITHOUT_CLASSIFICATION	cache unqualified names to prevent import check again
WITHOUT_CLASSIFICATION	try explicitly imported class e.g. import foo.bar
WITHOUT_CLASSIFICATION	found the full name in imported classes.
WITHOUT_CLASSIFICATION	try to make the full imported name
WITHOUT_CLASSIFICATION	handle imported inner class case
WITHOUT_CLASSIFICATION	not a class
WITHOUT_CLASSIFICATION	if found cache the full name in the bshclassmanager
WITHOUT_CLASSIFICATION	try imported packages e.g. "import foo.bar."in reverse order of import(give later imports precedence)
WITHOUT_CLASSIFICATION	try super import if availablenote we do this last to allow explicitly imported classesand packages to take priority. this method will also throw anerror indicating ambiguity if it exists
WITHOUT_CLASSIFICATION	for serialization.don't serialize non-serializable objects.
WITHOUT_CLASSIFICATION	arbitrary flag
WITHOUT_CLASSIFICATION	volatile transient
WITHOUT_CLASSIFICATION	default
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	--- begin static members ---
WITHOUT_CLASSIFICATION	--- end static members ---
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	end constructors
WITHOUT_CLASSIFICATION	--- end instance data ---
WITHOUT_CLASSIFICATION	create the root "bsh" system object if it doesn't exist.
WITHOUT_CLASSIFICATION	onlystatic
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	bsh
WITHOUT_CLASSIFICATION	bsh.system
WITHOUT_CLASSIFICATION	alias
WITHOUT_CLASSIFICATION	bsh.help
WITHOUT_CLASSIFICATION	bsh.cwd
WITHOUT_CLASSIFICATION	applets can't see sys props
WITHOUT_CLASSIFICATION	bsh.interactive
WITHOUT_CLASSIFICATION	bshclassmanager
WITHOUT_CLASSIFICATION	init the callstack.
WITHOUT_CLASSIFICATION	try to sync up the console
WITHOUT_CLASSIFICATION	this helps a little
WITHOUT_CLASSIFICATION	sanity check during development
WITHOUT_CLASSIFICATION	reinit the callstack
WITHOUT_CLASSIFICATION	begin source and eval
WITHOUT_CLASSIFICATION	callstack callstack
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	nodes remember from where they were sourced
WITHOUT_CLASSIFICATION	non-interactive return control now
WITHOUT_CLASSIFICATION	show extra "expecting" info
WITHOUT_CLASSIFICATION	add the source file info and throw again
WITHOUT_CLASSIFICATION	failsafe set the line as the origin of the error.
WITHOUT_CLASSIFICATION	failsafe set the line as the origin of the error.
WITHOUT_CLASSIFICATION	end source and eval
WITHOUT_CLASSIFICATION	end consoleinterface
WITHOUT_CLASSIFICATION	map null to primtive.null coming in
WITHOUT_CLASSIFICATION	optimization for common case
WITHOUT_CLASSIFICATION	we jump through some hoops here to handle arbitrary cases likeunset("bsh.foo")
WITHOUT_CLASSIFICATION	lhs.assign( null false )
WITHOUT_CLASSIFICATION	end primary set and get methods
WITHOUT_CLASSIFICATION	methods for interacting with parser
WITHOUT_CLASSIFICATION	default is c\windows under win98 $home under unix
WITHOUT_CLASSIFICATION	squeltch security exception filenotfoundexception
WITHOUT_CLASSIFICATION	if relative fix up to bsh.cwd
WITHOUT_CLASSIFICATION	set transient fields
WITHOUT_CLASSIFICATION	ug
WITHOUT_CLASSIFICATION	evaluate the expression
WITHOUT_CLASSIFICATION	order of body and condition is swapped for do / while
WITHOUT_CLASSIFICATION	has body else just for side effects
WITHOUT_CLASSIFICATION	no body?
WITHOUT_CLASSIFICATION	initcallstack( namespace )
WITHOUT_CLASSIFICATION	null callstack one will be created for us
WITHOUT_CLASSIFICATION	declaringinterpreter
WITHOUT_CLASSIFICATION	find the bsh method
WITHOUT_CLASSIFICATION	leave null
WITHOUT_CLASSIFICATION	a default equals() testing for equality with the this reference
WITHOUT_CLASSIFICATION	call script "invoke( string methodname object [] args )
WITHOUT_CLASSIFICATION	{{{ entry class
WITHOUT_CLASSIFICATION	{{{ recenthandler class
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	these do not change during evaluation
WITHOUT_CLASSIFICATION	for evaluation
WITHOUT_CLASSIFICATION	number of times eval hit 'this.caller'
WITHOUT_CLASSIFICATION	end mutable instance variables. ---------------------------------------------------------
WITHOUT_CLASSIFICATION	{{{ updatetitle() method
WITHOUT_CLASSIFICATION	begin cached result structures these are optimizations
WITHOUT_CLASSIFICATION	end cached result structures
WITHOUT_CLASSIFICATION	autoalloc
WITHOUT_CLASSIFICATION	switch namespace and special var visibility
WITHOUT_CLASSIFICATION	resolved the variable
WITHOUT_CLASSIFICATION	keep adding parts until we have a class
WITHOUT_CLASSIFICATION	not a class (or variable per above)
WITHOUT_CLASSIFICATION	if we didn't find a class or variable name (or prefix) abovethere are two possibilities- if we are a simple name then we can pass as a void variable reference.- if we are compound then we must fail at this point.
WITHOUT_CLASSIFICATION	--------------------------------------------------------after this point we're definitely evaluating relative toa base object.--------------------------------------------------------
WITHOUT_CLASSIFICATION	do some basic validity checks.
WITHOUT_CLASSIFICATION	previous round produced null
WITHOUT_CLASSIFICATION	previous round produced void
WITHOUT_CLASSIFICATION	class qualified 'this' reference from inner class. e.g. 'myouterclass.this'
WITHOUT_CLASSIFICATION	find the enclosing class instance space of the class name
WITHOUT_CLASSIFICATION	&& thisnamespace.getparent().classinstance != null
WITHOUT_CLASSIFICATION	static field?
WITHOUT_CLASSIFICATION	inner class?
WITHOUT_CLASSIFICATION	some kind of field access?
WITHOUT_CLASSIFICATION	length access on array?
WITHOUT_CLASSIFICATION	not a field
WITHOUT_CLASSIFICATION	if we get here we have failed
WITHOUT_CLASSIFICATION	some duplication for "super". see notes for "this" aboveif we're in an enclsing class instance and have a superclassinstance our super is the superclass instance.
WITHOUT_CLASSIFICATION	allow getsuper() to through blocknamespace to the method's super
WITHOUT_CLASSIFICATION	super is now the closure's super or class instance
WITHOUT_CLASSIFICATION	get the previous context (see notes for this class)
WITHOUT_CLASSIFICATION	get the previous context (see notes for this class)
WITHOUT_CLASSIFICATION	early return
WITHOUT_CLASSIFICATION	"var" means untyped return null class
WITHOUT_CLASSIFICATION	try straightforward class name first
WITHOUT_CLASSIFICATION	try toobject() which knows how to work through inner classesand see what we end up with
WITHOUT_CLASSIFICATION	null interpreter and callstack references. class only resolution should not require them.
WITHOUT_CLASSIFICATION	couldn't resolve it
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	simple (non-compound) variable assignment e.g. x=5
WITHOUT_CLASSIFICATION	interpreter.debug("simple var lhs")
WITHOUT_CLASSIFICATION	field e.g. foo.bar=5
WITHOUT_CLASSIFICATION	autoallocthis
WITHOUT_CLASSIFICATION	found a non-backslash char.
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	finished eval and its a class.
WITHOUT_CLASSIFICATION	e.g. this.x=5 or somethistype.x=5
WITHOUT_CLASSIFICATION	dissallow assignment to magic fields
WITHOUT_CLASSIFICATION	superclass method invocation? (e.g. super.foo())
WITHOUT_CLASSIFICATION	find target object or class identifier
WITHOUT_CLASSIFICATION	if we've got an object resolve the method
WITHOUT_CLASSIFICATION	it's a class
WITHOUT_CLASSIFICATION	try static method
WITHOUT_CLASSIFICATION	cache the fact that this is a static method invocation on this class
WITHOUT_CLASSIFICATION	return null ???
WITHOUT_CLASSIFICATION	reflecterror invocationtargetexception
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	if defined invoke it
WITHOUT_CLASSIFICATION	look for a beanshell command
WITHOUT_CLASSIFICATION	should try to print usage here if nothing found
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	end compound name routines
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	checkonly
WITHOUT_CLASSIFICATION	fromvalue
WITHOUT_CLASSIFICATION	checkonly
WITHOUT_CLASSIFICATION	this should not happen with checkonly true
WITHOUT_CLASSIFICATION	assignment to loose type void type or exactly same type
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ geteditpanes() method
WITHOUT_CLASSIFICATION	must be null in checkonly
WITHOUT_CLASSIFICATION	cannot cast from arbitrary object to primitive
WITHOUT_CLASSIFICATION	casting to reference type
WITHOUT_CLASSIFICATION	primitive to wrapper type
WITHOUT_CLASSIFICATION	primitive (not null or void) to object.class type
WITHOUT_CLASSIFICATION	box it
WITHOUT_CLASSIFICATION	if type already assignable no cast necessary we do this last to allow various errors above to be caught. e.g cast primitive.void to object would pass this
WITHOUT_CLASSIFICATION	currently unused but we'll probably need it later.
WITHOUT_CLASSIFICATION	note it may see like with the new 1.3 scoping this test could beremoved but it cannot. when recurse is false we still need to set thevariable in our parent not here.
WITHOUT_CLASSIFICATION	set the var here in the block namespace
WITHOUT_CLASSIFICATION	set the var in the enclosing (parent) namespace
WITHOUT_CLASSIFICATION	strict?
WITHOUT_CLASSIFICATION	super.variables.containskey( name ) not any faster i checked
WITHOUT_CLASSIFICATION	e.printstacktrace()
WITHOUT_CLASSIFICATION	classpathexception is a type of utilevalerror
WITHOUT_CLASSIFICATION	the interpretation of an ambiguous name is context sensitive.we disallow a generic eval( ).
WITHOUT_CLASSIFICATION	should never come here
WITHOUT_CLASSIFICATION	read all the backslashes
WITHOUT_CLASSIFICATION	both numeric wrapper types? try numeric style promotion wrapper cast
WITHOUT_CLASSIFICATION	begin methods which simply delegate to our parent (enclosing scope)
WITHOUT_CLASSIFICATION	here we have seen an odd number of backslash's followed by a 'u'
WITHOUT_CLASSIFICATION	assign doesn't need the pre-value
WITHOUT_CLASSIFICATION	{{{ getsplitconfig() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	evaluate each child
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	determines whether the current node was actually closed and pushed. this should only be called in the final user action of a node scope.
WITHOUT_CLASSIFICATION	call this to reinitialize the node stack. it is called automatically by the parser's reinit() method.
WITHOUT_CLASSIFICATION	returns the root node of the ast. it only makes sense to call this after a successful parse.
WITHOUT_CLASSIFICATION	pushes a node on to the stack.
WITHOUT_CLASSIFICATION	returns the node on the top of the stack and remove it from the stack.
WITHOUT_CLASSIFICATION	returns the node currently on the top of the stack.
WITHOUT_CLASSIFICATION	returns the number of children on the stack in the current node scope.
WITHOUT_CLASSIFICATION	a conditional node is constructed if its condition is true. all the nodes that have been pushed since the node was opened are made children of the the conditional node which is then pushed on to the stack. if the condition is false the node is not constructed and they are left on the stack.
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	try scripted class
WITHOUT_CLASSIFICATION	end handlerbase implementation
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	classloader wants no leading slash
WITHOUT_CLASSIFICATION	classloader wants no leading slash
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	offset
WITHOUT_CLASSIFICATION	len
WITHOUT_CLASSIFICATION	may have been axed previously
WITHOUT_CLASSIFICATION	no args method
WITHOUT_CLASSIFICATION	note this class is final because we may test == primitive.class in places.if we need to change that search for those tests.
WITHOUT_CLASSIFICATION	boolean
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	special primitive types
WITHOUT_CLASSIFICATION	keep track of the original types
WITHOUT_CLASSIFICATION	unwrap primitives
WITHOUT_CLASSIFICATION	returns object covering both long and boolean return types
WITHOUT_CLASSIFICATION	arithmetic
WITHOUT_CLASSIFICATION	bitwise
WITHOUT_CLASSIFICATION	bitwise
WITHOUT_CLASSIFICATION	returns object covering both integer and boolean return types
WITHOUT_CLASSIFICATION	returns object covering both double and boolean return types
WITHOUT_CLASSIFICATION	boolean
WITHOUT_CLASSIFICATION	returns object covering both long and boolean return types
WITHOUT_CLASSIFICATION	arithmetic
WITHOUT_CLASSIFICATION	arithmetic
WITHOUT_CLASSIFICATION	can't shift floating-point values
WITHOUT_CLASSIFICATION	can't shift floats
WITHOUT_CLASSIFICATION	++ and -- must be cast back the original type
WITHOUT_CLASSIFICATION	promote character to number type for these purposes
WITHOUT_CLASSIFICATION	arbitrary
WITHOUT_CLASSIFICATION	map voids to nulls for the outside world
WITHOUT_CLASSIFICATION	fromvalue
WITHOUT_CLASSIFICATION	checkonly
WITHOUT_CLASSIFICATION	lots of preconditions checked hereonce things are running smoothly we might comment these out(that's what assertions are for).
WITHOUT_CLASSIFICATION	unwrap primitives
WITHOUT_CLASSIFICATION	non boolean primitive get appropriate flavor of zero
WITHOUT_CLASSIFICATION	fromtype
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	unwrap etc.
WITHOUT_CLASSIFICATION	trying to cast null to primitive type?
WITHOUT_CLASSIFICATION	can only cast boolean to boolean
WITHOUT_CLASSIFICATION	do numeric cast
WITHOUT_CLASSIFICATION	first promote char to number type to avoid duplicating code
WITHOUT_CLASSIFICATION	begin beanshell modification - public extend evalerror
WITHOUT_CLASSIFICATION	end beanshell modification - public extend evalerror
WITHOUT_CLASSIFICATION	begin beanshell modification - sourcefile
WITHOUT_CLASSIFICATION	end beanshell modification - sourcefile
WITHOUT_CLASSIFICATION	begin beanshell modification - constructor
WITHOUT_CLASSIFICATION	end beanshell modification - constructor
WITHOUT_CLASSIFICATION	end beanshell modification - constructor
WITHOUT_CLASSIFICATION	end beanshell modification - super constructor args
WITHOUT_CLASSIFICATION	begin beanshell modification - moved body to overloaded getmessage()
WITHOUT_CLASSIFICATION	strict
WITHOUT_CLASSIFICATION	value
WITHOUT_CLASSIFICATION	end beanshell modification - moved body to overloaded getmessage()
WITHOUT_CLASSIFICATION	begin beanshell modification - added debug param
WITHOUT_CLASSIFICATION	end beanshell modification - added debug param
WITHOUT_CLASSIFICATION	begin beanshell modification - added sourcefile info
WITHOUT_CLASSIFICATION	end beanshell modification - added sourcefile info
WITHOUT_CLASSIFICATION	begin beanshell modification - made conditional on debug
WITHOUT_CLASSIFICATION	end beanshell modification - made conditional on debug
WITHOUT_CLASSIFICATION	begin beanshell modification - override error methods and tostring
WITHOUT_CLASSIFICATION	copied from generated getmessage()
WITHOUT_CLASSIFICATION	end beanshell modification - override error methods and tostring
WITHOUT_CLASSIFICATION	skip cr
WITHOUT_CLASSIFICATION	test it
WITHOUT_CLASSIFICATION	for inner classes
WITHOUT_CLASSIFICATION	force the class public for now
WITHOUT_CLASSIFICATION	generate the bsh instance 'this' reference holder field
WITHOUT_CLASSIFICATION	generate the static bsh static reference holder field
WITHOUT_CLASSIFICATION	generate the fields
WITHOUT_CLASSIFICATION	generate the constructors
WITHOUT_CLASSIFICATION	don't generate private constructors
WITHOUT_CLASSIFICATION	if no other constructors generate a default constructor
WITHOUT_CLASSIFICATION	index
WITHOUT_CLASSIFICATION	generate the delegate methods
WITHOUT_CLASSIFICATION	don't generate private or loosely return typed methods
WITHOUT_CLASSIFICATION	|| returntype == null
WITHOUT_CLASSIFICATION	map loose return type to object
WITHOUT_CLASSIFICATION	generate method body
WITHOUT_CLASSIFICATION	the split config is recorded in a simple rpn "language".
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	get the instance field
WITHOUT_CLASSIFICATION	generate code to push arguments as an object array
WITHOUT_CLASSIFICATION	push the boolean constant 'true' (for declaredonly)
WITHOUT_CLASSIFICATION	{{{ restoresplitconfig() method
WITHOUT_CLASSIFICATION	generate code to push arguments as an object array
WITHOUT_CLASSIFICATION	invoke the method this.invokemethod( name class [] sig boolean )
WITHOUT_CLASSIFICATION	generate code to unwrap bsh primitive types
WITHOUT_CLASSIFICATION	generate code to return the value
WITHOUT_CLASSIFICATION	create this constructor method
WITHOUT_CLASSIFICATION	isstatic
WITHOUT_CLASSIFICATION	generate the code implementing the alternate constructor switch
WITHOUT_CLASSIFICATION	generate code to invoke the classgeneratorutil initinstance() method
WITHOUT_CLASSIFICATION	push 'this'
WITHOUT_CLASSIFICATION	push the class/constructor name as a constant
WITHOUT_CLASSIFICATION	push arguments as an object array
WITHOUT_CLASSIFICATION	invoke the initinstance() method
WITHOUT_CLASSIFICATION	push super class name use superclassname var?
WITHOUT_CLASSIFICATION	push class static this object
WITHOUT_CLASSIFICATION	push args
WITHOUT_CLASSIFICATION	push this constructor index number onto stack
WITHOUT_CLASSIFICATION	invoke the classgeneratorutil getconstructorsargs() method
WITHOUT_CLASSIFICATION	store constructorargs in consargsvar
WITHOUT_CLASSIFICATION	{{{ togglelineseparator() method
WITHOUT_CLASSIFICATION	get the constructorargs selector field from constructorargs
WITHOUT_CLASSIFICATION	push constructorargs
WITHOUT_CLASSIFICATION	start switch
WITHOUT_CLASSIFICATION	max
WITHOUT_CLASSIFICATION	min
WITHOUT_CLASSIFICATION	generate switch body
WITHOUT_CLASSIFICATION	default branch always invokes no args super push 'this'
WITHOUT_CLASSIFICATION	done with switch
WITHOUT_CLASSIFICATION	cv.visitlinenumber( index labels[index] ) push this before args
WITHOUT_CLASSIFICATION	unload the arguments from the constructorargs object
WITHOUT_CLASSIFICATION	invoke the iterator method on the constructorargs push the constructorargs
WITHOUT_CLASSIFICATION	if it's an object type we must do a check cast
WITHOUT_CLASSIFICATION	invoke the constructor for this branch
WITHOUT_CLASSIFICATION	maybe combine this with generatemethod()
WITHOUT_CLASSIFICATION	map loose return to object
WITHOUT_CLASSIFICATION	add method body
WITHOUT_CLASSIFICATION	push vars
WITHOUT_CLASSIFICATION	long
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	use default super constructor
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	modifiers
WITHOUT_CLASSIFICATION	use default super constructor
WITHOUT_CLASSIFICATION	make a tmp namespace to hold the original constructor args for use in eval of the parameters node
WITHOUT_CLASSIFICATION	evaluate the args
WITHOUT_CLASSIFICATION	find the matching super() constructor for the args
WITHOUT_CLASSIFICATION	find the matching this() constructor for the args
WITHOUT_CLASSIFICATION	are we choosing ourselves recursively through a this() reference?
WITHOUT_CLASSIFICATION	get the static this reference from the proto-instance
WITHOUT_CLASSIFICATION	get the instance initializer block from the static this
WITHOUT_CLASSIFICATION	override
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	create the instance namespace
WITHOUT_CLASSIFICATION	set the instance this reference on the instance
WITHOUT_CLASSIFICATION	give the instance space its object import
WITHOUT_CLASSIFICATION	invoke the constructor method from the instancethis
WITHOUT_CLASSIFICATION	find the constructor (now in the instance namespace)
WITHOUT_CLASSIFICATION	if args we must have constructor
WITHOUT_CLASSIFICATION	evaluate the constructor
WITHOUT_CLASSIFICATION	overridenamespace
WITHOUT_CLASSIFICATION	callerinfo
WITHOUT_CLASSIFICATION	unwrap primitive.null to null
WITHOUT_CLASSIFICATION	right?
WITHOUT_CLASSIFICATION	unsafe caching of type here
WITHOUT_CLASSIFICATION	begin child node structure evaluated by insurenodesparsed
WITHOUT_CLASSIFICATION	index of the first throws clause child node
WITHOUT_CLASSIFICATION	end child node structure evaluated by insurenodesparsed
WITHOUT_CLASSIFICATION	there is always a paramsnode
WITHOUT_CLASSIFICATION	skip throws
WITHOUT_CLASSIFICATION	skip throws
WITHOUT_CLASSIFICATION	unsafe caching of type here. null (none) void.type or a class
WITHOUT_CLASSIFICATION	install an instance of this method in the namespace. see notes in bshmethod
WITHOUT_CLASSIFICATION	validate that the throws names are class names
WITHOUT_CLASSIFICATION	if strictjava mode check for loose parameters and return type
WITHOUT_CLASSIFICATION	do nothing - ch already contains correct character
WITHOUT_CLASSIFICATION	get next character
WITHOUT_CLASSIFICATION	get next character
WITHOUT_CLASSIFICATION	check the next two characters
WITHOUT_CLASSIFICATION	type is either a class name or a primitive type
WITHOUT_CLASSIFICATION	args is either constructor arguments or array dimensions
WITHOUT_CLASSIFICATION	look for scripted class object
WITHOUT_CLASSIFICATION	force class
WITHOUT_CLASSIFICATION	try regular class
WITHOUT_CLASSIFICATION	force class
WITHOUT_CLASSIFICATION	is an inner class style object allocation
WITHOUT_CLASSIFICATION	no need to wrap this debug
WITHOUT_CLASSIFICATION	is it an inner class?
WITHOUT_CLASSIFICATION	work through to class 'this'
WITHOUT_CLASSIFICATION	interfaces
WITHOUT_CLASSIFICATION	superclass
WITHOUT_CLASSIFICATION	isinterface
WITHOUT_CLASSIFICATION	statical import fields from the interface so that code inside can refer to the fields directly (e.g. height)
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ propertieschanged() method
WITHOUT_CLASSIFICATION	all printable ascii characters
WITHOUT_CLASSIFICATION	swingutilities.updatecomponenttreeui(getrootpane()) }}}
WITHOUT_CLASSIFICATION	{{{ loadtoolbars() method
WITHOUT_CLASSIFICATION	{{{ createeditpane() method
WITHOUT_CLASSIFICATION	{{{ seteditpane() method
WITHOUT_CLASSIFICATION	repaint the gutter so that the border color reflects the focus state
WITHOUT_CLASSIFICATION	{{{ handlebufferupdate() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	zeros
WITHOUT_CLASSIFICATION	first node is the expression on which to sync
WITHOUT_CLASSIFICATION	do the actual synchronization
WITHOUT_CLASSIFICATION	filter
WITHOUT_CLASSIFICATION	evaluate block in two passes first do class declarations then do everything else.
WITHOUT_CLASSIFICATION	filter nodes
WITHOUT_CLASSIFICATION	statement or embedded block evaluated a return statement
WITHOUT_CLASSIFICATION	make sure we put the namespace back when we leave.
WITHOUT_CLASSIFICATION	our children are a prefix expression and any number of suffixes.<p>we don't eval() any nodes until the suffixes have had anopportunity to work through them. this lets the suffixes decidehow to interpret an ambiguous name (e.g. for the .class operation).
WITHOUT_CLASSIFICATION	if the result is a node eval() it to an object or lhs(as determined by tolhs)
WITHOUT_CLASSIFICATION	some arbitrary kind of node
WITHOUT_CLASSIFICATION	return lhs or value object as determined by tolhs
WITHOUT_CLASSIFICATION	type node is passed down the chain for array initializers which need it under some circumstances
WITHOUT_CLASSIFICATION	import the package we're in by default
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	field access
WITHOUT_CLASSIFICATION	field access .length on array or a method invocationmust handle tolhs case for each.
WITHOUT_CLASSIFICATION	.length on array
WITHOUT_CLASSIFICATION	property style access to hashtable or map
WITHOUT_CLASSIFICATION	++ and -- must be cast back the original type
WITHOUT_CLASSIFICATION	method invocation (lhs or non lhs evaluation can both encounter method calls)
WITHOUT_CLASSIFICATION	key
WITHOUT_CLASSIFICATION	public simplenode getparent() { return (simplenode)parent }
WITHOUT_CLASSIFICATION	override this method if you want to customize how the node dumpsout its children.
WITHOUT_CLASSIFICATION	---- beanshell specific stuff hereafter ----
WITHOUT_CLASSIFICATION	if this is a unary increment of decrement (either pre or postfix) then we need an lhs to which to assign the result. otherwise just do the unary operation for the value.
WITHOUT_CLASSIFICATION	resolve superclass if any
WITHOUT_CLASSIFICATION	get interfaces
WITHOUT_CLASSIFICATION	get the class body bshblock
WITHOUT_CLASSIFICATION	type = variablethis.varname = varnamethis.namespace = namespace
WITHOUT_CLASSIFICATION	set the variable in namespace according to localvar flag
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	pass along target error
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	general case - performe the instanceof based on assignability
WITHOUT_CLASSIFICATION	look ahead and short circuit evaluation of the rhs ifwe're a boolean and and the lhs is false.
WITHOUT_CLASSIFICATION	look ahead and short circuit evaluation of the rhs ifwe're a boolean and and the lhs is false.
WITHOUT_CLASSIFICATION	end stuff that was tacked on for boolean short-circuiting.
WITHOUT_CLASSIFICATION	are both the lhs and rhs either wrappers or primitive values?do binary op
WITHOUT_CLASSIFICATION	special case for eq on two wrapper objects
WITHOUT_CLASSIFICATION	don't auto-unwrap wrappers (preserve identity semantics)fall through to object operations below.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	lazy instantiation
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	fix for the bug where key events in jtextcomponents inside views are also handled by the input handler
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ windowhandler class
WITHOUT_CLASSIFICATION	{{{ inner classes
WITHOUT_CLASSIFICATION	{{{ handleeditpaneupdate() method
WITHOUT_CLASSIFICATION	{{{ updategutterborders() method
WITHOUT_CLASSIFICATION	{{{ _preprocesskeyevent() method
WITHOUT_CLASSIFICATION	{{{ carethandler class
WITHOUT_CLASSIFICATION	{{{ focushandler class
WITHOUT_CLASSIFICATION	walk up hierarchy looking for an editpane
WITHOUT_CLASSIFICATION	{{{ scrollhandler class
WITHOUT_CLASSIFICATION	people have reported hangs with jdk 1.4 might be caused by modal dialogs being displayed from windowactivated()
WITHOUT_CLASSIFICATION	{{{ viewconfig class
WITHOUT_CLASSIFICATION	dockables
WITHOUT_CLASSIFICATION	this constructor keys the hash table
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ package-private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ getaction() method
WITHOUT_CLASSIFICATION	{{{ getactionnames() method
WITHOUT_CLASSIFICATION	{{{ addactionset() method
WITHOUT_CLASSIFICATION	{{{ removeactionset() method
WITHOUT_CLASSIFICATION	{{{ getactionsets() method
WITHOUT_CLASSIFICATION	{{{ getactionsetforaction() method
WITHOUT_CLASSIFICATION	{{{ loadservices() method
WITHOUT_CLASSIFICATION	{{{ invokeaction() method
WITHOUT_CLASSIFICATION	{{{ unloadservices() method
WITHOUT_CLASSIFICATION	{{{ registerservice() method
WITHOUT_CLASSIFICATION	this constructor is the value of the hash table
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ package-private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ registerservice() method
WITHOUT_CLASSIFICATION	{{{ unregisterservice() method
WITHOUT_CLASSIFICATION	{{{ getservicetypes() method
WITHOUT_CLASSIFICATION	{{{ getservicenames() method
WITHOUT_CLASSIFICATION	{{{ getservice() method
WITHOUT_CLASSIFICATION	unknown service - <clazzname> not in table
WITHOUT_CLASSIFICATION	{{{ descriptor class
WITHOUT_CLASSIFICATION	avoid re-running script if it gives us null
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	this constructor keys the hash table
WITHOUT_CLASSIFICATION	this constructor is the value of the hash table
WITHOUT_CLASSIFICATION	lazy instantiation
WITHOUT_CLASSIFICATION	avoid re-running script if it gives us null
WITHOUT_CLASSIFICATION	{{{ editserver constructor
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	{{{ removenotify() method
WITHOUT_CLASSIFICATION	{{{ addnotify() method
WITHOUT_CLASSIFICATION	{{{ mousehandler class
WITHOUT_CLASSIFICATION	{{{ ioprogressmonitor constructor
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ propertieschanged() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ paintcomponent() method
WITHOUT_CLASSIFICATION	uimanager.getfont("label.font")
WITHOUT_CLASSIFICATION	{{{ errorlistcellrenderer constructor
WITHOUT_CLASSIFICATION	{{{ getlistcellrenderercomponent() method
WITHOUT_CLASSIFICATION	{{{ getpreferredsize() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ cancel() method
WITHOUT_CLASSIFICATION	{{{ errorentry class
WITHOUT_CLASSIFICATION	{{{ errorlistdialog constructor
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ package-private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ handlemessage() method
WITHOUT_CLASSIFICATION	{{{ actionperformed() method
WITHOUT_CLASSIFICATION	{{{ getminimumsize() method
WITHOUT_CLASSIFICATION	{{{ editpane constructor
WITHOUT_CLASSIFICATION	{{{ close() method
WITHOUT_CLASSIFICATION	{{{ actionhandler class
WITHOUT_CLASSIFICATION	{{{ handlebufferupdate() method
WITHOUT_CLASSIFICATION	{{{ isx11() method
WITHOUT_CLASSIFICATION	set up the right-click popup menu
WITHOUT_CLASSIFICATION	{{{ getscreenbounds() method
WITHOUT_CLASSIFICATION	use old property name for backwards compatibility
WITHOUT_CLASSIFICATION	{{{ getscreenbounds() method
WITHOUT_CLASSIFICATION	{{{ loadbufferswitcher() method
WITHOUT_CLASSIFICATION	don't add duplicates
WITHOUT_CLASSIFICATION	when closing the last buffer the bufferupdate.closed handler doesn't call setbuffer() because null buffers are not supported. instead it waits for the subsequent 'untitled' file creation.
WITHOUT_CLASSIFICATION	shadow size
WITHOUT_CLASSIFICATION	shadow size
WITHOUT_CLASSIFICATION	{{{ isdosderived() method
WITHOUT_CLASSIFICATION	pick screen with largest intersection
WITHOUT_CLASSIFICATION	{{{ isos2() method
WITHOUT_CLASSIFICATION	make adjustments for some os's
WITHOUT_CLASSIFICATION	{{{ iswindows() method
WITHOUT_CLASSIFICATION	yay we're finally there
WITHOUT_CLASSIFICATION	{{{ getmarkers() method
WITHOUT_CLASSIFICATION	{{{ iswindows9x() method
WITHOUT_CLASSIFICATION	{{{ isunix() method
WITHOUT_CLASSIFICATION	{{{ iswindowsnt() method
WITHOUT_CLASSIFICATION	{{{ indentlines() method
WITHOUT_CLASSIFICATION	{{{ ismacos() method
WITHOUT_CLASSIFICATION	do it
WITHOUT_CLASSIFICATION	{{{ indentlines() method
WITHOUT_CLASSIFICATION	{{{ get properties
WITHOUT_CLASSIFICATION	{{{ indentline() method
WITHOUT_CLASSIFICATION	{{{ indentline() method
WITHOUT_CLASSIFICATION	{{{ getcurrentindentforline() method
WITHOUT_CLASSIFICATION	{{{ getidealindentforline() method
WITHOUT_CLASSIFICATION	{{{ get indent attributes of previous line
WITHOUT_CLASSIFICATION	{{{ getfile() method
WITHOUT_CLASSIFICATION	{{{ createposition() method
WITHOUT_CLASSIFICATION	{{{ deprecated methods
WITHOUT_CLASSIFICATION	{{{ marktokens() method
WITHOUT_CLASSIFICATION	{{{ handle brackets
WITHOUT_CLASSIFICATION	{{{ get indent attributes for current line
WITHOUT_CLASSIFICATION	{{{ putbooleanproperty() method
WITHOUT_CLASSIFICATION	additional bracket indent for lining up closing and opening brackets
WITHOUT_CLASSIFICATION	{{{ handle regexps
WITHOUT_CLASSIFICATION	{{{ deep indenting
WITHOUT_CLASSIFICATION	{{{ isfoldstart() method
WITHOUT_CLASSIFICATION	no parenthesis on previous line (prevlineparenweight == 0) so the normal indenting rules are used
WITHOUT_CLASSIFICATION	{{{ getrootelements() method
WITHOUT_CLASSIFICATION	if the previous line matches indentnextline or indentnextlines add a level of indent
WITHOUT_CLASSIFICATION	{{{ getlineparenweight() method
WITHOUT_CLASSIFICATION	{{{ getparagraphelement() method
WITHOUT_CLASSIFICATION	{{{ putproperty() method
WITHOUT_CLASSIFICATION	{{{ isfoldend() method
WITHOUT_CLASSIFICATION	for backwards compatibility
WITHOUT_CLASSIFICATION	{{{ setfoldhandler() method
WITHOUT_CLASSIFICATION	{{{ getdefaultrootelement() method
WITHOUT_CLASSIFICATION	{{{ invalidatecachedfoldlevels() method
WITHOUT_CLASSIFICATION	{{{ getcurrentidentforline() method
WITHOUT_CLASSIFICATION	{{{ folding methods
WITHOUT_CLASSIFICATION	{{{ position methods
WITHOUT_CLASSIFICATION	{{{ getfoldlevel() method
WITHOUT_CLASSIFICATION	{{{ getfoldatline() method
WITHOUT_CLASSIFICATION	{{{ marker methods
WITHOUT_CLASSIFICATION	{{{ getfoldhandler() method
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	{{{ committemporary() method
WITHOUT_CLASSIFICATION	{{{ getmarker() method
WITHOUT_CLASSIFICATION	notify clients with -wait
WITHOUT_CLASSIFICATION	log.log(log.errorthisio)
WITHOUT_CLASSIFICATION	{{{ close() method
WITHOUT_CLASSIFICATION	don't sort markers while buffer is being loaded
WITHOUT_CLASSIFICATION	{{{ getmarkerstatusprompt() method
WITHOUT_CLASSIFICATION	{{{ checkfileforload() method
WITHOUT_CLASSIFICATION	{{{ addorremovemarker() method
WITHOUT_CLASSIFICATION	{{{ getmarkerinrange() method
WITHOUT_CLASSIFICATION	{{{ addmarker() method
WITHOUT_CLASSIFICATION	this must be called before any editbus messages are sent
WITHOUT_CLASSIFICATION	{{{ getmarkeratline() method
WITHOUT_CLASSIFICATION	{{{ resetcachedproperties() method
WITHOUT_CLASSIFICATION	{{{ removemarker() method
WITHOUT_CLASSIFICATION	magic untitled is only set if newfile param to constructor is set new_file is also set if file doesn't exist on disk. this is so that we can tell apart files created with jedit.newfile() and those that just don't exist on disk. why do we need to tell the difference between the two? jedit.addbuffertolist() checks if the only opened buffer is an untitled buffer and if so replaces it with the buffer to add. we don't want this behavior to occur with files that don't exist on disk only untitled ones.
WITHOUT_CLASSIFICATION	{{{ removeallmarkers() method
WITHOUT_CLASSIFICATION	display
WITHOUT_CLASSIFICATION	{{{ flags
WITHOUT_CLASSIFICATION	{{{ finishsaving() method
WITHOUT_CLASSIFICATION	{{{ setflag() method
WITHOUT_CLASSIFICATION	{{{ setpath() method
WITHOUT_CLASSIFICATION	{{{ getflag() method
WITHOUT_CLASSIFICATION	{{{ checkfileforsave() method
WITHOUT_CLASSIFICATION	{{{ flag values
WITHOUT_CLASSIFICATION	{{{ recoverautosave() method
WITHOUT_CLASSIFICATION	this method might get called at startup
WITHOUT_CLASSIFICATION	{{{ firetransactioncomplete() method
WITHOUT_CLASSIFICATION	{{{ finishloading() method
WITHOUT_CLASSIFICATION	create marker positions
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ settokenmarker() method
WITHOUT_CLASSIFICATION	if we don't do this the autosave file won't be deleted after a save as
WITHOUT_CLASSIFICATION	need to reset properties that were cached defaults since the defaults might have changed.
WITHOUT_CLASSIFICATION	on a reload the fold handler doesn't change but we still need to re-collapse folds. don't do this on initial fold handler creation
WITHOUT_CLASSIFICATION	show this message when all i/o requests are complete
WITHOUT_CLASSIFICATION	if we save a file with the same name as one that's already open we presume that we can close the existing file since the user would have confirmed the overwrite in the 'save as' dialog box anyway
WITHOUT_CLASSIFICATION	can't happen?
WITHOUT_CLASSIFICATION	can't happen?
WITHOUT_CLASSIFICATION	if we saved over an already open file using 'save a copy as' then reload the existing buffer
WITHOUT_CLASSIFICATION	{{{ update this buffer for the new path
WITHOUT_CLASSIFICATION	this ensures that undo can clear the dirty flag properly when all edits up to a save are undone
WITHOUT_CLASSIFICATION	if user adds mode buffer-local property
WITHOUT_CLASSIFICATION	new message type introduced in 4.0pre4
WITHOUT_CLASSIFICATION	{{{ parsebufferlocalproperties() method
WITHOUT_CLASSIFICATION	{{{ parsebufferlocalproperties() method
WITHOUT_CLASSIFICATION	first line for last 10 lines make sure not to overlap with the first 10
WITHOUT_CLASSIFICATION	use the low-level property setting code so that if we have a buffer-local property with the same value as a default later changes in the default don't affect the buffer-local property
WITHOUT_CLASSIFICATION	don't do this on initial token marker
WITHOUT_CLASSIFICATION	{{{ getpriornonemptyline() method
WITHOUT_CLASSIFICATION	didn't find a line that contains non-whitespace chars so return index of prior whitespace line
WITHOUT_CLASSIFICATION	{{{ contentinserted() method
WITHOUT_CLASSIFICATION	{{{ event firing methods
WITHOUT_CLASSIFICATION	{{{ getlistener() method
WITHOUT_CLASSIFICATION	{{{ firefoldlevelchanged() method
WITHOUT_CLASSIFICATION	{{{ firecontentinserted() method
WITHOUT_CLASSIFICATION	{{{ firecontentremoved() method
WITHOUT_CLASSIFICATION	{{{ fireprecontentremoved() method
WITHOUT_CLASSIFICATION	{{{ firefoldhandlerchanged() method
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	end handlerbase implementation
WITHOUT_CLASSIFICATION	so you the avid code reader should use modes as the doctype instead but we still let old catalogs through to avoid annoying users.
WITHOUT_CLASSIFICATION	older jedit versions used a doctype of catalog which is incorrect since the doctype must be the name of the root element which is modes.
WITHOUT_CLASSIFICATION	1 because we've already 'seen' the first bracket
WITHOUT_CLASSIFICATION	{{{ findmatchingbracket() method
WITHOUT_CLASSIFICATION	to avoid slowdown with large files only scan 10000 lines either way
WITHOUT_CLASSIFICATION	{{{ forward search
WITHOUT_CLASSIFICATION	{{{ gettokenatoffset() method
WITHOUT_CLASSIFICATION	corresponding character false - backwards true - forwards
WITHOUT_CLASSIFICATION	}}} {{{ backward search
WITHOUT_CLASSIFICATION	get the syntax token at 'offset' only tokens with the same type will be checked for the corresponding bracket
WITHOUT_CLASSIFICATION	nothing found
WITHOUT_CLASSIFICATION	{{{ go on to next line
WITHOUT_CLASSIFICATION	{{{ go on to previous line
WITHOUT_CLASSIFICATION	{{{ the character under the cursor changes how we behave.
WITHOUT_CLASSIFICATION	{{{ findwordstart() method
WITHOUT_CLASSIFICATION	{{{ findwordstart() method
WITHOUT_CLASSIFICATION	{{{ findwordstart() method
WITHOUT_CLASSIFICATION	{{{ the character under the cursor changes how we behave.
WITHOUT_CLASSIFICATION	{{{ whitespace
WITHOUT_CLASSIFICATION	{{{ whitespace
WITHOUT_CLASSIFICATION	only select other whitespace in this case
WITHOUT_CLASSIFICATION	only select other whitespace in this case
WITHOUT_CLASSIFICATION	word char or symbol stop
WITHOUT_CLASSIFICATION	}}} {{{ word character
WITHOUT_CLASSIFICATION	word char keep going
WITHOUT_CLASSIFICATION	whitespace include in word if eating
WITHOUT_CLASSIFICATION	whitespace include in word if eating
WITHOUT_CLASSIFICATION	}}} {{{ symbol
WITHOUT_CLASSIFICATION	{{{ findwordend() method
WITHOUT_CLASSIFICATION	{{{ findwordend() method
WITHOUT_CLASSIFICATION	{{{ findwordend() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ package-private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ update() method
WITHOUT_CLASSIFICATION	whitespace include in word if eating
WITHOUT_CLASSIFICATION	}}} {{{ symbol
WITHOUT_CLASSIFICATION	align everything to paragraph's leading indent
WITHOUT_CLASSIFICATION	if we see whitespace set flag.
WITHOUT_CLASSIFICATION	{{{ tabstospaces() method
WITHOUT_CLASSIFICATION	{{{ spacestotabs() method
WITHOUT_CLASSIFICATION	{{{ createencodingmenu() method
WITHOUT_CLASSIFICATION	{{{ format() method
WITHOUT_CLASSIFICATION	{{{ browsercommandsmenu constructor
WITHOUT_CLASSIFICATION	{{{ getstringcase() method
WITHOUT_CLASSIFICATION	set rename to false if > 1 file selected
WITHOUT_CLASSIFICATION	{{{ totitlecase() method
WITHOUT_CLASSIFICATION	all good
WITHOUT_CLASSIFICATION	{{{ formatparagraph() method
WITHOUT_CLASSIFICATION	{{{ paintcomponent() method
WITHOUT_CLASSIFICATION	show 'close' item if at least one selected file is currently open
WITHOUT_CLASSIFICATION	this will disable most operations if files of multiple types are selected
WITHOUT_CLASSIFICATION	{{{ actionhandler class
WITHOUT_CLASSIFICATION	{{{ createmenuitem() method
WITHOUT_CLASSIFICATION	{{{ propertieschanged() method
WITHOUT_CLASSIFICATION	{{{ geticonforfile() method
WITHOUT_CLASSIFICATION	{{{ filecellrenderer constructor
WITHOUT_CLASSIFICATION	{{{ geticonforfile() method
WITHOUT_CLASSIFICATION	{{{ gettablecellrenderercomponent() method
WITHOUT_CLASSIFICATION	{{{ getentrywidth() method
WITHOUT_CLASSIFICATION	{{{ expansiontoggleborder class
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ processkeyevent() method
WITHOUT_CLASSIFICATION	{{{ expansiontoggleborder constructor
WITHOUT_CLASSIFICATION	{{{ isexpansiontoggle() method
WITHOUT_CLASSIFICATION	setcolumnselectionallowed(true) setcellselectionenabled(false)
WITHOUT_CLASSIFICATION	{{{ paintborder() method
WITHOUT_CLASSIFICATION	{{{ vfsdirectoryentrytable constructor
WITHOUT_CLASSIFICATION	{{{ getborderinsets() method
WITHOUT_CLASSIFICATION	{{{ getselectedfiles() method
WITHOUT_CLASSIFICATION	{{{ isborderopaque() method
WITHOUT_CLASSIFICATION	{{{ selectfile() method
WITHOUT_CLASSIFICATION	tablecolumn col1 = getcolumnmodel().getcolumn(0)col1.setminwidth(20)col1.setmaxwidth(20)col1.setpreferredwidth(20)
WITHOUT_CLASSIFICATION	{{{ setdirectory() method
WITHOUT_CLASSIFICATION	{{{ getexpandeddirectories() method
WITHOUT_CLASSIFICATION	{{{ dotypeselect() method
WITHOUT_CLASSIFICATION	{{{ dotypeselect() method
WITHOUT_CLASSIFICATION	{{{ scrollrecttovisible() method
WITHOUT_CLASSIFICATION	{{{ maybereloaddirectory() method
WITHOUT_CLASSIFICATION	{{{ toggleexpanded() method
WITHOUT_CLASSIFICATION	avoid scrolling to the right
WITHOUT_CLASSIFICATION	{{{ setselectedrow() method
WITHOUT_CLASSIFICATION	{{{ propertieschanged() method
WITHOUT_CLASSIFICATION	{{{ package-private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	{{{ run() method
WITHOUT_CLASSIFICATION	{{{ expand() method
WITHOUT_CLASSIFICATION	{{{ resizecolumnsappropriately() method
WITHOUT_CLASSIFICATION	{{{ delete() method
WITHOUT_CLASSIFICATION	{{{ cleartypeselect class
WITHOUT_CLASSIFICATION	{{{ getextendedattribute() method
WITHOUT_CLASSIFICATION	{{{ request types
WITHOUT_CLASSIFICATION	{{{ rename() method
WITHOUT_CLASSIFICATION	{{{ browseriorequest constructor
WITHOUT_CLASSIFICATION	firetablerowsinserted(startindex + 1startindex + list.size() + 1)
WITHOUT_CLASSIFICATION	{{{ listdirectory() method
WITHOUT_CLASSIFICATION	allow user to change name case
WITHOUT_CLASSIFICATION	{{{ getcolumncount() method
WITHOUT_CLASSIFICATION	{{{ mkdir() method
WITHOUT_CLASSIFICATION	firetablerowsupdated(startindexstartindex)
WITHOUT_CLASSIFICATION	{{{ vfsdirectoryentrytablemodel constructor
WITHOUT_CLASSIFICATION	{{{ setroot() method
WITHOUT_CLASSIFICATION	{{{ getrowcount() method
WITHOUT_CLASSIFICATION	{{{ collapse() method
WITHOUT_CLASSIFICATION	{{{ addextendedattributes() method
WITHOUT_CLASSIFICATION	firetablerowsupdated(indexindex)firetablerowsdeleted(index + 1lastindex)
WITHOUT_CLASSIFICATION	{{{ getcolumnname() method
WITHOUT_CLASSIFICATION	{{{ getcolumnclass() method
WITHOUT_CLASSIFICATION	{{{ removeextendedattributes() method
WITHOUT_CLASSIFICATION	{{{ getvalueat() method
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	{{{ entry class
WITHOUT_CLASSIFICATION	{{{ getselectedfiles() method
WITHOUT_CLASSIFICATION	{{{ maybereloaddirectory() method
WITHOUT_CLASSIFICATION	{{{ showfilepopup() method
WITHOUT_CLASSIFICATION	this vfs has an extended attribute which is not in the list. add it to the end with a ref count of 1
WITHOUT_CLASSIFICATION	this vfs has an extended attribute which is not in the list ???
WITHOUT_CLASSIFICATION	we no longer have any dirs using this extended attribute
WITHOUT_CLASSIFICATION	{{{ browserview constructor
WITHOUT_CLASSIFICATION	how deeply we are nested
WITHOUT_CLASSIFICATION	{{{ clearexpansionstate() method
WITHOUT_CLASSIFICATION	{{{ extendedattribute class
WITHOUT_CLASSIFICATION	{{{ focusonfileview() method
WITHOUT_CLASSIFICATION	reference counter allows us to remove a column from the table when no directory using this column is visible
WITHOUT_CLASSIFICATION	{{{ updatefileview() method
WITHOUT_CLASSIFICATION	{{{ removenotify() method
WITHOUT_CLASSIFICATION	{{{ loaddirectory() method
WITHOUT_CLASSIFICATION	{{{ selectnone() method
WITHOUT_CLASSIFICATION	{{{ propertieschanged() method
WITHOUT_CLASSIFICATION	{{{ saveexpansionstate() method
WITHOUT_CLASSIFICATION	{{{ directoryloaded() method
WITHOUT_CLASSIFICATION	{{{ getbrowser() method
WITHOUT_CLASSIFICATION	{{{ if reloading root update parent directory list
WITHOUT_CLASSIFICATION	for the parent directory right-click on the click we select the clicked item but when the popup goes away we select the currently showing directory.
WITHOUT_CLASSIFICATION	{{{ gettable() method
WITHOUT_CLASSIFICATION	{{{ getparentdirectorylist() method
WITHOUT_CLASSIFICATION	we use swingutilities.invokelater() so that the action is executed before the popup is hidden.
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ dispose() method
WITHOUT_CLASSIFICATION	{{{ inner classes
WITHOUT_CLASSIFICATION	{{{ processkeyevent() method
WITHOUT_CLASSIFICATION	{{{ actionhandler class
WITHOUT_CLASSIFICATION	{{{ getselectedfiles() method
WITHOUT_CLASSIFICATION	so that it doesn't resize
WITHOUT_CLASSIFICATION	because this method is called for every vfs update we don't want to scan the tree all the time. so we use the following algorithm to determine if the path might be part of the tree - if the path starts with the browser's current directory we do the tree scan - if the browser's directory is 'favorites' -- we have to do the tree scan as every path can appear under the favorites list - if the browser's directory is 'roots' and path is on the local filesystem do a tree scan
WITHOUT_CLASSIFICATION	{{{ mousepressed() method
WITHOUT_CLASSIFICATION	{{{ ismanagingfocus() method
WITHOUT_CLASSIFICATION	nothing
WITHOUT_CLASSIFICATION	{{{ docomplete() method
WITHOUT_CLASSIFICATION	{{{ mousereleased() method
WITHOUT_CLASSIFICATION	{{{ getfocustraversalkeysenabled() method
WITHOUT_CLASSIFICATION	{{{ vfsfilenamefield constructor
WITHOUT_CLASSIFICATION	{{{ vfsfilechooserdialog constructor
WITHOUT_CLASSIFICATION	fix for bug #765507 we don't type complete in save dialog boxes. press tab to do an explicit complete
WITHOUT_CLASSIFICATION	fix for bug #765507 we don't type complete in save dialog boxes. press tab to do an explicit complete
WITHOUT_CLASSIFICATION	{{{ gotoparent() method
WITHOUT_CLASSIFICATION	{{{ browserhandler class
WITHOUT_CLASSIFICATION	{{{ backspaceaction class
WITHOUT_CLASSIFICATION	browser.getbrowserview().gettable().addkeylistener(new keyhandler())
WITHOUT_CLASSIFICATION	string filename = filenamefield.gettext()
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ cancel() method
WITHOUT_CLASSIFICATION	{{{ dofileexistswarning() method
WITHOUT_CLASSIFICATION	{{{ filesselected() method
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ handlemessage() method
WITHOUT_CLASSIFICATION	{{{ getview() method
WITHOUT_CLASSIFICATION	{{{ getactioncontext() method
WITHOUT_CLASSIFICATION	{{{ getmode() method
WITHOUT_CLASSIFICATION	{{{ removenotify() method
WITHOUT_CLASSIFICATION	{{{ keyhandler class
WITHOUT_CLASSIFICATION	{{{ filesactivated() method
WITHOUT_CLASSIFICATION	non-existent file
WITHOUT_CLASSIFICATION	user pressed enter when the vfs table or file name field has focus with nothing selected.
WITHOUT_CLASSIFICATION	{{{ progressupdate() method
WITHOUT_CLASSIFICATION	{{{ workthreadlistener class
WITHOUT_CLASSIFICATION	{{{ statusupdate() method
WITHOUT_CLASSIFICATION	{{{ getfiletyperequest class
WITHOUT_CLASSIFICATION	because its preferred size can be quite wide we don't want it to make the browser way too big so set the preferred width to 0.
WITHOUT_CLASSIFICATION	{{{ browser types
WITHOUT_CLASSIFICATION	{{{ browsedirectoryinnewwindow() method
WITHOUT_CLASSIFICATION	{{{ vfsbrowser constructor
WITHOUT_CLASSIFICATION	{{{ vfsbrowser constructor
WITHOUT_CLASSIFICATION	{{{ browsedirectory() method
WITHOUT_CLASSIFICATION	see vfsbrowser.browsedirectory()
WITHOUT_CLASSIFICATION	{{{ addnotify() method
WITHOUT_CLASSIFICATION	{{{ focusondefaultcomponent() method
WITHOUT_CLASSIFICATION	unknown value??!!!
WITHOUT_CLASSIFICATION	{{{ ismultipleselectionenabled() method
WITHOUT_CLASSIFICATION	{{{ package-private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ newfile() method
WITHOUT_CLASSIFICATION	{{{ getdirectory() method
WITHOUT_CLASSIFICATION	{{{ getselectedfiles() method
WITHOUT_CLASSIFICATION	{{{ setdirectory() method
WITHOUT_CLASSIFICATION	{{{ delete() method
WITHOUT_CLASSIFICATION	{{{ rename() method
WITHOUT_CLASSIFICATION	{{{ mkdir() method
WITHOUT_CLASSIFICATION	{{{ directoryloaded() method
WITHOUT_CLASSIFICATION	{{{ filesselected() method
WITHOUT_CLASSIFICATION	used by ftp plugin to clear directory cache
WITHOUT_CLASSIFICATION	{{{ ishorizontallayout() method
WITHOUT_CLASSIFICATION	{{{ setshowhiddenfiles() method
WITHOUT_CLASSIFICATION	{{{ getshowhiddenfiles() method
WITHOUT_CLASSIFICATION	{{{ locatefile() method
WITHOUT_CLASSIFICATION	{{{ getfilenamefilter() method
WITHOUT_CLASSIFICATION	if a directory is selected create new dir in there. if a file is selected create new dir inside its parent.
WITHOUT_CLASSIFICATION	{{{ setfilenamefilter() method
WITHOUT_CLASSIFICATION	{{{ getdirectoryfield() method
WITHOUT_CLASSIFICATION	path is the currently viewed directory in the browser
WITHOUT_CLASSIFICATION	{{{ rootdirectory() method
WITHOUT_CLASSIFICATION	{{{ addbrowserlistener() method
WITHOUT_CLASSIFICATION	{{{ reloaddirectory() method
WITHOUT_CLASSIFICATION	{{{ searchindirectory() method
WITHOUT_CLASSIFICATION	{{{ searchindirectory() method
WITHOUT_CLASSIFICATION	{{{ removebrowserlistener() method
WITHOUT_CLASSIFICATION	{{{ getbrowserview() method
WITHOUT_CLASSIFICATION	{{{ pathsequal() method
WITHOUT_CLASSIFICATION	{{{ updatefilenamefilter() method
WITHOUT_CLASSIFICATION	{{{ endrequest() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	{{{ inner classes
WITHOUT_CLASSIFICATION	{{{ actionhandler class
WITHOUT_CLASSIFICATION	{{{ actionhandler class
WITHOUT_CLASSIFICATION	{{{ actionhandler class
WITHOUT_CLASSIFICATION	{{{ maybereloaddirectory() method
WITHOUT_CLASSIFICATION	we do this stuff because the browser is not able to handle more than one request yet
WITHOUT_CLASSIFICATION	close if this buffer is currently visible in the view.
WITHOUT_CLASSIFICATION	if a file is selected in open_dialog or save_dialog mode just let the listener(s) handle it
WITHOUT_CLASSIFICATION	{{{ updatepopupmenu() method
WITHOUT_CLASSIFICATION	{{{ createmenubar() method
WITHOUT_CLASSIFICATION	{{{ startrequest() method
WITHOUT_CLASSIFICATION	{{{ createtoolbar() method
WITHOUT_CLASSIFICATION	log.log(log.warningthis"vfs update request already in progress")
WITHOUT_CLASSIFICATION	{{{ commandsmenubutton class
WITHOUT_CLASSIFICATION	dump stack trace for debugging purposes
WITHOUT_CLASSIFICATION	save a file -> sends vfs update. if a vfs file dialog box is shown from the same event frame as the save the vfsupdate will be delivered before the directory is loaded and before the path is set.
WITHOUT_CLASSIFICATION	{{{ updatefilterenabled() method
WITHOUT_CLASSIFICATION	{{{ pluginsmenubutton class
WITHOUT_CLASSIFICATION	{{{ commandsmenubutton constructor
WITHOUT_CLASSIFICATION	we're in a modal dialog
WITHOUT_CLASSIFICATION	{{{ mousehandler class
WITHOUT_CLASSIFICATION	{{{ mousehandler class
WITHOUT_CLASSIFICATION	{{{ mousehandler class
WITHOUT_CLASSIFICATION	{{{ pluginsmenubutton constructor
WITHOUT_CLASSIFICATION	{{{ createpopupmenu() method
WITHOUT_CLASSIFICATION	{{{ createpopupmenu() method
WITHOUT_CLASSIFICATION	{{{ favoritesmenubutton class
WITHOUT_CLASSIFICATION	{{{ old api
WITHOUT_CLASSIFICATION	{{{ directoryloadedawtrequest class
WITHOUT_CLASSIFICATION	{{{ new api
WITHOUT_CLASSIFICATION	{{{ favoritesmenubutton constructor
WITHOUT_CLASSIFICATION	this is the new canonical path
WITHOUT_CLASSIFICATION	there was an error
WITHOUT_CLASSIFICATION	{{{ propertieschanged() method
WITHOUT_CLASSIFICATION	{{{ package-private members
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	{{{ load() method
WITHOUT_CLASSIFICATION	log.log(log.debugbufferhistory.classfnf)
WITHOUT_CLASSIFICATION	to avoid data loss only do this if the above completed successfully
WITHOUT_CLASSIFICATION	{{{ propertieschanged() method
WITHOUT_CLASSIFICATION	if any directories are selected add them otherwise add current directory
WITHOUT_CLASSIFICATION	ensure consistent history eg we don't want both foo/ and foo
WITHOUT_CLASSIFICATION	to notify listeners that any existing selection has been deactivated
WITHOUT_CLASSIFICATION	turns out under some circumstances this method can switch the current buffer in browser mode.
WITHOUT_CLASSIFICATION	in any case this is only needed for the directory chooser (why?) so we add a check. otherwise poor rick will go insane.
WITHOUT_CLASSIFICATION	{{{ browseractioncontext class
WITHOUT_CLASSIFICATION	in the future we will want something better eg. having an 'evt' object passed to editaction.invoke().
WITHOUT_CLASSIFICATION	for now since all browser actions are written in beanshell we set the 'browser' variable directly.
WITHOUT_CLASSIFICATION	i guess ideally all browsers should have views but since they don't we just use the active view in that case since some actions depend on a view being there and i don't want to add checks to them all
WITHOUT_CLASSIFICATION	{{{ getlistmodel() method
WITHOUT_CLASSIFICATION	{{{ changed() method
WITHOUT_CLASSIFICATION	compare existing entries' hashcode with this
WITHOUT_CLASSIFICATION	{{{ add() method
WITHOUT_CLASSIFICATION	strings might be equal!
WITHOUT_CLASSIFICATION	no duplicates check for all-whitespace string
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	{{{ read() method
WITHOUT_CLASSIFICATION	this will result in a slight speed up since we don't need to read the dtd anyway as aelfred is non-validating
WITHOUT_CLASSIFICATION	{{{ load() method
WITHOUT_CLASSIFICATION	{{{ run() method
WITHOUT_CLASSIFICATION	{{{ remove() method
WITHOUT_CLASSIFICATION	{{{ killringhandler class
WITHOUT_CLASSIFICATION	we don't want duplicate entries in the kill ring
WITHOUT_CLASSIFICATION	{{{ ringlistmodel class
WITHOUT_CLASSIFICATION	we don't want duplicate entries in the kill ring
WITHOUT_CLASSIFICATION	true if a \n was read after a \r. usually means this is a dos/windows file
WITHOUT_CLASSIFICATION	{{{ bufferiorequest constructor
WITHOUT_CLASSIFICATION	{{{ constants
WITHOUT_CLASSIFICATION	auto-detect encoding within the gzip stream.
WITHOUT_CLASSIFICATION	do not reset the stream and just treat it like a normal utf-8 file.
WITHOUT_CLASSIFICATION	we guess an initial size for the array
WITHOUT_CLASSIFICATION	only true if the file size is known
WITHOUT_CLASSIFICATION	if the file size is not known start with a resonable default buffer size
WITHOUT_CLASSIFICATION	number of characters in 'buf' array. inputstream.read() doesn't always fill the array (eg the file size is not a multiple of iobufsize or it is a gzipped file etc)
WITHOUT_CLASSIFICATION	a \r was read hence a macos file
WITHOUT_CLASSIFICATION	was the previous read character a \r? if we read a \n and this is true we assume we have a dos/windows file
WITHOUT_CLASSIFICATION	if we read a \r and lastwascr is also true it is probably a mac file (\r\r in stream)
WITHOUT_CLASSIFICATION	number of lines read. every 100 lines we update the progress bar
WITHOUT_CLASSIFICATION	offset of previous line relative to the start of the i/o buffer (not relative to the start of the document)
WITHOUT_CLASSIFICATION	look for line endings.
WITHOUT_CLASSIFICATION	otherwise set a flag so that \n knows that last was a \r
WITHOUT_CLASSIFICATION	this is i+1 to take the trailing \n into account
WITHOUT_CLASSIFICATION	insert a line
WITHOUT_CLASSIFICATION	if lastwascr is true we just read a \r followed by a \n. we specify that this is a windows file but take no further action and just ignore the \r.
WITHOUT_CLASSIFICATION	bump lastline so that the next line doesn't erronously pick up the \r
WITHOUT_CLASSIFICATION	otherwise we found a \n that follows some other character hence we have a unix file
WITHOUT_CLASSIFICATION	if we find some other character that follows a \r so it is not a windows file and probably a mac file
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	{{{ write() method
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	for `reload' command
WITHOUT_CLASSIFICATION	{{{ autosave() method
WITHOUT_CLASSIFICATION	{{{ insert() method
WITHOUT_CLASSIFICATION	{{{ undo() method
WITHOUT_CLASSIFICATION	{{{ redo() method
WITHOUT_CLASSIFICATION	{{{ begincompoundedit() method
WITHOUT_CLASSIFICATION	{{{ endcompoundedit() method
WITHOUT_CLASSIFICATION	{{{ contentinserted() method
WITHOUT_CLASSIFICATION	chop trailing newline and/or ^z (if any)
WITHOUT_CLASSIFICATION	add remaining stuff from buffer
WITHOUT_CLASSIFICATION	the entire save operation can be aborted
WITHOUT_CLASSIFICATION	to avoid having to deal with read/write locks and such we insert the loaded data into the buffer in the post-load cleanup runnable which runs in the awt thread.
WITHOUT_CLASSIFICATION	dos ^z
WITHOUT_CLASSIFICATION	{{{ readmarkers() method
WITHOUT_CLASSIFICATION	add a line marker at the end for proper offset manager operation
WITHOUT_CLASSIFICATION	used in insert()
WITHOUT_CLASSIFICATION	the entire save operation can be aborted
WITHOUT_CLASSIFICATION	if the vfs supports renaming files we first save to #<filename>#save# then rename that to <filename> so that if the save fails data will not be lost. as of 4.1pre7 we now call vfs.gettwostagesavename() instead of constructing the path directly since some vfs's might not allow # in filenames.
WITHOUT_CLASSIFICATION	buffer.readlock()
WITHOUT_CLASSIFICATION	only backup once per session
WITHOUT_CLASSIFICATION	this must be after the stream is created or we deadlock with sshtools.
WITHOUT_CLASSIFICATION	we only save markers to vfs's that support deletion. otherwise we will accumilate stale marks files.
WITHOUT_CLASSIFICATION	can't use buffer.getname() here because it is not changed until the save is complete
WITHOUT_CLASSIFICATION	buffer.readunlock()
WITHOUT_CLASSIFICATION	{{{ writemarkers() method
WITHOUT_CLASSIFICATION	buffer has been saved while we were waiting.
WITHOUT_CLASSIFICATION	{{{ setlimit() method
WITHOUT_CLASSIFICATION	not supported by java
WITHOUT_CLASSIFICATION	{{{ undomanager constructor
WITHOUT_CLASSIFICATION	we don't do this in buffer.insert() so that we can insert multiple files at once
WITHOUT_CLASSIFICATION	{{{ clear() method
WITHOUT_CLASSIFICATION	nothing done between begin/end calls
WITHOUT_CLASSIFICATION	{{{ contentremoved() method
WITHOUT_CLASSIFICATION	{{{ buffersaved() method
WITHOUT_CLASSIFICATION	{{{ remove class
WITHOUT_CLASSIFICATION	{{{ remove constructor
WITHOUT_CLASSIFICATION	{{{ remove constructor
WITHOUT_CLASSIFICATION	{{{ inner classes
WITHOUT_CLASSIFICATION	{{{ undo() method
WITHOUT_CLASSIFICATION	{{{ undo() method
WITHOUT_CLASSIFICATION	{{{ undo() method
WITHOUT_CLASSIFICATION	{{{ undo() method
WITHOUT_CLASSIFICATION	{{{ undo() method
WITHOUT_CLASSIFICATION	{{{ undo() method
WITHOUT_CLASSIFICATION	{{{ undo() method
WITHOUT_CLASSIFICATION	{{{ undo() method
WITHOUT_CLASSIFICATION	{{{ redo() method
WITHOUT_CLASSIFICATION	{{{ redo() method
WITHOUT_CLASSIFICATION	{{{ redo() method
WITHOUT_CLASSIFICATION	{{{ redo() method
WITHOUT_CLASSIFICATION	{{{ redo() method
WITHOUT_CLASSIFICATION	{{{ redo() method
WITHOUT_CLASSIFICATION	{{{ redo() method
WITHOUT_CLASSIFICATION	{{{ redo() method
WITHOUT_CLASSIFICATION	{{{ add() method
WITHOUT_CLASSIFICATION	{{{ add() method
WITHOUT_CLASSIFICATION	queue of undos. last is most recent first is oldest
WITHOUT_CLASSIFICATION	{{{ insert class
WITHOUT_CLASSIFICATION	queue of redos. first is most recent last is oldest
WITHOUT_CLASSIFICATION	{{{ addedit() method
WITHOUT_CLASSIFICATION	{{{ insert constructor
WITHOUT_CLASSIFICATION	{{{ getmergeedit() method
WITHOUT_CLASSIFICATION	{{{ insert constructor
WITHOUT_CLASSIFICATION	{{{ getlastedit() method
WITHOUT_CLASSIFICATION	{{{ edit class
WITHOUT_CLASSIFICATION	{{{ compoundedit class
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ equals() method
WITHOUT_CLASSIFICATION	{{{ createposition() method
WITHOUT_CLASSIFICATION	{{{ getname() method
WITHOUT_CLASSIFICATION	{{{ finalize() method
WITHOUT_CLASSIFICATION	{{{ inner classes
WITHOUT_CLASSIFICATION	{{{ contentinserted() method
WITHOUT_CLASSIFICATION	{{{ contentinserted() method
WITHOUT_CLASSIFICATION	{{{ contentremoved() method
WITHOUT_CLASSIFICATION	{{{ contentremoved() method
WITHOUT_CLASSIFICATION	get all positions from offset to the end inclusive
WITHOUT_CLASSIFICATION	get all positions from offset to the end inclusive
WITHOUT_CLASSIFICATION	{{{ postophalf class
WITHOUT_CLASSIFICATION	{{{ unref() method
WITHOUT_CLASSIFICATION	{{{ postophalf constructor
WITHOUT_CLASSIFICATION	{{{ foldhandlerchanged() method
WITHOUT_CLASSIFICATION	{{{ getoffset() method
WITHOUT_CLASSIFICATION	{{{ compareto() method
WITHOUT_CLASSIFICATION	{{{ posbottomhalf class
WITHOUT_CLASSIFICATION	{{{ getstartoffset() method
WITHOUT_CLASSIFICATION	{{{ posbottomhalf constructor
WITHOUT_CLASSIFICATION	{{{ foldlevelchanged() method
WITHOUT_CLASSIFICATION	{{{ ref() method
WITHOUT_CLASSIFICATION	{{{ lineelement constructor
WITHOUT_CLASSIFICATION	{{{ precontentremoved() method
WITHOUT_CLASSIFICATION	{{{ transactioncomplete() method
WITHOUT_CLASSIFICATION	{{{ getdocument() method
WITHOUT_CLASSIFICATION	{{{ getendoffset() method
WITHOUT_CLASSIFICATION	{{{ getparentelement() method
WITHOUT_CLASSIFICATION	{{{ getattributes() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ getlength() method
WITHOUT_CLASSIFICATION	{{{ getlinecount() method
WITHOUT_CLASSIFICATION	{{{ getlineofoffset() method
WITHOUT_CLASSIFICATION	{{{ getlineendoffset() method
WITHOUT_CLASSIFICATION	{{{ gettext() method
WITHOUT_CLASSIFICATION	{{{ gettext() method
WITHOUT_CLASSIFICATION	{{{ insert() method
WITHOUT_CLASSIFICATION	{{{ insert() method
WITHOUT_CLASSIFICATION	{{{ remove() method
WITHOUT_CLASSIFICATION	{{{ getfoldlevel() method
WITHOUT_CLASSIFICATION	{{{ getfoldlevel() method
WITHOUT_CLASSIFICATION	{{{ getfoldlevel() method
WITHOUT_CLASSIFICATION	copy text after gap
WITHOUT_CLASSIFICATION	{{{ getelementindex() method
WITHOUT_CLASSIFICATION	{{{ getscreenlinecount() method
WITHOUT_CLASSIFICATION	{{{ getelementcount() method
WITHOUT_CLASSIFICATION	{{{ _setcontent() method
WITHOUT_CLASSIFICATION	{{{ getelement() method
WITHOUT_CLASSIFICATION	limitations
WITHOUT_CLASSIFICATION	{{{ isleaf() method
WITHOUT_CLASSIFICATION	{{{ movegapstart() method
WITHOUT_CLASSIFICATION	{{{ explicitfoldhandler constructor
WITHOUT_CLASSIFICATION	limitations
WITHOUT_CLASSIFICATION	copy text before gap
WITHOUT_CLASSIFICATION	{{{ movegapend() method
WITHOUT_CLASSIFICATION	{{{ setfirstinvalidfoldlevel() method
WITHOUT_CLASSIFICATION	{{{ dummyfoldhandler constructor
WITHOUT_CLASSIFICATION	{{{ setscreenlinecount() method
WITHOUT_CLASSIFICATION	{{{ linemanager constructor
WITHOUT_CLASSIFICATION	{{{ getfirstinvalidfoldlevel() method
WITHOUT_CLASSIFICATION	{{{ isscreenlinecountvalid() method
WITHOUT_CLASSIFICATION	{{{ getlinecontext() method
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	{{{ equals() method
WITHOUT_CLASSIFICATION	{{{ getname() method
WITHOUT_CLASSIFICATION	{{{ getfoldlevel() method
WITHOUT_CLASSIFICATION	{{{ getfoldhandler() method
WITHOUT_CLASSIFICATION	{{{ contentinserted() method
WITHOUT_CLASSIFICATION	{{{ contentinserted() method
WITHOUT_CLASSIFICATION	{{{ contentremoved() method
WITHOUT_CLASSIFICATION	{{{ contentremoved() method
WITHOUT_CLASSIFICATION	{{{ foldlevelchanged() method
WITHOUT_CLASSIFICATION	{{{ precontentremoved() method
WITHOUT_CLASSIFICATION	{{{ transactioncomplete() method
WITHOUT_CLASSIFICATION	{{{ foldhandlerchanged() method
WITHOUT_CLASSIFICATION	{{{ update line info and line context arrays
WITHOUT_CLASSIFICATION	{{{ setlinecontext() method
WITHOUT_CLASSIFICATION	{{{ update line info and line context arrays
WITHOUT_CLASSIFICATION	{{{ setfirstinvalidlinecontext() method
WITHOUT_CLASSIFICATION	{{{ getfirstinvalidlinecontext() method
WITHOUT_CLASSIFICATION	movegap(-10"contentinserted")
WITHOUT_CLASSIFICATION	{{{ invalidatescreenlinecounts() method
WITHOUT_CLASSIFICATION	{{{ setlineendoffset() method
WITHOUT_CLASSIFICATION	{{{ _contentinserted() method
WITHOUT_CLASSIFICATION	having all the info packed into an int is not very oo and makes the code somewhat more complicated but it saves a lot of memory. the new document model has just 12 bytes of overhead per line. linecontext instances are now internalized so only a few should actually be in the heap. in the old document model there were 5 objects per line for a total of about 100 bytes plus a cached token list which used another 100 or so bytes.
WITHOUT_CLASSIFICATION	movegap(-10"contentremoved")
WITHOUT_CLASSIFICATION	{{{ registerfoldhandler() method
WITHOUT_CLASSIFICATION	{{{ movegap() method
WITHOUT_CLASSIFICATION	{{{ unregisterfoldhandler() method
WITHOUT_CLASSIFICATION	default implementation subclasses can extend this.
WITHOUT_CLASSIFICATION	{{{ getfoldhandlers() method
WITHOUT_CLASSIFICATION	{{{ hashcode() method
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	{{{ start() method
WITHOUT_CLASSIFICATION	{{{ invoke() method
WITHOUT_CLASSIFICATION	{{{ stop() method
WITHOUT_CLASSIFICATION	{{{ inner classes
WITHOUT_CLASSIFICATION	{{{ geticon() method
WITHOUT_CLASSIFICATION	{{{ getfoldlevel() method
WITHOUT_CLASSIFICATION	{{{ actionhandler class
WITHOUT_CLASSIFICATION	if 'temp' is true hide search bar after user is done with it
WITHOUT_CLASSIFICATION	{{{ getfoldmodes() method
WITHOUT_CLASSIFICATION	empty line. inherit previous line's fold level
WITHOUT_CLASSIFICATION	{{{ foldhandler() constructor
WITHOUT_CLASSIFICATION	{{{ getexpansion() method
WITHOUT_CLASSIFICATION	{{{ static initializer
WITHOUT_CLASSIFICATION	{{{ animatedicon constructor
WITHOUT_CLASSIFICATION	{{{ getframes() method
WITHOUT_CLASSIFICATION	{{{ setexpansion() method
WITHOUT_CLASSIFICATION	{{{ getrate() method
WITHOUT_CLASSIFICATION	{{{ getfield() method
WITHOUT_CLASSIFICATION	{{{ setframes() method
WITHOUT_CLASSIFICATION	{{{ getabbrevfield() method
WITHOUT_CLASSIFICATION	{{{ seticon() method
WITHOUT_CLASSIFICATION	{{{ setrate() method
WITHOUT_CLASSIFICATION	{{{ getbeforecarettextarea() method
WITHOUT_CLASSIFICATION	{{{ gotoactionbar() method
WITHOUT_CLASSIFICATION	{{{ getaftercarettextarea() method
WITHOUT_CLASSIFICATION	{{{ actionbar constructor
WITHOUT_CLASSIFICATION	construct a beanshell snippet instead of invoking directly so that user can record property changes in macros.
WITHOUT_CLASSIFICATION	{{{ getcompletions() method
WITHOUT_CLASSIFICATION	{{{ complete() method
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	{{{ actionperformed() method
WITHOUT_CLASSIFICATION	protected members
WITHOUT_CLASSIFICATION	{{{ isok() method
WITHOUT_CLASSIFICATION	{{{ actionhandler class
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ cancel() method
WITHOUT_CLASSIFICATION	{{{ cancel() method
WITHOUT_CLASSIFICATION	{{{ keyhandler class
WITHOUT_CLASSIFICATION	{{{ mousehandler class
WITHOUT_CLASSIFICATION	{{{ changedupdate() method
WITHOUT_CLASSIFICATION	{{{ documenthandler class
WITHOUT_CLASSIFICATION	{{{ insertupdate() method
WITHOUT_CLASSIFICATION	{{{ actiontextfield class
WITHOUT_CLASSIFICATION	{{{ removeupdate() method
WITHOUT_CLASSIFICATION	{{{ setmodel() method
WITHOUT_CLASSIFICATION	{{{ tipoftheday constructor
WITHOUT_CLASSIFICATION	{{{ completionpopup class
WITHOUT_CLASSIFICATION	{{{ completionlist class
WITHOUT_CLASSIFICATION	{{{ completionpopup constructor
WITHOUT_CLASSIFICATION	we need this public not protected
WITHOUT_CLASSIFICATION	recursively adds our key listener to sub-components
WITHOUT_CLASSIFICATION	{{{ nexttip() method
WITHOUT_CLASSIFICATION	{{{ selectlinerange constructor
WITHOUT_CLASSIFICATION	{{{ createfieldpanel() method
WITHOUT_CLASSIFICATION	{{{ closedialog constructor
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ dispose() method
WITHOUT_CLASSIFICATION	{{{ cancel() method
WITHOUT_CLASSIFICATION	{{{ getcompletions() method
WITHOUT_CLASSIFICATION	{{{ getcompletions() method
WITHOUT_CLASSIFICATION	only set if all buffers saved/closed
WITHOUT_CLASSIFICATION	so that we don't see the same tip again if the user clicks 'next tip'
WITHOUT_CLASSIFICATION	{{{ completeword() method
WITHOUT_CLASSIFICATION	do nothing }}}
WITHOUT_CLASSIFICATION	{{{ completeword() method
WITHOUT_CLASSIFICATION	{{{ listhandler class
WITHOUT_CLASSIFICATION	{{{ completeword constructor
WITHOUT_CLASSIFICATION	}}} {{{ show popup if > 1
WITHOUT_CLASSIFICATION	{{{ if there is only one competion insert in buffer
WITHOUT_CLASSIFICATION	attempting to expand non-word char
WITHOUT_CLASSIFICATION	figure out what constitutes a word character and what doesn't
WITHOUT_CLASSIFICATION	{{{ getnonalphanumericwordchars() method
WITHOUT_CLASSIFICATION	{{{ getwordtocomplete() method
WITHOUT_CLASSIFICATION	build a list of unique words in all visible buffers
WITHOUT_CLASSIFICATION	only complete current buffer's keyword map
WITHOUT_CLASSIFICATION	only complete current buffer's keyword map
WITHOUT_CLASSIFICATION	{{{ try to find matching keywords
WITHOUT_CLASSIFICATION	{{{ loop through all lines of current buffer
WITHOUT_CLASSIFICATION	check for match at start of line
WITHOUT_CLASSIFICATION	check for match inside line
WITHOUT_CLASSIFICATION	'+ 1' so that findwordend() doesn't pick up the space at the start
WITHOUT_CLASSIFICATION	{{{ insertselected() method
WITHOUT_CLASSIFICATION	{{{ completion class
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ update() method
WITHOUT_CLASSIFICATION	{{{ actionperformed() method
WITHOUT_CLASSIFICATION	{{{ setmessageandclear() method
WITHOUT_CLASSIFICATION	{{{ actionhandler class
WITHOUT_CLASSIFICATION	{{{ actionhandler class
WITHOUT_CLASSIFICATION	{{{ removenotify() method
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ cancel() method
WITHOUT_CLASSIFICATION	{{{ statusupdate() method
WITHOUT_CLASSIFICATION	{{{ progressupdate() method
WITHOUT_CLASSIFICATION	{{{ addnotify() method
WITHOUT_CLASSIFICATION	uimanager.getfont("label.font")
WITHOUT_CLASSIFICATION	{{{ updatecaption() method
WITHOUT_CLASSIFICATION	{{{ threadprogress constructor
WITHOUT_CLASSIFICATION	{{{ workthreadhandler class
WITHOUT_CLASSIFICATION	{{{ statusbar constructor
WITHOUT_CLASSIFICATION	{{{ threadprogress class
WITHOUT_CLASSIFICATION	system.err.println("value " + thread.getprogressvalue())
WITHOUT_CLASSIFICATION	{{{ setmessagecomponent() method
WITHOUT_CLASSIFICATION	{{{ textareadialog constructor
WITHOUT_CLASSIFICATION	{{{ textareadialog constructor
WITHOUT_CLASSIFICATION	{{{ textareadialog constructor
WITHOUT_CLASSIFICATION	{{{ textareadialog constructor
WITHOUT_CLASSIFICATION	{{{ workthreadlistener implementation
WITHOUT_CLASSIFICATION	so if view is closed in the meantime
WITHOUT_CLASSIFICATION	{{{ propertieschanged() method
WITHOUT_CLASSIFICATION	don't obscure existing message
WITHOUT_CLASSIFICATION	{{{ updatecaretstatus() method
WITHOUT_CLASSIFICATION	{{{ setmessage() method
WITHOUT_CLASSIFICATION	can happen when switching buffers sometimes
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ update() method
WITHOUT_CLASSIFICATION	{{{ actionperformed() method
WITHOUT_CLASSIFICATION	{{{ actionperformed() method
WITHOUT_CLASSIFICATION	{{{ paintcomponent() method
WITHOUT_CLASSIFICATION	{{{ removenotify() method
WITHOUT_CLASSIFICATION	{{{ removenotify() method
WITHOUT_CLASSIFICATION	{{{ addnotify() method
WITHOUT_CLASSIFICATION	{{{ addnotify() method
WITHOUT_CLASSIFICATION	{{{ mousehandler class
WITHOUT_CLASSIFICATION	{{{ mousehandler class
WITHOUT_CLASSIFICATION	hopefully another caret update will come?
WITHOUT_CLASSIFICATION	{{{ tooltiplabel class
WITHOUT_CLASSIFICATION	see above
WITHOUT_CLASSIFICATION	{{{ updatemiscstatus() method
WITHOUT_CLASSIFICATION	{{{ updatebufferstatus() method
WITHOUT_CLASSIFICATION	{{{ memorystatus class
WITHOUT_CLASSIFICATION	{{{ gettooltiplocation() method
WITHOUT_CLASSIFICATION	package-private for speed
WITHOUT_CLASSIFICATION	{{{ gettooltiptext() method
WITHOUT_CLASSIFICATION	{{{ gettooltiplocation() method
WITHOUT_CLASSIFICATION	{{{ gettooltiplocation() method
WITHOUT_CLASSIFICATION	{{{ memorystatus constructor
WITHOUT_CLASSIFICATION	{{{ gettooltiptext() method
WITHOUT_CLASSIFICATION	font font = uimanager.getfont("label.font")
WITHOUT_CLASSIFICATION	{{{ clock class
WITHOUT_CLASSIFICATION	memorystatus.this.getborder().getborderinsets(this)
WITHOUT_CLASSIFICATION	fontrendercontext frc = new fontrendercontext(nullfalsefalse)rectangle2d bounds = getfont().getstringbounds(gettime()frc)dimension dim = new dimension((int)bounds.getwidth()(int)bounds.getheight())setpreferredsize(dim)setmaximumsize(dim)
WITHOUT_CLASSIFICATION	{{{ clock constructor
WITHOUT_CLASSIFICATION	{{{ gettime() method
WITHOUT_CLASSIFICATION	{{{ historytextfield constructor
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ update() method
WITHOUT_CLASSIFICATION	{{{ actionperformed() method
WITHOUT_CLASSIFICATION	{{{ actionperformed() method
WITHOUT_CLASSIFICATION	{{{ paintcomponent() method
WITHOUT_CLASSIFICATION	{{{ removenotify() method
WITHOUT_CLASSIFICATION	{{{ removenotify() method
WITHOUT_CLASSIFICATION	{{{ addnotify() method
WITHOUT_CLASSIFICATION	{{{ addnotify() method
WITHOUT_CLASSIFICATION	{{{ mousehandler class
WITHOUT_CLASSIFICATION	{{{ gettooltiplocation() method
WITHOUT_CLASSIFICATION	{{{ gettooltiplocation() method
WITHOUT_CLASSIFICATION	{{{ gettooltiplocation() method
WITHOUT_CLASSIFICATION	{{{ memorystatus constructor
WITHOUT_CLASSIFICATION	{{{ setselectallonfocus() method
WITHOUT_CLASSIFICATION	font font = uimanager.getfont("label.font")
WITHOUT_CLASSIFICATION	{{{ gettooltiptext() method
WITHOUT_CLASSIFICATION	{{{ gettooltiptext() method
WITHOUT_CLASSIFICATION	memorystatus.this.getborder().getborderinsets(this)
WITHOUT_CLASSIFICATION	{{{ clock constructor
WITHOUT_CLASSIFICATION	fontrendercontext frc = new fontrendercontext(nullfalsefalse)rectangle2d bounds = getfont().getstringbounds(gettime()frc)dimension dim = new dimension((int)bounds.getwidth()(int)bounds.getheight())setpreferredsize(dim)setmaximumsize(dim)
WITHOUT_CLASSIFICATION	{{{ gettime() method
WITHOUT_CLASSIFICATION	{{{ historytextfield constructor
WITHOUT_CLASSIFICATION	{{{ historytextfield constructor
WITHOUT_CLASSIFICATION	{{{ historytextfield constructor
WITHOUT_CLASSIFICATION	{{{ setinstantpopups() method
WITHOUT_CLASSIFICATION	{{{ getinstantpopups() method
WITHOUT_CLASSIFICATION	{{{ getselectallonfocus() method
WITHOUT_CLASSIFICATION	{{{ setenteraddstohistory() method
WITHOUT_CLASSIFICATION	{{{ getenteraddstohistory() method
WITHOUT_CLASSIFICATION	{{{ getmodel() method
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	{{{ showpopupmenu() method
WITHOUT_CLASSIFICATION	{{{ showpopupmenu() method
WITHOUT_CLASSIFICATION	{{{ protected members
WITHOUT_CLASSIFICATION	{{{ inner classes
WITHOUT_CLASSIFICATION	{{{ processkeyevent() method
WITHOUT_CLASSIFICATION	{{{ actionhandler class
WITHOUT_CLASSIFICATION	{{{ mousepressed() method
WITHOUT_CLASSIFICATION	{{{ mousereleased() method
WITHOUT_CLASSIFICATION	{{{ mousehandler class
WITHOUT_CLASSIFICATION	{{{ setmodel() method
WITHOUT_CLASSIFICATION	{{{ historyprevious() method
WITHOUT_CLASSIFICATION	{{{ addcurrenttohistory() method
WITHOUT_CLASSIFICATION	{{{ processmouseevent() method
WITHOUT_CLASSIFICATION	{{{ settext() method
WITHOUT_CLASSIFICATION	{{{ mousemoved() method
WITHOUT_CLASSIFICATION	{{{ fireactionperformed() method
WITHOUT_CLASSIFICATION	{{{ dobackwardsearch() method
WITHOUT_CLASSIFICATION	have to do this because settext() sets index to -1
WITHOUT_CLASSIFICATION	{{{ doforwardsearch() method
WITHOUT_CLASSIFICATION	down arrow
WITHOUT_CLASSIFICATION	have to do this because settext() sets index to -1
WITHOUT_CLASSIFICATION	{{{ mousedragged() method
WITHOUT_CLASSIFICATION	{{{ historynext() method
WITHOUT_CLASSIFICATION	{{{ colorwellbutton constructor
WITHOUT_CLASSIFICATION	{{{ historyborder class
WITHOUT_CLASSIFICATION	according to krisk this looks better on os x
WITHOUT_CLASSIFICATION	{{{ package-private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ processkeyevent() method
WITHOUT_CLASSIFICATION	{{{ actionhandler class
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ cancel() method
WITHOUT_CLASSIFICATION	{{{ renderer class
WITHOUT_CLASSIFICATION	we don't handle key pressed a+
WITHOUT_CLASSIFICATION	{{{ getselectedcolor() method
WITHOUT_CLASSIFICATION	{{{ colorpickerdialog class
WITHOUT_CLASSIFICATION	{{{ setselectedcolor() method
WITHOUT_CLASSIFICATION	}}} {{{ key_typed
WITHOUT_CLASSIFICATION	{{{ colorwell class
WITHOUT_CLASSIFICATION	{{{ key_pressed
WITHOUT_CLASSIFICATION	they're too troublesome
WITHOUT_CLASSIFICATION	get rid of keys we never need to handle
WITHOUT_CLASSIFICATION	need to let \b through so that backspace will work in historytextfields
WITHOUT_CLASSIFICATION	case keyevent.vk_separator
WITHOUT_CLASSIFICATION	{{{ updatebuttons() method
WITHOUT_CLASSIFICATION	if the last key was a numeric keypad key and numlock is off filter it out
WITHOUT_CLASSIFICATION	{{{ pastefromlistdialog constructor
WITHOUT_CLASSIFICATION	{{{ numerickeypadkey() method
WITHOUT_CLASSIFICATION	{{{ getselectedcliptext()
WITHOUT_CLASSIFICATION	{{{ showcliptext() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ reload() method
WITHOUT_CLASSIFICATION	{{{ actionhandler class
WITHOUT_CLASSIFICATION	{{{ actionhandler class
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ cancel() method
WITHOUT_CLASSIFICATION	{{{ mousehandler class
WITHOUT_CLASSIFICATION	{{{ listhandler class
WITHOUT_CLASSIFICATION	{{{ renderer class
WITHOUT_CLASSIFICATION	{{{ inputhandler constructor
WITHOUT_CLASSIFICATION	{{{ selectall() method
WITHOUT_CLASSIFICATION	{{{ valuechanged() method
WITHOUT_CLASSIFICATION	{{{ isprefixactive() method
WITHOUT_CLASSIFICATION	for abi compatibility
WITHOUT_CLASSIFICATION	is it a header?
WITHOUT_CLASSIFICATION	{{{ fileschangeddialog constructor
WITHOUT_CLASSIFICATION	{{{ addkeybinding() method
WITHOUT_CLASSIFICATION	{{{ updateenabled() method
WITHOUT_CLASSIFICATION	remove empty category branches
WITHOUT_CLASSIFICATION	{{{ addkeybinding() method
WITHOUT_CLASSIFICATION	selected a header skip to the next row
WITHOUT_CLASSIFICATION	{{{ getlastaction() method
WITHOUT_CLASSIFICATION	{{{ treehandler class
WITHOUT_CLASSIFICATION	{{{ handlekey() method
WITHOUT_CLASSIFICATION	{{{ removekeybinding() method
WITHOUT_CLASSIFICATION	{{{ removeallkeybindings() method
WITHOUT_CLASSIFICATION	{{{ getlastactioncount() method
WITHOUT_CLASSIFICATION	{{{ getrepeatcount() method
WITHOUT_CLASSIFICATION	{{{ setrepeatcount() method
WITHOUT_CLASSIFICATION	{{{ readnextchar() method
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	{{{ protected members
WITHOUT_CLASSIFICATION	{{{ entry class
WITHOUT_CLASSIFICATION	{{{ invokeaction() method
WITHOUT_CLASSIFICATION	{{{ invokeaction() method
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ cancel() method
WITHOUT_CLASSIFICATION	{{{ setmodel() method
WITHOUT_CLASSIFICATION	{{{ setmodel() method
WITHOUT_CLASSIFICATION	{{{ selectall() method
WITHOUT_CLASSIFICATION	{{{ readnextchar() method
WITHOUT_CLASSIFICATION	value
WITHOUT_CLASSIFICATION	{{{ resetlastactioncount() method
WITHOUT_CLASSIFICATION	if repeat was true originally clear it otherwise it might have been set by the action etc
WITHOUT_CLASSIFICATION	remember the last executed action
WITHOUT_CLASSIFICATION	{{{ invokereadnextchar() method
WITHOUT_CLASSIFICATION	remember old values in case action changes them
WITHOUT_CLASSIFICATION	first of all if this action set a readnextchar do not clear the repeat
WITHOUT_CLASSIFICATION	execute the action
WITHOUT_CLASSIFICATION	{{{ getvalues() method
WITHOUT_CLASSIFICATION	stop people doing dumb stuff like c+enter 100 c+n
WITHOUT_CLASSIFICATION	stop people doing dumb stuff like c+enter 100 c+n
WITHOUT_CLASSIFICATION	{{{ invokelastaction() method
WITHOUT_CLASSIFICATION	this might be a bit slow if __char__ occurs a lot
WITHOUT_CLASSIFICATION	{{{ userinput() method
WITHOUT_CLASSIFICATION	{{{ jcheckboxlist constructor
WITHOUT_CLASSIFICATION	{{{ jcheckboxlist constructor
WITHOUT_CLASSIFICATION	{{{ getselectedvalue() method
WITHOUT_CLASSIFICATION	{{{ getcheckedvalues() method
WITHOUT_CLASSIFICATION	hasfocus
WITHOUT_CLASSIFICATION	{{{ getcellrenderer() method
WITHOUT_CLASSIFICATION	{{{ dummyrenderer class
WITHOUT_CLASSIFICATION	{{{ labelrenderer class
WITHOUT_CLASSIFICATION	{{{ aboutdialog constructor
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	can't happen
WITHOUT_CLASSIFICATION	{{{ invoke() method
WITHOUT_CLASSIFICATION	{{{ load() method
WITHOUT_CLASSIFICATION	{{{ resolveentity() method
WITHOUT_CLASSIFICATION	{{{ attribute() method
WITHOUT_CLASSIFICATION	{{{ doctypedecl() method
WITHOUT_CLASSIFICATION	{{{ chardata() method
WITHOUT_CLASSIFICATION	{{{ startelement() method
WITHOUT_CLASSIFICATION	{{{ endelement() method
WITHOUT_CLASSIFICATION	{{{ startdocument() method
WITHOUT_CLASSIFICATION	{{{ pushelement() method
WITHOUT_CLASSIFICATION	{{{ peekelement() method
WITHOUT_CLASSIFICATION	{{{ popelement() method
WITHOUT_CLASSIFICATION	{{{ actionhandler class
WITHOUT_CLASSIFICATION	{{{ constants
WITHOUT_CLASSIFICATION	{{{ createdockablewindow() method
WITHOUT_CLASSIFICATION	{{{ aboutpanel class
WITHOUT_CLASSIFICATION	{{{ cachedockablewindows() method
WITHOUT_CLASSIFICATION	{{{ static part of class
WITHOUT_CLASSIFICATION	{{{ getcacheddockablenames() method
WITHOUT_CLASSIFICATION	{{{ loaddockablewindows() method
WITHOUT_CLASSIFICATION	{{{ registerdockablewindow() method
WITHOUT_CLASSIFICATION	{{{ unloaddockablewindows() method
WITHOUT_CLASSIFICATION	{{{ getregistereddockablewindows() method
WITHOUT_CLASSIFICATION	{{{ getcacheddockableactionflags() method
WITHOUT_CLASSIFICATION	{{{ dockablelisthandler class
WITHOUT_CLASSIFICATION	{{{ openaction class
WITHOUT_CLASSIFICATION	{{{ dockablelisthandler constructor
WITHOUT_CLASSIFICATION	{{{ factory class
WITHOUT_CLASSIFICATION	{{{ factory constructor
WITHOUT_CLASSIFICATION	{{{ openaction constructor
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ invoke() method
WITHOUT_CLASSIFICATION	{{{ invoke() method
WITHOUT_CLASSIFICATION	{{{ getcode() method
WITHOUT_CLASSIFICATION	{{{ getcode() method
WITHOUT_CLASSIFICATION	{{{ getcode() method
WITHOUT_CLASSIFICATION	}}} }}} }}}
WITHOUT_CLASSIFICATION	{{{ getview() method
WITHOUT_CLASSIFICATION	{{{ isselected() method
WITHOUT_CLASSIFICATION	{{{ static initializer
WITHOUT_CLASSIFICATION	{{{ showdockablewindow() method
WITHOUT_CLASSIFICATION	make default be true for the next action
WITHOUT_CLASSIFICATION	{{{ instance part of class
WITHOUT_CLASSIFICATION	{{{ toggleaction class
WITHOUT_CLASSIFICATION	{{{ removedockablewindow() method
WITHOUT_CLASSIFICATION	{{{ toggleaction constructor
WITHOUT_CLASSIFICATION	{{{ dockablewindowmanager constructor
WITHOUT_CLASSIFICATION	{{{ floataction class
WITHOUT_CLASSIFICATION	an error occurred
WITHOUT_CLASSIFICATION	{{{ floataction constructor
WITHOUT_CLASSIFICATION	{{{ floatdockablewindow() method
WITHOUT_CLASSIFICATION	{{{ closecurrentarea() method
WITHOUT_CLASSIFICATION	create a copy of this dockable window and float it
WITHOUT_CLASSIFICATION	{{{ toggledockablewindow() method
WITHOUT_CLASSIFICATION	{{{ adddockablewindow() method
WITHOUT_CLASSIFICATION	{{{ getdockabletitle() method
WITHOUT_CLASSIFICATION	{{{ hidedockablewindow() method
WITHOUT_CLASSIFICATION	{{{ getdockablewindow() method
WITHOUT_CLASSIFICATION	{{{ isdockablewindowvisible() method
WITHOUT_CLASSIFICATION	{{{ getdockable() method
WITHOUT_CLASSIFICATION	system.err.println(comp.getclass())
WITHOUT_CLASSIFICATION	{{{ isdockablewindowdocked() method
WITHOUT_CLASSIFICATION	{{{ package-private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ handlemessage() method
WITHOUT_CLASSIFICATION	{{{ addentry() method
WITHOUT_CLASSIFICATION	{{{ gettopdockingarea() method
WITHOUT_CLASSIFICATION	we don't care
WITHOUT_CLASSIFICATION	{{{ close() method
WITHOUT_CLASSIFICATION	{{{ createpopupmenu() method
WITHOUT_CLASSIFICATION	{{{ propertieschanged() method
WITHOUT_CLASSIFICATION	{{{ getleftdockingarea() method
WITHOUT_CLASSIFICATION	{{{ getallpluginentries() method
WITHOUT_CLASSIFICATION	{{{ setresizepos() method
WITHOUT_CLASSIFICATION	{{{ getbottomdockingarea() method
WITHOUT_CLASSIFICATION	{{{ getrightdockingarea() method
WITHOUT_CLASSIFICATION	{{{ finishresizing() method
WITHOUT_CLASSIFICATION	{{{ paintchildren() method
WITHOUT_CLASSIFICATION	{{{ dockablelayout class
WITHOUT_CLASSIFICATION	don't show menu items to dock into a plain view
WITHOUT_CLASSIFICATION	{{{ addlayoutcomponent() method
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	{{{ preferredlayoutsize() method
WITHOUT_CLASSIFICATION	{{{ addlayoutcomponent() method
WITHOUT_CLASSIFICATION	{{{ lay out dependent buttons
WITHOUT_CLASSIFICATION	{{{ removelayoutcomponent() method
WITHOUT_CLASSIFICATION	{{{ maximumlayoutsize() method
WITHOUT_CLASSIFICATION	{{{ minimumlayoutsize() method
WITHOUT_CLASSIFICATION	{{{ layoutcontainer() method
WITHOUT_CLASSIFICATION	{{{ lay out docking areas
WITHOUT_CLASSIFICATION	{{{ lay out independent buttons
WITHOUT_CLASSIFICATION	i'm lazy
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ entry class
WITHOUT_CLASSIFICATION	{{{ lay out independent buttons
WITHOUT_CLASSIFICATION	{{{ lay out dependent buttons
WITHOUT_CLASSIFICATION	{{{ lay out docking areas
WITHOUT_CLASSIFICATION	{{{ position tool bars if they are managed by us
WITHOUT_CLASSIFICATION	{{{ position center (edit pane or split pane)
WITHOUT_CLASSIFICATION	{{{ adjustdockingareastofit() method
WITHOUT_CLASSIFICATION	{{{ getlayoutalignmentx() method
WITHOUT_CLASSIFICATION	{{{ getlayoutalignmenty() method
WITHOUT_CLASSIFICATION	{{{ invalidatelayout() method
WITHOUT_CLASSIFICATION	only set if open
WITHOUT_CLASSIFICATION	only for docked
WITHOUT_CLASSIFICATION	{{{ entry constructor
WITHOUT_CLASSIFICATION	{{{ entry constructor
WITHOUT_CLASSIFICATION	get the title here not in the factory constructor since the factory might be created before a plugin's props are loaded
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ getshortcut() method
WITHOUT_CLASSIFICATION	{{{ actionperformed() method
WITHOUT_CLASSIFICATION	{{{ processkeyevent() method
WITHOUT_CLASSIFICATION	{{{ processkeyevent() method
WITHOUT_CLASSIFICATION	{{{ isok() method
WITHOUT_CLASSIFICATION	{{{ actionhandler class
WITHOUT_CLASSIFICATION	{{{ ismanagingfocus() method
WITHOUT_CLASSIFICATION	{{{ getfocustraversalkeysenabled() method
WITHOUT_CLASSIFICATION	{{{ getfocustraversalkeysenabled() method
WITHOUT_CLASSIFICATION	eg trying to bind c+n c+p if c+n already bound
WITHOUT_CLASSIFICATION	{{{ grabkeydialog constructor
WITHOUT_CLASSIFICATION	{{{ grabkeydialog constructor
WITHOUT_CLASSIFICATION	{{{ instance variables this is a bad hack
WITHOUT_CLASSIFICATION	show "remove" button
WITHOUT_CLASSIFICATION	create a panel with a boxlayout. can't use box here because box doesn't have setborder().
WITHOUT_CLASSIFICATION	{{{ updateassignedto() method
WITHOUT_CLASSIFICATION	{{{ getsymbolicname() method
WITHOUT_CLASSIFICATION	create a temporary (synthetic) prefix keybinding that won't be saved
WITHOUT_CLASSIFICATION	{{{ getkeybinding() method
WITHOUT_CLASSIFICATION	{{{ inputpane class
WITHOUT_CLASSIFICATION	eg trying to bind c+e if c+e is a prefix
WITHOUT_CLASSIFICATION	ask whether to remove the old shortcut
WITHOUT_CLASSIFICATION	{{{ keybinding class
WITHOUT_CLASSIFICATION	we don't need two identical shortcuts
WITHOUT_CLASSIFICATION	{{{ canclose() method
WITHOUT_CLASSIFICATION	check whether the other shortcut is the alt. shortcut
WITHOUT_CLASSIFICATION	check whether this shortcut already exists
WITHOUT_CLASSIFICATION	check whether shortcut is a prefix to others
WITHOUT_CLASSIFICATION	can't override prefix shortcuts
WITHOUT_CLASSIFICATION	ask whether to override that other shortcut
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	pass 1 compute preferred row heights / column widths
WITHOUT_CLASSIFICATION	pass 2 redistribute free space
WITHOUT_CLASSIFICATION	pass 3 layout components
WITHOUT_CLASSIFICATION	synchronized
WITHOUT_CLASSIFICATION	{{{ dispose() method
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	{{{ protected members
WITHOUT_CLASSIFICATION	{{{ addoptiongroup() method
WITHOUT_CLASSIFICATION	{{{ addoptionpane() method
WITHOUT_CLASSIFICATION	{{{ actionperformed() method
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ cancel() method
WITHOUT_CLASSIFICATION	{{{ valuechanged() method
WITHOUT_CLASSIFICATION	in case saved geometry is too small
WITHOUT_CLASSIFICATION	{{{ optionsdialog constructor
WITHOUT_CLASSIFICATION	{{{ optionsdialog constructor
WITHOUT_CLASSIFICATION	save settings to disk
WITHOUT_CLASSIFICATION	this will fire the properties_changed event
WITHOUT_CLASSIFICATION	register the options dialog as a treeselectionlistener. this is done before the initial selection to ensure that the first selected optionpane is displayed on startup.
WITHOUT_CLASSIFICATION	get rid of this dialog if necessary
WITHOUT_CLASSIFICATION	{{{ updatesize() method
WITHOUT_CLASSIFICATION	{{{ optiontreemodel class
WITHOUT_CLASSIFICATION	{{{ selectpane() method
WITHOUT_CLASSIFICATION	{{{ selectpane() method
WITHOUT_CLASSIFICATION	{{{ panenamerenderer class
WITHOUT_CLASSIFICATION	this model may not be changed by the tablecelleditor
WITHOUT_CLASSIFICATION	{{{ bufferoptions constructor
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	{{{ actionperformed() method
WITHOUT_CLASSIFICATION	{{{ actionhandler class
WITHOUT_CLASSIFICATION	{{{ actionhandler class
WITHOUT_CLASSIFICATION	{{{ paintcomponent() method
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ cancel() method
WITHOUT_CLASSIFICATION	{{{ line separator
WITHOUT_CLASSIFICATION	returns false if no such pane exists calling with null param selects first option pane found
WITHOUT_CLASSIFICATION	setfont(new font("dialog"font.bold10))
WITHOUT_CLASSIFICATION	wait for it to be painted to ensure progress is updated continuously
WITHOUT_CLASSIFICATION	{{{ max line length
WITHOUT_CLASSIFICATION	{{{ encoding
WITHOUT_CLASSIFICATION	{{{ gzipped setting
WITHOUT_CLASSIFICATION	{{{ tab size
WITHOUT_CLASSIFICATION	{{{ edit mode
WITHOUT_CLASSIFICATION	{{{ fontselector constructor
WITHOUT_CLASSIFICATION	{{{ fold mode
WITHOUT_CLASSIFICATION	{{{ indent size
WITHOUT_CLASSIFICATION	{{{ wrap mode
WITHOUT_CLASSIFICATION	{{{ fontselector constructor
WITHOUT_CLASSIFICATION	{{{ soft tabs
WITHOUT_CLASSIFICATION	{{{ fontselectordialog class
WITHOUT_CLASSIFICATION	{{{ buttons
WITHOUT_CLASSIFICATION	{{{ isantialiasenabled() method
WITHOUT_CLASSIFICATION	{{{ fontselectordialog constructor
WITHOUT_CLASSIFICATION	{{{ setantialiasenabled() method
WITHOUT_CLASSIFICATION	{{{ setantialiasenabled() method
WITHOUT_CLASSIFICATION	{{{ fontselectordialog constructor
WITHOUT_CLASSIFICATION	{{{ updatetext() method
WITHOUT_CLASSIFICATION	{{{ fontselectordialog constructor
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ actionhandler class
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ cancel() method
WITHOUT_CLASSIFICATION	{{{ listhandler class
WITHOUT_CLASSIFICATION	{{{ updatepreview() method
WITHOUT_CLASSIFICATION	if the buffer count becomes 0 then it is guaranteed to become 1 very soon so don't do anything in that case.
WITHOUT_CLASSIFICATION	{{{ fontselectordialog constructor
WITHOUT_CLASSIFICATION	fonts = gettoolkit().getfontlist()
WITHOUT_CLASSIFICATION	{{{ getselectedfont() method
WITHOUT_CLASSIFICATION	for space or s+space we pass the key typed since international keyboards sometimes produce a key_pressed space but not a key_typed space eg if you have to do a "<space> to insert ".
WITHOUT_CLASSIFICATION	log.log(log.errorthis"using deprecated toolkit.getfontlist()")
WITHOUT_CLASSIFICATION	{{{ getfontlist() method
WITHOUT_CLASSIFICATION	{{{ addtranslation() method
WITHOUT_CLASSIFICATION	{{{ createtextfieldandlistpanel() method
WITHOUT_CLASSIFICATION	on macos a+ can be user input
WITHOUT_CLASSIFICATION	{{{ translatekeyevent() method
WITHOUT_CLASSIFICATION	on macos a+ can be user input
WITHOUT_CLASSIFICATION	{{{ getsymbolicmodifiername() method
WITHOUT_CLASSIFICATION	{{{ parsekey() method
WITHOUT_CLASSIFICATION	{{{ setmodifiermapping() method
WITHOUT_CLASSIFICATION	{{{ package-private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	{{{ inner classes
WITHOUT_CLASSIFICATION	{{{ remove() method
WITHOUT_CLASSIFICATION	{{{ actionhandler class
WITHOUT_CLASSIFICATION	m+ discarded by key event workaround!
WITHOUT_CLASSIFICATION	== c+
WITHOUT_CLASSIFICATION	== a+
WITHOUT_CLASSIFICATION	== m+
WITHOUT_CLASSIFICATION	{{{ dockablewindowcompare class
WITHOUT_CLASSIFICATION	{{{ register() method
WITHOUT_CLASSIFICATION	== s+
WITHOUT_CLASSIFICATION	removing last component so remove border
WITHOUT_CLASSIFICATION	{{{ key class
WITHOUT_CLASSIFICATION	{{{ create button
WITHOUT_CLASSIFICATION	{{{ panelwindowcontainer constructor
WITHOUT_CLASSIFICATION	{{{ setdimension() method
WITHOUT_CLASSIFICATION	{{{ button box setup
WITHOUT_CLASSIFICATION	{{{ isvisible() method
WITHOUT_CLASSIFICATION	{{{ unregister() method
WITHOUT_CLASSIFICATION	{{{ showmostrecent() method
WITHOUT_CLASSIFICATION	{{{ getcurrent() method
WITHOUT_CLASSIFICATION	{{{ show() method
WITHOUT_CLASSIFICATION	{{{ sortdockables() method
WITHOUT_CLASSIFICATION	{{{ getdimension() method
WITHOUT_CLASSIFICATION	{{{ menumousehandler class
WITHOUT_CLASSIFICATION	{{{ getdockables() method
WITHOUT_CLASSIFICATION	{{{ getwrappeddimension() method
WITHOUT_CLASSIFICATION	remember the most recent dockable
WITHOUT_CLASSIFICATION	{{{ dockborder class
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ getminimumsize() method
WITHOUT_CLASSIFICATION	{{{ paintborder() method
WITHOUT_CLASSIFICATION	{{{ getborderinsets() method
WITHOUT_CLASSIFICATION	{{{ isborderopaque() method
WITHOUT_CLASSIFICATION	{{{ getpreferredsize() method
WITHOUT_CLASSIFICATION	{{{ preferredlayoutsize() method
WITHOUT_CLASSIFICATION	{{{ minimumlayoutsize() method
WITHOUT_CLASSIFICATION	{{{ layoutcontainer() method
WITHOUT_CLASSIFICATION	{{{ getwrappeddimension() method
WITHOUT_CLASSIFICATION	{{{ removelayoutcomponent() method }}}
WITHOUT_CLASSIFICATION	{{{ dockborder constructor
WITHOUT_CLASSIFICATION	{{{ rotatedtexticon class
WITHOUT_CLASSIFICATION	{{{ painthorizborder() method
WITHOUT_CLASSIFICATION	{{{ geticonheight() method
WITHOUT_CLASSIFICATION	{{{ paintvertborder() method
WITHOUT_CLASSIFICATION	{{{ rotatedtexticon constructor
WITHOUT_CLASSIFICATION	{{{ updatecolors() method
WITHOUT_CLASSIFICATION	}}} {{{ counterclockwise rotation
WITHOUT_CLASSIFICATION	height = (int)glyphs.getlogicalbounds().getheight()
WITHOUT_CLASSIFICATION	{{{ painticon() method
WITHOUT_CLASSIFICATION	{{{ geticonwidth() method
WITHOUT_CLASSIFICATION	{{{ dockablepanel constructor
WITHOUT_CLASSIFICATION	{{{ no rotation
WITHOUT_CLASSIFICATION	{{{ buttonlayout class
WITHOUT_CLASSIFICATION	}}} {{{ clockwise rotation
WITHOUT_CLASSIFICATION	nothing 'cept close box
WITHOUT_CLASSIFICATION	{{{ addlayoutcomponent() method }}}
WITHOUT_CLASSIFICATION	{{{ setbounds() method
WITHOUT_CLASSIFICATION	{{{ getwindowcontainer() method
WITHOUT_CLASSIFICATION	{{{ dockablepanel class
WITHOUT_CLASSIFICATION	{{{ resizemousehandler class
WITHOUT_CLASSIFICATION	{{{ showdockable() method
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ handlemessage() method
WITHOUT_CLASSIFICATION	}}} }}} }}}
WITHOUT_CLASSIFICATION	{{{ mousepressed() method
WITHOUT_CLASSIFICATION	{{{ mousereleased() method
WITHOUT_CLASSIFICATION	{{{ mousemoved() method
WITHOUT_CLASSIFICATION	{{{ mousedragged() method
WITHOUT_CLASSIFICATION	collapsed
WITHOUT_CLASSIFICATION	{{{ top
WITHOUT_CLASSIFICATION	{{{ top
WITHOUT_CLASSIFICATION	}}} {{{ left
WITHOUT_CLASSIFICATION	}}} {{{ left
WITHOUT_CLASSIFICATION	}}} {{{ bottom
WITHOUT_CLASSIFICATION	}}} {{{ bottom
WITHOUT_CLASSIFICATION	}}} {{{ right
WITHOUT_CLASSIFICATION	}}} {{{ right
WITHOUT_CLASSIFICATION	can't happen?
WITHOUT_CLASSIFICATION	{{{ mouseexited() method
WITHOUT_CLASSIFICATION	{{{ getcursor() method
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ dispose() method
WITHOUT_CLASSIFICATION	{{{ getdockablewindowmanager() method
WITHOUT_CLASSIFICATION	{{{ getminimumsize() method
WITHOUT_CLASSIFICATION	{{{ remove() method
WITHOUT_CLASSIFICATION	{{{ mousehandler class
WITHOUT_CLASSIFICATION	{{{ register() method
WITHOUT_CLASSIFICATION	{{{ unregister() method
WITHOUT_CLASSIFICATION	{{{ show() method
WITHOUT_CLASSIFICATION	{{{ isvisible() method
WITHOUT_CLASSIFICATION	{{{ floatingwindowcontainer constructor
WITHOUT_CLASSIFICATION	{{{ logviewer constructor
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ addkeybinding() method
WITHOUT_CLASSIFICATION	{{{ actionhandler class
WITHOUT_CLASSIFICATION	{{{ actionhandler class
WITHOUT_CLASSIFICATION	{{{ removenotify() method
WITHOUT_CLASSIFICATION	{{{ keyhandler class
WITHOUT_CLASSIFICATION	{{{ focusondefaultcomponent() method
WITHOUT_CLASSIFICATION	{{{ addnotify() method
WITHOUT_CLASSIFICATION	{{{ mousehandler class
WITHOUT_CLASSIFICATION	{{{ getabbrev() method
WITHOUT_CLASSIFICATION	{{{ getexpansion() method
WITHOUT_CLASSIFICATION	{{{ listhandler class
WITHOUT_CLASSIFICATION	{{{ propertieschanged() method
WITHOUT_CLASSIFICATION	{{{ addkeybinding() method
WITHOUT_CLASSIFICATION	{{{ removekeybinding() method
WITHOUT_CLASSIFICATION	{{{ checkforexistingabbrev() method
WITHOUT_CLASSIFICATION	{{{ loglist class
WITHOUT_CLASSIFICATION	{{{ setenabled() method
WITHOUT_CLASSIFICATION	{{{ rolloverbutton constructor
WITHOUT_CLASSIFICATION	{{{ rolloverbutton constructor
WITHOUT_CLASSIFICATION	{{{ updateui() method
WITHOUT_CLASSIFICATION	{{{ setborderpainted() method
WITHOUT_CLASSIFICATION	{{{ defaultinputhandler constructor
WITHOUT_CLASSIFICATION	{{{ isopaque() method
WITHOUT_CLASSIFICATION	{{{ revalidate() method
WITHOUT_CLASSIFICATION	{{{ defaultinputhandler constructor
WITHOUT_CLASSIFICATION	{{{ paint() method
WITHOUT_CLASSIFICATION	{{{ editabbrevdialog constructor
WITHOUT_CLASSIFICATION	{{{ editabbrevdialog constructor
WITHOUT_CLASSIFICATION	user asks to remove non-existent
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	{{{ getname() method
WITHOUT_CLASSIFICATION	to avoid data loss only do this if the above completed successfully
WITHOUT_CLASSIFICATION	{{{ removeallkeybindings() method
WITHOUT_CLASSIFICATION	{{{ addtoolbar() method
WITHOUT_CLASSIFICATION	{{{ removetoolbar() method
WITHOUT_CLASSIFICATION	{{{ clear() method
WITHOUT_CLASSIFICATION	{{{ propertieschanged() method
WITHOUT_CLASSIFICATION	{{{ getmodel() method
WITHOUT_CLASSIFICATION	case keyevent.vk_separator
WITHOUT_CLASSIFICATION	{{{ isprefixactive() method
WITHOUT_CLASSIFICATION	{{{ handlekey() method
WITHOUT_CLASSIFICATION	{{{ getkeybinding() method
WITHOUT_CLASSIFICATION	{{{ getsymbolicmodifiername() method
WITHOUT_CLASSIFICATION	{{{ _addkeybinding() method
WITHOUT_CLASSIFICATION	don't beep if the user presses some key we don't know about unless a prefix is active. otherwise it will beep when caps lock is pressed etc.
WITHOUT_CLASSIFICATION	{{{ savehistory() method
WITHOUT_CLASSIFICATION	f10 should be passed on but c+e f10 shouldn't
WITHOUT_CLASSIFICATION	{{{ getsize() method
WITHOUT_CLASSIFICATION	{{{ parsekeystroke() method
WITHOUT_CLASSIFICATION	{{{ historymodel constructor
WITHOUT_CLASSIFICATION	stores prefix name in bindings hashtable
WITHOUT_CLASSIFICATION	{{{ setcurrentbindings() method
WITHOUT_CLASSIFICATION	{{{ loadhistory() method
WITHOUT_CLASSIFICATION	{{{ additem() method
WITHOUT_CLASSIFICATION	{{{ toolbarmanager constructor
WITHOUT_CLASSIFICATION	{{{ getitem() method
WITHOUT_CLASSIFICATION	{{{ getelementat() method
WITHOUT_CLASSIFICATION	log.log(log.debughistorymodel.classfnf)
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ handlemessage() method
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	{{{ dispose() method
WITHOUT_CLASSIFICATION	{{{ entry class
WITHOUT_CLASSIFICATION	{{{ addtoolbar() method
WITHOUT_CLASSIFICATION	{{{ removetoolbar() method
WITHOUT_CLASSIFICATION	{{{ actionhandler class
WITHOUT_CLASSIFICATION	{{{ mousehandler class
WITHOUT_CLASSIFICATION	{{{ helpsearchpanel constructor
WITHOUT_CLASSIFICATION	see if we should place this toolbar before any others
WITHOUT_CLASSIFICATION	select the appropriate tree node.
WITHOUT_CLASSIFICATION	place the toolbar at the bottom of the group
WITHOUT_CLASSIFICATION	{{{ resulticon class
WITHOUT_CLASSIFICATION	enhanceddialog implementation
WITHOUT_CLASSIFICATION	we later use this to compute a relative ranking
WITHOUT_CLASSIFICATION	end enhanceddialog implementation
WITHOUT_CLASSIFICATION	what to do?
WITHOUT_CLASSIFICATION	{{{ resultrenderer class
WITHOUT_CLASSIFICATION	multiple files w/ word bonus
WITHOUT_CLASSIFICATION	{{{ result class
WITHOUT_CLASSIFICATION	{{{ resultcompare class
WITHOUT_CLASSIFICATION	turn the rankings into relative rankings from 1 to 4
WITHOUT_CLASSIFICATION	{{{ gotourl() method
WITHOUT_CLASSIFICATION	{{{ helpviewer constructor
WITHOUT_CLASSIFICATION	{{{ helpviewer constructor
WITHOUT_CLASSIFICATION	{{{ helpviewer constructor
WITHOUT_CLASSIFICATION	{{{ getbaseurl() method
WITHOUT_CLASSIFICATION	don't show loading msg because we won't receive a propertychanged
WITHOUT_CLASSIFICATION	{{{ queuetocreload() method
WITHOUT_CLASSIFICATION	{{{ getshorturl() method
WITHOUT_CLASSIFICATION	{{{ instance members
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getfile() method
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ load() method
WITHOUT_CLASSIFICATION	{{{ inner classes
WITHOUT_CLASSIFICATION	{{{ actionhandler class
WITHOUT_CLASSIFICATION	reset default cursor so that the hand cursor doesn't stick around
WITHOUT_CLASSIFICATION	the toc pane looks up user's guide urls relative to the doc directory
WITHOUT_CLASSIFICATION	{{{ helpindex constructor
WITHOUT_CLASSIFICATION	{{{ indexjar() method
WITHOUT_CLASSIFICATION	{{{ actionperformed() class
WITHOUT_CLASSIFICATION	{{{ helpindex constructorpublic helpindex(string filelistpath string wordindexpath){this()} }}}
WITHOUT_CLASSIFICATION	{{{ linkhandler class
WITHOUT_CLASSIFICATION	{{{ helpfile class
WITHOUT_CLASSIFICATION	{{{ hyperlinkupdate() method
WITHOUT_CLASSIFICATION	{{{ indexeditorhelp() method
WITHOUT_CLASSIFICATION	{{{ propertychangehandler class
WITHOUT_CLASSIFICATION	|| lname.endswith(".txt")
WITHOUT_CLASSIFICATION	{{{ ignoreword() method
WITHOUT_CLASSIFICATION	{{{ indexdirectory() method
WITHOUT_CLASSIFICATION	how much an occurrence in the title is worth
WITHOUT_CLASSIFICATION	{{{ indexstream() method
WITHOUT_CLASSIFICATION	{{{ indexurl() method
WITHOUT_CLASSIFICATION	{{{ lookupword() method
WITHOUT_CLASSIFICATION	{{{ addword() method
WITHOUT_CLASSIFICATION	the word
WITHOUT_CLASSIFICATION	{{{ word class
WITHOUT_CLASSIFICATION	{{{ helptocpanel constructor
WITHOUT_CLASSIFICATION	files it occurs in
WITHOUT_CLASSIFICATION	{{{ createtoc() method
WITHOUT_CLASSIFICATION	{{{ helpnode class
WITHOUT_CLASSIFICATION	{{{ selectnode() method
WITHOUT_CLASSIFICATION	so that helpviewer constructor doesn't try to expand
WITHOUT_CLASSIFICATION	{{{ createnode() method
WITHOUT_CLASSIFICATION	{{{ loadtoc() method
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ start() method
WITHOUT_CLASSIFICATION	{{{ attribute() method
WITHOUT_CLASSIFICATION	{{{ chardata() method
WITHOUT_CLASSIFICATION	{{{ startelement() method
WITHOUT_CLASSIFICATION	{{{ endelement() method
WITHOUT_CLASSIFICATION	{{{ gettooltiplocation() method
WITHOUT_CLASSIFICATION	{{{ gettooltiptext() method
WITHOUT_CLASSIFICATION	{{{ processmouseevent() method
WITHOUT_CLASSIFICATION	{{{ tochandler constructor
WITHOUT_CLASSIFICATION	{{{ private members used to mark words to ignore (see constructor for the list)
WITHOUT_CLASSIFICATION	{{{ tochandler class
WITHOUT_CLASSIFICATION	{{{ helpnode constructor
WITHOUT_CLASSIFICATION	tooltipmanager ttm = tooltipmanager.sharedinstance()
WITHOUT_CLASSIFICATION	{{{ toctree constructor
WITHOUT_CLASSIFICATION	{{{ toctree class
WITHOUT_CLASSIFICATION	case mouseevent.mouse_enteredtooltipinitialdelay = ttm.getinitialdelay()tooltipreshowdelay = ttm.getreshowdelay()ttm.setinitialdelay(200)ttm.setreshowdelay(0)super.processmouseevent(evt)breakcase mouseevent.mouse_exitedttm.setinitialdelay(tooltipinitialdelay)ttm.setreshowdelay(tooltipreshowdelay)super.processmouseevent(evt)break
WITHOUT_CLASSIFICATION	{{{ cellrectisvisible() method
WITHOUT_CLASSIFICATION	{{{ toccellrenderer class
WITHOUT_CLASSIFICATION	{{{ plugincompare class
WITHOUT_CLASSIFICATION	{{{ vfs methods
WITHOUT_CLASSIFICATION	{{{ getfilevfs() method
WITHOUT_CLASSIFICATION	{{{ geturlvfs() method
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ runinawtthread() method
WITHOUT_CLASSIFICATION	{{{ runinworkthread() method
WITHOUT_CLASSIFICATION	{{{ error() method
WITHOUT_CLASSIFICATION	{{{ error() method
WITHOUT_CLASSIFICATION	{{{ static variables
WITHOUT_CLASSIFICATION	{{{ class initializer
WITHOUT_CLASSIFICATION	in new api protocol always equals name
WITHOUT_CLASSIFICATION	{{{ getvfsbyname() method
WITHOUT_CLASSIFICATION	{{{ getfilesystems() method
WITHOUT_CLASSIFICATION	{{{ waitforrequests() method
WITHOUT_CLASSIFICATION	{{{ getvfsforprotocol() method
WITHOUT_CLASSIFICATION	{{{ getvfss() method
WITHOUT_CLASSIFICATION	{{{ getvfsforpath() method
WITHOUT_CLASSIFICATION	we were the first to add an update add update sending runnable to awt thread
WITHOUT_CLASSIFICATION	{{{ registervfs() method
WITHOUT_CLASSIFICATION	{{{ erroroccurred() method
WITHOUT_CLASSIFICATION	{{{ i/o request methods
WITHOUT_CLASSIFICATION	{{{ sendvfsupdate() method
WITHOUT_CLASSIFICATION	{{{ getiothreadpool() method
WITHOUT_CLASSIFICATION	the vfs browser has what you might call a design flaw it doesn't update properly unless the vfs update for a parent arrives before any updates for the children. sorting the list alphanumerically guarantees this.
WITHOUT_CLASSIFICATION	{{{ getrequestcount() method
WITHOUT_CLASSIFICATION	don't send two updates for the same path
WITHOUT_CLASSIFICATION	if we are already in the awt thread take a shortcut
WITHOUT_CLASSIFICATION	{{{ sendvfsupdatessafely class
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	{{{ constructpath() method
WITHOUT_CLASSIFICATION	{{{ constructpath() method
WITHOUT_CLASSIFICATION	{{{ getparentofpath() method
WITHOUT_CLASSIFICATION	{{{ insert() method
WITHOUT_CLASSIFICATION	{{{ _createoutputstream() method
WITHOUT_CLASSIFICATION	{{{ urlvfs constructor
WITHOUT_CLASSIFICATION	{{{ _canonpath() method
WITHOUT_CLASSIFICATION	{{{ _createinputstream() method
WITHOUT_CLASSIFICATION	check for backup.directory and create that directory if it doesn't exist
WITHOUT_CLASSIFICATION	{{{ filevfs method
WITHOUT_CLASSIFICATION	{{{ localdirectoryentry class
WITHOUT_CLASSIFICATION	{{{ getfileseparator() method
WITHOUT_CLASSIFICATION	{{{ _getdirectoryentry() method
WITHOUT_CLASSIFICATION	{{{ check if file is valid
WITHOUT_CLASSIFICATION	{{{ _rename() method
WITHOUT_CLASSIFICATION	use system default short format
WITHOUT_CLASSIFICATION	{{{ _listdirectory() method
WITHOUT_CLASSIFICATION	{{{ _delete() method
WITHOUT_CLASSIFICATION	{{{ _backup() method
WITHOUT_CLASSIFICATION	do some platforms throw exceptions if the file does not exist when we ask for the canonical path?
WITHOUT_CLASSIFICATION	this is needed because on os x renaming to a non-existent directory causes problems
WITHOUT_CLASSIFICATION	fetch properties
WITHOUT_CLASSIFICATION	{{{ _mkdir() method
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ getparentofpath() method
WITHOUT_CLASSIFICATION	{{{ getparentofpath() method
WITHOUT_CLASSIFICATION	{{{ _createinputstream() method
WITHOUT_CLASSIFICATION	{{{ _createoutputstream() method
WITHOUT_CLASSIFICATION	{{{ _listdirectory() method
WITHOUT_CLASSIFICATION	{{{ _listdirectory() method
WITHOUT_CLASSIFICATION	{{{ _getdirectoryentry() method
WITHOUT_CLASSIFICATION	{{{ _getdirectoryentry() method
WITHOUT_CLASSIFICATION	{{{ _delete() method
WITHOUT_CLASSIFICATION	{{{ setpermissions() method
WITHOUT_CLASSIFICATION	{{{ _savecomplete() method
WITHOUT_CLASSIFICATION	{{{ addtofavorites() method
WITHOUT_CLASSIFICATION	{{{ permission preservation code
WITHOUT_CLASSIFICATION	{{{ getpermissions() method
WITHOUT_CLASSIFICATION	{{{ favoritesvfs constructor
WITHOUT_CLASSIFICATION	{{{ savefavorites() method
WITHOUT_CLASSIFICATION	{{{ loadfavorites() method
WITHOUT_CLASSIFICATION	don't want it to show "0 bytes" for size etc.
WITHOUT_CLASSIFICATION	{{{ listroots() method
WITHOUT_CLASSIFICATION	{{{ getfavorites() method
WITHOUT_CLASSIFICATION	{{{ filerootsvfs constructor
WITHOUT_CLASSIFICATION	{{{ favoritesentry class
WITHOUT_CLASSIFICATION	jdk 1.4 adds methods to obtain a drive letter label and list the desktop on windows
WITHOUT_CLASSIFICATION	make sure people don't do stupid things like putting files in /volumes
WITHOUT_CLASSIFICATION	{{{ getname() method
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	{{{ load() method
WITHOUT_CLASSIFICATION	{{{ constructpath() method
WITHOUT_CLASSIFICATION	{{{ getfilename() method
WITHOUT_CLASSIFICATION	{{{ getparentofpath() method
WITHOUT_CLASSIFICATION	{{{ insert() method
WITHOUT_CLASSIFICATION	{{{ reloaddirectory() method
WITHOUT_CLASSIFICATION	{{{ getfileseparator() method
WITHOUT_CLASSIFICATION	{{{ _canonpath() method
WITHOUT_CLASSIFICATION	{{{ _listdirectory() method
WITHOUT_CLASSIFICATION	{{{ _listdirectory() method
WITHOUT_CLASSIFICATION	{{{ _getdirectoryentry() method
WITHOUT_CLASSIFICATION	don't want it to show "0 bytes" for size etc.
WITHOUT_CLASSIFICATION	{{{ showbrowsedialog() method
WITHOUT_CLASSIFICATION	{{{ rootsentry class
WITHOUT_CLASSIFICATION	so an empty cd drive is not reported as a file
WITHOUT_CLASSIFICATION	remind calling isdirectory() on a floppy drive displays stupid i/o error dialog box on windows
WITHOUT_CLASSIFICATION	reasonable defaults (?)
WITHOUT_CLASSIFICATION	to prevent windows looking for a disk in the floppy drive
WITHOUT_CLASSIFICATION	{{{ capabilities
WITHOUT_CLASSIFICATION	this ensures that getfileparent("protocol") for example is "protocol" and not "".
WITHOUT_CLASSIFICATION	{{{ extended attributes
WITHOUT_CLASSIFICATION	{{{ getcapabilities() method
WITHOUT_CLASSIFICATION	{{{ vfs constructor
WITHOUT_CLASSIFICATION	{{{ vfs constructor
WITHOUT_CLASSIFICATION	{{{ vfs constructor
WITHOUT_CLASSIFICATION	don't want getfilename("roots") to return ""
WITHOUT_CLASSIFICATION	{{{ getextendedattributes() method
WITHOUT_CLASSIFICATION	this makes hypersearch much faster
WITHOUT_CLASSIFICATION	{{{ gettwostagesavename() method
WITHOUT_CLASSIFICATION	ignore last character of path to properly handle paths like /foo/bar/
WITHOUT_CLASSIFICATION	when doing a 'save as' the path to save to (path) will not be the same as the buffer's previous path (buffer.getpath()). in that case we want to create a backup of the new path even if the old path was backed up as well (backed_up property set)
WITHOUT_CLASSIFICATION	{{{ createvfssession() method
WITHOUT_CLASSIFICATION	a method name that starts with _ requires a session object
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	{{{ updateeverytime() method
WITHOUT_CLASSIFICATION	{{{ update() method
WITHOUT_CLASSIFICATION	{{{ class initializer
WITHOUT_CLASSIFICATION	{{{ getextendedattribute() method
WITHOUT_CLASSIFICATION	{{{ _createinputstream() method
WITHOUT_CLASSIFICATION	{{{ _createoutputstream() method
WITHOUT_CLASSIFICATION	{{{ _listdirectory() method
WITHOUT_CLASSIFICATION	{{{ _delete() method
WITHOUT_CLASSIFICATION	{{{ _rename() method
WITHOUT_CLASSIFICATION	{{{ _mkdir() method
WITHOUT_CLASSIFICATION	{{{ _backup() method
WITHOUT_CLASSIFICATION	{{{ _savecomplete() method
WITHOUT_CLASSIFICATION	{{{ _endvfssession() method
WITHOUT_CLASSIFICATION	{{{ directoryentry class
WITHOUT_CLASSIFICATION	{{{ file types
WITHOUT_CLASSIFICATION	{{{ getdefaultcolorfor() method
WITHOUT_CLASSIFICATION	{{{ directoryentry constructor
WITHOUT_CLASSIFICATION	{{{ directoryentry constructor
WITHOUT_CLASSIFICATION	{{{ colorentry class
WITHOUT_CLASSIFICATION	maintain backwards compatibility
WITHOUT_CLASSIFICATION	{{{ directoryentrycompare class
WITHOUT_CLASSIFICATION	{{{ getcolor() method
WITHOUT_CLASSIFICATION	skip autosave files
WITHOUT_CLASSIFICATION	{{{ directoryprovider constructor
WITHOUT_CLASSIFICATION	resolve symlinks to avoid loops
WITHOUT_CLASSIFICATION	{{{ loadcolors() method
WITHOUT_CLASSIFICATION	{{{ actionlisteners
WITHOUT_CLASSIFICATION	skip backup files
WITHOUT_CLASSIFICATION	for filtering out backups
WITHOUT_CLASSIFICATION	skip marker files
WITHOUT_CLASSIFICATION	current.addseparator()
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	{{{ updateeverytime() method
WITHOUT_CLASSIFICATION	{{{ updateeverytime() method
WITHOUT_CLASSIFICATION	{{{ updateeverytime() method
WITHOUT_CLASSIFICATION	{{{ update() method
WITHOUT_CLASSIFICATION	{{{ update() method
WITHOUT_CLASSIFICATION	{{{ update() method
WITHOUT_CLASSIFICATION	{{{ getshortcut() method
WITHOUT_CLASSIFICATION	{{{ getshortcut() method
WITHOUT_CLASSIFICATION	{{{ class initializer
WITHOUT_CLASSIFICATION	{{{ mousehandler class
WITHOUT_CLASSIFICATION	{{{ old api
WITHOUT_CLASSIFICATION	{{{ getpreferredsize() method
WITHOUT_CLASSIFICATION	{{{ getpreferredsize() method
WITHOUT_CLASSIFICATION	{{{ getpreferredsize() method
WITHOUT_CLASSIFICATION	{{{ paint() method
WITHOUT_CLASSIFICATION	{{{ paint() method
WITHOUT_CLASSIFICATION	{{{ actionlisteners
WITHOUT_CLASSIFICATION	current.addseparator()
WITHOUT_CLASSIFICATION	we build a set of lists each list contains plugin menu items that begin with a given letter.
WITHOUT_CLASSIFICATION	{{{ addtolettermap() method
WITHOUT_CLASSIFICATION	sort each letter
WITHOUT_CLASSIFICATION	if less than 20 items put them directly in the menu
WITHOUT_CLASSIFICATION	{{{ markersmenuitem class
WITHOUT_CLASSIFICATION	collect blocks of up to maxitems of consecutive letters
WITHOUT_CLASSIFICATION	{{{ markersmenuitem constructor
WITHOUT_CLASSIFICATION	{{{ enhancedmenuitem constructor
WITHOUT_CLASSIFICATION	{{{ enhancedcheckboxmenuitem constructor
WITHOUT_CLASSIFICATION	{{{ model class
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ package-private members
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ menuselected() method
WITHOUT_CLASSIFICATION	{{{ updateeverytime() method
WITHOUT_CLASSIFICATION	{{{ updateeverytime() method
WITHOUT_CLASSIFICATION	{{{ updateeverytime() method
WITHOUT_CLASSIFICATION	{{{ update() method
WITHOUT_CLASSIFICATION	{{{ update() method
WITHOUT_CLASSIFICATION	{{{ update() method
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	{{{ getshortcut() method
WITHOUT_CLASSIFICATION	{{{ class initializer
WITHOUT_CLASSIFICATION	{{{ getview() method
WITHOUT_CLASSIFICATION	{{{ protected members
WITHOUT_CLASSIFICATION	{{{ finalize() method
WITHOUT_CLASSIFICATION	{{{ mousehandler class
WITHOUT_CLASSIFICATION	{{{ paint() method
WITHOUT_CLASSIFICATION	{{{ viewupdate constructor
WITHOUT_CLASSIFICATION	{{{ enhancedmenu constructor
WITHOUT_CLASSIFICATION	{{{ createmacrosmenu() method
WITHOUT_CLASSIFICATION	{{{ enhancedmenu constructor
WITHOUT_CLASSIFICATION	{{{ actionlistener
WITHOUT_CLASSIFICATION	{{{ actionlistener
WITHOUT_CLASSIFICATION	{{{ enhancedmenu constructor
WITHOUT_CLASSIFICATION	{{{ mouselistener
WITHOUT_CLASSIFICATION	{{{ mouselistener
WITHOUT_CLASSIFICATION	{{{ editbusstub class
WITHOUT_CLASSIFICATION	{{{ getwhat() method
WITHOUT_CLASSIFICATION	enhancedmenu has a reference to editbusstub but not the other way around. so when the enhancedmenu is being garbage collected its finalize() method removes the editbusstub from the edit bus.
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	{{{ getview() method
WITHOUT_CLASSIFICATION	{{{ protected members
WITHOUT_CLASSIFICATION	{{{ getpluginjar() method
WITHOUT_CLASSIFICATION	{{{ getbuffer() method
WITHOUT_CLASSIFICATION	{{{ setselectedrow() method
WITHOUT_CLASSIFICATION	{{{ updateenabled() method
WITHOUT_CLASSIFICATION	{{{ getdockable() method
WITHOUT_CLASSIFICATION	{{{ getwhat() method
WITHOUT_CLASSIFICATION	{{{ getwhat() method
WITHOUT_CLASSIFICATION	{{{ getwhat() method
WITHOUT_CLASSIFICATION	{{{ getmenuname() method
WITHOUT_CLASSIFICATION	{{{ message types
WITHOUT_CLASSIFICATION	{{{ message types
WITHOUT_CLASSIFICATION	{{{ message types
WITHOUT_CLASSIFICATION	{{{ dockablewindowupdate constructor
WITHOUT_CLASSIFICATION	{{{ bufferupdate constructor
WITHOUT_CLASSIFICATION	{{{ pluginupdate constructor
WITHOUT_CLASSIFICATION	{{{ isexiting() method
WITHOUT_CLASSIFICATION	{{{ browsercolorsoptionpane constructor
WITHOUT_CLASSIFICATION	{{{ dynamicmenuchanged constructor
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	{{{ entry class
WITHOUT_CLASSIFICATION	{{{ remove() method
WITHOUT_CLASSIFICATION	{{{ remove() method
WITHOUT_CLASSIFICATION	{{{ actionhandler class
WITHOUT_CLASSIFICATION	{{{ gettablecellrenderercomponent() method
WITHOUT_CLASSIFICATION	{{{ getcolumncount() method
WITHOUT_CLASSIFICATION	{{{ getcolumncount() method
WITHOUT_CLASSIFICATION	{{{ getrowcount() method
WITHOUT_CLASSIFICATION	{{{ getrowcount() method
WITHOUT_CLASSIFICATION	{{{ getcolumnname() method
WITHOUT_CLASSIFICATION	{{{ getcolumnclass() method
WITHOUT_CLASSIFICATION	{{{ getvalueat() method
WITHOUT_CLASSIFICATION	{{{ getvalueat() method
WITHOUT_CLASSIFICATION	{{{ mousehandler class
WITHOUT_CLASSIFICATION	{{{ add() method
WITHOUT_CLASSIFICATION	{{{ add() method
WITHOUT_CLASSIFICATION	{{{ selectionhandler class
WITHOUT_CLASSIFICATION	{{{ iscelleditable() method
WITHOUT_CLASSIFICATION	{{{ browsercolorsmodel class
WITHOUT_CLASSIFICATION	{{{ browsercolorsmodel constructor
WITHOUT_CLASSIFICATION	{{{ browsercolorsmodel constructor
WITHOUT_CLASSIFICATION	{{{ setvalueat() method
WITHOUT_CLASSIFICATION	{{{ moveup() method
WITHOUT_CLASSIFICATION	{{{ moveup() method
WITHOUT_CLASSIFICATION	{{{ movedown() method
WITHOUT_CLASSIFICATION	{{{ movedown() method
WITHOUT_CLASSIFICATION	{{{ colorrenderer class
WITHOUT_CLASSIFICATION	{{{ colorrenderer constructor
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	}}} }}} }}}
WITHOUT_CLASSIFICATION	{{{ entry class
WITHOUT_CLASSIFICATION	protected members
WITHOUT_CLASSIFICATION	{{{ gettablecellrenderercomponent() method
WITHOUT_CLASSIFICATION	{{{ gettablecellrenderercomponent() method
WITHOUT_CLASSIFICATION	{{{ getcolumnname() method
WITHOUT_CLASSIFICATION	{{{ getcolumnclass() method
WITHOUT_CLASSIFICATION	{{{ updateenabled() method
WITHOUT_CLASSIFICATION	{{{ iscelleditable() method
WITHOUT_CLASSIFICATION	{{{ setvalueat() method
WITHOUT_CLASSIFICATION	{{{ colorrenderer class
WITHOUT_CLASSIFICATION	{{{ colorrenderer constructor
WITHOUT_CLASSIFICATION	{{{ colorrenderer constructor
WITHOUT_CLASSIFICATION	text color
WITHOUT_CLASSIFICATION	{{{ textareaoptionpane constructor
WITHOUT_CLASSIFICATION	multiple selection color
WITHOUT_CLASSIFICATION	font
WITHOUT_CLASSIFICATION	fractional font metrics
WITHOUT_CLASSIFICATION	background color
WITHOUT_CLASSIFICATION	line highlight
WITHOUT_CLASSIFICATION	caret color caret blink block caret
WITHOUT_CLASSIFICATION	wrap guide
WITHOUT_CLASSIFICATION	selection color
WITHOUT_CLASSIFICATION	skip certain actions this way
WITHOUT_CLASSIFICATION	structure highlight
WITHOUT_CLASSIFICATION	electric borders
WITHOUT_CLASSIFICATION	eol markers
WITHOUT_CLASSIFICATION	{{{ editingoptionpane constructor
WITHOUT_CLASSIFICATION	anti-aliasing
WITHOUT_CLASSIFICATION	redraw the whole table because a second shortcut might have changed too
WITHOUT_CLASSIFICATION	{{{ selectmode() method
WITHOUT_CLASSIFICATION	{{{ savemode() method
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	{{{ load() method
WITHOUT_CLASSIFICATION	{{{ actionhandler class
WITHOUT_CLASSIFICATION	{{{ updatebuttons() method
WITHOUT_CLASSIFICATION	{{{ pluginoptions constructor
WITHOUT_CLASSIFICATION	{{{ modeproperties class
WITHOUT_CLASSIFICATION	don't do anything if the user didn't change any settings
WITHOUT_CLASSIFICATION	{{{ modeproperties constructor
WITHOUT_CLASSIFICATION	{{{ modeproperties constructor
WITHOUT_CLASSIFICATION	{{{ pluginoptions constructor
WITHOUT_CLASSIFICATION	need to call mode.init() if the file name or first line globs change
WITHOUT_CLASSIFICATION	old api
WITHOUT_CLASSIFICATION	{{{ pluginoptions constructor
WITHOUT_CLASSIFICATION	{{{ pluginoptions constructor
WITHOUT_CLASSIFICATION	initialize the plugins branch of the options tree
WITHOUT_CLASSIFICATION	{{{ createoptiontreemodel() method
WITHOUT_CLASSIFICATION	{{{ ceate icons list
WITHOUT_CLASSIFICATION	query plugins for option panes
WITHOUT_CLASSIFICATION	{{{ nopluginspane class
WITHOUT_CLASSIFICATION	only add the plugins branch if there are optionpanes
WITHOUT_CLASSIFICATION	show toolbar
WITHOUT_CLASSIFICATION	{{{ getdefaultgroup() method
WITHOUT_CLASSIFICATION	{{{ toolbaroptionpane constructor
WITHOUT_CLASSIFICATION	{{{ create buttons
WITHOUT_CLASSIFICATION	}}} /}}}
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	protected members
WITHOUT_CLASSIFICATION	{{{ inner classes
WITHOUT_CLASSIFICATION	{{{ actionhandler class
WITHOUT_CLASSIFICATION	{{{ actionhandler class
WITHOUT_CLASSIFICATION	{{{ actionhandler class
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ cancel() method
WITHOUT_CLASSIFICATION	{{{ cancel() method
WITHOUT_CLASSIFICATION	{{{ listhandler class
WITHOUT_CLASSIFICATION	{{{ updateenabled() method
WITHOUT_CLASSIFICATION	{{{ updateenabled() method
WITHOUT_CLASSIFICATION	{{{ toolbareditdialog constructor
WITHOUT_CLASSIFICATION	{{{ buttoncompare class
WITHOUT_CLASSIFICATION	{{{ iconlistentry class
WITHOUT_CLASSIFICATION	{{{ button class
WITHOUT_CLASSIFICATION	{{{ toolbareditdialog constructor
WITHOUT_CLASSIFICATION	{{{ buttoncellrenderer class
WITHOUT_CLASSIFICATION	{{{ iconcellrenderer class
WITHOUT_CLASSIFICATION	icon selection
WITHOUT_CLASSIFICATION	{{{ toolbareditdialog class
WITHOUT_CLASSIFICATION	{{{ updatelist() method
WITHOUT_CLASSIFICATION	icon selection
WITHOUT_CLASSIFICATION	{{{ updatelist() method
WITHOUT_CLASSIFICATION	{{{ getselection() method
WITHOUT_CLASSIFICATION	{{{ getselection() method
WITHOUT_CLASSIFICATION	{{{ styleoptionpane constructor
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	start at 1 not 0 to skip token.null
WITHOUT_CLASSIFICATION	start at 1 not 0 to skip token.null
WITHOUT_CLASSIFICATION	}}} }}} }}}
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	{{{ protected members
WITHOUT_CLASSIFICATION	{{{ actionperformed() method
WITHOUT_CLASSIFICATION	{{{ gettablecellrenderercomponent() method
WITHOUT_CLASSIFICATION	{{{ getcolumncount() method
WITHOUT_CLASSIFICATION	{{{ getcolumncount() method
WITHOUT_CLASSIFICATION	{{{ getrowcount() method
WITHOUT_CLASSIFICATION	{{{ getcolumnname() method
WITHOUT_CLASSIFICATION	{{{ getvalueat() method
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ cancel() method
WITHOUT_CLASSIFICATION	{{{ mousehandler class
WITHOUT_CLASSIFICATION	{{{ setvalueat() method
WITHOUT_CLASSIFICATION	{{{ createstyletablescroller() method
WITHOUT_CLASSIFICATION	{{{ styletablemodel class
WITHOUT_CLASSIFICATION	{{{ createstyletablemodel() method
WITHOUT_CLASSIFICATION	for sorting
WITHOUT_CLASSIFICATION	{{{ styletablemodel constructor
WITHOUT_CLASSIFICATION	{{{ styletablemodel constructor
WITHOUT_CLASSIFICATION	{{{ addstylechoice() method
WITHOUT_CLASSIFICATION	{{{ stylerenderer class
WITHOUT_CLASSIFICATION	{{{ stylechoice class
WITHOUT_CLASSIFICATION	{{{ styleeditor class
WITHOUT_CLASSIFICATION	{{{ stylerenderer constructor
WITHOUT_CLASSIFICATION	{{{ styleeditor constructor
WITHOUT_CLASSIFICATION	{{{ getstyle() method
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	{{{ actionperformed() method
WITHOUT_CLASSIFICATION	{{{ gettablecellrenderercomponent() method
WITHOUT_CLASSIFICATION	{{{ gettablecellrenderercomponent() method
WITHOUT_CLASSIFICATION	{{{ getrowcount() method
WITHOUT_CLASSIFICATION	{{{ getcolumnname() method
WITHOUT_CLASSIFICATION	{{{ getvalueat() method
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ cancel() method
WITHOUT_CLASSIFICATION	{{{ setvalueat() method
WITHOUT_CLASSIFICATION	text color
WITHOUT_CLASSIFICATION	background color
WITHOUT_CLASSIFICATION	structure highlight
WITHOUT_CLASSIFICATION	{{{ addstylechoice() method
WITHOUT_CLASSIFICATION	{{{ stylechoice class
WITHOUT_CLASSIFICATION	for sorting
WITHOUT_CLASSIFICATION	for sorting
WITHOUT_CLASSIFICATION	{{{ stylerenderer class
WITHOUT_CLASSIFICATION	{{{ stylerenderer constructor
WITHOUT_CLASSIFICATION	{{{ stylerenderer constructor
WITHOUT_CLASSIFICATION	{{{ styleeditor constructor
WITHOUT_CLASSIFICATION	{{{ getstyle() method
WITHOUT_CLASSIFICATION	text font
WITHOUT_CLASSIFICATION	{{{ gutteroptionpane constructor
WITHOUT_CLASSIFICATION	line numbering
WITHOUT_CLASSIFICATION	number alignment
WITHOUT_CLASSIFICATION	border width
WITHOUT_CLASSIFICATION	marker highlight
WITHOUT_CLASSIFICATION	gutterborderwidth = new jtextfield(jedit.getproperty("view.gutter.borderwidth"))addcomponent(jedit.getproperty("options.gutter.borderwidth")gutterborderwidth)
WITHOUT_CLASSIFICATION	current line highlight
WITHOUT_CLASSIFICATION	unfocused border color
WITHOUT_CLASSIFICATION	highlight interval and color
WITHOUT_CLASSIFICATION	fold marker color
WITHOUT_CLASSIFICATION	focused border color
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	{{{ actionhandler class
WITHOUT_CLASSIFICATION	{{{ actionhandler class
WITHOUT_CLASSIFICATION	background color
WITHOUT_CLASSIFICATION	status bar visible
WITHOUT_CLASSIFICATION	{{{ statusbaroptionpane constructor
WITHOUT_CLASSIFICATION	edit mode
WITHOUT_CLASSIFICATION	wrap
WITHOUT_CLASSIFICATION	foreground color
WITHOUT_CLASSIFICATION	fold mode
WITHOUT_CLASSIFICATION	caret status
WITHOUT_CLASSIFICATION	memory status
WITHOUT_CLASSIFICATION	multi select
WITHOUT_CLASSIFICATION	encoding
WITHOUT_CLASSIFICATION	overwrite
WITHOUT_CLASSIFICATION	memory background color
WITHOUT_CLASSIFICATION	rect select
WITHOUT_CLASSIFICATION	line seperator
WITHOUT_CLASSIFICATION	{{{ mouseoptionpane constructor
WITHOUT_CLASSIFICATION	memory foreground color
WITHOUT_CLASSIFICATION	clock
WITHOUT_CLASSIFICATION	non word character selection behavior
WITHOUT_CLASSIFICATION	text drag and drop
WITHOUT_CLASSIFICATION	middle mouse button click pastes % register
WITHOUT_CLASSIFICATION	gutter mouse actions
WITHOUT_CLASSIFICATION	{{{ firewalloptionpane constructor
WITHOUT_CLASSIFICATION	checkbox
WITHOUT_CLASSIFICATION	checkbox
WITHOUT_CLASSIFICATION	proxy host
WITHOUT_CLASSIFICATION	proxy host
WITHOUT_CLASSIFICATION	proxy port
WITHOUT_CLASSIFICATION	proxy port
WITHOUT_CLASSIFICATION	proxy username
WITHOUT_CLASSIFICATION	proxy password
WITHOUT_CLASSIFICATION	no proxy for
WITHOUT_CLASSIFICATION	{{{ dockingoptionpane constructor
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	{{{ entry class
WITHOUT_CLASSIFICATION	{{{ entry class
WITHOUT_CLASSIFICATION	{{{ getcolumncount() method
WITHOUT_CLASSIFICATION	{{{ getcolumncount() method
WITHOUT_CLASSIFICATION	{{{ getrowcount() method
WITHOUT_CLASSIFICATION	{{{ getrowcount() method
WITHOUT_CLASSIFICATION	{{{ getcolumnname() method
WITHOUT_CLASSIFICATION	{{{ getcolumnname() method
WITHOUT_CLASSIFICATION	{{{ getcolumnclass() method
WITHOUT_CLASSIFICATION	{{{ getcolumnclass() method
WITHOUT_CLASSIFICATION	{{{ getvalueat() method
WITHOUT_CLASSIFICATION	{{{ getvalueat() method
WITHOUT_CLASSIFICATION	{{{ iscelleditable() method
WITHOUT_CLASSIFICATION	{{{ iscelleditable() method
WITHOUT_CLASSIFICATION	{{{ setvalueat() method
WITHOUT_CLASSIFICATION	{{{ setvalueat() method
WITHOUT_CLASSIFICATION	{{{ windowtablemodel constructor
WITHOUT_CLASSIFICATION	{{{ createwindowtablescroller() method
WITHOUT_CLASSIFICATION	{{{ windowtablemodel constructor
WITHOUT_CLASSIFICATION	{{{ createwindowmodel() method
WITHOUT_CLASSIFICATION	{{{ dockpositioncellrenderer class
WITHOUT_CLASSIFICATION	{{{ sort() method
WITHOUT_CLASSIFICATION	{{{ windowtablemodel class
WITHOUT_CLASSIFICATION	{{{ sort() method
WITHOUT_CLASSIFICATION	{{{ windowcompare class
WITHOUT_CLASSIFICATION	{{{ windowcompare class
WITHOUT_CLASSIFICATION	{{{ globaloptions constructor
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	{{{ constructor
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	{{{ actionhandler class
WITHOUT_CLASSIFICATION	{{{ updateenabled() method
WITHOUT_CLASSIFICATION	{{{ createoptiontreemodel() method
WITHOUT_CLASSIFICATION	{{{ getdefaultgroup() method
WITHOUT_CLASSIFICATION	{{{ globaloptions constructor
WITHOUT_CLASSIFICATION	{{{ globaloptions constructor
WITHOUT_CLASSIFICATION	{{{ globaloptions constructor
WITHOUT_CLASSIFICATION	{{{ autosavebackupoptionpane constructor
WITHOUT_CLASSIFICATION	initialize the jedit branch of the options tree
WITHOUT_CLASSIFICATION	backup on every save
WITHOUT_CLASSIFICATION	autosave interval
WITHOUT_CLASSIFICATION	install location
WITHOUT_CLASSIFICATION	backup count
WITHOUT_CLASSIFICATION	download mirror
WITHOUT_CLASSIFICATION	backup directory
WITHOUT_CLASSIFICATION	{{{ downloadmirrorsthread class
WITHOUT_CLASSIFICATION	backup filename prefix
WITHOUT_CLASSIFICATION	update mirror list
WITHOUT_CLASSIFICATION	backup suffix
WITHOUT_CLASSIFICATION	insert code to update the plugin managers list here later
WITHOUT_CLASSIFICATION	download source
WITHOUT_CLASSIFICATION	delete downloaded files
WITHOUT_CLASSIFICATION	{{{ mirrormodel class
WITHOUT_CLASSIFICATION	{{{ abbrevsoptionpane constructor
WITHOUT_CLASSIFICATION	{{{ singleselectionmodel class
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ remove() method
WITHOUT_CLASSIFICATION	{{{ remove() method
WITHOUT_CLASSIFICATION	{{{ actionhandler class
WITHOUT_CLASSIFICATION	{{{ getcolumncount() method
WITHOUT_CLASSIFICATION	{{{ getcolumncount() method
WITHOUT_CLASSIFICATION	{{{ getrowcount() method
WITHOUT_CLASSIFICATION	{{{ getrowcount() method
WITHOUT_CLASSIFICATION	{{{ getcolumnname() method
WITHOUT_CLASSIFICATION	{{{ getvalueat() method
WITHOUT_CLASSIFICATION	{{{ getvalueat() method
WITHOUT_CLASSIFICATION	{{{ tablemousehandler class
WITHOUT_CLASSIFICATION	{{{ add() method
WITHOUT_CLASSIFICATION	{{{ add() method
WITHOUT_CLASSIFICATION	{{{ add() method
WITHOUT_CLASSIFICATION	{{{ renderer class
WITHOUT_CLASSIFICATION	{{{ selectionhandler class
WITHOUT_CLASSIFICATION	{{{ iscelleditable() method
WITHOUT_CLASSIFICATION	{{{ setvalueat() method
WITHOUT_CLASSIFICATION	{{{ sort() method
WITHOUT_CLASSIFICATION	{{{ sort() method
WITHOUT_CLASSIFICATION	{{{ edit() method
WITHOUT_CLASSIFICATION	{{{ tohashtable() method
WITHOUT_CLASSIFICATION	{{{ headermousehandler class
WITHOUT_CLASSIFICATION	{{{ tohashtable() method
WITHOUT_CLASSIFICATION	{{{ abbrevsmodel class
WITHOUT_CLASSIFICATION	{{{ abbrevsmodel constructor
WITHOUT_CLASSIFICATION	{{{ abbrevsmodel constructor
WITHOUT_CLASSIFICATION	{{{ abbrevcompare class
WITHOUT_CLASSIFICATION	{{{ abbrev class
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	{{{ actionhandler class
WITHOUT_CLASSIFICATION	{{{ getcolumnname() method
WITHOUT_CLASSIFICATION	{{{ updateenabled() method
WITHOUT_CLASSIFICATION	{{{ iscelleditable() method
WITHOUT_CLASSIFICATION	{{{ setvalueat() method
WITHOUT_CLASSIFICATION	{{{ abbrevcompare class
WITHOUT_CLASSIFICATION	ignore case when sorting
WITHOUT_CLASSIFICATION	{{{ browseroptionpane constructor
WITHOUT_CLASSIFICATION	show menu bar
WITHOUT_CLASSIFICATION	default directory
WITHOUT_CLASSIFICATION	split vfsfiledialog horizontally
WITHOUT_CLASSIFICATION	show tool bar
WITHOUT_CLASSIFICATION	show icons
WITHOUT_CLASSIFICATION	mix files and directories
WITHOUT_CLASSIFICATION	show hidden files
WITHOUT_CLASSIFICATION	beep on search auto wrap
WITHOUT_CLASSIFICATION	{{{ viewoptionpane constructor
WITHOUT_CLASSIFICATION	double-click close
WITHOUT_CLASSIFICATION	show full path
WITHOUT_CLASSIFICATION	{{{ appearanceoptionpane constructor
WITHOUT_CLASSIFICATION	view dock layout
WITHOUT_CLASSIFICATION	show search bar
WITHOUT_CLASSIFICATION	primary metal l&f font
WITHOUT_CLASSIFICATION	show buffer switcher
WITHOUT_CLASSIFICATION	menu spillover count
WITHOUT_CLASSIFICATION	look and feel
WITHOUT_CLASSIFICATION	history count
WITHOUT_CLASSIFICATION	secondary metal l&f font
WITHOUT_CLASSIFICATION	use jedit colors in all text components
WITHOUT_CLASSIFICATION	show tip of the day
WITHOUT_CLASSIFICATION	show splash screen
WITHOUT_CLASSIFICATION	decorate frames with look and feel (jdk 1.4 only)
WITHOUT_CLASSIFICATION	decorate dialogs with look and feel (jdk 1.4 only)
WITHOUT_CLASSIFICATION	{{{ printoptionpane constructor
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ constructor
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	{{{ update() method
WITHOUT_CLASSIFICATION	{{{ getentry() method
WITHOUT_CLASSIFICATION	{{{ entry class
WITHOUT_CLASSIFICATION	{{{ inner classes
WITHOUT_CLASSIFICATION	{{{ getcolumncount() method
WITHOUT_CLASSIFICATION	{{{ getrowcount() method
WITHOUT_CLASSIFICATION	{{{ getcolumnname() method
WITHOUT_CLASSIFICATION	{{{ getcolumnclass() method
WITHOUT_CLASSIFICATION	{{{ getvalueat() method
WITHOUT_CLASSIFICATION	{{{ iscelleditable() method
WITHOUT_CLASSIFICATION	font
WITHOUT_CLASSIFICATION	line numbering
WITHOUT_CLASSIFICATION	tab size
WITHOUT_CLASSIFICATION	header
WITHOUT_CLASSIFICATION	persistent markers
WITHOUT_CLASSIFICATION	footer
WITHOUT_CLASSIFICATION	{{{ generaloptionpane constructor
WITHOUT_CLASSIFICATION	color
WITHOUT_CLASSIFICATION	auto detect encoding
WITHOUT_CLASSIFICATION	line separator
WITHOUT_CLASSIFICATION	sort recent file list
WITHOUT_CLASSIFICATION	force 1.3 print dialog
WITHOUT_CLASSIFICATION	default file encoding
WITHOUT_CLASSIFICATION	check mod status on focus
WITHOUT_CLASSIFICATION	create the plugin table
WITHOUT_CLASSIFICATION	recent file list size
WITHOUT_CLASSIFICATION	save caret positions
WITHOUT_CLASSIFICATION	sort buffers by names
WITHOUT_CLASSIFICATION	session management
WITHOUT_CLASSIFICATION	confirm save all
WITHOUT_CLASSIFICATION	sort buffers
WITHOUT_CLASSIFICATION	two-stage save
WITHOUT_CLASSIFICATION	{{{ managepanel constructor
WITHOUT_CLASSIFICATION	strip trailing eol
WITHOUT_CLASSIFICATION	create button panel
WITHOUT_CLASSIFICATION	{{{ showlistconfirm() method
WITHOUT_CLASSIFICATION	{{{ plugintablemodel class
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ unloadpluginjar() method
WITHOUT_CLASSIFICATION	{{{ update() method
WITHOUT_CLASSIFICATION	{{{ inner classes
WITHOUT_CLASSIFICATION	{{{ add() method
WITHOUT_CLASSIFICATION	{{{ setvalueat() method
WITHOUT_CLASSIFICATION	{{{ sort() method
WITHOUT_CLASSIFICATION	{{{ headermousehandler class
WITHOUT_CLASSIFICATION	{{{ mirror class
WITHOUT_CLASSIFICATION	{{{ setsorttype() method
WITHOUT_CLASSIFICATION	{{{ unloadpluginjarwithdialog() method
WITHOUT_CLASSIFICATION	{{{ loadextrajarsifnecessary() method
WITHOUT_CLASSIFICATION	{{{ helpbutton class
WITHOUT_CLASSIFICATION	{{{ transitiveclosure() method
WITHOUT_CLASSIFICATION	{{{ textrenderer class
WITHOUT_CLASSIFICATION	{{{ entrycompare class
WITHOUT_CLASSIFICATION	{{{ hidelibrariesbutton class
WITHOUT_CLASSIFICATION	{{{ mirrorcompare class
WITHOUT_CLASSIFICATION	{{{ removebutton class
WITHOUT_CLASSIFICATION	{{{ mirrorlist constructor
WITHOUT_CLASSIFICATION	{{{ finished() method
WITHOUT_CLASSIFICATION	{{{ pluginlist constructor
WITHOUT_CLASSIFICATION	{{{ addplugin() method
WITHOUT_CLASSIFICATION	{{{ addpluginset() method
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	{{{ handlemessage() method
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	this will result in a slight speed up since we don't need to read the dtd anyway as aelfred is non-validating
WITHOUT_CLASSIFICATION	{{{ dispose() method
WITHOUT_CLASSIFICATION	end handlerbase implementation
WITHOUT_CLASSIFICATION	{{{ dump() method
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ cancel() method
WITHOUT_CLASSIFICATION	{{{ finished() method
WITHOUT_CLASSIFICATION	{{{ dependency class
WITHOUT_CLASSIFICATION	after the entire list is loaded fill out plugin field in dependencies
WITHOUT_CLASSIFICATION	{{{ pluginset class
WITHOUT_CLASSIFICATION	branch.satisfydependencies(rosterinstalldirectory downloadsource)
WITHOUT_CLASSIFICATION	{{{ plugin class
WITHOUT_CLASSIFICATION	string installed string installedversion
WITHOUT_CLASSIFICATION	{{{ branch class
WITHOUT_CLASSIFICATION	force the install tab to refresh for possible change of mirror
WITHOUT_CLASSIFICATION	only used if what is "plugin"
WITHOUT_CLASSIFICATION	{{{ getpluginlist() method
WITHOUT_CLASSIFICATION	{{{ getinstance() method
WITHOUT_CLASSIFICATION	{{{ showpluginmanager() method
WITHOUT_CLASSIFICATION	setup panes
WITHOUT_CLASSIFICATION	{{{ pluginmanager constructor
WITHOUT_CLASSIFICATION	{{{ updatepluginlist() method
WITHOUT_CLASSIFICATION	create the buttons
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ variables
WITHOUT_CLASSIFICATION	{{{ update() method
WITHOUT_CLASSIFICATION	{{{ entry class
WITHOUT_CLASSIFICATION	{{{ inner classes
WITHOUT_CLASSIFICATION	{{{ inner classes
WITHOUT_CLASSIFICATION	{{{ actionhandler class
WITHOUT_CLASSIFICATION	{{{ getcolumncount() method
WITHOUT_CLASSIFICATION	{{{ getrowcount() method
WITHOUT_CLASSIFICATION	{{{ getcolumnname() method
WITHOUT_CLASSIFICATION	{{{ getcolumnclass() method
WITHOUT_CLASSIFICATION	{{{ getvalueat() method
WITHOUT_CLASSIFICATION	{{{ clear() method
WITHOUT_CLASSIFICATION	{{{ iscelleditable() method
WITHOUT_CLASSIFICATION	{{{ setvalueat() method
WITHOUT_CLASSIFICATION	{{{ sort() method
WITHOUT_CLASSIFICATION	{{{ headermousehandler class
WITHOUT_CLASSIFICATION	{{{ plugintablemodel class
WITHOUT_CLASSIFICATION	{{{ setsorttype() method
WITHOUT_CLASSIFICATION	{{{ entrycompare class
WITHOUT_CLASSIFICATION	{{{ plugininfobox class
WITHOUT_CLASSIFICATION	{{{ listupdater class
WITHOUT_CLASSIFICATION	create buttons
WITHOUT_CLASSIFICATION	{{{ installpanel constructor
WITHOUT_CLASSIFICATION	setup the table
WITHOUT_CLASSIFICATION	{{{ updatemodel() method
WITHOUT_CLASSIFICATION	create description
WITHOUT_CLASSIFICATION	{{{ sizelabel class
WITHOUT_CLASSIFICATION	{{{ formatsize() method
WITHOUT_CLASSIFICATION	{{{ setselectall() method
WITHOUT_CLASSIFICATION	{{{ selectallbutton class
WITHOUT_CLASSIFICATION	{{{ isdownloadinglist() method
WITHOUT_CLASSIFICATION	{{{ installbutton class
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	{{{ constructor
WITHOUT_CLASSIFICATION	{{{ variables
WITHOUT_CLASSIFICATION	this will result in a slight speed up since we don't need to read the dtd anyway as aelfred is non-validating
WITHOUT_CLASSIFICATION	{{{ windowhandler class
WITHOUT_CLASSIFICATION	{{{ resolveentity() method
WITHOUT_CLASSIFICATION	{{{ attribute() method
WITHOUT_CLASSIFICATION	{{{ doctypedecl() method
WITHOUT_CLASSIFICATION	{{{ chardata() method
WITHOUT_CLASSIFICATION	{{{ startelement() method
WITHOUT_CLASSIFICATION	{{{ endelement() method
WITHOUT_CLASSIFICATION	{{{ startdocument() method
WITHOUT_CLASSIFICATION	{{{ actionhandler class
WITHOUT_CLASSIFICATION	{{{ pluginmanagerprogress constructor
WITHOUT_CLASSIFICATION	{{{ textrenderer
WITHOUT_CLASSIFICATION	{{{ rosterthread class
WITHOUT_CLASSIFICATION	{{{ enddocument() method
WITHOUT_CLASSIFICATION	{{{ setvalue() method
WITHOUT_CLASSIFICATION	{{{ bufferprintable constructor
WITHOUT_CLASSIFICATION	{{{ done() method
WITHOUT_CLASSIFICATION	progress value as of start of current task
WITHOUT_CLASSIFICATION	change any white text to black
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	{{{ static variables
WITHOUT_CLASSIFICATION	buffer.readlock()
WITHOUT_CLASSIFICATION	buffer.readunlock()
WITHOUT_CLASSIFICATION	{{{ printpage() method
WITHOUT_CLASSIFICATION	{{{ print() method
WITHOUT_CLASSIFICATION	{{{ print() method
WITHOUT_CLASSIFICATION	{{{ print() method
WITHOUT_CLASSIFICATION	{{{ print() method
WITHOUT_CLASSIFICATION	{{{ calculate tab size
WITHOUT_CLASSIFICATION	{{{ nexttabstop() method
WITHOUT_CLASSIFICATION	{{{ determine line number width
WITHOUT_CLASSIFICATION	{{{ paintheader() method
WITHOUT_CLASSIFICATION	the +1's ensure that 99 gets 3 digits 103 gets 4 digits and so on.
WITHOUT_CLASSIFICATION	no need to always keep the same job name for every printout.
WITHOUT_CLASSIFICATION	now that we know how many chars there are get the width.
WITHOUT_CLASSIFICATION	{{{ getprintjob() method
WITHOUT_CLASSIFICATION	{{{ paintfooter() method
WITHOUT_CLASSIFICATION	{{{ getprintjob() method
WITHOUT_CLASSIFICATION	{{{ printtabexpander class
WITHOUT_CLASSIFICATION	{{{ getpageformat() method
WITHOUT_CLASSIFICATION	{{{ printtabexpander constructor
WITHOUT_CLASSIFICATION	{{{ getpageformat() method
WITHOUT_CLASSIFICATION	format.setorientation(pageformat.portrait)
WITHOUT_CLASSIFICATION	{{{ pagesetup() method
WITHOUT_CLASSIFICATION	{{{ pagesetup() method
WITHOUT_CLASSIFICATION	for backwards compatibility the color variable is stored also as a property
WITHOUT_CLASSIFICATION	for backwards compatibility the color variable is stored also as a property
WITHOUT_CLASSIFICATION	convert from printrequestattributeset to the pageformat
WITHOUT_CLASSIFICATION	{{{ saveprintspec() method
WITHOUT_CLASSIFICATION	{{{ package-private members
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ update() method
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	{{{ getcode() method
WITHOUT_CLASSIFICATION	doesnt exist?? pf.setorientation(pageformat.reverse_portrait) then just do the next best thing
WITHOUT_CLASSIFICATION	{{{ getbuffer() method
WITHOUT_CLASSIFICATION	if 'temp' is true hide search bar after user is done with it
WITHOUT_CLASSIFICATION	{{{ getfield() method
WITHOUT_CLASSIFICATION	{{{ propertieschanged() method
WITHOUT_CLASSIFICATION	{{{ getselection() method
WITHOUT_CLASSIFICATION	{{{ occur constructor
WITHOUT_CLASSIFICATION	{{{ bufferclosed() method
WITHOUT_CLASSIFICATION	cached for speed
WITHOUT_CLASSIFICATION	{{{ bufferclosed() method
WITHOUT_CLASSIFICATION	{{{ goto() method
WITHOUT_CLASSIFICATION	{{{ create the timer used by incremental search
WITHOUT_CLASSIFICATION	{{{ hypersearchresult constructor
WITHOUT_CLASSIFICATION	{{{ addoccur() method
WITHOUT_CLASSIFICATION	{{{ bufferopened() method
WITHOUT_CLASSIFICATION	{{{ bufferopened() method
WITHOUT_CLASSIFICATION	{{{ getfirstfile() method
WITHOUT_CLASSIFICATION	{{{ pathequals() method
WITHOUT_CLASSIFICATION	{{{ getfilecount() method
WITHOUT_CLASSIFICATION	{{{ occur class
WITHOUT_CLASSIFICATION	{{{ getnextfile() method
WITHOUT_CLASSIFICATION	not supported for arbitriary filesets
WITHOUT_CLASSIFICATION	-1 so that the last isn't checked
WITHOUT_CLASSIFICATION	not found at all.
WITHOUT_CLASSIFICATION	{{{ getfiles() method
WITHOUT_CLASSIFICATION	{{{ invalidatecachedlist() method
WITHOUT_CLASSIFICATION	{{{ searchbar constructor
WITHOUT_CLASSIFICATION	{{{ sethypersearch() method
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ actionperformed() method
WITHOUT_CLASSIFICATION	{{{ actionperformed() method
WITHOUT_CLASSIFICATION	{{{ inner classes
WITHOUT_CLASSIFICATION	{{{ getdirectory() method
WITHOUT_CLASSIFICATION	{{{ actionhandler class
WITHOUT_CLASSIFICATION	{{{ setdirectory() method
WITHOUT_CLASSIFICATION	{{{ keyhandler class
WITHOUT_CLASSIFICATION	{{{ documenthandler class
WITHOUT_CLASSIFICATION	{{{ insertupdate() method
WITHOUT_CLASSIFICATION	{{{ insertupdate() method
WITHOUT_CLASSIFICATION	{{{ removeupdate() method
WITHOUT_CLASSIFICATION	{{{ removeupdate() method
WITHOUT_CLASSIFICATION	{{{ changedupdate() method
WITHOUT_CLASSIFICATION	{{{ changedupdate() method
WITHOUT_CLASSIFICATION	not found at all.
WITHOUT_CLASSIFICATION	{{{ find() method
WITHOUT_CLASSIFICATION	close button only there if 'temp' is true
WITHOUT_CLASSIFICATION	{{{ if nothing entered show search and replace dialog box
WITHOUT_CLASSIFICATION	}}} {{{ hypersearch
WITHOUT_CLASSIFICATION	}}} {{{ incremental search
WITHOUT_CLASSIFICATION	on enter start search from end of current match to find next one
WITHOUT_CLASSIFICATION	not found. start from beginning
WITHOUT_CLASSIFICATION	inform user search restarted
WITHOUT_CLASSIFICATION	beep if beep property set
WITHOUT_CLASSIFICATION	{{{ incrementalsearch() method
WITHOUT_CLASSIFICATION	for example if the current fileset is a directory c+g will find the next match within that fileset. this can be annoying if you have just done an incremental search and want the next occurrence in the current buffer.
WITHOUT_CLASSIFICATION	{{{ timerincrementalsearch() method
WITHOUT_CLASSIFICATION	on insert start search from beginning of current match. this will continue to highlight the current match until another match is found
WITHOUT_CLASSIFICATION	on backspace restart from beginning
WITHOUT_CLASSIFICATION	on backspace restart from beginning
WITHOUT_CLASSIFICATION	don't beep if not found. subsequent beeps are very annoying when backspacing an invalid search string.
WITHOUT_CLASSIFICATION	{{{ directorylistset constructor
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ handlemessage() method
WITHOUT_CLASSIFICATION	{{{ getcode() method
WITHOUT_CLASSIFICATION	{{{ actionhandler class
WITHOUT_CLASSIFICATION	{{{ removenotify() method
WITHOUT_CLASSIFICATION	{{{ keyhandler class
WITHOUT_CLASSIFICATION	{{{ focusondefaultcomponent() method
WITHOUT_CLASSIFICATION	{{{ addnotify() method
WITHOUT_CLASSIFICATION	on insert start search from beginning of current match. this will continue to highlight the current match until another match is found
WITHOUT_CLASSIFICATION	don't beep if not found. subsequent beeps are very annoying when backspacing an invalid search string.
WITHOUT_CLASSIFICATION	{{{ setrecursive() method
WITHOUT_CLASSIFICATION	reverse regexp search not supported yet so 'simulate' with restart
WITHOUT_CLASSIFICATION	reverse regexp search not supported yet so 'simulate' with restart
WITHOUT_CLASSIFICATION	{{{ gettreemodel() method
WITHOUT_CLASSIFICATION	{{{ getfilefilter() method
WITHOUT_CLASSIFICATION	{{{ _getfiles() method
WITHOUT_CLASSIFICATION	{{{ setfilefilter() method
WITHOUT_CLASSIFICATION	{{{ isrecursive() method
WITHOUT_CLASSIFICATION	{{{ gettree() method
WITHOUT_CLASSIFICATION	{{{ hypersearchresults constructor
WITHOUT_CLASSIFICATION	{{{ searchdone() method
WITHOUT_CLASSIFICATION	{{{ visitbuffers() method
WITHOUT_CLASSIFICATION	{{{ searchstarted() method
WITHOUT_CLASSIFICATION	bufferupdate.closed
WITHOUT_CLASSIFICATION	{{{ updatemultistatus() method
WITHOUT_CLASSIFICATION	{{{ searchfailed() method
WITHOUT_CLASSIFICATION	collapse all nodes as suggested on user mailing list
WITHOUT_CLASSIFICATION	{{{ gotoselectednode() method
WITHOUT_CLASSIFICATION	do nothing if clicked "foo (showing n occurrences in m files)"
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ mousepressed() method
WITHOUT_CLASSIFICATION	{{{ mousehandler class
WITHOUT_CLASSIFICATION	{{{ getters and setters
WITHOUT_CLASSIFICATION	{{{ showpopupmenu method
WITHOUT_CLASSIFICATION	{{{ resultcellrenderer class
WITHOUT_CLASSIFICATION	{{{ removetreenodeaction class
WITHOUT_CLASSIFICATION	{{{ resultvisitor interface
WITHOUT_CLASSIFICATION	{{{ removealltreenodesaction class
WITHOUT_CLASSIFICATION	{{{ resultcellrenderer constructor
WITHOUT_CLASSIFICATION	{{{ getregexp() method
WITHOUT_CLASSIFICATION	{{{ gettreecellrenderercomponent() method
WITHOUT_CLASSIFICATION	{{{ bufferloadedvisitor class
WITHOUT_CLASSIFICATION	{{{ setignorecase() method
WITHOUT_CLASSIFICATION	{{{ bufferclosedvisitor class
WITHOUT_CLASSIFICATION	{{{ match class
WITHOUT_CLASSIFICATION	{{{ setreversesearch() method
WITHOUT_CLASSIFICATION	{{{ getignorecase() method
WITHOUT_CLASSIFICATION	{{{ getbeanshellreplace() method
WITHOUT_CLASSIFICATION	{{{ setregexp() method
WITHOUT_CLASSIFICATION	{{{ getreversesearch() method
WITHOUT_CLASSIFICATION	{{{ setautowrap() method
WITHOUT_CLASSIFICATION	{{{ setbeanshellreplace() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ dispose() method
WITHOUT_CLASSIFICATION	{{{ find() method
WITHOUT_CLASSIFICATION	{{{ find() method
WITHOUT_CLASSIFICATION	{{{ find() method
WITHOUT_CLASSIFICATION	beep if beep property set
WITHOUT_CLASSIFICATION	{{{ setsearchfileset() method
WITHOUT_CLASSIFICATION	{{{ getautowrap() method
WITHOUT_CLASSIFICATION	{{{ setsearchmatcher() method
WITHOUT_CLASSIFICATION	start search from beginning
WITHOUT_CLASSIFICATION	{{{ getsearchmatcher() method
WITHOUT_CLASSIFICATION	{{{ actions
WITHOUT_CLASSIFICATION	{{{ getsearchfileset() method
WITHOUT_CLASSIFICATION	component that will parent any dialog boxes
WITHOUT_CLASSIFICATION	{{{ getsmartcasereplace() method
WITHOUT_CLASSIFICATION	{{{ hypersearch() method
WITHOUT_CLASSIFICATION	{{{ hypersearch() method
WITHOUT_CLASSIFICATION	component that will parent any dialog boxes
WITHOUT_CLASSIFICATION	component that will parent any dialog boxes
WITHOUT_CLASSIFICATION	component that will parent any dialog boxes
WITHOUT_CLASSIFICATION	component that will parent any dialog boxes
WITHOUT_CLASSIFICATION	wait for the buffer to load
WITHOUT_CLASSIFICATION	the start and end flags will be wrong with reverse search enabled but they are only used by the regexp matcher which doesn't support reverse search yet. remind fix flags when adding reverse regexp search.
WITHOUT_CLASSIFICATION	make sure end of match is visible
WITHOUT_CLASSIFICATION	make sure start of match is visible
WITHOUT_CLASSIFICATION	{{{ replace() method
WITHOUT_CLASSIFICATION	{{{ replace() method
WITHOUT_CLASSIFICATION	so that replace and find continues from the right location
WITHOUT_CLASSIFICATION	{{{ replaceall() method
WITHOUT_CLASSIFICATION	wait for buffer to finish loading
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	{{{ handlemessage() method
WITHOUT_CLASSIFICATION	{{{ record() method
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	{{{ load() method
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ cancel() method
WITHOUT_CLASSIFICATION	{{{ constants
WITHOUT_CLASSIFICATION	{{{ preloadsearchdialog() method
WITHOUT_CLASSIFICATION	don't do this when playing a macro cos it's annoying
WITHOUT_CLASSIFICATION	{{{ handleerror() method
WITHOUT_CLASSIFICATION	tags plugin likes to call this method at times other than startup so we need to fire a searchsettingschanged to notify the search bar and so on.
WITHOUT_CLASSIFICATION	{{{ regexpbeanshellreplace() method
WITHOUT_CLASSIFICATION	{{{ initreplace() method
WITHOUT_CLASSIFICATION	only record this if doing a find next
WITHOUT_CLASSIFICATION	{{{ regexpreplace() method
WITHOUT_CLASSIFICATION	{{{ replaceinselection() method
WITHOUT_CLASSIFICATION	{{{ showsearchdialog() method
WITHOUT_CLASSIFICATION	{{{ _replace() method
WITHOUT_CLASSIFICATION	{{{ literalbeanshellreplace() method
WITHOUT_CLASSIFICATION	{{{ replaceone() method
WITHOUT_CLASSIFICATION	{{{ replaceone() method
WITHOUT_CLASSIFICATION	{{{ getcolumnonotherline() method
WITHOUT_CLASSIFICATION	{{{ getsearchdialog() method
WITHOUT_CLASSIFICATION	might be already selected see above.
WITHOUT_CLASSIFICATION	this property is only loaded and saved if the 'current buffer' file set is selected. otherwise it defaults to on.
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	can't happen
WITHOUT_CLASSIFICATION	{{{ getcode() method
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	{{{ load() method
WITHOUT_CLASSIFICATION	{{{ inner classes
WITHOUT_CLASSIFICATION	{{{ createfieldpanel() method
WITHOUT_CLASSIFICATION	{{{ updateenabled() method
WITHOUT_CLASSIFICATION	{{{ getfilefilter() method
WITHOUT_CLASSIFICATION	{{{ searchdialog constructor
WITHOUT_CLASSIFICATION	fields
WITHOUT_CLASSIFICATION	search settings
WITHOUT_CLASSIFICATION	replacebtn = new jbutton(jedit.getproperty("search.replacebtn"))replacebtn.setmnemonic(jedit.getproperty("search.replacebtn.mnemonic").charat(0))grid.add(replacebtn)replacebtn.addactionlistener(actionhandler)
WITHOUT_CLASSIFICATION	multifile settings
WITHOUT_CLASSIFICATION	{{{ createsearchsettingspanel() method
WITHOUT_CLASSIFICATION	buttons
WITHOUT_CLASSIFICATION	{{{ closeorkeepdialog() method
WITHOUT_CLASSIFICATION	replacebtn
WITHOUT_CLASSIFICATION	replacebtn
WITHOUT_CLASSIFICATION	replacebtn
WITHOUT_CLASSIFICATION	replacebtn
WITHOUT_CLASSIFICATION	prevents us from handling searchsettingschanged as a result of below
WITHOUT_CLASSIFICATION	{{{ createmultifilepanel() method
WITHOUT_CLASSIFICATION	source is directory or filter field
WITHOUT_CLASSIFICATION	{{{ createbuttonspanel() method
WITHOUT_CLASSIFICATION	{{{ synchronizemultifilesettings() method
WITHOUT_CLASSIFICATION	{{{ replaceactionhandler class
WITHOUT_CLASSIFICATION	source is directory or filter field
WITHOUT_CLASSIFICATION	{{{ settingsactionhandler class
WITHOUT_CLASSIFICATION	{{{ myjradiobutton class
WITHOUT_CLASSIFICATION	{{{ multifileactionhandler class
WITHOUT_CLASSIFICATION	{{{ buttonactionhandler class
WITHOUT_CLASSIFICATION	{{{ allbufferset constructor
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	{{{ getcode() method
WITHOUT_CLASSIFICATION	{{{ run() method
WITHOUT_CLASSIFICATION	{{{ getfirstfile() method
WITHOUT_CLASSIFICATION	{{{ getnextfile() method
WITHOUT_CLASSIFICATION	{{{ getfiles() method
WITHOUT_CLASSIFICATION	{{{ getfilecount() method
WITHOUT_CLASSIFICATION	{{{ _getfiles() method
WITHOUT_CLASSIFICATION	{{{ searchinselection() method
WITHOUT_CLASSIFICATION	just as if enter was pressed in another text field
WITHOUT_CLASSIFICATION	just as if enter was pressed in another text field
WITHOUT_CLASSIFICATION	to minimise synchronization and stuff like that we only show a status message at most twice a second
WITHOUT_CLASSIFICATION	{{{ hypersearchrequest constructor
WITHOUT_CLASSIFICATION	{{{ match() method
WITHOUT_CLASSIFICATION	initially zero so that we always show the first message
WITHOUT_CLASSIFICATION	{{{ boyermooresearchmatcher constructor
WITHOUT_CLASSIFICATION	{{{ dohypersearch() method
WITHOUT_CLASSIFICATION	{{{ dohypersearch() method
WITHOUT_CLASSIFICATION	{{{ dohypersearch() method
WITHOUT_CLASSIFICATION	{{{ nextmatch() method
WITHOUT_CLASSIFICATION	position variable for pattern test position
WITHOUT_CLASSIFICATION	a good introduction to the boyer-moore fast string matching algorithm may be found on moore's website at httpwww.cs.utexas.edu/users/moore/best-ideas/string-searching/
WITHOUT_CLASSIFICATION	pattern test
WITHOUT_CLASSIFICATION	position variable for pattern start
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ nextmatch() method
WITHOUT_CLASSIFICATION	heuristic #2
WITHOUT_CLASSIFICATION	last possible start position of a match with this pattern this is negative if the pattern is longer than the text causing the search loop below to immediately fail int last_anchor = reversesearch ? offset + pattern.length - 1 length - pattern.length
WITHOUT_CLASSIFICATION	the search works by starting the anchor (first character of the pattern) at the initial offset. as long as the anchor is far enough from the enough of the text for the pattern to match and until the pattern matches we compare the pattern to the text from the last character to the first character in reverse order. where a character in the pattern mismatches we use the two heuristics based on the mismatch character and its position in the pattern to determine the furthest we can move the anchor without missing any potential pattern matches.
WITHOUT_CLASSIFICATION	character mismatch determine how many characters to skip
WITHOUT_CLASSIFICATION	go back to the while loop
WITHOUT_CLASSIFICATION	heuristic #1
WITHOUT_CLASSIFICATION	mismatch return -1 as defined by api
WITHOUT_CLASSIFICATION	skip the greater of the two distances provided by the heuristics
WITHOUT_CLASSIFICATION	boyer-moore helper methods
WITHOUT_CLASSIFICATION	match return the position of its first character
WITHOUT_CLASSIFICATION	leave the table cleanly-initialized for an empty pattern
WITHOUT_CLASSIFICATION	boyer-moore member fields
WITHOUT_CLASSIFICATION	the 'skip' array is used to determine for each index in the hashed alphabet how many characters can be skipped if a mismatch occurs on a characater hashing to that index.
WITHOUT_CLASSIFICATION	{{{ generateskiparray() method
WITHOUT_CLASSIFICATION	initialize the skip array to all zeros
WITHOUT_CLASSIFICATION	to avoid our skip table having a length of 2 ^ 16 we hash each character of the input into a character in the alphabet [\x00-\xff] using the lower 8 bits of the character's value (resulting in a more reasonable skip table of length 2 ^ 8). the result of this is that more than one character can hash to the same index but since the skip table encodes the position of occurence of the character furthest into the string with a particular index (whether or not it is the only character with that index) an index collision only means that that this heuristic will give a sub-optimal skip (i.e. a complete skip table could use the differences between colliding characters to maximal effect at the expense of building a table that is over 2 orders of magnitude larger and very sparse).
WITHOUT_CLASSIFICATION	{{{ getskipindex() method
WITHOUT_CLASSIFICATION	{{{ generatesuffixarray() method
WITHOUT_CLASSIFICATION	{{{ researchmatcher constructor
WITHOUT_CLASSIFICATION	never mind
WITHOUT_CLASSIFICATION	{{{ stringtotoken() method
WITHOUT_CLASSIFICATION	{{{ createtoken() method
WITHOUT_CLASSIFICATION	{{{ addtoken() method
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	{{{ protected members
WITHOUT_CLASSIFICATION	{{{ add() method
WITHOUT_CLASSIFICATION	{{{ add() method
WITHOUT_CLASSIFICATION	{{{ add() method
WITHOUT_CLASSIFICATION	{{{ getlinecontext() method
WITHOUT_CLASSIFICATION	{{{ setlinecontext() method
WITHOUT_CLASSIFICATION	{{{ setignorecase() method
WITHOUT_CLASSIFICATION	{{{ getignorecase() method
WITHOUT_CLASSIFICATION	unless we are matching to the end of the buffer $ should not match on the end of the substring
WITHOUT_CLASSIFICATION	unless we are matching from the start of the buffer ^ should not match on the beginning of the substring
WITHOUT_CLASSIFICATION	{{{ lookup() method
WITHOUT_CLASSIFICATION	{{{ reset() method
WITHOUT_CLASSIFICATION	{{{ token types
WITHOUT_CLASSIFICATION	{{{ gettokens() method
WITHOUT_CLASSIFICATION	special
WITHOUT_CLASSIFICATION	{{{ getnonalphanumericchars() method
WITHOUT_CLASSIFICATION	{{{ token constructor
WITHOUT_CLASSIFICATION	{{{ handletoken() method
WITHOUT_CLASSIFICATION	{{{ regionmatches() method
WITHOUT_CLASSIFICATION	{{{ tokenmarker constructor
WITHOUT_CLASSIFICATION	{{{ getparserruleset() method
WITHOUT_CLASSIFICATION	{{{ getkeywords() method
WITHOUT_CLASSIFICATION	{{{ keywordmap constructor
WITHOUT_CLASSIFICATION	{{{ keywordmap constructor
WITHOUT_CLASSIFICATION	{{{ addruleset() method
WITHOUT_CLASSIFICATION	{{{ getstringmapkey() method
WITHOUT_CLASSIFICATION	{{{ getsegmentmapkey() method
WITHOUT_CLASSIFICATION	{{{ keyword class
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	{{{ marktokens() method
WITHOUT_CLASSIFICATION	{{{ check if we have to stop parsing
WITHOUT_CLASSIFICATION	{{{ getmainruleset() method
WITHOUT_CLASSIFICATION	{{{ set up some instance variables this is to avoid having to pass around lots and lots of parameters.
WITHOUT_CLASSIFICATION	{{{ getruleset() method
WITHOUT_CLASSIFICATION	{{{ see if the rule's start or end sequence matches here
WITHOUT_CLASSIFICATION	{{{ getrulesets() method
WITHOUT_CLASSIFICATION	{{{ main parser loop
WITHOUT_CLASSIFICATION	stop checking rules if there was a match
WITHOUT_CLASSIFICATION	{{{ check for end of delegate
WITHOUT_CLASSIFICATION	{{{ mark all remaining characters
WITHOUT_CLASSIFICATION	{{{ check every rule
WITHOUT_CLASSIFICATION	{{{ check if current character is a word separator
WITHOUT_CLASSIFICATION	{{{ checkdelegateend() method
WITHOUT_CLASSIFICATION	{{{ unwind any no_line_break parent delegates
WITHOUT_CLASSIFICATION	{{{ handlerule() method
WITHOUT_CLASSIFICATION	move pos to last character of match sequence
WITHOUT_CLASSIFICATION	check escape rule of parent
WITHOUT_CLASSIFICATION	{{{ some rules can only match in certain locations
WITHOUT_CLASSIFICATION	{{{ seq
WITHOUT_CLASSIFICATION	the end cannot be a regular expression
WITHOUT_CLASSIFICATION	substitute result of matching the rule start into the end string. eg in shell script mode <<\s(\w+) is matched into \<$1\> to construct rules for highlighting read-ins like this <<eof eof
WITHOUT_CLASSIFICATION	{{{ check for an escape sequence
WITHOUT_CLASSIFICATION	{{{ handlenowordbreak() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ equals() method
WITHOUT_CLASSIFICATION	this will result in a slight speed up since we don't need to read the dtd anyway as aelfred is non-validating
WITHOUT_CLASSIFICATION	{{{ resolveentity() method
WITHOUT_CLASSIFICATION	{{{ attribute() method
WITHOUT_CLASSIFICATION	{{{ hashcode() method
WITHOUT_CLASSIFICATION	}}} {{{ mark_following
WITHOUT_CLASSIFICATION	instead of passing these around to each method we just store them as instance variables. note that this is not thread-safe.
WITHOUT_CLASSIFICATION	move pos to last character of match sequence
WITHOUT_CLASSIFICATION	note that all regexps start with \a so they only match the start of the string
WITHOUT_CLASSIFICATION	a delegate attribute on a seq changes the ruleset from the end of the seq onwards
WITHOUT_CLASSIFICATION	}}} {{{ handle start of rule
WITHOUT_CLASSIFICATION	break out of inner for loop to check next char }}} {{{ handle end of mark_following
WITHOUT_CLASSIFICATION	}}} {{{ span eol_span
WITHOUT_CLASSIFICATION	{{{ markkeyword() method
WITHOUT_CLASSIFICATION	}}} {{{ mark_previous
WITHOUT_CLASSIFICATION	{{{ substitute() method
WITHOUT_CLASSIFICATION	{{{ handletokenwithspaces() method
WITHOUT_CLASSIFICATION	{{{ do keywords
WITHOUT_CLASSIFICATION	{{{ do digits
WITHOUT_CLASSIFICATION	used for span_regexp rules otherwise null
WITHOUT_CLASSIFICATION	only match against regexp if its not all digits if all digits no point matching
WITHOUT_CLASSIFICATION	{{{ handle any remaining crud
WITHOUT_CLASSIFICATION	{{{ clone() method
WITHOUT_CLASSIFICATION	{{{ linecontext class
WITHOUT_CLASSIFICATION	{{{ intern() method
WITHOUT_CLASSIFICATION	{{{ linecontext constructor
WITHOUT_CLASSIFICATION	{{{ linecontext constructor
WITHOUT_CLASSIFICATION	{{{ xmodehandler constructor
WITHOUT_CLASSIFICATION	{{{ chararraysequal() method
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	can't happen
WITHOUT_CLASSIFICATION	{{{ error() method
WITHOUT_CLASSIFICATION	{{{ protected members
WITHOUT_CLASSIFICATION	{{{ doctypedecl() method
WITHOUT_CLASSIFICATION	{{{ chardata() method
WITHOUT_CLASSIFICATION	{{{ startelement() method
WITHOUT_CLASSIFICATION	{{{ endelement() method
WITHOUT_CLASSIFICATION	{{{ startdocument() method
WITHOUT_CLASSIFICATION	{{{ pushelement() method
WITHOUT_CLASSIFICATION	{{{ peekelement() method
WITHOUT_CLASSIFICATION	{{{ popelement() method
WITHOUT_CLASSIFICATION	{{{ gettokenmarker() method
WITHOUT_CLASSIFICATION	{{{ gettokenmarker() method
WITHOUT_CLASSIFICATION	{{{ enddocument() method
WITHOUT_CLASSIFICATION	{{{ reset() method
WITHOUT_CLASSIFICATION	{{{ handletoken() method
WITHOUT_CLASSIFICATION	}}} {{{ mark_following
WITHOUT_CLASSIFICATION	}}} {{{ mark_previous
WITHOUT_CLASSIFICATION	}}} {{{ eol_span
WITHOUT_CLASSIFICATION	mixed digit/alpha keyword and no regexp don't highlight as digit
WITHOUT_CLASSIFICATION	}}} {{{ rules
WITHOUT_CLASSIFICATION	{{{ property
WITHOUT_CLASSIFICATION	}}} {{{ terminate
WITHOUT_CLASSIFICATION	}}} {{{ props
WITHOUT_CLASSIFICATION	}}} {{{ import
WITHOUT_CLASSIFICATION	}}} {{{ seq_regexp
WITHOUT_CLASSIFICATION	}}} {{{ seq
WITHOUT_CLASSIFICATION	}}} {{{ span_regexp
WITHOUT_CLASSIFICATION	}}} {{{ span
WITHOUT_CLASSIFICATION	{{{ getmodeproperties() method
WITHOUT_CLASSIFICATION	}}} {{{ keywords
WITHOUT_CLASSIFICATION	}}} {{{ eol_span_regexp
WITHOUT_CLASSIFICATION	{{{ addkeyword() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	{{{ setlinecontext() method
WITHOUT_CLASSIFICATION	{{{ major actions
WITHOUT_CLASSIFICATION	{{{ paintchunklist() method
WITHOUT_CLASSIFICATION	{{{ paintchunkbackgrounds() method
WITHOUT_CLASSIFICATION	only paint visible chunks
WITHOUT_CLASSIFICATION	only paint visible chunks
WITHOUT_CLASSIFICATION	{{{ chunk constructor
WITHOUT_CLASSIFICATION	useful for debugging purposes
WITHOUT_CLASSIFICATION	{{{ paint token background color if necessary
WITHOUT_CLASSIFICATION	{{{ chunk constructor
WITHOUT_CLASSIFICATION	{{{ offsettox() method
WITHOUT_CLASSIFICATION	{{{ offsettox() method
WITHOUT_CLASSIFICATION	{{{ createspanrule() method
WITHOUT_CLASSIFICATION	{{{ xtooffset() method
WITHOUT_CLASSIFICATION	{{{ xtooffset() method
WITHOUT_CLASSIFICATION	{{{ getpositions() method
WITHOUT_CLASSIFICATION	set up after init()
WITHOUT_CLASSIFICATION	{{{ action hints
WITHOUT_CLASSIFICATION	{{{ position match hints
WITHOUT_CLASSIFICATION	{{{ createregexpspanrule() method
WITHOUT_CLASSIFICATION	{{{ createsequencerule() method
WITHOUT_CLASSIFICATION	{{{ createeolspanrule() method
WITHOUT_CLASSIFICATION	{{{ createregexpsequencerule() method
WITHOUT_CLASSIFICATION	{{{ createregexpeolspanrule() method
WITHOUT_CLASSIFICATION	{{{ createmarkfollowingrule() method
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ getname() method
WITHOUT_CLASSIFICATION	{{{ getproperties() method
WITHOUT_CLASSIFICATION	{{{ setproperties() method
WITHOUT_CLASSIFICATION	{{{ setignorecase() method
WITHOUT_CLASSIFICATION	{{{ getignorecase() method
WITHOUT_CLASSIFICATION	{{{ getkeywords() method
WITHOUT_CLASSIFICATION	{{{ addruleset() method
WITHOUT_CLASSIFICATION	{{{ getmodename() method
WITHOUT_CLASSIFICATION	{{{ createmarkpreviousrule() method
WITHOUT_CLASSIFICATION	{{{ setescaperule() method
WITHOUT_CLASSIFICATION	{{{ createescaperule() method
WITHOUT_CLASSIFICATION	{{{ getsetname() method
WITHOUT_CLASSIFICATION	{{{ getstandardruleset() method
WITHOUT_CLASSIFICATION	{{{ setkeywords() method
WITHOUT_CLASSIFICATION	{{{ parserruleset constructor
WITHOUT_CLASSIFICATION	{{{ resolveimports() method
WITHOUT_CLASSIFICATION	{{{ gethighlightdigits() method
WITHOUT_CLASSIFICATION	{{{ addrule() method
WITHOUT_CLASSIFICATION	{{{ getdefault() method
WITHOUT_CLASSIFICATION	{{{ getrules() method
WITHOUT_CLASSIFICATION	{{{ sethighlightdigits() method
WITHOUT_CLASSIFICATION	{{{ getrulecount() method
WITHOUT_CLASSIFICATION	{{{ getterminatechar() method
WITHOUT_CLASSIFICATION	{{{ getdigitregexp() method
WITHOUT_CLASSIFICATION	{{{ setterminatechar() method
WITHOUT_CLASSIFICATION	{{{ setdefault() method
WITHOUT_CLASSIFICATION	{{{ setdigitregexp() method
WITHOUT_CLASSIFICATION	{{{ getescaperule() method
WITHOUT_CLASSIFICATION	{{{ getnowordsep() method
WITHOUT_CLASSIFICATION	{{{ setnowordsep() method
WITHOUT_CLASSIFICATION	{{{ isbuiltin() method
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	{{{ bufferclosed() method
WITHOUT_CLASSIFICATION	{{{ handletoken() method
WITHOUT_CLASSIFICATION	{{{ setcharwidth() method
WITHOUT_CLASSIFICATION	silly allow for anti-aliased characters' "fuzz"
WITHOUT_CLASSIFICATION	{{{ canmerge() method
WITHOUT_CLASSIFICATION	don't have chunks longer than 100 characters to avoid slowing things down
WITHOUT_CLASSIFICATION	{{{ getchunklist() method
WITHOUT_CLASSIFICATION	{{{ textareadisposed() method
WITHOUT_CLASSIFICATION	{{{ syntaxstyle constructor
WITHOUT_CLASSIFICATION	{{{ createchunk() method
WITHOUT_CLASSIFICATION	{{{ static part
WITHOUT_CLASSIFICATION	{{{ initchunk() method
WITHOUT_CLASSIFICATION	{{{ getforegroundcolor() method
WITHOUT_CLASSIFICATION	{{{ merge() method
WITHOUT_CLASSIFICATION	in case already initialized un-initialize it
WITHOUT_CLASSIFICATION	{{{ getbackgroundcolor() method
WITHOUT_CLASSIFICATION	{{{ getdisplaymanager() method
WITHOUT_CLASSIFICATION	{{{ getfont() method
WITHOUT_CLASSIFICATION	{{{ _notifyscreenlinechanges() method
WITHOUT_CLASSIFICATION	{{{ getcharwidth() method
WITHOUT_CLASSIFICATION	if we got here no unused display manager in list
WITHOUT_CLASSIFICATION	{{{ islinevisible() method
WITHOUT_CLASSIFICATION	{{{ releasedisplaymanager() method
WITHOUT_CLASSIFICATION	{{{ getfirstvisibleline() method
WITHOUT_CLASSIFICATION	{{{ package-private members
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	{{{ getscreenlinecount() method
WITHOUT_CLASSIFICATION	{{{ getnextvisibleline() method
WITHOUT_CLASSIFICATION	{{{ getlastvisibleline() method
WITHOUT_CLASSIFICATION	{{{ getprevvisibleline() method
WITHOUT_CLASSIFICATION	start of next expanded range
WITHOUT_CLASSIFICATION	in collapsed range
WITHOUT_CLASSIFICATION	in collapsed range
WITHOUT_CLASSIFICATION	start of next expanded range
WITHOUT_CLASSIFICATION	beyond last visible line
WITHOUT_CLASSIFICATION	equal to last visible line
WITHOUT_CLASSIFICATION	last in expanded range
WITHOUT_CLASSIFICATION	end of prev expanded range
WITHOUT_CLASSIFICATION	next in expanded range
WITHOUT_CLASSIFICATION	end of prev expanded range
WITHOUT_CLASSIFICATION	before first visible line
WITHOUT_CLASSIFICATION	prev in expanded range
WITHOUT_CLASSIFICATION	equal to first visible line
WITHOUT_CLASSIFICATION	first in expanded range
WITHOUT_CLASSIFICATION	{{{ find fold start and end
WITHOUT_CLASSIFICATION	{{{ collapsefold() method
WITHOUT_CLASSIFICATION	{{{ getscrolllinecount() method
WITHOUT_CLASSIFICATION	scan backwards looking for the start
WITHOUT_CLASSIFICATION	this line is the start of a fold
WITHOUT_CLASSIFICATION	this line is the start of a fold
WITHOUT_CLASSIFICATION	no folds in buffer
WITHOUT_CLASSIFICATION	collapse the fold
WITHOUT_CLASSIFICATION	{{{ expandfold() method
WITHOUT_CLASSIFICATION	the first sub-fold. used by jedittextarea.expandfold().
WITHOUT_CLASSIFICATION	{{{ find fold start and fold end
WITHOUT_CLASSIFICATION	islinevisible(i) &&
WITHOUT_CLASSIFICATION	xxx
WITHOUT_CLASSIFICATION	{{{ expand the fold
WITHOUT_CLASSIFICATION	we need a different value of initialfoldlevel here!
WITHOUT_CLASSIFICATION	{{{ expandallfolds() method
WITHOUT_CLASSIFICATION	{{{ expandfolds() method
WITHOUT_CLASSIFICATION	{{{ expandfolds() method
WITHOUT_CLASSIFICATION	this ensures that the first line is always visible
WITHOUT_CLASSIFICATION	{{{ narrow() method
WITHOUT_CLASSIFICATION	if we narrowed to a single collapsed fold
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ dispose() method
WITHOUT_CLASSIFICATION	{{{ changed() method
WITHOUT_CLASSIFICATION	{{{ changed() method
WITHOUT_CLASSIFICATION	{{{ setscreenlinecount() method
WITHOUT_CLASSIFICATION	{{{ reset() method
WITHOUT_CLASSIFICATION	{{{ reset() method
WITHOUT_CLASSIFICATION	{{{ _notifyscreenlinechanges() method
WITHOUT_CLASSIFICATION	xxx
WITHOUT_CLASSIFICATION	when the text area switches to us it will do a reset anyway
WITHOUT_CLASSIFICATION	this notifies each display manager editing this buffer of the screen line count change
WITHOUT_CLASSIFICATION	{{{ fvmget() method
WITHOUT_CLASSIFICATION	{{{ updatewrapsettings() method
WITHOUT_CLASSIFICATION	{{{ displaymanager constructor
WITHOUT_CLASSIFICATION	{{{ showlinerange() method
WITHOUT_CLASSIFICATION	{{{ fvmput() method
WITHOUT_CLASSIFICATION	{{{ hidelinerange() method
WITHOUT_CLASSIFICATION	{{{ fvmreset() method
WITHOUT_CLASSIFICATION	important not linemgr.getscreenlinecount()
WITHOUT_CLASSIFICATION	{{{ fvmput2() method
WITHOUT_CLASSIFICATION	scrolllinecount.changed() does the same thing
WITHOUT_CLASSIFICATION	{{{ fvmdump() method
WITHOUT_CLASSIFICATION	{{{ _setscreenlinecount() method
WITHOUT_CLASSIFICATION	update fold visibility map.
WITHOUT_CLASSIFICATION	update fold visibility map.
WITHOUT_CLASSIFICATION	{{{ firstline class
WITHOUT_CLASSIFICATION	{{{ anchor class
WITHOUT_CLASSIFICATION	{{{ debug code
WITHOUT_CLASSIFICATION	{{{ scrolllinecount class
WITHOUT_CLASSIFICATION	{{{ debug code
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ contentinserted() method
WITHOUT_CLASSIFICATION	{{{ contentremoved() method
WITHOUT_CLASSIFICATION	{{{ foldlevelchanged() method
WITHOUT_CLASSIFICATION	{{{ precontentremoved() method
WITHOUT_CLASSIFICATION	{{{ transactioncomplete() method
WITHOUT_CLASSIFICATION	{{{ foldhandlerchanged() method
WITHOUT_CLASSIFICATION	update fold visibility map.
WITHOUT_CLASSIFICATION	{{{ debug code
WITHOUT_CLASSIFICATION	jedittextarea.scrollto() needs this to simplify its code
WITHOUT_CLASSIFICATION	jedittextarea.scrollto() needs this to simplify its code
WITHOUT_CLASSIFICATION	{{{ physup() method scroll up by physical line amount
WITHOUT_CLASSIFICATION	{{{ scrolldown() method scroll down by screen line amount
WITHOUT_CLASSIFICATION	{{{ scrollup() method scroll up by screen line amount
WITHOUT_CLASSIFICATION	{{{ ensurephysicallineisvisible() method
WITHOUT_CLASSIFICATION	{{{ bufferchangehandler class
WITHOUT_CLASSIFICATION	system.err.println("foldlevelchanged " + (start-1) + " to " + textarea.getlastphysicalline() + "" + end)
WITHOUT_CLASSIFICATION	{{{ resize selections if necessary
WITHOUT_CLASSIFICATION	{{{ resize selections if necessary
WITHOUT_CLASSIFICATION	both have same visibility just remove anything in between.
WITHOUT_CLASSIFICATION	we're removing from before the first visible to after the last visible
WITHOUT_CLASSIFICATION	collapse 2
WITHOUT_CLASSIFICATION	we're removing from the first visible to after the last visible
WITHOUT_CLASSIFICATION	shift
WITHOUT_CLASSIFICATION	update
WITHOUT_CLASSIFICATION	will be handled later. see comments at the end of transactioncomplete().
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ contentinserted() method
WITHOUT_CLASSIFICATION	{{{ precontentremoved() method
WITHOUT_CLASSIFICATION	xxx
WITHOUT_CLASSIFICATION	{{{ setborder() method
WITHOUT_CLASSIFICATION	{{{ dodelayedupdate() method
WITHOUT_CLASSIFICATION	must update screen line counts before we call _notifyscreenlinechanges() since that calls updatescrollbars() which needs valid info
WITHOUT_CLASSIFICATION	must be before the below call so that the chunk cache is not updated with an invisible first line (see above)
WITHOUT_CLASSIFICATION	update visible lines
WITHOUT_CLASSIFICATION	force the fold levels to be updated.
WITHOUT_CLASSIFICATION	when painting the last line of a buffer buffer.isfoldstart() doesn't call getfoldlevel() hence the foldlevelchanged() event might not be sent for the previous line.
WITHOUT_CLASSIFICATION	{{{ delayedupdate() method
WITHOUT_CLASSIFICATION	{{{ caretautoscroll() method
WITHOUT_CLASSIFICATION	{{{ updateborder() method
WITHOUT_CLASSIFICATION	{{{ layers
WITHOUT_CLASSIFICATION	{{{ paintcomponent() method
WITHOUT_CLASSIFICATION	{{{ gettooltiptext() method
WITHOUT_CLASSIFICATION	{{{ gettooltiptext() method
WITHOUT_CLASSIFICATION	{{{ match class
WITHOUT_CLASSIFICATION	{{{ paintinvalidline() method
WITHOUT_CLASSIFICATION	{{{ paintscreenlinerange() method
WITHOUT_CLASSIFICATION	{{{ selectmatch() method
WITHOUT_CLASSIFICATION	{{{ paintvalidline() method
WITHOUT_CLASSIFICATION	fill the background
WITHOUT_CLASSIFICATION	{{{ mouseactions constructor
WITHOUT_CLASSIFICATION	{{{ bracketmatcher class
WITHOUT_CLASSIFICATION	{{{ getactionforevent() method
WITHOUT_CLASSIFICATION	{{{ removeextension() method
WITHOUT_CLASSIFICATION	{{{ getmatch() method
WITHOUT_CLASSIFICATION	if buffer is loading don't paint anything
WITHOUT_CLASSIFICATION	{{{ highlight class
WITHOUT_CLASSIFICATION	{{{ gutter constructor
WITHOUT_CLASSIFICATION	{{{ getextensions() method
WITHOUT_CLASSIFICATION	{{{ addextension() method
WITHOUT_CLASSIFICATION	{{{ addextension() method
WITHOUT_CLASSIFICATION	{{{ setborder() method
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	{{{ getminimumsize() method
WITHOUT_CLASSIFICATION	{{{ toggleexpanded() method
WITHOUT_CLASSIFICATION	{{{ getpreferredsize() method
WITHOUT_CLASSIFICATION	{{{ getters and setters
WITHOUT_CLASSIFICATION	component.getpreferredsize() is overridden here to support the collapsing behavior.
WITHOUT_CLASSIFICATION	jcomponent.setborder(border) is overridden here to cache the left inset of the border (if any) to avoid having to fetch it during every repaint.
WITHOUT_CLASSIFICATION	{{{ gethighlightedforeground() method
WITHOUT_CLASSIFICATION	{{{ setfont() method
WITHOUT_CLASSIFICATION	{{{ sethighlightinterval() method
WITHOUT_CLASSIFICATION	jcomponent.setfont(font) is overridden here to cache the baseline for the font. this avoids having to get the font metrics during every repaint.
WITHOUT_CLASSIFICATION	{{{ sethighlightedforeground() method
WITHOUT_CLASSIFICATION	{{{ getlinenumberalignment() method
WITHOUT_CLASSIFICATION	{{{ getcurrentlineforeground() method
WITHOUT_CLASSIFICATION	{{{ isstructurehighlightenabled() method
WITHOUT_CLASSIFICATION	{{{ setcurrentlineforeground() method
WITHOUT_CLASSIFICATION	{{{ setlinenumberalignment() method
WITHOUT_CLASSIFICATION	{{{ getfoldcolor() method
WITHOUT_CLASSIFICATION	{{{ iscurrentlinehighlightenabled() method
WITHOUT_CLASSIFICATION	{{{ setfoldcolor() method
WITHOUT_CLASSIFICATION	{{{ ismarkerhighlightenabled()
WITHOUT_CLASSIFICATION	{{{ isexpanded() method
WITHOUT_CLASSIFICATION	{{{ setcurrentlinehighlightenabled() method
WITHOUT_CLASSIFICATION	{{{ setexpanded() method
WITHOUT_CLASSIFICATION	{{{ setstructurehighlightenabled() method
WITHOUT_CLASSIFICATION	{{{ gethighlightinterval() method
WITHOUT_CLASSIFICATION	{{{ getstructurehighlightcolor() method
WITHOUT_CLASSIFICATION	{{{ getmarkerhighlightcolor() method
WITHOUT_CLASSIFICATION	{{{ setstructurehighlightcolor() method
WITHOUT_CLASSIFICATION	{{{ setmarkerhighlightcolor() method
WITHOUT_CLASSIFICATION	{{{ ismarkerhighlightenabled() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ layers
WITHOUT_CLASSIFICATION	{{{ mousepressed() method
WITHOUT_CLASSIFICATION	{{{ mousereleased() method
WITHOUT_CLASSIFICATION	{{{ ismanagingfocus() method
WITHOUT_CLASSIFICATION	{{{ getfocustraversalkeysenabled() method
WITHOUT_CLASSIFICATION	{{{ mousehandler class
WITHOUT_CLASSIFICATION	{{{ gettooltiptext() method
WITHOUT_CLASSIFICATION	{{{ mousedragged() method
WITHOUT_CLASSIFICATION	{{{ setbounds() method
WITHOUT_CLASSIFICATION	{{{ mouseexited() method
WITHOUT_CLASSIFICATION	{{{ getters and setters
WITHOUT_CLASSIFICATION	{{{ paintvalidline() method
WITHOUT_CLASSIFICATION	{{{ mouseentered() method
WITHOUT_CLASSIFICATION	{{{ paintline() method
WITHOUT_CLASSIFICATION	draw |
WITHOUT_CLASSIFICATION	skip lines beyond eof
WITHOUT_CLASSIFICATION	{{{ handle actions
WITHOUT_CLASSIFICATION	{{{ paint fold triangles
WITHOUT_CLASSIFICATION	draw |^
WITHOUT_CLASSIFICATION	draw |_
WITHOUT_CLASSIFICATION	{{{ paint line numbers
WITHOUT_CLASSIFICATION	{{{ markerhighlight class
WITHOUT_CLASSIFICATION	{{{ determine action
WITHOUT_CLASSIFICATION	{{{ setstyles() method
WITHOUT_CLASSIFICATION	&& e.getx() >= getwidth() - borderwidth 2
WITHOUT_CLASSIFICATION	{{{ getstyles() method
WITHOUT_CLASSIFICATION	{{{ setcaretcolor() method
WITHOUT_CLASSIFICATION	{{{ getcaretcolor() method
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ isantialiasenabled() method
WITHOUT_CLASSIFICATION	{{{ setantialiasenabled() method
WITHOUT_CLASSIFICATION	{{{ getstructurehighlightcolor() method
WITHOUT_CLASSIFICATION	{{{ setstructurehighlightcolor() method
WITHOUT_CLASSIFICATION	{{{ isstructurehighlightenabled() method
WITHOUT_CLASSIFICATION	{{{ setstructurehighlightenabled() method
WITHOUT_CLASSIFICATION	{{{ isblockcaretenabled() method
WITHOUT_CLASSIFICATION	assumed this is called after a font render context is set up. changing font render context settings without a setstyles() call will not reset cached monospaced font info.
WITHOUT_CLASSIFICATION	{{{ getmultipleselectioncolor() method
WITHOUT_CLASSIFICATION	{{{ getselectioncolor() method
WITHOUT_CLASSIFICATION	{{{ getwrapguidecolor() method
WITHOUT_CLASSIFICATION	{{{ setselectioncolor() method
WITHOUT_CLASSIFICATION	{{{ setmultipleselectioncolor() method
WITHOUT_CLASSIFICATION	{{{ setblockcaretenabled() method
WITHOUT_CLASSIFICATION	{{{ getlinehighlightcolor() method
WITHOUT_CLASSIFICATION	{{{ setlinehighlightcolor() method
WITHOUT_CLASSIFICATION	{{{ geteolmarkercolor() method
WITHOUT_CLASSIFICATION	{{{ islinehighlightenabled() method
WITHOUT_CLASSIFICATION	{{{ setwrapguidecolor() method
WITHOUT_CLASSIFICATION	{{{ setlinehighlightenabled() method
WITHOUT_CLASSIFICATION	{{{ setfractionalfontmetricsenabled() method
WITHOUT_CLASSIFICATION	{{{ seteolmarkercolor() method
WITHOUT_CLASSIFICATION	{{{ iswrapguidepainted() method
WITHOUT_CLASSIFICATION	{{{ geteolmarkerspainted() method
WITHOUT_CLASSIFICATION	{{{ seteolmarkerspainted() method
WITHOUT_CLASSIFICATION	{{{ isfractionalfontmetricsenabled() method
WITHOUT_CLASSIFICATION	{{{ setwrapguidepainted() method
WITHOUT_CLASSIFICATION	{{{ getfoldlinestyle() method
WITHOUT_CLASSIFICATION	{{{ setfoldlinestyle() method
WITHOUT_CLASSIFICATION	{{{ package-private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	{{{ inner classes
WITHOUT_CLASSIFICATION	{{{ setbuffer() method
WITHOUT_CLASSIFICATION	{{{ getminimumsize() method
WITHOUT_CLASSIFICATION	{{{ paintcomponent() method
WITHOUT_CLASSIFICATION	{{{ gettooltiptext() method
WITHOUT_CLASSIFICATION	{{{ getpreferredsize() method
WITHOUT_CLASSIFICATION	{{{ nexttabstop() method
WITHOUT_CLASSIFICATION	{{{ getcharwidth() method
WITHOUT_CLASSIFICATION	{{{ paintvalidline() method
WITHOUT_CLASSIFICATION	{{{ addextension() method
WITHOUT_CLASSIFICATION	{{{ addextension() method
WITHOUT_CLASSIFICATION	{{{ removeextension() method
WITHOUT_CLASSIFICATION	{{{ getextensions() method
WITHOUT_CLASSIFICATION	{{{ setfont() method
WITHOUT_CLASSIFICATION	{{{ getfontrendercontext() method
WITHOUT_CLASSIFICATION	{{{ getstringwidth() method
WITHOUT_CLASSIFICATION	{{{ getfontmetrics() method
WITHOUT_CLASSIFICATION	{{{ updaterenderinghints() method
WITHOUT_CLASSIFICATION	package-private since they are accessed by inner classes and we want this to be fast
WITHOUT_CLASSIFICATION	{{{ paint line highlight and collapsed fold highlight
WITHOUT_CLASSIFICATION	should try to use this as little as possible.
WITHOUT_CLASSIFICATION	hints.put(renderinghints.key_rendering renderinghints.value_render_quality)
WITHOUT_CLASSIFICATION	{{{ textareapainter constructor
WITHOUT_CLASSIFICATION	{{{ paintlinebackground class
WITHOUT_CLASSIFICATION	{{{ paint token backgrounds
WITHOUT_CLASSIFICATION	minimise access$ methods
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ dispose() method
WITHOUT_CLASSIFICATION	}}} }}} }}}
WITHOUT_CLASSIFICATION	{{{ getview() method
WITHOUT_CLASSIFICATION	{{{ getbuffer() method
WITHOUT_CLASSIFICATION	{{{ getters and setters
WITHOUT_CLASSIFICATION	{{{ getdisplaymanager() method
WITHOUT_CLASSIFICATION	{{{ paintvalidline() method
WITHOUT_CLASSIFICATION	horizontal.setborder(null)
WITHOUT_CLASSIFICATION	because the cliprect's height is usually an even multiple of the font height we subtract 1 from it otherwise one too many lines will always be painted.
WITHOUT_CLASSIFICATION	{{{ paintselection class
WITHOUT_CLASSIFICATION	{{{ jedittextarea constructor
WITHOUT_CLASSIFICATION	{{{ paintselection() method
WITHOUT_CLASSIFICATION	{{{ paintwrapguide class
WITHOUT_CLASSIFICATION	{{{ initialize some misc. stuff
WITHOUT_CLASSIFICATION	{{{ painttext class
WITHOUT_CLASSIFICATION	{{{ add some event listeners
WITHOUT_CLASSIFICATION	{{{ paintcaret class
WITHOUT_CLASSIFICATION	{{{ initialize the gui
WITHOUT_CLASSIFICATION	{{{ setcaretblinkenabled() method
WITHOUT_CLASSIFICATION	some plugins add stuff in a "right-hand" gutter
WITHOUT_CLASSIFICATION	{{{ setquickcopyenabled() method
WITHOUT_CLASSIFICATION	{{{ getpainter() method
WITHOUT_CLASSIFICATION	{{{ getelectricscroll() method
WITHOUT_CLASSIFICATION	{{{ getgutter() method
WITHOUT_CLASSIFICATION	{{{ iscaretblinkenabled() method
WITHOUT_CLASSIFICATION	{{{ setelectricscroll() method
WITHOUT_CLASSIFICATION	{{{ isquickcopyenabled() method
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	{{{ iseditable() method
WITHOUT_CLASSIFICATION	jedittextarea.scrollto() needs this to simplify its code
WITHOUT_CLASSIFICATION	dubious? setfirstline(0)
WITHOUT_CLASSIFICATION	{{{ this ensures that the text area's look is slightly more consistent with the rest of the metal l&f. while it depends on not-so-well-documented portions of swing it only affects appearance so future breakage shouldn't matter
WITHOUT_CLASSIFICATION	{{{ setdragenabled() method
WITHOUT_CLASSIFICATION	{{{ getdraganddropcallback() method
WITHOUT_CLASSIFICATION	{{{ scrolluppage() method
WITHOUT_CLASSIFICATION	{{{ scrolling
WITHOUT_CLASSIFICATION	{{{ setdraganddropcallback() method
WITHOUT_CLASSIFICATION	we have to be careful
WITHOUT_CLASSIFICATION	{{{ isdraginprogress() method
WITHOUT_CLASSIFICATION	{{{ debugging code
WITHOUT_CLASSIFICATION	{{{ setdraginprogress() method
WITHOUT_CLASSIFICATION	we have to be careful
WITHOUT_CLASSIFICATION	{{{ isdragenabled() method
WITHOUT_CLASSIFICATION	{{{ getvisiblelines() method
WITHOUT_CLASSIFICATION	{{{ getfirstline() method
WITHOUT_CLASSIFICATION	{{{ getfirstphysicalline() method
WITHOUT_CLASSIFICATION	{{{ setfirstline() method
WITHOUT_CLASSIFICATION	{{{ ensure we don't have empty space at the bottom or top etc
WITHOUT_CLASSIFICATION	{{{ ensure we don't have empty space at the bottom or top etc
WITHOUT_CLASSIFICATION	{{{ setfirstphysicalline() method
WITHOUT_CLASSIFICATION	{{{ setfirstphysicalline() method
WITHOUT_CLASSIFICATION	{{{ gethorizontaloffset() method
WITHOUT_CLASSIFICATION	{{{ getlastphysicalline() method
WITHOUT_CLASSIFICATION	{{{ scrolldownline() method
WITHOUT_CLASSIFICATION	{{{ sethorizontaloffset() method
WITHOUT_CLASSIFICATION	{{{ scrollupline() method
WITHOUT_CLASSIFICATION	{{{ getlinecount() method
WITHOUT_CLASSIFICATION	{{{ addscrolllistener() method
WITHOUT_CLASSIFICATION	{{{ scrolldownpage() method
WITHOUT_CLASSIFICATION	{{{ scrolltocaret() method
WITHOUT_CLASSIFICATION	{{{ removescrolllistener() method
WITHOUT_CLASSIFICATION	{{{ scrollto() method
WITHOUT_CLASSIFICATION	{{{ scrollto() method
WITHOUT_CLASSIFICATION	{{{ offset conversion
WITHOUT_CLASSIFICATION	{{{ get ready
WITHOUT_CLASSIFICATION	{{{ screen line stuff
WITHOUT_CLASSIFICATION	{{{ scroll vertically
WITHOUT_CLASSIFICATION	{{{ invalidatescreenlinerange() method
WITHOUT_CLASSIFICATION	{{{ scroll horizontally
WITHOUT_CLASSIFICATION	{{{ xytooffset() method
WITHOUT_CLASSIFICATION	{{{ getphysicallineofscreenline() method
WITHOUT_CLASSIFICATION	{{{ xytooffset() method
WITHOUT_CLASSIFICATION	{{{ getscreenlineofoffset() method
WITHOUT_CLASSIFICATION	{{{ convenience methods
WITHOUT_CLASSIFICATION	{{{ getscreenlinestartoffset() method
WITHOUT_CLASSIFICATION	{{{ xtoscreenlineoffset() method
WITHOUT_CLASSIFICATION	{{{ getscreenlineendoffset() method
WITHOUT_CLASSIFICATION	{{{ invalidateline() method
WITHOUT_CLASSIFICATION	{{{ offsettoxy() method
WITHOUT_CLASSIFICATION	{{{ offsettoxy() method
WITHOUT_CLASSIFICATION	{{{ painting
WITHOUT_CLASSIFICATION	{{{ invalidatelinerange() method
WITHOUT_CLASSIFICATION	{{{ getbufferlength() method
WITHOUT_CLASSIFICATION	{{{ invalidateselectedlines() method
WITHOUT_CLASSIFICATION	to hide line highlight if selections are being added later on
WITHOUT_CLASSIFICATION	{{{ getlineofoffset() method
WITHOUT_CLASSIFICATION	{{{ getlinestartoffset() method
WITHOUT_CLASSIFICATION	{{{ getlineendoffset() method
WITHOUT_CLASSIFICATION	{{{ getlinelength() method
WITHOUT_CLASSIFICATION	{{{ getlinetext() method
WITHOUT_CLASSIFICATION	{{{ getlinetext() method
WITHOUT_CLASSIFICATION	{{{ gettext() method
WITHOUT_CLASSIFICATION	{{{ gettext() method
WITHOUT_CLASSIFICATION	{{{ gettext() method
WITHOUT_CLASSIFICATION	{{{ selectnone() method
WITHOUT_CLASSIFICATION	{{{ settext() method
WITHOUT_CLASSIFICATION	{{{ selectall() method
WITHOUT_CLASSIFICATION	{{{ getselection() method
WITHOUT_CLASSIFICATION	scan backwards trying to find a bracket
WITHOUT_CLASSIFICATION	{{{ selection
WITHOUT_CLASSIFICATION	{{{ selectline() method
WITHOUT_CLASSIFICATION	{{{ getselectioncount() method
WITHOUT_CLASSIFICATION	{{{ selectparagraph() method
WITHOUT_CLASSIFICATION	we can't do the backward scan if start == 0
WITHOUT_CLASSIFICATION	{{{ selectword() method
WITHOUT_CLASSIFICATION	to hide current line highlight
WITHOUT_CLASSIFICATION	{{{ selecttomatchingbracket() method
WITHOUT_CLASSIFICATION	{{{ selecttomatchingbracket() method
WITHOUT_CLASSIFICATION	reset count
WITHOUT_CLASSIFICATION	{{{ selectblock() method
WITHOUT_CLASSIFICATION	{{{ setselection() method
WITHOUT_CLASSIFICATION	{{{ setselection() method
WITHOUT_CLASSIFICATION	scan forward matching that bracket
WITHOUT_CLASSIFICATION	to hide current line highlight
WITHOUT_CLASSIFICATION	{{{ lineinstructurescope() method
WITHOUT_CLASSIFICATION	invalidate the old selection
WITHOUT_CLASSIFICATION	{{{ invertselection() method
WITHOUT_CLASSIFICATION	{{{ addtoselection() method
WITHOUT_CLASSIFICATION	{{{ addtoselection() method
WITHOUT_CLASSIFICATION	to hide current line highlight
WITHOUT_CLASSIFICATION	to hide current line highlight
WITHOUT_CLASSIFICATION	{{{ getselectionatoffset() method
WITHOUT_CLASSIFICATION	{{{ setselectedtext() method
WITHOUT_CLASSIFICATION	{{{ removefromselection() method
WITHOUT_CLASSIFICATION	{{{ removefromselection() method
WITHOUT_CLASSIFICATION	{{{ setselectedtext() method
WITHOUT_CLASSIFICATION	{{{ resizeselection() method
WITHOUT_CLASSIFICATION	{{{ setselectedtext() method
WITHOUT_CLASSIFICATION	{{{ extendselection() method
WITHOUT_CLASSIFICATION	{{{ extendselection() method
WITHOUT_CLASSIFICATION	{{{ caret
WITHOUT_CLASSIFICATION	{{{ getselectedtext() method
WITHOUT_CLASSIFICATION	{{{ getselectedtext() method
WITHOUT_CLASSIFICATION	{{{ getselectedtext() method
WITHOUT_CLASSIFICATION	no no no!!!! selectnone() }}}
WITHOUT_CLASSIFICATION	{{{ setcaretposition() method
WITHOUT_CLASSIFICATION	for compatibility with older jedit versions
WITHOUT_CLASSIFICATION	{{{ addstructurematcher() method
WITHOUT_CLASSIFICATION	{{{ getselectedlines() method
WITHOUT_CLASSIFICATION	{{{ setcaretposition() method
WITHOUT_CLASSIFICATION	{{{ showselectlinerangedialog() method
WITHOUT_CLASSIFICATION	{{{ removestructurematcher() method
WITHOUT_CLASSIFICATION	{{{ getstructurematch() method
WITHOUT_CLASSIFICATION	{{{ movecaretposition() method
WITHOUT_CLASSIFICATION	{{{ blinkcaret() method
WITHOUT_CLASSIFICATION	{{{ movecaretposition() method
WITHOUT_CLASSIFICATION	{{{ centercaret() method
WITHOUT_CLASSIFICATION	{{{ movecaretposition() method
WITHOUT_CLASSIFICATION	{{{ getcaretposition() method
WITHOUT_CLASSIFICATION	{{{ getcaretline() method
WITHOUT_CLASSIFICATION	{{{ gotonextparagraph() method
WITHOUT_CLASSIFICATION	{{{ getmagiccaretposition() method
WITHOUT_CLASSIFICATION	{{{ setmagiccaretposition() method
WITHOUT_CLASSIFICATION	{{{ gotonextword() method
WITHOUT_CLASSIFICATION	{{{ addcaretlistener() method
WITHOUT_CLASSIFICATION	{{{ gotonextword() method
WITHOUT_CLASSIFICATION	{{{ removecaretlistener() method
WITHOUT_CLASSIFICATION	{{{ smarthome() method
WITHOUT_CLASSIFICATION	{{{ gotonextbracket() method
WITHOUT_CLASSIFICATION	{{{ gotoprevbracket() method
WITHOUT_CLASSIFICATION	{{{ gotonextline() method
WITHOUT_CLASSIFICATION	{{{ gotofirstvisibleline() method
WITHOUT_CLASSIFICATION	{{{ gotonextmarker() method
WITHOUT_CLASSIFICATION	{{{ gotoprevline() method
WITHOUT_CLASSIFICATION	{{{ gotonextpage() method
WITHOUT_CLASSIFICATION	case 3
WITHOUT_CLASSIFICATION	case 3
WITHOUT_CLASSIFICATION	{{{ gotoprevmarker() method
WITHOUT_CLASSIFICATION	{{{ gotoprevpage() method
WITHOUT_CLASSIFICATION	{{{ smartend() method
WITHOUT_CLASSIFICATION	{{{ gotoprevparagraph() method
WITHOUT_CLASSIFICATION	{{{ gotolastvisibleline() method
WITHOUT_CLASSIFICATION	{{{ gotoprevword() method
WITHOUT_CLASSIFICATION	{{{ gotoprevword() method
WITHOUT_CLASSIFICATION	{{{ gotostartofline() method
WITHOUT_CLASSIFICATION	{{{ gotoendofline() method
WITHOUT_CLASSIFICATION	{{{ gotobufferstart() method
WITHOUT_CLASSIFICATION	{{{ gotostartofwhitespace() method
WITHOUT_CLASSIFICATION	{{{ gotoendofwhitespace() method
WITHOUT_CLASSIFICATION	{{{ gotobufferend() method
WITHOUT_CLASSIFICATION	{{{ addmarker() method
WITHOUT_CLASSIFICATION	{{{ delete() method
WITHOUT_CLASSIFICATION	{{{ ismultipleselectionenabled() method
WITHOUT_CLASSIFICATION	{{{ userinput() method
WITHOUT_CLASSIFICATION	{{{ deleteparagraph() method
WITHOUT_CLASSIFICATION	{{{ gotomatchingbracket() method
WITHOUT_CLASSIFICATION	{{{ toggleoverwriteenabled() method
WITHOUT_CLASSIFICATION	{{{ showgotolinedialog() method
WITHOUT_CLASSIFICATION	{{{ user input
WITHOUT_CLASSIFICATION	{{{ backspace() method
WITHOUT_CLASSIFICATION	check if the user entered a bracket
WITHOUT_CLASSIFICATION	{{{ deletetostartofline() method
WITHOUT_CLASSIFICATION	{{{ isoverwriteenabled() method
WITHOUT_CLASSIFICATION	{{{ backspaceword() method
WITHOUT_CLASSIFICATION	{{{ setoverwriteenabled() method
WITHOUT_CLASSIFICATION	{{{ backspaceword() method
WITHOUT_CLASSIFICATION	{{{ togglerectangularselectionenabled() method
WITHOUT_CLASSIFICATION	{{{ deletetoendofline() method
WITHOUT_CLASSIFICATION	{{{ deleteword() method
WITHOUT_CLASSIFICATION	{{{ deleteline() method
WITHOUT_CLASSIFICATION	{{{ deleteword() method
WITHOUT_CLASSIFICATION	otherwise a bunch of consecutive c+d's would be merged into one edit
WITHOUT_CLASSIFICATION	{{{ swapmarkerandcaret() method
WITHOUT_CLASSIFICATION	{{{ setrectangularselectionenabled() method
WITHOUT_CLASSIFICATION	{{{ togglemultipleselectionenabled() method
WITHOUT_CLASSIFICATION	{{{ setmultipleselectionenabled() method
WITHOUT_CLASSIFICATION	{{{ markers
WITHOUT_CLASSIFICATION	{{{ isrectangularselectionenabled() method
WITHOUT_CLASSIFICATION	{{{ folding
WITHOUT_CLASSIFICATION	{{{ gotomarker() method
WITHOUT_CLASSIFICATION	always add markers on selected lines
WITHOUT_CLASSIFICATION	toggle marker on caret line
WITHOUT_CLASSIFICATION	{{{ removetrailingwhitespace() method
WITHOUT_CLASSIFICATION	{{{ shiftindentleft() method
WITHOUT_CLASSIFICATION	{{{ shiftindentright() method
WITHOUT_CLASSIFICATION	{{{ spacestotabs() method
WITHOUT_CLASSIFICATION	{{{ tabstospaces() method
WITHOUT_CLASSIFICATION	{{{ formatparagraph() method
WITHOUT_CLASSIFICATION	{{{ collapsefold() method
WITHOUT_CLASSIFICATION	{{{ expandfold() method
WITHOUT_CLASSIFICATION	{{{ touppercase() method
WITHOUT_CLASSIFICATION	{{{ gotoparentfold() method
WITHOUT_CLASSIFICATION	{{{ narrowtofold() method
WITHOUT_CLASSIFICATION	{{{ gotonextfold() method
WITHOUT_CLASSIFICATION	{{{ gotoprevfold() method
WITHOUT_CLASSIFICATION	{{{ narrowtoselection() method
WITHOUT_CLASSIFICATION	{{{ selectfold() method
WITHOUT_CLASSIFICATION	{{{ selectfold() method
WITHOUT_CLASSIFICATION	{{{ tolowercase() method
WITHOUT_CLASSIFICATION	{{{ addexplicitfold() method
WITHOUT_CLASSIFICATION	{{{ showwordcountdialog() method
WITHOUT_CLASSIFICATION	{{{ insertenterandindent() method
WITHOUT_CLASSIFICATION	{{{ text editing
WITHOUT_CLASSIFICATION	{{{ linecomment() method
WITHOUT_CLASSIFICATION	{{{ inserttabandindent() method
WITHOUT_CLASSIFICATION	{{{ rangecomment() method
WITHOUT_CLASSIFICATION	{{{ right click popup
WITHOUT_CLASSIFICATION	if caret is inside leading whitespace indent.
WITHOUT_CLASSIFICATION	{{{ isrightclickpopupenabled() method
WITHOUT_CLASSIFICATION	{{{ indentselectedlines() method
WITHOUT_CLASSIFICATION	{{{ joinlines() method
WITHOUT_CLASSIFICATION	{{{ setrightclickpopupenabled() method
WITHOUT_CLASSIFICATION	{{{ package-private members
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	{{{ deprecated methods
WITHOUT_CLASSIFICATION	{{{ awt stuff
WITHOUT_CLASSIFICATION	{{{ processkeyevent() method
WITHOUT_CLASSIFICATION	{{{ removenotify() method
WITHOUT_CLASSIFICATION	{{{ getfocustraversalkeysenabled() method
WITHOUT_CLASSIFICATION	{{{ addnotify() method
WITHOUT_CLASSIFICATION	{{{ propertieschanged() method
WITHOUT_CLASSIFICATION	{{{ getrightclickpopup() method
WITHOUT_CLASSIFICATION	{{{ addleftofscrollbar() method
WITHOUT_CLASSIFICATION	{{{ setrightclickpopup() method
WITHOUT_CLASSIFICATION	{{{ getselectionstartline() method
WITHOUT_CLASSIFICATION	{{{ handlepopuptrigger() method
WITHOUT_CLASSIFICATION	{{{ getmarkline() method
WITHOUT_CLASSIFICATION	{{{ removeleftofscrollbar() method
WITHOUT_CLASSIFICATION	{{{ setselectionstart() method
WITHOUT_CLASSIFICATION	{{{ getfocuscycleroot() method
WITHOUT_CLASSIFICATION	{{{ addtopcomponent() method
WITHOUT_CLASSIFICATION	{{{ getselectionend() method
WITHOUT_CLASSIFICATION	{{{ removetopcomponent() method
WITHOUT_CLASSIFICATION	{{{ getselectionend() method
WITHOUT_CLASSIFICATION	{{{ getselectionstart() method
WITHOUT_CLASSIFICATION	{{{ getselectionstart() method
WITHOUT_CLASSIFICATION	{{{ select() method
WITHOUT_CLASSIFICATION	{{{ getselectionendline() method
WITHOUT_CLASSIFICATION	{{{ select() method
WITHOUT_CLASSIFICATION	{{{ setselectionend() method
WITHOUT_CLASSIFICATION	{{{ getmarkposition() method
WITHOUT_CLASSIFICATION	{{{ isselectionrectangular() method
WITHOUT_CLASSIFICATION	used to store offsettoxy() results
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	{{{ static variables
WITHOUT_CLASSIFICATION	this does the "trick" to eliminate blank space at the end
WITHOUT_CLASSIFICATION	{{{ iscaretvisible() method
WITHOUT_CLASSIFICATION	on jdk 1.4 this is set to a method by java14. the method must take these parameters - a jedittextarea - an inputevent - a boolean (copy text or move depending on modifier user held down)
WITHOUT_CLASSIFICATION	{{{ isstructurehighlightvisible() method
WITHOUT_CLASSIFICATION	{{{ foldstructurechanged() method
WITHOUT_CLASSIFICATION	{{{ updatemaxhorizontalscrollwidth() method
WITHOUT_CLASSIFICATION	in case one of the above fails we still want to clear these flags.
WITHOUT_CLASSIFICATION	{{{ recalculatevisiblelines() method
WITHOUT_CLASSIFICATION	{{{ finishcaretupdate() method
WITHOUT_CLASSIFICATION	{{{ updatescrollbars() method
WITHOUT_CLASSIFICATION	{{{ getselectionstartendonline() method
WITHOUT_CLASSIFICATION	{{{ _finishcaretupdate() method
WITHOUT_CLASSIFICATION	see finishcaretupdate() & _finishcaretupdate()
WITHOUT_CLASSIFICATION	called by displaymanager.bufferchangehandler.transactioncomplete()
WITHOUT_CLASSIFICATION	{{{ insideselection() method
WITHOUT_CLASSIFICATION	when the user is typing etc we don't want the caret to blink
WITHOUT_CLASSIFICATION	jdiff error list add stuff here
WITHOUT_CLASSIFICATION	otherwise displaymanager.bufferchangehandler calls
WITHOUT_CLASSIFICATION	{{{ startdraganddrop() method calls dndcallback via reflection
WITHOUT_CLASSIFICATION	{{{ dowordwrap() method
WITHOUT_CLASSIFICATION	{{{ _addtoselection() method
WITHOUT_CLASSIFICATION	{{{ updatestructurehighlightwithdelay() method
WITHOUT_CLASSIFICATION	{{{ firecaretevent() method
WITHOUT_CLASSIFICATION	only ever return true if space was pressed with logicallength == maxlinelen
WITHOUT_CLASSIFICATION	{{{ firescrollevent() method
WITHOUT_CLASSIFICATION	{{{ inserttab() method
WITHOUT_CLASSIFICATION	{{{ dowordcount() method
WITHOUT_CLASSIFICATION	{{{ updatestructurehighlight() method
WITHOUT_CLASSIFICATION	fix bug #922951 off-by-one error in word count
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ actionperformed() method
WITHOUT_CLASSIFICATION	{{{ inner classes
WITHOUT_CLASSIFICATION	{{{ focushandler class
WITHOUT_CLASSIFICATION	{{{ paintborder() method
WITHOUT_CLASSIFICATION	{{{ getborderinsets() method
WITHOUT_CLASSIFICATION	{{{ delete() method
WITHOUT_CLASSIFICATION	{{{ mousepressed() method
WITHOUT_CLASSIFICATION	{{{ mousehandler class
WITHOUT_CLASSIFICATION	{{{ addlayoutcomponent() method
WITHOUT_CLASSIFICATION	{{{ removelayoutcomponent() method
WITHOUT_CLASSIFICATION	{{{ preferredlayoutsize() method
WITHOUT_CLASSIFICATION	{{{ minimumlayoutsize() method
WITHOUT_CLASSIFICATION	{{{ layoutcontainer() method
WITHOUT_CLASSIFICATION	case 3
WITHOUT_CLASSIFICATION	{{{ recalculatelastphysicalline() method
WITHOUT_CLASSIFICATION	only wrap if we're at the end of a line or the rest of the line text is whitespace
WITHOUT_CLASSIFICATION	{{{ showstructurestatusmessage() method
WITHOUT_CLASSIFICATION	last character before wrap length with tabs expanded
WITHOUT_CLASSIFICATION	{{{ scrolllayout class
WITHOUT_CLASSIFICATION	caretline would have been incremented since insertnewlineat <= caretpos
WITHOUT_CLASSIFICATION	get rid of embedded tabs not removed by trim()
WITHOUT_CLASSIFICATION	{{{ shifttallcaretleft() method
WITHOUT_CLASSIFICATION	{{{ getrectparams() method
WITHOUT_CLASSIFICATION	{{{ focusgained() method
WITHOUT_CLASSIFICATION	{{{ tallcaretdelete() method
WITHOUT_CLASSIFICATION	{{{ textareaborder class
WITHOUT_CLASSIFICATION	{{{ caretblinker class
WITHOUT_CLASSIFICATION	{{{ mutablecaretevent constructor
WITHOUT_CLASSIFICATION	{{{ mutablecaretevent class
WITHOUT_CLASSIFICATION	{{{ getmark() method
WITHOUT_CLASSIFICATION	{{{ getdot() method
WITHOUT_CLASSIFICATION	{{{ adjustmentvaluechanged() method
WITHOUT_CLASSIFICATION	{{{ adjusthandler class
WITHOUT_CLASSIFICATION	xxx getmarkposition() deprecated!
WITHOUT_CLASSIFICATION	with drag and drop on a mouse down in a selection does notimmediately deselect
WITHOUT_CLASSIFICATION	{{{ focuslost() method
WITHOUT_CLASSIFICATION	{{{ dosingleclick() method
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ class initializer
WITHOUT_CLASSIFICATION	{{{ mousereleased() method
WITHOUT_CLASSIFICATION	{{{ mousedragged() method
WITHOUT_CLASSIFICATION	case 3
WITHOUT_CLASSIFICATION	so that home <mouse click> home is not the same as pressing home twice in a row
WITHOUT_CLASSIFICATION	control-click in virtual space inserts whitespace and moves caret
WITHOUT_CLASSIFICATION	so that shift-click-drag works
WITHOUT_CLASSIFICATION	so that quick copy works
WITHOUT_CLASSIFICATION	{{{ dodoubleclick() method
WITHOUT_CLASSIFICATION	ignore empty lines
WITHOUT_CLASSIFICATION	{{{ dotripleclick() method
WITHOUT_CLASSIFICATION	{{{ dosingledrag() method
WITHOUT_CLASSIFICATION	just scroll to the dragged location
WITHOUT_CLASSIFICATION	{{{ dodoubledrag() method
WITHOUT_CLASSIFICATION	{{{ dotripledrag() method
WITHOUT_CLASSIFICATION	middle mouse button drag inserts selection at caret position
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	{{{ setbuffer() method
WITHOUT_CLASSIFICATION	{{{ getscreenlineofoffset() method
WITHOUT_CLASSIFICATION	{{{ recalculatevisiblelines() method
WITHOUT_CLASSIFICATION	{{{ xtosubregionoffset() method
WITHOUT_CLASSIFICATION	{{{ chunkcache constructor
WITHOUT_CLASSIFICATION	return -1
WITHOUT_CLASSIFICATION	{{{ getmaxhorizontalscrollwidth() method
WITHOUT_CLASSIFICATION	{{{ invalidatechunksfromphys() method
WITHOUT_CLASSIFICATION	find the screen line containing this offset
WITHOUT_CLASSIFICATION	{{{ scrolldown() method
WITHOUT_CLASSIFICATION	line is invisible?
WITHOUT_CLASSIFICATION	{{{ xtosubregionoffset() method
WITHOUT_CLASSIFICATION	{{{ scrollup() method
WITHOUT_CLASSIFICATION	{{{ subregionoffsettox() method
WITHOUT_CLASSIFICATION	{{{ invalidateall() method
WITHOUT_CLASSIFICATION	{{{ getlineinfo() method
WITHOUT_CLASSIFICATION	{{{ invalidatechunksfrom() method
WITHOUT_CLASSIFICATION	{{{ subregionoffsettox() method
WITHOUT_CLASSIFICATION	{{{ getlinesubregioncount() method
WITHOUT_CLASSIFICATION	{{{ getbelowposition() method
WITHOUT_CLASSIFICATION	{{{ getsubregionofoffset() method
WITHOUT_CLASSIFICATION	{{{ updatechunksupto() method
WITHOUT_CLASSIFICATION	{{{ getsubregionstartoffset() method
WITHOUT_CLASSIFICATION	{{{ getaboveposition() method
WITHOUT_CLASSIFICATION	{{{ getsubregionendoffset() method
WITHOUT_CLASSIFICATION	{{{ needfullrepaint() method
WITHOUT_CLASSIFICATION	{{{ getlineinfosforphysicalline() method
WITHOUT_CLASSIFICATION	{{{ getlineinfosforphysicalline() method
WITHOUT_CLASSIFICATION	{{{ package-private members
WITHOUT_CLASSIFICATION	{{{ clone() method
WITHOUT_CLASSIFICATION	note that we rely on the fact that when a physical line is invalidated all screen lines/subregions of that line are invalidated as well. see below comment for code that tries to uphold this assumption.
WITHOUT_CLASSIFICATION	find a valid line closest to the last screen line
WITHOUT_CLASSIFICATION	otherwise determine the next visible line
WITHOUT_CLASSIFICATION	for the first line displayed take its physical line to be the text area's first physical line
WITHOUT_CLASSIFICATION	if the user changes the syntax token at the end of a line need to do a full repaint.
WITHOUT_CLASSIFICATION	if -1 the empty space at the end of the text area when the buffer has less lines than are visible
WITHOUT_CLASSIFICATION	empty space
WITHOUT_CLASSIFICATION	get another line of chunks
WITHOUT_CLASSIFICATION	if the line has no text out.size() == 0
WITHOUT_CLASSIFICATION	unless this is the first time increment the line number
WITHOUT_CLASSIFICATION	fix the bug where the horiz. scroll bar was not updated after creating a new file.
WITHOUT_CLASSIFICATION	we only cache entire physical lines at once don't want to split a physical line into screen lines and only have some valid.
WITHOUT_CLASSIFICATION	chunk the line.
WITHOUT_CLASSIFICATION	otherwise the number of subregions
WITHOUT_CLASSIFICATION	if this line has become longer or shorter (in which case the new physical line number is different from the cached one) we need to - continue updating past the last line - advise the text area to repaint on the other hand if the line wraps beyond lastscreenline we need to keep updating the chunk list to ensure proper alignment of invalidation flags (see start of method)
WITHOUT_CLASSIFICATION	{{{ lineinfo class
WITHOUT_CLASSIFICATION	{{{ getstartline() method
WITHOUT_CLASSIFICATION	{{{ linetochunklist() method
WITHOUT_CLASSIFICATION	{{{ getend() method
WITHOUT_CLASSIFICATION	{{{ getstart() method
WITHOUT_CLASSIFICATION	{{{ getstart() method
WITHOUT_CLASSIFICATION	{{{ getend() method
WITHOUT_CLASSIFICATION	{{{ selection constructor
WITHOUT_CLASSIFICATION	{{{ overlaps() method
WITHOUT_CLASSIFICATION	{{{ getendline() method
WITHOUT_CLASSIFICATION	{{{ selection constructor
WITHOUT_CLASSIFICATION	{{{ selection constructor
WITHOUT_CLASSIFICATION	{{{ range class
WITHOUT_CLASSIFICATION	{{{ range constructor
WITHOUT_CLASSIFICATION	{{{ package-private members
WITHOUT_CLASSIFICATION	{{{ package-private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ gettext() method
WITHOUT_CLASSIFICATION	{{{ gettext() method
WITHOUT_CLASSIFICATION	{{{ contentinserted() method
WITHOUT_CLASSIFICATION	{{{ contentinserted() method
WITHOUT_CLASSIFICATION	{{{ contentremoved() method
WITHOUT_CLASSIFICATION	{{{ contentremoved() method
WITHOUT_CLASSIFICATION	{{{ settext() method
WITHOUT_CLASSIFICATION	{{{ settext() method
WITHOUT_CLASSIFICATION	{{{ getcolumnonotherline() method
WITHOUT_CLASSIFICATION	{{{ getstart() method
WITHOUT_CLASSIFICATION	{{{ getstart() method
WITHOUT_CLASSIFICATION	{{{ getend() method
WITHOUT_CLASSIFICATION	{{{ getend() method
WITHOUT_CLASSIFICATION	{{{ range constructor
WITHOUT_CLASSIFICATION	{{{ range constructor
WITHOUT_CLASSIFICATION	{{{ move the caret down a line
WITHOUT_CLASSIFICATION	{{{ rect class
WITHOUT_CLASSIFICATION	{{{ getstartcolumn() method
WITHOUT_CLASSIFICATION	{{{ rect constructor
WITHOUT_CLASSIFICATION	{{{ rect constructor
WITHOUT_CLASSIFICATION	{{{ rect constructor
WITHOUT_CLASSIFICATION	{{{ rect constructor
WITHOUT_CLASSIFICATION	{{{ rect constructor
WITHOUT_CLASSIFICATION	{{{ getendcolumn() method
WITHOUT_CLASSIFICATION	{{{ split the text into lines
WITHOUT_CLASSIFICATION	{{{ insert the lines into the buffer
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	{{{ entry class
WITHOUT_CLASSIFICATION	{{{ constants
WITHOUT_CLASSIFICATION	{{{ gettooltiptext() method
WITHOUT_CLASSIFICATION	{{{ paintscreenlinerange() method
WITHOUT_CLASSIFICATION	{{{ paintscreenlinerange() method
WITHOUT_CLASSIFICATION	{{{ addextension() method
WITHOUT_CLASSIFICATION	{{{ removeextension() method
WITHOUT_CLASSIFICATION	{{{ getextensions() method
WITHOUT_CLASSIFICATION	notify a running waitforrequests() method
WITHOUT_CLASSIFICATION	wait for more requests
WITHOUT_CLASSIFICATION	status message changed operation started operation ends
WITHOUT_CLASSIFICATION	progress bar value change
WITHOUT_CLASSIFICATION	log some stuff
WITHOUT_CLASSIFICATION	{{{ setlogwriter() method
WITHOUT_CLASSIFICATION	do nothing who cares
WITHOUT_CLASSIFICATION	{{{ flushstream() method
WITHOUT_CLASSIFICATION	{{{ closestream() method
WITHOUT_CLASSIFICATION	{{{ getloglistmodel() method
WITHOUT_CLASSIFICATION	{{{ package-private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	{{{ start() method
WITHOUT_CLASSIFICATION	{{{ class initializer
WITHOUT_CLASSIFICATION	{{{ waitforrequests() method
WITHOUT_CLASSIFICATION	{{{ getrequestcount() method
WITHOUT_CLASSIFICATION	{{{ reset() method
WITHOUT_CLASSIFICATION	{{{ charindexedsegment constructor
WITHOUT_CLASSIFICATION	remove it so editor can continue functioning
WITHOUT_CLASSIFICATION	{{{ log() method
WITHOUT_CLASSIFICATION	so that jedit doesn't exit with no views open automatically setdaemon(true)
WITHOUT_CLASSIFICATION	{{{ charindexedsegment constructor
WITHOUT_CLASSIFICATION	if multiple threads log stuff we don't want the output to get mixed up
WITHOUT_CLASSIFICATION	not really needed since threads don't start until after
WITHOUT_CLASSIFICATION	{{{ createprintstream() method
WITHOUT_CLASSIFICATION	{{{ charat() method
WITHOUT_CLASSIFICATION	{{{ _logexception() method
WITHOUT_CLASSIFICATION	{{{ _log() method
WITHOUT_CLASSIFICATION	{{{ isvalid() method
WITHOUT_CLASSIFICATION	{{{ loglistmodel class
WITHOUT_CLASSIFICATION	{{{ addworkrequest() method
WITHOUT_CLASSIFICATION	do any queued awt runnables
WITHOUT_CLASSIFICATION	{{{ move() method
WITHOUT_CLASSIFICATION	{{{ if there are no requests execute awt requests immediately
WITHOUT_CLASSIFICATION	{{{ workthreadpool constructor
WITHOUT_CLASSIFICATION	{{{ firestatuschanged() method
WITHOUT_CLASSIFICATION	{{{ getthreadcount() method
WITHOUT_CLASSIFICATION	log.log(log.debugthis"awt immediate " + run)
WITHOUT_CLASSIFICATION	{{{ add to awt queue
WITHOUT_CLASSIFICATION	{{{ getthread() method
WITHOUT_CLASSIFICATION	{{{ addprogresslistener() method
WITHOUT_CLASSIFICATION	{{{ removeprogresslistener() method
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	{{{ append() method
WITHOUT_CLASSIFICATION	{{{ append() method
WITHOUT_CLASSIFICATION	{{{ readlock() method
WITHOUT_CLASSIFICATION	{{{ readunlock() method
WITHOUT_CLASSIFICATION	{{{ writelock() method
WITHOUT_CLASSIFICATION	{{{ writeunlock() method
WITHOUT_CLASSIFICATION	{{{ ensurecapacity() method
WITHOUT_CLASSIFICATION	awt thread magic
WITHOUT_CLASSIFICATION	}}} {{{ add to work thread queue
WITHOUT_CLASSIFICATION	{{{ queueawtrunner() method
WITHOUT_CLASSIFICATION	{{{ fireprogresschanged() method
WITHOUT_CLASSIFICATION	{{{ doawtrequests() method
WITHOUT_CLASSIFICATION	{{{ requestdone() method
WITHOUT_CLASSIFICATION	{{{ runrequestsinawtthread class
WITHOUT_CLASSIFICATION	{{{ getnextrequest() method
WITHOUT_CLASSIFICATION	{{{ doawtrequest() method
WITHOUT_CLASSIFICATION	request queue
WITHOUT_CLASSIFICATION	log.log(log.debugthis"awt runner queued")
WITHOUT_CLASSIFICATION	readers.removeelement(thread.currentthread())
WITHOUT_CLASSIFICATION	log.log(log.debugthis"running in awt thread " + request)
WITHOUT_CLASSIFICATION	{{{ segmentbuffer constructor
WITHOUT_CLASSIFICATION	{{{ getnextawtrequest() method
WITHOUT_CLASSIFICATION	{{{ allowread() method
WITHOUT_CLASSIFICATION	{{{ request class
WITHOUT_CLASSIFICATION	write in progress.
WITHOUT_CLASSIFICATION	readers.addelement(thread.currentthread())
WITHOUT_CLASSIFICATION	roll back state.
WITHOUT_CLASSIFICATION	{{{ allowwrite() method
WITHOUT_CLASSIFICATION	same thread.
WITHOUT_CLASSIFICATION	{{{ iswritelocked() method
WITHOUT_CLASSIFICATION	{{{ claimwritelock() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	{{{ add() method
WITHOUT_CLASSIFICATION	{{{ clear() method
WITHOUT_CLASSIFICATION	{{{ getsize() method
WITHOUT_CLASSIFICATION	case classwriter.field case classwriter.meth case classwriter.imeth
WITHOUT_CLASSIFICATION	{{{ integerarray constructor
WITHOUT_CLASSIFICATION	{{{ integerarray constructor
WITHOUT_CLASSIFICATION	{{{ get() method
WITHOUT_CLASSIFICATION	{{{ setsize() method
WITHOUT_CLASSIFICATION	{{{ getarray() method
WITHOUT_CLASSIFICATION	a constant pool item. constant pool items can be created with the 'newxxx' methods in the {@link classwriter} class.
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------- special instructions -------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------- exceptions table entries max stack size and max locals -------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------- debug information -------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- fields for the control flow graph analysis algorithm (used to compute the maximum stack size). a control flow graph contains one node per "basic block" and one edge per "jump" from one basic block to another. each node (i.e. each basic block) is represented by the label object that corresponds to the first instruction of this basic block. each node also stores the list of it successors in the graph as a linked list of edge objects. --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- constructor --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- methods to compute offsets and to manage forward references --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	changes the opcode of the jump instruction in order to be able to find it later (see resizeinstructions in codewriter). these temporary opcodes are similar to jump instruction opcodes except that the 2 bytes offset is unsigned (and can therefore represent values from 0 to 65535 which is sufficient since the size of a method is limited to 65535 bytes).
WITHOUT_CLASSIFICATION	changes ifeq jsr to opcodes 202 to 217 (inclusive)
WITHOUT_CLASSIFICATION	changes ifnull and ifnonnull to opcodes 218 and 219 (inclusive)
WITHOUT_CLASSIFICATION	updates maxlocals
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- constructors --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	case 'l'
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- accessors --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	case array case object
WITHOUT_CLASSIFICATION	case array case object
WITHOUT_CLASSIFICATION	case array case object
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- direct conversion from classes to type descriptors without intermediate type objects --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- corresponding size and opcodes --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- static initializer --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	pushes the first block onto the stack of blocks to be visited
WITHOUT_CLASSIFICATION	adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	if opcode == athrow or xreturn ends current block (no successor)
WITHOUT_CLASSIFICATION	updates current and max stack sizes
WITHOUT_CLASSIFICATION	updates current and max stack sizes
WITHOUT_CLASSIFICATION	adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	bipush or newarray
WITHOUT_CLASSIFICATION	no stack change but end of current block (no successor)
WITHOUT_CLASSIFICATION	xload or xstore
WITHOUT_CLASSIFICATION	updates max locals
WITHOUT_CLASSIFICATION	iload_0
WITHOUT_CLASSIFICATION	istore_0
WITHOUT_CLASSIFICATION	wide
WITHOUT_CLASSIFICATION	updates current and max stack sizes
WITHOUT_CLASSIFICATION	updates current and max stack sizes
WITHOUT_CLASSIFICATION	updates current and max stack sizes
WITHOUT_CLASSIFICATION	adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	computes the stack size variation
WITHOUT_CLASSIFICATION	updates current and max stack sizes only if opcode == newarray (stack size variation = 0 for bipush or sipush)
WITHOUT_CLASSIFICATION	wide
WITHOUT_CLASSIFICATION	updates current and max stack sizes only if opcode == new (stack size variation = 0 for anewarray checkcast instanceof)
WITHOUT_CLASSIFICATION	case constants.putfield
WITHOUT_CLASSIFICATION	computes the stack size variation
WITHOUT_CLASSIFICATION	computes the stack size variation. in order not to recompute several times this variation for the same item we use the intval field of this item to store this variation once it has been computed. more precisely this intval field stores the sizes of the arguments and of the return value corresponding to desc.
WITHOUT_CLASSIFICATION	jsr_w
WITHOUT_CLASSIFICATION	the above sizes have not been computed yet so we compute them
WITHOUT_CLASSIFICATION	and we save them in order not to recompute them in the future
WITHOUT_CLASSIFICATION	no stack change but end of current block (with one new successor)
WITHOUT_CLASSIFICATION	goto_w
WITHOUT_CLASSIFICATION	ends current block (with one new successor)
WITHOUT_CLASSIFICATION	resolves previous forward references to label if any
WITHOUT_CLASSIFICATION	ldc2_w
WITHOUT_CLASSIFICATION	ldc_w
WITHOUT_CLASSIFICATION	updates max locals only (no stack change)
WITHOUT_CLASSIFICATION	updates current stack size (max stack size unchanged)
WITHOUT_CLASSIFICATION	updates current stack size (max stack size unchanged)
WITHOUT_CLASSIFICATION	ends current block (with many new successors)
WITHOUT_CLASSIFICATION	ends current block (with many new successors)
WITHOUT_CLASSIFICATION	jump offset goto_w
WITHOUT_CLASSIFICATION	case of a backward jump with an offset >= -32768 or of a forward jump with of course an unknown offset. in these cases we store the offset in 2 bytes (which will be increased in resizeinstructions if needed).
WITHOUT_CLASSIFICATION	begins a new current block resets the relative current and max stack sizes
WITHOUT_CLASSIFICATION	updates current stack size (max stack size unchanged because stack size variation always negative or null)
WITHOUT_CLASSIFICATION	pushes handler block onto the stack of blocks to be visited
WITHOUT_CLASSIFICATION	true (non relative) max stack size
WITHOUT_CLASSIFICATION	pops a block from the stack
WITHOUT_CLASSIFICATION	computes the true (non relative) max stack size of this block
WITHOUT_CLASSIFICATION	updates the global max stack size
WITHOUT_CLASSIFICATION	analyses the successors of the block
WITHOUT_CLASSIFICATION	if this successor has not already been pushed onto the stack
WITHOUT_CLASSIFICATION	computes the true beginning stack size of this successor block
WITHOUT_CLASSIFICATION	pushes this successor onto the stack
WITHOUT_CLASSIFICATION	releases all the edge objects used by this codewriter
WITHOUT_CLASSIFICATION	appends the [head tail] list at the beginning of the pool list
WITHOUT_CLASSIFICATION	creates a new edge object or reuses one from the shared pool
WITHOUT_CLASSIFICATION	removes b from the pool
WITHOUT_CLASSIFICATION	adds the previous edge to the list of edges used by this codewriter
WITHOUT_CLASSIFICATION	initializes the previous edge object
WITHOUT_CLASSIFICATION	and adds it to the successor list of the currentblock block
WITHOUT_CLASSIFICATION	replaces the temporary jump opcodes introduced by label.resolve.
WITHOUT_CLASSIFICATION	replaces old bytecodes with new ones
WITHOUT_CLASSIFICATION	returns the positions of the resized instructions
WITHOUT_CLASSIFICATION	forward jump
WITHOUT_CLASSIFICATION	backward jump
WITHOUT_CLASSIFICATION	access flags
WITHOUT_CLASSIFICATION	types for newarray
WITHOUT_CLASSIFICATION	jsr_w
WITHOUT_CLASSIFICATION	over estimation of the number of bytes to be added to this instruction = 3 - current number of padding bytes = 3 - (3 - u%4) = u%4 = u & 3
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- utility methods instruction resizing (used to handle goto_w and jsr_w) --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	bytecode of the method indexes in b loop indexes
WITHOUT_CLASSIFICATION	3 = loop again 2 = loop ended 1 = last pass 0 = done
WITHOUT_CLASSIFICATION	two additional bytes will be required to replace this goto or jsr instruction with a goto_w or a jsr_w
WITHOUT_CLASSIFICATION	opcode of current instruction bytes to be added after this instruction
WITHOUT_CLASSIFICATION	true number of bytes to be added (or removed) from this instruction = (future number of padding bytes - current number of padding byte) - previously over estimated variation = = ((3 - newoffset%4) - (3 - u%4)) - u%4 = (-newoffset%4 + u%4) - u%4 = -(newoffset & 3)
WITHOUT_CLASSIFICATION	converts temporary opcodes 202 to 217 (inclusive) 218 and 219 to ifeq jsr (inclusive) ifnull and ifnonnull
WITHOUT_CLASSIFICATION	five additional bytes will be required to replace this ifxxx <l> instruction with ifnotxxx <l'> goto_w <l> where ifnotxxx is the "opposite" opcode of ifxxx (i.e. ifne for ifeq) and where <l'> designates the instruction just after the goto_w.
WITHOUT_CLASSIFICATION	like tabl_insn
WITHOUT_CLASSIFICATION	like tabl_insn
WITHOUT_CLASSIFICATION	skips instruction
WITHOUT_CLASSIFICATION	skips instruction
WITHOUT_CLASSIFICATION	adds a new (u insert) entry in the allindexes and allsizes arrays
WITHOUT_CLASSIFICATION	replaces goto with goto_w jsr with jsr_w and ifxxx <l> with ifnotxxx <l'> goto_w <l> where ifnotxxx is the "opposite" opcode of ifxxx (i.e. ifne for ifeq) and where <l'> designates the instruction just after the goto_w.
WITHOUT_CLASSIFICATION	case classwriter.mana_insn
WITHOUT_CLASSIFICATION	changes temporary opcodes 202 to 217 (inclusive) 218 and 219 to ifeq jsr (inclusive) ifnull and ifnonnull
WITHOUT_CLASSIFICATION	2nd step copies the bytecode of the method into a new bytevector updates the offsets and inserts (or removes) bytes as requested.
WITHOUT_CLASSIFICATION	reads and copies instruction
WITHOUT_CLASSIFICATION	skips 0 to 3 padding bytes
WITHOUT_CLASSIFICATION	jump offset goto_w newoffset now computed from start of goto_w
WITHOUT_CLASSIFICATION	skips 0 to 3 padding bytes
WITHOUT_CLASSIFICATION	reads and copies instruction
WITHOUT_CLASSIFICATION	updates the instructions addresses in the catch local var and line number tables
WITHOUT_CLASSIFICATION	case mana_insn
WITHOUT_CLASSIFICATION	opcodes visit method (- = idem)
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	scan from selection to end failed so scan from start to selection
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- constructor --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- static initializer --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- implementation of the classvisitor interface --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- other public methods --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	computes the real size of the bytecode of this class
WITHOUT_CLASSIFICATION	allocates a byte vector of this size in order to avoid unnecessary arraycopy operations in the bytevector.enlarge() method
WITHOUT_CLASSIFICATION	special case no current development version
WITHOUT_CLASSIFICATION	end abstractoptionpane implementation
WITHOUT_CLASSIFICATION	begin actionlistener implementation
WITHOUT_CLASSIFICATION	helper method to get font from plugin properties
WITHOUT_CLASSIFICATION	constructor
WITHOUT_CLASSIFICATION	attribute methods
WITHOUT_CLASSIFICATION	for toolbar display
WITHOUT_CLASSIFICATION	ebcomponent implementation
WITHOUT_CLASSIFICATION	these jcomponent methods provide the appropriate points to subscribe and unsubscribe this object to the editbus
WITHOUT_CLASSIFICATION	quicknotepadactions implementation
WITHOUT_CLASSIFICATION	listener objects
WITHOUT_CLASSIFICATION	<esc> closes a floating window
WITHOUT_CLASSIFICATION	cwd not implemented in this version
WITHOUT_CLASSIFICATION	end jcmdprocess.java
WITHOUT_CLASSIFICATION	get full command line
WITHOUT_CLASSIFICATION	this will result in a slight speed up since we don't need to read the dtd anyway as aelfred is non-validating
WITHOUT_CLASSIFICATION	this will result in a slight speed up since we don't need to read the dtd anyway as aelfred is non-validating
WITHOUT_CLASSIFICATION	we remember which classes we don't exist because beanshell tries loading all possible <imported prefix>.<class name> combinations
WITHOUT_CLASSIFICATION	if it's not in the class hash and not marked as non-existent try loading it from the classpath
WITHOUT_CLASSIFICATION	to avoid any problems if components are added or removed while the message is being sent
WITHOUT_CLASSIFICATION	some java versions return the clipboard contents using the native line separator so have to convert it here
WITHOUT_CLASSIFICATION	either class sun.tools.javac.main or com.sun.tools.javac.main must be there
WITHOUT_CLASSIFICATION	stop script kiddies from opening the edit server port and just leaving it open as a dos
WITHOUT_CLASSIFICATION	coming out of background mode. no views open. no buffers open if args empty.
WITHOUT_CLASSIFICATION	since recentbuffer will be set to the one that was closed
WITHOUT_CLASSIFICATION	- don't do these checks while a save is in progress because for a moment newmodtime will be greater than oldmodtime due to the multithreading - only supported on local file system
WITHOUT_CLASSIFICATION	this ensures that undo can clear the dirty flag properly when all edits up to a save are undone
WITHOUT_CLASSIFICATION	note that if firstline == lastline loop does not execute
WITHOUT_CLASSIFICATION	fill in defaults for these from system properties if the corresponding buffer.xxx properties not set
WITHOUT_CLASSIFICATION	create a directoryentry manually instead of using _vfs._getdirectoryentry() since so many vfs's have broken implementations of this method
WITHOUT_CLASSIFICATION	java does not support this encoding so we have to handle it manually.
WITHOUT_CLASSIFICATION	file begins with utf-8-y signature. discard the signature and read the remainder as utf-8.
WITHOUT_CLASSIFICATION	fix for "[ 865589 ] 0-byte files should open using the default line seperator"
WITHOUT_CLASSIFICATION	helper methods
WITHOUT_CLASSIFICATION	call sendbreak after fixed number of lines of stdout are read
WITHOUT_CLASSIFICATION	end jcmdprocesstest.java
WITHOUT_CLASSIFICATION	big enough for a \r\n pair lookbehind[0] = most recent lookbehind[1] = second most recent
WITHOUT_CLASSIFICATION	is this it? is the class public or can we use accessibility?
WITHOUT_CLASSIFICATION	we don't know the right hand side of the assignment yet. has at least one setter of the right name?
WITHOUT_CLASSIFICATION	add the '0-repeats' index positions.elementat(z) == position [] in input after <<z>> matches
WITHOUT_CLASSIFICATION	order these from longest to shortest start by assuming longest (more repeats)
WITHOUT_CLASSIFICATION	these variables are package scope for fast access within the engine execution flags this match was made using
WITHOUT_CLASSIFICATION	these are respectively the first and last tokens in our linked list if there is only one token firsttoken == lasttoken
WITHOUT_CLASSIFICATION	not in settings directory or jedit home directory. no need to reload anything.
WITHOUT_CLASSIFICATION	}}} {{{ insert the expansion
WITHOUT_CLASSIFICATION	$ at end is literal }}}
WITHOUT_CLASSIFICATION	later on we need to know if certain code is called from the main thread
WITHOUT_CLASSIFICATION	ok this one seems to confuse newbies endlessly so log it as notice not error
WITHOUT_CLASSIFICATION	don't show splash screen if there is a file named 'nosplash' in the settings directory
WITHOUT_CLASSIFICATION	this reloads the token marker and sends a message which causes edit panes to repaint their text areas
WITHOUT_CLASSIFICATION	if only one new file is open which is clean just close it which will create an 'untitled-1'
WITHOUT_CLASSIFICATION	can happen if the user presses c+w twice real quick and the buffer has unsaved changes
WITHOUT_CLASSIFICATION	paths on case-insensitive filesystems are stored as lower case in the hash.
WITHOUT_CLASSIFICATION	still need to call the status check even if the option is off so that the write protection is updated if it changes on disk
WITHOUT_CLASSIFICATION	the problem with this is that if we have two edit panes looking at the same buffer and the file is reloaded both will jump to the same location
WITHOUT_CLASSIFICATION	don't show the welcome message if jedit was started with the -nosettings switch
WITHOUT_CLASSIFICATION	log.log(log.debugjedit.class"adding edit mode " + mode.getname())
WITHOUT_CLASSIFICATION	if only one clean 'untitled' buffer is open we replace it
WITHOUT_CLASSIFICATION	if the user pressed eg c+e n n in the search bar we want focus to go back there after the prefix is done
WITHOUT_CLASSIFICATION	we might have been closed as a result of the above
WITHOUT_CLASSIFICATION	we might have been closed as a result of the above
WITHOUT_CLASSIFICATION	tool bar and status bar gets added in propertieschanged() depending in the 'tool bar alternate layout' setting.
WITHOUT_CLASSIFICATION	null some variables so that retaining references to closed views won't hurt as much.
WITHOUT_CLASSIFICATION	we create a stream tokenizer for parsing a simple stack-based language
WITHOUT_CLASSIFICATION	review this is horribly inefficient but it ensures that we properly skip over bytes via the tarbuffer
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	do not evaluate methods this() or super() in class instance space (i.e. inside a constructor)
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	check if a plugin with the same name is already loaded
WITHOUT_CLASSIFICATION	remove action sets dockables etc so that user doesn't see the broken plugin
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	endindex is now position at a ')''\)' nextindex is end of string or position after ')' or '\)'
WITHOUT_CLASSIFICATION	one-or-more repeat operator + | \+ depending on re_bk_plus_qm not available if re_limited_ops is set
WITHOUT_CLASSIFICATION	zero-or-one repeat operator / stingy matching operator ? | \? depending on re_bk_plus_qm not available if re_limited_ops is set stingy matching if re_stingy_ops is set and it follows a quantifier
WITHOUT_CLASSIFICATION	word break operator \b if ????
WITHOUT_CLASSIFICATION	digit operator \d if re_char_class_escapes is set
WITHOUT_CLASSIFICATION	non-whitespace operator \s
WITHOUT_CLASSIFICATION	(?) ???+?{}? (?=)(?!) \a\z \d\d\w\w\s\s within [] (?#)
WITHOUT_CLASSIFICATION	if chain returns false it "rejected" the token due to an optimization and next was combined with lasttoken
WITHOUT_CLASSIFICATION	next succeeds is a match try next option
WITHOUT_CLASSIFICATION	no absolute pathnames windows (and posix?) paths can start with "\\networkdrive\" so we loop on starting /'s.
WITHOUT_CLASSIFICATION	this will result in a slight speed up since we don't need to read the dtd anyway as aelfred is non-validating
WITHOUT_CLASSIFICATION	int totaldraw = (n + 1 + num_overshoot_bytes) + (n + num_overshoot_bytes) + n + 65537 compressoutofmemory ( totaldraw n )
WITHOUT_CLASSIFICATION	ensures that active view is saved last ie created last on next load ie in front on next load
WITHOUT_CLASSIFICATION	this will result in a slight speed up since we don't need to read the dtd anyway as aelfred is non-validating
WITHOUT_CLASSIFICATION	record \n and \t on lines specially so that auto indent can take place
WITHOUT_CLASSIFICATION	since subsequent macros with the same name are ignored load user macros first so that they override the system macros.
WITHOUT_CLASSIFICATION	in case macro file name has a space in it. spaces break the view.toolbar property for instance since it uses spaces to delimit action names.
WITHOUT_CLASSIFICATION	system.err.println("y=" + y + "offsety=" + offsety + "size.height=" + size.height + "win.height=" + win.getheight())
WITHOUT_CLASSIFICATION	i'm not sure when this can happen but it does sometimes witness the jedit bug tracker.
WITHOUT_CLASSIFICATION	constructors.
WITHOUT_CLASSIFICATION	constants for input.
WITHOUT_CLASSIFICATION	read the value normalizing whitespace if it is not cdata.
WITHOUT_CLASSIFICATION	check for surrogates 00000000 0000xxxx yyyyyyyy zzzzzzzz (1101|10xx|xxyy|yyyy + 1101|11yy|zzzz|zzzz
WITHOUT_CLASSIFICATION	search for a matching tuple and return the string if we find one.
WITHOUT_CLASSIFICATION	ok add it to the end of the bucket.
WITHOUT_CLASSIFICATION	attributes
WITHOUT_CLASSIFICATION	high-level i/o.
WITHOUT_CLASSIFICATION	ucs-4 must begin with "<!xml" 0x00 0x00 0x00 0x3c ucs-4 big-endian (1234)
WITHOUT_CLASSIFICATION	set up a snapshot of the current input source.
WITHOUT_CLASSIFICATION	compare the input character- by character.
WITHOUT_CLASSIFICATION	buffers for decoded but unparsed character input.
WITHOUT_CLASSIFICATION	buffer for undecoded raw byte input.
WITHOUT_CLASSIFICATION	this is necessary to have a file opened from the finder before jedit is running set as the currently active buffer.
WITHOUT_CLASSIFICATION	super() }}}
WITHOUT_CLASSIFICATION	put fornamespace it on the top of the stack note it's important that there is only one exit point from this method so that we can swap back the namespace.
WITHOUT_CLASSIFICATION	the lock is our declaring namespace's this reference (the method's 'super'). or in the case of a class it's the class instance.
WITHOUT_CLASSIFICATION	set untyped variable untyped param
WITHOUT_CLASSIFICATION	check for explicit return of value from void method type. retcontrol.returnpoint is the node of the return statement
WITHOUT_CLASSIFICATION	remove the bsh get the index of the between the host and the port is located
WITHOUT_CLASSIFICATION	unwrap target exception. if the interface declares that it throws the ex it will be delivered. if not it will be wrapped in an undeclaredthrowable
WITHOUT_CLASSIFICATION	get the type by constructing a prototype array with arbitrary (zero) length in each dimension. int array default zeros
WITHOUT_CLASSIFICATION	if it had a different type throw error. this allows declaring the same var again but not with a different (even if assignable) type.
WITHOUT_CLASSIFICATION	careful here else fall through to override and install the new typed version
WITHOUT_CLASSIFICATION	now done in namespace automatically when root the classes which are imported by default globalnamespace.loaddefaultimports()
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	this will result in a slight speed up since we don't need to read the dtd anyway as aelfred is non-validating
WITHOUT_CLASSIFICATION	--------------------------------------------------------- the following instance variables mutate during evaluation and should be reset by the reset() method where necessary
WITHOUT_CLASSIFICATION	no variable or class found in 'this' type ref. if autoallocatethis then create one a child 'this'.
WITHOUT_CLASSIFICATION	null 'from' type corresponds to type of primitive.null assign to any object type
WITHOUT_CLASSIFICATION	wrapper to primitive convert value to primitive and check/cast it.
WITHOUT_CLASSIFICATION	for operator-assign operations save the lhs value before evaluating the rhs. this is correct java behavior for postfix operations e.g. i=1 i+=i++ should be 2 not 3
WITHOUT_CLASSIFICATION	number of nodes on stack current mark
WITHOUT_CLASSIFICATION	try to load the module don't refer to it directly here or we're dependent upon it
WITHOUT_CLASSIFICATION	null return null as type we currently use null type to indicate loose typing throughout bsh.
WITHOUT_CLASSIFICATION	trying to cast primitive to an object type primitive.null can be cast to any object type
WITHOUT_CLASSIFICATION	begin beanshell modification - super constructor args null node null callstack parseexception knows where the error is.
WITHOUT_CLASSIFICATION	push nulls for various args of invokemethod interpreter callstack callerinfo
WITHOUT_CLASSIFICATION	generate code to call classgeneratorutil to get our switch index and give us args
WITHOUT_CLASSIFICATION	check to see if the instance has already been initialized (the case if using a this() alternate constuctor)
WITHOUT_CLASSIFICATION	evaluate the instance portion of the block in it evaluate the initializer block
WITHOUT_CLASSIFICATION	handle ".class" suffix operation prefix must be a bshtype
WITHOUT_CLASSIFICATION	}}} {{{ word character
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	this will result in a slight speed up since we don't need to read the dtd anyway as aelfred is non-validating
WITHOUT_CLASSIFICATION	we didn't have a component previously so create a border
WITHOUT_CLASSIFICATION	{{{ filesactivated() method candoubleclickclose set to false when enter pressed
WITHOUT_CLASSIFICATION	we expand those that are non-empty and remove those that are empty
WITHOUT_CLASSIFICATION	{{{ setfoldlevel() method also sets 'fold level valid' flag
WITHOUT_CLASSIFICATION	if auto wrap is on always restart search. if auto wrap is off and we're called from a macro stop search. if we're called interactively ask the user what to do.
WITHOUT_CLASSIFICATION	for backwards compatibility with plugins that fiddle with jedit's ui layout
WITHOUT_CLASSIFICATION	we have binding foo but user asks to remove foo bar?
WITHOUT_CLASSIFICATION	we keep the first non-null frc we get since sometimes we get invalid ones on subsequent pages on windows
WITHOUT_CLASSIFICATION	this is handled a little differently from other jedit settings as the splash screen flag needs to be known very early in the startup sequence before the user properties have been loaded
WITHOUT_CLASSIFICATION	impl note since multiple searches now allowed extra level in hierarchy
WITHOUT_CLASSIFICATION	invalid regexp ignore return true to avoid annoying beeping while typing a re
WITHOUT_CLASSIFICATION	we use a custom jradiobutton subclass that returns false for isfocustraversable() so that the user can tab from the search field to the replace field with one keystroke
WITHOUT_CLASSIFICATION	the code above builds a 1-indexed suffix array but we shift it to be 0-indexed ignoring the original 0-th element
WITHOUT_CLASSIFICATION	leave buffer in a consistent state if an error occurs
WITHOUT_CLASSIFICATION	{{{ lazily create skip and suffix arrays for either the search pattern or the reversed search pattern
WITHOUT_CLASSIFICATION	used for the stringreplace and beanshell replace radio buttons so that the user can press tab to go from the find field to the replace field in one go
WITHOUT_CLASSIFICATION	if the caret is on a collapsed fold collapse the parent fold
WITHOUT_CLASSIFICATION	this is either style.getbackgroundcolor() or styles[defaultid].getbackgroundcolor()
WITHOUT_CLASSIFICATION	complete-word command needs a list of all non-alphanumeric characters used in a keyword map.
WITHOUT_CLASSIFICATION	}}} {{{ paint bracket scope
WITHOUT_CLASSIFICATION	{{{ physdown() method scroll down by physical line amount
WITHOUT_CLASSIFICATION	still have to call this even if it equals the old one so that the offset manager sets the validity flag!
WITHOUT_CLASSIFICATION	no matter what happends stops us from leaving buffer in a bad state
WITHOUT_CLASSIFICATION	don't overstrike if we're on the end of the line
WITHOUT_CLASSIFICATION	so that end followed by up arrow will always put caret at the end of the previous line for example setmagiccaretposition(integer.max_value) }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	this is package-private so that the painter can use it without having to call getselection() (which involves an array copy)
WITHOUT_CLASSIFICATION	try and merge existing selections one by one with the new selection
WITHOUT_CLASSIFICATION	if one line's chunks are invalid remaining lines are also invalid
WITHOUT_CLASSIFICATION	case classwriter.field case classwriter.meth case classwriter.imeth
WITHOUT_CLASSIFICATION	updates current stack size (max stack size unchanged because stack size variation always negative in this case)
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- utility methods control flow analysis algorithm --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	copy of indexes copy of sizes instructions to be resized future offset of a jump instruction
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	perform a cast cast check or assignability check.@param totype the class type of the cast result which may includeprimitive types e.g. byte.type. totype may be null to indicate aloose type assignment (which matches any fromtype).@param fromtype is the class type of the value to be cast includingjava primitive type classes for primitives.fromtype should be null to indicate that the fromvalue is or wouldbe primitive.null@param fromvalue an object or bsh.primitive primitive value (includingprimitive.null or primitive.void )@param checkonly if checkonly is true then fromvalue must be null.fromtype is checked for the cast to totypeif checkonly is false then fromvalue must be non-null(primitive.null is ok) and the actual cast is performed.@throws utilevalerror on invalid assignment (when operation isassignment ).@throws utiltargeterror wrapping classcastexception on cast error (when operation is cast)@param operation is types.cast or types.assignment@see primitive.gettype()
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	for debugging
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	i/o information. current reader current input stream current line number current column number type of input source stack of input soruces current external entity current character encoding. how many bytes read from current source.
WITHOUT_CLASSIFICATION	we'll print our banner using eval(string) in order to exercise the parser and get the basic expression classes loaded this ameliorates the delay after typing the first statement.
WITHOUT_CLASSIFICATION	disallowing voids here was an easy way to support the throwing of a more descriptive error message on use of an undefined argument to a method call (very common). if it ever turns out that we need to support that for some reason we'll have to re-evaluate how we get "meta-information" about the arguments in the various invoke() methods that take object []. we could either pass bsharguments down to overloaded forms of the methods or throw an exception subtype including the argument position back up where the error message wouldbe compounded.
WITHOUT_CLASSIFICATION	primitive (number or void) is not normally an instanceofanything. but for internal use we'll test true for thebsh.primitive class. i.e. (5 instanceof bsh.primitive) will be true
WITHOUT_CLASSIFICATION	this will be the current parse character (pattern[index])
WITHOUT_CLASSIFICATION	this will result in a slight speed up since we don't need to read the dtd anyway as aelfred is non-validating
WITHOUT_CLASSIFICATION	fixes the hang that can occur if we 'save as' to a new filename which requires re-sorting
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- conversion to type descriptors --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	each jar file listed in the plugin's jars property needs to know that we need them
WITHOUT_CLASSIFICATION	maintain a count of errors.
WITHOUT_CLASSIFICATION	number of child nodes
WITHOUT_CLASSIFICATION	number of child nodes
WITHOUT_CLASSIFICATION	wrap the exception in a targetexception to propogate it up
WITHOUT_CLASSIFICATION	object is a java.lang wrapper for boolean char or number type
WITHOUT_CLASSIFICATION	alternation operator \| or | (if re_no_bk_vbar) or newline (if re_newline_alt) not available if re_limited_ops is set
WITHOUT_CLASSIFICATION	}}} }}} }}}
WITHOUT_CLASSIFICATION	{{{ removebufferfromlist() method
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- fields for the control flow graph analysis algorithm (used to compute the maximum stack size). a control flow graph contains one node per "basic block" and one edge per "jump" from one basic block to another. each node (i.e. each basic block) is represented by the label object that corresponds to the first instruction of this basic block. each node also stores the list of its successors in the graph as a linked list of edge objects. --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	default for plugins that don't specify this property (ie 4.1-style plugins) is to load them on startup
WITHOUT_CLASSIFICATION	overflow character from last data chunk.
WITHOUT_CLASSIFICATION	sanity check during development
WITHOUT_CLASSIFICATION	a definite node is constructed from a specified number of children. that number of nodes are popped from the stack and made the children of the definite node. then the definite node is pushed on to the stack.
WITHOUT_CLASSIFICATION	while in list out of list index is one past ']'
WITHOUT_CLASSIFICATION	don't do this in static{} since we need jedit.initmisc() run first so we have the jeditresource protocol
WITHOUT_CLASSIFICATION	if value is null - if default is null unset user prop - else set user prop to "" else - if default equals value ignore - if default doesn't equal value set user
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- fields to optimize the creation of {@link edge edge} objects by using a pool of reusable objects. the (shared) pool is a linked list of edge objects linked to each other by their {@link edge#poolnext} field. each time a codewriter needs to allocate an edge it removes the first edge of the pool and adds it to a private list of edge objects. after the end of the control flow analysis algorithm the edge objects in the private list of the codewriter are added back to the pool (by appending this private list to the pool list in order to do this in constant time both head and tail of the private list are stored in this codewriter). --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	buffers retain a reference to the fold handler in question and the easiest way to handle fold handler unloading is this
WITHOUT_CLASSIFICATION	buffer for parsed character data.
WITHOUT_CLASSIFICATION	we get stuck in infinite loops here when unicode escapesfail. must re-init the char stream reader (ascii_ucodeesc_charstream.java)
WITHOUT_CLASSIFICATION	find the java method
WITHOUT_CLASSIFICATION	subexpressions () | \(\) depending on re_no_bk_parens
WITHOUT_CLASSIFICATION	even though this class is called abstractoptionpane it is not really abstract since bufferoptions uses an instance of it to lay out its components.
WITHOUT_CLASSIFICATION	{{{ loadifnecessary() method
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- implementation of the codevisitor interface --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	{{{ package-private members
WITHOUT_CLASSIFICATION	{{{ package-private members
WITHOUT_CLASSIFICATION	buffer for parsed names.
WITHOUT_CLASSIFICATION	reinit the callstack
WITHOUT_CLASSIFICATION	do we have the necessary jdk1.2 packages and optional package?
WITHOUT_CLASSIFICATION	i guess this is when we pass it as an argument? setting locally
WITHOUT_CLASSIFICATION	not a comment create re subexpression as token.
WITHOUT_CLASSIFICATION	{{{ addcomponent() method
WITHOUT_CLASSIFICATION	{{{ setproperties() method
WITHOUT_CLASSIFICATION	adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	{{{ private members
WITHOUT_CLASSIFICATION	hash table of attributes found in current start tag.
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	unmatched right paren ) or \) throw exception if !syntax.get(resyntax.re_unmatched_right_paren_ord)
WITHOUT_CLASSIFICATION	private
WITHOUT_CLASSIFICATION	need to carry over file name and first line globs because they are not given to us by the xmode handler but instead are filled in by the catalog loader.
WITHOUT_CLASSIFICATION	case of a backward jump with an offset < -32768. in this case we automatically replace goto with goto_w jsr with jsr_w and ifxxx <l> with ifnotxxx <l'> goto_w <l> where ifnotxxx is the "opposite" opcode of ifxxx (i.e. ifne for ifeq) and where <l'> designates the instruction just after the goto_w.
WITHOUT_CLASSIFICATION	{{{ instance variables
WITHOUT_CLASSIFICATION	dockmenu.additem(new nsmenuitem().separatoritem()) dockmenu.additem(mimac)
WITHOUT_CLASSIFICATION	create non-interactive local interpreter for this namespacewith source from the input stream and out/err same as this interpreter.
WITHOUT_CLASSIFICATION	if not found and there are arguments to match - look for an overloaded assignable match (first find the method then find accessible version of it)
WITHOUT_CLASSIFICATION	match-any-character operator (except possibly newline and null) .
WITHOUT_CLASSIFICATION	{{{ jarclassloader constructor
WITHOUT_CLASSIFICATION	no need to do this for macros!
WITHOUT_CLASSIFICATION	goto_w
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ applicationshouldhandlereopen() method
WITHOUT_CLASSIFICATION	throw new evalerror("sourced file "+sourcefileinfo+" parser error " + e.getmessage( debug ) node callstack )
WITHOUT_CLASSIFICATION	try static and then object if allowed note that the java compiler should not allow both.
WITHOUT_CLASSIFICATION	search all of its interfaces breadth first
WITHOUT_CLASSIFICATION	zero-or-more repeat operator
WITHOUT_CLASSIFICATION	see what jarclassloader this class is in
WITHOUT_CLASSIFICATION	never called
WITHOUT_CLASSIFICATION	control flow analysis algorithm while the block stack is not empty pop a block from this stack update the max stack size compute the true (non relative) begin stack size of the successors of this block and push these successors onto the stack (unless they have already been pushed onto the stack). note by hypothesis the {@link label#beginstacksize} of the blocks in the block stack are the true (non relative) beginning stack sizes of these blocks.
WITHOUT_CLASSIFICATION	note some interesting things are going on here.1) we swap instead of push the primary mode of operation acts like we are in the enclosing namespace (super must be preserved etc.)2) we do not call the body block eval with the namespace override. instead we allow it to create a second subordinate blocknamespace child of the fornamespace. variable propogation still works through the chain but the block's child cleans the state between iteration. (which is correct java behavior see forscope4.bsh)
WITHOUT_CLASSIFICATION	word begin operator \< if ????
WITHOUT_CLASSIFICATION	used to mark non-existent classes in class hash
WITHOUT_CLASSIFICATION	evaluate a method declaration
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- utility methods dump bytecode array --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	end methods for interacting with parser
WITHOUT_CLASSIFICATION	null means "no value". this ia a placeholder for primitive null value.
WITHOUT_CLASSIFICATION	if idealmatch fits targetmatch and this is the first match or targetmatch is more specific than the best match make it the new best match.
WITHOUT_CLASSIFICATION	tab escape \t
WITHOUT_CLASSIFICATION	{{{ cut() method
WITHOUT_CLASSIFICATION	{{{ customclassmanager class
WITHOUT_CLASSIFICATION	set the default entities here.
WITHOUT_CLASSIFICATION	the canonical file name is also absolute. no need for getabsolutepath() here
WITHOUT_CLASSIFICATION	private to prevent invocation with param that isn't a primitive-wrapper
WITHOUT_CLASSIFICATION	non-special character (or escape to make literal) c | \ for example
WITHOUT_CLASSIFICATION	{{{ getregister() method
WITHOUT_CLASSIFICATION	1st step as explained above resizing an instruction may require to resize another one which may require to resize yet another one and so on. the first step of the algorithm consists in finding all the instructions that need to be resized without modifying the code. this is done by the following "fix point" algorithm - parse the code to find the jump instructions whose offset will need more than 2 bytes to be stored (the future offset is computed from the current offset and from the number of bytes that will be inserted or removed between the source and target instructions). for each such instruction adds an entry in (a copy of) the indexes and sizes arrays (if this has not already been done in a previous iteration!) - if at least one entry has been added during the previous step go back to the beginning otherwise stop. in fact the real algorithm is complicated by the fact that the size of tableswitch and lookupswitch instructions depends on their position in the bytecode (because of padding). in order to ensure the convergence of the algorithm the number of bytes to be added or removed from these instructions is over estimated during the previous loop and computed exactly only after the loop is finished (this requires another pass to parse the bytecode of the method).
WITHOUT_CLASSIFICATION	when the class is loaded populate the hash table of attribute types.
WITHOUT_CLASSIFICATION	modifiers
WITHOUT_CLASSIFICATION	if this type of this implements it directly return thiselse try complain that we don't have the proxy mechanism.
WITHOUT_CLASSIFICATION	if both original args were primitives return a primitive result else it was mixed (wrapper/primitive) return the wrapper type exception is for boolean result return the primitive
WITHOUT_CLASSIFICATION	bcm
WITHOUT_CLASSIFICATION	overrides retoken.chain
WITHOUT_CLASSIFICATION	{{{ constructpath() method
WITHOUT_CLASSIFICATION	clear the static caches in bshclassmanager
WITHOUT_CLASSIFICATION	visitinsn - - - - - - - - - - - - - - - visitintinsn - visitldcinsn int ldc_w = 19 - int ldc2_w = 20 - visitvarinsn - - - - int iload_0 = 26 - int iload_1 = 27 - int iload_2 = 28 - int iload_3 = 29 - int lload_0 = 30 - int lload_1 = 31 - int lload_2 = 32 - int lload_3 = 33 - int fload_0 = 34 - int fload_1 = 35 - int fload_2 = 36 - int fload_3 = 37 - int dload_0 = 38 - int dload_1 = 39 - int dload_2 = 40 - int dload_3 = 41 - int aload_0 = 42 - int aload_1 = 43 - int aload_2 = 44 - int aload_3 = 45 - visitinsn - - - - - - - visitvarinsn - - - - int istore_0 = 59 - int istore_1 = 60 - int istore_2 = 61 - int istore_3 = 62 - int lstore_0 = 63 - int lstore_1 = 64 - int lstore_2 = 65 - int lstore_3 = 66 - int fstore_0 = 67 - int fstore_1 = 68 - int fstore_2 = 69 - int fstore_3 = 70 - int dstore_0 = 71 - int dstore_1 = 72 - int dstore_2 = 73 - int dstore_3 = 74 - int astore_0 = 75 - int astore_1 = 76 - int astore_2 = 77 - int astore_3 = 78 - visitinsn - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - visitiincinsn visitinsn - - - - - - - - - - - - - - - - - - - visitjumpinsn - - - - - - - - - - - - - - - visitvarinsn visitableswitchinsn visitlookupswitch visitinsn - - - - - visitfieldinsn - - - visitmethodinsn - - - int unused = 186 not visited visittypeinsn visitintinsn visittypeinsn visitinsn - visittypeinsn - visitinsn - int wide = 196 not visited visitmultianewarrayinsn visitjumpinsn - int goto_w = 200 - int jsr_w = 201 -
WITHOUT_CLASSIFICATION	flags for reading literals.
WITHOUT_CLASSIFICATION	if null callstack
WITHOUT_CLASSIFICATION	invokemethod() here is generally used by outside code to callbackinto the bsh interpreter. e.g. when we are acting as an interfacefor a scripted listener etc. in this case there is no real call stackso we make a default one starting with the special javacode namespaceand our namespace as the next.
WITHOUT_CLASSIFICATION	arithmetic
WITHOUT_CLASSIFICATION	eof
WITHOUT_CLASSIFICATION	this has been changed since 1.03 to be non-overlapping matches
WITHOUT_CLASSIFICATION	have to handle this case specially on windows. insert \ between eg a and myfile.txt.
WITHOUT_CLASSIFICATION	{{{ toolbar-related constants
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- utility methods constant pool management --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	error reporting.
WITHOUT_CLASSIFICATION	invoke the block overriding namespace with localnamespace
WITHOUT_CLASSIFICATION	a default hashcode()
WITHOUT_CLASSIFICATION	can't cast void to anything
WITHOUT_CLASSIFICATION	thanks to sreenivasa viswanadha for suggesting how to get rid of expensivelookahead here.
WITHOUT_CLASSIFICATION	create a new rematch to hold results
WITHOUT_CLASSIFICATION	{{{ savebackup() method
WITHOUT_CLASSIFICATION	{{{ savebackup() method
WITHOUT_CLASSIFICATION	{{{ layers
WITHOUT_CLASSIFICATION	method body can only use 'return' statment type return control.
WITHOUT_CLASSIFICATION	these are necessary to let us test synchronization from scripts
WITHOUT_CLASSIFICATION	only allow legal java assignment unless we're a cast operation
WITHOUT_CLASSIFICATION	@bgen(jjtree) arrayinitializer
WITHOUT_CLASSIFICATION	optimization check if anchor + minimumlength > length
WITHOUT_CLASSIFICATION	if backup file was created less than 'backuptimedistance' ago we do not create the backup
WITHOUT_CLASSIFICATION	{{{ actionbar() method
WITHOUT_CLASSIFICATION	read the attribute name.
WITHOUT_CLASSIFICATION	retcontrol.returnpoint is the node of the return statement
WITHOUT_CLASSIFICATION	null evalname and we're finished base object for current eval
WITHOUT_CLASSIFICATION	begin beanshell modification - constructor
WITHOUT_CLASSIFICATION	originally called resulttype in the grammar
WITHOUT_CLASSIFICATION	special handling at end of input for e.g. "$"
WITHOUT_CLASSIFICATION	{{{ quicksort() method
WITHOUT_CLASSIFICATION	{{{ quicksort() method
WITHOUT_CLASSIFICATION	this should never throw an exception.
WITHOUT_CLASSIFICATION	inform the handler about the attribute.
WITHOUT_CLASSIFICATION	if return type void return void as the value.
WITHOUT_CLASSIFICATION	note it's ok to cache class resolution here because when the class space changes the namespace will discard cached names.
WITHOUT_CLASSIFICATION	eof not zero read apparently
WITHOUT_CLASSIFICATION	expression syntax follows.
WITHOUT_CLASSIFICATION	precondition pattern[index-1] == '' we will return pos of closing ']'.
WITHOUT_CLASSIFICATION	{{{ istoolsjaravailable() method
WITHOUT_CLASSIFICATION	bind to any port on localhost accept 2 simultaneous connection attempts before rejecting connections
WITHOUT_CLASSIFICATION	found "<?"
WITHOUT_CLASSIFICATION	if we have type info and the child is an array initializerpass it along else use the default eval style.(this allows array initializer to handle the problem allowing for future enhancements in loosening types there).
WITHOUT_CLASSIFICATION	is it a simple variable name?doing this first gives the correct java precedence for vars vs. imported class names (at least in the simple case - seetests/precedence1.bsh). it should also speed things up a bit.
WITHOUT_CLASSIFICATION	@bgen(jjtree) methodinvocation
WITHOUT_CLASSIFICATION	check for {} tomfoolery
WITHOUT_CLASSIFICATION	{{{ parsepermissions() method
WITHOUT_CLASSIFICATION	we have to deal with a huge range of possible border cases here.
WITHOUT_CLASSIFICATION	make a hash of the interface hashcodes in order to cache them
WITHOUT_CLASSIFICATION	is it a bsh script variable reference?if we're just starting the eval of name (no base object)or we're evaluating relative to a this type reference check.
WITHOUT_CLASSIFICATION	generate code to push the bshthis or bshstatic field
WITHOUT_CLASSIFICATION	@bgen(jjtree) arguments
WITHOUT_CLASSIFICATION	we could let a string fall through to final input but since it's the most likely input type we check it first.
WITHOUT_CLASSIFICATION	{{{ expansion class
WITHOUT_CLASSIFICATION	no background mode and opening a new view
WITHOUT_CLASSIFICATION	get the string of enumerated values if necessary.
WITHOUT_CLASSIFICATION	leave null
WITHOUT_CLASSIFICATION	is it a class name?if we're just starting eval of name try to make it else fail.
WITHOUT_CLASSIFICATION	push 'this'
WITHOUT_CLASSIFICATION	@bgen(jjtree) block
WITHOUT_CLASSIFICATION	undone when file lets us get the username use it!
WITHOUT_CLASSIFICATION	}}} {{{ handle $
WITHOUT_CLASSIFICATION	{{{ getbufferswitcher() method
WITHOUT_CLASSIFICATION	getclassinstance() throws exception if not there
WITHOUT_CLASSIFICATION	push the name of the method as a constant
WITHOUT_CLASSIFICATION	@bgen(jjtree) ifstatement
WITHOUT_CLASSIFICATION	freq table collected to save a pass over the data during decompression.
WITHOUT_CLASSIFICATION	if no server running and user runs jedit -quit just exit
WITHOUT_CLASSIFICATION	{{{ loadcaretinfo() method
WITHOUT_CLASSIFICATION	parse a conditional section. [63] conditionalsect = includesect || ignoresect [64] includesect = '<![' %'include' '[' (%markupdecl) ']]>' [65] ignoresect = '<![' %'ignore' '[' ignoresectcontents ']]>' [66] ignoresectcontents = ((skiplit | comment | pi) -(char ']]>')) | ('<![' ignoresectcontents ']]>') | (char - (']' | [<'"])) | ('<!' (char - ('-' | '['))) note the '<![' has already been read. todo verify that i am handling ignoresectcontents right.
WITHOUT_CLASSIFICATION	if we've fallen through here we are no longer resolving toa class type.
WITHOUT_CLASSIFICATION	generate the default branch of switch
WITHOUT_CLASSIFICATION	@bgen(jjtree) whilestatement
WITHOUT_CLASSIFICATION	always in the range 0 .. 9. the current block size is 100000 this number.
WITHOUT_CLASSIFICATION	{{{ property methods
WITHOUT_CLASSIFICATION	@bgen(jjtree) returnstatement
WITHOUT_CLASSIFICATION	fall through
WITHOUT_CLASSIFICATION	note we have fit eof and the block is not full! this is a broken archive. it does not follow the standard blocking algorithm. however because we are generous and it requires little effort we will simply ignore the error and continue as if the entire block were read. this does not appear to break anything upstream. we used to return false in this case. thanks to 'yohann.roussel@alcatel.fr' for this fix.
WITHOUT_CLASSIFICATION	file name
WITHOUT_CLASSIFICATION	{{{ getcolorproperty() method
WITHOUT_CLASSIFICATION	left == default case
WITHOUT_CLASSIFICATION	ok the cheat didn't work start over and do it by the book.
WITHOUT_CLASSIFICATION	don't break jedit core and plugins! throw new interpretererror("null variable value")
WITHOUT_CLASSIFICATION	generate a branch of the constructor switch. this method is called bygenerateconstructorswitch.the code generated by this method assumes that the argument array is on the stack.
WITHOUT_CLASSIFICATION	@bgen(jjtree) returnstatement
WITHOUT_CLASSIFICATION	index of the last char in the block so the block size == last + 1.
WITHOUT_CLASSIFICATION	start with a little cheat. most of the time the white space will fall within the current read buffer if not then fall through.
WITHOUT_CLASSIFICATION	if recurse set global untyped var else set it here. namespace varscope = recurse ? getglobal() this this modification makes default allocation local
WITHOUT_CLASSIFICATION	bubble up if allowed
WITHOUT_CLASSIFICATION	ok?
WITHOUT_CLASSIFICATION	squeltch
WITHOUT_CLASSIFICATION	squeltch
WITHOUT_CLASSIFICATION	setting up the unzftab entries here is not strictly necessary but it does save having to do it later in a separate pass and so saves a block's worth of cache misses.
WITHOUT_CLASSIFICATION	{{{ getmode() method
WITHOUT_CLASSIFICATION	{{{ getautosavefile() method
WITHOUT_CLASSIFICATION	normalise whitespace if necessary.
WITHOUT_CLASSIFICATION	try parent
WITHOUT_CLASSIFICATION	forcclass
WITHOUT_CLASSIFICATION	note technically i think we could get by passing in only thecurrent namespace or perhaps bshclassmanager here instead of callstack and interpreter. however let's just play it safe in caseof future changes - anywhere you eval a node you need these.
WITHOUT_CLASSIFICATION	undo the mtf values for the selectors.
WITHOUT_CLASSIFICATION	{{{ newfile() method
WITHOUT_CLASSIFICATION	{{{ addbufferchangelistener() method
WITHOUT_CLASSIFICATION	system id
WITHOUT_CLASSIFICATION	add the new typed var
WITHOUT_CLASSIFICATION	if this was a literal "super" reference then we allow recursionin setting the variable to get the normal effect of finding thenearest definition starting at the super scope. on any otherresolution qualified by a 'this' type reference we want to setthe variable directly in that scope. e.g. this.x=5 or somethistype.x=5in the old scoping rules super didn't do this.
WITHOUT_CLASSIFICATION	type is correct here
WITHOUT_CLASSIFICATION	word boundary means input[index-1] was a word character and input[index] is not or input[index] is a word character and input[index-1] was not in the string "one two three" these positions match |o|n|e| |t|w|o| |t|h|r|e|e| ^ ^ ^ ^ ^ ^ is current character a letter or digit? is previous character a letter or digit?
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	wait for pending i/o requests
WITHOUT_CLASSIFICATION	wait for pending i/o requests
WITHOUT_CLASSIFICATION	will be cached from now on
WITHOUT_CLASSIFICATION	utility routines.
WITHOUT_CLASSIFICATION	declaredonly
WITHOUT_CLASSIFICATION	declaredonly
WITHOUT_CLASSIFICATION	declaredonly
WITHOUT_CLASSIFICATION	note if we want methods declared inside blocks to be accessible via this.methodname() inside the block we could handle it here as a special case. see also resolvethisfieldreference() special handling for blocknamespace case. they currently work via the direct name e.g. methodname().
WITHOUT_CLASSIFICATION	auto-gen default constructor use default super constructor
WITHOUT_CLASSIFICATION	number of times we've matched so far
WITHOUT_CLASSIFICATION	create a new file when the last is closed
WITHOUT_CLASSIFICATION	{{{ edit modes syntax highlighting
WITHOUT_CLASSIFICATION	the new length is <= the old one.
WITHOUT_CLASSIFICATION	try object imports
WITHOUT_CLASSIFICATION	found an object and it's not an undefined variable
WITHOUT_CLASSIFICATION	determine if the constructor calls this() or super()
WITHOUT_CLASSIFICATION	check for stingy match for each possibility.
WITHOUT_CLASSIFICATION	nodes and heap entries run from 1. entry 0 for both the heap and nodes is a sentinel.
WITHOUT_CLASSIFICATION	nodes and heap entries run from 1. entry 0 for both the heap and nodes is a sentinel.
WITHOUT_CLASSIFICATION	nodes and heap entries run from 1. entry 0 for both the heap and nodes is a sentinel.
WITHOUT_CLASSIFICATION	nodes and heap entries run from 1. entry 0 for both the heap and nodes is a sentinel.
WITHOUT_CLASSIFICATION	nodes and heap entries run from 1. entry 0 for both the heap and nodes is a sentinel.
WITHOUT_CLASSIFICATION	nodes and heap entries run from 1. entry 0 for both the heap and nodes is a sentinel.
WITHOUT_CLASSIFICATION	{{{ closeallbuffers() method
WITHOUT_CLASSIFICATION	{{{ closeallbuffers() method
WITHOUT_CLASSIFICATION	{{{ need to convert entries of 'props' to propvalue instances
WITHOUT_CLASSIFICATION	insert the content type if any.
WITHOUT_CLASSIFICATION	try static imports
WITHOUT_CLASSIFICATION	this() constructors come after super constructors in the table
WITHOUT_CLASSIFICATION	order these from longest to shortest start by assuming longest (more repeats)
WITHOUT_CLASSIFICATION	a 6-byte block header the value chosen arbitrarily as 0x314159265359 -). a 32 bit value does not really give a strong enough guarantee that the value will not appear by chance in the compressed datastream. worst-case probability of this event for a 900k block is about 2.0e-3 for 32 bits 1.0e-5 for 40 bits and 4.0e-8 for 48 bits. for a compressed file of size 100gb -- about 100000 blocks -- only a 48-bit marker will do. nb normal compression/ decompression do not rely on these statistical properties. they are only important when trying to recover blocks from damaged files.
WITHOUT_CLASSIFICATION	close remaining buffers (the close dialog only deals with dirty ones)
WITHOUT_CLASSIFICATION	we do a write lock so that the autosave which grabs a read lock is not executed between the deletion of the autosave file and clearing of the dirty flag
WITHOUT_CLASSIFICATION	if we want to support multiple commands in the command path we need tochange this to not throw the exception.
WITHOUT_CLASSIFICATION	check for existing method
WITHOUT_CLASSIFICATION	create the instance 'this' namespace set it on the object instance and invoke the instance initializer
WITHOUT_CLASSIFICATION	find new doableslast
WITHOUT_CLASSIFICATION	20 is just a paranoia constant
WITHOUT_CLASSIFICATION	{{{ saveallbuffers() method
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	ucs-4 must begin with "<!xml" 0x3c 0x00 0x00 0x00 ucs-4 little-endian (4321)
WITHOUT_CLASSIFICATION	return countparts(value) > 1
WITHOUT_CLASSIFICATION	the object instance has already been initialzed by another constructor. fall through to invoke the constructor body below.
WITHOUT_CLASSIFICATION	at this point we've either got too many or just the right amount. see if this numrepeats works with the rest of the regexp.
WITHOUT_CLASSIFICATION	write `magic' bytes h indicating file-format == huffmanised followed by a digit indicating blocksize100k.
WITHOUT_CLASSIFICATION	auto reload changed buffers?
WITHOUT_CLASSIFICATION	{{{ actionhandler class
WITHOUT_CLASSIFICATION	ucs-4 must begin with "<!xml" 0x00 0x3c 0x00 0x00 ucs-4 unusual (3421)
WITHOUT_CLASSIFICATION	test all possible matches for this number of repeats
WITHOUT_CLASSIFICATION	complete the big bucket [ss] by quicksorting any unsorted small buckets [ss j]. hopefully previous pointer-scanning phases have already completed many of the small buckets [ss j] so we don't have to sort them at all.
WITHOUT_CLASSIFICATION	sweet. savebackup() will create backupdir if it doesn't exist.
WITHOUT_CLASSIFICATION	{{{ parentmousehandler class
WITHOUT_CLASSIFICATION	ucs-2 with a byte-order marker. 0xff 0xfe ucs-2 little-endian (21)
WITHOUT_CLASSIFICATION	can't call it getclass()
WITHOUT_CLASSIFICATION	handle primitive widening conversions - jls 5.1.2
WITHOUT_CLASSIFICATION	overridenamespace
WITHOUT_CLASSIFICATION	now scan this big bucket so as to synthesise the sorted order for small buckets [t ss] for all t != ss.
WITHOUT_CLASSIFICATION	even if reallyexit is false we still exit properly if background mode is off
WITHOUT_CLASSIFICATION	compare existing entries' hashcode with this
WITHOUT_CLASSIFICATION	compare with number of dimensions actually created with the number specified (syntax uses the undefined ones here)
WITHOUT_CLASSIFICATION	some kind of 8-bit encoding without "<?xml" (otherwise) utf-8 without encoding/xml declaration
WITHOUT_CLASSIFICATION	lots of preconditions checked hereonce things are running smoothly we might comment these out(that's what assertions are for).
WITHOUT_CLASSIFICATION	dimensionsnode can return either a fully intialized array or void.when void the prescribed array dimensions (defined and undefined)are contained in the node.
WITHOUT_CLASSIFICATION	so that we don't try to reset() right away
WITHOUT_CLASSIFICATION	so that we don't try to reset() right away
WITHOUT_CLASSIFICATION	find the coding table which is best for this group and record its identity in the selector table.
WITHOUT_CLASSIFICATION	in this case we can't directly call view.close() we have to call closeview() for all open views
WITHOUT_CLASSIFICATION	execute nodes skipping labels until a break or return
WITHOUT_CLASSIFICATION	check for entity recursion.
WITHOUT_CLASSIFICATION	--- instance data ---
WITHOUT_CLASSIFICATION	both primitives do primitive cast
WITHOUT_CLASSIFICATION	filter
WITHOUT_CLASSIFICATION	check if input is at a valid position
WITHOUT_CLASSIFICATION	10
WITHOUT_CLASSIFICATION	stop server
WITHOUT_CLASSIFICATION	{{{ enhancedbutton constructor
WITHOUT_CLASSIFICATION	stop all plugins
WITHOUT_CLASSIFICATION	delegate to the static method
WITHOUT_CLASSIFICATION	test for a match and push the character back if the match fails.
WITHOUT_CLASSIFICATION	interpreter has no input stream use eval() only interpreter has no input stream use eval() only interpreter has a user print prompts etc.
WITHOUT_CLASSIFICATION	object r = checkonly ? valid_cast
WITHOUT_CLASSIFICATION	perform a suffix operation on the given object and return the new value.<p>obj will be a node when suffix evaluation begins allowing us tointerpret it contextually. (e.g. for .class) thereafter it will be an value object or lhs (as determined by tolhs).<p>we must handle the tolhs case at each point here.<p>
WITHOUT_CLASSIFICATION	copy 3
WITHOUT_CLASSIFICATION	{{{ updateposition() method
WITHOUT_CLASSIFICATION	if no requests are running requestdone() will not be called so we must queue the awt runner ourselves.
WITHOUT_CLASSIFICATION	also cache the class so that no import resolution must occur this avoids having to load our enclosing class which isn't finished being generated yet oy.
WITHOUT_CLASSIFICATION	low-level i/o.
WITHOUT_CLASSIFICATION	need to set the input stream - reinit the parser?
WITHOUT_CLASSIFICATION	primitive to arbitrary object type. allow primitive.casttotype() to handle it as well as cases of primitive.null and primitive.void
WITHOUT_CLASSIFICATION	evaluate our prefix if it needs evaluating first.if this is the first evaluation our prefix mayb be a node (directly from the primaryprefix) - eval() it to an object. if it's an lhs resolve to a value.note the ambiguous name construct is now necessary where the node may be an ambiguous name. if this becomes common we might want to make a static method nodetoobject() or something. the point is that we can't just eval() - we need to direct the evaluation to the context sensitive type of result namely object class etc.
WITHOUT_CLASSIFICATION	a la perl $0 is whole thing $1 - $9 are subexpressions
WITHOUT_CLASSIFICATION	if started with java -jar jedit.jar
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- constructor --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	read as many bytes as possible into the read buffer.
WITHOUT_CLASSIFICATION	init the static shared sharedobject if it's not there yet
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	map
WITHOUT_CLASSIFICATION	index tracks the position in the char array
WITHOUT_CLASSIFICATION	pass 3 layout components
WITHOUT_CLASSIFICATION	log.log(log.debugjedit.classfnf)
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- fields --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	strict
WITHOUT_CLASSIFICATION	dispatch to an encoding-specific reader method to populate the readbuffer.
WITHOUT_CLASSIFICATION	bsh.evalonly
DESIGN	workaround for jdk bug 4071281 where system.in.available() returns too large a value. this bug has been fixed in jdk 1.2.
DESIGN	moved to guiutilities as it makes no sense being here.
DESIGN	hack done to fix bringing the window to the front. at least on windows frame.tofront() doesn't cut it. remove the iswindows check if it's broken under other oses too.
DESIGN	next version remove this
DESIGN	broken eclipse workaround! 24 febuary 2004
DESIGN	xxx does this really belong here?
DESIGN	note this method and resolveexpectedjavafield should be rewrittento invert this logic so that no exceptions need to be caughtunecessarily. this is just a temporary impl.@return the field or null if not found
DESIGN	note this should really just throw nosuchfieldexception needto change related signatures and code.
DESIGN	this method should be rewritten to use getfields() and avoid catchingexceptions during the search.
DESIGN	note object is only used here for precondition get rid of it?
DESIGN	why is object in the args?
DESIGN	{{{ methods that really shouldn't be public
DESIGN	perhaps if xerces wasn't slightly brain-damaged we would not need this
DESIGN	first try for an accessible version of the exact match.this first lookup seems redundant with below but is apparentlyneeded. this whole thing is messy.
DESIGN	this is a weird hack. we don't want c+e a to insert 'a' in the search bar if the search bar has focus
DESIGN	this is a weird hack. we don't want c+e a to insert 'a' in the search bar if the search bar has focus
DESIGN	notes see notes on findmostspecificmethod.this method should be rolled into findmostspecificmethod.
DESIGN	hack to get fixed length 'length' field
DESIGN	if any subexpressions didn't terminate they don't count todo check if this code ever gets hit
DESIGN	this feels sloppy especially for non-u.s. locales.
DESIGN	interval operator {x} | {x} | {xy} (re_intervals && re_no_bk_braces) \{x\} | \{x\} | \{xy\} (re_intervals && !re_no_bk_braces) open question what is proper interpretation of '{' at start of string?
DESIGN	should implement getminimumlength() -- any ideas?
DESIGN	review how do we resolve this discrepancy?!
DESIGN	{{{ unixworkaround class
DESIGN	{{{ unixworkaround constructor
DESIGN	note this could be made clearer by adding an inner class for thecases and an object context for the child traversal.
DESIGN	this could be static
DESIGN	scripting classes currently requires accessibility this can be eliminated with a bit more work.
DESIGN	this should be before dockables are initialized
DESIGN	this is a particularly nasty bit of code that checks for a parameter entity reference but peeks ahead to catch the '%' in parameter entity declarations.
DESIGN	replace this is cocoa api calls later
DESIGN	this could be smarter
DESIGN	should we do this for both cases above?
DESIGN	should probably error
DESIGN	why both of these?
DESIGN	catch the mismatch and continue to try the nextnote this is innefficient should have an isassignablefrom() that doesn't throw
DESIGN	thanks to slava pestov (of jedit fame) for import caching enhancements.note this class has gotten too big. it should be broken down a bit.
DESIGN	note we will ll move this behavior out to a subclass of namespace but we'll start here.
DESIGN	note we need a singleton here so that things like 'this == this' work(and probably a good idea for speed).caching a single instance here seems technically incorrectconsidering the declaringinterpreter could be different under somecircumstances. (case a child interpreter running a source() / eval() command ). however the effect is just that the main interpreter thatexecutes your script should be the one involved in call-backs from java.i do not know if there are corner cases where a child interpreter wouldbe the first to use a this reference in a namespace or if that wouldeven cause any problems if it did we could do some experimentsto find out and if necessary we could cache on a per interpreterbasis if we had weak references we might also look at skipping over child interpreters and going to the parent for the declaring interpreter so we'd be sure to get the top interpreter.
DESIGN	cut off from parent we must have our own class manager. can't do this in the run() command (needs to resolve stuff) should we do it by default when we create a namespace will no parent of class manager?
DESIGN	xxx if we keep the createclassmanager in getclassmanager then we can axe this?
DESIGN	null value is just a declaration note we might want to keep any existing value here instead of reset
DESIGN	(should we cache info in not a class case too?)
DESIGN	it was explicitly imported but we don't know what it is. should we throw an error here??
DESIGN	clear name resolvers don't know if this is necessary.
DESIGN	note this impor pattern is becoming common could factor it out intoan importedobject vector class.
DESIGN	note which of these things should be checked at parse time vs. run time?
DESIGN	could refactor these a bit
DESIGN	this should be per instance
DESIGN	redundant with constructor
DESIGN	note we need a form of eval that passes the callstack through
DESIGN	primary interpreter set and get variable methodsnote these are squeltching errors should they?
DESIGN	i wish protected access were limited to children and not also package scope i want this to be a singleton implemented by variouschildren.
DESIGN	wrap nulls.this is a bit of a cludge to address a deficiency in the classgenerator whereby it does not wrap nulls on method delegate. seeclass generator.java. if we fix that then we can remove this.(just have to generate the code there.)
DESIGN	i wish i could make this "friendly" to only namespace
DESIGN	resolve relative to a class typestatic field inner class ?
DESIGN	allow getthis() to work through blocknamespace to the method namespace xxx re-eval this do we need it?
DESIGN	xxxx re-evaluate this can getsuper work by itself now? if we're a class instance and the parent is also a class instance then super means our parent.
DESIGN	should clean this up to a single return statement
DESIGN	note this class essentially just delegates most of its methods to itsparent. the setvariable() indirection is very small. we could probablyfold this functionality back into the base namespace as a special case.but this has changed a few times so i'd like to leave this abstraction fornow.
DESIGN	can we use the proxy mechanism to cast a bsh.this to the correct interface?
DESIGN	move me to classpath/classmanagerimpl???
DESIGN	note this implementation is temporary. we currently keep a flatnamespace of the base name of classes. i.e. beanshell cannot be in theprocess of defining two classes in different packages with the samebase name. to remove this limitation requires that we work throughnamespace imports in an analogous (or using the same path) as regularclass import resolution. this workaround should handle most cases so we'll try it for now.
DESIGN	note is using signaturekey in this way dangerous? in the pathologicalcase a user could eat up memory caching every possible combination ofargument types to an untyped method. maybe we could be smarter aboutit by ignoring the types of untyped parameter positions? the methodresolver could return a set of "hints" for the signature key caching?there is also the overhead of creating one of these for every methoddispatched. what is the alternative?
DESIGN	notesit would not be hard to eliminate the use of org.objectweb.asm.type fromthis class making the distribution a tiny bit smaller.
DESIGN	xxx clean up this conditional
DESIGN	should use try/finally here to pop ns
DESIGN	this will probably not get used object type
DESIGN	change the parent (which was the class static) to the class instance we really need to check if we're a static inner class here first but for some reason java won't show the static modifier on our fake inner classes could generate a flag field.
DESIGN	is this right?
DESIGN	this should probably be in reflect.java
DESIGN	they never taught you this in undergrad computer science
DESIGN	fucking gtk look and feel!
DESIGN	get available screens o(n^3) this is nasty but since we aren't dealling with many items it should be fine
DESIGN	aha! this is probably the only way to fix this
DESIGN	stupid swing
DESIGN	work around for broken ftp plugin!
DESIGN	hack
DESIGN	this is such a bad way of doing it but oh well
DESIGN	this is such a bad way of doing it but oh well
DESIGN	compatibility kludge for jedit 3.1 and earlier
DESIGN	stupid scrollbar policy is an attempt to work around bugs people have been seeing with ibm's jdk -- 7 sep 2000
DESIGN	crusty workaround
DESIGN	stupid scrollbar policy is an attempt to work around bugs people have been seeing with ibm's jdk -- 7 sep 2000
DESIGN	retarded gtk look and feel!
DESIGN	this doesn't look pretty and mode line should probably be split up into seperate components/strings
DESIGN	there must be a better way of fixing this the problem is that this method can sometimes be called as a result of a text area scroll event in which case the caret position has not been updated yet.
DESIGN	fucking gtk look and feel
DESIGN	fucking gtk look and feel
DESIGN	windows jdk workaround
DESIGN	workaround for a+keys producing garbage on windows
DESIGN	we consume this to work around the bug where a+tab window switching activates the menu bar on windows.
DESIGN	workaround for swing rendering labels starting with <html> using the html engine
DESIGN	i don't know of any other way to fix this since invoking this command from a menu results in the focus owner being the menu until the menu goes away.
DESIGN	none of the others are ever meant to be removed. retarded eh? this needs to be fixed eventually for plugins might want to do weird stuff to jedit's ui
DESIGN	xxx this should not be hardcoded
DESIGN	i guess translated events do not have the 'evt' field setso consuming won't work. i don't think this is a problem asnothing uses translation anyway
DESIGN	jdk 1.4 workaround
DESIGN	workaround for uncooperative windows l&f
DESIGN	this is retarded. excuse me while i drool and make stupid noises
DESIGN	{{{ windows work around
DESIGN	on windows paths of the form x list the last working directory on that drive. to list the root of the drive you must use x\. however the vfs browser and friends strip off trailing path separators for various reasons. so to work around that we add a '\' to drive letter paths on windows.
DESIGN	case-insensitive fs workaround
DESIGN	addtofavorites() which is a static method (for convinience) needs an instance of the vfs to pass to vfsmanager.sendvfsupdate() hence this hack.
DESIGN	perhaps here we would want to guard with a property for parallel backups or not.
DESIGN	nasty hardcoded values
DESIGN	xxx magic number
DESIGN	xxx magic number
DESIGN	xxx magic number
DESIGN	while this might be questionable some menus depend on properties
DESIGN	this part sucks
DESIGN	this part sucks
DESIGN	this part sucks
DESIGN	simplified these settings a little
DESIGN	spacing workaround
DESIGN	fuck me dead
DESIGN	fuck me dead
DESIGN	these are used to eliminate code duplication. i don't normally use the visitor or "template method" pattern but this code was contributed by peter cox and i don't feel like changing it around too much.
DESIGN	this is stupid and misleading. but 'path' is not used anywhere except the above line and if this is done after the 'continue' then we will either hang or be forced to duplicate it inside the buffer == null or add a 'finally' clause. you decide which one's worse.
DESIGN	this is stupid and misleading. but 'path' is not used anywhere except the above line and if this is done after the 'continue' then we will either hang or be forced to duplicate it inside the buffer == null or add a 'finally' clause. you decide which one's worse.
DESIGN	ugly workaround
DESIGN	windows bug workaround in case a yes/no confirm was shown
DESIGN	xxx hairy code that is basically just a functional(?) port of some other code i barely understood
DESIGN	some regexps (eg ^ by itself) have a length == 0 so we implement this hack. if you don't understand what's going on here then go back to watching mtv
DESIGN	workaround for hang if match was zero-width. not sure if there is a better way to handle this
DESIGN	wtf?
DESIGN	copy and paste from resyntaxmatcher to make syntax package independent of jedit itself
DESIGN	this is a hack and really needs to be done better.
DESIGN	hack need a more direct way of obtaining a view? jedittextarea.getview() method?
DESIGN	this listener priority thing is a bad hack
DESIGN	stupidity
DESIGN	stupidity
DESIGN	this doesn't seem very correct but it fixes a problem when setting the initial caret position for a buffer (eg from the recent file list)
DESIGN	stupid caret will automatically be incremented
DESIGN	silly that we reference the vertical scroll bar here directly. we do this so that the horizontal scroll bar is flush with the vertical scroll bar
DESIGN	don't try this at home
DESIGN	this method is a nightmare
DESIGN	should the next two be public maybe?
DESIGN	the following two boolean checks were tacked on. this could probably be smoothed out.
DESIGN	??? this should only be called with fully loaded action set
DESIGN	drag and drop support i'd just move the code to jedittextarea but it depends on jdk 1.4 apis
DESIGN	on unix set permissions of port file to rw------- so that on broken unices which give everyone read access to user home dirs people can't see your port file (and hence send arbitriary beanshell code your way. nasty.)
DESIGN	i'm too tired to think of a better way to handle this right now.
DESIGN	we do need to save every possible point but the number of clone() invocations here is really a killer for performance on non-stingy repeat operators. i'm open to suggestions
DESIGN	parse pattern into tokens. does anyone know if it's more efficient to use char[] than a string.charat()? i'm assuming so.
DESIGN	this is where checked exceptions piss me off. this method only uses a stringreader which can never throw an exception
DESIGN	strip off drive letters! review would a better check be "(file.separator == '\')"?
DESIGN	not sure if we should really recurse here for explicitly imported class in parent
DESIGN	hacked bufferiorequest to send vfsupdates in case two stage save is off now
DESIGN	look for a default invoke() handler method in the namespace note this code duplicates that in namespace getcommand() is that ok?
DESIGN	check for field on object note could eliminate throwing the exception somehow
DESIGN	optimization - if classofstaticmethod is set then we have already been here and determined that this is a static method invocation. note maybe factor this out with path below clean up.
DESIGN	some other primitive should avoid calling methods on primitive as we do in name (can't treat primitive like an object message) but the hole is useful right now.
DESIGN	look for a default invoke() handler method in the namespace note this code duplicates that in this.java should it? call on 'this' can never be a command
DESIGN	static methods that operate on compound ('.' separated) names i guess we could move these to stringutil someday
DESIGN	need to loosen this to any throwable do we need to handle that in interpreter somewhere? check first
DESIGN	can this be factored out? should be be adding the l here instead?
DESIGN	workaround for swing's annoying processing of labels starting with <html> which often breaks
DESIGN	the sooner ppl move to the new api the less we'll need crap like this
DESIGN	hack to move the spaces to the front
DESIGN	note incorrect here - we are using the hack in bsh class manager that allows lookup by base name. we need to eliminate this limitation by working through imports. see notes in class manager.
DESIGN	need this bullshit scroll bar policy for the preferred size hack to work
DESIGN	this is a dirty hack and it relies on the fact that updates for parents are sent before updates for the changed nodes themselves (if this was not the case the browser wouldn't be updated properly on delete etc). to avoid causing '> 1 request' errors don't reload directory if request already active
DESIGN	hack so that 'select all' does not change current buffer
DESIGN	hack since helpviewer needs a url
DESIGN	have to do this hack until vfspath class is written
DESIGN	a little hack for reverse replace and find
DESIGN	if an occurence occurs at thebeginning of the selection theselection start will get moved.this sucks so we hack to avoid it.
DESIGN	this is a sloppy hack to fix bug "[ 677902 ] hitting return after collapsed fold" the idea is that if we extend the range then the problem described in the bug happends so if the insert is at the very end of the range we don't extend it instead we push the insert into the next range however for this to work properly we also have to mess with screen line counts.
DESIGN	undocumented hack to allow browser actions to work. xxx - clean up in 4.3
DESIGN	temporary hack to support inner classes if the obj is a non-static inner class then import the context this is not a sufficient emulation of inner classes. replace this later
DESIGN	stupid hack to handle referencing a rule set that is defined later!
DESIGN	note this class is messy. the method and field resolution need to berewritten. various methods in here catch nosuchmethod or nosuchfieldexceptions during their searches. these should be rewritten to avoidhaving to catch the exceptions. method lookups are now cached at a high level so they are less important however the logic is messy.
DESIGN	implementation notesnote we may need some synchronization in herenote on version dependency this base class is jdk 1.1 compatiblehowever we are forced to use weak references in the full featuredimplementation (the optional bsh.classpath package) to accomodate all ofthe fleeting namespace listeners as they fall out of scope. (namespacesmust be informed if the class space changes so that they can un-cachenames). <p>perhaps a simpler idea would be to have entities that reference cachedtypes always perform a light weight check with a counter / referencevalue and use that to detect changes in the namespace. this puts the burden on the consumer to check at appropriate times but could eliminatethe need for the listener system in many places and the necessity of weak references in this package.<p>
DESIGN	can't this be combined with run() ?run seems to have stuff in it for interactive vs. non-interactivecompare them side by side and see what they do differently aside from theexception handling.
DESIGN	notesthis is broken. it finds public but less specific methods overnon-public but more specific ones.findmostspecficmethod() needs to be rewritten to eliminate findaccessiblemethod. we should implement the findmostspecificmethod that uses the publiconly flag. findmostspecificmethod should alsooperate in two passes to give standard java assignable matches priorityover extended bsh type matches.
DESIGN	todoto get cast and boxing working e.g.e.g. byte [] ia = { 1 2 }if the basetype is a wrapper type then we need to get the primitive type class for the base type here in order for the cast to allow it then boxing will happen naturally inthe array.set().e.g. integer [] ia = { 1 2 }
DESIGN	consoleinterface the interpreter reflexively implements the console interface that it uses. should clean this up by using an inner class to implement the console for us.
DESIGN	issues to resolve here1) in which classloader should we define the class?if there is a bshclassloader should we define it there?2) should we use reflection to set it in a non-bsh classloaderif there is one or should we always create a bsh classloader(and expose its defineclass)?
DESIGN	notesthis is broken. it finds public but less specific methods overnon-public but more specific ones.this method needs to be rewritten to eliminate findaccessiblemethod.we should implement the findmostspecificmethod that uses the publiconlyflag. findmostspecificmethod should also operate in two passes to givestandard java assignable matches priority over extended bsh typematches.
DESIGN	switch eats a multi-level break here? not empty statement
DESIGN	switch eats a multi-level break here? not empty statement
DESIGN	this is the namespace in which the method is set.it is a back-reference for the node which needs to execute under this namespace. it is not necessary to declare this transient because we can only be saved as part of our namespace anyway (currently).
DESIGN	copy and paste from bsh/classpath/classmanagerimpl.java
DESIGN	copy and paste from bsh/classpath/classmanagerimpl.java
DESIGN	split the methods into constructors and regular method lists
DESIGN	hack sticking to first interpreter that resolves this see comments on type instance variable
DESIGN	should cache this subject to classloader change message evaluation of the formal parameter simply resolves its type via the specified namespace.. it doesn't modify the namespace.
DESIGN	silly bug workaround #8694. if you look at the above code note that we restore the saved caret position first then scroll to the saved location. however the caret changing can itself result in scrolling to a different location than what was saved and since movecaretposition() calls updatebrackethighlight() the bracket highlight's out of bounds calculation will rely on a different set of physical first/last lines than what we will end up with eventually. instead of confusing the user with status messages that appear at random when switching buffers we simply hide the message altogether.
DESIGN	somewhat of a hack. if the special fields are visible (we'reoperating relative to a 'this' type already) dissallow further.this references to prevent user from skipping to things likesuper.this.caller
DESIGN	note the bsh command code should probably not be here we need toscope it by the namespace that imported the command so it probablyneeds to be integrated into namespace.
DESIGN	register an attribute declaration for later retrieval. format - string type - string default value - int value type todo do something with attribute types.
DESIGN	imported full name wasn't found as an absolute class if it is compound try to resolve to an inner class. (maybe this should happen in the bshclassmanager?)
DESIGN	should check for strict java here and use isjavaassignable() instead
DESIGN	we have to deal with assembly!!! the programmer can be writing little 32 byte chunks for all we know and we must assemble complete records for writing. review maybe this should be in tarbuffer? could that help to eliminate some of the buffer copying.
DESIGN	implement string += valueaccording to the jls value may be anything.in beanshell we'll disallow void (undefined) values.(or should we map them to the empty string?)
