WITHOUT_CLASSIFICATION	@see java.lang.object#hashcode()
WITHOUT_CLASSIFICATION	is this item a copy? @see java.lang.object#equals(java.lang.object)
WITHOUT_CLASSIFICATION	once one criticism is found exit
WITHOUT_CLASSIFICATION	constructor
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	user interface
WITHOUT_CLASSIFICATION	criticism control
WITHOUT_CLASSIFICATION	issue resolutions
WITHOUT_CLASSIFICATION	criticism control
WITHOUT_CLASSIFICATION	critiquing
WITHOUT_CLASSIFICATION	design feedback
WITHOUT_CLASSIFICATION	the critiquing thread should wait if disabled.
WITHOUT_CLASSIFICATION	why?
WITHOUT_CLASSIFICATION	performs critique asap. @see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see java.lang.object#hashcode()
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	critiquing
WITHOUT_CLASSIFICATION	constructor and singeton methods
WITHOUT_CLASSIFICATION	why?
WITHOUT_CLASSIFICATION	&& getautocritique()
WITHOUT_CLASSIFICATION	don't clear everything here breaks loading!
WITHOUT_CLASSIFICATION	v71
WITHOUT_CLASSIFICATION	don't let a transient error kill the thread
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	clear out queues! @@@
WITHOUT_CLASSIFICATION	decision model listener
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	end class childgendmelements
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	user interface
WITHOUT_CLASSIFICATION	issue resolution
WITHOUT_CLASSIFICATION	todo this should be the name of the designer that created the todoitem not the current username!
WITHOUT_CLASSIFICATION	log.log(level.fine "predicate() returned true creating todoitem")
WITHOUT_CLASSIFICATION	corrective automations wizards
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	constructor
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	critiquing
WITHOUT_CLASSIFICATION	criticism control
WITHOUT_CLASSIFICATION	todo make use of the constants defined in the todoitem class!
WITHOUT_CLASSIFICATION	if wizclass is not a subclass of wizard print a warning
WITHOUT_CLASSIFICATION	return getcriticname()
WITHOUT_CLASSIFICATION	criticism control
WITHOUT_CLASSIFICATION	design feedback
WITHOUT_CLASSIFICATION	issue resolution
WITHOUT_CLASSIFICATION	end interface poster
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	log.log(level.fine "adding resolution for " + c.getclass() + " " + cancreate)
WITHOUT_CLASSIFICATION	use this for fast fail instead. sacrificed for complete fail. d00mst throw new unresolvableexception( "unable to create itemuid for class " + obj.getclass())
WITHOUT_CLASSIFICATION	todo values
WITHOUT_CLASSIFICATION	end class goal
WITHOUT_CLASSIFICATION	check if we are using a supported java version
WITHOUT_CLASSIFICATION	implements java.io.serialization
WITHOUT_CLASSIFICATION	end class curdecisioncm
WITHOUT_CLASSIFICATION	end class standardcm
WITHOUT_CLASSIFICATION	end class compositecm
WITHOUT_CLASSIFICATION	end class enabledcm
WITHOUT_CLASSIFICATION	end class notsnoozedcm
WITHOUT_CLASSIFICATION	end class andcm
WITHOUT_CLASSIFICATION	end class designgoalscm
WITHOUT_CLASSIFICATION	end class orcm
WITHOUT_CLASSIFICATION	register our last chance exception handler
WITHOUT_CLASSIFICATION	get the splash screen up as early as possible
WITHOUT_CLASSIFICATION	we have to do this to set the laf for the splash screen
WITHOUT_CLASSIFICATION	main initialization happens here
WITHOUT_CLASSIFICATION	tooltipmanager.sharedinstance().setinitialdelay(500)
WITHOUT_CLASSIFICATION	force the configuration to load
WITHOUT_CLASSIFICATION	synchronize the startup directory
WITHOUT_CLASSIFICATION	then print out some version info for debuggers
WITHOUT_CLASSIFICATION	set the i18n locale
WITHOUT_CLASSIFICATION	set properties for application behaviour
WITHOUT_CLASSIFICATION	now let's print it
WITHOUT_CLASSIFICATION	nothing else to do (?)
WITHOUT_CLASSIFICATION	we must have a project open before continuing. create if necessary
WITHOUT_CLASSIFICATION	initpreinitialize() initializesubsystems(new simpletimer() null) argoframe.getinstance().setvisible(true)
WITHOUT_CLASSIFICATION	perform one command.
WITHOUT_CLASSIFICATION	now create a new object.
WITHOUT_CLASSIFICATION	initlogging()
WITHOUT_CLASSIFICATION	on uniprocessors wait until we're sure the splash screen has been painted so that we aren't competing for resources
WITHOUT_CLASSIFICATION	make the projectbrowser
WITHOUT_CLASSIFICATION	end class main
WITHOUT_CLASSIFICATION	end class postload
WITHOUT_CLASSIFICATION	we don't care if optional modules aren't found.
WITHOUT_CLASSIFICATION	we don't care if optional modules aren't found.
WITHOUT_CLASSIFICATION	end class loadmodules
WITHOUT_CLASSIFICATION	all tabs are added at the end except a tabtodotarget
WITHOUT_CLASSIFICATION	end interface guisettingstabinterface
WITHOUT_CLASSIFICATION	skip pos we know it's not a valid char from above
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	store in the user configuration and let gef know also.
WITHOUT_CLASSIFICATION	use the configuration if it exists otherwise use what gef thinks.
WITHOUT_CLASSIFICATION	constructor
WITHOUT_CLASSIFICATION	actions
WITHOUT_CLASSIFICATION	failed to clone
WITHOUT_CLASSIFICATION	remark the code in projectsettings.init() currently presumes that nobody is using this event.
WITHOUT_CLASSIFICATION	note this is package scope to force callers to use resourceloaderwrapper
WITHOUT_CLASSIFICATION	strip all characters out of <var>s</var> that could not be part of a valid java identifier. return either the given string (if all characters were valid) or a new string with all invalid characters stripped out. this allows automatic conversion of strings containing punctuation and spaces to a resource name that can be looked up.
WITHOUT_CLASSIFICATION	end class resourceloader
WITHOUT_CLASSIFICATION	the validity checking thread should wait if disabled.
WITHOUT_CLASSIFICATION	if element has been deleted it's no longer valid
WITHOUT_CLASSIFICATION	history.thehistory.additemresolution(item "no longer valid") ((todoitem)item).resolve("no longer valid") notifyobservers("removeelement" item)
WITHOUT_CLASSIFICATION	notifications and updates
WITHOUT_CLASSIFICATION	skip any identical items already on the list
WITHOUT_CLASSIFICATION	cat.debug("checking for inhibitors " + rc)
WITHOUT_CLASSIFICATION	history.thehistory.additemresolution(item reason)
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	end class argojmenu
WITHOUT_CLASSIFICATION	block added by bobtarling 8-jan-2002 set the checkbox on or off according to the selected value of the action. if no selected value is found then this defaults to true in order to remain compatible with previous versions of this code.
WITHOUT_CLASSIFICATION	eventlistenerlist.add() is synchronized so we don't need to synchronize ourselves
WITHOUT_CLASSIFICATION	end of block
WITHOUT_CLASSIFICATION	end interface clarifier
WITHOUT_CLASSIFICATION	set the checkbox on or off according to the selected value of the action. if no selected value is found then this defaults to true.
WITHOUT_CLASSIFICATION	extra care to be taken since alloffenders can be reset while this method is running.
WITHOUT_CLASSIFICATION	these are blue in metal default theme
WITHOUT_CLASSIFICATION	cached expansions
WITHOUT_CLASSIFICATION	these are gray in metal default theme
WITHOUT_CLASSIFICATION	extra care to be taken since allposters can be reset while this method is running.
WITHOUT_CLASSIFICATION	set the icon for this poster
WITHOUT_CLASSIFICATION	eventlistenerlist.remove() is synchronized so we don't need to synchronize ourselves
WITHOUT_CLASSIFICATION	mvw
WITHOUT_CLASSIFICATION	event related stuff
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event
WITHOUT_CLASSIFICATION	static variables
WITHOUT_CLASSIFICATION	@see java.lang.object#hashcode()
WITHOUT_CLASSIFICATION	@see java.lang.object#equals(java.lang.object)
WITHOUT_CLASSIFICATION	enable buttons when selection made. @see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.listselectionlistener#valuechanged(javax.swing.event.listselectionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.componentlistener#componentshown(java.awt.event.componentevent)
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	end class checkmanager
WITHOUT_CLASSIFICATION	now lets search
WITHOUT_CLASSIFICATION	end class tabchecklist
WITHOUT_CLASSIFICATION	we found it!
WITHOUT_CLASSIFICATION	event handling
WITHOUT_CLASSIFICATION	enter the class to speed up the next search.
WITHOUT_CLASSIFICATION	stop updating model when we're not visible
WITHOUT_CLASSIFICATION	update our model with our saved target
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	instance varables
WITHOUT_CLASSIFICATION	constructor
WITHOUT_CLASSIFICATION	tablemodel implemetation
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	criticism control
WITHOUT_CLASSIFICATION	event handlers
WITHOUT_CLASSIFICATION	static accessors
WITHOUT_CLASSIFICATION	instance varables
WITHOUT_CLASSIFICATION	constructor
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	tablemodel implemetation
WITHOUT_CLASSIFICATION	in the past 0 milliseconds after january 1 1970 000000 gmt.
WITHOUT_CLASSIFICATION	in the past 0 milliseconds after january 1 1970 000000 gmt.
WITHOUT_CLASSIFICATION	by default double the snooze interval each time
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	end class snoozeorder
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	wizard actions
WITHOUT_CLASSIFICATION	this changes the complete structure of the table so we need to set the column widths again.
WITHOUT_CLASSIFICATION	todo do all following steps todo resolve item from todolist
WITHOUT_CLASSIFICATION	end class actionopencritics
WITHOUT_CLASSIFICATION	dialog box to list all critics and allow editing of some of their properties. <p> todo supported goals critic network.
WITHOUT_CLASSIFICATION	set initial sorting on critic headline
WITHOUT_CLASSIFICATION	critics table
WITHOUT_CLASSIFICATION	instead of making a new list decrement index return when found and index == 0
WITHOUT_CLASSIFICATION	critic details panel
WITHOUT_CLASSIFICATION	case 2
WITHOUT_CLASSIFICATION	tablemodel implemetation
WITHOUT_CLASSIFICATION	todo
WITHOUT_CLASSIFICATION	no maximum set so it will stretch
WITHOUT_CLASSIFICATION	and for advanced mode
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#valueforpathchanged( javax.swing.tree.treepath java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#addtreemodellistener(javax.swing.event.treemodellistener)
WITHOUT_CLASSIFICATION	@see javax.swing.event.changelistener#statechanged(javax.swing.event.changeevent)
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	event handlers
WITHOUT_CLASSIFICATION	set tablesp's preferred height to 0 so that details height is used in pack()
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#isleaf(java.lang.object)
WITHOUT_CLASSIFICATION	c.gridy = 0 c.gridx = 0 jlabel prilabel = new jlabel("priority") gb.setconstraints(prilabel c) _mainpanel.add(prilabel)
WITHOUT_CLASSIFICATION	firetreenodeschanged(this path childindices children)
WITHOUT_CLASSIFICATION	c.gridy = 0 c.gridx = 1 jlabel offlabel = new jlabel("off") gb.setconstraints(offlabel c) _mainpanel.add(offlabel)
WITHOUT_CLASSIFICATION	c.gridy = 0 c.gridx = 2 jlabel lowlabel = new jlabel("low") gb.setconstraints(lowlabel c) _mainpanel.add(lowlabel)
WITHOUT_CLASSIFICATION	c.gridy = 0 c.gridx = 3 jlabel twolabel = new jlabel("ad") gb.setconstraints(twolabel c) _mainpanel.add(twolabel)
WITHOUT_CLASSIFICATION	c.gridy = 0 c.gridx = 4 jlabel threelabel = new jlabel("asd") gb.setconstraints(threelabel c) _mainpanel.add(threelabel)
WITHOUT_CLASSIFICATION	c.gridy = 0 c.gridx = 5 jlabel fourlabel = new jlabel("asd") gb.setconstraints(fourlabel c) _mainpanel.add(fourlabel)
WITHOUT_CLASSIFICATION	c.gridy = 0 c.gridx = 6 jlabel highlabel = new jlabel("high") gb.setconstraints(highlabel c) _mainpanel.add(highlabel)
WITHOUT_CLASSIFICATION	------------ other methods ------------
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treecellrenderer#gettreecellrenderercomponent( javax.swing.jtree java.lang.object boolean boolean boolean int boolean)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#getchild(java.lang.object int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#getchildcount(java.lang.object)
WITHOUT_CLASSIFICATION	todolistlistener implementation
WITHOUT_CLASSIFICATION	firetreenodeschanged(this path childindices children)
WITHOUT_CLASSIFICATION	treemodel implementation - todo specific stuff
WITHOUT_CLASSIFICATION	class variables
WITHOUT_CLASSIFICATION	general icons for poster
WITHOUT_CLASSIFICATION	specialised icons for designer
WITHOUT_CLASSIFICATION	treecellrenderer implementation
WITHOUT_CLASSIFICATION	end class todotreerenderer
WITHOUT_CLASSIFICATION	public static decision decisionuncategorized = new decision("uncategorized" 1)
WITHOUT_CLASSIFICATION	end class todobydecision
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	treemodel implementation
WITHOUT_CLASSIFICATION	instead of making a new list decrement index return when found and index == 0
WITHOUT_CLASSIFICATION	store wizard?
WITHOUT_CLASSIFICATION	c.gridx = 1 c.gridy = 3 c.gridheight = gridbagconstraints.remainder spacerpanel spacer2 = new spacerpanel() gb.setconstraints(spacer2 c) _mainpanel.add(spacer2)
WITHOUT_CLASSIFICATION	image.setmargin(new insets(0 0 0 0))
WITHOUT_CLASSIFICATION	image.setmargin(new insets(0 0 0 0))
WITHOUT_CLASSIFICATION	image.setmargin(new insets(0 0 0 0))
WITHOUT_CLASSIFICATION	end class wizsteptextfield
WITHOUT_CLASSIFICATION	store wizard?
WITHOUT_CLASSIFICATION	store wizard?
WITHOUT_CLASSIFICATION	end class wizdescription
WITHOUT_CLASSIFICATION	end class wizstepcue
WITHOUT_CLASSIFICATION	stop/start creating more critics
WITHOUT_CLASSIFICATION	end class actiongotocritique
WITHOUT_CLASSIFICATION	correct lazy initialization of static field without further updates
WITHOUT_CLASSIFICATION	does nothing
WITHOUT_CLASSIFICATION	end class actionautocritique
WITHOUT_CLASSIFICATION	stop/start cleaning up invalid todoitems.
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#isleaf(java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#getchildcount(java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#getindexofchild( java.lang.object java.lang.object)
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	treemodel implementation
WITHOUT_CLASSIFICATION	todolistlistener implementation
WITHOUT_CLASSIFICATION	firetreenodeschanged(this path childindices children)
WITHOUT_CLASSIFICATION	otherwise parent must be an offending design material
WITHOUT_CLASSIFICATION	end class actionopengoals
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#isleaf(java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#isleaf(java.lang.object)
WITHOUT_CLASSIFICATION	? inform()
WITHOUT_CLASSIFICATION	@see java.awt.event.componentlistener#componentshown(java.awt.event.componentevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.componentlistener#componenthidden(java.awt.event.componentevent)
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	update our model with our saved target
WITHOUT_CLASSIFICATION	stop updating model when we're not visible
WITHOUT_CLASSIFICATION	treemodel implementation
WITHOUT_CLASSIFICATION	instead of making a new list decrement index return when found and index == 0
WITHOUT_CLASSIFICATION	image.setmargin(new insets(0 0 0 0))
WITHOUT_CLASSIFICATION	store wizard?
WITHOUT_CLASSIFICATION	the target of description will always be set directly by tabtodo
WITHOUT_CLASSIFICATION	request that we be made visible if we're not? topleveltabbedpane.setselectedcomponent(t)
WITHOUT_CLASSIFICATION	------------- mouselistener implementation ---------------
WITHOUT_CLASSIFICATION	end class wizstepconfirm
WITHOUT_CLASSIFICATION	next line coming from projectbrowser
WITHOUT_CLASSIFICATION	------------ itemlistener implementation ----------------------
WITHOUT_CLASSIFICATION	-------------treeselectionlistener implementation -----------
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#isleaf(java.lang.object)
WITHOUT_CLASSIFICATION	not needed in uml 1.x
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.changelistener#statechanged(javax.swing.event.changeevent)
WITHOUT_CLASSIFICATION	prepare for typing in rationale field when window is opened. @see java.awt.component#setvisible(boolean)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	event handlers
WITHOUT_CLASSIFICATION	todolistlistener implementation
WITHOUT_CLASSIFICATION	todolistlistener implementation
WITHOUT_CLASSIFICATION	keep nagging until the user solves the problem this seems a nice way to nag
WITHOUT_CLASSIFICATION	only interrupt for one todoitem
WITHOUT_CLASSIFICATION	end class actionopendecisions
WITHOUT_CLASSIFICATION	blinks?
WITHOUT_CLASSIFICATION	end class todobyoffender
WITHOUT_CLASSIFICATION	add the perspectives to a list for the combobox
WITHOUT_CLASSIFICATION	decslide.setpaintlabels(true)
WITHOUT_CLASSIFICATION	constants instance variables
WITHOUT_CLASSIFICATION	firetreenodeschanged(this path childindices children)
WITHOUT_CLASSIFICATION	todo this looks o(n^2)
WITHOUT_CLASSIFICATION	todo make a new history item
WITHOUT_CLASSIFICATION	cat.debug("bad decision")
WITHOUT_CLASSIFICATION	cat.debug("bad goal")
WITHOUT_CLASSIFICATION	end class dismisstodoitemdialog
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#getchild(java.lang.object int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#getchildcount(java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#getindexofchild( java.lang.object java.lang.object)
WITHOUT_CLASSIFICATION	finally apply profile configuration to the model
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#valueforpathchanged( javax.swing.tree.treepath java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#addtreemodellistener(javax.swing.event.treemodellistener)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#removetreemodellistener(javax.swing.event.treemodellistener)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#insertupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	event handlers
WITHOUT_CLASSIFICATION	store wizard?
WITHOUT_CLASSIFICATION	treemodel implementation
WITHOUT_CLASSIFICATION	todolistlistener implementation
WITHOUT_CLASSIFICATION	todolistlistener implementation
WITHOUT_CLASSIFICATION	firetreenodeschanged(this path childindices children)
WITHOUT_CLASSIFICATION	image.setmargin(new insets(0 0 0 0))
WITHOUT_CLASSIFICATION	otherwise parent must be an offending design material
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#isleaf(java.lang.object)
WITHOUT_CLASSIFICATION	end class wizstep
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	actions
WITHOUT_CLASSIFICATION	this is done for compatibility with previous version move the argo.user.properties written before 0.25.4 to the new location if it exists.
WITHOUT_CLASSIFICATION	don't allow instantiation
WITHOUT_CLASSIFICATION	actionlistener implementation
WITHOUT_CLASSIFICATION	documentlistener implementation
WITHOUT_CLASSIFICATION	targetlistener implementation
WITHOUT_CLASSIFICATION	copy to new file and let the regular load code do the actual load
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	end class configurationfactory
WITHOUT_CLASSIFICATION	log.log(level.info "configuration saved to {0}\n" url)
WITHOUT_CLASSIFICATION	check for the older properties file and copy it over if possible
WITHOUT_CLASSIFICATION	only allow one load
WITHOUT_CLASSIFICATION	add the first point twice
WITHOUT_CLASSIFICATION	add the first point twice
WITHOUT_CLASSIFICATION	scale everything up
WITHOUT_CLASSIFICATION	initialize band buffer bounds
WITHOUT_CLASSIFICATION	log.log(level.fine "getdata rectangle = " + clip)
WITHOUT_CLASSIFICATION	log.log(level.fine "getdata returning raster = " + translatedraster)
WITHOUT_CLASSIFICATION	create a new graphics context so we start with fresh transforms
WITHOUT_CLASSIFICATION	fill with our background color
WITHOUT_CLASSIFICATION	translate & clip graphic to match region of interest
WITHOUT_CLASSIFICATION	ask gef to print a band of the diagram (translated & clipped)
WITHOUT_CLASSIFICATION	make sure it isn't caching anything that should be written
WITHOUT_CLASSIFICATION	assert !initialized guitestactionopenproject fails over this
WITHOUT_CLASSIFICATION	retain the original one
WITHOUT_CLASSIFICATION	retain the original one
WITHOUT_CLASSIFICATION	internal initialization method. handles initialization which is common to both public methods.
WITHOUT_CLASSIFICATION	this is needed for the junit tests. otherwise a "assert initialized" would suffice.
WITHOUT_CLASSIFICATION	this is needed for the junit tests. otherwise a "assert initialized" would suffice.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	flag the command as to whether it is first in a chain
WITHOUT_CLASSIFICATION	end class delayedchangenotify
WITHOUT_CLASSIFICATION	default diagram settings
WITHOUT_CLASSIFICATION	default notation settings
WITHOUT_CLASSIFICATION	generation preferences
WITHOUT_CLASSIFICATION	the next one defaults to true to stay compatible with older argouml versions that did not have this setting
WITHOUT_CLASSIFICATION	the next ones defaults to true to stay compatible with older argouml versions that did not have this setting
WITHOUT_CLASSIFICATION	this notation is not available!
WITHOUT_CLASSIFICATION	always put the model at the top
WITHOUT_CLASSIFICATION	otherwise add the diagram at the start
WITHOUT_CLASSIFICATION	otherwise add the diagram at the start
WITHOUT_CLASSIFICATION	finally apply profile configuration to the model
WITHOUT_CLASSIFICATION	uri = persistencemanager.getinstance().fixuriextension(theprojecturi)
WITHOUT_CLASSIFICATION	register with the save action with other subsystems so that any changes in those subsystems will enable the save button/menu item etc.
WITHOUT_CLASSIFICATION	not needed in uml 1.x
WITHOUT_CLASSIFICATION	end interface delayedvchangelistener
WITHOUT_CLASSIFICATION	a profile initially has no applied profiles we go bottom-up
WITHOUT_CLASSIFICATION	skip leading underscores
WITHOUT_CLASSIFICATION	todo should just be the directory to write.
WITHOUT_CLASSIFICATION	the preferences with project-scope
WITHOUT_CLASSIFICATION	the argouml version with which this project was last saved
WITHOUT_CLASSIFICATION	if diagram added successfully add the member too
WITHOUT_CLASSIFICATION	adding a todo member removes any existing one.
WITHOUT_CLASSIFICATION	got past the veto add the member
WITHOUT_CLASSIFICATION	send indeterminate new value instead of making copy of vector
WITHOUT_CLASSIFICATION	remove the dependent modelelements such as the statemachine for a statechartdiagram
WITHOUT_CLASSIFICATION	hence a diagram name was saved in the project that we are loading. so we use this name to retrieve any matching diagram.
WITHOUT_CLASSIFICATION	use the first diagram.
WITHOUT_CLASSIFICATION	if there was no diagram at all then use the (first) uml model.
WITHOUT_CLASSIFICATION	we don't need this hashmap anymore so free up the memory
WITHOUT_CLASSIFICATION	can not delete the model
WITHOUT_CLASSIFICATION	can not delete the profile
WITHOUT_CLASSIFICATION	@see java.lang.object#finalize()
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getcolumncount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getcolumnname(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getrowcount()
WITHOUT_CLASSIFICATION	make the topmost diagram (that is not the one being deleted) current.
WITHOUT_CLASSIFICATION	trash related methods
WITHOUT_CLASSIFICATION	fire an event some anyone who cares about diagrams being removed can listen for it
WITHOUT_CLASSIFICATION	if we delete a figedge or fignode we actually call this method with the owner not the fig itself. however this method is called by actiondeletemodelelements for primitive figs (without owner).
WITHOUT_CLASSIFICATION	there's just one profileconfiguration in a project and there's no other way to add another one
WITHOUT_CLASSIFICATION	tab for the settings dialog that makes it possible to select the modules that are to be enabled. todo header for the table. @author linus tolke
WITHOUT_CLASSIFICATION	do nothing - these buttons are not shown.
WITHOUT_CLASSIFICATION	access methods for program infrastructure.
WITHOUT_CLASSIFICATION	@see java.io.filefilter#accept(java.io.file)
WITHOUT_CLASSIFICATION	the creation of the actual gui elements is deferred until they are actually needed. otherwize we have problems with the initialization.
WITHOUT_CLASSIFICATION	do nothing! the next time we refresh we will fetch the values again.
WITHOUT_CLASSIFICATION	access methods for modules that need to query about the status of other modules.
WITHOUT_CLASSIFICATION	access methods for the gui that the user uses to enable and disable modules.
WITHOUT_CLASSIFICATION	access methods for the program infrastructure
WITHOUT_CLASSIFICATION	catch all exceptions and errors however severe
WITHOUT_CLASSIFICATION	todo huntformodulesfromjavawebstart()
WITHOUT_CLASSIFICATION	load modules specified by a system property. modules specified by a system property is for running modules from within eclipse and running from java web start.
WITHOUT_CLASSIFICATION	try-catch only the jarfile instantiation so we don't accidentally mask anything in argojarclassloader or processjarfile.
WITHOUT_CLASSIFICATION	we expect all extensions to have a manifest even though we can operate without one if necessary.
WITHOUT_CLASSIFICATION	look for our specification
WITHOUT_CLASSIFICATION	add this to search list for i18n properties (done for both modules & localized property file sets)
WITHOUT_CLASSIFICATION	we havn't found it. add it.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	utility function to unregister all listeners registered through addelementlistener. @see #addelementlistener(object string)
WITHOUT_CLASSIFICATION	called after the notation default property gets changed. @see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	e.g. for an operation if pce.getsource() == modelelement && event.propertyname = "parameter" if event instanceof addassociationevent get the parameter instance from event.newvalue call model to add listener on parameter on change of "name" "type" else if event instanceof removeassociationevent get the parameter instance from event.oldvalue call model to remove listener on parameter on change of "name" "type" end if end if
WITHOUT_CLASSIFICATION	the following check should have been satisfied before we instantiated the module but double check again
WITHOUT_CLASSIFICATION	if it didn't have a loadable module class and it doesn't look like a localized property set warn the user that something funny is in their extension directory
WITHOUT_CLASSIFICATION	since there is no way to compare the objects as equal we have to search through the list at this point.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	remark there is also a java-like notation which is also part of argouml core distribution.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	this notation is not available!
WITHOUT_CLASSIFICATION	this is needed for the case when the default notation is not loaded at this point.
WITHOUT_CLASSIFICATION	class accessors
WITHOUT_CLASSIFICATION	static workers for dealing with notation names.
WITHOUT_CLASSIFICATION	no valid field for above notationlanguage. it's valid if not null.
WITHOUT_CLASSIFICATION	we also show stereotypes
WITHOUT_CLASSIFICATION	we also show stereotypes
WITHOUT_CLASSIFICATION	we also show the type (of which e.g. the name may change)
WITHOUT_CLASSIFICATION	we also show the type (of which e.g. the name may change)
WITHOUT_CLASSIFICATION	we also show tagged values (the / for derived)
WITHOUT_CLASSIFICATION	we also show tagged values (the / for derived)
WITHOUT_CLASSIFICATION	and when the operation is replaced
WITHOUT_CLASSIFICATION	and when the class changes name
WITHOUT_CLASSIFICATION	mvw indeed. the intention of the constructor parameter is to prove that there is a valid uml object to bind the notation to. so the next statement should fail on a null parameter and on anything that is not an object of which we can retrieve the multiplicity.
WITHOUT_CLASSIFICATION	we are not interested in the name.
WITHOUT_CLASSIFICATION	and the parameter names and values
WITHOUT_CLASSIFICATION	and the arguments
WITHOUT_CLASSIFICATION	we also show parameters
WITHOUT_CLASSIFICATION	we also show types of parameters
WITHOUT_CLASSIFICATION	listen to the modelelement itself
WITHOUT_CLASSIFICATION	we also show tagged values (the / for derived)
WITHOUT_CLASSIFICATION	if this fails then there is a problem dthompson 29/12/2008 it seems that the returned value is irrelevant here so i assume that the purpose of this call is just to throw an exception in case of a problem.
WITHOUT_CLASSIFICATION	register for events from all modelelements that change the name and body text i.e. when the callaction is replaced
WITHOUT_CLASSIFICATION	and when the owner is replaced (unlikely for operations) and when the operation changes name
WITHOUT_CLASSIFICATION	listen to the modelelement itself
WITHOUT_CLASSIFICATION	removed stereotype
WITHOUT_CLASSIFICATION	register for events from all modelelements that change the text i.e. when the transition is replaced
WITHOUT_CLASSIFICATION	new stereotype
WITHOUT_CLASSIFICATION	listen to name changes in the path (useful for e.g. package)
WITHOUT_CLASSIFICATION	register for the doactivity etc.
WITHOUT_CLASSIFICATION	register for internal transitions
WITHOUT_CLASSIFICATION	return "parsing.java.help.attribute"
WITHOUT_CLASSIFICATION	todo the src_visibility tag doesn't appear to be created anywhere by argouml currently
WITHOUT_CLASSIFICATION	return "parsing.help.fig-association-end-name"
WITHOUT_CLASSIFICATION	todo initial value
WITHOUT_CLASSIFICATION	skip spaces
WITHOUT_CLASSIFICATION	the name itself
WITHOUT_CLASSIFICATION	check the name for validity
WITHOUT_CLASSIFICATION	todo check the name for validity.
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed( java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	pick out return type
WITHOUT_CLASSIFICATION	handle multiplicity here since we need the type actually the api of generator is buggy since to generate multiplicity correctly we need the attribute too
WITHOUT_CLASSIFICATION	build the final string
WITHOUT_CLASSIFICATION	todo qualifiers (e.g. const) todo stereotypes
WITHOUT_CLASSIFICATION	name and params
WITHOUT_CLASSIFICATION	do nothing.
WITHOUT_CLASSIFICATION	constructor
WITHOUT_CLASSIFICATION	check for more attributes ('' separated)
WITHOUT_CLASSIFICATION	for java notation we also need to listen to "leaf" changes since they are shown as "final" on the diagram.
WITHOUT_CLASSIFICATION	remove bases that aren't there anymore
WITHOUT_CLASSIFICATION	notation.findnotation("java")
WITHOUT_CLASSIFICATION	initialize the notationutilityuml
WITHOUT_CLASSIFICATION	copy - can't iterate modify live collection while iterating it
WITHOUT_CLASSIFICATION	when nothing is generated omit the space.
WITHOUT_CLASSIFICATION	loop through all base classes building a comma separated list
WITHOUT_CLASSIFICATION	yes there are more
WITHOUT_CLASSIFICATION	no text? remove attr!
WITHOUT_CLASSIFICATION	no non-whitechars in text? remove attr!
WITHOUT_CLASSIFICATION	we need to set the namespace/owner of the new attribute before parsing
WITHOUT_CLASSIFICATION	if the 1st attribute is static then the new ones too.
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	yes there are more
WITHOUT_CLASSIFICATION	generates a string representation for the provided attribute. the string representation will be of the form visibility name [multiplicity] type-expression = initial-value {property-string} depending on settings in notation visibility multiplicity type-expression initial value and properties are shown/not shown.
WITHOUT_CLASSIFICATION	handle derived
WITHOUT_CLASSIFICATION	handle derived
WITHOUT_CLASSIFICATION	handle visibility
WITHOUT_CLASSIFICATION	fix for loading bad projects
WITHOUT_CLASSIFICATION	the "show types" defaults to true to stay compatible with older argouml versions that did not have this setting
WITHOUT_CLASSIFICATION	the element was deleted while we were processing it
WITHOUT_CLASSIFICATION	strip any trailing semi-colons
WITHOUT_CLASSIFICATION	construct bases string (comma separated)
WITHOUT_CLASSIFICATION	no text? remove op!
WITHOUT_CLASSIFICATION	no non-whitechars in text? remove op!
WITHOUT_CLASSIFICATION	check for more operations ('' separated)
WITHOUT_CLASSIFICATION	end while loop
WITHOUT_CLASSIFICATION	parameterlist is guaranteed to contain at least "("
WITHOUT_CLASSIFICATION	don't create a stereotype for <<signal>> on a reception but create any other parsed stereotypes as needed
WITHOUT_CLASSIFICATION	lets concatenate it to the resulting string (genstr)
WITHOUT_CLASSIFICATION	the "show types" defaults to true to stay compatible with older argouml versions that did not have this setting
WITHOUT_CLASSIFICATION	the parameters
WITHOUT_CLASSIFICATION	the returnparameters
WITHOUT_CLASSIFICATION	the model element was deleted while we were working on it
WITHOUT_CLASSIFICATION	else we remove only the extra ""
WITHOUT_CLASSIFICATION	the query state
WITHOUT_CLASSIFICATION	although operation and signal are peers in the uml type hierarchy they share the attributes isroot isleaf isabstract and specification. concurrency is not shared and is specific to operation.
WITHOUT_CLASSIFICATION	remove last
WITHOUT_CLASSIFICATION	end of block
WITHOUT_CLASSIFICATION	a string of the form "name"
WITHOUT_CLASSIFICATION	this is a message uml object
WITHOUT_CLASSIFICATION	supported format predecessors number "" action the 3 parts of the string to generate
WITHOUT_CLASSIFICATION	(mmessage)
WITHOUT_CLASSIFICATION	this may return null
WITHOUT_CLASSIFICATION	activatorintno is now guaranteed not null
WITHOUT_CLASSIFICATION	list<string> args = null
WITHOUT_CLASSIFICATION	get the ordered list of immediate successors
WITHOUT_CLASSIFICATION	the condition or iteration expression (recurrence)
WITHOUT_CLASSIFICATION	(mmessage)
WITHOUT_CLASSIFICATION	now apply the changes to the model
WITHOUT_CLASSIFICATION	mmessage
WITHOUT_CLASSIFICATION	if there are more than one suitable operation then we pick the first one.
WITHOUT_CLASSIFICATION	disconnect the message from the call graph make copies of returned live collections since we're modifying
WITHOUT_CLASSIFICATION	find the preceding message if any on either end of the association.
WITHOUT_CLASSIFICATION	mclassifierrole
WITHOUT_CLASSIFICATION	connect the message at a new spot
WITHOUT_CLASSIFICATION	case 3 & 4
WITHOUT_CLASSIFICATION	mmessage
WITHOUT_CLASSIFICATION	(mmessage)
WITHOUT_CLASSIFICATION	(mmessage)
WITHOUT_CLASSIFICATION	(mmessage)
WITHOUT_CLASSIFICATION	(mmessage)
WITHOUT_CLASSIFICATION	mclassifierrole
WITHOUT_CLASSIFICATION	if no variable name was given then retain the one in the model.
WITHOUT_CLASSIFICATION	if no function-name was given then retain the one in the model.
WITHOUT_CLASSIFICATION	store the guard i.e. condition or iteration expression in the recurrence field of the action
WITHOUT_CLASSIFICATION	if there was no action yet create a callaction
WITHOUT_CLASSIFICATION	things are strange if there are more than one candidate root it has no obvious interpretation in terms of a call tree.
WITHOUT_CLASSIFICATION	mmessage
WITHOUT_CLASSIFICATION	mmessage
WITHOUT_CLASSIFICATION	jaap branderhorst 2002-23-09 added next lines to link parameters and operations to the figs that represent them
WITHOUT_CLASSIFICATION	we can do nothing if we don't have both the use case and extension point.
WITHOUT_CLASSIFICATION	parse the string to creat a new extension point.
WITHOUT_CLASSIFICATION	if we got back null we interpret this as meaning delete the reference to the extension point from the use case otherwise we set the fields of the extension point to the values in newep.
WITHOUT_CLASSIFICATION	build a new extension point
WITHOUT_CLASSIFICATION	the empty string. return null
WITHOUT_CLASSIFICATION	handle derived
WITHOUT_CLASSIFICATION	if we are given the null string return immediately so that the extensionpoint is removed.
WITHOUT_CLASSIFICATION	a string of the form "location". this will be confused by the string "" so we pick this out as an instruction to clear both name and location.
WITHOUT_CLASSIFICATION	a string of the form "namelocation". discard the middle token ("")
WITHOUT_CLASSIFICATION	read past the colon.
WITHOUT_CLASSIFICATION	the string to build
WITHOUT_CLASSIFICATION	get the fields we want
WITHOUT_CLASSIFICATION	put in the name field if it's there
WITHOUT_CLASSIFICATION	put in the location field if it's there
WITHOUT_CLASSIFICATION	first we decode the string
WITHOUT_CLASSIFICATION	secondly we check the previous model structure
WITHOUT_CLASSIFICATION	and 3rd we adapt the model
WITHOUT_CLASSIFICATION	same class other operation
WITHOUT_CLASSIFICATION	other class
WITHOUT_CLASSIFICATION	we found the classifier now go find the operation
WITHOUT_CLASSIFICATION	here we located the new classifier with its operation.
WITHOUT_CLASSIFICATION	the text was {frozen}
WITHOUT_CLASSIFICATION	the text was {frozen = false}
WITHOUT_CLASSIFICATION	the text was {frozen = true}
WITHOUT_CLASSIFICATION	copy returned parameters because it will be a live collection for mdr
WITHOUT_CLASSIFICATION	should we be getting this from the gui? bt 11 aug 2002
WITHOUT_CLASSIFICATION	no type defined yet
WITHOUT_CLASSIFICATION	if the current property occurs a second time in the given list of properties then skip it
WITHOUT_CLASSIFICATION	this automatically pulls in a tagdefinition from the profile
WITHOUT_CLASSIFICATION	the tv existed but maybe it was not "true"
WITHOUT_CLASSIFICATION	todo for uml2 check if the type of the tv is string.
WITHOUT_CLASSIFICATION	generate all the existing internal transitions so that we can compare them as text with the newly entered ones.
WITHOUT_CLASSIFICATION	strip any trailing semi-colons
WITHOUT_CLASSIFICATION	this would be solution (1) model.getextensionmechanismshelper().setdatavalues( taggedvalue new string[] {"false"})
WITHOUT_CLASSIFICATION	there are 2 possibilities either (1) we follow the traditional notation philosophy and set the tagged value to false or (2) we restore to the pristine situation and delete the taggedvalue (whatever the value was). i chose the latter (mvw).
WITHOUT_CLASSIFICATION	allow concatenation order and separator to be localized
WITHOUT_CLASSIFICATION	parameter etc.
WITHOUT_CLASSIFICATION	"in" is the default
WITHOUT_CLASSIFICATION	"in"
WITHOUT_CLASSIFICATION	return nothing
WITHOUT_CLASSIFICATION	it can still be null if the uml element did not have a multiplicity defined.
WITHOUT_CLASSIFICATION	let's not be picky about the brackets - just remove them
WITHOUT_CLASSIFICATION	get the classifier
WITHOUT_CLASSIFICATION	the state of a classifierinstate is removed so let's reduce it to a classifier.
WITHOUT_CLASSIFICATION	the model is changed - job done
WITHOUT_CLASSIFICATION	strings
WITHOUT_CLASSIFICATION	remove the states that did not match.
WITHOUT_CLASSIFICATION	now we have to see if any state in any statemachine of classifier is named [name]. if so then we only have to link the state to c.
WITHOUT_CLASSIFICATION	the model is changed - our job is done
WITHOUT_CLASSIFICATION	the model is changed - our job is done
WITHOUT_CLASSIFICATION	no state named s is found so we have to reject the user's input
WITHOUT_CLASSIFICATION	finally do the adaptations
WITHOUT_CLASSIFICATION	then c is a "normal" classifier uml states
WITHOUT_CLASSIFICATION	let's create a new classifierinstate with the correct links
WITHOUT_CLASSIFICATION	this updates the diagram - hence as last statement
WITHOUT_CLASSIFICATION	case 2
WITHOUT_CLASSIFICATION	case 3
WITHOUT_CLASSIFICATION	we can distinguish between 4 cases 1. a trigger is given. none exists yet. 2. the trigger was present and it is the same type or a different type and its text is changed or the same. 3. a trigger is not given. none exists yet. 4. the name of the trigger was present but is removed. the reaction in these cases should be 1. find the referred trigger (issue 5988) or create a new one and hook it to the transition. 2. rename the trigger. 3. nop. 4. unhook and erase the existing trigger.
WITHOUT_CLASSIFICATION	if no classifier has been set then entering a state is not useful so the user's input has to be rejected.
WITHOUT_CLASSIFICATION	todo if the next line trows an exception then what do we do with the remainder of the parsed/to be parsed lines?
WITHOUT_CLASSIFICATION	add this new one and mark it to be retained
WITHOUT_CLASSIFICATION	process the final list of internal transitions and hook it to the state
WITHOUT_CLASSIFICATION	don't forget to remove old internals!
WITHOUT_CLASSIFICATION	make next accesses to this instance predictable
WITHOUT_CLASSIFICATION	and hook in the new ones
WITHOUT_CLASSIFICATION	the actionexpression
WITHOUT_CLASSIFICATION	let's look for a timeevent changeevent callevent or signalevent
WITHOUT_CLASSIFICATION	operation(paramlist)
WITHOUT_CLASSIFICATION	the part after the || is for when there's nothing between the ()
WITHOUT_CLASSIFICATION	it is safe to give a null to the next function since a statemachine is always composed by a model anyhow.
WITHOUT_CLASSIFICATION	else the empty s will do
WITHOUT_CLASSIFICATION	case 1 and 2
WITHOUT_CLASSIFICATION	language
WITHOUT_CLASSIFICATION	do not set the name.
WITHOUT_CLASSIFICATION	do not set the name.
WITHOUT_CLASSIFICATION	this case is a bit different because of the parameters. if the event already exists the parameters are ignored.
WITHOUT_CLASSIFICATION	when()
WITHOUT_CLASSIFICATION	signalname
WITHOUT_CLASSIFICATION	and parse the parameter list
WITHOUT_CLASSIFICATION	and hook it to the transition immediately so that an exception can not cause it to remain dangling
WITHOUT_CLASSIFICATION	do nothing.
WITHOUT_CLASSIFICATION	yes there are more
WITHOUT_CLASSIFICATION	strip any trailing semi-colons
WITHOUT_CLASSIFICATION	parameter etc.
WITHOUT_CLASSIFICATION	"in" is the default
WITHOUT_CLASSIFICATION	"in"
WITHOUT_CLASSIFICATION	return nothing
WITHOUT_CLASSIFICATION	and parse the parameter list
WITHOUT_CLASSIFICATION	case 2
WITHOUT_CLASSIFICATION	just change the time expression
WITHOUT_CLASSIFICATION	we have an event without expression
WITHOUT_CLASSIFICATION	it's a time-event now but was of another type before!
WITHOUT_CLASSIFICATION	just change the changeexpression
WITHOUT_CLASSIFICATION	create a new expression
WITHOUT_CLASSIFICATION	the parsed text describes a change-event but the model contains another type!
WITHOUT_CLASSIFICATION	just change the name and linked operation
WITHOUT_CLASSIFICATION	todo change the linked operation.
WITHOUT_CLASSIFICATION	just change the name and linked signal
WITHOUT_CLASSIFICATION	case 3 and 4
WITHOUT_CLASSIFICATION	case 3
WITHOUT_CLASSIFICATION	case 3
WITHOUT_CLASSIFICATION	case 4 erase it
WITHOUT_CLASSIFICATION	case 4 erase it
WITHOUT_CLASSIFICATION	do not check if the parameters match.
WITHOUT_CLASSIFICATION	case 1
WITHOUT_CLASSIFICATION	nsuml does this (?) model.getfacade().setguard(trans g)
WITHOUT_CLASSIFICATION	no text. we may remove the literal.
WITHOUT_CLASSIFICATION	no non-white chars in text? remove literal!
WITHOUT_CLASSIFICATION	heuristic algorithm do not show stereotypes if there is no name.
WITHOUT_CLASSIFICATION	@see javax.swing.jcomponent#setvisible(boolean)
WITHOUT_CLASSIFICATION	strip any trailing semi-colons
WITHOUT_CLASSIFICATION	construct bases string (comma separated)
WITHOUT_CLASSIFICATION	great! the class already existed - just use it.
WITHOUT_CLASSIFICATION	if no base was typed then only set the name
WITHOUT_CLASSIFICATION	only set the name if the base was found
WITHOUT_CLASSIFICATION	if the base was not changed then only set the name
WITHOUT_CLASSIFICATION	get the associationrole name
WITHOUT_CLASSIFICATION	let's create a class with the given name otherwise the user will not understand why we refuse his input!
WITHOUT_CLASSIFICATION	only instantiate when we need it.
WITHOUT_CLASSIFICATION	if the base is already set to this assoc then do not set it again. this check is needed otherwise the setbase() below gives an exception.
WITHOUT_CLASSIFICATION	2002-07-31 jaap branderhorst from here made visibility etc. configurable
WITHOUT_CLASSIFICATION	get the base association name
WITHOUT_CLASSIFICATION	no instantiations
WITHOUT_CLASSIFICATION	the next one defaults to true to stay compatible with older argouml versions that did not have this setting
WITHOUT_CLASSIFICATION	end of oclevaluator
WITHOUT_CLASSIFICATION	look for associations
WITHOUT_CLASSIFICATION	look for associations
WITHOUT_CLASSIFICATION	massociationend
WITHOUT_CLASSIFICATION	mparameter
WITHOUT_CLASSIFICATION	massociationend
WITHOUT_CLASSIFICATION	the ocl toolkit does not like void return types
WITHOUT_CLASSIFICATION	mclassifiers cannot be bag
WITHOUT_CLASSIFICATION	mclassifier
WITHOUT_CLASSIFICATION	first search for appropriate attributes
WITHOUT_CLASSIFICATION	first search for appropriate attributes
WITHOUT_CLASSIFICATION	mclassifier
WITHOUT_CLASSIFICATION	moperation
WITHOUT_CLASSIFICATION	moperation
WITHOUT_CLASSIFICATION	and not incompletely imported
WITHOUT_CLASSIFICATION	query checking added 05/21/01 sz9
WITHOUT_CLASSIFICATION	query checking added 05/21/01 sz9
WITHOUT_CLASSIFICATION	end class oclexpander
WITHOUT_CLASSIFICATION	skip first parameter == return type
WITHOUT_CLASSIFICATION	skip first parameter == return type
WITHOUT_CLASSIFICATION	only look at classes
WITHOUT_CLASSIFICATION	abstract classes are hardly ever singletons
WITHOUT_CLASSIFICATION	and not association classes
WITHOUT_CLASSIFICATION	with a name
WITHOUT_CLASSIFICATION	if there is an attribute which is not static => no problem
WITHOUT_CLASSIFICATION	if there is an outgoing association => no problem
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	only look at classes
WITHOUT_CLASSIFICATION	only look at classes
WITHOUT_CLASSIFICATION	check for singleton stereotype uninitialised instance variables and outgoing associations as per javadoc above.
WITHOUT_CLASSIFICATION	found no such attribute
WITHOUT_CLASSIFICATION	we only look at singletons
WITHOUT_CLASSIFICATION	we only look at singletons
WITHOUT_CLASSIFICATION	end class crsingletonviolatedonlyprivateconstructors
WITHOUT_CLASSIFICATION	note for historical reasons true == hide so we need to invert the sense of this
WITHOUT_CLASSIFICATION	end class cremptypackage
WITHOUT_CLASSIFICATION	at this stage during loading the diagrams are not created yet - so we have to store this name for later use.
WITHOUT_CLASSIFICATION	pw.close()
WITHOUT_CLASSIFICATION	retain the previous project file even when the save operation crashes in the middle. also create a backup file after saving.
WITHOUT_CLASSIFICATION	project.setfile(file)
WITHOUT_CLASSIFICATION	for andromda profiles
WITHOUT_CLASSIFICATION	retain the previous project file even when the save operation crashes in the middle. also create a backup file after saving.
WITHOUT_CLASSIFICATION	give the parser a map of model elements keyed by their uuid. this is used to allocate figs to their owner using the "href" attribute in pgml.
WITHOUT_CLASSIFICATION	if save did not raise an exception and name+"#" exists move name+"#" to name+"~" this is the correct backup file
WITHOUT_CLASSIFICATION	if we get a 2nd error just ignore it
WITHOUT_CLASSIFICATION	frank in case of exception delete name and mv name+"#" back to name if name+"#" exists this is the "rollback" to old file
WITHOUT_CLASSIFICATION	we have to give a message to user and set the system to unsaved!
WITHOUT_CLASSIFICATION	do nothing.
WITHOUT_CLASSIFICATION	should never happen - something's really wrong
WITHOUT_CLASSIFICATION	main parsing methods
WITHOUT_CLASSIFICATION	@see java.io.inputstream#close()
WITHOUT_CLASSIFICATION	@see java.io.inputstream#read()
WITHOUT_CLASSIFICATION	@see java.io.inputstream#read(byte[] int int)
WITHOUT_CLASSIFICATION	if save did not raise an exception and name+"#" exists move name+"#" to name+"~" this is the correct backup file
WITHOUT_CLASSIFICATION	frank in case of exception delete name and mv name+"#" back to name if name+"#" exists this is the "rollback" to old file
WITHOUT_CLASSIFICATION	we have to give a message to user and set the system to unsaved!
WITHOUT_CLASSIFICATION	boolean upgraderequired = !checkversion(fileversion releaseversion)
WITHOUT_CLASSIFICATION	upgrade is in the way for uml2 projects so we turn it off in that case
WITHOUT_CLASSIFICATION	load .argo project descriptor
WITHOUT_CLASSIFICATION	load the rest
WITHOUT_CLASSIFICATION	copy the todo items after the model and diagrams so that any model elements or figs that the todo items refer to will exist before creating critics.
WITHOUT_CLASSIFICATION	first read the .argo file from zip
WITHOUT_CLASSIFICATION	keep reading till we hit the <argo> tag
WITHOUT_CLASSIFICATION	get the version from the tag.
WITHOUT_CLASSIFICATION	skip 1 lines
WITHOUT_CLASSIFICATION	loop round loading the diagrams
WITHOUT_CLASSIFICATION	private eventlistenerlist listenerlist = new eventlistenerlist()
WITHOUT_CLASSIFICATION	skip the 2 lines <?xml version="1.0" encoding="utf-8" ?> <!doctype todo system "todo.dtd" >
WITHOUT_CLASSIFICATION	keep reading till we get the left bracket of an opening tag
WITHOUT_CLASSIFICATION	compare each following character to see that it matches the tag we want
WITHOUT_CLASSIFICATION	we also want to match with the right bracket of the tag or some other terminator
WITHOUT_CLASSIFICATION	we've found the matching tag but do we have the correct instance with matching attributes?
WITHOUT_CLASSIFICATION	read the name of the child tag and then reset read position back to that child tag.
WITHOUT_CLASSIFICATION	skip any whitespace till we should be on an equals sign.
WITHOUT_CLASSIFICATION	skip any whitespace till we should be on a quote symbol.
WITHOUT_CLASSIFICATION	no other uses of string in pgmlhandler
WITHOUT_CLASSIFICATION	handle other uses of <private> contents
WITHOUT_CLASSIFICATION	sanity check - the returned path item placement strategy should match the one in the uml. if it doesn't it could be that the uml was created with an older argo version and the new argo version use a different placement strategy. if they don't match just use the default.
WITHOUT_CLASSIFICATION	if any of the values are null ignore the element.
WITHOUT_CLASSIFICATION	if the pathitemplacement was unknown leave the diagram with the default settings.
WITHOUT_CLASSIFICATION	for a match to be found it has to have the same owner and the same long class name.
WITHOUT_CLASSIFICATION	a list of the path item attributes for this container. the list is populated during parsing them processed at endelement() private list<hashtable<string string>> pathitemattrs = new arraylist<hashtable<string string>>()
WITHOUT_CLASSIFICATION	this code has to go within the startelement block after the strings have been matched.
WITHOUT_CLASSIFICATION	method 1 (collect data and assign later in endelement() method). hashtable<string string> ht = new hashtable<string string>() ht.put("classname" classname) ht.put("figclassname" figclassname) ht.put("ownerhref" ownerhref) ht.put("angle" angle) ht.put("offset" offset) pathitemattrs.add(ht)
WITHOUT_CLASSIFICATION	create a new diagram wide settings block which is backed by the project-wide defaults that we were passed
WITHOUT_CLASSIFICATION	ignore non-private elements within fignode groups
WITHOUT_CLASSIFICATION	handle itemuid in container contents
WITHOUT_CLASSIFICATION	discard class name x y w h
WITHOUT_CLASSIFICATION	the owner should always have already been set in the constructor
WITHOUT_CLASSIFICATION	happens when 'is' comes from a zip file
WITHOUT_CLASSIFICATION	continue with null stream readdiagram() will take care of it
WITHOUT_CLASSIFICATION	todo localize these
WITHOUT_CLASSIFICATION	if the id does not look like a top-level fig then we can assume that this is an id of a figedgeport inside some figedge. so extract the figedgeport from the figedge and return that as the fignode.
WITHOUT_CLASSIFICATION	if there is no dot then this must be a top level fig and can be assumed to be a fignode.
WITHOUT_CLASSIFICATION	we are looking first to match with 3 different constructor types. we would not expect a fig to have any mix of these. any constructor other than these should be deprecated so we look for these first. fig(diagramedgesettings diagramsettings) fig(object rectangle diagramsettings) fig(rectangle diagramsettings)
WITHOUT_CLASSIFICATION	fignodemodelelements should match here
WITHOUT_CLASSIFICATION	figedgemodelelements should match here (they have no bounds)
WITHOUT_CLASSIFICATION	retain the previous project file even when the save operation crashes in the middle. also create a backup file after saving.
WITHOUT_CLASSIFICATION	frank in case of exception delete name and mv name+"#" back to name if name+"#" exists this is the "rollback" to old file
WITHOUT_CLASSIFICATION	fall back to gef's handling if we couldn't find an appropriate constructor
WITHOUT_CLASSIFICATION	mywriter
WITHOUT_CLASSIFICATION	empty constructor
WITHOUT_CLASSIFICATION	empty constructor
WITHOUT_CLASSIFICATION	for compatibility with older format
WITHOUT_CLASSIFICATION	<model> is not used in current implementation
WITHOUT_CLASSIFICATION	<model> is not used in current implementation
WITHOUT_CLASSIFICATION	|| model == null
WITHOUT_CLASSIFICATION	|| model == null
WITHOUT_CLASSIFICATION	we have to give a message to user and set the system to unsaved!
WITHOUT_CLASSIFICATION	write out header section
WITHOUT_CLASSIFICATION	note we assume members are ordered correctly already
WITHOUT_CLASSIFICATION	let's initialize the progressmgr
WITHOUT_CLASSIFICATION	run through any stylesheet upgrades
WITHOUT_CLASSIFICATION	don't use systemid here or it will get opened in preference to inputstream.
WITHOUT_CLASSIFICATION	uml 2.x files could also contain a profile model. try again with umlprofile as main tag.
WITHOUT_CLASSIFICATION	let's update the progress
WITHOUT_CLASSIFICATION	if we're trying to load a file from a future version complain and refuse.
WITHOUT_CLASSIFICATION	empty constructor
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	no more we can do here on failure
WITHOUT_CLASSIFICATION	buffer containing characters which have been decoded from the bytes in inbb.
WITHOUT_CLASSIFICATION	regex pattern for xml declaration and optionally doctype backslashes are doubled up - one for java one for regex
WITHOUT_CLASSIFICATION	convert from bytes back to characters
WITHOUT_CLASSIFICATION	rewind our character buffer
WITHOUT_CLASSIFICATION	remove anything that matches our pattern
WITHOUT_CLASSIFICATION	remove null characters at the end
WITHOUT_CLASSIFICATION	reencode the remaining characters as bytes again
WITHOUT_CLASSIFICATION	and write them to our output stream
WITHOUT_CLASSIFICATION	skip the <?xml first line
WITHOUT_CLASSIFICATION	cat.debug("note todoparser handlestarttag" + e.getname())
WITHOUT_CLASSIFICATION	nop
WITHOUT_CLASSIFICATION	this is expected to be safe don't add a try block here
WITHOUT_CLASSIFICATION	cat.debug("added todoitem " + _headline)
WITHOUT_CLASSIFICATION	static variables
WITHOUT_CLASSIFICATION	@see org.xml.sax.contenthandler#startelement(java.lang.string java.lang.string java.lang.string org.xml.sax.attributes)
WITHOUT_CLASSIFICATION	@see org.xml.sax.contenthandler#endelement(java.lang.string java.lang.string java.lang.string)
WITHOUT_CLASSIFICATION	@see org.xml.sax.contenthandler#characters(char[] int int)
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	retain the previous project file even when the save operation crashes in the middle. also create a backup file after saving.
WITHOUT_CLASSIFICATION	these strings match the xml element names in the argo.tee exactly.
WITHOUT_CLASSIFICATION	the following is deprecated but can never be removed to preserve backward compatibility with old project files
WITHOUT_CLASSIFICATION	protected methods
WITHOUT_CLASSIFICATION	empty constructor
WITHOUT_CLASSIFICATION	abstract methods
WITHOUT_CLASSIFICATION	non-abstract methods
WITHOUT_CLASSIFICATION	e.gorg.argouml.uml.generator.ui.classgenerationdialog -> poseidon.jar
WITHOUT_CLASSIFICATION	convenience methods
WITHOUT_CLASSIFICATION	end class saxparserbase
WITHOUT_CLASSIFICATION	stop ui interception
WITHOUT_CLASSIFICATION	do nothing.
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	@see javax.swing.filechooser.filefilter#getdescription()
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	retain the previous project file even when the save operation crashes in the middle. also create a backup file after saving.
WITHOUT_CLASSIFICATION	if save did not raise an exception and name+"#" exists move name+"#" to name+"~" this is the correct backup file
WITHOUT_CLASSIFICATION	frank in case of exception delete name and mv name+"#" back to name if name+"#" exists this is the "rollback" to old file
WITHOUT_CLASSIFICATION	we have to give a message to user and set the system to unsaved!
WITHOUT_CLASSIFICATION	we have to give a message to user and set the system to unsaved!
WITHOUT_CLASSIFICATION	make sure the file doesn't exist so the user will get prompted to choose a new name
WITHOUT_CLASSIFICATION	possibly use the following instead memberfilepersister persister = new diagrammemberfilepersister()
WITHOUT_CLASSIFICATION	class methods
WITHOUT_CLASSIFICATION	end class xmltokentablebase
WITHOUT_CLASSIFICATION	these are the file formats i know about
WITHOUT_CLASSIFICATION	if anything goes wrong return the stack trace as a string so that we get some useful feedback.
WITHOUT_CLASSIFICATION	return just the comment edges for a specific layer. todo document diagram / layer? @param diagram the diagram. @return a {@link list} with the edges.
WITHOUT_CLASSIFICATION	make sure this setting exists in the configuration file to facilitate changing
WITHOUT_CLASSIFICATION	is row at top of screen?
WITHOUT_CLASSIFICATION	@see javax.swing.filechooser.filefilter#getdescription()
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	filefilter api
WITHOUT_CLASSIFICATION	this check for files without extension
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	end class xmlelement
WITHOUT_CLASSIFICATION	for andromda
WITHOUT_CLASSIFICATION	for some reason this alleged directory is a single file this could be that there is some confusion or just the normal that a single file was selected and is supposed to be imported.
WITHOUT_CLASSIFICATION	get the contents of the directory
WITHOUT_CLASSIFICATION	the following test can cause trouble with links because links are accepted as directories even if they link files. links could also result in infinite loops. for this reason we don't do this traversing recursively.
WITHOUT_CLASSIFICATION	if this file is a directory
WITHOUT_CLASSIFICATION	load profile name
WITHOUT_CLASSIFICATION	yes scroll up one row
WITHOUT_CLASSIFICATION	testing works ok.
WITHOUT_CLASSIFICATION	if there is only one package in the model we should suppose it's the profile model if there is more than one we take the ones marked as <<profile>>
WITHOUT_CLASSIFICATION	load profile dependencies
WITHOUT_CLASSIFICATION	set up the property panels for critics
WITHOUT_CLASSIFICATION	init profiles defined in jar files
WITHOUT_CLASSIFICATION	we have our own uml2 profile but it is not used. instead by the following line the build-in eclipse uml2 standard profile and primitive types implementation are used.
WITHOUT_CLASSIFICATION	missing wfrs
WITHOUT_CLASSIFICATION	association class 4.5.3.2 [1]
WITHOUT_CLASSIFICATION	testing does not fire.
WITHOUT_CLASSIFICATION	testing does not fire.
WITHOUT_CLASSIFICATION	4.5.3.2 [2]
WITHOUT_CLASSIFICATION	behavioral feature 4.5.3.5 [2]
WITHOUT_CLASSIFICATION	todo partly overlaps croppendvsattr.
WITHOUT_CLASSIFICATION	tested with fabricated xmi - ok.
WITHOUT_CLASSIFICATION	tested with fabricated xmi - ok.
WITHOUT_CLASSIFICATION	tested with fabricated xmi - ok.
WITHOUT_CLASSIFICATION	4.5.3.20 [4]
WITHOUT_CLASSIFICATION	+ "a.allconnections->exists(r | r.type.ocliskindof(actor)) and "
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.depthfirstadapter#caseaifexpression(tudresden.ocl.parser.node.aifexpression)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.depthfirstadapter#casealogicalexpressiontail(tudresden.ocl.parser.node.alogicalexpressiontail)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.depthfirstadapter#casearelationalexpressiontail(tudresden.ocl.parser.node.arelationalexpressiontail)
WITHOUT_CLASSIFICATION	usecase 4.11.3.5 [2]
WITHOUT_CLASSIFICATION	classifier 4.5.3.8 [5]
WITHOUT_CLASSIFICATION	generalizableelement 4.5.3.20 [1]
WITHOUT_CLASSIFICATION	datatype 4.5.3.12 [1]
WITHOUT_CLASSIFICATION	actor 4.11.3.1 [1]
WITHOUT_CLASSIFICATION	namespace 4.5.3.26 [2]
WITHOUT_CLASSIFICATION	usecase 4.11.3.5 [1]
WITHOUT_CLASSIFICATION	actor 4.11.3.1 [2]
WITHOUT_CLASSIFICATION	tested ok except in some cases depending on the sequence of the eps. probably the implementation of "forall (x y | " does not cover all combinations.
WITHOUT_CLASSIFICATION	usecase 4.11.3.5 [4]
WITHOUT_CLASSIFICATION	usecase 4.11.3.5 [3]
WITHOUT_CLASSIFICATION	actionstate 4.13.3.2 [3] issue 715
WITHOUT_CLASSIFICATION	no default type for uml2
WITHOUT_CLASSIFICATION	the uml profile is always present and default
WITHOUT_CLASSIFICATION	register the built-in profiles
WITHOUT_CLASSIFICATION	if an exception is raised file is unusable
WITHOUT_CLASSIFICATION	if the list does not exist add the code generation and good practices profiles as default
WITHOUT_CLASSIFICATION	this profile could have not been loaded when the default profile configuration was loaded at first so we need to do it again
WITHOUT_CLASSIFICATION	we assume profile is contained in a single extent
WITHOUT_CLASSIFICATION	nothing to delete if we couldn't get the packages
WITHOUT_CLASSIFICATION	if we found an old-style name update it to the new package name
WITHOUT_CLASSIFICATION	make sure the names didn't change again
WITHOUT_CLASSIFICATION	simply use name as it is
WITHOUT_CLASSIFICATION	if element is an associationend use the namespace of containing association
WITHOUT_CLASSIFICATION	if one side is null compare with the equality operator
WITHOUT_CLASSIFICATION	xxx hypotheses for afeaturecall fwd = op val = head
WITHOUT_CLASSIFICATION	hypotheses no time expression (only invariants)
WITHOUT_CLASSIFICATION	for a iterator call we should provide (a) the variables (b) the expression to be evaluated on each step (c) the lambda-evaluator to evaluate it
WITHOUT_CLASSIFICATION	xxx hypothesis no time expression (inv)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.depthfirstadapter#caseaconstraint(tudresden.ocl.parser.node.aconstraint)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.depthfirstadapter#caseaclassifiercontext(tudresden.ocl.parser.node.aclassifiercontext)
WITHOUT_CLASSIFICATION	these operations are ok for lists too
WITHOUT_CLASSIFICATION	log.log(level.fine "ocl feature call " + subject + ""+ type +""+ feature + "" + parameters)
WITHOUT_CLASSIFICATION	xxx this should be done in collectionsmodelinterpreter but it can't trigger another invokefeature
WITHOUT_CLASSIFICATION	logger. private static final logger log = logger.getlogger(defaultoclevaluator.class.getname())
WITHOUT_CLASSIFICATION	log.log(level.fine "ocl " + ocl)
WITHOUT_CLASSIFICATION	propagate
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	if test fails this element should not be in the result set
WITHOUT_CLASSIFICATION	if test is ok this element should not be in the result set
WITHOUT_CLASSIFICATION	these operations are ok for bags too
WITHOUT_CLASSIFICATION	4.5.2.1 abstraction
WITHOUT_CLASSIFICATION	4.5.2.3 association
WITHOUT_CLASSIFICATION	additional operation 4.5.3.1 [1]
WITHOUT_CLASSIFICATION	4.5.2.5 associationend
WITHOUT_CLASSIFICATION	additional operation 4.5.3.3 [1]
WITHOUT_CLASSIFICATION	4.5.2.6 attribute
WITHOUT_CLASSIFICATION	4.5.2.7 behavioralfeature
WITHOUT_CLASSIFICATION	4.5.2.8 binding
WITHOUT_CLASSIFICATION	4.5.2.9 class
WITHOUT_CLASSIFICATION	4.5.2.10 classifier
WITHOUT_CLASSIFICATION	todo specifiedend??
WITHOUT_CLASSIFICATION	4.5.2.11 comment
WITHOUT_CLASSIFICATION	4.5.2.12 component
WITHOUT_CLASSIFICATION	additional operation in 4.5.3.9
WITHOUT_CLASSIFICATION	no scroll down one row
WITHOUT_CLASSIFICATION	4.5.2.14 dependency
WITHOUT_CLASSIFICATION	4.5.2.18 elementownership
WITHOUT_CLASSIFICATION	4.5.2.19 enumeration
WITHOUT_CLASSIFICATION	4.5.2.20 enumerationliteral
WITHOUT_CLASSIFICATION	4.5.2.21 feature
WITHOUT_CLASSIFICATION	4.5.2.23 generalizable element
WITHOUT_CLASSIFICATION	additional operation in 4.5.3.20
WITHOUT_CLASSIFICATION	4.5.2.26 method
WITHOUT_CLASSIFICATION	4.5.2.27 modelelement
WITHOUT_CLASSIFICATION	avoiding null names
WITHOUT_CLASSIFICATION	as extended by 4.6.2.2
WITHOUT_CLASSIFICATION	additional operations in 4.5.3.25
WITHOUT_CLASSIFICATION	additional operations in 4.5.3.26
WITHOUT_CLASSIFICATION	4.5.2.29 node
WITHOUT_CLASSIFICATION	4.5.2.30 operation
WITHOUT_CLASSIFICATION	4.5.2.31 parameter
WITHOUT_CLASSIFICATION	4.5.2.35 programminglanguagedatatype
WITHOUT_CLASSIFICATION	set the icon
WITHOUT_CLASSIFICATION	@see java.lang.object#equals(java.lang.object)
WITHOUT_CLASSIFICATION	@see java.lang.object#hashcode()
WITHOUT_CLASSIFICATION	@see java.awt.component#getminimumsize()
WITHOUT_CLASSIFICATION	ignored - we only care about open/closing
WITHOUT_CLASSIFICATION	4.5.2.37 structuralfeature
WITHOUT_CLASSIFICATION	4.5.2.38 templateargument
WITHOUT_CLASSIFICATION	4.5.2.39 templateparameter
WITHOUT_CLASSIFICATION	4.11.3.5 usecase
WITHOUT_CLASSIFICATION	the operation specificationpath results in a set containing all surrounding namespaces that are not instances of package. specificationpath set(namespace) specificationpath = self.allsurroundingnamespaces->select(n | n.ocliskindof(subsystem) or n.ocliskindof(class))
WITHOUT_CLASSIFICATION	4.5.3.2 associationclass
WITHOUT_CLASSIFICATION	the operation allconnections results in the set of all associationends of the associationclass including all connections defined by its parent (transitive closure).
WITHOUT_CLASSIFICATION	4.6.2.3 stereotype
WITHOUT_CLASSIFICATION	stereotypeconstraint ?
WITHOUT_CLASSIFICATION	4.6.2.4 tagdefinition
WITHOUT_CLASSIFICATION	4.6.2.5 taggedvalue
WITHOUT_CLASSIFICATION	add adapters that do nothing for keyboard and mouse actions
WITHOUT_CLASSIFICATION	discard the event if its source is not from the correct type
WITHOUT_CLASSIFICATION	guard against error conditions if climb search wasn't successful
WITHOUT_CLASSIFICATION	sets the mouse cursor to hourglass mode
WITHOUT_CLASSIFICATION	start receiving all events and consume them if necessary
WITHOUT_CLASSIFICATION	activate the glass pane capabilities
WITHOUT_CLASSIFICATION	stop receiving all events
WITHOUT_CLASSIFICATION	deactivate the glass pane capabilities
WITHOUT_CLASSIFICATION	sets the mouse cursor back to the regular pointer
WITHOUT_CLASSIFICATION	no initialization required
WITHOUT_CLASSIFICATION	end class spacerpanel
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#settarget(java.lang.object)
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.transferable#gettransferdata(java.awt.datatransfer.dataflavor)
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.transferable#gettransferdataflavors()
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.transferable#isdataflavorsupported(java.awt.datatransfer.dataflavor)
WITHOUT_CLASSIFICATION	@see java.lang.runnable#run()
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#insertupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#removeupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	called when the user has pressed save. performs "save" in all tabs.
WITHOUT_CLASSIFICATION	climb the component hierarchy until a rootpanecontainer is found or until the very top
WITHOUT_CLASSIFICATION	end class splashpanel
WITHOUT_CLASSIFICATION	retrieve an existing glasspane if old one already exist or create a new one otherwise return null
WITHOUT_CLASSIFICATION	add settings from the settings registry.
WITHOUT_CLASSIFICATION	keep track of the visible window associated w/the component useful during event filtering
WITHOUT_CLASSIFICATION	show a chooser dialog for the file name only xmi is allowed
WITHOUT_CLASSIFICATION	if a toolbar was requested create an empty one.
WITHOUT_CLASSIFICATION	increase width to accommodate all tabs on one row.
WITHOUT_CLASSIFICATION	todo localize
WITHOUT_CLASSIFICATION	todo localize
WITHOUT_CLASSIFICATION	called when the user has pressed cancel. performs "cancel" in all tabs.
WITHOUT_CLASSIFICATION	end class tabtext
WITHOUT_CLASSIFICATION	if a recursive call from setvisible() just return
WITHOUT_CLASSIFICATION	ignored - we only care about open/closing
WITHOUT_CLASSIFICATION	windowopen state will be changed when window is activated
WITHOUT_CLASSIFICATION	ignored - we only care about open/closing
WITHOUT_CLASSIFICATION	we have to tell the settings tab in which project the settings reside
WITHOUT_CLASSIFICATION	ignored - we only care about open/closing
WITHOUT_CLASSIFICATION	we only request focus the first time we become visible
WITHOUT_CLASSIFICATION	use case
WITHOUT_CLASSIFICATION	@see java.awt.event.windowlistener#windowopened(java.awt.event.windowevent)
WITHOUT_CLASSIFICATION	do nothing - these buttons are not shown.
WITHOUT_CLASSIFICATION	handle the same as an explicit cancel
WITHOUT_CLASSIFICATION	saveposition(prptodo tabtodo.class) saveposition(prpproperties tabprops.class) saveposition(prpdocumentation tabdocumentation.class) saveposition(prpstyle tabstyle.class) saveposition(prpsource tabsrc.class) saveposition(prpconstraints tabconstraints.class) saveposition(prptaggedvalues tabtaggedvalues.class)
WITHOUT_CLASSIFICATION	defer work until fetched/visible
WITHOUT_CLASSIFICATION	actor
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#gettabkey()
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	do nothing - these buttons are not shown.
WITHOUT_CLASSIFICATION	loadposition(prptodo tabtodo.class) loadposition(prpproperties tabprops.class) loadposition(prpdocumentation tabdocumentation.class) loadposition(prpstyle tabstyle.class) loadposition(prpsource tabsrc.class) loadposition(prpconstraints tabconstraints.class) loadposition(prptaggedvalues tabtaggedvalues.class)
WITHOUT_CLASSIFICATION	------------- rule management --------------
WITHOUT_CLASSIFICATION	----------- name -------------------------
WITHOUT_CLASSIFICATION	------ all rules ----------
WITHOUT_CLASSIFICATION	todo factor out @param rule the rule to be added
WITHOUT_CLASSIFICATION	put the current pane in a scroll pane.
WITHOUT_CLASSIFICATION	end class stylepanelfigtext
WITHOUT_CLASSIFICATION	note these must stay in this order to match rendering styles
WITHOUT_CLASSIFICATION	the boundary box as held in the target fig and as listed in the boundary box style field (null if we don't have anything valid)
WITHOUT_CLASSIFICATION	only reset the text if the two are not the same (i.e the fig has moved rather than we've just edited the text when settargetbbox() will have made them the same). note that stylebounds could be null so we do the test this way round.
WITHOUT_CLASSIFICATION	change the fill colour
WITHOUT_CLASSIFICATION	change the line colour
WITHOUT_CLASSIFICATION	can't do anything if we don't have a fig.
WITHOUT_CLASSIFICATION	parse the boundary box text. null is returned if it is empty or invalid which causes no change. otherwise we tell gef we are making a change make the change and tell gef we've finished.
WITHOUT_CLASSIFICATION	get the text in the field and don't do anything if the field is empty.
WITHOUT_CLASSIFICATION	parse the string as if possible
WITHOUT_CLASSIFICATION	empty implementation - we only care about keytyped
WITHOUT_CLASSIFICATION	empty implementation - we only care about keytyped
WITHOUT_CLASSIFICATION	ignored - will never be called
WITHOUT_CLASSIFICATION	add preloading progress bar?
WITHOUT_CLASSIFICATION	jasonsthemes
WITHOUT_CLASSIFICATION	todo - lets pass in project as a constructor argument
WITHOUT_CLASSIFICATION	make up a default
WITHOUT_CLASSIFICATION	lafclass == null ||
WITHOUT_CLASSIFICATION	set to the default laf
WITHOUT_CLASSIFICATION	top left bottom right
WITHOUT_CLASSIFICATION	if laf is metal (either set explicitly or as the default)
WITHOUT_CLASSIFICATION	set a custom laf
WITHOUT_CLASSIFICATION	@see javax.swing.jtree#firetreecollapsed(javax.swing.tree.treepath)
WITHOUT_CLASSIFICATION	@see javax.swing.jtree#setmodel(javax.swing.tree.treemodel)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getname()
WITHOUT_CLASSIFICATION	todo localize
WITHOUT_CLASSIFICATION	todo localize
WITHOUT_CLASSIFICATION	it looks better if the height increases too
WITHOUT_CLASSIFICATION	todo 10 and 120 were found by trial and error. calculate them.
WITHOUT_CLASSIFICATION	pack()
WITHOUT_CLASSIFICATION	not localized
WITHOUT_CLASSIFICATION	alphabetic order!
WITHOUT_CLASSIFICATION	alphabetic order!
WITHOUT_CLASSIFICATION	end class aboutbox
WITHOUT_CLASSIFICATION	save project at slightly lower priority to keep ui responsive
WITHOUT_CLASSIFICATION	saves the project
WITHOUT_CLASSIFICATION	mvw we should use default font sizes as much as possible. btw this impacts only the width and reduces readibility
WITHOUT_CLASSIFICATION	setfont(lookandfeelmgr.getinstance().getsmallfont())
WITHOUT_CLASSIFICATION	this enables tooltips for tree this one won't be shown
WITHOUT_CLASSIFICATION	the default (16) puts the icons too close together
WITHOUT_CLASSIFICATION	------------ methods that override jtree methods ---------
WITHOUT_CLASSIFICATION	if the name is too long or multi-line (e.g. for comments) then we reduce to the first line or 80 chars.
WITHOUT_CLASSIFICATION	look for stereotype
WITHOUT_CLASSIFICATION	use default formatting for any other type of uml element
WITHOUT_CLASSIFICATION	------------- other methods ------------------
WITHOUT_CLASSIFICATION	labels at the left
WITHOUT_CLASSIFICATION	and fields at the right.
WITHOUT_CLASSIFICATION	the user's full name
WITHOUT_CLASSIFICATION	the user's email
WITHOUT_CLASSIFICATION	the project description
WITHOUT_CLASSIFICATION	this non-editable field shows the version of the argouml that last saved this project
WITHOUT_CLASSIFICATION	we need to fill the whole pane so that the description field can take all available space
WITHOUT_CLASSIFICATION	there is no default description.
WITHOUT_CLASSIFICATION	defer all work until we're actually needed
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	these are blue in metal default theme
WITHOUT_CLASSIFICATION	these are gray in metal default theme
WITHOUT_CLASSIFICATION	actionlistener implementation
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getprimary1()
WITHOUT_CLASSIFICATION	private jcheckbox jchbbold = null
WITHOUT_CLASSIFICATION	find and add all subdirectories
WITHOUT_CLASSIFICATION	private jcheckbox jchbitalic = null
WITHOUT_CLASSIFICATION	initialize font faces list
WITHOUT_CLASSIFICATION	most of this code originates from actionopenproject.
WITHOUT_CLASSIFICATION	initialize font sizes list
WITHOUT_CLASSIFICATION	jcontentpane.add(getjchbbold() gridbagconstraints2) jcontentpane.add(getjchbitalic() gridbagconstraints3)
WITHOUT_CLASSIFICATION	try adding the extension from the chosen filter.
WITHOUT_CLASSIFICATION	mouselistener implementation
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see java.lang.runnable#run()
WITHOUT_CLASSIFICATION	these are blue in metal default theme
WITHOUT_CLASSIFICATION	these are gray in metal default theme
WITHOUT_CLASSIFICATION	keylistener implementation
WITHOUT_CLASSIFICATION	listselectionlistener implementation
WITHOUT_CLASSIFICATION	diagrams are not placed in search results
WITHOUT_CLASSIFICATION	only return once per diagram so we don't for example find a class as a diagram element and also as a child of a package which is on the diagram
WITHOUT_CLASSIFICATION	no related
WITHOUT_CLASSIFICATION	todo tabs for class state usecase help
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseclicked
WITHOUT_CLASSIFICATION	tabresults has really large preferred height so divide in half to reduce size of dialog which will be sized based on this preferred size.
WITHOUT_CLASSIFICATION	load project at slightly lower priority to keep ui responsive
WITHOUT_CLASSIFICATION	jtabbedpane tabs = new jtabbedpane() mainpanel.add(tabs borderlayout.center) tabs.addtab("all diagrams" alldiagrams)
WITHOUT_CLASSIFICATION	the south panel always has tabs - but they are added (later) elsewhere.
WITHOUT_CLASSIFICATION	loads the project
WITHOUT_CLASSIFICATION	default tab todo
WITHOUT_CLASSIFICATION	special case for backward compatibility
WITHOUT_CLASSIFICATION	default tab todo
WITHOUT_CLASSIFICATION	select prop panel if current panel is not appropriate for selected target
WITHOUT_CLASSIFICATION	not visible any more - so remove as listener
WITHOUT_CLASSIFICATION	newly selected tab may have stale target info so generate a new set target event for it to refresh it
WITHOUT_CLASSIFICATION	update the previously selected tab
WITHOUT_CLASSIFICATION	the other tabs need to be updated depending on the selection.
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseclicked
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseclicked
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseclicked
WITHOUT_CLASSIFICATION	todo quick return here for target == null? - tfm
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#insertupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#removeupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	---------------- listener management ----------------
WITHOUT_CLASSIFICATION	--------------- tree nodes -------------------------
WITHOUT_CLASSIFICATION	------------- tree structure -----------------
WITHOUT_CLASSIFICATION	see getvalue() setvalue()
WITHOUT_CLASSIFICATION	create a timer.
WITHOUT_CLASSIFICATION	mount the glasspane on the component window
WITHOUT_CLASSIFICATION	keep track of the glasspane as an instance variable
WITHOUT_CLASSIFICATION	start interception ui interactions
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#changedupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.itemlistener#itemstatechanged(java.awt.event.itemevent)
WITHOUT_CLASSIFICATION	if action comes in with no modifiers it is a pure keyboard event (e.g. spacebar) so do it. anything else is probably a mouse event so ignore it. mouse events are dealt with by mousepressed() instead (see bottom of page).
WITHOUT_CLASSIFICATION	end class stylepanel
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	make sure the correspondence that we depend on doesn't change
WITHOUT_CLASSIFICATION	getcontentpane().add(_menubar borderlayout.north)
WITHOUT_CLASSIFICATION	allows me to ask "do you want to save first?"
WITHOUT_CLASSIFICATION	add listener for project changes
WITHOUT_CLASSIFICATION	add listener to get notified when active diagram changes
WITHOUT_CLASSIFICATION	add a listener to focus changes. rationale reset the undo manager to start a new chain.
WITHOUT_CLASSIFICATION	we get many many events (why?) so let's filter
WITHOUT_CLASSIFICATION	create the todopane
WITHOUT_CLASSIFICATION	@see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see javax.swing.jframe#getjmenubar()
WITHOUT_CLASSIFICATION	@see java.awt.component#setvisible(boolean)
WITHOUT_CLASSIFICATION	there are various details panes all of which could hold different tabs pages according to users settings. place each pane in the required border area.
WITHOUT_CLASSIFICATION	toolbar boundary is the area between the menu and the status bar. it contains the workarea at centre and the toolbar position north south east or west.
WITHOUT_CLASSIFICATION	add target listeners for details panes
WITHOUT_CLASSIFICATION	convenience methods to return saved width and height values
WITHOUT_CLASSIFICATION	in theory there can be multiple details pane (work in progress). it must first be determined which details page contains the properties tab. bob tarling 7 dec 2002
WITHOUT_CLASSIFICATION	the trysave method results in the save taking place in another thread. if that completes without error the projectbrowser.exit() method will be called which will actually exist the system.
WITHOUT_CLASSIFICATION	end class windowcloser
WITHOUT_CLASSIFICATION	the project changed
WITHOUT_CLASSIFICATION	designer.thedesigner.gettodolist().removeallelements()
WITHOUT_CLASSIFICATION	update all panes
WITHOUT_CLASSIFICATION	/ targetlistener methods implemented so notified when selected diagram changes. used to update the window title.
WITHOUT_CLASSIFICATION	this method is invoked from several places so we have to check whether if the project uri is set or not
WITHOUT_CLASSIFICATION	does the file really exists?
WITHOUT_CLASSIFICATION	project file doesn't exist. let's pop up a message dialog..
WITHOUT_CLASSIFICATION	..and let's ask the user whether he wants to save the actual project into a new file or not
WITHOUT_CLASSIFICATION	save action has been cancelled
WITHOUT_CLASSIFICATION	attempt to save this project under a new name.
WITHOUT_CLASSIFICATION	prompt the user for the new name.
WITHOUT_CLASSIFICATION	let's call the real save method
WITHOUT_CLASSIFICATION	repair any errors in the project
WITHOUT_CLASSIFICATION	notification of menu bar
WITHOUT_CLASSIFICATION	simulate some errors to repair. replace with junits - bob
WITHOUT_CLASSIFICATION	change to true to enable testing
WITHOUT_CLASSIFICATION	a fig with a null owner
WITHOUT_CLASSIFICATION	a fig with a null layer
WITHOUT_CLASSIFICATION	a fig with a removed model element
WITHOUT_CLASSIFICATION	remove the old project first. it's wasteful to create a temp empty project but too much of argouml depends on having a current project
WITHOUT_CLASSIFICATION	let's save this project in the mru list
WITHOUT_CLASSIFICATION	do nothing - these buttons are not shown.
WITHOUT_CLASSIFICATION	ignored - we only care about open/closing
WITHOUT_CLASSIFICATION	let's save this project as the last used one in the configuration file
WITHOUT_CLASSIFICATION	an error that can be corrected by the user so no stack trace but instead an explanation and a hint how to fix
WITHOUT_CLASSIFICATION	an error that can be corrected by the user so no stack trace but instead an explanation and a hint how to fix
WITHOUT_CLASSIFICATION	this is temporary. load project should create a new project with its own undomanager and so there should be no command
WITHOUT_CLASSIFICATION	make sure save action is always reinstated
WITHOUT_CLASSIFICATION	we clear the save-required flag on the swing event thread in the hopes that it gets done after any other background work (listener updates) that is being done there
WITHOUT_CLASSIFICATION	adding project files icon
WITHOUT_CLASSIFICATION	end class projectbrowser
WITHOUT_CLASSIFICATION	defer initialization until we're visible
WITHOUT_CLASSIFICATION	make the result inmediately visible in case of apply
WITHOUT_CLASSIFICATION	disabled since it gives various problems e.g. the toolbar icons get too wide. also the default does not give the new java 5.0 looks. swingutilities.updatecomponenttreeui(swingutilities.getrootpane(this))
WITHOUT_CLASSIFICATION	filled in later
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#handlesettingstabsave()
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#handlesettingstabcancel()
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#gettabkey()
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#gettabpanel()
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getcolumncount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getcolumnname(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getrowcount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getvalueat(int int)
WITHOUT_CLASSIFICATION	do nothing - these buttons are not shown.
WITHOUT_CLASSIFICATION	ignored - we only care about open/closing
WITHOUT_CLASSIFICATION	create new menu item if it doesn't exist for this class.
WITHOUT_CLASSIFICATION	make this change persistant
WITHOUT_CLASSIFICATION	if menus don't containt menu item necessary for this class create it
WITHOUT_CLASSIFICATION	if visibility is already changed for this class respect it.
WITHOUT_CLASSIFICATION	if there is persistant state for this toolbar respect it or add it to persistance data
WITHOUT_CLASSIFICATION	queue to event thread to prevent race during close
WITHOUT_CLASSIFICATION	add toolbar.
WITHOUT_CLASSIFICATION	register popup menu with toolbar.
WITHOUT_CLASSIFICATION	these settings are needed to make the progressmonitor pop up early
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed( java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.windowlistener#windowactivated(java.awt.event.windowevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.windowlistener#windowdeiconified(java.awt.event.windowevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.windowlistener#windowiconified(java.awt.event.windowevent)
WITHOUT_CLASSIFICATION	add settings from the settings registry.
WITHOUT_CLASSIFICATION	increase width to accommodate all tabs on one row.
WITHOUT_CLASSIFICATION	windowopen state will be changed when window is activated
WITHOUT_CLASSIFICATION	called when the user has pressed save. performs "save" in all tabs.
WITHOUT_CLASSIFICATION	called when the user has pressed cancel. performs "cancel" in all tabs.
WITHOUT_CLASSIFICATION	we only request focus the first time we become visible
WITHOUT_CLASSIFICATION	ignored - we only care about open/closing
WITHOUT_CLASSIFICATION	ignored - we only care about open/closing
WITHOUT_CLASSIFICATION	handle the same as an explicit cancel
WITHOUT_CLASSIFICATION	file load/save gets done on a background thread so we'll probably have to queue this to the swing event thread
WITHOUT_CLASSIFICATION	todo concatenate? - tfm overwrite for now
WITHOUT_CLASSIFICATION	end class stylepanelfigrrect
WITHOUT_CLASSIFICATION	let the parent do its refresh.
WITHOUT_CLASSIFICATION	lets redraw the box
WITHOUT_CLASSIFICATION	@see java.awt.component#getpreferredsize()
WITHOUT_CLASSIFICATION	@see java.awt.component#getminimumsize()
WITHOUT_CLASSIFICATION	called when the user selects a tab by clicking or otherwise. @see javax.swing.event.changelistener#statechanged(javax.swing.event.changeevent)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseclicked
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseclicked
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseclicked
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseclicked
WITHOUT_CLASSIFICATION	we don't know what thread events will be delivered on so make sure we run swing methods on the swing thread
WITHOUT_CLASSIFICATION	this instead of the label ??? displaypane.setborder(new titledborder( translator.localize("display ")))
WITHOUT_CLASSIFICATION	add in front of the others add the label in front of the "pane"
WITHOUT_CLASSIFICATION	and finally adjust the scrollbars to show the fig
WITHOUT_CLASSIFICATION	% thresholds for bar color changes
WITHOUT_CLASSIFICATION	making it possible to jump to the modelroots
WITHOUT_CLASSIFICATION	org.argouml.ui.tabtable tabmetrics tabjavasrc | tabsrc tabumldisplay tabhash
WITHOUT_CLASSIFICATION	timer action method. periodically update our stats and force a repaint.
WITHOUT_CLASSIFICATION	virtual memory (heap) stats
WITHOUT_CLASSIFICATION	thin bar to show current allocated heap size
WITHOUT_CLASSIFICATION	thin bar to show current used
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#gettabpanel()
WITHOUT_CLASSIFICATION	do nothing - these buttons are not shown.
WITHOUT_CLASSIFICATION	the introducing label
WITHOUT_CLASSIFICATION	how to handle empty target lists? probably the multieditorpane should only show an empty pane in that case
WITHOUT_CLASSIFICATION	private jpanel constraintstab = new jpanel()
WITHOUT_CLASSIFICATION	the child is sometimes not found when the tree is being updated
WITHOUT_CLASSIFICATION	private jtabbedpane tabs = new jtabbedpane()
WITHOUT_CLASSIFICATION	tabs.setminimumsize(new dimension(300 250))
WITHOUT_CLASSIFICATION	private jpanel modifiedtab = new jpanel()
WITHOUT_CLASSIFICATION	the activitygraph.
WITHOUT_CLASSIFICATION	private jpanel tagvalstab = new jpanel()
WITHOUT_CLASSIFICATION	open space at gridy = 2
WITHOUT_CLASSIFICATION	mainpanel.add(north borderlayout.north)
WITHOUT_CLASSIFICATION	any type
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed( java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	todo localize
WITHOUT_CLASSIFICATION	mouselistener implementation
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseclicked
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseclicked
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseclicked
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseclicked
WITHOUT_CLASSIFICATION	this text is for the developers. it doesn't need to be localized.
WITHOUT_CLASSIFICATION	these shouldn't really be <br> instead of <p> elements but the lines all get run together when pasted into a browser window.
WITHOUT_CLASSIFICATION	jpanel north = new jpanel() north.setlayout(new borderlayout()) north.add(tabs borderlayout.center)
WITHOUT_CLASSIFICATION	initconstraintstab() tabs.addtab(translator.localize("tab.constraints") constraintstab) tabs.setenabledat(3 false)
WITHOUT_CLASSIFICATION	inittagvalstab() tabs.addtab(translator.localize("dialog.find.tab.tagged-values") tagvalstab) tabs.setenabledat(2 false)
WITHOUT_CLASSIFICATION	end class finddialog
WITHOUT_CLASSIFICATION	name += " in " + dname
WITHOUT_CLASSIFICATION	not in uml 2.x (or metatypes) type.additem(predicatemtype.create( model.getmetatypes().getactivitygraph()))
WITHOUT_CLASSIFICATION	set the name and icon
WITHOUT_CLASSIFICATION	help tab is 0
WITHOUT_CLASSIFICATION	end rungc_actionperformed()
WITHOUT_CLASSIFICATION	end class predicatemtype
WITHOUT_CLASSIFICATION	end updateinfo()
WITHOUT_CLASSIFICATION	end class navigatorpane
WITHOUT_CLASSIFICATION	end copy_actionperformed()
WITHOUT_CLASSIFICATION	end class actiongotodiagram
WITHOUT_CLASSIFICATION	end class systeminfodialog
WITHOUT_CLASSIFICATION	clean the history
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	main methods
WITHOUT_CLASSIFICATION	but exclude elements that enclose others since their algorithms to calculate the minimum size does not take enclosed objects into account
WITHOUT_CLASSIFICATION	super(translator.localize("action.size-to-fit-contents"))
WITHOUT_CLASSIFICATION	unsupported.
WITHOUT_CLASSIFICATION	only resize elements which the user would also be able to resize
WITHOUT_CLASSIFICATION	if a default action was voided then we have to save it
WITHOUT_CLASSIFICATION	set the name
WITHOUT_CLASSIFICATION	let's load the default shortcut for every action
WITHOUT_CLASSIFICATION	end class actionfind
WITHOUT_CLASSIFICATION	let's load the current shortcut from the configuration (as a string)
WITHOUT_CLASSIFICATION	generate menu
WITHOUT_CLASSIFICATION	it should never go here!
WITHOUT_CLASSIFICATION	view menu
WITHOUT_CLASSIFICATION	file menu
WITHOUT_CLASSIFICATION	align submenu
WITHOUT_CLASSIFICATION	edit menu
WITHOUT_CLASSIFICATION	create menu
WITHOUT_CLASSIFICATION	arrange menu
WITHOUT_CLASSIFICATION	help menu
WITHOUT_CLASSIFICATION	help menu
WITHOUT_CLASSIFICATION	this id is used as default_id !
WITHOUT_CLASSIFICATION	end class actionaboutargouml
WITHOUT_CLASSIFICATION	distribute submenu
WITHOUT_CLASSIFICATION	end class actionpagesetup
WITHOUT_CLASSIFICATION	trap focus traversal keys also
WITHOUT_CLASSIFICATION	let's add the key printing logic
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	the "close window" shortcut (alt+f4) actually can't be registered as a shortcut because it closes the configuration dialog!
WITHOUT_CLASSIFICATION	if a not-default current shortcut was added then we have to save it
WITHOUT_CLASSIFICATION	if the actual is not going to be saved then try to remove it (as it could have been cancelled)
WITHOUT_CLASSIFICATION	no modifiers - let's check if the key is valid
WITHOUT_CLASSIFICATION	middle of shortcut
WITHOUT_CLASSIFICATION	only show actions for associations not already on diagram
WITHOUT_CLASSIFICATION	add last recently used list _before_ exit menu
WITHOUT_CLASSIFICATION	keystroke f7 = keystroke.getkeystroke(keyevent.vk_f7 0)
WITHOUT_CLASSIFICATION	and exit menu entry starting with separator.
WITHOUT_CLASSIFICATION	this used to be deferred but it's only 30-40 msec of work.
WITHOUT_CLASSIFICATION	now let's set up the "selected action" container
WITHOUT_CLASSIFICATION	generate.add(actions.generateweb)
WITHOUT_CLASSIFICATION	add the help menu item.
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the name and icon
WITHOUT_CLASSIFICATION	clean the history
WITHOUT_CLASSIFICATION	comment out when we are ready to release undo/redo jmenuitem undoitem = edit.add( projectactions.getinstance().getundoaction()) setmnemonic(undoitem "undo") shortcutmgr.assignaccelerator(undoitem shortcutmgr.action_undo) jmenuitem redoitem = edit.add( projectactions.getinstance().getredoaction()) setmnemonic(redoitem "redo") shortcutmgr.assignaccelerator(redoitem shortcutmgr.action_redo) edit.addseparator()
WITHOUT_CLASSIFICATION	jmenuitem cutitem = edit.add(actioncut.getinstance()) setmnemonic(cutitem "cut") setaccelerator(cutitem ctrlx) jmenuitem copyitem = edit.add(actioncopy.getinstance()) setmnemonic(copyitem "copy") setaccelerator(copyitem ctrlc) jmenuitem pasteitem = edit.add(actionpaste.getinstance()) setmnemonic(pasteitem "paste") setaccelerator(pasteitem ctrlv) edit.addseparator()
WITHOUT_CLASSIFICATION	create the edit toolbar based on the menu. all menuitems that have an icon are presumed to be based upon an action and these actions are used in the toolbar.
WITHOUT_CLASSIFICATION	sethelpmenu(help)
WITHOUT_CLASSIFICATION	component or action
WITHOUT_CLASSIFICATION	set maximum length of menu entry
WITHOUT_CLASSIFICATION	jmenuitem item = _filemenu.add(new actionreopenproject(filename))
WITHOUT_CLASSIFICATION	the text is used by the event handler for opening the project
WITHOUT_CLASSIFICATION	create all nessessary configuration keys for lru
WITHOUT_CLASSIFICATION	holds file menu
WITHOUT_CLASSIFICATION	text is short tooltip is long
WITHOUT_CLASSIFICATION	read existing file names from configuration
WITHOUT_CLASSIFICATION	empty entry stops reading --> last line!
WITHOUT_CLASSIFICATION	this is the recent count
WITHOUT_CLASSIFICATION	delete all existing entries
WITHOUT_CLASSIFICATION	add new entry as first entry
WITHOUT_CLASSIFICATION	add other existing entries but filter the just added one
WITHOUT_CLASSIFICATION	save count
WITHOUT_CLASSIFICATION	and store configuration props
WITHOUT_CLASSIFICATION	end class actionexit
WITHOUT_CLASSIFICATION	box.setlocationrelativeto(jframe)
WITHOUT_CLASSIFICATION	end class actionhelp
WITHOUT_CLASSIFICATION	instantiation not allowed
WITHOUT_CLASSIFICATION	end class actionprint
WITHOUT_CLASSIFICATION	let's add the table inside a jscrollpane
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getcolumncount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getcolumnname(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getrowcount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getvalueat(int int)
WITHOUT_CLASSIFICATION	do nothing! the next time we refresh we will fetch the values again.
WITHOUT_CLASSIFICATION	do nothing - these buttons are not shown.
WITHOUT_CLASSIFICATION	main methods
WITHOUT_CLASSIFICATION	init from config read number write result as new default and prepare keys
WITHOUT_CLASSIFICATION	get already existing names from menu actions real file names not action names !
WITHOUT_CLASSIFICATION	let's enable the radiobuttons container
WITHOUT_CLASSIFICATION	updating the radiobuttons container's title
WITHOUT_CLASSIFICATION	let's select the correct radio button
WITHOUT_CLASSIFICATION	no shortcuts --> none
WITHOUT_CLASSIFICATION	current shortcut == default --> default
WITHOUT_CLASSIFICATION	customized shortcut --> custom
WITHOUT_CLASSIFICATION	let's reload the shortcuts
WITHOUT_CLASSIFICATION	conflict detected showing a warning to the user instead of saving shortcuts
WITHOUT_CLASSIFICATION	saving shortcuts
WITHOUT_CLASSIFICATION	if a shortcut has been select then we have to check if the actual action is in conflict with other ones
WITHOUT_CLASSIFICATION	this shortcut was already been assigned to another action let's pop-up a message for the user
WITHOUT_CLASSIFICATION	blanking the old action's shortcut.. and now refreshing the table.
WITHOUT_CLASSIFICATION	re-selecting the old row without changing the target - and without throwing another listselectionevent!
WITHOUT_CLASSIFICATION	let's change the target
WITHOUT_CLASSIFICATION	duplicate shortcut not found let's check for duplicates
WITHOUT_CLASSIFICATION	there's a duplicate let's recheck if there is a conflict
WITHOUT_CLASSIFICATION	updating the shortcut field
WITHOUT_CLASSIFICATION	updating the table data
WITHOUT_CLASSIFICATION	updating the actions
WITHOUT_CLASSIFICATION	the shortcut has already been assigned to another action!
WITHOUT_CLASSIFICATION	if the given object is a keystroke instance then we ca
WITHOUT_CLASSIFICATION	let's update also the actions array
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	show a chooser dialog for the file name only xmi is allowed
WITHOUT_CLASSIFICATION	the default nr of rows is 8 but since we have 9 perspectives by default now setting to 9 is nicer.
WITHOUT_CLASSIFICATION	check if multiple items are selected.
WITHOUT_CLASSIFICATION	profile section dealing with profiles in different states
WITHOUT_CLASSIFICATION	1. a noneditable applied profile
WITHOUT_CLASSIFICATION	just no item added in this case
WITHOUT_CLASSIFICATION	3. the editable unapplied profile
WITHOUT_CLASSIFICATION	end of profile section
WITHOUT_CLASSIFICATION	can't delete last top level model
WITHOUT_CLASSIFICATION	determine if only diagrams are in the target list.
WITHOUT_CLASSIFICATION	"x nodes and x edges"
WITHOUT_CLASSIFICATION	check to see if all targets are classifiers before adding an option to create an association between them all
WITHOUT_CLASSIFICATION	test if this element can be contained by the target
WITHOUT_CLASSIFICATION	iterate through all possible model elements to determine which are valid to be contained by the selected target
WITHOUT_CLASSIFICATION	end class actionaddexistingrelatednode
WITHOUT_CLASSIFICATION	this element can be contained add a menu item that allows the user to take that action
WITHOUT_CLASSIFICATION	otherwise we select the item below the mousepointer.
WITHOUT_CLASSIFICATION	we preserve the current (multiple) selection if we are over part of it
WITHOUT_CLASSIFICATION	unimplemented - we only care about expanding
WITHOUT_CLASSIFICATION	end class explorermouselistener
WITHOUT_CLASSIFICATION	does nothing.
WITHOUT_CLASSIFICATION	need to update the selection state.
WITHOUT_CLASSIFICATION	perform recursive search of subtree rooted at 'node' selecting all nodes which have a userobject matching one of our targets.
WITHOUT_CLASSIFICATION	get the elements
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	target may appear multiple places in the tree so we don't stop here (but it's expensive to search the whole tree) - tfm - 20070904 targets.remove(t) break
WITHOUT_CLASSIFICATION	scan the visible rows for duplicates of this elem and select them
WITHOUT_CLASSIFICATION	check which targetmanager method to call
WITHOUT_CLASSIFICATION	we must call the correct method on targetmanager for each added or removed target
WITHOUT_CLASSIFICATION	we can't remove the targets in one go we have to do it one by one.
WITHOUT_CLASSIFICATION	settargets(e.getnewtargets())
WITHOUT_CLASSIFICATION	settargets(e.getnewtargets())
WITHOUT_CLASSIFICATION	at the top right bottom left bottom
WITHOUT_CLASSIFICATION	the dialog is modal
WITHOUT_CLASSIFICATION	sortjlistmodel(rulelibrarylist)
WITHOUT_CLASSIFICATION	disable the buttons for now since no selection has been made yet
WITHOUT_CLASSIFICATION	the text will be set later
WITHOUT_CLASSIFICATION	the text will be set later
WITHOUT_CLASSIFICATION	remove the ones already selected (if a perspective is selected)
WITHOUT_CLASSIFICATION	add them
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	update the label (which shows the number of rules)
WITHOUT_CLASSIFICATION	must add an editable list of new explorerperspective's to the list model so that the original ones are not changed in the case of a cancel action by the user.
WITHOUT_CLASSIFICATION	set the newly selected item in the library list
WITHOUT_CLASSIFICATION	update the label (which shows the number of rules)
WITHOUT_CLASSIFICATION	set the newly selected item in the library list
WITHOUT_CLASSIFICATION	remove the rule from the library list
WITHOUT_CLASSIFICATION	the name of the umldiagram represented by this node has changed.
WITHOUT_CLASSIFICATION	uml model events
WITHOUT_CLASSIFICATION	notation events
WITHOUT_CLASSIFICATION	handle remove for non-uml elements (e.g. diagrams)
WITHOUT_CLASSIFICATION	get the selected targets (uml modelelements) from the targetmanager.
WITHOUT_CLASSIFICATION	project events
WITHOUT_CLASSIFICATION	show a chooser dialog for the file name only xmi is allowed
WITHOUT_CLASSIFICATION	get one of the default profile dirs if available (as a default value for the following save dialog)
WITHOUT_CLASSIFICATION	save profile
WITHOUT_CLASSIFICATION	register it as a user profile
WITHOUT_CLASSIFICATION	this is safe because getname always returns a string of some type
WITHOUT_CLASSIFICATION	load user perspectives
WITHOUT_CLASSIFICATION	get the perspective name
WITHOUT_CLASSIFICATION	make sure there are some rules
WITHOUT_CLASSIFICATION	get the rules
WITHOUT_CLASSIFICATION	get the rule name
WITHOUT_CLASSIFICATION	create the rule
WITHOUT_CLASSIFICATION	rule name but no rules
WITHOUT_CLASSIFICATION	add the perspective
WITHOUT_CLASSIFICATION	no user defined perspectives
WITHOUT_CLASSIFICATION	one last check that some loaded.
WITHOUT_CLASSIFICATION	works for both statediagram as activitygraph
WITHOUT_CLASSIFICATION	enter here go rules only relevant for uml 2 empty for now
WITHOUT_CLASSIFICATION	the drag gesture recognizer fires events in response to drag gestures in a component.
WITHOUT_CLASSIFICATION	specifies valid actions
WITHOUT_CLASSIFICATION	eliminates right mouse clicks as valid actions
WITHOUT_CLASSIFICATION	first argument component to associate the target with second argument droptargetlistener
WITHOUT_CLASSIFICATION	get the cell renderer (which is a jlabel) for the path being dragged.
WITHOUT_CLASSIFICATION	the layout manager would normally do this
WITHOUT_CLASSIFICATION	get a buffered image of the selection for dragging a ghost image
WITHOUT_CLASSIFICATION	ask the cell renderer to paint itself into the bufferedimage. make the image ghostlike.
WITHOUT_CLASSIFICATION	now paint a gradient under the ghosted jlabel text (but not under the icon if any).
WITHOUT_CLASSIFICATION	make the gradient ghostlike
WITHOUT_CLASSIFICATION	remember the path being dragged (because if it is being moved we will have to delete it later).
WITHOUT_CLASSIFICATION	we pass our drag image just in case it is supported by the platform.
WITHOUT_CLASSIFICATION	if the destination is not a namespace then abort
WITHOUT_CLASSIFICATION	if the destination is a datatype then abort
WITHOUT_CLASSIFICATION	we are sure "dest" is a namespace now.
WITHOUT_CLASSIFICATION	mvw these are the wfrs for datatype [1] a datatype can only contain operations which all must be queries. self.allfeatures->forall(f | f.ocliskindof(operation) and f.oclastype(operation).isquery) [2] a datatype cannot contain any other modelelements. self.allcontents->isempty imho we should enforce these wfrs here. so it is still possible to copy or move query operations hence we should allow this.
WITHOUT_CLASSIFICATION	let's check all dragged elements - if one of these may be dropped then the drag is valid. the others will be ignored when dropping.
WITHOUT_CLASSIFICATION	empty implementation - not used.
WITHOUT_CLASSIFICATION	empty implementation - not used.
WITHOUT_CLASSIFICATION	empty implementation - not used.
WITHOUT_CLASSIFICATION	figure out which row we're on.
WITHOUT_CLASSIFICATION	if we are not on a row then ignore this autoscroll request
WITHOUT_CLASSIFICATION	we are sure "dest" is a namespace now.
WITHOUT_CLASSIFICATION	autoscroll interface the following code was borrowed from the book java swing by robert eckstein marc loy & dave wood paperback - 1221 pages 1 ed edition (september 1998) o'reilly & associates isbn 156592455x the relevant chapter of which can be found at httpwww.oreilly.com/catalog/jswing/chapter/dnd.beta.pdf
WITHOUT_CLASSIFICATION	now decide if the row is at the top of the screen or at the bottom. we do this to make the previous row (or the next row) visible as appropriate. if were at the absolute top or bottom just return the first or last row respectively.
WITHOUT_CLASSIFICATION	set up a hover timer so that a node will be automatically expanded or collapsed if the user lingers on it for more than a short time.
WITHOUT_CLASSIFICATION	isrootpath
WITHOUT_CLASSIFICATION	set timer to one-shot mode
WITHOUT_CLASSIFICATION	log.log(level.fine "dragover")
WITHOUT_CLASSIFICATION	the next condition becomes false when dragging in something from another application.
WITHOUT_CLASSIFICATION	if a drag image is not supported by the platform then draw my own drag image.
WITHOUT_CLASSIFICATION	rub out the last ghost image and cue line
WITHOUT_CLASSIFICATION	and remember where we are about to draw the new ghost image
WITHOUT_CLASSIFICATION	just rub out the last cue line
WITHOUT_CLASSIFICATION	in any case draw (over the ghost image if necessary) a cue line indicating where a drop will occur.
WITHOUT_CLASSIFICATION	and include the cue line in the area to be rubbed out next time
WITHOUT_CLASSIFICATION	testcase drag something from another application into argouml and the explorer shows the drop icon instead of the nodrop.
WITHOUT_CLASSIFICATION	to prohibit dropping onto the drag source
WITHOUT_CLASSIFICATION	if the destination is not a namespace then reject
WITHOUT_CLASSIFICATION	if the destination is a datatype then reject
WITHOUT_CLASSIFICATION	prevent hover timer from doing an unwanted expandpath or collapsepath
WITHOUT_CLASSIFICATION	clear the ghost image
WITHOUT_CLASSIFICATION	get new parent node
WITHOUT_CLASSIFICATION	get the model elements that are being transfered.
WITHOUT_CLASSIFICATION	the user-dropactions are ctrl + shift -> action_link ctrl -> action_copy shift -> action_move (none) -> action_move
WITHOUT_CLASSIFICATION	only accept copy or move gestures (ie link is not supported)
WITHOUT_CLASSIFICATION	only accept copy or move gestures (ie link is not supported)
WITHOUT_CLASSIFICATION	do this if you want to prohibit dropping onto the drag source
WITHOUT_CLASSIFICATION	do this if you want to prohibit dropping onto the drag source
WITHOUT_CLASSIFICATION	end class
WITHOUT_CLASSIFICATION	remove references for gc
WITHOUT_CLASSIFICATION	this should only be helpful for old garbage collectors.
WITHOUT_CLASSIFICATION	avoid doing this too early in the initialization process
WITHOUT_CLASSIFICATION	avoid recursively updating the same child
WITHOUT_CLASSIFICATION	@see javax.swing.tree.defaulttreemodel#insertnodeinto(javax.swing.tree.mutabletreenode javax.swing.tree.mutabletreenode int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.defaulttreemodel#removenodefromparent(javax.swing.tree.mutabletreenode)
WITHOUT_CLASSIFICATION	this is somewhat inconsistent with the design of the constructor that receives the root object by argument. if this is okay then there may be no need for a constructor with that argument.
WITHOUT_CLASSIFICATION	enumerate the current children of node to find out which now sorts in different order since these must be moved
WITHOUT_CLASSIFICATION	avoid our deinitialization here the node will be added back to the tree again
WITHOUT_CLASSIFICATION	for each reordered node find it's new position among the current children and move it there
WITHOUT_CLASSIFICATION	avoid our initialization here
WITHOUT_CLASSIFICATION	collect the current set of objects that should be children to this node
WITHOUT_CLASSIFICATION	handle weakexplorernodes
WITHOUT_CLASSIFICATION	remove the node from removeset
WITHOUT_CLASSIFICATION	remove obj3 from weaknodes and newchildren
WITHOUT_CLASSIFICATION	remember that children are not treenodes but userobjects
WITHOUT_CLASSIFICATION	add any remaining nodes
WITHOUT_CLASSIFICATION	it is the combo for "order"
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	order the new children the dependencies cannot and need not be ordered
WITHOUT_CLASSIFICATION	todo what?
WITHOUT_CLASSIFICATION	todo what?
WITHOUT_CLASSIFICATION	sequence diagrams are not shown as children of the collaboration that they show but as children of the classifier/operation the collaboration represents. statediagrams and activitydiagrams are shown as children of the statemachine or activitygraph they belong to.
WITHOUT_CLASSIFICATION	was ""
WITHOUT_CLASSIFICATION	todo what?
WITHOUT_CLASSIFICATION	abstractions are represented in the inheritance node.
WITHOUT_CLASSIFICATION	abstractions are represented in the inheritance node.
WITHOUT_CLASSIFICATION	abstractions are represented in the inheritance node.
WITHOUT_CLASSIFICATION	abstractions are represented in the inheritance node.
WITHOUT_CLASSIFICATION	the name of this instance of diagram
WITHOUT_CLASSIFICATION	todo what?
WITHOUT_CLASSIFICATION	todo what?
WITHOUT_CLASSIFICATION	todo what?
WITHOUT_CLASSIFICATION	todo what?
WITHOUT_CLASSIFICATION	todo what?
WITHOUT_CLASSIFICATION	todo what?
WITHOUT_CLASSIFICATION	also show unattached sequence diagrams
WITHOUT_CLASSIFICATION	todo what?
WITHOUT_CLASSIFICATION	in uml2 we don't want to see element imports in profiles
WITHOUT_CLASSIFICATION	(massociationend)
WITHOUT_CLASSIFICATION	(massociationend)
WITHOUT_CLASSIFICATION	(massociationend)
WITHOUT_CLASSIFICATION	rule for project->root (top level) elements. todo as currently implemented it returns all top level elements in the model repository not just those in a given project. since we only support a single project at a time currently these are equivalent but this will need to be enhanced with additional bookkeeping in project when we support multiple open projects - tfm. todo i changed it to get the roots from the project. it was showing the profiles that were loaded but were not applied to the current project - maurelio1234. @author tom morris <tfmorris@gmail.com>
WITHOUT_CLASSIFICATION	in uml2 some elements are not to be shown
WITHOUT_CLASSIFICATION	don't show a profile application
WITHOUT_CLASSIFICATION	don't show element imports in profiles
WITHOUT_CLASSIFICATION	don't show extensions in profiles
WITHOUT_CLASSIFICATION	&& model.getfacade().isaproperty(o)
WITHOUT_CLASSIFICATION	don't show base_ properties in stereotypes
WITHOUT_CLASSIFICATION	"n/a" or "x nodes and x edges"
WITHOUT_CLASSIFICATION	todo what?
WITHOUT_CLASSIFICATION	todo what?
WITHOUT_CLASSIFICATION	todo what?
WITHOUT_CLASSIFICATION	transition
WITHOUT_CLASSIFICATION	todo what?
WITHOUT_CLASSIFICATION	todo what?
WITHOUT_CLASSIFICATION	todo what?
WITHOUT_CLASSIFICATION	first get the collection of elementresidence
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	todo what?
WITHOUT_CLASSIFICATION	todo what?
WITHOUT_CLASSIFICATION	only targets we didn't have allready count
WITHOUT_CLASSIFICATION	if nothing selected go to last selected target
WITHOUT_CLASSIFICATION	needed for argo startup -(
WITHOUT_CLASSIFICATION	remove duplicates and take care of getowner() and remove nulls
WITHOUT_CLASSIFICATION	|| !targets.contains(target)
WITHOUT_CLASSIFICATION	targets.remove(target)
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	implement set-like behaviour. the same element may not be added more then once.
WITHOUT_CLASSIFICATION	we put the targets 'backwards' in the history since the first target in the addedtargets array is the first one selected.
WITHOUT_CLASSIFICATION	cannot break here since an object can be multiple times in history
WITHOUT_CLASSIFICATION	commentedge - the owner of a figedgenote
WITHOUT_CLASSIFICATION	check if there are new elements in the list if the old and new list are of the same size set the oldtargets to the correct selection
WITHOUT_CLASSIFICATION	if not found try the parent namespace
WITHOUT_CLASSIFICATION	listen for the removal of diagrams from project
WITHOUT_CLASSIFICATION	give priority to standard documentation tag
WITHOUT_CLASSIFICATION	figs on a diagram without an owning model element
WITHOUT_CLASSIFICATION	end class documentationmanager
WITHOUT_CLASSIFICATION	todo needs localization
WITHOUT_CLASSIFICATION	end class childgenrelated
WITHOUT_CLASSIFICATION	convert the string (e.g. "aaabbbccc") into separate stereotype-names (e.g. "aaa" "bbb" "ccc").
WITHOUT_CLASSIFICATION	adds all stereotypes defined at the top level namespaces
WITHOUT_CLASSIFICATION	and now remove them
WITHOUT_CLASSIFICATION	collect the to be removed stereotypes
WITHOUT_CLASSIFICATION	the name of this type of diagram
WITHOUT_CLASSIFICATION	add stereotypes
WITHOUT_CLASSIFICATION	loop through each element in the namespace recursing.
WITHOUT_CLASSIFICATION	end class uuidmanager
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#setvalueat(java.lang.object int int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.util.childgenerator#gen(java.lang.object)
WITHOUT_CLASSIFICATION	instance
WITHOUT_CLASSIFICATION	comments
WITHOUT_CLASSIFICATION	for all other model elements return any elements associated in any way
WITHOUT_CLASSIFICATION	adds all stereotypes defined at the profiles applied to the current namespace
WITHOUT_CLASSIFICATION	adds all stereotypes defined at the profiles applied to the current project
WITHOUT_CLASSIFICATION	tablemodel implementation
WITHOUT_CLASSIFICATION	the name of this type of modelelement
WITHOUT_CLASSIFICATION	the name of this instance of modelelement
WITHOUT_CLASSIFICATION	the name of the parent diagram instance
WITHOUT_CLASSIFICATION	the name of this type of object
WITHOUT_CLASSIFICATION	not safe to presume the destination is the comment
WITHOUT_CLASSIFICATION	this also sets the target as a convenient side effect
WITHOUT_CLASSIFICATION	this is the tooltip of a comment link
WITHOUT_CLASSIFICATION	class
WITHOUT_CLASSIFICATION	end class projectmembermodel
WITHOUT_CLASSIFICATION	??
WITHOUT_CLASSIFICATION	??
WITHOUT_CLASSIFICATION	??
WITHOUT_CLASSIFICATION	association
WITHOUT_CLASSIFICATION	attribute
WITHOUT_CLASSIFICATION	state
WITHOUT_CLASSIFICATION	operation
WITHOUT_CLASSIFICATION	interface
WITHOUT_CLASSIFICATION	link
WITHOUT_CLASSIFICATION	this function will by design contain long lists of i18n keys. it might be tempting to shorten these by constructing them from the parts but please then consider that we might loose the possibility to build tools to statically check the property files against this file.
WITHOUT_CLASSIFICATION	umlreserved.add("document")
WITHOUT_CLASSIFICATION	replace all occurances of offender with the name of the first offender
WITHOUT_CLASSIFICATION	check for all uppercase and/or mixed with underscores
WITHOUT_CLASSIFICATION	umlreserved.add("file")
WITHOUT_CLASSIFICATION	umlreserved.add("node")
WITHOUT_CLASSIFICATION	umlreserved.add("send")
WITHOUT_CLASSIFICATION	the modelelement must have been deleted - ignore this - it will pass.
WITHOUT_CLASSIFICATION	todo this could just work off the names in the uml profile todo it doesn't look like it matches what's in the uml 1.4 spec
WITHOUT_CLASSIFICATION	umlreserved.add("destroy")
WITHOUT_CLASSIFICATION	self.allconnections->forall(ar|ar.participant <> self)
WITHOUT_CLASSIFICATION	end class crcircularassocclass
WITHOUT_CLASSIFICATION	(mattribute)
WITHOUT_CLASSIFICATION	if the name is only underscores
WITHOUT_CLASSIFICATION	@see javax.swing.icon#painticon(java.awt.component java.awt.graphics int int)
WITHOUT_CLASSIFICATION	@see javax.swing.icon#geticonwidth()
WITHOUT_CLASSIFICATION	@see javax.swing.icon#geticonheight()
WITHOUT_CLASSIFICATION	@see javax.swing.icon#painticon(java.awt.component java.awt.graphics int int)
WITHOUT_CLASSIFICATION	@see javax.swing.icon#geticonwidth()
WITHOUT_CLASSIFICATION	@see javax.swing.icon#geticonheight()
WITHOUT_CLASSIFICATION	umlreserved.add("initial") umlreserved.add("final") umlreserved.add("fork") umlreserved.add("join") umlreserved.add("history")
WITHOUT_CLASSIFICATION	umlreserved.add("copy") umlreserved.add("create")
WITHOUT_CLASSIFICATION	types can probably have associations but we should not nag at them not having any. utility is a namespace collection - also not strictly required to have associations.
WITHOUT_CLASSIFICATION	end class clattributecompartment
WITHOUT_CLASSIFICATION	check whether constant constants are often weird and thus not a problem
WITHOUT_CLASSIFICATION	why are we here?
WITHOUT_CLASSIFICATION	if the classifier does not have a name then no problem - the model is not finished anyhow.
WITHOUT_CLASSIFICATION	added by eric lefevre 13 mar 1999 we must check if the figtext for attributes is drawn before drawing things over it
WITHOUT_CLASSIFICATION	abstract elements do not necessarily require associations
WITHOUT_CLASSIFICATION	todo different critic or special message for classes that inherit all ops but define none of their own.
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	added by eric lefevre 13 mar 1999 we must check if the figtext for operations is drawn before drawing things over it
WITHOUT_CLASSIFICATION	special cases for use cases extending use cases and use case that are being included are not required to have associations.
WITHOUT_CLASSIFICATION	for use cases we need to check for extend/includes actors cannot have them so no need to check
WITHOUT_CLASSIFICATION	get the ends from the association (we know there are two) and the types associated with them.
WITHOUT_CLASSIFICATION	the association that triggered the critic. its just possible the association is no longer there in which case we return null
WITHOUT_CLASSIFICATION	end class cloperationcompartment
WITHOUT_CLASSIFICATION	first step. create the panel if not already done and options are available. otherwise it retains its default value of null.
WITHOUT_CLASSIFICATION	now create the five options
WITHOUT_CLASSIFICATION	get the names of the two ends. if there are none (i.e they are currently anonymous) use the argouml convention of "(anon)" for the names
WITHOUT_CLASSIFICATION	default (any other step) is to return nothing
WITHOUT_CLASSIFICATION	just completed the first step where we make our choices. first see if we have a choice. we always should so print a rude message if we don't
WITHOUT_CLASSIFICATION	set the appropriate aggregation on each end
WITHOUT_CLASSIFICATION	it is quite possible that the cause of the problem has by now been deleted in which case we will throw an exception if we try to change things. catch this tidily.
WITHOUT_CLASSIFICATION	start is a composite aggregation of end
WITHOUT_CLASSIFICATION	start is a shared aggregation of end
WITHOUT_CLASSIFICATION	end is a composite aggregation of start
WITHOUT_CLASSIFICATION	end is a shared aggregation of start
WITHOUT_CLASSIFICATION	no aggregation
WITHOUT_CLASSIFICATION	someone took our association away.
WITHOUT_CLASSIFICATION	can't finish if our parent can't
WITHOUT_CLASSIFICATION	can finish if it's step 0
WITHOUT_CLASSIFICATION	can finish if we're on step1 and have actually made a choice
WITHOUT_CLASSIFICATION	otherwise we can't finish
WITHOUT_CLASSIFICATION	todo the wfr doesn't restrict this to classifiers - tfm
WITHOUT_CLASSIFICATION	todo the wfr doesn't restrict this to classifiers - tfm
WITHOUT_CLASSIFICATION	model.getfacade().getmodelelement(
WITHOUT_CLASSIFICATION	)
WITHOUT_CLASSIFICATION	replace all occurances of offender with the name of the first offender
WITHOUT_CLASSIFICATION	check if there is no ocl_end if so the critic expression is not correct and can not be expanded
WITHOUT_CLASSIFICATION	get the association and its connections. iterate over all the associationends and check that each connected classifier is in the same sub-system or model
WITHOUT_CLASSIFICATION	display related methods
WITHOUT_CLASSIFICATION	end class crinterfaceallpublic
WITHOUT_CLASSIFICATION	return original string if no replacements made
WITHOUT_CLASSIFICATION	if we drop out there is no problem
WITHOUT_CLASSIFICATION	only look at associations
WITHOUT_CLASSIFICATION	end class crcrossnamespaceassoc
WITHOUT_CLASSIFICATION	todo different critic for packages consisting only of references to elements of other packages?
WITHOUT_CLASSIFICATION	the next associationend and its classifier. check the classifier is in the namespace of the association. if not we have a problem.
WITHOUT_CLASSIFICATION	original class was not abstract
WITHOUT_CLASSIFICATION	thestereotype.setstereotype(???)
WITHOUT_CLASSIFICATION	found a concrete subclass
WITHOUT_CLASSIFICATION	nothing to do.
WITHOUT_CLASSIFICATION	no concrete subclasses defined this class is "useless"
WITHOUT_CLASSIFICATION	see if there is already an element with the same name
WITHOUT_CLASSIFICATION	end class crclassmustbeabstract
WITHOUT_CLASSIFICATION	end class cruselessabstract
WITHOUT_CLASSIFICATION	(mclassifier)
WITHOUT_CLASSIFICATION	only look at classes
WITHOUT_CLASSIFICATION	todo different critic or special message for classes that inherit all ops but define none of their own.
WITHOUT_CLASSIFICATION	utility is a namespace collection - also not strictly required to have operations.
WITHOUT_CLASSIFICATION	end class crtoomanyassoc
WITHOUT_CLASSIFICATION	end class cruselessinterface
WITHOUT_CLASSIFICATION	end class crcomponentinstancewithoutclassifier
WITHOUT_CLASSIFICATION	end class crtoomanyclasses
WITHOUT_CLASSIFICATION	we don't consider secondary stuff.
WITHOUT_CLASSIFICATION	if the object does not have a name than no problem
WITHOUT_CLASSIFICATION	types can probably contain operations but we should not nag at them not having any.
WITHOUT_CLASSIFICATION	types don't need a constructor.
WITHOUT_CLASSIFICATION	utilities usually do not require a constructor either
WITHOUT_CLASSIFICATION	check for uninitialised instance variables and constructor.
WITHOUT_CLASSIFICATION	get all the features (giving up if there are none). then loop through finding all operations. each time we find one we compare its signature with all previous (held in collection operseen) and then if it doesn't match add it to the collection.
WITHOUT_CLASSIFICATION	there is a constructor.
WITHOUT_CLASSIFICATION	end class crtoomanystates
WITHOUT_CLASSIFICATION	we have found a non-static one that is not initialized.
WITHOUT_CLASSIFICATION	compare against all earlier operations. if there's a match we've found the problem
WITHOUT_CLASSIFICATION	check that the parameter lists match.
WITHOUT_CLASSIFICATION	add to the collection and round to look at the next one
WITHOUT_CLASSIFICATION	yeah rightwe don't have an operation (and thus no
WITHOUT_CLASSIFICATION	this pair of params where the same. lets check the next pair.
WITHOUT_CLASSIFICATION	only do this for classifiers
WITHOUT_CLASSIFICATION	get the next non-return parameter. null if non left.
WITHOUT_CLASSIFICATION	if we drop out here there was no match and we have no problem
WITHOUT_CLASSIFICATION	check that the names match.
WITHOUT_CLASSIFICATION	both lists have the same length
WITHOUT_CLASSIFICATION	both lists have the same length.
WITHOUT_CLASSIFICATION	different lengths
WITHOUT_CLASSIFICATION	end class crmulticomposite
WITHOUT_CLASSIFICATION	compare the type of the parameters. if any of the types is null then we have a match.
WITHOUT_CLASSIFICATION	normal model elements are not allowed to have spaces but for states we make an exception
WITHOUT_CLASSIFICATION	initialize test data
WITHOUT_CLASSIFICATION	end class crillegalname
WITHOUT_CLASSIFICATION	dm is a transition
WITHOUT_CLASSIFICATION	initialize new todoitem
WITHOUT_CLASSIFICATION	the source of the transition is a pseudostate
WITHOUT_CLASSIFICATION	the source of the transition is a choice
WITHOUT_CLASSIFICATION	end class crtoomanyattr
WITHOUT_CLASSIFICATION	critiquing api
WITHOUT_CLASSIFICATION	end class crzerolengthedge
WITHOUT_CLASSIFICATION	(mstatevertex)
WITHOUT_CLASSIFICATION	(massociationend)
WITHOUT_CLASSIFICATION	only classes with name need a constructor
WITHOUT_CLASSIFICATION	forks have their own outgoing transitions critic
WITHOUT_CLASSIFICATION	types can probably have variables but we should not nag at them not having any.
WITHOUT_CLASSIFICATION	code generation
WITHOUT_CLASSIFICATION	utility is a namespace collection - also not strictly required to have variables.
WITHOUT_CLASSIFICATION	if we find an instance variable that is not a constant we have succeeded
WITHOUT_CLASSIFICATION	i am only prepared to go this far.
WITHOUT_CLASSIFICATION	(classifier)
WITHOUT_CLASSIFICATION	first element is e.g. the class but we need to have its namespace to recompute the offenders.
WITHOUT_CLASSIFICATION	compound critics
WITHOUT_CLASSIFICATION	warn about inherited name conflicts different critic?
WITHOUT_CLASSIFICATION	warn about inherited name conflicts different critic?
WITHOUT_CLASSIFICATION	(massociation)
WITHOUT_CLASSIFICATION	only look at associations
WITHOUT_CLASSIFICATION	container state / composite state
WITHOUT_CLASSIFICATION	iterate over all the associationends. we only have a problem if 1) there is an end connected to an interface and 2) an end other than that end is navigable.
WITHOUT_CLASSIFICATION	both ends must be classes otherwise there is nothing to merge
WITHOUT_CLASSIFICATION	we can give up looking if we've hit both criteria
WITHOUT_CLASSIFICATION	both ends must be navigable otherwise there is nothing to merge
WITHOUT_CLASSIFICATION	end at an interface? navigable other end?
WITHOUT_CLASSIFICATION	end class crmergeclasses
WITHOUT_CLASSIFICATION	specify design issue category and knowledge type
WITHOUT_CLASSIFICATION	if we drop out we didn't meet both criteria and all is well.
WITHOUT_CLASSIFICATION	the next associationend
WITHOUT_CLASSIFICATION	if its an interface we have an interface end otherwise its something else and we should see if it is navigable. we don't check that the end is a classifier rather than its child classifierrole since we have effectively eliminated that possiblity in rejecting associationroles above.
WITHOUT_CLASSIFICATION	end class crnavfrominterface
WITHOUT_CLASSIFICATION	(mcompositestate)
WITHOUT_CLASSIFICATION	end class crnoinitialstate
WITHOUT_CLASSIFICATION	critiquing api
WITHOUT_CLASSIFICATION	end class crinstancewithoutclassifier
WITHOUT_CLASSIFICATION	now we are sure dm is a composite state.
WITHOUT_CLASSIFICATION	in deploymentdiagrams the situation is not the same as in other diagrams only classes interfaces and objects can intersect each other while they are not the enclosingfig so you have to prouve only these elements.
WITHOUT_CLASSIFICATION	now we are sure dm is a statevertex.
WITHOUT_CLASSIFICATION	now we are sure dm is a state.
WITHOUT_CLASSIFICATION	if dm is the top state of the statemachine then it is not supposed to have incoming transitions.
WITHOUT_CLASSIFICATION	(massociationend)
WITHOUT_CLASSIFICATION	(massociation)
WITHOUT_CLASSIFICATION	container state / composite state
WITHOUT_CLASSIFICATION	end class crinvalidsynch
WITHOUT_CLASSIFICATION	no good trigger
WITHOUT_CLASSIFICATION	end class crconflictingcomposites
WITHOUT_CLASSIFICATION	end class cralreadyrealizes
WITHOUT_CLASSIFICATION	end class crunnavigableassoc
WITHOUT_CLASSIFICATION	todo gennavigableclasses?
WITHOUT_CLASSIFICATION	end class crdisambigstatename
WITHOUT_CLASSIFICATION	(massociationend)
WITHOUT_CLASSIFICATION	(massociation)
WITHOUT_CLASSIFICATION	end class wizmename
WITHOUT_CLASSIFICATION	only for associations
WITHOUT_CLASSIFICATION	get the assocations and connections. no problem (there is a separate critic) if this is not a binary association or is an association role.
WITHOUT_CLASSIFICATION	loop through the associations counting the ends with aggregations
WITHOUT_CLASSIFICATION	a problem if we found more than 1 aggregation
WITHOUT_CLASSIFICATION	end class crmultipleagg
WITHOUT_CLASSIFICATION	end class crnameconflictac
WITHOUT_CLASSIFICATION	end class wiznavigable
WITHOUT_CLASSIFICATION	end class crfinalsubclassed
WITHOUT_CLASSIFICATION	no good trigger
WITHOUT_CLASSIFICATION	todo associationrole
WITHOUT_CLASSIFICATION	log.log(level.fine "finding children for " + o.getclass())
WITHOUT_CLASSIFICATION	argument can be an instanceof a fig which we ignore
WITHOUT_CLASSIFICATION	no need for trigger on "specialization"
WITHOUT_CLASSIFICATION	end class crcircularinheritance
WITHOUT_CLASSIFICATION	end class crnonaggdatatype
WITHOUT_CLASSIFICATION	test an unknown file
WITHOUT_CLASSIFICATION	container state / composite state
WITHOUT_CLASSIFICATION	no good trigger
WITHOUT_CLASSIFICATION	(mtransition)
WITHOUT_CLASSIFICATION	wfr transitions omg uml 1.3
WITHOUT_CLASSIFICATION	only work for associations
WITHOUT_CLASSIFICATION	wfr transitions omg uml 1.3
WITHOUT_CLASSIFICATION	no problem if this is an association role.
WITHOUT_CLASSIFICATION	loop through all the ends comparing the name against those already seen (ignoring any with no name). no problem if there are no connections defined we will fall through immediately.
WITHOUT_CLASSIFICATION	end class crinterfaceoperonly
WITHOUT_CLASSIFICATION	ignore non-existent and empty names
WITHOUT_CLASSIFICATION	is the name already in the list of those seen if not add it and go on round.
WITHOUT_CLASSIFICATION	only work for associatins
WITHOUT_CLASSIFICATION	if we drop out there were no clashes
WITHOUT_CLASSIFICATION	@see javax.swing.icon#painticon(java.awt.component java.awt.graphics int int)
WITHOUT_CLASSIFICATION	@see javax.swing.icon#geticonwidth()
WITHOUT_CLASSIFICATION	@see javax.swing.icon#geticonheight()
WITHOUT_CLASSIFICATION	(massociationend)
WITHOUT_CLASSIFICATION	(massociation)
WITHOUT_CLASSIFICATION	now we are sure dm is a statevertex.
WITHOUT_CLASSIFICATION	now we are sure dm is a state.
WITHOUT_CLASSIFICATION	now we are sure dm is a composite state.
WITHOUT_CLASSIFICATION	end class clclassname
WITHOUT_CLASSIFICATION	if dm is the top state of the statemachine then it is not supposed to have outgoing transitions.
WITHOUT_CLASSIFICATION	end class crtoomanyoper
WITHOUT_CLASSIFICATION	end class crtoomanytransitions
WITHOUT_CLASSIFICATION	general
WITHOUT_CLASSIFICATION	loop through the associations looking for one with aggregation
WITHOUT_CLASSIFICATION	if drop out we're ok
WITHOUT_CLASSIFICATION	end class crnwayagg.java
WITHOUT_CLASSIFICATION	end class croppendconflict
WITHOUT_CLASSIFICATION	we could check for base class of the stereotype but the condition normally covers it all.
WITHOUT_CLASSIFICATION	intentional if there is nonsense in the field we return false
WITHOUT_CLASSIFICATION	intentional if there is nonsense in the field we do not set the value
WITHOUT_CLASSIFICATION	firenoderemoved(node)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.diagram#setname(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.mutablegraphmodel#containsnode(java.lang.object)
WITHOUT_CLASSIFICATION	newedge.setdielement( graphchangeadapter.getinstance().createelement(gm edge))
WITHOUT_CLASSIFICATION	/ end gef methods
WITHOUT_CLASSIFICATION	not allowed
WITHOUT_CLASSIFICATION	return
WITHOUT_CLASSIFICATION	todo comments are on element in uml 2.x
WITHOUT_CLASSIFICATION	create a diagram. this 4-arg version is only for internal use. the 'namespace' argument is deprecated and not used in the new apis.
WITHOUT_CLASSIFICATION	this shouldn't be possible but just in case
WITHOUT_CLASSIFICATION	fail silently as we expect users to accidentally drop on to wrong component
WITHOUT_CLASSIFICATION	create the uml connection of the given type between the given model elements. default aggregation (none)
WITHOUT_CLASSIFICATION	commentlinks for comments. iterate over all the comment links to find the comment and annotated elements.
WITHOUT_CLASSIFICATION	the connection is not valid unless both nodes are in this graph model.
WITHOUT_CLASSIFICATION	the diagram are always owned by the model in this first implementation.
WITHOUT_CLASSIFICATION	important - these must remain in order!
WITHOUT_CLASSIFICATION	singleton no instantiation
WITHOUT_CLASSIFICATION	the special value <code>null</code> is used internally to indicate that the default value should be inherited from the next level of settings.
WITHOUT_CLASSIFICATION	repeat until no faults are fixed
WITHOUT_CLASSIFICATION	diagram appearance settings with project scope
WITHOUT_CLASSIFICATION	we can not remove this and have the application manage things directly based on the font since only the names should be bold.
WITHOUT_CLASSIFICATION	some cached fonts based on the above settings
WITHOUT_CLASSIFICATION	since body ever looks at the type of the diagram appearance event we can simplify from sending every existing event to one event only. but since there is no catch-all event defined we just use one. rationale reduce the number of total refreshes of the drawing.
WITHOUT_CLASSIFICATION	if we've got a local (uninherited) font name or size or if we've got no parent to inherit from recompute our cached fonts
WITHOUT_CLASSIFICATION	this class is a temporary wrapper around the gef undomanager. this will be changed when gef is modified to create commands and provide an observer interface for argouml to receive them. <p> todo how does this relate to {@link org.argouml.kernel.defaultundomanager}? @author bob tarling
WITHOUT_CLASSIFICATION	listen for name changes so we can veto them if we don't like them
WITHOUT_CLASSIFICATION	get all the classes from the diagram
WITHOUT_CLASSIFICATION	the fix
WITHOUT_CLASSIFICATION	the report
WITHOUT_CLASSIFICATION	the report
WITHOUT_CLASSIFICATION	the fix
WITHOUT_CLASSIFICATION	the fix
WITHOUT_CLASSIFICATION	the fix
WITHOUT_CLASSIFICATION	2. make sure that all figs are visible
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.mutablegraphmodel#canaddnode(java.lang.object)
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	todo these should get replaced immediately by the creating initialization code but make sure we've got a default just in case.
WITHOUT_CLASSIFICATION	1. make sure all figs in the diagrams layer refer back to that layer.
WITHOUT_CLASSIFICATION	maybe we have a modelelement that is part of some other fig
WITHOUT_CLASSIFICATION	register for notification of any global changes that would affect our rendering
WITHOUT_CLASSIFICATION	add the diagram as a listener to the namespace so that when the namespace is removed the diagram is deleted also.
WITHOUT_CLASSIFICATION	4. make sure all fignodes and figedges have an owner the report
WITHOUT_CLASSIFICATION	3. make sure all figedges are attached to a valid fignode the report
WITHOUT_CLASSIFICATION	5. make sure all fignodes and figedges have a valid owner the report
WITHOUT_CLASSIFICATION	4. make sure the only figgroups on a diagram are also fignodes the report
WITHOUT_CLASSIFICATION	do nothing override in subclass.
WITHOUT_CLASSIFICATION	if we haven't succeeded in getting a namespace then abort
WITHOUT_CLASSIFICATION	this should always be true but just in case
WITHOUT_CLASSIFICATION	the diagram to be laid out.
WITHOUT_CLASSIFICATION	list of objects. note this methods which read/write this don't appear to be used.
WITHOUT_CLASSIFICATION	point at which to start layout (initial state goes here). the x coordinate must be greater than half the width of the widest figure to be placed (because figures are centered on this location).
WITHOUT_CLASSIFICATION	amount to increment y position by for each node placed. we pack them densely on the assumption that the user is going to split them into at least two swimlanes.
WITHOUT_CLASSIFICATION	finalstate element for activitydiagram
WITHOUT_CLASSIFICATION	find our initial state
WITHOUT_CLASSIFICATION	place all the nodes
WITHOUT_CLASSIFICATION	place the final state last with a little separation
WITHOUT_CLASSIFICATION	@see java.lang.object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinecolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinecolor()
WITHOUT_CLASSIFICATION	_x = x _y = y _w = w _h = h
WITHOUT_CLASSIFICATION	if we're trying to set the namespace to the existing value then don't do any more work.
WITHOUT_CLASSIFICATION	recursively place all nodes pointed to by outgoing transitions. because of the recursive algorithm multiple outgoing transitions will end up very lopsided because one entire subgraph will be done before dealing with the other transition(s). @param seen set of nodes seen so far @param node the node to collect neighbors for
WITHOUT_CLASSIFICATION	figclone.seperator = (figline) it.next()
WITHOUT_CLASSIFICATION	needed for project deletion
WITHOUT_CLASSIFICATION	we want to maintain a minimum size for the partition
WITHOUT_CLASSIFICATION	todo midpoints for side handles
WITHOUT_CLASSIFICATION	we removed the last partition so now remove the pool too
WITHOUT_CLASSIFICATION	no action required in case of veto on setname
WITHOUT_CLASSIFICATION	this test needed for project deletion
WITHOUT_CLASSIFICATION	todo side handles
WITHOUT_CLASSIFICATION	listen to activitygraph deletion delete this diagram.
WITHOUT_CLASSIFICATION	actions for toolbar
WITHOUT_CLASSIFICATION	no action required
WITHOUT_CLASSIFICATION	the namespace of the activitygraph is changed!
WITHOUT_CLASSIFICATION	getactionsubactivitystate()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphnoderenderer#getfignodefor( org.tigris.gef.graph.graphmodel org.tigris.gef.base.layer java.lang.object java.util.map)
WITHOUT_CLASSIFICATION	@see java.lang.object#clone()
WITHOUT_CLASSIFICATION	the space between the 2 text figs is padding. @see org.tigris.gef.presentation.fig#getminimumsize()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinecolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinecolor()
WITHOUT_CLASSIFICATION	we want to maintain a minimum size for the partition
WITHOUT_CLASSIFICATION	class to display graphics for a uml objectflowstate in a diagram.<p> the fig of this modelelement may either represent the following umlelements <p> (1) an objectflowstate with a classifier as type or <p> (2) an objectflowstate with a classifierinstate as type. <p> in both cases (1) and (2) the fig shows the underlined name of the classifier and in the latter case (2) it shows also the names of the states of the classifierinstate. <p> in the examples in the uml standard this is written like<pre> purchaseorder [approved] </pre> i.e. in 2 lines. the first line is underlined to indicate that it is an instance (object).<p> the fact that the first line is underlined and the 2nd not is the reason to implement them in 2 separate figs.<p> todo allow stereotypes to be shown. @author mvw
WITHOUT_CLASSIFICATION	model.getactivitygraphshelper() .isaddingactivitygraphallowed(base)
WITHOUT_CLASSIFICATION	todo we may return the following when the relocate() has been implemented.
WITHOUT_CLASSIFICATION	todo we may return something useful when the relocate() has been implemented.
WITHOUT_CLASSIFICATION	register for events from the type
WITHOUT_CLASSIFICATION	create a map of partitions keyed by x coordinate
WITHOUT_CLASSIFICATION	add figs to the fignode in back-to-front order
WITHOUT_CLASSIFICATION	sort the x coordinates into order
WITHOUT_CLASSIFICATION	the state name
WITHOUT_CLASSIFICATION	set the drop location in the case of d&d
WITHOUT_CLASSIFICATION	if the layer is null then most likely we are being deleted.
WITHOUT_CLASSIFICATION	don't listen to all property names we only need to listen to its "type" and "remove".
WITHOUT_CLASSIFICATION	the height of the blank space above and below the text figs
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinewidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinewidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#makeselection()
WITHOUT_CLASSIFICATION	@see java.lang.object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getminimumsize()
WITHOUT_CLASSIFICATION	override setbounds to keep shapes looking right. @see org.tigris.gef.presentation.fig#setboundsimpl(int int int int)
WITHOUT_CLASSIFICATION	although not generally true for gef for argo we know that the layer is a layerperspective which knows the associated diagram
WITHOUT_CLASSIFICATION	add figs to the fignode in back-to-front order
WITHOUT_CLASSIFICATION	and listen to name changes of the submachine
WITHOUT_CLASSIFICATION	both have the same settings
WITHOUT_CLASSIFICATION	both have the same owner
WITHOUT_CLASSIFICATION	add them back to front
WITHOUT_CLASSIFICATION	let our superclass sort itself out first
WITHOUT_CLASSIFICATION	add the listeners to the newowner
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setboundsimpl(int int int int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.selectionbuttons#getnewnode(int)
WITHOUT_CLASSIFICATION	_x = x _y = y _w = w _h = h
WITHOUT_CLASSIFICATION	add figs to the fignode in back-to-front order
WITHOUT_CLASSIFICATION	mutablegraphmodel implementation
WITHOUT_CLASSIFICATION	set up the property panels for activity diagrams
WITHOUT_CLASSIFICATION	overrule the single-line name-fig created by the parent
WITHOUT_CLASSIFICATION	a binary association is not a node so reject.
WITHOUT_CLASSIFICATION	setblinkports(false) make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	todo do we need to clone the stereotype(s)?
WITHOUT_CLASSIFICATION	(mgeneralization)
WITHOUT_CLASSIFICATION	the stereodim has height=2 even if it is empty hence the -2 below
WITHOUT_CLASSIFICATION	the width needs to be > the height
WITHOUT_CLASSIFICATION	both ends must be defined and nodes that are on the graph already.
WITHOUT_CLASSIFICATION	graphmodel implementation
WITHOUT_CLASSIFICATION	todo?
WITHOUT_CLASSIFICATION	((mclassifier)node).setnamespace(_collab.getnamespace())
WITHOUT_CLASSIFICATION	todo assumes public user pref for default visibility?
WITHOUT_CLASSIFICATION	add the given edge to the graph if valid. @see org.tigris.gef.graph.mutablegraphmodel#addedge(java.lang.object)
WITHOUT_CLASSIFICATION	todo we may return the following when the relocate() has been implemented.
WITHOUT_CLASSIFICATION	add figs to the fignode in back-to-front order
WITHOUT_CLASSIFICATION	the notationprovider for the classifierrole. <p> the syntax is for uml is <pre> baselist = [base] [ base] classifierrole = [name] [/ role] [ baselist] </pre></p> the <code>name</code> is the instance name not used currently. see classifierrolenotationuml for details.<p> this syntax is compatible with the uml 1.4 specification.
WITHOUT_CLASSIFICATION	todo assumes public
WITHOUT_CLASSIFICATION	the stereotype. width is the same as the cover height is its default (since the font is not yet set). the text should be centered.
WITHOUT_CLASSIFICATION	throws propertyvetoexception
WITHOUT_CLASSIFICATION	(melementimport)
WITHOUT_CLASSIFICATION	getstereotypefig().setfilled(false)
WITHOUT_CLASSIFICATION	end class collabdiagramgraphmodel
WITHOUT_CLASSIFICATION	in the rather unlikely case that we have no name we give up.
WITHOUT_CLASSIFICATION	the big port. color of the big port is irrelevant
WITHOUT_CLASSIFICATION	the name. width is the same as the cover height is the default. the text of the name will be centered by default. in the same place as the stereotype since at this stage the stereotype is not displayed. being a classifier role it is underlined
WITHOUT_CLASSIFICATION	the cover.
WITHOUT_CLASSIFICATION	at least one stereotype is visible
WITHOUT_CLASSIFICATION	remember where we are at present so we can tell gef later. then check we are as big as the minimum size
WITHOUT_CLASSIFICATION	set the bounds of the bigport and cover
WITHOUT_CLASSIFICATION	work out the padding each side depending on whether the stereotype is displayed and set bounds accordingly
WITHOUT_CLASSIFICATION	record the changes in the instance variables of our parent tell gef and trigger the edges to reconsider themselves.
WITHOUT_CLASSIFICATION	singleton
WITHOUT_CLASSIFICATION	this one behaves differently hence seperated
WITHOUT_CLASSIFICATION	this one behaves differently hence seperated
WITHOUT_CLASSIFICATION	do nothing.
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#calcbounds()
WITHOUT_CLASSIFICATION	although not generally true for gef for argo we know that the layer is a layerperspective which knows the associated diagram
WITHOUT_CLASSIFICATION	todo we may return something useful when the relocate() has been implemented.
WITHOUT_CLASSIFICATION	graphmodel implementation
WITHOUT_CLASSIFICATION	todo?
WITHOUT_CLASSIFICATION	a binary association is not a node so reject.
WITHOUT_CLASSIFICATION	both ends must be defined and nodes that are on the graph already.
WITHOUT_CLASSIFICATION	end class figassociationrole
WITHOUT_CLASSIFICATION	if location is non-null convert to a rectangle that we can use
WITHOUT_CLASSIFICATION	todo -> settings
WITHOUT_CLASSIFICATION	the figs that make up this group
WITHOUT_CLASSIFICATION	the figs that make up this group
WITHOUT_CLASSIFICATION	_x = first.getx() _y = first.gety()
WITHOUT_CLASSIFICATION	_x = first.getx() _y = first.gety()
WITHOUT_CLASSIFICATION	set up the property panels for collaboration diagrams
WITHOUT_CLASSIFICATION	this is neat
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.mutablegraphmodel#addedge(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.mutablegraphmodel#addnoderelatededges(java.lang.object)
WITHOUT_CLASSIFICATION	@see java.beans.vetoablechangelistener#vetoablechange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphnoderenderer#getfignodefor( org.tigris.gef.graph.graphmodel org.tigris.gef.base.layer java.lang.object java.util.map)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getclosestpoint(java.awt.point)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.ui.popupgenerator#getpopupactions(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	although not generally true for gef for argo we know that the layer is a layerperspective which knows the associated diagram
WITHOUT_CLASSIFICATION	add figs to the fignode in back-to-front order
WITHOUT_CLASSIFICATION	todo assumes public
WITHOUT_CLASSIFICATION	modifiers
WITHOUT_CLASSIFICATION	todo assumes public user pref for default visibility? do i have to check the namespace here? (toby)
WITHOUT_CLASSIFICATION	elementordering(figures)
WITHOUT_CLASSIFICATION	elementordering(figures)
WITHOUT_CLASSIFICATION	set up the property panels for deployment diagrams
WITHOUT_CLASSIFICATION	actions for toolbar
WITHOUT_CLASSIFICATION	getters for plugin modules
WITHOUT_CLASSIFICATION	so it still looks like a cube
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getminimumsize()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.ui.popupgenerator#getpopupactions(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	_x = x _y = y _w = w _h = h
WITHOUT_CLASSIFICATION	add the listeners to the newowner
WITHOUT_CLASSIFICATION	elementordering(figures)
WITHOUT_CLASSIFICATION	elementordering(figures)
WITHOUT_CLASSIFICATION	modifiers
WITHOUT_CLASSIFICATION	_bigport.setbounds(x+1 y+1 w-2 h-2)
WITHOUT_CLASSIFICATION	nothing extra to do currently
WITHOUT_CLASSIFICATION	north south west east south-west
WITHOUT_CLASSIFICATION	end class predisstartpackage
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.mutablegraphmodel#addnode(java.lang.object)
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	if the layer is null then most likely we are being deleted.
WITHOUT_CLASSIFICATION	graphmodel implementation
WITHOUT_CLASSIFICATION	mutablegraphmodel implementation
WITHOUT_CLASSIFICATION	both ends must be defined and nodes that are on the graph already.
WITHOUT_CLASSIFICATION	vetoablechangelistener implementation
WITHOUT_CLASSIFICATION	throws propertyvetoexception
WITHOUT_CLASSIFICATION	singleton
WITHOUT_CLASSIFICATION	end class statediagramgraphmodel
WITHOUT_CLASSIFICATION	don't do it for comment.
WITHOUT_CLASSIFICATION	(melementimport)
WITHOUT_CLASSIFICATION	(mtransition)
WITHOUT_CLASSIFICATION	prevent no changes
WITHOUT_CLASSIFICATION	if a uml object is found you can not remove selected elms.
WITHOUT_CLASSIFICATION	check parameter types
WITHOUT_CLASSIFICATION	if nothing is selected then not allowed to remove it.
WITHOUT_CLASSIFICATION	if only figs without owner are selected then you can remove them!
WITHOUT_CLASSIFICATION	end class predisfinalstate
WITHOUT_CLASSIFICATION	this presumes that the layer is set after the owner
WITHOUT_CLASSIFICATION	if it is concurrent and contains concurrent regions the bottom region has a minimum height
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.figedge#setfig(org.tigris.gef.presentation.fig)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#paint(java.awt.graphics)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getminimumsize()
WITHOUT_CLASSIFICATION	@see java.lang.object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getminimumsize()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.ui.popupgenerator#getpopupactions(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	_x = x _y = y _w = w _h = h
WITHOUT_CLASSIFICATION	_x = x _y = y _w = w _h = h
WITHOUT_CLASSIFICATION	add figs to the fignode in back-to-front order
WITHOUT_CLASSIFICATION	the purpose of this method is not explained and it give give npe depending on z order of figs as they are read. for now ignore if null but for future lets delete this.
WITHOUT_CLASSIFICATION	we only handle the case where a region has been removed
WITHOUT_CLASSIFICATION	check if multiple items are selected
WITHOUT_CLASSIFICATION	check if multiple items are selected
WITHOUT_CLASSIFICATION	if it is concurrent and contains concurrent regions the regions are resized
WITHOUT_CLASSIFICATION	none of the menu-items below apply when multiple modelelements are selected
WITHOUT_CLASSIFICATION	do we need to
WITHOUT_CLASSIFICATION	the returned list of figs is sorted according layout from top to bottom.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	this makes dragging connected edges very smooth. @see org.tigris.gef.presentation.fig#getclosestpoint(java.awt.point)
WITHOUT_CLASSIFICATION	@see java.lang.object#clone()
WITHOUT_CLASSIFICATION	_x = x _y = y _w = w _h = h
WITHOUT_CLASSIFICATION	_x = x _y = y _w = w _h = h
WITHOUT_CLASSIFICATION	add figs to the fignode in back-to-front order
WITHOUT_CLASSIFICATION	the event source is the owner stub state
WITHOUT_CLASSIFICATION	event processing
WITHOUT_CLASSIFICATION	end class figcompositestate
WITHOUT_CLASSIFICATION	the event source is the submachine state
WITHOUT_CLASSIFICATION	targetmanager.getinstance().addtargetlistener(this)
WITHOUT_CLASSIFICATION	ignored - fixed rendering
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	event handlers
WITHOUT_CLASSIFICATION	cmd api
WITHOUT_CLASSIFICATION	end class actioncreatepseudostate
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see java.lang.object#clone()
WITHOUT_CLASSIFICATION	_x = x _y = y _w = w _h = h
WITHOUT_CLASSIFICATION	add figs to the fignode in back-to-front order
WITHOUT_CLASSIFICATION	set the drop location in the case of d&d
WITHOUT_CLASSIFICATION	event processing
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	the submachine has got a new name
WITHOUT_CLASSIFICATION	the event source is the stub state's referenced state or one of the referenced state's path.
WITHOUT_CLASSIFICATION	this indicates a change in association not name - tfm
WITHOUT_CLASSIFICATION	all states in the new reference state's path are added as listeners
WITHOUT_CLASSIFICATION	the source was the referenced state that has got a new name.
WITHOUT_CLASSIFICATION	ignored - rendering is fixed
WITHOUT_CLASSIFICATION	the source was one of the referenced state's path which has got a new name.
WITHOUT_CLASSIFICATION	the old submachine container is deleted as listener
WITHOUT_CLASSIFICATION	the referenced state or one of his path's states has got a new name
WITHOUT_CLASSIFICATION	the new submachine container is added as listener
WITHOUT_CLASSIFICATION	all states in the old reference state's path are deleted as listeners
WITHOUT_CLASSIFICATION	translate any old style sequence diagrams
WITHOUT_CLASSIFICATION	just swap order of arguments to get to new form
WITHOUT_CLASSIFICATION	translate any sequence diagrams create with any previous svn work in progress
WITHOUT_CLASSIFICATION	get the first existing fignode and if it exists set the y position and height of _pers to be the same as it.
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseclicked(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#makeselection()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinecolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinecolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfillcolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see java.lang.object#clone()
WITHOUT_CLASSIFICATION	_x = x _y = y _w = w _h = h
WITHOUT_CLASSIFICATION	_x = x _y = y _w = w _h = h
WITHOUT_CLASSIFICATION	_x = x _y = y _w = w _h = h
WITHOUT_CLASSIFICATION	add figs to the fignode in back-to-front order
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	ignored - rendering is fixed
WITHOUT_CLASSIFICATION	ignore mouse clicks
WITHOUT_CLASSIFICATION	ignore mouse clicks
WITHOUT_CLASSIFICATION	the machine state has got a new name
WITHOUT_CLASSIFICATION	this assert fails for the testpropertypanels file guitestpropertypanels.zargo
WITHOUT_CLASSIFICATION	assert w == h
WITHOUT_CLASSIFICATION	the machine state has been deleted from model
WITHOUT_CLASSIFICATION	ignore w and h from here on.
WITHOUT_CLASSIFICATION	keep d even or odd just like the line width
WITHOUT_CLASSIFICATION	leave some space below the "include"
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphnoderenderer#getfignodefor( org.tigris.gef.graph.graphmodel org.tigris.gef.base.layer java.lang.object java.util.map)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphedgerenderer#getfigedgefor( org.tigris.gef.graph.graphmodel org.tigris.gef.base.layer java.lang.object java.util.map)
WITHOUT_CLASSIFICATION	@see java.lang.object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinecolor(java.awt.color)
WITHOUT_CLASSIFICATION	although not generally true for gef for argo we know that the layer is a layerperspective which knows the associated diagram
WITHOUT_CLASSIFICATION	add figs to the fignode in back-to-front order
WITHOUT_CLASSIFICATION	both have the same settings
WITHOUT_CLASSIFICATION	both have the same owner
WITHOUT_CLASSIFICATION	todo -> settings
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	there are one or more regions so find the one that the vertex was dropped in
WITHOUT_CLASSIFICATION	the vertex was dropped onto the diagram. get the region as the first region in the statemachine. if there is no region in the statemachine then create one.
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.figstatevertex#initnotationproviders (java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#removefromdiagramimpl()
WITHOUT_CLASSIFICATION	_x = x _y = y _w = w _h = h
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfillcolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getfillcolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinewidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.ui.popupgenerator#getpopupactions(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	_x = x _y = y _w = w _h = h
WITHOUT_CLASSIFICATION	add figs to the fignode in back-to-front order
WITHOUT_CLASSIFICATION	noop - fixed rendering
WITHOUT_CLASSIFICATION	there are no regions so create one and place the vertex there.
WITHOUT_CLASSIFICATION	temporary start private static final color[] color_array = { color.red color.blue color.cyan color.yellow color.green} private int nextcolor = 0 temporary end
WITHOUT_CLASSIFICATION	setblinkports(false) make port invisble unless mouse enters
WITHOUT_CLASSIFICATION	there can only be one
WITHOUT_CLASSIFICATION	@see java.lang.object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getminimumsize()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getusetraprect()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinecolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.ui.popupgenerator#getpopupactions(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	_x = x _y = y _w = w _h = h
WITHOUT_CLASSIFICATION	_x = x _y = y _w = w _h = h
WITHOUT_CLASSIFICATION	_x = x _y = y _w = w _h = h
WITHOUT_CLASSIFICATION	_x = x _y = y _w = w _h = h
WITHOUT_CLASSIFICATION	add figs to the fignode in back-to-front order
WITHOUT_CLASSIFICATION	we aren't able to resize neither the top bound from the first region nor the bottom bound from the last region.
WITHOUT_CLASSIFICATION	the group must be resized if a text field exceed the bounds
WITHOUT_CLASSIFICATION	if curhandle.index is 0 or 2 the adjacent region is the previous region but if it is 5 or 7 the adjacent region is the next region. curhandle.index show which corner of the bound we are dragging.
WITHOUT_CLASSIFICATION	a concurrent region cannot have incoming or outgoing transitions so incoming or outgoing transitions are redirected to its concurrent composite state container.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	do nothing.
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mousepressed(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mousereleased(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mousemotionlistener#mousedragged(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mousemotionlistener#mousemoved(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	nothing we can do about veto so just ignore it
WITHOUT_CLASSIFICATION	nothing we can do about veto so just ignore it
WITHOUT_CLASSIFICATION	add figs to the fignode in back-to-front order
WITHOUT_CLASSIFICATION	singleton
WITHOUT_CLASSIFICATION	event processing
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	/ event handlers - mouselistener and mousemotionlistener implementation
WITHOUT_CLASSIFICATION	or just the owner?
WITHOUT_CLASSIFICATION	listen to machine deletion to delete the diagram.
WITHOUT_CLASSIFICATION	this in case we are being deleted
WITHOUT_CLASSIFICATION	the namespace of the statemachine is changed!
WITHOUT_CLASSIFICATION	return
WITHOUT_CLASSIFICATION	return
WITHOUT_CLASSIFICATION	_x = x _y = y _w = w _h = h
WITHOUT_CLASSIFICATION	a binary association is not a node so reject.
WITHOUT_CLASSIFICATION	throws propertyvetoexception
WITHOUT_CLASSIFICATION	if location is non-null convert to a rectangle that we can use
WITHOUT_CLASSIFICATION	prevent no changes
WITHOUT_CLASSIFICATION	check parameter types
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	model.getstatemachineshelper() .isaddingstatemachineallowed(base)
WITHOUT_CLASSIFICATION	set up the property panels for statechart diagrams
WITHOUT_CLASSIFICATION	if location is null here the position of the new fignode is set after in org.tigris.gef.base.modeplace.mousepressed(mouseevent e)
WITHOUT_CLASSIFICATION	mmodelelement modelelement = elementimport.getmodelelement()
WITHOUT_CLASSIFICATION	top of the hierarchy is me
WITHOUT_CLASSIFICATION	top of the hierarchy is me
WITHOUT_CLASSIFICATION	then generalizable element
WITHOUT_CLASSIFICATION	then generalizable element
WITHOUT_CLASSIFICATION	then classifier & package
WITHOUT_CLASSIFICATION	navigable. only want incoming
WITHOUT_CLASSIFICATION	then classifier
WITHOUT_CLASSIFICATION	mutablegraphmodel implementation
WITHOUT_CLASSIFICATION	vetoablechangelistener implementation
WITHOUT_CLASSIFICATION	cast the params
WITHOUT_CLASSIFICATION	n.b. a node which is an association is either a n-ary association or the class part of an associationclass
WITHOUT_CLASSIFICATION	check param types only some connections are legal uml connections
WITHOUT_CLASSIFICATION	set the new end type!
WITHOUT_CLASSIFICATION	rerouting the destination
WITHOUT_CLASSIFICATION	rerouting the source
WITHOUT_CLASSIFICATION	empty at the moment
WITHOUT_CLASSIFICATION	move down
WITHOUT_CLASSIFICATION	empty at the moment
WITHOUT_CLASSIFICATION	empty at the moment
WITHOUT_CLASSIFICATION	move more right
WITHOUT_CLASSIFICATION	move left
WITHOUT_CLASSIFICATION	use left and right up and down
WITHOUT_CLASSIFICATION	calculate the higher and lower figs
WITHOUT_CLASSIFICATION	the amount of the "sidestep"
WITHOUT_CLASSIFICATION	if center points are "close enough" we just adjust the endpoints of the line a little bit. otherwise we add a jog in the middle to deal with the offset. todo epsilon is currently fixed but could probably be computed dynamically as 10% of the width of the narrowest figure or some other value which is visually not noticeable.
WITHOUT_CLASSIFICATION	currentedge.setbetweennearestpoints(false)
WITHOUT_CLASSIFICATION	log.debug(result + " node1 " + this + " node2 " + node)
WITHOUT_CLASSIFICATION	split = (split == null || split.isstandalone()) ? node split
WITHOUT_CLASSIFICATION	(xoffset - curw) / 2
WITHOUT_CLASSIFICATION	element is allowed but only namedelement can return nonempty list
WITHOUT_CLASSIFICATION	do nothing.
WITHOUT_CLASSIFICATION	set the drop location in the case of d&d
WITHOUT_CLASSIFICATION	self associations are special cases. no need to let the maze runner find the way.
WITHOUT_CLASSIFICATION	link does not exist in uml2
WITHOUT_CLASSIFICATION	now we construct the zig zag inheritance line getunderlyingfig()
WITHOUT_CLASSIFICATION	class to display graphics for a uml link in a diagram. <p> the underlined association name is shown next to the middle of the path. todo show more notation as described in the standard "a rolename may be shown at each end of the link. an association name may be shown near the path. if present it is underlined to indicate an instance. links do not have instance names they take their identity from the instances that they relate. multiplicity is not shown for links because they are instances. other association adornments (aggregation composition navigation) may be shown on the link ends."
WITHOUT_CLASSIFICATION	text group to contain name & stereotype
WITHOUT_CLASSIFICATION	end class figlink
WITHOUT_CLASSIFICATION	the next line is needed so that we have the right dimension when drawing this fig on the diagram by pressing down the mouse button even before releasing the mouse button
WITHOUT_CLASSIFICATION	stereotype covers namefig
WITHOUT_CLASSIFICATION	compartments from top to bottom
WITHOUT_CLASSIFICATION	make all the parts match the main fig
WITHOUT_CLASSIFICATION	by default do not show operations nor attributes
WITHOUT_CLASSIFICATION	we're going to change the name immediately so just use ""
WITHOUT_CLASSIFICATION	@see java.lang.object#clone()
WITHOUT_CLASSIFICATION	actions for toolbar
WITHOUT_CLASSIFICATION	todo place comments near connected classes todo place from middle towards outer edges? (or place largest groups first)
WITHOUT_CLASSIFICATION	boolean haspackages = false todo move "package in row" to noderow
WITHOUT_CLASSIFICATION	do nothing.
WITHOUT_CLASSIFICATION	this calls the getters to fetch actions even though the action variables are defined is instances of this class. this is because any number of action getters could have been overridden in a descendant and it is the action from that overridden method that should be returned in the array.
WITHOUT_CLASSIFICATION	since uml2 this must appear before the isaclass clause
WITHOUT_CLASSIFICATION	this rectangle marks the operation section all operations are inside it
WITHOUT_CLASSIFICATION	2nd compartment so adjust y appropriately
WITHOUT_CLASSIFICATION	todo we should be able to just call renderingchanged on the child figs here instead of doing an updateoperations
WITHOUT_CLASSIFICATION	todo we just need to get someone to re-render a single line of text which represents the element here but i'm not sure how to do that. - tfm todo bob replies - we shouldn't be interested in this event here. the figfeature (or its notation) should be listen for change and the figfeature should be update from that.
WITHOUT_CLASSIFICATION	collect the set of model elements that we want to listen to
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#translate(int int)
WITHOUT_CLASSIFICATION	@see java.lang.object#clone()
WITHOUT_CLASSIFICATION	add figs to the fignode in back-to-front order
WITHOUT_CLASSIFICATION	add the listeners to the newowner
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	make all the parts match the main fig
WITHOUT_CLASSIFICATION	check if any stereotype is defined
WITHOUT_CLASSIFICATION	and the stereotypes of its features
WITHOUT_CLASSIFICATION	and its features
WITHOUT_CLASSIFICATION	and the parameter of its operations
WITHOUT_CLASSIFICATION	update the listeners to match the desired set using the minimal update facility
WITHOUT_CLASSIFICATION	modifier
WITHOUT_CLASSIFICATION	create a body that reacts to double-clicks and jumps to a diagram.
WITHOUT_CLASSIFICATION	add
WITHOUT_CLASSIFICATION	visibility
WITHOUT_CLASSIFICATION	set properties of the stereotype box. initially not set to be displayed but this will be changed when we try to render it if we find we have a stereotype.
WITHOUT_CLASSIFICATION	there are 2 boxes showing lines the tab and the body.
WITHOUT_CLASSIFICATION	this populates the stereotypes area
WITHOUT_CLASSIFICATION	else nothing changed
WITHOUT_CLASSIFICATION	else nothing changed
WITHOUT_CLASSIFICATION	we got at least one stereotype
WITHOUT_CLASSIFICATION	the user wants to hide them
WITHOUT_CLASSIFICATION	modifier
WITHOUT_CLASSIFICATION	visibility
WITHOUT_CLASSIFICATION	the figpoly is located at the right of the name text. the namefig size is increased so that it fits its text and the figpoly next to the text all within the boundaries of the namefig.
WITHOUT_CLASSIFICATION	if we have any number of stereotypes displayed then allow some space for that (only width height is included in namefig)
WITHOUT_CLASSIFICATION	take into account the tab is not as wide as the body
WITHOUT_CLASSIFICATION	we want at least some of the package body to be displayed
WITHOUT_CLASSIFICATION	and now asize has the answer
WITHOUT_CLASSIFICATION	save our old boundaries (needed later) and get minimum size info. "asize" will be used to maintain a running calculation of our size at various points.
WITHOUT_CLASSIFICATION	the new size can not be smaller than the minimum.
WITHOUT_CLASSIFICATION	now resize all sub-figs including not displayed figs. start by the name. we override the getminimumsize if it is less than our view (21 pixels hardcoded!). add in the shared extra plus in this case the correction.
WITHOUT_CLASSIFICATION	now sort out the stereotype display. if the stereotype is displayed move the upper boundary of the name compartment up and set new bounds for the name and the stereotype compartments and the stereolineblinder that blanks out the line between the two
WITHOUT_CLASSIFICATION	advance currenty to where the start of the body box is remembering that it overlaps the next box by 1 pixel. calculate the size of the body box and update the y pointer past it if it is displayed.
WITHOUT_CLASSIFICATION	-1 for 1 pixel overlap
WITHOUT_CLASSIFICATION	set bounds of big box
WITHOUT_CLASSIFICATION	the figpoly is located at the right edge of the namefig. the namefig size is such that it at least fits its text and the figpoly next to the text. making the package bigger causes the figpoly to stick to the right edge.
WITHOUT_CLASSIFICATION	now force calculation of the bounds of the figure update the edges and trigger anyone who's listening to see if the "bounds" property has changed.
WITHOUT_CLASSIFICATION	only show the menuitems if they make sense
WITHOUT_CLASSIFICATION	save first
WITHOUT_CLASSIFICATION	while
WITHOUT_CLASSIFICATION	if we get here then we didn't get the default diagram.
WITHOUT_CLASSIFICATION	try to create a new class diagram.
WITHOUT_CLASSIFICATION	if package
WITHOUT_CLASSIFICATION	if doubleclicks
WITHOUT_CLASSIFICATION	change prefix
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed( java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	add the listeners to the newowner
WITHOUT_CLASSIFICATION	and its features
WITHOUT_CLASSIFICATION	end class figpackage
WITHOUT_CLASSIFICATION	readonly class no generalization no association to self
WITHOUT_CLASSIFICATION	end class stylepanelfigpackage
WITHOUT_CLASSIFICATION	in the deploymentdiagram there are no generalizations
WITHOUT_CLASSIFICATION	self-association isn't draggable
WITHOUT_CLASSIFICATION	end class stylepanelfiginterface
WITHOUT_CLASSIFICATION	no generalizations on deployment diagram
WITHOUT_CLASSIFICATION	and its stereotypes
WITHOUT_CLASSIFICATION	event handling
WITHOUT_CLASSIFICATION	event handling
WITHOUT_CLASSIFICATION	add figs to the fignode in back-to-front order
WITHOUT_CLASSIFICATION	set the drop location in the case of d&d
WITHOUT_CLASSIFICATION	set the drop location in the case of d&d
WITHOUT_CLASSIFICATION	add the listeners to the newowner
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	stereotype covers namefig
WITHOUT_CLASSIFICATION	compartments from top to bottom
WITHOUT_CLASSIFICATION	make all the parts match the main fig
WITHOUT_CLASSIFICATION	collect the set of model elements that we want to listen to
WITHOUT_CLASSIFICATION	and its features
WITHOUT_CLASSIFICATION	and the stereotypes of its features
WITHOUT_CLASSIFICATION	and the parameter of its operations
WITHOUT_CLASSIFICATION	use super because not fully init'd
WITHOUT_CLASSIFICATION	and its enumerationliterals
WITHOUT_CLASSIFICATION	and now add listeners to them all
WITHOUT_CLASSIFICATION	put all the bits together suppressing bounds calculations until we're all done for efficiency.
WITHOUT_CLASSIFICATION	the next line is needed so that we have the right dimension when drawing this fig on the diagram by pressing down the mouse button even before releasing the mouse button
WITHOUT_CLASSIFICATION	stereotype fig covers the name fig
WITHOUT_CLASSIFICATION	set the bounds of the figure to the total of the above
WITHOUT_CLASSIFICATION	if moved into an package
WITHOUT_CLASSIFICATION	if default namespace is not already set
WITHOUT_CLASSIFICATION	the next if-clause is important for the deployment-diagram it detects if the enclosing fig is a component in this case the container will be set for the owning interface
WITHOUT_CLASSIFICATION	testing add a parameter to an operation on an interface. does the interface fig adapt its width?
WITHOUT_CLASSIFICATION	set up the property panels for class diagrams
WITHOUT_CLASSIFICATION	the figure that holds the text of the note.
WITHOUT_CLASSIFICATION	do nothing by default.
WITHOUT_CLASSIFICATION	@see java.beans.vetoablechangelistener#vetoablechange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.keylistener#keypressed(java.awt.event.keyevent)
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	update the listeners to match the desired set using the minimal update facility
WITHOUT_CLASSIFICATION	get the size of the text field.
WITHOUT_CLASSIFICATION	mark this as newly created. this is to get round the problem with creating figs for loaded comments that had stereotypes. they are saved with their dimensions including the stereotype but since we pretend the stereotype is not visible we add height the first time we render such a comment. this is a complete fudge and really we ought to address how comment objects with stereotypes are saved. but that will be hard work.
WITHOUT_CLASSIFICATION	update the relative sizes and positions of internel figs
WITHOUT_CLASSIFICATION	update any text colors fonts etc.
WITHOUT_CLASSIFICATION	parse the text that was edited
WITHOUT_CLASSIFICATION	resize the text figure
WITHOUT_CLASSIFICATION	resize the fignode to accomodate the new text
WITHOUT_CLASSIFICATION	not used do nothing.
WITHOUT_CLASSIFICATION	not used do nothing.
WITHOUT_CLASSIFICATION	resize the big port around the figure
WITHOUT_CLASSIFICATION	the text element has no border so the line color doesn't matter.
WITHOUT_CLASSIFICATION	the text is always opaque.
WITHOUT_CLASSIFICATION	? 2line_width?
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getclosestpoint(java.awt.point)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphnoderenderer#getfignodefor( org.tigris.gef.graph.graphmodel org.tigris.gef.base.layer java.lang.object java.util.map)
WITHOUT_CLASSIFICATION	@see java.awt.event.itemlistener#itemstatechanged(java.awt.event.itemevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.figedge#setfig(org.tigris.gef.presentation.fig)
WITHOUT_CLASSIFICATION	_x = x _y = y _w = w _h = h
WITHOUT_CLASSIFICATION	make a seamless integration of the text in the note figure.
WITHOUT_CLASSIFICATION	user interaction methods
WITHOUT_CLASSIFICATION	accessor methods
WITHOUT_CLASSIFICATION	if we have a stereotype displayed then allow some space for that (width and height)
WITHOUT_CLASSIFICATION	and add the gaps around the textfield to get the minimum size of the note.
WITHOUT_CLASSIFICATION	since this is a complex polygon there's no easy way to resize it.
WITHOUT_CLASSIFICATION	just move the corner to it's new position.
WITHOUT_CLASSIFICATION	/ internal methods
WITHOUT_CLASSIFICATION	remove the commentedge. if there are more then one comment-edges between the 2 objects then delete them all.
WITHOUT_CLASSIFICATION	all connected edges
WITHOUT_CLASSIFICATION	only adjust the stereotype height if we are not newly created. this gets round the problem of loading classes with stereotypes defined which have the height already including the stereotype.
WITHOUT_CLASSIFICATION	whatever happened we are no longer newly created so clear the flag. then set the bounds for the rectangle we have defined.
WITHOUT_CLASSIFICATION	end class stylepanelfigclass
WITHOUT_CLASSIFICATION	todo get tip string from comment
WITHOUT_CLASSIFICATION	this one is still usable so let's retain it
WITHOUT_CLASSIFICATION	the last one needs extra space below it
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#removefromdiagram()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.figedge#setdestfignode(org.tigris.gef.presentation.fignode)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.figedge#setsourcefignode(org.tigris.gef.presentation.fignode)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfilled(boolean)
WITHOUT_CLASSIFICATION	although not generally true for gef for argo we know that the layer is a layerperspective which knows the associated diagram
WITHOUT_CLASSIFICATION	although not generally true for gef for argo we know that the layer is a layerperspective which knows the associated diagram
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	event handling
WITHOUT_CLASSIFICATION	set the drop location in the case of d&d
WITHOUT_CLASSIFICATION	contructors
WITHOUT_CLASSIFICATION	modifiers
WITHOUT_CLASSIFICATION	the next line is needed so that we have the right dimension when drawing this fig on the diagram by pressing down the mouse button even before releasing the mouse button
WITHOUT_CLASSIFICATION	make all the parts match the main fig
WITHOUT_CLASSIFICATION	visibility
WITHOUT_CLASSIFICATION	stereotype fig covers the name fig
WITHOUT_CLASSIFICATION	element will normally be null when called from pgml parser it will get it's source & destination set later in attachedges
WITHOUT_CLASSIFICATION	unfortunately the fig and it's associated commentedge will not be fully initialized yet here if we're being loaded from a pgml file. the remainder of the initialization will happen when set{dest|source}fignode are called from pgmlstackparser.attachedges()
WITHOUT_CLASSIFICATION	unimplemented
WITHOUT_CLASSIFICATION	alternatively we could just return null here so that you can not create a comment just linked to a comment this way - which is a bit uncommon but not illegal so for consistency we better allow it.
WITHOUT_CLASSIFICATION	return null
WITHOUT_CLASSIFICATION	class to display a stereotype declaration figure using classifier box notation.<p> todo this is just a place-holder right now! - tfm this needs to show tags and constraints.
WITHOUT_CLASSIFICATION	add
WITHOUT_CLASSIFICATION	show
WITHOUT_CLASSIFICATION	register for tagdefinitions
WITHOUT_CLASSIFICATION	todo constraints
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.abstractaction#isenabled()
WITHOUT_CLASSIFICATION	set the drop location in the case of d&d
WITHOUT_CLASSIFICATION	make all the parts match the main fig
WITHOUT_CLASSIFICATION	put all the bits together suppressing bounds calculations until we're all done for efficiency.
WITHOUT_CLASSIFICATION	the next line is needed so that we have the right dimension when drawing this fig on the diagram by pressing down the mouse button even before releasing the mouse button
WITHOUT_CLASSIFICATION	todo need named tags and constraints compartments here addfig(tagsfig) addfig(constraintsfig)
WITHOUT_CLASSIFICATION	if moved into an package
WITHOUT_CLASSIFICATION	if default namespace is not already set
WITHOUT_CLASSIFICATION	when this is called from pgmlstackparser.attachedges we finished the initialization of owning pseudo element (commentedge)
WITHOUT_CLASSIFICATION	if the operation/reception is abstract then the text will be set to italics.
WITHOUT_CLASSIFICATION	avoid gef calcdrawingarea bug when nothing in a diagram.
WITHOUT_CLASSIFICATION	todo add tags & constraints addmenu.add(targetmanager.getinstance().getaddattributeaction()) addmenu.add(targetmanager.getinstance().getaddoperationaction())
WITHOUT_CLASSIFICATION	avoid gef calcdrawingarea bug when nothing in a diagram.
WITHOUT_CLASSIFICATION	no generalizations in deployment diagrams
WITHOUT_CLASSIFICATION	the diagram image data
WITHOUT_CLASSIFICATION	copy the gif image to the clipboard
WITHOUT_CLASSIFICATION	the diagram image data
WITHOUT_CLASSIFICATION	hide grid otherwise can't see anything
WITHOUT_CLASSIFICATION	bigport.setfilled(f)
WITHOUT_CLASSIFICATION	background color.
WITHOUT_CLASSIFICATION	2 pixel padding after compartment
WITHOUT_CLASSIFICATION	set up hide all / show all
WITHOUT_CLASSIFICATION	perform the action
WITHOUT_CLASSIFICATION	only the bigport may be filled
WITHOUT_CLASSIFICATION	?line_width?
WITHOUT_CLASSIFICATION	see parent
WITHOUT_CLASSIFICATION	?line_width?
WITHOUT_CLASSIFICATION	we remove all of them
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.undo.undoableaction#isenabled()
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	?line_width?
WITHOUT_CLASSIFICATION	if we don't have a fig for this uml object we'll need to add one. we set the bounds but they will be reset later.
WITHOUT_CLASSIFICATION	but its position may have been changed
WITHOUT_CLASSIFICATION	bounds not relevant here but i am perfectionist
WITHOUT_CLASSIFICATION	we need to set a new notationprovider since the notation language may have been changed
WITHOUT_CLASSIFICATION	add it again (but now in the right sequence)
WITHOUT_CLASSIFICATION	now put the text in we must handle the case where the text is null
WITHOUT_CLASSIFICATION	no longer abstract to allow subclasses to remove so we provide a null default implementation
WITHOUT_CLASSIFICATION	if this is not overridden it will revert to the old behavior all internal subclasses have been updated but this if for compatibility of non-argouml extensions.
WITHOUT_CLASSIFICATION	find the compartment fig for this umlobject
WITHOUT_CLASSIFICATION	override superclass to do nothing. fill property cannot be changed.
WITHOUT_CLASSIFICATION	override superclass to do nothing. line width cannot be changed.
WITHOUT_CLASSIFICATION	override superclass to do nothing. line width property cannot be changed.
WITHOUT_CLASSIFICATION	aggregation
WITHOUT_CLASSIFICATION	end class actionsrcmultonetomany
WITHOUT_CLASSIFICATION	todo set font?
WITHOUT_CLASSIFICATION	to circumvent too many registered listeners
WITHOUT_CLASSIFICATION	static variables
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#insertupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#removeupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#changedupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see java.beans.propertychangelistener#propertychange(propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#hit(java.awt.rectangle)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	calling connect() will add the edge to the graphmodel and any layerpersectives on that graphmodel will get a edgeadded event and will add an appropriate figedge (determined by the graphedgerenderer).
WITHOUT_CLASSIFICATION	ending editing
WITHOUT_CLASSIFICATION	used by pgml.tee
WITHOUT_CLASSIFICATION	actually return the figedge that the figedgeport is part of.
WITHOUT_CLASSIFICATION	throw new illegalargumentexception()
WITHOUT_CLASSIFICATION	do nothing.
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#insertupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	event handling
WITHOUT_CLASSIFICATION	main methods
WITHOUT_CLASSIFICATION	if the user selects an action that is already selected in sticky mode (double clicked) then we turn off sticky mode and make sure no action is selected.
WITHOUT_CLASSIFICATION	here the actions to divide a region
WITHOUT_CLASSIFICATION	the 1st region has an invisible divider line (the box is always invisible)
WITHOUT_CLASSIFICATION	throw out any previous elements that were enclosed but are not a concurrent region let's move them onto the first region
WITHOUT_CLASSIFICATION	linewidth?
WITHOUT_CLASSIFICATION	the divider line should be visible so no need to change its color.
WITHOUT_CLASSIFICATION	make the composite state 1 region higher
WITHOUT_CLASSIFICATION	todo verify this. iiuc then this triggers the compountstatefig to draw itself correctly. hence there was a reason to wait this long to make the state concurrent.
WITHOUT_CLASSIFICATION	look for the dashed edge
WITHOUT_CLASSIFICATION	we have the dashed edge now find the opposite fignode
WITHOUT_CLASSIFICATION	prevent triggering too many events by setname().
WITHOUT_CLASSIFICATION	not???
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	consume to stop other modes from trying to take over
WITHOUT_CLASSIFICATION	marker interface only
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#removefromdiagram()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setboundsimpl(int int int int)
WITHOUT_CLASSIFICATION	only reset the text if the two are not the same (i.e the fig has moved rather than we've just edited the text when settargetbbox() will have made them the same). note that stylebounds could be null so we do the test this way round.
WITHOUT_CLASSIFICATION	can't do anything if we don't have a fig.
WITHOUT_CLASSIFICATION	2 pixel padding after compartment
WITHOUT_CLASSIFICATION	or vice versa?
WITHOUT_CLASSIFICATION	provide feedback to the user that their name was not accepted
WITHOUT_CLASSIFICATION	subtract the the offset of the click to take account of user having not initially clicked in the centre.
WITHOUT_CLASSIFICATION	super returns -1 if any of gefs buttons was hit (but maybe one of the not-gef-buttons)
WITHOUT_CLASSIFICATION	do not show border line make transparent
WITHOUT_CLASSIFICATION	cleanup of unused figtext's
WITHOUT_CLASSIFICATION	todo this doesn't do anything special with keywords. they should probably go first.
WITHOUT_CLASSIFICATION	there is one fig more in the group than (stereotypes + keyword)
WITHOUT_CLASSIFICATION	the keyword fig already exists.
WITHOUT_CLASSIFICATION	this will contain the figs that we do not need anymore
WITHOUT_CLASSIFICATION	bounds not relevant here
WITHOUT_CLASSIFICATION	bounds not relevant here
WITHOUT_CLASSIFICATION	the stereotype fig already exists.
WITHOUT_CLASSIFICATION	the boundary box as held in the target fig and as listed in the boundary box style field (null if we don't have anything valid)
WITHOUT_CLASSIFICATION	remove all stereotypes that have a graphical icon
WITHOUT_CLASSIFICATION	todo check!
WITHOUT_CLASSIFICATION	set new bounds for all included figs
WITHOUT_CLASSIFICATION	stylepanelfigclass relies on getpaneltarget() to return a figcompartmentbox
WITHOUT_CLASSIFICATION	get class box because we will set it's bounding box
WITHOUT_CLASSIFICATION	get class box because we will set it's bounding box in text field
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	calling connect() will add the edge to the graphmodel and any layerpersectives on that graphmodel will get a edgeadded event and will add an appropriate figedge (determined by the graphedgerenderer).
WITHOUT_CLASSIFICATION	the keyword fig does not exist yet. let's create one
WITHOUT_CLASSIFICATION	keywords which look like a stereotype (e.g. <<interface>>) have no owner
WITHOUT_CLASSIFICATION	if there are no stereotypes we return (00) preventing double lines in the class (see issue 4939)
WITHOUT_CLASSIFICATION	end class stylepanelfigassociationclass
WITHOUT_CLASSIFICATION	/ constructors /
WITHOUT_CLASSIFICATION	/ main methods /
WITHOUT_CLASSIFICATION	create the singleton if it does not exist and then return it
WITHOUT_CLASSIFICATION	when a new target is selected we have to check if it 's a use case. then the icone "add extension point" have to become enabled.
WITHOUT_CLASSIFICATION	find the target in the project browser. we can only do anything if its a use case.
WITHOUT_CLASSIFICATION	create a new extension point and make it the browser target. then invoke the superclass action method.
WITHOUT_CLASSIFICATION	end class actionaddextensionpoint
WITHOUT_CLASSIFICATION	we have already confirmed the connection is valid
WITHOUT_CLASSIFICATION	detach any edges (such as comment edges) already attached to the figassociation before the figassociation is removed. they'll later be re-attached to the new fignodeassociation
WITHOUT_CLASSIFICATION	if there are bits of an association class then remember their location and path.
WITHOUT_CLASSIFICATION	create the new fignodeassociation and locate it.
WITHOUT_CLASSIFICATION	add the association ends to the graph model
WITHOUT_CLASSIFICATION	add the edges (such as comment edges) that were on the old figassociation to our new fignodeassociation and make sure they are positioned correctly.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.droptargetlistener#dragenter( java.awt.dnd.droptargetdragevent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.droptargetlistener#dragover( java.awt.dnd.droptargetdragevent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.droptargetlistener#dropactionchanged( java.awt.dnd.droptargetdragevent)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	get the model elements that are being transfered.
WITHOUT_CLASSIFICATION	multiplicity
WITHOUT_CLASSIFICATION	end class modecreateassociation
WITHOUT_CLASSIFICATION	&& ((umldiagram) dia).doesaccept(dtde.getsource())
WITHOUT_CLASSIFICATION	create a new figtext instance based on the given mouse down event and the state of the parent editor.
WITHOUT_CLASSIFICATION	system.err.println("nullpointerexception ignored.")
WITHOUT_CLASSIFICATION	end class spfigedgemodelelement
WITHOUT_CLASSIFICATION	system.err.println("nullpointerexception ignored.")
WITHOUT_CLASSIFICATION	get all our sub figs and hit them with the big stick too
WITHOUT_CLASSIFICATION	only show the path item when there is an owning namespace.
WITHOUT_CLASSIFICATION	only show the path item when there is an owning namespace.
WITHOUT_CLASSIFICATION	enumerate all selected figures and update their path accordingly
WITHOUT_CLASSIFICATION	force the line-width to 0 since the figgroup that contains the stereotype may want to show a border but we don't.
WITHOUT_CLASSIFICATION	compartments
WITHOUT_CLASSIFICATION	todo support commentedges. todo support associations to self. @see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	add
WITHOUT_CLASSIFICATION	20 = height of name fig ?
WITHOUT_CLASSIFICATION	now force calculation of the bounds of the figure update the edges and trigger anyone who's listening to see if the "bounds" property has changed.
WITHOUT_CLASSIFICATION	2line_width? or extra padding?
WITHOUT_CLASSIFICATION	set properties of the stereotype box.
WITHOUT_CLASSIFICATION	the namefig is transparent since this is a box and the fill color is drawn by the bigport.
WITHOUT_CLASSIFICATION	use "asize" to build up the minimum size. start with the size of the name compartment and build up.
WITHOUT_CLASSIFICATION	only take into account the stereotype width not the height since the height is included in the name fig
WITHOUT_CLASSIFICATION	add the height of all the compartments (if there are any) and check their minimum width
WITHOUT_CLASSIFICATION	save our old boundaries so it can be used in property message later
WITHOUT_CLASSIFICATION	make sure we don't try to set things smaller than the minimum
WITHOUT_CLASSIFICATION	the box for the compartments is somewhere inside the outside bounds
WITHOUT_CLASSIFICATION	now the new namefig height will include the stereotype height
WITHOUT_CLASSIFICATION	the new height can not be less than the name height
WITHOUT_CLASSIFICATION	calculate the minimum needed height for all the compartments
WITHOUT_CLASSIFICATION	distribute the extra height over the visible compartments
WITHOUT_CLASSIFICATION	increase the height of the fig
WITHOUT_CLASSIFICATION	finally set the bounds of the big box and the border fig
WITHOUT_CLASSIFICATION	hide compartment
WITHOUT_CLASSIFICATION	hiding one compartment means that the fig returns to minimal dimensions
WITHOUT_CLASSIFICATION	@see javax.swing.jcomponent#setvisible(boolean)
WITHOUT_CLASSIFICATION	@see javax.swing.action#isenabled()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.pathconv#stuffpoint(java.awt.point)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.pathconv#setclosestpoint(java.awt.point)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.pathconv#applyoffsetamount(java.awt.point java.awt.point int java.awt.point)
WITHOUT_CLASSIFICATION	alternatively we could reduce the height of the fig by the height of this one hidden compartment. but that would not be possible for the width - so we better return to minimal dimensions overall.
WITHOUT_CLASSIFICATION	show compartment
WITHOUT_CLASSIFICATION	this sets the linewidth of all in the group
WITHOUT_CLASSIFICATION	namefig and stereotypefig are handled by parent.
WITHOUT_CLASSIFICATION	forcerepaintshadow()
WITHOUT_CLASSIFICATION	update the diagram and other users of these settings
WITHOUT_CLASSIFICATION	@jvedecl-index=0visual-constraint="1010"
WITHOUT_CLASSIFICATION	find the point offset on the line that gives a correct offset
WITHOUT_CLASSIFICATION	default angle is 90 deg.
WITHOUT_CLASSIFICATION	boundary condition in gef make sure this is less than not equal
WITHOUT_CLASSIFICATION	if we're using a fixed offset just add it and return no collision detection is done in this case
WITHOUT_CLASSIFICATION	check for a collision between our computed position and the edge
WITHOUT_CLASSIFICATION	increase offset by 2px at a time
WITHOUT_CLASSIFICATION	get the points representing the poly line for our edge
WITHOUT_CLASSIFICATION	increase offset by increments until we're clear
WITHOUT_CLASSIFICATION	limit our retries in case its too hard to get free
WITHOUT_CLASSIFICATION	if we timed out give it one more try on the other side
WITHOUT_CLASSIFICATION	count >= limit
WITHOUT_CLASSIFICATION	force the line-width to 0 since the figgroup that contains the stereotype may want to show a border but we don't.
WITHOUT_CLASSIFICATION	log.log(level.fine "final point #" + count + " " + result + " offset of " + scaledoffset)
WITHOUT_CLASSIFICATION	segment size for computing slope
WITHOUT_CLASSIFICATION	two points for line segment used to compute slope of path here note that this is the average slope not instantaneous so it will give screwy results near bends in the path
WITHOUT_CLASSIFICATION	if our position was clamped try to make it up on the other end
WITHOUT_CLASSIFICATION	can't get the slope of a point. just return an arbitrary point.
WITHOUT_CLASSIFICATION	our angle theta is arctan(opposite/adjacent) because y increases going down the screen positive angles are clockwise rather than counterclockwise
WITHOUT_CLASSIFICATION	this shouldn't happen because of our line segment size check
WITHOUT_CLASSIFICATION	"we're going vertical!" - goose in "top gun"
WITHOUT_CLASSIFICATION	arctan only returns -pi/2 to pi/2 handle the other two quadrants and normalize to 0 - 2pi
WITHOUT_CLASSIFICATION	quadrant ii & iii
WITHOUT_CLASSIFICATION	quadrant iv
WITHOUT_CLASSIFICATION	set the following for some backward compatibility with old algorithm
WITHOUT_CLASSIFICATION	add displacement angle to slope
WITHOUT_CLASSIFICATION	transform to 0 - 2pi range if we've gone all the way around circle
WITHOUT_CLASSIFICATION	compute our deltas
WITHOUT_CLASSIFICATION	log.log(level.fineresult.x + " " + result.y + " theta = " + theta 180 / math.pi + " dx = " + dx + " dy = " + dy)
WITHOUT_CLASSIFICATION	load the standard colour just add an alpha channel.
WITHOUT_CLASSIFICATION	should never get here. if we do return the inner point.
WITHOUT_CLASSIFICATION	called by propertychange
WITHOUT_CLASSIFICATION	this does a calcbounds()
WITHOUT_CLASSIFICATION	note this listener needs to always be active even if this tab isn't visible
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.diagram#getclassandmodelid()
WITHOUT_CLASSIFICATION	@see javax.swing.action#isenabled()
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.action#isenabled()
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	the clone method that should clone the jgraph with it's contents and the toolbar with it's contents. since both jgraph as the toolbar are coming from the gef framework cloning them will be hard work and should actually not be placed here but in a clone method of the jgraph and the toolbar. @see java.lang.object#clone()
WITHOUT_CLASSIFICATION	@see java.awt.component#setvisible(boolean)
WITHOUT_CLASSIFICATION	if location is non-null convert to a rectangle that we can use
WITHOUT_CLASSIFICATION	the following is the default implementation for diagrams of which the owner is a namespace.
WITHOUT_CLASSIFICATION	source source position destination destination position number of objects to be copied
WITHOUT_CLASSIFICATION	"unnamed " +
WITHOUT_CLASSIFICATION	todo should update to size of diagram contents
WITHOUT_CLASSIFICATION	this should not be needed if the above is correct but let's be sure
WITHOUT_CLASSIFICATION	this should not be needed if the above is correct but let's be sure
WITHOUT_CLASSIFICATION	actionpaste.getinstance().setenabled( globals.clipboard != null && !globals.clipboard.isempty())
WITHOUT_CLASSIFICATION	next statement gives us a clone jgraph but not a cloned toolbar
WITHOUT_CLASSIFICATION	@see org.tigris.gef.event.modechangelistener#modechange(org.tigris.gef.event.modechangeevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseentered(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mousemotionlistener#mousemoved(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	remains selected
WITHOUT_CLASSIFICATION	the old selection
WITHOUT_CLASSIFICATION	target might not have been initialised yet.
WITHOUT_CLASSIFICATION	add to selection
WITHOUT_CLASSIFICATION	optimize for the normal case to minimize target changes
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	assuming the target is some model element.
WITHOUT_CLASSIFICATION	how to handle empty target lists? probably the tabdiagram should only show an empty pane in that case
WITHOUT_CLASSIFICATION	assuming the target is some model element.
WITHOUT_CLASSIFICATION	was ""
WITHOUT_CLASSIFICATION	although we register for notification of diagrams being deleted we currently depend on the targetmanager to assign a new target when this happens when we implement mdi and have our own list of open diagrams we can ressurect the use of this
WITHOUT_CLASSIFICATION	any swing work done here needs to be queued to the awt thread since we don't know what thread our event will arrive on
WITHOUT_CLASSIFICATION	- redrawmanager.lock()
WITHOUT_CLASSIFICATION	- redrawmanager.lock()
WITHOUT_CLASSIFICATION	getlayermanager().getactivelayer().paint(g)
WITHOUT_CLASSIFICATION	- redrawmanager.unlock() - _redrawer.repairdamage()
WITHOUT_CLASSIFICATION	getlayermanager().getactivelayer().paint(g)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#deletefrommodel()
WITHOUT_CLASSIFICATION	@see javax.swing.action#getvalue(java.lang.string)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	this makes the text not touch the text-border line
WITHOUT_CLASSIFICATION	todo we don't currently have any settings that can change on a per-fig basis so we can just use the project/diagram defaults settings = new diagramsettings(rendersettings)
WITHOUT_CLASSIFICATION	certain types of fixed text (e.g. a figstereotype with a keyword) may not have an owner
WITHOUT_CLASSIFICATION	now we link it to the modelelements which are represented by fignode
WITHOUT_CLASSIFICATION	update all tools' enabled status
WITHOUT_CLASSIFICATION	remember the fig for later
WITHOUT_CLASSIFICATION	let's build the comment first unlinked.
WITHOUT_CLASSIFICATION	prevent e.g. associationclasses from being added trice
WITHOUT_CLASSIFICATION	select the new comment as target
WITHOUT_CLASSIFICATION	create the node fig for the comment itself and draw it
WITHOUT_CLASSIFICATION	create the comment links and draw them
WITHOUT_CLASSIFICATION	place the comment fig on the nicest spot on the diagram
WITHOUT_CLASSIFICATION	if we're drawing from an edge
WITHOUT_CLASSIFICATION	$non-nls-<n>$
WITHOUT_CLASSIFICATION	$non-nls-<n>$
WITHOUT_CLASSIFICATION	$non-nls-<n>$
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.undo.undoableaction#isenabled()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#paint(java.awt.graphics)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.ui.popupgenerator#getpopupactions(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	calling connect() will add the edge to the graphmodel and any layerpersectives on that graphmodel will get a edgeadded event and will add an appropriate figedge (determined by the graphedgerenderer).
WITHOUT_CLASSIFICATION	user made a false start
WITHOUT_CLASSIFICATION	so the target is a massociationrole
WITHOUT_CLASSIFICATION	mvw this is not the correct way but it allows connecting a commentedge to it! see e.g. actionaddnote for the correct way. testcase 1. select the message. 2. click the comment tool.
WITHOUT_CLASSIFICATION	end class actionaddmessage
WITHOUT_CLASSIFICATION	let's use groups to construct the different text sections at the association
WITHOUT_CLASSIFICATION	no further listeners required in this case - the rest is handled by the notationprovider and sub-figs.
WITHOUT_CLASSIFICATION	this only happens if model-change events arrive before we are completely constructed.
WITHOUT_CLASSIFICATION	x^2 + y^2 = r^2 (equation of a circle)
WITHOUT_CLASSIFICATION	max distance is set at 100 pixels (rsquared = 100^2)
WITHOUT_CLASSIFICATION	east
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#removefromdiagram()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed( java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	end class figassociation
WITHOUT_CLASSIFICATION	note that "multiplicity" is what is the notation is listening for in uml1.4 "uppervalue" are listened to in uml2. it is not currently why it is not required to register for "lowervalue" also.
WITHOUT_CLASSIFICATION	no need to listen to these property changes - the notationprovider takes care of this.
WITHOUT_CLASSIFICATION	no need to listen to these property changes - the notationprovider takes care of this.
WITHOUT_CLASSIFICATION	new string[] {"name" "visibility" "stereotype"}
WITHOUT_CLASSIFICATION	new string[] {"name" "visibility" "stereotype"}
WITHOUT_CLASSIFICATION	these are a list of arrow types.
WITHOUT_CLASSIFICATION	added to the arrow type for navigable
WITHOUT_CLASSIFICATION	finished editing. parse the text that was edited. only the role is editable hence
WITHOUT_CLASSIFICATION	figedge.showhelp(role.getparsinghelp()) role.settext()
WITHOUT_CLASSIFICATION	pass everything else to superclass
WITHOUT_CLASSIFICATION	end class actionnavigability
WITHOUT_CLASSIFICATION	nothing yet. later maybe something like
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	putnotationargument("showassociationname" getsettings().isshowassociationnames())
WITHOUT_CLASSIFICATION	the text the user has filled in the textfield is first checked to see if it's a valid multiplicity. if so then that is the multiplicity to be set. if not the input is rejected.
WITHOUT_CLASSIFICATION	fonts and colors should get updated automatically for contained figs
WITHOUT_CLASSIFICATION	there is none
WITHOUT_CLASSIFICATION	only initialized to prevent warning
WITHOUT_CLASSIFICATION	not supported for this target
WITHOUT_CLASSIFICATION	make space for the clarifier margin between text and border
WITHOUT_CLASSIFICATION	this next line presumes that the 1st fig with this owner is the previous port - and consequently nullifies the owner of this 1st fig.
WITHOUT_CLASSIFICATION	add a listener for changes to any property
WITHOUT_CLASSIFICATION	check if multiple items are selected
WITHOUT_CLASSIFICATION	show
WITHOUT_CLASSIFICATION	popupaddoffset should be equal to the number of items added here
WITHOUT_CLASSIFICATION	todo the following is carried over from setowner but probably isn't needed renderingchanged() it does the following (add as needed) updatenametext() updatestereotypetext() updatestereotypeicon() updatebounds() damage()
WITHOUT_CLASSIFICATION	be careful here since subclasses could have overridden this with the assumption that it wouldn't be called before the constructors finished
WITHOUT_CLASSIFICATION	todo mvw i think this has to be clone.namefig = (figsinglelinetext) clonefig but have not the means to investigate since this code is not yet used. enable the menu-items for copy/paste to test btw in some other fignodemodelelement classes i see the same mistake.
WITHOUT_CLASSIFICATION	this rectangle marks the whole modelelement figure everything is inside it
WITHOUT_CLASSIFICATION	clone this figure. after the base clone method has been called determine which child figs of the clone represent the name stereotype and port. <p> todo enclosedfigs encloser and eventsenders may also need to be cloned. @see java.lang.object#clone() @return the cloned figure
WITHOUT_CLASSIFICATION	idem here clone.stereotypefig = (figstereotypesgroup) clonefig
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getenclosingfig()
WITHOUT_CLASSIFICATION	update any text colors fonts etc.
WITHOUT_CLASSIFICATION	parse the text that was edited
WITHOUT_CLASSIFICATION	add stereotype view submenu
WITHOUT_CLASSIFICATION	the node's been placed on the diagram
WITHOUT_CLASSIFICATION	add stereotypes submenu
WITHOUT_CLASSIFICATION	set the namespace of the enclosed model element to the namespace of the encloser.
WITHOUT_CLASSIFICATION	find all elementresidences between the class and the component
WITHOUT_CLASSIFICATION	there was no elementresidence yet so let's create one
WITHOUT_CLASSIFICATION	the node's been placed within some fig
WITHOUT_CLASSIFICATION	there were 2 elementresidences .. strange case.
WITHOUT_CLASSIFICATION	there is already a correct elementresidence
WITHOUT_CLASSIFICATION	the owner is already linked to the component
WITHOUT_CLASSIFICATION	we are getting events we don't want. filter them out.
WITHOUT_CLASSIFICATION	only update the bounds if they change
WITHOUT_CLASSIFICATION	we handle and consume editing events
WITHOUT_CLASSIFICATION	resize the fignode to accommodate the new text
WITHOUT_CLASSIFICATION	if the source of the event is an uml object e.g. the owner of this fig (but not always only the owner is shown e.g. for a class also its attributes are shown) then the uml model has been changed.
WITHOUT_CLASSIFICATION	todo should this not be an assert?
WITHOUT_CLASSIFICATION	west
WITHOUT_CLASSIFICATION	if the user double clicks on any part of this fignode pass it down to one of the internal figs. this allows the user to initiate direct text editing. @see java.awt.event.mouselistener#mouseclicked(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	south
WITHOUT_CLASSIFICATION	event handlers - mouselistener implementation
WITHOUT_CLASSIFICATION	convert null to empty string and clear help message
WITHOUT_CLASSIFICATION	it is done
WITHOUT_CLASSIFICATION	this enables direct text editing for sub figs of a figgroup object
WITHOUT_CLASSIFICATION	either layer or owner was null
WITHOUT_CLASSIFICATION	default is to do nothing
WITHOUT_CLASSIFICATION	default is to do nothing
WITHOUT_CLASSIFICATION	default is to do nothing
WITHOUT_CLASSIFICATION	default is to do nothing
WITHOUT_CLASSIFICATION	this test needed for a figpool
WITHOUT_CLASSIFICATION	get model listeners removed
WITHOUT_CLASSIFICATION	is used as instancespecification see umldeploymentdiagram
WITHOUT_CLASSIFICATION	todo what about objectnode? return org.eclipse.uml2.uml.objectnode.class
WITHOUT_CLASSIFICATION	@see javax.swing.action#isenabled()
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(actionevent)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	todo state & vertex are independent classes in uml 2.1
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	only initialized to prevent warning
WITHOUT_CLASSIFICATION	not supported for this target
WITHOUT_CLASSIFICATION	internal methods
WITHOUT_CLASSIFICATION	todo assert modelelement != null???
WITHOUT_CLASSIFICATION	default for name and stereotype is no border
WITHOUT_CLASSIFICATION	override fignode implementation to keep setowner from getting called.
WITHOUT_CLASSIFICATION	todo use per-project undo manager not global
WITHOUT_CLASSIFICATION	todo use per-project undo manager not global
WITHOUT_CLASSIFICATION	todo use per-project undo manager not global
WITHOUT_CLASSIFICATION	todo use per-project undo manager not global
WITHOUT_CLASSIFICATION	use diagraminterface to add classes to diagram
WITHOUT_CLASSIFICATION	actionaddallclassesfrommodel
WITHOUT_CLASSIFICATION	we have an edge (the uml modelelement!)
WITHOUT_CLASSIFICATION	situation 1
WITHOUT_CLASSIFICATION	@see javax.swing.action#isenabled()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.figedge#setfig(org.tigris.gef.presentation.fig)
WITHOUT_CLASSIFICATION	text group to contain name & stereotype
WITHOUT_CLASSIFICATION	computeroute() this recomputes the route if you reload the diagram.
WITHOUT_CLASSIFICATION	in case someone turns it on
WITHOUT_CLASSIFICATION	do not allow fill to change. we should see through the text to the color of the main fig background.
WITHOUT_CLASSIFICATION	now force minimum dimensions for the text
WITHOUT_CLASSIFICATION	now add the areas around the text to return the complete size
WITHOUT_CLASSIFICATION	calculate the source and dest figs for to self assoc
WITHOUT_CLASSIFICATION	reset the pointindex
WITHOUT_CLASSIFICATION	check pre-conds
WITHOUT_CLASSIFICATION	set-up
WITHOUT_CLASSIFICATION	the fig that was under the mouse when it was released
WITHOUT_CLASSIFICATION	make a nice little target area
WITHOUT_CLASSIFICATION	and find the fig
WITHOUT_CLASSIFICATION	last is the top fig.
WITHOUT_CLASSIFICATION	check intermediate post-condition.
WITHOUT_CLASSIFICATION	delegate the re-routing to graphmodels.
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinecolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinecolor()
WITHOUT_CLASSIFICATION	_x = x _y = y _w = w _h = h
WITHOUT_CLASSIFICATION	add figs to the fignode in back-to-front order
WITHOUT_CLASSIFICATION	set it to an invalid number by default to make sure it is set correctly.
WITHOUT_CLASSIFICATION	figpoly.setfillcolor(col)
WITHOUT_CLASSIFICATION	figclone._polygon = (polygon) _polygon.clone()
WITHOUT_CLASSIFICATION	north
WITHOUT_CLASSIFICATION	do nothing until code is reviewed
WITHOUT_CLASSIFICATION	do nothing until code is reviewed
WITHOUT_CLASSIFICATION	todo do nothing until code is reviewed
WITHOUT_CLASSIFICATION	message
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see javax.swing.action#isenabled()
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	crazy numbering scheme at work here. here's how the handle numbers are laid out. values 0-7 are defined by gef and go left to right top to bottom (ie not clockwise or counterclockwise). values 10-14 zigzag north south west east southwest. if you can correctly guess where 15 will go you should buy a lottery ticket immediately. <pre> 10 0-------1-------2 | | 12 3 4 13 | | 14 5-------6-------7 11 </pre>
WITHOUT_CLASSIFICATION	classifierrole classifierrole
WITHOUT_CLASSIFICATION	simulate a press of the mouse above the calculated point
WITHOUT_CLASSIFICATION	calculate the drop location and place every n-th element at an offset proportional to n.
WITHOUT_CLASSIFICATION	super implementation found a hit
WITHOUT_CLASSIFICATION	take canvas scrolling into account. the implementation below does place the element correctly when the canvas has been scrolled.
WITHOUT_CLASSIFICATION	simulate a release of the mouse
WITHOUT_CLASSIFICATION	overridden in order to implement pathcompartmentcontainer.
WITHOUT_CLASSIFICATION	do nothing by default
WITHOUT_CLASSIFICATION	don't allow drag outside of bounds of diagram
WITHOUT_CLASSIFICATION	overridden in order to implement pathcompartmentcontainer.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#paint(java.awt.graphics)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#calcbounds()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#removefromdiagram()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#deletefrommodel()
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mousepressed(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	if the user has selected modeplace either by a diagram tool or addtodiagram then we don't want to show the clarifiers.
WITHOUT_CLASSIFICATION	if the user has selected modeplace either by a diagram tool or addtodiagram then we don't want to show the toolbelt items.
WITHOUT_CLASSIFICATION	remember what handle was clicked for the case where the drag is released over empty space
WITHOUT_CLASSIFICATION	transparent cyan
WITHOUT_CLASSIFICATION	yellow
WITHOUT_CLASSIFICATION	translucent green
WITHOUT_CLASSIFICATION	super(modecreatepolyedge.class "edgeclass" model.getmetatypes().getassociation() name)
WITHOUT_CLASSIFICATION	set this to true on to enable debugging figs
WITHOUT_CLASSIFICATION	anchor position
WITHOUT_CLASSIFICATION	the enumerationliteral uses a dedicated notation that supports parsing "name1name2name3" and stereotypes. also supports deleting a literal by erasing text.
WITHOUT_CLASSIFICATION	todo the uml does not seem to define this name. or is it?
WITHOUT_CLASSIFICATION	the serialversionuid (generated by eclipse)
WITHOUT_CLASSIFICATION	uml spec for generalizations doesn't call for name
WITHOUT_CLASSIFICATION	name & stereotypes get updated by superclass
WITHOUT_CLASSIFICATION	update the discriminator if it changed
WITHOUT_CLASSIFICATION	show it
WITHOUT_CLASSIFICATION	fig.calcbounds()
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseentered(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	we only take the filename not the whole system path
WITHOUT_CLASSIFICATION	_x = x _y = y _w = w _h = h
WITHOUT_CLASSIFICATION	add figs to the fignode in back-to-front order
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	event handlers - mouselistener implementation
WITHOUT_CLASSIFICATION	the following does not seem to work - centered the fig instead. getnamefig().setjustificationbyname("center")
WITHOUT_CLASSIFICATION	get the widest of all textfigs calculate the total height
WITHOUT_CLASSIFICATION	create the new figassociation edge to replace the node
WITHOUT_CLASSIFICATION	center the namefig since center justification does not seem to work.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	do nothing this rect will always be transparent
WITHOUT_CLASSIFICATION	do nothing this rect will always be transparent
WITHOUT_CLASSIFICATION	@see java.beans.vetoablechangelistener#vetoablechange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	update any text colors fonts etc.
WITHOUT_CLASSIFICATION	update the relative sizes and positions of internel figs
WITHOUT_CLASSIFICATION	popupaddoffset should be equal to the number of items added here
WITHOUT_CLASSIFICATION	add stereotypes submenu
WITHOUT_CLASSIFICATION	we handle and consume editing events
WITHOUT_CLASSIFICATION	detach any non-associationend edges (such as comment edges) already attached before this association node is removed. they'll later be re-attached to the new figassociation
WITHOUT_CLASSIFICATION	now we can remove ourself (which will also remove the attached association ends edges)
WITHOUT_CLASSIFICATION	add the non-associationend edges (such as comment edges) that were originally attached to this and attach them to the new figassociation and make sure they are positioned correctly.
WITHOUT_CLASSIFICATION	list of model element listeners we've registered.
WITHOUT_CLASSIFICATION	added this part to load the extra menu content
WITHOUT_CLASSIFICATION	owner related todo items
WITHOUT_CLASSIFICATION	fig related todo items
WITHOUT_CLASSIFICATION	parse the text that was edited
WITHOUT_CLASSIFICATION	pass everything except editing events to superclass
WITHOUT_CLASSIFICATION	if the source of the event is an uml object then the uml model has been changed.
WITHOUT_CLASSIFICATION	the following is a possible future improvement of the modelchanged() function. michiel propose not to do this to keep architecture stable.
WITHOUT_CLASSIFICATION	default implementation is to do nothing
WITHOUT_CLASSIFICATION	default implementation is to do nothing
WITHOUT_CLASSIFICATION	todo update setting
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	we moused over an object just as it was deleted transient condition - doesn't require i18n
WITHOUT_CLASSIFICATION	todo we don't have any settings that can change per-fig currently so we can just use the default settings settings = new diagramsettings(rendersettings)
WITHOUT_CLASSIFICATION	default implementation is to do nothing
WITHOUT_CLASSIFICATION	default implementation is to do nothing
WITHOUT_CLASSIFICATION	default implementation is to do nothing
WITHOUT_CLASSIFICATION	default implementation is to do nothing
WITHOUT_CLASSIFICATION	required for mouselistener interface but we only care about clicks
WITHOUT_CLASSIFICATION	required for mouselistener interface but we only care about clicks
WITHOUT_CLASSIFICATION	required for mouselistener interface but we only care about clicks
WITHOUT_CLASSIFICATION	required for mouselistener interface but we only care about clicks
WITHOUT_CLASSIFICATION	no need to update if model element went away
WITHOUT_CLASSIFICATION	required for keylistener interface but not used
WITHOUT_CLASSIFICATION	required for keylistener interface but not used
WITHOUT_CLASSIFICATION	both ends must be defined and nodes that are on the graph already.
WITHOUT_CLASSIFICATION	internal methods
WITHOUT_CLASSIFICATION	if the edge is from a circle to a circle (e.g. between use cases) we have our own implementation overriding gef. which attempts to keep the edges perpendicular if the edge is already close to perpendicular.
WITHOUT_CLASSIFICATION	newfc = _content
WITHOUT_CLASSIFICATION	gef sets a different fig than the one that we had at construction time so we need to set its color and width
WITHOUT_CLASSIFICATION	place the edge on the layer and update the diagram
WITHOUT_CLASSIFICATION	end computeroute
WITHOUT_CLASSIFICATION	todo does this help?
WITHOUT_CLASSIFICATION	if this is not a circle to circle edge we default to let gef calculate edge route.
WITHOUT_CLASSIFICATION	? two iterations of refinement maybe should be a for-loop
WITHOUT_CLASSIFICATION	give up if the assocation ends don't have a type defined
WITHOUT_CLASSIFICATION	get the two ends of any valid edge
WITHOUT_CLASSIFICATION	only allow binary associations
WITHOUT_CLASSIFICATION	set the drop location in the case of d&d
WITHOUT_CLASSIFICATION	todo assumes public
WITHOUT_CLASSIFICATION	(melementimport)
WITHOUT_CLASSIFICATION	modifiers
WITHOUT_CLASSIFICATION	this sets the linewidth of all in the group
WITHOUT_CLASSIFICATION	namefig and stereotypefig are handled by parent.
WITHOUT_CLASSIFICATION	if the line angle is less than 3 degrees then snap the line straight
WITHOUT_CLASSIFICATION	/ methods that implement the mutablegraphmodel interface /
WITHOUT_CLASSIFICATION	a dependency potentially has many clients and suppliers. we only consider the first of each (not clear that we should really accept the case where there is more than one of either)
WITHOUT_CLASSIFICATION	add the node check that it is an actor or use case and add it to the model namespace.
WITHOUT_CLASSIFICATION	tell gef its changed
WITHOUT_CLASSIFICATION	add the element and place it in the namespace of the model
WITHOUT_CLASSIFICATION	tell gef
WITHOUT_CLASSIFICATION	suggest that actors may not connect (see javadoc comment about this).
WITHOUT_CLASSIFICATION	everything else is ok
WITHOUT_CLASSIFICATION	remove a node
WITHOUT_CLASSIFICATION	remove an edge
WITHOUT_CLASSIFICATION	something was added - nothing for us to worry about
WITHOUT_CLASSIFICATION	invoke the parent constructor first
WITHOUT_CLASSIFICATION	invoke the parent refresh first
WITHOUT_CLASSIFICATION	end class stylepanelfigusecase
WITHOUT_CLASSIFICATION	initialize any other figs here
WITHOUT_CLASSIFICATION	only the head should be filled (not the text)
WITHOUT_CLASSIFICATION	accumulate a bounding box for all the figs in the group.
WITHOUT_CLASSIFICATION	name updating
WITHOUT_CLASSIFICATION	text fig to hold the <<include>> label
WITHOUT_CLASSIFICATION	the <<include>> label. it's not a true stereotype so don't use the stereotype support
WITHOUT_CLASSIFICATION	try some action errors
WITHOUT_CLASSIFICATION	add figs to the fignode in back-to-front order
WITHOUT_CLASSIFICATION	set the drop location in the case of d&d
WITHOUT_CLASSIFICATION	check if multiple items are selected
WITHOUT_CLASSIFICATION	make all the parts match the main fig
WITHOUT_CLASSIFICATION	if the element import is in the old owned it means it must have been removed. make sure the associated model element is removed.
WITHOUT_CLASSIFICATION	by default we don't show the attribute check box. mark this object as a listener for the check box.
WITHOUT_CLASSIFICATION	these are the positions of child figs inside this fig they must be added in the constructor in this order. for now the name must not be last as this would force zero width lines (until gef is fixed)
WITHOUT_CLASSIFICATION	add figs to the fignode in back-to-front order put this rectangle behind the rest so it goes first
WITHOUT_CLASSIFICATION	make the line dashed
WITHOUT_CLASSIFICATION	add an arrow with an open arrow head
WITHOUT_CLASSIFICATION	make the edge go between nearest points
WITHOUT_CLASSIFICATION	create a new version of the relevant fig
WITHOUT_CLASSIFICATION	the nodes at the two ends
WITHOUT_CLASSIFICATION	the figs for the two end nodes
WITHOUT_CLASSIFICATION	link the new include relationship in to the ends
WITHOUT_CLASSIFICATION	link the new dependency in to the ends
WITHOUT_CLASSIFICATION	side effect this creates the fig
WITHOUT_CLASSIFICATION	a use case has an external separator. external means external to the compartment box. this horizontal line sticks out of the box and touches the ellipse edge.
WITHOUT_CLASSIFICATION	by default do not show extension points
WITHOUT_CLASSIFICATION	use arbitrary dimensions for now.
WITHOUT_CLASSIFICATION	get the parent vector first
WITHOUT_CLASSIFICATION	formula for a is described in the overall class description.
WITHOUT_CLASSIFICATION	for an ellipse we can put the box in the middle
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#paint(java.awt.graphics)
WITHOUT_CLASSIFICATION	make the edge go between nearest points
WITHOUT_CLASSIFICATION	add menu to add an extension point or note. placed one before last so the "properties" entry is always last.
WITHOUT_CLASSIFICATION	where there is more than one supplier or client take the first element in each case. there really ought to be a check that there are some here for safety.
WITHOUT_CLASSIFICATION	modifier menu. placed one before last so the "properties" entry is always last.
WITHOUT_CLASSIFICATION	work out the radii of the ellipse a and b. the top right corner of the ellipse (cartesian coordinates centered on the origin) will be at (xy)
WITHOUT_CLASSIFICATION	result as integers rounded up. we ensure that the radii are integers for convenience.
WITHOUT_CLASSIFICATION	use the code from the figcircle not the one from fig.
WITHOUT_CLASSIFICATION	let's register for events from all modelelements that change the name or body text
WITHOUT_CLASSIFICATION	register for name changes added extensionpoints and abstract makes the text italic. all figs need to listen to "remove" too
WITHOUT_CLASSIFICATION	register for extension points
WITHOUT_CLASSIFICATION	set bounds will be called from our superclass constructor before our constructor has run so make sure this gets set up if needed.
WITHOUT_CLASSIFICATION	set up figtext to hold the condition.
WITHOUT_CLASSIFICATION	join all into a group
WITHOUT_CLASSIFICATION	uml spec for extend doesn't call for name nor stereotype
WITHOUT_CLASSIFICATION	make sure the line is dashed
WITHOUT_CLASSIFICATION	set up the property panels for use case diagrams
WITHOUT_CLASSIFICATION	actions specific to the use case diagram toolbar
WITHOUT_CLASSIFICATION	the renderer should be a singleton
WITHOUT_CLASSIFICATION	allow all packages and classifiers..
WITHOUT_CLASSIFICATION	try the predecessors
WITHOUT_CLASSIFICATION	if location is non-null convert to a rectangle that we can use
WITHOUT_CLASSIFICATION	todo this is using the default platform character encoding specifying an encoding will produce more predictable results
WITHOUT_CLASSIFICATION	the <<extend>> label. it's not a true stereotype so don't use the stereotype support int y = getnamefig().getbounds().height
WITHOUT_CLASSIFICATION	place in the middle of the line and ensure the line is dashed. add an arrow with an open arrow head. remember that for an extends relationship the arrow points to the base use case but because of the way we draw it that is still the destination end.
WITHOUT_CLASSIFICATION	let the group recalculate its bounds and then tell gef we've finished.
WITHOUT_CLASSIFICATION	we accept a package but not a model or a subsystem.
WITHOUT_CLASSIFICATION	if we do not exclude a model here then dropping the model on a usecase diagram causes a package to be drawn.
WITHOUT_CLASSIFICATION	empty list
WITHOUT_CLASSIFICATION	private constructor to enforce singleton
WITHOUT_CLASSIFICATION	some convenience methods
WITHOUT_CLASSIFICATION	read until the end section is found discard generated content
WITHOUT_CLASSIFICATION	constructor. <p> todo correct? @param nodes the uml elements typically classifiers to generate. @param inmodel <code>true</code> if the path is in the model.
WITHOUT_CLASSIFICATION	class table
WITHOUT_CLASSIFICATION	select buttons
WITHOUT_CLASSIFICATION	output directory
WITHOUT_CLASSIFICATION	compile checkbox
WITHOUT_CLASSIFICATION	todo the last argument (recursive flag) should be a selectable option
WITHOUT_CLASSIFICATION	skip backup files. this is actually a workaround for the cpp generator which always creates backup files (it's a bug).
WITHOUT_CLASSIFICATION	todo should be improved so that it's recognized whether there is something selected that can actually be generated nothing selected in the diagram
WITHOUT_CLASSIFICATION	todo this is using the default platform character encoding. specifying an encoding will produce more predictable results
WITHOUT_CLASSIFICATION	todo get saved default directory outputdirectorycombobox.getmodel().setselecteditem(saveddir)
WITHOUT_CLASSIFICATION	todo get default output directory from user settings project p = projectmanager.getmanager().getcurrentproject() p.getprojectsettings().setgenerationoutputdir(path)
WITHOUT_CLASSIFICATION	generate button --------------------------------------
WITHOUT_CLASSIFICATION	remove trailing /
WITHOUT_CLASSIFICATION	classify nodes by base path
WITHOUT_CLASSIFICATION	else ignore
WITHOUT_CLASSIFICATION	generate the files
WITHOUT_CLASSIFICATION	doesn't really matter what set we use.
WITHOUT_CLASSIFICATION	show filechooser to select outputdirectory
WITHOUT_CLASSIFICATION	end class classgenerationdialog
WITHOUT_CLASSIFICATION	end class tablemodelclasschecks
WITHOUT_CLASSIFICATION	try changing the direction of m7
WITHOUT_CLASSIFICATION	private constructor to enforce singleton
WITHOUT_CLASSIFICATION	the diagram already exists in this project. select it as the current target.
WITHOUT_CLASSIFICATION	tablemodel implementation
WITHOUT_CLASSIFICATION	argoeventpump.fireevent( new argoimporterevent(argoeventtypes.importer_added gen))
WITHOUT_CLASSIFICATION	check if this diagram already exists in the project
WITHOUT_CLASSIFICATION	otherwise create a new classdiagram for the package.
WITHOUT_CLASSIFICATION	if the classifier is not in the current diagram add it
WITHOUT_CLASSIFICATION	the following calls are order dependent. not sure why but the layer add must come before the model add or we'll end up with duplicate figures in the diagram. - tfm
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	the class is in the diagram so we are on a second pass find the fig for this class can update its visible state.
WITHOUT_CLASSIFICATION	add edges for a 2-pass r.e. process we might have already added the class but not its edges
WITHOUT_CLASSIFICATION	"java" is the default module for historical reasons but it's not required to be there
WITHOUT_CLASSIFICATION	the previous line helps but we better check again
WITHOUT_CLASSIFICATION	not a suffixfilter selected so we take all
WITHOUT_CLASSIFICATION	filter out all unchanged files
WITHOUT_CLASSIFICATION	set the lastmodified value
WITHOUT_CLASSIFICATION	return arrays.copyof(selectedfiles selectedfiles.length)
WITHOUT_CLASSIFICATION	iss.setvalue(countfiles + (i + 1) / 10)
WITHOUT_CLASSIFICATION	roughly equivalent to and derived from old import.dofile()
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.jfilechooser#approveselection()
WITHOUT_CLASSIFICATION	@see javax.swing.jfilechooser#cancelselection()
WITHOUT_CLASSIFICATION	new style importers don't create diagrams so we'll do it based on the list of newelements that they created
WITHOUT_CLASSIFICATION	do layout even if problems occurred during import
WITHOUT_CLASSIFICATION	add messages from caught exceptions
WITHOUT_CLASSIFICATION	select the correct diagram (implicitly creates it)
WITHOUT_CLASSIFICATION	add the element to the diagram
WITHOUT_CLASSIFICATION	print an exception trace to a string buffer
WITHOUT_CLASSIFICATION	todo get the list of extended settings from the current language importer and add those too
WITHOUT_CLASSIFICATION	level 0 import detail
WITHOUT_CLASSIFICATION	level 1 import detail
WITHOUT_CLASSIFICATION	level 2 import detail
WITHOUT_CLASSIFICATION	build the configpanel
WITHOUT_CLASSIFICATION	de-selects the fig minimising & layout if we are not creating diagrams
WITHOUT_CLASSIFICATION	select the level of import 0 - classifiers only 1 - classifiers plus feature specifications 2 - full import feature detail
WITHOUT_CLASSIFICATION	cp1252 is often the default but windows-1252 is the name listed by charset.availablecharsets
WITHOUT_CLASSIFICATION	get the extension panel for the configuration settings.
WITHOUT_CLASSIFICATION	explorereventadaptor.getinstance().structurechanged() projectbrowser.getinstance().getstatusbar().showprogress(0)
WITHOUT_CLASSIFICATION	create chooser for objects we are to import. old style modules get to provide their own (although i don't believe any of them do) while new style modules get the a chooser provided by us (which matches what the abstract class fileimportsupport used to provide).
WITHOUT_CLASSIFICATION	this is because of the (senseless?) "all files" filefilter
WITHOUT_CLASSIFICATION	parsing file x of z.
WITHOUT_CLASSIFICATION	progress bar
WITHOUT_CLASSIFICATION	for some reason this alleged directory is a single file this could be that there is some confusion or just the normal that a single file was selected and is supposed to be imported.
WITHOUT_CLASSIFICATION	get the contents of the directory
WITHOUT_CLASSIFICATION	the following test can cause trouble with links because links are accepted as directories even if they link files. links could also result in infinite loops. for this reason we don't do this traversing recursively.
WITHOUT_CLASSIFICATION	if this file is a directory
WITHOUT_CLASSIFICATION	todo add filename ?
WITHOUT_CLASSIFICATION	can't remove the last file
WITHOUT_CLASSIFICATION	can't remove from existing one so create new one.
WITHOUT_CLASSIFICATION	error/warning messagearea
WITHOUT_CLASSIFICATION	gbc.gridheight = 10
WITHOUT_CLASSIFICATION	cancel/close button
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	the introducing label
WITHOUT_CLASSIFICATION	user closing the progress window is interpreted as cancel request
WITHOUT_CLASSIFICATION	panel for controls
WITHOUT_CLASSIFICATION	this method can be called only if there's a valid selection so go ahead and remove whatever's selected.
WITHOUT_CLASSIFICATION	nothings left disable firing.
WITHOUT_CLASSIFICATION	select an index.
WITHOUT_CLASSIFICATION	removed item in last position
WITHOUT_CLASSIFICATION	just quit
WITHOUT_CLASSIFICATION	the text box containing the problem messages
WITHOUT_CLASSIFICATION	continue and abort buttons
WITHOUT_CLASSIFICATION	listeners
WITHOUT_CLASSIFICATION	stores the action command into the umlplaintextdocument class which is also used for setproperty and getproperty
WITHOUT_CLASSIFICATION	todo this seems to be called at startup only so no check so far
WITHOUT_CLASSIFICATION	add an invisible button to be used when everything is off
WITHOUT_CLASSIFICATION	| removed to workaround problems with autosplit ocleditor.optionmask_autosplit
WITHOUT_CLASSIFICATION	tabmodeltarget interface methods
WITHOUT_CLASSIFICATION	@see java.awt.event.componentlistener#componentshown(java.awt.event.componentevent)
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	update our model with our saved target
WITHOUT_CLASSIFICATION	there is no need to test if classes is empty because the shouldbeenabled mechanism blanks out the possibility to choose this alternative in this case.
WITHOUT_CLASSIFICATION	list classes = getcandidates() return classes.size() > 0
WITHOUT_CLASSIFICATION	our first button is invisible. selecting it deselects all visible buttons.
WITHOUT_CLASSIFICATION	set editor's model
WITHOUT_CLASSIFICATION	check ocl parsing constraints
WITHOUT_CLASSIFICATION	do not create a constraint
WITHOUT_CLASSIFICATION	parse and check specified constraint.
WITHOUT_CLASSIFICATION	ignored highly unlikely and what would we do anyway? log it
WITHOUT_CLASSIFICATION	split constraint body if user wants us to
WITHOUT_CLASSIFICATION	the constraint _must_ be owned by a namespace
WITHOUT_CLASSIFICATION	the constraint _must_ be owned by a namespace
WITHOUT_CLASSIFICATION	store constraint body
WITHOUT_CLASSIFICATION	new constraint first time setdata is called
WITHOUT_CLASSIFICATION	a runtime exception that occurs when some internal test fails
WITHOUT_CLASSIFICATION	check name for consistency with spec
WITHOUT_CLASSIFICATION	set name
WITHOUT_CLASSIFICATION	also set name in constraint body -- added 03/14/2001
WITHOUT_CLASSIFICATION	replace name
WITHOUT_CLASSIFICATION	ok so that didn't work out just ignore any problems and don't set the name in the constraint body better had log it.
WITHOUT_CLASSIFICATION	todo why is this ignored? - tfm - 20070110
WITHOUT_CLASSIFICATION	try predecessors
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	cmd.setobjects(run.getparams().get(0))
WITHOUT_CLASSIFICATION	@see java.awt.event.componentlistener#componenthidden(java.awt.event.componentevent)
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event
WITHOUT_CLASSIFICATION	we have no model event listeners so no need to do anything
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	do nothing by default.
WITHOUT_CLASSIFICATION	do nothing by default.
WITHOUT_CLASSIFICATION	todo i18n don't use the empty string for this or it won't show in the list
WITHOUT_CLASSIFICATION	it would be better if we didn't need the container to get the target. this constructor can have zero parameters as soon as we improve targetchanged.
WITHOUT_CLASSIFICATION	todo here too?
WITHOUT_CLASSIFICATION	todo here too?
WITHOUT_CLASSIFICATION	this should not be necessary but let's be sure
WITHOUT_CLASSIFICATION	end of interval
WITHOUT_CLASSIFICATION	start of interval
WITHOUT_CLASSIFICATION	remove old listeners
WITHOUT_CLASSIFICATION	in middle of interval
WITHOUT_CLASSIFICATION	allow listening to other elements
WITHOUT_CLASSIFICATION	allow listening to other elements
WITHOUT_CLASSIFICATION	add new listeners
WITHOUT_CLASSIFICATION	mvw this can never happen isn't it?
WITHOUT_CLASSIFICATION	makes sure we can select 'none'
WITHOUT_CLASSIFICATION	todo for large lists this is doing a linear search of literally thousands of elements
WITHOUT_CLASSIFICATION	don't try to test this if we're removing the element
WITHOUT_CLASSIFICATION	we tried to remove a value
WITHOUT_CLASSIFICATION	object[] args = { newvalue }
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see javax.swing.abstractlistmodel#fireintervalremoved( object int int)
WITHOUT_CLASSIFICATION	@see targetlistener#targetadded(targetevent)
WITHOUT_CLASSIFICATION	@see targetlistener#targetremoved(targetevent)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	if one or the other is null or they are not equal
WITHOUT_CLASSIFICATION	do not set buildingmodel = false here otherwise the action for selection is performed.
WITHOUT_CLASSIFICATION	catch callers attempting to use one without other
WITHOUT_CLASSIFICATION	as long as they aren't both null (or a really rare identical string pointer)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	todo this seems to be called at startup only so no check so far
WITHOUT_CLASSIFICATION	may only occur as child of the model or in a package
WITHOUT_CLASSIFICATION	to rupdate the diagram set the stimulus name again todo explain that this really works also in the mdr case. linus is a sceptic.
WITHOUT_CLASSIFICATION	if event source is unknown or the event source is the container's target then update the field
WITHOUT_CLASSIFICATION	check the possibility that this is a promiscuous event
WITHOUT_CLASSIFICATION	a deployment diagram shows something about the whole model according to the uml spec but we rely on the caller to enforce that if desired.
WITHOUT_CLASSIFICATION	a deployment diagram shows something about the whole model according to the uml spec
WITHOUT_CLASSIFICATION	for a deployment diagram not just any namespace will do - we need a package.
WITHOUT_CLASSIFICATION	ns is a namespace but not a package
WITHOUT_CLASSIFICATION	ommit root package name it's the model's root
WITHOUT_CLASSIFICATION	there is a selection
WITHOUT_CLASSIFICATION	end class actioncopy
WITHOUT_CLASSIFICATION	add a predicate for argouml's default capabilities
WITHOUT_CLASSIFICATION	parser.parseandupdate(modelobject s)
WITHOUT_CLASSIFICATION	remove from the model
WITHOUT_CLASSIFICATION	it is a uml element that is not a modelelement
WITHOUT_CLASSIFICATION	lets see if this diagram has some figs on it
WITHOUT_CLASSIFICATION	no content of diagram
WITHOUT_CLASSIFICATION	we can delete figs like figrects now too
WITHOUT_CLASSIFICATION	todo if a namespace with sub-classdiagrams is deleted then { confirmstr += translator.localize( "optionpane.remove-from-model-will-remove-subdiagram") doask = true }
WITHOUT_CLASSIFICATION	we cannot delete the last diagram
WITHOUT_CLASSIFICATION	we cannot delete the model itself
WITHOUT_CLASSIFICATION	static variables
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see javax.swing.text.document#remove(int int)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	argodiagram activediagram = diagramutils.getactivediagram() return (activediagram instanceof umlclassdiagram)
WITHOUT_CLASSIFICATION	todo probably really want to cancel editing ((figtexteditor) focusowner).cancelediting()
WITHOUT_CLASSIFICATION	usage of other sureremove method is legacy. they should be integrated.
WITHOUT_CLASSIFICATION	the diagram contains figs so lets ask the user if he/she is sure
WITHOUT_CLASSIFICATION	todo this catch block needs to be narrower and do something with the caught exception - tfm 20071120 ignore
WITHOUT_CLASSIFICATION	todo all of the following can be broken if we have multiple targets selected
WITHOUT_CLASSIFICATION	ok button ------------------------------------------
WITHOUT_CLASSIFICATION	delete button
WITHOUT_CLASSIFICATION	confirm with the user that he wants to delete presenting the list of settings to delete
WITHOUT_CLASSIFICATION	procede with the deletion in the model
WITHOUT_CLASSIFICATION	disable the button since no row will be selected now
WITHOUT_CLASSIFICATION	end class sourcepathdialog
WITHOUT_CLASSIFICATION	mutators hold write lock & will deadlock if use is not thread safe
WITHOUT_CLASSIFICATION	mutators hold write lock & will deadlock if use is not thread-safe
WITHOUT_CLASSIFICATION	the user cancelled!
WITHOUT_CLASSIFICATION	custom button text
WITHOUT_CLASSIFICATION	0
WITHOUT_CLASSIFICATION	1
WITHOUT_CLASSIFICATION	2
WITHOUT_CLASSIFICATION	3
WITHOUT_CLASSIFICATION	try some predecessor errors
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see javax.swing.text.document#remove(int int)
WITHOUT_CLASSIFICATION	try adding the extension from the chosen filter.
WITHOUT_CLASSIFICATION	adding project files icon
WITHOUT_CLASSIFICATION	main methods
WITHOUT_CLASSIFICATION	do not use a custom icon the titles of buttons default button title
WITHOUT_CLASSIFICATION	note this may be called from a different thread so we need to be careful of the threading restrictions imposed by abstractdocument for mutators to be sure we don't deadlock.
WITHOUT_CLASSIFICATION	end class actionopenproject
WITHOUT_CLASSIFICATION	todo see if the new target has a tv that we can proxy
WITHOUT_CLASSIFICATION	try adding the default extension.
WITHOUT_CLASSIFICATION	log.debug("is a base or multiplicity")
WITHOUT_CLASSIFICATION	end class actionsaveprojectas
WITHOUT_CLASSIFICATION	only need to this from super()
WITHOUT_CLASSIFICATION	--------------------------------------------------------
WITHOUT_CLASSIFICATION	----- setup similar to the super() implementation -----
WITHOUT_CLASSIFICATION	this action performs the layout and triggers a redraw of the editor pane. @see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	main methods
WITHOUT_CLASSIFICATION	main methods
WITHOUT_CLASSIFICATION	/ proxy methods for real umlmodelelementtaggedvalue /
WITHOUT_CLASSIFICATION	load of the new project just reuse of the actionopen object
WITHOUT_CLASSIFICATION	rearrange the diagram layout
WITHOUT_CLASSIFICATION	leave logging commented out by default for efficiency log.debug("determine rendering for " + value) log.debug("show icon " + showicon)
WITHOUT_CLASSIFICATION	targets ought to be uml objects or diagrams
WITHOUT_CLASSIFICATION	todo we shouldn't need this as well as the above.
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	end class tabprops
WITHOUT_CLASSIFICATION	if our map has any entries for this type it's a connection type
WITHOUT_CLASSIFICATION	get the list of valid model item pairs for the given connection type
WITHOUT_CLASSIFICATION	see if there's a pair in this list that match the given model elements
WITHOUT_CLASSIFICATION	@see targettablemodelview#gettargettablemodel()
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#changedupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#removeupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#insertupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	we tried to remove a value
WITHOUT_CLASSIFICATION	put everything together
WITHOUT_CLASSIFICATION	no title looks better
WITHOUT_CLASSIFICATION	now remove the ones already applied.
WITHOUT_CLASSIFICATION	make lists
WITHOUT_CLASSIFICATION	make buttons
WITHOUT_CLASSIFICATION	ignored this event
WITHOUT_CLASSIFICATION	make buttons layout
WITHOUT_CLASSIFICATION	make listeners
WITHOUT_CLASSIFICATION	remove the element from available list
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	@see javax.swing.action#isenabled()
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.comboboxeditor#setitem(java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.comboboxeditor#geteditorcomponent()
WITHOUT_CLASSIFICATION	@see javax.swing.comboboxeditor#addactionlistener(java.awt.event.actionlistener)
WITHOUT_CLASSIFICATION	@see javax.swing.comboboxeditor#removeactionlistener(java.awt.event.actionlistener)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	implements the source path controller. note if requested in the future this could be returned from the language modules. todo update this to use the uml 1.4 tagdefinition mechanism instead of uml 1.3 string type tag types. the tagdefinition can be made more specific so that it just applies to components with a <<sourcemodule>> stereotype or something similar. - tfm @author euluis @since 0.17.1
WITHOUT_CLASSIFICATION	end of sourcepathcontrollerimpl class definition
WITHOUT_CLASSIFICATION	sb.append(model.getfacade().getname(c))
WITHOUT_CLASSIFICATION	sb.append((string) model.getfacade().getbody(c))
WITHOUT_CLASSIFICATION	mmodelelement
WITHOUT_CLASSIFICATION	next statement is necessary to update the textfield if the selection is equal to what was allready selected
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see javax.swing.comboboxeditor#selectall()
WITHOUT_CLASSIFICATION	@see javax.swing.comboboxeditor#getitem()
WITHOUT_CLASSIFICATION	@see java.awt.event.focuslistener#focusgained(java.awt.event.focusevent)
WITHOUT_CLASSIFICATION	@see javax.swing.action#isenabled()
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	necessary to create distance between the textfield and the icon.
WITHOUT_CLASSIFICATION	make new column with labelledlayout
WITHOUT_CLASSIFICATION	comment.name text field - editing disabled
WITHOUT_CLASSIFICATION	comment.body text field - editing disabled
WITHOUT_CLASSIFICATION	since there are no buttons on this panel we have to set the size of the buttonpanel otherwise the title would not be aligned right.
WITHOUT_CLASSIFICATION	only change the background colour if it is supplied by the laf. otherwise leave look and feel to handle this itself.
WITHOUT_CLASSIFICATION	in this case the bounds are determined by the figedge
WITHOUT_CLASSIFICATION	in this case the bounds are determined by the figedge
WITHOUT_CLASSIFICATION	in this case the bounds (of the box) are determined by the figclassassociationclass
WITHOUT_CLASSIFICATION	in this case the bounds (of the box) are determined by the figclassassociationclass
WITHOUT_CLASSIFICATION	a newly created associationclass may not have all its parts created by the time we are called
WITHOUT_CLASSIFICATION	a newly created associationclass may not have all its parts created by the time we are called
WITHOUT_CLASSIFICATION	todo defer most of this work if the panel isn't visible - tfm
WITHOUT_CLASSIFICATION	@see targetlistener#targetadded(targetevent)
WITHOUT_CLASSIFICATION	@see targetlistener#targetremoved(targetevent)
WITHOUT_CLASSIFICATION	@see targetlistener#targetset(targetevent)
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	how to handle empty target lists? probably the tabprops should only show an empty pane in that case
WITHOUT_CLASSIFICATION	chooser.setselectedfile(new file(filename))
WITHOUT_CLASSIFICATION	so let's do it the hard way
WITHOUT_CLASSIFICATION	todo the following can be used when we drop java 5 support or when an imageio gif writer plugin is bundled cmd = new savegifaction2(translator.localize("action.save-gif"))
WITHOUT_CLASSIFICATION	if the diagram is empty gef won't write anything leaving us with an empty (and invalid) file. handle this case ourselves to prevent this from happening.
WITHOUT_CLASSIFICATION	anything else is handled the normal way
WITHOUT_CLASSIFICATION	create an image which will do deferred rendering of the gef diagram on demand as data is pulled from it
WITHOUT_CLASSIFICATION	action to save a diagram as a gif image in a supplied outputstream. todo this requires java 6 in its current state so don't use. @author tom morris <tfmorris@gmail.com>
WITHOUT_CLASSIFICATION	note gef's gif writer uses jeff poskanzer's gif encoder but that saves a copy of the entire image in an internal buffer before starting work defeating the whole purpose of our incremental rendering.
WITHOUT_CLASSIFICATION	java se 6 has a native gif writer but it's not in java 5. one is available in the jai-imageio library but we don't currently bundle that and at 6+ mb it seems like a heavyweight solution but i don't have time to produce a stripped down version right now - tfm httpsjai-imageio.dev.java.net/
WITHOUT_CLASSIFICATION	layerperspective layer = diagramutils.getactivediagram().getlayer()
WITHOUT_CLASSIFICATION	anything else is handled the normal way
WITHOUT_CLASSIFICATION	create an image which will do deferred rendering of the gef diagram on demand as data is pulled from it
WITHOUT_CLASSIFICATION	action to save a diagram as a gif image in a supplied outputstream. todo this requires java 6 in its current state so don't use. @author tom morris <tfmorris@gmail.com>
WITHOUT_CLASSIFICATION	we actually are computing max x & max y not width & height
WITHOUT_CLASSIFICATION	convert max x/y to width/height
WITHOUT_CLASSIFICATION	get a domimplementation
WITHOUT_CLASSIFICATION	create an instance of org.w3c.dom.document
WITHOUT_CLASSIFICATION	create an instance of the svg generator
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#changedupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	layerperspective layer = diagramutils.getactivediagram().getlayer()
WITHOUT_CLASSIFICATION	we actually are computing max x & max y not width & height
WITHOUT_CLASSIFICATION	convert max x/y to width/height
WITHOUT_CLASSIFICATION	get a domimplementation
WITHOUT_CLASSIFICATION	create an instance of org.w3c.dom.document
WITHOUT_CLASSIFICATION	create an instance of the svg generator
WITHOUT_CLASSIFICATION	make it stretch vertically
WITHOUT_CLASSIFICATION	"org.argouml.cognitive.critics"
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getcolumncount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getcolumnname(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getcolumnclass(int)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	handle multivalued tagged value
WITHOUT_CLASSIFICATION	handle multivalued tagged value
WITHOUT_CLASSIFICATION	target has been deleted
WITHOUT_CLASSIFICATION	if the row is past the end of our current collection return an empty string so they can add a new value
WITHOUT_CLASSIFICATION	tagvalue = true
WITHOUT_CLASSIFICATION	for debugging
WITHOUT_CLASSIFICATION	return the ith element from a collection. @param collection collection to get element from @param index index of the element to be returned @return the object
WITHOUT_CLASSIFICATION	we really shouldn't add it until after it is set up but we need it to have an owner for the following method calls
WITHOUT_CLASSIFICATION	since we aren't sure of ordering fire event for whole table
WITHOUT_CLASSIFICATION	no way we have to give up
WITHOUT_CLASSIFICATION	do nothing during the deprecation period then it can be removed.
WITHOUT_CLASSIFICATION	@see javax.swing.defaultlistmodel#contains(java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.defaultlistmodel#addelement(java.lang.object)
WITHOUT_CLASSIFICATION	@see targetlistener#targetadded(targetevent)
WITHOUT_CLASSIFICATION	@see targetlistener#targetremoved(targetevent)
WITHOUT_CLASSIFICATION	@see targetlistener#targetset(targetevent)
WITHOUT_CLASSIFICATION	@see javax.swing.abstractlistmodel#firecontentschanged( object int int)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	do nothing by default.
WITHOUT_CLASSIFICATION	do nothing by default.
WITHOUT_CLASSIFICATION	allow listening to other elements
WITHOUT_CLASSIFICATION	allow listening to other elements
WITHOUT_CLASSIFICATION	we tried to remove a value
WITHOUT_CLASSIFICATION	get the first editable extent (which is ok unless there is more than one editable extent)
WITHOUT_CLASSIFICATION	this can throw an exception if the target has been deleted. we don't want to try locking the repository because this is called from the event delivery thread and could cause a deadlock. instead catch the exception and leave the model empty.
WITHOUT_CLASSIFICATION	end class actionimportfromsources
WITHOUT_CLASSIFICATION	don't test changed element if it was deleted
WITHOUT_CLASSIFICATION	this is never downlighted
WITHOUT_CLASSIFICATION	only specified format are allowed.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see targetlistener#targetadded(targetevent)
WITHOUT_CLASSIFICATION	@see targetlistener#targetremoved(targetevent)
WITHOUT_CLASSIFICATION	@see targetlistener#targetset(targetevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.componentlistener#componenthidden(java.awt.event.componentevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.componentlistener#componentshown(java.awt.event.componentevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.componentlistener#componentmoved(java.awt.event.componentevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.componentlistener#componentresized(java.awt.event.componentevent)
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	add stereotypes submenu
WITHOUT_CLASSIFICATION	set up the target and its model element variant.
WITHOUT_CLASSIFICATION	set the tooltip of the arrow to open combined tools
WITHOUT_CLASSIFICATION	if the target has changed notify the third party listener if it exists and dispatch a new element event listener to ourself. otherwise dispatch a target reasserted to ourself.
WITHOUT_CLASSIFICATION	set the minimum and preferred equal so that the size is fixed for the labelledlayout.
WITHOUT_CLASSIFICATION	this will add a new modelelement event listener after update is complete
WITHOUT_CLASSIFICATION	we presume that the container equals this proppanel.
WITHOUT_CLASSIFICATION	refresh the target for all our children which weren't getting while not visible
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(actionevent)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	this works - we do get an event - and now refresh the ui
WITHOUT_CLASSIFICATION	to manage the case there are no label/component pairs but just one component
WITHOUT_CLASSIFICATION	if the component is a jlabel which has another component assigned then position/size the label and calculate the size of the registered component
WITHOUT_CLASSIFICATION	assumes the next child is the labelled component
WITHOUT_CLASSIFICATION	make sure the component width isn't any greater than its maximum allowed width
WITHOUT_CLASSIFICATION	if the child component is resizable then we don't know it's actual size yet. it will be calculated later as a proportion of the available left over space. for now this is flagged as zero.
WITHOUT_CLASSIFICATION	if a preferred height is not given or is the same as the minimum height then fix the height of this row.
WITHOUT_CLASSIFICATION	project p = projectmanager.getmanager().getcurrentproject() collection elems = modelmanagementhelper.gethelper() .getallmodelelementsofkind(mclassifier.class)
WITHOUT_CLASSIFICATION	expressions are datatypes not independent model elements be careful not to reuse them
WITHOUT_CLASSIFICATION	allow listening to other elements removeothermodeleventlisteners(listtarget)
WITHOUT_CLASSIFICATION	setdoublebuffered(true)
WITHOUT_CLASSIFICATION	try some more complex moving
WITHOUT_CLASSIFICATION	implements backspace functionality
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.action#isenabled()
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.caretlistener#caretupdate(javax.swing.event.caretevent)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	do nothing by default.
WITHOUT_CLASSIFICATION	do nothing by default.
WITHOUT_CLASSIFICATION	allow listening to other elements
WITHOUT_CLASSIFICATION	allow listening to other elements
WITHOUT_CLASSIFICATION	we tried to remove a value
WITHOUT_CLASSIFICATION	there is a selection
WITHOUT_CLASSIFICATION	this can throw an exception if the target has been deleted. we don't want to try locking the repository because this is called from the event delivery thread and could cause a deadlock. instead catch the exception and leave the model empty.
WITHOUT_CLASSIFICATION	don't test changed element if it was deleted
WITHOUT_CLASSIFICATION	end class actioncut
WITHOUT_CLASSIFICATION	allow listening to other elements addothermodeleventlisteners(listtarget)
WITHOUT_CLASSIFICATION	if there is a selection on the clipboard
WITHOUT_CLASSIFICATION	get localised strings once only
WITHOUT_CLASSIFICATION	setting the icon
WITHOUT_CLASSIFICATION	setting the tooltip to type and name
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	static variables
WITHOUT_CLASSIFICATION	@see javax.swing.event.listselectionlistener#valuechanged(javax.swing.event.listselectionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.componentlistener#componentshown(java.awt.event.componentevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.componentlistener#componenthidden(java.awt.event.componentevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	update our model with our saved target
WITHOUT_CLASSIFICATION	stop updating model when we're not visible
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	in uml2 a td is a property of a stereotype in a profile
WITHOUT_CLASSIFICATION	only update our model if we're visible
WITHOUT_CLASSIFICATION	most likely cause of this is that someone deleted our target with the event pump turned off so we didn't get notification. nothing we can do about it now and we are changing targets anyway so just log it.
WITHOUT_CLASSIFICATION	this target is a statemachine for which no diagram exists yet so let's use it.
WITHOUT_CLASSIFICATION	end class tabtaggedvalues
WITHOUT_CLASSIFICATION	setenabled((globals.clipboard != null && !globals.clipboard.isempty()) || !issystemclipboardempty())
WITHOUT_CLASSIFICATION	end class actionpaste
WITHOUT_CLASSIFICATION	the target is a valid context.
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(actionevent)
WITHOUT_CLASSIFICATION	@see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed( java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.action#isenabled()
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	let's just build a statemachine and put it in a suitable namespace.
WITHOUT_CLASSIFICATION	follow well-formedness rule for a class [2]. determine the owning namespace for the statemachine
WITHOUT_CLASSIFICATION	upperpanel.setborder(borderfactory.createetchedborder())
WITHOUT_CLASSIFICATION	buttonbox.add(box.createrigidarea(new dimension(0 20)))
WITHOUT_CLASSIFICATION	string title = getui().getdialogtitle(this)
WITHOUT_CLASSIFICATION	test if the given namespace is a valid namespace to add the diagram to. todo this method was created to facilitate the merge of this class with actionadddiagram. @param ns the namespace to check @return returns <code>true</code> if valid.
WITHOUT_CLASSIFICATION	todo since there may be multiple top level elements in a project this should be using the default namespace (currently undefined) or something similar
WITHOUT_CLASSIFICATION	button action
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	make sure it's parseable as an number
WITHOUT_CLASSIFICATION	ignored - we just skipped inserting it in our document
WITHOUT_CLASSIFICATION	select.settext(translator.localize("action.select"))
WITHOUT_CLASSIFICATION	select.add(actionaddeventasdeferrableevent.singleton)
WITHOUT_CLASSIFICATION	newmenu.settext(translator.localize("action.new"))
WITHOUT_CLASSIFICATION	(mextend)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	main methods
WITHOUT_CLASSIFICATION	repair action for possible np after load
WITHOUT_CLASSIFICATION	(mclassifier)
WITHOUT_CLASSIFICATION	try some more errors
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	(mmodelelement)
WITHOUT_CLASSIFICATION	to be able to remove dep's later
WITHOUT_CLASSIFICATION	to be able to remove dependencies later
WITHOUT_CLASSIFICATION	addonly_command determines a changeability kind. todo removed from uml 2.x. phase out of ui - tfm - 20070529
WITHOUT_CLASSIFICATION	todo removed from uml 2.x - phase out usage - tfm 20070530
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	because we're listening for stereotypes being added and removed but we're really interested in their owned tag definitions the default implementation won't work for us
WITHOUT_CLASSIFICATION	end class actionaddattribute
WITHOUT_CLASSIFICATION	ask to be notified of any changes to tagdefinitions so that we can track new ones name changes etc
WITHOUT_CLASSIFICATION	since uml2 it's easier tds only via stereotypes
WITHOUT_CLASSIFICATION	just mark for rebuild next time since we use lazy loading
WITHOUT_CLASSIFICATION	a stereotype got applied or removed just mark for rebuild next time since we use lazy loading
WITHOUT_CLASSIFICATION	@see namespace#pushnamespaceelement(namespaceelement)
WITHOUT_CLASSIFICATION	@see java.lang.object#hashcode()
WITHOUT_CLASSIFICATION	@see org.tigris.swidgets.dialog#namebuttons()
WITHOUT_CLASSIFICATION	all strings collate before all uml elements
WITHOUT_CLASSIFICATION	all strings collate before all uml elements
WITHOUT_CLASSIFICATION	compare path of two elements in reverse order (inner to outer) using a primary strength text collator. this will collate e e � � together but not eliminate non-identical strings which collate in the same place. @return equivalent of list1.compareto(list2)
WITHOUT_CLASSIFICATION	and then by their enclosing path to fully distinguish them
WITHOUT_CLASSIFICATION	elements are collated first by name hoping for a quick solution
WITHOUT_CLASSIFICATION	keep track of first non-equal comparison to use in case the case-insensitive comparisons all end up equal
WITHOUT_CLASSIFICATION	add the action to the component
WITHOUT_CLASSIFICATION	it's illegal in uml to have multiple elements in a namespace with the same name but if it happens keep them distinct so the user has a chance of catching the error. pick an arbitrary but stable collating order. we don't call them equal because otherwise one will get eliminated from the treeset where this comparator is used.
WITHOUT_CLASSIFICATION	if the strings differed only in non-primary characteristics at some point (case accent etc) pick an arbitrary but stable collating order.
WITHOUT_CLASSIFICATION	{transient=false volatile=false}
WITHOUT_CLASSIFICATION	argo customization
WITHOUT_CLASSIFICATION	prohibit instantiation
WITHOUT_CLASSIFICATION	keyevent.isactionkey() method
WITHOUT_CLASSIFICATION	apparently this object had no getitemuid
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	apparently this object had no getuuid
WITHOUT_CLASSIFICATION	apparently it had a getitemuid but we're not allowed to call it
WITHOUT_CLASSIFICATION	apparently it had a getitemuid but we're not allowed to call it
WITHOUT_CLASSIFICATION	apparently it had a getitemuid but we're not allowed to call it
WITHOUT_CLASSIFICATION	apparently this object had no setitemuid
WITHOUT_CLASSIFICATION	apparently it had a setitemuid but we're not allowed to call it
WITHOUT_CLASSIFICATION	apparently it had a setitemuid but we're not allowed to call it
WITHOUT_CLASSIFICATION	class preloading so packages are there
WITHOUT_CLASSIFICATION	getpackage() can return null's so we have to cater for this
WITHOUT_CLASSIFICATION	make this thread interruptible if called from swingworker
WITHOUT_CLASSIFICATION	switch the value back off so that we will get notified again next time.
WITHOUT_CLASSIFICATION	ignore any nested exceptions. we don't want infinite loop.
WITHOUT_CLASSIFICATION	didn't work.
WITHOUT_CLASSIFICATION	create a proxy object around this handler that can be reflectively added as an apple applicationlistener
WITHOUT_CLASSIFICATION	likely a nosuchmethodexception or an illegalaccessexception loading/invoking eawt.application methods
WITHOUT_CLASSIFICATION	all of the applicationlistener methods are void return null regardless of what happens
WITHOUT_CLASSIFICATION	if the target method returns a boolean use that as a hint
WITHOUT_CLASSIFICATION	for eclipse setup
WITHOUT_CLASSIFICATION	for ant setup
WITHOUT_CLASSIFICATION	when running from maven
WITHOUT_CLASSIFICATION	if we're setting a handler enable the about menu item by calling com.apple.eawt.application reflectively
WITHOUT_CLASSIFICATION	if we're setting a handler enable the preferences menu item by calling com.apple.eawt.application reflectively
WITHOUT_CLASSIFICATION	override osxadapter.calltarget to send information on the file to be opened
WITHOUT_CLASSIFICATION	ignore if the directory does not exist. this error will throw when running from the ant setup.
WITHOUT_CLASSIFICATION	ignore if the directory does not exist. this error will throw when running from the eclipse setup.
WITHOUT_CLASSIFICATION	ignore if the directory does not exist. this error will throw when running from the eclipse setup.
WITHOUT_CLASSIFICATION	"org.argouml.notation.providers"fails because sub-packages fail (?) "org.argouml.notation.providers.java" "org.argouml.notation.providers.uml" "org.argouml.notation"fails because sub-packages fail (?) "org.argouml.notation.ui"
WITHOUT_CLASSIFICATION	there was a comment saying that the below has no cycles but classycle thinks there's a cycle here too so i believe there really is one - tfm 20070702 "org.argouml.uml.cognitive.critics"
WITHOUT_CLASSIFICATION	todo{"org.argouml.ui" "org.argouml.cognitive.ui"}fails due to subpackages todo{"org.argouml.cognitive" "org.argouml.cognitive.critics"}
WITHOUT_CLASSIFICATION	{"org.argouml.kernel" "org.argouml.uml.diagram.ui"}why does this fail?
WITHOUT_CLASSIFICATION	do nothing by design
WITHOUT_CLASSIFICATION	these 3 steps are only needed for the 2 cases indicated with a x below.
WITHOUT_CLASSIFICATION	obey the contract ourselves!
WITHOUT_CLASSIFICATION	register all of the event listener trackers
WITHOUT_CLASSIFICATION	remove all of the listeners
WITHOUT_CLASSIFICATION	fire all of the diagram events
WITHOUT_CLASSIFICATION	fire all of the generator events
WITHOUT_CLASSIFICATION	fire all of the help events
WITHOUT_CLASSIFICATION	fire all of the notation events
WITHOUT_CLASSIFICATION	verify all events were fired correctly
WITHOUT_CLASSIFICATION	keep track of total events fired
WITHOUT_CLASSIFICATION	keep track of which events fired
WITHOUT_CLASSIFICATION	x x
WITHOUT_CLASSIFICATION	initialize the event listener trackers which verify that all of the proper events were fired
WITHOUT_CLASSIFICATION	display events are fired on the swing event thread. we need to wait for them to be dispatched note if more display events are added to this test this one needs to be last
WITHOUT_CLASSIFICATION	notation events are fired on the swing event thread. we assume that serializing on the final call is sufficient
WITHOUT_CLASSIFICATION	counts each bit that has been fired
WITHOUT_CLASSIFICATION	resolvedcritic(string list)
WITHOUT_CLASSIFICATION	resolvedcritic(critic listset)
WITHOUT_CLASSIFICATION	resolvedcritic(critic listset boolean)
WITHOUT_CLASSIFICATION	testmc should now have an itemuid so we should be able to create without adding a new itemuid
WITHOUT_CLASSIFICATION	enabledcm isrelevant checks if the critic is enabled initialize this to true to verify isrelevant returns true
WITHOUT_CLASSIFICATION	verify isrelevant returns true
WITHOUT_CLASSIFICATION	set enabled to false and check the opposite condition
WITHOUT_CLASSIFICATION	verify isrelevant not is false
WITHOUT_CLASSIFICATION	notsnoozedcm isrelevant checks if the critic is snoozed snooze the critic to verify isrelevant returns false
WITHOUT_CLASSIFICATION	unsnooze the critic to verify the critic is not relevant
WITHOUT_CLASSIFICATION	verify isrelevant is true
WITHOUT_CLASSIFICATION	curdecisioncm isrelevant checks to see if the critic has any decisions that have a priority > 0 and less than the priority of the critic. by default the critic has no decisions so isrelevant should return false.
WITHOUT_CLASSIFICATION	verify isrelevant is still false
WITHOUT_CLASSIFICATION	isrelevant should now be true
WITHOUT_CLASSIFICATION	isrelevant should still be true
WITHOUT_CLASSIFICATION	initialize test data
WITHOUT_CLASSIFICATION	initialize the todolist
WITHOUT_CLASSIFICATION	add a todoitem
WITHOUT_CLASSIFICATION	redundantly add item again which should be ignored
WITHOUT_CLASSIFICATION	size should be 1 since addition of second item would have been ignored
WITHOUT_CLASSIFICATION	retrieve item
WITHOUT_CLASSIFICATION	remove item
WITHOUT_CLASSIFICATION	size should be 0 since item was removed
WITHOUT_CLASSIFICATION	initialize the goalmodel
WITHOUT_CLASSIFICATION	check that the model was initialized with the unspecified goal
WITHOUT_CLASSIFICATION	change priority of unspecified goal so we can verify it was updated
WITHOUT_CLASSIFICATION	first verify that the set goal priority did not add an extra goal
WITHOUT_CLASSIFICATION	check that the model correctly updates a goal's priority
WITHOUT_CLASSIFICATION	test the removal of a goal
WITHOUT_CLASSIFICATION	number of goals should now be 0
WITHOUT_CLASSIFICATION	start desiring a goal which should add a goal and bump the size to 1
WITHOUT_CLASSIFICATION	number of goals should now be 1
WITHOUT_CLASSIFICATION	stop desiring the goal which should remove it from the model
WITHOUT_CLASSIFICATION	umlsequencediagram seqdiag = new umlsequencediagram()
WITHOUT_CLASSIFICATION	initialize test data
WITHOUT_CLASSIFICATION	this test calls todolist.addelement which requires the model. we are able to get away with using the mock model.
WITHOUT_CLASSIFICATION	checkassignidtoobject(seqdiag true true)
WITHOUT_CLASSIFICATION	figedgenote has no uuid
WITHOUT_CLASSIFICATION	checkassignidtoobject(figassociationrole true true)
WITHOUT_CLASSIFICATION	checkassignidtoobject(fighistorystate true true)
WITHOUT_CLASSIFICATION	checkassignidtoobject(figstate true true)
WITHOUT_CLASSIFICATION	initialize basic parameters that are different from decision.unspec
WITHOUT_CLASSIFICATION	initialize a decision object with parameters
WITHOUT_CLASSIFICATION	initialize a decision object with parameters
WITHOUT_CLASSIFICATION	verify parameters were initialized correctly by the constructor
WITHOUT_CLASSIFICATION	set the priority to a different value
WITHOUT_CLASSIFICATION	set the priority to a different value
WITHOUT_CLASSIFICATION	verify the priority was correctly updated
WITHOUT_CLASSIFICATION	verify the priority was correctly updated
WITHOUT_CLASSIFICATION	set the name to a different value
WITHOUT_CLASSIFICATION	set the name to a different value
WITHOUT_CLASSIFICATION	verify the name property was correctly updated
WITHOUT_CLASSIFICATION	following the update the priority should be equivalent to decision.unspec
WITHOUT_CLASSIFICATION	test that properties were correctly initialized by the constructor
WITHOUT_CLASSIFICATION	initialize the checklist
WITHOUT_CLASSIFICATION	add some test data
WITHOUT_CLASSIFICATION	add some test data
WITHOUT_CLASSIFICATION	verify the size of the list
WITHOUT_CLASSIFICATION	verify the size of the list
WITHOUT_CLASSIFICATION	verify the items were correctly added
WITHOUT_CLASSIFICATION	verify the items were correctly added
WITHOUT_CLASSIFICATION	test that the category and description are correct
WITHOUT_CLASSIFICATION	create a new list to test the addall
WITHOUT_CLASSIFICATION	create a new list to test the addall
WITHOUT_CLASSIFICATION	add all of the test items from the first list
WITHOUT_CLASSIFICATION	add all of the test items from the first list
WITHOUT_CLASSIFICATION	verify the size of the new list
WITHOUT_CLASSIFICATION	verify the size of the new list
WITHOUT_CLASSIFICATION	initialize the checkliststatus
WITHOUT_CLASSIFICATION	construct a checkitem
WITHOUT_CLASSIFICATION	(1) test that the properties were correctly initialized
WITHOUT_CLASSIFICATION	reset the values to something different
WITHOUT_CLASSIFICATION	(2) construct another checkitem
WITHOUT_CLASSIFICATION	test that the properties were correctly initialized
WITHOUT_CLASSIFICATION	verify that the equivalence test works
WITHOUT_CLASSIFICATION	initialize snoozeorder
WITHOUT_CLASSIFICATION	snooze and verify its been enabled
WITHOUT_CLASSIFICATION	unsnooze and verify its been disabled
WITHOUT_CLASSIFICATION	maybe next test is going to change in future
WITHOUT_CLASSIFICATION	test with a class in a package
WITHOUT_CLASSIFICATION	let's make it a bit more difficult by setting the target
WITHOUT_CLASSIFICATION	test with a class and an inner class
WITHOUT_CLASSIFICATION	test with a class and an inner class
WITHOUT_CLASSIFICATION	test with a class and class diagram
WITHOUT_CLASSIFICATION	test with a class and class diagram
WITHOUT_CLASSIFICATION	try with statediagram
WITHOUT_CLASSIFICATION	try with statediagram
WITHOUT_CLASSIFICATION	try with statediagram
WITHOUT_CLASSIFICATION	try with statediagram
WITHOUT_CLASSIFICATION	put the statemachine in the namespace of the class
WITHOUT_CLASSIFICATION	test with a package and a class and activity diagram
WITHOUT_CLASSIFICATION	test with a package and a class and activity diagram
WITHOUT_CLASSIFICATION	build the activity diagram
WITHOUT_CLASSIFICATION	build the activity diagram
WITHOUT_CLASSIFICATION	in the next line replacing makeemptyproject by getcurrentproject fails the test except when run in eclipse. mvw i have no idea why.
WITHOUT_CLASSIFICATION	we no longer send individual events so next code is obsolete
WITHOUT_CLASSIFICATION	we initialised java notation so let's activate it
WITHOUT_CLASSIFICATION	needed for initialisations
WITHOUT_CLASSIFICATION	set metaprofile as a default profile
WITHOUT_CLASSIFICATION	create a dependency from the project's model to the metaprofile
WITHOUT_CLASSIFICATION	remove the metaprofile from the project's profile configuration
WITHOUT_CLASSIFICATION	save the project into a new file
WITHOUT_CLASSIFICATION	setup a user defined profile
WITHOUT_CLASSIFICATION	try guard/iterator syntax
WITHOUT_CLASSIFICATION	create a new project and assert that it has the metaprofile as part of the project's profile configuration
WITHOUT_CLASSIFICATION	assert that the project's model element that had a dependency to the metaprofile doesn't get inconsistent
WITHOUT_CLASSIFICATION	reopen the project and assert that the metaprofile isn't part of the profile configuration including the fact that the stereotype <<critic>> isn't found
WITHOUT_CLASSIFICATION	assert that the project's model elements that had a dependency to the uml profile for java are consistent
WITHOUT_CLASSIFICATION	add it to the project configuration
WITHOUT_CLASSIFICATION	add it to the project configuration
WITHOUT_CLASSIFICATION	create a dependency between the project's model and the user defined profile
WITHOUT_CLASSIFICATION	create a dependency between the project's model and the user defined profile
WITHOUT_CLASSIFICATION	save the project
WITHOUT_CLASSIFICATION	save the project
WITHOUT_CLASSIFICATION	load the project
WITHOUT_CLASSIFICATION	assert that the model element that depends on the profile is consistent
WITHOUT_CLASSIFICATION	remove the user defined profile and the directory where it is
WITHOUT_CLASSIFICATION	success - expected exception
WITHOUT_CLASSIFICATION	clean up after ourselves by deleting profile model
WITHOUT_CLASSIFICATION	test both forms of addbaseclass
WITHOUT_CLASSIFICATION	test remaining form of removebaseclass
WITHOUT_CLASSIFICATION	by default the build already builds one default ep
WITHOUT_CLASSIFICATION	$junit-begin$
WITHOUT_CLASSIFICATION	$junit-end$
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#teardown()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	flag to enable performance testing - off by default
WITHOUT_CLASSIFICATION	initialize the model and profile subsystems to simulate a fresh argouml session
WITHOUT_CLASSIFICATION	20 sec.
WITHOUT_CLASSIFICATION	add one child.
WITHOUT_CLASSIFICATION	performance testing parameters
WITHOUT_CLASSIFICATION	add grandchild.
WITHOUT_CLASSIFICATION	create a generalizable element with an element without children.
WITHOUT_CLASSIFICATION	check periodically to see if we've exceeded time limit
WITHOUT_CLASSIFICATION	add another child.
WITHOUT_CLASSIFICATION	tree is created depth first so this should be at the bottom
WITHOUT_CLASSIFICATION	try changing namespace of element and make sure results track
WITHOUT_CLASSIFICATION	populate our namespace hierarchy to the requested depth. total number of created elements is children^maxlevel so be careful not to increase parameters too much.
WITHOUT_CLASSIFICATION	try some guard/iterator errors
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#testcase(string)
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	make sure we have a root model for tagdefinitions to get put in.
WITHOUT_CLASSIFICATION	create the tree of objects
WITHOUT_CLASSIFICATION	copy package p1 into p2 package
WITHOUT_CLASSIFICATION	change the structure in p1 package
WITHOUT_CLASSIFICATION	verify the copied package
WITHOUT_CLASSIFICATION	verify the copied class
WITHOUT_CLASSIFICATION	verify the copied nested package and the copied interface
WITHOUT_CLASSIFICATION	verify the copied attribute
WITHOUT_CLASSIFICATION	see if we can copy a class right off
WITHOUT_CLASSIFICATION	change things
WITHOUT_CLASSIFICATION	change things
WITHOUT_CLASSIFICATION	change things
WITHOUT_CLASSIFICATION	change things
WITHOUT_CLASSIFICATION	assert that the copy isn't modified when the source changes
WITHOUT_CLASSIFICATION	assert that the copy isn't modified when the source changes
WITHOUT_CLASSIFICATION	see if the other copy was just a lucky shot
WITHOUT_CLASSIFICATION	see if the other copy was just a lucky shot
WITHOUT_CLASSIFICATION	see if the other copy was just a lucky shot
WITHOUT_CLASSIFICATION	see if the other copy was just a lucky shot
WITHOUT_CLASSIFICATION	see if the other copy was just a lucky shot
WITHOUT_CLASSIFICATION	see if two copies look like copies of eachother
WITHOUT_CLASSIFICATION	see if two copies look like copies of eachother
WITHOUT_CLASSIFICATION	see if two copies look like copies of eachother
WITHOUT_CLASSIFICATION	see if we can copy a datatype right off
WITHOUT_CLASSIFICATION	see if two copies look like copies of each other
WITHOUT_CLASSIFICATION	see if two copies look like copies of each other
WITHOUT_CLASSIFICATION	see if we can copy an interface right off
WITHOUT_CLASSIFICATION	create a new tagged value with the given type and value and add it to a modelelement.
WITHOUT_CLASSIFICATION	update an existing tagged value on a model element.
WITHOUT_CLASSIFICATION	see if we can copy a package right off
WITHOUT_CLASSIFICATION	see if we can copy a stereotype right off
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	"permission"
WITHOUT_CLASSIFICATION	check to see if association still exists
WITHOUT_CLASSIFICATION	expected illegalargumentexception seen
WITHOUT_CLASSIFICATION	a parameterized class can only be the client of a single binding
WITHOUT_CLASSIFICATION	exception expected - test success
WITHOUT_CLASSIFICATION	expected - test success
WITHOUT_CLASSIFICATION	expected - test success
WITHOUT_CLASSIFICATION	create a new arg list with a different set of args (but same types)
WITHOUT_CLASSIFICATION	success
WITHOUT_CLASSIFICATION	not static
WITHOUT_CLASSIFICATION	test passed
WITHOUT_CLASSIFICATION	test passed
WITHOUT_CLASSIFICATION	not uml1.4
WITHOUT_CLASSIFICATION	non existent in uml1
WITHOUT_CLASSIFICATION	not in uml1.4
WITHOUT_CLASSIFICATION	not in uml1.4
WITHOUT_CLASSIFICATION	not in uml1.4
WITHOUT_CLASSIFICATION	not in uml1.4
WITHOUT_CLASSIFICATION	not in uml1.4
WITHOUT_CLASSIFICATION	this is not a well formed model in a strict sense. see the multiplicity in uml 1.3 figure 2-5.
WITHOUT_CLASSIFICATION	returns list
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	deleting the stereotype should cascade to the tagdefinition then the taggedvalue
WITHOUT_CLASSIFICATION	todo constraints todo required tags
WITHOUT_CLASSIFICATION	enumerate declaring class
WITHOUT_CLASSIFICATION	note although it's not shown in the uml 1.4 spec a templateargument appears to be a datavalue (like multiplicityrange) and can not be reused in multiple instances. the uml diagrams don't show it as a composition but it effectively is.
WITHOUT_CLASSIFICATION	must be called after setimplementation.
WITHOUT_CLASSIFICATION	enumerate fields
WITHOUT_CLASSIFICATION	enumerate constructors
WITHOUT_CLASSIFICATION	indicate that the test was validated
WITHOUT_CLASSIFICATION	todo look up class in truth table
WITHOUT_CLASSIFICATION	check superclass. make sure this class does not extend or reference non-argouml classes
WITHOUT_CLASSIFICATION	enumerate methods enumerate method arguments
WITHOUT_CLASSIFICATION	not currently present as token in model.getfacade(). nif runtruthtest(model.getfacade().isaelement(o) model.getfacade().element) nif runtruthtest(model.getfacade().isaexpression(o) model.getfacade().expression) nif runtruthtest(model.getfacade().isaextensionpoint(o) model.getfacade().extension_point) nif runtruthtest(model.getfacade().isafeature(o) model.getfacade().feature)
WITHOUT_CLASSIFICATION	nif runtruthtest(model.getfacade().isainteraction(o) model.getfacade().interaction)
WITHOUT_CLASSIFICATION	nif untruthtest(model.getfacade().isamethod(o) model.getmetatypes().getmethod())
WITHOUT_CLASSIFICATION	runtruthtest(model.getfacade().isarelationship(o) model.getmetatypes().getrelationship())
WITHOUT_CLASSIFICATION	nif runtruthtest(model.getfacade().isastructuralfeature(o) model.getmetatypes().getstructuralfeature()) nif runtruthtest(model.getfacade().isataggedvalue(o) model.getmetatypes().gettaggedvalue())
WITHOUT_CLASSIFICATION	call methods that exists for all objects and that always return something meaningful
WITHOUT_CLASSIFICATION	call methods that exists for all objects and that always return something meaningful
WITHOUT_CLASSIFICATION	multiplicity multiplicityrange and all expression subtypes don't have 0-argument create methods so we special case them.
WITHOUT_CLASSIFICATION	find the create method in the offical api
WITHOUT_CLASSIFICATION	now get the factory implementation method to be invoked
WITHOUT_CLASSIFICATION	here it is another object sent to the test.
WITHOUT_CLASSIFICATION	here it is another object sent to the test.
WITHOUT_CLASSIFICATION	abstract
WITHOUT_CLASSIFICATION	abstract
WITHOUT_CLASSIFICATION	abstract
WITHOUT_CLASSIFICATION	make sure we start off clean
WITHOUT_CLASSIFICATION	delete the model and make sure everything inside goes with it
WITHOUT_CLASSIFICATION	the association should have same namespace as from class
WITHOUT_CLASSIFICATION	only one end should be navigable
WITHOUT_CLASSIFICATION	"usecaseinstance" gone in uml 2.x & unused by argouml
WITHOUT_CLASSIFICATION	set namespace so buildassocationrole works
WITHOUT_CLASSIFICATION	correct exception was thrown.
WITHOUT_CLASSIFICATION	correct exception was thrown.
WITHOUT_CLASSIFICATION	correct exception was thrown.
WITHOUT_CLASSIFICATION	correct exception was thrown.
WITHOUT_CLASSIFICATION	build an activity graph with a single action state the way the gui would
WITHOUT_CLASSIFICATION	this is a private method in model.
WITHOUT_CLASSIFICATION	handling methods that doesn't return
WITHOUT_CLASSIFICATION	handling the isinitiated method
WITHOUT_CLASSIFICATION	handling the initialise method
WITHOUT_CLASSIFICATION	handle methods which return opaque objects
WITHOUT_CLASSIFICATION	one of the expected errors just ignore
WITHOUT_CLASSIFICATION	could not find model.
WITHOUT_CLASSIFICATION	could not find model.
WITHOUT_CLASSIFICATION	handle uml 1.4 metamodel which is a mof 1.3 model
WITHOUT_CLASSIFICATION	get a node's name along with the name of its parent (which we'll use to find the factory to create it with.
WITHOUT_CLASSIFICATION	uml 1.4
WITHOUT_CLASSIFICATION	uml 2.x
WITHOUT_CLASSIFICATION	xmi 2.1
WITHOUT_CLASSIFICATION	xmi 1.1
WITHOUT_CLASSIFICATION	remap specific classes
WITHOUT_CLASSIFICATION	only remap package if we didn't remap specific class
WITHOUT_CLASSIFICATION	the following uml 1.4 elements have been removed from uml 2.x so we don't bother testing them.
WITHOUT_CLASSIFICATION	a few of our factories are slightly different than as declared in the uml 1.4 metamodel so we remap them here. <metamodel argouml>
WITHOUT_CLASSIFICATION	packages to be remapped
WITHOUT_CLASSIFICATION	for those things which we've already migrated to uml 2.x syntax we need to map them back to their uml 1.4 equivalents during the migration period.
WITHOUT_CLASSIFICATION	subsystem has been removed from uml 2.x
WITHOUT_CLASSIFICATION	try the actions
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	abstract
WITHOUT_CLASSIFICATION	abstract
WITHOUT_CLASSIFICATION	this is the xmi version used to encode the metamodel. we could parse deeper to pull out the actual uml version. the uml 1.4 version is at xmi/xmi.header/xmi.model[@xmi.version]. the uml 2.1.1 metamodel doesn't actually seem to contain its version.
WITHOUT_CLASSIFICATION	because uml 1.4 & 2.1 metamodels are organized differently we need to traverse the hierarchy looking for our owning package.
WITHOUT_CLASSIFICATION	specific classes to be remapped remap.put("" "")
WITHOUT_CLASSIFICATION	go the other way to lookup an element by path
WITHOUT_CLASSIFICATION	activitygraphs
WITHOUT_CLASSIFICATION	instance (in uml 1.4) and classifier are abstract and not tested
WITHOUT_CLASSIFICATION	extend include usecaseinstance & extensionpoint not implemented
WITHOUT_CLASSIFICATION	assertnotnull(model.getumlfactory().buildnode( model.getmetatypes().getextend())) assertnotnull(model.getumlfactory().buildnode( model.getmetatypes().getinclude())) assertnotnull(model.getumlfactory().buildnode( model.getmetatypes().getusecaseinstance())) assertnotnull(model.getumlfactory().buildnode( model.getmetatypes().getextensionpoint()))
WITHOUT_CLASSIFICATION	state is concrete in uml 1.3 but becomes abstract in uml 1.4 so we never allow it to be created (and don't test creation)
WITHOUT_CLASSIFICATION	new initprofilesubsystem().init()
WITHOUT_CLASSIFICATION	this should work now that they both have names
WITHOUT_CLASSIFICATION	this call could easily fall if there is e.g. no public default constructor. if it fails tweak the if/else tree above to accommodate the parameter or check if we need to test the particular method at all.
WITHOUT_CLASSIFICATION	if method not supported ignore failure
WITHOUT_CLASSIFICATION	fine!
WITHOUT_CLASSIFICATION	fine!
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	assertnotnull(model.getumlfactory().buildnode( model.getmetatypes().getstate()))
WITHOUT_CLASSIFICATION	commonbehaviorfactory datatypesfactory extensionmechanismsfactory modelmanagementfactory
WITHOUT_CLASSIFICATION	set up all parameters. some methods are invoked with primitives or collections so we need to create them accordingly
WITHOUT_CLASSIFICATION	the following should fail
WITHOUT_CLASSIFICATION	and leave things unchanged
WITHOUT_CLASSIFICATION	this one should work except java is not registered by default asserttrue(settings.setnotationlanguage("java")) assertequals("java" settings.getnotationlanguage())
WITHOUT_CLASSIFICATION	notationproviderfactory2.getinstance().addnotationprovider(1234 name mynp.class) notationprovider notationprovider = notationproviderfactory2.getinstance().getnotationprovider( 1234 new object()) asserttrue("test notation provider for 1234 not found" notationprovider != null)
WITHOUT_CLASSIFICATION	constructor.
WITHOUT_CLASSIFICATION	constructor. @param me an object
WITHOUT_CLASSIFICATION	everything fine
WITHOUT_CLASSIFICATION	everything fine
WITHOUT_CLASSIFICATION	everything fine
WITHOUT_CLASSIFICATION	reuse signal event
WITHOUT_CLASSIFICATION	reuse call event
WITHOUT_CLASSIFICATION	reuse time event
WITHOUT_CLASSIFICATION	reuse change event
WITHOUT_CLASSIFICATION	try creating a string from the generated modelelements
WITHOUT_CLASSIFICATION	try creating a timeevent
WITHOUT_CLASSIFICATION	try changing the triggertype to changeevent
WITHOUT_CLASSIFICATION	nested class
WITHOUT_CLASSIFICATION	nested class
WITHOUT_CLASSIFICATION	no need to check any further if we fail the 1st part.
WITHOUT_CLASSIFICATION	start testing stuff
WITHOUT_CLASSIFICATION	try moving in a simple maner
WITHOUT_CLASSIFICATION	try some errors
WITHOUT_CLASSIFICATION	for a transition use indirection through source statevertex
WITHOUT_CLASSIFICATION	if we can't find a model return the outermost containing model element
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	everything fine
WITHOUT_CLASSIFICATION	everything fine
WITHOUT_CLASSIFICATION	everything fine
WITHOUT_CLASSIFICATION	everything fine
WITHOUT_CLASSIFICATION	this swaps the direction of m3
WITHOUT_CLASSIFICATION	this swaps the direction of m3 back the colon is obliged but the / not and the 2nd dot also not
WITHOUT_CLASSIFICATION	notation allows to add or modify things not remove. hence this does nothing
WITHOUT_CLASSIFICATION	the expected exception is thrown.
WITHOUT_CLASSIFICATION	both diagram types shall show sequence numbers when requested
WITHOUT_CLASSIFICATION	but the collaboration diagram refuses to leave them out
WITHOUT_CLASSIFICATION	if the message has a name but no action then show the name
WITHOUT_CLASSIFICATION	if a message has a name and a named operation then show the operation
WITHOUT_CLASSIFICATION	if a message has a name and a named operation and a script then show the script
WITHOUT_CLASSIFICATION	todo should there really be () here?
WITHOUT_CLASSIFICATION	if a message has a name and a named operation and an empty script then show the operation
WITHOUT_CLASSIFICATION	if a message has a name and a named operation and an expression with no script then show the operation
WITHOUT_CLASSIFICATION	if a message has a name and a named operation and a named script with parameters then show the script
WITHOUT_CLASSIFICATION	todo why is there a space before the ( here and not in case of the operation name?
WITHOUT_CLASSIFICATION	the action still has the argument from above.
WITHOUT_CLASSIFICATION	if a message has a name and a named operation and a script with parameters but without name then show the operation name
WITHOUT_CLASSIFICATION	this is not a very useful transition
WITHOUT_CLASSIFICATION	one of everything
WITHOUT_CLASSIFICATION	upper / lower case
WITHOUT_CLASSIFICATION	mixed case
WITHOUT_CLASSIFICATION	a complex internal transition
WITHOUT_CLASSIFICATION	these are not entry/exit/do activities!
WITHOUT_CLASSIFICATION	long list of internals
WITHOUT_CLASSIFICATION	or should the 1 be 0 ?
WITHOUT_CLASSIFICATION	deleting it all
WITHOUT_CLASSIFICATION	we want the b foo attribute that is the second in the list
WITHOUT_CLASSIFICATION	if there is no script then the language should not be maintained.
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	success - expected exception
WITHOUT_CLASSIFICATION	everything fine
WITHOUT_CLASSIFICATION	create file
WITHOUT_CLASSIFICATION	this is the normal case.
WITHOUT_CLASSIFICATION	load a project which contains links to it
WITHOUT_CLASSIFICATION	test project readable files
WITHOUT_CLASSIFICATION	standard uml 1.4 profile
WITHOUT_CLASSIFICATION	create a default profile and record its contents
WITHOUT_CLASSIFICATION	write the profile out to a temp file
WITHOUT_CLASSIFICATION	read it back in to a new empty project
WITHOUT_CLASSIFICATION	clean up our two models and the extent that we read profile in to
WITHOUT_CLASSIFICATION	setting up the dependent profile creation
WITHOUT_CLASSIFICATION	actual call that executes everything
WITHOUT_CLASSIFICATION	verifications
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	todo the following cleans up left overs from previous tests but preferably we shouldn't have to do this
WITHOUT_CLASSIFICATION	create profile model
WITHOUT_CLASSIFICATION	create profile model
WITHOUT_CLASSIFICATION	save the profile into a xmi file
WITHOUT_CLASSIFICATION	save the profile into a xmi file
WITHOUT_CLASSIFICATION	called during teardown
WITHOUT_CLASSIFICATION	called during teardown
WITHOUT_CLASSIFICATION	remove leftovers from other tests
WITHOUT_CLASSIFICATION	todo user defined profile support untested currently + "\t\t<userdefined>\n" + "\t\t\t<filename>\n" + "foo.profile\n" + "</filename>\n" + "\t\t\t<model>\n" + "foo.profile.package\n" + "\t\t\t</model>\n" + "\t\t</userdefined>\n"
WITHOUT_CLASSIFICATION	there seems to be cases where we don't erase the profile. let's make sure it is deleted.
WITHOUT_CLASSIFICATION	[euluis] using windows style initial path don't know if this fails in nixes.
WITHOUT_CLASSIFICATION	ensure that model subsystem implementation doesn't remember the profiles by changing their names and directories
WITHOUT_CLASSIFICATION	but lookout it doesn't work both ways
WITHOUT_CLASSIFICATION	assertequals(defaultoclevaluator.getinstance().evaluate(vt mi "x.ocliskindof(classifier)") true)
WITHOUT_CLASSIFICATION	on a headless system (without display) this will crash
WITHOUT_CLASSIFICATION	private jpanel propertypane
WITHOUT_CLASSIFICATION	contains instances of each modelelement used for testing so that we only use each modelelement once
WITHOUT_CLASSIFICATION	propertypane = tabprops
WITHOUT_CLASSIFICATION	thedetailspane.getnamedtab(translator.localize("tab.properties"))
WITHOUT_CLASSIFICATION	currently this is in this try block as it does not work _propertypanel always has size 00
WITHOUT_CLASSIFICATION	projectbrowser exposes functionality not components. assertnotnull(pb.gettabprops()) assertnotnull(pb.getstatusbar())
WITHOUT_CLASSIFICATION	make sure this test happens on the awt event thread
WITHOUT_CLASSIFICATION	jpanel docpane = pane.gettab(tabdocumentation.class)
WITHOUT_CLASSIFICATION	the target list is empty re-emptying it again should not generate any events
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	new target is of type object refresh should not be called
WITHOUT_CLASSIFICATION	commented out next piece to remove failure of testcase. the testcase is probably correct but the implementation of detailspane is not pane.gettabs().setselectedcomponent(docpane) pane.targetset(e) assertequals(docpane pane.gettabs().getselectedcomponent())
WITHOUT_CLASSIFICATION	new target is a fig refresh should be called
WITHOUT_CLASSIFICATION	setting one target should generate one event
WITHOUT_CLASSIFICATION	new target is of type umlclassdiagram refresh should not be called
WITHOUT_CLASSIFICATION	todo we could check that the contents of the files differ.
WITHOUT_CLASSIFICATION	new target is a modelelement refresh should not be called
WITHOUT_CLASSIFICATION	testing with subset of targets
WITHOUT_CLASSIFICATION	set same target again should not generate new events
WITHOUT_CLASSIFICATION	tabprops gets selected! so 2nd time right
WITHOUT_CLASSIFICATION	adding same targets list again should not generate new events
WITHOUT_CLASSIFICATION	adding same target again should not generate new events
WITHOUT_CLASSIFICATION	reverse order
WITHOUT_CLASSIFICATION	now remove one target by setting subset
WITHOUT_CLASSIFICATION	todo the following fails due to the xmi writing saving all top level model elements and because even if there was no empty project by creating a class the undo mechanism in the project manager will force the creation of an empty project. assertequals(1 profilemodels.size())
WITHOUT_CLASSIFICATION	note we have to do this due to leftovers from other tests being causing strange errors when running in eclipse.
WITHOUT_CLASSIFICATION	all tests should consider the threshold as inclusive value
WITHOUT_CLASSIFICATION	this test is a bit stupid but nevertheless
WITHOUT_CLASSIFICATION	{a a} are offenders
WITHOUT_CLASSIFICATION	everything ok
WITHOUT_CLASSIFICATION	everything ok
WITHOUT_CLASSIFICATION	same name same participants two offenders
WITHOUT_CLASSIFICATION	same name different classes everything ok
WITHOUT_CLASSIFICATION	same name different classes everything ok
WITHOUT_CLASSIFICATION	same name same participants two offenders
WITHOUT_CLASSIFICATION	{aabb} are offenders
WITHOUT_CLASSIFICATION	{} no offenders
WITHOUT_CLASSIFICATION	simply create 3 usecases and an actor in a package with individual names
WITHOUT_CLASSIFICATION	generalizations are not required to have unique names within a namespace
WITHOUT_CLASSIFICATION	all use cases and actors require associations hence all predicates evalulate to true
WITHOUT_CLASSIFICATION	build association build association between actor and top use case.
WITHOUT_CLASSIFICATION	test for return parameters. they can also fail!
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#teardown()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	arbitrary settings - not used used for testing
WITHOUT_CLASSIFICATION	arbitrary settings - not used used for testing
WITHOUT_CLASSIFICATION	the graph should stay the same.
WITHOUT_CLASSIFICATION	build extend these parameters seem to be in correct order add an extend. we do not need an assoc on the extending use case
WITHOUT_CLASSIFICATION	build include it seems that the parameters for build include are just the other way round add an include we do not need to have associtions on one
WITHOUT_CLASSIFICATION	setup
WITHOUT_CLASSIFICATION	handle the simple cases anything very exotic will fail but that will be our clue that the test needs to be extended
WITHOUT_CLASSIFICATION	real test
WITHOUT_CLASSIFICATION	some arbitrary bounds and settings - unused in test
WITHOUT_CLASSIFICATION	make sure everything created gets deleted
WITHOUT_CLASSIFICATION	this needs to be a concrete metatype so we can't use the general but abstract classifier. replace with its concrete subtypes.
WITHOUT_CLASSIFICATION	this needs to be a concrete metatype so we can't use the general but abstract classifier. replace with its concrete subtypes.
WITHOUT_CLASSIFICATION	setup the project due to its use in sourcepathtablemodel ctor
WITHOUT_CLASSIFICATION	create a class model element
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#teardown()
WITHOUT_CLASSIFICATION	@see abstracttestactionadddiagram#getvalidnamespaceclasses()
WITHOUT_CLASSIFICATION	@see testcase#setup()
WITHOUT_CLASSIFICATION	@see testcase#setup()
WITHOUT_CLASSIFICATION	save the project
WITHOUT_CLASSIFICATION	tests used to be coded to assume immediate event delivery. they've been modified to use flush() where needed. - tfm oldeventpolicy = mfactoryimpl.geteventpolicy() mfactoryimpl.seteventpolicy(mfactoryimpl.event_policy_immediate)
WITHOUT_CLASSIFICATION	return a package to use as the namespace.
WITHOUT_CLASSIFICATION	restore original event policy - not supported by mdr - tfm mfactoryimpl.seteventpolicy(oldeventpolicy)
WITHOUT_CLASSIFICATION	assertnotnull(actionsupplier.getvalue(action.small_icon))
WITHOUT_CLASSIFICATION	cont.settarget(elem)
WITHOUT_CLASSIFICATION	testing with more than one since it failed with a manual test i made.
WITHOUT_CLASSIFICATION	assertnotnull(actionclient.getvalue(action.small_icon))
WITHOUT_CLASSIFICATION	the following will bring up a dialog box so can't be run headless actionsupplier.actionperformed(new actionevent(this 0 "foo"))
WITHOUT_CLASSIFICATION	the following will bring up a dialog box so can't be run headless actionclient.actionperformed(new actionevent(this 0 "foo"))
WITHOUT_CLASSIFICATION	create a new empty project
WITHOUT_CLASSIFICATION	inconclusive
WITHOUT_CLASSIFICATION	inconclusive
WITHOUT_CLASSIFICATION	setup a user defined profile which isn't loaded by the model subsystem and contains a stereotype and this contains a tag definition
WITHOUT_CLASSIFICATION	add the profile stereotype to the class
WITHOUT_CLASSIFICATION	add the profile to the project configuration
WITHOUT_CLASSIFICATION	this works when running the test from within eclipse. apparently eclipse runs the tests using a class-loader that has the tests folder among the urls.
WITHOUT_CLASSIFICATION	create a class in the project model
WITHOUT_CLASSIFICATION	check that the tag definition is returned by {@link umltagdefinitioncomboboxmodel#getapplicabletagdefinitions(object)}
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	if no project was entered on the command line try to reload the most recent project if that option is true
WITHOUT_CLASSIFICATION	set the screen layout to what the user left it before or to reasonable defaults.
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	case 4 erase it
WITHOUT_CLASSIFICATION	event handlers
WITHOUT_CLASSIFICATION	treemodel implementation
WITHOUT_CLASSIFICATION	treemodel implementation
WITHOUT_CLASSIFICATION	todolistlistener implementation
WITHOUT_CLASSIFICATION	case 1 after()
WITHOUT_CLASSIFICATION	initialize the model and profile subsystems to simulate a fresh argouml session
WITHOUT_CLASSIFICATION	we have the path provided from the build script.
WITHOUT_CLASSIFICATION	check the localized parts.
WITHOUT_CLASSIFICATION	wait for all model subsystem events to be delivered
WITHOUT_CLASSIFICATION	wait for all awt events to be dispatched and processed
WITHOUT_CLASSIFICATION	check here if there are no incoming call actions if not then create an activation at the top of the lifeline
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphmodel#getports(java.lang.object)
WITHOUT_CLASSIFICATION	if save did not raise an exception and name+"#" exists move name+"#" to name+"~" this is the correct backup file
WITHOUT_CLASSIFICATION	calcbounds()
WITHOUT_CLASSIFICATION	for classifiers
WITHOUT_CLASSIFICATION	this is null as until the first stereotype declaration is seen. after that it is non-null.
WITHOUT_CLASSIFICATION	newop.setownerscope(op.getownerscope()) not needed in case of operation
WITHOUT_CLASSIFICATION	includes the "/" the "seq_expr" from the header javadoc the "" is not included in "number" - it is always present
WITHOUT_CLASSIFICATION	model.getextensionmechanismsfactory().buildtaggedvalue( tagname new string[] {"true"} model.getfacade().getroot(umlobject))
WITHOUT_CLASSIFICATION	mclassifiers cannot be bag
WITHOUT_CLASSIFICATION	if the model repository doesn't manage a di model then we must generate our figs by inspecting pgml
WITHOUT_CLASSIFICATION	read xsltstream into a temporary file get url for temp file. openstream from url and wrap in streamsource
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	event handlers
WITHOUT_CLASSIFICATION	main methods
WITHOUT_CLASSIFICATION	if the object does not have a name than no problem
WITHOUT_CLASSIFICATION	tree value isselected(dont want a colored background) isexpanded isleaf row(not important for rendering) hasfocus (dont want a focus rectangle)
WITHOUT_CLASSIFICATION	if we don't have it find the trigger. if this fails it will keep its default value of null
WITHOUT_CLASSIFICATION	@override public final void setheadline(string s) { setupheadanddesc() }
WITHOUT_CLASSIFICATION	we need to find the stereotype with the name "create" and the base class behavioralfeature in the model. if there is none then we create one and put it there.
WITHOUT_CLASSIFICATION	first element is e.g. the class but we need to have its namespace to recompute the offenders.
WITHOUT_CLASSIFICATION	- redrawmanager.unlock() - _redrawer.repairdamage()
WITHOUT_CLASSIFICATION	if this composite state is not attached to a statemachine it is not the toplevel composite state.
WITHOUT_CLASSIFICATION	get the assocations and connections. no problem (there is a separate critic) if this is a binary association or is an association role.
WITHOUT_CLASSIFICATION	if this was an association then there will be relevant information to fetch out of the mode arguments. if it not an association then these will be passed forward harmlessly as null.
WITHOUT_CLASSIFICATION	find selected rows and make a list of the model elements that are selected
WITHOUT_CLASSIFICATION	treecellrenderer implementation
WITHOUT_CLASSIFICATION	build namespace hierarchy like this g a /\ b c /\ d e f
WITHOUT_CLASSIFICATION	private propertyprptodo private propertyprpproperties private propertyprpdocumentation private propertyprpstyle private propertyprpsource private propertyprpconstraints private propertyprptaggedvalues
WITHOUT_CLASSIFICATION	always fire changes in the case something has changed in the composition of the taggedvalues collection.
WITHOUT_CLASSIFICATION	build up an array list of the heights of each label/component pair. heights of zero indicate a proportional height.
WITHOUT_CLASSIFICATION	cmdpaste cmd = new cmdpaste() cmd.doit()
WITHOUT_CLASSIFICATION	stereotypes applied to the target mostly control which tds (but see below for other listeners too)
WITHOUT_CLASSIFICATION	todo add referencevalue for tagged values which have a non-primitive type
WITHOUT_CLASSIFICATION	add a decision but set the critic priority to 0 so isrelevant should still be false
WITHOUT_CLASSIFICATION	todo we should also test that the object have been removed from their namespace. collection c = model.getfacade().getownedelements(p.getroot())
WITHOUT_CLASSIFICATION	because the notation events get dispatched on the swing event thread we need to use invokeandwait to make sure that we don't return until they've been delivered
WITHOUT_CLASSIFICATION	parent is element but it has no attributes or associations to check checkelementcopy(e1 e2)
WITHOUT_CLASSIFICATION	extra careful now not to keep any references to the second argument.
WITHOUT_CLASSIFICATION	auto-create a return message for a call message
WITHOUT_CLASSIFICATION	get the source of the return message
WITHOUT_CLASSIFICATION	get the dest of the return message
WITHOUT_CLASSIFICATION	gridbagconstraints gridbagconstraints3 = new gridbagconstraints() gridbagconstraints3.gridx = 2 gridbagconstraints3.anchor = gridbagconstraints.northwest gridbagconstraints3.insets = new insets(5 5 0 0) gridbagconstraints3.gridy = 3 gridbagconstraints gridbagconstraints2 = new gridbagconstraints() gridbagconstraints2.gridx = 0 gridbagconstraints2.anchor = gridbagconstraints.northwest gridbagconstraints2.insets = new insets(5 5 0 0) gridbagconstraints2.gridy = 3
WITHOUT_CLASSIFICATION	fig spf = null fig dpf = null fignode sfn = null fignode dfn = null
WITHOUT_CLASSIFICATION	if the event originated from the window w/glass pane consume the event
WITHOUT_CLASSIFICATION	add gui-internal stuff. gui-internal stuff is panes tabs menu items that are part of the gui subsystem i.e. a class in the org.argouml.ui-package. things that are not part of the gui like everything that has any knowledge about uml diagrams code generation reverse engineering creates and registers itself when that subsystem or module is loaded.
WITHOUT_CLASSIFICATION	the workarea is all the visible space except the menu toolbar and status bar. workarea is laid out as a bordersplitpane where the various components that make up the argo application can be positioned.
WITHOUT_CLASSIFICATION	iterate through the tabbed panels to determine whether they should be enabled.
WITHOUT_CLASSIFICATION	always select properties panel if defaulttoproperties is true and if properties panel is appropriate for selected perspective
WITHOUT_CLASSIFICATION	tabs.addtab(translator.localize("dialog.find.tab.name-and-location") nameloctab)
WITHOUT_CLASSIFICATION	_tablemodel.settarget(_target) _table.setmodel(_tablemodel)
WITHOUT_CLASSIFICATION	if the current shortcut has not been set then the actual shortcut value is the default one
WITHOUT_CLASSIFICATION	if the user cancelled the operation we don't have to save anything
WITHOUT_CLASSIFICATION	create the return message modelelement with the interaction and the collaboration
WITHOUT_CLASSIFICATION	generate and register the osxadapter passing the methods we wish to use as delegates for various com.apple.eawt.applicationlistener methods
WITHOUT_CLASSIFICATION	todo no links in uml 2
WITHOUT_CLASSIFICATION	nothing we can do about veto so just ignore it
WITHOUT_CLASSIFICATION	event handling
WITHOUT_CLASSIFICATION	event handlers
WITHOUT_CLASSIFICATION	fig accessors
WITHOUT_CLASSIFICATION	event handlers - mouselistener implementation
WITHOUT_CLASSIFICATION	the uml object wrong end of the edge
WITHOUT_CLASSIFICATION	we are going to add the ones still valid & new ones in the right sequence
WITHOUT_CLASSIFICATION	this is perfectly normal and happens among other things within the call to setdiagram (below).
WITHOUT_CLASSIFICATION	events
WITHOUT_CLASSIFICATION	if the new edge implements the mouselistener interface it has to receive the mousereleased() event
WITHOUT_CLASSIFICATION	user feedback
WITHOUT_CLASSIFICATION	needs to be updated for changes in notation subsystem - tfm string namestr = notation.generate(this getowner()).trim() getnamefig().settext(namestr)
WITHOUT_CLASSIFICATION	graphfactory implementation
WITHOUT_CLASSIFICATION	adapted from selectionwbuttons from line 280 calls a helper method to avoid this edge disappearing if the new source and dest are the same node.
WITHOUT_CLASSIFICATION	give up if we are already on the graph. this is a bit inconistent with canaddnode above.
WITHOUT_CLASSIFICATION	link the new extend relationship in to the ends. remember we draw from the extension use case to the base use case.
WITHOUT_CLASSIFICATION	todo this is using the default platform character encoding specifying an encoding will produce more predictable results
WITHOUT_CLASSIFICATION	check against "" is needed for backward compatibility. don't remove without checking subclasses and warning downstream developers - tfm - 20081211
WITHOUT_CLASSIFICATION	next line does give user.home back but this is not compliant with how the project.uri works and therefore open and save project as give different starting directories. string directory = globals.getlastdirectory()
WITHOUT_CLASSIFICATION	correct the activator value
WITHOUT_CLASSIFICATION	we know this is a return action now. it must be pointing the opposite way to the activator.
WITHOUT_CLASSIFICATION	java se 6 has a native gif writer but it's not in java 5. one is available in the jai-imageio library but we don't currently bundle that and at 6+ mb it seems like a heavyweight solution but i don't have time to produce a stripped down version right now - tfm httpsjai-imageio.dev.java.net/
WITHOUT_CLASSIFICATION	we don't want to show some nasty gray background color now do we?
WITHOUT_CLASSIFICATION	although we've historically written out the doctype the dtd doesn't actually exist and this line will get stripped by the .uml file persister + "<!doctype profile system \"profile.dtd\" >\n"
WITHOUT_CLASSIFICATION	check that the tag definition is returned by {@link umltagdefinitioncomboboxmodel#getapplicabletagdefinitions(object)}
WITHOUT_CLASSIFICATION	todo real numbers not yet supported assertequals(defaultoclevaluator.getinstance() .evaluate(null null "1.5") 1.5)
WITHOUT_CLASSIFICATION	remember to change this if you change the number of mes with source path settings
WITHOUT_CLASSIFICATION	put the x at the right side of the activation if needed
WITHOUT_CLASSIFICATION	make sure there is the minimum gap above the message being drawn
WITHOUT_CLASSIFICATION	make sure there is the minimum gap below the message being drawn
WITHOUT_CLASSIFICATION	the figmessage that triggered this figactivation into existence
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	this module will still register as enabled for uml1.4 but it won't actually do anything.
WITHOUT_CLASSIFICATION	get the region as the first region in the state. if there is no region in the statemachine then create one.
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.mutablegraphmodel#addedge(java.lang.object)
WITHOUT_CLASSIFICATION	create the layer
WITHOUT_CLASSIFICATION	create the renderer
WITHOUT_CLASSIFICATION	if we're not provided a namespace then get it from the diagram or the root
WITHOUT_CLASSIFICATION	link the previous/next reference of the swimlanes according to the x order.
WITHOUT_CLASSIFICATION	graphmodel implementation
WITHOUT_CLASSIFICATION	make space for the clarifier for vertical symmetry margin between text and border
WITHOUT_CLASSIFICATION	mutablegraphmodel implementation
WITHOUT_CLASSIFICATION	actions for toolbar
WITHOUT_CLASSIFICATION	vetoablechangelistener implementation
WITHOUT_CLASSIFICATION	contructors
WITHOUT_CLASSIFICATION	event processing
WITHOUT_CLASSIFICATION	the purpose of this method is not explained and it give give npe depending on z order of figs as they are read. for now ignore if null but for future lets delete this.
WITHOUT_CLASSIFICATION	fig accessors
WITHOUT_CLASSIFICATION	fig accessors
WITHOUT_CLASSIFICATION	can't have a connection between 2 interfaces get the 'other' end type
WITHOUT_CLASSIFICATION	if there's only a single child (and we're it's only parent) set a hint for where to place it when we get to its row
WITHOUT_CLASSIFICATION	use "asize" to build up the minimum size. start with the size of the name fig and build up.
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.mutablegraphmodel#canaddnode(java.lang.object)
WITHOUT_CLASSIFICATION	both ends must be defined and nodes that are on the graph already.
WITHOUT_CLASSIFICATION	if we are the dest and is a call action create the activation but don't add it until the height is set.
WITHOUT_CLASSIFICATION	if we are the dest and is a call action create the activation but don't add it until the height is set.
WITHOUT_CLASSIFICATION	if we are the destination of a create action create the entire activation
WITHOUT_CLASSIFICATION	if we are the target of a destroy action the figlifeline ends here and we add the activation
WITHOUT_CLASSIFICATION	if we are the source of a return action the activation ends here.
WITHOUT_CLASSIFICATION	if we have a currentact object that means have reached the end of the lifeline with a call or a create not returned. add the activation to the list after setting its height to end at the end of the lifeline.
WITHOUT_CLASSIFICATION	we do nothing. no call to the parent
WITHOUT_CLASSIFICATION	we don't recalculate activations just move them
WITHOUT_CLASSIFICATION	if is a classifier role it must return all the related messages.
WITHOUT_CLASSIFICATION	if is a message it must return the sender and the receiver of the message.
WITHOUT_CLASSIFICATION	comments from anywhere in the model are allowed
WITHOUT_CLASSIFICATION	all other types of elements must be in this namespace
WITHOUT_CLASSIFICATION	we initialize the coordinates.
WITHOUT_CLASSIFICATION	we do nothing
WITHOUT_CLASSIFICATION	manage if cursor x is less than lastx1
WITHOUT_CLASSIFICATION	manage if cursor x is more than lastx2
WITHOUT_CLASSIFICATION	manage changes of direction
WITHOUT_CLASSIFICATION	i have no direction yet
WITHOUT_CLASSIFICATION	we move down or up the messages that are downward the broom
WITHOUT_CLASSIFICATION	we recalculate all the activations
WITHOUT_CLASSIFICATION	we draw a cross
WITHOUT_CLASSIFICATION	we don't let the user move the messages horizontally.
WITHOUT_CLASSIFICATION	if the edge is near the bottom of the classifier roles we enlarge all the figclassifierroles in the diagram.
WITHOUT_CLASSIFICATION	super(model.getfacade().getname(op) null)
WITHOUT_CLASSIFICATION	we need the edge to be complete
WITHOUT_CLASSIFICATION	if the added edge is a create message it will affect the position of the classifierrole so it should be repositioned
WITHOUT_CLASSIFICATION	the initial x is the left side of the activation
WITHOUT_CLASSIFICATION	the initial x is the left side of the activation
WITHOUT_CLASSIFICATION	put the x at the right side of the activation if needed
WITHOUT_CLASSIFICATION	if the y coordinate is before the classifier role y we place the start in the corner of the fighead.
WITHOUT_CLASSIFICATION	if the y coordinate is inside the head the x must be in the border of the headfig.
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.figedge#setfig(org.tigris.gef.presentation.fig)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.figstatevertex#initnotationproviders (java.lang.object)
WITHOUT_CLASSIFICATION	if the y coordinate is before the classifier role y we place the start in the corner of the fighead.
WITHOUT_CLASSIFICATION	if the y coordinate is inside the head the x must be in the border of the headfig.
WITHOUT_CLASSIFICATION	use a different notation as messages on a collaboration diagram
WITHOUT_CLASSIFICATION	this next argument may be used to switch off the generation of sequence numbers - this is still to be implemented. they are less desired in sequence diagrams since they do not add any information. in collaboration diagrams they are needed and they are still optional in sequence diagrams.
WITHOUT_CLASSIFICATION	operations
WITHOUT_CLASSIFICATION	todo add logging but this will never happen and is handled
WITHOUT_CLASSIFICATION	if possible we determine this by checking the destination and source figs are the same. if this is not possible because the edge is not yet connected then we check the model.
WITHOUT_CLASSIFICATION	we update the activations
WITHOUT_CLASSIFICATION	for performance we check if this is a selfmessage if it is we have just updated the activations
WITHOUT_CLASSIFICATION	this call seems not very robust. yet to determine cause.
WITHOUT_CLASSIFICATION	this constructor is needed for pgmlstackparser to load saved diagrams. it does nothing because pgmlstackparser will call setpoints later.
WITHOUT_CLASSIFICATION	vertical resizing
WITHOUT_CLASSIFICATION	do nothing.
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	this module will still register as enabled for uml1.4 but it won't actually do anything.
WITHOUT_CLASSIFICATION	get the region as the first region in the state. if there is no region in the statemachine then create one.
WITHOUT_CLASSIFICATION	there are no regions so create one and place the vertex there.
WITHOUT_CLASSIFICATION	there are one or more regions so find the one that the vertex was dropped in
WITHOUT_CLASSIFICATION	the vertex was dropped onto the diagram. get the region as the first region in the statemachine. if there is no region in the statemachine then create one.
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#removefromdiagramimpl()
WITHOUT_CLASSIFICATION	_x = x _y = y _w = w _h = h
WITHOUT_CLASSIFICATION	@see org.tigris.gef.ui.popupgenerator#getpopupactions(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	create the layer
WITHOUT_CLASSIFICATION	nothing we can do about veto so just ignore it
WITHOUT_CLASSIFICATION	create the renderer
WITHOUT_CLASSIFICATION	although not generally true for gef for argo we know that the layer is a layerperspective which knows the associated diagram
WITHOUT_CLASSIFICATION	in this event we do nothing only stop drawing the broom.
WITHOUT_CLASSIFICATION	there is a bug in gef where positioning nodes can affect edge positions. we need to do 3 iterations to protect against that.
WITHOUT_CLASSIFICATION	1. remember current message paths
WITHOUT_CLASSIFICATION	2. reposition and resize nodes
WITHOUT_CLASSIFICATION	3. now reposition messages based on their original position
WITHOUT_CLASSIFICATION	compute the initial center position of the cr
WITHOUT_CLASSIFICATION	horizontal resizing
WITHOUT_CLASSIFICATION	compute the final center position of the cr
WITHOUT_CLASSIFICATION	self messages act differently so it is needed to move them separetly. only self messages of selected cr should be horizontally translated.
WITHOUT_CLASSIFICATION	create the graph model
WITHOUT_CLASSIFICATION	y position of the new cr should match existing crs y position
WITHOUT_CLASSIFICATION	init the sequence diagrams from the module
WITHOUT_CLASSIFICATION	debugging and looking at fig.headfig.figs[1]._currtext i can see that it's working but how to test it?
WITHOUT_CLASSIFICATION	operations that work on elements
WITHOUT_CLASSIFICATION	operations that work on classes of objects
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getminimumsize()
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	object getimportedpackage(object element)
WITHOUT_CLASSIFICATION	object getincludingcase(object handle)
WITHOUT_CLASSIFICATION	javadoc reviewed above this point - tfm /
WITHOUT_CLASSIFICATION	object getimportingnamespace(object element)
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	object createstereotype()
WITHOUT_CLASSIFICATION	implementation note unlike many of the interfaces to the model there is no control to force a single instance of an xmireader. this is to allow work objects generated by the implementation to be garbage collected when an xmireader instance falls out of scope.
WITHOUT_CLASSIFICATION	adiagramelementproperty delegate methods
WITHOUT_CLASSIFICATION	@see org.omg.uml.diagraminterchange.adiagramelementproperty#add( org.omg.uml.diagraminterchange.diagramelement org.omg.uml.diagraminterchange.property)
WITHOUT_CLASSIFICATION	@see org.omg.uml.diagraminterchange.adiagramelementproperty#exists( org.omg.uml.diagraminterchange.diagramelement org.omg.uml.diagraminterchange.property)
WITHOUT_CLASSIFICATION	@see org.omg.uml.diagraminterchange.adiagramelementproperty#getproperty( org.omg.uml.diagraminterchange.diagramelement)
WITHOUT_CLASSIFICATION	easy interface to properties
WITHOUT_CLASSIFICATION	here follows the interfaces that contain the enums of different kinds in the uml meta-model.
WITHOUT_CLASSIFICATION	flow is not in uml 2.x - don't implement
WITHOUT_CLASSIFICATION	do nothing.
WITHOUT_CLASSIFICATION	additional support for tagged values
WITHOUT_CLASSIFICATION	do nothing.
WITHOUT_CLASSIFICATION	do nothing.
WITHOUT_CLASSIFICATION	do nothing.
WITHOUT_CLASSIFICATION	here follows the interfaces that contain the enums of different kinds in the uml meta-model.
WITHOUT_CLASSIFICATION	static variables
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	public methods
WITHOUT_CLASSIFICATION	end class uuidmanager
WITHOUT_CLASSIFICATION	write out something for us to read back in
WITHOUT_CLASSIFICATION	now read it and check the results.
WITHOUT_CLASSIFICATION	create an empty file and try to read it
WITHOUT_CLASSIFICATION	depends on implementation
WITHOUT_CLASSIFICATION	todo
WITHOUT_CLASSIFICATION	construct an exception with a message and a causing exception. @param message the message @param c the cause of the exception public xmireferenceexception(string message throwable c) { super(message c) }
WITHOUT_CLASSIFICATION	the netbeans saxparser sets line number and column number to -1.
WITHOUT_CLASSIFICATION	the xerces saxparser sets line number and column number to 1.
WITHOUT_CLASSIFICATION	not true in general but should be true for our test models
WITHOUT_CLASSIFICATION	this throws org.argouml.model.xmiexception unknown element in xmi file model because the uml 1.3->1.4 converter can only handle xmi 1.0 not 1.1
WITHOUT_CLASSIFICATION	todo
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	if the region is changed to another region then we make sure that a delete event is not fired as a result. $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	in this case either the container was not set or it was not contained in a statemachine.
WITHOUT_CLASSIFICATION	the only way a region is set to null is if we're deleting the vertex in which case we do nothing special so that the removal of the state triggers a delete event.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	todo
WITHOUT_CLASSIFICATION	in uml a message could have an action. in uml2 it never does.
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	no body found.
WITHOUT_CLASSIFICATION	oops we already have the body
WITHOUT_CLASSIFICATION	return handle.stringvalue()
WITHOUT_CLASSIFICATION	public collection<element> getextendedelements(object handle) {
WITHOUT_CLASSIFICATION	for a transition use indirection through source statevertex
WITHOUT_CLASSIFICATION	gone from uml 2.x throw new notimplementedexception()
WITHOUT_CLASSIFICATION	get all the relationships that this model element has. and filter everything that is not an import.
WITHOUT_CLASSIFICATION	can't be done in the general case of federated repositories but at least get what we can find for the current resource set
WITHOUT_CLASSIFICATION	multiplicityelement is now an interface implemented by element types that support multiplicities - tfm
WITHOUT_CLASSIFICATION	should be element not eobject really
WITHOUT_CLASSIFICATION	classifier powertype =
WITHOUT_CLASSIFICATION	todo signal -> receptions association not navigable in this direction
WITHOUT_CLASSIFICATION	in uml2 the tag definition is the attribute itself
WITHOUT_CLASSIFICATION	usage differs from uml1
WITHOUT_CLASSIFICATION	usage differs from uml1
WITHOUT_CLASSIFICATION	transitions can have multiple triggers now
WITHOUT_CLASSIFICATION	gone in uml 2.x
WITHOUT_CLASSIFICATION	actionstate callstate and subactivitystate have been replaced in uml 2.0 by explicitly modeled actions
WITHOUT_CLASSIFICATION	todo double check - tfm
WITHOUT_CLASSIFICATION	todo gone in uml 2
WITHOUT_CLASSIFICATION	todo gone in uml 2
WITHOUT_CLASSIFICATION	todo double check - tfm
WITHOUT_CLASSIFICATION	todo double check - tfm
WITHOUT_CLASSIFICATION	below for uml 1.4 compatibility
WITHOUT_CLASSIFICATION	todo double check - tfm
WITHOUT_CLASSIFICATION	todo changed from uml 1.4
WITHOUT_CLASSIFICATION	todo gone in uml 2
WITHOUT_CLASSIFICATION	todo changed for uml 2.x
WITHOUT_CLASSIFICATION	todo gone from uml 2
WITHOUT_CLASSIFICATION	has <<subsystem>> stereotype
WITHOUT_CLASSIFICATION	todo not exact but close
WITHOUT_CLASSIFICATION	&& ((action) handle).get
WITHOUT_CLASSIFICATION	not in uml2
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	even though this is not relevant for uml2 we have code calling this that expects it for uml1.4 and we must handle it gracefully.
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	return ((redefinableelement) handle).isroot() todo one part of uml 2.1.1 spec says that this is as above but it appears to be gone - tfm
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	lifeline.setrepresents(prop)
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	a composite state contains at least one region
WITHOUT_CLASSIFICATION	an associationend is now a property owned by an association
WITHOUT_CLASSIFICATION	throw new notimplementedexception( "this is not a uml2 element") $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	todo exception has been removed for uml 2.x just return signal for now - tfm
WITHOUT_CLASSIFICATION	gone in uml 2.x - just classifier now
WITHOUT_CLASSIFICATION	todo not really the same thing but close
WITHOUT_CLASSIFICATION	the name of the meta type is the class name (after the last .) and before the "impl" or end of class name.
WITHOUT_CLASSIFICATION	todo gone in uml 2.x return place holder for now
WITHOUT_CLASSIFICATION	todo no separate syncstate in uml 2.1 - tfm
WITHOUT_CLASSIFICATION	actionsequence.class
WITHOUT_CLASSIFICATION	classifierinstate.class
WITHOUT_CLASSIFICATION	argument.class
WITHOUT_CLASSIFICATION	attributelink.class
WITHOUT_CLASSIFICATION	uninterpretedaction.class
WITHOUT_CLASSIFICATION	access should be fast
WITHOUT_CLASSIFICATION	iteration should be fast
WITHOUT_CLASSIFICATION	literalspecification
WITHOUT_CLASSIFICATION	i.e. eventtype == notification.remove
WITHOUT_CLASSIFICATION	implements commandstack
WITHOUT_CLASSIFICATION	list.add("opaqueexpression")
WITHOUT_CLASSIFICATION	literalspecification list.add("literalnull")when other ok
WITHOUT_CLASSIFICATION	list.add("literalinteger")when other ok
WITHOUT_CLASSIFICATION	list.add("literalunlimitednatural")when other ok
WITHOUT_CLASSIFICATION	list.add("instancevalue")
WITHOUT_CLASSIFICATION	todo else => exception !
WITHOUT_CLASSIFICATION	can't be changed
WITHOUT_CLASSIFICATION	rewrite it after change setexpression ?
WITHOUT_CLASSIFICATION	as write in uml specification we have size(bodies)==size(langs) we must have tabvalues.length%2==0
WITHOUT_CLASSIFICATION	literalspecification
WITHOUT_CLASSIFICATION	can't be set
WITHOUT_CLASSIFICATION	rewrite it after change setexpression ?
WITHOUT_CLASSIFICATION	as write in uml specification we have size(bodies)==size(langs) we must have tabvalues.length%2==0
WITHOUT_CLASSIFICATION	a link is an assocation in uml2.x
WITHOUT_CLASSIFICATION	link does not exist in uml2 a link is represented just as an association
WITHOUT_CLASSIFICATION	must not be used in uml2 we model a method as a opaquebehavior object that already has a body so there is no need to have an intermediate expression object
WITHOUT_CLASSIFICATION	we need a method (operation implementation) to store the method body.
WITHOUT_CLASSIFICATION	maybe this operation already has a method that fits our purpose? in this case try to reuse it instead of creating a new implementation.
WITHOUT_CLASSIFICATION	check if we have to create a new implementation.
WITHOUT_CLASSIFICATION	create a new implementation.
WITHOUT_CLASSIFICATION	and set the specification to the current operation.
WITHOUT_CLASSIFICATION	add it to the operation's methods.
WITHOUT_CLASSIFICATION	look if there's already a java implementation
WITHOUT_CLASSIFICATION	try to get the corresponding body and set it to the current body this _should_ work if all the bodies were stored with their corresponding languages.
WITHOUT_CLASSIFICATION	job done.
WITHOUT_CLASSIFICATION	it seems there was no implementation of our current target language so we just add one.
WITHOUT_CLASSIFICATION	we cannot set the body of this model element type.
WITHOUT_CLASSIFICATION	removed from uml 2.x
WITHOUT_CLASSIFICATION	also parse 1_ or 0_n etc.
WITHOUT_CLASSIFICATION	warning - this has containment side effects! eclipse uml2 will move the property from the classifier to the association when the navigability is changed.
WITHOUT_CLASSIFICATION	$non-nls-1$$non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	for other xmi files with further namespaces
WITHOUT_CLASSIFICATION	eclipse namespaces
WITHOUT_CLASSIFICATION	for the .uml files in the eclipse jar files we need this
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	not needed currently for uml 2
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	final object scope
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	the attribute 'targetscope' of an associationend in uml1.x is no longer supported in uml2.x
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	@see org.argouml.model.umlhelper#getsource(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.umlhelper#getdestination(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.umlhelper#move(java.lang.object org.argouml.model.umlhelper.direction)
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	in uml2 we model a method as a behavior (initially opaquebehavior)
WITHOUT_CLASSIFICATION	the interface realization will be created in the client namespace (client is a namespace)
WITHOUT_CLASSIFICATION	extent ignored for euml2 implementation (required for netbeans mdr)
WITHOUT_CLASSIFICATION	@see org.argouml.model.umlhelper#move(java.lang.object org.argouml.model.umlhelper.direction)
WITHOUT_CLASSIFICATION	@see org.argouml.model.extensionmechanismshelper#getcommontaggedvaluetypes()
WITHOUT_CLASSIFICATION	cmd.setobjects(run.getparams().get(0))
WITHOUT_CLASSIFICATION	maybe uml2 has these as constants somewhere
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	also apply subprofiles
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	sets the value of an element#s property (tagged value). this method makes sure that a collection of values is set if and only if the property is multivalued (upper multiplicity value greater 1) so passing a collection is safe. @see org.argouml.model.extensionmechanismshelper#setvalueoftag(java.lang.object java.lang.object java.lang.object)
WITHOUT_CLASSIFICATION	commontaggedvaluetypes.add(org.eclipse.uml2.uml.resource.umlresource.)
WITHOUT_CLASSIFICATION	remove base class by destroying the extension
WITHOUT_CLASSIFICATION	consider the property multiplicity
WITHOUT_CLASSIFICATION	or getdefaultvaluefor(prop)?
WITHOUT_CLASSIFICATION	too bad we choose to take the first value
WITHOUT_CLASSIFICATION	ready to set the value finally
WITHOUT_CLASSIFICATION	in case of a tagged value the type shouldn't be set here
WITHOUT_CLASSIFICATION	not implementable in uml2 because property is missing
WITHOUT_CLASSIFICATION	also unapply subprofiles
WITHOUT_CLASSIFICATION	also define subprofiles
WITHOUT_CLASSIFICATION	{associationrole.class classifierrole.class }
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	{link.class instance.class } {transition.class statevertex.class }
WITHOUT_CLASSIFICATION	{message.class classifierrole.class }
WITHOUT_CLASSIFICATION	note for uml2 the aggregation ends are swapped
WITHOUT_CLASSIFICATION	extend but only between two use cases. remember we draw from the extension port to the base port.
WITHOUT_CLASSIFICATION	in uml2 subsystem is a component with <<subsystem>> stereotype so this must occur after the metatypes.getcomponent() case
WITHOUT_CLASSIFICATION	find the passed in container in validcontainmentmap
WITHOUT_CLASSIFICATION	determine if metatype is a valid element for container
WITHOUT_CLASSIFICATION	uml 1.4.2 spec section 4.5.3.20 [5] a generalizableelement may only be a child of generalizableelement of the same kind.
WITHOUT_CLASSIFICATION	specifies valid elements for a region to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a region to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a region to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a package to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a package to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a package to contain
WITHOUT_CLASSIFICATION	valid elements for a profile to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a class to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a classifier to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an interface to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a signal to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an actor to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a use case to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a use case to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a component to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a node to contain
WITHOUT_CLASSIFICATION	$non-nls-1$$non-nls-2$
WITHOUT_CLASSIFICATION	a list of valid connections between elements the connection type first and then the elements to be connected
WITHOUT_CLASSIFICATION	if there isn't a 3rd column then this represents a connection of elements of the same type.
WITHOUT_CLASSIFICATION	if there is a 3rd column then this represents a connection of between 2 different types of element.
WITHOUT_CLASSIFICATION	if the array hasn't been flagged to indicate otherwise swap elements the elemnts and add again.
WITHOUT_CLASSIFICATION	specifies valid elements for a datatype to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an operation to contain
WITHOUT_CLASSIFICATION	valid elements for a stereotype to contain
WITHOUT_CLASSIFICATION	valid elements for an action to contain
WITHOUT_CLASSIFICATION	trying to get a built-in standard profile from eclipse uml2
WITHOUT_CLASSIFICATION	removed from uml 2
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	roll back transaction to remove any partial results read
WITHOUT_CLASSIFICATION	we shouldn't get here but just in case we want a wide exception catcher to make sure our transaction always gets ended
WITHOUT_CLASSIFICATION	if we can find a nested sax exception it will have information on the line number etc.
WITHOUT_CLASSIFICATION	ignore if the extent never got created or has been deleted
WITHOUT_CLASSIFICATION	inputsource xformedinput = chainedtransform(transformfiles pis)
WITHOUT_CLASSIFICATION	inputsource xformedinput = chainedtransform(transformfiles pis)
WITHOUT_CLASSIFICATION	@see org.argouml.model.xmireader#getxmiuuidtoobjectmap()
WITHOUT_CLASSIFICATION	set up reader to be first filter in chain
WITHOUT_CLASSIFICATION	set up source for style sheet
WITHOUT_CLASSIFICATION	create & set up temporary output file
WITHOUT_CLASSIFICATION	in uml2.x there is no metaclass named method but we use the 'method' association of behavioralfeature
WITHOUT_CLASSIFICATION	ret.setisleaf(false) ret.setisroot(false)
WITHOUT_CLASSIFICATION	create filter for each style sheet and chain to previous filter/reader
WITHOUT_CLASSIFICATION	create transformer and do transformation
WITHOUT_CLASSIFICATION	set up for next iteration
WITHOUT_CLASSIFICATION	create & set up temporary output file
WITHOUT_CLASSIFICATION	silently ignore anything specified by caller attempt to continue
WITHOUT_CLASSIFICATION	we presume the stream is encoded using the default char encoding
WITHOUT_CLASSIFICATION	delete the old extent first
WITHOUT_CLASSIFICATION	log.log(level.warning "unable to find extent " + extent)
WITHOUT_CLASSIFICATION	set the storage id for our repository so that mofids will be unique (they are composed as "storageid""serialnumber"). note the storage manager only looks for a few property names such as the storagefactoryclassname. everything else needs to be prefixed with "mdrstorageproperty." which gets deleted from the property name before it and its associated value are copied to an internal property table separate from the system property table.
WITHOUT_CLASSIFICATION	connect to the repository
WITHOUT_CLASSIFICATION	create an extent and read in our metamodel (m2 model)
WITHOUT_CLASSIFICATION	create and start event pump first so it's available for all others
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getdiagraminterchangemodel()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getfacade()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getmodeleventpump()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getactivitygraphsfactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getactivitygraphshelper()
WITHOUT_CLASSIFICATION	handles all children of relationship including extend and include which are not members of core
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	disable event delivery during model load
WITHOUT_CLASSIFICATION	if we've got a streaming input copy it to make sure we'll be able to rewind it if necessary
WITHOUT_CLASSIFICATION	use a transaction to avoid the performance penalty (3x) of mdr's autocommit mode
WITHOUT_CLASSIFICATION	if a uml 1.3 file attempt to upgrade it to uml 1.4
WITHOUT_CLASSIFICATION	roll back transaction from first attempt & start new one
WITHOUT_CLASSIFICATION	clear the associated id maps & reset starting collection
WITHOUT_CLASSIFICATION	make sure we always have a default extent. the old extent will get deleted as part of creating the new extent.
WITHOUT_CLASSIFICATION	datatypes is next so it's available for kinds modelmanagement & extensions
WITHOUT_CLASSIFICATION	initialize remaining factories and helpers (but defer heavyweight ones until needed)
WITHOUT_CLASSIFICATION	create a default extent for the user uml model. this will get replaced if a new model is read in from an xmi file.
WITHOUT_CLASSIFICATION	note if we switch to a persistent repository like the b-tree repository we'll want to keep the old extent(s) around
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getcollaborationsfactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getcommonbehaviorhelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getcopyhelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getcorefactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getcorehelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getdatatypesfactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getdatatypeshelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getextensionmechanismsfactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getmodelmanagementfactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getmodelmanagementhelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getstatemachinesfactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getstatemachineshelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getumlfactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getumlhelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getusecasesfactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getusecaseshelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getchangeablekind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getaggregationkind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getpseudostatekind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getscopekind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getconcurrencykind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getdirectionkind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getorderingkind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.commonbehaviorhelper#setnodeinstance(java.lang.object java.lang.object)
WITHOUT_CLASSIFICATION	elements created after file load won't have index entries
WITHOUT_CLASSIFICATION	normally the extent should exist already but in the case of making an empty project we may not have an extent yet so create a default extent
WITHOUT_CLASSIFICATION	private constructor for common work needed by both public constructors.
WITHOUT_CLASSIFICATION	end our transaction
WITHOUT_CLASSIFICATION	@see org.argouml.model.extensionmechanismshelper#getallpossiblestereotypes(java.util.collection java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.extensionmechanismshelper#getcommontaggedvaluetypes()
WITHOUT_CLASSIFICATION	there is nothing to do in uml1.4
WITHOUT_CLASSIFICATION	forbid instantiation
WITHOUT_CLASSIFICATION	mdr classes may have a uml or uml prefix which should be removed.
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	@see org.argouml.model.metatypes#getabstraction()
WITHOUT_CLASSIFICATION	delete stimulii which have this as their dispatchaction
WITHOUT_CLASSIFICATION	delete messages which have this as their action
WITHOUT_CLASSIFICATION	delete linkends
WITHOUT_CLASSIFICATION	delete attributelinks where this is the value
WITHOUT_CLASSIFICATION	delete stimuli which have this as a sender or receiver
WITHOUT_CLASSIFICATION	binary link
WITHOUT_CLASSIFICATION	delete all sendactions which have this as signal
WITHOUT_CLASSIFICATION	delete all signalevents which have this as the signal
WITHOUT_CLASSIFICATION	@see org.argouml.model.umlhelper#deletecollection(java.util.collection)
WITHOUT_CLASSIFICATION	@see org.argouml.model.umlhelper#getsource(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.umlhelper#getdestination(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.umlhelper#move(java.lang.object org.argouml.model.umlhelper.direction)
WITHOUT_CLASSIFICATION	text was stored in name in uml 1.3
WITHOUT_CLASSIFICATION	the name of the meta type is the class name (after the last .) and before the next $ or end of class name.
WITHOUT_CLASSIFICATION	delete collaborationinstancesets where this is the last participatinginstance
WITHOUT_CLASSIFICATION	delete interactioninstancesets where this is the last participatingstimulus
WITHOUT_CLASSIFICATION	handles all children of relationship including extend and include which are not members of core
WITHOUT_CLASSIFICATION	this doesn't support i18n or multiple states but it's just a default
WITHOUT_CLASSIFICATION	partitions are composite elements and will get deleted implicitly partition contents don't need to be deleted or checked
WITHOUT_CLASSIFICATION	@see org.netbeans.api.xmi.xmireferenceprovider#getreference(javax.jmi.reflect.refobject)
WITHOUT_CLASSIFICATION	look for an existing reference matching our mofid
WITHOUT_CLASSIFICATION	probably redundant - just in case
WITHOUT_CLASSIFICATION	delete messages which have this as sender or receiver
WITHOUT_CLASSIFICATION	helper interfaces and methods.
WITHOUT_CLASSIFICATION	checkstyleoff - ignore too many parameters since api is fixed by mdr
WITHOUT_CLASSIFICATION	checkstyleon
WITHOUT_CLASSIFICATION	shorthand notation for convenience
WITHOUT_CLASSIFICATION	quick exit if it's a transaction event (we get a lot of them and they are all ignored)
WITHOUT_CLASSIFICATION	the 4-arg version of this method depends on this ordering. don't change it!
WITHOUT_CLASSIFICATION	interactioninstancesets will get deleted automatically because they are associated by composition
WITHOUT_CLASSIFICATION	if this is the only message contained in the interaction we delete the interaction
WITHOUT_CLASSIFICATION	object from a different file register with superclass so it can resolve all references
WITHOUT_CLASSIFICATION	@see org.netbeans.lib.jmi.xmi.xmicontext#getreference(java.lang.string java.lang.string)
WITHOUT_CLASSIFICATION	/ begin andromda code /
WITHOUT_CLASSIFICATION	if the model url has a suffix of '.zip' or '.jar' get the suffix without it and store it in the urlmap
WITHOUT_CLASSIFICATION	several tries to construct a url that really exists.
WITHOUT_CLASSIFICATION	if systemid is publicid previously mapped from a systemid try to use the systemid.
WITHOUT_CLASSIFICATION	try to find suffix in module list.
WITHOUT_CLASSIFICATION	search the classpath
WITHOUT_CLASSIFICATION	give up and let superclass deal with it.
WITHOUT_CLASSIFICATION	remove the first prefix because it may be an archive (like magicdraw)
WITHOUT_CLASSIFICATION	we've got a profile read pending - handle it ourselves now
WITHOUT_CLASSIFICATION	shouldn't happen
WITHOUT_CLASSIFICATION	otherwise if it's not something we've already read just punt to the super class.
WITHOUT_CLASSIFICATION	unfortunately the mdr super implementation throws debugexception with just the message from the causing exception rather than nesting the exception itself so we don't have all the information we'd like
WITHOUT_CLASSIFICATION	only add mof elements not primitive datatypes
WITHOUT_CLASSIFICATION	only add mof elements not primitive datatypes
WITHOUT_CLASSIFICATION	for transition use indirection through target statevertex
WITHOUT_CLASSIFICATION	look for an existing reference matching our mofid
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	get all (uml) metaclasses
WITHOUT_CLASSIFICATION	object[] args = { typename elemname } misc.name.element-import = imported {0} {1} return translator .localize("misc.name.element-import" args)
WITHOUT_CLASSIFICATION	although this only handles one level of package it is ok for uml 1.4 because of clustering get the right uml package in the extent
WITHOUT_CLASSIFICATION	return the metatype proxy
WITHOUT_CLASSIFICATION	we must find out if the activator itself does not have message as it's activator
WITHOUT_CLASSIFICATION	an activator can't also be a predecessor of a message
WITHOUT_CLASSIFICATION	this double 'for' loop may be optimised as follows - use arrays in stead of a set for bases - have the second loop start from the element after base1 but i chose not to do this since the gain is small and this is only used for a lazily filled combo. btw this is also used by notation.
WITHOUT_CLASSIFICATION	an association can only have a single unnamed classifierrole so
WITHOUT_CLASSIFICATION	if we are unnamed eliminate all classifiers which are already the base of some role
WITHOUT_CLASSIFICATION	eliminate classifiers which already have an unnamed role
WITHOUT_CLASSIFICATION	wfr 2.10.3.3 #4
WITHOUT_CLASSIFICATION	eliminate classifiers which already have an unnamed role
WITHOUT_CLASSIFICATION	we need to verify that ns is a package if not - find its parent package! otherwise this causes an exception when creating a sequence diagram for a classifierrole.
WITHOUT_CLASSIFICATION	no initialization currently
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	if we are unnamed eliminate all classifiers which are already the base of some role
WITHOUT_CLASSIFICATION	|| context instanceof collaboration || context instanceof model
WITHOUT_CLASSIFICATION	@see org.netbeans.lib.jmi.xmi.xmiheaderprovider#writeheader(java.io.writer)
WITHOUT_CLASSIFICATION	note the <xmi.header></xmi.header> is provided for us
WITHOUT_CLASSIFICATION	not implemented in mdr
WITHOUT_CLASSIFICATION	@see org.argouml.model.abstractmodeleventpump#addmodeleventlistener(java.beans.propertychangelistener java.lang.object java.lang.string[])
WITHOUT_CLASSIFICATION	@see org.argouml.model.abstractmodeleventpump#addmodeleventlistener(java.beans.propertychangelistener java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.abstractmodeleventpump#removemodeleventlistener(java.beans.propertychangelistener java.lang.object java.lang.string[])
WITHOUT_CLASSIFICATION	@see org.argouml.model.abstractmodeleventpump#removemodeleventlistener(java.beans.propertychangelistener java.lang.object java.lang.string[])
WITHOUT_CLASSIFICATION	@see org.argouml.model.abstractmodeleventpump#removemodeleventlistener(java.beans.propertychangelistener java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.abstractmodeleventpump#addclassmodeleventlistener(java.beans.propertychangelistener java.lang.object java.lang.string[])
WITHOUT_CLASSIFICATION	clean up index entries
WITHOUT_CLASSIFICATION	will always be null
WITHOUT_CLASSIFICATION	create a change event for the corresponding property
WITHOUT_CLASSIFICATION	will always be null
WITHOUT_CLASSIFICATION	create an event for the other end of the association
WITHOUT_CLASSIFICATION	will always be null
WITHOUT_CLASSIFICATION	and a change event for that end
WITHOUT_CLASSIFICATION	will always be null
WITHOUT_CLASSIFICATION	will always be null
WITHOUT_CLASSIFICATION	create a change event for the associated property
WITHOUT_CLASSIFICATION	will always be null
WITHOUT_CLASSIFICATION	create an event for the other end of the association
WITHOUT_CLASSIFICATION	will always be null
WITHOUT_CLASSIFICATION	create a change event for the associated property
WITHOUT_CLASSIFICATION	will always be null
WITHOUT_CLASSIFICATION	cut down on debugging noise
WITHOUT_CLASSIFICATION	unregister deleted instances after all events have been delivered
WITHOUT_CLASSIFICATION	any given listener is only called once even if it is registered for multiple relevant matches
WITHOUT_CLASSIFICATION	this will include all subtypes registered
WITHOUT_CLASSIFICATION	(log.isdebugenabled()
WITHOUT_CLASSIFICATION	for debugging you probably want either this or the logging for every event which is fired - not both
WITHOUT_CLASSIFICATION	log.isdebugenabled()
WITHOUT_CLASSIFICATION	fetch the key before going in synchronized mode
WITHOUT_CLASSIFICATION	log.log(level.fine " class " + name + " has subtypes " + names.get(name))
WITHOUT_CLASSIFICATION	convert classname to refobject
WITHOUT_CLASSIFICATION	if we don't have a mofclass see if we can get one from the instance
WITHOUT_CLASSIFICATION	if we still don't have a mofclass something's wrong
WITHOUT_CLASSIFICATION	throw new illegalargumentexception("property '" + attribute + "' doesn't exist in metamodel")
WITHOUT_CLASSIFICATION	if there isn't a 3rd column then this represents a connection of elements of the same type.
WITHOUT_CLASSIFICATION	save the model (current)
WITHOUT_CLASSIFICATION	@see org.argouml.model.changeablekind#getaddonly()
WITHOUT_CLASSIFICATION	lookup primary key creating new entry if needed
WITHOUT_CLASSIFICATION	lookup primary key creating new entry if needed
WITHOUT_CLASSIFICATION	if there are no subkeys register using our special value to indicate that this is a primary key only registration
WITHOUT_CLASSIFICATION	uml 2.x only
WITHOUT_CLASSIFICATION	uml 2.x only
WITHOUT_CLASSIFICATION	uml 2.x only
WITHOUT_CLASSIFICATION	look for a tagdefinition matching the given name
WITHOUT_CLASSIFICATION	create a new tagdefinition if none found
WITHOUT_CLASSIFICATION	only add all if there are some to add.
WITHOUT_CLASSIFICATION	clear target so that multiple copies have no effect (other than inefficiency)
WITHOUT_CLASSIFICATION	delete all taggedvalues with this type
WITHOUT_CLASSIFICATION	used by the copy functions. do not call this function directly. @param source the stereotype to copy from. @param target the object becoming a copy.
WITHOUT_CLASSIFICATION	"element")
WITHOUT_CLASSIFICATION	well formedness rule 4.12.3.1 compositestate [4] there have to be at least two composite substates in a concurrent composite state. if this is broken by deletion of substate then we delete the other remaining substates.
WITHOUT_CLASSIFICATION	the effect will get deleted automatically by mdr unlike the guard.
WITHOUT_CLASSIFICATION	although usage & permission are dependencies they need to be include separately because of the way lookup works
WITHOUT_CLASSIFICATION	the following is specifically for realizations
WITHOUT_CLASSIFICATION	the next 3 restrictions for abstraction seem to be argo specific not something the uml spec requires - tfm - 20070215
WITHOUT_CLASSIFICATION	a list of valid connections between elements the connection type first and then the elements to be connected
WITHOUT_CLASSIFICATION	todo constraints todo required tags
WITHOUT_CLASSIFICATION	specifies valid elements for a model to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a model to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a package to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a classifier to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an interface to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a signal to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an actor to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a use case to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a use case to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a node to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a enumeration to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a datatype to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a operation to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an event to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an associationrole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an associationrole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an associationrole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an associationrole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an associationrole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an associationrole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an associationrole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an associationrole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an associationrole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an associationrole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an state to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an callstate to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an simplestate to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an subactivitystate to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an actionstate to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an actionstate to contain
WITHOUT_CLASSIFICATION	supports implementation of some special elements not supported by buildnode
WITHOUT_CLASSIFICATION	the list of namespaces to return
WITHOUT_CLASSIFICATION	if our map has any entries for this type it's a connection type
WITHOUT_CLASSIFICATION	get the list of valid model item pairs for the given connection type
WITHOUT_CLASSIFICATION	see if there's a pair in this list that match the given model elements
WITHOUT_CLASSIFICATION	find the passed in container in validcontainmentmap
WITHOUT_CLASSIFICATION	determine if metatype is a valid element for container
WITHOUT_CLASSIFICATION	uml 1.4.2 spec section 4.5.3.20 [5] a generalizableelement may only be a child of generalizableelement of the same kind.
WITHOUT_CLASSIFICATION	begin a transaction - we'll do a bunch of reads first to collect a set of elements to delete - then delete them all
WITHOUT_CLASSIFICATION	no else here to make sure classifier with its double inheritance goes ok
WITHOUT_CLASSIFICATION	no else here to make sure associationclass goes ok
WITHOUT_CLASSIFICATION	no else to handle multiple inheritance of linkobject
WITHOUT_CLASSIFICATION	if we get this with the repository locked it means our root model element was already deleted. nothing to do
WITHOUT_CLASSIFICATION	our wrapped version of the same error
WITHOUT_CLASSIFICATION	end our transaction
WITHOUT_CLASSIFICATION	if there are no owned elements then return empty list
WITHOUT_CLASSIFICATION	this enforces the following well-formedness rule. <p>well formedness rule 4.12.3.1 compositestate [4] there have to be at least two composite substates in a concurrent composite state.<p> if this is broken by deletion of substate then we change the parent composite substate to be not concurrent.
WITHOUT_CLASSIFICATION	we don't care about the value - just want to see if it throws
WITHOUT_CLASSIFICATION	recurse into ourself for each parent
WITHOUT_CLASSIFICATION	the following should always be true
WITHOUT_CLASSIFICATION	if we were handed a classifier to start this must be a classifier
WITHOUT_CLASSIFICATION	we have to follow the arrows..
WITHOUT_CLASSIFICATION	|| ns instanceof usecase see comment below
WITHOUT_CLASSIFICATION	note although wfr #3 in section 2.11.3.5 usecase of the uml 1.4 spec says "a usecase cannot contain any classifiers" the ocl is actually self.contents->isempty which would seem to imply it can't contain any elements - tfm - 20060416
WITHOUT_CLASSIFICATION	made following changes from ocl in uml 1.4 section 2.9.3.16 collaborationinstance -> collaborationinstanceset stimuli -> stimulus
WITHOUT_CLASSIFICATION	a profile is a special package having the <<profile>> stereotype which can only contain the following types
WITHOUT_CLASSIFICATION	|| modelelement instanceof statemachine
WITHOUT_CLASSIFICATION	a profile is a special package having the <<profile>> stereotype
WITHOUT_CLASSIFICATION	there actually don't appear to be any restrictions on the namespace for a generalization. the uml 1.4 wfr 2.5.3.20 #3 refers to generalizableelements not generalizations - tfm
WITHOUT_CLASSIFICATION	only build a namepace if needed with
WITHOUT_CLASSIFICATION	return struc.getowner().getnamespace().getownedelement().contains( struc.gettype())
WITHOUT_CLASSIFICATION	self.allconnections->forall(r | self.namespace.allcontents->includes(r.participant) )
WITHOUT_CLASSIFICATION	d.supplier.oclastype(generalizableelement). allparents.oclastype(namespace).ownedelement->select (e | e. elementownership.visibility = #public)->includes (r.participant) or
WITHOUT_CLASSIFICATION	d.supplier.oclastype(namespace).ownedelement->select (e | e.elementownership.visibility = #public)->includes (r.participant) or
WITHOUT_CLASSIFICATION	d.supplier.oclastype(package).allimportedelements->select ( e | e. elementimport.visibility = #public) ->includes (r.participant) ) )
WITHOUT_CLASSIFICATION	get the namespace hierarchy for each element
WITHOUT_CLASSIFICATION	traverse the lists looking for the last (innermost) match
WITHOUT_CLASSIFICATION	this is an expensive method that we should ensure is called rarely. hence info level to track easily.
WITHOUT_CLASSIFICATION	uml 1.4 wfr 2.5.3.1 #3
WITHOUT_CLASSIFICATION	uml 1.4 wfr 2.5.3.1 #3 - no aggregation for n-ary associations
WITHOUT_CLASSIFICATION	we silently ignore requests which conflict with uml 1.4 wfr 2.5.3.1 #3 - no aggregation for n-ary associations
WITHOUT_CLASSIFICATION	if we made something aggregate make sure the other ends conform to uml 1.4 wfr 2.5.3.1 #2 - no more than one aggregate end
WITHOUT_CLASSIFICATION	uml 1.4 wfr 2.5.3.1 #3 - no aggregation for n-ary associations
WITHOUT_CLASSIFICATION	<em>warning when changing the implementation of this method be warned that the sequence of the if then else tree does matter.</em> most notably do not move the setnamespace method any level up in the tree.<p>
WITHOUT_CLASSIFICATION	all text was stored in name field in uml 1.3
WITHOUT_CLASSIFICATION	returns nothing
WITHOUT_CLASSIFICATION	boolean string integer long float double etc
WITHOUT_CLASSIFICATION	this method is cpu intensive and therefore needs to be as efficient as possible.
WITHOUT_CLASSIFICATION	because we get the metatype class stripped of its reflective proxies we need to jump through a hoop or two to find it in the metamodel then work from there to get its proxy.
WITHOUT_CLASSIFICATION	remove any elements not in requested namespace
WITHOUT_CLASSIFICATION	check whether model element is contained in given namespace/container.
WITHOUT_CLASSIFICATION	get classifiers in namespace
WITHOUT_CLASSIFICATION	get features owned by those classifiers
WITHOUT_CLASSIFICATION	select those features which are behavioralfeatures
WITHOUT_CLASSIFICATION	should these also be deleted?
WITHOUT_CLASSIFICATION	this is silly but for backward compatibility
WITHOUT_CLASSIFICATION	todo this is the 2nd part of this method
WITHOUT_CLASSIFICATION	for a classifier <pre> [10] the operation allcontents returns a set containing all modelelements contained in the classifier together with the contents inherited from its parents. allcontents set(modelelement) allcontents = self.contents->union( self.parent.allcontents->select(e | e.elementownership.visibility = #public or e.elementownership.visibility = #protected)) where parent is defined for generalizableelement as [1] the operation parent returns a set containing all direct parents parent set(generalizableelement) parent = self.generalization.parent </pre><p>
WITHOUT_CLASSIFICATION	for a collaboration <pre> [1 ] the operation allcontents results in the set of all modelelements contained in the collaboration together with those contained in the parents except those that have been specialized. allcontents set(modelelement) allcontents = self.contents->union ( self.parent.allcontents->reject ( e | self.contents.name->include (e.name) )) parent here is the generalizableelement definition </pre>
WITHOUT_CLASSIFICATION	wellformednessrules and preconditions
WITHOUT_CLASSIFICATION	uml 1.4 wfr 2.5.3.1 #3 - no aggregation for n-ary associations
WITHOUT_CLASSIFICATION	equal
WITHOUT_CLASSIFICATION	greater
WITHOUT_CLASSIFICATION	less than
WITHOUT_CLASSIFICATION	binary association
WITHOUT_CLASSIFICATION	delete linkends which have this as their associationend
WITHOUT_CLASSIFICATION	delete attributelinks where this is the attribute
WITHOUT_CLASSIFICATION	delete createactions which have this as their instantiation
WITHOUT_CLASSIFICATION	@see org.argouml.model.activitygraphshelper#findclassifierbyname( java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	delete dependencies where this is the only client
WITHOUT_CLASSIFICATION	delete dependencies where this is the only supplier
WITHOUT_CLASSIFICATION	delete callactions which have this as their operation
WITHOUT_CLASSIFICATION	delete callevents which have this as their operation
WITHOUT_CLASSIFICATION	todo all the todos in the docopyfoo methods below are inherited from the nsuml implementation and do not reflect new issues. one additional thing which does need to be dealt with is the copying of any attributes which have been added since this code was implemented for uml 1.3.
WITHOUT_CLASSIFICATION	nothing more to do.
WITHOUT_CLASSIFICATION	used by the copy functions. do not call this function directly. todo actions? instances? collaborations etc? @param source the source classifier @param target the target classifier
WITHOUT_CLASSIFICATION	copy all the features
WITHOUT_CLASSIFICATION	used by the copy functions. do not call this function directly. todo generalizations specializations? @param source the source generalizable element @param target the target generalizable element
WITHOUT_CLASSIFICATION	used by the copy functions. do not call this function directly. todo template parameters default type todo constraining elements todo flows dependencies comments bindings contexts ??? todo contents residences ??? @param source the source me @param target the target me
WITHOUT_CLASSIFICATION	nothing more to do don't copy owned elements.
WITHOUT_CLASSIFICATION	copy raised signals
WITHOUT_CLASSIFICATION	set the name so that superclasses can find the newly created element in the model if necessary.
WITHOUT_CLASSIFICATION	note that if we're copying this element then we must also be allowed to copy other necessary objects.
WITHOUT_CLASSIFICATION	don't explicitly check if element is null
WITHOUT_CLASSIFICATION	return 1..1 multiplicity for empty string
WITHOUT_CLASSIFICATION	convert "" to "0.." instead of ".."
WITHOUT_CLASSIFICATION	in this case either the container was not set or it was not contained in a statemachine.
WITHOUT_CLASSIFICATION	according wfr in case of activitygraph only.
WITHOUT_CLASSIFICATION	for consistency with attribute and operation give it a default name and location
WITHOUT_CLASSIFICATION	delete extends which have this as their only extensionpoint
WITHOUT_CLASSIFICATION	delete extends where this is the base
WITHOUT_CLASSIFICATION	delete includes where this is the addition
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	test multipe items registered for single key set
WITHOUT_CLASSIFICATION	remove with null item should remove all entries for key
WITHOUT_CLASSIFICATION	success
WITHOUT_CLASSIFICATION	success
WITHOUT_CLASSIFICATION	need to copy the lists since we will be moving the elements one by one
WITHOUT_CLASSIFICATION	deleting "source" here would probably delete the parameters
WITHOUT_CLASSIFICATION	only set the name if it differs from the text.
WITHOUT_CLASSIFICATION	need to copy the lists since we will be moving the elements
WITHOUT_CLASSIFICATION	this is not necessarily the current diagram!
WITHOUT_CLASSIFICATION	remove the old fig from the diagram so we can draw the new one in its place
WITHOUT_CLASSIFICATION	p.movetotrash(source)
WITHOUT_CLASSIFICATION	as soon as we've created a notation and have registered it listener force an event to go to the listener so it draws for the first time.
WITHOUT_CLASSIFICATION	if there are no subkeys register using our special value to indicate that this is a primary key only registration
WITHOUT_CLASSIFICATION	made following change from ocl in uml 1.4 section 2.9.3.22 collaborationinstance -> collaborationinstanceset
WITHOUT_CLASSIFICATION	if there is a 3rd column then this represents a connection of between 2 different types of element.
WITHOUT_CLASSIFICATION	elements which will be deleted when their container is deleted don't get added to the list of elements to be deleted (but we still want to traverse them looking for other elements to be deleted)
WITHOUT_CLASSIFICATION	technically this is legal but a structuralfeature should probably only ever have an owner instead of a namespace. - tfm
WITHOUT_CLASSIFICATION	we'll put the association in the namespace of whichever end is not navigable and is writeable. if they both are we'll use the namepace of c1.
WITHOUT_CLASSIFICATION	enumerationliterals should get deleted implicitly since they are associated by composition
WITHOUT_CLASSIFICATION	set the namespace to that of the base as first choice or that of the addition as second choice.
WITHOUT_CLASSIFICATION	uml2 only
WITHOUT_CLASSIFICATION	editor editor = globals.cureditor() graphmodel gm = editor.getgraphmodel() layerdiagram lay = ((layerdiagram) editor.getlayermanager().getactivelayer())
WITHOUT_CLASSIFICATION	have we handled uml2 here?
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	get all classifiers in all top level packages of all profiles
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	we got passed an unmodifiable list. copy it and sort the result
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mousereleased( java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mousepressed(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseclicked(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseentered(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	set up the property panels for uml elements
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#setexpression(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#newexpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	build up an array list of the heights of each label/component pair. heights of zero indicate a proportional height.
WITHOUT_CLASSIFICATION	make sure the component width isn't any greater than its maximum allowed width
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.action#isenabled()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#getselectedmodelelement()
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#getexpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#setexpression(java.lang.object)
WITHOUT_CLASSIFICATION	if we do not set it to null first then we get a mdr debugexception
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#newexpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#addelement(java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.comboboxmodel#setselecteditem(java.lang.object)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	this can throw an exception if the target has been deleted. we don't want to try locking the repository because this is called from the event delivery thread and could cause a deadlock. instead catch the exception and leave the model empty.
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see javax.swing.defaultlistmodel#contains(java.lang.object)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	we tried to remove a value
WITHOUT_CLASSIFICATION	allow listening to other elements
WITHOUT_CLASSIFICATION	don't test changed element if it was deleted
WITHOUT_CLASSIFICATION	@see javax.swing.abstractlistmodel#firecontentschanged( object int int)
WITHOUT_CLASSIFICATION	@see javax.swing.abstractlistmodel#fireintervaladded( object int int)
WITHOUT_CLASSIFICATION	@see javax.swing.abstractlistmodel#fireintervalremoved( object int int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel2#getselectedmodelelement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel2#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	do nothing by design.
WITHOUT_CLASSIFICATION	do nothing by default.
WITHOUT_CLASSIFICATION	allow null
WITHOUT_CLASSIFICATION	this is explained by wfr 2 of a structuralfeature the type of a structuralfeature must be a class datatype or interface. @see org.argouml.uml.ui.umlcomboboxmodel#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#buildmodellist()
WITHOUT_CLASSIFICATION	restricting types for tagged values
WITHOUT_CLASSIFICATION	classifier is way too much in uml 2.x
WITHOUT_CLASSIFICATION	the minimum set of standard types
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#getselectedmodelelement()
WITHOUT_CLASSIFICATION	do nothing by default.
WITHOUT_CLASSIFICATION	@see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	keep them sorted
WITHOUT_CLASSIFICATION	we got passed an unmodifiable list. copy it and sort the result
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#getexpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#setexpression(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#newexpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel2#getselectedmodelelement()
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed( java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#addothermodeleventlisteners(java.lang.object)
WITHOUT_CLASSIFICATION	make a copy of the modelelements
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlplaintextdocument#setproperty(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlplaintextdocument#getproperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlplaintextdocument#setproperty(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlplaintextdocument#getproperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel2#isvalidelement( java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel2#getselectedmodelelement()
WITHOUT_CLASSIFICATION	add stereotypes submenu
WITHOUT_CLASSIFICATION	the method
WITHOUT_CLASSIFICATION	the selected operation
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildpopup(javax.swing.jpopupmenu int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#settarget(java.lang.object)
WITHOUT_CLASSIFICATION	make sure we know it when a classifier is added as a base
WITHOUT_CLASSIFICATION	make sure we know it when a classifier is added as a base
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#getselectedmodelelement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#isvalidelement(object)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#buildmodellist()
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#getselectedmodelelement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#removeothermodeleventlisteners(java.lang.object)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	base is already set to this assoc
WITHOUT_CLASSIFICATION	this check is needed otherwise the setbase() below gives an exception.
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	just in case the existing selected element is from elsewhere make sure it is in the list
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	the selected value may be "" to clear the represented classifier.
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	private boolean mustrefresh
WITHOUT_CLASSIFICATION	mustrefresh = true
WITHOUT_CLASSIFICATION	this should not happen.
WITHOUT_CLASSIFICATION	if it has no language then we assume it is not an instance of opaqueexpression so we leave it null and handle elsewhere
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlplaintextdocument#getproperty()
WITHOUT_CLASSIFICATION	/ build the field /
WITHOUT_CLASSIFICATION	/ add field(s) to panel /
WITHOUT_CLASSIFICATION	click on the already selected value must not call setvalue
WITHOUT_CLASSIFICATION	the 2 radios have only one information.
WITHOUT_CLASSIFICATION	update the model and then notify
WITHOUT_CLASSIFICATION	when call by contructor no one is selected
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	private boolean mustrefresh
WITHOUT_CLASSIFICATION	mustrefresh = true
WITHOUT_CLASSIFICATION	this should not happen.
WITHOUT_CLASSIFICATION	if we do not set it to null first then we get a mdr debugexception
WITHOUT_CLASSIFICATION	expressions are datatypes not independent model elements be careful not to reuse them
WITHOUT_CLASSIFICATION	we need to to this otherwise there is no notification and diagram isn't change
WITHOUT_CLASSIFICATION	needed for notification
WITHOUT_CLASSIFICATION	if the control is a panel add it
WITHOUT_CLASSIFICATION	to be really sure let's add the operation that is linked to the action in the model too - if it is not listed yet. we need this incase an operation is moved out of the package or maybe with imported xmi
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#getselectedmodelelement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#isvalidelement(java.lang.object)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#getexpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#setexpression(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#newexpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#getexpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#setexpression(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#newexpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#buildmodellist()
WITHOUT_CLASSIFICATION	fill the list with items
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#getselectedmodelelement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	in uml2 the target is already the "expression" (opaque)
WITHOUT_CLASSIFICATION	reuse opaque just set it's attributes
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	expressions are datatypes not independent model elements be careful not to reuse them
WITHOUT_CLASSIFICATION	make it stretch vertically
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#insertupdate(javax.swing.event. documentevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#getexpression()
WITHOUT_CLASSIFICATION	if we do not set it to null first then we get a mdr debugexception
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#newexpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement( java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#changedupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#removeupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#insertupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#changedupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#removeupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#insertupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	make it stretch vertically
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcombobox#doit(actionevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	p = new umlvaluespecificationpanel(model propertyname)
WITHOUT_CLASSIFICATION	mmodelelement
WITHOUT_CLASSIFICATION	if not it is a control and must be labeled
WITHOUT_CLASSIFICATION	only association end has an aggregation option box
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	create it [here opaqueexpression which is the first choice] note that if we edit the initial value in the diagram (double clic) it was replaced by an opaqueexpression
WITHOUT_CLASSIFICATION	destroy it
WITHOUT_CLASSIFICATION	title = "" because already done for optional
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#getselectedmodelelement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#buildmodellist()
WITHOUT_CLASSIFICATION	we got passed an unmodifiable list. copy it and sort the result
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	force the parent to redraw
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	do not set buildingmodel = false here otherwise the action for selection is performed.
WITHOUT_CLASSIFICATION	add new listeners
WITHOUT_CLASSIFICATION	makes sure we can select 'none'
WITHOUT_CLASSIFICATION	todo for large lists this is doing a linear search of literally thousands of elements
WITHOUT_CLASSIFICATION	todo here too?
WITHOUT_CLASSIFICATION	check against "" is needed for backward compatibility. don't remove without checking subclasses and warning downstream developers - tfm - 20081211
WITHOUT_CLASSIFICATION	start of interval
WITHOUT_CLASSIFICATION	end of interval
WITHOUT_CLASSIFICATION	in middle of interval
WITHOUT_CLASSIFICATION	allow listening to other elements
WITHOUT_CLASSIFICATION	makes sure we can select 'none'
WITHOUT_CLASSIFICATION	add new listeners
WITHOUT_CLASSIFICATION	don't try to test this if we're removing the element
WITHOUT_CLASSIFICATION	we tried to remove a value
WITHOUT_CLASSIFICATION	it would be better if we didn't need the container to get the target. this constructor can have zero parameters as soon as we improve targetchanged.
WITHOUT_CLASSIFICATION	allow listening to other elements
WITHOUT_CLASSIFICATION	@see javax.swing.listmodel#getelementat(int)
WITHOUT_CLASSIFICATION	@see javax.swing.listmodel#getsize()
WITHOUT_CLASSIFICATION	catch callers attempting to use one without other
WITHOUT_CLASSIFICATION	@see javax.swing.comboboxmodel#setselecteditem(java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.comboboxmodel#getselecteditem()
WITHOUT_CLASSIFICATION	@see javax.swing.abstractlistmodel#firecontentschanged( object int int)
WITHOUT_CLASSIFICATION	@see javax.swing.abstractlistmodel#fireintervaladded( object int int)
WITHOUT_CLASSIFICATION	@see javax.swing.abstractlistmodel#fireintervalremoved( object int int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	do nothing by default.
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlplaintextdocument#setproperty(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlplaintextdocument#getproperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	mutators hold write lock & will deadlock if use is not thread safe
WITHOUT_CLASSIFICATION	@see javax.swing.text.document#remove(int int)
WITHOUT_CLASSIFICATION	mutators hold write lock & will deadlock if use is not thread-safe
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#getselectedmodelelement()
WITHOUT_CLASSIFICATION	do nothing by design.
WITHOUT_CLASSIFICATION	note this may be called from a different thread so we need to be careful of the threading restrictions imposed by abstractdocument for mutators to be sure we don't deadlock.
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#isvalidelement(object)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	mutators hold write lock & will deadlock if use is not thread safe
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcheckbox#buildmodel()
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	super(new labelledlayout())
WITHOUT_CLASSIFICATION	c.insets = new insets(1 1 1 1)
WITHOUT_CLASSIFICATION	get the list opaqueexpression literalstring
WITHOUT_CLASSIFICATION	by default the first value of the combobox is selected.
WITHOUT_CLASSIFICATION	get current initialvalue
WITHOUT_CLASSIFICATION	select the current type in the combobox
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#getexpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#setexpression(java.lang.object)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	default 0 => opaqueexpression set to 1 for test
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#newexpression()
WITHOUT_CLASSIFICATION	if we do not set it to null first then we get a mdr debugexception
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#removeupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#insertupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	create the body and language field
WITHOUT_CLASSIFICATION	create other panel element
WITHOUT_CLASSIFICATION	create panel containing the previous field
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#buildmodellist()
WITHOUT_CLASSIFICATION	our comparator will throw an invalidelementexception if the old list contains deleted elements (eg after a new project is loaded) so remove all the old contents first
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#getselectedmodelelement()
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed( java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#getselectedmodelelement()
WITHOUT_CLASSIFICATION	make it stretch vertically
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	there are no composite states so this will work
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlplaintextdocument#getproperty()
WITHOUT_CLASSIFICATION	@see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	allow null
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#getselectedmodelelement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlplaintextdocument#setproperty(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlplaintextdocument#getproperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#settarget(java.lang.object)
WITHOUT_CLASSIFICATION	make sure we know it when a classifier is added as a base
WITHOUT_CLASSIFICATION	make sure we know it when a classifier is added as a base
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#getselectedmodelelement()
WITHOUT_CLASSIFICATION	make it stretch vertically
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel#buildmodellist()
WITHOUT_CLASSIFICATION	get all classifiers in our model todo we need the property panels to have some reference to the project they belong to instead of using deprecated functionality
WITHOUT_CLASSIFICATION	get all classifiers in all top level packages of all profiles
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#getselectedmodelelement()
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#changedupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#removeupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#getselectedmodelelement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#isvalidelement(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#isvalidelement(object)
WITHOUT_CLASSIFICATION	the selected value may be "" to clear the represented operation.
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlplaintextdocument#setproperty(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlplaintextdocument#getproperty()
WITHOUT_CLASSIFICATION	ignored - we just skipped inserting it in our document
WITHOUT_CLASSIFICATION	allow null
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#buildmodellist()
WITHOUT_CLASSIFICATION	make sure it's parseable as an number
WITHOUT_CLASSIFICATION	@see javax.swing.comboboxeditor#setitem(java.lang.object)
WITHOUT_CLASSIFICATION	we don't want to show some nasty gray background color now do we?
WITHOUT_CLASSIFICATION	@see javax.swing.comboboxeditor#geteditorcomponent()
WITHOUT_CLASSIFICATION	@see javax.swing.comboboxeditor#addactionlistener(java.awt.event.actionlistener)
WITHOUT_CLASSIFICATION	@see javax.swing.comboboxeditor#removeactionlistener(java.awt.event.actionlistener)
WITHOUT_CLASSIFICATION	@see javax.swing.comboboxeditor#selectall()
WITHOUT_CLASSIFICATION	@see javax.swing.comboboxeditor#getitem()
WITHOUT_CLASSIFICATION	we don't want to show some nasty gray background color now do we?
WITHOUT_CLASSIFICATION	we don't want to show some nasty gray background color now do we?
WITHOUT_CLASSIFICATION	necessary to create distance between the textfield and the icon.
WITHOUT_CLASSIFICATION	necessary to create distance between the textfield and the icon.
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcombobox2#umlcombobox2( umlcomboboxmodel action)
WITHOUT_CLASSIFICATION	next statement is necessary to update the textfield if the selection is equal to what was allready selected
WITHOUT_CLASSIFICATION	@see java.awt.event.focuslistener#focusgained(java.awt.event.focusevent)
WITHOUT_CLASSIFICATION	@see javax.swing.comboboxeditor#setitem(java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.comboboxeditor#geteditorcomponent()
WITHOUT_CLASSIFICATION	@see javax.swing.comboboxeditor#addactionlistener(java.awt.event.actionlistener)
WITHOUT_CLASSIFICATION	@see javax.swing.comboboxeditor#removeactionlistener(java.awt.event.actionlistener)
WITHOUT_CLASSIFICATION	@see javax.swing.comboboxeditor#selectall()
WITHOUT_CLASSIFICATION	@see javax.swing.comboboxeditor#getitem()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	temporary until simplelistmodel is used for all
WITHOUT_CLASSIFICATION	temporary until simplelistmodel is used for all
WITHOUT_CLASSIFICATION	create popup tool if we have a single row
WITHOUT_CLASSIFICATION	create add and remove buttons if needed first
WITHOUT_CLASSIFICATION	then any new buttons
WITHOUT_CLASSIFICATION	pushing this to the end of the awt thread seems to be the only way to get this to update correctly
WITHOUT_CLASSIFICATION	button action
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseclicked(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseentered(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseexited(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mousepressed(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	todo probably really want to cancel editing ((figtexteditor) focusowner).cancelediting()
WITHOUT_CLASSIFICATION	the 5 main component 2 label a panel for langage a panel with button a textarea
WITHOUT_CLASSIFICATION	translator.localize("button.delete")
WITHOUT_CLASSIFICATION	copy previous element
WITHOUT_CLASSIFICATION	copy next element
WITHOUT_CLASSIFICATION	translator.localize("button.move-up")
WITHOUT_CLASSIFICATION	copy in memory the current
WITHOUT_CLASSIFICATION	copy the previous value in the current
WITHOUT_CLASSIFICATION	copy the current in the previous
WITHOUT_CLASSIFICATION	copy in memory the current
WITHOUT_CLASSIFICATION	copy the next value in the current
WITHOUT_CLASSIFICATION	copy the current in the next
WITHOUT_CLASSIFICATION	layout
WITHOUT_CLASSIFICATION	the 2 component a textfield and a list
WITHOUT_CLASSIFICATION	layout
WITHOUT_CLASSIFICATION	extract the icon that is used by the tree control for the current look and feel
WITHOUT_CLASSIFICATION	add a new entry in the list and select it. translator.localize("button.add") +
WITHOUT_CLASSIFICATION	necessary to create distance between the textfield and the icon.
WITHOUT_CLASSIFICATION	eclipse uml2 implementation classes often start with "uml" $non-nls-1$
WITHOUT_CLASSIFICATION	eclipse uml2 implementation classes end with "impl" $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ make sure we have a recognized file extension $non-nls-1$
WITHOUT_CLASSIFICATION	if the euml.resources system property is defined then we are in a stand alone application else we're in an eclipse plug in. the euml.resource should contain the path to the org.eclipse.uml2.uml.resource jar plugin. $non-nls-1$
WITHOUT_CLASSIFICATION	slope of the line we're finding the normal to is slope and the normal is the negative reciprocal slope is (p1.y - p2.y) / (p1.x - p2.x) so recip is - (p1.x - p2.x) / (p1.y - p2.y)
WITHOUT_CLASSIFICATION	uml1.4 only
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseexited(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#getexpression()
WITHOUT_CLASSIFICATION	set the child components to the heights in the array list calculating the height of any proportional component on the fly.
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.actionsetmultiplicity#setselecteditem( java.lang.object java.lang.object)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	if we have a model but no list then build the list with preferred constructor. eventually all lists should be built this way.
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see javax.swing.defaultlistmodel#addelement(java.lang.object)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent )
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#removeothermodeleventlisteners(java.lang.object)
WITHOUT_CLASSIFICATION	@see java.beans.propertychangelistener#propertychange( java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	if the component is a jlabel which has another component assigned then position/size the label and calculate the size of the registered component
WITHOUT_CLASSIFICATION	if the child component is resizable then we don't know it's actual size yet. it will be calculated later as a proportion of the available left over space. for now this is flagged as zero.
WITHOUT_CLASSIFICATION	if a preferred height is not given or is the same as the minimum height then fix the height of this row.
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#getselectedmodelelement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#getselectedmodelelement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlplaintextdocument#setproperty(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#removeupdate(javax.swing.event. documentevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#setexpression(java.lang.object)
WITHOUT_CLASSIFICATION	we only have this here until we have stereotypes list on property panel
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	the property value has changed so rebuild our view. @see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#changedupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlplaintextdocument#setproperty(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel#isvalidelement(java.lang.object)
WITHOUT_CLASSIFICATION	so we found a classifier that is not a classifierinstate. and at least one state has been selected. well let's correct that
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#insertupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel#getselectedmodelelement()
WITHOUT_CLASSIFICATION	not in uml1.4
WITHOUT_CLASSIFICATION	not in uml1.4
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcombobox#umlcombobox( umlcomboboxmodel action boolean)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mousereleased(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	layout
WITHOUT_CLASSIFICATION	language has changed
WITHOUT_CLASSIFICATION	translator.localize("button.move-down")
WITHOUT_CLASSIFICATION	object icon = resourceloaderwrapper.lookupicon(s) putvalue(action.name translator.localize(s)) putvalue(action.small_icon icon) set the tooltip string putvalue(action.short_description translator.localize(s))
WITHOUT_CLASSIFICATION	mdr has a hardcoded printstacktrace on all exceptions even if they're caught which is unsightly so we handle unknown elements ourselves rather than letting mdr throw an exception for us to catch. org/netbeans/lib/jmi/util/logger.java this can be uses to disable logging. default output is system.err setproperty("org.netbeans.lib.jmi.logger.filename" "") org.netbeans.mdr.logger the property org.netbeans.lib.jmi.logger controls the minimum severity level for logging
WITHOUT_CLASSIFICATION	commit our transaction
WITHOUT_CLASSIFICATION	not in uml1.4
WITHOUT_CLASSIFICATION	ignore any error. the transaction may already have been unwound as part of exception processing by mdr
WITHOUT_CLASSIFICATION	give the resolver.getidtoobjectmap() entries priority over entries with the same uuid from resolver.getidtoobjectmaps() because entries in resolver.getidtoobjectmaps() are historic.
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getcollaborationshelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getcommonbehaviorfactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getextensionmechanismshelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getmetatypes()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getmessagesort()
WITHOUT_CLASSIFICATION	@see org.argouml.model.commonbehaviorhelper#setreceiver(java.lang.object java.lang.object)
WITHOUT_CLASSIFICATION	nothing to do - we get all events automatically
WITHOUT_CLASSIFICATION	handles all children of relationship including extend and include which are not members of core
WITHOUT_CLASSIFICATION	@see org.argouml.model.umlhelper#move(java.lang.object org.argouml.model.umlhelper.direction)
WITHOUT_CLASSIFICATION	remember the system id of our root document so that we can write out profiles and linked models to a different file if requested
WITHOUT_CLASSIFICATION	for now just skip registering this and ignore the request but the real issue is that magicdraw serializes the same object in two different composition associations first in the referencing file and second in the referenced file
WITHOUT_CLASSIFICATION	if we've found the module model log it and place it in the map so we don't have to find it if we need it again.
WITHOUT_CLASSIFICATION	/ end andromda code /
WITHOUT_CLASSIFICATION	returns a list
WITHOUT_CLASSIFICATION	simulates uml2 getting the aggregation from the opposite end
WITHOUT_CLASSIFICATION	find the bases of the connected classifierroles so that we can see what associations are between them. if there are bases then the associations between those bases form the possible bases. otherwise the bases are formed by all associations in the namespace of the collaboration
WITHOUT_CLASSIFICATION	@see org.argouml.model.abstractmodeleventpump#addmodeleventlistener(java.beans.propertychangelistener java.lang.object java.lang.string[])
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#critique(java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#supports(org.argouml.cognitive.decision)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#getsupporteddecisions()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#addsupporteddecision(org.argouml.cognitive.decision)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#supports(org.argouml.cognitive.goal)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#getsupportedgoals()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#addsupportedgoal(org.argouml.cognitive.goal)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#containsknowledgetype(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#addknowledgetype(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#expand(java.lang.string listset)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#getclarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#isactive()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#isenabled()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#todoitem(java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizedmetatypes()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#supports(org.argouml.cognitive.decision)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#getsupporteddecisions()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#supports(org.argouml.cognitive.goal)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#getsupportedgoals()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#containsknowledgetype(java.lang.string)
WITHOUT_CLASSIFICATION	just returns the descr param. @see org.argouml.cognitive.poster#expand(java.lang.string listset)
WITHOUT_CLASSIFICATION	get the generic clarifier for this designer/poster. @see org.argouml.cognitive.poster#getclarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#snooze()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#unsnooze()
WITHOUT_CLASSIFICATION	does not do anything. @see org.argouml.cognitive.poster#fixit(org.argouml.cognitive.todoitem java.lang.object)
WITHOUT_CLASSIFICATION	just returns false. @see org.argouml.cognitive.poster#canfixit(org.argouml.cognitive.todoitem)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#supports(org.argouml.cognitive.decision)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#supports(org.argouml.cognitive.goal)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#containsknowledgetype(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#expand(java.lang.string org.argouml.cognitive.listset)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#getclarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#fixit(org.argouml.cognitive.todoitem java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.controlmech#isrelevant(org.argouml.cognitive.critics.critic org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.controlmech#isrelevant(org.argouml.cognitive.critics.critic org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.controlmech#isrelevant(org.argouml.cognitive.critics.critic org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.controlmech#isrelevant(org.argouml.cognitive.critics.critic org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.controlmech#isrelevant(org.argouml.cognitive.critics.critic org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.controlmech#isrelevant(org.argouml.cognitive.critics.critic org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.controlmech#isrelevant(org.argouml.cognitive.critics.critic org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.controlmech#isrelevant(org.argouml.cognitive.critics.critic org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.controlmech#isrelevant(org.argouml.cognitive.critics.critic org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.controlmech#isrelevant(org.argouml.cognitive.critics.critic org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.controlmech#isrelevant(org.argouml.cognitive.critics.critic org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.controlmech#isrelevant(org.argouml.cognitive.critics.critic org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#gettarget()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#shouldbeenabled(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetadded(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetremoved(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetset(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todoitemschanged(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todoitemsadded(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todoitemsremoved(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todolistchanged(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todoitemschanged(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todoitemsadded(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todoitemsremoved(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todolistchanged(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.wizstep#settarget(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todoitemschanged(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todoitemsadded(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todoitemsremoved(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todolistchanged(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetadded( targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetremoved( targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetset(targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.projectfilepersister#doload(java.io.file)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todoitemschanged(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todoitemsadded(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todoitemsremoved(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todolistchanged(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todoitemschanged(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todoitemsadded(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todoitemsremoved(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todolistchanged(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todoitemschanged(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todoitemsadded(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todoitemsremoved(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todolistchanged(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todoitemschanged(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todoitemsadded(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todoitemsremoved(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todolistlistener#todolistchanged(org.argouml.cognitive.todolistevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetadded(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetremoved(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetset(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.application.events.argogeneratoreventlistener#generatorchanged(org.argouml.application.events.argogeneratorevent)
WITHOUT_CLASSIFICATION	@see org.argouml.application.events.argogeneratoreventlistener#generatoradded(org.argouml.application.events.argogeneratorevent)
WITHOUT_CLASSIFICATION	@see org.argouml.application.events.argogeneratoreventlistener#generatorremoved(org.argouml.application.events.argogeneratorevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#handleresettodefault()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.notationname#getconfigurationvalue()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.notationname#samenotationas(org.argouml.notation.notationname)
WITHOUT_CLASSIFICATION	add an element listener and remember the registration. @param element element to listen for changes on @see org.argouml.model.modeleventpump#addmodeleventlistener(propertychangelistener object string)
WITHOUT_CLASSIFICATION	utility function to add a listener for a given property name and remember the registration. @param element element to listen for changes on @param property name of property to listen for changes of @see org.argouml.model.modeleventpump#addmodeleventlistener(propertychangelistener object string)
WITHOUT_CLASSIFICATION	utility function to add a listener for an array of property names and remember the registration. @param element element to listen for changes on @param property array of property names (strings) to listen for changes of @see org.argouml.model.modeleventpump#addmodeleventlistener(propertychangelistener object string)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#getparsinghelp()
WITHOUT_CLASSIFICATION	utility function to remove an element listener and adapt the remembered list of registration. @param element element to listen for changes on @see org.argouml.model.modeleventpump#addmodeleventlistener(propertychangelistener object string)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#updatelistener(java.beans.propertychangelistener java.lang.object java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#getparsinghelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#parse(java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#getparsinghelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#parse(java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#parse( java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#getparsinghelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#parse(java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#getparsinghelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#getparsinghelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#parse(java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#parse(java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#getparsinghelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#parse(java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#getparsinghelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#getparsinghelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#parse(java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#parse(java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#getparsinghelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#getparsinghelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#parse(java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#getparsinghelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#getparsinghelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#parse(java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#parse(java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#getparsinghelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#getparsinghelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#parse(java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#parse(java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#getparsinghelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#parse(java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#getparsinghelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#parse(java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.notation.notationprovider#parse(java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.notation.notationprovider#getparsinghelp()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.notation.notationprovider#parse(java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.notation.notationprovider#getparsinghelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#getparsinghelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#parse(java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#parse(java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#getparsinghelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#getparsinghelp()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#handlesettingstabrefresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#handlesettingstabsave()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#handlesettingstabcancel()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#handleresettodefault()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#gettabkey()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#gettabpanel()
WITHOUT_CLASSIFICATION	@see org.argouml.application.events.argonotationeventlistener#notationchanged(org.argouml.application.events.argonotationevent)
WITHOUT_CLASSIFICATION	@see org.argouml.application.events.argonotationeventlistener#notationadded(org.argouml.application.events.argonotationevent)
WITHOUT_CLASSIFICATION	@see org.argouml.application.events.argonotationeventlistener#notationremoved(org.argouml.application.events.argonotationevent)
WITHOUT_CLASSIFICATION	@see org.argouml.application.events.argonotationeventlistener#notationprovideradded(org.argouml.application.events.argonotationevent)
WITHOUT_CLASSIFICATION	@see org.argouml.application.events.argonotationeventlistener#notationproviderremoved(org.argouml.application.events.argonotationevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.saxparserbase#handlestartelement( org.argouml.persistence.xmlelement)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.saxparserbase#handleendelement( org.argouml.persistence.xmlelement)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.saxparserbase#iselementofinterest(string)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.memberfilepersister#getmaintag()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.abstractfilepersister#getextension()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.abstractfilepersister#getdesc()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.xmifilepersister#issaveenabled()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.memberfilepersister#getmaintag()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.abstractfilepersister#getextension()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.abstractfilepersister#getdesc()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.abstractfilepersister#issaveenabled()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.projectfilepersister#doload(java.io.file)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.xmltokentablebase#setuptokens()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.memberfilepersister#getmaintag()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.memberfilepersister#load(org.argouml.kernel.project java.io.inputstream)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.memberfilepersister#save(org.argouml.kernel.projectmember java.io.outputstream)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.abstractfilepersister#getextension()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.abstractfilepersister#getdesc()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.projectfilepersister#doload(java.io.file)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.abstractfilepersister#getextension()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.xmltokentablebase#setuptokens()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.abstractfilepersister#getextension()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.abstractfilepersister#getdesc()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.abstractfilepersister#issaveenabled()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.abstractfilepersister#getdesc()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.abstractfilepersister#issaveenabled()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.projectfilepersister#doload(java.io.file)
WITHOUT_CLASSIFICATION	@see org.argouml.profile.profilemanager#lookforregisteredprofile(java.lang.string)
WITHOUT_CLASSIFICATION	@param pc @see org.argouml.profile.profilemanager#applyconfiguration(org.argouml.kernel.profileconfiguration)
WITHOUT_CLASSIFICATION	@see org.argouml.profile.internal.ocl.modelinterpreter#invokefeature(java.util.hashmap java.lang.object java.lang.string java.lang.string java.lang.object[])
WITHOUT_CLASSIFICATION	@see org.argouml.profile.internal.ocl.modelinterpreter#getbuiltinsymbol(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critic#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2(java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.profile.internal.ocl.oclexpressionevaluator#evaluate(java.util.hashmap org.argouml.profile.internal.ocl.modelinterpreter java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.profile.internal.ocl.modelinterpreter#invokefeature(java.util.hashmap java.lang.object java.lang.string java.lang.string java.lang.object[])
WITHOUT_CLASSIFICATION	@see org.argouml.profile.internal.ocl.modelinterpreter#getbuiltinsymbol(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.profile.internal.ocl.uml14.bag#count(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.progressmonitor#setmaximumprogress(int)
WITHOUT_CLASSIFICATION	@see org.argouml.profile.internal.ocl.modelinterpreter#getbuiltinsymbol(java.lang.string)
WITHOUT_CLASSIFICATION	returns the target of this tab. @see org.argouml.ui.tabtarget#gettarget()
WITHOUT_CLASSIFICATION	refresh the text of the tab. @see org.argouml.ui.tabtarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetadded(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetremoved(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetset(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#handleresettodefault()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#handleresettodefault()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#handlesettingstabrefresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#handlesettingstabsave()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#handlesettingstabcancel()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#handleresettodefault()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#gettabkey()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#gettabpanel()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.abstractargojpanel#spawn()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#settarget(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#gettarget()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#refresh()
WITHOUT_CLASSIFICATION	style panels only apply when a fig is selected. @see org.argouml.ui.tabtarget#shouldbeenabled(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetadded( targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetremoved( targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetset(targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetadded(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetremoved(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetset(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#handleresettodefault()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#handleresettodefault()
WITHOUT_CLASSIFICATION	report a progress to the progressmonitor window. @see org.argouml.persistence.progresslistener#progress(org.argouml.persistence.progressevent)
WITHOUT_CLASSIFICATION	report a progress to the progressmonitor window. @see org.argouml.application.api.progressmonitor#updateprogress(int)
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.progressmonitor#iscanceled()
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.progressmonitor#close()
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.progressmonitor#notifymessage(java.lang.string java.lang.string java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.progressmonitor#notifynullaction()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetadded(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetremoved(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetset(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetadded( org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetremoved( org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetset( org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#handleresettodefault()
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.commandlineinterface#docommand(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#handleresettodefault()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#handlesettingstabcancel()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#handlesettingstabrefresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#handlesettingstabsave()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.perspectivemanagerlistener#addperspective(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.perspectivemanagerlistener#removeperspective(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetadded( org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetremoved( org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetset( org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.treemodelumleventlistener#modelelementchanged(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.treemodelumleventlistener#modelelementadded(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.treemodelumleventlistener#modelelementremoved(java.lang.object)
WITHOUT_CLASSIFICATION	the model structure has changed significantly eg a new project. @see org.argouml.ui.explorer.treemodelumleventlistener#structurechanged()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.abstractperspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.abstractperspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.abstractperspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.abstractperspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren( java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies( java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren( java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies( java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.abstractperspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.abstractperspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	note no longer a separate type in uml 2.1
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.weakexplorernode#subsumes(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.weakexplorernode#subsumes(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren( java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies( java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.abstractperspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.abstractperspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.weakexplorernode#subsumes(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren( java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies( java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren( java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies( java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren( java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies( java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.weakexplorernode#subsumes(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.abstractperspectiverule#getchildren( java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.abstractperspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies( java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren( java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies( java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren( java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies( java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.weakexplorernode#subsumes(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.weakexplorernode#subsumes(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren( java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies( java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.abstractperspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.abstractperspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getrulename()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getchildren(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.perspectiverule#getdependencies(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.abstractprojectmember#gettype()
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.abstractprojectmember#getzipfileextension()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todoitem#deselect()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.todoitem#select()
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.abstractprojectmember#gettype()
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.abstractprojectmember#getzipfileextension()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.checklist.checkitem#expand(java.lang.string java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#getclarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#initwizard( org.argouml.cognitive.ui.wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#getwizardclass(org.argouml.cognitive.todoitem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2(java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#todoitem( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.abstractcrunconventionalname#computesuggestion(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#getclarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#stillvalid( org.argouml.cognitive.todoitem org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#initwizard( org.argouml.cognitive.ui.wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#getwizardclass(org.argouml.cognitive.todoitem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#todoitem( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#stillvalid( org.argouml.cognitive.todoitem org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.clarifier#setfig(org.tigris.gef.presentation.fig)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.clarifier#settodoitem(org.argouml.cognitive.todoitem)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.clarifier#hit(int int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.clarifier#setfig(org.tigris.gef.presentation.fig)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.clarifier#settodoitem(org.argouml.cognitive.todoitem)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.clarifier#hit(int int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#todoitem( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#stillvalid( org.argouml.cognitive.todoitem org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#getclarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#initwizard( org.argouml.cognitive.ui.wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#getwizardclass(org.argouml.cognitive.todoitem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#predicate( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#todoitem(object designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#todoitem( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#stillvalid( org.argouml.cognitive.todoitem org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.umlwizard#getnumsteps()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.wizmename#makepanel(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.wizmename#doaction(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#todoitem( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#stillvalid( org.argouml.cognitive.todoitem org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#getclarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#initwizard( org.argouml.cognitive.ui.wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.abstractcrunconventionalname#computesuggestion(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#getwizardclass(org.argouml.cognitive.todoitem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2(java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#todoitem( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#stillvalid( org.argouml.cognitive.todoitem org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#getclarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#initwizard( org.argouml.cognitive.ui.wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#getwizardclass(org.argouml.cognitive.todoitem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#todoitem( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#stillvalid( org.argouml.cognitive.todoitem org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#initwizard( org.argouml.cognitive.ui.wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#getwizardclass(org.argouml.cognitive.todoitem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.wizard#doaction(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#getclarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#getwizardclass(org.argouml.cognitive.todoitem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#initwizard( org.argouml.cognitive.ui.wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#getwizardclass(org.argouml.cognitive.todoitem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#getclarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#initwizard( org.argouml.cognitive.ui.wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.abstractcrunconventionalname#computesuggestion(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#getwizardclass(org.argouml.cognitive.todoitem)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#getclarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2(java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizedmetatypes()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#todoitem(java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#stillvalid( org.argouml.cognitive.todoitem org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2(java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#getclarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#initwizard( org.argouml.cognitive.ui.wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#getwizardclass(org.argouml.cognitive.todoitem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#todoitem( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#stillvalid( org.argouml.cognitive.todoitem org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.profile.profile#getprofileidentifier()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#getclarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#initwizard( org.argouml.cognitive.ui.wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#getwizardclass(org.argouml.cognitive.todoitem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#todoitem( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#stillvalid( org.argouml.cognitive.todoitem org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#todoitem( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#stillvalid( org.argouml.cognitive.todoitem org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#todoitem( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#stillvalid( org.argouml.cognitive.todoitem org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#todoitem( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#stillvalid( org.argouml.cognitive.todoitem org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#initwizard( org.argouml.cognitive.ui.wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.abstractcrunconventionalname#computesuggestion(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#getwizardclass(org.argouml.cognitive.todoitem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#todoitem(java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#stillvalid( org.argouml.cognitive.todoitem org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2(java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2(java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizedmetatypes()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#getwizardclass(org.argouml.cognitive.todoitem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#todoitem( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#stillvalid( org.argouml.cognitive.todoitem org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.wizard#doaction(int)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.wizard#makepanel(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#todoitem(java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#stillvalid( org.argouml.cognitive.todoitem org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#getclarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.wizard#canfinish()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#todoitem( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#stillvalid( org.argouml.cognitive.todoitem org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.umlwizard#setsuggestion(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.wizard#doaction(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.wizard#getnumsteps()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#getclarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#initwizard( org.argouml.cognitive.ui.wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#getwizardclass(org.argouml.cognitive.todoitem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#todoitem( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#stillvalid( org.argouml.cognitive.todoitem org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.wizard#makepanel(int)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.wizard#doaction(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#todoitem(java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#stillvalid( org.argouml.cognitive.todoitem org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.wizard#getnumsteps()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.wizard#makepanel(int)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.wizard#doaction(int)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.wizard#cangonext()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.wizard#canfinish()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#todoitem( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#stillvalid( org.argouml.cognitive.todoitem org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2(java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2(java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.wizard#makepanel(int)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.wizard#doaction(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2(java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#todoitem(java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#stillvalid( org.argouml.cognitive.todoitem org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#getclarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#initwizard( org.argouml.cognitive.ui.wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#getwizardclass(org.argouml.cognitive.todoitem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#todoitem(java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#stillvalid( org.argouml.cognitive.todoitem org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#getwizardclass(org.argouml.cognitive.todoitem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.clarifier#setfig(org.tigris.gef.presentation.fig)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.clarifier#settodoitem(org.argouml.cognitive.todoitem)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.clarifier#hit(int int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#todoitem( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#stillvalid( org.argouml.cognitive.todoitem org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2(java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.wizard#doaction(int)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.wizard#makepanel(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2(java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#todoitem( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#stillvalid( org.argouml.cognitive.todoitem org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.wizard#getnumsteps()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.wizard#makepanel(int)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.wizard#canfinish()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.wizard#doaction(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#predicate2( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#todoitem( java.lang.object org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#stillvalid( org.argouml.cognitive.todoitem org.argouml.cognitive.designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.poster#getclarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#initwizard( org.argouml.cognitive.ui.wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.critic#getwizardclass(org.argouml.cognitive.todoitem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.cruml#getcriticizeddesignmaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.abstractprojectmember#gettype()
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.abstractprojectmember#getzipfileextension()
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.projectmember#repair()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.layout.layouter#add(org.argouml.uml.diagram.layout.layoutedobject)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.layout.layouter#remove(org.argouml.uml.diagram.layout.layoutedobject)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.layout.layouter#getobjects()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.layout.layouter#getobject(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.layout.layouter#layout()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#getlabelname()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#getdependentelement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.layout.layouter#getminimumdiagramsize()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#getowner()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#isrelocationallowed(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#relocate(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.activity.ui.figactionstate#getnotationprovidertype()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.figstatevertex#makeselection()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#initnotationproviders(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#renderingchanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#textedited(org.tigris.gef.presentation.figtext)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#texteditstarted(org.tigris.gef.presentation.figtext)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#modelchanged(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#updatelisteners(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#updatenametext()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#clone()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#addenclosedfig(org.tigris.gef.presentation.fig)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.activity.ui.selectionactionstate#getnewnodetype(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#modelchanged(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#getlabelname()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#isrelocationallowed(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#relocate(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figedgemodelelement#getnotationprovidertype()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#getumlactions()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#getlabelname()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#isrelocationallowed(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#relocate(java.lang.object)
WITHOUT_CLASSIFICATION	if the new encloser is null and the old one is a component then the "enclosed" fig has been moved on the diagram. this causes the model to be adapted as follows remove the elementresidence between the "enclosed" and the oldencloser. @see org.argouml.ui.argodiagram#changefigencloser(org.tigris.gef.presentation.fignode org.tigris.gef.presentation.fignode org.tigris.gef.presentation.fignode)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#getnotationprovidertype()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#updatelisteners(java.lang.object java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.umlmutablegraphsupport#isremovefromdiagramallowed(collection)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.fighistorystate#geth()
WITHOUT_CLASSIFICATION	the transition has a name text box. it contains <ul> <li>the event-signature <li>the guard condition between [] <li>the action expression </ul><p> the content of the text box is generated by its own notationprovider. @see org.argouml.uml.diagram.ui.figedgemodelelement#getnotationprovidertype()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figedgemodelelement#getdestination()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figedgemodelelement#getsource()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.figstate#getinitialheight()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.figstate#getinitialwidth()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.figstate#getinitialx()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.figstate#getinitialy()
WITHOUT_CLASSIFICATION	update the text labels. @see org.argouml.uml.diagram.ui.fignodemodelelement#modelchanged(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	update the text labels and listeners. @see org.argouml.uml.diagram.ui.fignodemodelelement#modelchanged(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#updatelisteners(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.figstate#getinitialheight()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.figstate#getinitialwidth()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.figstate#getinitialx()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.figstate#getinitialy()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.figstatevertex#initnotationproviders(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#removefromdiagramimpl()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#renderingchanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#texteditstarted(org.tigris.gef.presentation.figtext)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#textedited(org.tigris.gef.presentation.figtext)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#modelchanged(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#renderingchanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.figstate#getinitialheight()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.figstate#getinitialwidth()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.figstate#getinitialx()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.figstate#getinitialy()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.figstate#getinitialheight()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.figstate#getinitialwidth()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.figstate#getinitialx()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.figstate#getinitialy()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.fighistorystate#geth()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#getlabelname()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#getdependentelement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#isrelocationallowed(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#relocate(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.layout.layoutededge#layout()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.static_structure.layout.classdiagramnode#gettypeordernumer()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.static_structure.layout.classdiagramnode#calculateweight()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.static_structure.layout.classdiagramnode#getrank()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.static_structure.layout.classdiagramnode#getweight()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.static_structure.layout.classdiagramnode#isstandalone()
WITHOUT_CLASSIFICATION	nothing is editable since a link takes its identity from the association. @see org.argouml.uml.diagram.ui.figedgemodelelement#canedit( org.tigris.gef.presentation.fig)
WITHOUT_CLASSIFICATION	listen also to the association of which the link is an instantiation since we want to update the rendering when the association name changes. @see org.argouml.uml.diagram.ui.figedgemodelelement#updatelisteners( java.lang.object java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figedgemodelelement#getdestination()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figedgemodelelement#getsource()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#setnamespace(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#getumlactions()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#getlabelname()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#isrelocationallowed(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#relocate(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#renderingchanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#updatestereotypetext()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#texteditstarted(org.tigris.gef.presentation.figtext)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.importsettings#getimportlevel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.stereotypecontainer#isstereotypevisible()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.stereotypecontainer#setstereotypevisible(boolean)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.visibilitycontainer#isvisibilityvisible()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.visibilitycontainer#setvisibilityvisible(boolean)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.delayedvchangelistener#delayedvetoablechange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#textedited(org.tigris.gef.presentation.figtext)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#texteditstarted(org.tigris.gef.presentation.figtext)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#updatestereotypetext()
WITHOUT_CLASSIFICATION	only refresh the tab if the bounds propertychange event arrives. @see org.argouml.ui.stylepanel#refresh(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#refresh()
WITHOUT_CLASSIFICATION	listen for a removeassociationevent between the comment and the annotated element. when recieved delete the commentedge and this figedgenote. @see org.argouml.uml.diagram.ui.figedgemodelelement#modelchanged(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figsinglelinetext#removefromdiagram()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figsinglelinetext#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figsinglelinetext#removefromdiagram()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figsinglelinetext#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.abstractactioncheckboxmenuitem#togglevalueoftarget(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.abstractactioncheckboxmenuitem#valueoftarget(java.lang.object)
WITHOUT_CLASSIFICATION	if we're drawing to an edge then only allow if the start is a comment @see org.argouml.uml.diagram.ui.modecreategraphedge#isconnectionvalid(org.tigris.gef.presentation.fig org.tigris.gef.presentation.fig)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#settarget(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#gettarget()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#shouldbeenabled(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetadded(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetremoved(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetset(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figedgemodelelement#canedit(org.tigris.gef.presentation.fig)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figedgemodelelement#modelchanged(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetadded(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetremoved(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetset(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.stylepanelfig#settargetbbox()
WITHOUT_CLASSIFICATION	only refresh the tab if the bounds propertychange event arrives. @see org.argouml.ui.stylepanel#refresh(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.stylepanelfig#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#refresh()
WITHOUT_CLASSIFICATION	if we're drawing to an edge then only allow if the start is a comment @see org.argouml.uml.diagram.ui.modecreategraphedge#isconnectionvalid(org.tigris.gef.presentation.fig org.tigris.gef.presentation.fig)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figeditablecompartment#getumlcollection()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figeditablecompartment#getnotationtype()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.abstractactionradiomenuitem#togglevalueoftarget(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#handlesettingstabrefresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#handlesettingstabsave()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#handlesettingstabcancel()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#handleresettodefault()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#gettabkey()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.guisettingstabinterface#gettabpanel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.abstractactionradiomenuitem#togglevalueoftarget(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.relocatable#isrelocationallowed(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.relocatable#relocate(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.abstractactioncheckboxmenuitem#togglevalueoftarget(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.abstractactioncheckboxmenuitem#valueoftarget(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstractactionnavigate#navigateto(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstractactionnavigate#navigateto(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#gettarget()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#shouldbeenabled(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetadded( targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetremoved( targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetset( org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figeditablecompartment#getumlcollection()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figeditablecompartment#getnotationtype()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figedgemodelelement#updatelisteners(java.lang.object java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figedgemodelelement#getnotationprovidertype()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.importsettings#getinputsourceencoding()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figedgemodelelement#textedited(org.tigris.gef.presentation.figtext)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figedgemodelelement#texteditstarted(org.tigris.gef.presentation.figtext)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.abstractactioncheckboxmenuitem#togglevalueoftarget(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.abstractactioncheckboxmenuitem#valueoftarget(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.abstractactionradiomenuitem#togglevalueoftarget(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figedgemodelelement#getnotationprovidertype()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figedgemodelelement#updatelisteners(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figedgemodelelement#textedited(org.tigris.gef.presentation.figtext)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figedgemodelelement#texteditstarted(org.tigris.gef.presentation.figtext)
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.delayedvchangelistener#delayedvetoablechange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.pathcontainer#ispathvisible()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.pathcontainer#setpathvisible(boolean)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.abstractactionradiomenuitem#togglevalueoftarget(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figedgemodelelement#canedit(org.tigris.gef.presentation.fig)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figsinglelinetext#removefromdiagram()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#getnotationprovidertype()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#updatelisteners( java.lang.object java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#renderingchanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figedgemodelelement#getnamefig()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figedgemodelelement#getnamebounds()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figeditablecompartment#getumlcollection()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figeditablecompartment#getnotationtype()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figedgemodelelement#canedit(org.tigris.gef.presentation.fig)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figedgemodelelement#modelchanged(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figedgemodelelement#updatelisteners(java.lang.object java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.delayedvchangelistener#delayedvetoablechange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.figedgemodelelement#updatelisteners(java.lang.object java.lang.object)
WITHOUT_CLASSIFICATION	the only thing we need to deal with is updating is the condition text. @see org.argouml.uml.diagram.ui.figedgemodelelement#modelchanged(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#getumlactions()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#getlabelname()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#isrelocationallowed(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#relocate(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.importsettings#iscreatediagramsselected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.importsettings#isminimisefigsselected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.importsettingsinternal#isdiagramlayoutselected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.importsettingsinternal#isdescendselected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.importsettingsinternal#ischangedonlyselected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.importsettings#getinputsourceencoding()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.importcommon#getimportlevel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.importcommon#iscreatediagramschecked()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.importcommon#isminimisefigschecked()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.importcommon#isdiagramlayoutselected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.importcommon#isdescendselected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.importcommon#ischangedonlyselected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.settingstypes.booleanselection#isselected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.settingstypes.booleanselection#getdefaultvalue()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.importsettingtypes.uniqueselection#getdefaultselection()
WITHOUT_CLASSIFICATION	we return a new list with the options instead of the options themself because we don't want the user to be able to change the options. @see org.argouml.uml.reveng.settingstypes.uniqueselection#getoptions()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.importsettingtypes.uniqueselection#setselection(int)
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.progressmonitor#close()
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.progressmonitor#iscanceled()
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.progressmonitor#notifymessage(java.lang.string java.lang.string java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.progressmonitor#notifynullaction()
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.progressmonitor#updatemaintask(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.progressmonitor#updatesubtask(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.progresslistener#progress(org.argouml.persistence.progressevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetadded(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetremoved(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetset(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#gettarget()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetadded( org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetremoved( org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetset( org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umluserinterfacecomponent#targetchanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umluserinterfacecomponent#targetreasserted()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.actionadddiagram#creatediagram(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.actionadddiagram#isvalidnamespace(object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetadded(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetremoved(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetset(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.actionnewdiagram#creatediagram()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetadded(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetremoved(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetset(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umluserinterfacecomponent#targetchanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umluserinterfacecomponent#targetreasserted()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.actionadddiagram#creatediagram(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.actionadddiagram#creatediagram(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.actionadddiagram#isvalidnamespace(object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetadded(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetremoved(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetset(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#getexpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#setexpression(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#newexpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umluserinterfacecomponent#targetchanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umluserinterfacecomponent#targetreasserted()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#getexpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#setexpression(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#newexpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.proppanel#shouldbeenabled(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#settarget(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstractactionnavigate#navigateto(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.sourcepathcontroller#getsourcepath(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.sourcepathcontroller#getsourcepathsettings()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.sourcepathcontroller#setsourcepath(org.argouml.uml.ui.sourcepathtablemodel)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.sourcepathcontroller#setsourcepath( java.lang.object java.io.file)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.sourcepathcontroller#deletesourcepath(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.sourcepathcontroller#getallmodelelementswithsourcepath()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetadded(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetremoved(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetset(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstractactionnavigate#navigateto( java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcombobox2#umlcombobox2( umlcomboboxmodel2 action boolean)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.proppanel#shouldbeenabled(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstractactionnavigate#navigateto(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#gettarget()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#shouldbeenabled(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetadded(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.delayedvchangelistener#delayedvetoablechange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umluserinterfacecomponent#targetchanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umluserinterfacecomponent#targetreasserted()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#getexpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#setexpression(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#newexpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#getexpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#setexpression(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#newexpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstractactionnavigate#navigateto(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstractactionnavigate#navigateto(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targettablemodelview#gettargettablemodel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstractactionnavigate#navigateto(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#gettarget()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#shouldbeenabled(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umluserinterfacecontainer#getprofile()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umluserinterfacecontainer#getmodelelement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umluserinterfacecontainer#formatelement(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umluserinterfacecontainer#formatnamespace(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umluserinterfacecontainer#formatcollection(java.util.iterator)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstractactionnavigate#navigateto(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildpopup(javax.swing.jpopupmenu int)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targettablemodelview#gettargettablemodel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstractactionnavigate#navigateto(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetadded(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetremoved(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetset(org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#getexpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#setexpression(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#newexpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstractactionnavigate#navigateto(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#settarget(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#gettarget()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#shouldbeenabled(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetadded( org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetremoved( org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targetlistener#targetset( org.argouml.ui.targetmanager.targetevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstractactionnavigate#navigateto(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.targettablemodelview#gettargettablemodel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.actionadddiagram#creatediagram(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.actionadddiagram#creatediagram(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.actionadddiagram#isvalidnamespace(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcheckbox2#buildmodel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.common_behavior.actionnewaction#createaction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.common_behavior.actionnewaction#createaction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.common_behavior.actionnewaction#createaction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcheckbox2#buildmodel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlplaintextdocument#setproperty(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlplaintextdocument#getproperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.common_behavior.actionnewaction#createaction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.common_behavior.actionnewaction#createaction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.common_behavior.actionnewaction#createaction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.common_behavior.actionnewaction#createaction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.common_behavior.actionnewaction#createaction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.state_machines.actionnewevent#createevent( java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.state_machines.actionnewevent#createevent( java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.state_machines.actionnewevent#createevent(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#getexpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#setexpression(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlexpressionmodel2#newexpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.state_machines.actionnewevent#createevent( java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlplaintextdocument#setproperty(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlplaintextdocument#getproperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlplaintextdocument#setproperty(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlplaintextdocument#getproperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlradiobuttonpanel#buildmodel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcheckbox2#buildmodel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcheckbox2#buildmodel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlradiobuttonpanel#buildmodel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlradiobuttonpanel#buildmodel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcheckbox2#buildmodel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcheckbox2#buildmodel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlplaintextdocument#setproperty(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlplaintextdocument#getproperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlplaintextdocument#setproperty(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlplaintextdocument#getproperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstractactionaddmodelelement#getchoices()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstractactionaddmodelelement#getdialogtitle()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstractactionaddmodelelement#getselected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstractactionaddmodelelement#getchoices()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstractactionaddmodelelement#getdialogtitle()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstractactionaddmodelelement#getselected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcheckbox2#buildmodel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcheckbox2#buildmodel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlplaintextdocument#setproperty(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlplaintextdocument#getproperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcheckbox2#buildmodel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlradiobuttonpanel#buildmodel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcheckbox2#buildmodel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcheckbox2#buildmodel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcheckbox2#buildmodel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlradiobuttonpanel#buildmodel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel2#setselecteditem(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlcomboboxmodel2#getselectedmodelelement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#buildmodellist()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.umlmodelelementlistmodel2#isvalidelement(object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.util.namespace.namespace#peeknamespaceelement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.util.namespace.namespace#popnamespaceelement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.util.namespace.namespace#getbasenamespace()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.util.namespace.namespace#getcommonnamespace( org.argouml.uml.util.namespace.namespace)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.util.namespace.namespace#iterator()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.util.namespace.namespace#isempty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.util.namespace.namespace#setdefaultscopetoken(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.util.namespace.namespaceelement#getnamespaceelement()
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.commandlineinterface#docommand(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getfacade()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getdiagraminterchangemodel()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getmodeleventpump()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getactivitygraphsfactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getactivitygraphshelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getcollaborationsfactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getcollaborationshelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getcommonbehaviorfactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getcommonbehaviorhelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getcorefactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getcorehelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getdatatypesfactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getdatatypeshelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getextensionmechanismsfactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getextensionmechanismshelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getmodelmanagementfactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getmodelmanagementhelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getstatemachinesfactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getstatemachineshelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getumlfactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getumlhelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getusecasesfactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getusecaseshelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getmessagesort()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getmetatypes()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getchangeablekind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getaggregationkind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getpseudostatekind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getscopekind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getconcurrencykind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getdirectionkind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getorderingkind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getvisibilitykind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getxmireader()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getxmiwriter(java.lang.object java.io.writer java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.model.modelimplementation#getcopyhelper()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#getparsinghelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#parse(java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#getparsinghelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.notationprovider#parse(java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.tabtarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstracttestactionadddiagram#getaction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstracttestactionadddiagram#getnamespace()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstracttestactionadddiagram#getaction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstracttestactionadddiagram#getnamespace()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstracttestactionadddiagram#getaction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstracttestactionadddiagram#getnamespace()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstracttestactionadddiagram#getaction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstracttestactionadddiagram#getnamespace()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui. abstracttestactionadddiagram#getvalidnamespaceclasses()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstracttestactionadddiagram#getaction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.abstracttestactionadddiagram#getnamespace()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#relocate(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#isrelocationallowed(java.lang.object)
WITHOUT_CLASSIFICATION	overridden purely to keep our superclass from removing the listener that we just added. @see org.argouml.uml.diagram.ui.figedgemodelelement#updatelisteners(java.lang.object java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.fignodemodelelement#renderingchanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.umldiagram#relocate(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.statemachineshelper#getsource(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.usecaseshelper#getallusecases(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.umlhelper#addlistenerstomodel(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.umlhelper#move(java.lang.object org.argouml.model.umlhelper.direction)
WITHOUT_CLASSIFICATION	@see org.argouml.model.umlhelper#move(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.modeleventpump#removeclassmodeleventlistener( java.beans.propertychangelistener java.lang.object java.lang.string[])
WITHOUT_CLASSIFICATION	@see org.argouml.model.modeleventpump#addmodeleventlistener( java.beans.propertychangelistener java.lang.object java.lang.string[])
WITHOUT_CLASSIFICATION	@see org.argouml.model.modeleventpump#addmodeleventlistener( java.beans.propertychangelistener java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.model.modeleventpump#addmodeleventlistener( java.beans.propertychangelistener java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.model.modeleventpump#addmodeleventlistener( java.beans.propertychangelistener java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.modeleventpump#removemodeleventlistener( java.beans.propertychangelistener java.lang.object java.lang.string[])
WITHOUT_CLASSIFICATION	@see org.argouml.model.modeleventpump#removemodeleventlistener( java.beans.propertychangelistener java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.model.modeleventpump#removemodeleventlistener( java.beans.propertychangelistener java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.model.modeleventpump#removemodeleventlistener( java.beans.propertychangelistener java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.modeleventpump#addclassmodeleventlistener( java.beans.propertychangelistener java.lang.object java.lang.string[])
WITHOUT_CLASSIFICATION	@see org.argouml.model.modeleventpump#addclassmodeleventlistener( java.beans.propertychangelistener java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.model.modeleventpump#removeclassmodeleventlistener( java.beans.propertychangelistener java.lang.object java.lang.string)
WITHOUT_CLASSIFICATION	@see org.argouml.model.extensionmechanismshelper#getstereotypes(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.corehelper#clearstereotypes(java.lang.object) all methods below similarly override methods in corehelper.
WITHOUT_CLASSIFICATION	@see org.argouml.model.collaborationshelper#getallclassifierroles(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.commonbehaviorhelper#getsource(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.activitygraphshelper#findclassifierbyname(java.lang.object java.lang.string) all methods below similarly implement methods from activitygraphshelper
WITHOUT_CLASSIFICATION	returns the value of an element's property (tagged value). this method makes sure that a collection of values is returned if and only if the property is multivalued (upper multiplicity value greater 1). @see org.argouml.model.facade#getvalueoftag(java.lang.object java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.abstractmodeleventpump#removeclassmodeleventlistener(java.beans.propertychangelistener java.lang.object java.lang.string[])
WITHOUT_CLASSIFICATION	@see org.argouml.model.modeleventpump#startpumpingevents()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modeleventpump#stoppumpingevents()
WITHOUT_CLASSIFICATION	@see org.argouml.model.modeleventpump#flushmodelevents()
WITHOUT_CLASSIFICATION	@see org.argouml.model.aggregationkind#getaggregate()
WITHOUT_CLASSIFICATION	@see org.argouml.model.pseudostatekind#getchoice()
WITHOUT_CLASSIFICATION	@see org.argouml.model.changeablekind#getchangeable()
WITHOUT_CLASSIFICATION	@see org.argouml.model.scopekind#getclassifier()
WITHOUT_CLASSIFICATION	@see org.argouml.model.aggregationkind#getcomposite()
WITHOUT_CLASSIFICATION	@see org.argouml.model.concurrencykind#getconcurrent()
WITHOUT_CLASSIFICATION	@see org.argouml.model.pseudostatekind#getdeephistory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.pseudostatekind#getfork()
WITHOUT_CLASSIFICATION	@see org.argouml.model.changeablekind#getfrozen()
WITHOUT_CLASSIFICATION	@see org.argouml.model.concurrencykind#getguarded()
WITHOUT_CLASSIFICATION	@see org.argouml.model.directionkind#getinparameter()
WITHOUT_CLASSIFICATION	@see org.argouml.model.pseudostatekind#getinitial()
WITHOUT_CLASSIFICATION	@see org.argouml.model.directionkind#getinoutparameter()
WITHOUT_CLASSIFICATION	@see org.argouml.model.scopekind#getinstance()
WITHOUT_CLASSIFICATION	@see org.argouml.model.pseudostatekind#getjoin()
WITHOUT_CLASSIFICATION	@see org.argouml.model.pseudostatekind#getjunction()
WITHOUT_CLASSIFICATION	@see org.argouml.model.aggregationkind#getnone()
WITHOUT_CLASSIFICATION	@see org.argouml.model.orderingkind#getordered()
WITHOUT_CLASSIFICATION	@see org.argouml.model.directionkind#getoutparameter()
WITHOUT_CLASSIFICATION	@see org.argouml.model.visibilitykind#getpackage()
WITHOUT_CLASSIFICATION	@see org.argouml.model.visibilitykind#getprivate()
WITHOUT_CLASSIFICATION	@see org.argouml.model.visibilitykind#getprotected()
WITHOUT_CLASSIFICATION	@see org.argouml.model.visibilitykind#getpublic()
WITHOUT_CLASSIFICATION	@see org.argouml.model.directionkind#getreturnparameter()
WITHOUT_CLASSIFICATION	@see org.argouml.model.concurrencykind#getsequential()
WITHOUT_CLASSIFICATION	@see org.argouml.model.pseudostatekind#getshallowhistory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.orderingkind#getunordered()
WITHOUT_CLASSIFICATION	@see org.argouml.model.extensionmechanismsfactory#createtaggedvalue()
WITHOUT_CLASSIFICATION	@see org.argouml.model.corehelper#clearstereotypes(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.copyhelper#copy(java.lang.object java.lang.object) make a copy of element in the given namespace.<p> this function is a dispatcher that calls the copyelement(elementnamespace) function from xxxfactory.<p> this function may fail and return null for any of the following reasons <ol> <li>no copy function is known for element's type. <li>the copy function fails or throws. </ol> @param anelement is the element to copy. @param ans the namespace @return a copy of element or null. @throws illegalargumentexception if element is null.
WITHOUT_CLASSIFICATION	because we map both ends of an association we'll see many names twice log.log(level.fine "duplicate property name found - {0}{1}" new object[]{typename propertyname})
WITHOUT_CLASSIFICATION	builds an initialized stereotype with no namespace. a stereotype must have a namespace so this method is unsafe. use buildstereotype(string object). @param text is the name of the stereotype @return an initialized stereotype.
WITHOUT_CLASSIFICATION	used by the copy functions. do not call this function directly. @param source the stereotype to copy from. @param target the object becoming a copy.
WITHOUT_CLASSIFICATION	if the array hasn't been flagged to indicate otherwise swap elements the elements and add again.
WITHOUT_CLASSIFICATION	specifies valid elements for a class to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a component to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an objectflowstate to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an associationrole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an simplestate to contain
WITHOUT_CLASSIFICATION	extend but only between two use cases. remember we draw from the extension port to the base port.
WITHOUT_CLASSIFICATION	default parameter name
WITHOUT_CLASSIFICATION	build all other elements using existing buildnode
WITHOUT_CLASSIFICATION	there is a bug in the version of mdr (20050711) that we use that causes it to fail to delete aggregate elements which are single valued and where the aggregate end is listed second in the association defined in the metamodel. for the uml 1.4 metamodel this affects a statemachine's top statevertex and a transition's guard. see issue 4948 & 5227 - tfm 20080713
WITHOUT_CLASSIFICATION	in uml 1.3 the name is the only place to store text. in uml 1.4 there is a body as well but some tools still seem to use name.
WITHOUT_CLASSIFICATION	although not represented in the ocl (or our java) the english text of wfr #4 of section 2.10.3.4 in the uml 1.4 spec is more restrictive - "[4] a collaboration may only contain classifierroles and associationroles the generalizations and the constraints between them and actions used in the collaboration's interactions."
WITHOUT_CLASSIFICATION	the following from the original nsuml implemenetation was attempting to implement wfr #1 from section 2.5.3.32 of the uml 1.4 spec but if there is an owner set no namespace is valid. the checks for this wfr if desired need to go in setowner() and settype() - tfm
WITHOUT_CLASSIFICATION	or self.allconnections->forall( r | self.namespace.allcontents->excludes (r.participant) implies self.namespace.clientdependency->exists (d | d.oclistypeof(permission) and d.stereotype.name = 'access' and
WITHOUT_CLASSIFICATION	return a list of namespaces enclosing this element. the list is ordered outer to inner. i.e. it starts at the root model.
WITHOUT_CLASSIFICATION	scopekind visibilitykind pseudostatekind etc doesn't include boolean though despite what uml 1.4 spec says
WITHOUT_CLASSIFICATION	for a namespace <pre> [2] the operation allcontents results in a set containing all modelelements contained by the namespace. allcontents set(modelelement) allcontents = self.contents where contents = self.ownedelement -> union(self.namespace contents) </pre><p>
WITHOUT_CLASSIFICATION	for a package <pre> [3] the operation allcontents results in a set containing the modelelements owned by or imported by the package or one of its ancestors. allcontents set(modelelement) allcontents = self.contents->union( self.parent.allcontents->select(e | e.elementownership.visibility = #public or e.elementownership.visibility = #protected)) where the required operations are defined as [1] the operation contents results in a set containing the modelelements owned by or imported by the package. contents set(modelelement) contents = self.ownedelement->union(self.importedelement) [2] the operation allimportedelements results in a set containing the modelelements imported by the package or one of its parents. allimportedelements set(modelelement) allimportedelements = self.importedelement->union( self.parent.oclastype(package).allimportedelements->select( re | re.elementimport.visibility = #public or re.elementimport.visibility = #protected)) </pre>
WITHOUT_CLASSIFICATION	get the implementations of this operations and look for an opaquebehavior.
WITHOUT_CLASSIFICATION	todo in uml 2.0 classifierrole associationrole and associationendrole have been replaced by the internal structure of the collaboration
WITHOUT_CLASSIFICATION	for a transition use indirection through source statevertex
WITHOUT_CLASSIFICATION	todo unimplemented return ((property) handle).gets
WITHOUT_CLASSIFICATION	removed from uml 2.x and deprecated in model api so we won't implement it throw new notimplementedexception() we do not throw an exception because argouml still uses this
WITHOUT_CLASSIFICATION	this doesn't work in uml2 both owner and property needed!
WITHOUT_CLASSIFICATION	todo restructured in uml 2
WITHOUT_CLASSIFICATION	todo gone in uml 2.1 it is now an instancespecification with an association as its classifier
WITHOUT_CLASSIFICATION	list.add("literalreal")uml 2.4 end literalspecification
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	link does not exist in uml2 a link is represented just as an association
WITHOUT_CLASSIFICATION	search for our current target language.
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	the attribute 'targetscope' of an associationend in uml1.x is no longer supported in uml2.x
WITHOUT_CLASSIFICATION	cmd.setobjects(run.getparams().get(0))
WITHOUT_CLASSIFICATION	handles all children of relationship including extend and include which are not members of core
WITHOUT_CLASSIFICATION	although usage & permission are dependencies they need to be include separately because of the way lookup works
WITHOUT_CLASSIFICATION	the next 3 restrictions for abstraction seem to be argo specific not something the uml spec requires - tfm - 20070215 there is no need for these because they arn't used by buildconnection() - b00__1 {abstraction.class org.eclipse.uml2.uml.class.class org.eclipse.uml2.uml.class.class null } {abstraction.class org.eclipse.uml2.uml.package.classorg.eclipse.uml2.uml.package.class null } {abstraction.class component.class interface.class null }
WITHOUT_CLASSIFICATION	specifies valid elements for a enumeration to contain
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	do nothing.
WITHOUT_CLASSIFICATION	@see java.lang.object#equals(java.lang.object)
WITHOUT_CLASSIFICATION	this module will still register as enabled for uml1.4 but it won't actually do anything.
WITHOUT_CLASSIFICATION	@see java.util.collection#remove(java.lang.object)
WITHOUT_CLASSIFICATION	@see java.util.collection#contains(java.lang.object)
WITHOUT_CLASSIFICATION	@see java.lang.object#hashcode() this will result in rather bad performance but at least we will not violate the contract together with {@link #equals(object)}.
WITHOUT_CLASSIFICATION	@see java.util.collection#size()
WITHOUT_CLASSIFICATION	@see java.util.collection#isempty()
WITHOUT_CLASSIFICATION	@see java.util.collection#iterator()
WITHOUT_CLASSIFICATION	@see java.util.collection#toarray()
WITHOUT_CLASSIFICATION	@see java.util.collection#toarray(java.lang.object[])
WITHOUT_CLASSIFICATION	@see java.util.collection#add(java.lang.object)
WITHOUT_CLASSIFICATION	@see java.util.collection#containsall(java.util.collection)
WITHOUT_CLASSIFICATION	@see java.util.collection#addall(java.util.collection)
WITHOUT_CLASSIFICATION	@see java.util.collection#retainall(java.util.collection)
WITHOUT_CLASSIFICATION	@see java.util.collection#removeall(java.util.collection)
WITHOUT_CLASSIFICATION	@see java.util.collection#clear()
WITHOUT_CLASSIFICATION	@see java.util.list#addall(int java.util.collection)
WITHOUT_CLASSIFICATION	@see java.util.list#get(int)
WITHOUT_CLASSIFICATION	@see java.util.list#set(int java.lang.object)
WITHOUT_CLASSIFICATION	@see java.util.list#add(int java.lang.object)
WITHOUT_CLASSIFICATION	@see java.util.list#remove(int)
WITHOUT_CLASSIFICATION	@see java.util.list#indexof(java.lang.object)
WITHOUT_CLASSIFICATION	@see java.util.list#lastindexof(java.lang.object)
WITHOUT_CLASSIFICATION	@see java.util.list#listiterator()
WITHOUT_CLASSIFICATION	@see java.util.list#listiterator(int)
WITHOUT_CLASSIFICATION	@see java.util.list#sublist(int int)
WITHOUT_CLASSIFICATION	@see java.lang.object#hashcode() this is a rather bad hash solution but with the {@link #equals(object)} defined as below it is not possible to do better.
WITHOUT_CLASSIFICATION	@see java.lang.object#hashcode()
WITHOUT_CLASSIFICATION	@see java.lang.runnable#run()
WITHOUT_CLASSIFICATION	@see java.lang.runnable#run()
WITHOUT_CLASSIFICATION	@see java.lang.runnable#run()
WITHOUT_CLASSIFICATION	@see java.lang.runnable#run()
WITHOUT_CLASSIFICATION	@see org.tigris.swidgets.orientable#setorientation(orientation)
WITHOUT_CLASSIFICATION	@see java.util.observable#notifyobservers(java.lang.object)
WITHOUT_CLASSIFICATION	@see observable#notifyobservers()
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getcolumnclass(int)
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getname()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getprimary2()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getprimary3()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getsecondary1()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getsecondary2()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getsecondary3()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getcontroltextfont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getsystemtextfont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getusertextfont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getmenutextfont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getsubtextfont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getwindowtitlefont()
WITHOUT_CLASSIFICATION	@see java.lang.runnable#run()
WITHOUT_CLASSIFICATION	@see java.awt.event.componentlistener#componenthidden(java.awt.event.componentevent)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getcolumncount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getcolumnname(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#iscelleditable(int int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getrowcount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getvalueat(int int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#setvalueat(java.lang.object int int)
WITHOUT_CLASSIFICATION	@see java.beans.vetoablechangelistener#vetoablechange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getcolumncount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getcolumnname(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getcolumnclass(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#iscelleditable(int int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getrowcount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getvalueat(int int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#setvalueat(java.lang.object int int)
WITHOUT_CLASSIFICATION	@see java.beans.vetoablechangelistener#vetoablechange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.listselectionlistener#valuechanged(javax.swing.event.listselectionevent)
WITHOUT_CLASSIFICATION	updates the button if the current row changes @see javax.swing.event.tablemodellistener#tablechanged(javax.swing.event.tablemodelevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#insertupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#removeupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#changedupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.itemlistener#itemstatechanged(java.awt.event.itemevent)
WITHOUT_CLASSIFICATION	refresh the table when a critique is enabled/disabled @see java.util.observer#update(java.util.observable java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getcolumncount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getcolumnname(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getcolumnclass(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#iscelleditable(int int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getrowcount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getvalueat(int int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#setvalueat(java.lang.object int int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#getchild(java.lang.object int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#getchildcount(java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#getindexofchild( java.lang.object java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#removetreemodellistener(javax.swing.event.treemodellistener)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#getchildcount(java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#getindexofchild(java.lang.object java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#getindexofchild(java.lang.object java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#valueforpathchanged( javax.swing.tree.treepath java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#addtreemodellistener(javax.swing.event.treemodellistener)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#removetreemodellistener(javax.swing.event.treemodellistener)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#getroot()
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#getchild(java.lang.object int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#valueforpathchanged( javax.swing.tree.treepath java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#addtreemodellistener(javax.swing.event.treemodellistener)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#removetreemodellistener(javax.swing.event.treemodellistener)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#getchild(java.lang.object int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#getchildcount(java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#getindexofchild(java.lang.object java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#valueforpathchanged( javax.swing.tree.treepath java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#addtreemodellistener(javax.swing.event.treemodellistener)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#removetreemodellistener(javax.swing.event.treemodellistener)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#getchild(java.lang.object int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#getchildcount(java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#getindexofchild( java.lang.object java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#valueforpathchanged( javax.swing.tree.treepath java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#addtreemodellistener(javax.swing.event.treemodellistener)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#removetreemodellistener(javax.swing.event.treemodellistener)
WITHOUT_CLASSIFICATION	@see javax.swing.event.treeselectionlistener#valuechanged(javax.swing.event.treeselectionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mousepressed(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mousereleased(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseentered(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseexited(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseclicked(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#removeupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#changedupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#deletefrommodel()
WITHOUT_CLASSIFICATION	@see javax.management.notificationemitter#removenotificationlistener(javax.management.notificationlistener javax.management.notificationfilter java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.management.notificationbroadcaster#addnotificationlistener(javax.management.notificationlistener javax.management.notificationfilter java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.management.notificationbroadcaster#getnotificationinfo()
WITHOUT_CLASSIFICATION	@see javax.management.notificationbroadcaster#removenotificationlistener(javax.management.notificationlistener)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#deletefrommodel()
WITHOUT_CLASSIFICATION	@see javax.management.notificationemitter#removenotificationlistener(javax.management.notificationlistener javax.management.notificationfilter java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.management.notificationbroadcaster#addnotificationlistener(javax.management.notificationlistener javax.management.notificationfilter java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.management.notificationbroadcaster#getnotificationinfo()
WITHOUT_CLASSIFICATION	@see javax.management.notificationbroadcaster#removenotificationlistener(javax.management.notificationlistener)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.modecreatefigpoly#createnewitem(java.awt.event.mouseevent int int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#deletefrommodel()
WITHOUT_CLASSIFICATION	@see javax.management.notificationemitter#removenotificationlistener(javax.management.notificationlistener javax.management.notificationfilter java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.management.notificationbroadcaster#addnotificationlistener(javax.management.notificationlistener javax.management.notificationfilter java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.management.notificationbroadcaster#getnotificationinfo()
WITHOUT_CLASSIFICATION	@see javax.management.notificationbroadcaster#removenotificationlistener(javax.management.notificationlistener)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#deletefrommodel()
WITHOUT_CLASSIFICATION	@see javax.management.notificationemitter#removenotificationlistener(javax.management.notificationlistener javax.management.notificationfilter java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.management.notificationbroadcaster#addnotificationlistener(javax.management.notificationlistener javax.management.notificationfilter java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.management.notificationbroadcaster#getnotificationinfo()
WITHOUT_CLASSIFICATION	@see javax.management.notificationbroadcaster#removenotificationlistener(javax.management.notificationlistener)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#deletefrommodel()
WITHOUT_CLASSIFICATION	@see javax.management.notificationemitter#removenotificationlistener(javax.management.notificationlistener javax.management.notificationfilter java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.management.notificationbroadcaster#addnotificationlistener(javax.management.notificationlistener javax.management.notificationfilter java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.management.notificationbroadcaster#getnotificationinfo()
WITHOUT_CLASSIFICATION	@see javax.management.notificationbroadcaster#removenotificationlistener(javax.management.notificationlistener)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#deletefrommodel()
WITHOUT_CLASSIFICATION	@see javax.management.notificationemitter#removenotificationlistener(javax.management.notificationlistener javax.management.notificationfilter java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.management.notificationbroadcaster#addnotificationlistener(javax.management.notificationlistener javax.management.notificationfilter java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.management.notificationbroadcaster#getnotificationinfo()
WITHOUT_CLASSIFICATION	@see javax.management.notificationbroadcaster#removenotificationlistener(javax.management.notificationlistener)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#deletefrommodel()
WITHOUT_CLASSIFICATION	@see javax.management.notificationemitter#removenotificationlistener(javax.management.notificationlistener javax.management.notificationfilter java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.management.notificationbroadcaster#addnotificationlistener(javax.management.notificationlistener javax.management.notificationfilter java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.management.notificationbroadcaster#getnotificationinfo()
WITHOUT_CLASSIFICATION	@see javax.management.notificationbroadcaster#removenotificationlistener(javax.management.notificationlistener)
WITHOUT_CLASSIFICATION	@see java.lang.runnable#run()
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getvalueat(int int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#setvalueat( java.lang.object int int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getcolumnclass(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#iscelleditable(int int)
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#handlesettingstabrefresh()
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#handlesettingstabsave()
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#handlesettingstabcancel()
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#gettabkey()
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#gettabpanel()
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.modelfacade#getclassifier(java.lang.string)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.type#navigatequalified( java.lang.string tudresden.ocl.check.types.type[])
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.type2#navigateparameterizedquery( java.lang.string tudresden.ocl.check.types.type[])
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.type#navigateparameterized( java.lang.string tudresden.ocl.check.types.type[])
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.type#conformsto(tudresden.ocl.check.types.type)
WITHOUT_CLASSIFICATION	@see java.lang.object#equals(java.lang.object)
WITHOUT_CLASSIFICATION	@see java.lang.object#hashcode()
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.type#navigatequalified( java.lang.string tudresden.ocl.check.types.type[])
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.type2#navigateparameterizedquery( java.lang.string tudresden.ocl.check.types.type[])
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.type#navigateparameterized( java.lang.string tudresden.ocl.check.types.type[])
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.type#conformsto(tudresden.ocl.check.types.type)
WITHOUT_CLASSIFICATION	@see java.lang.object#equals(java.lang.object)
WITHOUT_CLASSIFICATION	@see java.lang.object#hashcode()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.persistence.pgml.handlerfactory#gethandler( handlerstack object string string string attributes)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.persistence.pgml.pgmlstackparser#setattrs( org.tigris.gef.presentation.fig org.xml.sax.attributes)
WITHOUT_CLASSIFICATION	@see org.xml.sax.entityresolver#resolveentity(java.lang.string java.lang.string)
WITHOUT_CLASSIFICATION	@see javax.swing.filechooser.filefilter#getdescription()
WITHOUT_CLASSIFICATION	@see javax.swing.filechooser.filefilter#accept(java.io.file)
WITHOUT_CLASSIFICATION	@see java.io.inputstream#read()
WITHOUT_CLASSIFICATION	@see java.io.inputstream#read(byte[] int int)
WITHOUT_CLASSIFICATION	@see java.lang.throwable#printstacktrace()
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.type#hasstate(java.lang.string)
WITHOUT_CLASSIFICATION	@see java.lang.throwable#printstacktrace(java.io.printstream)
WITHOUT_CLASSIFICATION	@see java.lang.throwable#printstacktrace(java.io.printwriter)
WITHOUT_CLASSIFICATION	@see profilemodelloader#loadmodel(profilereference)
WITHOUT_CLASSIFICATION	@see java.io.filefilter#accept(java.io.file)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.depthfirstadapter#caseaadditiveexpressiontail(tudresden.ocl.parser.node.aadditiveexpressiontail)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.depthfirstadapter#caseamultiplicativeexpressiontail(tudresden.ocl.parser.node.amultiplicativeexpressiontail)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.depthfirstadapter#caseaunaryunaryexpression(tudresden.ocl.parser.node.aunaryunaryexpression)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.depthfirstadapter#caseapostfixexpressiontail(tudresden.ocl.parser.node.apostfixexpressiontail)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.depthfirstadapter#caseafeatureprimaryexpression(tudresden.ocl.parser.node.afeatureprimaryexpression)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.depthfirstadapter#outaemptyfeaturecallparameters(tudresden.ocl.parser.node.aemptyfeaturecallparameters)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.depthfirstadapter#caseafeaturecallparameters(tudresden.ocl.parser.node.afeaturecallparameters)
WITHOUT_CLASSIFICATION	@param node @see tudresden.ocl.parser.analysis.depthfirstadapter#caseastandarddeclarator(tudresden.ocl.parser.node.astandarddeclarator)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.depthfirstadapter#casealetexpression(tudresden.ocl.parser.node.aletexpression)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.depthfirstadapter#outastringliteral(tudresden.ocl.parser.node.astringliteral)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.depthfirstadapter#outarealliteral(tudresden.ocl.parser.node.arealliteral)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.depthfirstadapter#outaintegerliteral(tudresden.ocl.parser.node.aintegerliteral)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.depthfirstadapter#outabooleanliteral(tudresden.ocl.parser.node.abooleanliteral)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.depthfirstadapter#outaenumliteral(tudresden.ocl.parser.node.aenumliteral)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.depthfirstadapter#casealiteralcollection(tudresden.ocl.parser.node.aliteralcollection)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.depthfirstadapter#caseaexpressionlistorrange(tudresden.ocl.parser.node.aexpressionlistorrange)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.depthfirstadapter#casealistexpressionlistorrangetail(tudresden.ocl.parser.node.alistexpressionlistorrangetail)
WITHOUT_CLASSIFICATION	@see java.awt.component#getpreferredsize()
WITHOUT_CLASSIFICATION	@see java.awt.component#getsize()
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#changedupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed( java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.windowlistener#windowactivated(java.awt.event.windowevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.windowlistener#windowclosed(java.awt.event.windowevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.windowlistener#windowdeactivated(java.awt.event.windowevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.windowlistener#windowdeiconified(java.awt.event.windowevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.windowlistener#windowiconified(java.awt.event.windowevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.windowlistener#windowclosing(java.awt.event.windowevent)
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#handlesettingstabcancel()
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#gettabkey()
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#gettabpanel()
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#handlesettingstabrefresh()
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#handlesettingstabsave()
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#handlesettingstabcancel()
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#gettabpanel()
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.itemlistener#itemstatechanged(java.awt.event.itemevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.itemlistener#itemstatechanged(java.awt.event.itemevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.focuslistener#focusgained(java.awt.event.focusevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.keylistener#keypressed(java.awt.event.keyevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.keylistener#keyreleased(java.awt.event.keyevent)
WITHOUT_CLASSIFICATION	tests if enter is pressed in the _bbodfield so we need to set the target bounds. @see java.awt.event.keylistener#keytyped(java.awt.event.keyevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.ui.istatusbar#showstatus(java.lang.string)
WITHOUT_CLASSIFICATION	override paint so we can set a flag the first time we're called and notify any waiting threads that the splash screen has been painted. @see java.awt.component#paint(java.awt.graphics)
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getprimary2()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getprimary3()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getsecondary1()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getsecondary2()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getsecondary3()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getcontroltextfont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getsystemtextfont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getusertextfont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getmenutextfont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getsubtextfont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getwindowtitlefont()
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.abstractaction.abstractaction()
WITHOUT_CLASSIFICATION	@see javax.swing.abstractaction.abstractaction(java.lang.string)
WITHOUT_CLASSIFICATION	@see javax.swing.abstractaction.abstractaction( java.lang.string javax.swing.icon)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mousepressed(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mousereleased(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseclicked(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseentered(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseexited(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.keylistener#keypressed(java.awt.event.keyevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.keylistener#keyreleased(java.awt.event.keyevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.keylistener#keytyped(java.awt.event.keyevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.listselectionlistener#valuechanged(javax.swing.event.listselectionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getname()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getprimary2()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getprimary3()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getsecondary1()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getsecondary2()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getsecondary3()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getcontroltextfont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getsystemtextfont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getusertextfont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getmenutextfont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getsubtextfont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getwindowtitlefont()
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseexited(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see org.tigris.swidgets.dialog#namebuttons()
WITHOUT_CLASSIFICATION	@see java.awt.component#getminimumsize()
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mousepressed(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mousereleased(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseentered(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see org.tigris.swidgets.orientable#setorientation(org.tigris.swidgets.orientation)
WITHOUT_CLASSIFICATION	@see targetlistener#targetadded(targetevent)
WITHOUT_CLASSIFICATION	@see targetlistener#targetremoved(targetevent)
WITHOUT_CLASSIFICATION	@see targetlistener#targetset(targetevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.listselectionlistener#valuechanged(javax.swing.event.listselectionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see java.awt.component#getlocale()
WITHOUT_CLASSIFICATION	@see java.awt.window#dispose()
WITHOUT_CLASSIFICATION	@see java.awt.event.windowlistener#windowclosing(java.awt.event.windowevent)
WITHOUT_CLASSIFICATION	@see java.beans.propertychangelistener#propertychange( java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.windowlistener#windowclosed(java.awt.event.windowevent)
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#handlesettingstabrefresh()
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#handlesettingstabrefresh()
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#handlesettingstabsave()
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#handlesettingstabcancel()
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#gettabkey()
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#gettabpanel()
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#setvalueat( java.lang.object int int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getcolumnclass(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#iscelleditable(int int)
WITHOUT_CLASSIFICATION	@see java.awt.event.windowlistener#windowdeactivated(java.awt.event.windowevent)
WITHOUT_CLASSIFICATION	@see javax.swing.listcellrenderer#getlistcellrenderercomponent( javax.swing.jlist java.lang.object int boolean boolean)
WITHOUT_CLASSIFICATION	@see javax.swing.jcomponent#paintcomponent(java.awt.graphics)
WITHOUT_CLASSIFICATION	@see java.awt.event.windowlistener#windowopened(java.awt.event.windowevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.windowlistener#windowclosing(java.awt.event.windowevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.itemlistener#itemstatechanged(java.awt.event.itemevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mousepressed(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mousereleased(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseentered(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseexited(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	catches a mouseevent and calls mysingleclick and mydoubleclick if a tab is clicked which is selected. @see java.awt.event.mouselistener#mouseclicked(mouseevent)
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#handlesettingstabrefresh()
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#handlesettingstabsave()
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#handlesettingstabcancel()
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#gettabkey()
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#getroot()
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#getchild(java.lang.object int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#getchildcount(java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#getindexofchild(java.lang.object java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#valueforpathchanged(javax.swing.tree.treepath java.lang.object)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see org.tigris.swidgets.dialog#namebuttons()
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mousepressed(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mousereleased(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseentered(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseexited(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseclicked(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.component#getminimumsize() sets minimum size to 120100
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.menulistener#menuselected(javax.swing.event.menuevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.menulistener#menudeselected(javax.swing.event.menuevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.menulistener#menucanceled(javax.swing.event.menuevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.cmd#undoit()
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed( java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed( java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#gettabkey()
WITHOUT_CLASSIFICATION	@see guisettingstabinterface#gettabpanel()
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getcolumnclass(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#iscelleditable(int int)
WITHOUT_CLASSIFICATION	compares obj1 and obj2 sorting by user object type then name. diagrams are sorted first then packages then other types. sorts by name within type groups. nulls are sorted first for names. @see java.util.comparator#compare(java.lang.object java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.event.treewillexpandlistener#treewillcollapse(javax.swing .event.treeexpansionevent)
WITHOUT_CLASSIFICATION	updates stereotype setting adds all children per treemodel 'build on demand' design. @see javax.swing.event.treewillexpandlistener#treewillexpand(javax.swing .event.treeexpansionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.treeexpansionlistener#treecollapsed( javax.swing.event.treeexpansionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.treeexpansionlistener#treeexpanded( javax.swing.event.treeexpansionevent) updates the selection state.
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.listselectionlistener#valuechanged(javax.swing.event.listselectionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.listselectionlistener#valuechanged(javax.swing.event.listselectionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.listselectionlistener#valuechanged(javax.swing.event.listselectionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treenode#isleaf()
WITHOUT_CLASSIFICATION	@see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	do string compare of names of uml objects. comparison is case insensitive using a primary strength collator in the user's locale. @see java.util.comparator#compare(java.lang.object java.lang.object)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.dragsourcelistener#dragdropend(java.awt.dnd.dragsourcedropevent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.dragsourcelistener#dragenter(java.awt.dnd.dragsourcedragevent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.dragsourcelistener#dragexit(java.awt.dnd.dragsourceevent)
WITHOUT_CLASSIFICATION	this is not the correct location to set the cursor. the commented out code illustrates the calculation of coordinates. @see java.awt.dnd.dragsourcelistener#dragover(java.awt.dnd.dragsourcedragevent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.dragsourcelistener#dropactionchanged(java.awt.dnd.dragsourcedragevent)
WITHOUT_CLASSIFICATION	ok we've been told to scroll because the mouse cursor is in our scroll zone. @see java.awt.dnd.autoscroll#autoscroll(java.awt.point)
WITHOUT_CLASSIFICATION	calculate the insets for the jtree not the viewport the tree is in. this makes it a bit messy. @see java.awt.dnd.autoscroll#getautoscrollinsets()
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.droptargetlistener#dragenter(java.awt.dnd.droptargetdragevent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.droptargetlistener#dragexit(java.awt.dnd.droptargetevent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.droptargetlistener#dropactionchanged(java.awt.dnd.droptargetdragevent)
WITHOUT_CLASSIFICATION	@see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see javax.management.notificationlistener#handlenotification(javax.management.notification java.lang.object)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.action#getvalue(java.lang.string)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.util.childgenerator#gen(java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getcolumncount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getrowcount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getcolumnname(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getcolumnclass(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#iscelleditable(int int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getvalueat(int int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.mutablegraphmodel#canaddnode(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.mutablegraphmodel#canaddedge(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.mutablegraphmodel#addnoderelatededges(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphlistener#nodeadded(org.tigris.gef.graph.graphevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinecolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphlistener#edgeadded(org.tigris.gef.graph.graphevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphlistener#noderemoved(org.tigris.gef.graph.graphevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphlistener#edgeremoved(org.tigris.gef.graph.graphevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphlistener#graphchanged(org.tigris.gef.graph.graphevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfillcolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getfillcolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinewidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinewidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getminimumsize()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setboundsimpl(int int int int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.diagram#initialize(java.lang.object)
WITHOUT_CLASSIFICATION	override setbounds to keep shapes looking right. the classifier and state figs are nicely centered vertically and stretched out over the full width to allow easy selection with the mouse. the fig can only be shrunk to half its original size - so that it is not reducible to a few pixels only. @see org.tigris.gef.presentation.fig#setboundsimpl(int int int int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfillcolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getfillcolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinecolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinecolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfillcolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getfillcolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinewidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinewidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfillcolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getfillcolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getminimumsize()
WITHOUT_CLASSIFICATION	@see java.lang.object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getminimumsize()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setboundsimpl(int int int int) override setbounds to keep shapes looking right.
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinecolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinecolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfillcolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getfillcolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinewidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinewidth()
WITHOUT_CLASSIFICATION	return all ports on node or edge. @see org.tigris.gef.graph.graphmodel#getports(java.lang.object)
WITHOUT_CLASSIFICATION	return the node or edge that owns the given port. @see org.tigris.gef.graph.basegraphmodel#getowner(java.lang.object)
WITHOUT_CLASSIFICATION	return all edges going to given port. @see org.tigris.gef.graph.graphmodel#getinedges(java.lang.object)
WITHOUT_CLASSIFICATION	return all edges going from given port. @see org.tigris.gef.graph.graphmodel#getoutedges(java.lang.object)
WITHOUT_CLASSIFICATION	return true if the given object is a valid node in this graph. @see org.tigris.gef.graph.mutablegraphmodel#canaddnode(java.lang.object)
WITHOUT_CLASSIFICATION	return true if the given object is a valid edge in this graph. @see org.tigris.gef.graph.mutablegraphmodel#canaddedge(java.lang.object)
WITHOUT_CLASSIFICATION	add the given node to the graph if valid. @see org.tigris.gef.graph.mutablegraphmodel#addnode(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.mutablegraphmodel#addnoderelatededges(java.lang.object)
WITHOUT_CLASSIFICATION	return true if the two given ports can be connected by a kind of edge to be determined by the ports. @see org.tigris.gef.graph.mutablegraphmodel#canconnect(java.lang.object java.lang.object)
WITHOUT_CLASSIFICATION	@see java.beans.vetoablechangelistener#vetoablechange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinecolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinecolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfillcolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getfillcolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinewidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinewidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#makeselection()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphfactory#makenode()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.figgroup#addfig(fig)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#calcbounds()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.figgroup#addfig(fig)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphnoderenderer#getfignodefor( org.tigris.gef.graph.graphmodel org.tigris.gef.base.layer java.lang.object java.util.map)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphmodel#getports(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.basegraphmodel#getowner(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphmodel#getinedges(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphmodel#getoutedges(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.mutablegraphmodel#canaddnode(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.mutablegraphmodel#canaddedge(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.mutablegraphmodel#addnode(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#makeselection()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphedgerenderer#getfigedgefor( org.tigris.gef.graph.graphmodel org.tigris.gef.base.layer java.lang.object java.util.map)
WITHOUT_CLASSIFICATION	@see java.lang.object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinecolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinecolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfillcolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getfillcolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinewidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinewidth()
WITHOUT_CLASSIFICATION	override setbounds to keep shapes looking right. @see org.tigris.gef.presentation.fig#setbounds(int int int int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setenclosingfig(org.tigris.gef.presentation.fig)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#makeselection()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setenclosingfig(org.tigris.gef.presentation.fig)
WITHOUT_CLASSIFICATION	@see java.lang.object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#makeselection()
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseclicked(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mousepressed(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setenclosingfig(org.tigris.gef.presentation.fig)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.util.predicate#predicate(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphmodel#getports(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.basegraphmodel#getowner(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphmodel#getinedges(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphmodel#getoutedges(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.mutablegraphmodel#canaddnode(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.mutablegraphmodel#canaddedge(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.mutablegraphmodel#addedge(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.mutablegraphmodel#addnoderelatededges(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.mutablegraphmodel#canconnect(java.lang.object java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.mutablegraphmodel#connect(java.lang.object java.lang.object java.lang.class)
WITHOUT_CLASSIFICATION	@see java.beans.vetoablechangelistener#vetoablechange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.util.predicate#predicate(java.lang.object)
WITHOUT_CLASSIFICATION	overridden to make it possible to include a statevertex in a composite state. @see org.tigris.gef.presentation.fig#setenclosingfig(org.tigris.gef.presentation.fig)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getusetraprect()
WITHOUT_CLASSIFICATION	override setbounds to keep shapes looking right. @see org.tigris.gef.presentation.fig#setboundsimpl(int int int int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinecolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinecolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfillcolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getfillcolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinewidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinewidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinecolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinecolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfillcolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getfillcolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinewidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinewidth()
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseclicked(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.lang.object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#makeselection()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinecolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinecolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfillcolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getfillcolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinewidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinewidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setboundsimpl(int int int int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinecolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfillcolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getfillcolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinewidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinewidth()
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseclicked(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#makeselection()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinecolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinecolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfillcolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getfillcolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinewidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinewidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getfillcolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinewidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinewidth()
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseclicked(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getminimumsize()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getusetraprect()
WITHOUT_CLASSIFICATION	override setbounds to keep shapes looking right. @see org.tigris.gef.presentation.fig#setboundsimpl(int int int int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinecolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinecolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfillcolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getfillcolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinewidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinewidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinecolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfillcolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getfillcolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinewidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinewidth()
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseclicked(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.lang.object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setbounds(int int int int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinecolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinecolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinewidth(int)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseclicked(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getminimumsize()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinecolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinecolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfillcolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getfillcolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinewidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinewidth()
WITHOUT_CLASSIFICATION	this function only sets the color of the divider line (since that is the only visible part) and can be used to make the divider line invisible for the top region in a composite state. @see org.tigris.gef.presentation.fig#setlinecolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfillcolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getfillcolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinewidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinewidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#makeselection()
WITHOUT_CLASSIFICATION	@see java.lang.object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setbounds(int int int int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinecolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinecolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfillcolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getfillcolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinewidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinewidth()
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseclicked(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.lang.object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinecolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinecolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfillcolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getfillcolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinewidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinewidth()
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseclicked(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getclosestpoint(java.awt.point)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphmodel#getports(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.basegraphmodel#getowner(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphmodel#getoutedges(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.mutablegraphmodel#canaddnode(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.mutablegraphmodel#canaddedge(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.mutablegraphmodel#addnode(java.lang.object)
WITHOUT_CLASSIFICATION	@see java.beans.vetoablechangelistener#vetoablechange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinecolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinecolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getfillcolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinewidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinewidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getusetraprect()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getminimumsize()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getclosestpoint(java.awt.point)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed( java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed( java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed( java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getclosestpoint(java.awt.point)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getclosestpoint(java.awt.point)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getclosestpoint(java.awt.point)
WITHOUT_CLASSIFICATION	@see java.awt.event.itemlistener#itemstatechanged(java.awt.event.itemevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.itemlistener#itemstatechanged(java.awt.event.itemevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.keylistener#keyreleased(java.awt.event.keyevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.keylistener#keytyped(java.awt.event.keyevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#makeselection()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinecolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinecolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfillcolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getfillcolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinewidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinewidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setenclosingfig(org.tigris.gef.presentation.fig)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getusetraprect()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setbounds(int int int int)
WITHOUT_CLASSIFICATION	@see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.figtext#settextfilled(boolean)
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.clipboardowner#lostownership( java.awt.datatransfer.clipboard java.awt.datatransfer.transferable)
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.transferable#gettransferdataflavors()
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.transferable#isdataflavorsupported( java.awt.datatransfer.dataflavor)
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.transferable#gettransferdata( java.awt.datatransfer.dataflavor)
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.transferable#gettransferdataflavors()
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.transferable#isdataflavorsupported( java.awt.datatransfer.dataflavor)
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.transferable#gettransferdata( java.awt.datatransfer.dataflavor)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#classnameandbounds()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fignode#hitport(int int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.figgroup#hitfig(java.awt.rectangle)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#isselectable()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fignode#getportfig(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.figedge#setfig(org.tigris.gef.presentation.fig)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.action#isenabled()
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#removeupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#changedupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.selectionbuttons#paintbuttons(graphics)
WITHOUT_CLASSIFICATION	@see java.awt.event.itemlistener#itemstatechanged(java.awt.event.itemevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.itemlistener#itemstatechanged(java.awt.event.itemevent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.droptargetlistener#dragexit( java.awt.dnd.droptargetevent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.droptargetlistener#drop( java.awt.dnd.droptargetdropevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#translate(int int)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseclicked(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	overridden to set argo-specific renderinghints to determine whether or not antialiasing should be turned on. @see org.tigris.gef.base.editor#paint(java.awt.graphics)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseentered(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mousemotionlistener#mousemoved(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	overridden to set argo-specific renderinghints to determine whether or not antialiasing should be turned on. @see org.tigris.gef.base.editor#paint(java.awt.graphics)
WITHOUT_CLASSIFICATION	@see javax.management.notificationemitter#removenotificationlistener(javax.management.notificationlistener javax.management.notificationfilter java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.management.notificationbroadcaster#addnotificationlistener(javax.management.notificationlistener javax.management.notificationfilter java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.management.notificationbroadcaster#getnotificationinfo()
WITHOUT_CLASSIFICATION	@see javax.management.notificationbroadcaster#removenotificationlistener(javax.management.notificationlistener)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mousepressed(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.modecreatepolyedge#mousereleased(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	updates the modelelement container if the fig is moved in or out another fig. if this fig doesn't have an enclosing fig anymore the namespace of the diagram will be the owning modelelement. if this fig is moved inside another fignodemodelelement the owner of that fignodemodelelement will be the owning modelelement. @see org.tigris.gef.presentation.fignode#setenclosingfig(org.tigris.gef.presentation.fig)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getenclosedfigs()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#makeselection()
WITHOUT_CLASSIFICATION	@see java.beans.vetoablechangelistener#vetoablechange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.keylistener#keypressed(java.awt.event.keyevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.keylistener#keyreleased(java.awt.event.keyevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.keylistener#keytyped(java.awt.event.keyevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#deletefrommodel()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#classnameandbounds()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#calcbounds()
WITHOUT_CLASSIFICATION	necessary since gef contains some errors regarding the hit subject. @see org.tigris.gef.presentation.fig#hit(rectangle)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#removefromdiagram()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fignode#isdragconnectable()
WITHOUT_CLASSIFICATION	need to 'arm' the rerouting capability with mousedragged(). <p> don't arm if the edtior's current mode is a figedge create mode because once a new edge has been created it is not deselected therefore on the next create an unwanted reroute is performed. @see java.awt.event.mousemotionlistener#mousedragged(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfillcolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getfillcolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinewidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinewidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getminimumsize()
WITHOUT_CLASSIFICATION	override setbounds to keep shapes looking right. @see org.tigris.gef.presentation.fig#setbounds(int int int int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.command#execute()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphfactory#makegraphmodel()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphfactory#makeedge()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphfactory#makenode()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.selectionbuttons#paint(java.awt.graphics)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.selectionbuttons#paintbuttons(graphics)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.selectionbuttons#getnewnode(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.selection#draghandle(int int int int org.tigris.gef.presentation.handle)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mousereleased(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseexited(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.lang.object#clone()
WITHOUT_CLASSIFICATION	makes sure that the edges stick to the outline of the fig. @see org.tigris.gef.presentation.fig#getgravitypoints()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinecolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinecolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfillcolor(java.awt.color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getfillcolor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setfilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlinewidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#getlinewidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#damage()
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mousepressed(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mousereleased(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseentered(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseexited(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	if the user double clicks on any part of this fignode pass it down to one of the internal figs. this allows the user to initiate direct text editing. @see java.awt.event.mouselistener#mouseclicked(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.keylistener#keypressed(java.awt.event.keyevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.keylistener#keyreleased(java.awt.event.keyevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.keylistener#keytyped(java.awt.event.keyevent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#setlayer(org.tigris.gef.base.layer)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#deletefrommodel()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#hit(java.awt.rectangle)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#removefromdiagram()
WITHOUT_CLASSIFICATION	makes sure that the edges stick to the outline of the fig. @see org.tigris.gef.presentation.fig#getgravitypoints()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.fig#paint(java.awt.graphics)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event. actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event. actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event. actionevent)
WITHOUT_CLASSIFICATION	@see org.tigris.swidgets.dialog#namebuttons()
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getcolumncount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getcolumnname(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getcolumnclass(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#iscelleditable(int int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getrowcount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getvalueat(int int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#setvalueat( java.lang.object int int)
WITHOUT_CLASSIFICATION	@see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see javax.swing.action#isenabled()
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.listmodel#getelementat(int)
WITHOUT_CLASSIFICATION	@see javax.swing.listmodel#getsize()
WITHOUT_CLASSIFICATION	@see javax.swing.comboboxmodel#setselecteditem(java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.comboboxmodel#getselecteditem()
WITHOUT_CLASSIFICATION	@see javax.swing.abstractlistmodel#firecontentschanged( object int int)
WITHOUT_CLASSIFICATION	@see javax.swing.abstractlistmodel#fireintervaladded( object int int)
WITHOUT_CLASSIFICATION	@see targetlistener#targetset(targetevent)
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	the property value has changed so rebuild our view. @see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see targetlistener#targetadded(targetevent)
WITHOUT_CLASSIFICATION	@see targetlistener#targetremoved(targetevent)
WITHOUT_CLASSIFICATION	@see targetlistener#targetset(targetevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.action#isenabled()
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseclicked( java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseentered(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mouseexited(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mousepressed(java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.mouselistener#mousereleased( java.awt.event.mouseevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#changedupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#removeupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#insertupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.caretlistener#caretupdate(javax.swing.event.caretevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.itemlistener#itemstatechanged(java.awt.event.itemevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.listcellrenderer#getlistcellrenderercomponent( javax.swing.jlist java.lang.object int boolean boolean)
WITHOUT_CLASSIFICATION	@see javax.swing.text.document#getdefaultrootelement()
WITHOUT_CLASSIFICATION	@see javax.swing.text.document#getlength()
WITHOUT_CLASSIFICATION	@see javax.swing.text.document#render(runnable r)
WITHOUT_CLASSIFICATION	@see javax.swing.text.document#gettext(int int)
WITHOUT_CLASSIFICATION	@see javax.swing.listcellrenderer#getlistcellrenderercomponent(javax.swing.jlist java.lang.object int boolean boolean)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed( java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.listselectionlistener#valuechanged(javax.swing.event.listselectionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.listselectionlistener#valuechanged(javax.swing.event.listselectionevent)
WITHOUT_CLASSIFICATION	@see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see java.lang.runnable#run()
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#removeupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.documentlistener#insertupdate(javax.swing.event.documentevent)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#iscelleditable(int int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getrowcount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#getvalueat(int int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.tablemodel#setvalueat(java.lang.object int int)
WITHOUT_CLASSIFICATION	@see java.beans.propertychangelistener#propertychange(java.beans. propertychangeevent)
WITHOUT_CLASSIFICATION	@see java.beans.vetoablechangelistener#vetoablechange(java.beans. propertychangeevent)
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.delayedvchangelistener#delayedvetoablechange(java. beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.abstractlistmodel#fireintervaladded( object int int)
WITHOUT_CLASSIFICATION	@see javax.swing.abstractlistmodel#fireintervalremoved( object int int)
WITHOUT_CLASSIFICATION	@see abstractaction#actionperformed(actionevent)
WITHOUT_CLASSIFICATION	@see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see org.tigris.swidgets.orientable#setorientation(org.tigris.swidgets.orientation)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see javax.swing.defaultlistmodel#contains(java.lang.object)
WITHOUT_CLASSIFICATION	@see javax.swing.defaultlistmodel#addelement(java.lang.object)
WITHOUT_CLASSIFICATION	@see targetlistener#targetadded(targetevent)
WITHOUT_CLASSIFICATION	@see targetlistener#targetremoved(targetevent)
WITHOUT_CLASSIFICATION	@see targetlistener#targetset(targetevent)
WITHOUT_CLASSIFICATION	@see javax.swing.abstractlistmodel#firecontentschanged( object int int)
WITHOUT_CLASSIFICATION	@see javax.swing.abstractlistmodel#fireintervaladded( object int int)
WITHOUT_CLASSIFICATION	@see javax.swing.abstractlistmodel#fireintervalremoved( object int int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treecellrenderer#gettreecellrenderercomponent( javax.swing.jtree java.lang.object boolean boolean boolean int boolean)
WITHOUT_CLASSIFICATION	@see java.awt.event.focuslistener#focuslost(java.awt.event.focusevent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.caretlistener#caretupdate(javax.swing.event.caretevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.focuslistener#focusgained(java.awt.event.focusevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed( java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	@see javax.swing.filechooser.filefilter#accept(java.io.file)
WITHOUT_CLASSIFICATION	@see javax.swing.filechooser.filefilter#getdescription()
WITHOUT_CLASSIFICATION	@see java.beans.propertychangelistener#propertychange( java.beans.propertychangeevent)
WITHOUT_CLASSIFICATION	@see java.util.enumeration#hasmoreelements()
WITHOUT_CLASSIFICATION	@see java.util.enumeration#nextelement()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see propertychangelistener#propertychange(propertychangeevent)
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#teardown()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see testcase#teardown()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	here we are actually violating the test independance since we keep the detailspane from test to test. the reason to do this is to make it possible to run the tests with less memory requirements. hopefully someone might eventually fix the detailspane so that it is garbage collected properly and this is no longer needed. @see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#runtest()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see targetlistener#targetadded(targetevent)
WITHOUT_CLASSIFICATION	@see targetlistener#targetremoved(targetevent)
WITHOUT_CLASSIFICATION	@see targetlistener#targetset(targetevent)
WITHOUT_CLASSIFICATION	@see targetlistener#targetadded(targetevent)
WITHOUT_CLASSIFICATION	@see targetlistener#targetremoved(targetevent)
WITHOUT_CLASSIFICATION	@see targetlistener#targetset(targetevent)
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#teardown()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see abstracttestactionadddiagram#getvalidnamespaceclasses()
WITHOUT_CLASSIFICATION	@see abstracttestactionadddiagram#getvalidnamespaceclasses()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see abstracttestactionadddiagram#getvalidnamespaceclasses()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#teardown()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#teardown()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#teardown()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.mutablegraphmodel#canaddedge(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.mutablegraphmodel#addnode(java.lang.object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.mutablegraphmodel#addedge(java.lang.object)
WITHOUT_CLASSIFICATION	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	this method is overridden in order to ignore change of the y coordinate during dragging. @see org.tigris.gef.presentation.fignode#supertranslate(int int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphfactory#makenode()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphnoderenderer#getfignodefor( org.tigris.gef.graph.graphmodel org.tigris.gef.base.layer java.lang.object java.util.map)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.graphedgerenderer#getfigedgefor( org.tigris.gef.graph.graphmodel org.tigris.gef.base.layer java.lang.object java.util.map)
WITHOUT_CLASSIFICATION	@see junit.framework.testcase#setup()
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	although not generally true for gef for argo we know that the layer is a layerperspective which knows the associated diagram
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	end class startcritics
WITHOUT_CLASSIFICATION	initialized in static initializer block below
WITHOUT_CLASSIFICATION	needs to happen after initialization is done & modules loaded
WITHOUT_CLASSIFICATION	create an anonymous class as a kind of adaptor for the cognitive system to provide proper translation/i18n.
WITHOUT_CLASSIFICATION	the reason the gui is initialized before the commands are run is that some of the commands will use the projectbrowser.
WITHOUT_CLASSIFICATION	initialize the module loader. at least the plug-ins that provide profiles need to be initialized before the project is loaded because some of these profile may have been set as default profiles and need to be applied to the project as soon as it has been created or loaded. the first instance of a project is needed during the gui initialization.
WITHOUT_CLASSIFICATION	the string <code>log4j.configuration</code> is the same string found in {@link org.apache.log4j.configuration.default_configuration_file} but if we use the reference then log4j configures itself and clears the system property and we never know if it was set. if it is set then we let the static initializer in {@link argo} perform the initialization.
WITHOUT_CLASSIFICATION	a subclass of jpanel that can act as a tab in the detailspane or multieditorpane. added functionality<p> spawning when the tab is double-clicked this jpanel will generate a separate window of the same size and with the same contents. this is almost like "tearing off" a tab.<p> todo spawning of windows disabled in spawn()<p> title this jpanel keeps track of its own title.<p> icon this jpanel keeps track of its own icon i.e. an arrow pointing to the panel that it gives details of.<p> orientation this jpanel is orientable.<p> cloning this jpanel may be cloned.<p> this class used to be named tabspawnable. renamed since it is not a tab but a panel and being spawnable is not any more its main purpose.
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	notation events are likely to cause gef/swing operations so we dispatch them on the swing event thread as a convenience so that the receiving notationchanged() methods don't need to deal with it
WITHOUT_CLASSIFICATION	@param item the todo item @param reason the reason todo use it! @return <code>true</code> if the argument was a component of this list <code>false</code> otherwise @throws unresolvableexception unable to resolve
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event
WITHOUT_CLASSIFICATION	process the listeners last to first notifying those that are interested in this event
WITHOUT_CLASSIFICATION	issue resolution
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	lazily create the event
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	static accessors
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	@see javax.swing.tree.treemodel#isleaf(java.lang.object)
WITHOUT_CLASSIFICATION	this needs to iterate to fill entire output raster if implemented return image.copydata(outraster)
WITHOUT_CLASSIFICATION	catch all exceptions and errors however severe
WITHOUT_CLASSIFICATION	notify the user that the modules in the list that are selected but not enabled were not possible to enable and that are not selected that we cannot disable. currently we just log this. todo we could eventually pop up some warning window.
WITHOUT_CLASSIFICATION	if we have only one return value and without type the return param string is " " we remove it
WITHOUT_CLASSIFICATION	if the script of the action is empty (or only specifies arguments and no method name) then we generate a string based on a different model element
WITHOUT_CLASSIFICATION	mmessage
WITHOUT_CLASSIFICATION	mmessage
WITHOUT_CLASSIFICATION	mmessage
WITHOUT_CLASSIFICATION	mmessage
WITHOUT_CLASSIFICATION	(mmessage)
WITHOUT_CLASSIFICATION	(mmessage)
WITHOUT_CLASSIFICATION	(mmessage)
WITHOUT_CLASSIFICATION	no state with the given name is found so we have to reject the complete user's input
WITHOUT_CLASSIFICATION	now let's check if the new line is already present in the old list of internal transitions if it is then mark the old one to be retained (i.e. do not create a new one) if it isn't continue with parsing
WITHOUT_CLASSIFICATION	case 1
WITHOUT_CLASSIFICATION	check for more literals ('' separated)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.type#hasstate(java.lang.string)
WITHOUT_CLASSIFICATION	if save did not raise an exception and name+"#" exists move name+"#" to name+"~" this is the correct backup file
WITHOUT_CLASSIFICATION	frank in case of exception delete name and mv name+"#" back to name if name+"#" exists this is the "rollback" to old file
WITHOUT_CLASSIFICATION	skip the 2 lines <?xml version="1.0" encoding="utf-8" ?> <!doctype pgml system "pgml.dtd">
WITHOUT_CLASSIFICATION	search all attributes found to those expected. if any don't match then turn off the found flag so that we search for the next matching tag.
WITHOUT_CLASSIFICATION	now we're into processing each specific path item strategy. at the moment we only know pathitemplacement
WITHOUT_CLASSIFICATION	for compatibility with older format
WITHOUT_CLASSIFICATION	if we're about to upgrade the file lets take an archive of it first.
WITHOUT_CLASSIFICATION	no more we can do here on failure
WITHOUT_CLASSIFICATION	write any left over bytes in the input buffer (perhaps from a partially decoded character)
WITHOUT_CLASSIFICATION	nop
WITHOUT_CLASSIFICATION	to persist to and from zargo (zipped file) storage containing seperate xmi argo plgml and todo zip entries. @author bob tarling todo review use of this against zargofilepersister - bob
WITHOUT_CLASSIFICATION	add the path of the model to the search path so we can read dependent models
WITHOUT_CLASSIFICATION	we only need to add the classloader once and if and only if there is at least a profile in the jar
WITHOUT_CLASSIFICATION	testing does not fire.
WITHOUT_CLASSIFICATION	testing does not fire.
WITHOUT_CLASSIFICATION	testing does not fire.
WITHOUT_CLASSIFICATION	testing does not fire.
WITHOUT_CLASSIFICATION	testing does not fire.
WITHOUT_CLASSIFICATION	testing does not fire.
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.depthfirstadapter#caseafeaturecall(tudresden.ocl.parser.node.afeaturecall)
WITHOUT_CLASSIFICATION	@see org.argouml.profile.internal.ocl.modelinterpreter#invokefeature(java.util.map java.lang.object java.lang.string java.lang.string java.lang.object[])
WITHOUT_CLASSIFICATION	@see org.argouml.profile.internal.ocl.modelinterpreter#invokefeature(java.util.map java.lang.object java.lang.string java.lang.string java.lang.object[])
WITHOUT_CLASSIFICATION	todo isstatic in uml 2.x
WITHOUT_CLASSIFICATION	additional operations in 4.5.3.8
WITHOUT_CLASSIFICATION	4.5.2.13 constraint
WITHOUT_CLASSIFICATION	4.5.2.24 generalization
WITHOUT_CLASSIFICATION	4.5.2.28 namespace
WITHOUT_CLASSIFICATION	do not set buildingmodel = false here otherwise the action for selection is performed.
WITHOUT_CLASSIFICATION	prptodo = createproperty("label.todo-pane" positions tabtodo.class) prpproperties = createproperty("label.properties-pane" positions tabprops.class) prpdocumentation = createproperty("label.documentation-pane" positions tabdocumentation.class) prpstyle = createproperty("label.style-pane" positions tabstyle.class) prpsource = createproperty("label.source-pane" positions tabsrc.class) prpconstraints = createproperty("label.constraints-pane" positions tabconstraints.class) prptaggedvalues = createproperty("label.tagged-values-pane" positions tabtaggedvalues.class) property[] propertylist = new property[] { prptodo prpproperties prpdocumentation prpstyle prpsource prpconstraints prptaggedvalues } arrays.sort(propertylist) top.add(new jscrollpane(new propertytable( propertylist panecolumnheader positioncolumnheader)) borderlayout.center)
WITHOUT_CLASSIFICATION	parse the boundary box text. null is returned if it is empty or invalid which causes no change. otherwise we tell gef we are making a change make the change and tell gef we've finished.
WITHOUT_CLASSIFICATION	todo add double click listener
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getprimary1()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.metaltheme#getprimary1()
WITHOUT_CLASSIFICATION	if the current shortcut has been set but is void then the current shortcut is not set --> then the default value does not change
WITHOUT_CLASSIFICATION	only show actions for associations not already on diagram
WITHOUT_CLASSIFICATION	only show actions for associations not already on diagram
WITHOUT_CLASSIFICATION	only show actions for associations not already on diagram
WITHOUT_CLASSIFICATION	only show actions for associations not already on diagram
WITHOUT_CLASSIFICATION	only show actions for associations not already on diagram
WITHOUT_CLASSIFICATION	only show actions for associations not already on diagram
WITHOUT_CLASSIFICATION	2. the profile configuration holding noneditable applied profiles
WITHOUT_CLASSIFICATION	the text will be set later
WITHOUT_CLASSIFICATION	private static final stereotypeview[] stereotypeviewmap static { stereotypeviewmap = new stereotypeview[3] stereotypeview. stereotypeviewmap[diagramappearance.stereotype_view_textual] = stereotypeview.textual stereotypeviewmap[diagramappearance.stereotype_view_big_icon] = stereotypeview.big_icon stereotypeviewmap[diagramappearance.stereotype_view_small_icon] = stereotypeview.small_icon }
WITHOUT_CLASSIFICATION	this class represents all diagrams within argouml. it is based upon the gef diagram.<p> it adds a namespace and the capability to delete itself when its namespace is deleted. <p> todo mvw i am not sure of the following<p> the "namespace" of the diagram is e.g. used when creating new elements that are shown on the diagram they will have their namespace set according this. it is not necessarily equal to the "owner". <p> mvw i doubt all following the "namespace" of the diagram is e.g. used to register a listener to the uml model to be notified if this element is removed which will imply that this diagram has to be deleted too. <p> hence the namespace of e.g. a collaboration diagram should be the represented classifier or in case of a represented operation the classifier that owns this operation. and the namespace of the statechart diagram should be the namespace of its statemachine.
WITHOUT_CLASSIFICATION	the fix
WITHOUT_CLASSIFICATION	a binary association is not a node so reject.
WITHOUT_CLASSIFICATION	make all the parts match the main fig
WITHOUT_CLASSIFICATION	and the stereotypes of its features
WITHOUT_CLASSIFICATION	stereotype fig covers the name fig
WITHOUT_CLASSIFICATION	notation settings are different since we know that at a minimum the isshowpath() setting can change because with implement pathcontainer so we make sure that we have a private copy of the notation settings.
WITHOUT_CLASSIFICATION	null elements represent new constraints which will be added to the target the first time any actual editing takes place. this is done to ensure syntactical correctness of constraints stored with the target.
WITHOUT_CLASSIFICATION	mutators hold write lock & will deadlock if use is not thread safe
WITHOUT_CLASSIFICATION	test with a class and class diagram
WITHOUT_CLASSIFICATION	constructor for a {@link figclass} during file load.<p> parent {@link org.argouml.uml.diagram.ui.fignodemodelelement} will have created the main box {@link #getbigport()} and its name {@link #getnamefig()} and stereotype (@link #getstereotypefig()}. this constructor creates a box for the attributes and operations.<p> the properties of all these graphic elements are adjusted appropriately. the main boxes are all filled and have outlines. todo which is wrong since the bigport is filled too. @param element model element to be represented by this fig. @param bounds rectangle describing bounds @param settings rendering settings
WITHOUT_CLASSIFICATION	when this is called from pgmlstackparser.attachedges we finished the initialization of owning pseudo element (commentedge)
WITHOUT_CLASSIFICATION	do nothing by default.
WITHOUT_CLASSIFICATION	override superclass to do nothing. fill property cannot be changed.
WITHOUT_CLASSIFICATION	override superclass to do nothing. fill property cannot be changed.
WITHOUT_CLASSIFICATION	a fig designed to be the child of some fignode or figedge to display the stereotypes of the model element represented by the parent fig. currently multiple stereotypes are shown stacked one on top of the other each enclosed by guillemets.<p> the minimum width of this fig is the largest minimum width of its child figs. the minimum height of this fig is the total minimum height of its child figs.<p> the owner of this fig is the uml element that is extended with the stereotypes. we are listening to changes to the model addition and removal of stereotypes. <p> this fig supports showing one keyword as the first "stereotype" in the list. <p> there is no way to remove a keyword fig once added. <p> todo allow for uml2 style display where all stereotypes are displayed in the same guillemet pair and are delimited by commas. the style should be changeable by calling getorientation(orientation). the swidget orientation class can be used for this. @author bob tarling
WITHOUT_CLASSIFICATION	the source of an association end should not be the classifier. if it is the user has drawn the wrong way round so we swap here.
WITHOUT_CLASSIFICATION	we want to maintain a minimum width for the fig. also add the border dimensions to the minimum space required for its contents
WITHOUT_CLASSIFICATION	make sure we don't try to set things smaller than the minimum
WITHOUT_CLASSIFICATION	if requested height equals needed height then do nothing it fits exactly.
WITHOUT_CLASSIFICATION	log.log(level.fine "slope = " + theta / math.pi + "pi " + theta / math.pi 180.0)
WITHOUT_CLASSIFICATION	test-case for the above code draw a class. create a stereotype for it by clicking on the prop-panel tool and name it. remove the class from the diagram. drag the class from the explorer on the diagram. select the stereotype in the explorer and change its name in the prop-panel to something longer. the longer name does not make the class fig wider unless the above code is added.
WITHOUT_CLASSIFICATION	if we have no source and dest connector then we assume this is load of an old uml1.4 diagram from before this data was saved in pgml. for uml1.4 we can assume the source is first connection and destination is last connection stored in repository for this association.
WITHOUT_CLASSIFICATION	note that "multiplicity" is what is the notation is listening for in uml1.4 "uppervalue" are listened to in uml2. it is not currently why it is not required to register for "lowervalue" also.
WITHOUT_CLASSIFICATION	some subclasses will try to use this
WITHOUT_CLASSIFICATION	figclass calls setboundsimpl before we set the stereotypefigprofileicon
WITHOUT_CLASSIFICATION	todo use per-project undo manager not global
WITHOUT_CLASSIFICATION	todo use per-project undo manager not global
WITHOUT_CLASSIFICATION	todo use per-project undo manager not global
WITHOUT_CLASSIFICATION	perhaps something like the following would workd. if not then traverse up the component hierarchy to a multeditorpane rectangle drawingarea = globals.cureditor().getjcomponent().getvisiblerect()
WITHOUT_CLASSIFICATION	default implementation is to do nothing
WITHOUT_CLASSIFICATION	/ methods that implement the graphmodel itself /
WITHOUT_CLASSIFICATION	/ methods that implement the vetoablechangelistener interface /
WITHOUT_CLASSIFICATION	only interested in the "ownedelement" property. either something has been added to the namespace for this model or removed. in the latter case the "something" will be in the old value of the property which is the collection of owned elements and the new value will be the element import describing the model element and the model from which it was removed
WITHOUT_CLASSIFICATION	the figs for the two end nodes
WITHOUT_CLASSIFICATION	the figs for the two end nodes
WITHOUT_CLASSIFICATION	private utility routine to work out the (positive) x coordinate of a point on an oval given the radii and y coordinate.<p> todo use this to calculate the separator lines! @param a radius in x direction @param b radius in y direction @param y y coordinate @return positive x coordinate for the given y coordinate
WITHOUT_CLASSIFICATION	the responsibility of determining if the given target is a correct one for this tab has been moved from the detailspane to the member tabs of the details pane. reason for this is that the details pane is configurable and cannot know what's the correct target for some tab.
WITHOUT_CLASSIFICATION	if the diagram is empty gef won't write anything leaving us with an empty (and invalid) file. handle this case ourselves to prevent this from happening.
WITHOUT_CLASSIFICATION	note gef's gif writer uses jeff poskanzer's gif encoder but that saves a copy of the entire image in an internal buffer before starting work defeating the whole purpose of our incremental rendering.
WITHOUT_CLASSIFICATION	expressions are datatypes not independent model elements be careful not to reuse them
WITHOUT_CLASSIFICATION	todo the next text was copied - to adapt. sets the target. if the old target is an uml element it also removes the model from the element listener list of the target. if the new target is an uml element the model is added as element listener to the new target. <p> this function is called when the user changes the target. hence this shall not result in any uml model changes.<p> this function looks a lot like the one in umlcomboboxmodel2. <p> as a possible future extension we could allow listening to other model elements. @param thenewtarget the new target
WITHOUT_CLASSIFICATION	fire all of the status events
WITHOUT_CLASSIFICATION	fire all of the profile events
WITHOUT_CLASSIFICATION	verify isrelevant returns true
WITHOUT_CLASSIFICATION	designgoalscm checks if the critic isrelevanttogoals of the designer this value is always true for the critic base class so designergoal should always return true in this condition
WITHOUT_CLASSIFICATION	update the priority of the critic to be the same priority as the decision
WITHOUT_CLASSIFICATION	check that the model was initialized with one goal
WITHOUT_CLASSIFICATION	number of goals should now be 0
WITHOUT_CLASSIFICATION	arbitrary settings - not used used for testing
WITHOUT_CLASSIFICATION	figassociationrole figassociationrole = new figassociationrole()
WITHOUT_CLASSIFICATION	initialize basic parameters that are different from decision.unspec
WITHOUT_CLASSIFICATION	verify parameters were initialized correctly by the constructor
WITHOUT_CLASSIFICATION	verify the name property was correctly updated
WITHOUT_CLASSIFICATION	following the update the priority should be equivalent to decision.unspec
WITHOUT_CLASSIFICATION	test that the category and description are correct
WITHOUT_CLASSIFICATION	update the values
WITHOUT_CLASSIFICATION	verify snoozeorder starts off not snoozed
WITHOUT_CLASSIFICATION	snooze and verify its been enabled
WITHOUT_CLASSIFICATION	snooze and verify its been enabled
WITHOUT_CLASSIFICATION	test with a class and class diagram
WITHOUT_CLASSIFICATION	test with a class and class diagram
WITHOUT_CLASSIFICATION	test with a class and class diagram
WITHOUT_CLASSIFICATION	pce = (propertychangeevent) rxdevent.getsource() asserttrue("wrong event name" pce.getpropertyname().equals( diagramappearance.key_default_shadow_width.getkey())) string value = (string) pce.getoldvalue() int i = integer.parseint(value) asserttrue("wrong old event value" i == 4) asserttrue("wrong new event value" ((string) pce.getnewvalue()).equals("2"))
WITHOUT_CLASSIFICATION	change things
WITHOUT_CLASSIFICATION	assert that the copy isn't modified when the source changes
WITHOUT_CLASSIFICATION	assert that the copy isn't modified when the source changes
WITHOUT_CLASSIFICATION	assert that the copy isn't modified when the source changes
WITHOUT_CLASSIFICATION	create a different client to bind to the same supplier
WITHOUT_CLASSIFICATION	success
WITHOUT_CLASSIFICATION	success
WITHOUT_CLASSIFICATION	success
WITHOUT_CLASSIFICATION	success
WITHOUT_CLASSIFICATION	this comment was included in a previous version (before 1/2005) of the test which had this assertion commented out ------ interaction should not be removed when removing classifierrole maybe if the last message is removed from the interaction but even then it's doubtfull since it will probably lead to backward compatibility problems in save formats. ------ but my reading of the uml 1.4 specification is that an interaction without at least one message is definitely illegal so mdr is doing the right thing by removing it in this case where we only have a single message which then gets deleted. - tfm
WITHOUT_CLASSIFICATION	get a list of uml metaclass names from the xmi document. <p> though some of the dom methods such as getattributes may return null values under other conditions in the context of this test and assuming a valid xmi file none should occur. <p> hence there is no special checking for those abnormal cases allowing the test to fail simply with a nullpointerexception with this comment indicating that either the input data is incorrect or the test needs to be improved.
WITHOUT_CLASSIFICATION	test creating modelelements from a given notation and then re-generate the notation-string again and check if they are equal. some of these tests are not very usefulll since they may fail on white space differences. todo white space should best be ignored.
WITHOUT_CLASSIFICATION	changing the sequence only
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	make sure the contents match what we expect
WITHOUT_CLASSIFICATION	make sure we got what we started with
WITHOUT_CLASSIFICATION	clean up our model and the extent that we read profile in to
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	todo the following fails due to the xmi writing saving all top level model elements and because even if there was no empty project by creating a class the undo mechanism in the project manager will force the creation of an empty project. assertequals(1 profilemodels.size())
WITHOUT_CLASSIFICATION	we recalculate all the activations
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
DESIGN	reply a set of design material's that are the subject of this todoitem. @return the offenders todo offenders need to be more strongly typed. - tfm 20070630
DESIGN	todo really should be a separate class
DESIGN	local variables - what do they do?
DESIGN	reply true iff this critic is relevant to the goals that the designer is trying to achieve. by default all critic's are relevant regardless of the goalmodel. really this is something for a controlmech to compute but if a subclass of critic encapsulates some information you may need to override this method. <p> todo i would like a better default action but goals are typed and their values must be interpreted by critics. they are not as generic as the decisionmodel. @param dsgr the designer @return true if relevant
DESIGN	todo should throw if the string is not good?
DESIGN	how much control should critics have over when they are relavant? does doing that in code instead of declaratively limit reasoning? how does using more semantically rich method calls impact componentization?
DESIGN	todo do all these classes need to be in their own files? public?
DESIGN	andreas this is just temporary for the uml2 pre-alpha versions.
DESIGN	argoeventpump is an event dispatcher which handles events that are global in nature for the entire application. <p> todo diagramappearance and notation events are not application-wide and will be moved from here to someplace more specific in the future so that they can be managed on a per-project or per-diagram basis.
DESIGN	todo once we have fixed all subclasses the title will always be localized so this localization can be removed.
DESIGN	todo once we have fixed all subclasses the title will always be localized so this localization can be removed.
DESIGN	indicates the end of the range for notation events.<p> todo remove this - not used anyway. @return the last id reserved for events.
DESIGN	initialze gef's version of the loader too todo we should probably be passing icons that we loaded ourselves but there doesn't seem to be a way to do that with gef - tfm
DESIGN	needs more work sending and receiving icons
DESIGN	@return the set of offenders todo the return value needs to be more strongly typed. - tfm - 20070630
DESIGN	todo why is this here? who is calling this? @see java.beans.vetoablechangelistener#vetoablechange(java.beans.propertychangeevent)
DESIGN	todo projectbrowser doesn't need to mediate this conversation use an event listener in the todopane to communicate instead. - tfm
DESIGN	todo this should listen for new target events fired by wizstep.updatetabtodo so that we can decouple it from the projectbrowser.
DESIGN	todo should fire its own event and projectbrowser todo should register a listener
DESIGN	set the target anew. todo this method is never used. what is its intention? remove it?
DESIGN	todo tabtodo should listen for an event that this fires so that we can decouple from the projectbrowser. - tfm
DESIGN	copy a file from source to destination. todo perhaps belongs in a utilities class of some sort. @param source the source file to be copied @param dest the destination file @return success status flag
DESIGN	todo this is using internal knowledge of gef. it should handle this itself. - tfm mvw move into something like main.initgef()
DESIGN	todo this is using internal knowledge of gef. it should handle this itself. - tfm
DESIGN	for locale selection.<p> todo detect the available locales from the available files. @return locales used in argouml
DESIGN	set the uri for this project. <p> don't use this directly! use instead {@link org.argouml.persistence.persistencemanager #setprojecturi(uri project)} <p> todo why isn't this deprecated or private if it is not to be used? @param theuri the uri to set.
DESIGN	todo unused?
DESIGN	todo unused?
DESIGN	todo unused?
DESIGN	updates the top level modelelements for all projects. in uml2 each model knows it's root elements so this could make setroots() obsolete. e.g. applying a stereotype in uml2 adds a new root. todo this is redundant with setroots/getroots. there are already too many ways this stuff is managed without adding an additional one. all current model subsystem implementations know their top level elements. responsibility can be moved to the model subsystem but let's choose one way of managing this.
DESIGN	todo is this used in places other than on diagrams? if so it needs to stay in projectsettings (as well as being a diagramsetting). @return returns <code>true</code> if we show stereotypes in the explorer
DESIGN	todo this needs to be managing undo on a per-project basis instead of using gef's global undo manager
DESIGN	todo break into 3 main member types model diagram and other
DESIGN	this does a calculation of where our "ext" directory is. todo we should eventually make sure that this calculation is only present in one place in the code and not several.
DESIGN	notation settings value object. stores settings which control how text is rendered on diagrams. <p> todo this needs to go on a diet. it's used everywhere so is performance sensitive. the current set of settings is the union of all those found in the legacy code but it's not clear that all of them are actually used. @author tom morris <tfmorris@gmail.com>
DESIGN	todo do we care?
DESIGN	this is the temporary solution for issue 1011
DESIGN	parse a message textual description.<p> todo - this method is too complex lets break it up. <p> @param umlmessage the uml message object to apply any changes to @param s the string to parse @throws parseexception when it detects an error in the attribute string. see also parseerror.geterroroffset().
DESIGN	this is the temporary solution for issue 1011
DESIGN	this method has insufficient information to call buildextensionpoint. thus we'll need to create one and pray that whomever called us knows what kind of mess they got.
DESIGN	todo addonly has been removed in uml 2.x so we should phase out support of it - tfm - 20070529
DESIGN	this code was copied from actionbooleantaggedvalue
DESIGN	todo what if used elsewhere?
DESIGN	todo what if used elsewhere?
DESIGN	hence a less elegant workaround that works
DESIGN	todo is this needed?
DESIGN	these may not actually make any difference at present (the code behind addtrigger needs more work).
DESIGN	these may not actually make any difference at present (the code behind addtrigger needs more work).
DESIGN	a critic to suggest using the facade stereotype. <p> todo at the moment only a dummy implementation see issue 3093.
DESIGN	todo what progressmgr is to be used here? where does it come from?
DESIGN	todo handle multiple top level packages
DESIGN	todo what progressmgr is to be used here? where does it come from?
DESIGN	could this be some other type of internal error that we want to handle differently? don't think so. - tfm
DESIGN	todo move to diagram subsystem?
DESIGN	todo attempt to move the following code to gef
DESIGN	todo move to gef
DESIGN	todo we could generalize this to initialize more stuff if needed
DESIGN	todo why is this not executed? remove if not needed - tfm
DESIGN	todo do we need to set the input encoding here? it was done for todo parsing but none of the other member types inputsource inputsource = new inputsource( new inputstreamreader(inputstream argo .getencoding()))
DESIGN	todo remove when code below in characters() is removed private static final string returnstring = "\n "
DESIGN	todo handle multiple top level packages
DESIGN	todo not sure we need to do this but just to be safe for now.
DESIGN	the file persister for the uml model. todo this is empty. what is its purpose? - tfm @author bob tarling
DESIGN	todo all this profile loading/handling needs to move someplace in model subsystem probably
DESIGN	todo is this (critics embedded in comments) actually used by anyone?
DESIGN	todo seems like overkill to load the model just to get the display name but that's where it's stored currently - tfm
DESIGN	todo better if we wrap in a profileexception and throw that
DESIGN	todo support iterate declarator
DESIGN	todo support nested let expressions !
DESIGN	todo we need a specific exception type here.
DESIGN	todo we need a specific exception type here.
DESIGN	todo this code is cloned over and over again! - tfm
DESIGN	todo this appears unused. if it's needed the model api should be enhanced to provide a method that does this directly.
DESIGN	todo this is an absurdly long method! break it up.
DESIGN	todo elementownership is not in modelsubsys!!
DESIGN	todo asargument??
DESIGN	todo we could also support other flavors here e.g. image (then you can drag modelelements directly into your wordprocessor to be inserted as an image).
DESIGN	settings dialog tab panel for layout options.<p> todo this class contains a lot of references to org.argouml.uml.ui. it would probably be better to move it there. todo this class breaks too many dependency limitations. and it is not used anywhere. so i (mvw) disabled its functionality. @author linus tolke
DESIGN	this is the "main" class for the gui subsystem.<p> users of the gui subsystem i.e. components that are to place themselves in any of the gui components register themselves in this class.<p> todo add the rest of the registers to this. @author linus tolke @since 0.21.3
DESIGN	todo how about figassociationclass?
DESIGN	todo what does the magic number 6000 represent here? put it in an explanatory literal! - tfm - 20071205
DESIGN	todo what does the magic number 6000 represent here? put it in an explanatory literal! - tfm - 20071205
DESIGN	todo the following handling of multiselection is just a local solution for the fill color better find a more general solution (i don't know if it's undoable this way - thn)
DESIGN	todo why isn't this done in save?
DESIGN	the dialog that allows the user to go to any diagram in the project by doubleclicking on it.<p> this dialog is not modal and can stay open while the user is working on the model. it is even possible to open multiple of these dialogs although the purpose of such useraction eludes me.<p> todo this dialog should have multiple tabs named "help" "diagram" "classifier" "statevertex" etc. which would allow the user to go to other things than diagrams. @author mvw
DESIGN	todo some parts of argouml have preliminary support for multiple details panels but we currently only support the default south (bottom) panel
DESIGN	todo bob says - tabs that listen for target changes should register themselves not expect detailspane to listen and pass on the event. otherwise these tabs always rely on detailspane. tabtodotarget and tabprops currently listen directly.
DESIGN	todo should fire its own event and projectbrowser should register a listener
DESIGN	todo should fire its own event and projectbrowser should register a listener
DESIGN	todo bob says - tabs that listen for target changes should register themselves not expect detailspane to listen and pass on the event. otherwise these tabs always rely on detailspane. tabtodotarget and tabprops currently listen directly.
DESIGN	flag to indicate if we are the main application or being integrated in another top level application such as eclipse (via the argoeclipse plugin). todo this is a temporary measure until projectbrowser can be refactored more appropriately. - tfm
DESIGN	todo work in progress here to allow multiple details panes with different contents - bob tarling
DESIGN	work in progress here to allow multiple details panes with different contents - bob tarling
DESIGN	loads a project displaying a nice progressmonitor @param overwrite if true the file is going to be overwritten @param file the target file todo separate this into a swing specific class - tfm @param exit if true exit argouml when done
DESIGN	todo this should listen for file save events - tfm
DESIGN	loads a project displaying a nice progressmonitor @param file the project to be opened @param showui whether to show the gui or not todo this needs to be refactored to be gui independent - tfm
DESIGN	todo this is actually a hack! some diagram types (like the statechart diagrams) access the current diagram to get some info. this might cause problems if there's another statechart diagram active so i remove the current project before loading the new one.
DESIGN	manages a progressmonitor dialog. note users of this class should use the type of the interface {@link org.argouml.taskmgmt.progressmonitor} wherever possible to maintain gui independence. @author andrea_nironi@tigris.org todo bob says i don't like the naming of this class. its confusing that its called window and yet it is not a window. lets rename once we have it hidden.
DESIGN	todo move to different class?
DESIGN	this fig is never placed on a diagram. it is only used by the call renderer so that pick list items look like diagram figs. todo this fig does not represent a model element and so it should not extend fignodemodelelement. we should split fignodemodelelement in two one for base functionality for all nodes and one that is truly for model elements.
DESIGN	todo why is this code even getting called for a figgeneralization?
DESIGN	todo this should get the containing project from the list of targets not from some global
DESIGN	i hate this so much even before i start writing it. re-initialising a global in a place where no-one will see it just feels wrong. oh well here goes.
DESIGN	todo should fire its own event and projectbrowser should register a listener
DESIGN	todo should fire its own event and projectbrowser should register a listener
DESIGN	a window that displays an exception to the user if we can't handle it in any other way. todo this has been partly converted to be a generic error dialog rather than something specific to exceptions. this should be renamed when that process is complete.
DESIGN	todo don't use hardcoded colors here - tfm
DESIGN	todo can we move this knowledge behind model facade rather than have a condition here?
DESIGN	todo this shouldn't know the internal form of type names but i'm not sure what gef's predicatetype does so i'm fixing it here - tfm
DESIGN	a command to set selected figs to their minimum size. <p> despite its name really the minimum size is selected here! <p> todo rename this class. @author markus klink
DESIGN	todo this method is obsolete. use getinputmap etc as below
DESIGN	first of all let's set up the duplicate hash. this hash contains all the duplicate key for another key. todo every duplicate.put() is done twice - but how to avoid this?
DESIGN	critique menu todo this dependency should be inverted with the critics subsystem registering its desired shortcuts with us - tfm
DESIGN	kludge required by gef's use of hashmap in the api todo this can be removed if they ever fix gef to use maps
DESIGN	references to actions that we need for mac hack
DESIGN	adds the entry to the mru list. @param filename of the project todo this should listen for file save events rather than being called directly - tfm.
DESIGN	todo this creates a dependency on the critics subsystem. instead that subsystem should register its desired menus and actions.
DESIGN	todo why can't we use actionaddexistingnodes here? bob.
DESIGN	todo we really only care about events which affect things that are visible in the current perspective (view). this could be tailored to cut down on event traffic. - tfm 20060410
DESIGN	the singleton instance. todo why is this a singleton? wouldn't it be better to have exactly one for every explorer?
DESIGN	forwards this event to the tree model. @param element the modelelement to be added todo this shouldn't be public. components desiring to inform the explorer of changes should send events.
DESIGN	todo can this be made more restrictive? do we care about any attributes other than name? - tfm
DESIGN	todo we need a factory pattern for goxxx classes that can determine if they are required
DESIGN	todo any namespace can contain other elements. why don't we allow this? - tfm
DESIGN	todo really should be element/modelelement but we don't have a type which is portable for this
DESIGN	todo this seems like a brute force workaround (and a very indirect one at that). it appears to be needed though until we fix the problem properly. - tfm 20070904
DESIGN	todo temporary - let tree expand implicitly - tfm
DESIGN	this is carried over from previous implementation not sure why we don't want contents of package - tfm - 20060214
DESIGN	@see org.argouml.cognitive.critic#setheadline(java.lang.string) set up the locale specific text for the critic headline (the one liner that appears in the to-do pane) and the critic description (the detailed explanation that appears in the to-do tab of the details pane). mvw maybe we can make it part of the constructor cruml()? fixme why override if nobody uses?
DESIGN	todo this method can be replaced by getclass().getsimplename() when argo drops support for java versions < 1.5
DESIGN	todo move to mmutil or some other common place and merge with umlcomboboxentryfindnamespace()
DESIGN	todo consider inherited associations? todo self loops are double counted
DESIGN	set the threshold. todo should this be protected? @param threshold the threshold to compare to.
DESIGN	gets the current threshold. todo should this be protected? @return the current threshold.
DESIGN	todo split into one critic for inherited problems and one for problems directly in this class.
DESIGN	todo do we need this generalization is not a named element
DESIGN	todo should define a compoundcritic
DESIGN	this class gives critics access to parts of the uml model of the design. it defines a gen() function that returns the "children" of any given part of the uml model. basically it goes from project to models to modelelements. argo's critic agency uses this to apply critics where appropriate. todo this thinks it knows all the composition associations of the the uml metamodel but it is a) incomplete and b) not updated for uml 1.4. this should be done using information from the metamodel rather than hardwired code. - tfm - 20070205 @see org.argouml.cognitive.agency @see org.argouml.cognitive.designer @author jrobbins
DESIGN	todo associationclasses fit both of the next 2 cases
DESIGN	needed?
DESIGN	needed?
DESIGN	todo we can probably use this instead of all of the above legacy uml 1.3 code - tfm - 20070915
DESIGN	these may not actually make any difference at present (the code behind addtrigger needs more work).
DESIGN	todo split into an inherited attr critic and a local attr critic
DESIGN	a wizard which adjust the threshold for critics. <p> todo make the treshold setting adjustable without using the wizard and make it persistent. maybe by using the "configure" button on the browse critics dialog. @see org.argouml.uml.cognitive.critics.abstractcrtoomany @author mkl
DESIGN	todo move to gef
DESIGN	remove this diagram from existence. todo move to gef
DESIGN	todo this uses a "last one wins" algorithm for registration we should warn if a factory is being overwritten.
DESIGN	idem e.g. for a generalization with leaf/root object todo but showing the message in the statusbar would help todo illegalargumentexception should not be used for events we expect to happen. we need a different way of catching well-formedness rules.
DESIGN	todo use our extension registration mechanism for our internal classes as well so everything is treated the same
DESIGN	todo convert all to use standard factory registration
DESIGN	@return returns the default stereotype view todo enumeration here?
DESIGN	the constructor. todo why does this method not handle all settings (key_default_shadow_width is missing)?
DESIGN	gets font name. if it doesn't exist in configuration it creates new entries in configuration for appearance. todo why create in a getter? @return the name of the configured font
DESIGN	todo what is this trying to do? it's never going to get called - tfm really dirty hack to remove unwanted listeners
DESIGN	todo define constants for magic numbers
DESIGN	todo define constants for magic numbers
DESIGN	@return the statemachine todo if this method is called by any of the figs it will introduce a dependency cycle. it would be much better if they could just use {@link org.argouml.uml.diagram.argodiagram#getowner()} which does the same thing.
DESIGN	todo needs work. must determine which figs enclosed in the pool are within the bounds of this fig and translate those.
DESIGN	todo needs to be tidied up after stable release. graph model should be created in constructor
DESIGN	todo rather than specifically ignore some item maybe it would be better to specifically state what items are of interest. otherwise we may still be acting on other events we don't need
DESIGN	this class represents a pool of swimlanes for activity diagrams. this is exists only to act as the gef style encloser. other nodes in the same must be placed entirely within or outside the boundaries of this fig but cannot intersect with the boundary. <p> todo there is no actual model element being represented here so we are inheriting a lot of behaviour from fignodemodelelement that we don't want. we require to split fignodemodelelement to separate the code that requires a model element owner. see issue <p> remark mvw why not give it an owner instead? the activitygraph is the obvious candidate or maybe the top state. @author mkl
DESIGN	todo replace the next deprecated call. this case is complicated by the use of parameters. all other figs work differently.
DESIGN	todo rather than specifically ignore some item maybe it would be better to specifically state what items are of interest. otherwise we may still be acting on other events we don't need
DESIGN	todo all super constrcutors should take a graphmodel
DESIGN	todo is this really needed?
DESIGN	todo needs to be tidied up after stable release. graph model should be created in constructor
DESIGN	the next 4 lines fix the 2nd half of issue 5638. is there no better way?
DESIGN	todo needs to be tidied up after stable release. graph model should be created in constructor
DESIGN	todo all super constrcutors should take a graphmodel
DESIGN	todo what is this needed for? - tfm
DESIGN	return a list of gravity points around circle which is enclosed in the bounding box. convenience method for use by figinitialstate and figfinalstate. todo as this method is not required by all sub classes it would seem sensible to extend figstatevertex with figcirclevertex and only have the relevant concrete figs extend that and gain this functionality. @return a list of points
DESIGN	to resize only when a new concurrent region is added changing the height. todo probably shouldn't exist as this class should be listening for added concurrent regions and call this internally itself. @param h the new height
DESIGN	class to display graphics for a uml choice state in a diagram - the circle. todo this should really be renamed figchoicestate. it's the last vestige of the uml 1.3 name. @author pepargouml
DESIGN	actually instanciate the netnode and fignode objects and set the global next mode to modeplace todo should call super reduce code volume! @see org.tigris.gef.graph.graphfactory#makenode()
DESIGN	todo rather than specifically ignore some item maybe it would be better to specifically state what items are of interest. otherwise we may still be acting on other events we don't need
DESIGN	mode to create a link between two figclassifierroles. todo provide a modefactory and then this class can become package scope. @author penyaskito
DESIGN	todo rather than specifically ignore some item maybe it would be better to specifically state what items are of interest. otherwise we may still be acting on other events we don't need
DESIGN	todo get rid of magic numbers! figure out which represent line widths vs padding vs offsets
DESIGN	todo we definitely don't want to react to addition and removal of transitions. can't we be more specific when we register ourselves as a listener.
DESIGN	todo there's a cyclic dependency between figconcurrentregion and the actions actionaddconcurrentregion
DESIGN	todo rather than specifically ignore some item maybe it would be better to specifically state what items are of interest. otherwise we may still be acting on other events we don't need
DESIGN	todo needs to be tidied up after stable release. graph model should be created in constructor
DESIGN	todo this logic may well be worth moving into the model component. provide a similar grid to the connectionsgrid
DESIGN	todo this should be a configurable property
DESIGN	todo multiple associations between the same pair of elements need to be special cased so that they don't overlap - tfm - 20060228
DESIGN	todo taken from figclassifierboxwithattribute to handle events on an attribute. all this event handling should eventually be moved to the compartment fig for attributes
DESIGN	todo taken from figclassifierboxwithattribute to handle events on an attribute. all this event handling should eventually be moved to the compartment fig for attributes
DESIGN	and its stereotypes todo aren't stereotypes handled elsewhere?
DESIGN	todo" what is the purpose of this? why do we hide buttons here? presumably if so we should not assume selectionclass
DESIGN	todo mvw would it not be better if this code would go in starttexteditor() not overruling mouseclicked(). but we made this fig not editable to stop it from reacting on key-presses. anyhow - this is a hack - abusing a figtext - gef does not really support double-clicking on a fig to trigger some action.
DESIGN	a model element has been removed from this packages namespace if the fig representing that model element is on the same diagram as this package then make sure it is not enclosed by this package. todo in my view the fig representing the model element should be removed from the diagram. yet to be agreed. bob.
DESIGN	the buttons on selection for a stereotype. <p> todo find a way to hide the operationscompartment on the figclass of the created metaclass. @author michiel
DESIGN	used by pgml.tee. @return the class name and bounds together with compartment visibility. todo is this not duplicate with the parent?
DESIGN	todo because we get called on each and every change event when the model is in a state of flux we'll often get an invalidelementexception before we finish this collection. the only saving grace is that we're called so many times that on the last time things should be stable again and we'll get a good set of elements for the final update. we need a better mechanism.
DESIGN	and its stereotypes todo aren't stereotypes handled elsewhere?
DESIGN	todo this is the same as in parent - remove? @see org.argouml.uml.diagram.ui.fignodemodelelement#updatebounds()
DESIGN	hack in order to be able to compile in java1.3
DESIGN	hack in order to be able to compile in java1.3
DESIGN	todo some of these magic numbers probably assume a line width of 1. replace with appropriate constants/variables.
DESIGN	this node cannot be dragged and manipulated in the same way as other fignodes in argouml. it is actually an optional child fig (or more precisely a path item) of a figedgemodelelement. this allows the dashed edge of an association class to connect the association edge and allows the dashed edge of a comment edge to attach a comment to some other edge type. gef can only attach edges to nodes by making this fig both a node and containing it as a child of an edge we push the rules to allow edge to edge connections. todo we are inheriting a lot of functionality here that we don't really require. we should attempt to make figedgeport extend fignode. @author bob tarling
DESIGN	todo there is a cyclic dependency between this class and figconcurrentregion
DESIGN	add a concurrent region to a concurrent composite state <p> this action can be executed with either the composite concurrent state selected or one of its concurrent regions. <p> todo move all the magic numbers to constants @author pepargouml@yahoo.es
DESIGN	todo what are these magic numbers?
DESIGN	todo this should become private and only called from constructor @see org.argouml.uml.diagram.ui.figcompartment#populate()
DESIGN	todo this is a temporary crutch to use until all figs are updated to use the constructor that accepts a diagramsettings object
DESIGN	todo is this needed?
DESIGN	convert to bounding box very screwy! gef sometimes uses center and sometimes upper left todo gef also positions text at the nominal baseline which is well inside the bounding box and gives the overall size incorrectly
DESIGN	this checks the order in addition to the contents is that really what we want here? - tfm 20070603
DESIGN	todo this is a temporary crutch to use until all figs are updated to use the constructor that accepts a diagramsettings object
DESIGN	the fig for a permission which is a form of dependency. <p> todo in uml 2.x the import and access permissions have become packageimports with public visibility and non-public visibility respectively. (argouml only supports the <<import>> permission currently). the friend permission has been dropped. also the type hierarchy has been reorganized so that packageimport is not a subtype of dependency. @author markus klink
DESIGN	todo this can't depend on projectbrowser. alternate below
DESIGN	todo without the null check the following throws a npe so many times when it is called from figedgemodelelement.modelchanged() we need to think about it.
DESIGN	true if an instance is allowed to be invisible. this is currently only set true by figedgeport. todo figedgeport should be removed from the fignodemodelelement hierarchy and so the need for this removed.
DESIGN	todo why isn't this stuff managed by the namefig itself?
DESIGN	todo this creates a dependency on the critics subsystem. we need a generic way for modules (including our internal subsystems) to request addition of actions to the popup menu. - tfm 20080430
DESIGN	todo having critics actions here introduces an unnecessary dependency on the critics subsystem. have it register its desired actions using an extension mechanism - tfm
DESIGN	todo find a way to replace this dependency on project
DESIGN	todo find a way to replace this dependency on project
DESIGN	called by propertychanged when it detects that a stereotype has been added or removed. on removal the fignode removes its listener to that stereotype. when a new stereotype is detected we add a listener. todo bob says in my opinion we shouldn't be doing this here. figstereotype should always be listening to change of its owners name. figstereotypescompartment should always be listening for add or remove of stereotypes to its owner. those classes will need to pass some event to the fignode on the awt thread only if a change results in a change of size that requires a redraw. <p>note runs at the model (mdr) thread </p> @param event the umlchangeevent that caused the change
DESIGN	todo can we delegate this to a specialist figname class?
DESIGN	todo find a way to replace this dependency on project
DESIGN	todo this is a temporary crutch to use until all figs are updated to use the constructor that accepts a diagramsettings object
DESIGN	must be overridden to make sense (i didn't want to make it abstract because it might not be required)
DESIGN	todo move this in figgroup (in gef). @param scb the suppresscalcbounds to set.
DESIGN	todo this function attempts to optimize the more generic code in the parent which also works correctly in this case. is this a good idea?
DESIGN	todo there is a cyclic dependency between selectionrerouteedge and figedgemodelelement
DESIGN	todo we'd like these to not be filled but gef won't let us select them if we do that. setfilled(false)
DESIGN	our superclass no longer has this method so perhaps this whole thing should be removed? - tfm super.updatelisteners(newowner)
DESIGN	actionaddexistingnode enables pasting of an existing node into a diagram. @author eugenio alvarez data access technologies. todo why do we have this class as well as actionaddexistingnodes?
DESIGN	todo is this required? why would the fig already be dashed? @see org.tigris.gef.presentation.figedge#setfig( org.tigris.gef.presentation.fig)
DESIGN	todo the above doesn't work reliably in a constructor. we need a better way of getting default fig settings for the owning project rather than using the project manager singleton. - tfm
DESIGN	todo replace magic numbers with constants
DESIGN	class to display graphics for n-ary association (association node) i.e. the diamond. <p> todo improve the location of the stereotypes! @author pepargouml@yahoo.es
DESIGN	todo mvw why is this not done in gef?
DESIGN	todo this can't depend on projectbrowser. it needs to get the current drawing area from the diagram subsystem or gef
DESIGN	todo this creates a dependency on the critics subsystem. we need a generic way for modules (including our internal subsystems) to request addition of actions to the popup menu. - tfm 20080430
DESIGN	todo there is a cyclic dependency between selectionrerouteedge and figedgemodelelement
DESIGN	this should not be looking for a namedelement since this is not always about the name of this modelelement alone.
DESIGN	todo mvw why is this not done in gef?
DESIGN	todo this needs to use a different method than that used by the constructor if it wants to allow the method to be overridden
DESIGN	todo workaround for gef redraw problem force all child figs into the same layer
DESIGN	check if labels etc have been hit apparently gef does require pathitems to be "annotations" which ours aren't so until that is resolved
DESIGN	todo dependency cycle between fignodemodelelement and figedgeme is this needed? if so introduce a removable interface to decouple
DESIGN	figmycircle is a figcircle with corrected connectionpoint method this methods calculates where a connected edge ends.<p> todo once we are at gef version 0.13.1m4 this whole class can be removed since it was taken over by gef.
DESIGN	defines the methods to generate source code from the model. each class providing code generation functionality must implement this to be recognized by argouml as a code generator. <p> todo a gui-independent mechanism to pass settings to the code generator is needed similar to what we have for reverse engineering. see {@link org.argouml.uml.reveng.importinterface#getimportsettings()} and {@link org.argouml.uml.reveng.settingstypes} @since 0.20 when it replaced the filegenerator interface.
DESIGN	information about a source unit and its content whether it exists only in memory or it's stored in a file. todo making this an interface instead of a class would allow more flexibility in dealing with non-file-based resources. - tfm @author aslo
DESIGN	todo how does the pressed cancel become a java.lang.exception?
DESIGN	create a taggedvalue with a tag/type matching our source module filename and a value of the file's last modified timestamp. todo this functionality needs to be moved someplace useful if it's needed otherwise it can be deleted. - tfm - 20070217
DESIGN	todo send an event instead of calling explorer directly
DESIGN	mvw for this case i have to move the call to setselecteditem() outside the "buildingmodel" otherwise the combo does not update with the new selection. the same does probably apply to the cases above!
DESIGN	mvw for this case i had to move the call to setselecteditem() outside the "buildingmodel" otherwise the combo does not update with the new selection. see issue 5418.
DESIGN	todo this class should be moved to package org.argouml.uml.ui.behavior.common_behavior.
DESIGN	todo this class should be moved to package org.argouml.uml.ui.behavior.common_behavior
DESIGN	action to trigger code generation for one or more classes. <p> in fact only all named classes and interfaces on the active diagram are generated. or if this delivers an empty collection all selected classes interfaces and the contents of selected packages are generated (independent if they are named or not). <p> todo implement a more logical behaviour.
DESIGN	todo it's probably worthwhile to abstract and factor this chooser and directory stuff. more file handling is coming i'm sure.
DESIGN	hack to make sure that the right height is applied when no icon is used.
DESIGN	sets the target of the property panel. the given target t may either be a diagram or a modelelement. if the target given is a fig a check is made if the fig has an owning modelelement and occurs on the current diagram. if so that modelelement is the target. @deprecated as of argouml version 0.13.5 the visibility of this method will change in the future replaced by {@link org.argouml.ui.targetmanager.targetmanager}. todo mvw i think this should not be deprecated. @param target the new target @see org.argouml.ui.tabtarget#settarget(java.lang.object)
DESIGN	todo can we find a better way to do this than hard coding colour?
DESIGN	todo this should be more extensible may be only "findpanelfor(target)" if there is a panel why not show it?
DESIGN	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent) todo from combobox javadoc - "this method is public as an implementation side effect. do not call or override." we should find some other way to implement this.
DESIGN	the model for the table with the tagged values. implementation for uml 1.4 and tagdefinitions. todo this currently only supports taggedvalues with a tagdefinition which has a type of string.
DESIGN	todo this will vary based on the type of the tagdefinition
DESIGN	abstract class that is the parent of all actions adding diagrams to argouml. the children of this class should implement creatediagram to do any specific actions for creating a diagram and isvalidnamespace that checks if some namespace is valid to add the diagram to. <p> argouml shall never create a diagram for a read-only modelelement.<p> todo this class should be merged with actionnewdiagram. @author jaap.branderhorst@xs4all.nl
DESIGN	todo use default value of appropriate type here
DESIGN	todo use default value of appropriate type for td
DESIGN	@see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent) todo this should be reviewed to see if it can be improved with a view towards removing some of the overrriding methods used as workarounds for differences between nsuml and mdr - tfm - 20060302
DESIGN	execute this action from the command line. todo the underlying gef library relies on acme that doesn't allow us to create these files unless there is a window showing. for this reason i have had to split the performing of commands in {@link org.argouml.application.main#main(string[])} so that we can by not supplying the -batch option run these commands with the window showing. hopefully this can eventually be fixed. @see org.argouml.application.api.commandlineinterface#docommand(string) @param argument is the file name that we save to. @return true if it is ok.
DESIGN	update the titlelabel mvw this overrules the icon set initiallly why do we need this?
DESIGN	@see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent) todo this should be reviewed to see if it can be improved with a view towards removing some of the overrriding methods used as workarounds for differences between nsuml and mdr - tfm - 20060302
DESIGN	add a new package at the top level i.e. a model.<p> todo argouml currently only supports one model.
DESIGN	todo make the explorer listen to project member property changes to eliminate coupling on gui.
DESIGN	abstract action to trigger creation of a new diagram. <p> argouml shall never create a diagram for a read-only modelelement. <p> todo bobs says can we merge actionadddiagram with this class? @author michiel
DESIGN	todo the namespace of created events is currently the model. i think this is wrong they should be in the namespace of the activitygraph! vec.addall( model.getmodelmanagementhelper().getallmodelelementsofkind( model.getfacade().getnamespace(gettarget()) model.getmetatypes().getevent()))
DESIGN	constraint this code only deals with 1 supplier per dependency! todo do we need more? @see org.argouml.uml.ui.abstractactionaddmodelelement#doit(java.util.list)
DESIGN	@author jaap.branderhorst@xs4all.nl @since jan 29 2003 todo for uml 2.x this needs to be changed to just a toggle which represents readonly (frozen) or not (changeable).
DESIGN	constraint this code only deals with 1 supplier per dependency! todo how to support more? @see org.argouml.uml.ui.abstractactionaddmodelelement#doit(java.util.list)
DESIGN	todo won't our use of pathcomparator take care of uniqueness?
DESIGN	todo won't our use of pathcomparator take care of uniqueness?
DESIGN	todo move this into the toolbar project.
DESIGN	this is needed for a commentedge todo why doesn't commentedge implement iitemuid and be handled with the mechanism above.
DESIGN	todo the following is mdr specific. we need something generic to all model subsystems - tfm 20070716
DESIGN	there shall not be a dependency from to
DESIGN	@param project the argouml {@link project} to save in file. @param file the {@link file} in which an argouml {@link project} will be persisted. @return the persister used and usable for file. @throws saveexception if saving the file goes wrong. @throws interruptedexception if an interrupt occurs while saving. todo move this to an helper class.
DESIGN	todo this is temporary. we need a new list for uml 2.x the following uml 1.4 elements are not in uml 2.x
DESIGN	todo do we want the top level package here instead of the immediate parent?
DESIGN	find a model element in modelelements which name is equal to name. @param name the name of the model element to find. it can't be null. @param modelelements the {@link collection} of model elements in which to find a model element with name. @return the model element if found or null. todo maybe should be moved to a helper class that deals with model related stuff.
DESIGN	todo should fire its own event and projectbrowser should register a listener - tfm
DESIGN	todo this first loop just to count the items appears redundant to me - tfm 20070630
DESIGN	name is set to the empty string (yuck!) by default - fix it
DESIGN	these may not actually make any difference at present (the code behind addtrigger needs more work).
DESIGN	todo no one should be sending the deprecated event from outside argouml but keep responding to it for now just in case
DESIGN	todo use stylesheet to convert or wait till we use fig factories in diagram subsystem. what is the last version that used fignote?
DESIGN	todo we shouldn't need this reflection any more once we have convinced ourselves that everything with a getitemuid method is implementing iitemuid
DESIGN	todo this is in the wrong place. it's not profile specific. it needs to be moved to main xmi reading code. - tfm 20060326
DESIGN	todo why is this inside a block? forgotten else branch?!? question by euluis @ 2009-08-16.
DESIGN	todo we need to get the model/extent (and package?) associated with the current diagram so that we can create the new element in the right place.
DESIGN	todo there is a cyclic dependency between selectionrerouteedge and figedgemodelelement
DESIGN	todo remove the casting to diagramfactoryinterface2 as soon as diagramfactoryinterface is removed.
DESIGN	todo rather than specifically ignore some item maybe it would be better to specifically state what items are of interest. otherwise we may still be acting on other events we don't need
DESIGN	if is a classifier role it must return the sent messages. in other cases returns an empty list. todo must be the incoming messages or the sent ones?
DESIGN	if is a classifier role it must return the received messages. in other cases returns an empty list. todo must be the outgoing messages or the received ones?
DESIGN	brooms all the message which y coordinate is upper than the position of the broom. todo provide a modefactory and then this class can become package scope. @author penyaskito
DESIGN	todo move magic number 10 to descriptive constant
DESIGN	this is a temporary hack until the notation provider for a sd message will be able to parse successfully when the sequence number is missing. remove this method completely then.
DESIGN	todo remove the casting to diagramfactoryinterface2 as soon as diagramfactoryinterface is removed.
DESIGN	sets the body of an expression. todo this operation is fooling the user in thinking that the body of the object is changed. instead a new object is created. there is no other way a mexpression can not be altered once created! so this operation returns a newly created object instead. @param handle the expression to modify. @param body the body to set. @return the newly created expression.
DESIGN	sets the language of an expression. todo this operation is fooling the user in thinking that the body of the object is changed. instead a new object is created. there is no other way a mexpression can not be altered once created! so this operation returns a newly created object instead. @param handle the expression. @param language the new language. @return the newly created object.
DESIGN	create an empty but initialized instance of a uml abstraction. @return an initialized uml abstraction instance. todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	create an empty but initialized instance of a uml permission. @return an initialized uml permission instance. todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	create an empty but initialized instance of a uml parameter. @return an initialized uml parameter instance. todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	create an empty but initialized instance of a uml templateparameter. @return an initialized uml templateparameter instance. todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	create an empty but initialized instance of a uml permission. @return an initialized uml permission instance. todo this needs an extra parameter to specify the model/extent where the new element should be created. @deprecated for 0.27.3 by tfmorris. renamed in uml 2.x to packageimport. use {@link #createpackageimport()}.
DESIGN	create a uml primitivetype. @since uml 2.1.1 @return an initialized uml primitive instance. todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	builds a default implementation for a class. the class is not owned by any model element by default. users should not forget to add ownership. @return newly created class todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	recognizer for n-ary association. todo this is not a recognizer for some type. rename to isnaryassociation? @param handle candidate @return true if handle is an association
DESIGN	recognizer for primary objects. a primary object is an object that is created by the parser or by a user. object that are created as a side effect of importing some other object are not. <p> todo this doesn't belong in the facade. it's a higher level function used specifically for certain reverse engineering operations. - tfmorris @param handle candidate @return true if primary object.
DESIGN	todo mvw this needs rethinking/rework! i have the following questions why does it not search for a stereotype in the namespace using properties and only create a new stereotype if it will actually be used? ie why is there not a getstereotype(string name string baseclass)? (edited by d00mst)
DESIGN	searches for a stereotype just like the given stereotype in all given models (and their sub-namespaces). the given stereotype can not have its namespace set yet otherwise it will be returned itself! todo this function should not take a stereotype object as parameter but a name and a baseclass. <p> todo currently only works for stereotypes with only one baseclass. <p> todo should it only search for stereotypes owned by the model object? @param models a collection of models @param stereo is the given stereotype @return stereotype
DESIGN	add a path to the list of paths to be searched when looking for xmi files to resolve external references with. the list is maintained in a static structure shared by all instances. <p> todo it's desirable to have separate search paths for separate files but more work is required in argouml so that it knows how to maintain separate contexts for the profiles and user models. @param path a directory path to add to the search path
DESIGN	todo this needs to be managed on a per-project or per-model/extent basis
DESIGN	these methods are based on the graphevents. these need replacing by more specic meaningful requests of the diagram interface model
DESIGN	todo this needs to be double checked. - tfm
DESIGN	a changecommand that updates its label. <p> the label of this command can contain the character '#' that will be replaced with information about an object when the label is returned. <p> todo switch this to use java string formatting instead of private # notation? @author bogdan pistol
DESIGN	todo how do we get the connectors of an association?
DESIGN	todo seems to work only with both loops check why.
DESIGN	todo instancespecification -> classifier association isn't navigable in this direction
DESIGN	todo comment by a- rueckert i don't think it makes much sense to query interactions from a collaboration in uml2 since this diagram does no longer exist and an interaction means something different in uml2.
DESIGN	todo figure out when this is getting thrown throw new unsupportedoperationexception()
DESIGN	workaround for missing ability to parse ""
DESIGN	workaround for missing ability to parse ""
DESIGN	todo the uml 1.4 concept of a multiplicity & multiplicity range has been replaced by a single element
DESIGN	todo actionstate callstate and subactivitystate have been replaced in uml 2.0 by explicitly modeled actions
DESIGN	todo tagdefinitions are gone from uml 2 they are now properties of stereotypes
DESIGN	todo not sure the semantics are an exact match here between uml 1.4 aggregate and uml 2.x shared.
DESIGN	todo moved this out of the implementation-specific piece - tfm everything is primary for now (ie not reverse engineered)
DESIGN	todo this doesn't belong in the implementation specific piece - tfm
DESIGN	todo this doesn't belong in the implementation specific piece - tfm
DESIGN	todo is there an option we can use to save our argouml version?
DESIGN	todo actionstate callstate and subactivitystate have been replaced in uml 2.0 by explicitly modeled actions
DESIGN	todo actionstate callstate and subactivitystate have been replaced in uml 2.0 by explicitly modeled actions
DESIGN	changed in uml 2.1 - component with <<subsystem>> stereotype todo we should deprecate this?
DESIGN	todo check that this is correct
DESIGN	todo support more than one body/language
DESIGN	todo does corehelper#getextendedclassifiers(object element) means all parents (direct and indirect) or only the direct parents?
DESIGN	todo the javadoc specifies that null should be returned if 'from' or 'to' are null or if there are no associations between them. we should return an empty collection instead and the javadoc should be changed.
DESIGN	todo does corehelper#getextendingclassifiers(object element) means all direct and indirect extending classifiers or only the direct extending classifiers?
DESIGN	don't implement - deprecated method in interface.
DESIGN	this keeps track of the editing domain that is used to track all changes to the model. <p> todo this probably needs to be a set of editingdomain so that we can manage an editingdomain per project.
DESIGN	map of which resources are read-only. <p> todo this needs to be managed per editingdomain.
DESIGN	this sets up the editing domain for the model editor. todo we probably need an editingdomain per argo project so that we can keep the resourcesets separate.
DESIGN	todo this will need to be adapted to send undo/redo commands back to our consumer (e.g. argouml) if a new undo mechanism is implemented for the model subsystem - tfm
DESIGN	todo silently ignore instead? return false
DESIGN	todo some elements such as generalization are no longer named. for a transitional period we'll return a string so debug can continue but the calling code should probably be fixed. - tfm 20070607 bob says - these are the comments that were in facadeeumlimpl.getname. same trick is needed here for now.
DESIGN	todo is it appropriate the templateableelement as the client and a list of templateparametersubstitution as the list of parameters?
DESIGN	todo booleanexpresion is removed from uml2.x is it ok to use valuespecification?
DESIGN	todo in uml2.x event has no parameters. the event metaclass in uml1.x corresponds to the trigger metaclass in uml2.x (see uml superstructure page 456).
DESIGN	todo remove? can't be localized
DESIGN	todo remove? can't be localized
DESIGN	todo is this removed from uml2 ?
DESIGN	todo is this removed from uml2 ?
DESIGN	todo is this removed from uml2 ?
DESIGN	todo is this removed from uml2 ?
DESIGN	todo is this removed from uml2 ?
DESIGN	todo model implementation independent
DESIGN	todo do we really want stereotypes from nested packages?
DESIGN	todo still not used because in argouml string is "hardwired"
DESIGN	todo mvw do we really look into super-types of the stereotype or should we be looking into super-types of the baseclass?
DESIGN	workaround for missing ability to parse ""
DESIGN	workaround for missing ability to parse ""
DESIGN	this is wrongly called with a null handle as a workaround we return an empty collection
DESIGN	todo this is probably related to the sendevent that is sending the signal but the association is not navigable in that direction
DESIGN	todo just a guess probably not right - tfm return handle instanceof linkenddata
DESIGN	todo reconfigure exception handling to distinguish between errors that are possible due to bad input data and those that represent unexpected processing errors.
DESIGN	create temporary file for output todo we should be able to chain this directly to xmi reader
DESIGN	todo need to clean up objecttoid (can we do it based on modelelement delete notifications?)
DESIGN	todo this should call the single namespace form getstereotype(it2.next() stereo)
DESIGN	apply <<profile>> stereotype to make it a "profile" (our convention) (hack create that stereotype instead using the uml 1.4 profile)
DESIGN	todo using just the last piece of the id leaves the potential for name collisions if two linked files have the same name in different directories
DESIGN	if systemid is a valid url simply use it. todo this causes a network connection attempt for profiles
DESIGN	todo is this adequate for finding profiles in java webstart jars? - tfm
DESIGN	todo must we calculate the whole list?
DESIGN	register a listener for metamodel class (and all its subclasses) optionally qualified by a list of property names. todo verify that property/event names are legal for this class in the metamodel
DESIGN	todo mvw this needs rethinking/rework! i have the following questions why does it not search for a stereotype in the namespace using properties and only create a new stereotype if it will actually be used? ie why is there not a getstereotype(string name string baseclass)? (edited by d00mst) <these comments imported from nsuml implementation - tfm> @see org.argouml.model.extensionmechanismsfactory#buildstereotype(java.lang.object java.lang.object java.lang.object)
DESIGN	todo this doesn't look right - review - tfm
DESIGN	todo hold lock for entire recursive traversal?
DESIGN	todo encountering a deleted object during any part of this traversal will abort the rest of the traversal. we probably should do the whole traversal in a single mdr transaction.
DESIGN	todo this doesn't belong here but it's not a good time to move it. find someplace less obtrusive than this inner loop. - tfm
DESIGN	todo this should either be extended to support all aggreationkinds or it should be simplified/removed from the api - tfm - 20070331
DESIGN	todo performance critical method
DESIGN	todo perhaps use a hashset or other collection with faster lookup performance in case our callers are doing naive .contains() lookups
DESIGN	todo optimize for root model case? - tfm
DESIGN	todo is there anyway we can determine this size at runtime?
DESIGN	todo try reusing the same set on every recursion
DESIGN	check that the two elements aren't already linked the opposite way todo this is a part implementation of well-formedness rule uml1.4.2 - 4.5.3.20 [3] circular inheritance is not allowed. not self.allparents->includes(self)
DESIGN	todo uml 1.4 spec requires both client and supplier to be in the same model - tfm
DESIGN	todo doing this violates the minimal cardinality of 1 if we allow it we at least need a critic to warn about it
DESIGN	todo this should use a minimal update strategy instead of removing all and then adding all - tfm - 20070806
DESIGN	todo this should be built by reflection from the metamodel - tfm update for uml 1.4 metamodel if not replaced by reflection
DESIGN	todo we have multiple string representations for multiplicities these should be consolidated. this form is used by org.argouml.uml.reveng
DESIGN	todo aren't our items always strings? - tfm 20100917
DESIGN	todo see if protected or need to be present in each subclass
DESIGN	todo this references the concrete factory we need a factories factory
DESIGN	todo this can be a mess there are any better solution?
DESIGN	todo this can be a mess there are any better solution?
DESIGN	the target model element in uml1.x this is the element that owns the expression. in uml2.x this is the expression itself todo this makes behaviour different enough that separate subclasses should be considered.
DESIGN	todo consider a conditional feature in the xml panel def for this
DESIGN	todo try to use valuefield.getcomponent()
DESIGN	if "expression" implements one of the combobox select it todo ? do it in euml module project ?
DESIGN	todo ? if this class listen the model it will be able to change in live as it is done in the figs (diagram)
DESIGN	todo this is a temporary method of making sure the model is updated on loss of focus of a combo box. in the long term we should attempt to update the model on each keypress. @see java.awt.event.focuslistener#focuslost(java.awt.event.focusevent)
DESIGN	todo lets build this into a separate buildtoolbar method
DESIGN	language must be unique todo do it in the model (if don't use the dialog and change the first)
DESIGN	get all classifiers in our model todo we need the property panels to have some reference to the project they belong to instead of using deprecated functionality
DESIGN	todo this should not be an instance variable. it should just be created and discarded as needed.
DESIGN	todo this is probably not the right location for switching off the "filternewlines". the setting gets lost after selecting a different modelelement in the diagram. btw see how it is used in javax.swing.text.plaindocument. see issue 1812.
DESIGN	the list of operations shall contain all operations of all classifiers contained in the same package as the callaction itself. <p> todo in fact we also should include operations of imported clasifiers. @see org.argouml.uml.ui.umlcomboboxmodel#buildmodellist()
DESIGN	creates a new field that selects the language for an expression. @param m expression model should be shared between language and body fields @param n only one of language and body fields should forward events to model todo mvw i do not understand that.
DESIGN	the constructor. @param expressionmodel expression model should be shared between language and body fields @param notify set to true to forward events to model. only one of language and body fields should have this set to true. todo mvw i do not understand that.
DESIGN	todo why do we need this as well as control? why is it instantiated when its not always needed.
DESIGN	todo ?? use an other checkbox (defines in argo and extends jcheckbox )
DESIGN	todo a minimal update strategy would be better here to minimize work and events firing but it may be better to deprecate the method and force calls to manage updates themselves (since they probably usually want to just add or remove a single element) - tfm 20061108
DESIGN	todo in uml 2.x a tagdefinition has become a property on a stereotype anything that uses this will probably need to be reviewed/changed. just return property for now.
DESIGN	todo this method is mostly (entirely?) redundant - tfm
DESIGN	todo we currently delete the old values before setting to something new. this is a workaround to issue 6056. we should consider giving an api to get the lower and upper values so that controls can listen directly to those rather than the element containing those values.
DESIGN	an array of valid connections the combination of connecting class and node classes must exist as a row in this list to be considered valid. <ul> <li>the 1st column is the connecting element. <li>the 2nd column is the "from" element type. <li>the 3rd column is the "to" element type. <li>the 3rd column is optional if not given then it is assumed to be the same as the "to" element. <li>the existence of a 4th column indicates that the connection is valid in one direction only. </ul> todo this encodes not only what is legal in uml but also what argouml knows how to create so not all legal connections are included. probably should be split into two pieces 1) legal uml (here) and 2) supported (in argouml application someplace) - tfm - 20060325<p> most of these are subtypes of relationship which includes association dependency flow generalization extend and include. dependency includes binding abstraction usage and permission. associationrole and associationclass are associations. the remaining items (link transition associationend message) are non-relationship types which argouml treats as connections/edges.
DESIGN	the following is specifically for realizations todo correction in gef it should use interfacerealization not abstraction
DESIGN	models the designers goals in making this design. provides useful control information to the agency so that only critics relevant to the designers goals are ever executed. todo really this should be part of a domain extension and not the kernel. i have not developed this part of argo very much. @author jason robbins
DESIGN	a modelelement has been changed. now we give it priority to be checked by the critics asap. todo why is is synchronised? todo what about when objects are first created? @param dm the design material @param reason the reason
DESIGN	public object getgoalinfo(string goal) { return _goals.getproperty(goal) todo we need a better representation of goals }
DESIGN	todo this probably belongs with the diagram subsystem
DESIGN	the decisionmodel is part of the state of the designer. it describes what types of decisions or design issues the designer is thinking about at the current time. critics that are relevant to those decisions are made active critics that are not relevant are made inactive. todo there is some notion that each decision has a certain importanance at a certain time but i have not followed through on that because i don't have good examples of how to quantify the importance of a decision. todo right now the individual decisions are just strings maybe they should have some non-atomic structure? @author jason robbins
DESIGN	todo this is a hack. a much better way of doing this would be not to start the critic in the first place.
DESIGN	todo add an "open most recent project" command so that command state can be decoupled from user settings?
DESIGN	andreas just temporary a warning dialog for uml2
DESIGN	andreas just temporary for the uml2 pre-alpha versions!
DESIGN	install the trap to "eat" securityexceptions. note this is temporary and will go away in a "future" release httpbugs.sun.com/bugdatabase/view_bug.do?bug_id=4714232
DESIGN	handle firing a notation event. <p> todo this needs to be managed on a per-diagram or per-project basis. @param event the event to be fired. @param listener the listener.
DESIGN	handle firing a diagram appearance event. <p> todo this needs to be managed on a per-diagram or per-project basis. @param event the event to be fired. @param listener the listener.
DESIGN	find the icon for a given model element. @return the icon or <code>null</code> if there is no icon. @param value the model element. todo this should not use string matching on classnames to do this since this means that we have knowledge about how the model elements are implemented outside of the model component.
DESIGN	todo offenders need to be more strongly typed. - tfm 20070630
DESIGN	todoitems that the designer has explicitly indicated that (s)he considers resolved. <p> todo generalize into a design rationale logging facility.
DESIGN	create a new panel for the given step. for example when the given step is 1 create the first step of the wizard. <p> todo it might be convient to make a reusable subclass of wizard that shows all textual steps to guide the user without any automation. such a wizard could be easily authored stored in an xml file and efficiently presented by reusing a single panel with a single jtextarea. @param newstep the number of the step to make a panel for. @return a new panel for the given step
DESIGN	return the default type for an attribute. @return a classifier to use as the default type todo this belongs in projectsettings. - tfm
DESIGN	return the default type for a parameter. @return a classifier to use as the default type todo this belongs in projectsettings. - tfm
DESIGN	return the default type for the return parameter of a method. @return a classifier to use as the default type todo this belongs in projectsettings. - tfm
DESIGN	searches for a type/classifier with name s. if the type is not found a new type is created and added to the current namespace. <p> todo move to model subsystem - tfm 20070307 @param s the name of the type/classifier to be found @return classifier
DESIGN	searches for a type/classifier with name s. if definenew is true a new type is defined if the type/classifier is not found. the newly created type is added to the currentnamespace and given the name s. <p> todo move to model subsystem - tfm 20070307 @param s the name of the type/classifier to be found @param definenew if true define a new one @return classifier the found classifier
DESIGN	finds a classifier with a certain name.<p> will only return first classifier with the matching name. todo move to model subsystem - tfm 20070307 @param s is short name. @param ns namespace where we do the search. @return the found classifier (or <code>null</code> if not found).
DESIGN	a datastructure for settings for a project. <p> most getters return a string since they are used by "argo.tee". this is also the reason all these attributes are not part of a map or something. <p> todo the header comment is currently not used - this function is not completely implemented yet. how do we store this in the project? where should the user enter his header comment? see issue 4813. @author michiel
DESIGN	todo why was this next line in the code so long?
DESIGN	in contrast to {@link #getzipname()} returns the member's name without the prepended name of the project (but with the extension). <p> todo this is not used anywhere - shall we remove it? @author steffen zschaler @return the member's name without any prefix or suffix
DESIGN	todo change this to use an undomanager instance per project when gef has been enhanced.
DESIGN	this should be moved to a ui action.
DESIGN	todo maybe separate name
DESIGN	check for duplicate name and rename if necessary
DESIGN	todo end up with multiple models here
DESIGN	create a notation settings value object with all default values. <p> todo this class only has partial undo support (basically just those members that had it as part of a previous implementation).
DESIGN	todo here we should e.g. show the user a message that the loaded project was using a notation that is not currently available and a fall back on the default notation was done. maybe this can be implemented in the persistencemanager?
DESIGN	this should probably be inside xmireader.parse but there is another place in this source where xmireader is used but it appears to be the nsuml xmireader. when argo xmireader is used consistently it can be responsible for loading the listener. until then do it here.
DESIGN	set the fig style attributes. <p> todo this should move into the render factories as described in issue 859. @param fig the fig to style. @param attributemap a map of name value pairs
DESIGN	todo we really want to be able replace the initial content handler which is passed to sax but we can't do this without cloning a whole bunch of code because it's private in the super class.
DESIGN	once all edges are connected do a compute route on each to make sure that annotations and the edge port is positioned correctly only do this after all edges are connected as compute route requires all edges to be connected to nodes. todo it would be nice not to have to do this and restore annotation positions instead.
DESIGN	todo move to gef
DESIGN	todo move to gef
DESIGN	todo move to gef
DESIGN	a fignodemodelelement with no owner should match here todo this is a temporary solution due to figpool extending fignodemodelelement when in fact it should not do so.
DESIGN	if no fig was created by the code above then we must go look for the old style constructor that should have fallen into disuse by now. fig(object rectangle diagramsettings) all of these constructors should have been deprecated at least and replaced with the new signature. this is here for paranoia only until all figs have been reviewed.
DESIGN	todo remove this old implementation after 0.22 if it's demonstrated that it's not needed. - tfm
DESIGN	todo cyclic dependency between persistancemanager and here
DESIGN	save the .argo entry todo cyclic dependency with persistencemanager move persistencemanager..getprojectbasename() someplace else
DESIGN	translate the visibility flag of a fig to the pgml "visibility" attribute value. the pgml values are 0=hidden and 1=shown. if not specified then 1 is the default so we return null for this to prevent redundent data being written to pgml. todo remove on gef release after 0.11.9 as it will be provided there. @param f the fig @return "0"=hidden null=shown
DESIGN	this can be made public to allow others to extend their own persisters
DESIGN	todo this doesn't need a full profilereference since it uses the reader handed in the constructor. it doesn't make much sense to make its callers init the path to some name which it doesn't need @author luis sergio oliveira (euluis)
DESIGN	open a zipinputstream to the first file found with a given extension. todo remove since this is a duplicate of zipfilepersister method when we have refactored the persister subsystem. @param url the url of the zip file. @param ext the required extension. @return the zip stream positioned at the required location. @throws ioexception if there is a problem opening the file.
DESIGN	sets the directory name where the profiles can be found. initially 'uml14' is used. todo intermediate solution for uml 2.x support please implement a better solution. @param dir name of the directory for the profiles
DESIGN	todo this profile isn't used anymore see getmodel()
DESIGN	the constructor.<p> todo is this constructor used? what is the purpose with it? @param n the name to be localized @param subs the go rules
DESIGN	todo the following handling of multiselection is just a local solution for the line color better find a more general solution (i don't know if it's undoable this way - thn)
DESIGN	todo this needs work so that users can set the font size through a gui preference window.
DESIGN	todo this causes a cyclic depencency with actionsaveproject
DESIGN	todo bob says - we're looking at focus change to flag the start of an interaction. this is to detect when focus is gained in a prop panel field on the assumption editing of that field is about to start. not a good assumption. we need to see if we can get rid of this.
DESIGN	save the project. @param file the file to save to @param pmw the progressmonitor to be updated @return true if successful todo separate this into a swing specific class - tfm
DESIGN	loads the project file and opens all kinds of error message windows if it doesn't work for some reason. in those cases it preserves the old project. @param file the file to open. @param showui true if an error message may be shown to the user false if run in commandline mode @param pmw the progressmonitor to be updated if not needed use null @return project the project that was created based on the file that was successfully opened todo separate this into a swing specific class - tfm
DESIGN	todo bob says - this is a really nasty horrible hack. shadowfig should not extend fignodemodelelement. instead we require a base class fignode with common behaviour of all nodes in argouml. shadowfig should extend that and fignodemodelelement should extend that same base class adding common functionality for fignode that represent model element. @see org.argouml.uml.diagram.ui.fignodemodelelement#setshadowsize(int)
DESIGN	class to manage project related actions which need to be (or historically have been) managed as singletons. todo it's unclear to me whether all of these actually have to be managed as singletons but for now i've just moved them from projectbrowser as is. - tfm @author tom morris
DESIGN	genericargomenubar defines the menu bar for all operating systems which do not explicitly ask for a different kind of menu bar such as mac os x. <p> menu's and the mnemonics of menu's and the menuitems are separated in the propertyresourcebundle <em>menu.properties</em>. <p> menu items are separated in the propertyresourcebundle <em>action.properties</em>. <p> the key's in menu.properties have the following structure <pre> menu [file].[name of menu] e.g menu.file mnemonics of menu's [file].[name of menu].mnemonic e.g menu.file.mnemonic mnemonics of menuitems [file].[flag for item].[name of menuitem].mnemonic e.g menu.item.new.mnemonic </pre> todo add registration for new menu items. @deprecated in 0.29.2 by bob tarling. this class will be moved and made private in future. use menubarfactory.createapplicationmenubar
DESIGN	todo this class is part of a dependency cycle with projectbrowser and
DESIGN	todo shouldn't be creating a new instance here. we should hold the delete action in some central place.
DESIGN	todo make sure this shouldn't go into a previous condition -tml
DESIGN	todo this should not need to know about projectsettings - tfm
DESIGN	the tree structure has changed significantly. inform the associated tree model. todo this shouldn't be public. components desiring to inform the explorer of changes should send events. @deprecated by mvw in v0.25.4. use events instead.
DESIGN	forwards this event to the tree model. @param element the modelelement to be changed todo this shouldn't be public. components desiring to inform the explorer of changes should send events.
DESIGN	todo the reference to the method org.argouml.uml.ui.vetoablepropertychange#getvetomessage(string) was here but the class does exist anymore. where is it? this method is never used! @param propertyname is the name of the property @return a message or null if not applicable.
DESIGN	we hang our heads in shame. there are still bugs in argouml and/or gef that cause corruptions in the model. before a save takes place we repair the model in order to be as certain as possible that the saved file will reload. todo split into small inner classes for each fix. @return a text that explains what is repaired.
DESIGN	find all the figs that visualise the given model element in this layer or null if there is none. todo once gef includes this same method in diagram then this can go @see org.tigris.gef.base.diagram#presentationsfor(java.lang.object)
DESIGN	todo mvw i am not completely sure of the following<p> the "namespace" of the diagram is e.g. used when creating new elements that are shown on the diagram they will have their namespace set according this. it is not necessarily equal to the "owner". @return the namespace for the diagram
DESIGN	/ gef methods todo these should really be picked up automatically from some gef interface that we extend but there is no such thing. note we've only added methods used by argouml so it's possible that external consumers need other methods.
DESIGN	the connect method specifying a connection type by class is unavailable in the argouml implementation. todo this should be unsupported. use the 3 object version {@inheritdoc}
DESIGN	todo this shouldn't be referencing the current project. instead the appropriate undomanager should have already been retrieved from the correct project.
DESIGN	todo do we really need to do this? carried over from old behavior
DESIGN	todo we should be given an undo manager to use rather than looking for a global one
DESIGN	reroutes the connection to the old node to be connected to the new node. delegates to reroutexxx() for each of the 4 possible edges in a class diagram association dependency generalization link. todo this should probably be in superclass. many figs can be on several diagram types. @param newnode this is the new node that one of the ends is dragged to. @param oldnode this is the existing node that is already connected. @param edge this is the edge that is being dragged/rerouted @param issource tells us which end is being rerouted.
DESIGN	helper method for changeconnectednode. todo this should probably be in superclass. associations can be on several diagram types.
DESIGN	todo make the "magic numbers" configurable
DESIGN	todo check for duplicates (is this possible???)
DESIGN	todo we shouldn't actually have to do all this work
DESIGN	we are getting events we don't want. filter them out. todo can we instruct the model event pump not to send these in the first place? see defect 5095. @param event the event
DESIGN	todo bob says - we should not be listening here for addition and removal of attributes. this should be done in figattributescompartment.
DESIGN	updates a compartment box. called from updatelayout if there is a model event effecting the attributes/operations and from renderingchanged in all cases. todo the above statement means that the entire contents of the compartments are being rebuilt whenever an add/remove of an attribute operation or a reception is detected. it would be better to have compartments listen for add and remove events and make minimum change rather than entirely rebuild. remark mvw this is a bit exaggerated since the populate() method is already heavily optimized.
DESIGN	utility function to localize the given string with help text and show it in the status bar of the argouml window. this function is used in favour of the inline call to enable later improvements e.g. it would be possible to show a help-balloon. <p> todo this code is also present in other root figs @param s the given string to be localized and shown
DESIGN	remove all items in the group otherwise the model event listeners remain todo why does a figgroup not do this?
DESIGN	todo find a way to replace this dependency on project
DESIGN	todo is this needed/correct? for when all compartments are hidden?
DESIGN	todo this functionality is in the worn place. we should be able to call setvisible on the compartment itself and then this class should react to that event. improvements will follow in later releases. hence this method should not be considered stable for module developers. @param compartment the compartment to be changed @param isvisible true if the attribute compartment is visible
DESIGN	setfontfamily("dialog") todo is this needed?
DESIGN	action to add a stereotype to a model element. todo appears to be unused? @author bob tarling @deprecated for 0.27.2 by tfmorris. use {@link org.argouml.uml.actionaddstereotype}.
DESIGN	todo comment by a. rueckert <a_rueckert@gmx.net> i think the handle holding the collaboration implementation should rather be a collaborationuse in uml2. but as a workaround for now i'll try to get a collaboration representation (collaborationuse) and then try to get the owning classifier from there
DESIGN	called by the constructor to create the figs at each end of the association. todo this is temporary during refactoring process. we should override setdestfignode and setsourcefignode and create the ends there. that will allow the same pattern to work for uml2 where we cannot assume the connection order. @param sourceassociationend @param destassociationend @param settings
DESIGN	create the main draggable label for the association. this can be overridden in subclasses to change behaviour. todo consider introducing this to figedgemodelelement and using throughout all edges. @param owner owning uml element @param settings rendering settings
DESIGN	choose the arrowhead style for each end. <p> todo this is called from paint(). would it not better be called from renderingchanged()?
DESIGN	todo there are lots and lots of magic numbers used in calculating positions and sizes. any time you see figs being placed at 1010 use these constants instead. if you can reliably interpret calculations you can factor them out of there as well. add additional constants as needed to express other common factors - tfm 20081201
DESIGN	todo there are cyclic dependencies between actionstereotypeview and fignodemodelelement. register these actions opaquely since we don't what they are. - tfm
DESIGN	todo generalize extension and remove critic specific stuff
DESIGN	todo generalize extension and remove critic specific code
DESIGN	this is a template method called by the argouml framework as the result of a change to a model element. do not call this method directly yourself. <p>override this in any subclasses in order to change what model elements the fignode is listening to as a result of change to the model. </p> <p>this method is guaranteed by the framework to be running on the same thread as the model subsystem.</p> todo lets refactor this at some time to take umlchangeevent argument @param event the umlchangeevent that caused the change
DESIGN	todo this is a redundant invocation
DESIGN	todo fonts shouldn't be handled any differently than other rendering attributes
DESIGN	the constructor. todo the "name" parameter is used for the icon and for the tooltip. this makes i18n of the tooltip impossible. @param modeclass the next global editor mode @param modeargs arguments for the new mode @param name the name of the command that is the tooltip text.
DESIGN	the constructor. todo the "name" parameter is used for the icon and for the tooltip. this makes i18n of the tooltip impossible. @param modeclass the next global editor mode @param arg the name of a new argument for the new mode @param value the value of a new argument for the new mode @param name the name of the command that is the tooltip text.
DESIGN	todo without this we fail to draw e.g. a class. but is this a good solution? why is the layer not set in the constructor?
DESIGN	fix up bad figs. <p> due to errors in earlier releases of argouml it can happen that there is a generalization without a child or parent. <p> todo move into xsl. we should not remove from the graph model while we're writing to it or we have a possible cause of concurrent modification exception. @param owner
DESIGN	todo it doesn't matter what these get set to because gef can't draw anything except 1 pixel wide lines
DESIGN	compute the border point of the ellipse that is on the edge between the stored upper left corner and the given parameter.<p> todo once we are at gef version 0.13.1m4 this method and in fact the whole class can be removed since it was taken over by gef in revision 1279. @param anotherpt the remote point to which an edge is drawn. @return the connection point on the boundary of the ellipse.
DESIGN	todo this should be managed by the detailspane targetlistener - tfm remove the following line
DESIGN	todo improve extensibility of this!
DESIGN	returns the current target. @deprecated as of argouml version 0.13.5 the visibility of this method will change in the future replaced by {@link org.argouml.ui.targetmanager.targetmanager#gettarget() targetmanager.getinstance().gettarget()}. todo mvw i think this should not be deprecated. @return the target @see org.argouml.ui.tabtarget#gettarget()
DESIGN	todo this is a temporary method of making sure the model is updated on loss of focus of a combo box. in the long term we should attempt to update the model on each keypress. @see java.awt.event.focuslistener#focuslost(java.awt.event.focusevent)
DESIGN	todo this shouldn't know about the specific type of fig that is being displayed. that couples it too strongly to things it shouldn't need to know about - tfm - 20070924
DESIGN	todo we should really be passing the default settings to the diagram factory so they get set at creation time
DESIGN	todo make the explorer listen to project member property changes to eliminate coupling on gui.
DESIGN	todo we shouldn't need this reflection any more once we have convinced ourselves that everything with a setitemuid method is implementing iitemuid
DESIGN	todo the following is mdr specific. we need something generic to all model subsystems - tfm 20070716
DESIGN	todo use the following function to have a dropdown set of tools toolbarfactory.additemstotoolbar(buttonpanel actions true) instead this temporary solution @param buttonpanel the toolbar @param actions an array of actions representing the tool layout
DESIGN	todo this whole class needs to be updated to remove use of deprecated methods and (hopefully) test multi-root and multi-project methods. @since nov 17 2002 @author jaap.branderhorst@xs4all.nl
DESIGN	get an {@link abstractfilepersister} for file. @param file the {@link file} in which an argouml {@link project} will be persisted. @return the appropriate persister for file or null if the file's extension doesn't match a supported persister. todo move this to an helper class.
DESIGN	initialize the argouml application version so that {@link applicationversion#getversion()} doesn't return null. @throws exception if something goes wrong todo move this to an helper class.
DESIGN	todo this is currently just a mechanical merge of the tests in from the generic model test and the nsuml tests. they need to be reviewed & merged. @author euluis @since 0.19.2 @version 0.00
DESIGN	prefix identified as an implementation specific class. todo this should be generalized so it doesn't have to be changed each time a new implementation is created - tfm 20051109
DESIGN	@throws saxexception when things go wrong with sax @throws ioexception when there's an io error @throws parserconfigurationexception when the parser finds wrong syntax todo unused?
DESIGN	the uml 2.x package structure is entirely different so we have to remap a bunch of stuff. names without embedded colons () indicate that the entire package is remapped. e.g. kernel->core as a matter of fact the only package which did not get renamed or moved is usecases. todo this section is very incomplete. - tfm
DESIGN	todo we'd like to test this in its new guise as packageimport but we don't have a good way to do it currently
DESIGN	we're deleting the last diagram so lets create a new one todo once we go mdi we won't need this.
DESIGN	todo this should happen in gef
DESIGN	todo settext in gef should call setbounds instead of directly changing x y w h - then we will have an event generated correctly in gef
DESIGN	prevent underline events if underline does not change. todo gef should manage this after gef 0.13.4 is included.
DESIGN	prevent bold events if bold does not change. todo gef should manage this after gef 0.13.4 is included.
DESIGN	prevent italic events if italic does not change. todo gef should manage this after gef 0.13.4 is included.
DESIGN	todo move an empty implementation to figgroup in gef
DESIGN	todo remove listeners for add/remove events
DESIGN	if c2 is empty then we're done (or there is a cycle in the message graph which would be bad) if c2 has more than one element then the model is crappy but we'll just use one of them anyway
DESIGN	these may not actually make any difference at present (the code behind addtrigger needs more work).
DESIGN	hack don't show first column where the model element object is placed.
DESIGN	todo should fire its own event and projectbrowser should register a listener
DESIGN	todo this shouldn't know the internal form of type names but i'm not sure what gef's predicatetype does so i'm fixing it here - tfm
DESIGN	todo this shouldn't be hardcoded 20 is the height of the spline 50 is the default activation height
DESIGN	mark the contain figpoly as complete. todo i think more work is needed in gef to either do this automatically when both ends are set or at the very least give a setcomplete method on figpolyedge that calls its contained poly
DESIGN	todo bob says - if the model element is not named we could generate a name. e.g. a generalization becomes "class a -> class b"
DESIGN	todo we should really set up our own profile instead of depending on the default. this depends on the default profile configuration containing the type integer to test properly. otherwise it will get created in the main project defeating the purpose
DESIGN	todo this is currently duplicated from metadatacache - must find a common place in model facade
DESIGN	todo this shouldn't depend on the current project but for now just make sure it's defined and that we have an undo manager
DESIGN	todo lets move this behind the model interface
DESIGN	todo we really want this class to have package scope however the reflection
DESIGN	todo move the magic number 4 to a descriptive constant
DESIGN	todo calcbounds is called by selectionmanager when the fig is dragged. this code is needed to reposition any self message as they are become detached from their classifier role (see issue 5562). the cause of the detachment is not yet understood. unfortunately calcbounds is called from several other places so the code here is not optimal but is the best workaround until argouml can provide its own replacement selectionmanager for sequence diagram requirements see - httpgef.tigris.org/issues/show_bug.cgi?id=344
DESIGN	the default behaviour from figedgemodelelement is not correct here. see issue 5005. todo we must determine what to do here but for now doing nothing is better. i'm not sure why the super method would not work as i would expect that to do nothing if the ends are already correct. @return true at all times for now
DESIGN	todo remove the casting to diagramfactoryinterface2 as soon as diagramfactoryinterface is removed.
DESIGN	returns names of all metamodel value elements including datatypes enumerations and primitive types. todo this method rightly belongs in a separate interface dealing with instances of mof types as opposed to uml types like all the rest of the methods here do. @return collection containing strings with names of all metatypes
DESIGN	return the source of a relation or link. the source of a relation is defined as the modelelement that propagates this relation. if there are more then 1 sources only the first is returned. if there is no source null is returned. examples of sources include classifiers that are types to associationends usecases that are bases to extend and include relations and so on. a source is always the start from the arrow in the fig the destination the end.<p> todo move this method to a generic modelhelper @param relationship is the relation @return object
DESIGN	returns the destination of a relation or link. the destination of a relation is defined as the modelelement that receives this relation. if there are more then 1 destinations only the first is returned. if there is no destination null is returned. examples of sources include classifiers that are types to associationends usecases that are bases to extend and include relations and so on. in the case of an association the destination is defined as the type of the second element in the connections list.<p> todo move this method to a generic modelhelper @param relationship is the relation @return object
DESIGN	returns names of all metatypes in metamodel. todo this method rightly belongs in a separate interface dealing with instances of mof types as opposed to uml types like all the rest of the methods here do. @return collection containing strings with names of all metatypes
DESIGN	todo note copy/paste code in figexitpoint - where is this code better placed in gef?
DESIGN	todo note copy/paste code in figentrypoint - where is this code better placed in gef?
DESIGN	create an empty but initialized instance of an artifact @since uml 1.4 @return an initialized artifact instance. todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	create an empty but initialized instance of a uml associationclass. @return an initialized uml associationclass instance. todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	create an empty but initialized instance of a uml associationend. @return an initialized uml associationend instance. todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	create an empty but initialized instance of a uml attribute. @return an initialized uml attribute instance. todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	create an empty but initialized instance of a uml binding. @return an initialized uml binding instance. todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	create an empty but initialized instance of a uml class. @return an initialized uml class instance. todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	create an empty but initialized instance of a uml comment. @return an initialized uml comment instance. todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	create an empty but initialized instance of a uml component. @return an initialized uml component instance. todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	create an empty but initialized instance of a uml constraint. @return an initialized uml constraint instance. todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	create an empty but initialized instance of a uml datatype. @return an initialized uml datatype instance. todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	create an empty but initialized instance of a uml dependency. @return an initialized uml dependency instance. todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	create an empty but initialized instance of a uml elementresidence. @return an initialized uml elementresidence instance. todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	create an enumeration. @return object new enumeration @since uml 1.4 todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	create an enumerationliteral. @return object new enumeration @since uml 1.4 todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	create an empty but initialized instance of a uml flow. @return an initialized uml flow instance. todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	create an empty but initialized instance of a uml interface. @return an initialized uml interface instance. todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	create an empty but initialized instance of a uml node. @return an initialized uml node instance. todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	create an empty but initialized instance of a uml operation. @return an initialized uml operation instance. todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	create a uml templateargument. @since uml 1.4 @return an initialized templateargument instance. todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	builds a class with a given name. @param name the given name @return class @see #buildclass() todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	builds a default implementation for an interface. the interface is not owned by any model element by default. users should not forget to add ownership. @return interface todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	builds an interface with a given name. @param name is the given name. @return interface todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	builds a method with a given name. @param name is the given name @return method todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	create an empty but initialized instance of a uml usage. @return an initialized uml usage instance. todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	recognizer for modelelements with package visibility. todo this method name was chosen for compatibility with the existing naming scheme but has the potential of clashing with some future use. @param handle candidate @return true if handle has package visibility
DESIGN	recognizer for parameter's with a directionkind of return. todo this is a duplicate of {@link #hasreturnparameterdirectionkind(object)} @param handle candidate parameter @return true if handle is a return parameter.
DESIGN	recognizer for modelelements which have the <<singleton>> stereotype applied. <p> todo moved this out of the facade to someplace elese since it's not model subsystem specific - tfm 20070607 @param handle candidate @return true if handle is a singleton.
DESIGN	get the classifier (participant) of an associationend. todo rename this getparticipant to align with uml spec - tfm - 20070331 @param handle the associationend to get from. @return the classifier of the associationend.
DESIGN	return the tagged value with a specific tag. <p> warning this method returns only the first taggedvalue found with the given name. hence this method is a simplification of the real problem and should be avoided. todo what should be done about the above problem? options are to deprecate the method throw an exception if the name is ambiguous or leave the caller to figure it out themselves. @param handle the model element the tagged value belongs to. @param name the tag name. @return the found tag null if not found
DESIGN	determine if the passed parameter has a return direction kind. todo this is a duplicate of {@link #isreturn(object)} @return true if it is a return direction kind @param handle the parameter
DESIGN	return the key (tag) of some tagged value. todo this does exactly the same as gettag(object). remove one of them. @param handle the tagged value. @return the found value as string.
DESIGN	builds a compositestate as top for some statemachine.<p> todo confusing name this method should better be named buildtopstateonstatemachine. @param statemachine the given statemachine @return mcompositestate the newly build top state @see #buildcompositestate(object)
DESIGN	todo lots more types - duration instance interval
DESIGN	todo is this returning extended elements or base classes?
DESIGN	todo what is the behavior of this in the case of nested models?
DESIGN	todo not navigable this direction? - tfm
DESIGN	todo in uml 2.0 classifierrole associationrole and associationendrole have been replaced by the internal structure of the collaboration
DESIGN	todo in uml 2.0 classifierrole associationrole and associationendrole have been replaced by the internal structure of the collaboration
DESIGN	todo this probably needs more qualification - tfm
DESIGN	todo actionstate callstate and subactivitystate have been replaced in uml 2.0 by explicitly modeled actions
DESIGN	todo this isn't right
DESIGN	todo what do we want to use as an equivalent here?
DESIGN	todo changed in uml 2.x to special type of property?
DESIGN	todo this doesn't belong in the implementation specific piece - tfm
DESIGN	todo complete this implementation - tfm
DESIGN	todo actionstate callstate and subactivitystate have been replaced in uml 2.0 by explicitly modeled actions
DESIGN	todo this should be built by reflection from the metamodel - tfm update for uml 2.x metamodel if not replaced by reflection
DESIGN	todo can we get this info from uml2 plugin? perhaps collect all references in the metamodel filter for those which represent containments and find the types on either end - tfm
DESIGN	todo get/setrootmodel aren't specific to the model implementation they could probably be moved elsewhere - tfm - 20070530
DESIGN	todo we can choose between something which matches uml 1.4 in name or something that matches in functionality. we've chosen functionality for now but this will create a name conflict during the migration process. - tfm
DESIGN	todo callers will need to be refactored to work around the change in the way multiplicities work - tfm
DESIGN	todo check for resource to hold this and create if necessary? this is a discrepancy between mdr which does it here and euml which does it as part of setrootmodel
DESIGN	todo make this work when the given stereotype has more than one baseclass. todo currently only works for stereotypes where the baseclass is equal to the given one - inheritance does not work.
DESIGN	todo this could be a huge collection - find a more efficient way
DESIGN	todo still not used because in argouml string is "hardwired"
DESIGN	todo mvw do we really look into super-types of the stereotype or should we be looking into super-types of the baseclass?
DESIGN	todo what type of validation can we do here on tagtype?
DESIGN	todo not sure whether the above is better in some cases but the code below is better for both java web start and eclipse.
DESIGN	todo this does not belong here - use getimportedelement.
DESIGN	todo replace this recursive function by a loop like in getroot
DESIGN	todo rationalize this with getmodelelementcontainer
DESIGN	todo use getmodelelementcontainer for transition
DESIGN	todo return empty collection on null input or throw illegalargument?
DESIGN	todo an iterator filter would be nice here instead of the mucking around with the collection.
DESIGN	todo an iterator filter would be nice here instead of the mucking around with the collection.
DESIGN	todo this has different semantics than everything else
DESIGN	todo this assumes ranges are sorted. is this true? - tfm
DESIGN	todo this assumes ranges are sorted. is this true? - tfm
DESIGN	todo do we want to construct an artificial name here?
DESIGN	todo what other non-modelelement types do we need to handle here?
DESIGN	todo temporary stopgap for enumerationliteral
DESIGN	todo more is required here to support referencevalues
DESIGN	todo implement support for types other than string
DESIGN	todo generalize - assumes uml type names are unique without the qualifying package names - true for uml 1.4
DESIGN	a classifier can only have a single unnamed classifierrole so todo this probably belongs in a critic instead of here
DESIGN	now get all classifiers imported from other packages todo this should probably happen automatically in getallmodelelementsofkind() - tfm
DESIGN	don't wait on ourselves we'll deadlock! todo we might want to throw an exception here
DESIGN	todo we don't want to do this once we have dropped uml1.3 map uml 1.4 names to uml 1.3 equivalents
DESIGN	recursive method to get all subtypes. todo does this have a scalability problem?
DESIGN	only do verification if debug level logging is on todo should we leave this on always? - tfm
DESIGN	todo we also have code registering for the names of a tagged value like "derived"
DESIGN	todo the type of the model element used in a type parameter (ie the formal) needs to match the actual parameter that it gets replaced with later. this code is going to restrict that to always being a parameter which doesn't seem right but i don't have time to debug it right now. - tfm - 20090608
DESIGN	todo add enumerationliteral someplace
DESIGN	todo a minimal update strategy would be better here to minimize work and events firing but it may be better to deprecate the method and force calls to manage updates themselves (since they probably usually want to just add or remove a single element) - tfm 20061108
DESIGN	todo this should use a minimal update strategy instead of removing everything and adding it again. - tfm
DESIGN	todo do we want to <<friend>> stereotypes too? || model.getextensionmechanismshelper().hasstereotype( permission modelmanagementhelper.friend_stereotype)
DESIGN	todo this actually returns permissions with stereotypes of both <<access>> and <<import>> when the spec calls for only the former but that seems to give different semantics to the way package imports work. review to see which is wrong.
DESIGN	todo performance. consider instantiating this just once outside the for loops and clear at this point instead.
DESIGN	todo this is ambiguous as to whether it should be adding a container or resident.
DESIGN	get elementresidences. todo unused. should be added to facade? - tfm @param handle a modelelement @return collection the elementresidence for this model element
DESIGN	modelimpl.getfacade().getrootelements() gets all root elements in the uml repository including available profiles that are not part of the current project (degrades performance). projectmanager.getmanager().getcurrentproject().getroots() only returns user model roots and no profiles. projectmanager.getmanager().getcurrentproject().getmodels() gets all root models but no root namespaces. todo which is best? is there any other way?
DESIGN	todo should we handle <<access>> and <<import>> here?
DESIGN	todo should we handle <<access>> and <<import>>?
DESIGN	todo this is not according the contract for this function but it is used in several places and i (mvw) presume that we need this generally. this part (1) is about drawing an <<import>> permission between packages. the part (2) below is about modelmanagement.elementimport.
DESIGN	todo this should fetch the stereotype from our profile
DESIGN	todo this should fetch the stereotype from our profile
DESIGN	todo this is well-formedness rule from uml1.4.2 4.5.3.20 [2] no generalizableelement can have a parent generalization to an element that is a leaf. self.parent->forall(s | not s.isleaf)
DESIGN	todo this is well-formedness rule from uml1.4.2 4.5.3.20 [1] a root cannot have any generalizations. self.isroot implies self.generalization->isempty
DESIGN	todo add standard stereotype? set is open ended but predefined names include call create instantiate send
DESIGN	check arguments against parameters for type and number todo perhaps move this to a critic instead? - tfm - 20070326
DESIGN	todo this is a composite association so these will get deleted automatically. the only thing we need to do is check for any additional elements that need to be deleted as a result.
DESIGN	todo build a return parameter
DESIGN	todo delete old multiplicity? why is "copy" using hard coded value? - tfm
DESIGN	todo this can be simplified to just ((include) extend).setbase((usecase) base)
DESIGN	todo this should be done after all events are delivered but leave it here for now to avoid last minute synchronization problems
DESIGN	todo how to merge multiple inheritance? necessary? this currently copies the common ancestors multiple times
DESIGN	todo as currently implemented this expects a list of multiplicityranges. is this an interface change from the nsuml implementation? i suspect it used to accept a list of integers. - tfm @see org.argouml.model.datatypesfactory#createmultiplicity(java.util.list)
DESIGN	todo getallpossiblesubvertices and getallsubstates are duplicates - tfm
DESIGN	todo getallpossiblesubvertices and getallsubstates are duplicates - tfm
DESIGN	todo this should probably throw an exception if it gets invalid arguments rather than just returning null
DESIGN	todo this is a part implementation of well-formedness rule uml1.4.2 - 4.5.3.20 [3] circular inheritance is not allowed. not self.allparents->includes(self)
DESIGN	todo we need to rethrow this as some other exception type but that is too much change for the moment.
DESIGN	todo use it notify set to true to forward events to model. only one of language and body fields should have this set to true.
DESIGN	todo if this is an ordered list then you have to add in the right location!
DESIGN	field todo textarea or textfield
DESIGN	@see javax.swing.event.documentlistener#changedupdate(javax.swing.event. documentevent) todo are the 3 methods uses ?
DESIGN	todo is is really used ? @see javax.swing.jcomponent#removenotify()
DESIGN	todo is is really used ? @see javax.swing.jcomponent#removenotify()
DESIGN	mvw for this case i had to move the call to setselecteditem() outside the "buildingmodel" otherwise the combo does not update with the new selection. see issue 5418.
DESIGN	todo bob says the reflective code following should be replaced with something more specific like this commented out code. this would mean we need stype changed to a meta type object rather than a string.
DESIGN	an opaqueexpression can have n body n language when display to user we only show one body. a "" button is enabled for edit other. todo can we by import xmi have 0 language/body ? @author laurent braud
DESIGN	todo redo it (curbody should be as long as curlanguage+button)
DESIGN	todo are the 3 methods uses ?
DESIGN	todo we have some quirk that the a baseclass addition or removal from a steroetype comes back as an attributechangeevent rather than an associationchangeevent. this needs further investigation to see if this can be made consistent.
DESIGN	todo this needs work we also need to listen to addition/removal of states to/from a classifierinstate.
DESIGN	create an empty but initialized instance of a uml method. @return an initialized uml method instance. todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	builds a manifestation of an element for an artifact. @param utilizedelement is the packageable element @return manifestation todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	this tag is set on elements that are generated by reference when importing. if it is set then the critics could ignore those objects if they want. todo this is really belongs in a higher level utility class that uses the facade's tagged value methods. also it needs to be updated to use a uml 1.4 tagdefinition instead of a simple string.
DESIGN	todo we need to rethrow this as some other exception type but that is too much change for the moment.
DESIGN	todo getallmodelelementsofkind should probably do this processing of imported elements automatically
DESIGN	@see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent) todo from combobox javadoc - "this method is public as an implementation side effect. do not call or override." we should find some other way to implement this.
DESIGN	todo can we find a better way to do this than hard coding colour?
DESIGN	todo part of this is copied from actiondeletemodelelement. we maybe need some subclass for common code.
DESIGN	returns all states that can be recursively contained by the given state. <p> todo {@link #getallpossiblesubvertices(object)} and {@link #getallsubstates(object)} are duplicates as implemented for mdr. it isn't clear from the javadoc or usage whether they should do different things or this just happened because no one noticed we already had another method. @param ostate the composite state we are searching the states for @return collection the collection with found states
DESIGN	todo remove the casting to diagramfactoryinterface2 as soon as diagramfactoryinterface is removed.
DESIGN	todo remove the casting to diagramfactoryinterface2 as soon as diagramfactoryinterface is removed.
DESIGN	return true iff the given todoitem is still valid and should be kept in the given designers todolist. critics that are not enabled should always return false so that their todoitems will be removed. subclasses of critic that supply multiple offenders should always override this method. <p> by default this method basically asks the critic to again critique the offending object and then it checks if the resulting todoitem is the same as the one already posted. this is simple and it works fine for light-weight critics. critics that expend a lot of computational effort in making feedback that can be easily check to see if it still holds should override this method. <p> todo maybe todoitem should carry some data to make this method more efficient. {@inheritdoc}
DESIGN	create our bandbuffer which is just a small slice of the image todo we used a fixed height buffer now but we could be smarter and compute a height which would fit in some memory budget allowing us to use taller buffers with narrower images minimizing the overhead of multiple rendering passes
DESIGN	the project interface encapsulates all information about a designer's project. it contains the list of diagrams and uml models various project properties such as the author's name and defaults for various settings. <p> todo this interface was mechanically refactored from the implementation class {@link projectimpl}. it needs to be reviewed and cleaned up eliminating methods which should be part of the public api and splitting the interface into smaller function specific (e.g. trashcan) interfaces. @author tom morris <tfmorris@gmail.com> thomas neustupny @since 0.25.4 when it replaced the concrete class of the same name
DESIGN	returns the root package. @return the package which is the root @deprecated for 0.25.4 by tfmorris - use {@link #getroots()} to get packages/model elements which are at the top level. <p> todo we probably need a getdefaultnamespace() method or something similar to replace some uses of this.
DESIGN	utility method to encode a string in a way that allows it to be saved properly in an xml file and regained filtering out any noice that an xml framework might have seen fit to add. todo why are we doing this ourselves? surely encoding information for xml serialization is a well known task - tfm i have never understood why this is being done. i think we should remove any usage - bob @paramstrthe string to encode. @returnthe encoded string.
DESIGN	todo this is a temporary crutch to use until all figs are updated to use the constructor that accepts a diagramsettings object
DESIGN	todo at the moment setselectedcomponent doesn't take into account the rather complex tab selection mechanism of detailspane. the tab selection mechanism must be refactored.
DESIGN	todo move magic number 10 to descriptive constant
DESIGN	todo move magic number 10 to descriptive constant
DESIGN	@see java.beans.propertychangelistener#propertychange(java.beans.propertychangeevent) todo this should be reviewed to see if it can be improved with a view towards removing some of the overrriding methods used as workarounds for differences between nsuml and mdr - tfm - 20060302
DESIGN	when we change the type we need to create a new initial value. and to display the panel todo if we select the same type that the current do nothing.
DESIGN	to simplify implementation we list all associations found with any of the classifiers represented by the linked instances. <p> todo make a foolproof algorithm that only allows selecting associations that create a correct model. also take into account n-ary associations and associationclasses. this algo best goes in the model subsystem e.g. in a method getallpossibleassociationsforalink(). @see org.argouml.uml.ui.umlcomboboxmodel#buildmodellist()
DESIGN	todo we may want to restrict the list to parameters which conform to the following wfr parameter.type = ofstype or (parameter.kind = #in and ofstype.allsupertypes->includes(type)) or ((parameter.kind = #out or parameter.kind = #return) and type.allsupertypes->includes(ofstype)) or (parameter.kind = #inout and ( ofstype.allsupertypes->includes(type) or type.allsupertypes->includes(ofstype))))
DESIGN	todo we should really test the model instead for this but we have no api yet. can we just check if the collection to build the jlist control implements the list interface?
DESIGN	todo copied from umldiagramrenderer. find the figs in the given layer that should be the source and destination and attach these to either end of the figedge @param layer the layer to look for the fignodes @param newedge the edge to attach
DESIGN	todo copied from umldiagramrenderer. get the fignode from the given layer that represents the given model element. the fignode portion of an association class is returned in preference to the figedge portion. if no fignode is found then a figedge is searched for and the fignode that acts as its edge port is returned. @param lay the layer containing the fig @param modelelement the model element to find presentation for @return the fignode presentation of the model element
DESIGN	i think that the synchronized access to idtoobjectmaps is required in order to respect the thread safe nature of the object. fixme maybe this should be moved into xmireferenceresolverimpl because it depends on internal implementation details of it.
DESIGN	a near clone of this code works fine outside of argouml but throws a null pointer exception during the transform when run within argouml i think it's something to do with the class libraries being used but i can't figure out what so i've done a simpler less efficient stepwise translation below in serialtransform
DESIGN	todo bob says - coding by use of side effect here. maybe this should be done in a clearer way but it fixes httpargouml.tigris.org/issues/show_bug.cgi?id=4978 it seems that when loading an xmi that is not contained in a zip file then the inputstream given as the argument to this method can't be reused as it is at the end of the stream. in that case systemid appears to be none-null at this stage. so if systemid is not null we recreate the inputsource.
DESIGN	xmiwriter implementation for mdr. this implementation is clumsy because the specified writer interface wants characters while the xmiwriter wants an outputstream dealing in bytes. we could easily create a writer from an outputstream but the reverse is not true. todo the old writer based interface can be removed when the deprecated modelimplementation.getxmiwriter is removed. @author lmaitre
DESIGN	todo this should call the single namespace form getstereotype(it2.next() stereo)
DESIGN	anything not found is newly created so return a null systemid indicating that it is in the parent document. todo this assumption will be invalid if/when we allow editing of linked sub-models
DESIGN	todo distinguish between deferred resolution and things which are unresolved at end of load and should be reported to user.
DESIGN	todo check whether this is really needed. i think it's left over from an incomplete understanding of the magicdraw composition error problem - tfm
DESIGN	todo this returns a collection not a single object is this what the callers expect?
DESIGN	todo this code manually processes the elementimports of a package but we need to check whether mdr already does something similar automatically as part of its namespace processing. - tfm - 20060408
DESIGN	todo i18n this needs to be localized but we don't have any localization capabilities in the model subsystem object[] args = { typename elemname alias } misc.name.element-import.alias = imported {0} {1} alias {2} return translator.localize( "misc.name.element-import.alias" args)
DESIGN	todo do we need to worry about umlclass umlpackage etc?
DESIGN	this causes problems. it can make multiple return messages refer to the same activator even if not returning to the same classifier role as the activator emenates from. i'm not sure that changing the activator of one message should amend any other messages but this is certainly changing too many - bob.
DESIGN	an array of valid connections the combination of connecting class and node classes must exist as a row in this list to be considered valid. <ul> <li>the 1st column is the connecting element. <li>the 2nd column is the "from" element type. <li>the 3rd column is the "to" element type. the 3rd column is optional if not given then it is assumed to be the same as the "from" element. <li>the existence of a 4th column indicates that the connection is valid in one direction only. </ul> todo this encodes not only what is legal in uml but also what argouml knows how to create so not all legal connections are included. probably should be split into two pieces 1) legal uml (here) and 2) supported (in argouml application someplace) - tfm - 20060325<p> see also issue 3863.<p> most of these are subtypes of relationship which includes association dependency flow generalization extend and include. dependency includes binding abstraction usage and permission. associationrole and associationclass are associations. the remaining items (link transition associationend message) are non-relationship types which argouml treats as connections/edges.
DESIGN	don't allow connections to be created from a read only model element to any other todo this should be considered a workaround. it only works because by default we place newly created relationships in the namespace of the fromelement. the correct behavior in the presence of read-only elements really depends on the type of connection as well as the writeability of both ends.
DESIGN	delete a model element. implements 'cascading delete' to make sure model is still valid after element has been deleted.<p> the actual deletion is delegated to delete methods in the rest of the factories. for example a method deleteclass exists on corehelper. delete methods as deleteclass should only do those extra actions that are necessary for the deletion of the modelelement itself. i.e. deleteclass should only take care of things specific to umlclass.<p> the delete methods in the uml factories should not be called directly throughout the code! calls should always refer to this method and never call the deletexxx method on xxxfactory directly. the reason that it is possible to call the deletexxx methods directly is a pure implementation detail.<p> the implementation of this method uses a quite complicated if/then/else tree. this is done to provide optimal performance and full compliance to the uml 1.4 metamodel. the last remark refers to the fact that the uml 1.4 model uses multiple inheritance in several places. this has to be taken into account.<p> todo the requirements of the metamodel could probably be better determined by reflection on the metamodel. then each association that a deleted element participates in could be reviewed to make sure that it meets the requirements and if not be deleted. - tfm<p> extensions and its children are not taken into account here. they do not require extra cleanup actions. not in the form of a call to the remove method as is normal for all children of mbase and not in the form of other behaviour we want to implement via this operation. @param elem the element to be deleted @see org.argouml.model.umlfactory#delete(java.lang.object)
DESIGN	todo it doesn't really make sense that a namespace would be returned as part of its own contents but that's the historical behavior.
DESIGN	todo as currently coded this actually returns all behavioralfeatures which are owned by classifiers contained in the given namespace which is slightly different then what's documented. it will not include any behavioralfeatures which are part of the namespace but which don't have an owner.
DESIGN	todo ?delete instances which have this as their classifier? or should we leave them since they contain so much state that the user would have to recreate?? nsmodel.getumlhelper().deletecollection( nsmodel.getumlpackage().getcommonbehavior() .getainstanceclassifier().getinstance(cls)) todo ?delete objectflowstates which have this as their type? nsmodel.getumlhelper().deletecollection( nsmodel.getumlpackage().getactivitygraphs() .getatypeobjectflowstate().getobjectflowstate(cls)) todo ?delete classifierinstates which have this as their type?
DESIGN	load .xmi file before any pgml files fixme the following is loading the model before anything else. due to the zargo containing the profiles currently we have removed this hack in umlfilepersister and i think it should be removed from here also.
DESIGN	hack for to do items only should check isleaf(node) but that includes empty folders. really i need alwaysleaf(node).
DESIGN	this is the interface for registering interest in events sent from the model component.<p> neither the registration or unregistration nor the events themselves contain any reference to the model implementation. instead they use the {@link java.beans.propertychangelistener} {@link java.beans.propertychangeevent} to deliver events.<p> the reference to the listener is a weakreference so you don't need to call removewhateverlistener you can just forget about your listener and it is eventually finalized and removed. this also means that you will have to keep a reference to your listener while it is active. since the garbage collecting mechanism is not really deterministic a forgotten about listener might still receive events. unless it can handle them in a harmless way this approach should not be used. todo (is this still true or does it refer to the nsuml implementation? - tfm 20051109) (this is part of the contract that is established between the model subsystem and its users. if that is not fulfilled by the current implementation then the current implementation is incorrect. linus 20060411).<p> todo what event names? the event names generated are {@link string}s and their values and meanings are not really well documented. in general they are the name of an an association end or attribute in the uml metamodel.<p> here are some highlights<ul> <li>"remove" - event sent when the element is removed. </ul> @author linus tolke
DESIGN	todo this probably can't be implemented in a way that will make the uml 1.4 ui happy. needs to be generalized to uml 2 semantics.
DESIGN	todo check semantics here - tfm
DESIGN	todo support more than one body/language
DESIGN	todo hook this creating of a new resource in to someplace more more appropriate (perhaps createmodel() ?) better yet add a new method to model api to create a new top level project/model/xmi file so we don't depend on side effects
DESIGN	creates a uml model element of the given type. this only works for uml elements. if a diagram contains elements of another type then it is the responsibility of the diagram manage those items and not call this method. it also only works for uml model elements that are represented in diagrams by a node. @param elementtype the type of model element to build @return the model element todo this needs an extra parameter to specify the model/extent where the new element should be created.
DESIGN	finds a stereotype in a given namespace and all those in any sub-namespace of the given namespace. returns null if no such stereotype is found. <p> todo what if stereo.getname() or stereo.getbaseclass() is null? then you know immediately that none will be found but is that the correct answer? currently null is returned in these cases. <p> todo this function should not take a stereotype object as parameter but a name and a baseclass. <p> todo currently only works for stereotypes with only one baseclass. <p> todo currently only works for stereotypes where the baseclass is equal to the given one - inheritance does not work. @return the stereotype found or null. @param ns is the namespace. @param stereo is the stereotype.
DESIGN	todo note copy/paste code in figexitpoint - where is this code better placed in gef?
DESIGN	todo move an empty implementation to figgroup in gef
DESIGN	!! todo all code below here is duplicated in figbasenode. the reason is the gef defect - httpgef.tigris.org/issues/show_bug.cgi?id=358 once we have taken a release of gef with that fix we can remove this code.
DESIGN	the part of the design this issue affects. <p> each member is either a model element a {@link fig} or a {@link diagram}. <p> todo offenders need to be more strongly typed. because there is not a common supertype for these three types we can't type this list. we should introduce a common supertype/interface. - tfm 20070630 <p> the list of offenders is set once (e.g. by the constructor) and cannot change. <p>
DESIGN	this class models the designer who is building a complex design in some application domain and needs continuous feedback to aid in the making of good design decisions.<p> <strong>this area needs work especially as it is a central idea of argo.</strong><p> currently (almost) everything is hardcoded. what can be configurable??<p> the todolist is dependent on this class i.e. each designer has its todolist.<p> each designer has his own agency which is the only class that knows all the critics.<p> this class listens to property changes from ?<p> a designer can create todo items just like the critics. hence the designer implements the poster interface.<p> todo there is a strong dependency cycle between agency and designer. they either need to be merged into a single class or partitioned differently perhaps using an interface to break the cycle. the designer singleton gets passed to almost every single part of the critic subsystem creating strong coupling throughout. - tfm 20070620 @author jason robbins
DESIGN	agency manages critics. since classes are not really first class objects in java a singleton instance of agency is made and passed around as needed. the agency keeps a registry of all critics that should be applied to each type of design material. when a design material instance is critiqued it asks agency to apply all registered critic's. in the current scheme there is a thread that proactively continuously critiques the design at hand even if the user is idle! this is simple and it works. the disadvantage is that _all_ active critics related to a given design material are applied regardless of the reason for the critiquing and a lot of cpu time is basically wasted. <p> todo i am moving toward a more reactionary scheme in which specific design manipulations in the editor cause critics relevant to those manipulations to be applied. this transition is still half done. triggers are the critiquing requests. the code for triggers is currently dormant (latent?).<p> todo there is a strong dependency cycle between agency and designer. they either need to be merged into a single class or partitioned differently perhaps using an interface to break the cycle. the designer singleton gets passed to almost every single part of the critic subsystem creating strong coupling throughout. - tfm 20070620 @author jason robbins
DESIGN	moves some object to trash i.e. deletes it completely with all dependent structures. <p> deleting an object involves <pre> - removing target history - deleting all fig representations for the object - deleting the uml element - deleting all dependent uml modelelements - deleting commentedges (which are not uml elements) - move to trash for enclosed objects i.e. graphically drawn on top of - move to trash subdiagrams for the object - saveguard that there is always at least 1 diagram left - if the current diagram has been deleted select a new one to show - trigger the explorer when a diagram is deleted - set the needssave (dirty) flag of the projectmanager </pre> @param obj the object to be deleted @see org.argouml.kernel.projectimpl#trashinternal(object) <p> todo this should just be named delete() or something which better tells what it does (since there really isn't a trash can).
DESIGN	since this is (hopefully) a temporary solution and nobody ever looks at the type of notation event we can simplify from sending every existing event to one event only. but since there is no catch-all event defined we just make one up. rationale reduce the number of total refreshes of the drawing.
DESIGN	this class manages the projects loaded in argouml and what the current project is. <p> classes in argouml can ask this class for the current project and set the current project. since we only have one project in argouml at the moment this class does not manage a list of projects like one would expect. this could be a nice extension for the future of argouml. as soon as the current project is changed a property changed event is fired. <p> todo move everything related to the creation of a project into the projectfactory. @since nov 17 2002 @author jaap.branderhorst@xs4all.nl @stereotype singleton
DESIGN	finds a type in a model by name fixme duplicated from the method with the same name in org.argouml.profile.internal.modelutils. @param s the type name @param model the model @return the type or <code>null</code> if the type has not been found.
DESIGN	todo what if used elsewhere?
DESIGN	todo what if used elsewhere?
DESIGN	these may not actually make any difference at present (the code behind addtrigger needs more work).
DESIGN	these may not actually make any difference at present (the code behind addtrigger needs more work).
DESIGN	these may not actually make any difference at present (the code behind addtrigger needs more work).
DESIGN	create and register diagrams for activity and statemachines in the model(s) of the project. if no other diagrams are created a default class diagram will be created. argouml currently requires at least one diagram for proper operation. todo move to xmifilepersister (protected) @param project the project
DESIGN	a bufferinputstream that is aware of xml structure. it searches for the first occurrence of a named tag and reads only the data (inclusively) from that tag to the matching end tag or it can search for the first occurrence of a named tag and read on the child tags. the tag is not expected to be an empty tag. <p> todo this is hardwired to assume a fixed single byte character encoding. it needs to be updated to handle different encodings including multi-byte encodings. - tfm 20070607 @author bob tarling
DESIGN	method 2 (assign data immediately see end of file). todo if we ever want to extend pathitemplacement we should modify this so that we also recognise any subclass of pathitemplacement. is the class name a pathitemplacment? todo use class reference to make this dependency obvious
DESIGN	creates a new ocl critic @param oclconstraint ocl expression @param headline headline @param description description @param moreinfourl the info url @param knowledgetypes the knowledge types @param supporteddecisions the decisions @param priority the priority @throws invalidoclexception if the ocl is not valid todo do these need to be lists or can they be simple collections?
DESIGN	try to save the project. @param overwrite if true then we overwrite without asking @param file the file to save to @param pmw the progressmonitor to be updated @return true if successful todo separate this into a swing specific class - tfm @deprecated in 0.29.1 by bob tarling use trysavewithprogressmonitor
DESIGN	loads the project file and opens all kinds of error message windows if it doesn't work for some reason. in those cases it preserves the old project. @param file the file to open. @param showui true if an error message may be shown to the user false if run in commandline mode @param pmw the progressmonitor to be updated if not needed use null @return true if the file was successfully opened todo separate this into a swing specific class - tfm
DESIGN	todo delete should be available on any combination of model elements and diagrams. todo shouldn't be creating a new instance here. we should hold the delete action in some central place.
DESIGN	todo we need a factory pattern for goxxx classes that can determine if they are required
DESIGN	an object tagged as being the owner of a figedgenote. has knowledge about the source and destination of the figedgenote. <p> the source and destination are modelelements. at least one of them is a comment - but they may be both comments. todo there's tons of special case code scattered around argouml for this one class since it is the only "owner" of a figedgemodelelement which is not a uml element. we should find a way to generalize this.<p> todo issue 3031 requires this class to be replaced by a similar mechanism as the n-ary association class the node and the edges shall all have the same owner i.e. the uml comment object. @since jul 17 2004 @author jaap.branderhorst@xs4all.nl
DESIGN	set the fig style according to attributes. <p> todo this is never used! can we remove? @param fig the fig to style. @param attributemap a map of name value pairs
DESIGN	todo because we get called on each and every change event when the model is in a state of flux we'll often get an invalidelementexception before we finish this collection. the only saving grace is that we're called so many times that on the last time things should be stable again and we'll get a good set of elements for the final update. we need a better mechanism.
DESIGN	todo this code appears to be designed to jump to the diagram containing the contents of the package that was double clicked but it looks like it's always searching for the name "main" instead of the package name. todo but in any case it should be delegating this work to to something that knows about the diagrams and they contents -tfm
DESIGN	todo the above populate works but seems rather heavy here. i can see something like this is needed though as events won't manage this quick enough. could we make figeditablecompartment.createmodelelement() create the new child fig instance? it may also be useful for it to return the new model element rather than the current void return - bob.
DESIGN	changes the font for all figs contained in the given figgroup. <p> todo in fact there is a design error in this method e.g. for a class if the name is italic since the class is abstract then the classes features should be in plain font. this problem can be fixed by implementing the updatefont() method in all subclasses. @param fg the figgroup to change the font of.
DESIGN	changes the font for all figs contained in the given figgroup. <p> todo in fact there is a design error in this method e.g. for a class if the name is italic since the class is abstract then the classes features should be in plain font. this problem can be fixed by implementing the updatefont() method in all subclasses. @param fg the figgroup to change the font of.
DESIGN	todo 21/12/2008 dthompson mouseclicked(me) above consumes the mouse event internally so i suspect that this line might not be necessary.
DESIGN	<p>determines if the figedge is currently connected to the correct fignodes if not the edges is the correct fignodes set and the edge rerouted. <p>typically this is used when a user has amended from the property panel a relationship from one model element to another and the graph needs to react to that change. <p>e.g. if the participant of an association end is changed. <p>calls a helper method (layoutthistoself) to avoid this edge disappearing if the new source and dest are the same node. todo this method is called far too frequently. it should only be called when a specific event is received. it seems to be currently called whenever any event is received from the owner. @return boolean whether or not the update was sucessful
DESIGN	creates a new checkbox menu item attached to the specified action object and appends it to the end of this menu. todo this is almost a duplicate of argojmenu.addcheckitem must find a way to merge. @param a the action for the checkbox menu item to be added @return the new checkbox menu item
DESIGN	creates a new checkbox menu item attached to the specified action object and appends it to the end of this menu. todo this is almost a duplicate of argojmenu.addcheckitem must find a way to merge. @param a the action for the checkbox menu item to be added @return the new checkbox menu item
DESIGN	todo the namespace of enlisted events is currently the model. i think this is wrong they should be in the namespace of the activitygraph! vec.addall(model.getmodelmanagementhelper().getallmodelelementsofkind( model.getfacade().getnamespace(gettarget()) model.getmetatypes().getevent()))
DESIGN	todo use the following function to have a dropdown set of tools toolbarfactory.additemstotoolbar(buttonpanel actions true) instead this temporary solution @param buttonpanel the toolbar @param actions an array of actions representing the tool layout
DESIGN	todo can we get this from the metamodel? $non-nls-1$
DESIGN	todo change to throw exception when uses are fixed throw new notimplementedexception() $non-nls-1$
WITHOUT_CLASSIFICATION	test out the optimizer
WITHOUT_CLASSIFICATION	aload_0
WITHOUT_CLASSIFICATION	aload_0
WITHOUT_CLASSIFICATION	aload_0
WITHOUT_CLASSIFICATION	aload_0
WITHOUT_CLASSIFICATION	aload_0
WITHOUT_CLASSIFICATION	aload_0
WITHOUT_CLASSIFICATION	aload_0
WITHOUT_CLASSIFICATION	return
WITHOUT_CLASSIFICATION	return
WITHOUT_CLASSIFICATION	| this | bean | args | raw bean |
WITHOUT_CLASSIFICATION	invokeinterface
WITHOUT_CLASSIFICATION	astore 4 store the raw bean
WITHOUT_CLASSIFICATION	current stack len = 0
WITHOUT_CLASSIFICATION	current stack len = 0
WITHOUT_CLASSIFICATION	local variables | target obj | each oldvalue |
WITHOUT_CLASSIFICATION	invokeinterface invoke enabled.getinterceptfieldcallback()
WITHOUT_CLASSIFICATION	putfield new value of the field
WITHOUT_CLASSIFICATION	reference type
WITHOUT_CLASSIFICATION	double
WITHOUT_CLASSIFICATION	double
WITHOUT_CLASSIFICATION	long
WITHOUT_CLASSIFICATION	just decrement the lock don't recache (we don't know which transaction won)
WITHOUT_CLASSIFICATION	decode row selection
WITHOUT_CLASSIFICATION	disassembled state gets put in a new array (we write to cache by value!)
WITHOUT_CLASSIFICATION	again ccs did not have such a concept but a reasonable proximity is to clear the cache after transaction as long as the underlying cache is not jta aware.
WITHOUT_CLASSIFICATION	check
WITHOUT_CLASSIFICATION	row id
WITHOUT_CLASSIFICATION	composite-id
WITHOUT_CLASSIFICATION	discriminator
WITHOUT_CLASSIFICATION	property prop = new property() prop.setname("id") prop.setpropertyaccessorname("embedded") prop.setvalue(id) entity.setidentifierproperty(prop)
WITHOUT_CLASSIFICATION	dynamic insert
WITHOUT_CLASSIFICATION	persister
WITHOUT_CLASSIFICATION	get meta's from <subclass>
WITHOUT_CLASSIFICATION	properties
WITHOUT_CLASSIFICATION	properties
WITHOUT_CLASSIFICATION	generated properties can never be insertable
WITHOUT_CLASSIFICATION	table
WITHOUT_CLASSIFICATION	by default natural-ids are "immutable" (constant)
WITHOUT_CLASSIFICATION	( (column) ( (simplevalue) ic.getindex() ).getcolumniterator().next() ).setnullable(false)
WITHOUT_CLASSIFICATION	we found some extends attributes referencing entities which were not already processed. here we need to locate all entity-names and class-names contained in this document itself making sure that these get removed from the extendz list such that only extends names which require us to delay processing (i.e. external to this document and not yet processed) are contained in the returned result
WITHOUT_CLASSIFICATION	build a resultsetmappingdefinition given a containing element for the "return-xxx" elements @param resultsetelem the element containing the return definitions. @param path no clue @param mappings the current processing state. @return the description of the mappings
WITHOUT_CLASSIFICATION	private boolean showsql private boolean formatsql
WITHOUT_CLASSIFICATION	public boolean isshowsqlenabled() { return showsql } public boolean isformatsqlenabled() { return formatsql }
WITHOUT_CLASSIFICATION	set a custom entity resolver. this entity resolver must be set before addxxx(misc) call. default value is {@link org.hibernate.util.dtdentityresolver} @param entityresolver entity resolver to use
WITHOUT_CLASSIFICATION	final list extendsqueue
WITHOUT_CLASSIFICATION	if close() is called guarantee unbind()
WITHOUT_CLASSIFICATION	if a threadlocalsessioncontext-bound session happens to get serialized to be completely correct we need to make sure that unbinding of that session occurs.
WITHOUT_CLASSIFICATION	on the inverse it makes sense that if a threadlocalsessioncontext- bound session then gets deserialized to go ahead and re-bind it to the threadlocalsessioncontext session map.
WITHOUT_CLASSIFICATION	cannot be instantiated
WITHOUT_CLASSIFICATION	60 second lock timeout
WITHOUT_CLASSIFICATION	optimisticcache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	cache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	option.setdataversion( nonlockingdataversion.instance )
WITHOUT_CLASSIFICATION	do the put outside the scope of the jta txn
WITHOUT_CLASSIFICATION	ignore!
WITHOUT_CLASSIFICATION	tree cache in optimistic mode seems to have as very difficult time with remove calls on non-existent nodes (npes)
WITHOUT_CLASSIFICATION	60 seconds
WITHOUT_CLASSIFICATION	ignore!
WITHOUT_CLASSIFICATION	60 seconds
WITHOUT_CLASSIFICATION	do the failfast put outside the scope of the jta txn
WITHOUT_CLASSIFICATION	note evict() operates locally only (i.e. does not propogate to any other nodes in the potential cluster). this is exactly what is needed when we destroy() here destroy() is used as part of the process of shutting down a sessionfactory thus these removals should not be propogated
WITHOUT_CLASSIFICATION	protected regionrootlistener listener
WITHOUT_CLASSIFICATION	establish the region root node with a non-locking data version
WITHOUT_CLASSIFICATION	if we've been blocking for the mutex perhaps another thread has already reestablished the root. in case the node was reestablised via replication confirm it's marked "resident" (a status which doesn't replicate)
WITHOUT_CLASSIFICATION	for pessimistic locking we just want to toss out our ref to any old invalid root node and get the latest (may be null)
WITHOUT_CLASSIFICATION	the rest only matters for optimistic locking where we need to establish the proper data version on the region root
WITHOUT_CLASSIFICATION	don't hold a transactional lock for this
WITHOUT_CLASSIFICATION	make sure the root node for the region exists and has a dataversion that never complains
WITHOUT_CLASSIFICATION	never evict this node
WITHOUT_CLASSIFICATION	fix up the resident flag
WITHOUT_CLASSIFICATION	60 seconds
WITHOUT_CLASSIFICATION	we ignore minimalputoverride. jbosscache putforexternalread is already about as minimal as we can get it will promptly return if it discovers that the node we want to write to already exists
WITHOUT_CLASSIFICATION	no-op. we don't own the cache so we shouldn't stop it.
WITHOUT_CLASSIFICATION	this should only be possible if the caches are constructor injected
WITHOUT_CLASSIFICATION	we only build caches if none were passed in. passing in caches counts as a clear statement of exactly what is wanted
WITHOUT_CLASSIFICATION	set up the cache factory
WITHOUT_CLASSIFICATION	see if the user configured a multiplexer stack
WITHOUT_CLASSIFICATION	default to collections sharing entity cache if there is one
WITHOUT_CLASSIFICATION	default to sharing the entity cache if there is one
WITHOUT_CLASSIFICATION	for timestamps we default to a separate config
WITHOUT_CLASSIFICATION	we can't change the tm on a running cache just check if the cache has no tm and we're ok with that
WITHOUT_CLASSIFICATION	configure the cache to use our tm
WITHOUT_CLASSIFICATION	make sure jbc doesn't look one up
WITHOUT_CLASSIFICATION	this method should be implemented assuming it's valid to do start/stop/start -- leave state appropriate for another start
WITHOUT_CLASSIFICATION	make sure we don't re-release the same cache
WITHOUT_CLASSIFICATION	we use a different delegate than the non-optimistic superclass default
WITHOUT_CLASSIFICATION	following methods we don't delegate since they have so little logic it's clearer to just implement them here
WITHOUT_CLASSIFICATION	if jbc is using invalidation we don't want to propagate changes. we use the timestamps cache to manage invalidation
WITHOUT_CLASSIFICATION	we don't want to waste effort setting an option if jbc is already in local mode. if jbc is repl_(a)sync then check if they passed an config option to disable query replication
WITHOUT_CLASSIFICATION	don't hold the jbc node lock throughout the tx as that prevents updates add a zero (or low) timeout option so we don't block waiting for tx's that did a put to commit
WITHOUT_CLASSIFICATION	double check the distributed cache
WITHOUT_CLASSIFICATION	get an exclusive right to update jbc for this key from this node.
WITHOUT_CLASSIFICATION	we ensure async semantics (jbcache-1175)
WITHOUT_CLASSIFICATION	initial load from jbc
WITHOUT_CLASSIFICATION	see if we had a 2nd invalidation from the same initial preinvalidation timestamp. if so only increment if the new current value is an increase
WITHOUT_CLASSIFICATION	we ensure async semantics (jbcache-1175)
WITHOUT_CLASSIFICATION	if the workspace node has null as well ok if not we've been modified in a non-comparable manner which we have to treat as us being newer
WITHOUT_CLASSIFICATION	the standard comparator types are not serializable but are singletons
WITHOUT_CLASSIFICATION	ignore!
WITHOUT_CLASSIFICATION	ignore it
WITHOUT_CLASSIFICATION	construct the cache
WITHOUT_CLASSIFICATION	local cache so we use synchronization
WITHOUT_CLASSIFICATION	local cache so we use synchronization
WITHOUT_CLASSIFICATION	ie. 60 seconds
WITHOUT_CLASSIFICATION	swaldman 2006-08-28 define c3p0-style configuration parameters for initialpoolsize which hibernate sensibly lets default to minpoolsize but we'll let users override it with the c3p0-style property if they want.
WITHOUT_CLASSIFICATION	datasource unpooled = datasources.unpooleddatasource(jdbcurl props.getproperty(environment.user) props.getproperty(environment.pass))
WITHOUT_CLASSIFICATION	true if the pool is borrowed from the outside false if we used to create it
WITHOUT_CLASSIFICATION	get a connection from the pool (thru drivermanager cfr. proxool doc)
WITHOUT_CLASSIFICATION	set the transaction isolation if defined
WITHOUT_CLASSIFICATION	toggle autocommit to false if set
WITHOUT_CLASSIFICATION	return the connection
WITHOUT_CLASSIFICATION	get the configurator files (if available)
WITHOUT_CLASSIFICATION	default the proxool alias setting
WITHOUT_CLASSIFICATION	validate that an alias name was provided to determine which pool to use
WITHOUT_CLASSIFICATION	validate that an alias name was provided to determine which pool to use
WITHOUT_CLASSIFICATION	append the stem to the proxool pool alias
WITHOUT_CLASSIFICATION	set the existing pool flag to true
WITHOUT_CLASSIFICATION	configured using the jaxp configurator
WITHOUT_CLASSIFICATION	validate that an alias name was provided to determine which pool to use
WITHOUT_CLASSIFICATION	append the stem to the proxool pool alias
WITHOUT_CLASSIFICATION	append the stem to the proxool pool alias
WITHOUT_CLASSIFICATION	configured using the properties file configurator
WITHOUT_CLASSIFICATION	remember isolation level
WITHOUT_CLASSIFICATION	if the provider was leeching off an existing pool don't close it
WITHOUT_CLASSIFICATION	we have created the pool ourselves so shut it down
WITHOUT_CLASSIFICATION	not really a many-to-one association necessarily
WITHOUT_CLASSIFICATION	not really a many-to-one association necessarily
WITHOUT_CLASSIFICATION	always overwrite nonversioned data
WITHOUT_CLASSIFICATION	public currency getcurrency(int col) throws hibernateexception
WITHOUT_CLASSIFICATION	default is pojo
WITHOUT_CLASSIFICATION	use setparameter for null values
WITHOUT_CLASSIFICATION	use setparameter for null values
WITHOUT_CLASSIFICATION	private cacheentry cacheentry
WITHOUT_CLASSIFICATION	don't need to lock the cache here since if someone else inserted the same pk first the insert would fail
WITHOUT_CLASSIFICATION	make 100% certain that this is called before any subsequent scheduledupdate.aftertransactioncompletion()!!
WITHOUT_CLASSIFICATION	get the updated snapshot of the entity state by cloning current state it is safe to copy in place since by this time no-one else (should have) has a reference to the array
WITHOUT_CLASSIFICATION	this entity defines proeprty generation so process those generated values
WITHOUT_CLASSIFICATION	have the entity entry perform post-update processing passing it the update state and the new version (if one).
WITHOUT_CLASSIFICATION	!persister.iscacheinvalidationrequired()
WITHOUT_CLASSIFICATION	need to look it up from the persistence-context
WITHOUT_CLASSIFICATION	sort first by role name
WITHOUT_CLASSIFICATION	make 100% certain that this is called before any subsequent scheduledupdate.aftertransactioncompletion()!!
WITHOUT_CLASSIFICATION	then by fk
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	an existing collection that was either non-empty or uninitialized is replaced by null or a different collection (if the collection is uninitialized hibernate has no way of knowing if the collection is actually empty without querying the db)
WITHOUT_CLASSIFICATION	this method is called when a new non-null collection is persisted or when an existing (non-null) collection is moved to a new owner
WITHOUT_CLASSIFICATION	boolean put = persister.getcache().insert(ck cacheentry)
WITHOUT_CLASSIFICATION	we need to grab the version value from the entity otherwise we have issues with generated-version entities that may have multiple actions queued during the same flush
WITHOUT_CLASSIFICATION	do nothing - we only need to notify the cache
WITHOUT_CLASSIFICATION	sort first by entity name
WITHOUT_CLASSIFICATION	then by id
WITHOUT_CLASSIFICATION	to be safe
WITHOUT_CLASSIFICATION	no transformations took place so handle it as we would a non-instrumented class
WITHOUT_CLASSIFICATION	see if the entry represents a class file
WITHOUT_CLASSIFICATION	see if the entry represents a class file
WITHOUT_CLASSIFICATION	intentionally empty
WITHOUT_CLASSIFICATION	test out the optimizer
WITHOUT_CLASSIFICATION	set the name of bulk accessor.
WITHOUT_CLASSIFICATION	aload_0
WITHOUT_CLASSIFICATION	invokespecial
WITHOUT_CLASSIFICATION	return
WITHOUT_CLASSIFICATION	aload_1 load bean
WITHOUT_CLASSIFICATION	checkcast cast bean
WITHOUT_CLASSIFICATION	astore_3 store bean
WITHOUT_CLASSIFICATION	aload_2 args
WITHOUT_CLASSIFICATION	iconst_i continue to aastore growing stack is 1
WITHOUT_CLASSIFICATION	new
WITHOUT_CLASSIFICATION	dup
WITHOUT_CLASSIFICATION	aload_3 load the raw bean
WITHOUT_CLASSIFICATION	invokeinterface
WITHOUT_CLASSIFICATION	invokevirtual
WITHOUT_CLASSIFICATION	invokevirtual
WITHOUT_CLASSIFICATION	aastore args
WITHOUT_CLASSIFICATION	| this | bean | args | i | raw bean | exception |
WITHOUT_CLASSIFICATION	required to exception table iconst_0 i
WITHOUT_CLASSIFICATION	istore_3 store i
WITHOUT_CLASSIFICATION	aload_1 load the bean
WITHOUT_CLASSIFICATION	checkcast cast the bean into a raw bean
WITHOUT_CLASSIFICATION	current stack len = 0
WITHOUT_CLASSIFICATION	start region to handling exception (bulkaccessorexception)
WITHOUT_CLASSIFICATION	iinc 3 1
WITHOUT_CLASSIFICATION	aload 4 load the raw bean
WITHOUT_CLASSIFICATION	aload_2 load the args
WITHOUT_CLASSIFICATION	iconst_i
WITHOUT_CLASSIFICATION	aaload
WITHOUT_CLASSIFICATION	checkcast
WITHOUT_CLASSIFICATION	checkcast (case of primitive type) invokevirtual (case of primitive type)
WITHOUT_CLASSIFICATION	checkcast (case of reference type)
WITHOUT_CLASSIFICATION	current stack len = 2
WITHOUT_CLASSIFICATION	end region to handling exception (bulkaccessorexception)
WITHOUT_CLASSIFICATION	register in exception table
WITHOUT_CLASSIFICATION	aload_0
WITHOUT_CLASSIFICATION	aload_0
WITHOUT_CLASSIFICATION	return
WITHOUT_CLASSIFICATION	return
WITHOUT_CLASSIFICATION	dup
WITHOUT_CLASSIFICATION	invokevirtual
WITHOUT_CLASSIFICATION	checkcast
WITHOUT_CLASSIFICATION	local variables | target obj | each oldvalue |
WITHOUT_CLASSIFICATION	astore 5 store exception
WITHOUT_CLASSIFICATION	new bulkaccessorexception
WITHOUT_CLASSIFICATION	aload 5 load exception
WITHOUT_CLASSIFICATION	iload_3 i
WITHOUT_CLASSIFICATION	invokespecial bulkaccessorexception.<init>
WITHOUT_CLASSIFICATION	athrow
WITHOUT_CLASSIFICATION	warning classfile only
WITHOUT_CLASSIFICATION	swallow
WITHOUT_CLASSIFICATION	local variable | this |
WITHOUT_CLASSIFICATION	aload_0 load this
WITHOUT_CLASSIFICATION	aload_0 load this
WITHOUT_CLASSIFICATION	getfield get field "$javassist_callback" defined already
WITHOUT_CLASSIFICATION	areturn return the value of the field
WITHOUT_CLASSIFICATION	local variables | this | callback |
WITHOUT_CLASSIFICATION	aload_1 load callback
WITHOUT_CLASSIFICATION	putfield put field "$javassist_callback" defined already
WITHOUT_CLASSIFICATION	case of non-static field
WITHOUT_CLASSIFICATION	getfield get each field
WITHOUT_CLASSIFICATION	invokeinterface invoke enabled.getinterceptfieldcallback()
WITHOUT_CLASSIFICATION	ifnonnull
WITHOUT_CLASSIFICATION	return each type
WITHOUT_CLASSIFICATION	return each type
WITHOUT_CLASSIFICATION	store_1 each type
WITHOUT_CLASSIFICATION	ldc name of the field
WITHOUT_CLASSIFICATION	load_1 each type
WITHOUT_CLASSIFICATION	invokeinterface invoke callback.read() each type
WITHOUT_CLASSIFICATION	int
WITHOUT_CLASSIFICATION	return
WITHOUT_CLASSIFICATION	dup
WITHOUT_CLASSIFICATION	invokeinterface
WITHOUT_CLASSIFICATION	checkcast
WITHOUT_CLASSIFICATION	checkcast
WITHOUT_CLASSIFICATION	invokeinterface enabled.getinterceptfieldcallback()
WITHOUT_CLASSIFICATION	invokeinterface enabled.getinterceptfieldcallback()
WITHOUT_CLASSIFICATION	ifnonnull (label1)
WITHOUT_CLASSIFICATION	load_1
WITHOUT_CLASSIFICATION	load_1
WITHOUT_CLASSIFICATION	putfield
WITHOUT_CLASSIFICATION	return
WITHOUT_CLASSIFICATION	ldc field name
WITHOUT_CLASSIFICATION	getfield old value of the field
WITHOUT_CLASSIFICATION	invokeinterface callback.write(..)
WITHOUT_CLASSIFICATION	reference type
WITHOUT_CLASSIFICATION	reference type
WITHOUT_CLASSIFICATION	not array
WITHOUT_CLASSIFICATION	array of reference type
WITHOUT_CLASSIFICATION	boolean
WITHOUT_CLASSIFICATION	byte
WITHOUT_CLASSIFICATION	char
WITHOUT_CLASSIFICATION	short
WITHOUT_CLASSIFICATION	double
WITHOUT_CLASSIFICATION	float
WITHOUT_CLASSIFICATION	float
WITHOUT_CLASSIFICATION	long
WITHOUT_CLASSIFICATION	long
WITHOUT_CLASSIFICATION	bad type
WITHOUT_CLASSIFICATION	bad type
WITHOUT_CLASSIFICATION	boolean byte char int short
WITHOUT_CLASSIFICATION	boolean byte char int short
WITHOUT_CLASSIFICATION	reference type
WITHOUT_CLASSIFICATION	double
WITHOUT_CLASSIFICATION	float
WITHOUT_CLASSIFICATION	float
WITHOUT_CLASSIFICATION	long
WITHOUT_CLASSIFICATION	bad type
WITHOUT_CLASSIFICATION	bad type
WITHOUT_CLASSIFICATION	boolean byte char int short
WITHOUT_CLASSIFICATION	skip finalize methods
WITHOUT_CLASSIFICATION	mainly for oscache
WITHOUT_CLASSIFICATION	decrement the lock
WITHOUT_CLASSIFICATION	create new lock that times out immediately
WITHOUT_CLASSIFICATION	recache the updated state
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	null clientlock is remotely possible but will never happen in practice
WITHOUT_CLASSIFICATION	we really could refresh the item if it is not a lock but it might be slower return freshtimestamp < txtimestamp
WITHOUT_CLASSIFICATION	by requiring < we rely on lock timeout in the case of an unsuccessful update!
WITHOUT_CLASSIFICATION	the user provided resulttransformer not the one used with "select new". here to avoid mangling transformed/non-transformed results.
WITHOUT_CLASSIFICATION	disassemble positional parameters
WITHOUT_CLASSIFICATION	disassemble named parameters
WITHOUT_CLASSIFICATION	ie. 60 seconds
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	this is called from settingsfactory irregardless trivial to simply disregard
WITHOUT_CLASSIFICATION	do nothing subclasses may override.
WITHOUT_CLASSIFICATION	do nothing subclasses may override.
WITHOUT_CLASSIFICATION	throw new unsupportedoperationexception("can't write to a readonly object")
WITHOUT_CLASSIFICATION	assembled state gets put in a new array (we read from cache by value!)
WITHOUT_CLASSIFICATION	persister.setidentifier(result id) before calling interceptor for consistency with normal load
WITHOUT_CLASSIFICATION	no-op ccs did not have such a concept
WITHOUT_CLASSIFICATION	no-op ccs did not have such a concept
WITHOUT_CLASSIFICATION	again ccs did not have such a concept but a reasonable proximity is to clear the cache after transaction as long as the underlying cache is not jta aware.
WITHOUT_CLASSIFICATION	again ccs did not have such a concept however a reasonable proximity is to clear the cache. for non-transaction aware caches we will also do a clear at the end of the transaction
WITHOUT_CLASSIFICATION	again ccs did not have such a concept however a reasonable proximity is to clear the cache. for non-transaction aware caches we will also do a clear at the end of the transaction
WITHOUT_CLASSIFICATION	classes mentioned in extends not available - so put it in queue
WITHOUT_CLASSIFICATION	get meta's from <hibernate-mapping>
WITHOUT_CLASSIFICATION	get meta's from <class>
WITHOUT_CLASSIFICATION	db-objectname
WITHOUT_CLASSIFICATION	mutable
WITHOUT_CLASSIFICATION	where
WITHOUT_CLASSIFICATION	check
WITHOUT_CLASSIFICATION	polymorphism
WITHOUT_CLASSIFICATION	todo
WITHOUT_CLASSIFICATION	id
WITHOUT_CLASSIFICATION	version / timestamp
WITHOUT_CLASSIFICATION	discriminator
WITHOUT_CLASSIFICATION	primary key constraint
WITHOUT_CLASSIFICATION	this is either a <version/> tag with no type attribute or a <timestamp/> tag
WITHOUT_CLASSIFICATION	for version properties marked as being generated make sure they are "always" generated aka "insert" is invalid this is dis-allowed by the dtd but just to make sure
WITHOUT_CLASSIFICATION	discriminator
WITHOUT_CLASSIFICATION	( (column) discrim.getcolumniterator().next() ).settype(type)
WITHOUT_CLASSIFICATION	go ahead and set the lazy here since pojo.proxy can override it.
WITHOUT_CLASSIFICATION	dynamic update
WITHOUT_CLASSIFICATION	import
WITHOUT_CLASSIFICATION	batch size
WITHOUT_CLASSIFICATION	select before update
WITHOUT_CLASSIFICATION	optimistic lock mode
WITHOUT_CLASSIFICATION	persister
WITHOUT_CLASSIFICATION	custom sql
WITHOUT_CLASSIFICATION	get meta's from <subclass>
WITHOUT_CLASSIFICATION	properties
WITHOUT_CLASSIFICATION	joined subclasses
WITHOUT_CLASSIFICATION	key
WITHOUT_CLASSIFICATION	check
WITHOUT_CLASSIFICATION	custom sql
WITHOUT_CLASSIFICATION	properties
WITHOUT_CLASSIFICATION	key
WITHOUT_CLASSIFICATION	model.getkey().settype( new type( model.getidentifier() ) )
WITHOUT_CLASSIFICATION	tablename
WITHOUT_CLASSIFICATION	join.getkey().settype( new type( lazz.getidentifier() ) )
WITHOUT_CLASSIFICATION	properties
WITHOUT_CLASSIFICATION	column(s)
WITHOUT_CLASSIFICATION	column index
WITHOUT_CLASSIFICATION	column unique-key
WITHOUT_CLASSIFICATION	automatically makes a column with the default name if none is specifed by xml
WITHOUT_CLASSIFICATION	for an any
WITHOUT_CLASSIFICATION	insertable simply because that is the user did not specify anything just override it
WITHOUT_CLASSIFICATION	the user specifically supplied insert="true" which constitutes an illegal combo
WITHOUT_CLASSIFICATION	properties generated on update can never be updateable
WITHOUT_CLASSIFICATION	updateable only because the user did not specify anything just override it
WITHOUT_CLASSIFICATION	the user specifically supplied update="true" which constitutes an illegal combo
WITHOUT_CLASSIFICATION	rolename
WITHOUT_CLASSIFICATION	fetch strategy
WITHOUT_CLASSIFICATION	table
WITHOUT_CLASSIFICATION	tablename = mappings.getnamingstrategy().propertytotablename( classname path )
WITHOUT_CLASSIFICATION	sort
WITHOUT_CLASSIFICATION	custom sql
WITHOUT_CLASSIFICATION	unsorted natural comparator.class.name
WITHOUT_CLASSIFICATION	orphan delete (used for programmer error detection)
WITHOUT_CLASSIFICATION	set up second pass
WITHOUT_CLASSIFICATION	an "embedded" component (composite ids and unique) note that this does not handle nested components
WITHOUT_CLASSIFICATION	a nested composite element
WITHOUT_CLASSIFICATION	for an any we will have to use reflection
WITHOUT_CLASSIFICATION	note special case one-to-one constrained=false cannot be proxied so default to join and non-lazy
WITHOUT_CLASSIFICATION	use old (hb 2.1) defaults if outer-join is specified
WITHOUT_CLASSIFICATION	lazy = !join
WITHOUT_CLASSIFICATION	generator
WITHOUT_CLASSIFICATION	id unsaved-value
WITHOUT_CLASSIFICATION	version unsaved-value
WITHOUT_CLASSIFICATION	not necessarily a unique property reference
WITHOUT_CLASSIFICATION	( (column) ( (simplevalue) ic.getindex() ).getcolumniterator().next() ).setnullable(false)
WITHOUT_CLASSIFICATION	contained elements
WITHOUT_CLASSIFICATION	for non-inverse one-to-many with a not-null fk add a backref!
WITHOUT_CLASSIFICATION	bind the where
WITHOUT_CLASSIFICATION	bind the order-by
WITHOUT_CLASSIFICATION	bind the filters
WITHOUT_CLASSIFICATION	overriding inherited meta attribute. hbx-621 & hbx-793
WITHOUT_CLASSIFICATION	first iterate over all elements capable of defining an extends attribute collecting all found extends references if they cannot be resolved against the already processed mappings.
WITHOUT_CLASSIFICATION	mappings might contain either the "raw" extends name (in the case of an entity-name mapping) or a fqn (in the case of a pojo mapping).
WITHOUT_CLASSIFICATION	+ "_" + referencedcolumnname not used for backward compatibility
WITHOUT_CLASSIFICATION	sessionfactory name
WITHOUT_CLASSIFICATION	jdbc and connection settings
WITHOUT_CLASSIFICATION	jdbc and connection settings
WITHOUT_CLASSIFICATION	interrogate jdbc metadata
WITHOUT_CLASSIFICATION	user supplied jdbc connections
WITHOUT_CLASSIFICATION	use dialect default properties
WITHOUT_CLASSIFICATION	transaction settings
WITHOUT_CLASSIFICATION	sql generation settings
WITHOUT_CLASSIFICATION	query parser settings
WITHOUT_CLASSIFICATION	second-level / query cache
WITHOUT_CLASSIFICATION	the cache provider is needed when we either have second-level cache enabled or query cache enabled. note that usesecondlevelcache is enabled by default
WITHOUT_CLASSIFICATION	sql exception converter
WITHOUT_CLASSIFICATION	statistics and logging
WITHOUT_CLASSIFICATION	settings.setshowsqlenabled(showsql)
WITHOUT_CLASSIFICATION	settings.setformatsqlenabled(formatsql)
WITHOUT_CLASSIFICATION	schema export
WITHOUT_CLASSIFICATION	string provider = properties.getproperty( environment.bytecode_provider ) log.info( "bytecode provider name " + provider ) bytecodeprovider bytecodeprovider = buildbytecodeprovider( provider ) settings.setbytecodeprovider( bytecodeprovider )
WITHOUT_CLASSIFICATION	legacy behavior apply the bridge
WITHOUT_CLASSIFICATION	maybe a concrete sqlpropertyresult type but map is exactly what is required at the moment
WITHOUT_CLASSIFICATION	if dotted and not load-collection nor return-join regular property
WITHOUT_CLASSIFICATION	private componenttuplizerfactory componenttuplizerfactory todo hhh-3517 and hhh-1907 private bytecodeprovider bytecodeprovider
WITHOUT_CLASSIFICATION	public getters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	public componenttuplizerfactory getcomponenttuplizerfactory() { return componenttuplizerfactory }
WITHOUT_CLASSIFICATION	package protected setters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	void setshowsqlenabled(boolean b) { showsql = b } void setformatsqlenabled(boolean b) { formatsql = b }
WITHOUT_CLASSIFICATION	public bytecodeprovider getbytecodeprovider() { return bytecodeprovider } void setbytecodeprovider(bytecodeprovider bytecodeprovider) { this.bytecodeprovider = bytecodeprovider }
WITHOUT_CLASSIFICATION	using local since the inheritedmetas at this point is not the correct map since it is always the empty map
WITHOUT_CLASSIFICATION	private componenttuplizerfactory componenttuplizerfactory todo hhh-3517 and hhh-1907
WITHOUT_CLASSIFICATION	protected list extendsqueue
WITHOUT_CLASSIFICATION	extendsqueue = new arraylist()
WITHOUT_CLASSIFICATION	componenttuplizerfactory = new componenttuplizerfactory()
WITHOUT_CLASSIFICATION	if doc is null then for whatever reason the cached file cannot be used
WITHOUT_CLASSIFICATION	drop them in reverse order in case db needs it done that way
WITHOUT_CLASSIFICATION	public componenttuplizerfactory getcomponenttuplizerfactory() { return componenttuplizerfactory }
WITHOUT_CLASSIFICATION	this method may be called many times!!
WITHOUT_CLASSIFICATION	iterator iterator = extendsqueue.iterator()
WITHOUT_CLASSIFICATION	iterator iter = extendsqueue.iterator()
WITHOUT_CLASSIFICATION	found
WITHOUT_CLASSIFICATION	found
WITHOUT_CLASSIFICATION	settings.setcomponenttuplizerfactory( this.getcomponenttuplizerfactory() )
WITHOUT_CLASSIFICATION	private final list extendsqueue
WITHOUT_CLASSIFICATION	<string string>
WITHOUT_CLASSIFICATION	<string string>
WITHOUT_CLASSIFICATION	+ "_" + referencedcolumnname not used for backward compatibility
WITHOUT_CLASSIFICATION	set use_reflection_optimizer to false to fix hhh-227
WITHOUT_CLASSIFICATION	orphan delete not supported for entitymode.dom4j
WITHOUT_CLASSIFICATION	element = xmlhelper.generatedom4jelement( persister.getnodename() )
WITHOUT_CLASSIFICATION	intentionally empty
WITHOUT_CLASSIFICATION	orphan delete not supported for entitymode.dom4j
WITHOUT_CLASSIFICATION	element = xmlhelper.generatedom4jelement( persister.getnodename() )
WITHOUT_CLASSIFICATION	needed for soap libraries etc
WITHOUT_CLASSIFICATION	maintain correct duplication if loaded in a cartesian product
WITHOUT_CLASSIFICATION	the element has been removed from the set
WITHOUT_CLASSIFICATION	the element has changed
WITHOUT_CLASSIFICATION	careful these methods do not initialize the collection.
WITHOUT_CLASSIFICATION	needed so that we remove this collection from the second-level cache
WITHOUT_CLASSIFICATION	override on some subclasses
WITHOUT_CLASSIFICATION	override on some subclasses
WITHOUT_CLASSIFICATION	do this bit after setting initialized to true or it will recurse
WITHOUT_CLASSIFICATION	short-circuit(s) no new elements the old list contains only orphans no old elements so no orphans neither
WITHOUT_CLASSIFICATION	create the collection holding the orphans
WITHOUT_CLASSIFICATION	collect entityidentifier(s) of the current elements - add them into a hashset for fast access
WITHOUT_CLASSIFICATION	iterate over the old list
WITHOUT_CLASSIFICATION	(array==null) ? templist.size()
WITHOUT_CLASSIFICATION	intentionally empty
WITHOUT_CLASSIFICATION	(array==null) ? templist.get(i)
WITHOUT_CLASSIFICATION	write() -- doesn't
WITHOUT_CLASSIFICATION	write() -- doesn't
WITHOUT_CLASSIFICATION	amazingly these two will work because abstractcollection uses iterator() to fill the array
WITHOUT_CLASSIFICATION	needed for soap libraries etc
WITHOUT_CLASSIFICATION	finally what it's all about
WITHOUT_CLASSIFICATION	note that if we load this collection from a cartesian product the multiplicity would be broken so use an idbag instead
WITHOUT_CLASSIFICATION	anyway here we implement <set> semantics for a <one-to-many> <bag>!
WITHOUT_CLASSIFICATION	a shortcut if its location didn't change!
WITHOUT_CLASSIFICATION	search for it note that this code is incorrect for other than one-to-many
WITHOUT_CLASSIFICATION	needed for soap libraries etc
WITHOUT_CLASSIFICATION	a shortcut if its location didn't change!
WITHOUT_CLASSIFICATION	search for it note that this code is incorrect for other than one-to-many
WITHOUT_CLASSIFICATION	public boolean equals(object other) {read()return bag.equals(other)}public int hashcode(object other) {read()return bag.hashcode()}
WITHOUT_CLASSIFICATION	list operations
WITHOUT_CLASSIFICATION	pad with nulls from the current last element up to the new index
WITHOUT_CLASSIFICATION	needed for soap libraries etc
WITHOUT_CLASSIFICATION	needed for soap libraries etc
WITHOUT_CLASSIFICATION	from map
WITHOUT_CLASSIFICATION	from sortedmap
WITHOUT_CLASSIFICATION	inject the data
WITHOUT_CLASSIFICATION	cannot be instantiated
WITHOUT_CLASSIFICATION	default pool size 20
WITHOUT_CLASSIFICATION	trying via forname() first to be as close to drivermanager's semantics
WITHOUT_CLASSIFICATION	if debug level is enabled then log the password otherwise mask it
WITHOUT_CLASSIFICATION	register a cleanup synch
WITHOUT_CLASSIFICATION	wrap the session in the transaction-protection proxy
WITHOUT_CLASSIFICATION	then bind it
WITHOUT_CLASSIFICATION	try to make sure we don't wrap and already wrapped session
WITHOUT_CLASSIFICATION	allow these to go through the the real session no matter what
WITHOUT_CLASSIFICATION	limit the methods available if no transaction is active
WITHOUT_CLASSIFICATION	allow these (deprecated) methods to pass through
WITHOUT_CLASSIFICATION	serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	we could register the session against the transaction even though it is not started but we'd have no guarentee of ever getting the map entries cleaned up (aside from spawning threads).
WITHOUT_CLASSIFICATION	cannot be instantiated
WITHOUT_CLASSIFICATION	private string propertyname
WITHOUT_CLASSIFICATION	public propertyprojection project() {return projections.property(getpropertyname())}
WITHOUT_CLASSIFICATION	string[] fk = stringhelper.qualify( "collection_" cp.getkeycolumnnames() )
WITHOUT_CLASSIFICATION	" collection_ where " +
WITHOUT_CLASSIFICATION	unsupported
WITHOUT_CLASSIFICATION	unsupported
WITHOUT_CLASSIFICATION	cannot be instantiated
WITHOUT_CLASSIFICATION	the following two lines were added to ensure that this.params is not null which can happen with two-deep nested subqueries
WITHOUT_CLASSIFICATION	with two-deep subqueries the same alias would get generated for both using the old method (criteriaquery.generatesqlalias()) so that is now used as a fallback if the main criteria alias isn't set
WITHOUT_CLASSIFICATION	implicit polymorphism not supported (would need a union)
WITHOUT_CLASSIFICATION	pull off the last " "
WITHOUT_CLASSIFICATION	$non-nls-1
WITHOUT_CLASSIFICATION	we have the form trim(trimsource) so we trim leading and trailing spaces
WITHOUT_CLASSIFICATION	we have the form trim(from trimsource). this is functionally equivalent to trim(trimsource)
WITHOUT_CLASSIFICATION	not_supported_should_use_jdbc3_preparedstatement.getgeneratedkeys_method
WITHOUT_CLASSIFICATION	potentialtrimcharacterargindex = 1 assumes that a trim-specification has been specified. we handle the exception to that explicitly
WITHOUT_CLASSIFICATION	overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	oracle did add support for ansi case statements in 9i
WITHOUT_CLASSIFICATION	the standard sql function name is current_timestamp
WITHOUT_CLASSIFICATION	informix doesn't have a bit type
WITHOUT_CLASSIFICATION	or byte or text? or money
WITHOUT_CLASSIFICATION	strip table-owner because informix always returns constraint names as "<table-owner>.<constraint-name>"
WITHOUT_CLASSIFICATION	build the map of standard ansi sql aggregation functions ~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	pre h3.2 behavior super.getreturntype(ct m)
WITHOUT_CLASSIFICATION	finally use the sqltype if == on hibernate types did not find a match.
WITHOUT_CLASSIFICATION	because numeric can be anything
WITHOUT_CLASSIFICATION	constructors and factory methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	standard sql92 functions (can be overridden by subclasses)
WITHOUT_CLASSIFICATION	map second/minute/hour/day/month/year to ansi extract() override on subclasses
WITHOUT_CLASSIFICATION	register hibernate types for default use in scalar sqlquery type auto detection
WITHOUT_CLASSIFICATION	database type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	hibernate type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	keyword support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	native identifier generatiion ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	identity support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	sequence support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	guid support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	limit/offset support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	by default we report no support
WITHOUT_CLASSIFICATION	by default we report no support for nowait lock semantics
WITHOUT_CLASSIFICATION	table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	current timestamp support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	sqlexception support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	identifier quoting support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	ddl support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	grrr for differentiation of mysql storage engines
WITHOUT_CLASSIFICATION	informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	return false here as most databases do not properly support this construct
WITHOUT_CLASSIFICATION	mckoi has no known variation of a "select for update" syntax
WITHOUT_CLASSIFICATION	oracle8 and previous define only a "date" type which is used to represent all aspects of date/time
WITHOUT_CLASSIFICATION	starts with 1 implicitly
WITHOUT_CLASSIFICATION	" cascade"
WITHOUT_CLASSIFICATION	trim off the length/precision/scale
WITHOUT_CLASSIFICATION	public boolean droptemporarytableafteruse() {we have to because postgres sets current txto rollback only after a failed create tablereturn true}
WITHOUT_CLASSIFICATION	check violation
WITHOUT_CLASSIFICATION	unique violation
WITHOUT_CLASSIFICATION	foreign key violation
WITHOUT_CLASSIFICATION	overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	not null violation
WITHOUT_CLASSIFICATION	all other
WITHOUT_CLASSIFICATION	register the type of the out param - postgresql uses types.other
WITHOUT_CLASSIFICATION	seems to not really public boolean supportsrowvalueconstructorsyntax() { return true }
WITHOUT_CLASSIFICATION	seems to have spotty lob suppport
WITHOUT_CLASSIFICATION	hhh-2300
WITHOUT_CLASSIFICATION	ignore (probably h2 not in the classpath)
WITHOUT_CLASSIFICATION	numeric functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	string functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	time and date functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	system functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	not null is implicit
WITHOUT_CLASSIFICATION	23000 check constraint violation {0} 23001 unique index or primary key violation {0}
WITHOUT_CLASSIFICATION	display the dialect version.
WITHOUT_CLASSIFICATION	the rdms concat() function only supports 2 parameters
WITHOUT_CLASSIFICATION	dialect method overrides ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	original dialect.java returns " for update"
WITHOUT_CLASSIFICATION	verify the state of this new method in hibernate 3.0 dialect.java
WITHOUT_CLASSIFICATION	origial dialect.java returns true
WITHOUT_CLASSIFICATION	the keyword used to specify a nullable column.
WITHOUT_CLASSIFICATION	sequence methods - start. the rdms dialect needs these
WITHOUT_CLASSIFICATION	methods to make it possible to use the native id generator
WITHOUT_CLASSIFICATION	the where clause was added to eliminate this statement from brute force searches.
WITHOUT_CLASSIFICATION	sequence methods - end
WITHOUT_CLASSIFICATION	overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	starts with 1 implicitly
WITHOUT_CLASSIFICATION	we must return a valid rdms/rsa command from this method to prevent rdms/rsa from issuing error 400
WITHOUT_CLASSIFICATION	used with drop table to delete all records in the table.
WITHOUT_CLASSIFICATION	rdms supports the union all clause.
WITHOUT_CLASSIFICATION	rdms has no known variation of a "select for update" syntax
WITHOUT_CLASSIFICATION	multi-param dialect functions
WITHOUT_CLASSIFICATION	function templates
WITHOUT_CLASSIFICATION	not null is implicit
WITHOUT_CLASSIFICATION	this assumes schema support which is present in 1.8.0 and later
WITHOUT_CLASSIFICATION	hsqldb only supports read_uncommitted transaction isolation
WITHOUT_CLASSIFICATION	multi-param string dialect functions
WITHOUT_CLASSIFICATION	multi-param numeric dialect functions
WITHOUT_CLASSIFICATION	multi-param date dialect functions
WITHOUT_CLASSIFICATION	simple nullability constraint
WITHOUT_CLASSIFICATION	overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	not final-static to avoid possible classcast exceptions if using different oracle drivers.
WITHOUT_CLASSIFICATION	register the type of the out param - an oracle specific type
WITHOUT_CLASSIFICATION	timesten has no blob/clob support but these types may be suitable for some applications. the length is limited to 4 million bytes.
WITHOUT_CLASSIFICATION	new methods in dialect3
WITHOUT_CLASSIFICATION	public boolean supportsforupdatenowait() {return false}
WITHOUT_CLASSIFICATION	timesten has no known variation of a "select for update" syntax
WITHOUT_CLASSIFICATION	iterate entries ordered by capacity to find first fit
WITHOUT_CLASSIFICATION	add new ordered map
WITHOUT_CLASSIFICATION	registercolumntype( types.varchar 16777215 "mediumtext" )
WITHOUT_CLASSIFICATION	overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	this assumes you will want to ignore any update counts
WITHOUT_CLASSIFICATION	sql server just returns automatically
WITHOUT_CLASSIFICATION	return "select current_timestamp from rdb$database"
WITHOUT_CLASSIFICATION	registercolumntype data types
WITHOUT_CLASSIFICATION	hibernate seems to ignore this type
WITHOUT_CLASSIFICATION	ibid for current_time and current_date
WITHOUT_CLASSIFICATION	tell hibernate to use getbytes instead of getbinarystream
WITHOUT_CLASSIFICATION	no batch statements
WITHOUT_CLASSIFICATION	we might want a special case for 192. this is very common for money types and here it is converted to 181
WITHOUT_CLASSIFICATION	no pointbase bit
WITHOUT_CLASSIFICATION	no pointbase tinyint
WITHOUT_CLASSIFICATION	pointbase has no known variation of a "select for update" syntax
WITHOUT_CLASSIFICATION	starts with 1 implicitly
WITHOUT_CLASSIFICATION	the current_timestamp is more accurate but only known to be supported in sql server 7.0 and later (i.e. sybase not known to support it at all)
WITHOUT_CLASSIFICATION	sql server (at least up through 2005) does not support defining cascade delete constraints which can circel back to the mutating table
WITHOUT_CLASSIFICATION	here assume sqlserver2005 using snapshot isolation which does not have this problem
WITHOUT_CLASSIFICATION	registercolumntype( types.blob 16777215 "mediumblob" ) registercolumntype( types.blob 65535 "blob" )
WITHOUT_CLASSIFICATION	registercolumntype( types.clob 16777215 "mediumtext" ) registercolumntype( types.clob 65535 "text" )
WITHOUT_CLASSIFICATION	registercolumntype( types.varchar 16777215 "mediumtext" ) registercolumntype( types.varchar 65535 "text" )
WITHOUT_CLASSIFICATION	starts with 1 implicitly
WITHOUT_CLASSIFICATION	package-private
WITHOUT_CLASSIFICATION	sql server just returns automatically
WITHOUT_CLASSIFICATION	sybase bit type does not support null values
WITHOUT_CLASSIFICATION	this assumes you will want to ignore any update counts
WITHOUT_CLASSIFICATION	overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	you may still have other resultsets or update counts left to process here but you can't do it now or the resultset you just got will be closed
WITHOUT_CLASSIFICATION	not null (start with 1) is implicit
WITHOUT_CLASSIFICATION	overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	oracle driver reports to support getgeneratedkeys() but they only support the version taking an array of the names of the columns to be returned (via its returning clause). no other driver seems to support this overloaded version.
WITHOUT_CLASSIFICATION	multi-param string dialect functions
WITHOUT_CLASSIFICATION	multi-param numeric dialect functions
WITHOUT_CLASSIFICATION	multi-param date dialect functions
WITHOUT_CLASSIFICATION	add another (inner) nested select add the main query close off the inner nested select
WITHOUT_CLASSIFICATION	add the main query
WITHOUT_CLASSIFICATION	add the restriction to the outer select
WITHOUT_CLASSIFICATION	this assumes you will want to ignore any update counts
WITHOUT_CLASSIFICATION	you may still have other resultsets or update counts left to process here but you can't do it now or the resultset you just got will be closed
WITHOUT_CLASSIFICATION	overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	starts with 1 implicitly
WITHOUT_CLASSIFICATION	simple nullability constraint
WITHOUT_CLASSIFICATION	not final-static to avoid possible classcast exceptions if using different oracle drivers.
WITHOUT_CLASSIFICATION	register the type of the out param - an oracle specific type
WITHOUT_CLASSIFICATION	features which change between 8i 9i and 10g ~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	features which remain constant across 8i 9i and 10g ~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	binary %stream character %stream
WITHOUT_CLASSIFICATION	getdefaultproperties().setproperty(environment.statement_batch_size no_batch)
WITHOUT_CLASSIFICATION	hibernate impelemnts cast in dialect.java
WITHOUT_CLASSIFICATION	aggregate functions shouldn't be registered right? registerfunction( "list" new standardsqlfunction("list"hibernate.string) ) stopped on $list
WITHOUT_CLASSIFICATION	ddl support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	below is for cache' that don't have str in 2007.1 there is str and we register str directly
WITHOUT_CLASSIFICATION	note that %string is deprecated
WITHOUT_CLASSIFICATION	%upper is deprecated
WITHOUT_CLASSIFICATION	the syntax used to add a foreign key constraint to a table.
WITHOUT_CLASSIFICATION	identifier-commalist
WITHOUT_CLASSIFICATION	identity support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	sequence support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	identifier-commalist
WITHOUT_CLASSIFICATION	the syntax used to add a column to a table
WITHOUT_CLASSIFICATION	completely optional cascading drop clause.
WITHOUT_CLASSIFICATION	lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	limit support (ala top) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	intersystems cache' does not current support "select for update" syntax set your transaction mode to read_committed before using
WITHOUT_CLASSIFICATION	overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	<string>
WITHOUT_CLASSIFICATION	callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	the keyword used to specify a nullable column.
WITHOUT_CLASSIFICATION	does the limit clause come at the start of the select statement rather than at the end?
WITHOUT_CLASSIFICATION	does the limit clause take a "maximum" row number instead of a total number of returned rows?
WITHOUT_CLASSIFICATION	the name of the sql function that transforms a string to lowercase
WITHOUT_CLASSIFICATION	create an outerjoingenerator for this dialect.
WITHOUT_CLASSIFICATION	the keyword used to insert a row without specifying any column values
WITHOUT_CLASSIFICATION	registerfunction( "trim" new standardsqlfunction( "trim" hibernate.string ) )
WITHOUT_CLASSIFICATION	skip the from keyword in params
WITHOUT_CLASSIFICATION	package
WITHOUT_CLASSIFICATION	potentialtrimcharacterargindex = 1 assumes that a trim-specification has been specified. we handle the exception to that explicitly
WITHOUT_CLASSIFICATION	sqlfunction implementation
WITHOUT_CLASSIFICATION	conceivable that the dialect ctor could throw hibernateexceptions so don't re-wrap
WITHOUT_CLASSIFICATION	register the standard dialect resolver
WITHOUT_CLASSIFICATION	register resolvers set via environment property
WITHOUT_CLASSIFICATION	kept for backward compatibility until after the 3.1beta5 release of ha
WITHOUT_CLASSIFICATION	cache the hashcode
WITHOUT_CLASSIFICATION	the cascadingaction contract ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	the cascadingaction implementations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	delete does cascade to uninitialized collections
WITHOUT_CLASSIFICATION	orphans should be deleted during delete
WITHOUT_CLASSIFICATION	(lockmode) anything
WITHOUT_CLASSIFICATION	lock doesn't cascade to uninitialized collections
WITHOUT_CLASSIFICATION	refresh doesn't cascade to uninitialized collections
WITHOUT_CLASSIFICATION	evicts don't cascade to uninitialized collections
WITHOUT_CLASSIFICATION	saves / updates don't cascade to uninitialized collections
WITHOUT_CLASSIFICATION	orphans should be deleted during save/update
WITHOUT_CLASSIFICATION	for deprecated saveorupdatecopy()
WITHOUT_CLASSIFICATION	persists don't cascade to uninitialized collections
WITHOUT_CLASSIFICATION	a proxy cannot be transient and it breaks foreignkeys.istransient
WITHOUT_CLASSIFICATION	replicate does cascade to uninitialized collections
WITHOUT_CLASSIFICATION	static helper methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	handles arrays and newly instantiated collections
WITHOUT_CLASSIFICATION	actually the semantics of the next three are really "bag" note that unlike objects collection insertions updates deletions are not really remembered between flushes. we just re-use the same lists for convenience.
WITHOUT_CLASSIFICATION	add these directly to the executions queue
WITHOUT_CLASSIFICATION	continue loop
WITHOUT_CLASSIFICATION	sort the updates by fk
WITHOUT_CLASSIFICATION	sort the updates by pk
WITHOUT_CLASSIFICATION	the mapping of entity names to their latest batch numbers.
WITHOUT_CLASSIFICATION	the map of batch numbers to entityinsertaction lists
WITHOUT_CLASSIFICATION	optimize the hash size to eliminate a rehash.
WITHOUT_CLASSIFICATION	the list of entity names that indicate the batch number
WITHOUT_CLASSIFICATION	remove the current element from insertions. it will be added back later.
WITHOUT_CLASSIFICATION	the entity associated with the current action.
WITHOUT_CLASSIFICATION	there is already an existing batch for this type of entity. check to see if the latest batch is acceptable.
WITHOUT_CLASSIFICATION	now rebuild the insertions list. there is a batch for each entry in the name list.
WITHOUT_CLASSIFICATION	the current batch number is the latest batch for this entity type.
WITHOUT_CLASSIFICATION	loop through all the associations of the current entity and make sure that they are processed before the current batch number
WITHOUT_CLASSIFICATION	find the batch number associated with the current association if any.
WITHOUT_CLASSIFICATION	create a new batch for this type. the batch number is the number of current batches.
WITHOUT_CLASSIFICATION	loop through all the associated entities and make sure they have been processed before the latest batch associated with this entity type.
WITHOUT_CLASSIFICATION	since this entity will now be processed in the latest possible batch we can be assured that it will come after all other associations there's not need to continue checking.
WITHOUT_CLASSIFICATION	cascade to current collection elements
WITHOUT_CLASSIFICATION	not really necessary but good for consistency
WITHOUT_CLASSIFICATION	we can't cascade to non-embedded elements
WITHOUT_CLASSIFICATION	a newly instantiated collection can't have orphans
WITHOUT_CLASSIFICATION	handle orphaned entities!!
WITHOUT_CLASSIFICATION	loaded entity instances by entityuniquekey
WITHOUT_CLASSIFICATION	identity map of entityentry instances by the entity instance
WITHOUT_CLASSIFICATION	entity proxies by entitykey
WITHOUT_CLASSIFICATION	snapshots of current database state for entities that have not been loaded
WITHOUT_CLASSIFICATION	identity map of array holder arrayholder instances by the array instance
WITHOUT_CLASSIFICATION	collection wrappers by the collectionkey key=collectionkey value=persistentcollection
WITHOUT_CLASSIFICATION	set of entitykeys of deleted objects
WITHOUT_CLASSIFICATION	properties that we have tried to load and not found in the database
WITHOUT_CLASSIFICATION	a list of collection wrappers that were instantiating during result set processing that we will need to initialize at the end of the query
WITHOUT_CLASSIFICATION	a container for collections we load up when the owning entity is not yet loaded for now this is purely transient!
WITHOUT_CLASSIFICATION	downgrade locks
WITHOUT_CLASSIFICATION	any earlier proxy takes precedence
WITHOUT_CLASSIFICATION	unwrap the object
WITHOUT_CLASSIFICATION	initialize + unwrap the object
WITHOUT_CLASSIFICATION	return the proxied object
WITHOUT_CLASSIFICATION	overwrite old proxy
WITHOUT_CLASSIFICATION	early exit
WITHOUT_CLASSIFICATION	or should it actually throw an exception?
WITHOUT_CLASSIFICATION	treat it just like a new collection
WITHOUT_CLASSIFICATION	do this work only at the very highest level of the load don't let this method be called recursively
WITHOUT_CLASSIFICATION	note that each iteration of the loop may add new elements
WITHOUT_CLASSIFICATION	it might be an unwrapped collection reference! try to find a wrapper (slowish)
WITHOUT_CLASSIFICATION	public boolean isnonexistant(entitykey key) {return nonexistantentitykeys.contains(key)}
WITHOUT_CLASSIFICATION	public boolean isnonexistant(entityuniquekey key) {return nonexistententityuniquekeys.contains(key)}
WITHOUT_CLASSIFICATION	iterate all the entities currently associated with the persistence context.
WITHOUT_CLASSIFICATION	does this entity entry pertain to the entity persister in which we are interested (owner)?
WITHOUT_CLASSIFICATION	check if the managed object is the parent
WITHOUT_CLASSIFICATION	otherwise the proxy was pruned during the serialization process
WITHOUT_CLASSIFICATION	adds remove as a sort-of alias for delete
WITHOUT_CLASSIFICATION	bad cast
WITHOUT_CLASSIFICATION	return lhspersister.getsubclasspropertycolumnnames(property)
WITHOUT_CLASSIFICATION	property-refs for associations defined on a component are not supported so no need to slice
WITHOUT_CLASSIFICATION	if there is no property-ref assume the join is to the subclass table (ie. the table of the subclass that the association belongs to)
WITHOUT_CLASSIFICATION	handle a property-ref
WITHOUT_CLASSIFICATION	nativesqlqueryreturn
WITHOUT_CLASSIFICATION	final boolean forcecacherefresh
WITHOUT_CLASSIFICATION	why is all others non final ?
WITHOUT_CLASSIFICATION	this.forcecacherefresh = forcecacherefresh
WITHOUT_CLASSIFICATION	hella important optimization!!!
WITHOUT_CLASSIFICATION	return that.type.equals(type) && equalshelper.equals(that.value value)
WITHOUT_CLASSIFICATION	must occur after resolving identifiers!
WITHOUT_CLASSIFICATION	take a snapshot
WITHOUT_CLASSIFICATION	do a check
WITHOUT_CLASSIFICATION	the owning entity may have been deleted and its identifier unset due to identifier-rollback in which case try to look up its identifier from the persistence context
WITHOUT_CLASSIFICATION	do the work
WITHOUT_CLASSIFICATION	we've been here before
WITHOUT_CLASSIFICATION	it is or was referenced _somewhere_
WITHOUT_CLASSIFICATION	do the work
WITHOUT_CLASSIFICATION	if either its role changed
WITHOUT_CLASSIFICATION	or its key changed
WITHOUT_CLASSIFICATION	we will need to create new entries
WITHOUT_CLASSIFICATION	we will need to remove ye olde entries
WITHOUT_CLASSIFICATION	force initialize!
WITHOUT_CLASSIFICATION	else if it's elements changed
WITHOUT_CLASSIFICATION	attributes maintained between flush cycles
WITHOUT_CLASSIFICATION	session-start/post-flush persistent state
WITHOUT_CLASSIFICATION	allow the collectionsnapshot to be serialized
WITHOUT_CLASSIFICATION	attributes used only during flush cycle
WITHOUT_CLASSIFICATION	"current" means the reference that was found during flush()
WITHOUT_CLASSIFICATION	"loaded" means the reference that is consistent with the current database state
WITHOUT_CLASSIFICATION	during flush we navigate the object graph to collections and decide what to do with them
WITHOUT_CLASSIFICATION	if we instantiate a collection during the flush() process we must ignore it for the rest of the flush()
WITHOUT_CLASSIFICATION	new collections that get found + wrapped during flush shouldn't be ignored
WITHOUT_CLASSIFICATION	a newly wrapped collection is not dirty (or we get unnecessary version updates)
WITHOUT_CLASSIFICATION	collection.cleardirty()
WITHOUT_CLASSIFICATION	collection.cleardirty()
WITHOUT_CLASSIFICATION	detached collections that get found + reattached during flush shouldn't be ignored
WITHOUT_CLASSIFICATION	optimization
WITHOUT_CLASSIFICATION	optimization optimization
WITHOUT_CLASSIFICATION	re-snapshot
WITHOUT_CLASSIFICATION	for convenience to save some lookups
WITHOUT_CLASSIFICATION	note this is not updated when properties are fetched lazily!
WITHOUT_CLASSIFICATION	memory optimization
WITHOUT_CLASSIFICATION	use the id value of a newly instantiated instance as the unsaved-value
WITHOUT_CLASSIFICATION	copied from session
WITHOUT_CLASSIFICATION	this should not happen since the dtd prevents it
WITHOUT_CLASSIFICATION	joinprocessor needs to know if the where clause fragment came from a dynamic filter or not so it can put the where clause fragment in the right place in the sql ast. 'hasfiltercondition' keeps track of that fact.
WITHOUT_CLASSIFICATION	the current join represents the join between a many-to-many association table and its "target" table. here we need to apply any additional filters defined specifically on the many-to-many
WITHOUT_CLASSIFICATION	check basic level one nullablilty
WITHOUT_CLASSIFICATION	values is not null and is checkable we'll look deeper
WITHOUT_CLASSIFICATION	for non null args check for components and elements containing components
WITHOUT_CLASSIFICATION	cache the hashcode
WITHOUT_CLASSIFICATION	persistent collections may have components
WITHOUT_CLASSIFICATION	check for all components values in the collection
WITHOUT_CLASSIFICATION	will check current level if some of them are not null or sublevels if they exist
WITHOUT_CLASSIFICATION	do the test
WITHOUT_CLASSIFICATION	if its an uninitialized proxy it can't be transient
WITHOUT_CLASSIFICATION	unwrap it
WITHOUT_CLASSIFICATION	see if the entity is already bound to this session if not look at the entity identifier and assume that the entity is persistent if the id is not "unsaved" (that is we rely on foreign keys to keep database integrity)
WITHOUT_CLASSIFICATION	an unfetched association can only point to an entity that already exists in the db
WITHOUT_CLASSIFICATION	let the interceptor inspect the instance to decide
WITHOUT_CLASSIFICATION	let the persister inspect the instance to decide
WITHOUT_CLASSIFICATION	we use the assumed value if there is one to avoid hitting the database
WITHOUT_CLASSIFICATION	hit the database after checking the session cache for a snapshot
WITHOUT_CLASSIFICATION	context-entity-identifier returns null explicitly if the entity is not associated with the persistence context so make some deeper checks
WITHOUT_CLASSIFICATION	int count = 0
WITHOUT_CLASSIFICATION	the first key found after the given key
WITHOUT_CLASSIFICATION	checkforend = false
WITHOUT_CLASSIFICATION	count++
WITHOUT_CLASSIFICATION	end of array start filling again from start
WITHOUT_CLASSIFICATION	we ran out of keys to try
WITHOUT_CLASSIFICATION	first element of array is reserved for the actual instance we are loading!
WITHOUT_CLASSIFICATION	the first id found after the given id
WITHOUT_CLASSIFICATION	we ran out of ids to try
WITHOUT_CLASSIFICATION	look for existing collection as part of the persistence context
WITHOUT_CLASSIFICATION	ignore this row of results! note the early exit
WITHOUT_CLASSIFICATION	initialize this collection
WITHOUT_CLASSIFICATION	create one
WITHOUT_CLASSIFICATION	warning can cause a recursive calls! (proxy initialization)
WITHOUT_CLASSIFICATION	there were no queued additions and the role has a cache
WITHOUT_CLASSIFICATION	and this is not a forced initialization during flush
WITHOUT_CLASSIFICATION	some filters affecting the collection are enabled on the session so do not do the put into the cache.
WITHOUT_CLASSIFICATION	cleanup code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	loading collection xrefs ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	collection load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	simple cache of param metadata based on query string. ideally the original "user-supplied query" string should be used to retreive this metadata (i.e. not the para-list-expanded query string) to avoid unnecessary cache entries. used solely for caching param metadata for native-sql queries see getsqlparametermetadata() for a discussion as to why
WITHOUT_CLASSIFICATION	the cache of the actual plans
WITHOUT_CLASSIFICATION	package
WITHOUT_CLASSIFICATION	package
WITHOUT_CLASSIFICATION	assumes that types are all of span 1
WITHOUT_CLASSIFICATION	for native-sql queries the param metadata is determined outside any relation to a query plan because query plan creation and/or retreival for a native-sql query depends on all of the return types having been set which might not be the case up-front when param metadata would be most useful
WITHOUT_CLASSIFICATION	don't care
WITHOUT_CLASSIFICATION	recognition code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	don't care
WITHOUT_CLASSIFICATION	note firstrow is zero-based
WITHOUT_CLASSIFICATION	break the outer loop !!!
WITHOUT_CLASSIFICATION	named parameter
WITHOUT_CLASSIFICATION	could be either an ordinal or jpa-positional parameter
WITHOUT_CLASSIFICATION	a peek ahead showed this as an jpa-positional parameter
WITHOUT_CLASSIFICATION	make sure this "name" is an integral
WITHOUT_CLASSIFICATION	pre-determine and cache the hashcode
WITHOUT_CLASSIFICATION	perform the actual work
WITHOUT_CLASSIFICATION	if everything went ok commit the transaction and close the obtained connection handle
WITHOUT_CLASSIFICATION	at some point the processing went bad so we need to 1) make sure the connection handle gets released 2) try to cleanup the jta context as much as possible
WITHOUT_CLASSIFICATION	finally handle the exception
WITHOUT_CLASSIFICATION	a "detached" collection that belonged to a different entity
WITHOUT_CLASSIFICATION	saveorupdatecopy() is deprecated!
WITHOUT_CLASSIFICATION	collectionpersister should not be null but we don't want to throw an exception if it is null
WITHOUT_CLASSIFICATION	otherwise a null or brand new collection this will also (inefficiently) handle arrays which have no snapshot so we can't do any better processarrayornewcollection(collection type)
WITHOUT_CLASSIFICATION	a "detached" collection that originally belonged to the same entity
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	force a substitution!
WITHOUT_CLASSIFICATION	the user requested a "greater" (i.e. more restrictive) form of pessimistic lock
WITHOUT_CLASSIFICATION	the database now holds a lock + the object is flushed from the cache so release the soft lock
WITHOUT_CLASSIFICATION	now update the object .. has to be outside the main if block above (because of collections)
WITHOUT_CLASSIFICATION	search for collections by reachability updating their role. we don't want to touch collections reachable from a deleted object
WITHOUT_CLASSIFICATION	this is a situation where the entity id is assigned by a post-insert generator and was saved outside the transaction forcing it to be delayed
WITHOUT_CLASSIFICATION	note we need to do the wrap here even if its not "dirty" because collections need wrapping but changes to _them_ don't dirty the container. also for versioned data we need to wrap before calling searchfordirtycollections
WITHOUT_CLASSIFICATION	grab its state saved at deletion
WITHOUT_CLASSIFICATION	grab its current state
WITHOUT_CLASSIFICATION	schedule the update note that we intentionally do _not_ pass in currentpersistentstate!
WITHOUT_CLASSIFICATION	substitutes into values by side-effect
WITHOUT_CLASSIFICATION	give the interceptor a chance to process property values if the properties were modified by the interceptor we need to set them back to the object
WITHOUT_CLASSIFICATION	compare to cached state (ignoring collections unless versioned)
WITHOUT_CLASSIFICATION	if it was dirtied by a collection only
WITHOUT_CLASSIFICATION	increment the version number (if necessary)
WITHOUT_CLASSIFICATION	check nullability but do not perform command execute we'll use scheduled updates for that.
WITHOUT_CLASSIFICATION	give the interceptor a chance to modify property values
WITHOUT_CLASSIFICATION	now we might need to recalculate the dirtyproperties array
WITHOUT_CLASSIFICATION	use the current version
WITHOUT_CLASSIFICATION	interceptor returned null so do the dirtycheck ourself if possible
WITHOUT_CLASSIFICATION	object loaded by update()
WITHOUT_CLASSIFICATION	dirty check against the usual snapshot of the entity
WITHOUT_CLASSIFICATION	dirty check against the database snapshot if possible/necessary
WITHOUT_CLASSIFICATION	the interceptor handled the dirty checking
WITHOUT_CLASSIFICATION	even process null collections
WITHOUT_CLASSIFICATION	get the id from the object
WITHOUT_CLASSIFICATION	always do an insert and let it fail by constraint violation
WITHOUT_CLASSIFICATION	what is the version on the database?
WITHOUT_CLASSIFICATION	/ hhh-2378
WITHOUT_CLASSIFICATION	will result in a sql update
WITHOUT_CLASSIFICATION	else do nothing (don't even reassociate object!)
WITHOUT_CLASSIFICATION	no existing row - do an insert
WITHOUT_CLASSIFICATION	refresh() does not pass an entityname
WITHOUT_CLASSIFICATION	do not return a proxy! (this option indicates we are initializing a proxy)
WITHOUT_CLASSIFICATION	return a proxy if appropriate
WITHOUT_CLASSIFICATION	return existing object or initialized proxy (unless deleted)
WITHOUT_CLASSIFICATION	return new uninitialized proxy
WITHOUT_CLASSIFICATION	this object was already loaded
WITHOUT_CLASSIFICATION	entity was found in second-level cache
WITHOUT_CLASSIFICATION	make it circular-reference safe
WITHOUT_CLASSIFICATION	intializes result by side-effect
WITHOUT_CLASSIFICATION	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ pre-flushing section ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	some statistics
WITHOUT_CLASSIFICATION	safe from concurrent modification because of how entrylist() is implemented on identitymap
WITHOUT_CLASSIFICATION	initialize dirty flags for arrays + collections with composite elements and reset reached doupdate etc.
WITHOUT_CLASSIFICATION	among other things updatereachables() will recursively load all collections that are moving roles. this might cause entities to be loaded.
WITHOUT_CLASSIFICATION	so this needs to be safe from concurrent modification problems. it is safe because of how identitymap implements entryset()
WITHOUT_CLASSIFICATION	update the status of the object and if necessary schedule an update
WITHOUT_CLASSIFICATION	schedule updates to collections
WITHOUT_CLASSIFICATION	we need to lock the collection caches before executing entity inserts/updates in order to account for bidi associations
WITHOUT_CLASSIFICATION	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ post-flushing section ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	the database has changed now so the subselect results need to be invalidated
WITHOUT_CLASSIFICATION	if the collection is dereferenced remove from the session cache iter.remove() does not work since the entryset is not backed by the set
WITHOUT_CLASSIFICATION	otherwise recreate the mapping between the collection and its key
WITHOUT_CLASSIFICATION	get a snapshot
WITHOUT_CLASSIFICATION	package-private
WITHOUT_CLASSIFICATION	package-private
WITHOUT_CLASSIFICATION	key is an entity involved with the operation performed by the listener value is a flag indicating if the listener explicitly operates on the entity
WITHOUT_CLASSIFICATION	early exit!!!
WITHOUT_CLASSIFICATION	ie. the entity came in from update()
WITHOUT_CLASSIFICATION	before any callbacks etc so subdeletions see that this deletion happened first
WITHOUT_CLASSIFICATION	ensures that containing deletions happen before sub-deletions
WITHOUT_CLASSIFICATION	typefactory.deepcopy( currentstate proptypes persister.getpropertyupdateability() deletedstate session )
WITHOUT_CLASSIFICATION	cascade-delete to collections before the collection owner is deleted
WITHOUT_CLASSIFICATION	cascade-delete to many-to-one after the parent was deleted
WITHOUT_CLASSIFICATION	if it is an initialized proxy let cascade handle it later on
WITHOUT_CLASSIFICATION	assign the requested id to the proxy before reassociating the proxy
WITHOUT_CLASSIFICATION	an uninitialized proxy noop don't even need to return an id since it is never a save()
WITHOUT_CLASSIFICATION	initialize properties of the event
WITHOUT_CLASSIFICATION	return the id in the event object
WITHOUT_CLASSIFICATION	transient or deleted
WITHOUT_CLASSIFICATION	use the id assigned to the instance
WITHOUT_CLASSIFICATION	assume this is a newly instantiated transient object which should be saved rather than updated
WITHOUT_CLASSIFICATION	this is a transient object with existing persistent state not loaded by the session
WITHOUT_CLASSIFICATION	a collection loaded in the current session can not possibly be the collection belonging to the entity passed to update()
WITHOUT_CLASSIFICATION	cachedstate
WITHOUT_CLASSIFICATION	assume true since we don't really know and it doesn't matter
WITHOUT_CLASSIFICATION	a "detached" collection!
WITHOUT_CLASSIFICATION	if the collection belonged to a different entity clean up the existing state of the collection
WITHOUT_CLASSIFICATION	log.debug( "calling onload()" )
WITHOUT_CLASSIFICATION	early exit!
WITHOUT_CLASSIFICATION	note performexecutions() clears all collectionxxxxtion collections (the collection actions) in the session
WITHOUT_CLASSIFICATION	if no array holder we found an unwrappered array (this can't occur because we now always call wrap() before getting to here) return (ah==null) ? true searchfordirtycollections(ah type)
WITHOUT_CLASSIFICATION	if not wrappered yet its dirty (this can't occur because we now always call wrap() before getting to here) return ( ! (obj instanceof persistentcollection) ) ? true searchfordirtycollections( (persistentcollection) obj type )
WITHOUT_CLASSIFICATION	we need to check even if it was not initialized because of delayed adds!
WITHOUT_CLASSIFICATION	note early exit!
WITHOUT_CLASSIFICATION	find any entities that are still transient after retry
WITHOUT_CLASSIFICATION	early exit!
WITHOUT_CLASSIFICATION	check the persistence context for an entry relating to this entity to be merged
WITHOUT_CLASSIFICATION	we have specialized case of a detached entity from the perspective of the merge operation. specifically we have an incoming entity instance which has a corresponding entry in the current persistence context but registered under a different entity instance
WITHOUT_CLASSIFICATION	deleted
WITHOUT_CLASSIFICATION	before cascade!
WITHOUT_CLASSIFICATION	cascade first so that all unsaved objects get their copy created before we actually copy cascadeonmerge(event persister entity copycache cascades.cascade_before_merge)
WITHOUT_CLASSIFICATION	this bit is only really absolutely necessary for handling requestedid but is also good if we merge multiple object graphs since it helps ensure uniqueness
WITHOUT_CLASSIFICATION	continue we'll find out if it ends up not getting saved later
WITHOUT_CLASSIFICATION	cascade first so that all unsaved objects get their copy created before we actually copy
WITHOUT_CLASSIFICATION	check that entity id = requestedid
WITHOUT_CLASSIFICATION	before cascade!
WITHOUT_CLASSIFICATION	we got here because we assumed that an instance with an assigned id was detached when it was really persistent
WITHOUT_CLASSIFICATION	cascade first so that all unsaved objects get their copy created before we actually copy
WITHOUT_CLASSIFICATION	copyvalues works by reflection so explicitly mark the entity instance dirty
WITHOUT_CLASSIFICATION	early exit
WITHOUT_CLASSIFICATION	source.getbatcher().executebatch() found another way to ensure that all batched joined inserts have been executed
WITHOUT_CLASSIFICATION	substitutes into values by side-effect
WITHOUT_CLASSIFICATION	now done in entityidentityinsertaction persister.setidentifier( entity id source.getentitymode() )
WITHOUT_CLASSIFICATION	source.getpersistencecontext().removenonexist( new entitykey( id persister source.getentitymode() ) )
WITHOUT_CLASSIFICATION	keep the existing version number in the case of replicate!
WITHOUT_CLASSIFICATION	cascade-save to many-to-one before the parent is saved
WITHOUT_CLASSIFICATION	pass this as an argument only to avoid double looking
WITHOUT_CLASSIFICATION	the object is persistent
WITHOUT_CLASSIFICATION	the entity is associated with the session so check its status
WITHOUT_CLASSIFICATION	do nothing for persistent instances
WITHOUT_CLASSIFICATION	ie. e.status==deleted
WITHOUT_CLASSIFICATION	the object is transient or detached
WITHOUT_CLASSIFICATION	note early exit!
WITHOUT_CLASSIFICATION	private constructor - stops checkstyle from complaining.
WITHOUT_CLASSIFICATION	first try to find a matching constructor accepting a violatedconstraintnameextracter param
WITHOUT_CLASSIFICATION	eat it and try next
WITHOUT_CLASSIFICATION	otherwise try to use the no-arg constructor
WITHOUT_CLASSIFICATION	oracle sql-state code for deadlock
WITHOUT_CLASSIFICATION	collectionpropertymapping processes everything except 'index'.
WITHOUT_CLASSIFICATION	remove initial " "
WITHOUT_CLASSIFICATION	remove initial " and "
WITHOUT_CLASSIFICATION	beforeclasstokens.add("new") definitely don't have this!!
WITHOUT_CLASSIFICATION	notafterclasstokens.add("")
WITHOUT_CLASSIFICATION	just especially for the trivial collection filter
WITHOUT_CLASSIFICATION	update last non-whitespace token if necessary
WITHOUT_CLASSIFICATION	select-range is terminated by declaration of "from"
WITHOUT_CLASSIFICATION	scan for next non-whitespace token
WITHOUT_CLASSIFICATION	note this!!
WITHOUT_CLASSIFICATION	error message constants.
WITHOUT_CLASSIFICATION	handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	semantic action handling ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	handle collection-fiter compilation. important note this is modifying the input (hql) tree not the output tree!
WITHOUT_CLASSIFICATION	show the modified ast.
WITHOUT_CLASSIFICATION	create a parameter specification for the collection filter
WITHOUT_CLASSIFICATION	use the delegate.
WITHOUT_CLASSIFICATION	use the delegate.
WITHOUT_CLASSIFICATION	get the names of the columns used to link between the collection owner and the collection elements.
WITHOUT_CLASSIFICATION	the path ast should be a dotnode and it should have been evaluated already.
WITHOUT_CLASSIFICATION	tell the dot node about the join type.
WITHOUT_CLASSIFICATION	re-arrange the tree so that the collection function is the root and the lhs is the path.
WITHOUT_CLASSIFICATION	don't forget to resolve the argument! resolve the collection function now.
WITHOUT_CLASSIFICATION	resolve everything up to this dot but don't resolve the placeholders yet.
WITHOUT_CLASSIFICATION	should mean that no such property was found
WITHOUT_CLASSIFICATION	was there an explicit select expression?
WITHOUT_CLASSIFICATION	attach any mapping-defined "order by" fragments
WITHOUT_CLASSIFICATION	use the explicitly declared select expression determine the return types indicated by each select token
WITHOUT_CLASSIFICATION	after that process the joins. invoke a delegate to do the work as this is farily complex.
WITHOUT_CLASSIFICATION	make #@%$^#^&# sure no alias is applied to the table name
WITHOUT_CLASSIFICATION	we need to generate ids as part of this bulk insert. note that this is only supported for sequence-style generators and post-insert-style generators basically only in-db generators
WITHOUT_CLASSIFICATION	use the delegate.
WITHOUT_CLASSIFICATION	we need to seed the version value as part of this bulk insert
WITHOUT_CLASSIFICATION	we need to wrtap the param in a cast()
WITHOUT_CLASSIFICATION	this is called when it's time to fully resolve a path expression.
WITHOUT_CLASSIFICATION	generate implicit joins only if necessary.
WITHOUT_CLASSIFICATION	notify the from element that it is being referenced by the select.
WITHOUT_CLASSIFICATION	turn off includesubclasses on all fromelements.
WITHOUT_CLASSIFICATION	create the node initially with the param name so that it shows appropriately in the "original text" attribute
WITHOUT_CLASSIFICATION	use the delegate resolve identifiers as from element aliases.
WITHOUT_CLASSIFICATION	select clauses for insert statements should alwasy be treated as shallow
WITHOUT_CLASSIFICATION	no need to even collect this information if the persister is considered multi-table
WITHOUT_CLASSIFICATION	make sure that the persister is versioned
WITHOUT_CLASSIFICATION	handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	use the delegate.
WITHOUT_CLASSIFICATION	--commented out by inspection (12/11/04 1056 am) int getwarningcount()
WITHOUT_CLASSIFICATION	alias references and identifiers use the same node class.
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	make a new one
WITHOUT_CLASSIFICATION	just do the regular thing if you can't find the ctor your ast must have default ctor to use this.
WITHOUT_CLASSIFICATION	initialize sql nodes here.
WITHOUT_CLASSIFICATION	semantic action processing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	if template is null we just write the function out as it appears in the hql statement
WITHOUT_CLASSIFICATION	this function has a template -> redirect output and catch the arguments
WITHOUT_CLASSIFICATION	--- inner classes (moved here from sql-gen.g) ---
WITHOUT_CLASSIFICATION	check two "adjecent" nodes at the top of the from-clause tree
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	these are just two unrelated table references
WITHOUT_CLASSIFICATION	again both should be fromelements
WITHOUT_CLASSIFICATION	note firstrow is zero-based
WITHOUT_CLASSIFICATION	right represents a joins originating from left or both right and left reprersent joins originating from the same fromelement
WITHOUT_CLASSIFICATION	check a set of parent/child nodes in the from-clause tree to determine if a comma is required between them
WITHOUT_CLASSIFICATION	right represents a joins originating from left
WITHOUT_CLASSIFICATION	all clear
WITHOUT_CLASSIFICATION	ignore the token class name parameter and use a specific token class.
WITHOUT_CLASSIFICATION	overriden to avoid system.exit
WITHOUT_CLASSIFICATION	overriden to avoid system.exit
WITHOUT_CLASSIFICATION	remember that ordinal parameters numbers are 1-based!!!
WITHOUT_CLASSIFICATION	don't care about other param types here just those explicitly user-defined
WITHOUT_CLASSIFICATION	if the query is already compiled skip the compilation.
WITHOUT_CLASSIFICATION	remember the parameters for the compilation.
WITHOUT_CLASSIFICATION	phase 1 parse the hql into an ast.
WITHOUT_CLASSIFICATION	phase 2 analyze the hql ast and produce an sql ast.
WITHOUT_CLASSIFICATION	phase 3 generate the sql.
WITHOUT_CLASSIFICATION	we do not actually propogate antlrexceptions as a cause so log it here for diagnostic purposes
WITHOUT_CLASSIFICATION	we do not actually propogate antlrexceptions as a cause so log it here for diagnostic purposes
WITHOUT_CLASSIFICATION	only needed during compilation phase
WITHOUT_CLASSIFICATION	transform the tree.
WITHOUT_CLASSIFICATION	parse the query string into an hql ast.
WITHOUT_CLASSIFICATION	delegate to the queryloader
WITHOUT_CLASSIFICATION	delegate to the queryloader
WITHOUT_CLASSIFICATION	delegate to the queryloader
WITHOUT_CLASSIFICATION	note ( max - 1 ) because first is zero-based while max is not
WITHOUT_CLASSIFICATION	-- package local methods for the queryloader delegate --
WITHOUT_CLASSIFICATION	if there are no collection fetches then no further checks are needed
WITHOUT_CLASSIFICATION	a shallow query is ok (although technically there should be no fetching here)
WITHOUT_CLASSIFICATION	should be the first but just to be safe
WITHOUT_CLASSIFICATION	use the delegate.
WITHOUT_CLASSIFICATION	use the delegate.
WITHOUT_CLASSIFICATION	impl note allows multiple collection fetches as long as the entire fecthed graph still "points back" to a single root entity for return
WITHOUT_CLASSIFICATION	otherwise we have a non-scalar select with defined collection fetch(es). make sure that there is only a single root entity in the return (no tuples)
WITHOUT_CLASSIFICATION	this is not strictly true. we actually just need to make sure that it is ordered by root-entity pk and that that order-by comes before any non-root-entity ordering
WITHOUT_CLASSIFICATION	paramtranslations = new parametertranslationsimpl( collectedparameterspecifications )
WITHOUT_CLASSIFICATION	we are already processing a dot-structure
WITHOUT_CLASSIFICATION	igndore it
WITHOUT_CLASSIFICATION	we are now at a new tree level
WITHOUT_CLASSIFICATION	[jsd] the fix for hhh-558
WITHOUT_CLASSIFICATION	if the token can tell us if it could be an identifier
WITHOUT_CLASSIFICATION	and the expected token type was an identifier then
WITHOUT_CLASSIFICATION	use the token as an identifier.
WITHOUT_CLASSIFICATION	add the token to the ast.
WITHOUT_CLASSIFICATION	(not (eq a b) ) => (ne a b)
WITHOUT_CLASSIFICATION	(not (ne a b) ) => (eq a b)
WITHOUT_CLASSIFICATION	(not (lt a b) ) => (ge a b)
WITHOUT_CLASSIFICATION	(not (ge a b) ) => (lt a b)
WITHOUT_CLASSIFICATION	(not (le a b) ) => (gt a b)
WITHOUT_CLASSIFICATION	(not (like a b) ) => (not_like a b)
WITHOUT_CLASSIFICATION	(not (not_like a b) ) => (like a b)
WITHOUT_CLASSIFICATION	(not (is_not_null a b) ) => (is_null a b)
WITHOUT_CLASSIFICATION	(not (between a b) ) => (not_between a b)
WITHOUT_CLASSIFICATION	initialize the error handling delegate.
WITHOUT_CLASSIFICATION	overriden to avoid system.exit
WITHOUT_CLASSIFICATION	if if otherwise handle the error normally.
WITHOUT_CLASSIFICATION	(not (not_between a b) ) => (between a b)
WITHOUT_CLASSIFICATION	this can never happen because this rule will always eliminate the child not.case notreturn x.getfirstchild() (not (not x) ) => (x)
WITHOUT_CLASSIFICATION	just add a 'not' parent.
WITHOUT_CLASSIFICATION	(eq null b) => (is_null b)
WITHOUT_CLASSIFICATION	(eq a null) => (is_null a)
WITHOUT_CLASSIFICATION	note because we're using astutil.createparent() the tree must be created from the bottom up. is empty x => (exists (query (select_from (from x) ) ) )
WITHOUT_CLASSIFICATION	add not if it's negated.
WITHOUT_CLASSIFICATION	create nodes that track line and column number.
WITHOUT_CLASSIFICATION	case 1 multi token keywords group by and order by the next token ( lt(2) ) should be 'by' otherwise this is just an ident.
WITHOUT_CLASSIFICATION	case 2 the current token is after from and before '.'.
WITHOUT_CLASSIFICATION	this handles hhh-354 where there is a strange property name in a where clause. if the lookahead contains a dot then something that isn't an ident
WITHOUT_CLASSIFICATION	see if the second lookahed token can be an identifier.
WITHOUT_CLASSIFICATION	set it!
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	strip the " where "
WITHOUT_CLASSIFICATION	don't really know all the codes required to adequately decipher returned jdbc exceptions here. simply allow the failure to be eaten and the subsequent insert-selects/deletes should fail
WITHOUT_CLASSIFICATION	at the very least cleanup the data )
WITHOUT_CLASSIFICATION	first save off the pertinent ids as the return value
WITHOUT_CLASSIFICATION	jdbc params are 1-based
WITHOUT_CLASSIFICATION	jdbc params are 1-based
WITHOUT_CLASSIFICATION	start performing the updates
WITHOUT_CLASSIFICATION	first save off the pertinent ids saving the number of pertinent ids for return
WITHOUT_CLASSIFICATION	start performing the deletes
WITHOUT_CLASSIFICATION	otherwise everything ok.
WITHOUT_CLASSIFICATION	visit width-first then depth
WITHOUT_CLASSIFICATION	if the types report logical equivalence return true
WITHOUT_CLASSIFICATION	otherwise perform a "deep equivalence" check
WITHOUT_CLASSIFICATION	if there is no where node make one.
WITHOUT_CLASSIFICATION	inject the where after the parent
WITHOUT_CLASSIFICATION	never include subclasses for implied from elements.
WITHOUT_CLASSIFICATION	moved here from selectclause [jsd]
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	use the table fromelement and the property name to get the array of column names.
WITHOUT_CLASSIFICATION	set the attributes of the property reference expression.
WITHOUT_CLASSIFICATION	if the uresolved property path isn't set yet just use the property name.
WITHOUT_CLASSIFICATION	the 'from element' that the property is in.
WITHOUT_CLASSIFICATION	prepare the left hand side and get the data type.
WITHOUT_CLASSIFICATION	prepare the left hand side and get the data type.
WITHOUT_CLASSIFICATION	if this dot has already been resolved stop now.
WITHOUT_CLASSIFICATION	if there is no data type for this node and we're at the end of the path (top most dot node) then this might be a java constant.
WITHOUT_CLASSIFICATION	the property is a collection
WITHOUT_CLASSIFICATION	the property is a component
WITHOUT_CLASSIFICATION	the property is another class..
WITHOUT_CLASSIFICATION	otherwise this is a primitive type.
WITHOUT_CLASSIFICATION	foo.bars.size (also handles deprecated stuff like foo.bars.maxelement for backwardness)
WITHOUT_CLASSIFICATION	this 'dot' expression now refers to the resulting from element.
WITHOUT_CLASSIFICATION	always add the collection's query spaces.
WITHOUT_CLASSIFICATION	in non-select queries the only time we should need to join is if we are in a subquery from clause
WITHOUT_CLASSIFICATION	this is the regression style determination which matches the logic of the classic translator
WITHOUT_CLASSIFICATION	this 'dot' expression now refers to the resulting from element.
WITHOUT_CLASSIFICATION	even though we might find a pre-existing element by join path we may not be able to reuse it
WITHOUT_CLASSIFICATION	note addduplicatealias() already performs nullness checks on the alias.
WITHOUT_CLASSIFICATION	if the from-clauses are the same we can be a little more aggressive in terms of what we reuse
WITHOUT_CLASSIFICATION	again null != null here
WITHOUT_CLASSIFICATION	if this is an implied join in a from element then use the impled join type which is part of the tree parser's state (set by the gramamar actions).
WITHOUT_CLASSIFICATION	otherwise (subquery case) dont reuse the fromelement if we are processing the from-clause of the subquery
WITHOUT_CLASSIFICATION	we know only the lhs-hand type so use that
WITHOUT_CLASSIFICATION	the referenced node text is the special 'id'
WITHOUT_CLASSIFICATION	only the identifier property field name can be a reference to the associated entity's pk
WITHOUT_CLASSIFICATION	special shortcut for id properties skip the join! this must only occur at the _end_ of a path expression
WITHOUT_CLASSIFICATION	append the new property name onto the unresolved path.
WITHOUT_CLASSIFICATION	if the lhs is a collection use collectionpropertymapping
WITHOUT_CLASSIFICATION	tell the destination fromelement to 'includesubclasses'.
WITHOUT_CLASSIFICATION	use theta style (for regression) move the node up after the origin node.
WITHOUT_CLASSIFICATION	don't resolve the node again.
WITHOUT_CLASSIFICATION	for expected parameter type injection we expect that the lhs represents some form of property ref and that the children of the in-list represent one-or-more params.
WITHOUT_CLASSIFICATION	we need to strip off the embedded parens so that sql-gen does not double these up
WITHOUT_CLASSIFICATION	we have something like "? [op] rhs"
WITHOUT_CLASSIFICATION	we have something like "lhs [op] ?"
WITHOUT_CLASSIFICATION	we know only the rhs-hand type so use that
WITHOUT_CLASSIFICATION	handle the (assumed) valid cases #1 - the only valid datetime addition synatx is one or the other is a datetime (but not both)
WITHOUT_CLASSIFICATION	one or the other needs to be a datetime for us to get into this method in the first place
WITHOUT_CLASSIFICATION	#3 - note that this is also true of "datetime - param"
WITHOUT_CLASSIFICATION	#2
WITHOUT_CLASSIFICATION	generate the inner join -- the elements need to be joined to the collection they are in.
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	the 'from element' that represents the elements of the collection.
WITHOUT_CLASSIFICATION	add the condition to the join sequence that qualifies the indexed element.
WITHOUT_CLASSIFICATION	sometimes use the element table alias sometimes use the umm collection table alias (many to many)
WITHOUT_CLASSIFICATION	now set the text for this node. it should be the element columns.
WITHOUT_CLASSIFICATION	get the function return value type based on the type of the first argument.
WITHOUT_CLASSIFICATION	this will call initialize(tok)!
WITHOUT_CLASSIFICATION	mutation depends on the types of nodes invloved
WITHOUT_CLASSIFICATION	"pass along" our initial embedded parameter node(s) to the first generated sql fragment so that it can be handled later for parameter binding
WITHOUT_CLASSIFICATION	logic operators by definition resolve to booleans
WITHOUT_CLASSIFICATION	generated select expressions are already resolved nothing to do.
WITHOUT_CLASSIFICATION	the path may be a reference to an alias defined in the parent query.
WITHOUT_CLASSIFICATION	the hql class alias refers to the class name.
WITHOUT_CLASSIFICATION	associate the table alias with the element.
WITHOUT_CLASSIFICATION	try the parent fromclause
WITHOUT_CLASSIFICATION	add the new node to the map so that we don't create it twice.
WITHOUT_CLASSIFICATION	make sure that all from elements registered with this from clause are actually in the ast.
WITHOUT_CLASSIFICATION	invoke setscalarcolumntext on each constructor argument.
WITHOUT_CLASSIFICATION	collect the select expressions skip the first child because it is the class name.
WITHOUT_CLASSIFICATION	return an empty type array
WITHOUT_CLASSIFICATION	constructors are always considered scalar results.
WITHOUT_CLASSIFICATION	this is the exception returned by reflecthelper.getconstructor() if it cannot locate an appropriate constructor
WITHOUT_CLASSIFICATION	if there is no order by make one
WITHOUT_CLASSIFICATION	find the where if there is no where find the from
WITHOUT_CLASSIFICATION	now inject the newly built order by into the tree
WITHOUT_CLASSIFICATION	parametercontainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	logic operators by definition resolve to boolean.
WITHOUT_CLASSIFICATION	render the identifier select fragment using the table alias.
WITHOUT_CLASSIFICATION	class names in the from clause result in a joinsequence (the old fromparser does this).
WITHOUT_CLASSIFICATION	for many-to-many joins use the tablename from the queryable collection for the default text.
WITHOUT_CLASSIFICATION	otherwise use the property mapping.
WITHOUT_CLASSIFICATION	should be safe to only ever expect entitypersister references here
WITHOUT_CLASSIFICATION	if the property is a special collection property name return a collectionpropertymapping.
WITHOUT_CLASSIFICATION	collection of components.
WITHOUT_CLASSIFICATION	make sure the lhs is "assignable"
WITHOUT_CLASSIFICATION	false indicates to not generate parens around the assignment
WITHOUT_CLASSIFICATION	register the fromelement with the from clause now that we have the names and aliases.
WITHOUT_CLASSIFICATION	currently allowed
WITHOUT_CLASSIFICATION	hhh-276 implied joins in a subselect where clause - the destination needs to be added to the destination's from clause. not sure if this is will fix everything but it works.
WITHOUT_CLASSIFICATION	return classalias == null ? classname classalias
WITHOUT_CLASSIFICATION	this is an explicit from element.
WITHOUT_CLASSIFICATION	parametercontainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	fetch can't be used with scroll() or iterate().
WITHOUT_CLASSIFICATION	if it's not implied or it is implied and it's a many to many join where the target wasn't found.
WITHOUT_CLASSIFICATION	since this is an explicit from element it can't be implied in the from clause.
WITHOUT_CLASSIFICATION	do nothing eplicit from elements are always in the projection list.
WITHOUT_CLASSIFICATION	propertyname refers to something like collection.size
WITHOUT_CLASSIFICATION	property name is a sub-path of a component
WITHOUT_CLASSIFICATION	always add the collection's query spaces.
WITHOUT_CLASSIFICATION	nothing to do even if the operand is a parameter no way we could infer an appropriate expected type here
WITHOUT_CLASSIFICATION	logic operators by definition resolve to booleans
WITHOUT_CLASSIFICATION	dotnode uses null here
WITHOUT_CLASSIFICATION	we represent a from-clause alias
WITHOUT_CLASSIFICATION	we are the lhs of the dot representing a naked comp-prop-ref
WITHOUT_CLASSIFICATION	we are the rhs of the dot representing a naked comp-prop-ref
WITHOUT_CLASSIFICATION	we represent a naked (simple) prop-ref
WITHOUT_CLASSIFICATION	early exit!!! return so the resolve call explicitly coming from dotnode can resolve this
WITHOUT_CLASSIFICATION	assume this ident's text does not refer to a property on the given persister
WITHOUT_CLASSIFICATION	just ignore it for now it'll get resolved later
WITHOUT_CLASSIFICATION	this is not actually a constant but a reference to from element.
WITHOUT_CLASSIFICATION	check to see if our "proppath" actually represents a property on the persister
WITHOUT_CLASSIFICATION	these pieces are needed for usage in select clause
WITHOUT_CLASSIFICATION	used to set the type of the parent dot node
WITHOUT_CLASSIFICATION	assume we do not refer to a property on the given persister
WITHOUT_CLASSIFICATION	assume we do not refer to a property on the given persister
WITHOUT_CLASSIFICATION	naked property-refs cannot be used with an aliased from element
WITHOUT_CLASSIFICATION	this piece is needed for usage in select clause
WITHOUT_CLASSIFICATION	do not over-write the column text as that has already been "rendered" during resolve
WITHOUT_CLASSIFICATION	for some reason the antlr.commonast initialization routines force this method to get called twice. the first time with an empty string
WITHOUT_CLASSIFICATION	look up class name using the first identifier in the path.
WITHOUT_CLASSIFICATION	add to the query spaces.
WITHOUT_CLASSIFICATION	if the from element isn't in the same clause create a new from element.
WITHOUT_CLASSIFICATION	this is the root level node. generate an explicit from clause at the root.
WITHOUT_CLASSIFICATION	correlated subqueries create 'special' implied from nodes because correlated subselects can't use an ansi-style join
WITHOUT_CLASSIFICATION	super-duper-classic-parser-regression-testing-mojo-magic
WITHOUT_CLASSIFICATION	a collection of entities
WITHOUT_CLASSIFICATION	a collection of components
WITHOUT_CLASSIFICATION	a collection of scalar elements
WITHOUT_CLASSIFICATION	according to both the ansi-sql and ejb3 specs trim can either take exactly one parameter or a variable number of parameters between 1 and 4. from the sql spec <trim function> = trim <left paren> <trim operands> <right paren> <trim operands> = [ [ <trim specification> ] [ <trim character> ] from ] <trim source> <trim specification> = leading | trailing | both if only <trim specification> is omitted both is assumed if <trim character> is omitted space is assumed
WITHOUT_CLASSIFICATION	don't include sub-classes for implied collection joins or subquery joins.
WITHOUT_CLASSIFICATION	treat explict from elements in sub-queries properly.
WITHOUT_CLASSIFICATION	( implied && dotnode.usethetastyleimplicitjoins ) ) {
WITHOUT_CLASSIFICATION	the "root from-element" in correlated subqueries do need this piece
WITHOUT_CLASSIFICATION	create the from element for the target (the elements of the collection).
WITHOUT_CLASSIFICATION	if the join is implied then don't include sub-classes on the element.
WITHOUT_CLASSIFICATION	overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	the associated entity is implied but it must be included in the from. the collection alias is the role.
WITHOUT_CLASSIFICATION	tag this node as a join. don't include subclasses in the join. this is a clollection join.
WITHOUT_CLASSIFICATION	get the class name of the associated entity.
WITHOUT_CLASSIFICATION	origin path implied columns classalias
WITHOUT_CLASSIFICATION	implied
WITHOUT_CLASSIFICATION	for implied many-to-many just add the end join.
WITHOUT_CLASSIFICATION	overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	the standard sql function name is current_timestamp
WITHOUT_CLASSIFICATION	this causes the factory to instantiate the desired class.
WITHOUT_CLASSIFICATION	private type[] sqlresulttypes
WITHOUT_CLASSIFICATION	frontbase has no known variation of a "select for update" syntax
WITHOUT_CLASSIFICATION	the types represented in the sql result set. @return the types represented in the sql result set.
WITHOUT_CLASSIFICATION	public type[] getsqlresulttypes() {return sqlresulttypes}
WITHOUT_CLASSIFICATION	first collect all of the select expressions. note this must be done before invoking setscalarcolumntext() because setscalarcolumntext() changes the ast!!!
WITHOUT_CLASSIFICATION	first allow the actual type to control the return value. (the actual underlying sqltype could actually be different)
WITHOUT_CLASSIFICATION	sqlresulttypelist.addall( constructorargumenttypelist )
WITHOUT_CLASSIFICATION	if the data type is not an association type it could not have been in the from clause.
WITHOUT_CLASSIFICATION	sqlresulttypelist.add( type )
WITHOUT_CLASSIFICATION	always add the type to the return type list.
WITHOUT_CLASSIFICATION	add the fetched entities
WITHOUT_CLASSIFICATION	get ready to start adding nodes.
WITHOUT_CLASSIFICATION	function support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	if there are any scalars (non-entities) selected render the select column aliases.
WITHOUT_CLASSIFICATION	sqlresulttypelist
WITHOUT_CLASSIFICATION	arraylist sqlresulttypelist
WITHOUT_CLASSIFICATION	sqlresulttypes = ( type[] ) sqlresulttypelist.toarray( new type[sqlresulttypelist.size()] )
WITHOUT_CLASSIFICATION	lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	todo
WITHOUT_CLASSIFICATION	add the type to the list of returned sqlresulttypes.
WITHOUT_CLASSIFICATION	generate an 2d array of column names the first dimension is parallel with the return types array. the second dimension is the list of column names for each type.
WITHOUT_CLASSIFICATION	generate the select expression.
WITHOUT_CLASSIFICATION	union subclass support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	skip 'distinct' and 'all' so we return the first expression node.
WITHOUT_CLASSIFICATION	create sql_token nodes for the columns.
WITHOUT_CLASSIFICATION	generate the property select tokens.
WITHOUT_CLASSIFICATION	get the function name node.
WITHOUT_CLASSIFICATION	method expressions in a select should always be considered scalar.
WITHOUT_CLASSIFICATION	if this is 'elements' then create a new from element.
WITHOUT_CLASSIFICATION	not elements(x)
WITHOUT_CLASSIFICATION	dialect function
WITHOUT_CLASSIFICATION	collection 'property function'
WITHOUT_CLASSIFICATION	if the constant is an ident figure out what it means
WITHOUT_CLASSIFICATION	ident is a class alias in the from.
WITHOUT_CLASSIFICATION	resolve to an identity column.
WITHOUT_CLASSIFICATION	otherwise it's a literal.
WITHOUT_CLASSIFICATION	the name of an entity class
WITHOUT_CLASSIFICATION	the class discriminator value
WITHOUT_CLASSIFICATION	chop off the rest of the tree.
WITHOUT_CLASSIFICATION	add a space before the display text.
WITHOUT_CLASSIFICATION	find or create the where clause
WITHOUT_CLASSIFICATION	child == parent.getfirstchild()
WITHOUT_CLASSIFICATION	find or create the where clause
WITHOUT_CLASSIFICATION	filter conditions need to be inserted before the hql where condition and the theta join node. this is because org.hibernate.loader.loader binds the filter parameters first then it binds all the hql query parameters see org.hibernate.loader.loader.processfilterparameters().
WITHOUT_CLASSIFICATION	put the filters node before the hql condition and theta joins
WITHOUT_CLASSIFICATION	add the current fragment to the filters node
WITHOUT_CLASSIFICATION	create a new theta_joins node as a parent of all filters
WITHOUT_CLASSIFICATION	put the theta_joins node before the hql condition after the filters.
WITHOUT_CLASSIFICATION	add the current fragment to the theta_joins node
WITHOUT_CLASSIFICATION	first try to get the persister using the given name directly.
WITHOUT_CLASSIFICATION	unable to locate it using this name
WITHOUT_CLASSIFICATION	if that didn't work try using the 'import' name.
WITHOUT_CLASSIFICATION	implicit joins use theta style (where pk = fk) explicit joins use join (after from)
WITHOUT_CLASSIFICATION	locate the registered function by the given name
WITHOUT_CLASSIFICATION	determine the type of the first argument
WITHOUT_CLASSIFICATION	use the dot node to emit the first column name. create the column names folled by the column aliases.
WITHOUT_CLASSIFICATION	note this simply constructs a "raw" sql_token representing the where fragment and injects this into the tree. this "works" however it is probably not the best long-term solution. at some point we probably want to apply an additional grammar to properly tokenize this where fragment into constituent parts focused on the operators embedded within the fragment.
WITHOUT_CLASSIFICATION	append the text of the current node.
WITHOUT_CLASSIFICATION	if the node has a first child recurse into the first child.
WITHOUT_CLASSIFICATION	if there is a second child (rhs) recurse into that child.
WITHOUT_CLASSIFICATION	iterate through the aliasjoinsequence pairs and generate sql token nodes.
WITHOUT_CLASSIFICATION	if the from element represents a join_fragment and it is a theta-style join convert its type from join_fragment to from_fragment
WITHOUT_CLASSIFICATION	this is used during sqlgenerator processing
WITHOUT_CLASSIFICATION	if there is a from fragment and the from element is an explicit then add the from part.
WITHOUT_CLASSIFICATION	&& stringhelper.isnotempty( frag )
WITHOUT_CLASSIFICATION	the from fragment will probably begin with ' '. remove this if it is present.
WITHOUT_CLASSIFICATION	this uses a pathexpressionparser but notice that compound paths are not valid only bare names and simple paths
WITHOUT_CLASSIFICATION	select p from p in class eg.person order by p.name p.address p
WITHOUT_CLASSIFICATION	the reason for this is sql doesn't let you sort by an expression you are not returning in the result set.
WITHOUT_CLASSIFICATION	named query parameter
WITHOUT_CLASSIFICATION	default mode
WITHOUT_CLASSIFICATION	queryjoinfragment join = q.createjoinfragment(usethetastylejoin)
WITHOUT_CLASSIFICATION	reset the dotcount (but not the path) after reset!
WITHOUT_CLASSIFICATION	after reset!
WITHOUT_CLASSIFICATION	we don't need to worry about any condition in the on clause here (tofromfragmentstring) since anything in the on condition is already applied to the whole query
WITHOUT_CLASSIFICATION	bit_length feels a bit broken to me. we have to cast to char in order to pass when a numeric value is supplied. but of course the answers given will be wildly different for these two datatypes. 1234.5678 will be 9 bytes as a char string but will be 8 or 16 bytes as a true numeric. jay nance 2006-09-22
WITHOUT_CLASSIFICATION	dotcount>=2
WITHOUT_CLASSIFICATION	do the corresponding rhs
WITHOUT_CLASSIFICATION	if its "id"
WITHOUT_CLASSIFICATION	or its the id property name
WITHOUT_CLASSIFICATION	join = q.createjoinfragment(usethetastylejoin)
WITHOUT_CLASSIFICATION	important!!
WITHOUT_CLASSIFICATION	string[] keycols = collpersister.getkeycolumnnames()
WITHOUT_CLASSIFICATION	an association
WITHOUT_CLASSIFICATION	allow index() function
WITHOUT_CLASSIFICATION	here assume sqlserver2005 using snapshot isolation which does not have this problem
WITHOUT_CLASSIFICATION	the reason for this is sql doesn't let you sort by an expression you are not returning in the result set.
WITHOUT_CLASSIFICATION	many-to-many
WITHOUT_CLASSIFICATION	collections of values
WITHOUT_CLASSIFICATION	opening paren in new foo ( )
WITHOUT_CLASSIFICATION	if we are inside a new result() but not inside a nested function
WITHOUT_CLASSIFICATION	special case
WITHOUT_CLASSIFICATION	the name of an sql function
WITHOUT_CLASSIFICATION	null child could occur for no from clause in a filter
WITHOUT_CLASSIFICATION	this is basically a copy/paste of orderbyparser might be worth refactoring
WITHOUT_CLASSIFICATION	select p from p in class eg.person group by p.name p.address p
WITHOUT_CLASSIFICATION	return aliases not supported in classic translator!
WITHOUT_CLASSIFICATION	register collection role
WITHOUT_CLASSIFICATION	the keyword used to specify an identity column if identity column key generation is supported.
WITHOUT_CLASSIFICATION	.getelementpropertymapping()
WITHOUT_CLASSIFICATION	crossjoins.add(name)
WITHOUT_CLASSIFICATION	ie no select clause in hql
WITHOUT_CLASSIFICATION	initialize the set of queried identifier spaces (ie. tables)
WITHOUT_CLASSIFICATION	ie. no select clause
WITHOUT_CLASSIFICATION	there _was_ a select clause
WITHOUT_CLASSIFICATION	return the concrete type or the underlying type if a concrete type was not specified
WITHOUT_CLASSIFICATION	many-to-many
WITHOUT_CLASSIFICATION	q.addcollection(collectionname collectionrole)
WITHOUT_CLASSIFICATION	classic parser does not support bulk manipulation statements
WITHOUT_CLASSIFICATION	can't cache this stuff either (per-invocation)
WITHOUT_CLASSIFICATION	unfortunately this stuff can't be cached because it is per-invocation not constant for the querytranslator instance
WITHOUT_CLASSIFICATION	this is the legacy behaviour for hql queries
WITHOUT_CLASSIFICATION	not known!
WITHOUT_CLASSIFICATION	not known!
WITHOUT_CLASSIFICATION	we have the form trim(trimsource) so we trim leading and trailing spaces early exit!!!!
WITHOUT_CLASSIFICATION	not known!
WITHOUT_CLASSIFICATION	not known!
WITHOUT_CLASSIFICATION	need this since join condition can appear inside parens!
WITHOUT_CLASSIFICATION	tokens that close a sub expression tokens that open a sub expression tokens that would indicate a sub expression is a boolean expression
WITHOUT_CLASSIFICATION	expressionterminators.add("") deliberately excluded
WITHOUT_CLASSIFICATION	expressionopeners.add("") deliberately excluded
WITHOUT_CLASSIFICATION	we have the form trim(from trimsource). this is functionally equivalent to trim(trimsource) early exit!!!!
WITHOUT_CLASSIFICATION	otherwise a trim-specification and/or a trim-character have been specified we need to decide which options are present and "do the right thing" should leading trim-characters be trimmed? should trailing trim-characters be trimmed? the trim-character (what is to be trimmed off?) the trim-source (from where should it be trimmed?)
WITHOUT_CLASSIFICATION	inside a between and expression
WITHOUT_CLASSIFICATION	were an odd or even number of nots encountered the join string built up by compound paths inside this expression a flag indicating if the subexpression is known to be boolean
WITHOUT_CLASSIFICATION	ie. a many-to-many
WITHOUT_CLASSIFICATION	cope with []
WITHOUT_CLASSIFICATION	cope with a continued path expression (ie. ].baz)
WITHOUT_CLASSIFICATION	note early return
WITHOUT_CLASSIFICATION	cope with a subselect
WITHOUT_CLASSIFICATION	cope with special cases of and not ()
WITHOUT_CLASSIFICATION	close extra brackets we opened
WITHOUT_CLASSIFICATION	take note when this is a boolean expression
WITHOUT_CLASSIFICATION	assumes that types are all of span 1
WITHOUT_CLASSIFICATION	process a token mapping oo path expressions to sql expressions
WITHOUT_CLASSIFICATION	open any extra brackets we might need.
WITHOUT_CLASSIFICATION	cope with special cases of and not )
WITHOUT_CLASSIFICATION	the next one up must also be
WITHOUT_CLASSIFICATION	add any joins
WITHOUT_CLASSIFICATION	assumes that types are all of span 1
WITHOUT_CLASSIFICATION	named query parameter
WITHOUT_CLASSIFICATION	path expression
WITHOUT_CLASSIFICATION	saves / updates don't cascade to uninitialized collections
WITHOUT_CLASSIFICATION	persists don't cascade to uninitialized collections
WITHOUT_CLASSIFICATION	anything else
WITHOUT_CLASSIFICATION	the path expression continues after a ]
WITHOUT_CLASSIFICATION	careful with this!
WITHOUT_CLASSIFICATION	the path expression ends at the ]
WITHOUT_CLASSIFICATION	"finish off" the join
WITHOUT_CLASSIFICATION	notice no " or . since they are part of (compound) identifiers
WITHOUT_CLASSIFICATION	cannot instantiate
WITHOUT_CLASSIFICATION	start by looking for hql keywords
WITHOUT_CLASSIFICATION	inner joins can be abbreviated to 'join'
WITHOUT_CLASSIFICATION	'outer' is optional and is ignored
WITHOUT_CLASSIFICATION	now anything that is not a hql keyword
WITHOUT_CLASSIFICATION	process the "old" hql style where aliases appear _first_ ie. using the in or in class constructions
WITHOUT_CLASSIFICATION	treat it as a classname
WITHOUT_CLASSIFICATION	treat it as a path expression
WITHOUT_CLASSIFICATION	starts with the name of a mapped class (new style)
WITHOUT_CLASSIFICATION	starts with a path expression (new style)
WITHOUT_CLASSIFICATION	allow odmg oql style from person p p.cars c
WITHOUT_CLASSIFICATION	handle quoted strings
WITHOUT_CLASSIFICATION	object insertions updates and deletions have list semantics because they must happen in the right order so as to respect referential integrity
WITHOUT_CLASSIFICATION	"finish off" the join
WITHOUT_CLASSIFICATION	ignore whitespace
WITHOUT_CLASSIFICATION	do replacements
WITHOUT_CLASSIFICATION	handle hql2 collection syntax
WITHOUT_CLASSIFICATION	uuid.hex is deprecated
WITHOUT_CLASSIFICATION	abstractselectingdelegate impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	hilo params
WITHOUT_CLASSIFICATION	sql = query
WITHOUT_CLASSIFICATION	performance opt
WITHOUT_CLASSIFICATION	sql = update
WITHOUT_CLASSIFICATION	hilo config
WITHOUT_CLASSIFICATION	so we "clock over" on the first invocation
WITHOUT_CLASSIFICATION	don't allow comments on these insert statements as comments totally blow up the oracle getgeneratedkeys "support" (
WITHOUT_CLASSIFICATION	abort the save (the object is already saved by a circular cascade)
WITHOUT_CLASSIFICATION	throw new identifiergenerationexception("save associated object first or disable cascade for inverse association")
WITHOUT_CLASSIFICATION	intentionally empty
WITHOUT_CLASSIFICATION	do nothing to avoid a lazy property initialization
WITHOUT_CLASSIFICATION	keep the behavior consistent even for boundary usages
WITHOUT_CLASSIFICATION	so we "clock over" on the first invocation
WITHOUT_CLASSIFICATION	do nothing until we hit the rsult set containing the generated id
WITHOUT_CLASSIFICATION	column and table should be renamed but it would break the public api
WITHOUT_CLASSIFICATION	loaded entity instances by entitykey
WITHOUT_CLASSIFICATION	if the given name is un-qualified we may neen to qualify it
WITHOUT_CLASSIFICATION	the default
WITHOUT_CLASSIFICATION	unfortunately not really safe to normalize this to 1 as an initial value like we do the others because we would not be able to control this if we are using a sequence
WITHOUT_CLASSIFICATION	intentionally empty
WITHOUT_CLASSIFICATION	identity map of collectionentry instances by the collection wrapper
WITHOUT_CLASSIFICATION	general purpose parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	table-specific parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	configurable implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	identifiergenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	persistentidentifiergenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	prepare and execute the insert
WITHOUT_CLASSIFICATION	prepare and execute the insert
WITHOUT_CLASSIFICATION	fetch the generated id in a separate query
WITHOUT_CLASSIFICATION	we just hit the last position
WITHOUT_CLASSIFICATION	scroll ahead
WITHOUT_CLASSIFICATION	scroll backward
WITHOUT_CLASSIFICATION	we have not yet hit the last result
WITHOUT_CLASSIFICATION	constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	do this when all the properties are updateable since there is a certain likelihood that the information will already be snapshot-cached.
WITHOUT_CLASSIFICATION	inner classes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	caches
WITHOUT_CLASSIFICATION	generators
WITHOUT_CLASSIFICATION	cache region is defined by the root-class in the hierarchy
WITHOUT_CLASSIFICATION	check if the detached object being merged is the parent
WITHOUT_CLASSIFICATION	after all persisters and named queries are registered
WITHOUT_CLASSIFICATION	if we get here it is possible that we have a proxy 'in the way' of the merge map resolution note decided to put this here rather than in the above loop as i was nervous about the performance of the loop-in-loop especially considering this is far more likely the 'edge case'
WITHOUT_CLASSIFICATION	jndi + serialization
WITHOUT_CLASSIFICATION	checking for named queries
WITHOUT_CLASSIFICATION	stats
WITHOUT_CLASSIFICATION	entitynotfounddelegate
WITHOUT_CLASSIFICATION	check named hql queries
WITHOUT_CLASSIFICATION	this will throw an error if there's something wrong.
WITHOUT_CLASSIFICATION	prevents this session from adding things to cache
WITHOUT_CLASSIFICATION	from javax.naming.referenceable
WITHOUT_CLASSIFICATION	look for the instance by uuid
WITHOUT_CLASSIFICATION	for a dynamic-class
WITHOUT_CLASSIFICATION	test this entity to see if we must query it
WITHOUT_CLASSIFICATION	note early exit
WITHOUT_CLASSIFICATION	for backward-compatability
WITHOUT_CLASSIFICATION	ignore this error for now
WITHOUT_CLASSIFICATION	to stop the class from being unloaded
WITHOUT_CLASSIFICATION	in case we were deserialized in a different jvm look for an instance with the same name (alternatively we could do an actual jndi lookup here.)
WITHOUT_CLASSIFICATION	must add to jndi _after_ adding to hashmaps because some jndi servers use serialization
WITHOUT_CLASSIFICATION	make sure this is a defined parameter and check the incoming value type
WITHOUT_CLASSIFICATION	for each of the defined parameters make sure its value has been set
WITHOUT_CLASSIFICATION	we never need to apply locks to the sql
WITHOUT_CLASSIFICATION	inserts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	deletes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	during deserialization we need to reconnect all proxies and collections to this session as well as the entityentry and collectionentry instances these associations are transient because serialization is used for different things.
WITHOUT_CLASSIFICATION	updates ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	loading ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	final boolean forcecacherefresh
WITHOUT_CLASSIFICATION	final boolean forcecacherefresh
WITHOUT_CLASSIFICATION	first try to load it from the temp pc associated to this ss
WITHOUT_CLASSIFICATION	if the metadata allowed proxy creation and caller did not request forceful eager loading generate a proxy
WITHOUT_CLASSIFICATION	otherwise immediately materialize it
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	no auto-flushing to support in stateless session
WITHOUT_CLASSIFICATION	after setting values to object entitymode
WITHOUT_CLASSIFICATION	for ejb3
WITHOUT_CLASSIFICATION	just ignore
WITHOUT_CLASSIFICATION	do a check
WITHOUT_CLASSIFICATION	saveorupdate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	update() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	lock() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	persist() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	persistonflush() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	merge() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	saveorupdatecopy() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	delete() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	load()/get() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	refresh() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	replicate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	do not auto-flush while outside a transaction
WITHOUT_CLASSIFICATION	this is an internal error of some sort
WITHOUT_CLASSIFICATION	stops flush being called multiple times if this method is recursively called
WITHOUT_CLASSIFICATION	only collections belonging to deleted entities are allowed to be dereferenced in the case of orphan delete
WITHOUT_CLASSIFICATION	if it was previously unreferenced we need to flush in order to get its state into the database in order to execute query
WITHOUT_CLASSIFICATION	not for internal use
WITHOUT_CLASSIFICATION	otherwise we only need to flush if there are in-memory changes to the queried tables
WITHOUT_CLASSIFICATION	might need to run a different filter entirely after the flush because the collection role may have changed
WITHOUT_CLASSIFICATION	stops flush being called multiple times if this method is recursively called
WITHOUT_CLASSIFICATION	stops flush being called multiple times if this method is recursively called
WITHOUT_CLASSIFICATION	if it is initialized see if the underlying instance is contained since we need to account for the fact that it might have been evicted
WITHOUT_CLASSIFICATION	basically just an adapted copy of find(criteriaimpl)
WITHOUT_CLASSIFICATION	it is possible for this method to be called during flush processing so make certain that we do not accidently initialize an uninitialized proxy
WITHOUT_CLASSIFICATION	nothing to do in a stateful session
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore this error for now
WITHOUT_CLASSIFICATION	we need to writeobject() on this since interceptor is user defined
WITHOUT_CLASSIFICATION	the old-time stand-by
WITHOUT_CLASSIFICATION	parameter bind values
WITHOUT_CLASSIFICATION	parameter handling code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	prepend value and type list with null for any positions before the wanted position.
WITHOUT_CLASSIFICATION	execution methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	we have a cglib enhanced entity
WITHOUT_CLASSIFICATION	we have a cglib enhanced entity
WITHOUT_CLASSIFICATION	we have a javassist enhanced entity
WITHOUT_CLASSIFICATION	we have a javassist enhanced entity
WITHOUT_CLASSIFICATION	fieldinterceptor impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	subclass accesses ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	let's assume that there is only one lazy fetch group for now!
WITHOUT_CLASSIFICATION	fieldhandler impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	should not need to grow beyond the size of the total number of columns in the rs
WITHOUT_CLASSIFICATION	should probably no-op commit/rollback here at least in jta scenarios
WITHOUT_CLASSIFICATION	base expectation impls ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	various expectation instances ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	explicitly perform no checking
WITHOUT_CLASSIFICATION	used from testsuite
WITHOUT_CLASSIFICATION	assume we are in an auto-commit state
WITHOUT_CLASSIFICATION	package
WITHOUT_CLASSIFICATION	register synch stats.connect()
WITHOUT_CLASSIFICATION	noncritical swallow and let the other propagate!
WITHOUT_CLASSIFICATION	calls executebatch()
WITHOUT_CLASSIFICATION	no big deal
WITHOUT_CLASSIFICATION	no big deal
WITHOUT_CLASSIFICATION	no big deal
WITHOUT_CLASSIFICATION	sybase driver (jconnect) throwing npe here in certain cases but we'll just handle the general "unexpected" case
WITHOUT_CLASSIFICATION	see explanation above
WITHOUT_CLASSIFICATION	if we are in the process of releasing no sense checking for aggressive-release possibility.
WITHOUT_CLASSIFICATION	early exit!!!!
WITHOUT_CLASSIFICATION	resultset impl ("overridden") ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	resultset impl (delegated) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	refer to comment in statefulpersistencecontext.addcollection()
WITHOUT_CLASSIFICATION	connectionmanager.callback implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	note success = false because we don't know the outcome of the transaction
WITHOUT_CLASSIFICATION	we already have a callback registered either a local (org.hibernate.transaction) transaction has accepted callback responsibilities or we have previously registered a transaction synch.
WITHOUT_CLASSIFICATION	the configured transaction-factory says it only supports local callback mode so no sense attempting to register a jta synchronization
WITHOUT_CLASSIFICATION	transactions marked for rollback-only cause some tm impls to throw exceptions
WITHOUT_CLASSIFICATION	serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	postinitialize() will be called after initialization
WITHOUT_CLASSIFICATION	cannot handle single quotes
WITHOUT_CLASSIFICATION	todo for 4.0 private static final logger log = loggerfactory.getlogger( sqlstatementlogger.class ) this is the legacy logging 'category'
WITHOUT_CLASSIFICATION	note that for sequential scrolling we make the assumption that the first persister element is the "root entity"
WITHOUT_CLASSIFICATION	don't even bother trying to read further
WITHOUT_CLASSIFICATION	don't even bother trying to read any further
WITHOUT_CLASSIFICATION	position cursor to the last row
WITHOUT_CLASSIFICATION	sequentially read the result set in reverse until we recognize a change in the key value. at that point we are pointed at the last physical sequential row for the logical row in which we are interested in processing
WITHOUT_CLASSIFICATION	read backwards until we read past the first physical sequential row with the key we are interested in loading
WITHOUT_CLASSIFICATION	finally read ahead one row to position result set cursor at the first physical row we are interested in loading
WITHOUT_CLASSIFICATION	now get an existing proxy for each row element (if there is one)
WITHOUT_CLASSIFICATION	force the proxy to resolve itself
WITHOUT_CLASSIFICATION	this is equivalent to the old behavior
WITHOUT_CLASSIFICATION	if null owner will be retrieved from session
WITHOUT_CLASSIFICATION	final string querystring
WITHOUT_CLASSIFICATION	if it was a reference to self don't need to nullify unless we are using native id generation in which case we definitely need to nullify
WITHOUT_CLASSIFICATION	end of array start filling again from start
WITHOUT_CLASSIFICATION	in an effort to avoid concurrent-modification-exceptions (from potential recursive calls back through here as a result of the eventual call to persistentcollection#endread) we scan the internal loadingcollections map for matches and store those matches in a temp collection. the temp collection is then used to "drive" the #endread processing.
WITHOUT_CLASSIFICATION	we can reuse it for each row
WITHOUT_CLASSIFICATION	can't reuse in this case
WITHOUT_CLASSIFICATION	first we need to suspend any current jta transaction and obtain a jdbc connection
WITHOUT_CLASSIFICATION	getresultlist(results)
WITHOUT_CLASSIFICATION	if we only returned one entity query by key is more efficient
WITHOUT_CLASSIFICATION	a collection loaded in the current session can not possibly be the collection belonging to the entity passed to update()
WITHOUT_CLASSIFICATION	handle empty collection
WITHOUT_CLASSIFICATION	else no collection element but also no owner
WITHOUT_CLASSIFICATION	handle empty collections
WITHOUT_CLASSIFICATION	else this is not a collection initializer (and empty collections will be detected by looking for the owner's identifier in the result set)
WITHOUT_CLASSIFICATION	validate() instances of validatable
WITHOUT_CLASSIFICATION	if we know there is exactly 1 row we can skip. it would be great if we could _always_ skip this it is a problem for <key-many-to-one>
WITHOUT_CLASSIFICATION	remove all collections for the entity from the session-level cache
WITHOUT_CLASSIFICATION	null version means the object is in the process of being loaded somewhere else in the resultset
WITHOUT_CLASSIFICATION	problematic for <key-many-to-one>!
WITHOUT_CLASSIFICATION	use the id passed in
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	prefer re-generation of identity!
WITHOUT_CLASSIFICATION	no point doing this if none was requested
WITHOUT_CLASSIFICATION	if the object is already loaded return the loaded one
WITHOUT_CLASSIFICATION	its already loaded so don't need to hydrate it
WITHOUT_CLASSIFICATION	cascade the refresh prior to refreshing this entity
WITHOUT_CLASSIFICATION	the load() which takes an entity does not pass an entityname
WITHOUT_CLASSIFICATION	we only check the version when _upgrading_ lock modes
WITHOUT_CLASSIFICATION	look for a proxy
WITHOUT_CLASSIFICATION	we need to upgrade the lock mode to the mode requested
WITHOUT_CLASSIFICATION	its the given optional object
WITHOUT_CLASSIFICATION	instantiate a new instance
WITHOUT_CLASSIFICATION	need to hydrate it.
WITHOUT_CLASSIFICATION	return a newly loaded object
WITHOUT_CLASSIFICATION	will be ignored using the existing entry instead
WITHOUT_CLASSIFICATION	key is an entity involved with the operation performed by the listener value can be either a copy of the entity or the entity itself
WITHOUT_CLASSIFICATION	materialize associations (and initialize the object) later
WITHOUT_CLASSIFICATION	get the persister for the _subclass_
WITHOUT_CLASSIFICATION	ok in normal hibernate usage to delete a detached entity jpa however forbids it thus this is a hook for hem to affect this behavior
WITHOUT_CLASSIFICATION	the entry will be removed after the flush and will no longer override the stale snapshot this is now handled by removeentity() in entitydeleteaction persistencecontext.removedatabasesnapshot(key)
WITHOUT_CLASSIFICATION	addinitializedcollection(collection persister id)
WITHOUT_CLASSIFICATION	early exit!
WITHOUT_CLASSIFICATION	early exit!
WITHOUT_CLASSIFICATION	|| oj.getjoinable().consumescollectionalias()
WITHOUT_CLASSIFICATION	here we do not bother with the discriminator.
WITHOUT_CLASSIFICATION	code to handle subclasses of topclass
WITHOUT_CLASSIFICATION	woops we got an instance of another class hierarchy branch
WITHOUT_CLASSIFICATION	we can go straight to the first required row
WITHOUT_CLASSIFICATION	we need to step through the rows one row at a time (slow)
WITHOUT_CLASSIFICATION	synchronized to avoid multi-thread access issues defined as method synch to avoid potential deadlock issues due to nature of code.
WITHOUT_CLASSIFICATION	allows various loaders (ok mainly the queryloader ) to check whether scrolling of their result set should be allowed. by default it is allowed.
WITHOUT_CLASSIFICATION	before adding to collection!
WITHOUT_CLASSIFICATION	if the current depth is 0 the root thing being loaded is the many-to-many collection itself. here it is alright to use an inner join
WITHOUT_CLASSIFICATION	operations which cascade as far as the collection also cascade to collection elements
WITHOUT_CLASSIFICATION	simple because we can't have a one-to-one or a collection (or even a property-ref) in a composite-element
WITHOUT_CLASSIFICATION	a composite key
WITHOUT_CLASSIFICATION	if no batch use "foo = ? and bar = ?"
WITHOUT_CLASSIFICATION	it must be a collection fetch
WITHOUT_CLASSIFICATION	needed later for many-to-many/filter application
WITHOUT_CLASSIFICATION	&& etype.isreferencetoprimarykey()
WITHOUT_CLASSIFICATION	it might still need to apply a collection ordering based on a many-to-many defined order-by
WITHOUT_CLASSIFICATION	if a composite key use "( (foo = ? and bar = ?) or (foo = ? and bar = ?) )" for batching todo unnecessary for databases with ansi-style joins
WITHOUT_CLASSIFICATION	belong to other persister belong to other persister
WITHOUT_CLASSIFICATION	we found it
WITHOUT_CLASSIFICATION	we can use an inner join for the many-to-many
WITHOUT_CLASSIFICATION	disable a join back to this same association
WITHOUT_CLASSIFICATION	note unlike all other loaders this one is not multithreaded or cacheable!!
WITHOUT_CLASSIFICATION	the user visible aliases which are unknown to the superclass these are not the actual "physical" sql aliases
WITHOUT_CLASSIFICATION	root entity comes last
WITHOUT_CLASSIFICATION	deliberately ignore return value!
WITHOUT_CLASSIFICATION	alias may be null early exit
WITHOUT_CLASSIFICATION	if it is a compound path
WITHOUT_CLASSIFICATION	otherwise assume the parent is the the criteria that created us
WITHOUT_CLASSIFICATION	if its the root criteria we are done
WITHOUT_CLASSIFICATION	otherwise recurse
WITHOUT_CLASSIFICATION	the criteria instance
WITHOUT_CLASSIFICATION	the entity name
WITHOUT_CLASSIFICATION	not found in inner query try the outer query
WITHOUT_CLASSIFICATION	not found in inner query try the outer query
WITHOUT_CLASSIFICATION	it refers to an alias of a projection
WITHOUT_CLASSIFICATION	should never happen i think
WITHOUT_CLASSIFICATION	detect discriminator values
WITHOUT_CLASSIFICATION	convert the string value into the proper type.
WITHOUT_CLASSIFICATION	and the qualifier is not the alias of this criteria -> check to see if we belong to some criteria other than the one that created us
WITHOUT_CLASSIFICATION	it does not refer to an alias of a projection look for a property
WITHOUT_CLASSIFICATION	otherwise this is an ordinary value.
WITHOUT_CLASSIFICATION	currently not cachable if autodiscover types is in effect (e.g. "select ")
WITHOUT_CLASSIFICATION	private final string[] sqlaliases private final string[] sqlaliassuffixes
WITHOUT_CLASSIFICATION	this is only needed (afaict) for resulttransformer processing
WITHOUT_CLASSIFICATION	determine if the collection elements are entities
WITHOUT_CLASSIFICATION	build an array with indices equal to the total number of actual returns in the result hibernate will return for this query (scalars + non-scalars)
WITHOUT_CLASSIFICATION	replace {.} with corresponding column aliases
WITHOUT_CLASSIFICATION	no additional open braces found in the string append the rest of the string in its entirty and quit this loop
WITHOUT_CLASSIFICATION	apend everything up until the next encountered open brace
WITHOUT_CLASSIFICATION	it is a simple table alias {foo}
WITHOUT_CLASSIFICATION	passing through anything we do not know to support jdbc escape sequences hb-898
WITHOUT_CLASSIFICATION	passing through anything we do not know to support jdbc escape sequences hb-898
WITHOUT_CLASSIFICATION	the current alias is referencing the collection to be eagerly fetched
WITHOUT_CLASSIFICATION	it is a property reference {foo.bar}
WITHOUT_CLASSIFICATION	possibly handle something parameters for the query ?
WITHOUT_CLASSIFICATION	let return-propertys override whatever the persister has for aliases.
WITHOUT_CLASSIFICATION	private final list persisters = new arraylist()
WITHOUT_CLASSIFICATION	package
WITHOUT_CLASSIFICATION	note early exit!
WITHOUT_CLASSIFICATION	private final list scalartypes = new arraylist() private final list scalarcolumnaliases = new arraylist()
WITHOUT_CLASSIFICATION	now process the returns
WITHOUT_CLASSIFICATION	private list collectionowneraliases = new arraylist() private list collectionaliases = new arraylist() private list collectionpersisters = new arraylist() private list collectionresults = new arraylist()
WITHOUT_CLASSIFICATION	already been processed
WITHOUT_CLASSIFICATION	already been processed
WITHOUT_CLASSIFICATION	make sure the owner alias is known
WITHOUT_CLASSIFICATION	first break down the returns into maps keyed by alias so that role returns can be more easily resolved to their owners
WITHOUT_CLASSIFICATION	scalarcolumnaliases.add( typereturn.getcolumnalias() ) scalartypes.add( typereturn.gettype() )
WITHOUT_CLASSIFICATION	if this return's alias has not been processed yet do so b4 further processing of this return
WITHOUT_CLASSIFICATION	collectionowneraliases.add( owneralias )
WITHOUT_CLASSIFICATION	for merging of versioned entities we consider the version having been changed only when 1) the two version values are different and 2) the target actually represents database state! this second condition is a special case which allows an entity to be merged during the same transaction (though during a seperate operation) in which it was originally persisted/saved
WITHOUT_CLASSIFICATION	this is the second pass through on a merge op so here we limit the replacement to associations types (value types were already replaced during the first pass)
WITHOUT_CLASSIFICATION	early exit
WITHOUT_CLASSIFICATION	cascade-save to collections after the collection owner was saved
WITHOUT_CLASSIFICATION	initialize the error handling delegate.
WITHOUT_CLASSIFICATION	use the delegate.
WITHOUT_CLASSIFICATION	currently only the hibernate-supplied dbtimestamptype is supported here
WITHOUT_CLASSIFICATION	this is called when it's time to fully resolve a path expression.
WITHOUT_CLASSIFICATION	make a new one
WITHOUT_CLASSIFICATION	not so sure this is even valid subtree. but if it was it'd represent two unrelated table references
WITHOUT_CLASSIFICATION	(not (gt a b) ) => (le a b)
WITHOUT_CLASSIFICATION	private type[] sqlresulttypes
WITHOUT_CLASSIFICATION	include the discriminator and class-level where but not filters
WITHOUT_CLASSIFICATION	sqlresulttypes = selectclause.getsqlresulttypes()
WITHOUT_CLASSIFICATION	by default
WITHOUT_CLASSIFICATION	this is now handled earlier in this method.
WITHOUT_CLASSIFICATION	-- loader implementation --
WITHOUT_CLASSIFICATION	-- loader overrides --
WITHOUT_CLASSIFICATION	(not (is_null a b) ) => (is_not_null a b)
WITHOUT_CLASSIFICATION	none because its the requested lock mode not the actual!
WITHOUT_CLASSIFICATION	meant to handle dynamic instantiation queries
WITHOUT_CLASSIFICATION	--- query translator methods ---
WITHOUT_CLASSIFICATION	-- implementation private methods --
WITHOUT_CLASSIFICATION	deduplicate unique constraints sharing the same columns this is needed by hibernate annotations since it creates automagically unique constraints for the user
WITHOUT_CLASSIFICATION	try to find out the name of the primary key to create it as identity if the identitygenerator is used
WITHOUT_CLASSIFICATION	to support dialects that have their own identity data type
WITHOUT_CLASSIFICATION	prepare the left hand side and get the data type.
WITHOUT_CLASSIFICATION	used also for generation of fk names!
WITHOUT_CLASSIFICATION	usually useless
WITHOUT_CLASSIFICATION	added this caching as i noticed that gettype() is being called multiple times
WITHOUT_CLASSIFICATION	do not add unique constraint on db not supporting unique and nullable columns
WITHOUT_CLASSIFICATION	for backward compatibility disable this
WITHOUT_CLASSIFICATION	may be final may be final may be final
WITHOUT_CLASSIFICATION	may be final
WITHOUT_CLASSIFICATION	may be final
WITHOUT_CLASSIFICATION	custom sql
WITHOUT_CLASSIFICATION	primary key constraint
WITHOUT_CLASSIFICATION	the root of the incoming property path matched one of the embedded composite identifier properties
WITHOUT_CLASSIFICATION	ignore it
WITHOUT_CLASSIFICATION	flat recursive algorithm
WITHOUT_CLASSIFICATION	an identifier mapper => getkey will be included in the getnonduplicatedpropertyiterator() and checked later so it needs to be excluded
WITHOUT_CLASSIFICATION	if the hibernate-mapping did not specify a schema/catalog use the defaults specified by properties - but note that if the schema/catalog were specified in hibernate-mapping or as params they will already be initialized and will override the values set here (they are in identifiergeneratorproperties)
WITHOUT_CLASSIFICATION	pass the entity-name if not a collection-id
WITHOUT_CLASSIFICATION	custom sql
WITHOUT_CLASSIFICATION	primary key constraint
WITHOUT_CLASSIFICATION	pass the column name (a generated id almost always has a single column)
WITHOUT_CLASSIFICATION	needed to satisfy keyvalue
WITHOUT_CLASSIFICATION	empty means no scoping
WITHOUT_CLASSIFICATION	index should be last column listed
WITHOUT_CLASSIFICATION	if it is a formula index use the element columns in the pk
WITHOUT_CLASSIFICATION	don't create a unique key 'cos some databases don't like a uk on nullable columns
WITHOUT_CLASSIFICATION	arraylist list = new arraylist()list.addall( getkey().getconstraintcolumns() )list.addall( getindex().getconstraintcolumns() )getcollectiontable().createuniquekey(list)
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	no foreign key element of for a one-to-many
WITHOUT_CLASSIFICATION	todo we could just return all false
WITHOUT_CLASSIFICATION	the case of a foreign key to something other than the pk is handled in createpropertyrefconstraints
WITHOUT_CLASSIFICATION	todo we could just return all false
WITHOUT_CLASSIFICATION	if the property mapping consists of all formulas make it non-updateable
WITHOUT_CLASSIFICATION	columnupdateability.length==0 ||
WITHOUT_CLASSIFICATION	if the property mapping consists of all formulas make it insertable
WITHOUT_CLASSIFICATION	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	expected type is intrinsic here
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	return memberpersister.getpropertytype(propertyname)
WITHOUT_CLASSIFICATION	return memberpersister.tocolumns(alias propertyname)
WITHOUT_CLASSIFICATION	return memberpersister.gettype()
WITHOUT_CLASSIFICATION	&& !indexisformula
WITHOUT_CLASSIFICATION	return !isonetomany()
WITHOUT_CLASSIFICATION	instanceof associationtype
WITHOUT_CLASSIFICATION	we need to determine the best way to know that two joinables represent a single many-to-many
WITHOUT_CLASSIFICATION	strip leading ''
WITHOUT_CLASSIFICATION	public boolean issubselectloadable()
WITHOUT_CLASSIFICATION	key
WITHOUT_CLASSIFICATION	columns
WITHOUT_CLASSIFICATION	sql statements
WITHOUT_CLASSIFICATION	extra information about the element type
WITHOUT_CLASSIFICATION	types
WITHOUT_CLASSIFICATION	custom sql
WITHOUT_CLASSIFICATION	private final string unquotedidentifiercolumnname
WITHOUT_CLASSIFICATION	dynamic filters specifically for many-to-many inside the collection
WITHOUT_CLASSIFICATION	dynamic filters for the collection
WITHOUT_CLASSIFICATION	nativesql collect key column and auto-aliases
WITHOUT_CLASSIFICATION	unquotedkeycolumnnames = stringhelper.unquote(keycolumnaliases)
WITHOUT_CLASSIFICATION	element
WITHOUT_CLASSIFICATION	nativesql collect element column and auto-aliases
WITHOUT_CLASSIFICATION	index and row select
WITHOUT_CLASSIFICATION	nativesql collect index column and auto-aliases
WITHOUT_CLASSIFICATION	unquotedidentifiercolumnname = identifiercolumnalias
WITHOUT_CLASSIFICATION	unquotedidentifiercolumnname = null
WITHOUT_CLASSIFICATION	generate the sql
WITHOUT_CLASSIFICATION	for non-arrays we don't need to know the element class elementtype.returnedclass()
WITHOUT_CLASSIFICATION	not all classpersisters implement propertymapping!
WITHOUT_CLASSIFICATION	handle any filters applied to this collection
WITHOUT_CLASSIFICATION	handle any filters applied to this collection for many-to-many
WITHOUT_CLASSIFICATION	if there is a user-specified loader return that todo filters!?
WITHOUT_CLASSIFICATION	take care of any entities that might have been evicted!
WITHOUT_CLASSIFICATION	strip leading ''
WITHOUT_CLASSIFICATION	run a subquery loader
WITHOUT_CLASSIFICATION	needed by arrays
WITHOUT_CLASSIFICATION	todo something with formulas
WITHOUT_CLASSIFICATION	an assertion
WITHOUT_CLASSIFICATION	remove all the old entries
WITHOUT_CLASSIFICATION	create all the new entries
WITHOUT_CLASSIFICATION	&& !indexisformula
WITHOUT_CLASSIFICATION	&& !indexisformula
WITHOUT_CLASSIFICATION	delete all the deleted entries
WITHOUT_CLASSIFICATION	insert all the new entries
WITHOUT_CLASSIFICATION	==elementtype ??
WITHOUT_CLASSIFICATION	update all the modified entries
WITHOUT_CLASSIFICATION	identifier collections not supported for 1-to-many
WITHOUT_CLASSIFICATION	update removed rows fks to null
WITHOUT_CLASSIFICATION	will still be issued when it used to be null
WITHOUT_CLASSIFICATION	now update all changed or added rows fks
WITHOUT_CLASSIFICATION	buf.append( selectfragment( lhsalias "" ) )ignore suffix for collection columns!
WITHOUT_CLASSIFICATION	use suffix for the entity columns
WITHOUT_CLASSIFICATION	the class hierarchy structure
WITHOUT_CLASSIFICATION	private final string roottablename
WITHOUT_CLASSIFICATION	initialization
WITHOUT_CLASSIFICATION	custom sql
WITHOUT_CLASSIFICATION	the class hierarchy structure
WITHOUT_CLASSIFICATION	execute the sql
WITHOUT_CLASSIFICATION	this could also just be true all the time
WITHOUT_CLASSIFICATION	chop the last union (all)
WITHOUT_CLASSIFICATION	todo check this.
WITHOUT_CLASSIFICATION	initialization
WITHOUT_CLASSIFICATION	properties of this class including inherited properties
WITHOUT_CLASSIFICATION	the closure of all properties in the entire hierarchy including subclasses and superclasses of this class
WITHOUT_CLASSIFICATION	the closure of all columns used by the entire hierarchy including subclasses and superclasses of this class
WITHOUT_CLASSIFICATION	subclass discrimination works by assigning particular values to certain combinations of null primary key values in the outer join using an sql case
WITHOUT_CLASSIFICATION	multitables
WITHOUT_CLASSIFICATION	custom sql
WITHOUT_CLASSIFICATION	subclass closure properties
WITHOUT_CLASSIFICATION	subclasses
WITHOUT_CLASSIFICATION	( (column) model.gettable().getprimarykey().getcolumniterator().next() ).getname()
WITHOUT_CLASSIFICATION	( (column) sc.gettable().getprimarykey().getcolumniterator().next() ).getname()
WITHOUT_CLASSIFICATION	don't need subclass tables because they can't appear in conditions
WITHOUT_CLASSIFICATION	special case where we need to force incloude all subclass joins
WITHOUT_CLASSIFICATION	the class hierarchy structure
WITHOUT_CLASSIFICATION	properties of this class including inherited properties
WITHOUT_CLASSIFICATION	the closure of all columns used by the entire hierarchy including subclasses and superclasses of this class
WITHOUT_CLASSIFICATION	get em on the second pass!
WITHOUT_CLASSIFICATION	now look up the object we are really interested in! (this lets us correctly handle proxies and multi-row or multi-column queries)
WITHOUT_CLASSIFICATION	discriminator column
WITHOUT_CLASSIFICATION	initialization
WITHOUT_CLASSIFICATION	private final map propertytablenumbersbyname = new hashmap()
WITHOUT_CLASSIFICATION	class + table
WITHOUT_CLASSIFICATION	discriminator
WITHOUT_CLASSIFICATION	properties
WITHOUT_CLASSIFICATION	subclasses
WITHOUT_CLASSIFICATION	execute the sql
WITHOUT_CLASSIFICATION	joins
WITHOUT_CLASSIFICATION	propertytablenumbersbyname.put( prop.getname() join )
WITHOUT_CLASSIFICATION	access cached sql
WITHOUT_CLASSIFICATION	figure out which tables need to be fetched
WITHOUT_CLASSIFICATION	figure out which columns are needed
WITHOUT_CLASSIFICATION	figure out which formulas are needed
WITHOUT_CLASSIFICATION	render the sql
WITHOUT_CLASSIFICATION	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	moved up from abstractentitypersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	the optional sql string defined in the where attribute
WITHOUT_CLASSIFICATION	information about lazy properties of this class
WITHOUT_CLASSIFICATION	information about all properties in class hierarchy
WITHOUT_CLASSIFICATION	information about all columns/formulas in class hierarchy
WITHOUT_CLASSIFICATION	dynamic filters attached to the class-level
WITHOUT_CLASSIFICATION	sql strings
WITHOUT_CLASSIFICATION	for objects that came in via update()
WITHOUT_CLASSIFICATION	properties
WITHOUT_CLASSIFICATION	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	identifier
WITHOUT_CLASSIFICATION	version
WITHOUT_CLASSIFICATION	where string
WITHOUT_CLASSIFICATION	subclass property closure
WITHOUT_CLASSIFICATION	before add -)
WITHOUT_CLASSIFICATION	handle any filters applied to the class level
WITHOUT_CLASSIFICATION	only one-to-one is lazy fetched
WITHOUT_CLASSIFICATION	note early exit here
WITHOUT_CLASSIFICATION	object have been loaded with setreadonly(true) hhh-2236
WITHOUT_CLASSIFICATION	note this assumes something about how propertyselectfragment is implemented by the subclass!
WITHOUT_CLASSIFICATION	strip leading " "
WITHOUT_CLASSIFICATION	if there is no resulting row return null
WITHOUT_CLASSIFICATION	otherwise return the "hydrated" state (ie. associations are not resolved)
WITHOUT_CLASSIFICATION	null owner ok??
WITHOUT_CLASSIFICATION	null sql means that the only lazy properties are shared pk one-to-one associations which are handled differently in the type#nullsafeget code
WITHOUT_CLASSIFICATION	create a new from node for the referenced class.
WITHOUT_CLASSIFICATION	the difficulty here is exactly what do we update in order to force the version to be incremented in the db
WITHOUT_CLASSIFICATION	performance op to avoid the array search
WITHOUT_CLASSIFICATION	properly handle property-ref-based associations
WITHOUT_CLASSIFICATION	enable for hhh-440 which we don't like
WITHOUT_CLASSIFICATION	aliases
WITHOUT_CLASSIFICATION	aliases named identifier ( alias.idname )
WITHOUT_CLASSIFICATION	aliases for composite-id's
WITHOUT_CLASSIFICATION	fetch embedded identifiers propertynames from the "virtual" identifier component
WITHOUT_CLASSIFICATION	embedded composite ids ( alias.idname1 alias.idname2 )
WITHOUT_CLASSIFICATION	todo skip formulas?
WITHOUT_CLASSIFICATION	don't need filters for the static loaders
WITHOUT_CLASSIFICATION	do two passes for collection property-ref!
WITHOUT_CLASSIFICATION	select the correct row by either pk or rowid
WITHOUT_CLASSIFICATION	todo eventually rowidname[j]
WITHOUT_CLASSIFICATION	this is a property of the table which we are updating
WITHOUT_CLASSIFICATION	special shortcut for id properties skip the join! this must only occur at the _end_ of a path expression
WITHOUT_CLASSIFICATION	we are using "all" or "dirty" property-based optimistic locking
WITHOUT_CLASSIFICATION	nothing to do even if the operand is a parameter no way we could infer an appropriate expected type here
WITHOUT_CLASSIFICATION	this property belongs on the table and is to be inserted
WITHOUT_CLASSIFICATION	add normal properties
WITHOUT_CLASSIFICATION	add the discriminator
WITHOUT_CLASSIFICATION	more specifically "? [op] datetime" 1) if the operator is minus the param needs to be of some datetime type 2) if the operator is plus the param needs to be of some numeric type
WITHOUT_CLASSIFICATION	add normal properties
WITHOUT_CLASSIFICATION	this property belongs on the table and is to be inserted
WITHOUT_CLASSIFICATION	add the discriminator
WITHOUT_CLASSIFICATION	add the primary key
WITHOUT_CLASSIFICATION	delegate already handles pk columns
WITHOUT_CLASSIFICATION	we can't batch joined inserts especially not if it is an identity insert nor can we batch statements where the expectation is based on an output param
WITHOUT_CLASSIFICATION	render the sql query
WITHOUT_CLASSIFICATION	write the values of fields onto the prepared statement - we must use the state at the time the insert was issued (cos of foreign key constraints). not necessarily the object's current state
WITHOUT_CLASSIFICATION	todo shouldnt inserts be expectations.none?
WITHOUT_CLASSIFICATION	don't bother trying to update we know there is no row there yet
WITHOUT_CLASSIFICATION	if all fields are null we might need to delete existing row
WITHOUT_CLASSIFICATION	there is probably a row there so try to update if no rows were updated we will find out
WITHOUT_CLASSIFICATION	note updates to joined tables can't be batched
WITHOUT_CLASSIFICATION	starting index
WITHOUT_CLASSIFICATION	now write the values of fields onto the prepared statement
WITHOUT_CLASSIFICATION	write any appropriate versioning conditional parameters
WITHOUT_CLASSIFICATION	render the sql query
WITHOUT_CLASSIFICATION	do the key. the key is immutable so we can use the _current_ object state - not necessarily the state at the time the delete was issued
WITHOUT_CLASSIFICATION	we should use the _current_ object state (ie. after any updates that occurred during flush)
WITHOUT_CLASSIFICATION	this property belongs to the table and it is not specifically excluded from optimistic locking by optimistic-lock="false"
WITHOUT_CLASSIFICATION	note dirtyfields==null means we had no snapshot and we couldn't get one using select-before-update oldfields==null just means we had no snapshot to begin with (we might have used select-before-update to get the dirtyfields)
WITHOUT_CLASSIFICATION	more specifically "datetime [op] ?" 1) if the operator is minus we really cannot determine the expected type as either another datetime or numeric would be valid 2) if the operator is plus the param needs to be of some numeric type
WITHOUT_CLASSIFICATION	for the case of dynamic-update="true" we need to generate the update sql
WITHOUT_CLASSIFICATION	don't need to check laziness (dirty checking algorithm handles that)
WITHOUT_CLASSIFICATION	for the case of dynamic-update="false" or no snapshot we use the static sql
WITHOUT_CLASSIFICATION	if not "get" then try "is"
WITHOUT_CLASSIFICATION	now update only the tables with dirty properties (and the table with the version number)
WITHOUT_CLASSIFICATION	for the case of dynamic-insert="true" we need to generate the insert sql
WITHOUT_CLASSIFICATION	for the case of dynamic-insert="true" we need to generate the insert sql
WITHOUT_CLASSIFICATION	for the case of dynamic-insert="false" use the static sql
WITHOUT_CLASSIFICATION	for the case of dynamic-insert="false" use the static sql
WITHOUT_CLASSIFICATION	not supported
WITHOUT_CLASSIFICATION	this property belongs to the table and it is not specifically excluded from optimistic locking by optimistic-lock="false"
WITHOUT_CLASSIFICATION	we need to utilize dynamic delete statements
WITHOUT_CLASSIFICATION	otherwise utilize the static delete statements
WITHOUT_CLASSIFICATION	just a performance opt!
WITHOUT_CLASSIFICATION	just a performance opt!
WITHOUT_CLASSIFICATION	all joins join to the pk of the driving table
WITHOUT_CLASSIFICATION	notice that we skip the first table it is the driving table!
WITHOUT_CLASSIFICATION	we can inner join to superclass tables (the row must be there) we can never inner join to subclass tables
WITHOUT_CLASSIFICATION	skip the driving table
WITHOUT_CLASSIFICATION	get 'em in the right order (not that it really matters)
WITHOUT_CLASSIFICATION	here we work under the following assumptions ------------ valid cases -------------------------------------- 1) datetime + {something other than datetime} always results in a datetime ( db will catch invalid conversions ) 2) datetime - datetime always results in a double 3) datetime - {something other than datetime} always results in a datetime ( db will catch invalid conversions ) ------------ invalid cases ------------------------------------ 4) datetime + datetime 5) {something other than datetime} - datetime 6) datetime {any type} 7) datetime / {any type} 8) {any type} / datetime doing so allows us to properly handle parameters as either the left or right side here in the majority of cases
WITHOUT_CLASSIFICATION	render the where and from parts
WITHOUT_CLASSIFICATION	we could regerate this inside each called method!
WITHOUT_CLASSIFICATION	now render the joins
WITHOUT_CLASSIFICATION	this will add the new from element to the origin.
WITHOUT_CLASSIFICATION	now render the select clause
WITHOUT_CLASSIFICATION	now tie it all together
WITHOUT_CLASSIFICATION	insert/update/delete sql
WITHOUT_CLASSIFICATION	select sql
WITHOUT_CLASSIFICATION	no need to check laziness dirty checking handles that
WITHOUT_CLASSIFICATION	fully resolve the map reference create implicit joins.
WITHOUT_CLASSIFICATION	temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	the basic implementation is to simply use the node's text
WITHOUT_CLASSIFICATION	for dialects which are known to not support ansi-sql row-value-constructor syntax we should mutate the tree.
WITHOUT_CLASSIFICATION	due to the complexity in initializing the selectclause do not generate one here. if it is not found simply return null also do not cache since it gets generated well after we are created.
WITHOUT_CLASSIFICATION	check the version unsaved-value if appropriate
WITHOUT_CLASSIFICATION	let this take precedence if defined since it works for assigned identifiers
WITHOUT_CLASSIFICATION	check the id unsaved-value
WITHOUT_CLASSIFICATION	check to see if it is in the second-level cache
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	for property references generate <tablealias>.<columnname> as <projectionalias>
WITHOUT_CLASSIFICATION	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	if there is no resulting row return null
WITHOUT_CLASSIFICATION	force immediate execution of the insert
WITHOUT_CLASSIFICATION	if this from element is a collection and the path is a collection property (maxindex etc.) then generate a sub-query.
WITHOUT_CLASSIFICATION	entities ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	collections ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	cannot occur
WITHOUT_CLASSIFICATION	cannot occur
WITHOUT_CLASSIFICATION	only carry on if the method has no parameters
WITHOUT_CLASSIFICATION	try "get"
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	should be safe to only ever expect entitypersister references here
WITHOUT_CLASSIFICATION	this page intentionally left blank )
WITHOUT_CLASSIFICATION	do not do anything
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	cant instantiate
WITHOUT_CLASSIFICATION	if it is a property of an embedded component invoke on the "identifier"
WITHOUT_CLASSIFICATION	otherwise
WITHOUT_CLASSIFICATION	skip finalize methods
WITHOUT_CLASSIFICATION	note interfaces is assumed to already contain hibernateproxy.class
WITHOUT_CLASSIFICATION	note interfaces is assumed to already contain hibernateproxy.class
WITHOUT_CLASSIFICATION	hhh-2481 make sure the callback gets cleared otherwise the instance stays in a static thread local.
WITHOUT_CLASSIFICATION	while constructor is running
WITHOUT_CLASSIFICATION	while constructor is running
WITHOUT_CLASSIFICATION	note interface is assumed to already contain hibernateproxy.class
WITHOUT_CLASSIFICATION	interfaces arguments
WITHOUT_CLASSIFICATION	todo!
WITHOUT_CLASSIFICATION	get the caller
WITHOUT_CLASSIFICATION	get the caller principals
WITHOUT_CLASSIFICATION	private static final alias default_alias = new alias(10 null)
WITHOUT_CLASSIFICATION	needed to bump this up to dotnode because that is the only thing which currently knows about the property-ref path in the correct format it is either this or recurse over the dotnodes constructing the property path just like dotnode does internally
WITHOUT_CLASSIFICATION	if the identifier is quoted remove the quotes
WITHOUT_CLASSIFICATION	truncate the identifier to the max alias length less the suffix length
WITHOUT_CLASSIFICATION	full joins are not supported.. yet!
WITHOUT_CLASSIFICATION	null is not considered the same type as integer. $non-nls-1 $non-nls-1
WITHOUT_CLASSIFICATION	the outerjoinsafterwhere needs to come before where clause to properly handle dynamic filters
WITHOUT_CLASSIFICATION	$non-nls-1
WITHOUT_CLASSIFICATION	$non-nls-1
WITHOUT_CLASSIFICATION	$non-nls-1
WITHOUT_CLASSIFICATION	$non-nls-1
WITHOUT_CLASSIFICATION	strip off any leading 'and' token
WITHOUT_CLASSIFICATION	if the condition is not already there
WITHOUT_CLASSIFICATION	dontspace.add("'")
WITHOUT_CLASSIFICATION	for mysql
WITHOUT_CLASSIFICATION	hashmap columnsunique = new hashmap()
WITHOUT_CLASSIFICATION	null caused some problems
WITHOUT_CLASSIFICATION	package
WITHOUT_CLASSIFICATION	not sure if this would ever be null but wanted to be careful
WITHOUT_CLASSIFICATION	even on inverse="true"
WITHOUT_CLASSIFICATION	package
WITHOUT_CLASSIFICATION	package
WITHOUT_CLASSIFICATION	if true then execute db updates otherwise just generate and display updates
WITHOUT_CLASSIFICATION	we only release the connection
WITHOUT_CLASSIFICATION	deprecated option
WITHOUT_CLASSIFICATION	if an exception occurs during flush user must call rollback()
WITHOUT_CLASSIFICATION	actually this last test is probably unnecessary since beforecompletion() doesn't get called during rollback
WITHOUT_CLASSIFICATION	this one only really needed for badly-behaved applications! (if the transactionmanager has a sychronization registered its a noop) (actually we do need it for downgrading locks)
WITHOUT_CLASSIFICATION	create an dotnode ast for the path and resolve it.
WITHOUT_CLASSIFICATION	if an exception occurs during flush user must call rollback()
WITHOUT_CLASSIFICATION	if we could not register a synchronization do the before/after completion callbacks ourself (but we need to let jdbccontext know that this is what we are going to do so it doesn't keep trying to register synchronizations)
WITHOUT_CLASSIFICATION	swallow it and continue to roll back jta transaction
WITHOUT_CLASSIFICATION	so the transaction is already rolled back by jta spec
WITHOUT_CLASSIFICATION	this method is a noop if there is a synchronization!
WITHOUT_CLASSIFICATION	two conditions where we need to transform this to a theta-join syntax 1) 'elem' is the "root from-element" in correlated subqueries 2) the dotnode.usethetastyleimplicitjoins has been set to true and 'elem' represents an implicit join
WITHOUT_CLASSIFICATION	websphere however is not a sane jee/jta container
WITHOUT_CLASSIFICATION	for sane jee/jta containers the transaction itself functions as its identifier
WITHOUT_CLASSIFICATION	swallow the transaction was finished
WITHOUT_CLASSIFICATION	all aliastoentitymapresulttransformer are considered equal ~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	create the join element under the from element.
WITHOUT_CLASSIFICATION	all distinctrootentityresulttransformer are considered equal ~~~~~~~~~~~
WITHOUT_CLASSIFICATION	map of entitymode -> tuplizer
WITHOUT_CLASSIFICATION	this is a virtual id property
WITHOUT_CLASSIFICATION	this one needed only for guessentitymode()
WITHOUT_CLASSIFICATION	create our own copy of the user-supplied tuplizer impl map
WITHOUT_CLASSIFICATION	todo move this to sf per hhh-3517 also see hhh-1907 and componentmetamodel
WITHOUT_CLASSIFICATION	then the pojo tuplizer using the dynamic-map tuplizer if no pojo representation is available
WITHOUT_CLASSIFICATION	build the dynamic-map tuplizer
WITHOUT_CLASSIFICATION	then dom4j tuplizer if dom4j representation is available
WITHOUT_CLASSIFICATION	build the dynamic-map tuplizer
WITHOUT_CLASSIFICATION	put the "standard" tuplizers into the tuplizer map first
WITHOUT_CLASSIFICATION	found a ctor but it was not publicly accessible so try to request accessibility
WITHOUT_CLASSIFICATION	private final sessionfactoryimplementor sessionfactory
WITHOUT_CLASSIFICATION	cached for efficiency
WITHOUT_CLASSIFICATION	public componentmetamodel(component component sessionfactoryimplementor sessionfactory) {
WITHOUT_CLASSIFICATION	this.sessionfactory = sessionfactory
WITHOUT_CLASSIFICATION	it was not embedded so the argument is just an id
WITHOUT_CLASSIFICATION	then the pojo tuplizer using the dynamic-map tuplizer if no pojo representation is available
WITHOUT_CLASSIFICATION	then dom4j tuplizer if dom4j representation is available
WITHOUT_CLASSIFICATION	put the "standard" tuplizers into the tuplizer map first
WITHOUT_CLASSIFICATION	then handle any user-defined entity modes
WITHOUT_CLASSIFICATION	return currentid
WITHOUT_CLASSIFICATION	reset the id
WITHOUT_CLASSIFICATION	origin.adddestination( destination ) this was the cause of hhh-242 origin.settype( from_fragment ) set the parent node type so that the ast is properly formed. the destination node will have all the from text. the parent node is a collection join too (voodoo - see joinprocessor)
WITHOUT_CLASSIFICATION	reset the version
WITHOUT_CLASSIFICATION	the default is to simply not lazy fetch properties for now
WITHOUT_CLASSIFICATION	add the second join the one that ends in the destination table.
WITHOUT_CLASSIFICATION	temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	found a ctor but it was not publicly accessible so try to request accessibility
WITHOUT_CLASSIFICATION	determine the id getter and setter methods from the proxy interface (if any) determine all interfaces needed by the resulting proxy
WITHOUT_CLASSIFICATION	return getfactory().getsettings().getbytecodeprovider().getproxyfactoryfactory().buildproxyfactory()
WITHOUT_CLASSIFICATION	not final because proxy factory creation can fail
WITHOUT_CLASSIFICATION	superclass entity-name
WITHOUT_CLASSIFICATION	temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	init the aliases after initing the constructornode
WITHOUT_CLASSIFICATION	temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	legacy behavior (with no abstract attribute specified)
WITHOUT_CLASSIFICATION	get ready to start adding nodes.
WITHOUT_CLASSIFICATION	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	note this affects the return value!
WITHOUT_CLASSIFICATION	need to account for allowable '_' within the variant
WITHOUT_CLASSIFICATION	add the type to the list of returned sqlresulttypes.
WITHOUT_CLASSIFICATION	collection types
WITHOUT_CLASSIFICATION	convenience methods relating to operations across arrays of types
WITHOUT_CLASSIFICATION	lobs cannot be compared
WITHOUT_CLASSIFICATION	blobs are ignored by merge()
WITHOUT_CLASSIFICATION	value is the entity name
WITHOUT_CLASSIFICATION	early exit!
WITHOUT_CLASSIFICATION	generate id select fragment and then property select fragment for each expression just like generateselectfragments().
WITHOUT_CLASSIFICATION	todo!
WITHOUT_CLASSIFICATION	xml is the entity name
WITHOUT_CLASSIFICATION	special case this is the leaf of the containment graph even though not immutable
WITHOUT_CLASSIFICATION	tolerates nulls
WITHOUT_CLASSIFICATION	sqlresulttypelist
WITHOUT_CLASSIFICATION	metatype is assumed to be single-column type
WITHOUT_CLASSIFICATION	get all the select expressions (that we just generated) and render the select.
WITHOUT_CLASSIFICATION	look through the fromelement's children to find any collections of values that should be fetched
WITHOUT_CLASSIFICATION	return associationtype.foreign_key_to_parent this is better but causes a transient object exception
WITHOUT_CLASSIFICATION	use the lower case function name. remember whether we're in a select clause or not.
WITHOUT_CLASSIFICATION	ident might be the name of a class.
WITHOUT_CLASSIFICATION	todo!!!
WITHOUT_CLASSIFICATION	st.settimestamp( index new timestamp( cal.gettimeinmillis() ) cal ) jdk 1.5 only
WITHOUT_CLASSIFICATION	st.setdate( index new date( cal.gettimeinmillis() ) cal ) jdk 1.5 only
WITHOUT_CLASSIFICATION	both are timestamps
WITHOUT_CLASSIFICATION	at least one is a plain old date
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	if the corresponding sql value is null the reader we got is null as well
WITHOUT_CLASSIFICATION	fetch reader content up to the end - and put characters in a stringbuffer
WITHOUT_CLASSIFICATION	return stringbuffer content as a large string
WITHOUT_CLASSIFICATION	or types.longvarchar?
WITHOUT_CLASSIFICATION	not called at runtime so doesn't matter if its slow )
WITHOUT_CLASSIFICATION	todo
WITHOUT_CLASSIFICATION	chop off the rest of the tree.
WITHOUT_CLASSIFICATION	different nullability rules for pk/fk
WITHOUT_CLASSIFICATION	cache this
WITHOUT_CLASSIFICATION	only really need new array during semiresolve!
WITHOUT_CLASSIFICATION	forcefully remove leading ands from where fragments the grammar will handle adding them
WITHOUT_CLASSIFICATION	todo!!!!!!!
WITHOUT_CLASSIFICATION	create a new filters node as a parent of all filters
WITHOUT_CLASSIFICATION	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	public object instantiate(object parent sessionimplementor session) throws hibernateexception
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	versiontype impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ note simply returns null for seed() and next() as the only known application of binary types for versioning is for use with the timestamp datatype supported by sybase and sql server which are completely db-generated values
WITHOUT_CLASSIFICATION	lobs cannot be compared
WITHOUT_CLASSIFICATION	not really necessary i guess
WITHOUT_CLASSIFICATION	clobs are ignored by merge() operation
WITHOUT_CLASSIFICATION	we do not have to worry about queued additions to uninitialized collections since they can only occur for inverse collections!
WITHOUT_CLASSIFICATION	collections cannot be compared
WITHOUT_CLASSIFICATION	remember the uk value
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	processcollectionproperty(token q.getcollectionpersister(collectionrole) collectionname)
WITHOUT_CLASSIFICATION	we must use the "remembered" uk value since it is not available from the entityentry during assembly
WITHOUT_CLASSIFICATION	collections don't dirty an unversioned parent entity
WITHOUT_CLASSIFICATION	return false
WITHOUT_CLASSIFICATION	this just handles a particular case of component projection perhaps get rid of it and throw an exception
WITHOUT_CLASSIFICATION	note we avoid joining to the next table if the named property is just the foreign key value
WITHOUT_CLASSIFICATION	the key is the owning entity itself so get the id from the key
WITHOUT_CLASSIFICATION	if the original is a persistentcollection and that original was not flagged as dirty then reset the target's dirty flag here after the copy operation. </p> one thing to be careful of here is a "bare" original collection in which case we should never ever ever reset the dirty flag on the target because we simply do not know
WITHOUT_CLASSIFICATION	ignore subselect keywords
WITHOUT_CLASSIFICATION	copy elements into newly empty target collection
WITHOUT_CLASSIFICATION	for a null target or a target which is the same as the original we need to put the merged elements in a new collection
WITHOUT_CLASSIFICATION	by default just use an unanticipated capacity since we don't know how to extract the capacity to use from original here
WITHOUT_CLASSIFICATION	get the elements back into the target making sure to handle dirty flag
WITHOUT_CLASSIFICATION	check if collection is currently being loaded
WITHOUT_CLASSIFICATION	check if it is already completely loaded but unowned
WITHOUT_CLASSIFICATION	cache the actual id of the object not the value of the property-ref which might not be initialized
WITHOUT_CLASSIFICATION	todo!!!!!!!
WITHOUT_CLASSIFICATION	create a new collection wrapper to be initialized later
WITHOUT_CLASSIFICATION	some jdbc drivers erroneously return an empty array here for a null db value /
WITHOUT_CLASSIFICATION	our column span is the number of columns in the pk
WITHOUT_CLASSIFICATION	cannot batch fetch by unique key (property-ref associations)
WITHOUT_CLASSIFICATION	we already know current is not null
WITHOUT_CLASSIFICATION	the ids are fully resolved so compare them with isdirty() not ismodified()
WITHOUT_CLASSIFICATION	the owner of the association is not the owner of the id
WITHOUT_CLASSIFICATION	----------------------------------------------------------- constructors
WITHOUT_CLASSIFICATION	----------------------------------------------------- instance variables
WITHOUT_CLASSIFICATION	public static jdbcexception newjdbcexception(string string sqlexception root string sql) { string = string + " [" + sql + ']' log.error(string root) logexceptions(root) return new jdbcexception(string root sql) } public static jdbcexception newjdbcexception(string string sqlexception root) { log.error(string root) logexceptions(root) return new jdbcexception(string root) }
WITHOUT_CLASSIFICATION	--------------------------------------------------------- public methods
WITHOUT_CLASSIFICATION	compare the two maps for equality
WITHOUT_CLASSIFICATION	simple tests that require no synchronization
WITHOUT_CLASSIFICATION	sybase fail if we don't do that sigh
WITHOUT_CLASSIFICATION	handles things like a and b or c a and ( b or c ) not a and not b not ( a and b ) x between y and z (overloaded "and") x in ( a b c ) (overloaded brackets) not not a a is not null (overloaded "not") etc and expressions like foo = bar (maps to foo.id = bar.id) foo.bar = 'foo' (maps to foo.bar = 'foo') foo.bar.baz = 1.0 (maps to foo.bar = bar.id and bar.baz = 1.0) 1.0 = foo.bar.baz (maps to bar.baz = 1.0 and foo.bar = bar.id) foo.bar.baz = a.b.c (maps to bar.baz = b.c and foo.bar = bar.id and a.b = b.id) foo.bar.baz + a.b.c (maps to bar.baz + b.c and foo.bar = bar.id and a.b = b.id) ( foo.bar.baz + 1.0 ) < 2.0 (maps to ( bar.baz + 1.0 ) < 2.0 and foo.bar = bar.id)
WITHOUT_CLASSIFICATION	release the jdk internal caches everytime to ensure this plays nicely with destroyable class-loaders
WITHOUT_CLASSIFICATION	release the jdk internal caches everytime to ensure this plays nicely with destroyable class-loaders
WITHOUT_CLASSIFICATION	try to "pretty print" it
WITHOUT_CLASSIFICATION	otherwise just dump it
WITHOUT_CLASSIFICATION	its an interface so we can't really tell anything
WITHOUT_CLASSIFICATION	its an interface so we can't really tell anything
WITHOUT_CLASSIFICATION	use default behavior
WITHOUT_CLASSIFICATION	note early return
WITHOUT_CLASSIFICATION	the mru cache used to keep hard references to the most recently used query plans note lru here is a bit of a misnomer it indicates that lru entries are removed the actual kept entries are the mru entries
WITHOUT_CLASSIFICATION	we want to be able to just use the defaults if jndi environment properties are not supplied so don't put null in anywhere
WITHOUT_CLASSIFICATION	clone -----------------------------------------------------------------------
WITHOUT_CLASSIFICATION	serialize -----------------------------------------------------------------------
WITHOUT_CLASSIFICATION	stream closed in the finally
WITHOUT_CLASSIFICATION	stream closed in the finally
WITHOUT_CLASSIFICATION	deserialize -----------------------------------------------------------------------
WITHOUT_CLASSIFICATION	static methods only - hide constructor
WITHOUT_CLASSIFICATION	&& !('_'==character)
WITHOUT_CLASSIFICATION	returnign null!
WITHOUT_CLASSIFICATION	returnign null!
WITHOUT_CLASSIFICATION	includes last '.'
WITHOUT_CLASSIFICATION	+1 to include the following '.'
WITHOUT_CLASSIFICATION	impl note takes advantage of the fact that an escpaed single quote embedded within a quote-block can really be handled as two seperate quote-blocks for the purposes of this method
WITHOUT_CLASSIFICATION	first time we find match!
WITHOUT_CLASSIFICATION	entitynames may now include slashes for the representations classname may be an inner class
WITHOUT_CLASSIFICATION	wrapped iterators
WITHOUT_CLASSIFICATION	index of current iterator in the wrapped iterators array
WITHOUT_CLASSIFICATION	the current iterator
WITHOUT_CLASSIFICATION	the last used iterator
WITHOUT_CLASSIFICATION	it was a boolean expression
WITHOUT_CLASSIFICATION	public static object[] clone(class elementclass object[] array) {object[] result = (object[]) array.newinstance( elementclass array.length )system.arraycopy(array 0 result 0 array.length)return result}
WITHOUT_CLASSIFICATION	call this before any iterator method to make sure that the current iterator is not exhausted
WITHOUT_CLASSIFICATION	doable if needed
WITHOUT_CLASSIFICATION	set last used iterator here in case the user calls remove before calling hasnext() or next() (although they shouldn't)
WITHOUT_CLASSIFICATION	peek ahead
WITHOUT_CLASSIFICATION	if we reach the end of the string w/o finding the matching end that is an exception
WITHOUT_CLASSIFICATION	we have a placeholder spin forward till we find the end
WITHOUT_CLASSIFICATION	make sure spinning forward did not put us past the end of the buffer
WITHOUT_CLASSIFICATION	first try to locate this resource through the current context classloader.
WITHOUT_CLASSIFICATION	next try to locate this resource through this class's classloader
WITHOUT_CLASSIFICATION	next try to locate this resource through the system classloader
WITHOUT_CLASSIFICATION	anywhere else we should look?
WITHOUT_CLASSIFICATION	would need an identityset for this!
WITHOUT_CLASSIFICATION	arrays.aslist doesn't do primitive arrays
WITHOUT_CLASSIFICATION	faster?
WITHOUT_CLASSIFICATION	the name of a class
WITHOUT_CLASSIFICATION	its the listener class name
WITHOUT_CLASSIFICATION	allow 987654321
WITHOUT_CLASSIFICATION	default to element set if no elements() specified
WITHOUT_CLASSIFICATION	look for the instance by uuid
WITHOUT_CLASSIFICATION	in case we were deserialized in a different jvm look for an instance with the same name (alternatively we could do an actual jndi lookup here.)
WITHOUT_CLASSIFICATION	first lets determine whether to apply cglib or javassist based instrumentation
WITHOUT_CLASSIFICATION	make sure we don't override previous set values
WITHOUT_CLASSIFICATION	entirely optional!!
WITHOUT_CLASSIFICATION	its the listener instance (or better be)
WITHOUT_CLASSIFICATION	context.unbind(boundname)
WITHOUT_CLASSIFICATION	readresolveobject
WITHOUT_CLASSIFICATION	cfg.setproperty("hibernate.show_sql" "true")
WITHOUT_CLASSIFICATION	defensive convenience methods
WITHOUT_CLASSIFICATION	create the sessionfactory from hibernate.cfg.xml
WITHOUT_CLASSIFICATION	make sure you log the exception as it might be swallowed
WITHOUT_CLASSIFICATION	begin unit of work
WITHOUT_CLASSIFICATION	write html header
WITHOUT_CLASSIFICATION	handle actions
WITHOUT_CLASSIFICATION	print page
WITHOUT_CLASSIFICATION	write html footer
WITHOUT_CLASSIFICATION	end unit of work
WITHOUT_CLASSIFICATION	start the session to be used for this request
WITHOUT_CLASSIFICATION	make the session available to the session factory's "current context"
WITHOUT_CLASSIFICATION	pass control along to the rest of the processing chain
WITHOUT_CLASSIFICATION	remove session from "current context"
WITHOUT_CLASSIFICATION	eager fetch the collection so we can use it detached
WITHOUT_CLASSIFICATION	if we want to handle it bidirectional and detached we also need to load this collection with an eager outer-join fetch this time with criteria and not hql
WITHOUT_CLASSIFICATION	event anevent = (event) session .createcriteria(event.class).setfetchmode("participants" fetchmode.join) .add( expression.eq("id" eventid) ) .uniqueresult() eager fetch the colleciton so we can use it detached
WITHOUT_CLASSIFICATION	end of first unit of work
WITHOUT_CLASSIFICATION	or bidirectional safety method setting both sides aperson.addtoevent(anevent)
WITHOUT_CLASSIFICATION	begin second unit of work
WITHOUT_CLASSIFICATION	reattachment of aperson
WITHOUT_CLASSIFICATION	the getemailaddresses() might trigger a lazy load of the collection
WITHOUT_CLASSIFICATION	we need our tm so get it now and avoid doing other work if there is a problem
WITHOUT_CLASSIFICATION	don't hold the jbc node lock throughout the tx as that prevents reads and other updates
WITHOUT_CLASSIFICATION	don't hold the jbc node lock throughout the tx as that prevents reads and other updates
WITHOUT_CLASSIFICATION	jbc put a version in the node when it created as part of some internal operation. we are always newer but if the jbc version is > 1 something odd has happened
WITHOUT_CLASSIFICATION	swaldman 2006-08-28 define c3p0-style configuration parameters for properties with hibernate-specific overrides to detect and warn about conflicting declarations
WITHOUT_CLASSIFICATION	not null if the isolation level has been specified in the configuration file. otherwise it is left to the driver's default value.
WITHOUT_CLASSIFICATION	configured outside of hibernate (i.e. servlet container or java bean container already has proxool pools running and this provider is to just borrow one of these
WITHOUT_CLASSIFICATION	if you're closing down the connectionprovider chances are an is not a real big deal just warn
WITHOUT_CLASSIFICATION	(as is always optional for consistency with sql/oql)
WITHOUT_CLASSIFICATION	process the "new" hql style where aliases are assigned _after_ the class name or path expression ie. using the as construction
WITHOUT_CLASSIFICATION	the loaded owner will be set to null after the collection is removed so capture its value as the affected owner so it is accessible to both pre- and post- events
WITHOUT_CLASSIFICATION	is a primitive type invokespecial
WITHOUT_CLASSIFICATION	array of primitive type do nothing
WITHOUT_CLASSIFICATION	handle a path expression or class name that appears at the start in the "new" hql style or an alias that appears at the start in the "old" hql style
WITHOUT_CLASSIFICATION	handle <= >= != is not not between not in
WITHOUT_CLASSIFICATION	the loop ensures atomicity of the select + update even for no transaction or read committed isolation level
WITHOUT_CLASSIFICATION	transfer an explicitly defined entity name handle the lazy attribute
WITHOUT_CLASSIFICATION	keep the behavior consistent even for boundary usages
WITHOUT_CLASSIFICATION	keep the behavior consistent even for boundary usages
WITHOUT_CLASSIFICATION	get meta's from <joined-subclass>
WITHOUT_CLASSIFICATION	parameters on the property mapping should override parameters in the typedef
WITHOUT_CLASSIFICATION	fetch="join" overrides default laziness fetch="join" overrides default laziness
WITHOUT_CLASSIFICATION	note special case default to join and non-lazy for the "second join" of the many-to-many
WITHOUT_CLASSIFICATION	so we "clock over" on the first invocation
WITHOUT_CLASSIFICATION	state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	void setcomponenttuplizerfactory(componenttuplizerfactory componenttuplizerfactory) { this.componenttuplizerfactory = componenttuplizerfactory }
WITHOUT_CLASSIFICATION	element index -> id
WITHOUT_CLASSIFICATION	note that it might be better to iterate the snapshot but this is safe assuming the user implements equals() properly as required by the set contract!
WITHOUT_CLASSIFICATION	collections detect changes made via their public interface and mark themselves as dirty as a performance optimization
WITHOUT_CLASSIFICATION	essentially if the real session is closed allow any method call to pass through since the real session will complain by throwing an appropriate exception note that allowing close() above has the same basic effect but we capture that there simply to perform the unbind
WITHOUT_CLASSIFICATION	the default sqlexceptionconverter for all dialects is based on sqlstate since sqlerrorcode is extremely vendor-specific. specific dialects may override to return whatever is most appropriate for that vendor.
WITHOUT_CLASSIFICATION	only necessary for postgre < 7.4 httpanoncvs.postgresql.org/cvsweb.cgi/pgsql/doc/src/sgml/ref/create_sequence.sgml
WITHOUT_CLASSIFICATION	select topic syntax from information_schema.help where section like 'function%' order by section topic see also -> httpwww.h2database.com/html/functions.html
WITHOUT_CLASSIFICATION	registercolumntype(types.varbinary "character($l)") registercolumntype(types.blob "character($l)" ) for use prior to cp 11.0 registercolumntype(types.clob "character($l)" )
WITHOUT_CLASSIFICATION	the blob type requires a size arguement - this defaults to bytes - no arg defaults to 1 whole byte! other argument mods include k - kilobyte m - megabyte g - gigabyte. refer to the pbdevelopers guide for more info.
WITHOUT_CLASSIFICATION	we must return a valid rdms/rsa command from this method to prevent rdms/rsa from issuing error 400
WITHOUT_CLASSIFICATION	oracle driver reports to support getgeneratedkeys() but they only support the version taking an array of the names of the columns to be returned (via its returning clause). no other driver seems to support this overloaded version.
WITHOUT_CLASSIFICATION	add the comment nest the main query in an outer select add the rownnumber bit into the outer query select list
WITHOUT_CLASSIFICATION	you may still have other resultsets or update counts left to process here but you can't do it now or the resultset you just got will be closed
WITHOUT_CLASSIFICATION	note for object <-> sql datatype mappings see configuration manager | advanced | sql | system ddl datatype mappings tbdregistercolumntype(types.binary "binary($1)") changed 08-11-2005 jsl
WITHOUT_CLASSIFICATION	trim(end_keyword string-expression-1 from string-expression-2) use hibernate implementation "from" is one of the parameters they pass in position ?3 registerfunction( "trim" new sqlfunctiontemplate(hibernate.string "trim(?1 ?2 from ?3)") )
WITHOUT_CLASSIFICATION	whether this dialect has an identity clause added to the data type or a completely seperate identity data type
WITHOUT_CLASSIFICATION	according to both the ansi-sql and jpa specs trim takes a variable number of parameters between 1 and 4. at least one paramer (trimsource) is required. from the sql spec <trim function> = trim <left paren> <trim operands> <right paren> <trim operands> = [ [ <trim specification> ] [ <trim character> ] from ] <trim source> <trim specification> = leading | trailing | both if <trim specification> is omitted both is assumed. if <trim character> is omitted space is assumed
WITHOUT_CLASSIFICATION	/ prepare persisters and link them up with their cache region/access-strategy
WITHOUT_CLASSIFICATION	named queries
WITHOUT_CLASSIFICATION	this will throw an error if there's something wrong.
WITHOUT_CLASSIFICATION	does not handle arrays (thats ok cos they can't be lazy) or newly instantiated collections so we can do the cast
WITHOUT_CLASSIFICATION	collection deletions are a special case since update() can add deletions of collections not loaded by the session.
WITHOUT_CLASSIFICATION	we can do the cast since orphan-delete does not apply to 1. newly instantiated collections 2. arrays (we can't track orphans for detached arrays)
WITHOUT_CLASSIFICATION	if the natural-id is marked as non-mutable it is not retrieved during a normal database-snapshot operation
WITHOUT_CLASSIFICATION	watch out for a case where old is still referenced somewhere in the object graph! (which is a user error)
WITHOUT_CLASSIFICATION	slice to get the columns for this component property
WITHOUT_CLASSIFICATION	int result = 17 result = 37 result + type.hashcode() result = 37 result + ( value==null ? 0 value.hashcode() ) return result
WITHOUT_CLASSIFICATION	the collectionentry.isreached() stuff is just to detect any silly users who set up circular or shared references between/to collections.
WITHOUT_CLASSIFICATION	detached collection wrappers that get found + reattached during flush shouldn't be ignored
WITHOUT_CLASSIFICATION	the unique property value represented here may or may not be serializable so we do an explicit check here in order to generate a better error message
WITHOUT_CLASSIFICATION	if the version of a newly instantiated object is not the same as the version seed value use that as the unsaved-value
WITHOUT_CLASSIFICATION	ie. we never have to null out a reference to an uninitialized proxy
WITHOUT_CLASSIFICATION	ignore this row the collection is in process of being loaded somewhere further "up" the stack
WITHOUT_CLASSIFICATION	entity load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ currently not yet used
WITHOUT_CLASSIFICATION	should be ok performance-wise to generate new delegate instances for each request since these are locally stack-scoped. besides it makes the code much easier to read than the old transactionhelper stuff
WITHOUT_CLASSIFICATION	this implementation is supposed to tolerate incorrect unsaved-value mappings for the purpose of backward-compatibility
WITHOUT_CLASSIFICATION	this implementation is supposed to tolerate incorrect unsaved-value mappings for the purpose of backward-compatibility
WITHOUT_CLASSIFICATION	wrap up any new collections directly referenced by the object or its components
WITHOUT_CLASSIFICATION	remove any snapshot not really for memory management purposes but rather because it might now be stale and there is no longer any entityentry to take precedence this is now handled by removeentity() session.getpersistencecontext().removedatabasesnapshot(key)
WITHOUT_CLASSIFICATION	skip this check for composite-ids relating to dom4j entity-mode alternatively we could add a check to make sure the incoming id value is an instance of element
WITHOUT_CLASSIFICATION	upgrade the lock if necessary lock(result lockmode)
WITHOUT_CLASSIFICATION	now any collections that are initialized inside this block do not get updated - they are ignored until the next flush
WITHOUT_CLASSIFICATION	we must clone embedded composite identifiers or we will get back the same instance that we pass in
WITHOUT_CLASSIFICATION	sub-insertions should occur before containing insertion so try to do the callback now
WITHOUT_CLASSIFICATION	the entity is not associated with the session so try interceptor and unsaved-value
WITHOUT_CLASSIFICATION	scan the query string for class names appearing in the from clause and replace with all persistent implementors of the class/interface returning multiple query strings (make sure we don't pick up a class in the select clause!)
WITHOUT_CLASSIFICATION	save() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	evict() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	stops flush being called multiple times if this method is recursively called
WITHOUT_CLASSIFICATION	if it is an uninitialized proxy pointing with this session then when it is accessed the underlying instance will be "contained"
WITHOUT_CLASSIFICATION	generate an explicit join for the root dot node. the implied joins will be collected and passed up to the root dot node.
WITHOUT_CLASSIFICATION	a session is considered to contain an entity only if the entity has an entry in the session's persistence context and the entry reports that the entity has not been removed
WITHOUT_CLASSIFICATION	does the collection referenced by this fromelement specify an order-by attribute? if so attach it to the query's order-by
WITHOUT_CLASSIFICATION	and the token could be an identifer and the error is a mismatched token error
WITHOUT_CLASSIFICATION	if a where clause was specified in the update/delete query use it to limit the returned ids here
WITHOUT_CLASSIFICATION	int parameterstart = getwalker().getnumberofparametersinsetclause() list allparams = getidselectparameterspecifications() iterator whereparams = allparams.sublist( parameterstart allparams.size() ).iterator()
WITHOUT_CLASSIFICATION	default implementation if this node has a data type and that data type is not an association then this is scalar.
WITHOUT_CLASSIFICATION	resolve the lhs fully generate implicit joins. pass in the property name so that the resolver can discover foreign key (id) properties.
WITHOUT_CLASSIFICATION	if the propertytype is null and there isn't a parent just stop now there was a problem resolving the node anyway.
WITHOUT_CLASSIFICATION	we do not look for an existing join on the same path because it makes sense to join twice on the same collection role
WITHOUT_CLASSIFICATION	our parent is another dot node meaning we are being further dereferenced. thus we need to generate a join unless the parent refers to the associated entity's pk (because 'our' table would know the fk).
WITHOUT_CLASSIFICATION	public final currency getcurrency(int col) throws hibernateexception {return (currency) get(col)}
WITHOUT_CLASSIFICATION	here we have two possibilities 1) the property-name matches the explicitly identifier property name 2) the property-name matches the implicit 'id' property name
WITHOUT_CLASSIFICATION	set the unresolved path in this node and the parent. set the text for the parent.
WITHOUT_CLASSIFICATION	get the first child to be considered. sub-classes may do this differently in order to skip nodes that are not select expressions (e.g. distinct).
WITHOUT_CLASSIFICATION	if this is an entity and the property is the identifier property then use getidentifiertype(). note that the propertyname.equals( propertypath ) checks whether we have a component key reference where the component class property name is the same as the entity id property name if the two are not equal this is the case and we'd need to "fall through" to using the property mapping.
WITHOUT_CLASSIFICATION	for a subquery the alias to use depends on a few things (we already know this is not an overall select) 1) if this from_element represents a correlation to the outer-most query a) if the outer query represents a multi-table persister we need to use the given alias in anticipation of one of the multi-table executors being used (as this subquery will actually be used in the "id select" phase of that multi-table executor) b) otherwise we need to use the persister's table name as the column qualification 2) otherwise (not correlated) use the given alias
WITHOUT_CLASSIFICATION	not a collection? return the entity property mapping.
WITHOUT_CLASSIFICATION	collection of <many-to-any/> mappings used to circumvent the component-collection check below
WITHOUT_CLASSIFICATION	otherwise the destination node was implied by the from clause and the from clause processor will automatically add it in the right place.
WITHOUT_CLASSIFICATION	if the first identifier in the path referrs to the class alias (not the class name) then this is a correlated subselect. if it's a correlated sub-select use the existing table alias. otherwise generate a new one.
WITHOUT_CLASSIFICATION	check to see if our "proppath" actually represents a property on the persister
WITHOUT_CLASSIFICATION	an ident node can represent an index expression if the ident represents a naked property ref note this makes the assumption (which is currently the case in the hql-sql grammar) that the ident is first resolved itself (addrexpr -> resolve()). the other option if that changes is to call resolve from here but it is currently un-needed overhead.
WITHOUT_CLASSIFICATION	this uses a pathexpressionparser but notice that compound paths are not valid only bare names and simple paths
WITHOUT_CLASSIFICATION	if this is an implied join in a from clause then use ansi-style joining and set the flag on the fromelement that indicates that it was implied in the from clause itself.
WITHOUT_CLASSIFICATION	origin.adddestination(destination) add the query spaces.
WITHOUT_CLASSIFICATION	for an explicit many-to-many relationship add a second join from the intermediate (many-to-many) table to the destination table. also make sure that the from element's idea of the destination is the destination table.
WITHOUT_CLASSIFICATION	reset the node type because the rest of the system is expecting from_fragment all we wanted was for the factory to create the right sub-class. this might get reset again later on anyway to make the sql generation simpler.
WITHOUT_CLASSIFICATION	explicit = true this is an explict select. arraylist sqlresulttypelist = new arraylist()
WITHOUT_CLASSIFICATION	sqlresulttypelist.add( type ) generate the select expression.
WITHOUT_CLASSIFICATION	if the expression list has exactly one expression and the type of the expression is a collection then this might be a collection function such as index(c) or size(c).
WITHOUT_CLASSIFICATION	need to parse off the column qualifiers this is assuming (which is true as of now) that this is only used from update and delete hql statement parsing
WITHOUT_CLASSIFICATION	for regression testing against output from the old parser found it easiest to simply reorder the fromelements here into ascending order in terms of injecting them into the resulting sql ast in orders relative to those expected by the old parser this is definitely another of those "only needed for regression purposes". the syntheticandfactory then simply injects them as it encounters them.
WITHOUT_CLASSIFICATION	the uber-rule here is that we need to include subclass joins if the fromelement is in any way dereferenced by a property from the subclass table otherwise we end up with column references qualified by a non-existent table reference in the resulting sql
WITHOUT_CLASSIFICATION	classic translator does not support collection of ordinal param metadata
WITHOUT_CLASSIFICATION	the following variables are stacks that keep information about each subexpression in the list of nested subexpressions we are currently processing.
WITHOUT_CLASSIFICATION	the loop ensures atomicity of the select + update even for no transaction or read committed isolation level
WITHOUT_CLASSIFICATION	should not be able to reach last without maxposition being set unless there are no results
WITHOUT_CLASSIFICATION	we found it in the temp pc. should indicate we are in the midst of processing a result set containing eager fetches via join fetch
WITHOUT_CLASSIFICATION	do not use proxiesbykey since not all proxies that point to this session's instances are in that collection!
WITHOUT_CLASSIFICATION	if there is no tm configured we will not be able to access the javax.transaction.transaction object in order to register a synch anyway.
WITHOUT_CLASSIFICATION	since the result set cursor is always left at the first physical row after the "last processed" we need to jump back one position to get the key value we are interested in skipping
WITHOUT_CLASSIFICATION	true if this is a query and we are loading multiple instances of the same collection role otherwise this is a collectioninitializer and we are loading up a single collection or batch
WITHOUT_CLASSIFICATION	we don't need to worry about existing version being uninitialized because this block isn't called by a re-entrant load (re-entrant loads _always_ have lock mode none)
WITHOUT_CLASSIFICATION	add temp entry so that the next step is circular-reference safe - only needed because some types don't take proper advantage of two-phase-load (esp. components)
WITHOUT_CLASSIFICATION	assume we are in an auto-commit state
WITHOUT_CLASSIFICATION	log a message about potential connection leaks
WITHOUT_CLASSIFICATION	ps.close() just close it do not try to return it to the pool! note early exit!
WITHOUT_CLASSIFICATION	this has been shown to happen occasionally in rare cases when using a transaction manager + transaction-timeout where the timeout calls back through hibernate's registered transaction synchronization on a separate "reaping" thread. in cases where that reaping thread executes through this block at the same time the main application thread does we can get into situations where these cmes occur. and though it is not "allowed" per-se the end result without handling it specifically is infinite looping. so here we simply break the loop
WITHOUT_CLASSIFICATION	unfortunately this stuff can't be cached because it is per-invocation not constant for the querytranslator instance
WITHOUT_CLASSIFICATION	can't cache this stuff either (per-invocation) we are given a map of user-alias -> lock mode create a new map of sql-alias -> lock mode
WITHOUT_CLASSIFICATION	don't create a unique key 'cos some databases don't like a uk on nullable columns getcollectiontable().createuniquekey( getidentifier().getconstraintcolumns() )
WITHOUT_CLASSIFICATION	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is persister-centric and/or entityinfo-centric ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	isset = collection.isset() issorted = collection.issorted()
WITHOUT_CLASSIFICATION	lists arrays sets maps bags
WITHOUT_CLASSIFICATION	we finish all the "removes" first to take care of possible unique constraints and so that we can take better advantage of batching
WITHOUT_CLASSIFICATION	use a combination of foreign key columns and pk columns since the ordering of removal and addition is not guaranteed when a child moves from one parent to another
WITHOUT_CLASSIFICATION	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is persister-centric and/or entityinfo-centric ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	information about properties of this class including inherited properties (only really needed for updatable/insertable properties)
WITHOUT_CLASSIFICATION	all this only really needs to consider properties of this class not its subclasses but since we are reusing code used for sequential selects we use the subclass closure
WITHOUT_CLASSIFICATION	here we render the select column list based on the properties defined as being generated. for partial component generation we currently just re-select the whole component rather than trying to handle the individual generated portions.
WITHOUT_CLASSIFICATION	this is the root (versioned) table and we are using version-based optimistic locking if we are not updating the version also don't check it (unless this is a "generated" version column)!
WITHOUT_CLASSIFICATION	optimistic-lock="all" include all updatable properties optimistic-lock="dirty" include all properties we are updating this time
WITHOUT_CLASSIFICATION	this property belongs to the table and it is not specifically excluded from optimistic locking by optimistic-lock="false"
WITHOUT_CLASSIFICATION	check to see if the connection is in auto-commit mode (no connection means aggressive connection release outside a jta transaction context so must be autocommit mode)
WITHOUT_CLASSIFICATION	need to treat this as if it where optimistic-lock="all" (dirty does not make sense) first we need to locate the "loaded" state note it potentially could be a proxy so perform the location the safe way
WITHOUT_CLASSIFICATION	we always assume an instance with a null identifier or no identifier property is unsaved!
WITHOUT_CLASSIFICATION	need to use the identifier type of the collection owner since the incoming is value is actually the owner's id. using the collection's key type causes problems with property-ref keys
WITHOUT_CLASSIFICATION	allow any identifier quoted with backtick only recognizes identifiers beginning with a letter
WITHOUT_CLASSIFICATION	following doesn't handle (null not null) but unnecessary since this would mean all rows
WITHOUT_CLASSIFICATION	impl note due to the delayed population of setters (setters cached for performance) we really cannot pro0perly define equality for this transformer
WITHOUT_CLASSIFICATION	we need to dirty check collections since they can cause an owner version number increment
WITHOUT_CLASSIFICATION	return the id so we can use it to reset the proxy id return result
WITHOUT_CLASSIFICATION	optimizer = getfactory().getsettings().getbytecodeprovider().getreflectionoptimizer( mappedclass getternames setternames proptypes )
WITHOUT_CLASSIFICATION	cache the actual id of the object not the value of the property-ref which might not be initialized
WITHOUT_CLASSIFICATION	we now have the value of the property-ref we reference. however we need to dig a little deeper as that property might also be an entity type in which case we need to resolve its identitifier
WITHOUT_CLASSIFICATION	retrieve the value of the designated column in the current row of this resultset object as a java.io.reader object
WITHOUT_CLASSIFICATION	not absolutely necessary but helps for some equals()/hashcode() implementations
WITHOUT_CLASSIFICATION	this should be a call to resolve() not resolveidentifier() 'cos it might be a property-ref and we did not cache the referenced value
WITHOUT_CLASSIFICATION	if we have <tt>not-found="ignore"</tt> association mapped to a formula we always need to dirty check it so we can update the second-level cache
WITHOUT_CLASSIFICATION	can't just return null here since that would cause an owning component to become null
WITHOUT_CLASSIFICATION	for arrays replaceelements() may return a different reference since the array length might not match
WITHOUT_CLASSIFICATION	actual cache of the entries. soft references are used for both the keys and the values here since the values pertaining to the mru entries are kept in a seperate hard reference cache (to avoid their enqueuement/garbage-collection).
WITHOUT_CLASSIFICATION	as soon as we encounter our first letter return the substring from that position
WITHOUT_CLASSIFICATION	note expected in the syntax type=listenerclass ({sep}type=listenerclass) where {sep} is any whitespace or comma
WITHOUT_CLASSIFICATION	istransactioncallbackregistered denotes whether any hibernate transaction has registered as a callback against this jdbccontext only one such callback is allowed. directly serializing this value causes problems with jdbctransaction or really any transaction impl where the callback is local to the transaction instance itself since that transaction is not serialized along with the jdbccontext. thus we handle that fact here explicitly
WITHOUT_CLASSIFICATION	note that for sequential scrolling we make the assumption that the first persister element is the "root entity"
WITHOUT_CLASSIFICATION	we call getkeyfromresultset() here so that we can know the key value upon which to perform the breaking logic. however it is also then called from getrowfromresultset() which is certainly not the most efficient. but the call here is needed and there currently is no other way without refactoring of the doquery()/getrowfromresultset() methods
WITHOUT_CLASSIFICATION	this check is needed since processing leaves the cursor after the last physical row for the current logical row thus if we are after the last physical row this might be caused by either 1) scrolling to the last logical row 2) scrolling past the last logical row in the latter scenario the previous logical row really is the last logical row. in all other cases we should process back two logical records (the current logic row plus the previous logical row).
WITHOUT_CLASSIFICATION	and perform the load
WITHOUT_CLASSIFICATION	important reuse the same event instances for performance!
WITHOUT_CLASSIFICATION	this is a query and we are loading multiple instances of the same collection role
WITHOUT_CLASSIFICATION	we found a collection element in the result set
WITHOUT_CLASSIFICATION	we did not find a collection element in the result set so we ensure that a collection is created with the owner's identifier since what we have is an empty collection
WITHOUT_CLASSIFICATION	this is a collection initializer so we must create a collection for each of the passed-in keys to account for the possibility that the collection is empty and has no rows in the result set
WITHOUT_CLASSIFICATION	grab its state from the resultset and keep it in the session (but don't yet initialize the object itself) note that we acquire lockmode.read even if it was not requested
WITHOUT_CLASSIFICATION	a many-to-many decrement currentdepth here to allow join across the association table without exceeding max_fetch_depth (i.e. the "currentdepth - 1" bit)
WITHOUT_CLASSIFICATION	if not a composite key use "foo in (? ? ?)" for batching if no batch and not a composite key use "foo = ?"
WITHOUT_CLASSIFICATION	the user visible aliases which are unknown to the superclass these are not the actual "physical" sql aliases
WITHOUT_CLASSIFICATION	first look for a reference to a projection alias
WITHOUT_CLASSIFICATION	first look for a reference to a projection alias
WITHOUT_CLASSIFICATION	it does not refer to an alias of a projection look for a property
WITHOUT_CLASSIFICATION	determine if the collection elements are entities
WITHOUT_CLASSIFICATION	let return-propertys override whatever the persister has for aliases.
WITHOUT_CLASSIFICATION	translates an ast join type (i.e. the token type) into a joinfragment.xxx join type. @param astjointype the ast join type (from hqlsqltokentypes or sqltokentypes) @return a joinfragment.xxx join type. @see joinfragment @see sqltokentypes
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	public list getcollectionaliases() { return collectionaliases } public list getcollectionowners() { return collectionowners } public list getcollectionowneraliases() { return collectionowneraliases } public list getcollectionpersisters() { return collectionpersisters } public map getalias2persister() { return alias2persister } public boolean iscollectioninitializer() { return iscollectioninitializer } public list getpersisters() { return persisters } public map getalias2owneralias() { return alias2owneralias } public list getscalartypes() { return scalartypes } public list getscalarcolumnaliases() { return scalarcolumnaliases } public list getpropertyresults() { return propertyresults } public list getcollectionpropertyresults() { return collectionresults } public map getalias2return() { return alias2return }
WITHOUT_CLASSIFICATION	sqlqueryparser parser = new sqlqueryparser( sqlquery processor.getalias2persister() processor.getalias2return() aliases collaliases collpersisters suffixes collsuffixes ) sql = parser.process() namedparameterbindpoints = parser.getnamedparameters()
WITHOUT_CLASSIFICATION	include the discriminator and class-level where but not filters
WITHOUT_CLASSIFICATION	sqlaliassuffixes[i] = element.getcolumnaliassuffix()
WITHOUT_CLASSIFICATION	none because its the requested lock mode not the actual!
WITHOUT_CLASSIFICATION	at this point we have (drivingsqlalias) the sql alias of the driving table corresponding to the given user alias. however the driving table is not (necessarily) the table against which we want to apply locks. mainly the exception case here is joined-subclass hierarchies where we instead want to apply the lock against the root table (for all other strategies it just happens that driving and root are the same).
WITHOUT_CLASSIFICATION	the column doesnt exist at all.
WITHOUT_CLASSIFICATION	we have a mapped identifier property and the root of the incoming property path matched that identifier property
WITHOUT_CLASSIFICATION	we have an embedded composite identifier
WITHOUT_CLASSIFICATION	both many-to-one and one-to-one are represented as a property. entitypersister is relying on this value to determine "lazy fetch groups" in terms of field-level interception. so we need to make sure that we return true here for the case of many-to-one and one-to-one with lazy="no-proxy" impl note - lazy="no-proxy" currently forces both lazy and unwrap to be set to true. the other case we are extremely interested in here is that of lazy="proxy" where lazy is set to true but unwrap is set to false. thus we use both here under the assumption that this return is really only ever used during persister construction to determine the lazy property/field fetch groupings. if that assertion changes then this check needs to change as well. partially this is an issue with the overloading of the term "lazy" here
WITHOUT_CLASSIFICATION	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is tuplizer-centric but is passed a session ~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is tuplizer-centric but is passed a session ~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	roottablename = persistentclass.getroottable().getqualifiedname( factory.getdialect() factory.getdefaultcatalog() factory.getdefaultschema() )
WITHOUT_CLASSIFICATION	subclasses
WITHOUT_CLASSIFICATION	custom sql
WITHOUT_CLASSIFICATION	protected void initpropertypaths(final string pathfinal type typefinal string[] columnsfinal string[] formulatemplatesfinal mapping factory)throws mappingexception {addformulapropertypath(path type formulatemplates)initpropertypaths(path type columns formulatemplates factory)}
WITHOUT_CLASSIFICATION	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	custom sql (would be better if these were private)
WITHOUT_CLASSIFICATION	moved up from abstractentitypersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	aliases for identifier ( alias.id ) skip if the entity defines a non-id property named 'id'
WITHOUT_CLASSIFICATION	decide which resultset to get the property value from
WITHOUT_CLASSIFICATION	note it is conceptually possible that a usertype could map null to a non-null value so the following is arguable
WITHOUT_CLASSIFICATION	the contract of entitytuplizer.determineconcretesubclassentityname says that returning null is an indication that the specified entity-name (this.getentityname) should be used.
WITHOUT_CLASSIFICATION	need to use the identifier type of the collection owner since the incoming is value is actually the owner's id. using the collection's key type causes problems with property-ref keys
WITHOUT_CLASSIFICATION	cache these since they are stateless this one could even be static
WITHOUT_CLASSIFICATION	"as" is not in keywords
WITHOUT_CLASSIFICATION	--commented out by inspection (12/4/04 910 am) public abstract void addcondition(string alias string[] columns string condition)
WITHOUT_CLASSIFICATION	use the id column alias
WITHOUT_CLASSIFICATION	private list aliases = new arraylist()
WITHOUT_CLASSIFICATION	columns.add(columnname) aliases.add(tablealias)
WITHOUT_CLASSIFICATION	where fragment must be empty!
WITHOUT_CLASSIFICATION	revert to traditional hibernate behavior of setting initialpoolsize to minpoolsize unless otherwise specified with a c3p0.-style parameter.
WITHOUT_CLASSIFICATION	arbitrary on clause ignored!!
WITHOUT_CLASSIFICATION	might happen with a managed connection
WITHOUT_CLASSIFICATION	might happen with a managed connection
WITHOUT_CLASSIFICATION	if an exception occurs during flush user must call rollback()
WITHOUT_CLASSIFICATION	essentially 1) if we have a local (hibernate) transaction in progress and it already has the usertransaction cached use that usertransaction to determine the status. 2) if a transaction manager has been located use that transaction manager to determine the status. 3) finally as the last resort try to lookup the usertransaction via jndi and use that to determine the status.
WITHOUT_CLASSIFICATION	package
WITHOUT_CLASSIFICATION	swallow it (the transaction _was_ successful or successfully rolled back)
WITHOUT_CLASSIFICATION	ignore it
WITHOUT_CLASSIFICATION	we need to dirty check many-to-ones with not-found="ignore" in order to update the cache (not the database) since in this case a null entity reference can lose information
WITHOUT_CLASSIFICATION	create our own copy of the user-supplied tuplizer impl map
WITHOUT_CLASSIFICATION	regions can get instantiated in the course of normal work (e.g. a named query region will be created the first time the query is executed) so suspend any ongoing tx
WITHOUT_CLASSIFICATION	then handle any user-defined entity modes
WITHOUT_CLASSIFICATION	establish the region root node with a non-locking data version
WITHOUT_CLASSIFICATION	temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	note this is being used from the process of shutting down a sessionfactory. specific things to consider (1) this clearing of the region should not propagate to other nodes on the cluster (if any) this is the cache-mode-local option bit (2) really just trying a best effort to cleanup after ourselves lock failures etc are not critical here this is the fail-silently option bit
WITHOUT_CLASSIFICATION	need to extract the component values and check for subtype replacements
WITHOUT_CLASSIFICATION	we ignore minimalputoverride. jbosscache putforexternalread is already about as minimal as we can get it will promptly return if it discovers that the node we want to write to already exists
WITHOUT_CLASSIFICATION	for now just "re-flatten" the metamodel since this is temporary stuff anyway (hhh-1907)
WITHOUT_CLASSIFICATION	configure the cache to use our tm
WITHOUT_CLASSIFICATION	this solution would allow us to eliminate the owner arg to disassemble() but what if the collection was null and then later had elements added? seems unsafe session.getpersistencecontext().getcollectionentry( (persistentcollection) value ).getkey()
WITHOUT_CLASSIFICATION	make sure jbc doesn't look one up
WITHOUT_CLASSIFICATION	some collections are not lazy
WITHOUT_CLASSIFICATION	here we don't want to suspend the tx. if we do 1) we might be caching query results that reflect uncommitted changes. no tx == no wl on cache node so other threads can prematurely see those query results 2) no tx == immediate replication. more overhead plus we spread issue #1 above around the cluster
WITHOUT_CLASSIFICATION	return the (fully resolved) identifier value but do not resolve to the actual referenced entity instance note the owner of the association is not really the owner of the id!
WITHOUT_CLASSIFICATION	add a zero (or quite low) timeout option so we don't block. ignore any timeoutexception. basically we forego caching the query result in order to avoid blocking. reads are done with suspended tx so they should not hold the lock for long. not caching the query result is ok since any subsequent read will just see the old result with its out-of-date timestamp that result will be discarded and the db query performed again.
WITHOUT_CLASSIFICATION	impl note takes advantage of the fact that an escpaed single quote embedded within a quote-block can really be handled as two seperate quote-blocks for the purposes of this method
WITHOUT_CLASSIFICATION	we have the jbcwritemutex so no other local thread will be trying to write this key. it's possible here some remote thread has come in and changed the values again but since we are reading the values to write to jbc right now we know we are writing the latest values i.e. we don't assume that what we cached in entry.update() above is what we should write to jbc now. our write could be redundant i.e. we are writing what some remote thread just came in an wrote. there is a chance that yet another remote thread will update us and we'll then overwrite that later data in jbc. but all remote nodes will ignore that change in their localcache the only place it will live will be in jbc where it can only effect the initial state transfer values on newly joined nodes (i.e. populatelocalcache()).
WITHOUT_CLASSIFICATION	local cache so we use synchronization
WITHOUT_CLASSIFICATION	local cache so we use synchronization
WITHOUT_CLASSIFICATION	don't need to lock the cache here since if someone else inserted the same pk first the insert would fail
WITHOUT_CLASSIFICATION	we need to grab the version value from the entity otherwise we have issues with generated-version entities that may have multiple actions queued during the same flush
WITHOUT_CLASSIFICATION	we need to obtain the lock before any actions are executed since this may be an inverse="true" bidirectional association and it is one of the earlier entity actions which actually updates the database (this action is resposible for second-level cache invalidation only)
WITHOUT_CLASSIFICATION	postdelete after actually deleting a row record the fact that the instance no longer exists on the database (needed for identity-column key generation) and remove it from the session cache
WITHOUT_CLASSIFICATION	intentionally empty
DESIGN	todo what else to do here?
DESIGN	put() has nowait semantics is this really appropriate? note that it needs to be async replication never local or sync
DESIGN	'hibernate.temp.use_jdbc_metadata_defaults' is a temporary magic value. the need for it is intended to be alleviated with future developement thus it is not defined as an environment constant it is used to control whether we should consult the jdbc metadata to determine certain settings default values it is useful to not do this when the database may not be available (mainly in tools usage).
DESIGN	todo get sql rendering out of this package!
DESIGN	todo get sql rendering out of this package!
DESIGN	todo eventually merge this with treecache and just add optional opt-lock support there.
DESIGN	can happen because of the multiple ways cache.remove() can be invoked (
DESIGN	work around the "feature" where tree cache is validating the inserted node during the next transaction. no idea
DESIGN	fixme per the regionfactory class javadoc this constructor version should not be necessary. @param props the configuration properties
DESIGN	fixme per the regionfactory class javadoc this constructor version should not be necessary. @param props the configuration properties
DESIGN	fixme hacky workaround to jbcache-1202
DESIGN	fixme hacky workaround to jbcache-1202
DESIGN	todo i considered validating ts cache config here but decided to defer unti gettimestampscacheinstance() in case the cache is never actually used
DESIGN	todo is this a valid operation on a timestamps cache?
DESIGN	todo is this a valid operation on a timestamps cache?
DESIGN	todo why not use the timestamp in a dataversion?
DESIGN	can happen because of the multiple ways cache.remove() can be invoked (
DESIGN	work around the "feature" where tree cache is validating the inserted node during the next transaction. no idea
DESIGN	swaldman 2004-02-07 modify to allow null values to signify fall through to c3p0 poolconfig defaults
DESIGN	turn hibernate.c3p0. into c3p0. so c3p0 gets a chance to see all hibernate.c3p0.
DESIGN	todo this bit actually has to be called after all cascades! but since identity insert is called synchronously instead of asynchronously as other actions it isn't
DESIGN	todo reenable if we also fix the above todo
DESIGN	todo inefficient if that cache is just going to ignore the updated state!
DESIGN	we may be screwed here since the collection action is about to execute and we do not know the final owner key value
DESIGN	create an action that will evict collection and entity regions based on queryspaces (table names). todo cache the autodetected information and pass it in instead.
DESIGN	todo what else to do here?
DESIGN	todo modify the class definition if not already transformed
DESIGN	todo what else to do here?
DESIGN	this is called by sessionfactory irregardless we just disregard here could also add a check to sessionfactory to only conditionally call start
DESIGN	this is called by sessionfactory irregardless we just disregard here could also add a check to sessionfactory to only conditionally call stop
DESIGN	todo to handle concurrent writes correctly this should return a lock to the client
DESIGN	put() has nowait semantics is this really appropriate? note that it needs to be async replication never local or sync
DESIGN	todo to handle concurrent writes correctly the client should pass in a lock
DESIGN	todo assumes all collections disassemble to an array!
DESIGN	todo reuse the preloadevent
DESIGN	todo this was added to support initializing an entity's entityentry snapshot during reattach this should be refactored to instead expose a method to assemble a entityentry based on this state for return.
DESIGN	todo what is the implication of this?
DESIGN	use count as the default. this mimics the old behavior although none might be a better option moving forward in the case of callable
DESIGN	todo joinkeycolumnname & foreignkeycolumnname should be called either here or at a slightly higer level in the stack (to get all the information we need) right now hbmbinder does not support the
DESIGN	todo suck this into initlaziness!
DESIGN	we have to set up the table later!! yuck
DESIGN	todo better to degrade to lazy="false" if uninstrumented
DESIGN	todo again how should this work for non-pojo entities?
DESIGN	todo this is a bit of copy/paste from indexedcollection.createprimarykey()
DESIGN	this inner class implements a case statement.perhaps im being a bit over-clever here
DESIGN	todo bad implementation cos it depends upon ordering of mapping doc fixing this requires that collection/persistentclass gain access to the mappings reference from configuration (or the filterdefinitions map directly) sometime during configuration.buildsessionfactory (after all the types/filter-defs are known and before building persisters).
DESIGN	use of a stringbuffer to workaround a jdk bug
DESIGN	hack/workaround as sqlquery impl depend on having a key.
DESIGN	fixme get the persistentclass
DESIGN	fixme get the persistentclass
DESIGN	icky workaround for mysql bug
DESIGN	todo somehow add the newly created foreign keys to the internal collection
DESIGN	todo possibly relax that
DESIGN	todo possibly relax that
DESIGN	todo possibly relax that
DESIGN	use of a stringbuffer to workaround a jdk bug
DESIGN	use a degenerated strategy for backward compatibility
DESIGN	sets can be just a view of a part of another collection. do we need to copy it to be sure it won't be changing underneath us? ie. this.set.addall(set)
DESIGN	note that i parameter is now unused (delete it?)
DESIGN	just to help out during the load (ugly i know)
DESIGN	todo safe to interpret "map.remove(key) == null" as non-dirty?
DESIGN	yick! need this for proper serialization/deserialization handling
DESIGN	todo get sql rendering out of this package!
DESIGN	todo get sql rendering out of this package!
DESIGN	yuck!
DESIGN	todo get sql rendering out of this package!
DESIGN	todo not sure this is correct could not find docs on how to do this.
DESIGN	hsql has no blob/clob support . but just put these here for now!
DESIGN	does this need holdlock also? return tablename + " with (updlock rowlock holdlock)"
DESIGN	sql-server at least needed this dropped after use strange!
DESIGN	todo is there really any reason to kkeep trying if this fails once?
DESIGN	tbd should this be varbinary($1)? registercolumntype(types.varbinary "binary($1)")
DESIGN	is it necessary to register %exact since it can only appear in a where clause?
DESIGN	xmlforest requires a new kind of function constructor
DESIGN	does this dialect support the alter table syntax?
DESIGN	do we need to qualify index names with the schema name?
DESIGN	does this dialect support the unique column syntax?
DESIGN	does this dialect support check constraints?
DESIGN	do we need to drop constraints before dropping tables in this dialect?
DESIGN	does this dialect support the for update syntax?
DESIGN	does this dialect support the oracle-style for update nowait syntax?
DESIGN	does this dialect support for update of allowing particular rows to be locked?
DESIGN	note there is a wierd implementation in the client side
DESIGN	todo never reached since gettypename() actually throws an exception!
DESIGN	todo should we additionally check the current isolation mode explicitly?
DESIGN	todo remove this and just have subclasses use isolater/isolatedwork directly
DESIGN	todo should orphans really be deleted during lock???
DESIGN	orphans should not be deleted during merge??
DESIGN	orphans should not be deleted during copy??
DESIGN	i suppose?
DESIGN	todo suck this logic into the collection!
DESIGN	todo an alternative is to check if the owner has changed if it hasn't then get the id from collection.getowner()
DESIGN	todorefactor + make this method private
DESIGN	todo we can actually just determine this from the incoming entityentry-s
DESIGN	todo should this be an initializeentityeventlistener??? (watch out for performance!)
DESIGN	todo better to pass the id in as an argument?
DESIGN	todo potentially look at optimizing these two arrays
DESIGN	trim done to workaround stupid oracle bug that cant handle whitespaces before a { in a sp
DESIGN	trim done to workaround stupid oracle bug that cant handle whitespaces before a { in a sp
DESIGN	todo temporary
DESIGN	todo not quite sure about the full implications of this!
DESIGN	todo not quite sure about the full implications of this!
DESIGN	todo ugly here
DESIGN	this is kinda the best we can do
DESIGN	todo this needn't exclude subclasses
DESIGN	todo need map? the prob is a proper key right?
DESIGN	todo i'd much rather have this done from #endloadingcollection(collectionpersisterloadingcollectionentry)
DESIGN	todo hack!!! note here we cleanup the load context when we have no more local lce entries. this "works" for the time being because really only the collection load contexts are implemented. long term this cleanup should become part of the "close result set" processing from the (sandbox/jdbc) jdbc-container code.
DESIGN	todo should really move this log statement to collectiontype where this is used from
DESIGN	todo keep seperate notions of qt[] here for shallow/non-shallow queries
DESIGN	todo add this info to the translator and aggregate it here
DESIGN	todo move into collection type so we can use polymorphism!
DESIGN	todo should we check the current isolation mode explicitly?
DESIGN	todo suck into event class
DESIGN	do we even really need this? the update will fail anyway.
DESIGN	hum should we cascade anyway? throw an exception? fine like it is?
DESIGN	todo would it be better to do a refresh from db?
DESIGN	todo we use two visitors here inefficient!
DESIGN	this class has no proxies (so do a shortcut)
DESIGN	postload is needed for ejb3 todo reuse the postloadevent
DESIGN	todo put this stuff back in to read snapshot from the second-level cache (needs some extra work)
DESIGN	null or brand new collection this will also (inefficiently) handle arrays which have no snapshot so we can't do any better
DESIGN	todo is this 100% correct?
DESIGN	todo iteratively get transient entities and retry merge until one of the following conditions 1) transientcopycache.size() == 0 2) transientcopycache.size() is not decreasing and copycache.size() is not increasing todo find out if retrying can add entities to copycache (don't think it can) for now just retry once throw transientobjectexception if there are still any transient entities
DESIGN	entity name will not be available for non-pojo entities todo cache the entity name somewhere so that it is available to this exception
DESIGN	todo we should throw an exception if we really know for sure that this is a detached instance rather than just assuming throw new staleobjectstateexception(entityname id)
DESIGN	todo perhaps we should additionally require that the incoming entity version be equivalent to the defined unsaved-value?
DESIGN	perhaps this should be an exception since it is only ever used in the above method?
DESIGN	put a placeholder in entries so we don't recurse back and try to save() the same object again. question should this be done before onsave() is called? likewise should it be done before onupdate()?
DESIGN	todo merge into one method!
DESIGN	todo refactor to .sql package
DESIGN	provides query splitting methods which were originally in querytranslator. <br> todo this will need to be refactored at some point. @author josh
DESIGN	todo this is one of the ugliest and most fragile pieces of code in hibernate.
DESIGN	todo temporary needed because currently persister is the one that creates and renders the join fragments for inheritence hierarchies
DESIGN	todo better way?!?
DESIGN	not possible to simply re-use the versionpropertynode here as it causes oom errors due to circularity (
DESIGN	todothis is only needed during compilation .. can we eliminate the instvar?
DESIGN	todo this is a bit dodgy come up with a better way to check this (plus see above comment)
DESIGN	even here if only properties mapped to the "base table" are referenced in the set and where clauses this could be handled by the basicdelegate. todo decide if it is better performance-wise to perform that check or to simply use the multitableupdatedelegate
DESIGN	todo switch statements are always evil! we already had bugs because of forgotten token types. use polymorphism for this!
DESIGN	todo we really need to be able to deal with component paths here also this is difficult because the hql-sql grammar expects all those node types to be fromreferencenodes. one potential fix here would be to convert the intoclause to just use a fromclause/fromelement combo (as a child of the insertstatement) and move all this logic into the insertstatement. that's probably the easiest approach (read least amount of changes to the grammar and code) but just doesn't feel right as then an insert would contain 2 from-clauses
DESIGN	really there are two situations where it should be ok to allow the insertion into properties defined on a superclass 1) union-subclass with an abstract root entity 2) discrim-subclass #1 is handled already because of the fact that unionsubclasspersister alreay always returns 0 for this call we may want to disallow it for discrim-subclass just for consistency-sake (currently does not work anyway)
DESIGN	yuck!
DESIGN	implicit joins are always(?) ok to reuse
DESIGN	todo we may also want to check that the types here map to exactly one column/jdbc-type can't think of a situation where arithmetic expression between multi-column mappings makes any sense.
DESIGN	we do not know either type blind guess!
DESIGN	todo used to be exprnoparens! was this needed?
DESIGN	todo replace this with a more elegant solution.
DESIGN	todo should this really return null? if not figure out something better to do here.
DESIGN	todo get sql rendering out of this package!
DESIGN	yuck!
DESIGN	ignore it the incoming property could not be found so we cannot be sure what to do here. at the very least the safest is to simply not apply any dereference toggling
DESIGN	todo most of below was taken verbatim from dotnode should either delegate this logic or super-type it
DESIGN	otherwise a trim-specification and/or a trim-character have been specified we need to decide which options are present and "do the right thing" should leading trim-characters be trimmed? should trailing trim-characters be trimmed? the trim-character the trim-source
DESIGN	todo we should really just collect these from the various selectexpressions rather than regenerating here
DESIGN	todo is this a bit ugly?
DESIGN	need a better way to define the suffixes here
DESIGN	todo something much better - look at the type of the other expression! todo have comparisonexpression and/or arithmeticexpression rules complete the resolution of boolean nodes.
DESIGN	todo what amount of significant digits need to be supported here? - from the decimalformat docs [significant digits] = [minimum integer digits] + [maximum fraction digits]
DESIGN	needed the "clazz_" check to work around union-subclasses todo is there a way to tell whether a persister is truly discrim-column based inheritence?
DESIGN	we should actually rework this class to not implement parser and just process path expressions in the most convenient way.
DESIGN	the class is now way to complex!
DESIGN	todo get sql rendering out of here
DESIGN	todo is there a better way?
DESIGN	must be done here because of side-effect! yuck
DESIGN	name from a super query (a bit inelegant that it shows up here)
DESIGN	we should reengineer this class so that rather than the current ad - hoc linear approach to processing a stream of tokens we instead build up a tree of expressions.
DESIGN	this is ugly here but needed because its a subquery
DESIGN	unhappy about this being public is there a better way?
DESIGN	make sure this is a defined parameter and check the incoming value type todo what should be the actual exception type here?
DESIGN	todo this constructor form is only used from constructor directly below us can it go away?
DESIGN	todo copy/paste from sessionimpl pull up!
DESIGN	todo should remove this exposure and have all references to the session's batcher use the connectionmanager.
DESIGN	todo should this get moved to persistentcontext? logically is persistentcontext the "thing" to which an interceptor gets attached?
DESIGN	todo what type?
DESIGN	todo should seriously consider not allowing a txn to begin from a child session can always route the request to the root session
DESIGN	short-circuit for performance
DESIGN	not absolutely necessary but does help with aggressive release
DESIGN	todo remove these last two as batcher is no longer managing connections
DESIGN	work around a bug in all known connection pools.
DESIGN	todo make this the factory for "entity mode related" sessions also means making this the target of transaction-synch and the thing that knows how to cascade things between related sessions at that point perhaps this thing is a "sessioncontext" and connectionmanager is a "jdbccontext"? a "sessioncontext" should live in the impl package
DESIGN	todo does this really need to be here? does the collection already have it's own up-to-date snapshot?
DESIGN	todo the i==entityspan-1 bit depends upon subclass implementation (very bad)
DESIGN	this form used from annotations (?). essentially the same as the above using a resultset-mapping reference but without cachemode readonly and comment. fixme annotations do not use it so it can be remove from my pov @deprecated @param query the sql query string @param resultsetref the result-set-mapping name @param queryspaces any specified query spaces (used for auto-flushing) @param cacheable whether the query results are cacheable @param cacheregion if cacheable the region into which to store the results @param timeout a jdbc-level timeout to be applied @param fetchsize a jdbc-level fetch-size to be applied @param flushmode the flush mode to use for this query @param parametertypes parameter type map @param callable does the query string represent a callable object (i.e. proc)
DESIGN	todo add the notion of enabled filters to the cachekey to differentiate filtered collections from non-filtered but cachekey is currently used for both collections and entities would ideally need to define two seperate ones currently this works in conjuction with the check on defaultinitializecollectioneventhandler.initializecollectionfromcache() (which makes sure to not read from cache with enabled filters). early exit!!!!!
DESIGN	for sets we should end the collection load after resolving the entities since we might call hashcode() on the elements todo or we could do this polymorphically and have two different operations implemented differently for arrays
DESIGN	this is not very nice (and quite slow)
DESIGN	use of trim() here is ugly?
DESIGN	todo this is too conservative if all preceding joins were also inner joins we could use an inner join here
DESIGN	todo look at the owning property and check that it isn't lazy (by instrumentation)
DESIGN	todo inefficient
DESIGN	why does this matter?
DESIGN	from the collection of associations locate oja for the manytoone corresponding to this persister to fully define the many-to-many we need that oja so that we can use its alias here todo is there a better way here?
DESIGN	todo this class depends directly upon criteriaimpl in the impl package add a criteriaimplementor interface
DESIGN	todo add a criteriaimplementor interface this class depends directly upon criteriaimpl in the impl package
DESIGN	todo not so sure this is needed
DESIGN	meant to handle dynamic instantiation queries(copy from queryloader)
DESIGN	todo the order in which entities are saved may matter (e.g. a particular transient entity may need to be saved before other transient entities can be saved keep retrying the batch of transient entities until either 1) there are no transient entities left in transientcopycache or 2) no transient entities were saved in the last batch for now just run through the transient entities and retry the merge
DESIGN	todo this might really even be moved into the cfg package and used as the basis for all things which are configurable.
DESIGN	todo currently expects that the individual with expressions apply to the same sql table join. this may not be the case for joined-subclass where the property values might be coming from different tables in the joined hierarchy. at some point we should expand this to support that capability. however that has some difficulties 1) the biggest is how to handle ors when the individual comparisons are linked to different sql joins. 2) here we would need to track each comparison individually along with the join alias to which it applies and then pass that information back to the fromelement so it can pass it along to the joinsequence
DESIGN	this function has a template -> restore output apply the template and write the result out todo downcast to avoid using an interface? yuck.
DESIGN	at some point the generate phase needs to be moved out of here because a single object-level dml might spawn multiple sql dml command executions. possible to just move the sql generation for dml stuff but for consistency-sake probably best to just move responsiblity for the generation phase completely into the delegates (queryloader/statementexecutor) themselves. also not sure why queryloader currently even has a dependency on this at all does it need it? ideally like to see the walker itself given to the delegates directly
DESIGN	get the right object from the list would it be easier to just call getentity() ??
DESIGN	todo should we just collect these like with the collections above?
DESIGN	todo better to handle dynamic filters through implicit dynamicfilterparameterspecification see the discussion there in dynamicfilterparameterspecification's javadocs as to why it is currently not done that way.
DESIGN	/ used only for regression testing!!!! todo obviously get rid of all this junk ) /
DESIGN	create an index on the key columns??
DESIGN	todo deprecated remove eventually
DESIGN	create an index on the key columns??
DESIGN	todo improve this hack!
DESIGN	inheritance cycle detection (paranoid check)
DESIGN	todo remove use of instanceof!
DESIGN	shortcut
DESIGN	todo handle the case of a foreign key to something other than the pk
DESIGN	create an index on the key columns??
DESIGN	todo remove
DESIGN	todo remove
DESIGN	todo remove
DESIGN	todo throw exception?
DESIGN	todo throw exception? maybe warn if not the same?
DESIGN	todo make entitypersister not depend on sessionfactoryimplementor interface if possible
DESIGN	todo is there a more elegant way than downcasting?
DESIGN	todo encapsulate the protected instance variables!
DESIGN	should indicate that we are processing an insert/update/delete query with a subquery implied via a collection property function. here we need to use the table name itself as the qualification alias. todo verify this works for all databases todo is this also the case in non-"indexed" scenarios?
DESIGN	todo copy/paste from insertrows()
DESIGN	todo copy/paste from recreate()
DESIGN	should this interface extend propertymapping?
DESIGN	ie. the subquery! yuck!
DESIGN	todo move to .sql package!!
DESIGN	todo code duplication with singletableentitypersister
DESIGN	todo it would be really really nice to use this to also model components!
DESIGN	todo two hashmap lookups here is one too many
DESIGN	todo code duplication with joinedsubclassentitypersister
DESIGN	perhaps not really necessary
DESIGN	note this assumes something about how propertyselectfragment is implemented by the subclass! was tounqotedaliasstrings( getidentifercolumnnames() ) before - now tried to remove that unqoting and missing aliases..
DESIGN	note this assumes something about how propertyselectfragment is implemented by the subclass! was tounqotedaliasstrings( getdiscriminatorcolumnname() ) before - now tried to remove that unqoting and missing aliases..
DESIGN	todo should we use select .. for update?
DESIGN	todo optimize this better!
DESIGN	todo should we allow suffixes on these ?
DESIGN	this is really ugly but necessary
DESIGN	ugly little workaround for fact that createuniquekeyloaders() does not handle component properties
DESIGN	todo disable batch loading if lockmode > read?
DESIGN	append the sql to return the generated identifier todo suck into insert
DESIGN	todo i am not so sure about the exception handling in this bit!
DESIGN	todo is this really necessary????
DESIGN	todo move to .sql package and refactor with similar things!
DESIGN	todo implement functionality this might be painful to do here as the "join post processing" for the subquery has already been performed (meaning that for theta-join dialects the join conditions have already been moved over to the where clause). a "simple" solution here might to perform "join post processing" once for the entire query (including any subqueries) at one fell swoop
DESIGN	todo this eventually needs to be removed
DESIGN	kinda ugly but needed for collections with a "." node mapping
DESIGN	is this ok?
DESIGN	todo perhaps this should be some other runtimeexception
DESIGN	todo make this a bit nicer
DESIGN	yuck
DESIGN	todo we should provide some way to get keys of collection of statistics to make it easier to retrieve from a gui perspective
DESIGN	@return collection removal fixme even if isinverse="true"?
DESIGN	todo will need reference to session factory to fully complete hhh-1907
DESIGN	todo currently keeps getters and setters (instead of propertyaccessors) because of the way getgetter() and getsetter() are implemented currently yuck!
DESIGN	todo redesign how propertyaccessors are acquired
DESIGN	todo yuck!!!
DESIGN	todo yuck!!! fix after hhh-1907 is complete
DESIGN	todo need to make the majority of this functionality into a top-level support class for custom impl support
DESIGN	todo design new lifecycle for proxyfactory
DESIGN	todo would be nice to handle proxy classes elegantly!
DESIGN	todo copy/paste from manytoonetype
DESIGN	todo should this be session.instantiate(persister )?
DESIGN	todo this is a bit arbitrary expose a switch to the user?
DESIGN	todo implement caching?! proxies?!
DESIGN	todo is this right??
DESIGN	is this really necessary?
DESIGN	todo move these to a new joinabletype abstract class extended by entitytype and persistentcollectiontype
DESIGN	todo this is very suboptimal for some subclasses (namely components) since it does not take advantage of two-phase-load
DESIGN	worrying about proxies is perhaps a little bit of overkill here
DESIGN	note very hackish workaround!! todo fix this so it will work for non-pojo entity mode
DESIGN	todo fix this so it will work for non-pojo entity mode
DESIGN	we would probably refactor to have logicparser (builds a tree of simple expressions connected by and or not) expressionparser (translates from oo terms like foo foo.bar foo.bar.baz to sql terms like foos.id foos.bar_id etc) and pathexpressionparser (which does much the same thing it does now)
DESIGN	todo this is a little inefficient don't need to do a whole deep replaceelements() call
DESIGN	workaround for weblogic
DESIGN	todo this dependency is kinda bad
DESIGN	ick!
DESIGN	short cut check
DESIGN	todo move to stringhelper?
DESIGN	yukky! don't you have subclasses for that! todo race conditions can happen here
DESIGN	todo we probably should have a statisticsnotpublishedexception to make it clean
DESIGN	fixme hack to work around fact that calling node added = root.addchild( fqn ) doesn't properly set the version on the node
DESIGN	todo i considered validating the presence of the ts cache here but decided to defer unti getquerycacheinstance() in case the cache is never actually used
DESIGN	need to do that here rather than in the save event listener to let the post insert events to have a id-filled entity when identity is used (ejb3)
DESIGN	todo simply remove this override if we fix the above todos
DESIGN	this is used by sessionfactoryimpl to hand to the generated sessionimpl was the only reason i could see that we cannot just use null as settings.cacheprovider
DESIGN	this is done here 'cos we might only know the type here (ugly!) todo improve this a lot
DESIGN	todo would love to have this work on a notification basis where the successful binding of an entity/subclass would emit a notification which the extendsqueue entries could react to
DESIGN	todo not sure the best way to handle this. the non-performant way
DESIGN	would be better to use the element-type to determine whether the old and the new are equal here the problem being we do not necessarily have access to the element type in all cases
DESIGN	this next bit is to allow for both unsaved-value="negative" and for "older" behavior where version number did not get seeded if it was already set in the object todo shift it into unsaved-value strategy
DESIGN	merges don't cascade to uninitialized collections todo perhaps this does need to cascade after all.
DESIGN	todo an alternative is to check if the owner has changed if it hasn't then return collection.getowner()
DESIGN	it is possible that the tree-walking in outerjoinloader can get to an association defined by a subclass in which case the property-ref might refer to a property defined on a subclass of the current class in this case the table name is not known - this temporary solution assumes that the property-ref refers to a property of the subclass table that the association belongs to (a reasonable guess) todo fix this add outerjoinloadable.getsubclasspropertytablename(string propertyname)
DESIGN	this only works because collection entries are kept in a sequenced map by persistence context (maybe we should do like entities and keep a separate sequences set) todo calling entryset on an identitymap is slow!!
DESIGN	important to account for newly saved entities in query todo some kind of check for new status
DESIGN	brand new collection todo or an array!! we can't lock objects with arrays now??
DESIGN	todo if object was an uninitialized proxy this is inefficient resulting in two sql selects
DESIGN	before cascade! todo should this be session.instantiate(persister )?
DESIGN	todo absolutely no usages of this constructor form can it go away?
DESIGN	todo need to find a clean way to handle the "event source" role a seperate classs responsible for generating/dispatching events just duplicates most of the session methods passing around seperate reto interceptor factory actionqueue and persistentcontext is not manageable
DESIGN	todo remove
DESIGN	aliasrefnode.resolve( false false aliasrefnode.gettext() ) todo is it kosher to do it here? todo is it kosher to do it here?
DESIGN	no explicit select expression render the id and properties projection lists for every persister in the from clause into a single 'token node'. todo the only reason we need this stuff now is collection filters we should get rid of derived select clause completely!
DESIGN	todo an optimization here would be to consider cascade deletes and not gen those delete statements the difficulty is the ordering of the tables here vs the cascade attributes on the persisters -> the table info gotten here should really be self-contained (i.e. a class representation defining all the needed attributes) then we could then get an array of those
DESIGN	todo get sql rendering out of here create an ast for the join expressions. use the sql generator grammar to generate the sql text for the index expression.
DESIGN	todo this really needs to be delayed unitl after we definitively know all node types where this is currently a problem is parameters for which where we cannot unequivocally resolve an expected type
DESIGN	todo figure out a better way to get the from elements in a proper tree structure. if this is not the destination of a many-to-many add it as a child of the origin.
DESIGN	work around that crazy issue where the tree contains "empty" fromelements (no text) afaict this is caused by fromelementfactory.createcollectionjoin()
DESIGN	todo this class does too many things! we need a different kind of path expression parser for each of the diffferent ways in which path expressions can occur
DESIGN	real hacky used to count the nesting of parentheses
DESIGN	todo would be really nice to cache the spec on the query-def so as to not have to re-calc the hash currently not doable though because of the resultset-ref stuff
DESIGN	for arrays we should end the collection load before resolving the entities since the actual array instances are not instantiated during loading todo or we could do this polymorphically and have two different operations implemented differently for arrays
DESIGN	polymorphism not really handled completely correctly perhapswell actually its ok assuming that the entity name used in the lookup is the same as the the one used here which it will be
DESIGN	todo should "record" how many properties we have reffered to - and if we don't get'em'all we throw an exception! way better than trial and error )
DESIGN	very important!!!! - this class needs to be free of any static references to any cglib or javassist classes. otherwise users will always need both on their classpaths no matter which (if either) they use. another option here would be to remove the hibernate.ispropertyinitialized() method and have the users go through the sessionfactory to get this information.
DESIGN	todo is it really neceassry to provide configuration to collectionpersisters ? should it not be enough with associated class ? or why does entitypersister's not get access to configuration ? the only reason i could see that configuration gets passed to collection persisters is so that they can look up the dom4j node name of the entity element in case no explicit node name was applied at the collection element level. are you kidding me? trivial to fix then. just store and expose the node name on the entity persister (which the collection persister looks up anyway via other means).
DESIGN	for backward compatibility allow a set with no not-null element columns using all columns in the row locater sql todo create an implicit not null constraint on all cols?
DESIGN	spaces todo i'm not sure but perhaps we should exclude abstract denormalized tables?
DESIGN	workaround for backward compatibility of sets with no not-null columns assume all columns are used in the row locator sql
DESIGN	note that this method could easily be moved up to basicentitypersister if we ever needed to reuse it from other subclasses
DESIGN	index += getpropertycolumnspan( i ) todo this is kinda slow
DESIGN	todo need some caching scheme? really comes down to decision regarding amount of state (if any) kept on propertyaccessors
DESIGN	todo here is why we need to make bytecode provider global ( todo again fix this after hhh-1907 is complete
DESIGN	todo yuck! this is not quite good enough it's a quick hack around the problem of having a to-one association that refers to an embedded component
DESIGN	for dom4j "collections" only todo it would be better if this was done at the higher level by printer
DESIGN	would be great to move all this below here into another method that could also be used from the new scrolling stuff. would need to change the way the max-row stuff is handled (i.e. behind an interface) so that i could do the control breaking at the means to know when to stop
DESIGN	todo can we always use the "null property" approach for everything?
DESIGN	polymorphism comment above
DESIGN	some messy complex stuff here since createcriteria() can take an aliased path or a path rooted at the creating criteria instance
DESIGN	todo really bad evil hack to fix!!!
DESIGN	ugly hack for cases like "elements(foo.bar.collection)" (multi-part path expression ending in elements or indices)
DESIGN	try block is a hack around fact that currently tuplizers are not given the opportunity to resolve a subclass entity name. this allows the (we assume custom) interceptor the ability to influence this decision if we were not able to based on the given entityname
DESIGN	/ hack alert !!!!!!!!!!!!!!!!!!!!!!!!!!!! attempt to work around "ghost" impliedfromelements that occasionally show up between the actual things being joined. this consistently occurs from index nodes (at least against many-to-many). not sure if there are other conditions essentially look-ahead to the next fromelement that actually writes something to the sql
DESIGN	init the table here instead of earlier so that we can get a quoted table name todo would it be better to simply pass the qualified table name instead of splitting it up into schema/catalog/table names
DESIGN	todo would be great to have a mapping#hasnonidentifierpropertynamedid method i don't believe that mapping#getreferencedpropertytype accounts for the identifier property so if it returns for a property named 'id' then we should have a non-id field named id
DESIGN	todo is this really necessary????
DESIGN	todo ideally we need the construction of propertyaccessor to take the following 1) entitymode 2) entitymode-specific data (i.e. the classname for pojo entities) 3) property-specific data based on the entitymode (i.e. property-name or dom4j-node-name) the easiest way with the introduction of the new runtime-metamodel classes would be the the following predicates 1) propertyaccessorfactory.getpropertyaccessor() takes references to both a org.hibernate.metadata.entitymodemetadata and org.hibernate.metadata.property 2) what is now termed a "propertyaccessor" stores any values needed from those two pieces of information 3) code can then simply call propertyaccess.getgetter() with no parameters likewise with propertyaccessor.getsetter()
DESIGN	todo this is temporary in that the end result will probably not take a property reference per-se.
DESIGN	todo this eventually needs to be removed
DESIGN	todo make this a bit nicer
DESIGN	todo we can remove this once the deprecated ctor can be made private
DESIGN	todo we can remove this once the deprecated ctor can be made private
DESIGN	todo we can remove this once the deprecated ctor can be made private
DESIGN	todo we can remove this once the deprecated ctor can be made private
DESIGN	todo we can remove this once the deprecated ctor can be made private
DESIGN	todo we can remove this once the deprecated ctor can be made private
DESIGN	todo we can remove this once the deprecated ctor can be made private
DESIGN	todo we can remove this once the deprecated ctor can be made private
DESIGN	fixme per the regionfactory class javadoc this constructor version should not be necessary. @param props the configuration properties
DESIGN	fixme per the regionfactory class javadoc this constructor version should not be necessary. @param props the configuration properties
DESIGN	fixme per the regionfactory class javadoc this constructor version should not be necessary. @param props the configuration properties
DESIGN	todo probably better to calculate these and pass them in as it'll be more performant
WITHOUT_CLASSIFICATION	set constants now that they're initialized
WITHOUT_CLASSIFICATION	line 335
WITHOUT_CLASSIFICATION	yylen 542
WITHOUT_CLASSIFICATION	yylen 542
WITHOUT_CLASSIFICATION	yydefred 945
WITHOUT_CLASSIFICATION	yydefred 945
WITHOUT_CLASSIFICATION	yydgoto 152
WITHOUT_CLASSIFICATION	figure end-char. '\0' is special to indicate begin=end and that no nesting?
WITHOUT_CLASSIFICATION	line 362
WITHOUT_CLASSIFICATION	line 372
WITHOUT_CLASSIFICATION	yysindex 945
WITHOUT_CLASSIFICATION	yysindex 945
WITHOUT_CLASSIFICATION	line 391
WITHOUT_CLASSIFICATION	yyrindex 945
WITHOUT_CLASSIFICATION	yyrindex 945
WITHOUT_CLASSIFICATION	^d
WITHOUT_CLASSIFICATION	^z
WITHOUT_CLASSIFICATION	yylen 496
WITHOUT_CLASSIFICATION	yylen 496
WITHOUT_CLASSIFICATION	yylen 496
WITHOUT_CLASSIFICATION	yylen 496
WITHOUT_CLASSIFICATION	yylen 496
WITHOUT_CLASSIFICATION	yylen 496
WITHOUT_CLASSIFICATION	yylen 496
WITHOUT_CLASSIFICATION	yydefred 889
WITHOUT_CLASSIFICATION	yydefred 889
WITHOUT_CLASSIFICATION	yydefred 889
WITHOUT_CLASSIFICATION	yydefred 889
WITHOUT_CLASSIFICATION	yydefred 889
WITHOUT_CLASSIFICATION	yydefred 889
WITHOUT_CLASSIFICATION	yydefred 889
WITHOUT_CLASSIFICATION	yydgoto 136
WITHOUT_CLASSIFICATION	yydgoto 136
WITHOUT_CLASSIFICATION	yydgoto 136
WITHOUT_CLASSIFICATION	yydgoto 136
WITHOUT_CLASSIFICATION	yydgoto 136
WITHOUT_CLASSIFICATION	yydgoto 136
WITHOUT_CLASSIFICATION	yysindex 889
WITHOUT_CLASSIFICATION	yysindex 889
WITHOUT_CLASSIFICATION	yysindex 889
WITHOUT_CLASSIFICATION	yysindex 889
WITHOUT_CLASSIFICATION	yysindex 889
WITHOUT_CLASSIFICATION	yysindex 889
WITHOUT_CLASSIFICATION	yyrindex 889
WITHOUT_CLASSIFICATION	yyrindex 889
WITHOUT_CLASSIFICATION	yyrindex 889
WITHOUT_CLASSIFICATION	yyrindex 889
WITHOUT_CLASSIFICATION	yyrindex 889
WITHOUT_CLASSIFICATION	yyrindex 889
WITHOUT_CLASSIFICATION	yyrindex 889
WITHOUT_CLASSIFICATION	yygindex 136
WITHOUT_CLASSIFICATION	yygindex 136
WITHOUT_CLASSIFICATION	yygindex 136
WITHOUT_CLASSIFICATION	yygindex 136
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	return result
WITHOUT_CLASSIFICATION	name
WITHOUT_CLASSIFICATION	define system.getproperties() in env_java
WITHOUT_CLASSIFICATION	accessor methods.
WITHOUT_CLASSIFICATION	mri behavior
WITHOUT_CLASSIFICATION	mri behavior
WITHOUT_CLASSIFICATION	mri behavior
WITHOUT_CLASSIFICATION	mri behavior
WITHOUT_CLASSIFICATION	call getpwent to fail early if unsupported
WITHOUT_CLASSIFICATION	fall back on env entry for user
WITHOUT_CLASSIFICATION	try to read grent to fail fast
WITHOUT_CLASSIFICATION	define argv and $ for this runtime
WITHOUT_CLASSIFICATION	version information
WITHOUT_CLASSIFICATION	after defn of $stderr as the call may produce warnings
WITHOUT_CLASSIFICATION	argf $< object
WITHOUT_CLASSIFICATION	if the environment variables can't be obtained define an empty env
WITHOUT_CLASSIFICATION	on platforms without a c-library accessable through jna getpid will return hashcode as $$ used to. using $$ to kill processes could take down many runtimes but by basing $$ on getpid() where available we have the same semantics as mri.
WITHOUT_CLASSIFICATION	$@ returns nil if $!.backtrace is not an array
WITHOUT_CLASSIFICATION	include its parent (and in turn that module's parents)
WITHOUT_CLASSIFICATION	mri behavior just plain '' or '\\\\' are considered illegal on windows.
WITHOUT_CLASSIFICATION	this _is_ legal (when removing an undef)
WITHOUT_CLASSIFICATION	what we passed to the constructor for method 'path'
WITHOUT_CLASSIFICATION	----- ruby class methods ----------------------------------------------------
WITHOUT_CLASSIFICATION	constant table methods - pass to delegate
WITHOUT_CLASSIFICATION	we get canonical path to try and flatten the path out. a dir '/subdir/..' should return as '/' cnutter do we want to flatten path out?
WITHOUT_CLASSIFICATION	mri behavior
WITHOUT_CLASSIFICATION	----- ruby instance methods -------------------------------------------------
WITHOUT_CLASSIFICATION	make sure any read()s after close fail.
WITHOUT_CLASSIFICATION	----- helper methods --------------------------------------------------------
WITHOUT_CLASSIFICATION	try to use posix for this first
WITHOUT_CLASSIFICATION	otherwise fall back on the old way
WITHOUT_CLASSIFICATION	proc class
WITHOUT_CLASSIFICATION	no passed in block lets check next outer frame for one ('proc.new')
WITHOUT_CLASSIFICATION	modify the block with a new backref/lastline-grabbing scope
WITHOUT_CLASSIFICATION	for future compatibility as constructors move toward not accepting metaclass?
WITHOUT_CLASSIFICATION	case ruby_hybrid backtrace = threadcontext.createrubyhybridbacktrace(getruntime() backtraceframes javastacktrace getruntime().getdebug().istrue()) break
WITHOUT_CLASSIFICATION	this looks wrong but it's the way mri does it.
WITHOUT_CLASSIFICATION	rb_exc_new3
WITHOUT_CLASSIFICATION	note the indicies here match exactly the signal values do not reorder
WITHOUT_CLASSIFICATION	registerthreaddumpsignalhandler(runtime)
WITHOUT_CLASSIFICATION	iot is also 6
WITHOUT_CLASSIFICATION	cld is also 20
WITHOUT_CLASSIFICATION	rubysignal
WITHOUT_CLASSIFICATION	zstream actually isn't allocatable
WITHOUT_CLASSIFICATION	mri behavior enforced by tests
WITHOUT_CLASSIFICATION	it's safe since adler.update doesn't modify the array
WITHOUT_CLASSIFICATION	mri behavior in finished mode we work as pass-through
WITHOUT_CLASSIFICATION	sync_flush
WITHOUT_CLASSIFICATION	by default no_flush
WITHOUT_CLASSIFICATION	io.finish()
WITHOUT_CLASSIFICATION	should invoke seek on realio
WITHOUT_CLASSIFICATION	hmm
WITHOUT_CLASSIFICATION	called before any write to make sure the header is always written before the first bytes
WITHOUT_CLASSIFICATION	for jdk 1.4 we can use "cal.gettimeinmillis()"
WITHOUT_CLASSIFICATION	we can just use dt since it is immutable
WITHOUT_CLASSIFICATION	float number of seconds
WITHOUT_CLASSIFICATION	modified to match how hash is calculated in 1.8.2
WITHOUT_CLASSIFICATION	dump usec not msec
WITHOUT_CLASSIFICATION	time class methods
WITHOUT_CLASSIFICATION	marsaling dumps usec not msec
WITHOUT_CLASSIFICATION	mri accepts additional wday argument which appears to be ignored.
WITHOUT_CLASSIFICATION	set up with min values and then add to allow rolling over
WITHOUT_CLASSIFICATION	the instant at which we will ask dtz what the difference between dst and standard time is
WITHOUT_CLASSIFICATION	if we might be moving this time from !dst -> dst the offset is assumed to be the same as it was just before we last moved from dst -> !dst
WITHOUT_CLASSIFICATION	ignores usec if 8 args (for compatibility with parsedate) or if not supplied.
WITHOUT_CLASSIFICATION	================ utility methods ================
WITHOUT_CLASSIFICATION	if the value will fit in a fixnum return one of those.
WITHOUT_CLASSIFICATION	================ instance methods ================
WITHOUT_CLASSIFICATION	mri issuses warning here on (rbignum(x)->len sizeof_bdigits yy > 10241024)
WITHOUT_CLASSIFICATION	num2int is also implemented
WITHOUT_CLASSIFICATION	num2int is also implemented
WITHOUT_CLASSIFICATION	no bignorm here needed
WITHOUT_CLASSIFICATION	wow the only time we can use the java protocol )
WITHOUT_CLASSIFICATION	pad with a 0
WITHOUT_CLASSIFICATION	biginteger required a sign byte in incoming array
WITHOUT_CLASSIFICATION	this should only be called by this and rubyfile. it allows this object to be created without a iohandler.
WITHOUT_CLASSIFICATION	we do this b/c make_tmpname might be overridden
WITHOUT_CLASSIFICATION	???
WITHOUT_CLASSIFICATION	pid
WITHOUT_CLASSIFICATION	================ instance methods ================
WITHOUT_CLASSIFICATION	elements and trailing nils
WITHOUT_CLASSIFICATION	dirtmpdir
WITHOUT_CLASSIFICATION	volatile to ensure that initial nil-fill is visible to other threads
WITHOUT_CLASSIFICATION	ruby arrays default to holding 16 elements so we create an arraylist of the same size if we're not told otherwise
WITHOUT_CLASSIFICATION	rb_ary_new2 just allocates the internal array
WITHOUT_CLASSIFICATION	plain internal array assignment
WITHOUT_CLASSIFICATION	plain internal array assignment
WITHOUT_CLASSIFICATION	plain internal array assignment
WITHOUT_CLASSIFICATION	array constructors taking the metaclass to fulfil mri array subclass behaviour
WITHOUT_CLASSIFICATION	newobj and objsetup equivalent fastest one for shared arrays optional objectspace
WITHOUT_CLASSIFICATION	create global constants and variables
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	windows does not support these functions so we won't even try this also matches ruby behavior for jruby-2353.
WITHOUT_CLASSIFICATION	there are two different popular tz formats legacy (ast+30000 gmt-3) and newer one (us/pacific america/los_angeles). this pattern is to detect the legacy tz format in order to convert it to the newer format understood by java api.
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	1.9 seems to just do inspect for to_s now
WITHOUT_CLASSIFICATION	possibly should not in object space
WITHOUT_CLASSIFICATION	only fill if there actually will remain trailing storage
WITHOUT_CLASSIFICATION	rb_ary_new4
WITHOUT_CLASSIFICATION	rb_ary_new4
WITHOUT_CLASSIFICATION	from dup_setup
WITHOUT_CLASSIFICATION	if already inspecting there is no need to register/unregister again.
WITHOUT_CLASSIFICATION	see [ruby-core17483]
WITHOUT_CLASSIFICATION	see [ruby-core17483]
WITHOUT_CLASSIFICATION	satisfy java.util.list interface (for java integration)
WITHOUT_CLASSIFICATION	pre-set for the sake of terminating recursive calls
WITHOUT_CLASSIFICATION	root fiber
WITHOUT_CLASSIFICATION	gmt+0000 --> etc/gmt see "mri behavior" comment below.
WITHOUT_CLASSIFICATION	see httpwww.gzip.org/zlib/rfc-gzip.html
WITHOUT_CLASSIFICATION	extras flag
WITHOUT_CLASSIFICATION	zlibno_flush
WITHOUT_CLASSIFICATION	nothing
WITHOUT_CLASSIFICATION	utility method
WITHOUT_CLASSIFICATION	prepare loadservice and load path
WITHOUT_CLASSIFICATION	================ instance methods ================
WITHOUT_CLASSIFICATION	flags 4 bytes of modified time
WITHOUT_CLASSIFICATION	range_each_func(range step_i b e args)
WITHOUT_CLASSIFICATION	1.8 "include?"
WITHOUT_CLASSIFICATION	any biginteger is bigger than fixnum and we don't have fixable
WITHOUT_CLASSIFICATION	beneath are rewritten coercions that reflect mri logic the aboves are used only by rubybigdecimal
WITHOUT_CLASSIFICATION	mri does it!
WITHOUT_CLASSIFICATION	won't hurt fixnums
WITHOUT_CLASSIFICATION	it won't hurt fixnums
WITHOUT_CLASSIFICATION	rubyclasspathvariable
WITHOUT_CLASSIFICATION	not to be confused with rubyobject's flags
WITHOUT_CLASSIFICATION	second argument is allowed but ignored (mri)
WITHOUT_CLASSIFICATION	we are presumably running a precompiled class load directly
WITHOUT_CLASSIFICATION	terminate trycompile will have printed out an error and we're done
WITHOUT_CLASSIFICATION	used for the 'redo' command
WITHOUT_CLASSIFICATION	do nothing this iteration restarts
WITHOUT_CLASSIFICATION	recheck condition
WITHOUT_CLASSIFICATION	get the main threadcontext (gets constructed for us)
WITHOUT_CLASSIFICATION	construct key services
WITHOUT_CLASSIFICATION	initialize the root of the class hierarchy completely
WITHOUT_CLASSIFICATION	construct the top-level execution frame and scope for the main thread
WITHOUT_CLASSIFICATION	initialize all the core classes
WITHOUT_CLASSIFICATION	initialize the "dummy" class used as a marker
WITHOUT_CLASSIFICATION	initialize kernel and include into object
WITHOUT_CLASSIFICATION	object is ready create top self
WITHOUT_CLASSIFICATION	pre-create all the core classes potentially referenced during startup
WITHOUT_CLASSIFICATION	math depends on all numeric types
WITHOUT_CLASSIFICATION	depends on io filetest
WITHOUT_CLASSIFICATION	initialize builtin libraries
WITHOUT_CLASSIFICATION	require in all libraries specified on command line
WITHOUT_CLASSIFICATION	bootstrap the top of the hierarchy
WITHOUT_CLASSIFICATION	we try to get the classloader that loaded jruby falling back on system
WITHOUT_CLASSIFICATION	determine spacing
WITHOUT_CLASSIFICATION	should alter global state
WITHOUT_CLASSIFICATION	for jsr 223 support see httpscripting.java.net/
WITHOUT_CLASSIFICATION	use this for jruby-internal finalizers
WITHOUT_CLASSIFICATION	this method is for finalizers registered via objectspace
WITHOUT_CLASSIFICATION	new factory methods ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	assert internedname == internedname.intern() internedname + " is not interned"
WITHOUT_CLASSIFICATION	equivalent of data_wrap_struct
WITHOUT_CLASSIFICATION	default don't retain
WITHOUT_CLASSIFICATION	channeldescriptors opened by sysopen are cached to avoid collection
WITHOUT_CLASSIFICATION	default objects
WITHOUT_CLASSIFICATION	record separator var to speed up io ops that use it
WITHOUT_CLASSIFICATION	former java.lang.system concepts now internalized for mvm
WITHOUT_CLASSIFICATION	java support
WITHOUT_CLASSIFICATION	parser stats
WITHOUT_CLASSIFICATION	compilation
WITHOUT_CLASSIFICATION	can't read non-standard properties
WITHOUT_CLASSIFICATION	can't create custom classloaders
WITHOUT_CLASSIFICATION	mutex that controls modifications of user-defined finalizers
WITHOUT_CLASSIFICATION	mutex that controls modifications of internal finalizers
WITHOUT_CLASSIFICATION	a thread pool to use for executing this runtime's ruby threads
WITHOUT_CLASSIFICATION	a global object lock for class hierarchy mutations
WITHOUT_CLASSIFICATION	initial spaces spaces before "at"
WITHOUT_CLASSIFICATION	event name filename line numbers should be 1-based
WITHOUT_CLASSIFICATION	the method is intentionally not public since it typically should not be used outside of the core.
WITHOUT_CLASSIFICATION	note this field and the following static initializer must be located be in this order!
WITHOUT_CLASSIFICATION	contains a list of all blocks (as procs) that should be called when the runtime environment exits.
WITHOUT_CLASSIFICATION	quoted-printable
WITHOUT_CLASSIFICATION	default options
WITHOUT_CLASSIFICATION	iso-2022-jp
WITHOUT_CLASSIFICATION	iso-2022-jp
WITHOUT_CLASSIFICATION	shift_jis
WITHOUT_CLASSIFICATION	shift_jis
WITHOUT_CLASSIFICATION	euc-jp
WITHOUT_CLASSIFICATION	euc-jp
WITHOUT_CLASSIFICATION	utf-8
WITHOUT_CLASSIFICATION	utf-8
WITHOUT_CLASSIFICATION	long name option
WITHOUT_CLASSIFICATION	conversion
WITHOUT_CLASSIFICATION	================ singleton methods ================
WITHOUT_CLASSIFICATION	string doesn't share any resources
WITHOUT_CLASSIFICATION	string has it's own bytelist but it's pointing to a shared buffer (byte[])
WITHOUT_CLASSIFICATION	string doesn't have it's own bytelist (values)
WITHOUT_CLASSIFICATION	enc_coderange_asciionly
WITHOUT_CLASSIFICATION	rb_enc_str_asciionly_p
WITHOUT_CLASSIFICATION	rb_enc_str_coderange
WITHOUT_CLASSIFICATION	rb_str_hash_cmp
WITHOUT_CLASSIFICATION	deprecated string construction routines
WITHOUT_CLASSIFICATION	string construction routines by not byte[] buffer and not making the target string shared
WITHOUT_CLASSIFICATION	rb_str_subseq
WITHOUT_CLASSIFICATION	no need to assign encoding same bytelist shared
WITHOUT_CLASSIFICATION	if len == 0 then shared empty
WITHOUT_CLASSIFICATION	rb_str_cmp_m
WITHOUT_CLASSIFICATION	we limit to int because bytebuffer can only allocate int sizes
WITHOUT_CLASSIFICATION	rb_str_buf_append
WITHOUT_CLASSIFICATION	encoding doesn't have to be copied.
WITHOUT_CLASSIFICATION	this really needs to be inlined here
WITHOUT_CLASSIFICATION	must not reallocate
WITHOUT_CLASSIFICATION	illegal combination
WITHOUT_CLASSIFICATION	use 1.8 impl
WITHOUT_CLASSIFICATION	rubystring aka rb_string_value
WITHOUT_CLASSIFICATION	bang true no match no substitution
WITHOUT_CLASSIFICATION	out of byte range there will be no match for sure
WITHOUT_CLASSIFICATION	len + margin
WITHOUT_CLASSIFICATION	block given
WITHOUT_CLASSIFICATION	block given
WITHOUT_CLASSIFICATION	copy pre-match substr
WITHOUT_CLASSIFICATION	string given
WITHOUT_CLASSIFICATION	hash given
WITHOUT_CLASSIFICATION	this represents left most digit in a set of incremented values? therefore leftmost numeric must be '1' and not '0' 999 -> 1000 not 999 -> 0000. whereas chars should be zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"
WITHOUT_CLASSIFICATION	substring longer than string
WITHOUT_CLASSIFICATION	rb_str_substr
WITHOUT_CLASSIFICATION	nothing
WITHOUT_CLASSIFICATION	nothing
WITHOUT_CLASSIFICATION	rb_str_splice
WITHOUT_CLASSIFICATION	todo keep cr todo rb_str_splice_0
WITHOUT_CLASSIFICATION	keep cr ?
WITHOUT_CLASSIFICATION	keep cr ?
WITHOUT_CLASSIFICATION	wrapped to \0\0. search next valid char.
WITHOUT_CLASSIFICATION	only this case affects backrefs
WITHOUT_CLASSIFICATION	only this case affects backrefs
WITHOUT_CLASSIFICATION	modified
WITHOUT_CLASSIFICATION	modified
WITHOUT_CLASSIFICATION	1.8
WITHOUT_CLASSIFICATION	1.8
WITHOUT_CLASSIFICATION	qtrue
WITHOUT_CLASSIFICATION	retrieve last replacer
WITHOUT_CLASSIFICATION	check the length every iteration since the block can modify this string.
WITHOUT_CLASSIFICATION	long size bits in byte
WITHOUT_CLASSIFICATION	from encoding special-casing ascii to ascii
WITHOUT_CLASSIFICATION	to encoding same special-casing
WITHOUT_CLASSIFICATION	create a lightweight thunk
WITHOUT_CLASSIFICATION	decode from "from" and encode to "to"
WITHOUT_CLASSIFICATION	create a lightweight thunk
WITHOUT_CLASSIFICATION	kernel is the only module that doesn't need an implementor
WITHOUT_CLASSIFICATION	no binding given use (eval)
WITHOUT_CLASSIFICATION	interned ok for "fast" methods
WITHOUT_CLASSIFICATION	file to be loaded by autoload has already been or is being loaded.
WITHOUT_CLASSIFICATION	rb_cstr_to_dbl case
WITHOUT_CLASSIFICATION	we break if we know this sleep was explicitly woken up/interrupted
WITHOUT_CLASSIFICATION	exec process create io with process
WITHOUT_CLASSIFICATION	zero sleeps forever
WITHOUT_CLASSIFICATION	file given use it and force it into binding
WITHOUT_CLASSIFICATION	explicit zero in mri returns immediately
WITHOUT_CLASSIFICATION	spurious wakeup-loop
WITHOUT_CLASSIFICATION	adjusts paths started with '/' or '\\' on windows.
WITHOUT_CLASSIFICATION	file not given
WITHOUT_CLASSIFICATION	string to eval
WITHOUT_CLASSIFICATION	binding given use binding's file
WITHOUT_CLASSIFICATION	?g | boolean | true if file1 has the \cf{setgid} bit
WITHOUT_CLASSIFICATION	bomb out it's not a binding or a proc
WITHOUT_CLASSIFICATION	ordering of array traversal not important just intuitive
WITHOUT_CLASSIFICATION	catch active throw for catch to handle
WITHOUT_CLASSIFICATION	no catch active for this throw
WITHOUT_CLASSIFICATION	without full tracing many events will not fire
WITHOUT_CLASSIFICATION	ignore if it's not a global var
WITHOUT_CLASSIFICATION	mri behavior use first byte of string value if len > 0
WITHOUT_CLASSIFICATION	mri behavior now check arg count
WITHOUT_CLASSIFICATION	?a | time | last access time for file1
WITHOUT_CLASSIFICATION	?b | boolean | true if file1 is a block device
WITHOUT_CLASSIFICATION	?c | boolean | true if file1 is a character device
WITHOUT_CLASSIFICATION	?c | time | last change time for file1
WITHOUT_CLASSIFICATION	?d | boolean | true if file1 exists and is a directory
WITHOUT_CLASSIFICATION	?e | boolean | true if file1 exists
WITHOUT_CLASSIFICATION	?f | boolean | true if file1 exists and is a regular file
WITHOUT_CLASSIFICATION	?g | boolean | true if file1 exists and has a group ownership equal to the caller's group
WITHOUT_CLASSIFICATION	?k | boolean | true if file1 exists and has the sticky bit set
WITHOUT_CLASSIFICATION	?m | time | last modification time for file1
WITHOUT_CLASSIFICATION	?o | boolean | true if file1 exists and is owned by the caller's effective uid
WITHOUT_CLASSIFICATION	?o | boolean | true if file1 exists and is owned by the caller's real uid
WITHOUT_CLASSIFICATION	?p | boolean | true if file1 exists and is a fifo
WITHOUT_CLASSIFICATION	?r | boolean | true if file1 is readable by the effective uid/gid of the caller
WITHOUT_CLASSIFICATION	?s | int/nil | if file1 has nonzero size return the size otherwise nil
WITHOUT_CLASSIFICATION	?s | boolean | true if file1 exists and is a socket
WITHOUT_CLASSIFICATION	?u | boolean | true if file1 has the setuid bit set
WITHOUT_CLASSIFICATION	?x | boolean | true if file1 exists and is executable by the effective uid/gid
WITHOUT_CLASSIFICATION	?x | boolean | true if file1 exists and is executable by the real uid/gid
WITHOUT_CLASSIFICATION	?z | boolean | true if file1 exists and has a zero length
WITHOUT_CLASSIFICATION	?= | boolean | true if the modification times of file1 and file2 are equal
WITHOUT_CLASSIFICATION	?< | boolean | true if the modification time of file1 is prior to that of file2
WITHOUT_CLASSIFICATION	?> | boolean | true if the modification time of file1 is after that of file2
WITHOUT_CLASSIFICATION	?- | boolean | true if file1 and file2 are identical
WITHOUT_CLASSIFICATION	@jrubymethod(name = "new" meta = true visibility = visibility.private)
WITHOUT_CLASSIFICATION	error info is per-thread
WITHOUT_CLASSIFICATION	init errorinfo to nil
WITHOUT_CLASSIFICATION	if we're already aborting we can receive no further mail
WITHOUT_CLASSIFICATION	if this thread is sleeping or stopped wake it
WITHOUT_CLASSIFICATION	new interrupt to hopefully wake it out of any blocking io
WITHOUT_CLASSIFICATION	set to default thread group
WITHOUT_CLASSIFICATION	set to default thread group
WITHOUT_CLASSIFICATION	jruby-2380 associate future early so it shows up in thread.list right away in case it doesn't run immediately
WITHOUT_CLASSIFICATION	jruby-2380 associate thread early so it shows up in thread.list right away in case it doesn't run immediately
WITHOUT_CLASSIFICATION	for threadstart which does not call the subclass's initialize
WITHOUT_CLASSIFICATION	jruby-3568 inherit threadgroup or use default
WITHOUT_CLASSIFICATION	mri behavior value given in seconds converted to float less than or equal to zero returns immediately returns nil
WITHOUT_CLASSIFICATION	if the target thread is sleeping or stopped wake it
WITHOUT_CLASSIFICATION	we need this loop in order to be able to "unblock" the join call without actually calling interrupt.
WITHOUT_CLASSIFICATION	attempt to decriticalize all if we're the critical thread
WITHOUT_CLASSIFICATION	not valid for "dead" state
WITHOUT_CLASSIFICATION	if the killee thread is the same as the killer thread just die
WITHOUT_CLASSIFICATION	check for thread events in case we've been woken up to die
WITHOUT_CLASSIFICATION	check for thread events in case we've been woken up to die
WITHOUT_CLASSIFICATION	ignore i don't like doing it but it seems like we really just need to make all channels non-blocking by default and use select when implementing blocking ops so if this remains set non-blocking perhaps it's not such a big deal
WITHOUT_CLASSIFICATION	can't select just have to do a blocking call
WITHOUT_CLASSIFICATION	compensate for missing slash after drive letter on windows
WITHOUT_CLASSIFICATION	create constants class
WITHOUT_CLASSIFICATION	create constants for open flags
WITHOUT_CLASSIFICATION	strip off the o_ prefix so they become filerdonly and so on
WITHOUT_CLASSIFICATION	create constants for flock
WITHOUT_CLASSIFICATION	fileconstants module is included in io.
WITHOUT_CLASSIFICATION	make sure any existing lock is released before we try and close the file
WITHOUT_CLASSIFICATION	null channel always succeeds for all locking operations
WITHOUT_CLASSIFICATION	paths which end in "/" or "\\" must be stripped off.
WITHOUT_CLASSIFICATION	special case for handling accmode since constantine will generate an invalid value if it is not defined by the platform.
WITHOUT_CLASSIFICATION	return false here
WITHOUT_CLASSIFICATION	return false here
WITHOUT_CLASSIFICATION	we're not actually a real file so we can't flock
WITHOUT_CLASSIFICATION	should we do anything?
WITHOUT_CLASSIFICATION	file class methods
WITHOUT_CLASSIFICATION	mri-compatible basename handling for windows drive letter paths
WITHOUT_CLASSIFICATION	strip c away from relative-pathed name
WITHOUT_CLASSIFICATION	c\ is returned unchanged
WITHOUT_CLASSIFICATION	-1 no match 0 it is dot file not extension
WITHOUT_CLASSIFICATION	trim trailing slashes
WITHOUT_CLASSIFICATION	dot is not at beginning and not at end of filename.
WITHOUT_CLASSIFICATION	handle ~user paths
WITHOUT_CLASSIFICATION	compensate for missing slash after drive letter on windows
WITHOUT_CLASSIFICATION	include additional path separator (so that dirname of "c\file.txt" is "c\" not "c")
WITHOUT_CLASSIFICATION	fnfexception can be thrown in both cases when the file is not found or when permission is denied.
WITHOUT_CLASSIFICATION	no directory delimeter. rest of string is username
WITHOUT_CLASSIFICATION	if there's a second argument it's the path to which the first argument is relative.
WITHOUT_CLASSIFICATION	handle ~user paths.
WITHOUT_CLASSIFICATION	if there's no second argument simply use the working directory of the runtime.
WITHOUT_CLASSIFICATION	find out which string to check.
WITHOUT_CLASSIFICATION	single '~' as whole path to expand
WITHOUT_CLASSIFICATION	count number of extra slashes in the beginning of the string.
WITHOUT_CLASSIFICATION	'~user/' as path to expand
WITHOUT_CLASSIFICATION	'~/' as path to expand
WITHOUT_CLASSIFICATION	prepare a string with the same number of redundant slashes so that we easily can prepend it to the result.
WITHOUT_CLASSIFICATION	if there are n slashes then we want n-1.
WITHOUT_CLASSIFICATION	no canonical path yet or length is zero and we have a / followed by a dot
WITHOUT_CLASSIFICATION	we don't have another slash after this so replace /. with /
WITHOUT_CLASSIFICATION	we do have another slash omit both / and . (jruby-1606)
WITHOUT_CLASSIFICATION	do nothing we should not delete the drive letter
WITHOUT_CLASSIFICATION	rb check_modifiable
WITHOUT_CLASSIFICATION	rb readable
WITHOUT_CLASSIFICATION	rename is successful
WITHOUT_CLASSIFICATION	rename via java api call wasn't successful let's try some tricks similar to mri
WITHOUT_CLASSIFICATION	try to rename one more time
WITHOUT_CLASSIFICATION	can we produce ioerror which bypasses a close?
WITHOUT_CLASSIFICATION	fast path since jna stat is about 10x slower than this
WITHOUT_CLASSIFICATION	rubycontinuation
WITHOUT_CLASSIFICATION	constructor for internal usage (mainly for array#| array#& array#- and array#uniq) it doesn't initialize ifnone field
WITHOUT_CLASSIFICATION	16 ?
WITHOUT_CLASSIFICATION	generation count for o(1) clears
WITHOUT_CLASSIFICATION	size + 1
WITHOUT_CLASSIFICATION	suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen
WITHOUT_CLASSIFICATION	------------------------------
WITHOUT_CLASSIFICATION	------------------------------
WITHOUT_CLASSIFICATION	put implementation
WITHOUT_CLASSIFICATION	get implementation
WITHOUT_CLASSIFICATION	specialized for value
WITHOUT_CLASSIFICATION	delete implementation
WITHOUT_CLASSIFICATION	n.b. we need to recompute the hash in case the key object was modified
WITHOUT_CLASSIFICATION	============================ end of hash internals ============================
WITHOUT_CLASSIFICATION	================ instance methods ================
WITHOUT_CLASSIFICATION	update the hash value
WITHOUT_CLASSIFICATION	other hash does not contain key
WITHOUT_CLASSIFICATION	rb_yield_values(2) equivalent
WITHOUT_CLASSIFICATION	satisfy java.util.set interface (for java integration)
WITHOUT_CLASSIFICATION	remain where we are
WITHOUT_CLASSIFICATION	we use file test since it is faster than a stat also euid == uid in java always
WITHOUT_CLASSIFICATION	default don't retain
WITHOUT_CLASSIFICATION	once hasnext has been called we commit to next() returning the entry it found even if it were subsequently deleted
WITHOUT_CLASSIFICATION	not exposed by filetest but so similiar in nature that it is stored here
WITHOUT_CLASSIFICATION	we do both writable and writable_real through the same method because in our java process effective and real userid will always be the same.
WITHOUT_CLASSIFICATION	first try as directory
WITHOUT_CLASSIFICATION	next as regular file
WITHOUT_CLASSIFICATION	we only want io objects with valid streams (better to error now).
WITHOUT_CLASSIFICATION	nio-based
WITHOUT_CLASSIFICATION	nio-based
WITHOUT_CLASSIFICATION	stream-based
WITHOUT_CLASSIFICATION	special constructor that accepts stream not channel
WITHOUT_CLASSIFICATION	we use file versus io to match t_file in mri.
WITHOUT_CLASSIFICATION	constants for seek
WITHOUT_CLASSIFICATION	confirm we're not reopening self's channel
WITHOUT_CLASSIFICATION	check if we're a stdio io and ensure we're not badly mutilated
WITHOUT_CLASSIFICATION	dup2 new fd into self to preserve fileno and references to it
WITHOUT_CLASSIFICATION	re-register since fileno points at something new now
WITHOUT_CLASSIFICATION	re-register the descriptor
WITHOUT_CLASSIFICATION	since we're not actually duping the incoming channel into our handler we need to copy the original sync behavior from the other handler
WITHOUT_CLASSIFICATION	re-register
WITHOUT_CLASSIFICATION	a potentially previously close io is being 'reopened'.
WITHOUT_CLASSIFICATION	ensure that separator is valid otherwise give it the default paragraph separator.
WITHOUT_CLASSIFICATION	loop until we see the nth separator char
WITHOUT_CLASSIFICATION	if we hit eof or reached limit then we're done
WITHOUT_CLASSIFICATION	this is for a range check near as i can tell
WITHOUT_CLASSIFICATION	io class methods.
WITHOUT_CLASSIFICATION	use original modes
WITHOUT_CLASSIFICATION	see if we already have this descriptor open. if so then we can mostly share the handler (keep open file but possibly change the mode).
WITHOUT_CLASSIFICATION	redundant done above as well
WITHOUT_CLASSIFICATION	mri behavior swallow standarderorrs
WITHOUT_CLASSIFICATION	-1 == don't set permissions
WITHOUT_CLASSIFICATION	isretained=true
WITHOUT_CLASSIFICATION	this appears to be some windows-only mode. on a java platform this is a no-op
WITHOUT_CLASSIFICATION	if not sync we switch to write buffered mode
WITHOUT_CLASSIFICATION	throw bad file descriptor is we can not read on supplied descriptor.
WITHOUT_CLASSIFICATION	everything written
WITHOUT_CLASSIFICATION	return len - n
WITHOUT_CLASSIFICATION	claims conversion is done via 'to_s' in docs.
WITHOUT_CLASSIFICATION	of course this isn't particularly useful.
WITHOUT_CLASSIFICATION	must be back on first line on rewind.
WITHOUT_CLASSIFICATION	register the new descriptor
WITHOUT_CLASSIFICATION	cleanup raising errors if any
WITHOUT_CLASSIFICATION	hmmmm
WITHOUT_CLASSIFICATION	i believe ruby bails out with a "bug" if closing fails
WITHOUT_CLASSIFICATION	do nothing. fd_cloexec has no meaning in jvm since we cannot really exec. and why the hell does webrick pass this in as a first argument!!!!!
WITHOUT_CLASSIFICATION	do nothing. fd_cloexec has no meaning in jvm since we cannot really exec.
WITHOUT_CLASSIFICATION	length to read
WITHOUT_CLASSIFICATION	string/buffer to read it into
WITHOUT_CLASSIFICATION	cryptic for the uninitiated
WITHOUT_CLASSIFICATION	select until read is ready
WITHOUT_CLASSIFICATION	bytelist buffer = null
WITHOUT_CLASSIFICATION	buffer = str.getbytelist()
WITHOUT_CLASSIFICATION	read_check from mri io.c
WITHOUT_CLASSIFICATION	rb writable
WITHOUT_CLASSIFICATION	read_check from mri io.c
WITHOUT_CLASSIFICATION	all errors to sysread should be systemcallerrors but on a closed stream ruby returns an ioerror. java throws same exception for all errors so we resort to this hack
WITHOUT_CLASSIFICATION	todo read into buffer using all the fread logic int read = openfile.getmainstream().fread(buffer)
WITHOUT_CLASSIFICATION	truncate buffer string to zero if provided
WITHOUT_CLASSIFICATION	todo read_check from mri
WITHOUT_CLASSIFICATION	class methods for io
WITHOUT_CLASSIFICATION	save blocking state
WITHOUT_CLASSIFICATION	write
WITHOUT_CLASSIFICATION	java's select doesn't do anything about this so we leave it be.
WITHOUT_CLASSIFICATION	make all sockets blocking as configured again close unregisters all channels so we can safely reset blocking modes
WITHOUT_CLASSIFICATION	fixme process options
WITHOUT_CLASSIFICATION	enebo annotation processing forced me to do pangea method here
WITHOUT_CLASSIFICATION	nio based pipe
WITHOUT_CLASSIFICATION	not using remove(object) here to avoid the equals() call
WITHOUT_CLASSIFICATION	raise will also wake the thread from selection
WITHOUT_CLASSIFICATION	may need to handle enc_coderange_broken
WITHOUT_CLASSIFICATION	todo rb_usascii_str_new2
WITHOUT_CLASSIFICATION	if we know what method was being called strip everything before the call. this hides the jruby and reflection internals.
WITHOUT_CLASSIFICATION	the class of this object
WITHOUT_CLASSIFICATION	zeroed by jvm
WITHOUT_CLASSIFICATION	objectclass.defineannotatedmethods(basicobjectmethods.class)
WITHOUT_CLASSIFICATION	jruby-4113 callers should not call settaint on immediate objects
WITHOUT_CLASSIFICATION	rb_class_boot
WITHOUT_CLASSIFICATION	6tags 16addr 1eos
WITHOUT_CLASSIFICATION	1.9 rb_check_to_integer
WITHOUT_CLASSIFICATION	for interface impls
WITHOUT_CLASSIFICATION	we're cloning ourselves so we know the result should be a rubyobject
WITHOUT_CLASSIFICATION	methods of the object class (rb_obj_)
WITHOUT_CLASSIFICATION	can't use -v and stdin
WITHOUT_CLASSIFICATION	include its parent (and in turn that module's parents)
WITHOUT_CLASSIFICATION	equivalent of data_get_struct this will first check that the object in question is actually a t_data equivalent.
WITHOUT_CLASSIFICATION	common variable methods
WITHOUT_CLASSIFICATION	internal variable methods
WITHOUT_CLASSIFICATION	instance variable api methods
WITHOUT_CLASSIFICATION	struct methods
WITHOUT_CLASSIFICATION	runtime.getwarnings().warn(id.struct_constant_redefined frame.getfile() frame.getline() "redefining constant struct" + name name)
WITHOUT_CLASSIFICATION	define access methods.
WITHOUT_CLASSIFICATION	if we are storing a name as well index is one too high for values
WITHOUT_CLASSIFICATION	struct bodies should be public by default so set block visibility to public. jruby-1185.
WITHOUT_CLASSIFICATION	for binding purposes on the newly created struct types
WITHOUT_CLASSIFICATION	obj_infect
WITHOUT_CLASSIFICATION	these call assume threadcontext = receiver.getruntime().getcurrentcontext()
WITHOUT_CLASSIFICATION	execute iteratemethod again.
WITHOUT_CLASSIFICATION	@param nv number of times to cycle or -1 to cycle indefinitely
WITHOUT_CLASSIFICATION	atomic ?
WITHOUT_CLASSIFICATION	atomic ?
WITHOUT_CLASSIFICATION	must not be used across threads
WITHOUT_CLASSIFICATION	superclass may be null.
WITHOUT_CLASSIFICATION	containing classthe parent of object is null. object should always be last in chain.
WITHOUT_CLASSIFICATION	classid is the name of the class/module sans where it is located. if it is null then it an anonymous class.
WITHOUT_CLASSIFICATION	classproviders return java class/module (in #defineorgetclassunder and #defineorgetmoduleunder) when class/module is opened using colon syntax.
WITHOUT_CLASSIFICATION	update superclass reference
WITHOUT_CLASSIFICATION	make sure the module we include does not already exist
WITHOUT_CLASSIFICATION	mri checks all types first
WITHOUT_CLASSIFICATION	we need full traces use default (slow) populator
WITHOUT_CLASSIFICATION	module/singleton methods are all defined public
WITHOUT_CLASSIFICATION	see if module is in chaincannot match against itself so start at superclass.
WITHOUT_CLASSIFICATION	we can safely reference methods here instead of doing getmethods() since if we are adding we are not using a includedmodulewrapper.
WITHOUT_CLASSIFICATION	we grab serial number first the worst that will happen is we cache a later update with an earlier serial number which would just flush anyway
WITHOUT_CLASSIFICATION	update all hierarchies into which this module has been included
WITHOUT_CLASSIFICATION	this method is intended only for defining new classes in ruby code so it uses the allocator of the specified superclass or default to the object allocator. it should not be used to define classes that require a native allocator.
WITHOUT_CLASSIFICATION	need to skip includedmodulewrappers
WITHOUT_CLASSIFICATION	superclazz = null
WITHOUT_CLASSIFICATION	reopen a java class
WITHOUT_CLASSIFICATION	this method is intended only for defining new modules in ruby code
WITHOUT_CLASSIFICATION	reopen a java module
WITHOUT_CLASSIFICATION	fixme warning
WITHOUT_CLASSIFICATION	fixme warning
WITHOUT_CLASSIFICATION	a normal block passed to define_method changes to do arity checking make it a lambda
WITHOUT_CLASSIFICATION	for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope
WITHOUT_CLASSIFICATION	just using required is brokenbut no more broken than before zsuper refactoring
WITHOUT_CLASSIFICATION	class and module bodies default to public so make the block's visibility public. jruby-1185.
WITHOUT_CLASSIFICATION	check the visibility of the previous frame which will be the frame in which the class is being eval'ed
WITHOUT_CLASSIFICATION	mri error message says class even though module is ok
WITHOUT_CLASSIFICATION	scan class hierarchy for module
WITHOUT_CLASSIFICATION	module class methods
WITHOUT_CLASSIFICATION	note we change current frames visibility here because the methods which call this method are all "fast" (e.g. they do not created their own frame).
WITHOUT_CLASSIFICATION	next in hierarchy is an included version of the module we're attempting so we skip including it
WITHOUT_CLASSIFICATION	if we haven't encountered a real superclass use the found module as the new inclusion point
WITHOUT_CLASSIFICATION	build a list of all modules to consider for inclusion
WITHOUT_CLASSIFICATION	if the insertion point is a class update subclass lists
WITHOUT_CLASSIFICATION	if there's a non-null superclass we're including into a normal class hierarchy update subclass relationships to avoid stale parent/child relationships
WITHOUT_CLASSIFICATION	class variable ruby methods
WITHOUT_CLASSIFICATION	constant ruby methods
WITHOUT_CLASSIFICATION	note includes part of fix for jruby-1339
WITHOUT_CLASSIFICATION	class variable api methods
WITHOUT_CLASSIFICATION	wrong parameter ?
WITHOUT_CLASSIFICATION	not actually called anywhere (all known uses call the fast version)
WITHOUT_CLASSIFICATION	not that is loaded loop around to resolve it next pass
WITHOUT_CLASSIFICATION	if adding a module under a constant name set that module's basename to the constant name
WITHOUT_CLASSIFICATION	fix for jruby-1339 - search hierarchy for constant
WITHOUT_CLASSIFICATION	returns the stored value without processing undefs (autoloads)
WITHOUT_CLASSIFICATION	removes and returns the stored value without processing undefs (autoloads)
WITHOUT_CLASSIFICATION	we can't rename a file while it's open in windows
WITHOUT_CLASSIFICATION	reopen
WITHOUT_CLASSIFICATION	argf methods
WITHOUT_CLASSIFICATION	data.currentfile.callmethod(context "lineno=" line)
WITHOUT_CLASSIFICATION	one optional one required args
WITHOUT_CLASSIFICATION	one optional and no required args
WITHOUT_CLASSIFICATION	try to get errno value out of the class
WITHOUT_CLASSIFICATION	we got a valid errno value
WITHOUT_CLASSIFICATION	ensure we're not running on gcj since it's not supported and leads to weird errors
WITHOUT_CLASSIFICATION	print out as a nice ruby backtrace
WITHOUT_CLASSIFICATION	produce a nicer error since rubyists aren't used to seeing this
WITHOUT_CLASSIFICATION	set thread context jruby classloader here for the main thread
WITHOUT_CLASSIFICATION	can't set tc classloader
WITHOUT_CLASSIFICATION	no script to run return success below
WITHOUT_CLASSIFICATION	skip /usr/bin/env if it's first
WITHOUT_CLASSIFICATION	skip any assignments if /usr/bin/env is in play
WITHOUT_CLASSIFICATION	skip any commandline args if /usr/bin/env is in play
WITHOUT_CLASSIFICATION	ignore error
WITHOUT_CLASSIFICATION	common constant / cvar methods
WITHOUT_CLASSIFICATION	internal module variable api methods
WITHOUT_CLASSIFICATION	low-level constant interface fetch/store/list constants for this module
WITHOUT_CLASSIFICATION	odd
WITHOUT_CLASSIFICATION	jrubyclient
WITHOUT_CLASSIFICATION	x = mantissa 2 exponent where mantissa is in the range of [.5 1)
WITHOUT_CLASSIFICATION	make mantissa same sign so we only have one code path.
WITHOUT_CLASSIFICATION	increase value to hit lower range.
WITHOUT_CLASSIFICATION	r = x 2 y
WITHOUT_CLASSIFICATION	0!
WITHOUT_CLASSIFICATION	1!
WITHOUT_CLASSIFICATION	2!
WITHOUT_CLASSIFICATION	3!
WITHOUT_CLASSIFICATION	4!
WITHOUT_CLASSIFICATION	5!
WITHOUT_CLASSIFICATION	6!
WITHOUT_CLASSIFICATION	7!
WITHOUT_CLASSIFICATION	8!
WITHOUT_CLASSIFICATION	9!
WITHOUT_CLASSIFICATION	11!
WITHOUT_CLASSIFICATION	12!
WITHOUT_CLASSIFICATION	13!
WITHOUT_CLASSIFICATION	15!
WITHOUT_CLASSIFICATION	16!
WITHOUT_CLASSIFICATION	17!
WITHOUT_CLASSIFICATION	19!
WITHOUT_CLASSIFICATION	20!
WITHOUT_CLASSIFICATION	21!
WITHOUT_CLASSIFICATION	static constants
WITHOUT_CLASSIFICATION	clean-up string representation so that it could be understood by java's bigdecimal. not terribly efficient for now. 1. mri allows d and d as exponent separators
WITHOUT_CLASSIFICATION	2. mri allows underscores anywhere
WITHOUT_CLASSIFICATION	3. mri ignores the trailing junk
WITHOUT_CLASSIFICATION	mri behavior -0 and +0 are two different things
WITHOUT_CLASSIFICATION	java and mri definitions of modulo are different.
WITHOUT_CLASSIFICATION	java and mri definitions of remainder are the same.
WITHOUT_CLASSIFICATION	note mri has a very non-trivial way of calculating the precision so we use very simple approximation here
WITHOUT_CLASSIFICATION	iteration variables for the square root x and the reciprocal v initial x x0 ~ sqrt() initial v v0 = 1/(2x)
WITHOUT_CLASSIFICATION	it doesn't handle special cases
WITHOUT_CLASSIFICATION	todo why this .setresult()
WITHOUT_CLASSIFICATION	integer division
WITHOUT_CLASSIFICATION	mri behavior "if digits is 0 the result is the same as the / operator."
WITHOUT_CLASSIFICATION	rounding neccessary
WITHOUT_CLASSIFICATION	rounding neccessary
WITHOUT_CLASSIFICATION	java and mri definitions of divmod are different.
WITHOUT_CLASSIFICATION	jruby-914 java 1.4 bigdecimal does not allow a negative scale so we have to simulate it
WITHOUT_CLASSIFICATION	shift the decimal point just to the right of the digit to be rounded to (divide by 10(abs(scale))) -1 -> 10's digit -2 -> 100's digit etc.
WITHOUT_CLASSIFICATION	round to that digit
WITHOUT_CLASSIFICATION	and shift the result back to the left (multiply by 10(abs(scale)))
WITHOUT_CLASSIFICATION	this relies on the ruby rounding enumerations == java ones which they (currently) all are
WITHOUT_CLASSIFICATION	sign
WITHOUT_CLASSIFICATION	significant digits and exponent
WITHOUT_CLASSIFICATION	normalize the value
WITHOUT_CLASSIFICATION	base
WITHOUT_CLASSIFICATION	note mri's sqrt precision is limited by 100 but we allow values more than 100.
WITHOUT_CLASSIFICATION	just in case add a bit of extra precision
WITHOUT_CLASSIFICATION	eh?!
WITHOUT_CLASSIFICATION	note #fix has only no-arg form but truncate allows optional parameter.
WITHOUT_CLASSIFICATION	general number and precision checking
WITHOUT_CLASSIFICATION	the requested precision
WITHOUT_CLASSIFICATION	proc class
WITHOUT_CLASSIFICATION	.append(" -x[directory] strip off text before #!ruby line and perhaps cd to directory\n")
WITHOUT_CLASSIFICATION	even shift.. ..floors to 62 or 63 bit biginteger
WITHOUT_CLASSIFICATION	5 -> 2 -5 -> -3 need half a scale more..
WITHOUT_CLASSIFICATION	..where 100 -> 10 shifts the scale
WITHOUT_CLASSIFICATION	initial x - use double root - multiply by halfback to unshift - set new scale
WITHOUT_CLASSIFICATION	x0 ~ sqrt()
WITHOUT_CLASSIFICATION	for prec 15 root x0 must surely be ok return small prec roots without iterations
WITHOUT_CLASSIFICATION	initial v - the reciprocal v0 = 1/(2x)
WITHOUT_CLASSIFICATION	collect iteration precisions beforehand
WITHOUT_CLASSIFICATION	assume ninit = 16 <= prec
WITHOUT_CLASSIFICATION	the loop of "square root by coupled newton iteration"
WITHOUT_CLASSIFICATION	increase precision - next iteration supplies n exact digits
WITHOUT_CLASSIFICATION	next x e = d - x^2
WITHOUT_CLASSIFICATION	x += ev ~ sqrt()
WITHOUT_CLASSIFICATION	root x is ready!
WITHOUT_CLASSIFICATION	next v g = 1 - 2xv
WITHOUT_CLASSIFICATION	v += gv ~ 1/2/sqrt()
WITHOUT_CLASSIFICATION	rubybigdecimal
WITHOUT_CLASSIFICATION	c bind_eval
WITHOUT_CLASSIFICATION	================ module methods ================
WITHOUT_CLASSIFICATION	from commandlineparser
WITHOUT_CLASSIFICATION	this property is a boolean to allow three values so it can match mri's nil false and true
WITHOUT_CLASSIFICATION	default classcache using jitmax as a soft upper bound
WITHOUT_CLASSIFICATION	until we get a little more solid on 1.9 support we will only run interpreted mode
WITHOUT_CLASSIFICATION	setting the loader needs to reset the class cache
WITHOUT_CLASSIFICATION	try the normal property first
WITHOUT_CLASSIFICATION	verify it if it's there
WITHOUT_CLASSIFICATION	verify it if it's there
WITHOUT_CLASSIFICATION	try loading from classloader resources
WITHOUT_CLASSIFICATION	otherwise fall back on system temp location
WITHOUT_CLASSIFICATION	we require the home directory to be absolute
WITHOUT_CLASSIFICATION	consume the file name
WITHOUT_CLASSIFICATION	specify something that can't separate
WITHOUT_CLASSIFICATION	try cwd first
WITHOUT_CLASSIFICATION	ruby interpreter compatibilty usage ruby [switches] [--] [programfile] [arguments])
WITHOUT_CLASSIFICATION	kcode.none is used because kcode does not affect parse in ruby 1.8 if ruby 2.0 encoding pragmas are implemented this will need to change
WITHOUT_CLASSIFICATION	@jrubymethod(name = "complex?")
WITHOUT_CLASSIFICATION	@jrubymethod(name = "exact?")
WITHOUT_CLASSIFICATION	@jrubymethod(name = "inexact?")
WITHOUT_CLASSIFICATION	symbol string must be interned
WITHOUT_CLASSIFICATION	assert internedsymbol == internedsymbol.intern() internedsymbol + " is not interned"
WITHOUT_CLASSIFICATION	symbol class methods.
WITHOUT_CLASSIFICATION	todo 1.9 rb_enc_symname_p
WITHOUT_CLASSIFICATION	this is needed to unpack stuff
WITHOUT_CLASSIFICATION	we already confirmed above that length > 0
WITHOUT_CLASSIFICATION	must be power of 2!
WITHOUT_CLASSIFICATION	note all fields are final -- rehash creates new entries when necessary. as documented in java.util.concurrent.concurrenthashmap.java that will statistically affect only a small percentage (< 20%) of entries for a given rehash.
WITHOUT_CLASSIFICATION	assert internedname == internedname.intern() internedname + " is not interned"
WITHOUT_CLASSIFICATION	try lookup again under lock
WITHOUT_CLASSIFICATION	try lookup again under lock
WITHOUT_CLASSIFICATION	write-volatile
WITHOUT_CLASSIFICATION	write-volatile
WITHOUT_CLASSIFICATION	backwards-compatibility but threadsafe now
WITHOUT_CLASSIFICATION	single node on list
WITHOUT_CLASSIFICATION	reuse trailing consecutive sequence at same slot
WITHOUT_CLASSIFICATION	clone all remaining nodes
WITHOUT_CLASSIFICATION	check the length every iteration since the block can modify this string.
WITHOUT_CLASSIFICATION	we set scope-aware to true to force heap-based locals
WITHOUT_CLASSIFICATION	not so backwards-compatible here but no one should have been calling this anyway.
WITHOUT_CLASSIFICATION	profile
WITHOUT_CLASSIFICATION	static private final string translit = "translit"
WITHOUT_CLASSIFICATION	treat start and end as startend for end >= 0 start..end for end < 0
WITHOUT_CLASSIFICATION	invalid ranges result in an empty string
WITHOUT_CLASSIFICATION	methods of the nil class (nil_)
WITHOUT_CLASSIFICATION	has read/write been closed or is it still open for business
WITHOUT_CLASSIFICATION	support io modes that this object was opened with
WITHOUT_CLASSIFICATION	must let original string know we're modifying so shared buffers aren't damaged
WITHOUT_CLASSIFICATION	reset the state
WITHOUT_CLASSIFICATION	tainting here if we ever want it. (secure 4)
WITHOUT_CLASSIFICATION	rb_match_busy
WITHOUT_CLASSIFICATION	str is frozen
WITHOUT_CLASSIFICATION	mri also does a pointer comparison here
WITHOUT_CLASSIFICATION	jrubyserver
WITHOUT_CLASSIFICATION	class.allocate object is not allocatable before it is initialized
WITHOUT_CLASSIFICATION	boot the object class
WITHOUT_CLASSIFICATION	methods of the object class (rb_obj_)
WITHOUT_CLASSIFICATION	update superclass reference
WITHOUT_CLASSIFICATION	undo check
WITHOUT_CLASSIFICATION	this is a non-standard method have we decided to start extending ruby? classclass.definefastmethod("subclasses" callbackfactory.getfastoptmethod("subclasses"))
WITHOUT_CLASSIFICATION	boot the module and class classes
WITHOUT_CLASSIFICATION	this is the only case it might be null here (in metaclass construction)
WITHOUT_CLASSIFICATION	use parent's marshal
WITHOUT_CLASSIFICATION	use parent's marshal
WITHOUT_CLASSIFICATION	could be pulled down to rubyclass in future rb_class_boot
WITHOUT_CLASSIFICATION	remove us from old superclass's child classes
WITHOUT_CLASSIFICATION	add us to new superclass's child classes
WITHOUT_CLASSIFICATION	update all subclasses
WITHOUT_CLASSIFICATION	fields to hold ruby and rubyclass references
WITHOUT_CLASSIFICATION	static initializing method
WITHOUT_CLASSIFICATION	standard constructor that accepts ruby rubyclass
WITHOUT_CLASSIFICATION	no-arg constructor using static references to ruby and rubyclass
WITHOUT_CLASSIFICATION	non-signature signature with just irubyobject
WITHOUT_CLASSIFICATION	indices for temp values
WITHOUT_CLASSIFICATION	self method name
WITHOUT_CLASSIFICATION	the default allocator
WITHOUT_CLASSIFICATION	equivalent of t_data
WITHOUT_CLASSIFICATION	do nothing leave empty
WITHOUT_CLASSIFICATION	double.max_exponent since java 1.6
WITHOUT_CLASSIFICATION	================ singleton methods ================
WITHOUT_CLASSIFICATION	ruby uses qnil here we use "dummy" because we need a class
WITHOUT_CLASSIFICATION	make sure all arguments are modules before calling the callbacks
WITHOUT_CLASSIFICATION	mri extends in order from last to first
WITHOUT_CLASSIFICATION	note serialization is primarily supported for testing purposes and there is no general guarantee that serialization will work correctly. specifically instance variables pointing at symbols threads modules classes and other unserializable types are not detected.
WITHOUT_CLASSIFICATION	write out ivar count followed by name/value pairs
WITHOUT_CLASSIFICATION	rest in ivar count followed by name/value pairs
WITHOUT_CLASSIFICATION	0x3fff_ffff -0x4000_0000
WITHOUT_CLASSIFICATION	a gotcha
WITHOUT_CLASSIFICATION	java / and % are not the same as ruby
WITHOUT_CLASSIFICATION	a gotcha for long.min_value value = -value
WITHOUT_CLASSIFICATION	piece of mri rb_to_id
WITHOUT_CLASSIFICATION	java doubles are 64 bit long
WITHOUT_CLASSIFICATION	double.max_exponent since java 1.6
WITHOUT_CLASSIFICATION	don't override numeric#div !
WITHOUT_CLASSIFICATION	modelled after c ruby implementation (java /% not same as ruby)
WITHOUT_CLASSIFICATION	mri behavior
WITHOUT_CLASSIFICATION	numeric.equal
WITHOUT_CLASSIFICATION	provider is not available
WITHOUT_CLASSIFICATION	bouncy castle doesn't support algorithm
WITHOUT_CLASSIFICATION	fall back to system jca providers
WITHOUT_CLASSIFICATION	rubydigest
WITHOUT_CLASSIFICATION	enebo can these be fast?
WITHOUT_CLASSIFICATION	synchronize on the rubythread for threadgroup updates
WITHOUT_CLASSIFICATION	we only add live threads
WITHOUT_CLASSIFICATION	use same classindex as metaclass since we're technically still of that type
WITHOUT_CLASSIFICATION	handle everything after -- as arguments to the jruby process
WITHOUT_CLASSIFICATION	jrubyservice
WITHOUT_CLASSIFICATION	while
WITHOUT_CLASSIFICATION	\ooo
WITHOUT_CLASSIFICATION	cruby uses sprintf(buf "%.g" float_dig d) this pattern adjusts the output of string.pattern("%g") to mimic the c version.
WITHOUT_CLASSIFICATION	mask off "once" flag
WITHOUT_CLASSIFICATION	used only by the compiler/interpreter (will set the literal flag)
WITHOUT_CLASSIFICATION	internal usage (complex/rational)
WITHOUT_CLASSIFICATION	silent ?
WITHOUT_CLASSIFICATION	\xhh
WITHOUT_CLASSIFICATION	\m-x \m-\c-x \m-\cx
WITHOUT_CLASSIFICATION	\c-x \c-\m-x
WITHOUT_CLASSIFICATION	\cx \c\m-x
WITHOUT_CLASSIFICATION	\o \oo \ooo or backref
WITHOUT_CLASSIFICATION	mbclen_needmore_p
WITHOUT_CLASSIFICATION	mbclen_invalid_p
WITHOUT_CLASSIFICATION	unicode is can be only 21 bits long int is enough
WITHOUT_CLASSIFICATION	surrogates
WITHOUT_CLASSIFICATION	do not load the class if not used
WITHOUT_CLASSIFICATION	\0 \0o \0oo
WITHOUT_CLASSIFICATION	\xhh
WITHOUT_CLASSIFICATION	\c-x \c-\m-x
WITHOUT_CLASSIFICATION	\m-x \m-\c-x \m-\cx
WITHOUT_CLASSIFICATION	\\u{h hh hhh hhhh hhhhh hhhhhh }
WITHOUT_CLASSIFICATION	\\uhhhh
WITHOUT_CLASSIFICATION	\p{hiragana}
WITHOUT_CLASSIFICATION	inner switch
WITHOUT_CLASSIFICATION	newinstance here
WITHOUT_CLASSIFICATION	rb_reg_raise
WITHOUT_CLASSIFICATION	rb_reg_desc
WITHOUT_CLASSIFICATION	rb_enc_reg_raise
WITHOUT_CLASSIFICATION	rb_enc_reg_error_desc
WITHOUT_CLASSIFICATION	rb_reg_initialize_str
WITHOUT_CLASSIFICATION	rb_reg_initialize
WITHOUT_CLASSIFICATION	jruby-3625 delay setting backref until the matchdata is completely initialized
WITHOUT_CLASSIFICATION	rb_reg_expr_str
WITHOUT_CLASSIFICATION	option_to_str
WITHOUT_CLASSIFICATION	don't initialize with class don't put in object space and don't taint
WITHOUT_CLASSIFICATION	args should be before block
WITHOUT_CLASSIFICATION	args should be at end
WITHOUT_CLASSIFICATION	minus one more for irubyobject[]
WITHOUT_CLASSIFICATION	minus one more for irubyobject[]
WITHOUT_CLASSIFICATION	skip anything not related to jruby
WITHOUT_CLASSIFICATION	start a new populator
WITHOUT_CLASSIFICATION	check for frame field reads or writes
WITHOUT_CLASSIFICATION	add all names for this annotation
WITHOUT_CLASSIFICATION	no annotated methods found skip
WITHOUT_CLASSIFICATION	write out a static initializer for frame names so it only fires once
WITHOUT_CLASSIFICATION	single method use normal logic
WITHOUT_CLASSIFICATION	multimethod new logic
WITHOUT_CLASSIFICATION	declared type returns the qualified name without $ for inner classes!!!
WITHOUT_CLASSIFICATION	inner class use $ to delimit
WITHOUT_CLASSIFICATION	rubymodule singletonclass = module.getsingletonclass()
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	fallback on non-pregenerated logic
WITHOUT_CLASSIFICATION	refresh call adapter since it matters if this is iter-based or not
WITHOUT_CLASSIFICATION	if we have more than one arg make sure the array created to contain them is not objectspaced
WITHOUT_CLASSIFICATION	attribute set.
WITHOUT_CLASSIFICATION	element set
WITHOUT_CLASSIFICATION	if reciever is self then we do the call the same way as vcall
WITHOUT_CLASSIFICATION	if reciever is self then we do the call the same way as vcall
WITHOUT_CLASSIFICATION	colon3
WITHOUT_CLASSIFICATION	colon3
WITHOUT_CLASSIFICATION	array created for rescue args doesn't need to be in objectspace.
WITHOUT_CLASSIFICATION	for b.foo
WITHOUT_CLASSIFICATION	instance config for the script run
WITHOUT_CLASSIFICATION	if reciever is self then we do the call the same way as vcall
WITHOUT_CLASSIFICATION	if reciever is self then we do the call the same way as vcall
WITHOUT_CLASSIFICATION	for 'b.foo()'. args are only significant in maintaining backwards compatible ast structure
WITHOUT_CLASSIFICATION	for 'b.foo()'. args are only significant in maintaining backwards compatible ast structure
WITHOUT_CLASSIFICATION	rubymodule module = context.getrubyclass()
WITHOUT_CLASSIFICATION	for 'b.foo'
WITHOUT_CLASSIFICATION	we define an actual list to get around bug in java integration (1387115)
WITHOUT_CLASSIFICATION	something in here is used to build up ruby stack trace
WITHOUT_CLASSIFICATION	ruby grammar productions return plenty of nulls.
WITHOUT_CLASSIFICATION	ruby grammar productions return plenty of nulls.
WITHOUT_CLASSIFICATION	do nothing allow loop to retry
WITHOUT_CLASSIFICATION	we can callsite cache const_missing if we want
WITHOUT_CLASSIFICATION	store to temp so it does null out on us mid-stream
WITHOUT_CLASSIFICATION	never visited should be fine
WITHOUT_CLASSIFICATION	for 'foo()'. args are only significant in maintaining backwards compatible ast structure
WITHOUT_CLASSIFICATION	the name of the variable
WITHOUT_CLASSIFICATION	if we have more than one argument then make sure the array is not objectspaced.
WITHOUT_CLASSIFICATION	only in ruby 1.9 methods
WITHOUT_CLASSIFICATION	bind 'normal' parameter values to the local scope for this method.
WITHOUT_CLASSIFICATION	no arg grouping just use bulk assignment methods
WITHOUT_CLASSIFICATION	optargs and restargs require more work so isolate them and arraylist creation here
WITHOUT_CLASSIFICATION	arity.checkarity(runtime argslength)
WITHOUT_CLASSIFICATION	no more values to stick in rest arg
WITHOUT_CLASSIFICATION	set argv from main's args
WITHOUT_CLASSIFICATION	attribute set.
WITHOUT_CLASSIFICATION	if reciever is self then we do the call the same way as vcall
WITHOUT_CLASSIFICATION	for 'b.foo()'. args are only significant in maintaining backwards compatible ast structure
WITHOUT_CLASSIFICATION	the name of the variable
WITHOUT_CLASSIFICATION	a scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.
WITHOUT_CLASSIFICATION	a scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.
WITHOUT_CLASSIFICATION	block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] assert argsnode != null "argsnode is not null"
WITHOUT_CLASSIFICATION	assign given optional arguments to their variables
WITHOUT_CLASSIFICATION	in-frame evalstate should already have receiver set as self continue to use it
WITHOUT_CLASSIFICATION	assign the default values adding to the end of allargs
WITHOUT_CLASSIFICATION	make sure the appropriate scope has proper size. see jruby-2046.
WITHOUT_CLASSIFICATION	experimental class reification support to create real java classes for ruby classes after the first opening
WITHOUT_CLASSIFICATION	this should never happen past parse but just bulletproof this just in case
WITHOUT_CLASSIFICATION	make a nil node if no body. notice this is not part of ast.
WITHOUT_CLASSIFICATION	'class << state.self' and 'class << obj' uses defn as opposed to defs
WITHOUT_CLASSIFICATION	now used as an interpreter event
WITHOUT_CLASSIFICATION	never visited should be ok
WITHOUT_CLASSIFICATION	if no explicit block passed to super then use the one passed in unless it's explicitly cleared with nil
WITHOUT_CLASSIFICATION	jruby-530 until case
WITHOUT_CLASSIFICATION	element set
WITHOUT_CLASSIFICATION	for 'b.foo()'. args are only significant in maintaining backwards compatible ast structure
WITHOUT_CLASSIFICATION	we can callsite cache const_missing if we want
WITHOUT_CLASSIFICATION	store to temp so it does null out on us mid-stream
WITHOUT_CLASSIFICATION	store to temp so it does null out on us mid-stream
WITHOUT_CLASSIFICATION	for 'foo()'. args are only significant in maintaining backwards compatible ast structure
WITHOUT_CLASSIFICATION	the name of the variable
WITHOUT_CLASSIFICATION	the name of the variable
WITHOUT_CLASSIFICATION	a scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.
WITHOUT_CLASSIFICATION	empirical observations null -> some arity argsnode == this.argsnode then check for arity changes newline(splatnode) -> argspushnode
WITHOUT_CLASSIFICATION	assert !(value instanceof rubyarray) "not an array"
WITHOUT_CLASSIFICATION	serialization killed our dynamic scope. we can just create an empty one since serialization cannot serialize an eval (which is the only thing which is capable of having a non-empty dynamic scope).
WITHOUT_CLASSIFICATION	each root node has a top-level scope that we need to push
WITHOUT_CLASSIFICATION	we could probably also detect if lhs value came out of cache and avoid some of this
WITHOUT_CLASSIFICATION	assert thenbody != null "thenbody is not null" assert elsebody != null "elsebody is not null"
WITHOUT_CLASSIFICATION	add in reverse order
WITHOUT_CLASSIFICATION	in order to make pragma's noops we set location to a special value
WITHOUT_CLASSIFICATION	ignore compiler pragmas
WITHOUT_CLASSIFICATION	we can callsite cache const_missing if we want
WITHOUT_CLASSIFICATION	store to temp so it does null out on us mid-stream
WITHOUT_CLASSIFICATION	store to temp so it does null out on us mid-stream
WITHOUT_CLASSIFICATION	for 'foo()'. args are only significant in maintaining backwards compatible ast structure
WITHOUT_CLASSIFICATION	make a nil node if no body. notice this is not part of ast.
WITHOUT_CLASSIFICATION	now used as an interpreter event
WITHOUT_CLASSIFICATION	no actual test so do 'when' if when expression is not nil
WITHOUT_CLASSIFICATION	save entering the try if there's nothing to ensure
WITHOUT_CLASSIFICATION	for 'foo'
WITHOUT_CLASSIFICATION	for 'foo'
WITHOUT_CLASSIFICATION	admittedly inefficient
WITHOUT_CLASSIFICATION	jruby-530 while case
WITHOUT_CLASSIFICATION	what static scoping relationship exists when it comes into being.
WITHOUT_CLASSIFICATION	let rescuedblock continue
WITHOUT_CLASSIFICATION	just rethrow
WITHOUT_CLASSIFICATION	just rethrow
WITHOUT_CLASSIFICATION	clear exception when handled or retried
WITHOUT_CLASSIFICATION	clear exception when handled or retried
WITHOUT_CLASSIFICATION	no takers bubble up
WITHOUT_CLASSIFICATION	no takers bubble up
WITHOUT_CLASSIFICATION	execute rescue block
WITHOUT_CLASSIFICATION	if no exception is thrown execute else block
WITHOUT_CLASSIFICATION	index of variable for this arg
WITHOUT_CLASSIFICATION	only a marker interface
WITHOUT_CLASSIFICATION	don't attempt to coerce to array just wrap and return
WITHOUT_CLASSIFICATION	pragmas
WITHOUT_CLASSIFICATION	the method also needs a scope do both
WITHOUT_CLASSIFICATION	we're doing normal framed compilation or the method needs a frame
WITHOUT_CLASSIFICATION	the method doesn't need a scope or static scope frame only
WITHOUT_CLASSIFICATION	the method doesn't need a scope but has static scope needs use a dummy scope
WITHOUT_CLASSIFICATION	proc.new needs the caller's block to instantiate a proc
WITHOUT_CLASSIFICATION	check for proc.new an especially magic method
WITHOUT_CLASSIFICATION	long slow way causes disabling
WITHOUT_CLASSIFICATION	ok we have fast paths
WITHOUT_CLASSIFICATION	ok we have fast paths
WITHOUT_CLASSIFICATION	long slow way causes disabling for defined
WITHOUT_CLASSIFICATION	we set scope-aware to true to force heap-based locals
WITHOUT_CLASSIFICATION	because regexp#=== sets backref we have to make this backref-aware
WITHOUT_CLASSIFICATION	encountered a node we don't recognize set everything to true to disable optz
WITHOUT_CLASSIFICATION	only arrays that are "lightweight" are being used as args arrays
WITHOUT_CLASSIFICATION	otherwise it's a literal array
WITHOUT_CLASSIFICATION	use array as-is it's a literal array
WITHOUT_CLASSIFICATION	unwrap newline nodes to get their actual type
WITHOUT_CLASSIFICATION	compile first node as non-expr and then second node
WITHOUT_CLASSIFICATION	last node either !instanceof whennode or null is the else
WITHOUT_CLASSIFICATION	compile first node only
WITHOUT_CLASSIFICATION	splatted when can't do it yet
WITHOUT_CLASSIFICATION	if __send__ with a literal symbol compile it as a direct fcall
WITHOUT_CLASSIFICATION	note currently this optimization is limited to the following situations all expressions must be int-ranged literal fixnums it also still emits the code for the "safe" when logic which is rather wasteful (since it essentially doubles each code body). as such it is normally disabled but it serves as an example of how this optimization could be done. ideally it should be combined with the when processing to improve code reuse before it's generally available.
WITHOUT_CLASSIFICATION	aggregate when nodes into a list unfortunately this is no
WITHOUT_CLASSIFICATION	one arg but it's an array treat it as a proper array
WITHOUT_CLASSIFICATION	can't do it
WITHOUT_CLASSIFICATION	otherwise use normal args compiler
WITHOUT_CLASSIFICATION	colon3 assign in object
WITHOUT_CLASSIFICATION	colon3 assign in object
WITHOUT_CLASSIFICATION	these are all simple cases that don't require the heavier defined logic
WITHOUT_CLASSIFICATION	[irubyobject rubyclass visibility] [irubyobject rubyclass] [irubyobject]
WITHOUT_CLASSIFICATION	[]
WITHOUT_CLASSIFICATION	[]
WITHOUT_CLASSIFICATION	context.swapvalues() context.consumecurrentvalue()
WITHOUT_CLASSIFICATION	[rubyclass] [rubyclass rubyclass] [rubyclass] [] [self] [rubyclass] [rubyclass rubyclass]
WITHOUT_CLASSIFICATION	[rubyclass]
WITHOUT_CLASSIFICATION	[rubyclass] [rubyclass rubyclass] [rubyclass] []
WITHOUT_CLASSIFICATION	if root of method is rescue compile as a light rescue
WITHOUT_CLASSIFICATION	inspect body and args
WITHOUT_CLASSIFICATION	inspect body and args
WITHOUT_CLASSIFICATION	check args first since body inspection can depend on args
WITHOUT_CLASSIFICATION	if root of method is rescue compile as light rescue
WITHOUT_CLASSIFICATION	invoke run with threadcontext and topself
WITHOUT_CLASSIFICATION	[irubyobject] [irubyobject irubyobject] [irubyobject rubyclass] [irubyobject rubyclass rubyclass] [irubyobject rubyclass visibility] [irubyobject rubyclass visibility visibility]
WITHOUT_CLASSIFICATION	[irubyobject rubyclass visibility] [irubyobject rubyclass] [irubyobject]
WITHOUT_CLASSIFICATION	[rubyclass] []
WITHOUT_CLASSIFICATION	[string] [string string] [string] [string rubyclass] [string rubyclass rubyclass] [string rubyclass]
WITHOUT_CLASSIFICATION	[string] [string string] [string] [string rubyclass] [string rubyclass rubyclass] [string rubyclass]
WITHOUT_CLASSIFICATION	no args do not pass args processor
WITHOUT_CLASSIFICATION	create the closure class and instantiate it
WITHOUT_CLASSIFICATION	create the closure class and instantiate it
WITHOUT_CLASSIFICATION	not an expression only compile the elements
WITHOUT_CLASSIFICATION	not an expression only compile the elements
WITHOUT_CLASSIFICATION	not an expression only compile the elements
WITHOUT_CLASSIFICATION	create the closure class and instantiate it
WITHOUT_CLASSIFICATION	create the closure class and instantiate it
WITHOUT_CLASSIFICATION	no args do not pass args processor
WITHOUT_CLASSIFICATION	force heap-scope behavior since it uses parent's scope
WITHOUT_CLASSIFICATION	always false or nil
WITHOUT_CLASSIFICATION	optimizations if we know ahead of time it will always be true or false
WITHOUT_CLASSIFICATION	normal
WITHOUT_CLASSIFICATION	compile condition as non-expr and just compile "then" body
WITHOUT_CLASSIFICATION	need the array use unoptz version
WITHOUT_CLASSIFICATION	just push nil for pragmas
WITHOUT_CLASSIFICATION	"assignment" means the value is already on the stack
WITHOUT_CLASSIFICATION	compile first node only
WITHOUT_CLASSIFICATION	create the closure class and instantiate it
WITHOUT_CLASSIFICATION	create the closure class and instantiate it
WITHOUT_CLASSIFICATION	eval new value call operator on old value and assign
WITHOUT_CLASSIFICATION	try optz version
WITHOUT_CLASSIFICATION	sizes must match
WITHOUT_CLASSIFICATION	expect value to be an array of nodes
WITHOUT_CLASSIFICATION	normal items at the "head" of the masgn
WITHOUT_CLASSIFICATION	head must not be null and there must be no "args" (like arg)
WITHOUT_CLASSIFICATION	"head" must have no non-trivial assigns (array groupings basically)
WITHOUT_CLASSIFICATION	only supports simple parallel assignment of up to 10 values to the same number of assignees
WITHOUT_CLASSIFICATION	perform assignment for the next node
WITHOUT_CLASSIFICATION	if we get here no optz cases work fall back on unoptz.
WITHOUT_CLASSIFICATION	redonode redonode = (redonode)node
WITHOUT_CLASSIFICATION	done processing args
WITHOUT_CLASSIFICATION	all these types are immediately considered "defined"
WITHOUT_CLASSIFICATION	assign to appropriate variable
WITHOUT_CLASSIFICATION	if arity 1 just compile the one element to save us the array cost
WITHOUT_CLASSIFICATION	[recv]
WITHOUT_CLASSIFICATION	[recv]
WITHOUT_CLASSIFICATION	[recv]
WITHOUT_CLASSIFICATION	compile into array
WITHOUT_CLASSIFICATION	compile first node as non-expr and compile second node
WITHOUT_CLASSIFICATION	check if it's an immediate and don't outline
WITHOUT_CLASSIFICATION	condition is always true just compile it and not body
WITHOUT_CLASSIFICATION	force static scope to claim restarg at 0 so it only implements the [] version of __file__
WITHOUT_CLASSIFICATION	create method for toplevel of script
WITHOUT_CLASSIFICATION	it's a multiple-statement body iterate over all elements in turn and chain if it get too long
WITHOUT_CLASSIFICATION	send it along as arity-specific we don't need the array
WITHOUT_CLASSIFICATION	single-statement body just compile it
WITHOUT_CLASSIFICATION	leave as a normal array
WITHOUT_CLASSIFICATION	this method has jited already or has been abandoned. bail out.
WITHOUT_CLASSIFICATION	the cache is full. abandon jit for this method and bail out.
WITHOUT_CLASSIFICATION	check args first since body inspection can depend on args
WITHOUT_CLASSIFICATION	create the closure class and instantiate it
WITHOUT_CLASSIFICATION	create the closure class and instantiate it
WITHOUT_CLASSIFICATION	no args do not pass args processor
WITHOUT_CLASSIFICATION	need the array use unoptz version
WITHOUT_CLASSIFICATION	try optz version
WITHOUT_CLASSIFICATION	expect value to be an array of nodes
WITHOUT_CLASSIFICATION	head must not be null and there must be no "args" (like arg)
WITHOUT_CLASSIFICATION	sizes must match
WITHOUT_CLASSIFICATION	"head" must have no non-trivial assigns (array groupings basically)
WITHOUT_CLASSIFICATION	if we get here no optz cases work fall back on unoptz.
WITHOUT_CLASSIFICATION	perform assignment for the next node
WITHOUT_CLASSIFICATION	done processing args
WITHOUT_CLASSIFICATION	check if the method has been explicitly excluded
WITHOUT_CLASSIFICATION	class could not be found nor generated give up on jit and bail out
WITHOUT_CLASSIFICATION	successfully got back a jitted method
WITHOUT_CLASSIFICATION	finally grab the script
WITHOUT_CLASSIFICATION	logevery n methods based on configuration
WITHOUT_CLASSIFICATION	time the compilation
WITHOUT_CLASSIFICATION	we have a body do a full-on method
WITHOUT_CLASSIFICATION	if we don't have a body check for required or opt args if opt args they could have side effects if required args need to raise errors if too few args passed otherwise method does nothing make it a nop
WITHOUT_CLASSIFICATION	if we haven't already decided on a do-nothing call
WITHOUT_CLASSIFICATION	only supports simple parallel assignment of up to 4 values to the same number of assignees
WITHOUT_CLASSIFICATION	normal items at the front or back of the masgn
WITHOUT_CLASSIFICATION	set up a local iruby variable
WITHOUT_CLASSIFICATION	grab nil for local variables
WITHOUT_CLASSIFICATION	visit a label to start scoping for local vars in this method
WITHOUT_CLASSIFICATION	return last value from execution
WITHOUT_CLASSIFICATION	end of variable scope
WITHOUT_CLASSIFICATION	method is done declare all variables
WITHOUT_CLASSIFICATION	define the annotation for the method
WITHOUT_CLASSIFICATION	check arity in the variable-arity version
WITHOUT_CLASSIFICATION	load block from [] version of method
WITHOUT_CLASSIFICATION	normal return for method body. return jump for within a begin/rescue/ensure
WITHOUT_CLASSIFICATION	in method body with no containing loop issue jump error load runtime and value issue jump error
WITHOUT_CLASSIFICATION	in method body with no containing loop issue jump error load runtime and value issue jump error
WITHOUT_CLASSIFICATION	value is already on stack save it for later
WITHOUT_CLASSIFICATION	receiver first so we know which call site to use
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	self
WITHOUT_CLASSIFICATION	self
WITHOUT_CLASSIFICATION	self
WITHOUT_CLASSIFICATION	self
WITHOUT_CLASSIFICATION	arg0
WITHOUT_CLASSIFICATION	arg0
WITHOUT_CLASSIFICATION	arg0
WITHOUT_CLASSIFICATION	arg1
WITHOUT_CLASSIFICATION	arg1
WITHOUT_CLASSIFICATION	arg2
WITHOUT_CLASSIFICATION	args
WITHOUT_CLASSIFICATION	receiver first so we know which call site to use
WITHOUT_CLASSIFICATION	select appropriate call site dup receiver load self
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	self
WITHOUT_CLASSIFICATION	self
WITHOUT_CLASSIFICATION	self
WITHOUT_CLASSIFICATION	arg0
WITHOUT_CLASSIFICATION	arg0
WITHOUT_CLASSIFICATION	arg1
WITHOUT_CLASSIFICATION	args
WITHOUT_CLASSIFICATION	get call site and thread context
WITHOUT_CLASSIFICATION	get call site and thread context
WITHOUT_CLASSIFICATION	evaluate and save receiver and args
WITHOUT_CLASSIFICATION	evaluate and save receiver and args
WITHOUT_CLASSIFICATION	invoke
WITHOUT_CLASSIFICATION	invoke
WITHOUT_CLASSIFICATION	check if it's true ending if so
WITHOUT_CLASSIFICATION	not true eval value and assign
WITHOUT_CLASSIFICATION	not true eval value and assign
WITHOUT_CLASSIFICATION	thread context receiver and original args
WITHOUT_CLASSIFICATION	thread context receiver and original args
WITHOUT_CLASSIFICATION	eval value for assignment
WITHOUT_CLASSIFICATION	call site
WITHOUT_CLASSIFICATION	call site
WITHOUT_CLASSIFICATION	depending on size of original args call appropriate utility method
WITHOUT_CLASSIFICATION	check if it's true ending if not
WITHOUT_CLASSIFICATION	eval value and save it
WITHOUT_CLASSIFICATION	self
WITHOUT_CLASSIFICATION	self
WITHOUT_CLASSIFICATION	depending on size of original args call appropriate utility method
WITHOUT_CLASSIFICATION	receiver args result value
WITHOUT_CLASSIFICATION	[adapter tc]
WITHOUT_CLASSIFICATION	[adapter tc]
WITHOUT_CLASSIFICATION	[adapter tc]
WITHOUT_CLASSIFICATION	super uses current block if none given
WITHOUT_CLASSIFICATION	args
WITHOUT_CLASSIFICATION	block
WITHOUT_CLASSIFICATION	block
WITHOUT_CLASSIFICATION	no args no block
WITHOUT_CLASSIFICATION	no args with block
WITHOUT_CLASSIFICATION	with args no block
WITHOUT_CLASSIFICATION	with args with block
WITHOUT_CLASSIFICATION	adapter tc recv args{01} block{01}]
WITHOUT_CLASSIFICATION	pop extra attr value
WITHOUT_CLASSIFICATION	pop extra attr value
WITHOUT_CLASSIFICATION	arg and receiver already present on the stack
WITHOUT_CLASSIFICATION	arg
WITHOUT_CLASSIFICATION	arg
WITHOUT_CLASSIFICATION	self
WITHOUT_CLASSIFICATION	[adapter tc]
WITHOUT_CLASSIFICATION	args
WITHOUT_CLASSIFICATION	block
WITHOUT_CLASSIFICATION	no args no block
WITHOUT_CLASSIFICATION	no args with block
WITHOUT_CLASSIFICATION	with args no block
WITHOUT_CLASSIFICATION	with args with block
WITHOUT_CLASSIFICATION	arg
WITHOUT_CLASSIFICATION	retrieve scope from scopes array
WITHOUT_CLASSIFICATION	use numbered access method
WITHOUT_CLASSIFICATION	retrieve call site from sites array
WITHOUT_CLASSIFICATION	add name to call site list
WITHOUT_CLASSIFICATION	module is on top of stack
WITHOUT_CLASSIFICATION	build scope names string
WITHOUT_CLASSIFICATION	build descriptor string
WITHOUT_CLASSIFICATION	build descriptor string
WITHOUT_CLASSIFICATION	generate call sites initialization code
WITHOUT_CLASSIFICATION	generate symbols initialization code
WITHOUT_CLASSIFICATION	generate fixnums initialization code
WITHOUT_CLASSIFICATION	generate constants initialization code
WITHOUT_CLASSIFICATION	generate regexps initialization code
WITHOUT_CLASSIFICATION	generate regexps initialization code
WITHOUT_CLASSIFICATION	generate variable readers initialization code
WITHOUT_CLASSIFICATION	generate variable writers initialization code
WITHOUT_CLASSIFICATION	generate block bodies initialization code
WITHOUT_CLASSIFICATION	generate block bodies initialization code
WITHOUT_CLASSIFICATION	generate bytelists initialization code
WITHOUT_CLASSIFICATION	generate method cache initialization code
WITHOUT_CLASSIFICATION	adapter tc recv args{01} block{01}]
WITHOUT_CLASSIFICATION	use irubyobject[]
WITHOUT_CLASSIFICATION	do nothing fall back on default compiler below
WITHOUT_CLASSIFICATION	if more than 4 locals get the locals array too
WITHOUT_CLASSIFICATION	no point in updating number if last number was same value.
WITHOUT_CLASSIFICATION	load object under value
WITHOUT_CLASSIFICATION	put under object array already present
WITHOUT_CLASSIFICATION	if element count is less than 6 use helper methods
WITHOUT_CLASSIFICATION	this is pretty inefficient for building an array so just raise an error if someone's using it for a lot of elements
WITHOUT_CLASSIFICATION	if we have a specific-arity helper to construct an array for us use that
WITHOUT_CLASSIFICATION	if we have a specific-arity helper to construct an array for us use that
WITHOUT_CLASSIFICATION	brute force construction inline
WITHOUT_CLASSIFICATION	brute force construction inline
WITHOUT_CLASSIFICATION	use specific-arity for as much as possible
WITHOUT_CLASSIFICATION	call istrue on the result
WITHOUT_CLASSIFICATION	call istrue on the result
WITHOUT_CLASSIFICATION	call istrue on the result
WITHOUT_CLASSIFICATION	eq == 0 (i.e. false)
WITHOUT_CLASSIFICATION	dup it since we need to return appropriately if it's false
WITHOUT_CLASSIFICATION	dup it since we need to return appropriately if it's false
WITHOUT_CLASSIFICATION	clear body or next result after each successful loop
WITHOUT_CLASSIFICATION	check the condition
WITHOUT_CLASSIFICATION	ne == nonzero (i.e. true)
WITHOUT_CLASSIFICATION	skip catch block
WITHOUT_CLASSIFICATION	catch logic for flow-control next break
WITHOUT_CLASSIFICATION	next jump
WITHOUT_CLASSIFICATION	exceptionnext target is for a next that doesn't push a new value like this one
WITHOUT_CLASSIFICATION	grab nil for local variables
WITHOUT_CLASSIFICATION	grab nil for local variables
WITHOUT_CLASSIFICATION	eq == 0 (i.e. false)
WITHOUT_CLASSIFICATION	clear body or next result after each successful loop
WITHOUT_CLASSIFICATION	eq == 0 (i.e. false) pop the extra result and replace with the send part of the and
WITHOUT_CLASSIFICATION	check the condition
WITHOUT_CLASSIFICATION	ne == nonzero (i.e. true)
WITHOUT_CLASSIFICATION	synthetic methods always have zero arg parameters
WITHOUT_CLASSIFICATION	break jump
WITHOUT_CLASSIFICATION	done with closure compilation
WITHOUT_CLASSIFICATION	[reg]
WITHOUT_CLASSIFICATION	for regular expressions with the /o flag
WITHOUT_CLASSIFICATION	inside a loop jump to body
WITHOUT_CLASSIFICATION	inside a loop jump to conditional
WITHOUT_CLASSIFICATION	synthetic methods always have zero arg parameters
WITHOUT_CLASSIFICATION	store previous exception for restoration if we rescue something
WITHOUT_CLASSIFICATION	store previous exception for restoration if we rescue something
WITHOUT_CLASSIFICATION	if more than 4 vars get values array too
WITHOUT_CLASSIFICATION	retry handling in the rescue block
WITHOUT_CLASSIFICATION	any exceptions raised must continue to be raised skipping $! restoration
WITHOUT_CLASSIFICATION	and remaining jump exceptions should restore $!
WITHOUT_CLASSIFICATION	restore the original exception
WITHOUT_CLASSIFICATION	handle flow exceptions just propagating them
WITHOUT_CLASSIFICATION	rethrow to outer flow catcher
WITHOUT_CLASSIFICATION	handle ruby exceptions (raiseexception)
WITHOUT_CLASSIFICATION	inside a loop break out of it go to end of loop leaving break value on stack
WITHOUT_CLASSIFICATION	false zero
WITHOUT_CLASSIFICATION	load all arguments straight through
WITHOUT_CLASSIFICATION	and remaining jump exceptions should restore $!
WITHOUT_CLASSIFICATION	restore the original exception
WITHOUT_CLASSIFICATION	retry handling in the rescue blocks
WITHOUT_CLASSIFICATION	push false
WITHOUT_CLASSIFICATION	method.invokeinterface(p(irubyobject.class) "getinstancevariable" sig(irubyobject.class params(string.class)))
WITHOUT_CLASSIFICATION	method.ifnonnull(truelabel)
WITHOUT_CLASSIFICATION	eq == 0 (i.e. false) [c]
WITHOUT_CLASSIFICATION	[c c] [c c string] [c null|c]
WITHOUT_CLASSIFICATION	[c]
WITHOUT_CLASSIFICATION	push true
WITHOUT_CLASSIFICATION	eq != 0 (i.e. true)
WITHOUT_CLASSIFICATION	[? ?] [? boolean]
WITHOUT_CLASSIFICATION	[rubymodule] [rubymodule string]
WITHOUT_CLASSIFICATION	[boolean]
WITHOUT_CLASSIFICATION	no receiver for singleton class
WITHOUT_CLASSIFICATION	but there's a superclass passed in use it
WITHOUT_CLASSIFICATION	we re-set self to the class but store the old self in a temporary local variable this is to prevent it gcing in case the singleton is short-lived
WITHOUT_CLASSIFICATION	set self to the class
WITHOUT_CLASSIFICATION	class body
WITHOUT_CLASSIFICATION	static scope
WITHOUT_CLASSIFICATION	here starts the logic for the class definition
WITHOUT_CLASSIFICATION	new instance to invoke run against
WITHOUT_CLASSIFICATION	class body
WITHOUT_CLASSIFICATION	static scope
WITHOUT_CLASSIFICATION	here starts the logic for the class definition
WITHOUT_CLASSIFICATION	finally with exception
WITHOUT_CLASSIFICATION	prepare to call class definition method
WITHOUT_CLASSIFICATION	otherwise there's a receiver so we pass that in directly for the sclass logic
WITHOUT_CLASSIFICATION	original exception is on stack
WITHOUT_CLASSIFICATION	raiseexception is on stack get rubyexception out
WITHOUT_CLASSIFICATION	updating position for same line skip
WITHOUT_CLASSIFICATION	callbacks to fill in method body
WITHOUT_CLASSIFICATION	prepare to call "def" utility method to handle def logic
WITHOUT_CLASSIFICATION	script object
WITHOUT_CLASSIFICATION	arities
WITHOUT_CLASSIFICATION	todo assuming case is a fixnum
WITHOUT_CLASSIFICATION	we have an input case prepare branching logic
WITHOUT_CLASSIFICATION	we have optimized switch cases build a lookupswitch
WITHOUT_CLASSIFICATION	checkcast the value if match fast path otherwise proceed to slow logic
WITHOUT_CLASSIFICATION	expression-based tests + bodies
WITHOUT_CLASSIFICATION	normal case create a new label
WITHOUT_CLASSIFICATION	last conditional case use defaultcase
WITHOUT_CLASSIFICATION	do nothing arity check is done before call
WITHOUT_CLASSIFICATION	just confirm minimum args provided
WITHOUT_CLASSIFICATION	just confirm args length == required
WITHOUT_CLASSIFICATION	extract item from array
WITHOUT_CLASSIFICATION	index for the item
WITHOUT_CLASSIFICATION	index for the item
WITHOUT_CLASSIFICATION	prepare labels for opt logic
WITHOUT_CLASSIFICATION	prepare labels for opt logic
WITHOUT_CLASSIFICATION	next iterate over all optional args until no more arguments
WITHOUT_CLASSIFICATION	next iterate over all optional args until no more arguments
WITHOUT_CLASSIFICATION	now logic for each optional value
WITHOUT_CLASSIFICATION	otherwise no items left available use the code for default
WITHOUT_CLASSIFICATION	pop extra failed value from first cycle and we're done
WITHOUT_CLASSIFICATION	if there's args left and we want them assign to rest arg
WITHOUT_CLASSIFICATION	assign remaining elements as an array for rest args (or empty array)
WITHOUT_CLASSIFICATION	block argument assignment if there's a block arg
WITHOUT_CLASSIFICATION	first iterate over all pre args
WITHOUT_CLASSIFICATION	then optional args
WITHOUT_CLASSIFICATION	grab nil for local variables
WITHOUT_CLASSIFICATION	now logic for each optional value
WITHOUT_CLASSIFICATION	otherwise no items left available use the code for default
WITHOUT_CLASSIFICATION	pop extra failed value from first cycle and we're done
WITHOUT_CLASSIFICATION	assign remaining elements as an array for rest args (or empty array)
WITHOUT_CLASSIFICATION	block argument assignment if there's a block arg
WITHOUT_CLASSIFICATION	if rest args excluding post args
WITHOUT_CLASSIFICATION	finally post args
WITHOUT_CLASSIFICATION	not an expression don't want result pop it
WITHOUT_CLASSIFICATION	not an expression don't want result pop it
WITHOUT_CLASSIFICATION	unwrap scopes to appropriate depth
WITHOUT_CLASSIFICATION	fill in all vars with nil so compiler is happy about future accesses
WITHOUT_CLASSIFICATION	chain to the next segment of this giant method
WITHOUT_CLASSIFICATION	temp locals must start after last real local
WITHOUT_CLASSIFICATION	temp locals must start after last real local
WITHOUT_CLASSIFICATION	declare locals for java debugging purposes
WITHOUT_CLASSIFICATION	class bodies prepare their own dynamic scope so let it do that
WITHOUT_CLASSIFICATION	store the local vars in a local variable
WITHOUT_CLASSIFICATION	load args[0] which will be the irubyobject representing block args
WITHOUT_CLASSIFICATION	return in a class body raises error
WITHOUT_CLASSIFICATION	visit a label to start scoping for local vars in this method
WITHOUT_CLASSIFICATION	return last value from execution
WITHOUT_CLASSIFICATION	end of variable scope
WITHOUT_CLASSIFICATION	method is done declare all variables
WITHOUT_CLASSIFICATION	load block from [] version of method
WITHOUT_CLASSIFICATION	normal return for method body. return jump for within a begin/rescue/ensure
WITHOUT_CLASSIFICATION	declare locals for java debugging purposes
WITHOUT_CLASSIFICATION	class bodies prepare their own dynamic scope so let it do that
WITHOUT_CLASSIFICATION	load args[0] which will be the irubyobject representing block args
WITHOUT_CLASSIFICATION	we force argparamcount to 1 since we always know we'll have [] args
WITHOUT_CLASSIFICATION	chain to the next segment of this giant method
WITHOUT_CLASSIFICATION	chain to the next segment of this giant method
WITHOUT_CLASSIFICATION	load all arguments straight through
WITHOUT_CLASSIFICATION	load all arguments straight through
WITHOUT_CLASSIFICATION	we append an index to ensure two identical method names will not conflict
WITHOUT_CLASSIFICATION	we append an index to ensure two identical method names will not conflict
WITHOUT_CLASSIFICATION	store the local vars in a local variable if there are any
WITHOUT_CLASSIFICATION	if more than 4 locals get and populate the locals array too
WITHOUT_CLASSIFICATION	fill local vars with nil to avoid checking every access.
WITHOUT_CLASSIFICATION	default for starting tempvariableindex is ok
WITHOUT_CLASSIFICATION	store the local vars in a local variable for preparing the class (using previous scope)
WITHOUT_CLASSIFICATION	store the new local vars in a local variable
WITHOUT_CLASSIFICATION	in 1.8 mode this will be a rubyarray containing the arguments in 1.9 mode this will be an irubyobject[]
WITHOUT_CLASSIFICATION	no variable initialization because we're reusing parent's scope (flat)
WITHOUT_CLASSIFICATION	for specific-index cases clean up non-expression values
WITHOUT_CLASSIFICATION	set up a local ruby variable
WITHOUT_CLASSIFICATION	if that succeeds the others should as well
WITHOUT_CLASSIFICATION	verify the class
WITHOUT_CLASSIFICATION	create dir if necessary
WITHOUT_CLASSIFICATION	create the class with the appropriate class name and source file
WITHOUT_CLASSIFICATION	add setposition impl which stores filename as constant to speed updates
WITHOUT_CLASSIFICATION	thread context
WITHOUT_CLASSIFICATION	line number
WITHOUT_CLASSIFICATION	invoke __file__ with threadcontext self args (null) and block (null)
WITHOUT_CLASSIFICATION	load always uses irubyobject[] so simple closure offset calculation here
WITHOUT_CLASSIFICATION	return last value from execution
WITHOUT_CLASSIFICATION	method is done declare all variables
WITHOUT_CLASSIFICATION	in method body with no containing loop issue jump error load runtime and value issue jump error
WITHOUT_CLASSIFICATION	block
WITHOUT_CLASSIFICATION	block
WITHOUT_CLASSIFICATION	we force argparamcount to 1 since we always know we'll have [] args
WITHOUT_CLASSIFICATION	chain to the next segment of this giant method
WITHOUT_CLASSIFICATION	load all arguments straight through
WITHOUT_CLASSIFICATION	we append an index to ensure two identical method names will not conflict
WITHOUT_CLASSIFICATION	add script#run impl used for running this script with a specified threadcontext and self root method of a script is always in __file__ method
WITHOUT_CLASSIFICATION	add main impl used for detached or command-line execution of this script with a new runtime root method of a script is always in stub0 method0
WITHOUT_CLASSIFICATION	construct static scope list of names
WITHOUT_CLASSIFICATION	jruby-3014 make __file__ dynamically determined at load time but we provide a reasonable default here
WITHOUT_CLASSIFICATION	ignore we won't use invokedynamic
WITHOUT_CLASSIFICATION	ignore we won't use invokedynamic
WITHOUT_CLASSIFICATION	lazily create class init only if necessary
WITHOUT_CLASSIFICATION	boxed arg list __file__
WITHOUT_CLASSIFICATION	invoke static __file__
WITHOUT_CLASSIFICATION	exact arg list __file__
WITHOUT_CLASSIFICATION	declare the field
WITHOUT_CLASSIFICATION	declare the field
WITHOUT_CLASSIFICATION	not using a new scope use saved one for a flat closure
WITHOUT_CLASSIFICATION	normal closure
WITHOUT_CLASSIFICATION	end of scoping for closure's vars
WITHOUT_CLASSIFICATION	we only need full-on redo exception handling if there's logic that might produce it
WITHOUT_CLASSIFICATION	handle redos by restarting the block
WITHOUT_CLASSIFICATION	jump back to the top of the main body of this closure
WITHOUT_CLASSIFICATION	ruby name
WITHOUT_CLASSIFICATION	accumulate call arguments
WITHOUT_CLASSIFICATION	fix filenamecompletor to work mid-line
WITHOUT_CLASSIFICATION	we need to ensure that the variable names generated here cannot conflict with ruby variable names! hence the "%" tthat is appended to the beginning!
WITHOUT_CLASSIFICATION	does this method define code? default is yes -- which basically leads to pessimistic but safe optimizations but for library and internal methods this might be false.
WITHOUT_CLASSIFICATION	map of constants defined in this scope (not valid for methods!)
WITHOUT_CLASSIFICATION	note since we are processing asts loop bodies are processed in depth-first manner with outer loops encountered before inner loops and inner loops finished before outer ones. so we can keep track of loops in a loop stack which keeps track of loops as they are encountered. this lets us implement next/redo/break/retry easily for the non-closure cases
WITHOUT_CLASSIFICATION	map keep track of the next available variable index for a particular prefix
WITHOUT_CLASSIFICATION	control flow graph for this scope
WITHOUT_CLASSIFICATION	_lexicalnestinglevel = lexicalparent == null ? 0 ((ir_scopeimpl)lexicalparent)._lexicalnestinglevel + 1
WITHOUT_CLASSIFICATION	list of modules classes and methods defined in this scope!
WITHOUT_CLASSIFICATION	returns the containing parent scope!
WITHOUT_CLASSIFICATION	insert nesting level to ensure variable names don't conflict across nested scopes! i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! return new variable(prefix + _lexicalnestinglevel + "_" + idx)
WITHOUT_CLASSIFICATION	get "self"
WITHOUT_CLASSIFICATION	variable is never read variable is never live
WITHOUT_CLASSIFICATION	inline script
WITHOUT_CLASSIFICATION	inline script
WITHOUT_CLASSIFICATION	this method is called to build assignments for a multiple-assignment instruction
WITHOUT_CLASSIFICATION	build the class body!
WITHOUT_CLASSIFICATION	unwrap newline nodes to get their actual type
WITHOUT_CLASSIFICATION	unwrap newline nodes to get their actual type
WITHOUT_CLASSIFICATION	sss fixme can this ever be null?
WITHOUT_CLASSIFICATION	run the pass on the passed in scope!
WITHOUT_CLASSIFICATION	done done done done
WITHOUT_CLASSIFICATION	note if 's' happens to the a class this is effectively an assignment of a class instance variable
WITHOUT_CLASSIFICATION	note if 's' happens to the a class this is effectively an assignment of a class instance variable
WITHOUT_CLASSIFICATION	this method is called to build arguments for a block!
WITHOUT_CLASSIFICATION	build first node (and ignore its result) and then second node
WITHOUT_CLASSIFICATION	build first node only and return false
WITHOUT_CLASSIFICATION	value of the last expression in the block
WITHOUT_CLASSIFICATION	if this is not a closure the break is equivalent to jumping to the loop end label
WITHOUT_CLASSIFICATION	get the incoming case value
WITHOUT_CLASSIFICATION	the case instruction
WITHOUT_CLASSIFICATION	lists to aggregate variables and bodies for whens
WITHOUT_CLASSIFICATION	build each "when"
WITHOUT_CLASSIFICATION	multiple conditions for when
WITHOUT_CLASSIFICATION	build "else" if it exists
WITHOUT_CLASSIFICATION	now emit bodies
WITHOUT_CLASSIFICATION	close it out
WITHOUT_CLASSIFICATION	by default the container for this class is 's'
WITHOUT_CLASSIFICATION	do we have a dynamic container?
WITHOUT_CLASSIFICATION	return a meta object corresponding to the class
WITHOUT_CLASSIFICATION	1. load the module first (lhs of node) 2. then load the constant from the module
WITHOUT_CLASSIFICATION	build ir for args
WITHOUT_CLASSIFICATION	build ir for body
WITHOUT_CLASSIFICATION	if root of method is rescue build as a light rescue
WITHOUT_CLASSIFICATION	instance method
WITHOUT_CLASSIFICATION	class method
WITHOUT_CLASSIFICATION	other args begin at index 1
WITHOUT_CLASSIFICATION	both for fixed arity and variable arity methods
WITHOUT_CLASSIFICATION	now for the rest
WITHOUT_CLASSIFICATION	jump to 'l' if this arg is not null. if null fall through and build the default value!
WITHOUT_CLASSIFICATION	this is not an expression that computes anything
WITHOUT_CLASSIFICATION	create a new closure context
WITHOUT_CLASSIFICATION	build args
WITHOUT_CLASSIFICATION	build closure body and return the result of the closure
WITHOUT_CLASSIFICATION	assign the closure to the block variable in the parent scope and return it
WITHOUT_CLASSIFICATION	by default the container for this class is 's'
WITHOUT_CLASSIFICATION	create a new closure context
WITHOUT_CLASSIFICATION	build args
WITHOUT_CLASSIFICATION	assign the closure to the block variable in the parent scope and return it
WITHOUT_CLASSIFICATION	get the container for this new module
WITHOUT_CLASSIFICATION	build the new module
WITHOUT_CLASSIFICATION	build the module body
WITHOUT_CLASSIFICATION	first build an assignment for a splat if any with the rest of the args!
WITHOUT_CLASSIFICATION	rest of the argument array!
WITHOUT_CLASSIFICATION	if a closure the next is simply a return from the closure! if a regular loop the next is simply a jump to the end of the iteration
WITHOUT_CLASSIFICATION	get attr
WITHOUT_CLASSIFICATION	call operator
WITHOUT_CLASSIFICATION	set attr
WITHOUT_CLASSIFICATION	translate "x &&= y" --> "x = (is_true(x) ? y false)" --> x = -- build(x) should return a variable! -- f = is_true(x) beq(f false l) x = -- build(y) -- l
WITHOUT_CLASSIFICATION	this does the assignment!
WITHOUT_CLASSIFICATION	this does the assignment!
WITHOUT_CLASSIFICATION	if v1 is defined and true we are done!
WITHOUT_CLASSIFICATION	build first node only and return true
WITHOUT_CLASSIFICATION	build first node as non-expr and build second node
WITHOUT_CLASSIFICATION	top-level script!
WITHOUT_CLASSIFICATION	we won't enter the loop -- just build the condition node
WITHOUT_CLASSIFICATION	----------- private interface ------------
WITHOUT_CLASSIFICATION	what handles warnings
WITHOUT_CLASSIFICATION	tries to load at compile-time the constant referred to by 'constref'. this might be possible if the constant is defined and is not a forward reference to a value that will be defined later in the class.
WITHOUT_CLASSIFICATION	for closures a redo is a jump to the beginning of the closure for non-closures a redo is a jump to the beginning of the loop
WITHOUT_CLASSIFICATION	the "root" method of a class -- the scope in which all definitions and class code executes equivalent to java clinit
WITHOUT_CLASSIFICATION	dummy top-level method for the class
WITHOUT_CLASSIFICATION	build a dummy static method for the class -- the scope in which all definitions and class code executes equivalent to java clinit
WITHOUT_CLASSIFICATION	------ define the operations below ----
WITHOUT_CLASSIFICATION	value copy and type conversion operations
WITHOUT_CLASSIFICATION	alu operations
WITHOUT_CLASSIFICATION	method handle arg receive return value and call instructions
WITHOUT_CLASSIFICATION	closure instructions
WITHOUT_CLASSIFICATION	eval instructions
WITHOUT_CLASSIFICATION	def instructions
WITHOUT_CLASSIFICATION	exception instructions
WITHOUT_CLASSIFICATION	loads
WITHOUT_CLASSIFICATION	stores
WITHOUT_CLASSIFICATION	jump and branch operations
WITHOUT_CLASSIFICATION	others
WITHOUT_CLASSIFICATION	a case/when branch
WITHOUT_CLASSIFICATION	optimization guards
WITHOUT_CLASSIFICATION	by default call instructions cannot be deleted even if their results aren't used by anyone unless we know more about what the call is what it does etc. similarly for evals stores returns.
WITHOUT_CLASSIFICATION	returns the containing parent scope -- can be a dynamic value (hence operand)!
WITHOUT_CLASSIFICATION	scripts
WITHOUT_CLASSIFICATION	scripts and modules
WITHOUT_CLASSIFICATION	scripts classes and modules
WITHOUT_CLASSIFICATION	methods and closures
WITHOUT_CLASSIFICATION	create a new variable using the prefix
WITHOUT_CLASSIFICATION	create a new temporary variable
WITHOUT_CLASSIFICATION	get a new label using a generic prefix
WITHOUT_CLASSIFICATION	build the cfg for this scope -- supported only by methods & closures
WITHOUT_CLASSIFICATION	get the control flow graph for this scope -- only valid for methods & closures
WITHOUT_CLASSIFICATION	while processing loops this returns the loop that we are processing.
WITHOUT_CLASSIFICATION	record the loop we are beginning to process
WITHOUT_CLASSIFICATION	indicate that we are done processing the loop
WITHOUT_CLASSIFICATION	run the passed in compiler pass on this scope!
WITHOUT_CLASSIFICATION	should we run this pass on the current scope before running it on nested scopes?
WITHOUT_CLASSIFICATION	readline
WITHOUT_CLASSIFICATION	if the cfg of the method is around print the cfg!
WITHOUT_CLASSIFICATION	optimize some core class method calls for constant values
WITHOUT_CLASSIFICATION	if 'r' is not a constant it could actually be a compound value! look in our value map to see if we have a simplified value for the receiver.
WITHOUT_CLASSIFICATION	check if we can optimize this call based on the receiving method and receiver type use the simplified receiver!
WITHOUT_CLASSIFICATION	if we got a simplified value mark the call dead and insert a copy in its place!
WITHOUT_CLASSIFICATION	if the call has been optimized away in the previous step it is no longer a hard boundary for opts!
WITHOUT_CLASSIFICATION	----------- public abstract methods ----------
WITHOUT_CLASSIFICATION	----------- public methods with a default implementation ----------
WITHOUT_CLASSIFICATION	compute meet over all "sources" and compute "destination" basic blocks that should then be processed. sources & targets depends on direction of the data flow problem
WITHOUT_CLASSIFICATION	if the solution has changed add "dsts" to the work list. no duplicates please which is why we have bbset.
WITHOUT_CLASSIFICATION	--------- protected fields/methods below ---------
WITHOUT_CLASSIFICATION	dataflow problem with which this node is associated cfg node for which this node contains info.
WITHOUT_CLASSIFICATION	-------------- public fields and methods below ----------------
WITHOUT_CLASSIFICATION	------- abstract methods without a default implementation -------
WITHOUT_CLASSIFICATION	------- default implementation methods below -------
WITHOUT_CLASSIFICATION	compute meet over all paths solution for this dataflow problem on the input cfg. this implements a standard worklist algorithm.
WITHOUT_CLASSIFICATION	individual analyses should override this
WITHOUT_CLASSIFICATION	individual analyses should override this
WITHOUT_CLASSIFICATION	-------------- packaged/protected fields and methods below ----------------
WITHOUT_CLASSIFICATION	we want unique ids for dataflow variables
WITHOUT_CLASSIFICATION	-------------- protected fields and methods below ----------------
WITHOUT_CLASSIFICATION	-------------- private fields and methods below ----------------
WITHOUT_CLASSIFICATION	initialize all flow graph nodes
WITHOUT_CLASSIFICATION	lattice top bottom any values -- these will be used during dataflow analyses
WITHOUT_CLASSIFICATION	public interface
WITHOUT_CLASSIFICATION	unique id assigned to this variable
WITHOUT_CLASSIFICATION	start out with a default rubyobject allocator
WITHOUT_CLASSIFICATION	switch to an allocator based on a default constructor
WITHOUT_CLASSIFICATION	----------- public interface ------------
WITHOUT_CLASSIFICATION	class or module
WITHOUT_CLASSIFICATION	out = union(in(succs))
WITHOUT_CLASSIFICATION	traverse the instructions in this basic block in reverse order!
WITHOUT_CLASSIFICATION	v is defined => it is no longer live before 'i'
WITHOUT_CLASSIFICATION	in is the same!
WITHOUT_CLASSIFICATION	in changed!
WITHOUT_CLASSIFICATION	---------- protected / package fields methods ---------
WITHOUT_CLASSIFICATION	if 'v' is not live at the instruction site and it has no side effects mark it dead!
WITHOUT_CLASSIFICATION	do not mark this instruction's operands live if the instruction itself is dead!
WITHOUT_CLASSIFICATION	---------- private fields methods ---------
WITHOUT_CLASSIFICATION	variables live at entry of this node variables live at exit of node temporary set of live variables size of the "_in" and "_out" bit sets
WITHOUT_CLASSIFICATION	used during optimization passes to propagate type and other information
WITHOUT_CLASSIFICATION	does this instruction have side effects as a result of its operation this information is used in optimization phases to impact dead code elimination and other optimization passes
WITHOUT_CLASSIFICATION	--------- "abstract"/"please-override" methods ---------
WITHOUT_CLASSIFICATION	array of all operands for this instruction
WITHOUT_CLASSIFICATION	list of all variables used by all operands of this instruction
WITHOUT_CLASSIFICATION	this method takes as input a map of operands to their values and outputs if the value map provides a value for any of the instruction's operands this method is expected to replace the original operands with the simplified values. it is not required that it do so -- code correctness is not compromised by failure to simplify
WITHOUT_CLASSIFICATION	by default no simplifications!
WITHOUT_CLASSIFICATION	can this call lead to ruby code getting modified? if we don't know what method we are calling we assume it can (pessimistic but safe!) if we do know the target method we ask the method itself whether it modifies ruby code
WITHOUT_CLASSIFICATION	by default return instructions cannot be deleted
WITHOUT_CLASSIFICATION	if true returns the rest of the array starting at the index
WITHOUT_CLASSIFICATION	---------- these methods below are used during compile-time optimizations -------
WITHOUT_CLASSIFICATION	map of label & basic blocks with that label
WITHOUT_CLASSIFICATION	---------- these methods below are used during compile-time optimizations -------
WITHOUT_CLASSIFICATION	you can only value-replace atomic values
WITHOUT_CLASSIFICATION	if divisor is zero don't simplify!
WITHOUT_CLASSIFICATION	if divisor is zero don't simplify!
WITHOUT_CLASSIFICATION	if divisor is zero don't simplify!
WITHOUT_CLASSIFICATION	for simplification get the target value even if compound
WITHOUT_CLASSIFICATION	for simplification get the target value even if compound
WITHOUT_CLASSIFICATION	the operand that this attribute targets deferred attributevalue _val attribute value
WITHOUT_CLASSIFICATION	arrays ranges etc. are compound values variables fixnums floats etc. are "atomic" values
WITHOUT_CLASSIFICATION	get the target class of this operand if we know it!
WITHOUT_CLASSIFICATION	the following constants capture pre-known static call sites -- used to implement ruby internals
WITHOUT_CLASSIFICATION	nothing to do by default
WITHOUT_CLASSIFICATION	map of label & basic blocks which are waiting for a bb with that label
WITHOUT_CLASSIFICATION	init before building basic blocks below!
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	scope (method/closure) to which this cfg belongs entry bb -- dummy exit bb -- dummy the actual graph next available basic block id
WITHOUT_CLASSIFICATION	jump instruction bbs dont add an edge to the succeeding bb by default
WITHOUT_CLASSIFICATION	add forward ref. edges
WITHOUT_CLASSIFICATION	currbb cannot be null!
WITHOUT_CLASSIFICATION	add a forward reference from tgt -> currbb
WITHOUT_CLASSIFICATION	root-level logic
WITHOUT_CLASSIFICATION	root-level methods
WITHOUT_CLASSIFICATION	root-level classes
WITHOUT_CLASSIFICATION	case 4 signature = sig(object.class object.class object.class object.class object.class) break case 5 signature = sig(object.class object.class object.class object.class object.class object.class) break
WITHOUT_CLASSIFICATION	load receiver
WITHOUT_CLASSIFICATION	load receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	load arguments
WITHOUT_CLASSIFICATION	load arguments
WITHOUT_CLASSIFICATION	case 4 case 5
WITHOUT_CLASSIFICATION	object[] args
WITHOUT_CLASSIFICATION	load handle
WITHOUT_CLASSIFICATION	args array
WITHOUT_CLASSIFICATION	i'th argument
WITHOUT_CLASSIFICATION	invoke specific arity version
WITHOUT_CLASSIFICATION	object arg0
WITHOUT_CLASSIFICATION	useful for code completion inside the irb
WITHOUT_CLASSIFICATION	no editing before startpos
WITHOUT_CLASSIFICATION	no silly ticks!
WITHOUT_CLASSIFICATION	no candidates? fail.
WITHOUT_CLASSIFICATION	at end
WITHOUT_CLASSIFICATION	undo check
WITHOUT_CLASSIFICATION	explicit reference to these vars as symbols
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	\t\n\"\\'`@$><=|&{(
WITHOUT_CLASSIFICATION	assign the values.
WITHOUT_CLASSIFICATION	no check for ''
WITHOUT_CLASSIFICATION	no check for ''
WITHOUT_CLASSIFICATION	binding provided for scope use it
WITHOUT_CLASSIFICATION	this is ensured by the callers
WITHOUT_CLASSIFICATION	no binding just eval in "current" frame (caller's frame)
WITHOUT_CLASSIFICATION	restore position
WITHOUT_CLASSIFICATION	something like cvar_cbase() from eval.c factored out for the benefit of all the classvar-related node evaluations
WITHOUT_CLASSIFICATION	used by the compiler to simplify arg processing
WITHOUT_CLASSIFICATION	jruby-2673 if wrapping a nativeexception use the actual java exception's trace as our java trace
WITHOUT_CLASSIFICATION	mri does similar thing on macos x with 'editline wrapper'.
WITHOUT_CLASSIFICATION	we lazily initialize this in case readline.readline has been overridden in ruby (s_readline)
WITHOUT_CLASSIFICATION	jruby-852 ignore escape key (it causes irb to quit if we pass it out through readline)
WITHOUT_CLASSIFICATION	not overridden let's go
WITHOUT_CLASSIFICATION	explicitly use utf-8 here. c.f. history.addtohistory using line.asutf8()
WITHOUT_CLASSIFICATION	fixme jruby-3604
WITHOUT_CLASSIFICATION	complete using a proc object
WITHOUT_CLASSIFICATION	clear basename so it's anonymous when raising
WITHOUT_CLASSIFICATION	these are not really used by timeout but exposed for compatibility
WITHOUT_CLASSIFICATION	timeout module methods
WITHOUT_CLASSIFICATION	toplevel defines
WITHOUT_CLASSIFICATION	no seconds just yield
WITHOUT_CLASSIFICATION	no timeout in critical section
WITHOUT_CLASSIFICATION	if it's the exception we're expecting
WITHOUT_CLASSIFICATION	and we were given a specific exception
WITHOUT_CLASSIFICATION	otherwise rethrow
WITHOUT_CLASSIFICATION	remove the executor task now to avoid cancelled tasks accumulating until an executor thread can schedule and remove them
WITHOUT_CLASSIFICATION	if the task was scheduled wait for it to finish before polling for the exception it would have thrown.
WITHOUT_CLASSIFICATION	netprotocolbufferedio
WITHOUT_CLASSIFICATION	when a length is given read_string acts like get_bytes
WITHOUT_CLASSIFICATION	replace memory object with one that throws an exception on any access
WITHOUT_CLASSIFICATION	array and struct are only used internally
WITHOUT_CLASSIFICATION	if no release method is defined then memory leaks will result.
WITHOUT_CLASSIFICATION	this variant of newstruct is called from structlayoutbuilder
WITHOUT_CLASSIFICATION	this also handles unsigned int -> negative signed int conversion
WITHOUT_CLASSIFICATION	windows is llp64
WITHOUT_CLASSIFICATION	older jdk on linux map 'c' to 'libc.so' which doesn't work
WITHOUT_CLASSIFICATION	ensure room for terminating zero byte
WITHOUT_CLASSIFICATION	$blah
WITHOUT_CLASSIFICATION	replace memory object with one that throws an exception on any access
WITHOUT_CLASSIFICATION	a specific version was requested - use as is for search
WITHOUT_CLASSIFICATION	ensure room for terminating zero byte
WITHOUT_CLASSIFICATION	keep a reference to the temporary memory in the cache so it does not get freed by the gc until the struct is freed
WITHOUT_CLASSIFICATION	add pointernull as a constant
WITHOUT_CLASSIFICATION	create the ordered list of field names from the map
WITHOUT_CLASSIFICATION	assemble a [ name offset ] array
WITHOUT_CLASSIFICATION	case float
WITHOUT_CLASSIFICATION	keep a reference to avoid the memory being freed
WITHOUT_CLASSIFICATION	keep a reference to avoid the memory being freed
WITHOUT_CLASSIFICATION	no auto cleanup needed
WITHOUT_CLASSIFICATION	wire up function#call(args) to use the super-fast native invokers
WITHOUT_CLASSIFICATION	get the convention from the options hash
WITHOUT_CLASSIFICATION	get the convention from the options hash
WITHOUT_CLASSIFICATION	if there is exactly _one_ callback argument to the function then a block can be given and automatically subsituted for the callback parameter.
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	af_inet
WITHOUT_CLASSIFICATION	af_inet
WITHOUT_CLASSIFICATION	rubyunixserver
WITHOUT_CLASSIFICATION	line 321
WITHOUT_CLASSIFICATION	set up for potentially fast-int operations
WITHOUT_CLASSIFICATION	hook up the memorypointer class if its not already there
WITHOUT_CLASSIFICATION	this is a bit convoluted because (1) socketchannel.bind is only in jdk 7 and (2) socket.getchannel() seems to return null in some cases
WITHOUT_CLASSIFICATION	no unixsockets on windows
WITHOUT_CLASSIFICATION	sockaddr_un has different structure on different platforms. see jruby-2213 for more details.
WITHOUT_CLASSIFICATION	there is something valid in the sun_path component
WITHOUT_CLASSIFICATION	rubyipsocket
WITHOUT_CLASSIFICATION	host is nil or the empty string bind to inaddr_any
WITHOUT_CLASSIFICATION	host and port given
WITHOUT_CLASSIFICATION	rubyudpsocket
WITHOUT_CLASSIFICATION	by default we always reverse lookup unless do_not_reverse_lookup set.
WITHOUT_CLASSIFICATION	make sure descriptor is registered
WITHOUT_CLASSIFICATION	continue with normal initialization
WITHOUT_CLASSIFICATION	recv returns nil on eof
WITHOUT_CLASSIFICATION	can't support the rest with java
WITHOUT_CLASSIFICATION	rubybasicsocket
WITHOUT_CLASSIFICATION	we don't have to define any that we don't support see socket.c
WITHOUT_CLASSIFICATION	mandatory constants we haven't implemented
WITHOUT_CLASSIFICATION	constants webrick crashes without
WITHOUT_CLASSIFICATION	more constants needed by specs
WITHOUT_CLASSIFICATION	normal file descriptor..try to work with it
WITHOUT_CLASSIFICATION	af_inet
WITHOUT_CLASSIFICATION	255.255.255.255
WITHOUT_CLASSIFICATION	0.0.0.0
WITHOUT_CLASSIFICATION	def self.getaddrinfo(host port family = nil socktype = nil protocol = nil flags = nil)
WITHOUT_CLASSIFICATION	line 323
WITHOUT_CLASSIFICATION	can't set tc classloader
WITHOUT_CLASSIFICATION	can't set tc classloader
WITHOUT_CLASSIFICATION	ok it's a socketset values accordingly just using af_inet since we can't tell from socketchannel
WITHOUT_CLASSIFICATION	datagram set accordingly again af_inet
WITHOUT_CLASSIFICATION	irubyobject family = args[2]
WITHOUT_CLASSIFICATION	when socketai_passive and host is nil return 'any' address.
WITHOUT_CLASSIFICATION	the value of 1 is for socketai_passive.
WITHOUT_CLASSIFICATION	rubysocket
WITHOUT_CLASSIFICATION	numeric host use it for port
WITHOUT_CLASSIFICATION	e.printstacktrace()
WITHOUT_CLASSIFICATION	we were woken up without being selectedpoll for thread events and go back to sleep
WITHOUT_CLASSIFICATION	otherwise one key has been selected (ours) so we get the channel and hand it off
WITHOUT_CLASSIFICATION	no connection immediately accepted let them try again
WITHOUT_CLASSIFICATION	do nothing just exit
WITHOUT_CLASSIFICATION	nativethread.setpriority(priority)
WITHOUT_CLASSIFICATION	set thread context jruby classloader here for ruby-owned thread
WITHOUT_CLASSIFICATION	uber-threadkill catcher since it should always just mean "be dead"
WITHOUT_CLASSIFICATION	call the thread's code
WITHOUT_CLASSIFICATION	someone called exit! so we need to kill the main thread
WITHOUT_CLASSIFICATION	restore context classloader in case we're using a thread pool
WITHOUT_CLASSIFICATION	be dead
WITHOUT_CLASSIFICATION	loop until a context is available to clean up softrefs that might have been collected
WITHOUT_CLASSIFICATION	all threads in ruby thread group plus main thread
WITHOUT_CLASSIFICATION	thread is not alive skip it
WITHOUT_CLASSIFICATION	future is done or cancelled skip it
WITHOUT_CLASSIFICATION	first check if the sender has unreceived mail
WITHOUT_CLASSIFICATION	then deliver mail to the target
WITHOUT_CLASSIFICATION	undefinedmethod should be immutable
WITHOUT_CLASSIFICATION	define a second version that doesn't take a block so we have unique code paths for both cases.
WITHOUT_CLASSIFICATION	invoke pre method stuff
WITHOUT_CLASSIFICATION	main body
WITHOUT_CLASSIFICATION	return jump handling
WITHOUT_CLASSIFICATION	finally
WITHOUT_CLASSIFICATION	return result if we're still good
WITHOUT_CLASSIFICATION	redo jump handling
WITHOUT_CLASSIFICATION	clear the redo
WITHOUT_CLASSIFICATION	get runtime create jump error and throw it
WITHOUT_CLASSIFICATION	throw redo error if we're still good
WITHOUT_CLASSIFICATION	finally handling for abnormal exit
WITHOUT_CLASSIFICATION	call post method stuff (exception raised)
WITHOUT_CLASSIFICATION	no required specified check actual number of required args
WITHOUT_CLASSIFICATION	actual required is less than 3 so we use specific arity
WITHOUT_CLASSIFICATION	actual required is greater than 3 raise error (we don't support actual required > 3)
WITHOUT_CLASSIFICATION	simple path no multimethod
WITHOUT_CLASSIFICATION	in debug mode we append _dbg to class name to force it to regenerate (or use pre-generated debug version)
WITHOUT_CLASSIFICATION	in debug mode we append _dbg to class name to force it to regenerate (or use pre-generated debug version)
WITHOUT_CLASSIFICATION	normal all-rest method
WITHOUT_CLASSIFICATION	for zero one two three arities javamethod.javamethod.call(irubyobject[] args) will check
WITHOUT_CLASSIFICATION	promise to implement zero to n
WITHOUT_CLASSIFICATION	return
WITHOUT_CLASSIFICATION	just confirm minimum args provided
WITHOUT_CLASSIFICATION	just confirm args length == required
WITHOUT_CLASSIFICATION	confirm minimum args provided
WITHOUT_CLASSIFICATION	confirm maximum not greater than optional
WITHOUT_CLASSIFICATION	raise an error if arity does not match requirements
WITHOUT_CLASSIFICATION	tc
WITHOUT_CLASSIFICATION	self name
WITHOUT_CLASSIFICATION	no args
WITHOUT_CLASSIFICATION	variable args with block
WITHOUT_CLASSIFICATION	variable args no block load null block
WITHOUT_CLASSIFICATION	zero args no block load null_block
WITHOUT_CLASSIFICATION	one arg with block
WITHOUT_CLASSIFICATION	one arg no block load null_block
WITHOUT_CLASSIFICATION	two args with block
WITHOUT_CLASSIFICATION	two args no block load null_block
WITHOUT_CLASSIFICATION	three args with block
WITHOUT_CLASSIFICATION	three args no block load null_block
WITHOUT_CLASSIFICATION	load block if it accepts block
WITHOUT_CLASSIFICATION	all other arg cases with block
WITHOUT_CLASSIFICATION	all other arg cases without block
WITHOUT_CLASSIFICATION	one arg no block do nothing
WITHOUT_CLASSIFICATION	two args no block do nothing
WITHOUT_CLASSIFICATION	three args no block do nothing
WITHOUT_CLASSIFICATION	load target for invocations
WITHOUT_CLASSIFICATION	load receiver as original type for virtual invocation
WITHOUT_CLASSIFICATION	static invocation
WITHOUT_CLASSIFICATION	virtual invocation
WITHOUT_CLASSIFICATION	void return type so we need to load a nil for returning below
WITHOUT_CLASSIFICATION	normal finally and exit
WITHOUT_CLASSIFICATION	promise to implement one to n
WITHOUT_CLASSIFICATION	call post method stuff (exception raised)
WITHOUT_CLASSIFICATION	these are only needed if we have a non-noop call config
WITHOUT_CLASSIFICATION	method itself threadcontext invoked name
WITHOUT_CLASSIFICATION	method itself threadcontext invoked name
WITHOUT_CLASSIFICATION	singleton classes don't get their own visibility domain
WITHOUT_CLASSIFICATION	for visibility we need real meta class and not anonymous one from class << self
WITHOUT_CLASSIFICATION	simpleinvocationmethod
WITHOUT_CLASSIFICATION	never reached
WITHOUT_CLASSIFICATION	promise to implement n with block
WITHOUT_CLASSIFICATION	promise to implement zero to n with block
WITHOUT_CLASSIFICATION	promise to implement one to n with block
WITHOUT_CLASSIFICATION	promise to implement two to n with block
WITHOUT_CLASSIFICATION	promise to implement zero to three with block
WITHOUT_CLASSIFICATION	promise to implement one to three with block
WITHOUT_CLASSIFICATION	promise to implement two to three with block
WITHOUT_CLASSIFICATION	promise to implement three with block
WITHOUT_CLASSIFICATION	promise to implement n
WITHOUT_CLASSIFICATION	dumpinginvocationmethodfactory
WITHOUT_CLASSIFICATION	we promote our box to being its own box since we're changing visibilities and need it to be reflected on this method object independent of any other sharing the box.
WITHOUT_CLASSIFICATION	normally we could leave these to fall back on the superclass but since it dispatches through the [] version below which may dispatch through the []+block version we can save it a couple hops by overriding these here.
WITHOUT_CLASSIFICATION	promise to implement two to n
WITHOUT_CLASSIFICATION	promise to implement three to n
WITHOUT_CLASSIFICATION	promise to implement zero to three
WITHOUT_CLASSIFICATION	promise to implement one to three
WITHOUT_CLASSIFICATION	promise to implement two to three
WITHOUT_CLASSIFICATION	promise to implement three
WITHOUT_CLASSIFICATION	all other arities use "n" dispatch path
WITHOUT_CLASSIFICATION	load up object and add a few useful methods
WITHOUT_CLASSIFICATION	open up the 'to_java' and 'as' coercion methods on ruby objects via kernel
WITHOUT_CLASSIFICATION	construct the class implementing all supertypes
WITHOUT_CLASSIFICATION	fields needed for dispatch and such
WITHOUT_CLASSIFICATION	create constructor
WITHOUT_CLASSIFICATION	wrap self and store the wrapper
WITHOUT_CLASSIFICATION	end constructor
WITHOUT_CLASSIFICATION	start setup method
WITHOUT_CLASSIFICATION	set rubyclass
WITHOUT_CLASSIFICATION	set ruby
WITHOUT_CLASSIFICATION	all methods dispatch to the simple version by default which is method_missing normally
WITHOUT_CLASSIFICATION	try specific name first falling back on simple name
WITHOUT_CLASSIFICATION	get current context
WITHOUT_CLASSIFICATION	load self class and name
WITHOUT_CLASSIFICATION	construct the class implementing all supertypes
WITHOUT_CLASSIFICATION	fields needed for dispatch and such
WITHOUT_CLASSIFICATION	create constructor
WITHOUT_CLASSIFICATION	end constructor
WITHOUT_CLASSIFICATION	for each simple method name implement the complex methods calling the simple version
WITHOUT_CLASSIFICATION	load arguments into irubyobject[] for dispatch
WITHOUT_CLASSIFICATION	convert to irubyobject
WITHOUT_CLASSIFICATION	load null block
WITHOUT_CLASSIFICATION	invoke method
WITHOUT_CLASSIFICATION	if we expect a return value unwrap it
WITHOUT_CLASSIFICATION	end setup method
WITHOUT_CLASSIFICATION	end class
WITHOUT_CLASSIFICATION	create static init for a monitor object
WITHOUT_CLASSIFICATION	store the wrapper
WITHOUT_CLASSIFICATION	prepare temp locals
WITHOUT_CLASSIFICATION	try to look up field for simple name get field if nonnull go straight to dispatch
WITHOUT_CLASSIFICATION	field is null lock class and try to populate
WITHOUT_CLASSIFICATION	try/finally block to ensure unlock
WITHOUT_CLASSIFICATION	store it
WITHOUT_CLASSIFICATION	end of try block
WITHOUT_CLASSIFICATION	finally block to release monitor
WITHOUT_CLASSIFICATION	exception handling for monitor release
WITHOUT_CLASSIFICATION	re-get re-check method if not null now go to dispatch
WITHOUT_CLASSIFICATION	load self class and name
WITHOUT_CLASSIFICATION	load arguments into irubyobject[] for dispatch
WITHOUT_CLASSIFICATION	convert to irubyobject
WITHOUT_CLASSIFICATION	invoke method
WITHOUT_CLASSIFICATION	if we expect a return value unwrap it
WITHOUT_CLASSIFICATION	end setup method
WITHOUT_CLASSIFICATION	end class
WITHOUT_CLASSIFICATION	create the class
WITHOUT_CLASSIFICATION	method still not available call method_missing
WITHOUT_CLASSIFICATION	perform the dispatch
WITHOUT_CLASSIFICATION	try to load the specified name only if that fails try to define the class
WITHOUT_CLASSIFICATION	up two slots for long's two halves
WITHOUT_CLASSIFICATION	up two slots for long's two halves
WITHOUT_CLASSIFICATION	setup the class
WITHOUT_CLASSIFICATION	now create a method_added that can replace the dynamicmethod fields as they're redefined
WITHOUT_CLASSIFICATION	do nothing it's a non-impl method
WITHOUT_CLASSIFICATION	probably a primitive
WITHOUT_CLASSIFICATION	interfaces are handled as modules
WITHOUT_CLASSIFICATION	construct the mirror class and parent classes
WITHOUT_CLASSIFICATION	set the full name
WITHOUT_CLASSIFICATION	include all interfaces
WITHOUT_CLASSIFICATION	if it's an array only add methods for aref aset and length
WITHOUT_CLASSIFICATION	add array construction methods
WITHOUT_CLASSIFICATION	add all public constructors (note getconstructors only returns public ones)
WITHOUT_CLASSIFICATION	add all instance and static methods
WITHOUT_CLASSIFICATION	proxy is complete return it
WITHOUT_CLASSIFICATION	too much array creation!
WITHOUT_CLASSIFICATION	only include static methods if specified
WITHOUT_CLASSIFICATION	add a few type-specific special methods
WITHOUT_CLASSIFICATION	add all static variables
WITHOUT_CLASSIFICATION	only public static fields that are valid constants
WITHOUT_CLASSIFICATION	looks like someone's trying to raise a java exception. let them.
WITHOUT_CLASSIFICATION	note the five match methods are arity-split to avoid the cost of boxing arguments when there's already a cached match. do not condense them into a single method.
WITHOUT_CLASSIFICATION	todo this is where we would want to do precision checks to see if it's non-destructive to coerce a given type into the target integral primitive
WITHOUT_CLASSIFICATION	long first because it's what fixnum claims to be
WITHOUT_CLASSIFICATION	double first because it's what float claims to be
WITHOUT_CLASSIFICATION	todo varargs?
WITHOUT_CLASSIFICATION	read-volatile
WITHOUT_CLASSIFICATION	initialize cache of parameter types to method
WITHOUT_CLASSIFICATION	we set all java methods to optional since many/most have overloads
WITHOUT_CLASSIFICATION	if we hold a java object we need a java_class accessor
WITHOUT_CLASSIFICATION	line 326
WITHOUT_CLASSIFICATION	read-volatile
WITHOUT_CLASSIFICATION	initialize cache of parameter types to method
WITHOUT_CLASSIFICATION	too much array creation!
WITHOUT_CLASSIFICATION	construct new array proxy (arrayjavaproxy)
WITHOUT_CLASSIFICATION	get map of all fields we want to define.
WITHOUT_CLASSIFICATION	look through all mappings to find a match entry for this field
WITHOUT_CLASSIFICATION	hit a non-java proxy class (included modules can be a cause of thisskip)
WITHOUT_CLASSIFICATION	we could not find all of them print out first one (we could print them all?)
WITHOUT_CLASSIFICATION	dummy bodies for default impls
WITHOUT_CLASSIFICATION	initialize this if it hasn't been
WITHOUT_CLASSIFICATION	initialize these if they haven't been
WITHOUT_CLASSIFICATION	not allowed for original (non-generated) java classes note not allowing for any previously created class right now this restriction might be loosened later for generated classes
WITHOUT_CLASSIFICATION	setup new etc unless this is a concretejavaproxy subclass
WITHOUT_CLASSIFICATION	first we make modifications to the class to adapt it to being both a ruby class and a proxy for a java type
WITHOUT_CLASSIFICATION	list of interfaces we implement
WITHOUT_CLASSIFICATION	we capture the original "new" and make it private
WITHOUT_CLASSIFICATION	the replacement "new" allocates and inits the ruby object as before but also instantiates our proxified java object by calling __jcreate!
WITHOUT_CLASSIFICATION	next we define a few private methods that we'll use to manipulate the java object contained within this ruby object
WITHOUT_CLASSIFICATION	jcreate instantiates the proxy object which implements all interfaces and which is wrapped and implemented by this object
WITHOUT_CLASSIFICATION	now we add an "implement" and "implement_all" methods to the class
WITHOUT_CLASSIFICATION	implement all forces implementation of all interfaces we intend for this class to implement
WITHOUT_CLASSIFICATION	we've already done the above priming logic just add another interface to the list of intentions unless we're past the point of no return or already intend to implement the given interface
WITHOUT_CLASSIFICATION	walk all superclasses aggregating interfaces
WITHOUT_CLASSIFICATION	construct the new interface impl and set it into the object
WITHOUT_CLASSIFICATION	assuming the user wants a collection of interfaces that can be included together. make it so.
WITHOUT_CLASSIFICATION	not allowed for existing java interface modules
WITHOUT_CLASSIFICATION	to turn a module into an "interface collection" we add a class instance variable to hold the list of interfaces and modify append_features for this module to call append_features on each of those interfaces as well
WITHOUT_CLASSIFICATION	already set up append_features just add the interface if we haven't already
WITHOUT_CLASSIFICATION	array-of-interface-type creation/identity
WITHOUT_CLASSIFICATION	keep this variant for kind_of? testing
WITHOUT_CLASSIFICATION	array creation should use this variant
WITHOUT_CLASSIFICATION	parent.setconstant(name proxyclass) where the name should come from ?
WITHOUT_CLASSIFICATION	including interface module so old-style interface "subclasses" will respond correctly to #kind_of? etc.
WITHOUT_CLASSIFICATION	add reference to interface module
WITHOUT_CLASSIFICATION	need to initialize
WITHOUT_CLASSIFICATION	need to initialize
WITHOUT_CLASSIFICATION	proxy is complete return it
WITHOUT_CLASSIFICATION	same as argument_types but matches name in java.lang.reflect.constructor/method
WITHOUT_CLASSIFICATION	this point is only reached if there was an exception handler installed.
WITHOUT_CLASSIFICATION	weakly reserved names
WITHOUT_CLASSIFICATION	called only by initializing thread no synchronization required
WITHOUT_CLASSIFICATION	called only by initializing thread no synchronization required
WITHOUT_CLASSIFICATION	modified only by addmethod no synchronization required
WITHOUT_CLASSIFICATION	if there's no constructor we must prevent construction
WITHOUT_CLASSIFICATION	caching constructors as they're accessed for each new instance
WITHOUT_CLASSIFICATION	proxy module for interfaces
WITHOUT_CLASSIFICATION	proxy class for concrete classes. also used for "concrete" interfaces which is why we have two fields
WITHOUT_CLASSIFICATION	readable only by thread building proxy so don't need to be volatile. used to handle recursive calls to getproxyclass/module while proxy is being constructed (usually when a constant defined by a class is of the same type as that class).
WITHOUT_CLASSIFICATION	allow proxy to be read without synchronization. if proxy is under construction only the building thread can see it.
WITHOUT_CLASSIFICATION	now add all aliases for the static methods (fields) as appropriate
WITHOUT_CLASSIFICATION	proxy is under construction building thread can safely read non-volatile value
WITHOUT_CLASSIFICATION	add property name aliases
WITHOUT_CLASSIFICATION	getfoo => foo getfoo(int) => foo(int)
WITHOUT_CLASSIFICATION	setfoo(foo) => foo=(foo)
WITHOUT_CLASSIFICATION	isfoo() => foo isfoo() => foo()
WITHOUT_CLASSIFICATION	additionally add ?-postfixed aliases to any boolean methods and properties.
WITHOUT_CLASSIFICATION	is_something? contains_thing?
WITHOUT_CLASSIFICATION	something?
WITHOUT_CLASSIFICATION	setup constants for public inner classes
WITHOUT_CLASSIFICATION	setup constants for public inner classes
WITHOUT_CLASSIFICATION	ignore bad constant named inner classes pending jruby-697
WITHOUT_CLASSIFICATION	ignore bad constant named inner classes pending jruby-697
WITHOUT_CLASSIFICATION	create constructorinstaller if there are no constructors it will disable construction
WITHOUT_CLASSIFICATION	we need to collect all methods though we'll only install the ones that are named in this class
WITHOUT_CLASSIFICATION	install direct java methods with mangled name so 'send' can call them directly.
WITHOUT_CLASSIFICATION	now iterate over all installers and make sure they also have appropriate aliases
WITHOUT_CLASSIFICATION	old (quasi-deprecated) interface class
WITHOUT_CLASSIFICATION	1.9 support for encodings
WITHOUT_CLASSIFICATION	double-check the cache now that we're synchronized
WITHOUT_CLASSIFICATION	setfoo(foo) => foo=(foo)
WITHOUT_CLASSIFICATION	isfoo() => foo isfoo() => foo()
WITHOUT_CLASSIFICATION	is_something? contains_thing?
WITHOUT_CLASSIFICATION	one word type name that starts lower-caseit may be a primitive type
WITHOUT_CLASSIFICATION	java.getproxyclass deals with sync issues so we won't duplicate the logic here
WITHOUT_CLASSIFICATION	note intentionally returning the actual array returned from java rather than wrapping it in a rubyarray. wave of the future when java_class will return the actual class rather than a javaclass wrapper.
WITHOUT_CLASSIFICATION	see note above re return type
WITHOUT_CLASSIFICATION	restrictive security policy no matter we only want public classes anyway
WITHOUT_CLASSIFICATION	very restrictive policy (disallows member.public) we'd never actually get this far in that case
WITHOUT_CLASSIFICATION	one-dimensional array
WITHOUT_CLASSIFICATION	n-dimensional array
WITHOUT_CLASSIFICATION	if it's an array of arrays recurse with the component type
WITHOUT_CLASSIFICATION	we all all superclasses but avoid adding superclass methods with same name+signature as subclass methods see jruby-3130
WITHOUT_CLASSIFICATION	proc implementing an interface pull in the catch-all code that lets the proc get invoked no matter what method is called on the interface
WITHOUT_CLASSIFICATION	can't be converted any more return it
WITHOUT_CLASSIFICATION	getfoobar() => foobar? foo_bar?()
WITHOUT_CLASSIFICATION	if not a property but is boolean add ?-postfixed aliases.
WITHOUT_CLASSIFICATION	many cases are ok to convert to float if not one of these error
WITHOUT_CLASSIFICATION	for object default to natural wrapper type
WITHOUT_CLASSIFICATION	rubyobject is already of the required jruby class (or subclass)
WITHOUT_CLASSIFICATION	the converters handle not only primitive types but also their boxed versions so we should check if we have a converter before checking for isprimitive()
WITHOUT_CLASSIFICATION	it's not one of the types we convert so just pass it out as-is without wrapping
WITHOUT_CLASSIFICATION	we've found a java type to which we've coerced the ruby value wrap it
WITHOUT_CLASSIFICATION	set of utility methods for java-based proxy objects
WITHOUT_CLASSIFICATION	the proxy (wrapper) type hierarchy
WITHOUT_CLASSIFICATION	interfacejavaproxy.createinterfacejavaproxy(context)
WITHOUT_CLASSIFICATION	also create the javaproxy classes
WITHOUT_CLASSIFICATION	the template for interface modules
WITHOUT_CLASSIFICATION	now attach java-related extras to core classes
WITHOUT_CLASSIFICATION	add all name-to-class mappings
WITHOUT_CLASSIFICATION	add some base java classes everyone will need
WITHOUT_CLASSIFICATION	finally set javasupport.isenabled to true
WITHOUT_CLASSIFICATION	shouldn't happen but if a superclass is specified it's not ours
WITHOUT_CLASSIFICATION	include any interfaces we extend
WITHOUT_CLASSIFICATION	java.lang.object is added at root of java proxy classes
WITHOUT_CLASSIFICATION	other java proxy classes added under their superclass' java proxy
WITHOUT_CLASSIFICATION	include interface modules into the proxy class
WITHOUT_CLASSIFICATION	jruby-2938 the proxy class might already exist
WITHOUT_CLASSIFICATION	add java_method for unbound use
WITHOUT_CLASSIFICATION	add alias to meta
WITHOUT_CLASSIFICATION	we'll only map conventional class names to modules
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	haven't found a class continue on as though it were a package
WITHOUT_CLASSIFICATION	upper case name so most likely a class
WITHOUT_CLASSIFICATION	this point is only reached if there was an exception handler installed.
WITHOUT_CLASSIFICATION	add alias to meta
WITHOUT_CLASSIFICATION	this is where we'll get connected when classes are opened using package module syntax.
WITHOUT_CLASSIFICATION	save package module as ivar in parent and add method to parent so we don't have to come back here.
WITHOUT_CLASSIFICATION	this covers primitives and (unlikely) lower-case class names
WITHOUT_CLASSIFICATION	not primitive or lc class
WITHOUT_CLASSIFICATION	not primitive or lc class
WITHOUT_CLASSIFICATION	is there a supplied proc argument or do we assume a block was supplied
WITHOUT_CLASSIFICATION	create list of interfaces to proxy (and make sure they really are interfaces)
WITHOUT_CLASSIFICATION	hashcode is a combination of the interfaces and the ruby class we're using to implement them
WITHOUT_CLASSIFICATION	if it's a singleton class and the real class is proc we're doing closure conversion so just use proc's hashcode
WITHOUT_CLASSIFICATION	normal new class implementing interfaces
WITHOUT_CLASSIFICATION	initialize some components.
WITHOUT_CLASSIFICATION	not synchronizing these methods no harm if these values get set more than once. (also note that there's no chance of getting a partially initialized class/module as happens-before is guaranteed by volatile write/read of constants table.)
WITHOUT_CLASSIFICATION	java reflection does not allow retrieving constructors like methods
WITHOUT_CLASSIFICATION	for zero args case we can stop searching
WITHOUT_CLASSIFICATION	for zero args case we can stop searching
WITHOUT_CLASSIFICATION	no matching ctor found
WITHOUT_CLASSIFICATION	create ruby proxies for any input arguments that are not primitives.
WITHOUT_CLASSIFICATION	prepare a faster handle if handles are enabled and the method and class are public
WITHOUT_CLASSIFICATION	must be a public method
WITHOUT_CLASSIFICATION	must be a public class
WITHOUT_CLASSIFICATION	must have been loaded from our known classloader hierarchy
WITHOUT_CLASSIFICATION	special classes like collections.empty_list are inner classes that are private but implement public interfaces. their methods are all public methods for the public interface. let these public methods execute via setaccessible(true).
WITHOUT_CLASSIFICATION	search through all declared methods to find a closest match
WITHOUT_CLASSIFICATION	no matching method found
WITHOUT_CLASSIFICATION	this test really means that this is a ruby-defined subclass of a java class
WITHOUT_CLASSIFICATION	first we need to register the jruby engine.
WITHOUT_CLASSIFICATION	now we create a new bsfmanager.
WITHOUT_CLASSIFICATION	initialize a simple frame.
WITHOUT_CLASSIFICATION	e.printstacktrace()
WITHOUT_CLASSIFICATION	e.printstacktrace()
WITHOUT_CLASSIFICATION	jruby-530 while case
WITHOUT_CLASSIFICATION	end class
WITHOUT_CLASSIFICATION	this test really means that this is a ruby-defined subclass of a java class
WITHOUT_CLASSIFICATION	for our purposes accessibles are also members and vice-versa so we'll include member methods here.
WITHOUT_CLASSIFICATION	declare those components as beans in bsf. then it will be possible to access those components in ruby as global variables ($frame $menubar )
WITHOUT_CLASSIFICATION	execute a ruby script (add the menubar to the frame).
WITHOUT_CLASSIFICATION	execute ruby statements.
WITHOUT_CLASSIFICATION	evaluates a ruby expression and display the result.
WITHOUT_CLASSIFICATION	populate values for the parameter names
WITHOUT_CLASSIFICATION	package scope
WITHOUT_CLASSIFICATION	this point is only reached if there was an exception handler installed.
WITHOUT_CLASSIFICATION	ruby-level methods
WITHOUT_CLASSIFICATION	need names ordered for key generation later
WITHOUT_CLASSIFICATION	we only collect methods and interfaces for user-defined proxy classes.
WITHOUT_CLASSIFICATION	get javaclass if this is the new proxy class verify it matches if this is a superclass proxy.
WITHOUT_CLASSIFICATION	get any included interfaces
WITHOUT_CLASSIFICATION	lock in the overridden methods for the new class and any as-yet uninstantiated ancestor class.
WITHOUT_CLASSIFICATION	statically initialized below
WITHOUT_CLASSIFICATION	finish class initializer
WITHOUT_CLASSIFICATION	trigger class initialization for the class
WITHOUT_CLASSIFICATION	should not happen!
WITHOUT_CLASSIFICATION	start class
WITHOUT_CLASSIFICATION	make getter for handler
WITHOUT_CLASSIFICATION	make getter for proxy class
WITHOUT_CLASSIFICATION	add (potentially) overridden names to the key. todo see note above re optimizations
WITHOUT_CLASSIFICATION	we generate all constructors and let some fail during invocation later
WITHOUT_CLASSIFICATION	create static private method field
WITHOUT_CLASSIFICATION	load static empty array
WITHOUT_CLASSIFICATION	box arguments
WITHOUT_CLASSIFICATION	this is a simple rethrow handler
WITHOUT_CLASSIFICATION	construct the super-proxy method
WITHOUT_CLASSIFICATION	do a void return
WITHOUT_CLASSIFICATION	utility methods
WITHOUT_CLASSIFICATION	is there a supplied proc argument or do we assume a block was supplied
WITHOUT_CLASSIFICATION	store call information so method_missing impl can use it
WITHOUT_CLASSIFICATION	use the same logic as in evaluationstate
WITHOUT_CLASSIFICATION	no opt no rest exact match
WITHOUT_CLASSIFICATION	only rest must be at least required
WITHOUT_CLASSIFICATION	opt but no rest must be at least required and no more than required + opt
WITHOUT_CLASSIFICATION	opt and rest must be at least required
WITHOUT_CLASSIFICATION	no block from a nil proc
WITHOUT_CLASSIFICATION	if not already a proc then we should try and make it one.
WITHOUT_CLASSIFICATION	the current block is already associated with proc. no need to create a new one
WITHOUT_CLASSIFICATION	has the method that is calling super received a block argument
WITHOUT_CLASSIFICATION	nul
WITHOUT_CLASSIFICATION	reuse trailing consecutive sequence at same slot
WITHOUT_CLASSIFICATION	clone all remaining nodes
WITHOUT_CLASSIFICATION	'class << state.self' and 'class << obj' uses defn as opposed to defs
WITHOUT_CLASSIFICATION	each root node has a top-level scope that we need to push
WITHOUT_CLASSIFICATION	read-volatile
WITHOUT_CLASSIFICATION	read-volatile
WITHOUT_CLASSIFICATION	classes are directly in the hierarchy so no special logic is necessary for implementer
WITHOUT_CLASSIFICATION	must be power of 2 must be power of 2
WITHOUT_CLASSIFICATION	find power-of-two sizes best matching arguments
WITHOUT_CLASSIFICATION	note segmentshift differs from concurrenthashmap's calculation due to issues with system.identityhashcode (upper n bits always 0 at least under java 1.6 / winxp)
WITHOUT_CLASSIFICATION	system.err.println("objectproxycache " + id + " started at "+ new java.util.date())
WITHOUT_CLASSIFICATION	protected void finalize() throws throwable { system.err.println("objectproxycache " + id + " finalized at "+ new java.util.date()) }
WITHOUT_CLASSIFICATION	entryrefs include hash with key to facilitate lookup by segment#expunge after ref is removed from referencequeue
WITHOUT_CLASSIFICATION	unlike weakhashmap our entry does not subclass weakreference but rather makes it a final field. the theory is that doing so should force a happens-before relationship wrt the weakreference constructor guaranteeing that the key will be visibile to other threads (unless it's been gc'ed). see jls 17.5 (final fields) and 17.4.5 (happens-before order) to confirm or refute my reasoning here.
WITHOUT_CLASSIFICATION	references to the java object and its proxy will either both be weak or both be soft since the proxy contains a strong reference to the object so it wouldn't make sense for the reference types to differ.
WITHOUT_CLASSIFICATION	ctor used by remove/rehash
WITHOUT_CLASSIFICATION	must be called under lock
WITHOUT_CLASSIFICATION	must be called under lock
WITHOUT_CLASSIFICATION	must be called under lock
WITHOUT_CLASSIFICATION	note that we'll potentially see the refs for both the java object and proxy -- whichever we see first will cause the entry to be removed the other will not match an entry and will be ignored.
WITHOUT_CLASSIFICATION	temp method to verify tablesize value must be called under lock
WITHOUT_CLASSIFICATION	single node in list
WITHOUT_CLASSIFICATION	indirect read-/write- volatile
WITHOUT_CLASSIFICATION	indirect read-/write- volatile
WITHOUT_CLASSIFICATION	entry exists proxy has been gc'ed. replace entry.
WITHOUT_CLASSIFICATION	where we get new positions from.
WITHOUT_CLASSIFICATION	start of string ([ ( { < ' " \n)
WITHOUT_CLASSIFICATION	number of newlines read from the reader
WITHOUT_CLASSIFICATION	how many bytes into the source are we?
WITHOUT_CLASSIFICATION	for 'list' and only populated if list is not null.
WITHOUT_CLASSIFICATION	last full line read.
WITHOUT_CLASSIFICATION	save sourceline for error reporting to display line where error occurred
WITHOUT_CLASSIFICATION	get rest of line. linebuffer filled as side-effect
WITHOUT_CLASSIFICATION	expand variables indentation of final marker
WITHOUT_CLASSIFICATION	expand variables indentation of final marker
WITHOUT_CLASSIFICATION	end of string (] ) } > ' " \0)
WITHOUT_CLASSIFICATION	how many strings are nested in the current string term
WITHOUT_CLASSIFICATION	single-quote fast path
WITHOUT_CLASSIFICATION	regexp engine 'java'
WITHOUT_CLASSIFICATION	was a goto in original ruby lexer
WITHOUT_CLASSIFICATION	just ignore
WITHOUT_CLASSIFICATION	octal constant
WITHOUT_CLASSIFICATION	hex constant
WITHOUT_CLASSIFICATION	push(1)
WITHOUT_CLASSIFICATION	pop
WITHOUT_CLASSIFICATION	push(0). if you look at original macro stack |= (n&1) => stack |= 0 => no-change.
WITHOUT_CLASSIFICATION	lexpop
WITHOUT_CLASSIFICATION	set_p
WITHOUT_CLASSIFICATION	marker delimiting heredoc boundary
WITHOUT_CLASSIFICATION	found end marker for this heredoc
WITHOUT_CLASSIFICATION	put back lastline for any elements past start of heredoc marker
WITHOUT_CLASSIFICATION	last token read via yylex().
WITHOUT_CLASSIFICATION	value of last token which had a value associated with it.
WITHOUT_CLASSIFICATION	stream of data that yylex() examines.
WITHOUT_CLASSIFICATION	used for tiny smidgen of grammar in lexer (see setparsersupport())
WITHOUT_CLASSIFICATION	give a name to a value. enebo this should be used more.
WITHOUT_CLASSIFICATION	when the heredoc identifier specifies <<-eof that indents before ident. are ok (the '-').
WITHOUT_CLASSIFICATION	are we lexing ruby 1.8 or 1.9+ syntax
WITHOUT_CLASSIFICATION	count of nested parentheses (1.9 only)
WITHOUT_CLASSIFICATION	1.9 only
WITHOUT_CLASSIFICATION	short-hand (e.g. %{%.%! versus %q{).
WITHOUT_CLASSIFICATION	long-hand (e.g. %q{}).
WITHOUT_CLASSIFICATION	no mb || ismbchar(term)
WITHOUT_CLASSIFICATION	not normally used but is left in here since it can be useful in debugging grammar and lexing problems.
WITHOUT_CLASSIFICATION	debugging help
WITHOUT_CLASSIFICATION	'\v'
WITHOUT_CLASSIFICATION	end of script.
WITHOUT_CLASSIFICATION	white spaces
WITHOUT_CLASSIFICATION	'\v'
WITHOUT_CLASSIFICATION	it's a comment
WITHOUT_CLASSIFICATION	replace a string of newlines with a single one
WITHOUT_CLASSIFICATION	$\ output record separator
WITHOUT_CLASSIFICATION	eof (enebo after default?
WITHOUT_CLASSIFICATION	documentation nodes
WITHOUT_CLASSIFICATION	in case last next was the newline.
WITHOUT_CLASSIFICATION	just a plain bang
WITHOUT_CLASSIFICATION	$_ last read line string
WITHOUT_CLASSIFICATION	$~ match-data
WITHOUT_CLASSIFICATION	$ argv
WITHOUT_CLASSIFICATION	$$ pid
WITHOUT_CLASSIFICATION	$? last status
WITHOUT_CLASSIFICATION	$! error string
WITHOUT_CLASSIFICATION	$@ error position
WITHOUT_CLASSIFICATION	$/ input record separator
WITHOUT_CLASSIFICATION	$ field separator
WITHOUT_CLASSIFICATION	$ output field separator
WITHOUT_CLASSIFICATION	$. last read line number
WITHOUT_CLASSIFICATION	$= ignorecase
WITHOUT_CLASSIFICATION	$ load path
WITHOUT_CLASSIFICATION	$< reading filename
WITHOUT_CLASSIFICATION	$" already loaded files
WITHOUT_CLASSIFICATION	$& last match
WITHOUT_CLASSIFICATION	$` string before last match
WITHOUT_CLASSIFICATION	$' string after last match
WITHOUT_CLASSIFICATION	methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop
WITHOUT_CLASSIFICATION	see if it is a reserved word.
WITHOUT_CLASSIFICATION	enum lex_state
WITHOUT_CLASSIFICATION	block (primary)
WITHOUT_CLASSIFICATION	block (expr)
WITHOUT_CLASSIFICATION	hash
WITHOUT_CLASSIFICATION	enebo 1.9 is is_arg but we need to break apart for 1.8 support.
WITHOUT_CLASSIFICATION	fixme peek('u') utf8 stuff for 1.9
WITHOUT_CLASSIFICATION	we don't append '+' since java number parser gets confused
WITHOUT_CLASSIFICATION	hexadecimal
WITHOUT_CLASSIFICATION	binary
WITHOUT_CLASSIFICATION	decimal
WITHOUT_CLASSIFICATION	octal
WITHOUT_CLASSIFICATION	'_' in number just ignored
WITHOUT_CLASSIFICATION	backslash
WITHOUT_CLASSIFICATION	newline
WITHOUT_CLASSIFICATION	horizontal tab
WITHOUT_CLASSIFICATION	form feed
WITHOUT_CLASSIFICATION	vertical tab
WITHOUT_CLASSIFICATION	alarm(bell)
WITHOUT_CLASSIFICATION	escape
WITHOUT_CLASSIFICATION	hex constant
WITHOUT_CLASSIFICATION	char hexvalue = scanhex(2)
WITHOUT_CLASSIFICATION	if \r\n then just pass along \n (windows). if \r[^\n] then pass along \n (mac).
WITHOUT_CLASSIFICATION	space
WITHOUT_CLASSIFICATION	where we started this marker match
WITHOUT_CLASSIFICATION	position within source must reflect the actual offset and column. since we ate an extra character here (this accounting is normally done in read ) we should update position info.
WITHOUT_CLASSIFICATION	we use offset here to keep track of extra newlines for windows
WITHOUT_CLASSIFICATION	if \r\n then just pass along \n (windows). if \r[^\n] then pass along \n (mac).
WITHOUT_CLASSIFICATION	fixme old mac format strings?
WITHOUT_CLASSIFICATION	fixme old mac format strings?
WITHOUT_CLASSIFICATION	where we get our newest char's
WITHOUT_CLASSIFICATION	our readback/pushback buffer.
WITHOUT_CLASSIFICATION	index of last character in pushback buffer
WITHOUT_CLASSIFICATION	character read before previous read
WITHOUT_CLASSIFICATION	keep value of twoago around so we can restore after we unread
WITHOUT_CLASSIFICATION	netprotocolbufferediolibrary
WITHOUT_CLASSIFICATION	bigdecimallibrary
WITHOUT_CLASSIFICATION	todo fd_cloexec is mysterious and we are not sure how constantine should include this. we did it here for now
WITHOUT_CLASSIFICATION	ruby's designation for some platforms minus version numbers in some cases
WITHOUT_CLASSIFICATION	that's what jdk5 produces on windows vista
WITHOUT_CLASSIFICATION	rubygems is too specific on host cpu so until we have real need lets default to universal setconfig(confighash "arch" system.getproperty("os.arch") + "-java" + system.getproperty("java.specification.version"))
WITHOUT_CLASSIFICATION	our shell scripts pass in non-canonicalized paths but even if we didn't anyone who did would become unhappy because ruby apps expect no relative operators in the pathname (rubygems for example).
WITHOUT_CLASSIFICATION	this set is only for darwin
WITHOUT_CLASSIFICATION	digestlibrary
WITHOUT_CLASSIFICATION	all errors just info do not prevent loading ikvm does not support jmx and throws an error
WITHOUT_CLASSIFICATION	all errors just info do not prevent unloading ikvm does not support jmx and throws an error
WITHOUT_CLASSIFICATION	do nothing return dummy version below
WITHOUT_CLASSIFICATION	yylhs 496
WITHOUT_CLASSIFICATION	yylhs 496
WITHOUT_CLASSIFICATION	yylhs 496
WITHOUT_CLASSIFICATION	yylhs 496
WITHOUT_CLASSIFICATION	yylhs 496
WITHOUT_CLASSIFICATION	line 329
WITHOUT_CLASSIFICATION	new exception().printstacktrace()
WITHOUT_CLASSIFICATION	yygindex 152
WITHOUT_CLASSIFICATION	dynamically increase
WITHOUT_CLASSIFICATION	discarding a token does not change stack
WITHOUT_CLASSIFICATION	else [default] reduce (yyn)
WITHOUT_CLASSIFICATION	shift to yyn
WITHOUT_CLASSIFICATION	reduce (yyn)
WITHOUT_CLASSIFICATION	leave stack alone
WITHOUT_CLASSIFICATION	line 271
WITHOUT_CLASSIFICATION	line 274
WITHOUT_CLASSIFICATION	line 303
WITHOUT_CLASSIFICATION	line 311
WITHOUT_CLASSIFICATION	line 314
WITHOUT_CLASSIFICATION	line 317
WITHOUT_CLASSIFICATION	line 332
WITHOUT_CLASSIFICATION	line 338
WITHOUT_CLASSIFICATION	line 341
WITHOUT_CLASSIFICATION	line 344
WITHOUT_CLASSIFICATION	line 351
WITHOUT_CLASSIFICATION	line 358
WITHOUT_CLASSIFICATION	line 367
WITHOUT_CLASSIFICATION	line 372
WITHOUT_CLASSIFICATION	line 378
WITHOUT_CLASSIFICATION	line 382
WITHOUT_CLASSIFICATION	line 407
WITHOUT_CLASSIFICATION	line 411
WITHOUT_CLASSIFICATION	line 414
WITHOUT_CLASSIFICATION	line 417
WITHOUT_CLASSIFICATION	line 420
WITHOUT_CLASSIFICATION	line 426
WITHOUT_CLASSIFICATION	line 434
WITHOUT_CLASSIFICATION	line 443
WITHOUT_CLASSIFICATION	line 446
WITHOUT_CLASSIFICATION	line 452
WITHOUT_CLASSIFICATION	line 457
WITHOUT_CLASSIFICATION	line 464
WITHOUT_CLASSIFICATION	line 467
WITHOUT_CLASSIFICATION	line 470
WITHOUT_CLASSIFICATION	line 479
WITHOUT_CLASSIFICATION	line 484
WITHOUT_CLASSIFICATION	line 486
WITHOUT_CLASSIFICATION	line 492
WITHOUT_CLASSIFICATION	line 498
WITHOUT_CLASSIFICATION	line 501
WITHOUT_CLASSIFICATION	line 504
WITHOUT_CLASSIFICATION	line 507
WITHOUT_CLASSIFICATION	line 510
WITHOUT_CLASSIFICATION	line 519
WITHOUT_CLASSIFICATION	line 525
WITHOUT_CLASSIFICATION	yygindex 152
WITHOUT_CLASSIFICATION	line 537
WITHOUT_CLASSIFICATION	line 540
WITHOUT_CLASSIFICATION	line 543
WITHOUT_CLASSIFICATION	line 546
WITHOUT_CLASSIFICATION	line 556
WITHOUT_CLASSIFICATION	line 559
WITHOUT_CLASSIFICATION	line 563
WITHOUT_CLASSIFICATION	line 566
WITHOUT_CLASSIFICATION	line 569
WITHOUT_CLASSIFICATION	line 575
WITHOUT_CLASSIFICATION	line 578
WITHOUT_CLASSIFICATION	line 587
WITHOUT_CLASSIFICATION	line 596
WITHOUT_CLASSIFICATION	line 604
WITHOUT_CLASSIFICATION	line 607
WITHOUT_CLASSIFICATION	line 610
WITHOUT_CLASSIFICATION	line 613
WITHOUT_CLASSIFICATION	line 616
WITHOUT_CLASSIFICATION	line 634
WITHOUT_CLASSIFICATION	line 638
WITHOUT_CLASSIFICATION	line 643
WITHOUT_CLASSIFICATION	line 646
WITHOUT_CLASSIFICATION	line 655
WITHOUT_CLASSIFICATION	line 660
WITHOUT_CLASSIFICATION	line 667
WITHOUT_CLASSIFICATION	line 670
WITHOUT_CLASSIFICATION	line 672
WITHOUT_CLASSIFICATION	line 696
WITHOUT_CLASSIFICATION	line 701
WITHOUT_CLASSIFICATION	line 717
WITHOUT_CLASSIFICATION	line 720
WITHOUT_CLASSIFICATION	line 726
WITHOUT_CLASSIFICATION	line 729
WITHOUT_CLASSIFICATION	line 732
WITHOUT_CLASSIFICATION	line 735
WITHOUT_CLASSIFICATION	line 738
WITHOUT_CLASSIFICATION	line 751
WITHOUT_CLASSIFICATION	line 754
WITHOUT_CLASSIFICATION	line 757
WITHOUT_CLASSIFICATION	line 760
WITHOUT_CLASSIFICATION	line 763
WITHOUT_CLASSIFICATION	line 769
WITHOUT_CLASSIFICATION	line 772
WITHOUT_CLASSIFICATION	line 775
WITHOUT_CLASSIFICATION	line 782
WITHOUT_CLASSIFICATION	line 788
WITHOUT_CLASSIFICATION	line 791
WITHOUT_CLASSIFICATION	line 794
WITHOUT_CLASSIFICATION	line 797
WITHOUT_CLASSIFICATION	line 803
WITHOUT_CLASSIFICATION	line 806
WITHOUT_CLASSIFICATION	line 809
WITHOUT_CLASSIFICATION	line 815
WITHOUT_CLASSIFICATION	line 818
WITHOUT_CLASSIFICATION	line 821
WITHOUT_CLASSIFICATION	line 824
WITHOUT_CLASSIFICATION	line 830
WITHOUT_CLASSIFICATION	line 833
WITHOUT_CLASSIFICATION	line 836
WITHOUT_CLASSIFICATION	line 839
WITHOUT_CLASSIFICATION	line 842
WITHOUT_CLASSIFICATION	line 848
WITHOUT_CLASSIFICATION	line 852
WITHOUT_CLASSIFICATION	line 858
WITHOUT_CLASSIFICATION	line 861
WITHOUT_CLASSIFICATION	line 868
WITHOUT_CLASSIFICATION	line 871
WITHOUT_CLASSIFICATION	line 876
WITHOUT_CLASSIFICATION	line 879
WITHOUT_CLASSIFICATION	line 883
WITHOUT_CLASSIFICATION	line 893
WITHOUT_CLASSIFICATION	line 896
WITHOUT_CLASSIFICATION	line 899
WITHOUT_CLASSIFICATION	line 903
WITHOUT_CLASSIFICATION	line 907
WITHOUT_CLASSIFICATION	line 915
WITHOUT_CLASSIFICATION	line 920
WITHOUT_CLASSIFICATION	line 923
WITHOUT_CLASSIFICATION	line 926
WITHOUT_CLASSIFICATION	line 932
WITHOUT_CLASSIFICATION	line 936
WITHOUT_CLASSIFICATION	line 940
WITHOUT_CLASSIFICATION	line 944
WITHOUT_CLASSIFICATION	line 948
WITHOUT_CLASSIFICATION	line 956
WITHOUT_CLASSIFICATION	line 960
WITHOUT_CLASSIFICATION	line 964
WITHOUT_CLASSIFICATION	line 967
WITHOUT_CLASSIFICATION	line 972
WITHOUT_CLASSIFICATION	line 978
WITHOUT_CLASSIFICATION	line 980
WITHOUT_CLASSIFICATION	line 984
WITHOUT_CLASSIFICATION	line 986
WITHOUT_CLASSIFICATION	line 996
WITHOUT_CLASSIFICATION	line 1001
WITHOUT_CLASSIFICATION	line 1004
WITHOUT_CLASSIFICATION	line 1008
WITHOUT_CLASSIFICATION	line 1014
WITHOUT_CLASSIFICATION	line 1029
WITHOUT_CLASSIFICATION	line 1032
WITHOUT_CLASSIFICATION	line 1034
WITHOUT_CLASSIFICATION	line 1045
WITHOUT_CLASSIFICATION	line 1048
WITHOUT_CLASSIFICATION	line 1051
WITHOUT_CLASSIFICATION	line 1058
WITHOUT_CLASSIFICATION	line 1070
WITHOUT_CLASSIFICATION	line 1073
WITHOUT_CLASSIFICATION	line 1076
WITHOUT_CLASSIFICATION	line 1079
WITHOUT_CLASSIFICATION	line 1082
WITHOUT_CLASSIFICATION	line 1089
WITHOUT_CLASSIFICATION	line 1097
WITHOUT_CLASSIFICATION	line 1100
WITHOUT_CLASSIFICATION	line 1103
WITHOUT_CLASSIFICATION	line 1107
WITHOUT_CLASSIFICATION	line 1111
WITHOUT_CLASSIFICATION	line 1113
WITHOUT_CLASSIFICATION	line 1115
WITHOUT_CLASSIFICATION	line 1119
WITHOUT_CLASSIFICATION	line 1130
WITHOUT_CLASSIFICATION	line 1133
WITHOUT_CLASSIFICATION	line 1135
WITHOUT_CLASSIFICATION	line 1137
WITHOUT_CLASSIFICATION	line 1140
WITHOUT_CLASSIFICATION	line 1151
WITHOUT_CLASSIFICATION	line 1154
WITHOUT_CLASSIFICATION	line 1158
WITHOUT_CLASSIFICATION	line 1164
WITHOUT_CLASSIFICATION	line 1175
WITHOUT_CLASSIFICATION	line 1178
WITHOUT_CLASSIFICATION	line 1187
WITHOUT_CLASSIFICATION	line 1189
WITHOUT_CLASSIFICATION	line 1193
WITHOUT_CLASSIFICATION	line 1204
WITHOUT_CLASSIFICATION	line 1207
WITHOUT_CLASSIFICATION	line 1210
WITHOUT_CLASSIFICATION	line 1214
WITHOUT_CLASSIFICATION	line 1234
WITHOUT_CLASSIFICATION	line 1239
WITHOUT_CLASSIFICATION	line 1243
WITHOUT_CLASSIFICATION	line 1247
WITHOUT_CLASSIFICATION	line 1251
WITHOUT_CLASSIFICATION	line 1263
WITHOUT_CLASSIFICATION	line 1269
WITHOUT_CLASSIFICATION	line 1280
WITHOUT_CLASSIFICATION	line 1283
WITHOUT_CLASSIFICATION	line 1290
WITHOUT_CLASSIFICATION	line 1296
WITHOUT_CLASSIFICATION	line 1299
WITHOUT_CLASSIFICATION	line 1302
WITHOUT_CLASSIFICATION	line 1309
WITHOUT_CLASSIFICATION	line 1313
WITHOUT_CLASSIFICATION	line 1315
WITHOUT_CLASSIFICATION	line 1320
WITHOUT_CLASSIFICATION	line 1328
WITHOUT_CLASSIFICATION	line 1335
WITHOUT_CLASSIFICATION	line 1348
WITHOUT_CLASSIFICATION	line 1352
WITHOUT_CLASSIFICATION	line 1358
WITHOUT_CLASSIFICATION	line 1374
WITHOUT_CLASSIFICATION	line 1381
WITHOUT_CLASSIFICATION	line 1387
WITHOUT_CLASSIFICATION	line 1392
WITHOUT_CLASSIFICATION	line 1415
WITHOUT_CLASSIFICATION	line 1431
WITHOUT_CLASSIFICATION	line 1434
WITHOUT_CLASSIFICATION	line 1440
WITHOUT_CLASSIFICATION	line 1443
WITHOUT_CLASSIFICATION	line 1453
WITHOUT_CLASSIFICATION	line 1456
WITHOUT_CLASSIFICATION	line 1462
WITHOUT_CLASSIFICATION	line 1465
WITHOUT_CLASSIFICATION	line 1470
WITHOUT_CLASSIFICATION	line 1477
WITHOUT_CLASSIFICATION	line 1480
WITHOUT_CLASSIFICATION	line 1485
WITHOUT_CLASSIFICATION	line 1488
WITHOUT_CLASSIFICATION	line 1496
WITHOUT_CLASSIFICATION	line 1502
WITHOUT_CLASSIFICATION	line 1510
WITHOUT_CLASSIFICATION	line 1513
WITHOUT_CLASSIFICATION	line 1516
WITHOUT_CLASSIFICATION	line 1533
WITHOUT_CLASSIFICATION	line 1550
WITHOUT_CLASSIFICATION	line 1553
WITHOUT_CLASSIFICATION	line 1556
WITHOUT_CLASSIFICATION	line 1565
WITHOUT_CLASSIFICATION	line 1568
WITHOUT_CLASSIFICATION	line 1571
WITHOUT_CLASSIFICATION	line 1574
WITHOUT_CLASSIFICATION	line 1577
WITHOUT_CLASSIFICATION	line 1587
WITHOUT_CLASSIFICATION	line 1595
WITHOUT_CLASSIFICATION	line 1598
WITHOUT_CLASSIFICATION	line 1600
WITHOUT_CLASSIFICATION	line 1609
WITHOUT_CLASSIFICATION	line 1623
WITHOUT_CLASSIFICATION	line 1626
WITHOUT_CLASSIFICATION	line 1629
WITHOUT_CLASSIFICATION	line 1632
WITHOUT_CLASSIFICATION	line 1638
WITHOUT_CLASSIFICATION	line 1641
WITHOUT_CLASSIFICATION	line 1644
WITHOUT_CLASSIFICATION	line 1649
WITHOUT_CLASSIFICATION	line 1655
WITHOUT_CLASSIFICATION	line 1658
WITHOUT_CLASSIFICATION	line 1661
WITHOUT_CLASSIFICATION	line 1672
WITHOUT_CLASSIFICATION	line 1677
WITHOUT_CLASSIFICATION	line 1687
WITHOUT_CLASSIFICATION	line 1694
WITHOUT_CLASSIFICATION	line 1705
WITHOUT_CLASSIFICATION	line 1708
WITHOUT_CLASSIFICATION	line 1725
WITHOUT_CLASSIFICATION	line 1733
WITHOUT_CLASSIFICATION	line 1742
WITHOUT_CLASSIFICATION	line 1745
WITHOUT_CLASSIFICATION	line 1749
WITHOUT_CLASSIFICATION	line 1757
WITHOUT_CLASSIFICATION	line 1769
WITHOUT_CLASSIFICATION	line 1772
WITHOUT_CLASSIFICATION	line 1775
WITHOUT_CLASSIFICATION	line 1784
WITHOUT_CLASSIFICATION	line 1808
WITHOUT_CLASSIFICATION	line 1814
WITHOUT_CLASSIFICATION	line 1818
WITHOUT_CLASSIFICATION	line 1822
WITHOUT_CLASSIFICATION	force for args
WITHOUT_CLASSIFICATION	xxx 0
WITHOUT_CLASSIFICATION	$$ = $3
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	last expression should not be void
WITHOUT_CLASSIFICATION	compstmt position includes both parens around it
WITHOUT_CLASSIFICATION	$8 == null ? nilimplicitnode.nil $8
WITHOUT_CLASSIFICATION	$5 == null ? nilimplicitnode.nil $5
WITHOUT_CLASSIFICATION	noex_private for toplevel
WITHOUT_CLASSIFICATION	mirko check
WITHOUT_CLASSIFICATION	include pipes on multiple arg type
WITHOUT_CLASSIFICATION	line 529
WITHOUT_CLASSIFICATION	.setposfrom($2)
WITHOUT_CLASSIFICATION	xxx
WITHOUT_CLASSIFICATION	zero length array
WITHOUT_CLASSIFICATION	dstrnode "some text #{some expression}"
WITHOUT_CLASSIFICATION	strnode "some text"
WITHOUT_CLASSIFICATION	evstrnode "#{some expression}"
WITHOUT_CLASSIFICATION	line 1827 "defaultrubyparser.y"
WITHOUT_CLASSIFICATION	ignore no debugger present
WITHOUT_CLASSIFICATION	yyparse(lexer new jay.yydebug.yyanim("jruby" 9))
WITHOUT_CLASSIFICATION	line 7713 "-"
WITHOUT_CLASSIFICATION	local scopes are argument scopes by default
WITHOUT_CLASSIFICATION	mark as captured if from containing scope
WITHOUT_CLASSIFICATION	mark as captured if from containing scope
WITHOUT_CLASSIFICATION	we know this is a block scope because a local scope cannot be within a local scope if topscope was itself it would have created a localasgnnode above.
WITHOUT_CLASSIFICATION	enebo 1.9 has curr nodes for local/block variables. we don't. i believe we follow proper logic
WITHOUT_CLASSIFICATION	oddbut it is odd in ruby too.
WITHOUT_CLASSIFICATION	what linenumber will the source think it starts from?
WITHOUT_CLASSIFICATION	is this inline source (aka -e "source")
WITHOUT_CLASSIFICATION	we parse evals more often in source so assume an eval parse.
WITHOUT_CLASSIFICATION	should positions added extra ide-friendly information and leave in all newline nodes
WITHOUT_CLASSIFICATION	will parser parse duby grammar extensions
WITHOUT_CLASSIFICATION	should we display extra debug information while parsing?
WITHOUT_CLASSIFICATION	__end__ marker offset (-1 means none present)
WITHOUT_CLASSIFICATION	parser states
WITHOUT_CLASSIFICATION	is the parser current within a singleton (value is number of nested singletons)
WITHOUT_CLASSIFICATION	is the parser currently within a method definition
WITHOUT_CLASSIFICATION	localvar
WITHOUT_CLASSIFICATION	constant
WITHOUT_CLASSIFICATION	instance variable
WITHOUT_CLASSIFICATION	add real top to new top (unless this top is empty [only begin/end nodes or truly empty])
WITHOUT_CLASSIFICATION	mri block_append
WITHOUT_CLASSIFICATION	reduces overhead in interp by not set position every single line we encounter.
WITHOUT_CLASSIFICATION	assumption tail is never a list node
WITHOUT_CLASSIFICATION	return new calloneargnode(firstnode.getposition() firstnode operator new arraynode(secondnode.getposition() secondnode))
WITHOUT_CLASSIFICATION	node
WITHOUT_CLASSIFICATION	fixme temporarily disabling because this fires way too much running rails tests. jruby-518
WITHOUT_CLASSIFICATION	case constnode handleuselesswarn(node "a constant") return
WITHOUT_CLASSIFICATION	fixme temporarily disabling because this fires way too much running rails tests. jruby-518
WITHOUT_CLASSIFICATION	case classnode case colon2node handleuselesswarn(node "") return
WITHOUT_CLASSIFICATION	case selfnode handleuselesswarn(node "self") return
WITHOUT_CLASSIFICATION	fixme dstrevstrstr warning "string literal in condition"
WITHOUT_CLASSIFICATION	mri range_op
WITHOUT_CLASSIFICATION	block and block pass passed in at same time.uh oh
WITHOUT_CLASSIFICATION	foo()
WITHOUT_CLASSIFICATION	foo()
WITHOUT_CLASSIFICATION	foo()
WITHOUT_CLASSIFICATION	tail must be evstrnode at this point
WITHOUT_CLASSIFICATION	do not add an empty string node
WITHOUT_CLASSIFICATION	zero-argument declaration
WITHOUT_CLASSIFICATION	yylhs 542
WITHOUT_CLASSIFICATION	yylhs 542
WITHOUT_CLASSIFICATION	yylhs 542
WITHOUT_CLASSIFICATION	yylhs 542
WITHOUT_CLASSIFICATION	yylhs 542
WITHOUT_CLASSIFICATION	yylhs 542
WITHOUT_CLASSIFICATION	yylen 542
WITHOUT_CLASSIFICATION	yylen 542
WITHOUT_CLASSIFICATION	yylen 542
WITHOUT_CLASSIFICATION	yylen 542
WITHOUT_CLASSIFICATION	yylen 542
WITHOUT_CLASSIFICATION	yydefred 945
WITHOUT_CLASSIFICATION	yydefred 945
WITHOUT_CLASSIFICATION	yydefred 945
WITHOUT_CLASSIFICATION	yydefred 945
WITHOUT_CLASSIFICATION	yydefred 945
WITHOUT_CLASSIFICATION	yydgoto 152
WITHOUT_CLASSIFICATION	yydgoto 152
WITHOUT_CLASSIFICATION	yydgoto 152
WITHOUT_CLASSIFICATION	yydgoto 152
WITHOUT_CLASSIFICATION	yydgoto 152
WITHOUT_CLASSIFICATION	yydgoto 152
WITHOUT_CLASSIFICATION	yysindex 945
WITHOUT_CLASSIFICATION	yysindex 945
WITHOUT_CLASSIFICATION	yysindex 945
WITHOUT_CLASSIFICATION	yysindex 945
WITHOUT_CLASSIFICATION	yysindex 945
WITHOUT_CLASSIFICATION	yyrindex 945
WITHOUT_CLASSIFICATION	yyrindex 945
WITHOUT_CLASSIFICATION	yyrindex 945
WITHOUT_CLASSIFICATION	yyrindex 945
WITHOUT_CLASSIFICATION	yyrindex 945
WITHOUT_CLASSIFICATION	yygindex 152
WITHOUT_CLASSIFICATION	yygindex 152
WITHOUT_CLASSIFICATION	yygindex 152
WITHOUT_CLASSIFICATION	yygindex 152
WITHOUT_CLASSIFICATION	yygindex 152
WITHOUT_CLASSIFICATION	dynamically increase
WITHOUT_CLASSIFICATION	else [default] reduce (yyn)
WITHOUT_CLASSIFICATION	shift to yyn
WITHOUT_CLASSIFICATION	reduce (yyn)
WITHOUT_CLASSIFICATION	leave stack alone
WITHOUT_CLASSIFICATION	line 321
WITHOUT_CLASSIFICATION	line 351
WITHOUT_CLASSIFICATION	line 382
WITHOUT_CLASSIFICATION	line 417
WITHOUT_CLASSIFICATION	line 420
WITHOUT_CLASSIFICATION	line 423
WITHOUT_CLASSIFICATION	line 426
WITHOUT_CLASSIFICATION	line 280
WITHOUT_CLASSIFICATION	line 283
WITHOUT_CLASSIFICATION	line 296
WITHOUT_CLASSIFICATION	line 324
WITHOUT_CLASSIFICATION	line 327
WITHOUT_CLASSIFICATION	line 331
WITHOUT_CLASSIFICATION	line 333
WITHOUT_CLASSIFICATION	line 336
WITHOUT_CLASSIFICATION	line 342
WITHOUT_CLASSIFICATION	line 345
WITHOUT_CLASSIFICATION	line 348
WITHOUT_CLASSIFICATION	line 354
WITHOUT_CLASSIFICATION	line 368
WITHOUT_CLASSIFICATION	line 377
WITHOUT_CLASSIFICATION	line 388
WITHOUT_CLASSIFICATION	line 392
WITHOUT_CLASSIFICATION	line 397
WITHOUT_CLASSIFICATION	line 429
WITHOUT_CLASSIFICATION	line 432
WITHOUT_CLASSIFICATION	line 436
WITHOUT_CLASSIFICATION	line 445
WITHOUT_CLASSIFICATION	line 448
WITHOUT_CLASSIFICATION	line 454
WITHOUT_CLASSIFICATION	line 459
WITHOUT_CLASSIFICATION	line 466
WITHOUT_CLASSIFICATION	line 469
WITHOUT_CLASSIFICATION	line 478
WITHOUT_CLASSIFICATION	line 481
WITHOUT_CLASSIFICATION	line 488
WITHOUT_CLASSIFICATION	line 494
WITHOUT_CLASSIFICATION	line 497
WITHOUT_CLASSIFICATION	line 503
WITHOUT_CLASSIFICATION	line 506
WITHOUT_CLASSIFICATION	line 509
WITHOUT_CLASSIFICATION	line 512
WITHOUT_CLASSIFICATION	line 521
WITHOUT_CLASSIFICATION	line 526
WITHOUT_CLASSIFICATION	line 540
WITHOUT_CLASSIFICATION	line 543
WITHOUT_CLASSIFICATION	line 546
WITHOUT_CLASSIFICATION	line 566
WITHOUT_CLASSIFICATION	line 610
WITHOUT_CLASSIFICATION	line 672
WITHOUT_CLASSIFICATION	line 691
WITHOUT_CLASSIFICATION	line 696
WITHOUT_CLASSIFICATION	line 772
WITHOUT_CLASSIFICATION	line 782
WITHOUT_CLASSIFICATION	line 785
WITHOUT_CLASSIFICATION	line 788
WITHOUT_CLASSIFICATION	line 791
WITHOUT_CLASSIFICATION	line 534
WITHOUT_CLASSIFICATION	line 549
WITHOUT_CLASSIFICATION	line 552
WITHOUT_CLASSIFICATION	line 558
WITHOUT_CLASSIFICATION	line 561
WITHOUT_CLASSIFICATION	line 571
WITHOUT_CLASSIFICATION	line 574
WITHOUT_CLASSIFICATION	line 579
WITHOUT_CLASSIFICATION	line 586
WITHOUT_CLASSIFICATION	line 589
WITHOUT_CLASSIFICATION	line 592
WITHOUT_CLASSIFICATION	line 595
WITHOUT_CLASSIFICATION	line 598
WITHOUT_CLASSIFICATION	line 623
WITHOUT_CLASSIFICATION	line 627
WITHOUT_CLASSIFICATION	line 630
WITHOUT_CLASSIFICATION	line 633
WITHOUT_CLASSIFICATION	line 639
WITHOUT_CLASSIFICATION	line 648
WITHOUT_CLASSIFICATION	line 657
WITHOUT_CLASSIFICATION	line 661
WITHOUT_CLASSIFICATION	line 666
WITHOUT_CLASSIFICATION	line 678
WITHOUT_CLASSIFICATION	line 682
WITHOUT_CLASSIFICATION	line 688
WITHOUT_CLASSIFICATION	line 699
WITHOUT_CLASSIFICATION	line 706
WITHOUT_CLASSIFICATION	line 708
WITHOUT_CLASSIFICATION	line 727
WITHOUT_CLASSIFICATION	line 737
WITHOUT_CLASSIFICATION	line 753
WITHOUT_CLASSIFICATION	line 779
WITHOUT_CLASSIFICATION	line 801
WITHOUT_CLASSIFICATION	line 808
WITHOUT_CLASSIFICATION	line 811
WITHOUT_CLASSIFICATION	line 817
WITHOUT_CLASSIFICATION	line 842
WITHOUT_CLASSIFICATION	line 845
WITHOUT_CLASSIFICATION	line 848
WITHOUT_CLASSIFICATION	line 893
WITHOUT_CLASSIFICATION	line 899
WITHOUT_CLASSIFICATION	line 932
WITHOUT_CLASSIFICATION	line 944
WITHOUT_CLASSIFICATION	line 960
WITHOUT_CLASSIFICATION	line 980
WITHOUT_CLASSIFICATION	line 1004
WITHOUT_CLASSIFICATION	line 1038
WITHOUT_CLASSIFICATION	line 820
WITHOUT_CLASSIFICATION	line 826
WITHOUT_CLASSIFICATION	line 829
WITHOUT_CLASSIFICATION	line 832
WITHOUT_CLASSIFICATION	line 851
WITHOUT_CLASSIFICATION	line 857
WITHOUT_CLASSIFICATION	line 860
WITHOUT_CLASSIFICATION	line 863
WITHOUT_CLASSIFICATION	line 866
WITHOUT_CLASSIFICATION	line 869
WITHOUT_CLASSIFICATION	line 875
WITHOUT_CLASSIFICATION	line 884
WITHOUT_CLASSIFICATION	line 887
WITHOUT_CLASSIFICATION	line 890
WITHOUT_CLASSIFICATION	line 902
WITHOUT_CLASSIFICATION	line 909
WITHOUT_CLASSIFICATION	line 912
WITHOUT_CLASSIFICATION	line 916
WITHOUT_CLASSIFICATION	line 922
WITHOUT_CLASSIFICATION	line 928
WITHOUT_CLASSIFICATION	line 941
WITHOUT_CLASSIFICATION	line 947
WITHOUT_CLASSIFICATION	line 951
WITHOUT_CLASSIFICATION	line 955
WITHOUT_CLASSIFICATION	line 965
WITHOUT_CLASSIFICATION	line 969
WITHOUT_CLASSIFICATION	line 977
WITHOUT_CLASSIFICATION	line 983
WITHOUT_CLASSIFICATION	line 1013
WITHOUT_CLASSIFICATION	line 1023
WITHOUT_CLASSIFICATION	line 1035
WITHOUT_CLASSIFICATION	line 1041
WITHOUT_CLASSIFICATION	line 1043
WITHOUT_CLASSIFICATION	line 1054
WITHOUT_CLASSIFICATION	line 1057
WITHOUT_CLASSIFICATION	line 1060
WITHOUT_CLASSIFICATION	line 1069
WITHOUT_CLASSIFICATION	line 1075
WITHOUT_CLASSIFICATION	line 1105
WITHOUT_CLASSIFICATION	line 1111
WITHOUT_CLASSIFICATION	line 1122
WITHOUT_CLASSIFICATION	line 1130
WITHOUT_CLASSIFICATION	line 1140
WITHOUT_CLASSIFICATION	line 1158
WITHOUT_CLASSIFICATION	line 1204
WITHOUT_CLASSIFICATION	line 1207
WITHOUT_CLASSIFICATION	line 1247
WITHOUT_CLASSIFICATION	line 1251
WITHOUT_CLASSIFICATION	line 1261
WITHOUT_CLASSIFICATION	line 1078
WITHOUT_CLASSIFICATION	line 1084
WITHOUT_CLASSIFICATION	line 1087
WITHOUT_CLASSIFICATION	line 1090
WITHOUT_CLASSIFICATION	line 1093
WITHOUT_CLASSIFICATION	line 1114
WITHOUT_CLASSIFICATION	line 1116
WITHOUT_CLASSIFICATION	line 1118
WITHOUT_CLASSIFICATION	line 1124
WITHOUT_CLASSIFICATION	line 1126
WITHOUT_CLASSIFICATION	line 1138
WITHOUT_CLASSIFICATION	line 1144
WITHOUT_CLASSIFICATION	line 1149
WITHOUT_CLASSIFICATION	line 1155
WITHOUT_CLASSIFICATION	line 1162
WITHOUT_CLASSIFICATION	line 1173
WITHOUT_CLASSIFICATION	line 1179
WITHOUT_CLASSIFICATION	line 1182
WITHOUT_CLASSIFICATION	line 1190
WITHOUT_CLASSIFICATION	line 1196
WITHOUT_CLASSIFICATION	line 1213
WITHOUT_CLASSIFICATION	line 1217
WITHOUT_CLASSIFICATION	line 1231
WITHOUT_CLASSIFICATION	line 1236
WITHOUT_CLASSIFICATION	line 1244
WITHOUT_CLASSIFICATION	line 1254
WITHOUT_CLASSIFICATION	line 1258
WITHOUT_CLASSIFICATION	line 1264
WITHOUT_CLASSIFICATION	line 1270
WITHOUT_CLASSIFICATION	line 1273
WITHOUT_CLASSIFICATION	line 1276
WITHOUT_CLASSIFICATION	line 1279
WITHOUT_CLASSIFICATION	line 1282
WITHOUT_CLASSIFICATION	line 1289
WITHOUT_CLASSIFICATION	line 1292
WITHOUT_CLASSIFICATION	line 1295
WITHOUT_CLASSIFICATION	line 1298
WITHOUT_CLASSIFICATION	line 1305
WITHOUT_CLASSIFICATION	line 1348
WITHOUT_CLASSIFICATION	line 1387
WITHOUT_CLASSIFICATION	line 1392
WITHOUT_CLASSIFICATION	line 1448
WITHOUT_CLASSIFICATION	line 1462
WITHOUT_CLASSIFICATION	line 1470
WITHOUT_CLASSIFICATION	line 1496
WITHOUT_CLASSIFICATION	line 1502
WITHOUT_CLASSIFICATION	line 1595
WITHOUT_CLASSIFICATION	line 1598
WITHOUT_CLASSIFICATION	line 1308
WITHOUT_CLASSIFICATION	line 1311
WITHOUT_CLASSIFICATION	line 1317
WITHOUT_CLASSIFICATION	line 1323
WITHOUT_CLASSIFICATION	line 1326
WITHOUT_CLASSIFICATION	line 1329
WITHOUT_CLASSIFICATION	line 1337
WITHOUT_CLASSIFICATION	line 1342
WITHOUT_CLASSIFICATION	line 1345
WITHOUT_CLASSIFICATION	line 1354
WITHOUT_CLASSIFICATION	line 1359
WITHOUT_CLASSIFICATION	line 1366
WITHOUT_CLASSIFICATION	line 1369
WITHOUT_CLASSIFICATION	line 1373
WITHOUT_CLASSIFICATION	line 1377
WITHOUT_CLASSIFICATION	line 1383
WITHOUT_CLASSIFICATION	line 1399
WITHOUT_CLASSIFICATION	line 1401
WITHOUT_CLASSIFICATION	line 1406
WITHOUT_CLASSIFICATION	line 1417
WITHOUT_CLASSIFICATION	line 1424
WITHOUT_CLASSIFICATION	line 1427
WITHOUT_CLASSIFICATION	line 1430
WITHOUT_CLASSIFICATION	line 1433
WITHOUT_CLASSIFICATION	line 1436
WITHOUT_CLASSIFICATION	line 1442
WITHOUT_CLASSIFICATION	line 1445
WITHOUT_CLASSIFICATION	line 1458
WITHOUT_CLASSIFICATION	line 1464
WITHOUT_CLASSIFICATION	line 1489
WITHOUT_CLASSIFICATION	line 1493
WITHOUT_CLASSIFICATION	line 1507
WITHOUT_CLASSIFICATION	line 1519
WITHOUT_CLASSIFICATION	line 1532
WITHOUT_CLASSIFICATION	line 1538
WITHOUT_CLASSIFICATION	line 1542
WITHOUT_CLASSIFICATION	line 1557
WITHOUT_CLASSIFICATION	line 1573
WITHOUT_CLASSIFICATION	line 1591
WITHOUT_CLASSIFICATION	line 1615
WITHOUT_CLASSIFICATION	line 1629
WITHOUT_CLASSIFICATION	line 1632
WITHOUT_CLASSIFICATION	line 1705
WITHOUT_CLASSIFICATION	line 1716
WITHOUT_CLASSIFICATION	line 1725
WITHOUT_CLASSIFICATION	line 1742
WITHOUT_CLASSIFICATION	line 1749
WITHOUT_CLASSIFICATION	line 1818
WITHOUT_CLASSIFICATION	line 1822
WITHOUT_CLASSIFICATION	line 1607
WITHOUT_CLASSIFICATION	line 1610
WITHOUT_CLASSIFICATION	line 1622
WITHOUT_CLASSIFICATION	line 1625
WITHOUT_CLASSIFICATION	line 1636
WITHOUT_CLASSIFICATION	line 1639
WITHOUT_CLASSIFICATION	line 1647
WITHOUT_CLASSIFICATION	line 1651
WITHOUT_CLASSIFICATION	line 1657
WITHOUT_CLASSIFICATION	line 1660
WITHOUT_CLASSIFICATION	line 1663
WITHOUT_CLASSIFICATION	line 1678
WITHOUT_CLASSIFICATION	line 1702
WITHOUT_CLASSIFICATION	line 1711
WITHOUT_CLASSIFICATION	line 1719
WITHOUT_CLASSIFICATION	line 1722
WITHOUT_CLASSIFICATION	line 1731
WITHOUT_CLASSIFICATION	line 1734
WITHOUT_CLASSIFICATION	line 1738
WITHOUT_CLASSIFICATION	line 1746
WITHOUT_CLASSIFICATION	line 1756
WITHOUT_CLASSIFICATION	line 1758
WITHOUT_CLASSIFICATION	line 1761
WITHOUT_CLASSIFICATION	line 1767
WITHOUT_CLASSIFICATION	line 1776
WITHOUT_CLASSIFICATION	line 1782
WITHOUT_CLASSIFICATION	line 1785
WITHOUT_CLASSIFICATION	line 1788
WITHOUT_CLASSIFICATION	line 1791
WITHOUT_CLASSIFICATION	line 1797
WITHOUT_CLASSIFICATION	line 1800
WITHOUT_CLASSIFICATION	line 1803
WITHOUT_CLASSIFICATION	line 1806
WITHOUT_CLASSIFICATION	line 1809
WITHOUT_CLASSIFICATION	line 1815
WITHOUT_CLASSIFICATION	line 1825
WITHOUT_CLASSIFICATION	line 1828
WITHOUT_CLASSIFICATION	line 1831
WITHOUT_CLASSIFICATION	line 1847
WITHOUT_CLASSIFICATION	$8 == null ? nilimplicitnode.nil $8
WITHOUT_CLASSIFICATION	$5 == null ? nilimplicitnode.nil $5
WITHOUT_CLASSIFICATION	.setposfrom($2)
WITHOUT_CLASSIFICATION	zero length array
WITHOUT_CLASSIFICATION	dstrnode "some text #{some expression}"
WITHOUT_CLASSIFICATION	strnode "some text"
WITHOUT_CLASSIFICATION	evstrnode "#{some expression}"
WITHOUT_CLASSIFICATION	instance variable methods
WITHOUT_CLASSIFICATION	line 1854
WITHOUT_CLASSIFICATION	line 1869
WITHOUT_CLASSIFICATION	line 1872
WITHOUT_CLASSIFICATION	line 1877
WITHOUT_CLASSIFICATION	line 1886
WITHOUT_CLASSIFICATION	line 1898
WITHOUT_CLASSIFICATION	line 1902
WITHOUT_CLASSIFICATION	line 1905
WITHOUT_CLASSIFICATION	line 1911
WITHOUT_CLASSIFICATION	line 1918
WITHOUT_CLASSIFICATION	line 1935
WITHOUT_CLASSIFICATION	line 1938
WITHOUT_CLASSIFICATION	line 1942
WITHOUT_CLASSIFICATION	line 1948
WITHOUT_CLASSIFICATION	line 1960
WITHOUT_CLASSIFICATION	line 1963
WITHOUT_CLASSIFICATION	line 1968
WITHOUT_CLASSIFICATION	line 1972
WITHOUT_CLASSIFICATION	line 1982
WITHOUT_CLASSIFICATION	line 1995
WITHOUT_CLASSIFICATION	line 2000
WITHOUT_CLASSIFICATION	line 2006
WITHOUT_CLASSIFICATION	line 2010
WITHOUT_CLASSIFICATION	we may need to subtract addition offset off of first
WITHOUT_CLASSIFICATION	string fragment (we optimistically take one off in
WITHOUT_CLASSIFICATION	parsersupport.literal_concat). check token length
WITHOUT_CLASSIFICATION	and subtract as neeeded.
WITHOUT_CLASSIFICATION	$$ = new argauxiliarynode($1.getposition() (string) $1.getvalue() 1)
WITHOUT_CLASSIFICATION	enebo arg surrounded by in_defined set/unset
WITHOUT_CLASSIFICATION	ignore no debugger present
WITHOUT_CLASSIFICATION	yyparse(lexer new jay.yydebug.yyanim("jruby" 9))
WITHOUT_CLASSIFICATION	mark as captured if from containing scope
WITHOUT_CLASSIFICATION	mark as captured if from containing scope
WITHOUT_CLASSIFICATION	enebo removed !compile_for_eval which probably is to reduce warnings
WITHOUT_CLASSIFICATION	was $$ = null
WITHOUT_CLASSIFICATION	line 2019 "ruby19parser.y"
WITHOUT_CLASSIFICATION	line 8143 "-"
WITHOUT_CLASSIFICATION	we know variables cannot be null since localstaticscope will create a 0 length one.
WITHOUT_CLASSIFICATION	no bit math to store level since we know level is zero for this case
WITHOUT_CLASSIFICATION	next immediate scope. variable and constant scoping rules make use of this variable in different ways.
WITHOUT_CLASSIFICATION	live reference to module
WITHOUT_CLASSIFICATION	next cref down the lexical structure
WITHOUT_CLASSIFICATION	our name holder (offsets are assigned as variables are added
WITHOUT_CLASSIFICATION	number of variables in this scope representing required arguments
WITHOUT_CLASSIFICATION	number of variables in this scope representing optional arguments
WITHOUT_CLASSIFICATION	index of variable that represents a "rest" arg
WITHOUT_CLASSIFICATION	note that this object equality check is intentional to ensure the string and its interned version are the same object.
WITHOUT_CLASSIFICATION	returns slot of variable
WITHOUT_CLASSIFICATION	returns slot of variable
WITHOUT_CLASSIFICATION	note only used by compiler until it can use getconstant again or use some other refactoring
WITHOUT_CLASSIFICATION	if we could not find the constant from cref..then try getting from inheritence hierarchy
WITHOUT_CLASSIFICATION	try and unload the autoload specified from internedname
WITHOUT_CLASSIFICATION	we override that the logic which uses this
WITHOUT_CLASSIFICATION	this while loop is for restarting the block call in case a 'redo' fires.
WITHOUT_CLASSIFICATION	do nothing allow loop to redo
WITHOUT_CLASSIFICATION	source extensions
WITHOUT_CLASSIFICATION	do nothing allow loop to redo
WITHOUT_CLASSIFICATION	. array given to rest should pass itself . array with rest + other args should extract array . array with multiple values and no rest should extract args if there are more than one argument
WITHOUT_CLASSIFICATION	a 'next' is like a local return from the block ending this call or yield.
WITHOUT_CLASSIFICATION	is this thread currently with in a function trace?
WITHOUT_CLASSIFICATION	is this thread currently doing an defined? defined should set things like $!
WITHOUT_CLASSIFICATION	private unsynchronizedstack parentstack
WITHOUT_CLASSIFICATION	private unsynchronizedstack framestack
WITHOUT_CLASSIFICATION	list of active dynamic scopes. each of these may have captured other dynamic scopes to implement closures.
WITHOUT_CLASSIFICATION	file where current executing unit is being evaluated
WITHOUT_CLASSIFICATION	line where current executing unit is being evaluated
WITHOUT_CLASSIFICATION	in certain places like grep we don't use real frames for the call blocks. this has the effect of not setting the backref in the correct frame - this delta is activated to the place where the grep is running in so that the backref will be set in an appropriate place.
WITHOUT_CLASSIFICATION	toplevel self and a few others want a top-level scope. we create this one right away and then pass it into top-level parse so it ends up being the top level.
WITHOUT_CLASSIFICATION	catch management
WITHOUT_CLASSIFICATION	frame management
WITHOUT_CLASSIFICATION	happens with native exceptions should not filter those out
WITHOUT_CLASSIFICATION	assert level == 0
WITHOUT_CLASSIFICATION	assert level == 0
WITHOUT_CLASSIFICATION	look for mangling markers for compiled ruby in method name
WITHOUT_CLASSIFICATION	if it's not a rescue or ensure there's a frame associated so decrement
WITHOUT_CLASSIFICATION	look for __file__ method name for compiled roots
WITHOUT_CLASSIFICATION	all entries following removed node can stay in list but all preceding ones need to be cloned.
WITHOUT_CLASSIFICATION	required and optional only
WITHOUT_CLASSIFICATION	do nothing allow loop to redo
WITHOUT_CLASSIFICATION	look for mangling markers for bound unframed methods in class name
WITHOUT_CLASSIFICATION	set the binding's frame's "previous" file and line to current so trace will show who called the block
WITHOUT_CLASSIFICATION	framed invokers will have ruby frames associated with them
WITHOUT_CLASSIFICATION	look for mangling markers for bound framed methods in class name
WITHOUT_CLASSIFICATION	unframed invokers have no ruby frames so pull from class name but use current frame as file and line
WITHOUT_CLASSIFICATION	try to mine out a ruby frame using our list of interpreter entry-point markers
WITHOUT_CLASSIFICATION	frame matches one of our markers for "interpreted" calls
WITHOUT_CLASSIFICATION	frame is extraneous runtime information skip it unless debug
WITHOUT_CLASSIFICATION	determine what sort of assigner should be used for the provided 'iter' (e.g. block). assigner provides just the right logic for assigning values to local parameters of the block. this method also has a second optimization which is to set 'noargblock' in the case that the block is a block which accepts no arguments. the primary reason for this second optimization is that in the case of a yield with a rubyarray we will bypass some logic processing the rubyarray into a proper form (only to then not do anythign with it). a secondary benefit is that a simple boolean seems to optimize by hotspot much faster than the zero arg assigner.
WITHOUT_CLASSIFICATION	new scope for this invocation of the block based on parent scope
WITHOUT_CLASSIFICATION	no argument blocks
WITHOUT_CLASSIFICATION	just push the same empty scope since we won't use one
WITHOUT_CLASSIFICATION	not sure if this is actually possible but better safe than sorry
WITHOUT_CLASSIFICATION	rest arg must be splatted
WITHOUT_CLASSIFICATION	this should only be called by 1.8 (1.9 subclasses this to handle unusedblock).
WITHOUT_CLASSIFICATION	highest reserved id
WITHOUT_CLASSIFICATION	binary typed calls
WITHOUT_CLASSIFICATION	id must always be even
WITHOUT_CLASSIFICATION	with block pass
WITHOUT_CLASSIFICATION	no block
WITHOUT_CLASSIFICATION	with block literal (iter)
WITHOUT_CLASSIFICATION	assert false "can this happen?"
WITHOUT_CLASSIFICATION	if we have multiple asgn with just args need a special type for that
WITHOUT_CLASSIFICATION	&& args.getmaxargumentscount() != 1) {
WITHOUT_CLASSIFICATION	return warnmultireturnnil(ruby)
WITHOUT_CLASSIFICATION	ensure zero is devoted to no method name
WITHOUT_CLASSIFICATION	predefine a few other methods we invoke directly elsewhere
WITHOUT_CLASSIFICATION	fast and safe respond_to? call site logic
WITHOUT_CLASSIFICATION	static scoping information for this scope
WITHOUT_CLASSIFICATION	captured dynamic scopes
WITHOUT_CLASSIFICATION	backref for $~ $1 etc
WITHOUT_CLASSIFICATION	lastline
WITHOUT_CLASSIFICATION	no binding scope so we should create one
WITHOUT_CLASSIFICATION	bindings scopes must always be manyvars scopes since evals can grow them
WITHOUT_CLASSIFICATION	helper function to give a good view of current dynamic scope with captured scopes
WITHOUT_CLASSIFICATION	try count specific args to determine required
WITHOUT_CLASSIFICATION	some helper functions
WITHOUT_CLASSIFICATION	silently ignore
WITHOUT_CLASSIFICATION	used by compiler
WITHOUT_CLASSIFICATION	initialize the static settings to determine which factory to use
WITHOUT_CLASSIFICATION	instance variable methods
WITHOUT_CLASSIFICATION	we need to guarantee that any existing reads of old map can proceed. so we cannot yet null out each bin.
WITHOUT_CLASSIFICATION	single node on list
WITHOUT_CLASSIFICATION	reuse trailing consecutive sequence at same slot
WITHOUT_CLASSIFICATION	clone all remaining nodes
WITHOUT_CLASSIFICATION	a 'next' is like a local return from the block ending this call or yield.
WITHOUT_CLASSIFICATION	note in ruby 1.9 all of this logic can go away since they will require explicit bindings for evals.
WITHOUT_CLASSIFICATION	we only define one special dynamic scope per 'logical' binding. so all bindings for the same scope should share the same dynamic scope. this allows multiple evals with different different bindings in the same scope to see the same stuff.
WITHOUT_CLASSIFICATION	if the next scope out has the same binding scope as this scope it means we are evaling within an eval and in that case we should be sharing the same binding scope.
WITHOUT_CLASSIFICATION	populate up to shorter of calling arguments or local parameters in the block
WITHOUT_CLASSIFICATION	populate up to shorter of calling arguments or local parameters in the block
WITHOUT_CLASSIFICATION	nil pad since we provided less values than block parms
WITHOUT_CLASSIFICATION	nil pad since we provided less values than block parms
WITHOUT_CLASSIFICATION	nil pad since we provided less values than block parms
WITHOUT_CLASSIFICATION	no extra args for rest
WITHOUT_CLASSIFICATION	no extra args for rest
WITHOUT_CLASSIFICATION	extra args for rest
WITHOUT_CLASSIFICATION	extra args for rest
WITHOUT_CLASSIFICATION	this is the proper behavior for all non-expanded assigners which have a pre > 0. the rest override this.
WITHOUT_CLASSIFICATION	this is the proper behavior for all non-expanded assigners.
WITHOUT_CLASSIFICATION	prefill ?
WITHOUT_CLASSIFICATION	prefill ?
WITHOUT_CLASSIFICATION	must be called from synchronized/locked block! should only be called by variabletablestore/variabletablefaststore
WITHOUT_CLASSIFICATION	retrieve method module name
WITHOUT_CLASSIFICATION	call is ok punch it!
WITHOUT_CLASSIFICATION	if undefined branch to method_missing
WITHOUT_CLASSIFICATION	if we're not attempting to invoke method_missing and method is not visible branch to method_missing
WITHOUT_CLASSIFICATION	method object already present push various args tc self klazz name
WITHOUT_CLASSIFICATION	if it's method_missing just invoke it
WITHOUT_CLASSIFICATION	invoke callmethodmissing
WITHOUT_CLASSIFICATION	caller
WITHOUT_CLASSIFICATION	calltype block
WITHOUT_CLASSIFICATION	if no exception raised jump to end to leave result on stack for return
WITHOUT_CLASSIFICATION	load arity for check
WITHOUT_CLASSIFICATION	throw
WITHOUT_CLASSIFICATION	load arity for error
WITHOUT_CLASSIFICATION	arity ok continue
WITHOUT_CLASSIFICATION	invocationcallbackfactory
WITHOUT_CLASSIFICATION	enebo perhaps slow but simple for now
WITHOUT_CLASSIFICATION	fastinvocationcallback
WITHOUT_CLASSIFICATION	invocationcallback
WITHOUT_CLASSIFICATION	dumpinginvocationcallbackfactory
WITHOUT_CLASSIFICATION	for fast lookup encoding entry => org.jruby.rubyencoding
WITHOUT_CLASSIFICATION	for fast lookup org.joni.encoding.encoding => org.jruby.rubyencoding
WITHOUT_CLASSIFICATION	load the encoding
WITHOUT_CLASSIFICATION	irubyobject dynamicmethod rubyclass cacheentry threadcontext irubyobject irubyobject string
WITHOUT_CLASSIFICATION	irubyobject rubyclass cacheentry threadcontext irubyobject irubyobject string
WITHOUT_CLASSIFICATION	irubyobject cacheentry threadcontext irubyobject irubyobject string
WITHOUT_CLASSIFICATION	irubyobject dynamicmethod threadcontext irubyobject rubymodule string irubyobject
WITHOUT_CLASSIFICATION	irubyobject dynamicmethod threadcontext irubyobject rubyclass string irubyobject
WITHOUT_CLASSIFICATION	irubyobject dynamicmethod rubyclass cacheentry threadcontext irubyobject irubyobject string irubyobject
WITHOUT_CLASSIFICATION	irubyobject rubyclass cacheentry threadcontext irubyobject irubyobject string irubyobject
WITHOUT_CLASSIFICATION	irubyobject cacheentry threadcontext irubyobject irubyobject string irubyobject
WITHOUT_CLASSIFICATION	irubyobject dynamicmethod rubyclass cacheentry threadcontext irubyobject irubyobject string args
WITHOUT_CLASSIFICATION	irubyobject rubyclass cacheentry threadcontext irubyobject irubyobject string args
WITHOUT_CLASSIFICATION	irubyobject cacheentry threadcontext irubyobject irubyobject string args
WITHOUT_CLASSIFICATION	irubyobject rubyclass cacheentry threadcontext irubyobject irubyobject string args
WITHOUT_CLASSIFICATION	irubyobject rubyclass cacheentry threadcontext irubyobject irubyobject string args
WITHOUT_CLASSIFICATION	irubyobject rubyclass cacheentry threadcontext irubyobject irubyobject string args
WITHOUT_CLASSIFICATION	irubyobject rubyclass cacheentry threadcontext irubyobject irubyobject string args
WITHOUT_CLASSIFICATION	irubyobject rubyclass cacheentry threadcontext irubyobject irubyobject string args
WITHOUT_CLASSIFICATION	irubyobject rubyclass cacheentry threadcontext irubyobject irubyobject string args
WITHOUT_CLASSIFICATION	irubyobject cacheentry threadcontext irubyobject irubyobject string args
WITHOUT_CLASSIFICATION	irubyobject cacheentry threadcontext irubyobject irubyobject string args
WITHOUT_CLASSIFICATION	irubyobject cacheentry threadcontext irubyobject irubyobject string args
WITHOUT_CLASSIFICATION	irubyobject cacheentry threadcontext irubyobject irubyobject string args
WITHOUT_CLASSIFICATION	irubyobject cacheentry threadcontext irubyobject irubyobject string args
WITHOUT_CLASSIFICATION	irubyobject cacheentry threadcontext irubyobject irubyobject string args
WITHOUT_CLASSIFICATION	if we're running in 1.9 compat mode add ruby 1.9 libs to path before 1.8 libs
WITHOUT_CLASSIFICATION	breakjump threadcontext
WITHOUT_CLASSIFICATION	threadcontext
WITHOUT_CLASSIFICATION	breakjump cacheentry threadcontext irubyobject irubyobject
WITHOUT_CLASSIFICATION	make java class files in the jar reachable from ruby
WITHOUT_CLASSIFICATION	retryjump cacheentry threadcontext irubyobject irubyobject
WITHOUT_CLASSIFICATION	add all startup load paths to the list first
WITHOUT_CLASSIFICATION	if it's a compiled jruby script instantiate and run it
WITHOUT_CLASSIFICATION	wrap in try/catch for security exceptions in an applet
WITHOUT_CLASSIFICATION	add $rubylib paths
WITHOUT_CLASSIFICATION	empty paths do not need to be added
WITHOUT_CLASSIFICATION	"." dir is used for relative path loads from a given file as in require '../foo/bar'
WITHOUT_CLASSIFICATION	add 1.8 libs
WITHOUT_CLASSIFICATION	create package name by splitting on / and joining all but the last elements with a "." and downcasing them.
WITHOUT_CLASSIFICATION	library has already been loaded in some form bail out
WITHOUT_CLASSIFICATION	we don't want a package name beginning with dots so we remove them
WITHOUT_CLASSIFICATION	if there is a jar-file with the required name we add this to the class path.
WITHOUT_CLASSIFICATION	quietly try to load the class
WITHOUT_CLASSIFICATION	if there was a good library before we go back to that
WITHOUT_CLASSIFICATION	no library or extension found try to load directly as a class
WITHOUT_CLASSIFICATION	if an extension is specified try more targetted searches
WITHOUT_CLASSIFICATION	signed short big-endian
WITHOUT_CLASSIFICATION	source extensions
WITHOUT_CLASSIFICATION	we don't support .so but some stdlib require .so directly replace it with .jar to look for an extension type we do support
WITHOUT_CLASSIFICATION	this code exploits the fact that all .jar files will be found for the jarredscript feature. this is where the basic extension mechanism gets fixed
WITHOUT_CLASSIFICATION	make the class name look nice by splitting on _ and capitalize each segment then joining the together without anything separating them and last put on "service" at the end.
WITHOUT_CLASSIFICATION	it's _really_ expensive to check that the class actually exists in the jar so we don't do that now.
WITHOUT_CLASSIFICATION	trim extension to try other options
WITHOUT_CLASSIFICATION	extension extensions
WITHOUT_CLASSIFICATION	unknown extension fall back to search with extensions
WITHOUT_CLASSIFICATION	try all extensions
WITHOUT_CLASSIFICATION	if a source extension is specified try all source extensions
WITHOUT_CLASSIFICATION	unknown extension fall back to exact search
WITHOUT_CLASSIFICATION	try only literal search
WITHOUT_CLASSIFICATION	attempt to load the found library
WITHOUT_CLASSIFICATION	otherwise load the library we've found
WITHOUT_CLASSIFICATION	allow mainexitexception to propagate out for exec and friends
WITHOUT_CLASSIFICATION	remove any relative prefix e.g. "./foo/bar" becomes "foo/bar".
WITHOUT_CLASSIFICATION	check current directory if file exists retrieve url and return resource
WITHOUT_CLASSIFICATION	if a jar or file url return load service resource directly without further searching
WITHOUT_CLASSIFICATION	end suffix iteration
WITHOUT_CLASSIFICATION	if it's a ./ basename use cwd logic
WITHOUT_CLASSIFICATION	if given path is absolute just try it as-is (with extensions) and no load path
WITHOUT_CLASSIFICATION	we check length == 0 for 'load' which does not use load path
WITHOUT_CLASSIFICATION	we check length == 0 for 'load' which does not use load path
WITHOUT_CLASSIFICATION	it's an absolute path use it as-is
WITHOUT_CLASSIFICATION	it's an absolute path use it as-is
WITHOUT_CLASSIFICATION	prepend ./ if . is not already there since we're loading based on cwd
WITHOUT_CLASSIFICATION	prepend ./ if . is not already there since we're loading based on cwd
WITHOUT_CLASSIFICATION	actualpath = new file(rubyfile.expanduserpath(runtime.getcurrentcontext() reportedpath))
WITHOUT_CLASSIFICATION	handle security-sensitive case
WITHOUT_CLASSIFICATION	if entry is an empty string skip it
WITHOUT_CLASSIFICATION	if entry starts with a slash skip it since classloader resources never start with a /
WITHOUT_CLASSIFICATION	otherwise try to load from classpath (note jar resources always uses '/')
WITHOUT_CLASSIFICATION	make sure this is not a directory or unavailable in some way
WITHOUT_CLASSIFICATION	signed short native
WITHOUT_CLASSIFICATION	if we fail to find as a normal ruby script we try to find as an extension checking for a builtin first.
WITHOUT_CLASSIFICATION	write `i' instance var signet if class is not a direct subclass of object
WITHOUT_CLASSIFICATION	if name starts with a / we're done (classloader resources won't load with an initial /)
WITHOUT_CLASSIFICATION	look in classpath next (we do not use file as a test since unc names will match) note jar resources must never begin with an '/'. (previous code said "always begin with a /")
WITHOUT_CLASSIFICATION	directories and unavailable resources are not able to open a stream.
WITHOUT_CLASSIFICATION	try to load from classpath without prefix. "a/b.rb" will not load as "./a/b.rb" in a jar file.
WITHOUT_CLASSIFICATION	object has instance vars and isn't a class get a snapshot to be marshalled and output the ivar header here
WITHOUT_CLASSIFICATION	flush afer whole dump is complete
WITHOUT_CLASSIFICATION	write('s')
WITHOUT_CLASSIFICATION	switch on the object's native type. this allows use-defined classes that have extended core native types to piggyback on their marshalling logic.
WITHOUT_CLASSIFICATION	object is a custom class that extended one of the native types other than object
WITHOUT_CLASSIFICATION	we do not want to capture cached methods
WITHOUT_CLASSIFICATION	w_symbol
WITHOUT_CLASSIFICATION	w_unique
WITHOUT_CLASSIFICATION	call the proc but not for symbols
WITHOUT_CLASSIFICATION	major minor
WITHOUT_CLASSIFICATION	any ivars since we don't have __attached__ ivar now
WITHOUT_CLASSIFICATION	"hashdef" object a hash with a default
WITHOUT_CLASSIFICATION	all "c" marshalled objects descend from core classes which are all rubyobject
WITHOUT_CLASSIFICATION	sic
WITHOUT_CLASSIFICATION	if we're not the "argument scope" for zsuper try our parent
WITHOUT_CLASSIFICATION	if we're not the "argument scope" for zsuper try our parent
WITHOUT_CLASSIFICATION	if we're not the "argument scope" for zsuper try our parent
WITHOUT_CLASSIFICATION	copy and splat arguments out of the scope to use for zsuper call
WITHOUT_CLASSIFICATION	copy and splat arguments out of the scope to use for zsuper call
WITHOUT_CLASSIFICATION	rest arg must be splatted
WITHOUT_CLASSIFICATION	rest arg must be splatted
WITHOUT_CLASSIFICATION	if we are setting post arguments we can assume there are no pre or others
WITHOUT_CLASSIFICATION	xxx 0xffff0000 on be?
WITHOUT_CLASSIFICATION	unsigned short native
WITHOUT_CLASSIFICATION	int native long native
WITHOUT_CLASSIFICATION	if we're not the "argument scope" for zsuper try our parent
WITHOUT_CLASSIFICATION	if we're not the "argument scope" for zsuper try our parent
WITHOUT_CLASSIFICATION	if we're not the "argument scope" for zsuper try our parent
WITHOUT_CLASSIFICATION	copy and splat arguments out of the scope to use for zsuper call
WITHOUT_CLASSIFICATION	copy and splat arguments out of the scope to use for zsuper call
WITHOUT_CLASSIFICATION	copy and splat arguments out of the scope to use for zsuper call
WITHOUT_CLASSIFICATION	rest arg must be splatted
WITHOUT_CLASSIFICATION	rest arg must be splatted
WITHOUT_CLASSIFICATION	look for slash starting from 'start' position until 'end'.
WITHOUT_CLASSIFICATION	our values holder (name of variables are kept in staticscope)
WITHOUT_CLASSIFICATION	&foo are not getting set from somewherei want the following assert to be true though assert variablevalues[offset] != null "getting unassigned " + staticscope.getvariables()[offset]
WITHOUT_CLASSIFICATION	&foo are not getting set from somewherei want the following assert to be true though assert variablevalues[offset] != null "getting unassigned " + staticscope.getvariables()[offset]
WITHOUT_CLASSIFICATION	&foo are not getting set from somewherei want the following assert to be true though assert variablevalues[offset] != null "getting unassigned " + staticscope.getvariables()[offset]
WITHOUT_CLASSIFICATION	&foo are not getting set from somewherei want the following assert to be true though assert variablevalues[offset] != null "getting unassigned " + staticscope.getvariables()[offset]
WITHOUT_CLASSIFICATION	&foo are not getting set from somewherei want the following assert to be true though assert variablevalues[offset] != null "getting unassigned " + staticscope.getvariables()[offset]
WITHOUT_CLASSIFICATION	sunsignalfacade
WITHOUT_CLASSIFICATION	all braces pushed..
WITHOUT_CLASSIFICATION	failed try next recursion
WITHOUT_CLASSIFICATION	lefttoken made us start as nest 1
WITHOUT_CLASSIFICATION	are we at ''
WITHOUT_CLASSIFICATION	no or mismatched braces..move along..nothing to see here
WITHOUT_CLASSIFICATION	not enough bytes
WITHOUT_CLASSIFICATION	get index of last read byte
WITHOUT_CLASSIFICATION	skip inner braces
WITHOUT_CLASSIFICATION	process {}'s (example dir.glob("{jrubyjython}/readme")
WITHOUT_CLASSIFICATION	complete according to posix.2
WITHOUT_CLASSIFICATION	only accept an open brace if there is a close
WITHOUT_CLASSIFICATION	brace to match it. bracket expressions must be
WITHOUT_CLASSIFICATION	index of left-most brace index of right-most brace
WITHOUT_CLASSIFICATION	length check is a hack. we should not be reeiving "" as a filename ever.
WITHOUT_CLASSIFICATION	not reached here
WITHOUT_CLASSIFICATION	not reached here
WITHOUT_CLASSIFICATION	not reached here
WITHOUT_CLASSIFICATION	pickaxe says @ must be followed by a name character but mri does not require this.
WITHOUT_CLASSIFICATION	pickaxe says @@ must be followed by a name character but mri does not require this.
WITHOUT_CLASSIFICATION	simplesampler
WITHOUT_CLASSIFICATION	convert into longs returning unsigned 64-bit values as signed longs ( num2long raises a rangeerror on values > long.max_value )
WITHOUT_CLASSIFICATION	b64_xtable for decoding base 64
WITHOUT_CLASSIFICATION	single precision little-endian
WITHOUT_CLASSIFICATION	single precision big-endian
WITHOUT_CLASSIFICATION	single precision native
WITHOUT_CLASSIFICATION	single precision native single precision native
WITHOUT_CLASSIFICATION	double precision little-endian
WITHOUT_CLASSIFICATION	double precision big-endian
WITHOUT_CLASSIFICATION	double precision native
WITHOUT_CLASSIFICATION	signed short little-endian
WITHOUT_CLASSIFICATION	signed char
WITHOUT_CLASSIFICATION	unsigned char
WITHOUT_CLASSIFICATION	long little-endian
WITHOUT_CLASSIFICATION	long big-endian
WITHOUT_CLASSIFICATION	unsigned int native
WITHOUT_CLASSIFICATION	int native
WITHOUT_CLASSIFICATION	64-bit number native (as fixnum)
WITHOUT_CLASSIFICATION	how many occurrences of 'type' we want
WITHOUT_CLASSIFICATION	see if we have a converter for the job
WITHOUT_CLASSIFICATION	otherwise the unpack should be here
WITHOUT_CLASSIFICATION	possible checksum byte
WITHOUT_CLASSIFICATION	obtain a
WITHOUT_CLASSIFICATION	obtain b
WITHOUT_CLASSIFICATION	obtain c
WITHOUT_CLASSIFICATION	obtain d
WITHOUT_CLASSIFICATION	encode.limit() -
WITHOUT_CLASSIFICATION	1
WITHOUT_CLASSIFICATION	2
WITHOUT_CLASSIFICATION	3
WITHOUT_CLASSIFICATION	4
WITHOUT_CLASSIFICATION	5
WITHOUT_CLASSIFICATION	6
WITHOUT_CLASSIFICATION	7
WITHOUT_CLASSIFICATION	skip all whitespace in pack format string
WITHOUT_CLASSIFICATION	skip embedded comments in pack format string
WITHOUT_CLASSIFICATION	in case when the number of occurences is explicitly specified we have to read up the remaining garbage after the '\0' to satisfy the requested pattern.
WITHOUT_CLASSIFICATION	normal exit this should be faster than a test at each iterations for string with more than about 40 char
WITHOUT_CLASSIFICATION	we encountered '\0' when were reading the buffer above increment the number of read bytes.
WITHOUT_CLASSIFICATION	mri behavior contrary to what seems to be logical when '' is given mri calculates the distance to the end in order to go backwards.
WITHOUT_CLASSIFICATION	determine how many of type are needed (default 1)
WITHOUT_CLASSIFICATION	'z' adds extra null pad (versus 'a')
WITHOUT_CLASSIFICATION	if the low bit is set set the high bit of the result
WITHOUT_CLASSIFICATION	if the index is not a multiple of 8 we are not on a byte boundary shift the byte
WITHOUT_CLASSIFICATION	if the length is not a multiple of 8 we need to pad the last byte
WITHOUT_CLASSIFICATION	if the length is not a multiple of 8 we need to pad the last byte
WITHOUT_CLASSIFICATION	do some padding i don't understand the padding strategy
WITHOUT_CLASSIFICATION	we filled up current byte append it and create next one
WITHOUT_CLASSIFICATION	if the index is not a multiple of 8 we are not on a byte boundary
WITHOUT_CLASSIFICATION	this test may be too lax but it is the same as in mri
WITHOUT_CLASSIFICATION	we don't deal with negatives.
WITHOUT_CLASSIFICATION	populate commandline with ng-provided stuff
WITHOUT_CLASSIFICATION	are we recursing?
WITHOUT_CLASSIFICATION	snip off ruby or jruby command from list of arguments leave alone if the command is the name of a script
WITHOUT_CLASSIFICATION	default pidgetter
WITHOUT_CLASSIFICATION	ignore and try windows version
WITHOUT_CLASSIFICATION	ignore and use hashcode
WITHOUT_CLASSIFICATION	ignore and use hashcode
WITHOUT_CLASSIFICATION	ignore and use hashcode
WITHOUT_CLASSIFICATION	ignore and use hashcode
WITHOUT_CLASSIFICATION	try both
WITHOUT_CLASSIFICATION	just unix
WITHOUT_CLASSIFICATION	just windows
WITHOUT_CLASSIFICATION	neither
WITHOUT_CLASSIFICATION	con popen is a case where i think we should just always shell out.
WITHOUT_CLASSIFICATION	single string command pass to sh to expand wildcards
WITHOUT_CLASSIFICATION	direct invocation of the command
WITHOUT_CLASSIFICATION	break out if we've dug as deep as we can
WITHOUT_CLASSIFICATION	break out if we've dug as deep as we can
WITHOUT_CLASSIFICATION	close process output see jruby-3405 hooking up to parent process stdin caused problems for irb etc using stdin.
WITHOUT_CLASSIFICATION	ignore we're on the way out
WITHOUT_CLASSIFICATION	processes seem to have some peculiar locking sequences so we need to ensure nobody is trying to close/destroy while we are
WITHOUT_CLASSIFICATION	popen callers wants to be able to read provide subprocess in directly
WITHOUT_CLASSIFICATION	popen callers wants to be able to read provide subprocess in directly
WITHOUT_CLASSIFICATION	popen caller wants to be able to write provide subprocess out directly
WITHOUT_CLASSIFICATION	no read requested hook up read to parents output
WITHOUT_CLASSIFICATION	no read requested hook up read to parents output
WITHOUT_CLASSIFICATION	execute command with sh -c this does shell expansion of wildcards
WITHOUT_CLASSIFICATION	we need to close the out since some processes would just wait for the stream to be closed before they process its content and produce the output. e.g. "cat".
WITHOUT_CLASSIFICATION	we only close out if it's the slave stream to avoid closing a directly-mapped stream from parent process
WITHOUT_CLASSIFICATION	the assumption here is that the 'in' stream provides proper available() support. if available() always returns 0 we'll hang!
WITHOUT_CLASSIFICATION	force t3 to quit just in case if it's stuck. note on some platforms even interrupt might not have an effect if the thread is io blocked.
WITHOUT_CLASSIFICATION	check for special shell characters [<>|] at the beginning and end of each command word and don't run in process if we find them.
WITHOUT_CLASSIFICATION	note this method produces meaningful results only for rubyio objects. for everything else returns 0.
WITHOUT_CLASSIFICATION	sequential
WITHOUT_CLASSIFICATION	reverse the entire area of the array selected if it's reversed.
WITHOUT_CLASSIFICATION	do median of 7 if the array is over 200 elements.
WITHOUT_CLASSIFICATION	if it's less than 200 do median of 3
WITHOUT_CLASSIFICATION	signalfacade
WITHOUT_CLASSIFICATION	this is the order in which mri does these two tests
WITHOUT_CLASSIFICATION	this is the order in which mri does these tests
WITHOUT_CLASSIFICATION	basically just forcing a typeerror here to match mri
WITHOUT_CLASSIFICATION	not saving dfs instance as it will only be used once (at most) per call
WITHOUT_CLASSIFICATION	args
WITHOUT_CLASSIFICATION	static methods only
WITHOUT_CLASSIFICATION	system.err.println(" calculatelength()/str=" + str)
WITHOUT_CLASSIFICATION	mri 1.8.6 behavior null byte after '%' leads to "%" string. null byte in other places like "%5\0" leads to error.
WITHOUT_CLASSIFICATION	last index (+1) accessed by next() last index (+1) accessed by get()
WITHOUT_CLASSIFICATION	special form of sprintf that returns a rubystring and handles tainted strings correctly.
WITHOUT_CLASSIFICATION	special form of sprintf that returns a rubystring and handles tainted strings correctly. version for 1.9.
WITHOUT_CLASSIFICATION	mri doesn't flag it as an error if width is given multiple times as a number (but it does for )
WITHOUT_CLASSIFICATION	let the width (if any) get processed in the next loop so any leading 0 gets treated correctly
WITHOUT_CLASSIFICATION	mri 1.8.5-p12 doesn't support 1-char strings but yarv 0.4.1 does. i don't think it hurts to include this sprintf('%c''a') is nicer than sprintf('%c''a'[0])
WITHOUT_CLASSIFICATION	'd' and 'i' are the same
WITHOUT_CLASSIFICATION	'u' with space or plus flags is same as 'd'
WITHOUT_CLASSIFICATION	we depart here from strict adherence to mri code as mri uses c-sprintf in part to format numeric output while we'll use java's numeric formatting code (and our own).
WITHOUT_CLASSIFICATION	skip '-' in bytes will add where appropriate
WITHOUT_CLASSIFICATION	..
WITHOUT_CLASSIFICATION	the 1 is for the stripped sign char
WITHOUT_CLASSIFICATION	fixme what is correct 'recv' argument? (this does produce the desired behavior)
WITHOUT_CLASSIFICATION	gotta have at least a zero
WITHOUT_CLASSIFICATION	ok we now have the significand in digits[0ndigits] and the exponent in exponent. we're ready to format.
WITHOUT_CLASSIFICATION	intdigits isn't used here but if it were it would be 1
WITHOUT_CLASSIFICATION	intdigits = 1
WITHOUT_CLASSIFICATION	system.err.println(" stringtolong/reading c=" + data[s])
WITHOUT_CLASSIFICATION	system.err.println(" stringtolong/converted c=" + c)
WITHOUT_CLASSIFICATION	intdigits isn't used here but if it were it would be 1
WITHOUT_CLASSIFICATION	intdigits = 1
WITHOUT_CLASSIFICATION	precision for g/g includes integer digits
WITHOUT_CLASSIFICATION	deal with length/width
WITHOUT_CLASSIFICATION	deal with length/width
WITHOUT_CLASSIFICATION	first digit is always printed
WITHOUT_CLASSIFICATION	mri behavior be default 2 digits in the exponent. use 3 digits only when necessary. see comment for writeexp method for more details.
WITHOUT_CLASSIFICATION	5 -> e+nnn / e-nnn
WITHOUT_CLASSIFICATION	4 -> e+nn / e-nn
WITHOUT_CLASSIFICATION	in this mode '.' is always printed
WITHOUT_CLASSIFICATION	mri behavior in this mode trailing zeroes are removed 1.500e+05 -> 1.5e+05
WITHOUT_CLASSIFICATION	'.' is printed
WITHOUT_CLASSIFICATION	all precision numebers printed
WITHOUT_CLASSIFICATION	now some data
WITHOUT_CLASSIFICATION	'.'
WITHOUT_CLASSIFICATION	decimal form like (but not just like!) 'f'
WITHOUT_CLASSIFICATION	digits array shifted update all
WITHOUT_CLASSIFICATION	will have a trailing '.' g fills trailing zeroes if #
WITHOUT_CLASSIFICATION	s/b true since intlength > 0
WITHOUT_CLASSIFICATION	s/b true since intlength > 0
WITHOUT_CLASSIFICATION	always need at least a 0
WITHOUT_CLASSIFICATION	always need at least a 0
WITHOUT_CLASSIFICATION	digits arr shifted update all
WITHOUT_CLASSIFICATION	(1|intlen).prec
WITHOUT_CLASSIFICATION	(1|intlen)
WITHOUT_CLASSIFICATION	will have a trailing '.'
WITHOUT_CLASSIFICATION	fill up the rest with zeroes
WITHOUT_CLASSIFICATION	system.err.println(" main/len=" + len)
WITHOUT_CLASSIFICATION	5 -> e+nnn / e-nnn
WITHOUT_CLASSIFICATION	4 -> e+nn / e-nn
WITHOUT_CLASSIFICATION	now some data
WITHOUT_CLASSIFICATION	'.'
WITHOUT_CLASSIFICATION	equivalent to mri case '\0'
WITHOUT_CLASSIFICATION	'.' and all precision digits printed
WITHOUT_CLASSIFICATION	\v
WITHOUT_CLASSIFICATION	dangling '%' char
WITHOUT_CLASSIFICATION	main while loop (offset < length)
WITHOUT_CLASSIFICATION	debugging code keeping for now
WITHOUT_CLASSIFICATION	mri rounds up on nnn5nnn but not nnn5 -- except for when they do
WITHOUT_CLASSIFICATION	"%.0f" % 0.99
WITHOUT_CLASSIFICATION	limit the length of negatives if possible (also faster)
WITHOUT_CLASSIFICATION	negative values
WITHOUT_CLASSIFICATION	calculation for negatives when %u specified for values >= integer.min_value 2 mri uses (the equivalent of) long neg_u = (((long)integer.max_value + 1) << 1) + val for smaller values biginteger math is required to conform to mri's result.
WITHOUT_CLASSIFICATION	relatively cheap test for 32-bit values
WITHOUT_CLASSIFICATION	no such luck
WITHOUT_CLASSIFICATION	ok now it gets expensive
WITHOUT_CLASSIFICATION	go through negated powers of 32 until we find one small enough
WITHOUT_CLASSIFICATION	add to the corresponding positive power of 32 for the result. meaningful? no. conformant? yes. i just write the code
WITHOUT_CLASSIFICATION	constant vector a
WITHOUT_CLASSIFICATION	most significant w-r bits
WITHOUT_CLASSIFICATION	least significant r bits
WITHOUT_CLASSIFICATION	state[j] &= 0xffffffffl
WITHOUT_CLASSIFICATION	state[i] &= 0xffffffffl
WITHOUT_CLASSIFICATION	state[i] &= 0xffffffffl
WITHOUT_CLASSIFICATION	msb is 1 assuring non-zero initial array
WITHOUT_CLASSIFICATION	tempering
WITHOUT_CLASSIFICATION	mri behavior week values are monotonous. so weeks that effectively belong to previous year will get the value of 0 not 52 or 53 as in java.
WITHOUT_CLASSIFICATION	system.err.println("bytelisttoinum(" + str + ")")
WITHOUT_CLASSIFICATION	system.err.println("bytelisttoinum(" + str + ")")
WITHOUT_CLASSIFICATION	\v
WITHOUT_CLASSIFICATION	system.err.println("getsign()")
WITHOUT_CLASSIFICATION	system.err.println(" getsign/" + sign)
WITHOUT_CLASSIFICATION	system.err.println("figureoutbase()/base=" + base)
WITHOUT_CLASSIFICATION	system.err.println(" figureoutbase/base=" + base)
WITHOUT_CLASSIFICATION	system.err.println("calculatelength()/str=" + str)
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	system.err.println(" stringtolong=" + val)
WITHOUT_CLASSIFICATION	no number
WITHOUT_CLASSIFICATION	trailing garbage
WITHOUT_CLASSIFICATION	system.err.println("adding char " + (char)cx + " with number " + cx)
WITHOUT_CLASSIFICATION	it was not found at all!
WITHOUT_CLASSIFICATION	can be overridden to be informed when objects are removed
WITHOUT_CLASSIFICATION	we reached the end of a list
WITHOUT_CLASSIFICATION	goto next bucket
WITHOUT_CLASSIFICATION	we reached the end
WITHOUT_CLASSIFICATION	entry is the first element of this bucket
WITHOUT_CLASSIFICATION	states
WITHOUT_CLASSIFICATION	remove leading whitespace (includes _ for lax) get sign if any
WITHOUT_CLASSIFICATION	optimistic pass - calculate value as digits are processed digits - lax rules decimal digits - lax rules exponent sign/digits - lax rules digits - strict rules decimal digits - strict rules exponent sign/digits - strict rules complete calculation if possible
WITHOUT_CLASSIFICATION	fields used for direct (optimistic) calculation number of significant digits updated as parsed zeroes that may go to significand or exponent offset of decimal pt from start (-1 -> no decimal) significand updated as parsed exponent updated as parsed
WITHOUT_CLASSIFICATION	drop through for sign
WITHOUT_CLASSIFICATION	switch will use this if we have to go back the slow way
WITHOUT_CLASSIFICATION	drop through for non-strict digits
WITHOUT_CLASSIFICATION	first char must be digit or decimal point
WITHOUT_CLASSIFICATION	ignore leading zeroes switch
WITHOUT_CLASSIFICATION	no digits go calc (will return +/- 0.0 for lax)
WITHOUT_CLASSIFICATION	ignore leading zeroes
WITHOUT_CLASSIFICATION	just save a count of zeroes for now if no digit ends up following them they'll be applied to the exponent rather than the significand (and our max length for optimistic calc).
WITHOUT_CLASSIFICATION	ok got a non-zero have to own up to our horded zeroes
WITHOUT_CLASSIFICATION	else catch oversize below
WITHOUT_CLASSIFICATION	else catch oversize below
WITHOUT_CLASSIFICATION	oh well it was worth a try. go let double/floatingdecimal handle it
WITHOUT_CLASSIFICATION	ignore switch
WITHOUT_CLASSIFICATION	ignore switch
WITHOUT_CLASSIFICATION	end of parseable data go to calc
WITHOUT_CLASSIFICATION	end of parseable data go to calc
WITHOUT_CLASSIFICATION	switch for
WITHOUT_CLASSIFICATION	first non_underscore char must be digit
WITHOUT_CLASSIFICATION	no dec digits end of parseable data go to calc
WITHOUT_CLASSIFICATION	switch if
WITHOUT_CLASSIFICATION	difficult case send to double/floatingdecimal
WITHOUT_CLASSIFICATION	block
WITHOUT_CLASSIFICATION	block
WITHOUT_CLASSIFICATION	first char must be digit or decimal point
WITHOUT_CLASSIFICATION	first char must be digit or decimal point
WITHOUT_CLASSIFICATION	first char must be digit or decimal point
WITHOUT_CLASSIFICATION	ignore leading zeroes switch
WITHOUT_CLASSIFICATION	else catch oversize below
WITHOUT_CLASSIFICATION	else catch oversize below
WITHOUT_CLASSIFICATION	else catch oversize below
WITHOUT_CLASSIFICATION	switch for
WITHOUT_CLASSIFICATION	switch for
WITHOUT_CLASSIFICATION	switch for
WITHOUT_CLASSIFICATION	switch if
WITHOUT_CLASSIFICATION	switch if
WITHOUT_CLASSIFICATION	lax (str.to_f) allows underscores between e/e and sign
WITHOUT_CLASSIFICATION	switch for no exponent so drop through for calculation
WITHOUT_CLASSIFICATION	switch for no more data ok for strict to go calc
WITHOUT_CLASSIFICATION	todo it's not clear to me why in floatingdecimal the "slop" calculation performed above for positive exponents isn't used for negative exponents as well. will find out
WITHOUT_CLASSIFICATION	no digits error
WITHOUT_CLASSIFICATION	too big for us
WITHOUT_CLASSIFICATION	too big for us
WITHOUT_CLASSIFICATION	must be at least one digit for strict
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	only whitespace allowed after value for strict
WITHOUT_CLASSIFICATION	only whitespace allowed after value for strict
WITHOUT_CLASSIFICATION	only whitespace allowed after value for strict
WITHOUT_CLASSIFICATION	first char must be digit
WITHOUT_CLASSIFICATION	no dec digits after '.' error for strict
WITHOUT_CLASSIFICATION	ignore leading zeroes switch
WITHOUT_CLASSIFICATION	switch for
WITHOUT_CLASSIFICATION	switch for
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	only whitespace allowed after value for strict
WITHOUT_CLASSIFICATION	must be at least one digit for strict
WITHOUT_CLASSIFICATION	copy out any buffered bytes
WITHOUT_CLASSIFICATION	switch while
WITHOUT_CLASSIFICATION	all the positive powers of 10 that can be represented exactly in double/float. (from sun.misc.floatingdecimal.java)
WITHOUT_CLASSIFICATION	zlib behavior negative win_bits means no header and no checksum.
WITHOUT_CLASSIFICATION	rb_enc_mbclen
WITHOUT_CLASSIFICATION	rb_enc_precise_mbclen
WITHOUT_CLASSIFICATION	utf8 lead byte
WITHOUT_CLASSIFICATION	arg cannot be negative
WITHOUT_CLASSIFICATION	nofunctionalitysignalfacade
WITHOUT_CLASSIFICATION	change visibility so others can see it
WITHOUT_CLASSIFICATION	could not get canonical path just use given path
WITHOUT_CLASSIFICATION	strip off "_dot_rb" for .rb files
WITHOUT_CLASSIFICATION	makes sure the key is not already in the hashtable.
WITHOUT_CLASSIFICATION	rehash the table if the threshold is exceeded
WITHOUT_CLASSIFICATION	creates the new entry.
WITHOUT_CLASSIFICATION	next entry to return current slot current entry
WITHOUT_CLASSIFICATION	advance to first entry
WITHOUT_CLASSIFICATION	the reason why we need the stream is to be able to invoke available() on it. stdin in java is non-interruptible non-selectable and attempt to read on such stream might lead to thread being blocked without any way to unblock it. that's where available() comes it so at least we could check whether anything is available to be read without blocking.
WITHOUT_CLASSIFICATION	package-protected
WITHOUT_CLASSIFICATION	raw file url just open directly
WITHOUT_CLASSIFICATION	we always open this rw since we can only open it r or rw.
WITHOUT_CLASSIFICATION	if refcount is at or below zero we're no longer valid
WITHOUT_CLASSIFICATION	if channel is already closed we're no longer valid
WITHOUT_CLASSIFICATION	otherwise decrement and possibly close as normal
WITHOUT_CLASSIFICATION	r/w buffer are we reading or writing?
WITHOUT_CLASSIFICATION	this constructor is used by fdopen so we don't increment descriptor ref count
WITHOUT_CLASSIFICATION	unread back
WITHOUT_CLASSIFICATION	iterate over remainder of buffer until we find a match
WITHOUT_CLASSIFICATION	terminate and advance buffer when we find our char
WITHOUT_CLASSIFICATION	no match append remainder of buffer and continue with next block
WITHOUT_CLASSIFICATION	found a match above check if remaining separator characters match appending as we go
WITHOUT_CLASSIFICATION	check file size - special files in /proc have zero size and need to be handled by the generic read path.
WITHOUT_CLASSIFICATION	copy any buffered data (including ungetc byte)
WITHOUT_CLASSIFICATION	now read unbuffered directly from the file
WITHOUT_CLASSIFICATION	copy out any buffered bytes
WITHOUT_CLASSIFICATION	need to clamp source (buffer) size to avoid overrun
WITHOUT_CLASSIFICATION	not closing from finalize
WITHOUT_CLASSIFICATION	clear runtime so it doesn't get stuck in memory (jruby-2933)
WITHOUT_CLASSIFICATION	silence
WITHOUT_CLASSIFICATION	silence
WITHOUT_CLASSIFICATION	don't bother
WITHOUT_CLASSIFICATION	don't bother
WITHOUT_CLASSIFICATION	for sockets only write as much as will fit.
WITHOUT_CLASSIFICATION	correct position for read / write buffering (we could invalidate but expensive)
WITHOUT_CLASSIFICATION	adjust for buffered data
WITHOUT_CLASSIFICATION	for seek_cur need to adjust for buffered data
WITHOUT_CLASSIFICATION	libc flushes writes on any read from the actual file so we flush here
WITHOUT_CLASSIFICATION	we have read ahead and need to back up
WITHOUT_CLASSIFICATION	128k seems to be the minimum at which the stat+seek is faster than reallocation
WITHOUT_CLASSIFICATION	limit each iteration to a max of bulk_read_size to avoid over-size allocations
WITHOUT_CLASSIFICATION	append what we read into our buffer and allow the loop to continue
WITHOUT_CLASSIFICATION	copy what is in the buffer if there is some buffered data
WITHOUT_CLASSIFICATION	avoid double-copying for reads that are larger than the buffer size
WITHOUT_CLASSIFICATION	complete the request by filling the read buffer first
WITHOUT_CLASSIFICATION	complete the request by filling the read buffer first
WITHOUT_CLASSIFICATION	avoid double-copying for reads that are larger than the buffer size or the destination is a direct buffer.
WITHOUT_CLASSIFICATION	we limit reads to bulk_read_sized chunks to avoid nio allocating a huge temporary native buffer when doing reads into a heap buffer if the dst buffer is direct then no need to limit.
WITHOUT_CLASSIFICATION	ruby ignores empty syswrites
WITHOUT_CLASSIFICATION	ruby ignores empty syswrites
WITHOUT_CLASSIFICATION	doesn't fit in buffer. write immediately. ensure nothing left to write
WITHOUT_CLASSIFICATION	truncate can't lengthen files so we save position seek/write and go back
WITHOUT_CLASSIFICATION	how far ahead we are when reading
WITHOUT_CLASSIFICATION	if the read buffer is ahead back up
WITHOUT_CLASSIFICATION	close without removing from finalizers
WITHOUT_CLASSIFICATION	putting a bit back so we're not at eof anymore
WITHOUT_CLASSIFICATION	save the ungot
WITHOUT_CLASSIFICATION	otherwise we try an unbuffered read to get whatever's available
WITHOUT_CLASSIFICATION	ignore this select() will set the correct mode when it is finished
WITHOUT_CLASSIFICATION	flush first
WITHOUT_CLASSIFICATION	wake up any channels that became unblocked
WITHOUT_CLASSIFICATION	register any new blocking i/o requests
WITHOUT_CLASSIFICATION	now clear out any previously selected channels
WITHOUT_CLASSIFICATION	wait for i/o on any channel
WITHOUT_CLASSIFICATION	do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'
WITHOUT_CLASSIFICATION	java requires "w" for creating a file that does not exist
WITHOUT_CLASSIFICATION	seek to force underlying buffer to flush
WITHOUT_CLASSIFICATION	seek to force read buffer to invalidate
WITHOUT_CLASSIFICATION	result = eval("arr = array['c' 200] p arr") assertequals("[\"c\" 200]" result) result = eval("arr = array.['d' 200] p arr") assertequals("[\"d\" 200]" result)
WITHOUT_CLASSIFICATION	mri ignores seek errors presumably for unseekable files like serial ports (jruby-2979) so we shall too.
WITHOUT_CLASSIFICATION	todo ruby logic is somewhat more complicated here see comments after
WITHOUT_CLASSIFICATION	make sure the pipe stream is set to null
WITHOUT_CLASSIFICATION	make sure the main stream is set to null
WITHOUT_CLASSIFICATION	first try our custom-generated unsafe
WITHOUT_CLASSIFICATION	then try sun's unsafe
WITHOUT_CLASSIFICATION	if we get here the class and field exist construct our unsafe impl that calls it directly
WITHOUT_CLASSIFICATION	else leave it null
WITHOUT_CLASSIFICATION	typematcher
WITHOUT_CLASSIFICATION	this is now needed since module java isn't in by default
WITHOUT_CLASSIFICATION	iterate over the rubyhash keyset simultaneously iterating over the values()
WITHOUT_CLASSIFICATION	get the value from the map via the key
WITHOUT_CLASSIFICATION	get the value from the map via the values iterator
WITHOUT_CLASSIFICATION	check the 2 values obtained via different means
WITHOUT_CLASSIFICATION	set a value in the rubyhash
WITHOUT_CLASSIFICATION	set a value in the rubyhash
WITHOUT_CLASSIFICATION	check the entry.setvalue values come back out ok
WITHOUT_CLASSIFICATION	if we're running from within an ide we may not have the .rb files in our classpath. try to find them in the filesystem instead.
WITHOUT_CLASSIFICATION	assertequals("\"foo\"\n\"bar\"" eval("$h.each {|val| p val}")) assertequals("[\"foo\" \"bar\"]" eval("p $h.each {|val| }"))
WITHOUT_CLASSIFICATION	init
WITHOUT_CLASSIFICATION	block
WITHOUT_CLASSIFICATION	copy constructor
WITHOUT_CLASSIFICATION	presumably this require should fail
WITHOUT_CLASSIFICATION	jruby-646 presumably this require should fail
WITHOUT_CLASSIFICATION	test that requiring a normal java class raises an error (jruby-3214
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	function not usedbut it gets rid of unused warnings in eclipse (we do call those methods from ruby so they are not really unused).
WITHOUT_CLASSIFICATION	load should work several times in a row
WITHOUT_CLASSIFICATION	reset the $loadtestvar
WITHOUT_CLASSIFICATION	call throwexception via jruby
WITHOUT_CLASSIFICATION	notify the calling thread that we're about to go to sleep the first time
WITHOUT_CLASSIFICATION	wait for the go signal
WITHOUT_CLASSIFICATION	run ten separate calls into ruby with delay and explicit gc
WITHOUT_CLASSIFICATION	wait until thread has initialized
WITHOUT_CLASSIFICATION	notify thread to proceed
WITHOUT_CLASSIFICATION	wait until thread has completed
WITHOUT_CLASSIFICATION	we do preand post load outside the "body" versions to pre-prepare and pre-push the dynamic scope we need for lastline
WITHOUT_CLASSIFICATION	out of byte range there will be no match for sure
WITHOUT_CLASSIFICATION	mri behavior raise argumenterror for 'unknown command' before checking number of args.
WITHOUT_CLASSIFICATION	if any exceptions were raised we fail
WITHOUT_CLASSIFICATION	there should only be one more thread in thread group than before we started
WITHOUT_CLASSIFICATION	construct a new cache with thread's classloader and no limit
WITHOUT_CLASSIFICATION	class<?> script1 = ((defaultmethod) runtime1.getobject().getmethods().get("foo")).getjitcompilerscript().getclass() class<?> script2 = ((defaultmethod) runtime2.getobject().getmethods().get("foo")).getjitcompilerscript().getclass()
WITHOUT_CLASSIFICATION	assertsame(script1 script2)
WITHOUT_CLASSIFICATION	void methods should work
WITHOUT_CLASSIFICATION	methods with required = 4 or higher should bind and be callable using reflection jruby-3649
WITHOUT_CLASSIFICATION	since we don't have any other error reporting mechanism we add the error message as an always-failing test to the test suite.
WITHOUT_CLASSIFICATION	ensure we have a new interpreter for each test. previous we were using the same interpreter which caused problems as soon as one test failed.
WITHOUT_CLASSIFICATION	without a flush ant will miss some of our output
WITHOUT_CLASSIFICATION	asserttrue(rubyobject.kind_of(ruby.getclasses().getstringclass()).isfalse())
WITHOUT_CLASSIFICATION	int n = 10
WITHOUT_CLASSIFICATION	there might be more test classes in a single file so we iterate over them
WITHOUT_CLASSIFICATION	no classcastexception!
WITHOUT_CLASSIFICATION	value equality
WITHOUT_CLASSIFICATION	identity equality
WITHOUT_CLASSIFICATION	bench straight-up integer fib(30)
WITHOUT_CLASSIFICATION	bench integer fib
WITHOUT_CLASSIFICATION	bench fully-boxed fib
WITHOUT_CLASSIFICATION	bench fully-boxed fib
WITHOUT_CLASSIFICATION	bench fixnum-boxed fib
WITHOUT_CLASSIFICATION	bench straight-up long fib(30)
WITHOUT_CLASSIFICATION	bench long fib
WITHOUT_CLASSIFICATION	skip this one probably no 'ls' (windows)
WITHOUT_CLASSIFICATION	start off with a neutral parent
WITHOUT_CLASSIFICATION	public class hello { public static string getmessage() { return ".." } }
WITHOUT_CLASSIFICATION	in method body with no containing loop issue jump error load runtime and value issue jump error
WITHOUT_CLASSIFICATION	note we can't use file.exists() to check whether the symlink exists or not because that method returns false for existing but broken symlink. so we try without the existence check but in the try-catch block. mri behavior symlink? on broken symlink should return true.
WITHOUT_CLASSIFICATION	we are creating a new io object that shares the same iohandler (and fileno).
WITHOUT_CLASSIFICATION	a while node could receive non-local flow control from any of these a closure within the loop an eval within the loop a block-arg-based proc called within the loop
WITHOUT_CLASSIFICATION	[irubyobject] [irubyobject irubyobject] [irubyobject rubyclass] [irubyobject rubyclass rubyclass] [irubyobject rubyclass visibility] [irubyobject rubyclass visibility visibility]
WITHOUT_CLASSIFICATION	select appropriate call site dup receiver load self
WITHOUT_CLASSIFICATION	translate "x || y" --> "x = (is_true(x) ? x y)" --> x = -- build(x) should return a variable! -- f = is_true(x) beq(f true l) x = -- build(y) -- l
WITHOUT_CLASSIFICATION	force the client socket to be blocking
WITHOUT_CLASSIFICATION	additional context surrounding tokens that both the lexer and grammar use.
WITHOUT_CLASSIFICATION	enebo c can never be antrhign but '.' why did i put this here?
WITHOUT_CLASSIFICATION	save package module as ivar in parent and add method to parent so we don't have to come back here.
WITHOUT_CLASSIFICATION	[cc] [c boolean]
WITHOUT_CLASSIFICATION	label for the start of the closure (used to implement redo) label for the end of the closure (used to implement retry)
WITHOUT_CLASSIFICATION	ignore job was cancelled fixme is this ok?
WITHOUT_CLASSIFICATION	check arity checkarity(mv scope)
WITHOUT_CLASSIFICATION	rethrow exception rethrow it
WITHOUT_CLASSIFICATION	we take the first method found as our "n" method since for any non-specific arity they'll all error the same. if an actual "n" method is created we use that.
WITHOUT_CLASSIFICATION	used by our duck-typification of proc into interface types to allow coercing a simple proc into an interface parameter.
WITHOUT_CLASSIFICATION	proxy is under construction building thread can safely read non-volatile value
WITHOUT_CLASSIFICATION	it's either as converted as we can make it via above logic or it's not one of the types we convert so just pass it out as-is without wrapping
WITHOUT_CLASSIFICATION	package scheme 2 separate module for each full package name constructed from the camel-cased package segments javajavalangobject
WITHOUT_CLASSIFICATION	construct the proxy method
WITHOUT_CLASSIFICATION	line 159 "-" %token constants
WITHOUT_CLASSIFICATION	+++ helper methods
WITHOUT_CLASSIFICATION	line 152 "-" %token constants
WITHOUT_CLASSIFICATION	initial size state stack value stack current input #tokens to shift
WITHOUT_CLASSIFICATION	+++ helper methods
WITHOUT_CLASSIFICATION	we only need to pass in current scope if we are evaluating as a block (which is only done for evals). we need to pass this in so that we can appropriately scope down to captured scopes when we are parsing.
WITHOUT_CLASSIFICATION	let the width (if any) get processed in the next loop so any leading 0 gets treated correctly
WITHOUT_CLASSIFICATION	a place to store that special hiding space that bindings need to implement things like eval("a = 1" binding) eval("p a"). all binding instances must get access to this hidden shared scope. we store it here. this will be null if no binding has yet been called.
WITHOUT_CLASSIFICATION	todo make it 16 now ? must be power of 2!
WITHOUT_CLASSIFICATION	check visibility dup method
WITHOUT_CLASSIFICATION	&foo are not getting set from somewherei want the following assert to be true though assert variablevalues[offset] != null "getting unassigned " + staticscope.getvariables()[offset]
WITHOUT_CLASSIFICATION	unsigned int native unsigned long native
WITHOUT_CLASSIFICATION	need padding i'm fairly sure there is a library call to create a string filled with a given char with a given length but i couldn't find it
WITHOUT_CLASSIFICATION	mri behavior be default 2 digits in the exponent. use 3 digits only when necessary. see comment for writeexp method for more details.
WITHOUT_CLASSIFICATION	mri ignores seek errors presumably for unseekable files like serial ports (jruby-2979) so we shall too.
WITHOUT_CLASSIFICATION	switch for no more data ok for strict to go calc
WITHOUT_CLASSIFICATION	a scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.
WITHOUT_CLASSIFICATION	estimate the square root with the foremost 62 bits of squard bi and scale are a tandem
WITHOUT_CLASSIFICATION	captures begin and end are used when not groups defined source string
WITHOUT_CLASSIFICATION	instance variable ruby methods
WITHOUT_CLASSIFICATION	switch while
WITHOUT_CLASSIFICATION	for nodes do not have their own scope so we pass null to indicate this. 'for's are implemented as blocks in evaluation but they have no scope so we just deal with this lack of scope throughout its lifespan. we should probably change the way this works to get rid of multiple null checks.
WITHOUT_CLASSIFICATION	this field is used during argument processing to avoid putting rubyarray instances that are purely for utility purposes into objectspace.
WITHOUT_CLASSIFICATION	parent container for this context (can be dynamic!!) if dynamic at runtime this will be the meta-object corresponding to a class/script/module/method/closure list of ir instructions for this method
WITHOUT_CLASSIFICATION	translate "ret = (a && b)" --> "ret = (a ? b false)" --> v1 = -- build(a) -- opt ret can be set to v1 but effectively v1 is false if we take the branch to l. while this info can be inferred by using attributes why bother if we can do this? ret = false beq(v1 false l) v2 = -- build(b) -- ret = v2 l
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	constructor
WITHOUT_CLASSIFICATION	if a line is followed by a blank line put it back.
WITHOUT_CLASSIFICATION	$> default output handle
WITHOUT_CLASSIFICATION	line 423
WITHOUT_CLASSIFICATION	line 486
WITHOUT_CLASSIFICATION	signal uses sun.misc. classes this is not allowed in the security-sensitive environments
WITHOUT_CLASSIFICATION	re-register since fileno points at something new now
WITHOUT_CLASSIFICATION	produce a nicer error since rubyists aren't used to seeing this
WITHOUT_CLASSIFICATION	produce a nicer error since rubyists aren't used to seeing this
WITHOUT_CLASSIFICATION	colon3 assign in object
WITHOUT_CLASSIFICATION	if there's no receiver evaluate and pass in the superclass or pass self if it no superclass
WITHOUT_CLASSIFICATION	wire up function#call(args) to use the super-fast native invokers
WITHOUT_CLASSIFICATION	todo varargs?
WITHOUT_CLASSIFICATION	todo varargs?
WITHOUT_CLASSIFICATION	todo varargs?
WITHOUT_CLASSIFICATION	todo varargs?
WITHOUT_CLASSIFICATION	decrease value to hit upper range.
WITHOUT_CLASSIFICATION	assign to appropriate variable
WITHOUT_CLASSIFICATION	"else" body
WITHOUT_CLASSIFICATION	done done done nothing to do for 1.8 done done done done done done done? done done done done done done done done done done done case definednode return builddefined(node m) incomplete done done done done done done done done case ensurenode return buildensurenode(node m) deferred done done done done case flipnode return buildflip(node m) sss fixme what code generates this ast? done done done done done done done done done done done done done done done done done done? done done done done done done -- partially case opelementasgnnode return buildopelementasgn(node m) deferred sss fixme what code generates this ast? done case postexenode return buildpostexe(node m) deferred case preexenode return buildpreexe(node m) deferred done?? done
WITHOUT_CLASSIFICATION	read-volatile
WITHOUT_CLASSIFICATION	$+ string matches last paren.
WITHOUT_CLASSIFICATION	should alter global state
WITHOUT_CLASSIFICATION	should alter global state
WITHOUT_CLASSIFICATION	ruby code frequently uses a platform check to choose "nul" on windows but since that check doesn't work well on jruby we help it out
WITHOUT_CLASSIFICATION	10!
WITHOUT_CLASSIFICATION	case rescuenode return buildrescue(node m) deferred case retrynode return buildretry(node m) deferred done
WITHOUT_CLASSIFICATION	is this instruction live or dead? during optimization passes if this instruction causes no side-effects and the result of the instruction is not needed by anyone else we can remove this instruction altogether without affecting program correctness.
WITHOUT_CLASSIFICATION	all these types are immediately considered "defined"
WITHOUT_CLASSIFICATION	first iterate over all required args
WITHOUT_CLASSIFICATION	determine if the parameter might be passed as a 32bit int parameter. this just applies to buffer/pointer types.
WITHOUT_CLASSIFICATION	keyword keyword = keyword.getkeyword(tempval tempval.length())
WITHOUT_CLASSIFICATION	yylhs 496
WITHOUT_CLASSIFICATION	yylhs 496
WITHOUT_CLASSIFICATION	initial size state stack value stack current input #tokens to shift
WITHOUT_CLASSIFICATION	line 449
WITHOUT_CLASSIFICATION	line 495
WITHOUT_CLASSIFICATION	management/monitoring
WITHOUT_CLASSIFICATION	if we've found the last char of the separator and we've found at least as many characters as separator length and the last n characters of our buffer match the separator we're done
WITHOUT_CLASSIFICATION	14!
WITHOUT_CLASSIFICATION	process any set of annotations no supported options
WITHOUT_CLASSIFICATION	add to the jitted methods set
WITHOUT_CLASSIFICATION	extract item from array
WITHOUT_CLASSIFICATION	extract item from array
WITHOUT_CLASSIFICATION	case sclassnode return buildsclass(node m) deferred done done done done done done done done case undefnode return buildundef(node m) deferred done case valiasnode return buildvalias(node m) deferred done done
WITHOUT_CLASSIFICATION	adding a post-invoke for the cb result serves to both keep it alive until after the function returns and allows us to clean up the native trampoline early instead of letting them accumulate until a gc run
WITHOUT_CLASSIFICATION	the java method doesn't care what class it is but we need to know what to convert it to so we use the object's own class. if that doesn't help we use string to force a call to the object's "to_s" method.
WITHOUT_CLASSIFICATION	index for the item
WITHOUT_CLASSIFICATION	atomic integers for symbol and method ids
WITHOUT_CLASSIFICATION	18!
WITHOUT_CLASSIFICATION	if we have more than one arg make sure the array created to contain them is not objectspaced
WITHOUT_CLASSIFICATION	set up a local iruby variable
WITHOUT_CLASSIFICATION	set up a local iruby variable
WITHOUT_CLASSIFICATION	set up a local iruby variable
WITHOUT_CLASSIFICATION	set up a local iruby variable
WITHOUT_CLASSIFICATION	note if 's' happens to the a class this is effectively an assignment of a class instance variable
WITHOUT_CLASSIFICATION	this method takes as input a map of operands to their values and outputs the result of this instruction. if the value map provides a value for any of the instruction's operands the expectation is that the operand will be replaced with the simplified value. it is not required that it do so -- code correctness is not compromised by failure to simplify. @param valuemap mapping from operands to their simplified values @returns simplified result / output of this instruction
WITHOUT_CLASSIFICATION	can't support the rest with java
WITHOUT_CLASSIFICATION	an atomic long for generating dynamicmethod serial numbers
WITHOUT_CLASSIFICATION	mri behavior always check whether the file is writable or not even if we are to write 0 bytes.
WITHOUT_CLASSIFICATION	22!
WITHOUT_CLASSIFICATION	attribute set.
WITHOUT_CLASSIFICATION	grab nil for local variables
WITHOUT_CLASSIFICATION	grab nil for local variables
WITHOUT_CLASSIFICATION	grab nil for local variables
WITHOUT_CLASSIFICATION	fill in all vars with nil so compiler is happy about future accesses
WITHOUT_CLASSIFICATION	build a new class and add it to the current scope (could be a script / module / class)
WITHOUT_CLASSIFICATION	---------- these methods below are used during compile-time optimizations -------
WITHOUT_CLASSIFICATION	---------- these methods below are used during compile-time optimizations -------
WITHOUT_CLASSIFICATION	af_inet
WITHOUT_CLASSIFICATION	now we provide default impls of a number of signatures. for each arity we first generate a non-block version of the method which just adds null_block and re-calls allowing e.g. compiled code which always can potentially take a block to only generate the block-receiving signature and still avoid arg boxing. we then provide default implementations of each block-accepting method that in turn call the irubyobject[]+block version of call. this then finally falls back on the minimum implementation requirement for dynamic method handles.
WITHOUT_CLASSIFICATION	because we implement java interfaces now we need a new === that's aware of those additional "virtual" supertypes
WITHOUT_CLASSIFICATION	base64
WITHOUT_CLASSIFICATION	note nemes_gamma can return double.positive_infinity or double.negative_infinity when value is an integer less than 1. we treat 0 as a special case to avoid domain error.
WITHOUT_CLASSIFICATION	element set
WITHOUT_CLASSIFICATION	visit a label to start scoping for local vars in this method
WITHOUT_CLASSIFICATION	visit a label to start scoping for local vars in this method
WITHOUT_CLASSIFICATION	temp locals must start after last real local
WITHOUT_CLASSIFICATION	sss looks like we receive the arg in buildblockargsassignment via the iternode we won't get here for argument receives! so builddasgn is called for assignments to block variables within a block. as far as the ir is concerned this is just a simple copy
WITHOUT_CLASSIFICATION	getsimplifiedoperand returns the value of this operand fully simplified getsimplifiedoperand returns the operand in a form that can be materialized into bytecode if it cannot be completely optimized away the value is used during optimizations and propagated through the ir. but it is thrown away after that. but the operand form is used for constructing the compound objects represented by the operand. example a = [1] b = [34] c = [ab] d = [2c] -- getvalue(c) = [1[34]] getsimplifiedoperand(c) = [1 b] -- getvalue(d) = [2[1[34]]] getsimplifiedoperand(d) = [2 c] note that abcd are all objects and c has a reference to objects a and b and d has a reference to c. so if contents of a or b is modified the "simplified value"s of c and d also change! this difference is captured by these two methods.
WITHOUT_CLASSIFICATION	irubyobject protocol = args[4]
WITHOUT_CLASSIFICATION	promise to implement three to n with block
WITHOUT_CLASSIFICATION	ruby's omg capture all source in a hash feature add each line to buffer when encountering newline or eof for first time.
WITHOUT_CLASSIFICATION	carriage return
WITHOUT_CLASSIFICATION	yydgoto 136
WITHOUT_CLASSIFICATION	discarding a token does not change stack
WITHOUT_CLASSIFICATION	string construction routines by not byte[] buffer and making the target string shared
WITHOUT_CLASSIFICATION	insert all nodes in sequence hash them in the final instruction key
WITHOUT_CLASSIFICATION	return last value from execution
WITHOUT_CLASSIFICATION	we append an index to ensure two identical method names will not conflict
WITHOUT_CLASSIFICATION	basic block id cfg that this basic block belongs to all basic blocks have a starting label list of non-label instructions
WITHOUT_CLASSIFICATION	otherwise one key has been selected (ours) so we get the channel and hand it off
WITHOUT_CLASSIFICATION	for all uninitialized specific arities we defer to the "n" method which should raise appropriate error in all cases.
WITHOUT_CLASSIFICATION	implement is called to force this class to create stubs for all methods in the given interface so they'll show up in the list of methods and be invocable without passing through method_missing
WITHOUT_CLASSIFICATION	case ir instructions are dummy instructions -- all when/then clauses have been converted into if-then-else blocks
WITHOUT_CLASSIFICATION	check arity in the variable-arity version
WITHOUT_CLASSIFICATION	leave it null and fall back on our normal invocation logic
WITHOUT_CLASSIFICATION	build closure body and return the result of the closure
WITHOUT_CLASSIFICATION	for each simple method name implement the complex methods calling the simple version
WITHOUT_CLASSIFICATION	need to initialize
WITHOUT_CLASSIFICATION	need to initialize
WITHOUT_CLASSIFICATION	need to initialize
WITHOUT_CLASSIFICATION	need to initialize
WITHOUT_CLASSIFICATION	need to initialize
WITHOUT_CLASSIFICATION	need to initialize
WITHOUT_CLASSIFICATION	need to initialize
WITHOUT_CLASSIFICATION	need to initialize
WITHOUT_CLASSIFICATION	install direct java methods with mangled name so 'send' can call them directly.
WITHOUT_CLASSIFICATION	fall through
WITHOUT_CLASSIFICATION	deal with case when "other" is not a string
WITHOUT_CLASSIFICATION	all errors to sysread should be systemcallerrors but on a closed stream ruby returns an ioerror. java throws same exception for all errors so we resort to this hack
WITHOUT_CLASSIFICATION	in method body with no containing loop issue jump error load runtime and value issue jump error
WITHOUT_CLASSIFICATION	in method body with no containing loop issue jump error load runtime and value issue jump error
WITHOUT_CLASSIFICATION	store argument count information into scope
WITHOUT_CLASSIFICATION	the load method is used for loading as a top-level script and prepares appropriate scoping around the code
WITHOUT_CLASSIFICATION	first build assignments for specific named arguments
WITHOUT_CLASSIFICATION	public object invoke(object receiver object arg0 object arg1 object arg2 object arg3) { throw fail() } public object invoke(object receiver object arg0 object arg1 object arg2 object arg3 object arg4) { throw fail() }
WITHOUT_CLASSIFICATION	get current context
WITHOUT_CLASSIFICATION	octal constant
WITHOUT_CLASSIFICATION	read
WITHOUT_CLASSIFICATION	this really needs to be inlined here
WITHOUT_CLASSIFICATION	it doesn't handle special cases
WITHOUT_CLASSIFICATION	if reciever is self then we do the call the same way as vcall
WITHOUT_CLASSIFICATION	if reciever is self then we do the call the same way as vcall
WITHOUT_CLASSIFICATION	if reciever is self then we do the call the same way as vcall
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	ignore we won't use invokedynamic
WITHOUT_CLASSIFICATION	at end
WITHOUT_CLASSIFICATION	bang true no match no substitution
WITHOUT_CLASSIFICATION	save blocking state
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	invoke static __file__
WITHOUT_CLASSIFICATION	rest of the argument array!
WITHOUT_CLASSIFICATION	fall back on empty env when security disallows environment var access (like in an applet)
WITHOUT_CLASSIFICATION	undefinedmethod should be immutable
WITHOUT_CLASSIFICATION	undefinedmethod should be immutable
WITHOUT_CLASSIFICATION	load null block
WITHOUT_CLASSIFICATION	this point is only reached if there was an exception handler installed.
WITHOUT_CLASSIFICATION	nothing else to here - the module version will be included in the class.
WITHOUT_CLASSIFICATION	jruby-1000 fail early when attempting to subclass a final java class solved here by adding an exception-throwing "inherited"
WITHOUT_CLASSIFICATION	block given
WITHOUT_CLASSIFICATION	block given
WITHOUT_CLASSIFICATION	translate ret = (a || b) to ret = (a ? true b) as follows v1 = -- build(a) -- opt ret can be set to v1 but effectively v1 is true if we take the branch to l. while this info can be inferred by using attributes why bother if we can do this? ret = true beq(v1 true l) v2 = -- build(b) -- ret = v2 l
WITHOUT_CLASSIFICATION	initial precision is that of double numbers 2^63/2 ~ 4e18 63-1 an even number of number bits precision seems 16 to 18 digits
WITHOUT_CLASSIFICATION	we can callsite cache const_missing if we want
WITHOUT_CLASSIFICATION	self
WITHOUT_CLASSIFICATION	self
WITHOUT_CLASSIFICATION	self
WITHOUT_CLASSIFICATION	declare the field
WITHOUT_CLASSIFICATION	assign the values.
WITHOUT_CLASSIFICATION	assign the values.
WITHOUT_CLASSIFICATION	check arity
WITHOUT_CLASSIFICATION	check arity
WITHOUT_CLASSIFICATION	create the class
WITHOUT_CLASSIFICATION	called only by initializing thread no synchronization required
WITHOUT_CLASSIFICATION	no hex value after the 'x'.
WITHOUT_CLASSIFICATION	1.8
WITHOUT_CLASSIFICATION	6tags 16addr 1eos
WITHOUT_CLASSIFICATION	let m be the exact digits precision in an earlier! loop
WITHOUT_CLASSIFICATION	for 'foo()'. args are only significant in maintaining backwards compatible ast structure
WITHOUT_CLASSIFICATION	block
WITHOUT_CLASSIFICATION	label for the start of the method label for the end of the method
WITHOUT_CLASSIFICATION	comparisons & checks checks if the operand is non-null and non-false eqq a === call used only for its conditional results as in case/when begin/rescue
WITHOUT_CLASSIFICATION	fixme jruby-3604
WITHOUT_CLASSIFICATION	invoke pre method stuff
WITHOUT_CLASSIFICATION	all done with lookup attempts release monitor
WITHOUT_CLASSIFICATION	allow proxy to be read without synchronization. if proxy is under construction only the building thread can see it.
WITHOUT_CLASSIFICATION	create list of interface names to proxy (and make sure they really are interfaces) also build a hashcode from all classes to use for retrieving previously-created impl
WITHOUT_CLASSIFICATION	construct local variables based on parameter names passed in
WITHOUT_CLASSIFICATION	value of "tz" property is of a bit different format which confuses the java's timezone.gettimezone(id) method and so we need to convert it.
WITHOUT_CLASSIFICATION	file given use it and force it into binding
WITHOUT_CLASSIFICATION	ensure the object is associated with the wrapper we found it in so that if it comes back we don't re-wrap it
WITHOUT_CLASSIFICATION	return sqrt(squard) with precision of rootmc
WITHOUT_CLASSIFICATION	a scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.
WITHOUT_CLASSIFICATION	arg
WITHOUT_CLASSIFICATION	get a new label using the provided label prefix
WITHOUT_CLASSIFICATION	normal exit perform finally and return
WITHOUT_CLASSIFICATION	coerce arguments
WITHOUT_CLASSIFICATION	0.0 is ok float range inverted float range? nan +infinity -infinity
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	set this class's method names in var @__java_ovrd_methods if this is the new class otherwise get method names from there if this is a proxy superclass.
WITHOUT_CLASSIFICATION	ignore backslashed spaces in %w
WITHOUT_CLASSIFICATION	invert the sign since tz format and java format use opposite signs sigh also java api requires the sign to be always present be it "+" or "-".
WITHOUT_CLASSIFICATION	no binding given use 0 for both
WITHOUT_CLASSIFICATION	<=> may return nil in many circumstances e.g. 3 <=> nan
WITHOUT_CLASSIFICATION	use numbered access method
WITHOUT_CLASSIFICATION	always use "gmt" since that's required by java api.
WITHOUT_CLASSIFICATION	ignore if it's not a global var
WITHOUT_CLASSIFICATION	the datastruct is a place where custom information can be contained for core implementations that doesn't necessarily want to go to the trouble of creating a subclass of rubyobject. the openssl implementation uses this heavily to save holder objects containing java cryptography objects. java integration uses this to store the java object ref. protected transient object datastruct
WITHOUT_CLASSIFICATION	remaining arguments are for the script itself
WITHOUT_CLASSIFICATION	arg grouping use slower arg walking logic
WITHOUT_CLASSIFICATION	build scope names string
WITHOUT_CLASSIFICATION	tries to load at compile-time the constant referred to by 'constref'. this might be possible if the constant is defined and is not a forward reference to a value that will be defined later in the class.
WITHOUT_CLASSIFICATION	here we create an "anonymous" exception type used for unrolling the stack. mri creates a new one for every call to timeout which can be costly. we opt to use a single exception type for all cases to avoid this overhead.
WITHOUT_CLASSIFICATION	finally
WITHOUT_CLASSIFICATION	mri behavior with tz equal to "gmt" or "utc" time.now is not considered as a proper gmt/utc time env['tz']="gmt" time.now.gmt? ==> false env['tz']="utc" time.now.utc? ==> false hence we need to adjust for that.
WITHOUT_CLASSIFICATION	?l | boolean | true if file1 exists and is a symbolic link
WITHOUT_CLASSIFICATION	this try/catch is to allow failing over to the "commands" logic when running from within a jruby-complete jar file which has jruby.home = a jar file url that does not resolve correctly with jrubyfile.create.
WITHOUT_CLASSIFICATION	each root node has a top-level scope that we need to push
WITHOUT_CLASSIFICATION	specific arity
WITHOUT_CLASSIFICATION	in the case of two arguments mri will discard the portion of the first argument after a decimal point (i.e. "floor"). however in the case of a single argument any portion after the decimal point is honored.
WITHOUT_CLASSIFICATION	?w | boolean | true if file1 exists and is writable by effective uid/gid
WITHOUT_CLASSIFICATION	common variable methods
WITHOUT_CLASSIFICATION	@jrubymethod public irubyobject to_proc() { return rubyproc.newproc(getruntime() callblock.newcallclosure(this getruntime().getsymbol() arity.noarguments() new toproccallback(this) getruntime().getcurrentcontext()) block.type.proc) }
WITHOUT_CLASSIFICATION	let rescuedblock continue
WITHOUT_CLASSIFICATION	let rescuedblock continue
WITHOUT_CLASSIFICATION	do nothing fall back on default compiler below
WITHOUT_CLASSIFICATION	do nothing fall back on default compiler below
WITHOUT_CLASSIFICATION	should we run this pass on the current scope before running it on nested scopes?
WITHOUT_CLASSIFICATION	should we run this pass on the current scope before running it on nested scopes?
WITHOUT_CLASSIFICATION	================ utility methods ================
WITHOUT_CLASSIFICATION	================ utility methods ================
WITHOUT_CLASSIFICATION	write-volatile
WITHOUT_CLASSIFICATION	write-volatile
WITHOUT_CLASSIFICATION	write-volatile
WITHOUT_CLASSIFICATION	write-volatile
WITHOUT_CLASSIFICATION	write-volatile
WITHOUT_CLASSIFICATION	write-volatile
WITHOUT_CLASSIFICATION	write-volatile
WITHOUT_CLASSIFICATION	write-volatile
WITHOUT_CLASSIFICATION	write-volatile
WITHOUT_CLASSIFICATION	if more than 4 locals get the locals array too
WITHOUT_CLASSIFICATION	if more than 4 locals get the locals array too
WITHOUT_CLASSIFICATION	if more than 4 locals get the locals array too
WITHOUT_CLASSIFICATION	add property name aliases
WITHOUT_CLASSIFICATION	================ instance methods ================
WITHOUT_CLASSIFICATION	================ instance methods ================
WITHOUT_CLASSIFICATION	================ instance methods ================
WITHOUT_CLASSIFICATION	@jrubymethod(name = "new" meta = true visibility = visibility.private)
WITHOUT_CLASSIFICATION	@jrubymethod(name = "new" meta = true visibility = visibility.private)
WITHOUT_CLASSIFICATION	@jrubymethod(name = "new" meta = true visibility = visibility.private)
WITHOUT_CLASSIFICATION	internal variable methods
WITHOUT_CLASSIFICATION	backspace
WITHOUT_CLASSIFICATION	yysindex 889
WITHOUT_CLASSIFICATION	yygindex 136
WITHOUT_CLASSIFICATION	yygindex 136
WITHOUT_CLASSIFICATION	yygindex 136
WITHOUT_CLASSIFICATION	package-private
WITHOUT_CLASSIFICATION	fall through
WITHOUT_CLASSIFICATION	fall through
WITHOUT_CLASSIFICATION	mri issuses warning here on (rbignum(x)->len sizeof_bdigits yy > 10241024)
WITHOUT_CLASSIFICATION	interrupt the target thread in case it's blocking or waiting warning we no longer interrupt the target thread since this usually means interrupting io and with nio that means the channel is no longer usable. we either need a new way to handle waking a target thread that's waiting on io or we need to accept that we can't wake such threads and must wait for them to complete their operation. threadimpl.interrupt()
WITHOUT_CLASSIFICATION	interrupt the target thread in case it's blocking or waiting warning we no longer interrupt the target thread since this usually means interrupting io and with nio that means the channel is no longer usable. we either need a new way to handle waking a target thread that's waiting on io or we need to accept that we can't wake such threads and must wait for them to complete their operation. threadimpl.interrupt()
WITHOUT_CLASSIFICATION	nested class whose instances act as thunks reacting to to_str method called from (exception#to_str exception#message) mri equivalent rb_cnameerrormesg class name "message" construction method "!" to_str implementation "name_err_mesg_to_str" todo this class should not be lookupable
WITHOUT_CLASSIFICATION	we need to guarantee that any existing reads of old map can proceed. so we cannot yet null out each bin.
WITHOUT_CLASSIFICATION	the name of this source (e.g. a filename foo.rb)
WITHOUT_CLASSIFICATION	eq == 0 (i.e. false)
WITHOUT_CLASSIFICATION	eq == 0 (i.e. false)
WITHOUT_CLASSIFICATION	this should only be called by this and rubyfile. it allows this object to be created without a iohandler.
WITHOUT_CLASSIFICATION	we yield here to hopefully permit the target thread to schedule mri immediately schedules it so this is close but not exact
WITHOUT_CLASSIFICATION	note that addmethod now does its own put so any change made to functionality here should be made there as well
WITHOUT_CLASSIFICATION	currently dead code but useful when we figure out how to actually perform translit. private static boolean istranslit(string encoding) { return encoding.tolowercase().indexof(translit) != -1 ? true false }
WITHOUT_CLASSIFICATION	empirically it appears that to_ary coersions always return array or nil so this should always be an array by now.
WITHOUT_CLASSIFICATION	eq == 0 (i.e. false)
WITHOUT_CLASSIFICATION	eq == 0 (i.e. false)
WITHOUT_CLASSIFICATION	eq == 0 (i.e. false)
WITHOUT_CLASSIFICATION	eq == 0 (i.e. false)
WITHOUT_CLASSIFICATION	eq == 0 (i.e. false)
WITHOUT_CLASSIFICATION	no seconds just yield
WITHOUT_CLASSIFICATION	finally handling for abnormal exit
WITHOUT_CLASSIFICATION	if it's an inner class and it's not public we can't access it skip population of declared elements
WITHOUT_CLASSIFICATION	getfoo => foo getfoo(int) => foo(int)
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	mri behavior on windows it treats '/' as a root of a current drive (but only if single slash is present!) e.g. if current work directory is 'd/home/directory' then '/' means 'd/'. basically '/path' is treated as a relative path relative to the current drive. 'path' is treated as absolute one.
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	this is needed when the enclosing class or module is a singleton. in that case we generated a name such as nullfoo which broke marshalling among others. the correct thing to do in this situation is to insert the generate the name of form #<class01xasdfasd> if it's a singleton module/class which this code accomplishes.
WITHOUT_CLASSIFICATION	this is the only case it might be null here (in metaclass construction)
WITHOUT_CLASSIFICATION	eq == 0 (i.e. false) pop the extra result and replace with the send part of the and
WITHOUT_CLASSIFICATION	get "self"
WITHOUT_CLASSIFICATION	no timeout in critical section
WITHOUT_CLASSIFICATION	rethrow exception rethrow it
WITHOUT_CLASSIFICATION	only public methods
WITHOUT_CLASSIFICATION	if already inspecting there is no need to register/unregister again.
WITHOUT_CLASSIFICATION	first try to use drive letter from supplied dir value then try current work dir.
WITHOUT_CLASSIFICATION	jruby-2435 aliasing eval and other "special" methods should display a warning we warn because we treat certain method names as "special" for purposes of optimization. hopefully this will be enough to convince people not to alias them.
WITHOUT_CLASSIFICATION	generate a real method signature for the method with to/from coercions
WITHOUT_CLASSIFICATION	block argument to the method closure present class present method table mutations def defs undef alias likely call to eval makes calls that are aware of the frame makes calls that are aware of the frame's self makes calls that are aware of the frame's visibility makes calls that are aware of the frame's block makes calls that are aware of the frame's name makes calls that set or get backref makes calls that set or get lastline makes calls that are aware of the frame's class optional arguments to the method rest arg to the method makes calls that are aware of the scope makes a zero-argument super call accesses or sets constants accesses or sets class variables makes normal super call contains a retry
WITHOUT_CLASSIFICATION	add aliases in type nativetype and ffitype_
WITHOUT_CLASSIFICATION	create constants for flock
WITHOUT_CLASSIFICATION	double-testing args.length here but it avoids duplicating the proc-setup code in two places
WITHOUT_CLASSIFICATION	indices for temp values
WITHOUT_CLASSIFICATION	a while node could receive non-local flow control from any of these a closure within the loop an eval within the loop a block-arg-based proc called within the loop
WITHOUT_CLASSIFICATION	done with closure compilation
WITHOUT_CLASSIFICATION	done with closure compilation
WITHOUT_CLASSIFICATION	done with closure compilation
WITHOUT_CLASSIFICATION	done with closure compilation
WITHOUT_CLASSIFICATION	snapshot of contents of directory current position in directory
WITHOUT_CLASSIFICATION	exclusive locks in java require the channel to be writable otherwise an exception is thrown (terminating jruby execution). but flock behavior of mri is that it allows exclusive locks even on non-writable file. so we convert exclusive lock to shared lock if the channel is not writable to better match the mri behavior.
WITHOUT_CLASSIFICATION	explode array it's an internal "args" array
WITHOUT_CLASSIFICATION	explode array it's an internal "args" array
WITHOUT_CLASSIFICATION	set self to the class
WITHOUT_CLASSIFICATION	---------- public fields methods ---------
WITHOUT_CLASSIFICATION	a specific version was requested - use as is for search
WITHOUT_CLASSIFICATION	zero args no block do nothing
WITHOUT_CLASSIFICATION	we need to collect all methods though we'll only install the ones that are named in this class
WITHOUT_CLASSIFICATION	store each line into this list if not null.
WITHOUT_CLASSIFICATION	portion of line right after beginning marker
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	if an io exception occurs (something odd but possible) a directory may return null.
WITHOUT_CLASSIFICATION	check the visibility of the previous frame which will be the frame in which the class is being eval'ed
WITHOUT_CLASSIFICATION	check the visibility of the previous frame which will be the frame in which the class is being eval'ed
WITHOUT_CLASSIFICATION	check the visibility of the previous frame which will be the frame in which the class is being eval'ed
WITHOUT_CLASSIFICATION	use array as-is it's a literal array
WITHOUT_CLASSIFICATION	finally with no exception
WITHOUT_CLASSIFICATION	now for all variables used by 'i' mark them live before 'i'
WITHOUT_CLASSIFICATION	todo varargs?
WITHOUT_CLASSIFICATION	todo varargs?
WITHOUT_CLASSIFICATION	the counting of slashes that follows is simply a way to adhere to ruby's unc (or something) compatibility. when ruby's expand_path is called with "foobar" it will return "foo/bar". jruby uses java.io.file and hence returns "/foo/bar". in order to retain java.io.file in the lower layers and provide full ruby compatibility the number of extra slashes must be counted and prepended to the result.
WITHOUT_CLASSIFICATION	this is almost always already interned since it will be called with a symbol in most cases but when created from java code we might get an argument that needs to be interned. addaccessor has as a precondition that the string must be interned
WITHOUT_CLASSIFICATION	not a class
WITHOUT_CLASSIFICATION	not a class
WITHOUT_CLASSIFICATION	ruby uses qnil here we use "dummy" because we need a class
WITHOUT_CLASSIFICATION	ruby uses qnil here we use "dummy" because we need a class
WITHOUT_CLASSIFICATION	io.available() only returns 0 after eof is encountered so we need to differentiate between the empty string and eof
WITHOUT_CLASSIFICATION	in the current logic if we get here we know that module is not an includedmodulewrapper so there's no need to fish out the delegate. but just in case the logic should change later let's do it anyway
WITHOUT_CLASSIFICATION	rb_iterate((value()_((value)))str_step (value)args step_i (value)iter)
WITHOUT_CLASSIFICATION	broken symlinks considered by exists() as non-existing so we need to check for symlinks explicitly.
WITHOUT_CLASSIFICATION	constant api methods
WITHOUT_CLASSIFICATION	create the default thread group
WITHOUT_CLASSIFICATION	range_each_func(range step_i b e args)
WITHOUT_CLASSIFICATION	============================ here are hash internals (this could be extracted to a separate class but it's not too large though) ============================
WITHOUT_CLASSIFICATION	low-level class variable interface fetch/store/list class variables for this module
WITHOUT_CLASSIFICATION	used only by the compiler/interpreter (will set the literal flag)
WITHOUT_CLASSIFICATION	used only by the compiler/interpreter (will set the literal flag)
WITHOUT_CLASSIFICATION	used for the 'redo' command
WITHOUT_CLASSIFICATION	used for the 'redo' command
WITHOUT_CLASSIFICATION	retuns null when not found to avoid unnecessary getruntime().getnil() call
WITHOUT_CLASSIFICATION	returns the stored value without processing undefs (autoloads)
WITHOUT_CLASSIFICATION	\cx \c\m-x
WITHOUT_CLASSIFICATION	new exception().printstacktrace()
WITHOUT_CLASSIFICATION	new exception().printstacktrace()
WITHOUT_CLASSIFICATION	new exception().printstacktrace()
WITHOUT_CLASSIFICATION	line 286
WITHOUT_CLASSIFICATION	line 476
WITHOUT_CLASSIFICATION	line 513
WITHOUT_CLASSIFICATION	line 530
WITHOUT_CLASSIFICATION	line 533
WITHOUT_CLASSIFICATION	line 537
WITHOUT_CLASSIFICATION	line 551
WITHOUT_CLASSIFICATION	end loop
WITHOUT_CLASSIFICATION	mri behavior we don't print errno for actual errno errors
WITHOUT_CLASSIFICATION	prepare to call class definition method
WITHOUT_CLASSIFICATION	traverse the instructions in this basic block in reverse order! mark as dead all instructions whose results are not used!
WITHOUT_CLASSIFICATION	fields should really be an immutable map as it is never modified after construction
WITHOUT_CLASSIFICATION	load self object as irubyobject for recv param
WITHOUT_CLASSIFICATION	todo varargs?
WITHOUT_CLASSIFICATION	if we define a class in ruby but later want to allow it to be defined in java the allocator needs to be updated
WITHOUT_CLASSIFICATION	we only want io objects with valid streams (better to error now).
WITHOUT_CLASSIFICATION	produce a nicer error since rubyists aren't used to seeing this
WITHOUT_CLASSIFICATION	value
WITHOUT_CLASSIFICATION	value
WITHOUT_CLASSIFICATION	value
WITHOUT_CLASSIFICATION	value
WITHOUT_CLASSIFICATION	value
WITHOUT_CLASSIFICATION	yylhs 542
WITHOUT_CLASSIFICATION	value
WITHOUT_CLASSIFICATION	value
WITHOUT_CLASSIFICATION	value
WITHOUT_CLASSIFICATION	mri has extra pointer which makes our code look a little bit more strange in comparison
WITHOUT_CLASSIFICATION	tempory buffer to build up a potential token. consumer takes responsibility to reset this before use.
WITHOUT_CLASSIFICATION	tmpposition is required because getposition()'s side effects. if the warning is generated the getposition() on line 954 (this line + 18) will create a wrong position if the "inclusive" flag is not set.
WITHOUT_CLASSIFICATION	what is \v in c? case '\v' c2 = 'v' break
WITHOUT_CLASSIFICATION	consider thread aspects of this
WITHOUT_CLASSIFICATION	position within source must reflect the actual offset and column. since we ate an extra character here (this accounting is normally done in read ) we should update position info.
WITHOUT_CLASSIFICATION	an interrupt or timeout may have caused us to miss a notify that we consumed so do another notify in case someone else is available to pick it up.
WITHOUT_CLASSIFICATION	line 572
WITHOUT_CLASSIFICATION	line 601
WITHOUT_CLASSIFICATION	line 601
WITHOUT_CLASSIFICATION	line 625
WITHOUT_CLASSIFICATION	line 649
WITHOUT_CLASSIFICATION	line 691
WITHOUT_CLASSIFICATION	line 723
WITHOUT_CLASSIFICATION	line 732
WITHOUT_CLASSIFICATION	line 745
WITHOUT_CLASSIFICATION	line 766
WITHOUT_CLASSIFICATION	line 785
WITHOUT_CLASSIFICATION	line 794
WITHOUT_CLASSIFICATION	line 800
WITHOUT_CLASSIFICATION	line 812
WITHOUT_CLASSIFICATION	line 827
WITHOUT_CLASSIFICATION	line 839
WITHOUT_CLASSIFICATION	line 845
WITHOUT_CLASSIFICATION	line 864
WITHOUT_CLASSIFICATION	line 886
WITHOUT_CLASSIFICATION	line 896
WITHOUT_CLASSIFICATION	line 911
WITHOUT_CLASSIFICATION	line 929
WITHOUT_CLASSIFICATION	line 952
WITHOUT_CLASSIFICATION	line 970
WITHOUT_CLASSIFICATION	line 972
WITHOUT_CLASSIFICATION	line 991
WITHOUT_CLASSIFICATION	line 1011
WITHOUT_CLASSIFICATION	line 1026
WITHOUT_CLASSIFICATION	line 1038
WITHOUT_CLASSIFICATION	line 1067
WITHOUT_CLASSIFICATION	line 1085
WITHOUT_CLASSIFICATION	line 1097
WITHOUT_CLASSIFICATION	line 1105
WITHOUT_CLASSIFICATION	line 1122
WITHOUT_CLASSIFICATION	line 1133
WITHOUT_CLASSIFICATION	line 1145
WITHOUT_CLASSIFICATION	line 1169
WITHOUT_CLASSIFICATION	line 1201
WITHOUT_CLASSIFICATION	line 1210
WITHOUT_CLASSIFICATION	line 1229
WITHOUT_CLASSIFICATION	line 1261
WITHOUT_CLASSIFICATION	line 1287
WITHOUT_CLASSIFICATION	line 1293
WITHOUT_CLASSIFICATION	line 1307
WITHOUT_CLASSIFICATION	line 1320
WITHOUT_CLASSIFICATION	line 1325
WITHOUT_CLASSIFICATION	line 1363
WITHOUT_CLASSIFICATION	line 1398
WITHOUT_CLASSIFICATION	line 1448
WITHOUT_CLASSIFICATION	line 1456
WITHOUT_CLASSIFICATION	line 1473
WITHOUT_CLASSIFICATION	line 1492
WITHOUT_CLASSIFICATION	line 1513
WITHOUT_CLASSIFICATION	line 1523
WITHOUT_CLASSIFICATION	line 1562
WITHOUT_CLASSIFICATION	line 1582
WITHOUT_CLASSIFICATION	line 1603
WITHOUT_CLASSIFICATION	line 1603
WITHOUT_CLASSIFICATION	line 1615
WITHOUT_CLASSIFICATION	line 1620
WITHOUT_CLASSIFICATION	line 1635
WITHOUT_CLASSIFICATION	line 1652
WITHOUT_CLASSIFICATION	line 1681
WITHOUT_CLASSIFICATION	line 1708
WITHOUT_CLASSIFICATION	line 1716
WITHOUT_CLASSIFICATION	line 1755
WITHOUT_CLASSIFICATION	line 1772
WITHOUT_CLASSIFICATION	line 1789
WITHOUT_CLASSIFICATION	actions_end
WITHOUT_CLASSIFICATION	actions_end
WITHOUT_CLASSIFICATION	force for args
WITHOUT_CLASSIFICATION	last expression should not be void
WITHOUT_CLASSIFICATION	compstmt position includes both parens around it
WITHOUT_CLASSIFICATION	we can assign if we already have variable of that name here or we are the only scope in the chain (which local scopes always are).
WITHOUT_CLASSIFICATION	ignore no debugger present
WITHOUT_CLASSIFICATION	ignore no debugger present
WITHOUT_CLASSIFICATION	ignore no debugger present
WITHOUT_CLASSIFICATION	ignore no debugger present
WITHOUT_CLASSIFICATION	fixme temporarily disabling because this fires way too much running rails tests. jruby-518
WITHOUT_CLASSIFICATION	this method exists for us to break up multiple expression when nodes (e.g. when 123) into individual whennodes. the primary reason for this is to ensure lazy evaluation of the arguments (when foobargar) to prevent side-effects. in the old code this was done using nested when statements which was awful for interpreter and compilation. notes this has semantic equivalence but will not be lexically equivalent. compiler needs to detect same bodies to simplify bytecode generated.
WITHOUT_CLASSIFICATION	line 313
WITHOUT_CLASSIFICATION	line 339
WITHOUT_CLASSIFICATION	line 361
WITHOUT_CLASSIFICATION	line 413
WITHOUT_CLASSIFICATION	line 451
WITHOUT_CLASSIFICATION	line 472
WITHOUT_CLASSIFICATION	line 500
WITHOUT_CLASSIFICATION	line 515
WITHOUT_CLASSIFICATION	line 555
WITHOUT_CLASSIFICATION	line 582
WITHOUT_CLASSIFICATION	line 619
WITHOUT_CLASSIFICATION	line 636
WITHOUT_CLASSIFICATION	line 669
WITHOUT_CLASSIFICATION	line 703
WITHOUT_CLASSIFICATION	line 776
WITHOUT_CLASSIFICATION	line 814
WITHOUT_CLASSIFICATION	line 823
WITHOUT_CLASSIFICATION	line 854
WITHOUT_CLASSIFICATION	line 872
WITHOUT_CLASSIFICATION	line 905
WITHOUT_CLASSIFICATION	line 925
WITHOUT_CLASSIFICATION	line 958
WITHOUT_CLASSIFICATION	line 992
WITHOUT_CLASSIFICATION	line 1047
WITHOUT_CLASSIFICATION	line 1072
WITHOUT_CLASSIFICATION	line 1081
WITHOUT_CLASSIFICATION	line 1108
WITHOUT_CLASSIFICATION	line 1136
WITHOUT_CLASSIFICATION	line 1168
WITHOUT_CLASSIFICATION	line 1192
WITHOUT_CLASSIFICATION	line 1241
WITHOUT_CLASSIFICATION	line 1267
WITHOUT_CLASSIFICATION	line 1286
WITHOUT_CLASSIFICATION	line 1301
WITHOUT_CLASSIFICATION	line 1314
WITHOUT_CLASSIFICATION	line 1333
WITHOUT_CLASSIFICATION	line 1362
WITHOUT_CLASSIFICATION	line 1395
WITHOUT_CLASSIFICATION	line 1420
WITHOUT_CLASSIFICATION	line 1439
WITHOUT_CLASSIFICATION	line 1476
WITHOUT_CLASSIFICATION	line 1535
WITHOUT_CLASSIFICATION	line 1588
WITHOUT_CLASSIFICATION	line 1618
WITHOUT_CLASSIFICATION	line 1643
WITHOUT_CLASSIFICATION	line 1669
WITHOUT_CLASSIFICATION	line 1728
WITHOUT_CLASSIFICATION	line 1753
WITHOUT_CLASSIFICATION	line 1779
WITHOUT_CLASSIFICATION	line 1794
WITHOUT_CLASSIFICATION	line 1812
WITHOUT_CLASSIFICATION	line 1837
WITHOUT_CLASSIFICATION	line 1895
WITHOUT_CLASSIFICATION	line 1925
WITHOUT_CLASSIFICATION	line 1950
WITHOUT_CLASSIFICATION	line 1992
WITHOUT_CLASSIFICATION	line 2014
WITHOUT_CLASSIFICATION	whether this scope is used as the "argument scope" for e.g. zsuper
WITHOUT_CLASSIFICATION	if we could not find the constant from cref..then try getting from inheritence hierarchy
WITHOUT_CLASSIFICATION	this while loop is for restarting the block call in case a 'redo' fires.
WITHOUT_CLASSIFICATION	this while loop is for restarting the block call in case a 'redo' fires.
WITHOUT_CLASSIFICATION	this while loop is for restarting the block call in case a 'redo' fires.
WITHOUT_CLASSIFICATION	this while loop is for restarting the block call in case a 'redo' fires.
WITHOUT_CLASSIFICATION	this while loop is for restarting the block call in case a 'redo' fires.
WITHOUT_CLASSIFICATION	this while loop is for restarting the block call in case a 'redo' fires.
WITHOUT_CLASSIFICATION	this while loop is for restarting the block call in case a 'redo' fires.
WITHOUT_CLASSIFICATION	a 'next' is like a local return from the block ending this call or yield.
WITHOUT_CLASSIFICATION	a 'next' is like a local return from the block ending this call or yield.
WITHOUT_CLASSIFICATION	a 'next' is like a local return from the block ending this call or yield.
WITHOUT_CLASSIFICATION	a 'next' is like a local return from the block ending this call or yield.
WITHOUT_CLASSIFICATION	happens with native exceptions should not filter those out
WITHOUT_CLASSIFICATION	happens with native exceptions should not filter those out
WITHOUT_CLASSIFICATION	we create one extra dynamicscope on a binding so that when we 'eval "b=1" binding' the 'b' will get put into this new dynamic scope. the original scope does not see the new 'b' and successive evals with this binding will. i take it having the ability to have succesive binding evals be able to share same scope makes sense from a programmers perspective. one crappy outcome of this design is it requires dynamic and static scopes to be mutable for this one case.
WITHOUT_CLASSIFICATION	populate up to shorter of calling arguments or local parameters in the block
WITHOUT_CLASSIFICATION	populate up to shorter of calling arguments or local parameters in the block
WITHOUT_CLASSIFICATION	tc under method self under method name args
WITHOUT_CLASSIFICATION	allow it to bubble up
WITHOUT_CLASSIFICATION	irubyobject dynamicmethod rubyclass cacheentry threadcontext irubyobject irubyobject string args
WITHOUT_CLASSIFICATION	irubyobject dynamicmethod rubyclass cacheentry threadcontext irubyobject irubyobject string args
WITHOUT_CLASSIFICATION	irubyobject dynamicmethod rubyclass cacheentry threadcontext irubyobject irubyobject string args
WITHOUT_CLASSIFICATION	irubyobject dynamicmethod rubyclass cacheentry threadcontext irubyobject irubyobject string args
WITHOUT_CLASSIFICATION	irubyobject dynamicmethod rubyclass cacheentry threadcontext irubyobject irubyobject string args
WITHOUT_CLASSIFICATION	irubyobject dynamicmethod rubyclass cacheentry threadcontext irubyobject irubyobject string args
WITHOUT_CLASSIFICATION	irubyobject dynamicmethod rubyclass cacheentry threadcontext irubyobject irubyobject string args
WITHOUT_CLASSIFICATION	irubyobject rubyclass cacheentry threadcontext irubyobject irubyobject string args
WITHOUT_CLASSIFICATION	irubyobject cacheentry threadcontext irubyobject irubyobject string args
WITHOUT_CLASSIFICATION	trim extension to try other options
WITHOUT_CLASSIFICATION	trim extension to try other options
WITHOUT_CLASSIFICATION	check for a builtin first.
WITHOUT_CLASSIFICATION	end suffix iteration
WITHOUT_CLASSIFICATION	end suffix iteration
WITHOUT_CLASSIFICATION	unfortunately the number of digits in the exponent is not clearly defined in ruby documentation. this is a platform/version-dependent behavior. on linux/mac/cygwinnix two digits are used. on windows 3 digits are used. it is desirable for jruby to have consistent behavior and the two digits behavior was selected. this is also in sync with "java-native" sprintf behavior (java.util.formatter). e or e
WITHOUT_CLASSIFICATION	represents the the dynamic portion of scoping information. the variablevalues are the values of assigned local or block variables. the staticscope identifies which sort of scope this is (block or local). properties of dynamic scopes 1. static and dynamic scopes have the same number of names to values 2. size of variables (and thus names) is determined during parsing. so those structured do not need to change fixme when creating dynamic scopes we sometimes accidentally pass in extra parents. this is harmless (other than wasting memory) but we should not do that. we can fix this in two ways 1. fix all callers 2. check parent that is passed in and make if new instance is local then its parent is not local
WITHOUT_CLASSIFICATION	this method handles '' patterns and delegates to fnmatch_helper for the main work.
WITHOUT_CLASSIFICATION	peel onionmake subpatterns out of outer layer of glob and recall with each subpattern example foo{a{c}b}bar -> fooa{c}bar foobbar
WITHOUT_CLASSIFICATION	double precision native double precision native
WITHOUT_CLASSIFICATION	64-bit number native (as bignum)
WITHOUT_CLASSIFICATION	next indicates to decode using native encoding format
WITHOUT_CLASSIFICATION	calculate based on a b c and d
WITHOUT_CLASSIFICATION	processes seem to have some peculiar locking sequences so we need to ensure nobody is trying to close/destroy while we are
WITHOUT_CLASSIFICATION	mri behavior for 'q' do not add trailing nils
WITHOUT_CLASSIFICATION	this test may be too lax but it is the same as in mri
WITHOUT_CLASSIFICATION	exec needs to behave differently in-process because it's technically supposed to replace the calling process. so if we're supposed to run in-process we allow it to use the default streams and not use pumpers at all. see jruby-2156 and jruby-2154.
WITHOUT_CLASSIFICATION	snip off ruby or jruby command from list of arguments leave alone if the command is the name of a script
WITHOUT_CLASSIFICATION	the problem we trying to solve below stdin in java is blocked and non-interruptible so if we invoke read on it we might never be able to interrupt such thread. so we use in.available() to see if there is any input ready and only then read it. but this approach can't tell whether the end of stream reached or not so we might end up looping right at the end of the stream. well at least we can improve the situation by checking if some input was ever available and if so not checking for available anymore and just go to read.
WITHOUT_CLASSIFICATION	first digit is always printed
WITHOUT_CLASSIFICATION	an empirically derived rule precision applies to significand length irrespective of exponent
WITHOUT_CLASSIFICATION	an official rule clarified if the exponent <clarif>after adjusting for exponent form</clarif> is < -4 or the exponent <clarif>after adjusting for exponent form</clarif> is greater than the precision use exponent form
WITHOUT_CLASSIFICATION	in this mode '.' is always printed
WITHOUT_CLASSIFICATION	now some data
WITHOUT_CLASSIFICATION	now some data
WITHOUT_CLASSIFICATION	mri behavior validate only the unnumbered arguments
WITHOUT_CLASSIFICATION	else catch oversize below
WITHOUT_CLASSIFICATION	calculation for simple (and typical) case adapted from sun.misc.floatingdecimal
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	utf8 lead byte
WITHOUT_CLASSIFICATION	utf8 lead byte
WITHOUT_CLASSIFICATION	utf8 lead byte
WITHOUT_CLASSIFICATION	could not get canonical path just use given path
WITHOUT_CLASSIFICATION	we always open this rw since we can only open it r or rw.
WITHOUT_CLASSIFICATION	call chmod after we created the randomaccesfile because otherwise the file could be read-only
WITHOUT_CLASSIFICATION	attempt to set the permissions if we have been passed a posix instance and only if the file was created in this call.
WITHOUT_CLASSIFICATION	when reading into a heap buffer the jvm allocates a temporary direct bytebuffer of the requested size. to avoid allocating a huge direct buffer when doing ludicrous reads (e.g. 1g or more) we split the read up into chunks of no more than 1m
WITHOUT_CLASSIFICATION	if it is a file channel then we can pre-allocate the output buffer to the total size of buffered + remaining bytes in file
WITHOUT_CLASSIFICATION	cannot discern the total read length - allocate at least enough for the buffered data
WITHOUT_CLASSIFICATION	copy what is in the buffer if there is some buffered data
WITHOUT_CLASSIFICATION	append what we read into our buffer and allow the loop to continue
WITHOUT_CLASSIFICATION	already have some bytes buffered just return those
WITHOUT_CLASSIFICATION	reset buffer
WITHOUT_CLASSIFICATION	synchronize and re-check to avoid creating more than one selector per provider
WITHOUT_CLASSIFICATION	todo ruby logic is somewhat more complicated here see comments after
WITHOUT_CLASSIFICATION	is there something built into jruby to do this?
WITHOUT_CLASSIFICATION	note that we can't say the following because of the on-the-fly conversion of fixnum to long asserttrue(value == valueviavaluesiterator)
WITHOUT_CLASSIFICATION	value equality result = eval("key = 3 arr = [] arr[key] = 'one' arr.store(3 'two') puts arr[key]") assertequals("two" result)
WITHOUT_CLASSIFICATION	uncomment the "puts" lines if you want to see more detail
WITHOUT_CLASSIFICATION	since we don't have any other error reporting mechanism we add the error message as an always-failing test to the test suite.
WITHOUT_CLASSIFICATION	change the thread context to include the class
DESIGN	fixme do we need the check or does main.java not call thisthey should consolidate
DESIGN	fixme move out of this class!
DESIGN	this is a rather ugly hack but similar to mri. see hash.cruby_setenv and similar in mri we search all keys for a case-insensitive match and use that
DESIGN	fixme legal here? may want unsupportedoperationexception
DESIGN	fixme don't allow multiple threads to do this at once
DESIGN	todo eliminate?
DESIGN	todo people extending gzipwriter/reader will break. find better way here.
DESIGN	for jruby-2759 when met choose cet timezone to work around joda
DESIGN	we might need to perform a dst correction
DESIGN	rb_copy_generic_ivar from dup_setup here unlikely..
DESIGN	rb_ary_push_m fixme whis is this named "push_m"?
DESIGN	from dup_setup rb_copy_generic_ivar from dup_setup here unlikely..
DESIGN	todo ary_sort_check should be done here
DESIGN	todo ary_sort_check should be done here
DESIGN	todo is this correct ?
DESIGN	todo make more efficient by not creating irubyarray[]
DESIGN	todo list.sublist(from to).clear() is supposed to clear the sublist from the list. how can we support this operation?
DESIGN	todo not_allocatable_allocator is probably ok here. confirm. jruby-415
DESIGN	fixme this table will get moved into posix library so we can get all actual supported signals. this is a quick fix to support basic signals until that happens.
DESIGN	the implementations of these are all bonus (see todo above) i was going to throw an error from these but it appears to be the wrong place to do it.
DESIGN	todo number formatting here mri uses "%-.10g" 1.4 api is a must?
DESIGN	todo remove
DESIGN	fixme moved this here to get what's obviously a utility method out of irubyobject. perhaps security methods should find their own centralized home at some point.
DESIGN	fixme get rid of laziness and handle restricted access elsewhere
DESIGN	todo should frozen error have its own distinct class? if not should more share?
DESIGN	todo this is kinda gross
DESIGN	not sure how well this works but it works much better than just currenttimemillis by itself.
DESIGN	todo exec should replace the current process. this could be possible with jna.
DESIGN	fixme in order for thread to play well with the standard 'new' behavior it must provide an allocator that can create empty object instances which initialize then fills with appropriate data.
DESIGN	todo not sure that we should skip calling join() altogether. thread.join() has some implications for java memory model etc.
DESIGN	fixme there's some code duplication here with rubyobject#inspect
DESIGN	fixme this should probably do some translation from ruby priority levels to java priority levels (until we have green threads)
DESIGN	todo no java stringity
DESIGN	need to reexamine this
DESIGN	todo these were missing so we're not handling them elsewhere?
DESIGN	todo why are we duplicating the constants here and then in fileconstants below? fileconstants is included in io.
DESIGN	todo this method is not present in mri!
DESIGN	todo this is also defined in the metaclass tooconsolidate somewhere.
DESIGN	something wrong we don't know the cwd todo is this behavior really desirable? /mov
DESIGN	fixme this does not have exact same semantics as rubyarray.join but they probably could be consolidated (perhaps as join(args[] sep dochomp)).
DESIGN	todo should this be deprecated ? (to be efficient internals should deal with rubyhash directly)
DESIGN	todo implement tty? and isatty. we have no real capability to determine this from java but if we could set tty status then we could invoke jruby differently to allow stdin to return true on this. this would allow things like cgi.rb to work properly.
DESIGN	todo better error handling
DESIGN	this seems unlikely to happen unless it's a totally bogus fileno so do we even need to bother trying to create one?
DESIGN	in fact we should probably raise an error yes?
DESIGN	todo ruby reuses this logic for other "write" behavior by checking if it's an io and calling write again
DESIGN	fixme we should probably still be dyncalling 'write' here
DESIGN	todo this version differs from ioctl by checking whether fcntl exists and raising notimplemented if it doesn't perhaps no difference for us?
DESIGN	fixme i don't like the null checks here
DESIGN	todo handle writing into original buffer better
DESIGN	todo is this the right thing to do?
DESIGN	todo this isn't an exact port of mri's pipe behavior so revisit
DESIGN	fixme if nativeexception is expected to be used from ruby code it should provide a real allocator to be used. otherwise class.new will fail as will marshalling. jruby-415
DESIGN	fixme finalizer should be dupped here
DESIGN	rb_obj_id return the internal id of an object. fixme should this be renamed to match its ruby name?
DESIGN	fixme obvious issue that not all platforms can display all attributes. ugly hacks. using generic posix library makes pushing inspect behavior into specific system impls rather painful.
DESIGN	workaround for jruby-4149
DESIGN	todo not_allocatable_allocator may be ok here but it's unclear how structs work with marshalling. confirm behavior and ensure we're doing this correctly. jruby-415
DESIGN	fixme this is copied code from rubyarray. both re struct and array should share one impl this is also hacky since i construct ruby objects to access ruby arrays through aref instead of something lower.
DESIGN	fixme we should not be regenerating this over and over
DESIGN	fixme this is probably not very efficient since it loads all methods for each call
DESIGN	todo consider a better way of synchronizing
DESIGN	fixme why was this using a fullfunctioncallbackmethod before that did callsuper?
DESIGN	a cloned method now belongs to a new class. set it. todo make dynamicmethod immutable
DESIGN	fixme figure out why we get null sometimes
DESIGN	fixme can get optimized for ieqlnode
DESIGN	rb_mod_remove_cvar fixme any good reason to have two identical methods? (same as remove_class_variable)
DESIGN	fixme these descriptions should probably be moved out to constantine project which deals with all platform-dependent constants.
DESIGN	todo what about n arg?
DESIGN	todo rounding mode should not be hard-coded. see #mode.
DESIGN	regular division with some default precision todo proper algorithm to set the precision
DESIGN	todo better algorithm to set precision needed
DESIGN	fixme what should these really be? numeric? assert x instanceof rubycomplex && y instanceof rubycomplex
DESIGN	fixme what should this really be? assert x instanceof rubycomplex
DESIGN	fixme the code below is a copy of rubyio.puts and we should avoid copy-paste.
DESIGN	yowthis is still ugly
DESIGN	end hack
DESIGN	todo should next and return also catch here?
DESIGN	todo generalize this type-checking code into irubyobject helper.
DESIGN	todo newtypeerror does not offer enough for ruby error string
DESIGN	fixme if true array is common enough we should pre-allocate and stick somewhere
DESIGN	todo this is almost rubymodule#instance_methods on the metaclass. perhaps refactor.
DESIGN	the following three methods must be defined fast since they expect to modify the current frame (i.e. they expect no frame will be allocated for them). jruby-1185.
DESIGN	fixme i think this chunk is equivalent to mri id2name (and not our public method id2name). make into method if used more than once.
DESIGN	todo confirm expected args are irubyobject (or similar)
DESIGN	todo confirm expected args are irubyobject (or similar)
DESIGN	todo confirm expected args are irubyobject (or similar)
DESIGN	optional args so we have irubyobject[] todo confirm
DESIGN	todo split this into two sub-classes so that name and constnode can be specified seperately.
DESIGN	todo wire into new exception handling mechanism
DESIGN	fixme constdecl could be two seperate classes (or done differently since constnode and name never exist at the same time.
DESIGN	todo do above but not below for additional newline nodes
DESIGN	todo figure out how this can happen and possibly remove
DESIGN	todo at least parsersupport.attrset passes argsnode as null. implicitnil is wrong magic for setupargs since it will irubyobject[] { nil }. so we need to figure out a nice fast null pattern for setupargs. assert argsnode != null "receivernode is not null"
DESIGN	fixme jruby-3188 ends up with condition returning nullquick fix until i can dig into it
DESIGN	fixme i use a for block to implement end node because we need a proc which captures its enclosing scope. forblock now represents these node and should be renamed.
DESIGN	method has more than 500 lines we'll need to split it and therefore need to use a heap-based scope
DESIGN	todo callback for value would be more efficient but unlikely to be a big cost (constants are rarely assigned)
DESIGN	if it's a single-arg when but contains an array we know it's a real literal array fixme this is a gross way to figure it out parser help similar to yield argument passing (expandarguments) would be better
DESIGN	todo callback for value would be more efficient but unlikely to be a big cost (constants are rarely assigned)
DESIGN	xxx const lookup can trigger const_missing is that enough to warrant it always being executed?
DESIGN	if body is a rescue node inspect its pieces separately to avoid it disabling all optz todo this is gross.
DESIGN	if body is a rescue node inspect its pieces separately to avoid it disabling all optz todo this is gross.
DESIGN	fixme somehow i'd feel better if this could get the appropriate var index from the argumentnode
DESIGN	todo this filtering is kind of grossit would be nice to get some parser help here
DESIGN	fixme somehow i'd feel better if this could get the appropriate var index from the argumentnode
DESIGN	arguments compilers always create irubyobject[] but we want to use rubyarray.concat here fixme as a result this is not efficient since it creates and then later unwraps an array
DESIGN	fixme this is temporary since the variable compilers assume we want args already on stack for assignment. we just pop and continue with 1.9 args logic.
DESIGN	todo reads/writes from frame todo information on scoping todo visibility?
DESIGN	for visibility checking without requiring frame self todo don't bother passing when fcall or vcall and adjust callsite appropriately
DESIGN	todo cache?
DESIGN	todo cache?
DESIGN	index for the item this could probably be more efficient bailing out on assigning args past the end?
DESIGN	if we don't have opt args start after args (they will be assigned later) this is for crap like def foo(a = (b = true 1)) which numbers b before a fixme only starting after required args since opt args may access others and rest args conflicts with compileroot using "0" to indicate [] signature.
DESIGN	fixme this really ought to be in clinit but it doesn't matter much
DESIGN	install invokedynamic bootstrapper todo need to abstract this setup behind another compiler interface
DESIGN	fixme this isn't right for within ensured/rescued code
DESIGN	sss fixme deprecated! going forward all instructions should come from the cfg
DESIGN	sss fixme do we need to check if l is same as whatever popped?
DESIGN	sss fixme what is the difference between classvarasgnnode & classvardeclnode
DESIGN	sss fixme i added this in. is this correct?
DESIGN	sss fixme what is the difference between classvarasgnnode & classvardeclnode
DESIGN	sss fixme are we guaranteed that we splats dont head to multiple-assignment nodes! i.e. |(ab)|?
DESIGN	sss fixme can this return anything other than nil?
DESIGN	sss fixme what happens to the add class in this case??
DESIGN	con fixme i don't know how to make case be an expressiondoes that logic need to go here?
DESIGN	sss fixme where is this set up? how is this diff from classvardeclnode??
DESIGN	sss fixme is this correct?
DESIGN	sss fixme used anywhere? i don't see calls to this anywhere public operand builddasgnassignment(node node ir_scope s) { dasgnnode dasgnnode = (dasgnnode) node s.getvariablecompiler().assignlocalvariable(dasgnnode.getindex() dasgnnode.getdepth()) }
DESIGN	sss fixme receiver -- this is the class meta object basically? operand receiver = build(defsnode.getreceivernode() s)
DESIGN	self = args[0] sss fixme verify that this is correct
DESIGN	sss fixme is this correct?
DESIGN	sss fixme 1. is the ordering correct? (poll before next)
DESIGN	add a "self" recv here todo is this right?
DESIGN	sss fixme is this correctly placed at the end of the loop iteration?
DESIGN	sss fixme where does this go? m.setlineposition(arraynode.getposition())
DESIGN	sss fixme i could make ir_loop a scope too semantically it is a scope but functionally not sure if this is required yet
DESIGN	sss fixme should this be a string literal or a string? dummy class for the script
DESIGN	sss fixme does int suffice or do we need long?
DESIGN	sss fixme correct? where does closure arg come from?
DESIGN	sss fixme should i have a reference to the ir_loop that is being retried?
DESIGN	simplify the variables too -- to keep these variables in sync with what is actually used in the when clauses this is not required for correctness reasons but only for performance reasons.
DESIGN	sss fixme this should never get called for constant svalues
DESIGN	sss fixme should this be operand or compoundstring? can it happen that symbols are built out of other than compound strings? or can it happen during optimizations that this becomes a generic operand?
DESIGN	todo need to get this back into the method signaturenow is too late
DESIGN	hack in to replace usual readline with this
DESIGN	bit risky if someone changes completor but useful for method calls
DESIGN	fixme this determine module is in a strange location and should somehow be in block
DESIGN	create block for this iter node fixme we shouldn't use the current scope if it's not actually from the same hierarchy of static scopes
DESIGN	we basically ignore protocol. let someone report it
DESIGN	workaround for a bug in sun's jdk 1.5.x see httpbugs.sun.com/bugdatabase/view_bug.do?bug_id=6303753
DESIGN	context is null wipe out the softreference (this could be done with a reference queue)
DESIGN	fixme we want to eliminate these type casts when possible
DESIGN	todo determine whether we should perhaps store non-singleton class in the implementationclass
DESIGN	fixme set up a callconfiguration for this
DESIGN	fixme set up a call configuration for this
DESIGN	todo make this do specific-arity calling
DESIGN	add 'new' with full signature so it's guaranteed to be directly accessible todo no need for this to be a full formal jvm signature
DESIGN	add method with full signature so it's guaranteed to be directly accessible todo no need for this to be a full formal jvm signature
DESIGN	fixme this whole thing could probably be implemented as a module and mixed into appropriate classes especially if it uses either ioinput/outputstream or is smart about the kind of io-like object it's being used against.
DESIGN	using ioinputstream may not be the most performance way but it's easy.
DESIGN	using iooutputstream may not be the most performance way but it's easy.
DESIGN	using iochannel may not be the most performant way but it's easy.
DESIGN	these extra arrays are really unfortunate split some of these paths out to eliminate?
DESIGN	todo wrong - get interfaces from class
DESIGN	todo catch exception if constant is already set by other thread
DESIGN	todo public only?
DESIGN	see note below re 2-field kludge
DESIGN	todo protected methods. this is going to require a rework of some of the mechanism.
DESIGN	todo protected methods. this is going to require a rework of some of the mechanism.
DESIGN	fixme do we really want 'declared' methods? includes private/protected and does _not_ include superclass methods
DESIGN	fixme this doesn't actually support anything but string
DESIGN	again shouldn't happen. todo might want to throw exception instead.
DESIGN	again shouldn't happen. todo might want to throw exception instead.
DESIGN	this needs to be split since conditional calling #inherited doesn't fit standard ruby semantics
DESIGN	todo decompose getjavapackagemodule so we don't parse fullname
DESIGN	todo decompose getjavapackagemodule so we don't parse fullname
DESIGN	this covers the rare case of lower-case class names (and thus will fail 99.999% of the time). fortunately we'll only do this once per package name. (and seriously folks look into best practices)
DESIGN	fixme we should also support orgs that use capitalized package names (including embarrassingly the one i work for) but this should be enabled by a system property as the expected default behavior for an upper-case value should be (and is) to treat it as a class name and raise an exception if it's not found
DESIGN	todo check for java reserved names and raise exception if encountered
DESIGN	upper-case package name todo top-level upper-case package was supported in the previous (ruby-based) implementation so leaving as is. see note at #getproxyorpackageunderpackage re future approach below the top-level.
DESIGN	fixme wtf is this? why would these use the class?
DESIGN	fixme needs to be rethought
DESIGN	todo specifying soft refs may want to compare memory consumption behavior with weak refs (specify weak in place of soft below)
DESIGN	todo not_allocatable_allocator is probably ok here since we don't intend for people to monkey with this type and it can't be marshalled. confirm. jruby-415
DESIGN	todo not_allocatable_allocator is probably ok here since we don't intend for people to monkey with this type and it can't be marshalled. confirm. jruby-415
DESIGN	if we get here we found a matching method use it todo choose narrowest method by continuing to search
DESIGN	todo only setaccessible to account for pattern found by accessing constants included from a non-public interface. (aka java.util.zip.zipconstants being implemented by many classes)
DESIGN	todo only setaccessible to account for pattern found by accessing constants included from a non-public interface. (aka java.util.zip.zipconstants being implemented by many classes) todo not sure we need this at all since we only expose public fields. field.setaccessible(true)
DESIGN	fixme not_allocatable_allocator is probably not right here since we might eventually want javaarray to be marshallable. jruby-414
DESIGN	fixme do we really want 'declared' methods? includes private/protected and does _not_ include superclass methods. also the getdeclared calls may throw securityexception if we're running under a restrictive security policy.
DESIGN	don't bother to check if final method it won't be there (not generated can't be!)
DESIGN	super calls from proxies must use reflected method fixme possible to make handles do the superclass call?
DESIGN	actual type does not exactly match method return type re-get converter fixme when the only autoconversions are primitives this won't be needed
DESIGN	fixme ideally javaobject instances should be marshallable which means that the javaobject metaclass should have an appropriate allocator. jruby-414
DESIGN	fixme shouldn't need @__java_ovrd_methods just query locally defined methods.
DESIGN	we always prepend an org.jruby.proxy package to the beginning because java and javax packages are protected and signed jars prevent us generating new classes with those package names. see jruby-2439.
DESIGN	todo only used by interface implementation eliminate it
DESIGN	create block for this iter node fixme we shouldn't use the current scope if it's not actually from the same hierarchy of static scopes
DESIGN	modules are included with a shim class we must find that shim to handle super() appropriately
DESIGN	lame generics issues making segment class static and manually inserting cache reference to work around various problems generically referencing methods/vars across classes.
DESIGN	entry exists proxy doesn't match. replace. this could happen if old proxy was gc'ed todo raise exception if stored proxy is non-null? (not gc'ed)
DESIGN	fixme how much more obtuse can this be? heredoc already parsed this and saved stringdo not parse..just return
DESIGN	ruby constants for strings (should this be moved somewhere else?)
DESIGN	hacky advance position to eat newline here.
DESIGN	fixme not sure what the semantics of transfer are cfiber.definefastmethod("transfer" cb.getfastoptmethod("transfer"))
DESIGN	ignorebean doesn't get registered todo why does that bother me?
DESIGN	ignorebean doesn't get registered todo why does that bother me?
DESIGN	enebo totally weird naming (in mri is not allocated and is a local var name)
DESIGN	fixme remove this from grammars.
DESIGN	fixme consider fixing node_assign itself rather than single case
DESIGN	workaround for jruby-2326 (mri does not enter this production for some reason)
DESIGN	fixme lose syntactical elements here (and others like this)
DESIGN	enebo lots of optz in 1.9 parser here
DESIGN	this is perhaps innefficient timewise? optimal spacewise
DESIGN	this is a dummy scope we should find a way to make that more explicit
DESIGN	we clone dynamic scope because this will be a new instance of a block. any previously captured instances of this block may still be around and we do not want to start overwriting those values when we create a new one. enebo once we make self lastclass and lastmethod immutable we can remove duplicate
DESIGN	todo this probably isn't the best hack but it works until we can have different root frame setup for 1.9 easily.
DESIGN	fixme this is currently only here because of some problems with iooutputstream writing to a "bare" runtime without a proper scope
DESIGN	fixme i think we need these pushed somewhere?
DESIGN	fixme this is currently only here because of some problems with iooutputstream writing to a "bare" runtime without a proper scope
DESIGN	fixme this is currently only here because of some problems with iooutputstream writing to a "bare" runtime without a proper scope
DESIGN	xxx again screwy evaling under previous frame's scope
DESIGN	fixme this version is faster than the previous but both suffer from a crucial flaw it is impossible to create an objectspace with an iterator that doesn't either a. hold on to objects that might otherwise be collected or b. have no way to guarantee that a call to hasnext() will be correct or that a subsequent call to next() will produce an object. for our purposes for now this may be acceptable.
DESIGN	fixme maybe not best place but move it to a good home
DESIGN	fixme this is gross. don't do this.
DESIGN	@author headius fixme convert to enum ?
DESIGN	fixme no i don't like it.
DESIGN	todo this is probably bad
DESIGN	fixme not very efficient
DESIGN	invoke callmethodmissing method directly todo this could be further optimized since some dsls hit method_missing pretty hard
DESIGN	todo this is really ineffient and potentially a problem everytime anyone require's something. we should try to make loadpath a special array object.
DESIGN	fixme inefficient constructing a bignum just for dumping?
DESIGN	fixme not very efficient
DESIGN	fixme not very efficient
DESIGN	fixme not very efficient
DESIGN	fixme not very efficient
DESIGN	fixme this should go somewhere more generic -- maybe idutil
DESIGN	fixme potentially could just use bytelist here?
DESIGN	fixme this is almost entirely duplicated from main.java
DESIGN	todo factor this chunk as in mri/yarv getaster
DESIGN	todo factor this chunk as in mri/yarv getaster
DESIGN	grrr arghh want to subclass sun.misc.floatingdecimal but can't so we must do all this (the next 70 lines of code) which has already been done by floatingdecimal.
DESIGN	it would be nice (and logical!) if exponent form behaved like e/e and decimal form behaved like f but no such luck. hence
DESIGN	this is gross but java api's aren't iso 8601 compliant at all
DESIGN	this is gross but java api's aren't iso 8601 compliant at all
DESIGN	todo get rid of this (lax returns 0.0 strict will throw)
DESIGN	todo turn off the negative? will return -0.0 in lax mode
DESIGN	fixme this probably belongs in a different package.
DESIGN	todo it would be nice to throw a better error for this
DESIGN	todo it would be nice to throw a better error for this
DESIGN	fixme i don't like this
DESIGN	todo it's perhaps just a coincidence that all the channels for which we should raise are instanceof selectablechannel since stdio is notso this bothers me slightly. -con
DESIGN	fixme clearing read buffer hereis this appropriate?
DESIGN	todo this should entry into error handling somewhere
DESIGN	fixme this worries me a bit since it could allocate a lot with a large newlength
DESIGN	we use a highly uncommon string to represent the paragraph delimiter (100% soln not worth it)
DESIGN	todo ruby does not seem to care about invalid numeric mode values i am not sure if ruby overflows here also
DESIGN	todo make this more intelligible value
DESIGN	xxx do something?
DESIGN	for visibility checking without requiring frame self todo don't bother passing when fcall or vcall and adjust callsite appropriately
DESIGN	for visibility checking without requiring frame self todo don't bother passing when fcall or vcall and adjust callsite appropriately
DESIGN	up to ten stuff into tmp locals load in reverse order and assign fixme there's probably a slightly smarter way but is it important?
DESIGN	index for the item this could probably be more efficient bailing out on assigning args past the end?
DESIGN	if we don't have opt args start after args (they will be assigned later) this is for crap like def foo(a = (b = true 1)) which numbers b before a fixme only starting after required args since opt args may access others and rest args conflicts with compileroot using "0" to indicate [] signature.
DESIGN	sss fixme these should get normally compiled or initialized some other way sss fixme parent/super-type info is incorrect! these are just placeholders for now .. this needs to be updated with real class objects later!
DESIGN	sss fixme move this code to some utils area .. or probably there is already a method for this in some jruby utils class holy cow! just to append two darned arrays!
DESIGN	sss fixme this method (at least in the context of multiple assignment) is a little weird. it calls regular to_ary on the object. but if it encounters a method_missing the value is inserted into an 1-element array! try "abc = 1" first then define fixnum.to_ary method and try it again. ex httpgist.github.com/163551
DESIGN	this is for jruby-2988 since after a suspend the terminal seems to need to be reinitialized. since we can't easily detect suspension initialize after every readline. probably not fast but this is for interactive terminals anywayso who cares?
DESIGN	set up a field for the cacheentry todo make this an array so it's not as much class metadata similar to abstractscript stuff
DESIGN	exit monitor before making call fixme this not being in a finally is a little worrisome
DESIGN	fixme added this because marshal_spec seemed to reconstitute objects without calling datawrapstruct this resulted in object being null after unmarshalling
DESIGN	if we get here we found a matching method use it todo choose narrowest method by continuing to search
DESIGN	we clone dynamic scope because this will be a new instance of a block. any previously captured instances of this block may still be around and we do not want to start overwriting those values when we create a new one. enebo once we make self lastclass and lastmethod immutable we can remove duplicate
DESIGN	todo this is actually now returning the scope of whoever called method#to_proc which is obviously wrong but there's no scope to provide for many methods. it fixes jruby-2237 but needs a better solution.
DESIGN	fixme we should be getting this from the runtime rather than assume none? return runtime.getencodingservice().getencoding(runtime.getdefaultexternalencoding())
DESIGN	ignorebean doesn't get registered todo why does that bother me?
DESIGN	this is a fairly specific hack for empty string but it does the job
DESIGN	xxx this constructor is a hack to implement the __end__ syntax. converting a reader back into an inputstream doesn't generally work.
DESIGN	fixme total hack to get flash in rails marshalling/unmarshalling in session okwe need to totally change marshalling to work with overridden core classes.
DESIGN	fixme this is an ugly hack to resolve jruby-1381 i'm not proud of it
DESIGN	we're not setting the provider or anything but it seems that bouncycastle does some internal things in its provider's constructor which require it to be executed in a secure context. ideally this hack should be removed. see jruby-3919 and this bc bug httpwww.bouncycastle.org/jira/browse/bja-227
DESIGN	fixme big fat hack here because scope names are expected to be interned strings by the parser
DESIGN	fixme big fat hack here because scope names are expected to be interned strings by the parser
DESIGN	hack to get right style for input
DESIGN	object#to_a is obsolete. we match ruby's hack until to_a goes away. then we can remove this hack too.
DESIGN	small hack to save a cast later on
DESIGN	temporary hack to handle non-ruby values will come up with better solution shortly
DESIGN	object#to_a is obsolete. we match ruby's hack until to_a goes away. then we can remove this hack too.
DESIGN	hack in order to have stdout/err act like ttys and flush always we set anything assigned to stdout/stderr to sync
DESIGN	hack force clinit to be created
DESIGN	fixme this is pretty gross we should have a cleaner initialization that doesn't depend on package-visible fields and ideally is atomic probably using an immutable structure we replace all at once. lazy null when no groups defined
DESIGN	todo should probably apply the null object pattern for a non-allowed class rather than null
DESIGN	todo set our metaclass to target's class (i.e. scary!)
DESIGN	todo confirm expected args are irubyobject (or similar)
DESIGN	ignorebean doesn't get registered todo why does that bother me?
DESIGN	optional args so we have irubyobject[] todo confirm
DESIGN	not intended to be called directly by users (private) old todo from ruby code this should be implemented in javaclass.java where we can check for reserved ruby names conflicting methods etc.
DESIGN	todo? i think this ends up propagating from normal java exceptions sys_fail(openfile.getpath())
DESIGN	todo make callcoerced work in block contextthen fix downto step and upto.
DESIGN	todo the rest of thisseeking to same position is unnecessary since we share a channel but some of this may be needed?
DESIGN	todo this version differs from ioctl by checking whether fcntl exists and raising notimplemented if it doesn't perhaps no difference for us?
DESIGN	fixme this below is temporary but its much safer for cow (it prevents not shared strings with begin != 0) this allows now e.g. bytelist#set not to be begin aware
DESIGN	ignore job was cancelled fixme is this ok?
DESIGN	todo mri behavior call "+" or "add" depending on the call. but this leads to exceptions when floats are added. see httpblade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/17374 return callcoerced(context op b true) -- this is mri behavior. we'll use ours for now thus providing an ability to add floats.
DESIGN	must be called from main thread (it is currently but this bothers me)
DESIGN	todo wire into new exception handling mechanism
DESIGN	todo not_allocatable_allocator is probably ok here since we don't intend for people to monkey with this type and it can't be marshalled. confirm. jruby-415
DESIGN	todo not_allocatable_allocator is probably ok here. confirm. jruby-415
DESIGN	todo not_allocatable_allocator is probably ok here. confirm. jruby-415
DESIGN	todo not_allocatable_allocator is probably ok here. confirm. jruby-415
DESIGN	fixme determine if a real allocator is needed here. do people want to extend javaclass? do we want them to do that? can you class.new(javaclass)? should you be able to? todo not_allocatable_allocator is probably ok here since we don't intend for people to monkey with this type and it can't be marshalled. confirm. jruby-415
DESIGN	sss fixme token can be final for a method -- implying that the token is only for this particular implementation of the method but if the mehod is modified we create a new method object which in turn gets a new token. what makes sense?? intuitively it seems the first one but let us see current code version token for this method -- can change during execution as methods get redefined!
DESIGN	fixme weakref.rb also does caller(2) here for the backtrace
DESIGN	fixme bit of a kludge here (non-interface classes assigned to both class and module fields). simplifies proxy extender code will go away when ji is overhauled (and proxy extenders are deprecated).
DESIGN	there's not a compelling reason to keep javaclass instances in a weak map (any proxies created are [were] kept in a non-weak map so in most cases they will stick around anyway) and some good reasons not to (javaclass creation is expensive for one many lookups are performed when passing parameters to/from methods etc.). todo faster custom concurrent map
DESIGN	todo we should be able to optimize this quite a bit post-1.0. javaclass already has all the methods organized by method name the next version (supporting protected methods/fields) will have them organized even further. so collectmethods here can just lookup the overridden methods in the javaclass map should be much faster.
DESIGN	fixme finalizer should be dupped here
DESIGN	fixme null check is removable once we figure out how to assign to unset named block args
DESIGN	rb_obj_id return the internal id of an object. fixme should this be renamed to match its ruby name?
DESIGN	todo bleeding runtime into parser. arity may be should be in parser (to keep bleeding oneway)
DESIGN	sss fixme maybe this is not really a concern after all nesting level of this scope in the lexical nesting of scopes in the current file -- this is not to be confused with semantic nesting of scopes across files. consider this code in a file f class m1m2m3c end so c is at lexical nesting level of 1 (the file script is at 0) in the file 'f' semantically it is at level 3 (m1 m2 m3 are at 012). this is primarily used to ensure that variable names don't clash! i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! private int _lexicalnestinglevel
DESIGN	sometimes the value can be retrieved at "compile time". if we succeed nothing like it! we might not .. for the following reasons 1. the constant is missing 2. the reference is a forward-reference 3. the constant's value is only known at run-time on first-access (but this is runtime isn't it??) 4. our compiler isn't able to right away infer that this is a constant. sss fixme 1. the operand can be a literal array range or hash -- hence operand because array range and hash derive from operand and not constant is there a way to fix this impedance mismatch? 2. it should be possible to handle the forward-reference case by creating a new forwardreference operand and then inform the scope of the forward reference which the scope can fix up when the reference gets defined. at code-gen time if the reference is unresolved when a value is retrieved for the forward-ref and we get a null we can throw a constmissing exception! not sure!
DESIGN	reset value map if this instruction is the start/end of a basic block right now calls are considered hard boundaries for optimization and information cannot be propagated across them! sss fixme rather than treat all calls with a broad brush what we need is to capture different attributes about a call - uses closures - known call target - can modify scope - etc. this information is probably already present in the ast inspector
DESIGN	fixme legal here? may want unsupportedoperationexception
DESIGN	xxx this check previously used callmethod("==") to check for equality between classes when scanning the hierarchy. however the == check may be safe we should only ever have one instance bound to a given type/constant. if it's found to be unsafe examine ways to avoid the == call.
DESIGN	end hack
DESIGN	if not overloaded we add a method that guesses at which signature to use todo just adding first one right nowadd in signature-guessing logic
DESIGN	fixme this is an ugly hack to resolve jruby-1381 i'm not proud of it
DESIGN	todo this version is better than the hackish previous one. windows behavior needs to be defined though. i suppose this version could be improved more too. todo /etc/passwd is also inadequate for macosx since it does not use /etc/passwd for regular user accounts
DESIGN	todo should next and return also catch here?
DESIGN	let's only generate methods for those the user may actually intend to override. that includes any defined in the current class and any ancestors that are also javaproxyclasses (but none from any other ancestor classes). methods defined in mixins will be considered intentionally overridden except those from kernel java and javaproxymethods as well as enumerable. todo may want to exclude other common mixins?
DESIGN	fixme consider fixing node_assign itself rather than single case
DESIGN	workaround for jruby-2326 (mri does not enter this production for some reason)
DESIGN	fixme we should really not be creating the dynamic scope for the root of the ast before parsing. this makes us end up needing to readjust this dynamic scope coming out of parse (and for local static scopes it will always happen because of $~ and $_). fixme because we end up adjusting this after-the-fact we can't use any of the specific-size scopes.
DESIGN	fixme resolve what the hell is going on
DESIGN	this is perhaps innefficient timewise? optimal spacewise
DESIGN	if variables were added then we may need to grow the dynamic scope to match the static one. fixme make this so we only need to check this for blockscope != null. we cannot currently since we create the dynamicscope for a localstaticscope before parse begins. refactoring should make this fixable.
DESIGN	fixme this is currently only here because of some problems with iooutputstream writing to a "bare" runtime without a proper scope
DESIGN	fixme this is currently only here because of some problems with iooutputstream writing to a "bare" runtime without a proper scope
DESIGN	we're depending on the side effect of the load which loads the class but does not turn it into a script i don't like it but until we restructure the code a bit more we'll need to quietly let it by here.
DESIGN	todo for now we use a faithful reimplementation of mri's algorithm but should use utf8encoding facilities from joni once it starts prefroming utf-8 content validation.
DESIGN	process streams get channel.newchannel()ed into filechannel but are not actually seekable. so instead of just the isseekable check doing instanceof filechannel we must also add this boolean to check which we set to false when it's known that the incoming channel is from a process. fixme this is gross and it's nio's fault for not providing a nice way to tell if a channel is "really" seekable.
WITHOUT_CLASSIFICATION	???
WITHOUT_CLASSIFICATION	class to be used to create the method. will be non-null if either class or object was provided during construction. can be used instead of invokee e.g. when using interfaces.
WITHOUT_CLASSIFICATION	if invokee was provided then clazz has been set up
WITHOUT_CLASSIFICATION	now eliminate any classpath entries that do not "match" the search
WITHOUT_CLASSIFICATION	finds all classes that extend the classes in the listsuperclasses arraylist searching in the listallclasses arraylist. @param superclasses the base classes to find subclasses for @param listallclasses the collection of classes to search in @param innerclasses indicate whether to include inner classes in the search @return arraylist of the subclasses
WITHOUT_CLASSIFICATION	finds all classes that extend the class searching in the listallclasses arraylist. @param theclass the parent class @param listallclasses the collection of classes to search in @param listsubclasses the collection of discovered subclasses @param innerclasses indicates whether inners classes should be included in the search
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	thread properties
WITHOUT_CLASSIFICATION	number of threads
WITHOUT_CLASSIFICATION	ramp-up
WITHOUT_CLASSIFICATION	loop count
WITHOUT_CLASSIFICATION	mainpanel.add(threadpropspanel borderlayout.north) add(mainpanel borderlayout.center)
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	sampler error action buttons
WITHOUT_CLASSIFICATION	defaults to continue
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------ fields ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------- methods -------------------------------------------
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------- methods implemented from org.xml.sax.contenthandler -----------------------------------------------------------------------
WITHOUT_CLASSIFICATION	an additional note on using hashsets to store urls i just discovered that obtaining the hashcode of a java.net.url implies a domain-name resolution process. this means significant delays can occur even more so if the domain name is not resolvable. whether this can be a problem in practical situations i can't tell but thought i'd keep a note just in case btw note that using a list and removing duplicates via scan would not help since url.equals requires name resolution too. the above problem has now been addressed with the urlstring and urlcollection classes.
WITHOUT_CLASSIFICATION	a dummy class to pass the pointer of url.
WITHOUT_CLASSIFICATION	now parse the dom tree
WITHOUT_CLASSIFICATION	clear maps
WITHOUT_CLASSIFICATION	defaults
WITHOUT_CLASSIFICATION	if it was a http get request then all parameters in the url has been handled by the sampler.setpath above so we just need to do parse the rest of the request if it is not a get request
WITHOUT_CLASSIFICATION	check if it was a multipart http post request
WITHOUT_CLASSIFICATION	get the post data using the content encoding of the request
WITHOUT_CLASSIFICATION	we start to iterate through the elements
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	synchronize with fixedqueueexecutor
WITHOUT_CLASSIFICATION	jmsmessageid cannot be null
WITHOUT_CLASSIFICATION	++ these are jmx file names and must not be changed $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	+jmx file attribute names - do not change any values! $non-nls-1$
WITHOUT_CLASSIFICATION	this will only work with an applet .class file. ideally this should be upgraded to work with objects (ie) and archives (.jar and .zip) files as well.
WITHOUT_CLASSIFICATION	instantiate the sampler
WITHOUT_CLASSIFICATION	ok because find only returns correct element types
WITHOUT_CLASSIFICATION	property was found in a config element. whether or not it matched the value in the sampler we're done with this property -- don't look at lower-priority configs
WITHOUT_CLASSIFICATION	hashmap to save ssl connection between jmeter proxy and browser
WITHOUT_CLASSIFICATION	get the component parts assume domains must have at least 2 parts e.g. apache.org don't try matching against .org however we don't check .co.uk here
WITHOUT_CLASSIFICATION	check if we found an accept-charset attribute on the form
WITHOUT_CLASSIFICATION	the next line looks odd but proxied http requests look like get httpwww.apache.org/foundation/ http/1.1 i.e. url starts with "http" not "/" whereas https proxy requests look like connect www.google.co.uk443 http/1.1 followed by get /?gws_rd=cr http/1.1
WITHOUT_CLASSIFICATION	a http response header looks alot like http/1.0 200 ok date wednesday 02-feb-94 230412 gmt server ncsa/1.1 mime-version 1.0 last-modified monday 15-nov-93 233316 gmt content-type text/html content-length 2345 \r\n
WITHOUT_CLASSIFICATION	count the retries as well in the time
WITHOUT_CLASSIFICATION	for result
WITHOUT_CLASSIFICATION	make sure the sample start time and sample end time are recorded in order not to confuse the statistics calculation methods if an error occurs and an exception is thrown it is possible that the result.samplestart() or result.sampleend() won't be called
WITHOUT_CLASSIFICATION	we've finished with the request so we can add the localaddress to it for display
WITHOUT_CLASSIFICATION	handle the various methods
WITHOUT_CLASSIFICATION	set up the local address if one exists
WITHOUT_CLASSIFICATION	a well-behaved browser is supposed to send 'connection close' with the last request to an http server. instead most browsers leave it to the server to close the connection after their timeout period. leave it to the jmeter user to decide.
WITHOUT_CLASSIFICATION	encoding does not really matter here
WITHOUT_CLASSIFICATION	add any files cannot retrieve parts once added to the multipartentity so have to save them here.
WITHOUT_CLASSIFICATION	we get the posted bytes using the encoding used to create it
WITHOUT_CLASSIFICATION	in a post request which is not multipart we only support parameters no file upload is allowed
WITHOUT_CLASSIFICATION	just append all the parameter values and use that as the post body
WITHOUT_CLASSIFICATION	allow the mimetype of the file to control the content type this is not obvious in gui if you are not uploading any files but just sending the content of nameless parameters
WITHOUT_CLASSIFICATION	allow the mimetype of the file to control the content type this is not obvious in gui if you are not uploading any files but just sending the content of nameless parameters
WITHOUT_CLASSIFICATION	we use the encoding which should be used according to the http spec which is utf-8
WITHOUT_CLASSIFICATION	n.b. revision 323346 introduced the classcast check but then used iter.next() to fetch the item to be cast thus skipping the element that did not cast. reverted to work more like the original code but with the check in place. added a warning message so can track whether it is necessary
WITHOUT_CLASSIFICATION	don't break the world just because this failed
WITHOUT_CLASSIFICATION	if concurrent download emb. resources add to a list for async gets later
WITHOUT_CLASSIFICATION	thread pool executor to get resources use a linkedblockingqueue note max pool size doesn't effect
WITHOUT_CLASSIFICATION	the following three can be discussed should they be from the first request or from the final one? i chose to do it this way because that's what browsers do they show the final url of the redirect chain in the location field.
WITHOUT_CLASSIFICATION	commons httpclient only
WITHOUT_CLASSIFICATION	set the content length
WITHOUT_CLASSIFICATION	make the connection ready for sending post data
WITHOUT_CLASSIFICATION	check if target of merge is reasonable
WITHOUT_CLASSIFICATION	we must ask the user if it is ok to close current project i.e. it is open
WITHOUT_CLASSIFICATION	don't change name if merging
WITHOUT_CLASSIFICATION	allow for missing optional jars
WITHOUT_CLASSIFICATION	does not appear to be used externally called by #loadprojectfile()
WITHOUT_CLASSIFICATION	converttree(tree)
WITHOUT_CLASSIFICATION	if we are loading a new test plan initialize the tree with the testplan node we are loading
WITHOUT_CLASSIFICATION	these are handled specially by addtotree
WITHOUT_CLASSIFICATION	document doc = null
WITHOUT_CLASSIFICATION	write to file
WITHOUT_CLASSIFICATION	make the connection ready for sending post data
WITHOUT_CLASSIFICATION	make the connection ready for sending post data
WITHOUT_CLASSIFICATION	@see org.apache.jmeter.gui.action.command#getactionnames()
WITHOUT_CLASSIFICATION	boolean toreturn = true
WITHOUT_CLASSIFICATION	don't automatically expand when merging
WITHOUT_CLASSIFICATION	+jmx file attributes - do not change values! $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ -jmx file attributes
WITHOUT_CLASSIFICATION	called by jmeter#startgui()
WITHOUT_CLASSIFICATION	no error as default
WITHOUT_CLASSIFICATION	helper method to simplify code
WITHOUT_CLASSIFICATION	one builder for all requests in a thread
WITHOUT_CLASSIFICATION	but we do trap this error to make tests work better
WITHOUT_CLASSIFICATION	may well happen
WITHOUT_CLASSIFICATION	should never happen
WITHOUT_CLASSIFICATION	note initialised with error = failure = false
WITHOUT_CLASSIFICATION	hc3.1 does not have the method
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	should never happen
WITHOUT_CLASSIFICATION	means counting from end
WITHOUT_CLASSIFICATION	no point continuing mainly for bsh.evalerror
WITHOUT_CLASSIFICATION	create a parser
WITHOUT_CLASSIFICATION	doc =
WITHOUT_CLASSIFICATION	if everything went fine then xml schema validation is valid
WITHOUT_CLASSIFICATION	only set message if error not yet flagged
WITHOUT_CLASSIFICATION	helper method to construct sax error details
WITHOUT_CLASSIFICATION	can be caused by - failure to read xsd file - xml does not match xsd
WITHOUT_CLASSIFICATION	can be caused by - premature end of file - non-whitespace content after trailer
WITHOUT_CLASSIFICATION	static int to signify the type of logical comparitor to assert
WITHOUT_CLASSIFICATION	is the sample the correct size?
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	use the name of the test element otherwise cannot enable/disable debug from the gui
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	the signer certificate
WITHOUT_CLASSIFICATION	@param response @return
WITHOUT_CLASSIFICATION	has the sample lasted too long?
WITHOUT_CLASSIFICATION	ensure the manager is initialised we don't currently need to do anything further as this sets the default https protocol
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$ $non-nls-3$ $non-nls-1$ $non-nls-2$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ these are the names of the get/set methods
WITHOUT_CLASSIFICATION	no point in checking if we don't have anything to compare against
WITHOUT_CLASSIFICATION	no error as default
WITHOUT_CLASSIFICATION	create parser
WITHOUT_CLASSIFICATION	string md5result = digestutils.md5hex(resultdata)
WITHOUT_CLASSIFICATION	evaluate result
WITHOUT_CLASSIFICATION	package protected so can be accessed by test class
WITHOUT_CLASSIFICATION	return with an error
WITHOUT_CLASSIFICATION	these constants are used both for the jmx file and for the setters/getters $non-nls-1$
WITHOUT_CLASSIFICATION	return with an error
WITHOUT_CLASSIFICATION	flush
WITHOUT_CLASSIFICATION	run tidy.
WITHOUT_CLASSIFICATION	return with no error
WITHOUT_CLASSIFICATION	write output to file
WITHOUT_CLASSIFICATION	return with no error
WITHOUT_CLASSIFICATION	check if filename defined
WITHOUT_CLASSIFICATION	close file
WITHOUT_CLASSIFICATION	open file
WITHOUT_CLASSIFICATION	"" is not the same as no realm
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	no error as default
WITHOUT_CLASSIFICATION	mask should contain all types (but not not)
WITHOUT_CLASSIFICATION	the string to check (url or data)
WITHOUT_CLASSIFICATION	allow testing of failure codes
WITHOUT_CLASSIFICATION	what are we testing against?
WITHOUT_CLASSIFICATION	assume it is the url
WITHOUT_CLASSIFICATION	assume it is the url
WITHOUT_CLASSIFICATION	do it once outside loop
WITHOUT_CLASSIFICATION	not should always succeed against an empty result
WITHOUT_CLASSIFICATION	get the matcher for this thread
WITHOUT_CLASSIFICATION	should never happen
WITHOUT_CLASSIFICATION	+ jmx file attributes $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ - jmx file attributes
WITHOUT_CLASSIFICATION	reset the bsh.interpreter before each execution
WITHOUT_CLASSIFICATION	script file name (if present)
WITHOUT_CLASSIFICATION	parameters to pass to script file (or script)
WITHOUT_CLASSIFICATION	script area
WITHOUT_CLASSIFICATION	don't let the input field shrink too much
WITHOUT_CLASSIFICATION	send post data from <code>entry</code> to the open connection. @param connection <code>urlconnection</code> where post data should be sent @return a string show what was posted. will not contain actual file upload content @exception ioexception if an i/o exception occurs
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	file panel $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	assume it is the url
WITHOUT_CLASSIFICATION	user_input
WITHOUT_CLASSIFICATION	class attributes
WITHOUT_CLASSIFICATION	user_input
WITHOUT_CLASSIFICATION	user_input
WITHOUT_CLASSIFICATION	user_input
WITHOUT_CLASSIFICATION	doctype
WITHOUT_CLASSIFICATION	doctype
WITHOUT_CLASSIFICATION	names for the fields $non-nls-1$
WITHOUT_CLASSIFICATION	instance attributes
WITHOUT_CLASSIFICATION	format (hmtl xhtml xml)
WITHOUT_CLASSIFICATION	errors only
WITHOUT_CLASSIFICATION	thresholds
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	drop the last character
WITHOUT_CLASSIFICATION	store the operator
WITHOUT_CLASSIFICATION	default
WITHOUT_CLASSIFICATION	put the check boxes in a column in a panel
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.modifytestelement(testelement)
WITHOUT_CLASSIFICATION	assume url
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	user_input
WITHOUT_CLASSIFICATION	user_input
WITHOUT_CLASSIFICATION	initialize to empty string this will fail the assertion
WITHOUT_CLASSIFICATION	md5hexinput.addfocuslistener(this)
WITHOUT_CLASSIFICATION	@return
WITHOUT_CLASSIFICATION	should tidy be quiet?
WITHOUT_CLASSIFICATION	@param element
WITHOUT_CLASSIFICATION	should we download external dtds?
WITHOUT_CLASSIFICATION	called by xpathassertiongui
WITHOUT_CLASSIFICATION	report tidy errors as assertion failure?
WITHOUT_CLASSIFICATION	process tolerant settings
WITHOUT_CLASSIFICATION	show tidy warnings ?
WITHOUT_CLASSIFICATION	called by xpathassertiongui
WITHOUT_CLASSIFICATION	non-tidy options
WITHOUT_CLASSIFICATION	tidy options
WITHOUT_CLASSIFICATION	called by xpathextractorgui
WITHOUT_CLASSIFICATION	called by xpathextractorgui
WITHOUT_CLASSIFICATION	samp.setdomain(this.getdomain()) samp.setport(this.getport())
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	panel.add(signercheckbyfile)
WITHOUT_CLASSIFICATION	access needed from csvdataset
WITHOUT_CLASSIFICATION	store the resource keys
WITHOUT_CLASSIFICATION	default (e.g. if test plan does not have definition)
WITHOUT_CLASSIFICATION	n.b. this class is shared between threads (nothreadclone) so all access to variables needs to be protected by a lock (either sync. or volatile) to ensure safe publication.
WITHOUT_CLASSIFICATION	this class is not cloned per thread so this is shared
WITHOUT_CLASSIFICATION	used for per-thread/user numbers cannot be static as random numbers are not to be shared between instances
WITHOUT_CLASSIFICATION	nextint(n) returns values in the range [0n) so n must be set to max-min+1
WITHOUT_CLASSIFICATION	this can overflow
WITHOUT_CLASSIFICATION	this is used as an error indicator
WITHOUT_CLASSIFICATION	check for overflow too
WITHOUT_CLASSIFICATION	cannot use getthreadcontext() as we are not cloned per thread
WITHOUT_CLASSIFICATION	use format to create number if it fails use the default
WITHOUT_CLASSIFICATION	the original name of the property
WITHOUT_CLASSIFICATION	variables are unlikely to contain spaces so most likely a translation
WITHOUT_CLASSIFICATION	reset the value
WITHOUT_CLASSIFICATION	user-specified key
WITHOUT_CLASSIFICATION	treat the same as eof
WITHOUT_CLASSIFICATION	i.e. eof
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	n.b. must be in this class for the testbean code to work
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	allow for missing optional jars
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	these variable names must have .displayname properties and agree with the getxxx()/setxxx() methods $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	these group names must have .displayname properties $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	if we found a testplan then we are on our way to the testfragment
WITHOUT_CLASSIFICATION	only try to load the jmx test plan if there is one
WITHOUT_CLASSIFICATION	filter the tree for a testfragment.
WITHOUT_CLASSIFICATION	ensure counts are updated correctly
WITHOUT_CLASSIFICATION	these items are shared between threads in a group by the clone() method they are initialised by teststarted() so don't need to be serialised
WITHOUT_CLASSIFICATION	todo ?? (jmetertreenode) selectednode.clone()
WITHOUT_CLASSIFICATION	ensure global counters and lock are shared across threads in the group
WITHOUT_CLASSIFICATION	insert the subcontrollersandsamplers into random list positions.
WITHOUT_CLASSIFICATION	nodepath.add(selectednode.getname())
WITHOUT_CLASSIFICATION	we clone to avoid enabling existing node
WITHOUT_CLASSIFICATION	returns the selection value as a int with the value set to zero if it is out of range.
WITHOUT_CLASSIFICATION	set the selection once per iteration
WITHOUT_CLASSIFICATION	create a new list containing numelements null elements.
WITHOUT_CLASSIFICATION	replace subcontrollersandsamplers with reordered copy.
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	retrieve the formatted data using the same encoding used to create it
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.modifytestelement(testelement)
WITHOUT_CLASSIFICATION	set the position when next is first called and don't overwrite until reinitialize is called.
WITHOUT_CLASSIFICATION	setdone(true)
WITHOUT_CLASSIFICATION	we've gone through the whole list and are now back at the start point of our search.
WITHOUT_CLASSIFICATION	$non-nls-1$ throughput.addactionlistener(this)
WITHOUT_CLASSIFICATION	start/end index default value for string getters and setters
WITHOUT_CLASSIFICATION	implements unsharedcomponent
WITHOUT_CLASSIFICATION	although the default is not the same as for the string value it is only used internally
WITHOUT_CLASSIFICATION	although the default is not the same as for the string value it is only used internally
WITHOUT_CLASSIFICATION	prevent entry if nothing to do
WITHOUT_CLASSIFICATION	these must not be static otherwise language change does not work $non-nls-1$
WITHOUT_CLASSIFICATION	perthread field
WITHOUT_CLASSIFICATION	in case we are converting back from floating point drop the decimal fraction $non-nls-1$
WITHOUT_CLASSIFICATION	type field
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	text field
WITHOUT_CLASSIFICATION	text field
WITHOUT_CLASSIFICATION	text field
WITHOUT_CLASSIFICATION	text field
WITHOUT_CLASSIFICATION	text field
WITHOUT_CLASSIFICATION	standalone
WITHOUT_CLASSIFICATION	embedded
WITHOUT_CLASSIFICATION	jpanel looppanel = new jpanel(new borderlayout(5 0))
WITHOUT_CLASSIFICATION	only replace default if it is provided
WITHOUT_CLASSIFICATION	may be null for put in an application/x-www-form-urlencoded request we only support parameters no file upload is allowed
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	should not happen
WITHOUT_CLASSIFICATION	implements unsharedcomponent
WITHOUT_CLASSIFICATION	fetch some variables
WITHOUT_CLASSIFICATION	loop label $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	+ jmx file attributes $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ - jmx file attributes
WITHOUT_CLASSIFICATION	checkbox $non-nls-1$
WITHOUT_CLASSIFICATION	================= internal business =================
WITHOUT_CLASSIFICATION	drop-down menu
WITHOUT_CLASSIFICATION	number of previous matches
WITHOUT_CLASSIFICATION	reset previous result
WITHOUT_CLASSIFICATION	e.g. dtd not reachable
WITHOUT_CLASSIFICATION	this method assumes utf-8 input data
WITHOUT_CLASSIFICATION	can happen for bad input document
WITHOUT_CLASSIFICATION	============= object properties ================
WITHOUT_CLASSIFICATION	permissible values true - match against headers false or absent - match against body (this was the original default) url - match against url these are passed to the setusefield() method do not change these values!
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	will already have been logged by xpathutil fail the sample
WITHOUT_CLASSIFICATION	just in case clear any other remaining variables
WITHOUT_CLASSIFICATION	what to match against. n.b. do not change the string value or test plans will break! $non-nls-1$
WITHOUT_CLASSIFICATION	note responsedata encoding is server specific therefore we do byte -> unicode -> byte conversion to ensure utf-8 encoding as required by xpathutil convert unicode string -> utf-8 bytes $non-nls-1$
WITHOUT_CLASSIFICATION	ensure old value is not left defined
WITHOUT_CLASSIFICATION	ensure old value is not left defined
WITHOUT_CLASSIFICATION	fetch some variables
WITHOUT_CLASSIFICATION	only replace default if it is provided
WITHOUT_CLASSIFICATION	note match.groups() includes group 0
WITHOUT_CLASSIFICATION	refname has already been set to the default (if present)
WITHOUT_CLASSIFICATION	number of refname_n variable sets to keep
WITHOUT_CLASSIFICATION	number of refname_n variable sets to keep
WITHOUT_CLASSIFICATION	save the count
WITHOUT_CLASSIFICATION	original match behaviour
WITHOUT_CLASSIFICATION	original match behaviour
WITHOUT_CLASSIFICATION	< 0 means we save all the matches
WITHOUT_CLASSIFICATION	remove any single matches
WITHOUT_CLASSIFICATION	remove any left-over variables
WITHOUT_CLASSIFICATION	no need to process further
WITHOUT_CLASSIFICATION	remove the group count
WITHOUT_CLASSIFICATION	how many groups are there?
WITHOUT_CLASSIFICATION	remove the remaining _gn vars
WITHOUT_CLASSIFICATION	trailing string is not empty
WITHOUT_CLASSIFICATION	contains strings and integers
WITHOUT_CLASSIFICATION	remove the g0g1gn vars
WITHOUT_CLASSIFICATION	add match as integer
WITHOUT_CLASSIFICATION	string is not empty
WITHOUT_CLASSIFICATION	allow for property not yet being set (probably only applies to test cases)
WITHOUT_CLASSIFICATION	random match
WITHOUT_CLASSIFICATION	for request data
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ e.g. "transfer-encoding chunked" which is processed automatically by the underlying protocol $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ pseudo-header for reporting local address $non-nls-1$ $non-nls-1$ $non-nls-1$ for handling caching $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ e.g. public max-age=259200 e.g. date header of response
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	use format to create number if it fails use the default
WITHOUT_CLASSIFICATION	< 0 means we save all the matches
WITHOUT_CLASSIFICATION	save the count
WITHOUT_CLASSIFICATION	remove any left-over variables
WITHOUT_CLASSIFICATION	no need to process further
WITHOUT_CLASSIFICATION	random match
WITHOUT_CLASSIFICATION	next line
WITHOUT_CLASSIFICATION	next line
WITHOUT_CLASSIFICATION	used for per-thread/user storage of increment in thread group main loop
WITHOUT_CLASSIFICATION	so we know which button is selected
WITHOUT_CLASSIFICATION	reset
WITHOUT_CLASSIFICATION	used for per-thread/user numbers
WITHOUT_CLASSIFICATION	cannot use getthreadcontext() as not cloned per thread
WITHOUT_CLASSIFICATION	get to 'path' part of the url preserving schema auth host if present
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	can be specified in jmeter.properties $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	this class is not cloned per thread so this is shared @guardedby("this")
WITHOUT_CLASSIFICATION	although the lock appears to be an instance lock in fact the lock is shared between all threads in a thread group but different thread groups have different locks - see the clone() method below the lock ensures that all the variables are processed together which is important for functions such as __csvread and _stringfromfile.
WITHOUT_CLASSIFICATION	lock object must exist
WITHOUT_CLASSIFICATION	ensure that clones share the same lock object
WITHOUT_CLASSIFICATION	super.mergein(element)
WITHOUT_CLASSIFICATION	don't process the name column
WITHOUT_CLASSIFICATION	enable delete (which may already be enabled but it won't hurt)
WITHOUT_CLASSIFICATION	enable delete (which may already be enabled but it won't hurt)
WITHOUT_CLASSIFICATION	highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	disable delete if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	disable delete if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	verify for a ".." component at next iteration
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	table still contains one or more rows so highlight (select) the appropriate one.
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	table still contains one or more rows so highlight (select) the appropriate one.
WITHOUT_CLASSIFICATION	paramtable.setrowselectionallowed(true) paramtable.setcolumnselectionallowed(true)
WITHOUT_CLASSIFICATION	property values are strings
WITHOUT_CLASSIFICATION	paramtable.setcellselectionenabled(true) paramtable.setpreferredscrollableviewportsize(new dimension(100 70))
WITHOUT_CLASSIFICATION	send the mail
WITHOUT_CLASSIFICATION	send the mail
WITHOUT_CLASSIFICATION	create some properties and get the default session
WITHOUT_CLASSIFICATION	create a message
WITHOUT_CLASSIFICATION	this can't happen (how should utf8 not be supported!?!) so just throw an error
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	for request data
WITHOUT_CLASSIFICATION	setter/getter - javadoc-comments not needed
WITHOUT_CLASSIFICATION	-1 is the code for a failed sample.
WITHOUT_CLASSIFICATION	private void setsuccesscount(long count) { this.successcount = count }
WITHOUT_CLASSIFICATION	private void setfailurecount(long count) { this.failurecount = count }
WITHOUT_CLASSIFICATION	sends the result to the visualiser updates the model used for sending e-mails
WITHOUT_CLASSIFICATION	actions
WITHOUT_CLASSIFICATION	action targets
WITHOUT_CLASSIFICATION	public static final int thread_group = 1
WITHOUT_CLASSIFICATION	this means no sample is saved
WITHOUT_CLASSIFICATION	take copy so cannot get npe
WITHOUT_CLASSIFICATION	gui components
WITHOUT_CLASSIFICATION	private buttongroup actionbuttons
WITHOUT_CLASSIFICATION	state variables
WITHOUT_CLASSIFICATION	target
WITHOUT_CLASSIFICATION	action
WITHOUT_CLASSIFICATION	duration
WITHOUT_CLASSIFICATION	the property name to be used to look up the display string
WITHOUT_CLASSIFICATION	for calculating throughput across all threads
WITHOUT_CLASSIFICATION	for holding the througputinfo objects for all threadgroups. keyed by abstractthreadgroup objects
WITHOUT_CLASSIFICATION	if previous time is zero then target will be in the past. this is what we want so first sample is run without a delay.
WITHOUT_CLASSIFICATION	assume the sample will run as soon as the delay has expired
WITHOUT_CLASSIFICATION	calculate the delay based on the mode
WITHOUT_CLASSIFICATION	n.b. we fetch the throughput each time as it may vary during a test
WITHOUT_CLASSIFICATION	total number of threads
WITHOUT_CLASSIFICATION	active threads in this group
WITHOUT_CLASSIFICATION	all threads - alternate calculation
WITHOUT_CLASSIFICATION	all threads in this group - alternate calculation
WITHOUT_CLASSIFICATION	no need to sync as one per instance
WITHOUT_CLASSIFICATION	add to cache
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	can be specified in jmeter.properties $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	cannot happen
WITHOUT_CLASSIFICATION	string in the panel do not make these static otherwise language changes don't work $non-nls-1$
WITHOUT_CLASSIFICATION	we did not replace the entry so use the existing one
WITHOUT_CLASSIFICATION	e.g. 0 i.e. 1
WITHOUT_CLASSIFICATION	we're behind schedule -- try to catch up assume the sample will run immediately
WITHOUT_CLASSIFICATION	for access from test code
WITHOUT_CLASSIFICATION	synchronize on the info object's mutex to ensure multiple threads don't update the scheduled time simultaneously
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	for access from test code
WITHOUT_CLASSIFICATION	unique barrier creation ensured by synchronized setup
WITHOUT_CLASSIFICATION	must be defined
WITHOUT_CLASSIFICATION	instantiate requestview classes
WITHOUT_CLASSIFICATION	ensure transient object is created by the server
WITHOUT_CLASSIFICATION	delay deviation
WITHOUT_CLASSIFICATION	lazy init
WITHOUT_CLASSIFICATION	use later
WITHOUT_CLASSIFICATION	avg delay
WITHOUT_CLASSIFICATION	prepare the request tabbed pane
WITHOUT_CLASSIFICATION	place raw tab in first position (first tab)
WITHOUT_CLASSIFICATION	hint to background color on bottom tabs (grey not blue)
WITHOUT_CLASSIFICATION	we assume the argument value is encoded according to the http spec i.e. utf-8
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	create the panels for the regexp tab
WITHOUT_CLASSIFICATION	go to first line
WITHOUT_CLASSIFICATION	construct a multi-line string with all matches
WITHOUT_CLASSIFICATION	add regexp tester pane $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	private static final int limit_str_size = 100 private boolean isroot
WITHOUT_CLASSIFICATION	if other node type we will just skip it
WITHOUT_CLASSIFICATION	main panel
WITHOUT_CLASSIFICATION	name
WITHOUT_CLASSIFICATION	description panel
WITHOUT_CLASSIFICATION	number panel
WITHOUT_CLASSIFICATION	information display panel
WITHOUT_CLASSIFICATION	boolean resized = true
WITHOUT_CLASSIFICATION	rounds!
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	main panel
WITHOUT_CLASSIFICATION	name
WITHOUT_CLASSIFICATION	set up the table itself
WITHOUT_CLASSIFICATION	everyone is free to swing on its side ) add(infopanel borderlayout.east)
WITHOUT_CLASSIFICATION	note the resource string won't respond to locale-changes however this does not matter as it is only used when pasting to the clipboard
WITHOUT_CLASSIFICATION	dimension of the splinegraph is the same resized = false
WITHOUT_CLASSIFICATION	sample number (string) start time thread name label sample time status bytes
WITHOUT_CLASSIFICATION	dimension changed resized = true
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	add the main panel and the graph
WITHOUT_CLASSIFICATION	column renderers
WITHOUT_CLASSIFICATION	the object used for each row
WITHOUT_CLASSIFICATION	table.gettableheader().setreorderingallowed(false)
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	make a internal list of all results to allow reload data with filter or interval
WITHOUT_CLASSIFICATION	default checked $non-nls-1$
WITHOUT_CLASSIFICATION	set up footer of table which displays numerics of the graphs
WITHOUT_CLASSIFICATION	generate x-axis label and associated color
WITHOUT_CLASSIFICATION	set up the table with footer
WITHOUT_CLASSIFICATION	sampler selection
WITHOUT_CLASSIFICATION	internal list of all results
WITHOUT_CLASSIFICATION	use for x-axis scale
WITHOUT_CLASSIFICATION	we check the count to see if we have exceeded the number of lines to parse. there's no way to know where to stop in the file. therefore we use break to escape the while loop when we've reached the count.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	main panel
WITHOUT_CLASSIFICATION	reset colors index
WITHOUT_CLASSIFICATION	list of value by sampler
WITHOUT_CLASSIFICATION	we want to retain insertion order so linkedhashmap is necessary
WITHOUT_CLASSIFICATION	canvas size
WITHOUT_CLASSIFICATION	draw the graph
WITHOUT_CLASSIFICATION	test can't have a duration more than 2^31 secs (cast from long to int)
WITHOUT_CLASSIFICATION	calculate intermediate values (if needed)
WITHOUT_CLASSIFICATION	log.debug("data["+s+"]["+idx+"] " + data[s][idx])
WITHOUT_CLASSIFICATION	if clic on the graph tab make the graph (without apply interval or filter)
WITHOUT_CLASSIFICATION	if use dynamic graph size is checked we disable the dimension fields
WITHOUT_CLASSIFICATION	force reload data
WITHOUT_CLASSIFICATION	not 'else if' because forcereloaddata
WITHOUT_CLASSIFICATION	reload data from file
WITHOUT_CLASSIFICATION	reload data form internal list of results
WITHOUT_CLASSIFICATION	calculate the test duration. needs to xaxis labels and getdata.
WITHOUT_CLASSIFICATION	button
WITHOUT_CLASSIFICATION	button
WITHOUT_CLASSIFICATION	search field
WITHOUT_CLASSIFICATION	checkboxes
WITHOUT_CLASSIFICATION	$non-nls-1$ default bold
WITHOUT_CLASSIFICATION	default circle
WITHOUT_CLASSIFICATION	default option
WITHOUT_CLASSIFICATION	keep copies of the two editors needed
WITHOUT_CLASSIFICATION	could be <html lang=""> $non-nls-1$
WITHOUT_CLASSIFICATION	look for a case variation
WITHOUT_CLASSIFICATION	ditto $non-nls-1$
WITHOUT_CLASSIFICATION	to disable downloading and rendering of images and frames enable the editor-kit. the stream property can then be
WITHOUT_CLASSIFICATION	must be done before setcontenttype
WITHOUT_CLASSIFICATION	now we create the compiled pattern and add it to the arraylist
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	the child to be removed will always be 0 'cos as the nodes are removed the nth node will become (n-1)th
WITHOUT_CLASSIFICATION	get the text response and image icon to determine which is not null
WITHOUT_CLASSIFICATION	bug can generate rte
WITHOUT_CLASSIFICATION	number of nodes
WITHOUT_CLASSIFICATION	number of non extreme nodes (_m-2)
WITHOUT_CLASSIFICATION	the number of nodes is defined by the length of r
WITHOUT_CLASSIFICATION	grab the nodes
WITHOUT_CLASSIFICATION	computes interpolation coefficients
WITHOUT_CLASSIFICATION	creation of the interpolation structure
WITHOUT_CLASSIFICATION	local variables
WITHOUT_CLASSIFICATION	local variables
WITHOUT_CLASSIFICATION	initialize system structures (just to be safe)
WITHOUT_CLASSIFICATION	initialize the diagonal of the system matrix (a) to 4
WITHOUT_CLASSIFICATION	initialize the two minor diagonals of a to 1
WITHOUT_CLASSIFICATION	initialize b
WITHOUT_CLASSIFICATION	di (degree 0)
WITHOUT_CLASSIFICATION	ci (degree 1)
WITHOUT_CLASSIFICATION	bi (degree 2)
WITHOUT_CLASSIFICATION	ai (degree 3)
WITHOUT_CLASSIFICATION	intermediate arrays
WITHOUT_CLASSIFICATION	jacobi convergence test
WITHOUT_CLASSIFICATION	init newx and oldx arrays to 0
WITHOUT_CLASSIFICATION	main iteration
WITHOUT_CLASSIFICATION	verify t belongs to the curve (range [0 _m-1])
WITHOUT_CLASSIFICATION	silent error consider the curve is constant outside its range
WITHOUT_CLASSIFICATION	seek the good interval for t and get the piece of curve on it
WITHOUT_CLASSIFICATION	the polynomial calculation is done by the (fast) euler method
WITHOUT_CLASSIFICATION	computes auto-scaling and absolute plots
WITHOUT_CLASSIFICATION	shouldn't draw negative values
WITHOUT_CLASSIFICATION	we want to return the context that is actually in the map if it's the first put we will have a null result
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	main panel
WITHOUT_CLASSIFICATION	settings panes
WITHOUT_CLASSIFICATION	the number of non extreme nodes is the number of intervals minus 1 i.e. the length of r minus 2
WITHOUT_CLASSIFICATION	the upper limit of the curve range belongs by definition to the last interval
WITHOUT_CLASSIFICATION	jacobi system resolving results are stored in _rs computes the coefficients (di ci bi ai) from the results
WITHOUT_CLASSIFICATION	computes relative auto-scaled plots to fit in the specified area
WITHOUT_CLASSIFICATION	computes the value of the curve at the pecified abscissa and relative to the beginning of the right piece of spline curve
WITHOUT_CLASSIFICATION	return label
WITHOUT_CLASSIFICATION	initialize gui.
WITHOUT_CLASSIFICATION	show the grid lines to turn it off set it to zero
WITHOUT_CLASSIFICATION	test mail button
WITHOUT_CLASSIFICATION	reset the paint counter
WITHOUT_CLASSIFICATION	failures count
WITHOUT_CLASSIFICATION	set the y axis to round
WITHOUT_CLASSIFICATION	does not need to be synch. because it is only accessed from the sampler thread the clientpool does access it in a different thread but clientpool is fully synch.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	used by request panel $non-nls-1$
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.visualizers.request.requestview#init()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.visualizers.request.requestview#cleardata()
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	go to first line
WITHOUT_CLASSIFICATION	construct a multi-line string with all matches
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	don't display request headers label if rh is null or empty
WITHOUT_CLASSIFICATION	implementation of the actionlistener-interface.
WITHOUT_CLASSIFICATION	methods used to store and retrieve the mailervisualizer.
WITHOUT_CLASSIFICATION	methods to implement the modellistener.
WITHOUT_CLASSIFICATION	$non-nls-1$ don't set empty to keep cssjquery cssjqueryfield.settext("") $non-nls-1$ $non-nls-1$ don't set empty to keep attribute this.attributefield.settext("") $non-nls-1$ don't change impl this.cssjquerylabeledchoice.settext(htmlextractor.default_extractor)
WITHOUT_CLASSIFICATION	create the panels for the cssjquery tab
WITHOUT_CLASSIFICATION	most current subclasses can process text
WITHOUT_CLASSIFICATION	could be sampleresult or assertionresult
WITHOUT_CLASSIFICATION	add a message when no request data (ex. java request)
WITHOUT_CLASSIFICATION	to save last select tab (raw/parsed)
WITHOUT_CLASSIFICATION	result column renderers
WITHOUT_CLASSIFICATION	response headers column renderers
WITHOUT_CLASSIFICATION	response fields column renderers
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	the object used for each row
WITHOUT_CLASSIFICATION	the object used for each row
WITHOUT_CLASSIFICATION	add cssjquery tester pane $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	n.b. these are not multi-threaded so don't make it static iso format $non-nls-1$
WITHOUT_CLASSIFICATION	one space for blank header $non-nls-1$ one space for blank header $non-nls-1$
WITHOUT_CLASSIFICATION	key value
WITHOUT_CLASSIFICATION	key value
WITHOUT_CLASSIFICATION	key value
WITHOUT_CLASSIFICATION	create tables the object used for each row
WITHOUT_CLASSIFICATION	response data $non-nls-1$ request data $non-nls-1$ sampler result $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ create the panels for the other tabs
WITHOUT_CLASSIFICATION	clear all data before display a new
WITHOUT_CLASSIFICATION	we are displaying a sampleresult
WITHOUT_CLASSIFICATION	reset for reuse
WITHOUT_CLASSIFICATION	reset for reuse
WITHOUT_CLASSIFICATION	no need to change the foreground color
WITHOUT_CLASSIFICATION	response message label
WITHOUT_CLASSIFICATION	done
WITHOUT_CLASSIFICATION	parsed response headers
WITHOUT_CLASSIFICATION	reset search
WITHOUT_CLASSIFICATION	restore tabbed pane parsed if needed
WITHOUT_CLASSIFICATION	restore last selected tab
WITHOUT_CLASSIFICATION	remove the other (parsed) tab if present
WITHOUT_CLASSIFICATION	cache for object-message only used when parsing from a file because in text-area property replacement might have been used
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	hint to background color on bottom tabs (grey not blue)
WITHOUT_CLASSIFICATION	set up the 1st table result with empty headers
WITHOUT_CLASSIFICATION	quieten findbugs default - do nothing
WITHOUT_CLASSIFICATION	add styles to use for different types of status messages
WITHOUT_CLASSIFICATION	prepare the results tabbed pane
WITHOUT_CLASSIFICATION	set up the 3rd table
WITHOUT_CLASSIFICATION	set up the 2nd table
WITHOUT_CLASSIFICATION	create the split pane
WITHOUT_CLASSIFICATION	create the split pane
WITHOUT_CLASSIFICATION	add search text extension
WITHOUT_CLASSIFICATION	maximum size that we will display
WITHOUT_CLASSIFICATION	add sample
WITHOUT_CLASSIFICATION	add any assertion that failed as children of the sample node
WITHOUT_CLASSIFICATION	add any assertion that failed as children of the sample node
WITHOUT_CLASSIFICATION	prepare the common tab
WITHOUT_CLASSIFICATION	init right side with first render
WITHOUT_CLASSIFICATION	to restore last tab used
WITHOUT_CLASSIFICATION	drop-down list for renderer
WITHOUT_CLASSIFICATION	if no results render in jmeter.properties load standard (default)
WITHOUT_CLASSIFICATION	instantiate render classes
WITHOUT_CLASSIFICATION	preset to "text" option
WITHOUT_CLASSIFICATION	to restore last selected tab (better user-friendly)
WITHOUT_CLASSIFICATION	remove old right side
WITHOUT_CLASSIFICATION	create and add a new right side
WITHOUT_CLASSIFICATION	to display current sampler result before change
WITHOUT_CLASSIFICATION	in the case the test uses a file we set it locally and prevent loading the file repeatedly
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	main panel
WITHOUT_CLASSIFICATION	name
WITHOUT_CLASSIFICATION	the child to be removed will always be 0 'cos as the nodes are removed the nth node will become (n-1)th
WITHOUT_CLASSIFICATION	processes assertions display a sampleresult
WITHOUT_CLASSIFICATION	set the status for the node
WITHOUT_CLASSIFICATION	noop state is held by component
WITHOUT_CLASSIFICATION	textarea label
WITHOUT_CLASSIFICATION	textarea
WITHOUT_CLASSIFICATION	define max scale y axis
WITHOUT_CLASSIFICATION	if the title graph is empty we can assume some default
WITHOUT_CLASSIFICATION	replace _xaxistitle to null (don't display x axis title)
WITHOUT_CLASSIFICATION	stroke and shape line settings
WITHOUT_CLASSIFICATION	lines colors
WITHOUT_CLASSIFICATION	define chart type (line)
WITHOUT_CLASSIFICATION	y axis ruler
WITHOUT_CLASSIFICATION	~a tic every 50 px
WITHOUT_CLASSIFICATION	increment cannot be < 1
WITHOUT_CLASSIFICATION	manage legend placement
WITHOUT_CLASSIFICATION	return new dimension(width 400)
WITHOUT_CLASSIFICATION	int width = getwidth()
WITHOUT_CLASSIFICATION	will always be within range of an int as must be < width
WITHOUT_CLASSIFICATION	don't start yet if stop between samples
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	we want to retain insertion order so linkedhashmap is necessary
WITHOUT_CLASSIFICATION	define max scale y axis
WITHOUT_CLASSIFICATION	replace _xaxistitle to null (don't display x axis title)
WITHOUT_CLASSIFICATION	if the "title of graph" is empty we can assume some default
WITHOUT_CLASSIFICATION	same viewresultstree
WITHOUT_CLASSIFICATION	needed by visualizer interface
WITHOUT_CLASSIFICATION	educated guess
WITHOUT_CLASSIFICATION	if the labels are too long they'll be "squeezed" to make the chart viewable.
WITHOUT_CLASSIFICATION	y axis
WITHOUT_CLASSIFICATION	new font("sansserif" font.plain 10)
WITHOUT_CLASSIFICATION	enable embedded html resources
WITHOUT_CLASSIFICATION	----------- get/set methods -------------------
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	main panel
WITHOUT_CLASSIFICATION	column renderers
WITHOUT_CLASSIFICATION	todo charset ?
WITHOUT_CLASSIFICATION	synch is needed because multiple threads can update the counts.
WITHOUT_CLASSIFICATION	sortfiltermodel mysortedmodel = new sortfiltermodel(mystattablemodel)
WITHOUT_CLASSIFICATION	search field
WITHOUT_CLASSIFICATION	prepare highlighter to show text find with search command
WITHOUT_CLASSIFICATION	new search?
WITHOUT_CLASSIFICATION	save search position
WITHOUT_CLASSIFICATION	display not found message and reset search
WITHOUT_CLASSIFICATION	add listener to intercept texttofind changes and reset search
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	main panel
WITHOUT_CLASSIFICATION	column renderers
WITHOUT_CLASSIFICATION	checkboxes
WITHOUT_CLASSIFICATION	reset search
WITHOUT_CLASSIFICATION	synch is needed because multiple threads can update the counts.
WITHOUT_CLASSIFICATION	buttons
WITHOUT_CLASSIFICATION	when enter is pressed search start
WITHOUT_CLASSIFICATION	default not visible
WITHOUT_CLASSIFICATION	search text in response data
WITHOUT_CLASSIFICATION	documentlistener method
WITHOUT_CLASSIFICATION	documentlistener method
WITHOUT_CLASSIFICATION	documentlistener method
WITHOUT_CLASSIFICATION	desactivate or not specials regexp char
WITHOUT_CLASSIFICATION	label count mean min max std dev. error %age throughput kb/sec avg. pagesize
WITHOUT_CLASSIFICATION	all rows have this class
WITHOUT_CLASSIFICATION	synch is needed because a clear can occur while add occurs
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	main panel
WITHOUT_CLASSIFICATION	add the main panel and the graph
WITHOUT_CLASSIFICATION	a button for adding new arguments to the table. private jbutton add a button for removing arguments from the table. private jbutton delete
WITHOUT_CLASSIFICATION	force a minimum table height of 70 pixels
WITHOUT_CLASSIFICATION	p.add(makebuttonpanel() borderlayout.south)
WITHOUT_CLASSIFICATION	new functor("setname") $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	ok because used in synchronised method
WITHOUT_CLASSIFICATION	we have received one more sample
WITHOUT_CLASSIFICATION	set up the graph with header footer y axis and graph display
WITHOUT_CLASSIFICATION	methods used in creating the gui
WITHOUT_CLASSIFICATION	protected void initializetablemodel() { tablemodel = new objecttablemodel( new string[] { argumentspanel.column_names_0 argumentspanel.column_names_1 encode_or_not include_equals } new functor[] { new functor("getname") new functor("getvalue") new functor("isalwaysencoded") new functor("isuseequals") } new functor[] { new functor("setname") new functor("setvalue") new functor("setalwaysencoded") new functor("setuseequals") } new class[] { string.class string.class boolean.class boolean.class }) }
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	column renderers
WITHOUT_CLASSIFICATION	default checked $non-nls-1$
WITHOUT_CLASSIFICATION	default checked $non-nls-1$
WITHOUT_CLASSIFICATION	default checked $non-nls-1$
WITHOUT_CLASSIFICATION	the text field should expand horizontally but have a fixed height
WITHOUT_CLASSIFICATION	this column actually consists of a row with two sub-columns the first column contains the labels and the second column contains the fields.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	main panel
WITHOUT_CLASSIFICATION	sampler selection
WITHOUT_CLASSIFICATION	canvas size
WITHOUT_CLASSIFICATION	if clic on the graph tab make the graph (without apply interval or filter)
WITHOUT_CLASSIFICATION	if use dynamic graph size is checked we disable the dimension fields
WITHOUT_CLASSIFICATION	force reload data
WITHOUT_CLASSIFICATION	not 'else if' because forcereloaddata
WITHOUT_CLASSIFICATION	button
WITHOUT_CLASSIFICATION	button
WITHOUT_CLASSIFICATION	search field
WITHOUT_CLASSIFICATION	checkboxes
WITHOUT_CLASSIFICATION	$non-nls-1$ default bold
WITHOUT_CLASSIFICATION	default option
WITHOUT_CLASSIFICATION	todo charset ?
WITHOUT_CLASSIFICATION	$non-nls-1$ default normal
WITHOUT_CLASSIFICATION	label count mean median 90% min max error %age throughpur pagesize
WITHOUT_CLASSIFICATION	api expects null not empty array
WITHOUT_CLASSIFICATION	api expects null not empty array
WITHOUT_CLASSIFICATION	changing color for column
WITHOUT_CLASSIFICATION	called from ctor so must not be overridable
WITHOUT_CLASSIFICATION	first lets draw the grid
WITHOUT_CLASSIFICATION	draw the x axis
WITHOUT_CLASSIFICATION	draw the y axis
WITHOUT_CLASSIFICATION	now draw the bar chart
WITHOUT_CLASSIFICATION	we sort the objects
WITHOUT_CLASSIFICATION	calculate the height
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	the test plan has to have more than 200 samples for it to generate half way decent distribution graph. the larger the sample the better the results.
WITHOUT_CLASSIFICATION	if the height is less than one we set it to one pixel
WITHOUT_CLASSIFICATION	draw a red line for 90% point
WITHOUT_CLASSIFICATION	draw an orange line for 50% point
WITHOUT_CLASSIFICATION	"<?xml "
WITHOUT_CLASSIFICATION	skip the leading bytes (if any)
WITHOUT_CLASSIFICATION	there is also a javax.swing.text.document class.
WITHOUT_CLASSIFICATION	clear result tab on ctrl-e
WITHOUT_CLASSIFICATION	must return a valid node or may generate an npe
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	main panel
WITHOUT_CLASSIFICATION	add the main panel and the graph
WITHOUT_CLASSIFICATION	we have received one more sample
WITHOUT_CLASSIFICATION	set up the graph with header footer y axis and graph display
WITHOUT_CLASSIFICATION	methods used in creating the gui
WITHOUT_CLASSIFICATION	these are not currently updated
WITHOUT_CLASSIFICATION	@guardedby("this")
WITHOUT_CLASSIFICATION	@guardedby("this")
WITHOUT_CLASSIFICATION	@guardedby("this")
WITHOUT_CLASSIFICATION	this.graph.clear()
WITHOUT_CLASSIFICATION	compute the new spline curve
WITHOUT_CLASSIFICATION	do nothing wait for the next pile to complete
WITHOUT_CLASSIFICATION	made currentsample volatile
WITHOUT_CLASSIFICATION	find jmeter home dir from the initial classpath
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	java on mac os can add a second entry to the initial classpath $non-nls-1$
WITHOUT_CLASSIFICATION	e.g. started from ide with full classpath allow override $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	add standard jar locations to initial classpath
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	only accept jar files $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-1$ $non-nls-2$ $non-nls-1$
WITHOUT_CLASSIFICATION	usesunc
WITHOUT_CLASSIFICATION	classfinder needs the classpath
WITHOUT_CLASSIFICATION	ensure that directory urls end in "/" $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	classfinder needs this
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	make the addurl method visible
WITHOUT_CLASSIFICATION	needed for shutdownclient
WITHOUT_CLASSIFICATION	if the -t flag is to "last" then the last loaded file (if any) is used
WITHOUT_CLASSIFICATION	set it
WITHOUT_CLASSIFICATION	reset it
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ jmeter.log $non-nls-1$ sample result log file $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	properties to be sent to remote servers
WITHOUT_CLASSIFICATION	should remote engines be stopped at end of non-gui test?
WITHOUT_CLASSIFICATION	check option combinations
WITHOUT_CLASSIFICATION	also initialises jmeter logging
WITHOUT_CLASSIFICATION	the following is needed for httpclient. (originally tried doing this in httpsampler2 but it appears that it was done too late when running in gui mode) set the commons logging default to avalon logkit if not already defined
WITHOUT_CLASSIFICATION	set some (hopefully!) useful properties
WITHOUT_CLASSIFICATION	start the server
WITHOUT_CLASSIFICATION	most recent
WITHOUT_CLASSIFICATION	update classloader if necessary
WITHOUT_CLASSIFICATION	bshinitlog)
WITHOUT_CLASSIFICATION	do what would be done earlier
WITHOUT_CLASSIFICATION	do what would be done earlier
WITHOUT_CLASSIFICATION	should not have any text arguments
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	set it
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	for httpclient for httpclient
WITHOUT_CLASSIFICATION	process command line property definitions these can potentially occur multiple times
WITHOUT_CLASSIFICATION	set it
WITHOUT_CLASSIFICATION	reset it
WITHOUT_CLASSIFICATION	set category
WITHOUT_CLASSIFICATION	set root level
WITHOUT_CLASSIFICATION	checks for last or lastsuffix. returns the last name with .jmx replaced by suffix.
WITHOUT_CLASSIFICATION	most recent $non-nls-1$
WITHOUT_CLASSIFICATION	run test in batch mode
WITHOUT_CLASSIFICATION	only add summariser if it can not be shared with the resultcollector
WITHOUT_CLASSIFICATION	not replaceable controller
WITHOUT_CLASSIFICATION	not enabled
WITHOUT_CLASSIFICATION	not enabled
WITHOUT_CLASSIFICATION	not a testelement
WITHOUT_CLASSIFICATION	not a replaceablecontroller
WITHOUT_CLASSIFICATION	listen to test and handle tidyup after non-gui test completes. if running a remote test then after waiting a few seconds for listeners to finish files it calls clientjmeterengine.tidyrmi() to deal with the naming timer thread.
WITHOUT_CLASSIFICATION	keep track of remote tests
WITHOUT_CLASSIFICATION	not yet used private jmeter _parent
WITHOUT_CLASSIFICATION	_parent = unused
WITHOUT_CLASSIFICATION	it will be null unless remotestop = true
WITHOUT_CLASSIFICATION	allow listeners to close files
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	allow enough time for jvm to exit
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	replacement only needs to occur when starting the engine @see standardjmeterengine.run()
WITHOUT_CLASSIFICATION	highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	deliberate use of deprecated ctor create non-gui version to avoid headless problems
WITHOUT_CLASSIFICATION	remove the disabled items for gui runs this is done in start.java
WITHOUT_CLASSIFICATION	this cannot be a jmeter class variable because properties are not initialised until later.
WITHOUT_CLASSIFICATION	this is a daemon thread which should only reach here if there are other non-daemon threads still active
WITHOUT_CLASSIFICATION	only accept commands from the local host
WITHOUT_CLASSIFICATION	needs to be public for tests
WITHOUT_CLASSIFICATION	needs to be public for testing
WITHOUT_CLASSIFICATION	skip parameters with a blank name (allows use of optional variables in parameter lists)
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.modifytestelement(testelement)
WITHOUT_CLASSIFICATION	enable delete (which may already be enabled but it won't hurt)
WITHOUT_CLASSIFICATION	enable delete (which may already be enabled but it won't hurt)
WITHOUT_CLASSIFICATION	highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	disable delete if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	disable delete if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	disable delete if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	disable delete if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	because collectionproperty.mergein will not prevent adding two properties of the same name we need to select the first value so that this element's values prevail over defaults provided by configuration elements
WITHOUT_CLASSIFICATION	will only contain argument or httpargument
WITHOUT_CLASSIFICATION	add(maketitlepanel() borderlayout.north)
WITHOUT_CLASSIFICATION	force the table to be at least 70 pixels high
WITHOUT_CLASSIFICATION	only contains argument (or httpargument)
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.modifytestelement(testelement)
WITHOUT_CLASSIFICATION	enable delete (which may already be enabled but it won't hurt)
WITHOUT_CLASSIFICATION	table still contains one or more rows so highlight (select) the appropriate one.
WITHOUT_CLASSIFICATION	table still contains one or more rows so highlight (select) the appropriate one.
WITHOUT_CLASSIFICATION	force a minimum table height of 70 pixels
WITHOUT_CLASSIFICATION	if a table cell is being edited we should accept the current value and stop the editing before adding a new row.
WITHOUT_CLASSIFICATION	evaluate the condition which can be blank or last = was the last sampler ok? otherwise evaluate the condition to see if it is not "false" if blank only evaluate at the end of the loop must only be called at start and end of loop @param loopend - are we at loop end? @return true means ok to continue
WITHOUT_CLASSIFICATION	if a table cell is being edited we must cancel the editing before deleting the row
WITHOUT_CLASSIFICATION	if a table cell is being edited we must cancel the editing before deleting the row
WITHOUT_CLASSIFICATION	highlight (select) the appropriate rows.
WITHOUT_CLASSIFICATION	hide window on esc
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	change to false after the first insert
WITHOUT_CLASSIFICATION	do update on enter
WITHOUT_CLASSIFICATION	in spite of the name this is actually used to determine if the loop controller is repeatable. the value is only used in nextisnull() when the loop end condition has been detected if forever==true then it calls resetloopcount() otherwise it calls setdone(true). loop controllers always set forever=true so that they will be executed next time the parent invokes them. thread group sets the value false so nextisnull() sets done and the thread group will not be repeated. however it's not clear that a thread group could ever be repeated.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	for unit test code @see testifcontroller
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	if blank only check previous sample when at end of loop $non-nls-1$
WITHOUT_CLASSIFICATION	cnd may be null if next() called us $non-nls-1$
WITHOUT_CLASSIFICATION	evaluation occurs when nbloops is not yet evaluated or when nbloops is equal to special value infinite_loop_count
WITHOUT_CLASSIFICATION	now evaluate the condition using javascript
WITHOUT_CLASSIFICATION	we should only evalute the condition if it is the first time ( first "iteration" ) we are called. for subsequent calls we are inside the ifcontrollergroup so then we just pass the control to the next item inside the if control
WITHOUT_CLASSIFICATION	if-test is false need to re-initialize indexes
WITHOUT_CLASSIFICATION	for getitercount
WITHOUT_CLASSIFICATION	runtime is zero - no point staying around
WITHOUT_CLASSIFICATION	??
WITHOUT_CLASSIFICATION	this is needed for onceonly to work like other loop controllers
WITHOUT_CLASSIFICATION	only create the map if it is required
WITHOUT_CLASSIFICATION	may be replaced by randomordercontroller
WITHOUT_CLASSIFICATION	incrementcurrent()
WITHOUT_CLASSIFICATION	must be a controller
WITHOUT_CLASSIFICATION	must be a controller
WITHOUT_CLASSIFICATION	can only match once
WITHOUT_CLASSIFICATION	i.e. "true"
WITHOUT_CLASSIFICATION	default true for compatibility
WITHOUT_CLASSIFICATION	/ transaction controller - parent
WITHOUT_CLASSIFICATION	check if transaction is done
WITHOUT_CLASSIFICATION	this transaction is done
WITHOUT_CLASSIFICATION	sample the children of the transaction
WITHOUT_CLASSIFICATION	if we do not get any sub samplers the transaction is done
WITHOUT_CLASSIFICATION	transaction controller - additional sample
WITHOUT_CLASSIFICATION	must be the start of the subtree
WITHOUT_CLASSIFICATION	assume success
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.modifytestelement(testelement)
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.modifytestelement(testelement)
WITHOUT_CLASSIFICATION	standalone
WITHOUT_CLASSIFICATION	embedded
WITHOUT_CLASSIFICATION	this transaction is done
WITHOUT_CLASSIFICATION	assume success
WITHOUT_CLASSIFICATION	check if it is the start of a new transaction must be the start of the subtree
WITHOUT_CLASSIFICATION	we need to call the super.next instead of this.next which is done in genericcontroller because if we call this.next() it will return the transactionsampler and we do not want that. we need to get the next real sampler or controller
WITHOUT_CLASSIFICATION	must be the end of the controller
WITHOUT_CLASSIFICATION	we have sampled one of our children
WITHOUT_CLASSIFICATION	we must set res to null now before sending the event for the transaction so that we can ignore that event in our sampleoccured method
WITHOUT_CLASSIFICATION	check if we are still sampling our children
WITHOUT_CLASSIFICATION	accumulate waiting time for later
WITHOUT_CLASSIFICATION	log.warn("constructor only intended for use in testing")
WITHOUT_CLASSIFICATION	ensure name is available for debugging
WITHOUT_CLASSIFICATION	it is the jmeterthread which knows how to sample a real sampler
WITHOUT_CLASSIFICATION	another subsample for the transaction
WITHOUT_CLASSIFICATION	set response code of transaction
WITHOUT_CLASSIFICATION	the transaction fails if any sub sample fails
WITHOUT_CLASSIFICATION	add the sub result to the transaction result
WITHOUT_CLASSIFICATION	add current time to total for later use (exclude pause time)
WITHOUT_CLASSIFICATION	if selected then generate parent sample otherwise as per original controller
WITHOUT_CLASSIFICATION	if selected add duration of timers to total runtime
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.modifytestelement(testelement)
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.modifytestelement(testelement)
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.modifytestelement(testelement)
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.modifytestelement(testelement)
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	the loop controller panel can be displayed standalone or inside another panel. for standalone we want to display the title name etc. (everything). however if we want to display it within another panel we just display the loop count fields (not the title and name).
WITHOUT_CLASSIFICATION	the loop controller panel can be displayed standalone or inside another panel. for standalone we want to display the title name etc. (everything). however if we want to display it within another panel we just display the loop count fields (not the title and name).
WITHOUT_CLASSIFICATION	standalone
WITHOUT_CLASSIFICATION	standalone
WITHOUT_CLASSIFICATION	embedded
WITHOUT_CLASSIFICATION	embedded
WITHOUT_CLASSIFICATION	text field $non-nls-1$
WITHOUT_CLASSIFICATION	loop label $non-nls-1$
WITHOUT_CLASSIFICATION	seconds label $non-nls-1$
WITHOUT_CLASSIFICATION	text field $non-nls-1$
WITHOUT_CLASSIFICATION	this check-box defines whether to save workbench content or not
WITHOUT_CLASSIFICATION	forever checkbox $non-nls-1$
WITHOUT_CLASSIFICATION	don't wrap this error - display it as is
WITHOUT_CLASSIFICATION	condition label
WITHOUT_CLASSIFICATION	limit the changes to client only test elements
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	text field $non-nls-1$
WITHOUT_CLASSIFICATION	use expression instead of javascript $non-nls-1$
WITHOUT_CLASSIFICATION	evaluate all checkbox $non-nls-1$
WITHOUT_CLASSIFICATION	text field this means exit if last sample failed $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	used by both standardjmeterengine and clientjmeterengine. in the latter case only resultcollectors are updated as only these are relevant to the client and updating other elements causes all sorts of problems. skip certain processing for remote tests
WITHOUT_CLASSIFICATION	called by jmeter listentotest if remotestop is true
WITHOUT_CLASSIFICATION	sent later
WITHOUT_CLASSIFICATION	should we create our own copy of the rmi registry?
WITHOUT_CLASSIFICATION	create this object using the specified port (0 means anonymous)
WITHOUT_CLASSIFICATION	should perhaps be log.warn but this causes the client-server test to fail
WITHOUT_CLASSIFICATION	throw an exception to ensure caller knows
WITHOUT_CLASSIFICATION	close window where another remote client might jump in
WITHOUT_CLASSIFICATION	sets active = true
WITHOUT_CLASSIFICATION	mail on userlist reported npe here - looks like only happens if there are network errors but check anyway
WITHOUT_CLASSIFICATION	called by - clientjmeterengine.exe() which is called on remotestop
WITHOUT_CLASSIFICATION	tidy up any objects we created
WITHOUT_CLASSIFICATION	help with garbage control
WITHOUT_CLASSIFICATION	the list of current thread groups may be setup main or teardown.
WITHOUT_CLASSIFICATION	may be null if called from unit test
WITHOUT_CLASSIFICATION	may be null if called from unit test
WITHOUT_CLASSIFICATION	e.g. not yet started
WITHOUT_CLASSIFICATION	concurrenthashmap does not need synch. here
WITHOUT_CLASSIFICATION	end of code to allow engine to be controlled remotely
WITHOUT_CLASSIFICATION	is testplan serialised?
WITHOUT_CLASSIFICATION	can't use for loop here because we remove elements
WITHOUT_CLASSIFICATION	deliberate use of deprecated method
WITHOUT_CLASSIFICATION	we totally failed to stop the test
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	concurrenthashmap does not need synch. here
WITHOUT_CLASSIFICATION	allow engine and threads to be stopped from outside a thread e.g. from beanshell server assumes that there is only one instance of the engine at any one time so it is not guaranteed to work
WITHOUT_CLASSIFICATION	concurrenthashmap does not need synch. here
WITHOUT_CLASSIFICATION	concurrenthashmap does not need synch. here
WITHOUT_CLASSIFICATION	else will be done by threadfinished()
WITHOUT_CLASSIFICATION	no point continuing
WITHOUT_CLASSIFICATION	tl - s&e
WITHOUT_CLASSIFICATION	merge in any additional test listeners currently only used by the function parser
WITHOUT_CLASSIFICATION	no longer needed
WITHOUT_CLASSIFICATION	for each thread group generate threads hand each thread the sampler controller and the listeners and the timer
WITHOUT_CLASSIFICATION	for each setup thread group
WITHOUT_CLASSIFICATION	for each setup thread group
WITHOUT_CLASSIFICATION	wait for all setup threads to exit
WITHOUT_CLASSIFICATION	the groups have all completed now
WITHOUT_CLASSIFICATION	here's where the test really starts. run a full gc now it's no harm at all (just delays test start by a tiny amount) and hitting one too early in the test can impair results for short tests.
WITHOUT_CLASSIFICATION	still running at this point i.e. setup was not cancelled for each thread group
WITHOUT_CLASSIFICATION	wait for all test threads to exit
WITHOUT_CLASSIFICATION	the groups have all completed now
WITHOUT_CLASSIFICATION	wait for post threads to stop
WITHOUT_CLASSIFICATION	concurrenthashmap does not need protecting
WITHOUT_CLASSIFICATION	will be null if stoptest thread has started
WITHOUT_CLASSIFICATION	needs to be run in a separate thread to allow rmi call to return ok
WITHOUT_CLASSIFICATION	allow rmi to complete
WITHOUT_CLASSIFICATION	tl - all
WITHOUT_CLASSIFICATION	don't add the timer
WITHOUT_CLASSIFICATION	should we match using regexes?
WITHOUT_CLASSIFICATION	created during class init not modified thereafter
WITHOUT_CLASSIFICATION	ignore self
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	i.e. shutdown/stopped during main thread groups re-enable for teardown if necessary
WITHOUT_CLASSIFICATION	ignore setup and post here. we could have filtered the searcher. but then future thread group objects wouldn't execute.
WITHOUT_CLASSIFICATION	must not convert testelement.gui_class etc
WITHOUT_CLASSIFICATION	end of thread groups no tgs found
WITHOUT_CLASSIFICATION	this should be enough to allow server to exit. default is false
WITHOUT_CLASSIFICATION	remote exit called by remotejmeterengineimpl.rexit() and by notifytestlistenersofend() iff exitaftertest is true in turn that is called by the run() method and the stoptest class also called
WITHOUT_CLASSIFICATION	classnames must contain this string [.functions.] $non-nls-1$ classnames must not contain this string [.gui.] $non-nls-1$
WITHOUT_CLASSIFICATION	check can cast for clone don't clone nothreadclone unless honournothreadclone == false
WITHOUT_CLASSIFICATION	clone will produce correct type
WITHOUT_CLASSIFICATION	dummy methods needed by function interface
WITHOUT_CLASSIFICATION	for use by functionhelper
WITHOUT_CLASSIFICATION	for use by functionhelper
WITHOUT_CLASSIFICATION	handle escapes
WITHOUT_CLASSIFICATION	found "${"
WITHOUT_CLASSIFICATION	i.e. '\\'
WITHOUT_CLASSIFICATION	save leading text
WITHOUT_CLASSIFICATION	set to start of string
WITHOUT_CLASSIFICATION	function does not exist so treat as per missing variable
WITHOUT_CLASSIFICATION	variable or function with no parameter list
WITHOUT_CLASSIFICATION	ensure that setparameters() is called.
WITHOUT_CLASSIFICATION	end of buffer
WITHOUT_CLASSIFICATION	store the following character
WITHOUT_CLASSIFICATION	detect functionname() so this does not generate empty string as the parameter
WITHOUT_CLASSIFICATION	normal exit occurs here
WITHOUT_CLASSIFICATION	should not happen with stringreader
WITHOUT_CLASSIFICATION	dropped out i.e. did not find closing ')'
WITHOUT_CLASSIFICATION	needed for serialisation testing
WITHOUT_CLASSIFICATION	the default title for the menu bar
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	process escaped characters store the \
WITHOUT_CLASSIFICATION	the application name $non-nls-1$
WITHOUT_CLASSIFICATION	this is used to keep track of local (non-remote) tests the name is chosen to be an unlikely host-name $non-nls-1$
WITHOUT_CLASSIFICATION	allow display/hide loggerpanel
WITHOUT_CLASSIFICATION	transparent jbutton with no border
WITHOUT_CLASSIFICATION	allow display/hide toolbar
WITHOUT_CLASSIFICATION	file new operation may set to null so just return app name
WITHOUT_CLASSIFICATION	allow display/hide log error/fatal counter
WITHOUT_CLASSIFICATION	teststatelistener implementation
WITHOUT_CLASSIFICATION	enable drag&drop install a custom transfer handler
WITHOUT_CLASSIFICATION	add the toolbar
WITHOUT_CLASSIFICATION	check for file lists specifically
WITHOUT_CLASSIFICATION	used by abstractreportgui
WITHOUT_CLASSIFICATION	helper method - also used by constructor
WITHOUT_CLASSIFICATION	this stores the state of the testelement
WITHOUT_CLASSIFICATION	ensure we use default bundle
WITHOUT_CLASSIFICATION	sampler error action buttons
WITHOUT_CLASSIFICATION	are we saving the whole tree?
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	n.b. originally called clear() @see also clearable
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	textarea
WITHOUT_CLASSIFICATION	allow for windows / chars in filename $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	beaninfo objects also contain locale-sensitive data -- flush them away
WITHOUT_CLASSIFICATION	$non-nls-1$ define awt wm_class string
WITHOUT_CLASSIFICATION	throws headlessexception
WITHOUT_CLASSIFICATION	defaults to continue
WITHOUT_CLASSIFICATION	space between borders and text
WITHOUT_CLASSIFICATION	generates configure pop-up dialogue for listeners from all methods in samplesaveconfiguration with the signature "boolean savexxx()". there must be a corresponding "void setxxx(boolean)" method and a property save_xxx which is used to name the field on the dialogue.
WITHOUT_CLASSIFICATION	target server panel
WITHOUT_CLASSIFICATION	limit length of log content
WITHOUT_CLASSIFICATION	if logger_panel_max_length is 0 it means all log events are kept
WITHOUT_CLASSIFICATION	the current node is now updated
WITHOUT_CLASSIFICATION	probably a missing jar
WITHOUT_CLASSIFICATION	forget about all guis we've created so far we'll need to re-created them all!
WITHOUT_CLASSIFICATION	first make sure we save the content of the current gui (since we will flush it away)
WITHOUT_CLASSIFICATION	should we allow directories?
WITHOUT_CLASSIFICATION	enable file revert action if a file is used
WITHOUT_CLASSIFICATION	if saveworkbench
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	@see org.apache.jmeter.gui.action.command#getactionnames()
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	now put the current gui in place. [this code was copied from the editcommand action -- we can't just trigger the action because that would populate the current node with the contents of the new gui -- which is empty.] fetch once probably caused by unit testing on headless system
WITHOUT_CLASSIFICATION	strpathsorjars - pathnames or jarfiles to search for classes classnames - required parent class(es) or annotations $non-nls-1$ innerclasses - should we include inner classes? contains - classname should contain this string ignore the classes which are specific to the reporting tool $non-nls-1$ notcontains - classname should not contain this string annotations - true if classnames are annotations
WITHOUT_CLASSIFICATION	whether to skip the delete confirmation dialogue $non-nls-1$
WITHOUT_CLASSIFICATION	save parent node for later
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	set the window visible immediately
WITHOUT_CLASSIFICATION	n.b. this only reloads if necessary (ignores the reference)
WITHOUT_CLASSIFICATION	add this node
WITHOUT_CLASSIFICATION	add all the child nodes of the node we are adding
WITHOUT_CLASSIFICATION	ensure the dialog is only created when it is first needed in turn this avoids scanning the templates until first needed
WITHOUT_CLASSIFICATION	make sure the file ends with proper extension
WITHOUT_CLASSIFICATION	check if the user is trying to save to an existing file
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	prevent instantiation
WITHOUT_CLASSIFICATION	prevent instantiation
WITHOUT_CLASSIFICATION	vk_plus + ctrl_down_mask did not work
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	note windows user preferences are stored relative to hkey_current_user\software\javasoft\prefs
WITHOUT_CLASSIFICATION	do not save user does not want to overwrite
WITHOUT_CLASSIFICATION	only update the stored copy of the tree for a full save refetch because convertsubtree affects it
WITHOUT_CLASSIFICATION	package protected to allow access from test code
WITHOUT_CLASSIFICATION	requires jmetertreenode
WITHOUT_CLASSIFICATION	we can only move a single node
WITHOUT_CLASSIFICATION	move to the parent
WITHOUT_CLASSIFICATION	move as a child of the next sibling
WITHOUT_CLASSIFICATION	commented as per sebb httpmail-archives.apache.org/mod_mbox/jmeter-dev/201307.mbox/%3ccaogo0vz0z3gmbfsq_gsb%2bp7ntuqlng6gy2ecvybd8_akb-dt5w%40mail.gmail.com%3e
WITHOUT_CLASSIFICATION	so elements can only be added as children
WITHOUT_CLASSIFICATION	select the node
WITHOUT_CLASSIFICATION	we must ask the user if it is ok to close current project
WITHOUT_CLASSIFICATION	load the file for this recent file command
WITHOUT_CLASSIFICATION	get the preference for the recent files
WITHOUT_CLASSIFICATION	create the menu item
WITHOUT_CLASSIFICATION	use the index as the name used when processing the action
WITHOUT_CLASSIFICATION	set the keystroke to use
WITHOUT_CLASSIFICATION	add the menu item
WITHOUT_CLASSIFICATION	add separator as the last item
WITHOUT_CLASSIFICATION	update menu items to reflect recent files
WITHOUT_CLASSIFICATION	update menu items to reflect recent files
WITHOUT_CLASSIFICATION	check if the new file is already in the recent list
WITHOUT_CLASSIFICATION	add the new file at the start of the list
WITHOUT_CLASSIFICATION	remove the last item from the list if it was a brand new file
WITHOUT_CLASSIFICATION	store the recent files
WITHOUT_CLASSIFICATION	assume no recent files
WITHOUT_CLASSIFICATION	update the menu items
WITHOUT_CLASSIFICATION	get the menu item
WITHOUT_CLASSIFICATION	at least one recent file menu item is visible
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ reduce font
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.gui.action.abstractaction#getactionnames()
WITHOUT_CLASSIFICATION	(non-javadoc) @see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.gui.action.abstractaction#doaction(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	reset previous result
WITHOUT_CLASSIFICATION	hide window on esc
WITHOUT_CLASSIFICATION	do not save user does not want to overwrite
WITHOUT_CLASSIFICATION	note windows user preferences are stored relative to hkey_current_user\software\javasoft\prefs
WITHOUT_CLASSIFICATION	limit the length of the menu text if needed
WITHOUT_CLASSIFICATION	if we are merging in another test plan we know the test plan is dirty now
WITHOUT_CLASSIFICATION	only check if we have not found any differences so far
WITHOUT_CLASSIFICATION	do search on enter
WITHOUT_CLASSIFICATION	do search
WITHOUT_CLASSIFICATION	don't clear the plan
WITHOUT_CLASSIFICATION	get the file name of the current project
WITHOUT_CLASSIFICATION	check if the user has loaded any file
WITHOUT_CLASSIFICATION	check if the user wants to drop any changes
WITHOUT_CLASSIFICATION	check if the user wants to revert
WITHOUT_CLASSIFICATION	close the current project
WITHOUT_CLASSIFICATION	reload the project
WITHOUT_CLASSIFICATION	spaces are not allowed in property names read from files
WITHOUT_CLASSIFICATION	e.g. windows xp => windows
WITHOUT_CLASSIFICATION	get the jcomponent from the visualizer
WITHOUT_CLASSIFICATION	$non-nls-1$ jmeter.properties
WITHOUT_CLASSIFICATION	engine may be null if it has not correctly started
WITHOUT_CLASSIFICATION	guipackage.getinstance().getmainframe().showstoppingmessage(name)
WITHOUT_CLASSIFICATION	minimal dimensions for dialog box
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	don't clear the plan
WITHOUT_CLASSIFICATION	check if the user wants to drop any changes
WITHOUT_CLASSIFICATION	get the string given from the choose and check the file extension.
WITHOUT_CLASSIFICATION	check if the user wants to create from template
WITHOUT_CLASSIFICATION	bottom buttons bar
WITHOUT_CLASSIFICATION	center position and 50% of screen size
WITHOUT_CLASSIFICATION	created by xstream reading templates.xml
WITHOUT_CLASSIFICATION	n.b. must use linkedhashmap for field type xstream creates a plain hashmap if one uses map as the field type.
WITHOUT_CLASSIFICATION	templates i
WITHOUT_CLASSIFICATION	field templatemanager#templates $non-nls-1$
WITHOUT_CLASSIFICATION	field template#name $non-nls-1$
WITHOUT_CLASSIFICATION	for relative links
WITHOUT_CLASSIFICATION	i.e. no disabled icon found
WITHOUT_CLASSIFICATION	must therefore set the enabled icon so there is at least some icon
WITHOUT_CLASSIFICATION	super(new jmetertreenode(new workbenchgui().createtestelement() null)) testelement tp = new testplangui().createtestelement() inittree(tp)
WITHOUT_CLASSIFICATION	super(new jmetertreenode(new workbench() null)) testelement tp = new testplan() inittree(tp new workbench())
WITHOUT_CLASSIFICATION	the node can be added in non gui mode at startup
WITHOUT_CLASSIFICATION	remove the workbench and testplan nodes
WITHOUT_CLASSIFICATION	insert the test plan node
WITHOUT_CLASSIFICATION	endwindow = window
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	check for file lists specifically
WITHOUT_CLASSIFICATION	check for file lists specifically
WITHOUT_CLASSIFICATION	this check the state of the testelement and if returns false it disable the loaded node
WITHOUT_CLASSIFICATION	init the tree assumes this is only called from gui mode
WITHOUT_CLASSIFICATION	let others know that the tree content has changed. this should not be necessary but without it nodes are not shown when the user uses the close menu item
WITHOUT_CLASSIFICATION	container endwindow jpopupmenu pop
WITHOUT_CLASSIFICATION	get the main frame.
WITHOUT_CLASSIFICATION	close any main menu that is open
WITHOUT_CLASSIFICATION	updatemainmenu(((jmeterguicomponent) getcurrentnode().getuserobject()).createpopupmenu())
WITHOUT_CLASSIFICATION	hold the nodes that should be removed on drop
WITHOUT_CLASSIFICATION	only allow a drag&drop inside the current jvm
WITHOUT_CLASSIFICATION	sort the selected tree path by row
WITHOUT_CLASSIFICATION	if child and a parent are selected only keep the parent
WITHOUT_CLASSIFICATION	remove unneeded nodes
WITHOUT_CLASSIFICATION	the tree accepts a jmx file
WITHOUT_CLASSIFICATION	the copy is disabled
WITHOUT_CLASSIFICATION	do not allow a drop on the drag source selections.
WITHOUT_CLASSIFICATION	testplan and workbench are the only children of the root
WITHOUT_CLASSIFICATION	do not allow a non-leaf node to be moved into one of its children
WITHOUT_CLASSIFICATION	re-use node association logic
WITHOUT_CLASSIFICATION	deal with the jmx files
WITHOUT_CLASSIFICATION	get drop location and mode
WITHOUT_CLASSIFICATION	drop mode == dropmode.on
WITHOUT_CLASSIFICATION	first copy the children as the call to copy.add will modify the collection we're iterating on
WITHOUT_CLASSIFICATION	expand the destination node
WITHOUT_CLASSIFICATION	if icon has not been defined then use gui_class property
WITHOUT_CLASSIFICATION	may be null during startup
WITHOUT_CLASSIFICATION	override in order to provide type safety
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$$non-nls-2$
WITHOUT_CLASSIFICATION	close.setpreferredsize(d)
WITHOUT_CLASSIFICATION	c.gridx = 1 c.gridy = 2 g.setconstraints(close c) panel.add(close)
WITHOUT_CLASSIFICATION	jfilechooser jfc = null
WITHOUT_CLASSIFICATION	for use by test code only
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	modifying
WITHOUT_CLASSIFICATION	override the implementations of the superclass forwarding all methods from the celleditor interface to our delegate.
WITHOUT_CLASSIFICATION	implementing the treecelleditor interface
WITHOUT_CLASSIFICATION	implementing the celleditor interface
WITHOUT_CLASSIFICATION	protected editordelegate class
WITHOUT_CLASSIFICATION	this won't work right if we remove components. but we don't so i'm not going to worry about it right now.
WITHOUT_CLASSIFICATION	datefields are not thread-safe $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	help menu $non-nls-1$
WITHOUT_CLASSIFICATION	options menu $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	dummy constructor to allo junit tests to work
WITHOUT_CLASSIFICATION	do nothing the current time will be returned
WITHOUT_CLASSIFICATION	convert position in buffer to calendar type assumes that pos >=0 (which is true for getcaretposition())
WITHOUT_CLASSIFICATION	if beyond the end then set to the end
WITHOUT_CLASSIFICATION	update the current field. the addend is only expected to be +1/-1 but other values will work. n.b. the roll() method only supports changes by a single unit - up or down
WITHOUT_CLASSIFICATION	jmenu reportmenu jmenuitem analyze
WITHOUT_CLASSIFICATION	restore position
WITHOUT_CLASSIFICATION	list for recent files menu items
WITHOUT_CLASSIFICATION	lists for remote engines menu items
WITHOUT_CLASSIFICATION	if the add menu already exists remove it.
WITHOUT_CLASSIFICATION	insert the add menu as the first menu item in the edit menu.
WITHOUT_CLASSIFICATION	called by mainframe#seteditmenu() which is called by editcommand#doaction and guipackage#localechanged
WITHOUT_CLASSIFICATION	there was a npe being thrown without the null check here.. jkb
WITHOUT_CLASSIFICATION	if we are enabling the edit-->add menu item then we also need to enable the edit menu. the edit menu may already be enabled but there's no harm it trying to enable it again.
WITHOUT_CLASSIFICATION	show the classname to the user
WITHOUT_CLASSIFICATION	this is used by the changelanguage class to define the locale
WITHOUT_CLASSIFICATION	also used by org.apache.jmeter.resources.packagetest
WITHOUT_CLASSIFICATION	note the item name is used by changelanguage to create a locale for that language so need to ensure that the language strings are valid if they exist use the locale language constants. also need to ensure that the names are valid resource entries too.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	overrides superclass method
WITHOUT_CLASSIFICATION	from the java look and feel guidelines if all items in a menu are disabled then disable the menu. makes sense.
WITHOUT_CLASSIFICATION	listener on model changes to maintain correct focusability
WITHOUT_CLASSIFICATION	add the recent files which will also add a separator that is visible when needed
WITHOUT_CLASSIFICATION	override action behaviour
WITHOUT_CLASSIFICATION	this is also used by lookandfeelcommand
WITHOUT_CLASSIFICATION	for testing only at present
WITHOUT_CLASSIFICATION	mostly delegates to model
WITHOUT_CLASSIFICATION	set default single model
WITHOUT_CLASSIFICATION	next two methods implement new api by delegation to model
WITHOUT_CLASSIFICATION	restore state display
WITHOUT_CLASSIFICATION	listen for enable changes
WITHOUT_CLASSIFICATION	empty override of superclass method
WITHOUT_CLASSIFICATION	convenience cast
WITHOUT_CLASSIFICATION	assume that the ui has not changed since the checkbos was created
WITHOUT_CLASSIFICATION	iterate state
WITHOUT_CLASSIFICATION	overrides of superclass methods
WITHOUT_CLASSIFICATION	fire actionevent
WITHOUT_CLASSIFICATION	force the events to fire
WITHOUT_CLASSIFICATION	empty overrides of superclass methods
WITHOUT_CLASSIFICATION	send itemevent
WITHOUT_CLASSIFICATION	set internal state
WITHOUT_CLASSIFICATION	send changeevent
WITHOUT_CLASSIFICATION	derived from httpwww.coderanch.com/t/342563/gui/java/tristate-checkbox
WITHOUT_CLASSIFICATION	nimbus works - after a fashion - with this
WITHOUT_CLASSIFICATION	drawcross(g x y)
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	href="#"
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	this won't work right if we remove components. but we don't so i'm not going to worry about it right now.
WITHOUT_CLASSIFICATION	predefined strings for makemenu(). these are used as menu categories in the menumap hashmap and also for resource lookup in messages.properties
WITHOUT_CLASSIFICATION	needed for all but nimbus nimbus works - after a fashion - with this nimbus works - after a fashion - with this reset
WITHOUT_CLASSIFICATION	private void drawcross(graphics g int x int y) { g.drawline(x + (iconwidth - 4) y + 2 x + 3 y + (iconheight - 5)) g.drawline(x + (iconwidth - 4) y + 3 x + 3 y + (iconheight - 4)) g.drawline(x + 3 y + 2 x + (iconwidth - 4) y + (iconheight - 5)) g.drawline(x + 3 y + 3 x + (iconwidth - 4) y + (iconheight - 4)) }
WITHOUT_CLASSIFICATION	painticon
WITHOUT_CLASSIFICATION	for use by test code only
WITHOUT_CLASSIFICATION	menu_add_xxx - controls which items are in the add menu menu_parent_xxx - controls which items are in the insert parent menu
WITHOUT_CLASSIFICATION	if type is unknown
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ don't try to instantiate these
WITHOUT_CLASSIFICATION	no point instantiating class
WITHOUT_CLASSIFICATION	allow headless testing
WITHOUT_CLASSIFICATION	don't add it again
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	empty box $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	can't add a workbench anywhere
WITHOUT_CLASSIFICATION	can't add a testplan anywhere
WITHOUT_CLASSIFICATION	force testfragment to only be pastable under a test plan
WITHOUT_CLASSIFICATION	allow everything else
WITHOUT_CLASSIFICATION	samplers and controllers need not apply but abstractthreadgroup (controller) is ok
WITHOUT_CLASSIFICATION	abstractthreadgroup is only allowed under a testplan
WITHOUT_CLASSIFICATION	includes thread group anything goes
WITHOUT_CLASSIFICATION	samplers and controllers need not apply
WITHOUT_CLASSIFICATION	all other
WITHOUT_CLASSIFICATION	is any node an instance of one of the classes?
WITHOUT_CLASSIFICATION	is any node an instance of one of the classes but not an exception?
WITHOUT_CLASSIFICATION	methods used for test cases
WITHOUT_CLASSIFICATION	all table cells are editable
WITHOUT_CLASSIFICATION	close action dialog box when tapping escape key
WITHOUT_CLASSIFICATION	prepare dialog box
WITHOUT_CLASSIFICATION	determine location on screen
WITHOUT_CLASSIFICATION	must be close or save_close commands
WITHOUT_CLASSIFICATION	text backup
WITHOUT_CLASSIFICATION	double click
WITHOUT_CLASSIFICATION	view only
WITHOUT_CLASSIFICATION	double (pressed) click
WITHOUT_CLASSIFICATION	in main table (evt mousepressed because cell is editable)
WITHOUT_CLASSIFICATION	else do nothing (cell isn't a string to edit)
WITHOUT_CLASSIFICATION	add the button to the button group
WITHOUT_CLASSIFICATION	add the button
WITHOUT_CLASSIFICATION	implicit return empty toolbar if icons == null
WITHOUT_CLASSIFICATION	get the standard toolbar properties
WITHOUT_CLASSIFICATION	already reported by icontoolbarbean
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	in seconds
WITHOUT_CLASSIFICATION	in seconds
WITHOUT_CLASSIFICATION	if a table cell is being edited we must cancel the editing before deleting the row
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	this.setpreferredsize(new dimension(400150))
WITHOUT_CLASSIFICATION	i.e. bypass the functors
WITHOUT_CLASSIFICATION	mainly needed for unit test serialisable tests
WITHOUT_CLASSIFICATION	n.b. nothreadclone is used to ensure that the teststarted() methods will share the same instance as the sampleoccured() methods so the teststarted() method can fetch the totals accumulator object for the samples to be stored in.
WITHOUT_CLASSIFICATION	ensure that a report is not skipped if we are slightly late in checking the time.
WITHOUT_CLASSIFICATION	this map allows summarisers with the same name to contribute to the same totals.
WITHOUT_CLASSIFICATION	@guardedby("accumulators") - needed to ensure consistency between this and instancecount
WITHOUT_CLASSIFICATION	@guardedby("accumulators") number of active tests
WITHOUT_CLASSIFICATION	cached copy of totals for this instance. the variables do not need to be synchronised as they are not shared between threads however the contents do need to be synchronized.
WITHOUT_CLASSIFICATION	@guardedby("mytotals")
WITHOUT_CLASSIFICATION	name of the accumulator. set up by teststarted().
WITHOUT_CLASSIFICATION	constructor is initially called once for each occurrence in the test plan. for gui several more instances are created. then clear is called at start of test. called several times during test startup. the name will not necessarily have been set at this point.
WITHOUT_CLASSIFICATION	contains the items needed to collect stats for a summariser
WITHOUT_CLASSIFICATION	copy the data to minimise the synch time
WITHOUT_CLASSIFICATION	stop double-reporting
WITHOUT_CLASSIFICATION	only if we have updated them
WITHOUT_CLASSIFICATION	$non-nls-1$ for intermediate use output line buffer
WITHOUT_CLASSIFICATION	rate is effectively infinite
WITHOUT_CLASSIFICATION	e.g. nullpointerexception
WITHOUT_CLASSIFICATION	avalon only
WITHOUT_CLASSIFICATION	avalon only
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	only print final delta if there were some samples in the delta and there has been at least one sample reported previously
WITHOUT_CLASSIFICATION	rounded seconds no point displaying decimals (less than 1% error) decimal would be zero
WITHOUT_CLASSIFICATION	fractional seconds this will round
WITHOUT_CLASSIFICATION	the teststarted/testended methods are called at the start and end of a test. however when a test is run on multiple nodes there is no guarantee that all the teststarted() methods will be called before all the threadstart() or sampleoccurred() methods for other threads - nor that testended() will only be called after all sampleoccurred() calls. the ordering is only guaranteed within a single test.
WITHOUT_CLASSIFICATION	we're not done yet
WITHOUT_CLASSIFICATION	boolean autoscale = true
WITHOUT_CLASSIFICATION	setup drawing area
WITHOUT_CLASSIFICATION	draw grid
WITHOUT_CLASSIFICATION	draw axis
WITHOUT_CLASSIFICATION	draw data lines
WITHOUT_CLASSIFICATION	constructor is initially called once for each occurrence in the test plan for gui several more instances are created then clear is called at start of test called several times during test startup the name will not necessarily have been set at this point.
WITHOUT_CLASSIFICATION	e.g. in non-gui mode
WITHOUT_CLASSIFICATION	this string is used to identify local test runs so must not be a valid host name $non-nls-1$
WITHOUT_CLASSIFICATION	static variables
WITHOUT_CLASSIFICATION	lock used to guard static mutable variables
WITHOUT_CLASSIFICATION	@guardedby("lock")
WITHOUT_CLASSIFICATION	@guardedby("lock")
WITHOUT_CLASSIFICATION	keep track of the file writer and the configuration as the instance used to close them is not the same as the instance that creates them. this means one cannot use the saved printwriter or use getsaveconfig()
WITHOUT_CLASSIFICATION	instance variables (guarded by volatile)
WITHOUT_CLASSIFICATION	unfortunately abstracttestelement does not call super.clone()
WITHOUT_CLASSIFICATION	successonly and erroronly cannot both be set
WITHOUT_CLASSIFICATION	no need for the hook now
WITHOUT_CLASSIFICATION	only add the hook once
WITHOUT_CLASSIFICATION	no point reading the file if there's no visualiser
WITHOUT_CLASSIFICATION	probably avalon format
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	only for use by csvsaveservice
WITHOUT_CLASSIFICATION	constructor is initially called once for each occurrence in the test plan for gui several more instances are created then clear is called at start of test called several times during test startup the name will not necessarily have been set at this point.
WITHOUT_CLASSIFICATION	@guardedby("lock")
WITHOUT_CLASSIFICATION	@guardedby("lock")
WITHOUT_CLASSIFICATION	we are processing xml assume xstream
WITHOUT_CLASSIFICATION	ensure that the sample save config is not shared between copied nodes n.b. clone only seems to be used for client-server tests
WITHOUT_CLASSIFICATION	find the name of the directory containing the file and create it - if there is one
WITHOUT_CLASSIFICATION	todo charset ? get the first line and see if it is xml
WITHOUT_CLASSIFICATION	can't do it as a static initialisation because saveservice is being constructed when this is called
WITHOUT_CLASSIFICATION	write the eol separately so we generate lf line ends on unix and windows $non-nls-1$
WITHOUT_CLASSIFICATION	write the eol separately so we generate lf line ends on unix and windows $non-nls-1$
WITHOUT_CLASSIFICATION	added in version 1.1 $non-nls-1$
WITHOUT_CLASSIFICATION	returns false if directory already exists so need to check again
WITHOUT_CLASSIFICATION	else if might have been created by another process so not a problem
WITHOUT_CLASSIFICATION	returns false if the file did not contain the terminator
WITHOUT_CLASSIFICATION	found the string
WITHOUT_CLASSIFICATION	reads to end of line or end of file
WITHOUT_CLASSIFICATION	!saveasxml
WITHOUT_CLASSIFICATION	truncate the file
WITHOUT_CLASSIFICATION	should throw exception back to caller
WITHOUT_CLASSIFICATION	used by monitorhealthvisualizer.add(sampleresult res)
WITHOUT_CLASSIFICATION	+ jmx property names do not change
WITHOUT_CLASSIFICATION	- jmx property names
WITHOUT_CLASSIFICATION	constructor for use during startup (intended for non-gui use) @param name of summariser
WITHOUT_CLASSIFICATION	this is called once for each occurrence in the test plan before the start of the test. the super.clear() method clears the name (and all other properties) so it is called last.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	notused private static final string database = "db" $non_nls-1$
WITHOUT_CLASSIFICATION	only for use by csvsaveservice
WITHOUT_CLASSIFICATION	associate sample with file name
WITHOUT_CLASSIFICATION	mutable int to keep track of sample count
WITHOUT_CLASSIFICATION	chunk the output if necessary
WITHOUT_CLASSIFICATION	should we save the sample?
WITHOUT_CLASSIFICATION	finish processing samples
WITHOUT_CLASSIFICATION	needed to avoid class cast error in clear.java
WITHOUT_CLASSIFICATION	may be the empty string
WITHOUT_CLASSIFICATION	client log file
WITHOUT_CLASSIFICATION	n.b. to add a new field remember the following - static _xyz - instance xyz=_xyz - clone s.xyz = xyz (perhaps) - setxyz(boolean) - savexyz() - update samplesaveconfigurationconverter to add new fields to marshall() and shouldserialisemember() - update sampleresultconverter and/or httpsampleconverter - update csvsaveservice csv_xxxx makeresultfromdelimitedstring printablefieldnamestostring static{} - update messages.properties to add save_xyz entry - update jmeter.properties to add new property - update listeners.xml to add new property csv and xml names etc. - take screenshot sample_result_config.png - update listeners.xml and component_reference.xml with new dimensions (might not change)
WITHOUT_CLASSIFICATION	not currently needed by any remoteable classes anyway would probably be too expensive in terms of network traffic void testiterationstart(loopiterationevent event)
WITHOUT_CLASSIFICATION	ensure output is flushed
WITHOUT_CLASSIFICATION	server log file
WITHOUT_CLASSIFICATION	holds details of which sample attributes to save. the pop-up dialogue for this is created by the class savepropertydialog which assumes for each field xxx - methods have the signature "boolean savexxx()" - a corresponding "void setxxx(boolean)" method - messages.properties contains the key save_xxx
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	--------------------------------------------------------------------- property file constants ---------------------------------------------------------------------
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	initialise values from properties
WITHOUT_CLASSIFICATION	save bytes read $non_nls-1$
WITHOUT_CLASSIFICATION	save url $non_nls-1$
WITHOUT_CLASSIFICATION	save filename for resultsaver $non_nls-1$
WITHOUT_CLASSIFICATION	save hostname for resultsaver $non_nls-1$
WITHOUT_CLASSIFICATION	don't save this as it is derived from the time format
WITHOUT_CLASSIFICATION	$non_nls-1$ $non_nls-1$ $non_nls-1$ $non_nls-1$ $non_nls-1$ $non_nls-1$ $non_nls-1$
WITHOUT_CLASSIFICATION	prepare for a pretty date
WITHOUT_CLASSIFICATION	make transient as we don't want to save the simpledataformat class also there's currently no way to change the value via the gui so changing it later means editting the jmx or recreating the listener.
WITHOUT_CLASSIFICATION	defaults from properties
WITHOUT_CLASSIFICATION	reversed compare allows for null
WITHOUT_CLASSIFICATION	don't save this as not settable via gui
WITHOUT_CLASSIFICATION	don't save this - only needed for processing csv headers currently
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	optional processing instruction for line 2 e.g. <?xml-stylesheet type="text/xsl" href="../extras/jmeter-results-detail-report_21.xsl"?> $non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$ n.b. remember to update the equals and hashcode methods when adding new variables.
WITHOUT_CLASSIFICATION	give access to initial configuration
WITHOUT_CLASSIFICATION	is derived from properties only
WITHOUT_CLASSIFICATION	we know we are comparing to another samplesaveconfiguration
WITHOUT_CLASSIFICATION	/ start of standard save/set access methods /
WITHOUT_CLASSIFICATION	as per 2.0 branch
WITHOUT_CLASSIFICATION	/ end of standard field accessors /
WITHOUT_CLASSIFICATION	maintain relationship
WITHOUT_CLASSIFICATION	defaults to empty
WITHOUT_CLASSIFICATION	used by old save service
WITHOUT_CLASSIFICATION	used by samplesaveconfigurationconverter.unmarshall()
WITHOUT_CLASSIFICATION	get appropriate sender class governed by the behaviour set in the jmeter property
WITHOUT_CLASSIFICATION	static fields are set by the server when the class is constructed
WITHOUT_CLASSIFICATION	@guardedby("samplestore")
WITHOUT_CLASSIFICATION	locate the statistical sample colector
WITHOUT_CLASSIFICATION	store the new statistical result collector
WITHOUT_CLASSIFICATION	add a new wrapper samplevent
WITHOUT_CLASSIFICATION	checking for and creating initial timestamp to check against
WITHOUT_CLASSIFICATION	synchronized(samplestore)
WITHOUT_CLASSIFICATION	list of variable names to be saved in jtl files
WITHOUT_CLASSIFICATION	the values. entries may be null but there will be the correct number.
WITHOUT_CLASSIFICATION	the hostname cannot change during a run so safe to cache it just once
WITHOUT_CLASSIFICATION	only for unit tests
WITHOUT_CLASSIFICATION	needs to be accessible from test code
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	variables maintained by server code @guardedby("samplestore") maintain separate count of samples for speed
WITHOUT_CLASSIFICATION	the default used by {@link #setresponsedata(string string)}
WITHOUT_CLASSIFICATION	empty arrays which can be returned instead of null
WITHOUT_CLASSIFICATION	never return null
WITHOUT_CLASSIFICATION	never return null
WITHOUT_CLASSIFICATION	never return null
WITHOUT_CLASSIFICATION	never return null
WITHOUT_CLASSIFICATION	e.g. text/html charset=utf-8
WITHOUT_CLASSIFICATION	todo timestamp == 0 means either not yet initialised or no stamp available (e.g. when loading a results file)
WITHOUT_CLASSIFICATION	allow for non-sample time
WITHOUT_CLASSIFICATION	don't return null if not set
WITHOUT_CLASSIFICATION	@guardedby("this"")
WITHOUT_CLASSIFICATION	(is this really the character set?) e.g. iso-8895-1 utf-8
WITHOUT_CLASSIFICATION	allows override of sample size in case sampler does not want to store all the data
WITHOUT_CLASSIFICATION	allow read-only access from test code
WITHOUT_CLASSIFICATION	how long between checks of nanotime default 5000ms set to <=0 to disable the thread
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	make sure we start with a reasonable value
WITHOUT_CLASSIFICATION	allow testcode access to the settings
WITHOUT_CLASSIFICATION	allow test code to change the default usenanotime setting
WITHOUT_CLASSIFICATION	allow test code to change the default usenanotime and nanothreadsleep settings
WITHOUT_CLASSIFICATION	helper method to get 1 ms resolution timing.
WITHOUT_CLASSIFICATION	helper method to maintain timestamp relationships
WITHOUT_CLASSIFICATION	for use by saveservice only. @param stamp - this may be a start time or an end time @param elapsed
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	ok todo ??
WITHOUT_CLASSIFICATION	create unique object as marker for end of queue
WITHOUT_CLASSIFICATION	ok ok ok ok files is created automatically and applies per instance ok
WITHOUT_CLASSIFICATION	ok ok ok
WITHOUT_CLASSIFICATION	ok ok don't copy this it is per instance resultfilename = res.resultfilename
WITHOUT_CLASSIFICATION	todo ?? ok ok
WITHOUT_CLASSIFICATION	n.b. default charset is used deliberately here
WITHOUT_CLASSIFICATION	n.b. default charset is used deliberately here
WITHOUT_CLASSIFICATION	extract charset and store as dataencoding n.b. the meta tag <meta http-equiv="content-type" content="text/html charset=foobar"> is now processed by httpsampleresult#getdataencodingwithdefault $non-nls-1$
WITHOUT_CLASSIFICATION	handle contenttype text/plain charset=iso-8859-1 format=flowed
WITHOUT_CLASSIFICATION	check for quoted string $non-nls-1$ remove quotes
WITHOUT_CLASSIFICATION	list of types that are known to be binary
WITHOUT_CLASSIFICATION	list of types that are known to be ascii although they may appear to be binary
WITHOUT_CLASSIFICATION	determine if content-type is known to be binary i.e. not displayable as text. @param ct content type @return true if content-type is of type binary.
WITHOUT_CLASSIFICATION	helper methods n.b. setstarttime must be called before setendtime setstarttime is used by httpsampleresult to clone the parent sampler and allow the original start time to be kept
WITHOUT_CLASSIFICATION	how many times we had to wait to queue a sample
WITHOUT_CLASSIFICATION	can now afford to wait a bit longer between checks
WITHOUT_CLASSIFICATION	created by client
WITHOUT_CLASSIFICATION	created by server in readresolve method
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	note this is an instance field (and is not transient) so is created by the jmeter client and propagated to the server instance by rmi. [a static field would be recreated on the server and would pick up the server properties] $non-nls-1$
WITHOUT_CLASSIFICATION	client
WITHOUT_CLASSIFICATION	client log file
WITHOUT_CLASSIFICATION	server log file
WITHOUT_CLASSIFICATION	checking for and creating initial timestamp to check against
WITHOUT_CLASSIFICATION	synchronized(samplestore)
WITHOUT_CLASSIFICATION	how long we had to wait (nanoseconds)
WITHOUT_CLASSIFICATION	for reading from csv files ignored currently
WITHOUT_CLASSIFICATION	returns null if nothing on queue currently
WITHOUT_CLASSIFICATION	wait longer than a clock pulse (generally 10-15ms) catch an early clock pulse to reduce slop.
WITHOUT_CLASSIFICATION	ok because samplestore is of type arraylist<sampleevent>
WITHOUT_CLASSIFICATION	created by samplesenderfactory
WITHOUT_CLASSIFICATION	strip the response data before writing but only for a successful request.
WITHOUT_CLASSIFICATION	we failed to add the element first time
WITHOUT_CLASSIFICATION	server
WITHOUT_CLASSIFICATION	try to process as many as possible
WITHOUT_CLASSIFICATION	compute bytes before stripping
WITHOUT_CLASSIFICATION	configuration items set up by readresolve
WITHOUT_CLASSIFICATION	should be a user provided class name
WITHOUT_CLASSIFICATION	static fields are resolved on the server
WITHOUT_CLASSIFICATION	instance fields are copied from the client instance
WITHOUT_CLASSIFICATION	set clonedset
WITHOUT_CLASSIFICATION	server-only work item
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	extended property name $non-nls-1$
WITHOUT_CLASSIFICATION	clonedset = new hashset()
WITHOUT_CLASSIFICATION	need to maintain our own elapsed timer to ensure more accurate aggregation
WITHOUT_CLASSIFICATION	may be called by xstream
WITHOUT_CLASSIFICATION	copy data that is shared between samples (i.e. the key items)
WITHOUT_CLASSIFICATION	assume result is ok because we add the sample count in later
WITHOUT_CLASSIFICATION	add sample counter
WITHOUT_CLASSIFICATION	add error counter
WITHOUT_CLASSIFICATION	overrides sampleresult
WITHOUT_CLASSIFICATION	for reading csv files
WITHOUT_CLASSIFICATION	superclass is not typed
WITHOUT_CLASSIFICATION	ensure output follows version
WITHOUT_CLASSIFICATION	names of dataholder entries for jtl processing $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	names of dataholder entries for jmx processing $non-nls-1$
WITHOUT_CLASSIFICATION	override wrapmapper in order to insert the wrapper in the chain
WITHOUT_CLASSIFICATION	provide our own aliasing using strings rather than classes
WITHOUT_CLASSIFICATION	translate alias to classname and then delegate to wrapped class
WITHOUT_CLASSIFICATION	translate to alias and then delegate to wrapped class
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	was type but that caused findbugs warning
WITHOUT_CLASSIFICATION	this is needed to stop xstream keeping copies of each class
WITHOUT_CLASSIFICATION	the xml header with placeholder for encoding since that is controlled by property $non-nls-1$
WITHOUT_CLASSIFICATION	default file name $non-nls-1$
WITHOUT_CLASSIFICATION	property name used to define file name $non-nls-1$
WITHOUT_CLASSIFICATION	default to overall format and then to version 2.2
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	define file format property names $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	define file format versions $non-nls-1$
WITHOUT_CLASSIFICATION	holds the mappings from the saveservice properties file key alias entry full class name there may be multiple aliases which map to the same class
WITHOUT_CLASSIFICATION	holds the reverse mappings key full class name entry primary alias
WITHOUT_CLASSIFICATION	this is written to jmx files by scriptwrapperconverter read from properties file written to jmx files
WITHOUT_CLASSIFICATION	must match _version property value in saveservice.properties used to ensure saveservice.properties and saveservice are updated simultaneously expected version $non-nls-1$
WITHOUT_CLASSIFICATION	internal information only read from saveservice.properties file $non-nls-1$ must match revision id value in saveservice.properties used to ensure saveservice.properties and saveservice are updated simultaneously expected value $non-nls-1$ read from properties file $non-nls-1$
WITHOUT_CLASSIFICATION	helper method to simplify alias creation from properties
WITHOUT_CLASSIFICATION	can have multiple aliases for same target classname
WITHOUT_CLASSIFICATION	load the alias properties
WITHOUT_CLASSIFICATION	now create the aliases
WITHOUT_CLASSIFICATION	remove the leading "_"
WITHOUT_CLASSIFICATION	for converters to use
WITHOUT_CLASSIFICATION	called by save function
WITHOUT_CLASSIFICATION	get the outputwriter to use
WITHOUT_CLASSIFICATION	use deprecated method to avoid duplicating code
WITHOUT_CLASSIFICATION	use deprecated method to avoid duplicating code
WITHOUT_CLASSIFICATION	ensure terminated properly
WITHOUT_CLASSIFICATION	used by test code
WITHOUT_CLASSIFICATION	used by test code
WITHOUT_CLASSIFICATION	get the inputreader to use
WITHOUT_CLASSIFICATION	used by resultcollector.sampleoccurred(sampleevent event)
WITHOUT_CLASSIFICATION	used by resultcollector#recordstats()
WITHOUT_CLASSIFICATION	routines for testsaveservice
WITHOUT_CLASSIFICATION	allow test code to check for spurious class references
WITHOUT_CLASSIFICATION	boolean ok = true
WITHOUT_CLASSIFICATION	don't bother checking class is present if it is to be updated
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	extract version digits from string of the form #revision n.mm # (where # is actually $ above)
WITHOUT_CLASSIFICATION	check if we have a encoding to use from properties
WITHOUT_CLASSIFICATION	check if we have a encoding to use from properties
WITHOUT_CLASSIFICATION	check if we have a encoding to use from properties
WITHOUT_CLASSIFICATION	we use the default character set encoding of the jre
WITHOUT_CLASSIFICATION	we use the default character set encoding of the jre
WITHOUT_CLASSIFICATION	we use the default character set encoding of the jre
WITHOUT_CLASSIFICATION	used by resultcollector when creating output files
WITHOUT_CLASSIFICATION	write xml header if we have the charset to use for encoding
WITHOUT_CLASSIFICATION	we do not use getencoding method of writer since that returns the historical name
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	--------------------------------------------------------------------- xml result file constants and field name constants ---------------------------------------------------------------------
WITHOUT_CLASSIFICATION	used by scriptwrapperconverter
WITHOUT_CLASSIFICATION	shared with testelementsaver $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	probably no point in converting this to return a sampleevent
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	called by saveservice.loadtree(inputstream reader) if xstream loading fails
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	ok $non-nls-1$
WITHOUT_CLASSIFICATION	do upgrade translation
WITHOUT_CLASSIFICATION	must always agree
WITHOUT_CLASSIFICATION	delete any properties whose name converts to the empty string
WITHOUT_CLASSIFICATION	create the property
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	called by resultcollector#loadexistingfile() if xstream loading fails
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	--------------------------------------------------------------------- additional csv result file constants and field name constants ---------------------------------------------------------------------
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	used to enclose variable name labels to distinguish from any of the above labels $non-nls-1$
WITHOUT_CLASSIFICATION	initial config from properties
WITHOUT_CLASSIFICATION	date formats to try if the time format does not parse as milliseconds
WITHOUT_CLASSIFICATION	$non-nls-1$ (for compatibility this is the original default)
WITHOUT_CLASSIFICATION	enough to read the header column names get the first line and see if it is the header
WITHOUT_CLASSIFICATION	not a valid header
WITHOUT_CLASSIFICATION	may change the format later restart from beginning
WITHOUT_CLASSIFICATION	may be updated
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	this assumes the header names are all single words with no spaces word followed by 0 or more repeats of (non-word char + word) where the non-word char (\2) is the same e.g. abc|def|ghi but not abd|def~ghi $non-nls-1$ last entries may be quoted strings
WITHOUT_CLASSIFICATION	save the name for error reporting
WITHOUT_CLASSIFICATION	method is only ever called from one thread at a time so it's ok to use a static dateformat
WITHOUT_CLASSIFICATION	can this happen?
WITHOUT_CLASSIFICATION	strip off the trailing delimiter
WITHOUT_CLASSIFICATION	map header names to set() methods
WITHOUT_CLASSIFICATION	these entries must be in the same order as columns are saved/restored.
WITHOUT_CLASSIFICATION	both these are needed in the list even though they set the same variable
WITHOUT_CLASSIFICATION	try default delimiter
WITHOUT_CLASSIFICATION	now validate the result
WITHOUT_CLASSIFICATION	failed to recognise the header
WITHOUT_CLASSIFICATION	we know the column names all exist so create the config
WITHOUT_CLASSIFICATION	check if the line is a header
WITHOUT_CLASSIFICATION	check for quoted variable names
WITHOUT_CLASSIFICATION	they are always last
WITHOUT_CLASSIFICATION	unknown column name
WITHOUT_CLASSIFICATION	out of order
WITHOUT_CLASSIFICATION	don't add delimiter first time round
WITHOUT_CLASSIFICATION	these methods handle parameters that could contain delimiters or quotes
WITHOUT_CLASSIFICATION	these methods handle parameters that cannot contain delimiters or quotes
WITHOUT_CLASSIFICATION	find the first non-null message
WITHOUT_CLASSIFICATION	need both sample and error count to be any use
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	did not find \n put the character back
WITHOUT_CLASSIFICATION	need to append something so delimiter is added
WITHOUT_CLASSIFICATION	=================================== csv quote/unquote handling ==============================
WITHOUT_CLASSIFICATION	private versions of what might eventually be part of commons-csv or commons-lang/io
WITHOUT_CLASSIFICATION	double the quote char
WITHOUT_CLASSIFICATION	doubled quote => quote
WITHOUT_CLASSIFICATION	state of the parser
WITHOUT_CLASSIFICATION	remove following \n if present
WITHOUT_CLASSIFICATION	do we have some data or a trailing empty field? we have some data we've started a field just seen ""
WITHOUT_CLASSIFICATION	while not eof eof (or end of string) so collect any remaining data
WITHOUT_CLASSIFICATION	this is not currently used by jmeter code. as it uses sun-specific code (the only such in jmeter) it has been commented out for now.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	delete any properties whose name converts to the empty string
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	rethrow other errors
WITHOUT_CLASSIFICATION	mainly for testelementconverter
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	don't save empty comments - except for the testplan (to maintain compatibility)
WITHOUT_CLASSIFICATION	skip special properties if required
WITHOUT_CLASSIFICATION	remap the class name
WITHOUT_CLASSIFICATION	could be null if it has been deleted via nameupdater
WITHOUT_CLASSIFICATION	could be null if it has been deleted via nameupdater
WITHOUT_CLASSIFICATION	no need to check version just process the attributes if present
WITHOUT_CLASSIFICATION	only decode strings if inversion = 1.0
WITHOUT_CLASSIFICATION	names of properties that are handled specially
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	otherwise don't save anything - no point
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	if we have a file but no data then read the file
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	skip special properties if required
WITHOUT_CLASSIFICATION	no need to check version just process the attributes if present
WITHOUT_CLASSIFICATION	could be null if it has been deleted via nameupdater
WITHOUT_CLASSIFICATION	don't save empty comments
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	always decode
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	$non-nls-1$ must be same as header.hname - but that is built later
WITHOUT_CLASSIFICATION	n.b. these must agree with the new member names in samplesaveconfiguration $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	additional member names which are currently not written out $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	these are new fields not saved unless true
WITHOUT_CLASSIFICATION	these fields are not currently saved or restored
WITHOUT_CLASSIFICATION	save most things
WITHOUT_CLASSIFICATION	save the new fields - but only if they are not the default
WITHOUT_CLASSIFICATION	helper method to simplify marshall routine
WITHOUT_CLASSIFICATION	maintain backward compatibility (bytes was not in the jmx file)
WITHOUT_CLASSIFICATION	make sure decoding follows input file
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	@guardedby("this")
WITHOUT_CLASSIFICATION	@guardedby("this") note this also guards against possible window in checkforopenfiles()
WITHOUT_CLASSIFICATION	volatile needed to ensure safe publication
WITHOUT_CLASSIFICATION	cannot be instantiated
WITHOUT_CLASSIFICATION	getparentfile() may not work on relative paths
WITHOUT_CLASSIFICATION	checks for entries in use
WITHOUT_CLASSIFICATION	tidy up any unused entries
WITHOUT_CLASSIFICATION	must first convert to absolute path names to ensure parents are available
WITHOUT_CLASSIFICATION	read first line and forget
WITHOUT_CLASSIFICATION	need to check if we are at eof already
WITHOUT_CLASSIFICATION	already at eof
WITHOUT_CLASSIFICATION	ok we still have some data restore it
WITHOUT_CLASSIFICATION	if file encoding is specified read using that encoding otherwise use default platform encoding
WITHOUT_CLASSIFICATION	if file encoding is specified write using that encoding otherwise use default platform encoding
WITHOUT_CLASSIFICATION	package access for test code only
WITHOUT_CLASSIFICATION	some known attribute names just for convenience
WITHOUT_CLASSIFICATION	store the resource bundle as an attribute of the beandescriptor
WITHOUT_CLASSIFICATION	localize the property names and descriptions
WITHOUT_CLASSIFICATION	we also provide the resource bundle
WITHOUT_CLASSIFICATION	i is used below
WITHOUT_CLASSIFICATION	set the bean's property to the value we just obtained
WITHOUT_CLASSIFICATION	we can't assign null to primitive types.
WITHOUT_CLASSIFICATION	can occur running headless on jenkins
WITHOUT_CLASSIFICATION	value was not provided and this is allowed
WITHOUT_CLASSIFICATION	not an expression (isn't or can't be) not null.
WITHOUT_CLASSIFICATION	the known tags are assumed to be valid
WITHOUT_CLASSIFICATION	was not a tag so if we can't accept other values
WITHOUT_CLASSIFICATION	delegate the final check to the typeeditor
WITHOUT_CLASSIFICATION	setastext failed not valid
WITHOUT_CLASSIFICATION	setastext succeeded valid
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	/ final because called from ctor
WITHOUT_CLASSIFICATION	localize the bean name $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	not an expression (isn't or can't be) not null.
WITHOUT_CLASSIFICATION	provide an initial edit value if necessary -- this is an heuristic that tries to provide the most convenient initial edit value
WITHOUT_CLASSIFICATION	not interested in this method.
WITHOUT_CLASSIFICATION	not an expression (isn't or can't be) not null. may throw illegalargumentexc.
WITHOUT_CLASSIFICATION	not an expression (can't be or isn't) not null.
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	so we can detect it
WITHOUT_CLASSIFICATION	so we can detect it
WITHOUT_CLASSIFICATION	revert to the previous value
WITHOUT_CLASSIFICATION	ensure value is propagated to editor
WITHOUT_CLASSIFICATION	get and sort the property descriptors
WITHOUT_CLASSIFICATION	should be quicker to find the editors if they are registered.
WITHOUT_CLASSIFICATION	private static final logger log = loggingmanager.getloggerforclass()
WITHOUT_CLASSIFICATION	$non-nls-$
WITHOUT_CLASSIFICATION	obtain the propertyeditors
WITHOUT_CLASSIFICATION	index is also used for accessing editors array
WITHOUT_CLASSIFICATION	don't get editors for hidden or non-read-write properties
WITHOUT_CLASSIFICATION	we check the class type above
WITHOUT_CLASSIFICATION	initialize the editor with the provided default value or null
WITHOUT_CLASSIFICATION	in case of bsf and jsr elements i want to add textareaeditor as a listener to scriptlanguage combobox.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	some editors do tiny transformations (e.g. "true" to "true") may throw illegalargumentexception
WITHOUT_CLASSIFICATION	initialize the gui
WITHOUT_CLASSIFICATION	acceptsnull acceptsexpressions acceptsother
WITHOUT_CLASSIFICATION	uninitialized -- set it to the defaults
WITHOUT_CLASSIFICATION	now set the editors to the element's values
WITHOUT_CLASSIFICATION	for labels
WITHOUT_CLASSIFICATION	for editors
WITHOUT_CLASSIFICATION	for panels
WITHOUT_CLASSIFICATION	if the displayname is the empty string leave it like that.
WITHOUT_CLASSIFICATION	might be null (e.g. in testing)
WITHOUT_CLASSIFICATION	map of translations for tags only created if there is at least one tag and a resourcebundle has been provided.
WITHOUT_CLASSIFICATION	the minimum index of the tags in the combo box
WITHOUT_CLASSIFICATION	the maximum index of the tags in the combo box
WITHOUT_CLASSIFICATION	only for use from test code
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	called from ctor so must not be overridable
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	add a 0-sized invisible component that will take all the vertical space that nobody wants
WITHOUT_CLASSIFICATION	track where tags start
WITHOUT_CLASSIFICATION	and where they end
WITHOUT_CLASSIFICATION	check if the entry index corresponds to a tag if so return the tag this also works if the tags were not translated
WITHOUT_CLASSIFICATION	not a tag entry return the original value
WITHOUT_CLASSIFICATION	will revert to last valid value if invalid
WITHOUT_CLASSIFICATION	replace a string with its translation if one exists
WITHOUT_CLASSIFICATION	not sure if null is passed in but no harm in setting it
WITHOUT_CLASSIFICATION	not sure if null is passed in but no harm in setting it
WITHOUT_CLASSIFICATION	a quick verification just in case
WITHOUT_CLASSIFICATION	get the beaninfo
WITHOUT_CLASSIFICATION	in other gui component cleargui resets the value to defaults one as there is one gui per element with testbeangui as it's shared its default values are only known here we must call setvalues with element (as it holds default values) otherwise we will get values as computed by customizer reset and not default ones
WITHOUT_CLASSIFICATION	fetch data from screen fields
WITHOUT_CLASSIFICATION	copy all property values from the map into the element
WITHOUT_CLASSIFICATION	cannot be null
WITHOUT_CLASSIFICATION	copy all property values into the map
WITHOUT_CLASSIFICATION	handles hex as well
WITHOUT_CLASSIFICATION	some editors may need the descriptor
WITHOUT_CLASSIFICATION	create a button to trigger the file chooser
WITHOUT_CLASSIFICATION	create a panel containing the combo and the button
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	not sure if null is passed in but no harm in setting it
WITHOUT_CLASSIFICATION	handles hex as well
WITHOUT_CLASSIFICATION	configure(element) super.clear() set name enabled. put the default values back into the new element
WITHOUT_CLASSIFICATION	programming error. don't continue.
WITHOUT_CLASSIFICATION	programming error. don't continue.
WITHOUT_CLASSIFICATION	we don't want to show expert beans in the menus unless we're in expert mode
WITHOUT_CLASSIFICATION	may be impossible but no harm in checking
WITHOUT_CLASSIFICATION	- jmx
WITHOUT_CLASSIFICATION	get a wrappereditor to provide the field or combo -- we'll delegate most methods to it
WITHOUT_CLASSIFICATION	acceptsnull acceptsexpressions acceptsother default
WITHOUT_CLASSIFICATION	assume it's string
WITHOUT_CLASSIFICATION	+ jmx attributes - do not change
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	there's only 1 test plan so can cache the mode here
WITHOUT_CLASSIFICATION	- jmx field names
WITHOUT_CLASSIFICATION	create transient item
WITHOUT_CLASSIFICATION	we set the classpath
WITHOUT_CLASSIFICATION	action to be taken when a sampler error occurs
WITHOUT_CLASSIFICATION	property name
WITHOUT_CLASSIFICATION	thread-specific variables saved here to save recalculation
WITHOUT_CLASSIFICATION	clone should never return null
WITHOUT_CLASSIFICATION	clone should never return null
WITHOUT_CLASSIFICATION	only samplers have the thread context set up by jmeterthread at present so suppress the warning for now
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.samplers.remotethreadslistener#threadfinished()
WITHOUT_CLASSIFICATION	clone should never return null
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	this("test plan") setfunctionalmode(false) setserialized(false)
WITHOUT_CLASSIFICATION	setfunctionalmode(false) setserialized(false)
WITHOUT_CLASSIFICATION	log.warn("threadcontext was not set up - should only happen in junit testing" new throwable("debug"))
WITHOUT_CLASSIFICATION	default implementation
WITHOUT_CLASSIFICATION	moved from jmeter class
WITHOUT_CLASSIFICATION	lifecycle methods
WITHOUT_CLASSIFICATION	jmx property name do not change
WITHOUT_CLASSIFICATION	value is the correct class
WITHOUT_CLASSIFICATION	value is of type collection<jmeterproperty>
WITHOUT_CLASSIFICATION	private static stringproperty defaultproperty = new stringproperty()
WITHOUT_CLASSIFICATION	name cannot be null
WITHOUT_CLASSIFICATION	two null values -- return equal
WITHOUT_CLASSIFICATION	empty collection local var is here to allow suppresswarnings
WITHOUT_CLASSIFICATION	empty collection
WITHOUT_CLASSIFICATION	empty collection
WITHOUT_CLASSIFICATION	should not happen
WITHOUT_CLASSIFICATION	should not happen
WITHOUT_CLASSIFICATION	empty collection ok to cast local var is here to allow suppresswarnings
WITHOUT_CLASSIFICATION	n.b. other classes rely on this returning just the string.
WITHOUT_CLASSIFICATION	|| !ctx.issamplingstarted()
WITHOUT_CLASSIFICATION	synch is probably not needed as only called before run starts
WITHOUT_CLASSIFICATION	this is only possible for 3rd party controllers by default
WITHOUT_CLASSIFICATION	called from multiple threads
WITHOUT_CLASSIFICATION	backward compatibility
WITHOUT_CLASSIFICATION	check there is a gui
WITHOUT_CLASSIFICATION	check there is a gui
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	expensive so do once
WITHOUT_CLASSIFICATION	i.e. "true"
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	based on this scheduler is enabled or disabled
WITHOUT_CLASSIFICATION	gives access to parent thread threadgroup
WITHOUT_CLASSIFICATION	for access to stop methods.
WITHOUT_CLASSIFICATION	the following variables may be set/read from multiple threads.
WITHOUT_CLASSIFICATION	may be set from a different thread
WITHOUT_CLASSIFICATION	ensure that interrupt cannot overlap with shutdown
WITHOUT_CLASSIFICATION	tl - is
WITHOUT_CLASSIFICATION	see below for reason for this change. just in case this causes problems allow the change to be backed out
WITHOUT_CLASSIFICATION	threadcontext is not thread-safe so keep within thread
WITHOUT_CLASSIFICATION	might be found by contoller.next()
WITHOUT_CLASSIFICATION	prevent any further interrupts
WITHOUT_CLASSIFICATION	make sure current interrupt is finished prevent another starting yet
WITHOUT_CLASSIFICATION	allow any pending interrupt to complete (ok because currentsampler == null)
WITHOUT_CLASSIFICATION	find parent controllers of current sampler
WITHOUT_CLASSIFICATION	ok to call testbeanhelper.prepare()
WITHOUT_CLASSIFICATION	check if we are running a transaction
WITHOUT_CLASSIFICATION	find the package for the transaction
WITHOUT_CLASSIFICATION	check if the transaction is done
WITHOUT_CLASSIFICATION	get the transaction sample result
WITHOUT_CLASSIFICATION	check assertions for the transaction sample
WITHOUT_CLASSIFICATION	notify listeners with the transaction sample result
WITHOUT_CLASSIFICATION	transaction is done we do not have a sampler to sample
WITHOUT_CLASSIFICATION	recursive call
WITHOUT_CLASSIFICATION	check if we have a sampler to sample
WITHOUT_CLASSIFICATION	get the sampler ready to sample
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	testbeanhelper.prepare() is ok
WITHOUT_CLASSIFICATION	check there is a gui
WITHOUT_CLASSIFICATION	check there is a gui
WITHOUT_CLASSIFICATION	ok to call testbeanhelper.prepare()
WITHOUT_CLASSIFICATION	must not ignore this one make sure errors are output to the log file
WITHOUT_CLASSIFICATION	tell the monitor we are done remove the threadlocal entry
WITHOUT_CLASSIFICATION	perform the actual sample
WITHOUT_CLASSIFICATION	if we got any results then perform processing on the result
WITHOUT_CLASSIFICATION	do not send subsamples to listeners which receive the transaction sample
WITHOUT_CLASSIFICATION	do not send subsamples to listeners which receive the transaction sample
WITHOUT_CLASSIFICATION	add the result as subsample of transaction if we are in a transaction
WITHOUT_CLASSIFICATION	check if thread or test should be stopped
WITHOUT_CLASSIFICATION	finish up
WITHOUT_CLASSIFICATION	checks the scheduler to stop the iteration
WITHOUT_CLASSIFICATION	check if this instance is present in transaction listener list
WITHOUT_CLASSIFICATION	check for the same instance
WITHOUT_CLASSIFICATION	listeners = controller.getlisteners()
WITHOUT_CLASSIFICATION	set the scheduler to start
WITHOUT_CLASSIFICATION	call threadlistener.threadstarted()
WITHOUT_CLASSIFICATION	call threadlistener.threadfinished()
WITHOUT_CLASSIFICATION	probably not possible but check anyway
WITHOUT_CLASSIFICATION	called by standardjmeterengine testaction and accesslogsampler
WITHOUT_CLASSIFICATION	delay between checks
WITHOUT_CLASSIFICATION	don't bother reporting stop test interruptions
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	fetch once must be done under lock (also protects against null)
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	delay between checks
WITHOUT_CLASSIFICATION	used by debugsampler
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	only create the map if it is required
WITHOUT_CLASSIFICATION	all implementations extend testelement
WITHOUT_CLASSIFICATION	all implementations extend testelement
WITHOUT_CLASSIFICATION	int
WITHOUT_CLASSIFICATION	number of active threads in this group
WITHOUT_CLASSIFICATION	copy our name into that of the controller otherwise name reverts
WITHOUT_CLASSIFICATION	5 seconds
WITHOUT_CLASSIFICATION	+ jmx entries - do not change the string values
WITHOUT_CLASSIFICATION	- jmx entries
WITHOUT_CLASSIFICATION	if true the scheduler is enabled
WITHOUT_CLASSIFICATION	set the start time for the thread duration is in seconds
WITHOUT_CLASSIFICATION	force a sensible start time
WITHOUT_CLASSIFICATION	enables the scheduler
WITHOUT_CLASSIFICATION	maximum pause to use
WITHOUT_CLASSIFICATION	fetch once needs to stay constant
WITHOUT_CLASSIFICATION	needs to be same time for all threads in the group
WITHOUT_CLASSIFICATION	set start and end time
WITHOUT_CLASSIFICATION	n.b. context needs to be fetched in the correct thread
WITHOUT_CLASSIFICATION	store context from root thread to pass it to created threads
WITHOUT_CLASSIFICATION	copy in threadstarter thread context from calling thread
WITHOUT_CLASSIFICATION	needs to be constant for all threads
WITHOUT_CLASSIFICATION	else start immediately
WITHOUT_CLASSIFICATION	set the endtime for the thread
WITHOUT_CLASSIFICATION	duration is in seconds starting from when the threads start
WITHOUT_CLASSIFICATION	ramp-up delay (except first)
WITHOUT_CLASSIFICATION	no point continuing beyond the end time
WITHOUT_CLASSIFICATION	already waited
WITHOUT_CLASSIFICATION	threadstarter is daemon but we don't want sampler threads to be so too
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	return all the associated counts together
WITHOUT_CLASSIFICATION	set stop flag interrupt sampler if possible
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	set the start time for the thread duration is in seconds
WITHOUT_CLASSIFICATION	@guardedgy("this")
WITHOUT_CLASSIFICATION	@guardedgy("this")
WITHOUT_CLASSIFICATION	@guardedgy("this")
WITHOUT_CLASSIFICATION	@guardedgy("this")
WITHOUT_CLASSIFICATION	@guardedgy("this")
WITHOUT_CLASSIFICATION	currently only used by jmeterthread
WITHOUT_CLASSIFICATION	check if the property exists
WITHOUT_CLASSIFICATION	relative start-up time
WITHOUT_CLASSIFICATION	not used
WITHOUT_CLASSIFICATION	must be an old test plan
WITHOUT_CLASSIFICATION	initialise the gui field values
WITHOUT_CLASSIFICATION	maximum size to convert a document to text (default 10mb)
WITHOUT_CLASSIFICATION	-1 to disable the write limit
WITHOUT_CLASSIFICATION	open the stream
WITHOUT_CLASSIFICATION	close the stream
WITHOUT_CLASSIFICATION	the string is made private so the compiler can't propagate it into jmeterutils. (java compilers may make copies of final variables) this ensures that jmeterutils always gets the correct version even if jmeterutils is not re-compiled during the build.
WITHOUT_CLASSIFICATION	this assumes that the jmv treats a class file as a resource (not all do).
WITHOUT_CLASSIFICATION	convert to url for manifest
WITHOUT_CLASSIFICATION	default to plain version
WITHOUT_CLASSIFICATION	not instantiable
WITHOUT_CLASSIFICATION	allow reversion to original shared session context
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	if we are using a single session otherwise
WITHOUT_CLASSIFICATION	also set up httpclient defaults
WITHOUT_CLASSIFICATION	no point doing this on a per-connection basis as there is currently no way to configure it. so we leave it to the defaults set up in the ssl context
WITHOUT_CLASSIFICATION	httpsurlconnection secureconn = (httpsurlconnection) conn secureconn.setsslsocketfactory(this.getcontext().getsocketfactory())
WITHOUT_CLASSIFICATION	creates new ssl context @return ssl context @throws generalsecurityexception
WITHOUT_CLASSIFICATION	now wrap the default managers with our key manager
WITHOUT_CLASSIFICATION	get the default trust managers
WITHOUT_CLASSIFICATION	wrap the defaults in our custom trust manager
WITHOUT_CLASSIFICATION	implementation moved to jmeterkeystore as only that has the keytype info
WITHOUT_CLASSIFICATION	++ for testbean implementations only passed to file or script
WITHOUT_CLASSIFICATION	file to source (overrides script)
WITHOUT_CLASSIFICATION	script (if file not provided)
WITHOUT_CLASSIFICATION	bsf/jsr223 language to use -- for testbean implementations only
WITHOUT_CLASSIFICATION	can be the empty string
WITHOUT_CLASSIFICATION	for use by the server script
WITHOUT_CLASSIFICATION	characters per second to emulate
WITHOUT_CLASSIFICATION	save the actual socket
WITHOUT_CLASSIFICATION	override so we can intercept the stream
WITHOUT_CLASSIFICATION	forward all the sslsocket methods to the input socket
WITHOUT_CLASSIFICATION	also forward all the socket methods.
WITHOUT_CLASSIFICATION	scriptruntime.call(cx fun global args global)
WITHOUT_CLASSIFICATION	must wrap non-scriptable objects before presenting to rhino
WITHOUT_CLASSIFICATION	includes javascriptexception rethrows errors
WITHOUT_CLASSIFICATION	superclass does not support types
WITHOUT_CLASSIFICATION	initialize context and global scope object
WITHOUT_CLASSIFICATION	read-only access after class has been initialised
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	re-throw errors because we're supposed to let the jvm see it don't re-throw stackoverflows because we know we've corrected the situation by aborting the loop and a long stacktrace would end up on the user's console
WITHOUT_CLASSIFICATION	calculate each time as likely to be called for each add
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	characters per second to emulate
WITHOUT_CLASSIFICATION	likely a wrapped exception from a liveconnect call. display its stack trace as a diagnostic
WITHOUT_CLASSIFICATION	for n values in an aggregate sample the average value = (val/n) so need to add n (val/n) (val/n) = val val / n
WITHOUT_CLASSIFICATION	load additionnal name conversion rules from plugins
WITHOUT_CLASSIFICATION	if we are creating a jsr223 element add the cache key property. note that this cannot be done in the jsr223beaninfosupport class because that causes problems with the group its properties are not always set up before they are needed. this cause various issues with the gui - wrong field attributes (should not allow null) - sometimes gui is completely mangled - field appears at start rather than at end. - the following warning is logged jmeter.testbeans.gui.generictestbeancustomizer org.apache.jmeter.util.jsr223testelement#cachekey does not appear to have been configured adding the group here solves these issues and it's also possible to add the key just before the script panel to which it relates. it's not yet clear why this should be but it looks as though createpropertygroup does not work properly if it is called from any subclasses of this class.
WITHOUT_CLASSIFICATION	names are strings
WITHOUT_CLASSIFICATION	no point dividing by 1
WITHOUT_CLASSIFICATION	1024=bytes per kb
WITHOUT_CLASSIFICATION	account for multiple samples not yet intialised
WITHOUT_CLASSIFICATION	1000 = millisecs/sec
WITHOUT_CLASSIFICATION	conversions for milli and nano seconds
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	characters per second to emulate
WITHOUT_CLASSIFICATION	use actual class name for log
WITHOUT_CLASSIFICATION	most subclasses will need these
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	@guardedby("this")
WITHOUT_CLASSIFICATION	@guardedby("this")
WITHOUT_CLASSIFICATION	@guardedby("this")
WITHOUT_CLASSIFICATION	we have a file read and process it
WITHOUT_CLASSIFICATION	we have a file read and process it
WITHOUT_CLASSIFICATION	wraps the socket in a slow ssl socket if necessary
WITHOUT_CLASSIFICATION	what host am i running on?
WITHOUT_CLASSIFICATION	special flag for use in debugging resources
WITHOUT_CLASSIFICATION	provide random numbers to whomever wants one
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	for java sockets for commons httpclient sockets
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	done by finally block filereader.close()
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ for use in debugging $non-nls-1$
WITHOUT_CLASSIFICATION	are we the default language?
WITHOUT_CLASSIFICATION	jmeter.fail("could not read internal resource. " + "archive is broken.")
WITHOUT_CLASSIFICATION	keep existing settings
WITHOUT_CLASSIFICATION	don't change locale from en_gb to en
WITHOUT_CLASSIFICATION	language change worked check if we at least found the correct language
WITHOUT_CLASSIFICATION	no need to reset locale
WITHOUT_CLASSIFICATION	reset locale if necessary so other locales are properly handled
WITHOUT_CLASSIFICATION	special mode for debugging resource handling
WITHOUT_CLASSIFICATION	special mode for debugging resource handling
WITHOUT_CLASSIFICATION	can be returned by headless hosts
WITHOUT_CLASSIFICATION	can be returned by headless hosts
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	redisplay.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	file to source (overrides script)
WITHOUT_CLASSIFICATION	script (if file not provided)
WITHOUT_CLASSIFICATION	use actual class name for log
WITHOUT_CLASSIFICATION	most subclasses will need these
WITHOUT_CLASSIFICATION	end method
WITHOUT_CLASSIFICATION	$non-nls-1$ reader = xmlfactory.newsaxparser().getxmlreader()
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	done
WITHOUT_CLASSIFICATION	todo charset ?
WITHOUT_CLASSIFICATION	todo charset ?
WITHOUT_CLASSIFICATION	empty value $non-nls-1$
WITHOUT_CLASSIFICATION	if not empty then script in scripttext will be compiled and cached
WITHOUT_CLASSIFICATION	lrumap does not support generics (yet)
WITHOUT_CLASSIFICATION	add variables for access to context and variables
WITHOUT_CLASSIFICATION	for use in debugging
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	also handles read(byte[])
WITHOUT_CLASSIFICATION	-- for testbean implementations only
WITHOUT_CLASSIFICATION	ensure variables are not null
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ set params as a single line $non-nls-1$ and set as an array $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	characters per second to emulate
WITHOUT_CLASSIFICATION	override so we can intercept the stream
WITHOUT_CLASSIFICATION	override so we can intercept the stream
WITHOUT_CLASSIFICATION	overridden by non-testbean implementations to return the property value instead
WITHOUT_CLASSIFICATION	overridden by non-testbean implementations to return the property value instead
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	@guardedby("this")
WITHOUT_CLASSIFICATION	now temp2 has the lowest of the three components
WITHOUT_CLASSIFICATION	this sequence is borrowed from org.apache.commons.httpclient.protocol.reflectionsocketfactory.createsocket
WITHOUT_CLASSIFICATION	convert to telnet port
WITHOUT_CLASSIFICATION	prompt is unnecessary
WITHOUT_CLASSIFICATION	reset for other users
WITHOUT_CLASSIFICATION	tell server that we are done
WITHOUT_CLASSIFICATION	todo - charset?
WITHOUT_CLASSIFICATION	this.setdaemon(true)
WITHOUT_CLASSIFICATION	have we yet tried to load the truststore?
WITHOUT_CLASSIFICATION	ensure not null
WITHOUT_CLASSIFICATION	the password can be defined as a property this dialogue is provided to allow it to be entered at run-time. however this does not gain much as the dialogue does not (yet) support hidden input
WITHOUT_CLASSIFICATION	we've tried
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	should not happen
WITHOUT_CLASSIFICATION	empty if not provided use the system property to determine the type otherwise use the name
WITHOUT_CLASSIFICATION	also handles write(byte[])
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	@guardedby("this")
WITHOUT_CLASSIFICATION	@guardedby("this")
WITHOUT_CLASSIFICATION	temporary copies so can set the final ones
WITHOUT_CLASSIFICATION	this class is not serialised the interpreter instance for this class
WITHOUT_CLASSIFICATION	script file to initialize the interpreter with
WITHOUT_CLASSIFICATION	logger to use during initialization and script run
WITHOUT_CLASSIFICATION	called from ctor so must be private (or final but it does not seem useful elsewhere)
WITHOUT_CLASSIFICATION	do this before starting the script
WITHOUT_CLASSIFICATION	check file so we can distinguish file error from script error
WITHOUT_CLASSIFICATION	cannot find the file locally so try the bin directory
WITHOUT_CLASSIFICATION	programming error
WITHOUT_CLASSIFICATION	also programming error
WITHOUT_CLASSIFICATION	for use by unit tests
WITHOUT_CLASSIFICATION	configure the document builder factory
WITHOUT_CLASSIFICATION	elements have empty nodevalue but we are usually interested in their content
WITHOUT_CLASSIFICATION	default empty array to prevent npes
WITHOUT_CLASSIFICATION	no point checking an empty keystore
WITHOUT_CLASSIFICATION	note if is == null the arrays will be empty
WITHOUT_CLASSIFICATION	api expects null not empty array see httpdocs.oracle.com/javase/6/docs/api/javax/net/ssl/x509keymanager.html
WITHOUT_CLASSIFICATION	i.e. is == null
WITHOUT_CLASSIFICATION	i.e. is == null
WITHOUT_CLASSIFICATION	number of samples in this entry
WITHOUT_CLASSIFICATION	the following getters may appear not to be used - however they are invoked via the functor class
WITHOUT_CLASSIFICATION	no samples collected
WITHOUT_CLASSIFICATION	better behaviour when howlong=0 or lasttime=0
WITHOUT_CLASSIFICATION	better behaviour when howlong=0 or lasttime=0
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.modifytestelement(testelement)
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	1024=bytes per kb
WITHOUT_CLASSIFICATION	we really should never get here because eval will throw an exception if xpath is invalid but whatever better safe
WITHOUT_CLASSIFICATION	no samples collected
WITHOUT_CLASSIFICATION	better behaviour when howlong=0 or lasttime=0
WITHOUT_CLASSIFICATION	this is our first sample set the start time to current timestamp
WITHOUT_CLASSIFICATION	this is our first sample set the start time to current timestamp
WITHOUT_CLASSIFICATION	always update the end time
WITHOUT_CLASSIFICATION	= elapsed
WITHOUT_CLASSIFICATION	appears not to be used - however it is invoked via the functor class
WITHOUT_CLASSIFICATION	only for use by test code
WITHOUT_CLASSIFICATION	code duplicated from getpagesize()
WITHOUT_CLASSIFICATION	a checkbox choosing whether or not only successes should be logged.
WITHOUT_CLASSIFICATION	overrides abstractjmeterguicomponent.configure(testelement)
WITHOUT_CLASSIFICATION	keep track of classes created
WITHOUT_CLASSIFICATION	(for instructional purposes only!)
WITHOUT_CLASSIFICATION	perform the sampling
WITHOUT_CLASSIFICATION	start timing
WITHOUT_CLASSIFICATION	do something here
WITHOUT_CLASSIFICATION	set up the sample result details
WITHOUT_CLASSIFICATION	end timimg
WITHOUT_CLASSIFICATION	helper method
WITHOUT_CLASSIFICATION	helper method to set up the gui screen
WITHOUT_CLASSIFICATION	standard setup
WITHOUT_CLASSIFICATION	add the standard title
WITHOUT_CLASSIFICATION	specific setup
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	the name of the property used to hold our data $non-nls-1$
WITHOUT_CLASSIFICATION	note the file panel already includes the error logging checkbox so we don't have to add it explicitly.
WITHOUT_CLASSIFICATION	did sample succeed? sampler data
WITHOUT_CLASSIFICATION	create a data input text field @return the panel for entering the data
WITHOUT_CLASSIFICATION	do something
WITHOUT_CLASSIFICATION	do something
WITHOUT_CLASSIFICATION	a string property
WITHOUT_CLASSIFICATION	number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	we have a default
WITHOUT_CLASSIFICATION	throwable wanted
WITHOUT_CLASSIFICATION	comment wanted
WITHOUT_CLASSIFICATION	common output function
WITHOUT_CLASSIFICATION	routine to perform the output (also used by __logn() function)
WITHOUT_CLASSIFICATION	$non-nls-1
WITHOUT_CLASSIFICATION	$non-nls-1
WITHOUT_CLASSIFICATION	n.b. if the string is not recognised debug is assumed
WITHOUT_CLASSIFICATION	thread method is potentially expensive
WITHOUT_CLASSIFICATION	allow variable to be omitted
WITHOUT_CLASSIFICATION	vars can be null if run from testplan
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	@see testregexfunction for unit tests
WITHOUT_CLASSIFICATION	remove initial empty entry
WITHOUT_CLASSIFICATION	$non-nls1$ $non-nls1$
WITHOUT_CLASSIFICATION	vars will be null on testplan
WITHOUT_CLASSIFICATION	did we find beanshell?
WITHOUT_CLASSIFICATION	number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	relatively expensive operation so do it once
WITHOUT_CLASSIFICATION	pass in some variables
WITHOUT_CLASSIFICATION	mainly for bsh.evalerror
WITHOUT_CLASSIFICATION	execute the script
WITHOUT_CLASSIFICATION	helper method for use by scripts
WITHOUT_CLASSIFICATION	can happen if called during test closedown
WITHOUT_CLASSIFICATION	parameters are stored here
WITHOUT_CLASSIFICATION	for unit tests see testjexlfunction
WITHOUT_CLASSIFICATION	string or integer
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	n.b. stop reading the file if we get a blank line this allows for trailing comments in the file
WITHOUT_CLASSIFICATION	vars will be null on testplan
WITHOUT_CLASSIFICATION	now evaluate the script getting the result
WITHOUT_CLASSIFICATION	two delimiters in a row add an empty string
WITHOUT_CLASSIFICATION	lines in the file split into columns
WITHOUT_CLASSIFICATION	0-based
WITHOUT_CLASSIFICATION	name of the file
WITHOUT_CLASSIFICATION	catch the trailing delimiter
WITHOUT_CLASSIFICATION	the beginning of the line is a "delimiter" so that abc returns "" "a" "b" "c"
WITHOUT_CLASSIFICATION	will be null if function is used on testplan
WITHOUT_CLASSIFICATION	return jmetercontextservice.getcontext().getcurrentsampler().getname()
WITHOUT_CLASSIFICATION	added to support external testing
WITHOUT_CLASSIFICATION	only modified by static block so no need to synchronize subsequent read-only access
WITHOUT_CLASSIFICATION	may be null if function is used on testplan
WITHOUT_CLASSIFICATION	@guardedby("this")
WITHOUT_CLASSIFICATION	@guardedby("this")
WITHOUT_CLASSIFICATION	@guardedby("this")
WITHOUT_CLASSIFICATION	@guardedby("this")
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	desc.add("use fully qualified host name true/false (default false)") $non-nls-1$
WITHOUT_CLASSIFICATION	vars will be null on testplan
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	we have a default
WITHOUT_CLASSIFICATION	throwable wanted
WITHOUT_CLASSIFICATION	@guardedby("this") needed for error messages
WITHOUT_CLASSIFICATION	@guardedby("this") buffered reader
WITHOUT_CLASSIFICATION	decimalformat adds the number to the end of the format if there are no formatting characters so we need a way to prevent this from messing up the file name.
WITHOUT_CLASSIFICATION	@guardedby("this") should we try to open the file?
WITHOUT_CLASSIFICATION	have we used mycurrent yet? set to 1 if start number is missing (to allow for end without start)
WITHOUT_CLASSIFICATION	low chances to be non numeric we parse
WITHOUT_CLASSIFICATION	low chances to be non numeric we parse
WITHOUT_CLASSIFICATION	to avoid re-opening the file repeatedly after an error only try to open it in the first execute() call (it may be re=opened at eof but that will cause at most one failure.)
WITHOUT_CLASSIFICATION	don't process invalid numbers
WITHOUT_CLASSIFICATION	don't process invalid numbers (including "")
WITHOUT_CLASSIFICATION	has chances to be a var
WITHOUT_CLASSIFICATION	for next time
WITHOUT_CLASSIFICATION	eof re-open file
WITHOUT_CLASSIFICATION	did we open the file?
WITHOUT_CLASSIFICATION	can be null if called from config item testended() method
WITHOUT_CLASSIFICATION	are we processing a file sequence?
WITHOUT_CLASSIFICATION	there is no variable name
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	this map serves two purposes - maps names to containers - ensures only one container per file across all threads the key is the concatenation of the file name and the xpath string
WITHOUT_CLASSIFICATION	file was not opened successfully are we processing a file sequence?
WITHOUT_CLASSIFICATION	n.b. setparameters is called before the test proper is started and thus variables are not interpreted at this point so defer the file open until later to allow variable file names to be used.
WITHOUT_CLASSIFICATION	varname keeps its value and sum has not taken into account non numeric or overflowing number
WITHOUT_CLASSIFICATION	split string provided
WITHOUT_CLASSIFICATION	@guardedby("filecontainers")
WITHOUT_CLASSIFICATION	we don't have a local copy
WITHOUT_CLASSIFICATION	prevent separate instantiation
WITHOUT_CLASSIFICATION	the cache of file packs - for faster local access
WITHOUT_CLASSIFICATION	save the global copy
WITHOUT_CLASSIFICATION	there's no global copy either
WITHOUT_CLASSIFICATION	save our local copy
WITHOUT_CLASSIFICATION	parameter list
WITHOUT_CLASSIFICATION	all done so return
WITHOUT_CLASSIFICATION	all done now so return the empty string - this allows the caller to append __csvread(filenext) to the last instance of __csvread(filecol) n.b. it is important not to read any further lines at this point otherwise the wrong line can be retrieved when using multiple threads.
WITHOUT_CLASSIFICATION	need to reset the containers for repeated runs about the only way for functions to detect that a run is starting seems to be the setparameters() call.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	may be null if function is used on testplan
WITHOUT_CLASSIFICATION	can be null if called from config item testended() method
WITHOUT_CLASSIFICATION	parameter list
WITHOUT_CLASSIFICATION	what column is wanted?
WITHOUT_CLASSIFICATION	need to reset the containers for repeated runs about the only way for functions to detect that a run is starting seems to be the setparameters() call.
WITHOUT_CLASSIFICATION	the cache of file packs - used to improve thread access
WITHOUT_CLASSIFICATION	means platform default
WITHOUT_CLASSIFICATION	empty encoding return to platorm default
WITHOUT_CLASSIFICATION	only needed locally
WITHOUT_CLASSIFICATION	this map serves two purposes - maps file names to containers - ensures only one container per file across all threads
WITHOUT_CLASSIFICATION	called by csvread(xnext) - sets the row to nil so the next row will be picked up the next time round
WITHOUT_CLASSIFICATION	called by csvread(filealias)
WITHOUT_CLASSIFICATION	first call
WITHOUT_CLASSIFICATION	already logged
WITHOUT_CLASSIFICATION	already logged
WITHOUT_CLASSIFICATION	save in case needed later
WITHOUT_CLASSIFICATION	not yet open
WITHOUT_CLASSIFICATION	we have a variable name
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	vars will be null on testplan
WITHOUT_CLASSIFICATION	for unit tests see testjexlfunction
WITHOUT_CLASSIFICATION	now evaluate the script getting the result
WITHOUT_CLASSIFICATION	name of the file
WITHOUT_CLASSIFICATION	0-based
WITHOUT_CLASSIFICATION	can be null if called from config item testended() method
WITHOUT_CLASSIFICATION	can be null if called from config item testended() method
WITHOUT_CLASSIFICATION	means no restriction
WITHOUT_CLASSIFICATION	only obtain and cast the return if needed
WITHOUT_CLASSIFICATION	empty chars return to null
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	should we return original value?
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	vars will be null on testplan
WITHOUT_CLASSIFICATION	vars will be null on testplan
WITHOUT_CLASSIFICATION	has chances to be a var
WITHOUT_CLASSIFICATION	there is no variable name
WITHOUT_CLASSIFICATION	default to milliseconds
WITHOUT_CLASSIFICATION	probably does not need to be synch (always accessed through threadlocal?) give access to test code
WITHOUT_CLASSIFICATION	vars will be null on test plan
WITHOUT_CLASSIFICATION	maxint = 2147483647
WITHOUT_CLASSIFICATION	not found
WITHOUT_CLASSIFICATION	only modified in class init
WITHOUT_CLASSIFICATION	we have a 3rd parameter
WITHOUT_CLASSIFICATION	resolve any aliases
WITHOUT_CLASSIFICATION	$non_nls-1$ $non_nls-1$
WITHOUT_CLASSIFICATION	not synchronised so can't be shared
WITHOUT_CLASSIFICATION	allow for empty name
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	vars will be null on testplan
WITHOUT_CLASSIFICATION	varname keeps its value and sum has not taken into account non numeric or overflowing number
WITHOUT_CLASSIFICATION	values for creating tokens
WITHOUT_CLASSIFICATION	divisor is a positive number should never case nfe
WITHOUT_CLASSIFICATION	convert to a shorter string for test purposes @return the string value
WITHOUT_CLASSIFICATION	this may need mangling due to peeks
WITHOUT_CLASSIFICATION	cached character == integer.max_value when invalid
WITHOUT_CLASSIFICATION	reached end of input arguments - perform final processing
WITHOUT_CLASSIFICATION	key is string or integer
WITHOUT_CLASSIFICATION	strip the null
WITHOUT_CLASSIFICATION	variables used while parsing options.
WITHOUT_CLASSIFICATION	yes so the second argument is missing
WITHOUT_CLASSIFICATION	keep track of token separator
WITHOUT_CLASSIFICATION	should never get to here when stringindex != 0
WITHOUT_CLASSIFICATION	long optional arg must have = as separator
WITHOUT_CLASSIFICATION	non-null comparators don't appear to be used at present
WITHOUT_CLASSIFICATION	consume stray character
WITHOUT_CLASSIFICATION	are we about to start a new option?
WITHOUT_CLASSIFICATION	strip the -
WITHOUT_CLASSIFICATION	2nd argument
WITHOUT_CLASSIFICATION	its a long option
WITHOUT_CLASSIFICATION	parse the arguments that are not options
WITHOUT_CLASSIFICATION	if it is a short option then parse it else
WITHOUT_CLASSIFICATION	equivalent to new treemap((comparator)null)
WITHOUT_CLASSIFICATION	private static final logger log = loggingmanager.getloggerforclass()
WITHOUT_CLASSIFICATION	make sure the hashcode depends on the order as well
WITHOUT_CLASSIFICATION	super-class does not use generics
WITHOUT_CLASSIFICATION	super-class does not use generics
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	todo - charset?
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	this occurs when id == 0 and user has not supplied a descriptor for arguments
WITHOUT_CLASSIFICATION	if get to an arg barrier then return to normal mode else continue accumulating options
WITHOUT_CLASSIFICATION	strip the - -- sequence .. it can either mean a change of state to state_no_options or else a long option
WITHOUT_CLASSIFICATION	find order.indexof(currentkey) using == rather than equals() there may be multiple entries which compare equals (bug 50898) this will be slightly slower than the built-in method but replace() is not used frequently.
WITHOUT_CLASSIFICATION	used for the runtimeexception to short-circuit the traversal $non-nls-1$
WITHOUT_CLASSIFICATION	n.b. the keys can be either jmetertreenode or testelement
WITHOUT_CLASSIFICATION	do nothing - means object is found
WITHOUT_CLASSIFICATION	just in case
WITHOUT_CLASSIFICATION	short circuit traversal when found
WITHOUT_CLASSIFICATION	saves current position in data list
WITHOUT_CLASSIFICATION	end method
WITHOUT_CLASSIFICATION	capture the output
WITHOUT_CLASSIFICATION	helper method to allow input and output to be changed for chaining
WITHOUT_CLASSIFICATION	ensure the application does not hang if it requests input
WITHOUT_CLASSIFICATION	capture the intermediate output
WITHOUT_CLASSIFICATION	not yet terminated
WITHOUT_CLASSIFICATION	not yet terminated n.b. proc.destroy() is called by the finally clause in the run() method
WITHOUT_CLASSIFICATION	we are capturing output default charset is probably appropriate here.
WITHOUT_CLASSIFICATION	the dname which is used if none is provided $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ (do not change) $non-nls-1$ (firefox and windows) $non-nls-1$ (opera)
WITHOUT_CLASSIFICATION	i.e. does keytool support -gencert and -ext ?
WITHOUT_CLASSIFICATION	not instantiable
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	create cert for ca using root (requires java 7 for gencert)
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	import the signed ca cert into the store (root already there) - both are needed to sign the domain certificates
WITHOUT_CLASSIFICATION	create the self-signed keypairs (requires java 7 for -ext flag)
WITHOUT_CLASSIFICATION	rem generate cert for domain using ca (requires java7 for gencert) and import it
WITHOUT_CLASSIFICATION	generate the request
WITHOUT_CLASSIFICATION	export the root ca for firefox/chrome/ie
WITHOUT_CLASSIFICATION	generate the certificate and store in output file
WITHOUT_CLASSIFICATION	generate the keypair for the host
WITHOUT_CLASSIFICATION	create the certificate rem kuc=digkeye means keyusagecriticial=digitalsignaturekeyencipherment
WITHOUT_CLASSIFICATION	copy for opera
WITHOUT_CLASSIFICATION	alias subject
WITHOUT_CLASSIFICATION	a temporary cache for the focus listener
WITHOUT_CLASSIFICATION	get the certificate request
WITHOUT_CLASSIFICATION	default charset
WITHOUT_CLASSIFICATION	inport the certificate
WITHOUT_CLASSIFICATION	add the sub components
WITHOUT_CLASSIFICATION	register the handler for focus listening. this handler will only notify the registered when the text changes from when the focus is gained to when it is lost.
WITHOUT_CLASSIFICATION	add the sub components
WITHOUT_CLASSIFICATION	functor count = 0 is handled specially
WITHOUT_CLASSIFICATION	necessary to avoid npe when testing serialisation
WITHOUT_CLASSIFICATION	necessary to avoid npe when testing serialisation
WITHOUT_CLASSIFICATION	if provided
WITHOUT_CLASSIFICATION	compare if the value has changed since we received focus.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	@guardedby("this")
WITHOUT_CLASSIFICATION	should not happen
WITHOUT_CLASSIFICATION	register the handler for focus listening. this handler will only notify the registered when the text changes from when the focus is gained to when it is lost.
WITHOUT_CLASSIFICATION	register the handler for focus listening. this handler will only notify the registered when the text changes from when the focus is gained to when it is lost.
WITHOUT_CLASSIFICATION	add the sub components
WITHOUT_CLASSIFICATION	compare if the value has changed since we received focus.
WITHOUT_CLASSIFICATION	a temporary cache for the focus listener
WITHOUT_CLASSIFICATION	used by tableeditor
WITHOUT_CLASSIFICATION	used by tableeditor
WITHOUT_CLASSIFICATION	we use 80% of height
WITHOUT_CLASSIFICATION	private jmenu menu
WITHOUT_CLASSIFICATION	(comment 16 huw)
WITHOUT_CLASSIFICATION	uninstantiable
WITHOUT_CLASSIFICATION	treats last line specially last line allow for missing terminator
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	notused dimension dim = layoutsize(parent false)
WITHOUT_CLASSIFICATION	work out the total size
WITHOUT_CLASSIFICATION	otherwise there's a vgap too many work out the anchor paint
WITHOUT_CLASSIFICATION	do layout
WITHOUT_CLASSIFICATION	closes reader as well
WITHOUT_CLASSIFICATION	n.b time pattern is passed to java.text.simpledateformat
WITHOUT_CLASSIFICATION	predefined format patterns selected by the property log_format_type (see jmeter.properties) the new-line is added later
WITHOUT_CLASSIFICATION	$non_nls-1$ $non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$ $non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	non-instantiable - static methods only
WITHOUT_CLASSIFICATION	now set the individual categories (if any)
WITHOUT_CLASSIFICATION	further configuration
WITHOUT_CLASSIFICATION	make sure same hierarchy is used
WITHOUT_CLASSIFICATION	this happens if the default log-target id-ref specifies a non-existent target
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	key is the type to collect (usually long) value = count of entries
WITHOUT_CLASSIFICATION	we use a treemap because we need the entries to be sorted
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	for n values in an aggregate sample the average value = (val/n) so need to add n (val/n) (val/n) = val val / n
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	running values updated for each sample
WITHOUT_CLASSIFICATION	set the top-level defaults $non_nls-1$
WITHOUT_CLASSIFICATION	this can happen if a log-target id-ref specifies a non-existent target
WITHOUT_CLASSIFICATION	helper method to ensure that format is initialised if initializelogging() has not yet been called.
WITHOUT_CLASSIFICATION	if the name contains at least one set of paired single-quotes reformat using dateformat
WITHOUT_CLASSIFICATION	remove the package prefix
WITHOUT_CLASSIFICATION	e.g. long.max_value
WITHOUT_CLASSIFICATION	e.g. long.min_value
WITHOUT_CLASSIFICATION	use math.round () instead of simple (long) to provide correct value rounding
WITHOUT_CLASSIFICATION	ignored. may happen occasionally but no harm done if so.
WITHOUT_CLASSIFICATION	for n same values in sum of square is equal to nval^2
WITHOUT_CLASSIFICATION	no need to divide by 1
WITHOUT_CLASSIFICATION	insert new value
WITHOUT_CLASSIFICATION	if non-null then any object provided to invoke() is ignored.
WITHOUT_CLASSIFICATION	methondname must always be provided.
WITHOUT_CLASSIFICATION	if non-null then any argument list passed to invoke() will be ignored.
WITHOUT_CLASSIFICATION	argument types used to create the method. may be provided explicitly or derived from the constructor argument list.
WITHOUT_CLASSIFICATION	this depends on the class or invokee and either args or types it is set once by docreatemethod() which must be the only method to access it.
WITHOUT_CLASSIFICATION	if class not provided default to invokee class else null
WITHOUT_CLASSIFICATION	if types not provided default to argument types else null
WITHOUT_CLASSIFICATION	low level invocation routine. should only be called after any defaults have been applied.
WITHOUT_CLASSIFICATION	if invokee was provided then clazz has been set up
WITHOUT_CLASSIFICATION	low-level (recursive) routine to define the method - if not already defined. synchronized to protect access to methodtoinvoke.
WITHOUT_CLASSIFICATION	static only
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	should never happen
WITHOUT_CLASSIFICATION	use constructor class if present use invokee if provided use argumenrs if provided
WITHOUT_CLASSIFICATION	parent classes to check are inner classes ok?
WITHOUT_CLASSIFICATION	potentially expensive do it once
WITHOUT_CLASSIFICATION	potentially expensive do it once
WITHOUT_CLASSIFICATION	no need to check it again
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	no need to check it again
WITHOUT_CLASSIFICATION	it does not contain a required string
WITHOUT_CLASSIFICATION	it contains a banned string
WITHOUT_CLASSIFICATION	are inner classes ok?
WITHOUT_CLASSIFICATION	annotation classes to check
WITHOUT_CLASSIFICATION	for each directory in the search path add all the jars found there
WITHOUT_CLASSIFICATION	find all jars in the search path
WITHOUT_CLASSIFICATION	should only be called with classes that extend annotations
WITHOUT_CLASSIFICATION	first get all the classes
WITHOUT_CLASSIFICATION	subclasslist)
WITHOUT_CLASSIFICATION	returns the classpath entries that match the search list of jars and paths
WITHOUT_CLASSIFICATION	find all jar files or paths that end with strpathorjar
WITHOUT_CLASSIFICATION	no need to look further
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	might throw an exception assume this is ignorable
WITHOUT_CLASSIFICATION	converts a class file from the text stored in a jar file to a version that can be used in class.forname(). @param strclassname the class name from a jar file @return string the java-style dotted version of the name
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$ remove ".class"
WITHOUT_CLASSIFICATION	recursive call
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	we have a single character could be a token it is a token
WITHOUT_CLASSIFICATION	remove trailing splitter
WITHOUT_CLASSIFICATION	found splitchar at end of line
WITHOUT_CLASSIFICATION	this is the new length
WITHOUT_CLASSIFICATION	we saw a delimiter last time so add the default
WITHOUT_CLASSIFICATION	"<?xml "
WITHOUT_CLASSIFICATION	eof
WITHOUT_CLASSIFICATION	$non-nls-1$ add zero padding
WITHOUT_CLASSIFICATION	@see testjorphanutils for unit tests
WITHOUT_CLASSIFICATION	$non-nls-1$ add zero padding
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	this is the name of the hotspot diagnostic platform mbean (sun java 1.6) see httpdownload.oracle.com/javase/6/docs/jre/api/management/extension/com/sun/management/hotspotdiagnosticmxbean.html
WITHOUT_CLASSIFICATION	singletonholder idiom for lazy initialisation
WITHOUT_CLASSIFICATION	these are needed for invoking the method
WITHOUT_CLASSIFICATION	if we could not find the method store the exception here
WITHOUT_CLASSIFICATION	only invoked by iodh class
WITHOUT_CLASSIFICATION	get the platform beans
WITHOUT_CLASSIFICATION	should never fail see if we can actually find the object should never happen
WITHOUT_CLASSIFICATION	prevent useless dump attempts
WITHOUT_CLASSIFICATION	the string so far
WITHOUT_CLASSIFICATION	opened tags
WITHOUT_CLASSIFICATION	don't do anything
WITHOUT_CLASSIFICATION	java.util.date d = null
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	potentially expensive do it once
WITHOUT_CLASSIFICATION	-- jmx file attributes - do not change
WITHOUT_CLASSIFICATION	don't instantiate class
WITHOUT_CLASSIFICATION	++ jmx file attributes - do not change
WITHOUT_CLASSIFICATION	i.e. no filter
WITHOUT_CLASSIFICATION	the test object i.e. the instance of the class containing the test method this is the same as testcase for junit3 tests but different for junit4 tests which use a wrapper
WITHOUT_CLASSIFICATION	the testcase to run
WITHOUT_CLASSIFICATION	the method objects for setup (@before) and teardown (@after) methods will be null if not provided or not required
WITHOUT_CLASSIFICATION	the method name to be invoked
WITHOUT_CLASSIFICATION	method should add the junit testxxx method to the list at the end since the sequence matters. @param methodname
WITHOUT_CLASSIFICATION	the wrapper used to invoke the method
WITHOUT_CLASSIFICATION	assume success
WITHOUT_CLASSIFICATION	the name of the class containing the method
WITHOUT_CLASSIFICATION	do not use testcase.run(testresult) method since it will call setup and teardown. doing that will result in calling the setup and teardown method twice and the elapsed time will include setup and teardown.
WITHOUT_CLASSIFICATION	create a new testresult
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	convert junit4 failure to junit3 style
WITHOUT_CLASSIFICATION	copy the original stack trace
WITHOUT_CLASSIFICATION	we should log a warning but allow the test to keep running
WITHOUT_CLASSIFICATION	this should be externalized to the properties
WITHOUT_CLASSIFICATION	probably should not happen
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	copy the original stack trace
WITHOUT_CLASSIFICATION	if the string constructor is not null we use it. if the string constructor is null we use the empty constructor to get a new instance
WITHOUT_CLASSIFICATION	first we see if the class declares a string constructor. if it is doesn't we look for empty constructor.
WITHOUT_CLASSIFICATION	we have to check and make sure the constructor is accessible. if we didn't it would throw an exception and cause a npe.
WITHOUT_CLASSIFICATION	must be final to create instance
WITHOUT_CLASSIFICATION	no need to initialize when getcreateoneinstancepersample is true cause it will be done in sample
WITHOUT_CLASSIFICATION	convert junit4 assertionerror failures to junit3 style so will be treated as failure rather than error.
WITHOUT_CLASSIFICATION	calling a method via reflection results in wrapping any exceptions in ite unwrap these here so runprotected can allocate them correctly.
WITHOUT_CLASSIFICATION	dummy to ensure there is a test to run
WITHOUT_CLASSIFICATION	generates expected exception
WITHOUT_CLASSIFICATION	dummy to ensure there is a test to run
WITHOUT_CLASSIFICATION	dummy to ensure there is a test to run
WITHOUT_CLASSIFICATION	dummy to ensure there is a test to run
WITHOUT_CLASSIFICATION	dummy to ensure there is a test to run
WITHOUT_CLASSIFICATION	let bad input fail silently
WITHOUT_CLASSIFICATION	succeeds only if before method - verifytwo() - is run.
WITHOUT_CLASSIFICATION	fails to generate expected exception
WITHOUT_CLASSIFICATION	or if you have assertions enabled
WITHOUT_CLASSIFICATION	should always fail
WITHOUT_CLASSIFICATION	should not fail
WITHOUT_CLASSIFICATION	generate a test error
WITHOUT_CLASSIFICATION	will generate divide by zero error
WITHOUT_CLASSIFICATION	will generate divide by zero error
WITHOUT_CLASSIFICATION	normal test failure
WITHOUT_CLASSIFICATION	generate test error
WITHOUT_CLASSIFICATION	equation for calculating the weight w = (int)(33 (used/max))
WITHOUT_CLASSIFICATION	changed the logic for bea weblogic in the case a user uses tomcat's status servlet without any modifications. weblogic will return nothing for the connector therefore we need to check the size of the list. peter 12.22.04
WITHOUT_CLASSIFICATION	int spare = cntr.getthreadinfo().getmaxsparethreads()
WITHOUT_CLASSIFICATION	loop to fetch desired connector
WITHOUT_CLASSIFICATION	default get first connector
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	crlf blank line found
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	private monitormodel data
WITHOUT_CLASSIFICATION	log.warn("only for use in unit testing")
WITHOUT_CLASSIFICATION	log.warn("only for use in unit testing")
WITHOUT_CLASSIFICATION	log.warn("only for use in unit testing")
WITHOUT_CLASSIFICATION	log.warn("only for use in unit testing")
WITHOUT_CLASSIFICATION	we check to see if the lastselectedpath is null after we clear it would return null
WITHOUT_CLASSIFICATION	this.data = null this.data = stat
WITHOUT_CLASSIFICATION	i18n contains fixed english text
WITHOUT_CLASSIFICATION	data = model
WITHOUT_CLASSIFICATION	draw grid only when x is 1. if we didn't the grid line would draw over the data lines making it look bad.
WITHOUT_CLASSIFICATION	optional connector name prefix
WITHOUT_CLASSIFICATION	private list workerslist
WITHOUT_CLASSIFICATION	the equations
WITHOUT_CLASSIFICATION	for now just swallow the exception
WITHOUT_CLASSIFICATION	surl can be null if read from a file
WITHOUT_CLASSIFICATION	let bad input fail silently
WITHOUT_CLASSIFICATION	main panel
WITHOUT_CLASSIFICATION	add the main panel and the graph
WITHOUT_CLASSIFICATION	called from ctor so must not be overridable
WITHOUT_CLASSIFICATION	called from ctor so must not be overridable
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	let bad input fail silently
WITHOUT_CLASSIFICATION	should never happen
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	private boolean startdoc = false private boolean enddoc = false
WITHOUT_CLASSIFICATION	this.startdoc = true reset all work variables so reusing the instance starts afresh.
WITHOUT_CLASSIFICATION	this.startdoc = false this.enddoc = true
WITHOUT_CLASSIFICATION	let bad input fail silently
WITHOUT_CLASSIFICATION	note the element is a configtestelement so cannot use ftpsampler access methods
WITHOUT_CLASSIFICATION	n.b. originally there was only one filename and only get(retr) was supported to maintain backwards compatibility the property name needs to remain the same $non-nls-1$
WITHOUT_CLASSIFICATION	use binary mode file transfer? $non-nls-1$
WITHOUT_CLASSIFICATION	used for interrupting the sampler
WITHOUT_CLASSIFICATION	assume failure
WITHOUT_CLASSIFICATION	should probably come from the setup dialog
WITHOUT_CLASSIFICATION	could not access file or other error
WITHOUT_CLASSIFICATION	todo - charset?
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	todo
WITHOUT_CLASSIFICATION	todo
WITHOUT_CLASSIFICATION	called by httprequesthdr
WITHOUT_CLASSIFICATION	lf blank line found
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	main panel
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	are we uploading? $non-nls-1$
WITHOUT_CLASSIFICATION	should the file data be saved in the response? $non-nls-1$
WITHOUT_CLASSIFICATION	no need to close this no need to close this
WITHOUT_CLASSIFICATION	the value is not encoded
WITHOUT_CLASSIFICATION	let the gui show that it will not be encoded
WITHOUT_CLASSIFICATION	get the filename
WITHOUT_CLASSIFICATION	set the values retrieved for the file upload
WITHOUT_CLASSIFICATION	find the first empty line of the multipart it signals end of headers for multipart agents are supposed to terminate lines in crlf
WITHOUT_CLASSIFICATION	regular expression used to match against embedded resource urls
WITHOUT_CLASSIFICATION	need to clear because the
WITHOUT_CLASSIFICATION	optional tasks
WITHOUT_CLASSIFICATION	2 columns size
WITHOUT_CLASSIFICATION	used by httptestsamplegui
WITHOUT_CLASSIFICATION	web request panel
WITHOUT_CLASSIFICATION	set this false to suppress some items for use in http request defaults
WITHOUT_CLASSIFICATION	called from ctor so must not be overridable
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	set false for ajp
WITHOUT_CLASSIFICATION	body data
WITHOUT_CLASSIFICATION	tabbed pane that contains parameters and raw body
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	default changed in 2.3 and again in 2.4
WITHOUT_CLASSIFICATION	concurrent resources download $non-nls-1$
WITHOUT_CLASSIFICATION	see modifytestelement
WITHOUT_CLASSIFICATION	embedded url match regex $non-nls-1$
WITHOUT_CLASSIFICATION	web request panel
WITHOUT_CLASSIFICATION	textfield uses \n (lf) to delimit lines we need to send crlf. rather than change the way that arguments are processed by the samplers for raw data it is easier to fix the data. on retrival crlf is converted back to lf for storage in the text field. see
WITHOUT_CLASSIFICATION	if raw data and parameters match we allow switching
WITHOUT_CLASSIFICATION	convert crlf to cr see modifytestelement
WITHOUT_CLASSIFICATION	all sub-components with setfont(null) inherit this font
WITHOUT_CLASSIFICATION	only display the port number if it is meaningfully specified
WITHOUT_CLASSIFICATION	web server panel
WITHOUT_CLASSIFICATION	autoredirects and followredirects cannot both be selected
WITHOUT_CLASSIFICATION	implementation
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	protocol
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	content_encoding
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	called from ctor so must not be overridable
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	if there is no data then switching between parameters and raw should be allowed with no further user interaction.
WITHOUT_CLASSIFICATION	if there is data in the raw panel then the user should be prevented from switching (that would be easy to track).
WITHOUT_CLASSIFICATION	if the parameter data can be converted (i.e. no names) we warn the user that the parameter data will be lost.
WITHOUT_CLASSIFICATION	if the parameter data cannot be converted to raw then the user should be prevented from doing so raise an error dialog
WITHOUT_CLASSIFICATION	cached value
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	package-protected to allow access by unit-test cases
WITHOUT_CLASSIFICATION	helper method to save the cache entry
WITHOUT_CLASSIFICATION	invalid dates must be treated as expired
WITHOUT_CLASSIFICATION	if no-cache is present ensure that expiresdate remains null which forces revalidation
WITHOUT_CLASSIFICATION	the max-age directive overrides the expires header
WITHOUT_CLASSIFICATION	no max-age && no expires
WITHOUT_CLASSIFICATION	date or lastmodified may be null or in bad format
WITHOUT_CLASSIFICATION	else expiresdate computed in (expires!=null) condition is used
WITHOUT_CLASSIFICATION	helper method to deal with missing headers - commons httpclient
WITHOUT_CLASSIFICATION	apache httpclient
WITHOUT_CLASSIFICATION	is the sample result ok to cache? i.e is it in the 2xx range?
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	+ jmx attributes do not change values $non-nls-1$ $non-nls-1$ $non-nls-1$ -
WITHOUT_CLASSIFICATION	i.e. not using expires check that we are processing expires/cachecontrol
WITHOUT_CLASSIFICATION	see httpsdeveloper.mozilla.org/en/http_caching_faq see httpwww.ietf.org/rfc/rfc2616.txt#13.2.4
WITHOUT_CLASSIFICATION	cache the value
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	echo back
WITHOUT_CLASSIFICATION	check if we have read all the headers
WITHOUT_CLASSIFICATION	we know when to stop reading so we can allow the read method to block
WITHOUT_CLASSIFICATION	no divider was found
WITHOUT_CLASSIFICATION	use null for no expiry
WITHOUT_CLASSIFICATION	store session cookies as well as unexpired ones
WITHOUT_CLASSIFICATION	store session cookies as well as unexpired ones
WITHOUT_CLASSIFICATION	has its own debug log removes matching cookies
WITHOUT_CLASSIFICATION	has its own debug log removes matching cookies
WITHOUT_CLASSIFICATION	this means the cookie was wrong for the url
WITHOUT_CLASSIFICATION	this means the cookie was wrong for the url
WITHOUT_CLASSIFICATION	tweak diff hc3 vs hc4
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	the headers and body are divided by a blank line (the \r is to allow for the cr before lf) $non-nls-1$
WITHOUT_CLASSIFICATION	if we know the content length we can allow the reading of the request to block until more data arrives. if it is chunked transfer we cannot allow the reading to block because we do not know when to stop reading because the chunked transfer is not properly supported yet
WITHOUT_CLASSIFICATION	check how much of the body we have already read as part of reading the headers we subtract two bytes for the crlf divider between header and body
WITHOUT_CLASSIFICATION	the reqest has no body or it has a transfer encoding we do not support. in either case we read any data available
WITHOUT_CLASSIFICATION	we use multi-line mask so can prefix the line with ^ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	use null for no expiry
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	needs to be package-protected to avoid problem with serialisation tests
WITHOUT_CLASSIFICATION	start off with a merged object as a copy of the local object
WITHOUT_CLASSIFICATION	iterate thru each of the other headers
WITHOUT_CLASSIFICATION	find the same property in the local headers
WITHOUT_CLASSIFICATION	we have a match
WITHOUT_CLASSIFICATION	prefer values from the other object
WITHOUT_CLASSIFICATION	the other object has an empty value so remove this value from the merged object
WITHOUT_CLASSIFICATION	use the other object's value
WITHOUT_CLASSIFICATION	break out of the inner loop
WITHOUT_CLASSIFICATION	the other object has a new value to be added to the merged
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	todo charset ?
WITHOUT_CLASSIFICATION	finally merge the names so it's clear they've been merged
WITHOUT_CLASSIFICATION	saves the error if one occurs
WITHOUT_CLASSIFICATION	listen on main socket
WITHOUT_CLASSIFICATION	pass request to new thread
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	todo charset ? $non-nls-1$
WITHOUT_CLASSIFICATION	todo charset ? $non-nls-1$
WITHOUT_CLASSIFICATION	only used by gui
WITHOUT_CLASSIFICATION	timeout occurred. ignore and keep looping until we're told to stop running.
WITHOUT_CLASSIFICATION	ensure that there is always a collection available
WITHOUT_CLASSIFICATION	default level allow override by system properties
WITHOUT_CLASSIFICATION	final int _ignored = 1
WITHOUT_CLASSIFICATION	++ jmx tag values $non-nls-1$
WITHOUT_CLASSIFICATION	can't have two matching cookies
WITHOUT_CLASSIFICATION	ensure that the initial cookies are copied to the per-thread instances
WITHOUT_CLASSIFICATION	long max was used to represent a non-expiring cookie but that caused problems
WITHOUT_CLASSIFICATION	used by gui
WITHOUT_CLASSIFICATION	used by gui
WITHOUT_CLASSIFICATION	$non-nls-1$ -- jmx tag values
WITHOUT_CLASSIFICATION	only save unexpired cookies
WITHOUT_CLASSIFICATION	flag - if all machines within a given domain can access the variable. (from httpwww.cookiecentral.com/faq/ 3.5)
WITHOUT_CLASSIFICATION	ensure data is set up ok initially
WITHOUT_CLASSIFICATION	do nothing the cookie manager has to accept changes.
WITHOUT_CLASSIFICATION	do nothing the cookie manager has to accept changes.
WITHOUT_CLASSIFICATION	scan for any matching cookies
WITHOUT_CLASSIFICATION	todo charset ?
WITHOUT_CLASSIFICATION	remove all the cookies.
WITHOUT_CLASSIFICATION	used by httpmirrorserver
WITHOUT_CLASSIFICATION	no need to call clear
WITHOUT_CLASSIFICATION	and as a string
WITHOUT_CLASSIFICATION	used for saving entries to a file
WITHOUT_CLASSIFICATION	wait for server to stop
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	regular expression used to match against embedded resource urls
WITHOUT_CLASSIFICATION	optional tasks
WITHOUT_CLASSIFICATION	use this instead of getlabelresource() otherwise getdocanchor() below does not work
WITHOUT_CLASSIFICATION	flag - if all machines within a given domain can access the variable. (from httpwww.cookiecentral.com/faq/ 3.5)
WITHOUT_CLASSIFICATION	column numbers - must agree with order above
WITHOUT_CLASSIFICATION	only http and https are supported
WITHOUT_CLASSIFICATION	obtain another url with an explicit port
WITHOUT_CLASSIFICATION	allow for old format file without mechanism support
WITHOUT_CLASSIFICATION	this should never happen anyway we'll continue with url2 set to null.
WITHOUT_CLASSIFICATION	for use by ajp
WITHOUT_CLASSIFICATION	allow for old format file without the extra columnns
WITHOUT_CLASSIFICATION	needs to be package protected for unit test
WITHOUT_CLASSIFICATION	embedded url match regex
WITHOUT_CLASSIFICATION	does not apply to java implementation
WITHOUT_CLASSIFICATION	add a listener to activate or not concurrent dwn.
WITHOUT_CLASSIFICATION	url config
WITHOUT_CLASSIFICATION	includes \n
WITHOUT_CLASSIFICATION	bottom (embedded resources source address and optional tasks)
WITHOUT_CLASSIFICATION	2 column size
WITHOUT_CLASSIFICATION	called from ctor so must not be overridable
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	retrieve images $non-nls-1$
WITHOUT_CLASSIFICATION	go to 1st line
WITHOUT_CLASSIFICATION	download concurrent resources $non-nls-1$
WITHOUT_CLASSIFICATION	is monitor $non-nls-1$
WITHOUT_CLASSIFICATION	only contains httpfilearg elements
WITHOUT_CLASSIFICATION	use md5 $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	add a new field source ip address (for hc implementations only) default ip/hostname
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ default ip/hostname
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	button for browsing webservice wsdl
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	web methods
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	improve xml display
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	add the proxy elements
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	main panel
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	we only put httpfileargs in it
WITHOUT_CLASSIFICATION	$non-nls-1$ permit dynamic resize of textarea
WITHOUT_CLASSIFICATION	we get the authmanager and pass it to the wsdlhelper once the sampler is updated to axis all of this stuff should not be necessary. now i just need to find the time and motivation to do it.
WITHOUT_CLASSIFICATION	if use proxy is checked we enable the text fields for the host and port
WITHOUT_CLASSIFICATION	required for unit tests
WITHOUT_CLASSIFICATION	disable delete and browse buttons if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	disable delete and browse if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	create the jtable that holds header per row
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.modifytestelement(testelement)
WITHOUT_CLASSIFICATION	enable delete (which may already be enabled but it won't hurt)
WITHOUT_CLASSIFICATION	highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	force a minimum table height of 70 pixels
WITHOUT_CLASSIFICATION	called from ctor so must not be overridable
WITHOUT_CLASSIFICATION	highlight (select) the appropriate rows.
WITHOUT_CLASSIFICATION	all table cells are editable
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	table still contains one or more rows so highlight (select) the appropriate one.
WITHOUT_CLASSIFICATION	if a table cell is being edited we must cancel the editing before deleting the row.
WITHOUT_CLASSIFICATION	if a table cell is being edited we must cancel the editing before deleting the row.
WITHOUT_CLASSIFICATION	disable the delete and save buttons if no rows remaining after delete
WITHOUT_CLASSIFICATION	$non-nls-1$ --
WITHOUT_CLASSIFICATION	enable the delete and save buttons if they are currently disabled.
WITHOUT_CLASSIFICATION	if a table cell is being edited we should accept the current value and stop the editing before adding a new row.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	non-expiring
WITHOUT_CLASSIFICATION	disable the delete and save buttons if no rows remaining after delete.
WITHOUT_CLASSIFICATION	preset to default impl
WITHOUT_CLASSIFICATION	create the jtable that holds one cookie per row
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	++ action command names $non-nls-1$
WITHOUT_CLASSIFICATION	highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	table still contains one or more rows so highlight (select) the appropriate one.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	drop-down list for renderer
WITHOUT_CLASSIFICATION	if no results render in jmeter.properties load standard (default)
WITHOUT_CLASSIFICATION	called from ctor so must not be overridable
WITHOUT_CLASSIFICATION	if a table cell is being edited we should accept the current value and stop the editing before adding a new row.
WITHOUT_CLASSIFICATION	if a table cell is being edited we must cancel the editing before deleting the row
WITHOUT_CLASSIFICATION	only contains argument (or httpargument)
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ removed expiration because it's just an annoyance for static cookies
WITHOUT_CLASSIFICATION	if a table cell is being edited we must cancel the editing before deleting the row.
WITHOUT_CLASSIFICATION	table still contains one or more rows so highlight (select) the appropriate one.
WITHOUT_CLASSIFICATION	table still contains one or more rows so highlight (select) the appropriate one.
WITHOUT_CLASSIFICATION	if a table cell is being edited we should accept the current value and stop the editing before adding a new row.
WITHOUT_CLASSIFICATION	enable the delete and save buttons if they are currently disabled.
WITHOUT_CLASSIFICATION	enable the delete and save buttons if they are currently disabled.
WITHOUT_CLASSIFICATION	disable the delete and save buttons if no rows remaining after delete.
WITHOUT_CLASSIFICATION	button panel
WITHOUT_CLASSIFICATION	create the jtable that holds auth per row
WITHOUT_CLASSIFICATION	ignore non-http samplers
WITHOUT_CLASSIFICATION	&& !ispathextensionnoquestionmark()
WITHOUT_CLASSIFICATION	&& !ispathextensionnoequals()
WITHOUT_CLASSIFICATION	&& !ispathextensionnoequals() && !ispathextensionnoquestionmark()
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	if ! ispathextension()
WITHOUT_CLASSIFICATION	highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	all table cells are editable
WITHOUT_CLASSIFICATION	don't get tripped up by re chars in the arg name
WITHOUT_CLASSIFICATION	name="sessionid" value="value"
WITHOUT_CLASSIFICATION	----------------------------------------------------------------------- methods -----------------------------------------------------------------------
WITHOUT_CLASSIFICATION	return the current value (don't forget the prefix!)
WITHOUT_CLASSIFICATION	increment the value
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	transient perl5compiler compiler = new perl5compiler() $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	preprocessors are cloned per-thread so this will be saved per-thread $non-nls-1$
WITHOUT_CLASSIFICATION	sessionid=value $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	value="value" name="sessionid" $non-nls-1$ $non-nls-1$ $non-nls-2$ $non-nls-3$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------ constructors ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------ methods implemented from interface org.apache.jmeter.config.modifier ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------ methods ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	if a mask for this argument exists
WITHOUT_CLASSIFICATION	values to be masked must be set in the webapp to ""
WITHOUT_CLASSIFICATION	create instances needed for parsing
WITHOUT_CLASSIFICATION	xmlreaderfactory.createxmlreader(vendorparseclass)
WITHOUT_CLASSIFICATION	register content handler
WITHOUT_CLASSIFICATION	register error handler
WITHOUT_CLASSIFICATION	parse
WITHOUT_CLASSIFICATION	------------------------------------------- constants and data members -------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------- constructors -------------------------------------------
WITHOUT_CLASSIFICATION	initalise pointer to first user
WITHOUT_CLASSIFICATION	use round robin allocation of user details
WITHOUT_CLASSIFICATION	no entries in all users therefore create an empty map object
WITHOUT_CLASSIFICATION	if parameter name exists in http request then change its value with value obtained with regular expression
WITHOUT_CLASSIFICATION	verify if regex groups exists
WITHOUT_CLASSIFICATION	note userparameterxml accesses this variable to obtain the set data via method getparsedparameters()
WITHOUT_CLASSIFICATION	cannot be first line either
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	------------------------------------------- constants and data members -------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------- methods -------------------------------------------
WITHOUT_CLASSIFICATION	haven't got to reset paramname & paramvalue but did it to keep the code looking correct
WITHOUT_CLASSIFICATION	these are used as gui item names lowerbound upperbound and increment are used in the focuslost() method
WITHOUT_CLASSIFICATION	must create a new object or else end up with a set full of the same map object
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------- methods (used by userparameterxml to get xml parameters from xml file) -----------------------------------------------------------------------
WITHOUT_CLASSIFICATION	this.updateui()
WITHOUT_CLASSIFICATION	boolean pass = true
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	next line
WITHOUT_CLASSIFICATION	called from ctor so must not be overridable
WITHOUT_CLASSIFICATION	utf-8 unsupported? you must be joking!
WITHOUT_CLASSIFICATION	n.b. since the tags are extracted from an html form any values must already have been encoded
WITHOUT_CLASSIFICATION	the value is in the second group
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	cache of parsers - parsers must be re-usable
WITHOUT_CLASSIFICATION	is there a cached parser?
WITHOUT_CLASSIFICATION	cache the parser
WITHOUT_CLASSIFICATION	the set is used to ignore duplicated binary files. using a linkedhashset to avoid unnecessary overhead in iterating the elements in the set later on. as a side-effect this will keep them roughly in order which should be a better model of browser behaviour.
WITHOUT_CLASSIFICATION	a dummy class to pass the pointer of url.
WITHOUT_CLASSIFICATION	then we need to download the binary
WITHOUT_CLASSIFICATION	we check the input tag type for image
WITHOUT_CLASSIFICATION	putting the string first means it works even if the attribute is null
WITHOUT_CLASSIFICATION	now look for urls in the style attribute
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	we check the input tag type for image
WITHOUT_CLASSIFICATION	then we need to download the binary
WITHOUT_CLASSIFICATION	putting the string first means it works even if the attribute is null
WITHOUT_CLASSIFICATION	now look for urls in the style attribute
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	case node.text_node break
WITHOUT_CLASSIFICATION	helper method to get an attribute value if it exists @param attrs list of attributs @param attname attribute name @return
WITHOUT_CLASSIFICATION	note there's 3 capturing groups per value
WITHOUT_CLASSIFICATION	number of capturing groups possibly containing base hrefs
WITHOUT_CLASSIFICATION	check for a base href
WITHOUT_CLASSIFICATION	doesn't even look like a url? maybe it isn't ignore the exception.
WITHOUT_CLASSIFICATION	url.replace('+'' ')
WITHOUT_CLASSIFICATION	no warn message to avoid performance impact
WITHOUT_CLASSIFICATION	private iterator used to unwrap the url from the urlstring class
WITHOUT_CLASSIFICATION	unwraps the urlstring class to return the url
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	try to ensure that more javascript code is processed ok
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	listen on main socket
WITHOUT_CLASSIFICATION	timeout occurred. ignore and keep looping until we're told to stop running.
WITHOUT_CLASSIFICATION	a dummy class to pass the pointer of url.
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	we check the input tag type for image
WITHOUT_CLASSIFICATION	then we need to download the binary
WITHOUT_CLASSIFICATION	putting the string first means it works even if the attribute is null
WITHOUT_CLASSIFICATION	now look for urls in the style attribute
WITHOUT_CLASSIFICATION	now parse the dom tree
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	a url is always in a tag.
WITHOUT_CLASSIFICATION	first we check to see if body tag has a background set
WITHOUT_CLASSIFICATION	look for applets
WITHOUT_CLASSIFICATION	look for objects
WITHOUT_CLASSIFICATION	second if the tag was a composite tag recursively parse its children.
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ proxy.binary.filetype=binary
WITHOUT_CLASSIFICATION	optionally number the requests
WITHOUT_CLASSIFICATION	running number
WITHOUT_CLASSIFICATION	pass request to new proxy thread
WITHOUT_CLASSIFICATION	use default encoding
WITHOUT_CLASSIFICATION	tell the sampler to do a multipart post
WITHOUT_CLASSIFICATION	set the form data
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	used by gui
WITHOUT_CLASSIFICATION	and as a string
WITHOUT_CLASSIFICATION	set the file uploads
WITHOUT_CLASSIFICATION	remove the header for content-type and content-length since those values will most likely be incorrect when the sampler performs the multipart request because the boundary string will change
WITHOUT_CLASSIFICATION	used when postdata is pure xml (eg. an xml-rpc call) or for put
WITHOUT_CLASSIFICATION	it is the most common post request with parameter name and values we also assume this if no content type is present to be most backwards compatible but maybe we should only parse arguments if the content type is as expected standard name=value postdata
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	just put the whole postbody as the value of a parameter used when postdata is pure xml (ex. an xml-rpc call)
WITHOUT_CLASSIFICATION	although the spec says utf-8 should be used for encoding url parameters most browser use iso-8859-1 for default if encoding is not known. we use null for contentencoding then the url parameters will be added with the value in the url and the "encode?" flag set to false
WITHOUT_CLASSIFICATION	set the content encoding
WITHOUT_CLASSIFICATION	check if the request itself tells us what the encoding is
WITHOUT_CLASSIFICATION	check if we know the encoding of the page
WITHOUT_CLASSIFICATION	check if we know the encoding of the form
WITHOUT_CLASSIFICATION	form encoding has priority over page encoding
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	wait for server to stop
WITHOUT_CLASSIFICATION	must agree with the order of entries in the drop-down created in proxycontrolgui.creategroupingpanel() private static final int grouping_no_groups = 0
WITHOUT_CLASSIFICATION	$non-nls-1$ - jmx file attributes
WITHOUT_CLASSIFICATION	note windows user preferences are stored relative to hkey_current_user\software\javasoft\prefs
WITHOUT_CLASSIFICATION	original numeric order (we now use strings)
WITHOUT_CLASSIFICATION	$non-nls-1$ detect if user has pressed a new link
WITHOUT_CLASSIFICATION	for ssl connection
WITHOUT_CLASSIFICATION	proxy configuration ssl
WITHOUT_CLASSIFICATION	should not happen
WITHOUT_CLASSIFICATION	keys for user preferences
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	should we match using regexes?
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	whether to use dymanic key generation (if supported) $non-nls-1$
WITHOUT_CLASSIFICATION	the alias to be used if dynamic host names are not possible $non-nls-1$
WITHOUT_CLASSIFICATION	if this is defined it is assumed to be the alias of a user-supplied certificate overrides dynamic mode $non-nls-1$
WITHOUT_CLASSIFICATION	user-provided keystore keystore generated by jmeter single entry
WITHOUT_CLASSIFICATION	whether to use the redirect disabling feature (can be switched off if it does not work)
WITHOUT_CLASSIFICATION	although this field is mutable it is only accessed within the synchronized method deliversampler()
WITHOUT_CLASSIFICATION	when was the last sample seen?
WITHOUT_CLASSIFICATION	maintain original behaviour
WITHOUT_CLASSIFICATION	convert the old numeric types - just in case someone wants to reload the workbench
WITHOUT_CLASSIFICATION	make sure we log the error
WITHOUT_CLASSIFICATION	the url matches the last redirect
WITHOUT_CLASSIFICATION	save location so resulting sample can be disabled
WITHOUT_CLASSIFICATION	ok because find only returns correct element types
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	package protected to allow test case access
WITHOUT_CLASSIFICATION	package protected to allow test case access
WITHOUT_CLASSIFICATION	if no expressions are specified we let the sample pass
WITHOUT_CLASSIFICATION	check that we have a content type
WITHOUT_CLASSIFICATION	check if the include pattern is matched
WITHOUT_CLASSIFICATION	check if the exclude pattern is matched
WITHOUT_CLASSIFICATION	not 100% sure but i believe this can't happen so i'll log and throw an error
WITHOUT_CLASSIFICATION	not 100% sure but i believe this can't happen so i'll log and throw an error
WITHOUT_CLASSIFICATION	look for elements directly within the http proxy
WITHOUT_CLASSIFICATION	look for arguments elements in the target controller or higher up
WITHOUT_CLASSIFICATION	special case for the testplan's arguments sub-element
WITHOUT_CLASSIFICATION	remember this was first in its batch
WITHOUT_CLASSIFICATION	decent value for timers
WITHOUT_CLASSIFICATION	huh! don't store this one!
WITHOUT_CLASSIFICATION	if we're not storing subsequent samplers we'll need the first sampler to do all the work
WITHOUT_CLASSIFICATION	find the last controller in the target to store the sampler there
WITHOUT_CLASSIFICATION	there's a few properties which are excluded from this processing
WITHOUT_CLASSIFICATION	go on with next property.
WITHOUT_CLASSIFICATION	build the replacer from all the variables in the collection
WITHOUT_CLASSIFICATION	tl - te
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	assume we have already created the store
WITHOUT_CLASSIFICATION	assume we have already created the store
WITHOUT_CLASSIFICATION	no ca key - probably the wrong store type. cannot continue
WITHOUT_CLASSIFICATION	store is faulty we need to recreate it if cert is not valid flag up to recreate it
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	store is faulty we need to recreate it if cert is not valid flag up to recreate it
WITHOUT_CLASSIFICATION	message includes the file name
WITHOUT_CLASSIFICATION	no existing file or not valid alphanum to avoid issues with command-line quoting we use same password for both
WITHOUT_CLASSIFICATION	no existing file or not valid alphanum to avoid issues with command-line quoting we use same password for both
WITHOUT_CLASSIFICATION	this should now work
WITHOUT_CLASSIFICATION	this should now work
WITHOUT_CLASSIFICATION	the subject may be either a host or a domain
WITHOUT_CLASSIFICATION	reload to pick up new aliases reloading is very quick compared with creating an entry currently
WITHOUT_CLASSIFICATION	not a wildcard
WITHOUT_CLASSIFICATION	this should only be called for a specific host
WITHOUT_CLASSIFICATION	ensure proxy threads cannot interfere with each other
WITHOUT_CLASSIFICATION	reload after adding alias
WITHOUT_CLASSIFICATION	safer to start afresh
WITHOUT_CLASSIFICATION	the keystore for use by the proxy
WITHOUT_CLASSIFICATION	allow list of headers to be overridden $non-nls-1$
WITHOUT_CLASSIFICATION	use with ssl connection
WITHOUT_CLASSIFICATION	for identifying log messages
WITHOUT_CLASSIFICATION	keystore for ssl keys fixed at config except for dynamic host key generation
WITHOUT_CLASSIFICATION	check which httpsampler class we should use
WITHOUT_CLASSIFICATION	now parse initial request (in case it is a connect request)
WITHOUT_CLASSIFICATION	should not happen but if it does we don't want to continue
WITHOUT_CLASSIFICATION	re-parse (now it's the http request over ssl)
WITHOUT_CLASSIFICATION	most likely this is because of a certificate error
WITHOUT_CLASSIFICATION	now parse the dom tree
WITHOUT_CLASSIFICATION	we start to iterate through the elements
WITHOUT_CLASSIFICATION	a url is always in a tag.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	with ssl request url is hostport (without https or path) $non-nls-1$
WITHOUT_CLASSIFICATION	create a header manager to ensure that the browsers headers are captured and sent to the server
WITHOUT_CLASSIFICATION	needed for httpsampler2
WITHOUT_CLASSIFICATION	needed for httpsampler2
WITHOUT_CLASSIFICATION	find the page encoding and possibly encodings for forms in the page in the response from the web server
WITHOUT_CLASSIFICATION	ignored already processed
WITHOUT_CLASSIFICATION	generate result (if nec.) and populate it
WITHOUT_CLASSIFICATION	generate result (if nec.) and populate it
WITHOUT_CLASSIFICATION	generate result (if nec.) and populate it
WITHOUT_CLASSIFICATION	we don't want to store any cookies in the generated test plan
WITHOUT_CLASSIFICATION	always remove cookies always remove authorization remove additional headers
WITHOUT_CLASSIFICATION	deliversampler allows sampler to be null but result must not be null
WITHOUT_CLASSIFICATION	pick up any recent changes from other threads
WITHOUT_CLASSIFICATION	the host has a key already
WITHOUT_CLASSIFICATION	the host matches a domain use its key
WITHOUT_CLASSIFICATION	add the remaining parts
WITHOUT_CLASSIFICATION	check if alias is suitable here rather than waiting for connection to fail
WITHOUT_CLASSIFICATION	drop empty trailing content
WITHOUT_CLASSIFICATION	we don't want this passed on to browser
WITHOUT_CLASSIFICATION	we don't want this passed on to browser
WITHOUT_CLASSIFICATION	fix the content length
WITHOUT_CLASSIFICATION	get rid of the query and the ?
WITHOUT_CLASSIFICATION	remaining implementations delegate to the wrapped key manager
WITHOUT_CLASSIFICATION	only check form tags
WITHOUT_CLASSIFICATION	find the action / form url
WITHOUT_CLASSIFICATION	just use the first one of the possible many charsets
WITHOUT_CLASSIFICATION	notread $non-nls-1$
WITHOUT_CLASSIFICATION	saved copy of first line for error reports
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	second if the tag was a composite tag recursively parse its children.
WITHOUT_CLASSIFICATION	get rid of the query and the ?
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	todo - charset?
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	parse other header lines looking for content-length
WITHOUT_CLASSIFICATION	save the last valid content length one
WITHOUT_CLASSIFICATION	keep the raw post data
WITHOUT_CLASSIFICATION	will be hostport for connect
WITHOUT_CLASSIFICATION	ssl connection
WITHOUT_CLASSIFICATION	don't try to adjust the host name
WITHOUT_CLASSIFICATION	it must be a proxied https request $non-nls-1$
WITHOUT_CLASSIFICATION	java impl accepts urls with unsafe characters so don't do anything
WITHOUT_CLASSIFICATION	split line into name/value pairs and store in headers if relevant if name = "content-length" then return value as int else return 0
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	get the boundary string for the multiparts from the content type
WITHOUT_CLASSIFICATION	parsing methods
WITHOUT_CLASSIFICATION	chop to "server.namex/thing"
WITHOUT_CLASSIFICATION	chop to "server.namex/thing"
WITHOUT_CLASSIFICATION	chop to server.namexx $non-nls-1$
WITHOUT_CLASSIFICATION	chop to server.name $non-nls-1$
WITHOUT_CLASSIFICATION	handle ipv6 urls
WITHOUT_CLASSIFICATION	chop to server.namexx
WITHOUT_CLASSIFICATION	chop to server.name
WITHOUT_CLASSIFICATION	generate error body
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	prevent both redirect types from being selected
WITHOUT_CLASSIFICATION	300 codes tell client to do actions
WITHOUT_CLASSIFICATION	use regexes to match the source data
WITHOUT_CLASSIFICATION	proxy can take some while to start up show a wating cursor
WITHOUT_CLASSIFICATION	this is applied to fields that should cause a restart when changed $non-nls-1$
WITHOUT_CLASSIFICATION	- action names
WITHOUT_CLASSIFICATION	resource names for column headers $non-nls-1$
WITHOUT_CLASSIFICATION	used by itemlistener $non-nls-1$
WITHOUT_CLASSIFICATION	system.err.println("enable restart")
WITHOUT_CLASSIFICATION	handles groupingmode. actionperfomed is not suitable as that seems to be activated whenever the proxy is selected in the test plan also handles samplertypename
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	drop the last character
WITHOUT_CLASSIFICATION	highlight (select) the appropriate rows.
WITHOUT_CLASSIFICATION	highlight (select) the appropriate rows.
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	default value $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ maintain original default
WITHOUT_CLASSIFICATION	default value $non-nls-1$
WITHOUT_CLASSIFICATION	action listener will be added later
WITHOUT_CLASSIFICATION	ignore everything else
WITHOUT_CLASSIFICATION	note position of these elements in the menu must match the corresponding proxycontrol.grouping_ values. $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	stop action notifications while we shuffle this around
WITHOUT_CLASSIFICATION	include request body if it is a post or put or patch
WITHOUT_CLASSIFICATION	reinstate action notifications
WITHOUT_CLASSIFICATION	never null
WITHOUT_CLASSIFICATION	set the current value
WITHOUT_CLASSIFICATION	never null
WITHOUT_CLASSIFICATION	can share these
WITHOUT_CLASSIFICATION	don't redirect the following 300 = multiple choice 304 = not modified 305 = use proxy 306 = (unused)
WITHOUT_CLASSIFICATION	get the start of the file
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	preserve original case
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	update the dataencoding
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	extract the content-type if present $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ maximum connection retries
WITHOUT_CLASSIFICATION	$non-nls-1$ temporary copies so can set the final ones
WITHOUT_CLASSIFICATION	n.b. this needs to be done before opening the connection
WITHOUT_CLASSIFICATION	update follow redirects setting just for this connection
WITHOUT_CLASSIFICATION	n.b. must be done after opening connection
WITHOUT_CLASSIFICATION	works ok even if contentencoding is null
WITHOUT_CLASSIFICATION	normal inputstream is not available
WITHOUT_CLASSIFICATION	n.b. this closes 'in'
WITHOUT_CLASSIFICATION	add all the headers from the headermanager
WITHOUT_CLASSIFICATION	get all the request properties which are the headers set on the connection
WITHOUT_CLASSIFICATION	exclude the cookie header since cookie is reported separately in the sample
WITHOUT_CLASSIFICATION	value is a list of strings
WITHOUT_CLASSIFICATION	count the retries as well in the time
WITHOUT_CLASSIFICATION	check cache for an entry with an expires header in the future
WITHOUT_CLASSIFICATION	start with 0 so tries at least once and retries at most max_conn_retries times
WITHOUT_CLASSIFICATION	attempt the connection
WITHOUT_CLASSIFICATION	we don't want interrupt to try disconnection again
WITHOUT_CLASSIFICATION	try again
WITHOUT_CLASSIFICATION	this should never happen but
WITHOUT_CLASSIFICATION	nice we've got a connection. finish sending the request
WITHOUT_CLASSIFICATION	request sent. now get the response
WITHOUT_CLASSIFICATION	done with the sampling proper.
WITHOUT_CLASSIFICATION	now collect the results into the httpsampleresult
WITHOUT_CLASSIFICATION	cannot be null here
WITHOUT_CLASSIFICATION	e.g. text/html charset=iso-8859-1
WITHOUT_CLASSIFICATION	if either a file or path location is given get the file object. we have a file
WITHOUT_CLASSIFICATION	set details from the actual response needs to be done before response can be stored
WITHOUT_CLASSIFICATION	sampling proper - establish the connection and read the response repeatedly try to connect
WITHOUT_CLASSIFICATION	store any cookies received in the cookie manager
WITHOUT_CLASSIFICATION	if we redirected automatically the url may have changed
WITHOUT_CLASSIFICATION	has been seen in a redirect use header (if possible) if no message found
WITHOUT_CLASSIFICATION	don't process again
WITHOUT_CLASSIFICATION	save cache information
WITHOUT_CLASSIFICATION	random class for generating random numbers.
WITHOUT_CLASSIFICATION	return the absolutepath of the file
WITHOUT_CLASSIFICATION	the method will check to see if jmeter was started in nongui mode. if it was it will try to pick up the proxy host and port values if they were passed to jmeter.java.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	+ jmx file attribut names - do not change! $non-nls-1$
WITHOUT_CLASSIFICATION	we check to see if the proxy host and port are set
WITHOUT_CLASSIFICATION	this method uses apache soap util to create the proper dom elements. @return element
WITHOUT_CLASSIFICATION	get filename or ""
WITHOUT_CLASSIFICATION	note that the filename is also used as a key to the pool (if used) documents provided in the testplan are not currently pooled as they may change between samples.
WITHOUT_CLASSIFICATION	we created the document
WITHOUT_CLASSIFICATION	must be local content - or not using pool
WITHOUT_CLASSIFICATION	consider using apache commons pool to create a pool of document builders or make sure xmlparserutils creates builders efficiently.
WITHOUT_CLASSIFICATION	suppress messages to stdout
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	we don't want interrupt to try disconnection again we don't want to continue using this connection even if keepalive is set may not exist
WITHOUT_CLASSIFICATION	calling disconnect doesn't close the connection immediately but indicates we're through with it. the jvm should close it when necessary. we don't want interrupt to try disconnection again disconnect unless using keepalive
WITHOUT_CLASSIFICATION	it's not set lets check if the user passed proxy host and port from command line
WITHOUT_CLASSIFICATION	it's not set lets check if the user passed proxy host and port from command line
WITHOUT_CLASSIFICATION	must be a "here" document
WITHOUT_CLASSIFICATION	required to satisfy httpsamplerbase should not be called as we override sample()
WITHOUT_CLASSIFICATION	$non-nls-1$ - jmx file attribut names - do not change!
WITHOUT_CLASSIFICATION	assume it will fail ditto $non-nls-1$
WITHOUT_CLASSIFICATION	set the response defaults
WITHOUT_CLASSIFICATION	warning - could be large
WITHOUT_CLASSIFICATION	if a blank headermanager exists try to get the soaphttpconnection. after the first request there should be a connection object stored with the cookie header info.
WITHOUT_CLASSIFICATION	set the auth. thanks to kiyun roe for contributing the patch i cleaned up the patch slightly. 5-26-05
WITHOUT_CLASSIFICATION	check the proxy
WITHOUT_CLASSIFICATION	if use proxy is set we try to pick up the proxy host and port from either the text fields or from jmeterutil if they were passed from command line
WITHOUT_CLASSIFICATION	if for some reason the host is blank and the port is zero the sampler will fail silently
WITHOUT_CLASSIFICATION	api uses raw types
WITHOUT_CLASSIFICATION	it is not possible to access the actual http response code so we assume no data means failure
WITHOUT_CLASSIFICATION	scheme used for slow http sockets. cannot be set as a default because must be set on an httpclient instance.
WITHOUT_CLASSIFICATION	we always want to override the https scheme because we want to trust all certificates and hosts
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	done with the sampling proper.
WITHOUT_CLASSIFICATION	now collect the results into the httpsampleresult
WITHOUT_CLASSIFICATION	if we redirected automatically the url may have changed
WITHOUT_CLASSIFICATION	store any cookies received in the cookie manager
WITHOUT_CLASSIFICATION	save cache information
WITHOUT_CLASSIFICATION	condensed length (without \r) add \r for each header add \r for initial header final \r\n before data
WITHOUT_CLASSIFICATION	by not reading the response for real it improves the performance on slow clients
WITHOUT_CLASSIFICATION	reponse code doesn't really apply since the soap driver doesn't provide a response code
WITHOUT_CLASSIFICATION	create a set of default parameters from the ones initially created. this allows the defaults to be overridden if necessary from the properties file.
WITHOUT_CLASSIFICATION	set up http scheme override if necessary
WITHOUT_CLASSIFICATION	we always want to override the https scheme
WITHOUT_CLASSIFICATION	accessed from multiple threads
WITHOUT_CLASSIFICATION	can throw ioexception
WITHOUT_CLASSIFICATION	perform the sample
WITHOUT_CLASSIFICATION	needs to be done after execute to pick up all the headers
WITHOUT_CLASSIFICATION	we've finished with the request so we can add the localaddress to it for display
WITHOUT_CLASSIFICATION	http protocol violation but avoids npe
WITHOUT_CLASSIFICATION	record some sizes to allow httpsampleresult.getbytes() with different options
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	follow redirects and download page resources if appropriate
WITHOUT_CLASSIFICATION	pick up headers if failed to execute the request
WITHOUT_CLASSIFICATION	protocol[userpass@]host[port]
WITHOUT_CLASSIFICATION	always create hash because we will always need it
WITHOUT_CLASSIFICATION	allow for null strings
WITHOUT_CLASSIFICATION	otherwise proxy string fields may be null
WITHOUT_CLASSIFICATION	no proxy so don't check proxy fields
WITHOUT_CLASSIFICATION	lookup key - must agree with all the values used to create the httpclient.
WITHOUT_CLASSIFICATION	one-time init for this client
WITHOUT_CLASSIFICATION	set retry count
WITHOUT_CLASSIFICATION	override the defualt schemes as necessary
WITHOUT_CLASSIFICATION	set up proxy details
WITHOUT_CLASSIFICATION	save the agent for next time round
WITHOUT_CLASSIFICATION	use special field ip source address (for pseudo 'ip spoofing')
WITHOUT_CLASSIFICATION	reset in case was set previously
WITHOUT_CLASSIFICATION	allow the mimetype of the file to control the content type
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	exclude the cookie header since cookie is reported separately in the sample
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	n.b. need to separate protocol from authority otherwise httpserver would match httpserver could use separate fields but simpler to combine them
WITHOUT_CLASSIFICATION	method left empty here but allows subclasses to override
WITHOUT_CLASSIFICATION	header[0] is not the status line $non-nls-1$
WITHOUT_CLASSIFICATION	remove any port specification $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	no need to specify the port if it is the default
WITHOUT_CLASSIFICATION	get all the request headers
WITHOUT_CLASSIFICATION	helper class so we can generate request data without dumping entire file contents
WITHOUT_CLASSIFICATION	encoding does not really matter here
WITHOUT_CLASSIFICATION	buffer to hold the post body except file content
WITHOUT_CLASSIFICATION	check if we should do a multipart/form-data or an application/x-www-form-urlencoded post request
WITHOUT_CLASSIFICATION	if a content encoding is specified we use that as the encoding of any parameter values
WITHOUT_CLASSIFICATION	write the request to our own stream
WITHOUT_CLASSIFICATION	create the parts add any parameters
WITHOUT_CLASSIFICATION	we get the posted bytes using the encoding used to create it
WITHOUT_CLASSIFICATION	$non-nls-1$ this is the default used by httpclient
WITHOUT_CLASSIFICATION	not multipart check if the header manager had a content type header this allows the user to specify his own content-type for a post request
WITHOUT_CLASSIFICATION	if there are no arguments we can send a file as the body of the request todo needs a multiple file upload scenerio
WITHOUT_CLASSIFICATION	if getsendfileaspostbody returned true it's sure that file is not null
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	we get the posted bytes using the encoding used to create it
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	we just add placeholder text for file content
WITHOUT_CLASSIFICATION	if a content encoding is specified we set it as http parameter so that the post body will be encoded in the specified content encoding
WITHOUT_CLASSIFICATION	if none of the arguments have a name specified we just send all the values as the post body
WITHOUT_CLASSIFICATION	just append all the parameter values and use that as the post body
WITHOUT_CLASSIFICATION	note if "encoded?" is not selected arg.getencodedvalue is equivalent to arg.getvalue
WITHOUT_CLASSIFICATION	note if "encoded?" is not selected arg.getencodedvalue is equivalent to arg.getvalue
WITHOUT_CLASSIFICATION	let stringentity perform the encoding
WITHOUT_CLASSIFICATION	it is a normal post request with parameter names and values
WITHOUT_CLASSIFICATION	set the content type
WITHOUT_CLASSIFICATION	add the parameters
WITHOUT_CLASSIFICATION	use the default encoding for urls
WITHOUT_CLASSIFICATION	the httpclient always urlencodes both name and value so if the argument is already encoded we have to decode it before adding it to the post request
WITHOUT_CLASSIFICATION	the value is already encoded by the user must decode the value now so that when the httpclient encodes it we end up with the same value as the user had entered.
WITHOUT_CLASSIFICATION	add the parameter httpclient will urlencode it
WITHOUT_CLASSIFICATION	buffer to hold the entity body
WITHOUT_CLASSIFICATION	we provide the mime type here
WITHOUT_CLASSIFICATION	check for local contentencoding (charset) override fall back to default for content body we do this here rather so we can use the same charset to retrieve the data
WITHOUT_CLASSIFICATION	only create this if we are overriding whatever default there may be if there are no arguments we can send a file as the body of the request
WITHOUT_CLASSIFICATION	just append all the parameter values and use that as the entity body
WITHOUT_CLASSIFICATION	check if we have any content to send for body
WITHOUT_CLASSIFICATION	we get the posted bytes using the charset that was used to create them
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	if getsendfileaspostbody returned true it's sure that file is not null no need for content-type here
WITHOUT_CLASSIFICATION	if none of the arguments have a name specified we just send all the values as the entity body
WITHOUT_CLASSIFICATION	if the request entity is repeatable we can send it first to our own stream so we can return it
WITHOUT_CLASSIFICATION	this probably cannot happen
WITHOUT_CLASSIFICATION	does not need to be synchronised as all access is from same thread
WITHOUT_CLASSIFICATION	don't try twice
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	may be the empty string
WITHOUT_CLASSIFICATION	n.b. it's not po ssible to forward threadstarted() to the implementation class. this is because config items are not processed until later and httpdefaults may define the implementation
WITHOUT_CLASSIFICATION	forward to sampler
WITHOUT_CLASSIFICATION	forward to sampler
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-2$ $non-nls-3$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-2$ $non-nls-3$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	force reopen on next sample
WITHOUT_CLASSIFICATION	content-length
WITHOUT_CLASSIFICATION	marker for query string attribute
WITHOUT_CLASSIFICATION	+ jmx names - do not change $non-nls-1$
WITHOUT_CLASSIFICATION	more general attributes not supported
WITHOUT_CLASSIFICATION	authorization
WITHOUT_CLASSIFICATION	host always
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	content-type
WITHOUT_CLASSIFICATION	content-type
WITHOUT_CLASSIFICATION	we need to use up the int now
WITHOUT_CLASSIFICATION	int mark =
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	dummy
WITHOUT_CLASSIFICATION	methods needed by subclasses to get access to the implementation
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	help convert existing jmx files which use httpsampler[2] nodes
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.protocol.http.sampler.httpsamplerbase#testiterationstart(org.apache.jmeter.engine.event.loopiterationevent)
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	key = tcpkey or errkey entry= socket or string
WITHOUT_CLASSIFICATION	superclass does not support types
WITHOUT_CLASSIFICATION	todo - charset?
WITHOUT_CLASSIFICATION	$non-nls-1$ default value false
WITHOUT_CLASSIFICATION	default for concurrent pool (do not change)
WITHOUT_CLASSIFICATION	shown as parameter name on the gui
WITHOUT_CLASSIFICATION	- jmx names
WITHOUT_CLASSIFICATION	default concurrent pool size for download embedded resources
WITHOUT_CLASSIFICATION	the default setting to be used (i.e. historic)
WITHOUT_CLASSIFICATION	for thread pool for resources but no need to use a special value?
WITHOUT_CLASSIFICATION	use for combobox source address type. preserve order (specially with localization)
WITHOUT_CLASSIFICATION	$non-nls-1$ default value 60 secs
WITHOUT_CLASSIFICATION	file_field is kept for backward compatibility with old test plans $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ supported methods
WITHOUT_CLASSIFICATION	image_parser now really means embedded_parser $non-nls-1$
WITHOUT_CLASSIFICATION	i.e. get
WITHOUT_CLASSIFICATION	derive the mapping of content types to parsers
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	store md5 hash instead of storing response $non-nls-1$
WITHOUT_CLASSIFICATION	not synch but it is not modified after creation
WITHOUT_CLASSIFICATION	returns empty array for null
WITHOUT_CLASSIFICATION	code /
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	skip parameters with a blank name (allows use of optional variables in parameter lists)
WITHOUT_CLASSIFICATION	if there is one file with no parameter name the file will be sent as post body.
WITHOUT_CLASSIFICATION	we use multipart if we have been told so or files are present and the files should not be send as the post body
WITHOUT_CLASSIFICATION	we know that url arguments should always be encoded in utf-8 according to spec
WITHOUT_CLASSIFICATION	parse the arguments in querystring assuming specified encoding for values
WITHOUT_CLASSIFICATION	check if there are any difference between name and value and their encoded name and value
WITHOUT_CLASSIFICATION	if there is no difference we mark it as not needing encoding
WITHOUT_CLASSIFICATION	private method to allow asyncsample to reset the value without performing checks
WITHOUT_CLASSIFICATION	private method to allow asyncsample to reset the value without performing checks
WITHOUT_CLASSIFICATION	allow use of relative file urls
WITHOUT_CLASSIFICATION	http urls must be absolute allow file to be relative $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	add the query string if it is a http get or delete request
WITHOUT_CLASSIFICATION	get the query string encoded in specified encoding if no encoding is specified by user we will get it encoded in utf-8 which is what the http spec says
WITHOUT_CLASSIFICATION	already contains a prefix
WITHOUT_CLASSIFICATION	if default port for protocol is used we do not include port in url
WITHOUT_CLASSIFICATION	we use the encoding which should be used according to the http spec which is utf-8
WITHOUT_CLASSIFICATION	check if the sampler has a specified content encoding
WITHOUT_CLASSIFICATION	encode the parameter value in the specified content encoding
WITHOUT_CLASSIFICATION	records the existance of an equal sign
WITHOUT_CLASSIFICATION	we do not know the content encoding of the query string
WITHOUT_CLASSIFICATION	append body if it is a post or put
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	need to handle four cases - string contains name=value - string contains name= - string contains name - empty string
WITHOUT_CLASSIFICATION	is there a separator? case of name=value name=
WITHOUT_CLASSIFICATION	if we know the encoding we can decode the argument value to make it easier to read for the user
WITHOUT_CLASSIFICATION	if we do not know the encoding we just use the encoded value the browser has already done the encoding so save the values as is
WITHOUT_CLASSIFICATION	we have a name
WITHOUT_CLASSIFICATION	we don't use the default parser
WITHOUT_CLASSIFICATION	iterate through the urls and download each image
WITHOUT_CLASSIFICATION	get the url matcher
WITHOUT_CLASSIFICATION	don't fetch unless pattern compiles
WITHOUT_CLASSIFICATION	for concurrent get resources
WITHOUT_CLASSIFICATION	see catch clause below
WITHOUT_CLASSIFICATION	there were some spaces in the url
WITHOUT_CLASSIFICATION	i don't think localmatcher can be null here but check just in case
WITHOUT_CLASSIFICATION	we have a pattern and the url does not match so skip it
WITHOUT_CLASSIFICATION	default serial download embedded resources
WITHOUT_CLASSIFICATION	if for download concurrent embedded resources
WITHOUT_CLASSIFICATION	init with default value
WITHOUT_CLASSIFICATION	sample all resources with threadpool
WITHOUT_CLASSIFICATION	call normal shutdown (wait ending all tasks)
WITHOUT_CLASSIFICATION	put a timeout if tasks couldn't terminate
WITHOUT_CLASSIFICATION	add result to main sampleresult
WITHOUT_CLASSIFICATION	did all the tasks finish?
WITHOUT_CLASSIFICATION	not intended to be instantiated
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	kill any remaining tasks
WITHOUT_CLASSIFICATION	@param res httpsampleresult to check @return parser class name (may be "") or null if entry does not exist
WITHOUT_CLASSIFICATION	browsers seem to tolerate location headers with spaces replacing them automatically with %20. we want to emulate this behaviour.
WITHOUT_CLASSIFICATION	the redirect url we got was not a valid url
WITHOUT_CLASSIFICATION	only add sample if it is a sample of valid url redirect i.e. that we have actually sampled the url
WITHOUT_CLASSIFICATION	now populate the any totalres fields that need to come from lastres
WITHOUT_CLASSIFICATION	method to set files list to be uploaded. @param value httpfileargs object that stores file list to be uploaded.
WITHOUT_CLASSIFICATION	no point saving an empty list
WITHOUT_CLASSIFICATION	method to get files list to be uploaded.
WITHOUT_CLASSIFICATION	weed out the empty files
WITHOUT_CLASSIFICATION	noop to provide based empty impl and avoid breaking existing implementations
WITHOUT_CLASSIFICATION	may also happen if long value > int.max
WITHOUT_CLASSIFICATION	for new test plans that don't have file/param/mime properties
WITHOUT_CLASSIFICATION	updated the property lists
WITHOUT_CLASSIFICATION	we don't want to use cachemanager clone but the parent one and cachemanager is thread safe
WITHOUT_CLASSIFICATION	non-instantiable
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	if we redirected automatically the url may have changed
WITHOUT_CLASSIFICATION	if getsendfileaspostbody returned true it's sure that file is not null
WITHOUT_CLASSIFICATION	allow the mimetype of the file to control the content type
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	implement these here to avoid re-implementing for sub-classes (previously these were implemented in all testelements)
WITHOUT_CLASSIFICATION	8kb is the (max) size to have the latency ('the first packet') enough for md5
WITHOUT_CLASSIFICATION	ok we have an old-style file definition save it now deal with any additional file arguments
WITHOUT_CLASSIFICATION	-1 means not defined
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	control reuse of cached ssl context in subsequent iterations
WITHOUT_CLASSIFICATION	e.g. .apache.org $non-nls-1$
WITHOUT_CLASSIFICATION	e.g. www.apache.org
WITHOUT_CLASSIFICATION	get hostname
WITHOUT_CLASSIFICATION	n.b. these values are used in jmeter.properties (jmeter.httpsampler) - do not change they can alse be used as the implementation name
WITHOUT_CLASSIFICATION	+ jmx implementation attribute values (also displayed in gui) - do not change $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ - jmx
WITHOUT_CLASSIFICATION	helper class (callback) for applying parameter definitions
WITHOUT_CLASSIFICATION	get past separator
WITHOUT_CLASSIFICATION	put request does not use multipart so no need for boundary
WITHOUT_CLASSIFICATION	get the encoding to use for the request
WITHOUT_CLASSIFICATION	if there are no arguments we can send a file as the body of the request
WITHOUT_CLASSIFICATION	create the content length we are going to write
WITHOUT_CLASSIFICATION	we create the post body content now so we know the size
WITHOUT_CLASSIFICATION	just append all the parameter values and use that as the put body
WITHOUT_CLASSIFICATION	keep the content will be sent later
WITHOUT_CLASSIFICATION	set the content length
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	request sent. now get the response
WITHOUT_CLASSIFICATION	done with the sampling proper.
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	now collect the results into the httpsampleresult
WITHOUT_CLASSIFICATION	e.g. text/html charset=iso-8859-1
WITHOUT_CLASSIFICATION	needs to be done after execute to pick up all the headers
WITHOUT_CLASSIFICATION	http protocol violation but avoids npe
WITHOUT_CLASSIFICATION	record some sizes to allow httpsampleresult.getbytes() with different options
WITHOUT_CLASSIFICATION	handle the various methods
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	allows httpsamplerproxy to call threadfinished subclasses can override if necessary
WITHOUT_CLASSIFICATION	allows httpsamplerproxy to call notifyfirstsampleafterlooprestart subclasses can override if necessary
WITHOUT_CLASSIFICATION	provide access to httpsamplerbase methods
WITHOUT_CLASSIFICATION	did not want to spoof the ip address
WITHOUT_CLASSIFICATION	ok to set pre-emptive auth?
WITHOUT_CLASSIFICATION	needs to be accessible by httpsampler2
WITHOUT_CLASSIFICATION	set default parameters as needed
WITHOUT_CLASSIFICATION	process commons httpclient parameters file $non-nls-1$
WITHOUT_CLASSIFICATION	if the pre-emptive parameter is undefined then we can set it as needed otherwise we should do what the user requested.
WITHOUT_CLASSIFICATION	handle old-style jmeter properties
WITHOUT_CLASSIFICATION	this must be done last as must not be overridden
WITHOUT_CLASSIFICATION	we do our own cookie handling
WITHOUT_CLASSIFICATION	may generate illegalargumentexception
WITHOUT_CLASSIFICATION	hc3.1 does not have the method
WITHOUT_CLASSIFICATION	set any default request headers
WITHOUT_CLASSIFICATION	setup connection
WITHOUT_CLASSIFICATION	will be null for head
WITHOUT_CLASSIFICATION	tmp inputstream needs to have a good counting
WITHOUT_CLASSIFICATION	pick up actual path (after redirects)
WITHOUT_CLASSIFICATION	can be missing e.g. on redirect
WITHOUT_CLASSIFICATION	exclude the cookie header since cookie is reported separately in the sample
WITHOUT_CLASSIFICATION	store any cookies received in the cookie manager
WITHOUT_CLASSIFICATION	save cache information
WITHOUT_CLASSIFICATION	follow redirects and download page resources if appropriate
WITHOUT_CLASSIFICATION	pick up headers if failed to execute the request
WITHOUT_CLASSIFICATION	set up the local address if one exists
WITHOUT_CLASSIFICATION	use special field ip source address (for pseudo 'ip spoofing')
WITHOUT_CLASSIFICATION	method left empty here but allows subclasses to override
WITHOUT_CLASSIFICATION	remove any port specification $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	get all the request headers
WITHOUT_CLASSIFICATION	add a \r\n
WITHOUT_CLASSIFICATION	e.g. some kinds of invalid url
WITHOUT_CLASSIFICATION	already include the \r\n
WITHOUT_CLASSIFICATION	last \r\n before response data
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	we use the hostconfiguration as the key to retrieve the httpclient so need to ensure that any items used in its equals/hashcode methods are not changed after use i.e. host port protocol localaddress proxy
WITHOUT_CLASSIFICATION	all needed to ensure re-usablility
WITHOUT_CLASSIFICATION	null means use the default
WITHOUT_CLASSIFICATION	dynamic proxy overrules static proxy
WITHOUT_CLASSIFICATION	n.b. hostconfiguration.equals() includes proxy settings in the compare.
WITHOUT_CLASSIFICATION	set up any required proxy credentials
WITHOUT_CLASSIFICATION	allow httpclient to handle the redirects
WITHOUT_CLASSIFICATION	set all the headers from the headermanager
WITHOUT_CLASSIFICATION	header[0] is not the status line $non-nls-1$
WITHOUT_CLASSIFICATION	buffer to hold the post body except file content
WITHOUT_CLASSIFICATION	set the content type
WITHOUT_CLASSIFICATION	check if we should do a multipart/form-data or an application/x-www-form-urlencoded post request
WITHOUT_CLASSIFICATION	if a content encoding is specified we use that as the encoding of any parameter values
WITHOUT_CLASSIFICATION	write the request to our own stream
WITHOUT_CLASSIFICATION	create the parts add any parameters
WITHOUT_CLASSIFICATION	$non-nls-1$ this is the default used by httpclient
WITHOUT_CLASSIFICATION	if getsendfileaspostbody returned true it's sure that file is not null
WITHOUT_CLASSIFICATION	allow the mimetype of the file to control the content type
WITHOUT_CLASSIFICATION	we just add placeholder text for file content
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	nt includes other types of credentials
WITHOUT_CLASSIFICATION	we have credentials - should we set pre-emptive authentication?
WITHOUT_CLASSIFICATION	we don't know how many entries will be skipped
WITHOUT_CLASSIFICATION	add any files
WITHOUT_CLASSIFICATION	we do not know the char set of the file to be uploaded so we set it to null
WITHOUT_CLASSIFICATION	we do not know what the char set of the file is
WITHOUT_CLASSIFICATION	set the multipart for the post
WITHOUT_CLASSIFICATION	.sendmultipartwithoutfilecontent(bos)
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	we get the posted bytes using the encoding used to create it
WITHOUT_CLASSIFICATION	if there are no arguments we can send a file as the body of the request todo needs a multiple file upload scenerio
WITHOUT_CLASSIFICATION	if getsendfileaspostbody returned true it's sure that file is not null
WITHOUT_CLASSIFICATION	if a content encoding is specified we set it as http parameter so that the post body will be encoded in the specified content encoding
WITHOUT_CLASSIFICATION	if none of the arguments have a name specified we just send all the values as the post body
WITHOUT_CLASSIFICATION	it is a normal post request with parameter names and values
WITHOUT_CLASSIFICATION	just append all the parameter values and use that as the post body
WITHOUT_CLASSIFICATION	set the content type
WITHOUT_CLASSIFICATION	add the parameters
WITHOUT_CLASSIFICATION	use the default encoding for urls
WITHOUT_CLASSIFICATION	the httpclient always urlencodes both name and value so if the argument is already encoded we have to decode it before adding it to the post request
WITHOUT_CLASSIFICATION	the value is already encoded by the user must decode the value now so that when the httpclient encodes it we end up with the same value as the user had entered.
WITHOUT_CLASSIFICATION	add the parameter httpclient will urlencode it
WITHOUT_CLASSIFICATION	check if we have any content to send for body
WITHOUT_CLASSIFICATION	we get the posted bytes using the charset that was used to create them
WITHOUT_CLASSIFICATION	does not need to be synchronised as all access is from same thread
WITHOUT_CLASSIFICATION	if there are no arguments we can send a file as the body of the request
WITHOUT_CLASSIFICATION	set the content length
WITHOUT_CLASSIFICATION	for all the file multiparts we must tell it to not include the actual file content
WITHOUT_CLASSIFICATION	for all the file multiparts we must revert the hiding of the actual file content
WITHOUT_CLASSIFICATION	check if the header manager had a content type header this allows the user to specify his own content-type for a post request
WITHOUT_CLASSIFICATION	buffer to hold the put body except file content
WITHOUT_CLASSIFICATION	should be true
WITHOUT_CLASSIFICATION	count the retries as well in the time
WITHOUT_CLASSIFICATION	request sent. now get the response
WITHOUT_CLASSIFICATION	buffer to hold the post body except file content
WITHOUT_CLASSIFICATION	we just add placeholder text for file content
WITHOUT_CLASSIFICATION	if a content encoding is specified we set it as http parameter so that the post body will be encoded in the specified content encoding
WITHOUT_CLASSIFICATION	if the request entity is repeatable we can send it first to our own stream so we can return it
WITHOUT_CLASSIFICATION	if the request entity is repeatable we can send it first to our own stream so we can return it
WITHOUT_CLASSIFICATION	check if the header manager had a content type header this allows the user to specify his own content-type for a post request
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	if none of the arguments have a name specified we just send all the values as the put body
WITHOUT_CLASSIFICATION	check if we should send only placeholder text for the file content or the real file content
WITHOUT_CLASSIFICATION	can cause npe in httpclient 3.1 ((simplehttpconnectionmanager)cl.gethttpconnectionmanager()).shutdown() closes the connection revert to original method closes the connection
WITHOUT_CLASSIFICATION	implemented by parent class
WITHOUT_CLASSIFICATION	take length from file
WITHOUT_CLASSIFICATION	use this to override file length
WITHOUT_CLASSIFICATION	all the other headers are set up by httpsampler2.setupconnection()
WITHOUT_CLASSIFICATION	no header provided
WITHOUT_CLASSIFICATION	so we don't generate chunked encoding
WITHOUT_CLASSIFICATION	will use chunked encoding
WITHOUT_CLASSIFICATION	some headers are set by executemethod()
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	done with the sampling proper.
WITHOUT_CLASSIFICATION	now collect the results into the httpsampleresult
WITHOUT_CLASSIFICATION	e.g. text/html charset=iso-8859-1
WITHOUT_CLASSIFICATION	if we redirected automatically the url may have changed
WITHOUT_CLASSIFICATION	store any cookies received in the cookie manager
WITHOUT_CLASSIFICATION	save cache information
WITHOUT_CLASSIFICATION	follow redirects and download page resources if appropriate
WITHOUT_CLASSIFICATION	buffer to hold the post body except file content
WITHOUT_CLASSIFICATION	if there are no arguments we can send a file as the body of the request
WITHOUT_CLASSIFICATION	will be null for head
WITHOUT_CLASSIFICATION	pick up actual path (after redirects)
WITHOUT_CLASSIFICATION	can be missing e.g. on redirect
WITHOUT_CLASSIFICATION	e.g. some kinds of invalid url
WITHOUT_CLASSIFICATION	add any files
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	charset must agree with content-type below $non-nls-1$
WITHOUT_CLASSIFICATION	contentlength > 0 ? contentlength default_initial_buffer_size)
WITHOUT_CLASSIFICATION	first response
WITHOUT_CLASSIFICATION	save the latency
WITHOUT_CLASSIFICATION	set up the defaults (may be overridden below)
WITHOUT_CLASSIFICATION	notused private class parserclass = null
WITHOUT_CLASSIFICATION	was there an error?
WITHOUT_CLASSIFICATION	n.b. must be in this class for the testbean code to work
WITHOUT_CLASSIFICATION	retrieve the formatted data using the same encoding used to create it
WITHOUT_CLASSIFICATION	write end of multipart
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	check if we should do a multipart/form-data or an application/x-www-form-urlencoded post request
WITHOUT_CLASSIFICATION	set the content type
WITHOUT_CLASSIFICATION	get the encoding to use for the request
WITHOUT_CLASSIFICATION	if there are no arguments we can send a file as the body of the request
WITHOUT_CLASSIFICATION	keep the content will be sent later
WITHOUT_CLASSIFICATION	set the content length
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	write the form data post body which we have constructed in the setheaders. this contains the multipart start divider and any form data i.e. arguments
WITHOUT_CLASSIFICATION	first write the start multipart file todo - charset?
WITHOUT_CLASSIFICATION	retrieve the formatted data using the same encoding used to create it todo - charset? write the actual file content
WITHOUT_CLASSIFICATION	we just add placeholder text for file content $non-nls-1$ write the end of multipart file
WITHOUT_CLASSIFICATION	we're sure that there is at least one file because of getsendfileaspostbody method's return value.
WITHOUT_CLASSIFICATION	we just add placeholder text for file content $non-nls-1$
WITHOUT_CLASSIFICATION	write the form section
WITHOUT_CLASSIFICATION	first the multipart start divider
WITHOUT_CLASSIFICATION	add any parameters
WITHOUT_CLASSIFICATION	end the previous multipart
WITHOUT_CLASSIFICATION	end the previous multipart
WITHOUT_CLASSIFICATION	write multipart for parameter
WITHOUT_CLASSIFICATION	if there are any files we need to end the previous multipart
WITHOUT_CLASSIFICATION	write multipart for file
WITHOUT_CLASSIFICATION	add also the length of the file content
WITHOUT_CLASSIFICATION	and the end of the file multipart
WITHOUT_CLASSIFICATION	add the end of multipart
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	check if we should do a multipart/form-data or an application/x-www-form-urlencoded post request
WITHOUT_CLASSIFICATION	allow the mimetype of the file to control the content type
WITHOUT_CLASSIFICATION	if none of the arguments have a name specified we just send all the values as the post body
WITHOUT_CLASSIFICATION	if we have a file but no data then read the file
WITHOUT_CLASSIFICATION	override so we can intercept the stream
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	override so we can intercept the stream
WITHOUT_CLASSIFICATION	superclass does not support types
WITHOUT_CLASSIFICATION	todo - charset?
WITHOUT_CLASSIFICATION	just append all the parameter values and use that as the post body
WITHOUT_CLASSIFICATION	it is a normal post request with parameter names and values
WITHOUT_CLASSIFICATION	set the content type
WITHOUT_CLASSIFICATION	create the content length we are going to write
WITHOUT_CLASSIFICATION	we create the post body content now so we know the size
WITHOUT_CLASSIFICATION	keep the content will be sent later
WITHOUT_CLASSIFICATION	set the content length
WITHOUT_CLASSIFICATION	check if the header manager had a content type header this allows the user to specify his own content-type for a post request
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	now we just construct any multipart for the files we only construct the file multipart start we do not write the actual file content
WITHOUT_CLASSIFICATION	we're sure that there is one file because of getsendfileaspostbody method's return value.
WITHOUT_CLASSIFICATION	exception in progress
WITHOUT_CLASSIFICATION	write boundary end marker
WITHOUT_CLASSIFICATION	get access to buffer
WITHOUT_CLASSIFICATION	wrap read() methods to track output buffer
WITHOUT_CLASSIFICATION	preload the output so that can be read back as http
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	1k - the previous 100k made no sense (there's tons of buffers elsewhere in the chain) and it caused oom when many concurrent uploads were being done. could be fixed by increasing the evacuation ratio in bin/jmeter[.bat] but this is better.
WITHOUT_CLASSIFICATION	make sure buffer details track the output
WITHOUT_CLASSIFICATION	characters per second to emulate
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	override all the super-class socket methods.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	timeout to retrieve wsdl when server not response
WITHOUT_CLASSIFICATION	notused string portname = pnode.getattribute("name") used to check binding but now it doesn't. it was failing when wsdl did not using binding as expected
WITHOUT_CLASSIFICATION	check soap12
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.http.conn.ssl.sslsocketfactory#createsocket()
WITHOUT_CLASSIFICATION	characters per second to emulate
WITHOUT_CLASSIFICATION	in the rare case the wsdl is protected and requires authentication use the authmanager to set the authorization. basic and digest authorization are pretty weak and don't provide real security.
WITHOUT_CLASSIFICATION	get the node
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	get the soapoperation
WITHOUT_CLASSIFICATION	there should only be one soapoperation node per operation
WITHOUT_CLASSIFICATION	first we iterate through the bindings
WITHOUT_CLASSIFICATION	now we iterate through the operations
WITHOUT_CLASSIFICATION	if the first child is soapoperation we add it to the array
WITHOUT_CLASSIFICATION	new wsdlhelper("httpservices.bio.ifi.lmu.de1046/prothesaurus/services/biologicalnameservice?wsdl")
WITHOUT_CLASSIFICATION	remove quotes from charset name
WITHOUT_CLASSIFICATION	get ../ or ../../ etc.
WITHOUT_CLASSIFICATION	find index of path start
WITHOUT_CLASSIFICATION	absolute url
WITHOUT_CLASSIFICATION	find path endindex
WITHOUT_CLASSIFICATION	install new path
WITHOUT_CLASSIFICATION	this ensures tha httpclient knows about the protocol
WITHOUT_CLASSIFICATION	now allow the url handling to work.
WITHOUT_CLASSIFICATION	not needed for httpclient
WITHOUT_CLASSIFICATION	check if we have it in the cache
WITHOUT_CLASSIFICATION	perform the encoding
WITHOUT_CLASSIFICATION	lrumap does not support generics currently
WITHOUT_CLASSIFICATION	we assume the argument value is encoded according to the http spec i.e. utf-8
WITHOUT_CLASSIFICATION	we assume the name is always encoded according to spec
WITHOUT_CLASSIFICATION	the value is encoded in the specified encoding
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	skip expensive processing if it cannot apply $non-nls-1$
WITHOUT_CLASSIFICATION	match /../[../] etc. $non-nls-1$
WITHOUT_CLASSIFICATION	document or context-relative url like '/path/to' or '../path/to' or '/path/to/../path/'
WITHOUT_CLASSIFICATION	path is between idx='pathstartindex' (inclusive) and idx='pathendindex' (exclusive)
WITHOUT_CLASSIFICATION	append '/' if this isn't the last token or it is but the original path terminated w/ a '/'
WITHOUT_CLASSIFICATION	this can't happen (how should utf8 not be supported!?!) so just throw an error
WITHOUT_CLASSIFICATION	encode according to the http spec i.e. utf-8
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	indicate that an error occured
WITHOUT_CLASSIFICATION	we check the count to see if we have exceeded the number of lines to parse. there's no way to know where to stop in the file. therefore we use break to escape the while loop when we've reached the count.
WITHOUT_CLASSIFICATION	this.reader = new bufferedreader(new filereader(this.source)) parse(this.readerel)
WITHOUT_CLASSIFICATION	we clean the line to get rid of extra stuff
WITHOUT_CLASSIFICATION	now we set request method
WITHOUT_CLASSIFICATION	increment the current count
WITHOUT_CLASSIFICATION	increment the current count
WITHOUT_CLASSIFICATION	we filter the line first before we try to separate the url into file and parameters.
WITHOUT_CLASSIFICATION	in the case when the filter is not set we parse all the lines
WITHOUT_CLASSIFICATION	check the url for "?" symbol
WITHOUT_CLASSIFICATION	now that we have stripped the file we can parse the parameters
WITHOUT_CLASSIFICATION	if the string contains atleast one double quote and checkmethod is true go ahead and tokenize the string.
WITHOUT_CLASSIFICATION	we return the original string
WITHOUT_CLASSIFICATION	convert the parameters
WITHOUT_CLASSIFICATION	avoid possible npe when trimming the name
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	indicate that an error occured
WITHOUT_CLASSIFICATION	read one line at a time using bufferedreader
WITHOUT_CLASSIFICATION	this.reader = new bufferedreader(new filereader(this.source)) parse(this.readerel)
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	called from ctor so must not be overridable
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	we tokenize using double quotes. this means for tomcat we should have 3 tokens if there isn't any additional information in the logs
WITHOUT_CLASSIFICATION	if checkmethod on the token is true we tokenzie it using space and escape the while loop. only the first matching token will be used
WITHOUT_CLASSIFICATION	there should only be one token that starts with slash character
WITHOUT_CLASSIFICATION	do nothing. it's naive but since the utility is meant to parse access logs the formatting should be correct
WITHOUT_CLASSIFICATION	first have to release the cookie we were using so other threads stuck in wait can move on
WITHOUT_CLASSIFICATION	let notified threads move on and get lock on managersinuse
WITHOUT_CLASSIFICATION	here is the core routine to find appropriate cookie manager and check it's not being used. if used wait until whoever's using it gives it up
WITHOUT_CLASSIFICATION	no implementation at this time since we bypass the idea of having a console tool to generate test plans. instead i decided to have a sampler that uses the generator and parser directly
WITHOUT_CLASSIFICATION	now we create the compiled pattern and add it to the arraylist
WITHOUT_CLASSIFICATION	we do a quick check to see if any filters are set. if not we just return false to be efficient.
WITHOUT_CLASSIFICATION	double check this logic make sure it makes sense
WITHOUT_CLASSIFICATION	inclusion filter assumes most of the files are not wanted therefore usefile is set to false unless it matches.
WITHOUT_CLASSIFICATION	exclusion filter assumes most of the files are used therefore usefile is set to true unless it matches.
WITHOUT_CLASSIFICATION	request headers column renderers
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	request headers column renderers
WITHOUT_CLASSIFICATION	request headers column renderers
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	clear results table before filling
WITHOUT_CLASSIFICATION	display with same order http protocol
WITHOUT_CLASSIFICATION	can be null - e.g. if url was invalid
WITHOUT_CLASSIFICATION	display cookie in headers table (same location on http protocol)
WITHOUT_CLASSIFICATION	parsed request headers
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.visualizers.request.requestview#init()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.visualizers.request.requestview#cleardata()
WITHOUT_CLASSIFICATION	$non-nls-1$ soap request (generally) blank name $non-nls-1$
WITHOUT_CLASSIFICATION	blank name $non-nls-1$
WITHOUT_CLASSIFICATION	empty init $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	hint to background color on bottom tabs (grey not blue)
WITHOUT_CLASSIFICATION	the object used for each row
WITHOUT_CLASSIFICATION	the object used for each row
WITHOUT_CLASSIFICATION	the object used for each row
WITHOUT_CLASSIFICATION	key value
WITHOUT_CLASSIFICATION	key value
WITHOUT_CLASSIFICATION	key value
WITHOUT_CLASSIFICATION	set up the 1st table result with empty headers
WITHOUT_CLASSIFICATION	set up the 2nd table
WITHOUT_CLASSIFICATION	set up the 3rd table
WITHOUT_CLASSIFICATION	create the split pane
WITHOUT_CLASSIFICATION	called from ctor so must not be overridable
WITHOUT_CLASSIFICATION	$non-nls-1$ concatenate query post if exists
WITHOUT_CLASSIFICATION	add a message when no http sample $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	better iso-8859-1 than utf-8
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	find all the classes which implement the javasamplerclient interface.
WITHOUT_CLASSIFICATION	remove the javaconfig class from the list since it only implements the interface for error conditions.
WITHOUT_CLASSIFICATION	if a user has set parameters in one test and then selects a different test which supports the same parameters those parameters should have the same values that they did in the original test.
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.modifytestelement(testelement)
WITHOUT_CLASSIFICATION	entry tends to be ignored
WITHOUT_CLASSIFICATION	default (can be overridden by the script)
WITHOUT_CLASSIFICATION	these are not useful yet as have not found how to get updated values back mgr.declarebean("responsecode" "200" string.class) $non-nls-1$ mgr.declarebean("responsemessage" "ok" string.class) $non-nls-1$ mgr.declarebean("issuccess" boolean.true boolean.class) $non-nls-1$
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.gui.abstractjmeterguicomponent#cleargui()
WITHOUT_CLASSIFICATION	overrides abstractjmeterguicomponent.configure(testelement)
WITHOUT_CLASSIFICATION	n.b. some engines (e.g. javascript) cannot handle certain declarebean() calls after the engine has been initialised so create the engine last
WITHOUT_CLASSIFICATION	catch evaluation errors
WITHOUT_CLASSIFICATION	reset the bsh.interpreter before each execution
WITHOUT_CLASSIFICATION	script file name (if present)
WITHOUT_CLASSIFICATION	parameters to pass to script file (or script)
WITHOUT_CLASSIFICATION	script area
WITHOUT_CLASSIFICATION	don't let the input field shrink too much
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	entry tends to be ignored
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	implements javasamplerclient.setuptest(javasamplercontext)
WITHOUT_CLASSIFICATION	implements javasamplerclient.teardowntest(javasamplercontext)
WITHOUT_CLASSIFICATION	implements javasamplerclient.getdefaultparameters()
WITHOUT_CLASSIFICATION	ensure that the required class variables are cloned as this is not currently done by the super-implementation.
WITHOUT_CLASSIFICATION	allow sampler access to test element name
WITHOUT_CLASSIFICATION	only set the default label if it has not been set
WITHOUT_CLASSIFICATION	failed to initialise the class
WITHOUT_CLASSIFICATION	but we do trap this error to make tests work better
WITHOUT_CLASSIFICATION	no point continuing mainly for bsh.evalerror
WITHOUT_CLASSIFICATION	implements teststatelistener.teststarted()
WITHOUT_CLASSIFICATION	implements teststatelistener.teststarted(string)
WITHOUT_CLASSIFICATION	implements teststatelistener.testended(string)
WITHOUT_CLASSIFICATION	implementation notes all of the methods in this class are currently read-only. if update methods are included in the future they should be defined so that a single instance of javasamplercontext can be associated with each thread. therefore no synchronization should be needed. the same instance should be used for the call to setuptest all calls to runtest and the call to teardowntest.
WITHOUT_CLASSIFICATION	teststatelistener implementation
WITHOUT_CLASSIFICATION	set default values $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	log.info(getlabel()+" "+getfilename())
WITHOUT_CLASSIFICATION	assume text output - script can override if necessary
WITHOUT_CLASSIFICATION	set response data
WITHOUT_CLASSIFICATION	script can also use setresponsedata() so long as it returns null
WITHOUT_CLASSIFICATION	set if we were successful or not
WITHOUT_CLASSIFICATION	private static final string label_default = "javatest"
WITHOUT_CLASSIFICATION	utility method to set up all the values
WITHOUT_CLASSIFICATION	default to name of element
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	record sample start time.
WITHOUT_CLASSIFICATION	record sample start time.
WITHOUT_CLASSIFICATION	generate a random-ish offset value using the current time.
WITHOUT_CLASSIFICATION	generate a random-ish offset value using the current time.
WITHOUT_CLASSIFICATION	execute the sample. in this case sleep for the specified time if any
WITHOUT_CLASSIFICATION	record end time and populate the results.
WITHOUT_CLASSIFICATION	the name of the sampler
WITHOUT_CLASSIFICATION	should not happen
WITHOUT_CLASSIFICATION	only do the calculation if it is needed
WITHOUT_CLASSIFICATION	execute the sample. in this case sleep for the specified time.
WITHOUT_CLASSIFICATION	string used to indicate a null value
WITHOUT_CLASSIFICATION	key name (lowercase) from java.sql.types entry corresponding int value
WITHOUT_CLASSIFICATION	read-only after class init
WITHOUT_CLASSIFICATION	based on e291. getting the name of a jdbc type from javaalmanac.com httpjavaalmanac.com/egs/java.sql/jdbcint2str.html
WITHOUT_CLASSIFICATION	get all fields in java.sql.types and store the corresponding int values
WITHOUT_CLASSIFICATION	query types (used to communicate with gui) n.b. these must not be changed as they are used in the jmx files $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	based on query return value get results
WITHOUT_CLASSIFICATION	user provided incorrect query type
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	as a connection is held by only one thread we cannot already have a preparedstatementmap put by another thread
WITHOUT_CLASSIFICATION	save the value in the variable if present
WITHOUT_CLASSIFICATION	save the value in the variable if present
WITHOUT_CLASSIFICATION	in case
WITHOUT_CLASSIFICATION	can't have an output parameter type null
WITHOUT_CLASSIFICATION	preparedstatementmap is associated to one connection so 2 threads cannot use the same preparedstatement map at the same time
WITHOUT_CLASSIFICATION	thrown by derby jdbc (at least) if there are no "?" markers in statement
WITHOUT_CLASSIFICATION	save the current count
WITHOUT_CLASSIFICATION	lrumap is not generic
WITHOUT_CLASSIFICATION	i starts at 1
WITHOUT_CLASSIFICATION	the datasource is set up by teststarted and cleared by testended. these are called from different threads so access must be synchronized. the same instance is called in each case.
WITHOUT_CLASSIFICATION	remove any additional values from previous sample
WITHOUT_CLASSIFICATION	call to testbeanhelper.prepare() is intentional
WITHOUT_CLASSIFICATION	$non-nls-1$ get the previous count
WITHOUT_CLASSIFICATION	keep a record of the pre-thread pools so that they can be disposed of at the end of a test
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	i.e. if we want per thread pooling pool will be created later
WITHOUT_CLASSIFICATION	utility routine to get the connection from the pool. purpose - allows jdbcsampler to be entirely independent of the pooling classes - allows the pool storage mechanism to be changed if necessary
WITHOUT_CLASSIFICATION	set up the datasource - maxpool is a parameter so the same code can also be used for setting up the per-thread pools.
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	log is required to ensure errors are available
WITHOUT_CLASSIFICATION	used to hold per-thread singleton connection pools
WITHOUT_CLASSIFICATION	wrapper class to allow getconnection() to be implemented for both shared and per-thread pools.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	i.e. shared pool
WITHOUT_CLASSIFICATION	make sure setting the new isolation mode is done in an auto committed transaction
WITHOUT_CLASSIFICATION	will use default isolation
WITHOUT_CLASSIFICATION	assume we will be successful
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	use latency to measure connection time
WITHOUT_CLASSIFICATION	the environment is supposed to use string keys only
WITHOUT_CLASSIFICATION	webspheremq does not allow corr. id. to be set using setstringproperty() $non-nls-1$
WITHOUT_CLASSIFICATION	we use a linkedblockingqueue (rather than a concurrentlinkedqueue) because it has a poll-with-wait method that avoids the need to use a polling loop.
WITHOUT_CLASSIFICATION	using onmessage listener
WITHOUT_CLASSIFICATION	allow for short/negative times
WITHOUT_CLASSIFICATION	allow for short/negative times
WITHOUT_CLASSIFICATION	called from threadfinished() thread
WITHOUT_CLASSIFICATION	guardedby("this")
WITHOUT_CLASSIFICATION	guardedby("this")
WITHOUT_CLASSIFICATION	there was an object in map destroy the temporary and return one in map (oldctx)
WITHOUT_CLASSIFICATION	else no object in map ctx is the one
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ --
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	renamed from clear
WITHOUT_CLASSIFICATION	(testelement) el.getproperty(jmssampler.jms_properties).getobjectvalue())
WITHOUT_CLASSIFICATION	(testelement) el.getproperty(jmssampler.jndi_properties).getobjectvalue())
WITHOUT_CLASSIFICATION	button group resources
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	button group resources
WITHOUT_CLASSIFICATION	these are the names of properties used to define the labels $non-nls-1$
WITHOUT_CLASSIFICATION	these are the names of properties used to define the labels $non-nls-1$
WITHOUT_CLASSIFICATION	button group resources when bytes message is selected
WITHOUT_CLASSIFICATION	$non-nls-1$ button group resources
WITHOUT_CLASSIFICATION	$non-nls-1$ button group resources
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	--
WITHOUT_CLASSIFICATION	++ these names are used in the jmx files and must not be changed
WITHOUT_CLASSIFICATION	cache for file. only used by sample() in a single thread
WITHOUT_CLASSIFICATION	cache for bytes-message only used when parsing from a file
WITHOUT_CLASSIFICATION	allow shorthand names
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	assume it will fail ditto $non-nls-1$
WITHOUT_CLASSIFICATION	todo - charset?
WITHOUT_CLASSIFICATION	todo - charset?
WITHOUT_CLASSIFICATION	not found
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	in the case the test uses a file we set it locally and prevent loading the file repeatedly
WITHOUT_CLASSIFICATION	in the case the test uses a file we set it locally and prevent loading the file repeatedly
WITHOUT_CLASSIFICATION	allow for the old jmx file which used the local language string
WITHOUT_CLASSIFICATION	------------- get/set properties ----------------------
WITHOUT_CLASSIFICATION	these static variables are only used to convert existing files
WITHOUT_CLASSIFICATION	will be the 3rd option which is not checked specifically
WITHOUT_CLASSIFICATION	note originally the code did use the clientpool to "share" subscribers however since the key was "this" and each sampler is unique - nothing was actually shared.
WITHOUT_CLASSIFICATION	default wait (ms) for a message if timeouts are not enabled this is the maximum time the sampler can be blocked.
WITHOUT_CLASSIFICATION	no need to synch/ - only used by sampler and clientpool (which does its own synch)
WITHOUT_CLASSIFICATION	this will be null if initialization succeeds.
WITHOUT_CLASSIFICATION	if true start/stop subscriber for each sample
WITHOUT_CLASSIFICATION	don't change the string as it is used in jmx files $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	run threadstarted only if destination setup on each sample
WITHOUT_CLASSIFICATION	if so we need to start collection here
WITHOUT_CLASSIFICATION	run threadfinished only if destination setup on each sample (stop listen queue)
WITHOUT_CLASSIFICATION	mapnames are strings
WITHOUT_CLASSIFICATION	disabled thread start if listen on sample choice
WITHOUT_CLASSIFICATION	don't start yet if stop between samples
WITHOUT_CLASSIFICATION	listen on sample
WITHOUT_CLASSIFICATION	can be null if init fails
WITHOUT_CLASSIFICATION	listen on sample
WITHOUT_CLASSIFICATION	so we break the loops in samplewithlistener and samplewithreceive
WITHOUT_CLASSIFICATION	assume failure
WITHOUT_CLASSIFICATION	--
WITHOUT_CLASSIFICATION	------------- get/set properties ----------------------
WITHOUT_CLASSIFICATION	++ these are jmx names and must not be changed $non-nls-1$
WITHOUT_CLASSIFICATION	convert the old test plan entry (which is the language dependent string) to the resource name
WITHOUT_CLASSIFICATION	this was the old value that was checked for $non-nls-1$
WITHOUT_CLASSIFICATION	default to be applied
WITHOUT_CLASSIFICATION	++ these are jmx file attribute names and must not be changed $non-nls-1$
WITHOUT_CLASSIFICATION	n.b. cannot change value as that is used in jmx files $non-nls-1$
WITHOUT_CLASSIFICATION	is destination setup static? else dynamic $non-nls-1$ default to maintain compatibility
WITHOUT_CLASSIFICATION	-- end of jmx file attribute names
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	member variables
WITHOUT_CLASSIFICATION	these constants are used in the jmx files and so must not be changed
WITHOUT_CLASSIFICATION	msgid not available until after send() is called note there is only one admin object which is shared between all threads interlock with receiver
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	this used to be request.wait(timeout_ms) where 0 means forever however 0 means return immediately for the latch
WITHOUT_CLASSIFICATION	$non-nls$
WITHOUT_CLASSIFICATION	$non-nls$
WITHOUT_CLASSIFICATION	$non-nls$
WITHOUT_CLASSIFICATION	$non-nls$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	n.b. these entry indexes must agree with the searchcontrols scope_levels i.e. javax.naming.directory.searchcontrols.object_scope onelevel_scope subtree_scope these have the values 012 so can be used as indexes in the array as well as the value for the search itself. n.b. although the strings are used to set and get the options language change does not currently cause a problem because that always saves the current settings first and then recreates all the gui classes.
WITHOUT_CLASSIFICATION	names for the cards $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	e.g unbind
WITHOUT_CLASSIFICATION	take note of when buttong are changed so can change panel
WITHOUT_CLASSIFICATION	private static final logger log = loggingmanager.getloggerforclass()
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	$non-nls$
WITHOUT_CLASSIFICATION	$non-nls$
WITHOUT_CLASSIFICATION	$non-nls$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	only contains ldapargument entries
WITHOUT_CLASSIFICATION	resize the table columns to appropriate widths. @param _table the table to resize columns for private void sizecolumns(jtable _table) { }
WITHOUT_CLASSIFICATION	sizecolumns(table)
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.modifytestelement(testelement)
WITHOUT_CLASSIFICATION	enable delete (which may already be enabled but it won't hurt)
WITHOUT_CLASSIFICATION	highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	disable delete if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	disable delete if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	table still contains one or more rows so highlight (select) the appropriate one.
WITHOUT_CLASSIFICATION	main panel
WITHOUT_CLASSIFICATION	main panel
WITHOUT_CLASSIFICATION	force a minimum table height of 70 pixels
WITHOUT_CLASSIFICATION	if a table cell is being edited we should accept the current value and stop the editing before adding a new row.
WITHOUT_CLASSIFICATION	if a table cell is being edited we must cancel the editing before deleting the row
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	set if we were successful or not
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	count limit time limit attributes (null = all) return object ? dereference links?
WITHOUT_CLASSIFICATION	the following strings are used in the test plan and the values must not be changed if test plans are to be upwardly compatible.
WITHOUT_CLASSIFICATION	for in build test case using this counter create the new entry in the server
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	replace (update) attribute $non-nls-1$ $non-nls-2$ add mobile phone number attribute $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	these are values for the test attribute above $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ end of test values
WITHOUT_CLASSIFICATION	the createtest() method creates an extra context which needs to be closed
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	log.warn("debug"ex) e.g. javax.naming.sizelimitexceededexception [ldap error code 4 - sizelimit exceeded] remaining name '' 123456789012345678901 todo tidy this up
WITHOUT_CLASSIFICATION	write out search results in a stable order (including order of all subelements which might be reordered like attributes and their values) so that simple textual comparison can be done unless the number of results exceeds {@link #max_sorted_results} in which case just stream the results out without sorting.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	read all sortedresults into memory so we can guarantee ordering
WITHOUT_CLASSIFICATION	must be done prior to sorting
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	show what we did manage to retrieve
WITHOUT_CLASSIFICATION	if there's anything left
WITHOUT_CLASSIFICATION	assume it's senstive data
WITHOUT_CLASSIFICATION	ensure any remaining contexts are closed
WITHOUT_CLASSIFICATION	parent folder (or single message file)
WITHOUT_CLASSIFICATION	== servername from mail sampler
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	perform the sampling
WITHOUT_CLASSIFICATION	start timing
WITHOUT_CLASSIFICATION	-
WITHOUT_CLASSIFICATION	rfc 822 uses ascii per default
WITHOUT_CLASSIFICATION	use the actual class so the name must be correct.
WITHOUT_CLASSIFICATION	special value
WITHOUT_CLASSIFICATION	did sample succeed?
WITHOUT_CLASSIFICATION	create empty properties
WITHOUT_CLASSIFICATION	requires javamail 1.4.2+
WITHOUT_CLASSIFICATION	requires javamail 1.4.2+
WITHOUT_CLASSIFICATION	get session
WITHOUT_CLASSIFICATION	get the store
WITHOUT_CLASSIFICATION	get folder
WITHOUT_CLASSIFICATION	get directory
WITHOUT_CLASSIFICATION	don't save headers - they are already in the raw message
WITHOUT_CLASSIFICATION	save raw message
WITHOUT_CLASSIFICATION	javadoc for the api says this is ok
WITHOUT_CLASSIFICATION	avoid double-call if addsubresult was called.
WITHOUT_CLASSIFICATION	close connection
WITHOUT_CLASSIFICATION	not been set by any child samples
WITHOUT_CLASSIFICATION	gui components
WITHOUT_CLASSIFICATION	labels - don't make these static else language change will not work
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	todo - charset?
WITHOUT_CLASSIFICATION	helper method to set up the gui screen
WITHOUT_CLASSIFICATION	store the content-type rfc 822 uses ascii per default parse the content-type
WITHOUT_CLASSIFICATION	no need to log normally as we set the status $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ may be null
WITHOUT_CLASSIFICATION	$non-nls-1$ may be null
WITHOUT_CLASSIFICATION	used to separate attachment file names in jmx fields - do not change!
WITHOUT_CLASSIFICATION	-jmx file attribute names
WITHOUT_CLASSIFICATION	process address lists
WITHOUT_CLASSIFICATION	needed for measuring sending time
WITHOUT_CLASSIFICATION	calculate message size
WITHOUT_CLASSIFICATION	set up the sample result details
WITHOUT_CLASSIFICATION	perform the sampling
WITHOUT_CLASSIFICATION	username / password incorrect
WITHOUT_CLASSIFICATION	ssl not supported starttls not supported other messagingexception
WITHOUT_CLASSIFICATION	general exception
WITHOUT_CLASSIFICATION	process the sampler result
WITHOUT_CLASSIFICATION	throws me
WITHOUT_CLASSIFICATION	throws ioe me
WITHOUT_CLASSIFICATION	throws ioe me
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	part is only needed if we don't send an .eml-file
WITHOUT_CLASSIFICATION	getallheaders() is not yet genericised throws me
WITHOUT_CLASSIFICATION	throws me throws ioe me
WITHOUT_CLASSIFICATION	api not yet generic throws me
WITHOUT_CLASSIFICATION	we have at least one potential address
WITHOUT_CLASSIFICATION	local vars
WITHOUT_CLASSIFICATION	ensure correctly set on initial display ensure correctly set on initial display
WITHOUT_CLASSIFICATION	server settings
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	e-mail settings
WITHOUT_CLASSIFICATION	auth settings
WITHOUT_CLASSIFICATION	security settings
WITHOUT_CLASSIFICATION	(non-javadoc) message settings
WITHOUT_CLASSIFICATION	add the header panel
WITHOUT_CLASSIFICATION	additional settings
WITHOUT_CLASSIFICATION	tfmailfrom.setenabled(true) tfmailto.setenabled(true) tfmailtocc.setenabled(true) tfmailtobcc.setenabled(true) tfsubject.setenabled(true)
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	use the actual class so the name must be correct.
WITHOUT_CLASSIFICATION	requires javamail 1.4.2+
WITHOUT_CLASSIFICATION	standard setup
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	local vars
WITHOUT_CLASSIFICATION	add the standard title
WITHOUT_CLASSIFICATION	must follow the checkbox setting
WITHOUT_CLASSIFICATION	not compatible
WITHOUT_CLASSIFICATION	not compatible must follow the checkbox setting
WITHOUT_CLASSIFICATION	ensure correctly set on initial display
WITHOUT_CLASSIFICATION	might be nullproperty
WITHOUT_CLASSIFICATION	case we are measuring real time of spedition
WITHOUT_CLASSIFICATION	set properties using jaf
WITHOUT_CLASSIFICATION	handle body and attachments
WITHOUT_CLASSIFICATION	i.e. mailbody is empty
WITHOUT_CLASSIFICATION	set from field and subject
WITHOUT_CLASSIFICATION	synchronousmode==true
WITHOUT_CLASSIFICATION	listener cannot be null here
WITHOUT_CLASSIFICATION	ok it has been supplied
WITHOUT_CLASSIFICATION	empty arrays are immutable
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	httpapi.mongodb.org/java/2.7.2/com/mongodb/mongo.html
WITHOUT_CLASSIFICATION	httpapi.mongodb.org/java/2.7.2/com/mongodb/mongo.html
WITHOUT_CLASSIFICATION	httpapi.mongodb.org/java/2.7.2/com/mongodb/mongooptions.html/
WITHOUT_CLASSIFICATION	httpapi.mongodb.org/java/2.7.2/com/mongodb/mongooptions.html/
WITHOUT_CLASSIFICATION	mongo is thread safe
WITHOUT_CLASSIFICATION	there is no harm in trying to clear up
WITHOUT_CLASSIFICATION	helper
WITHOUT_CLASSIFICATION	+ jmx names do not change their values
WITHOUT_CLASSIFICATION	- jmx names
WITHOUT_CLASSIFICATION	default charset is deliberate here
WITHOUT_CLASSIFICATION	n.b. this will be a config element so we cannot use the getxxx() methods
WITHOUT_CLASSIFICATION	default to original behaviour i.e. re-use connection
WITHOUT_CLASSIFICATION	n.b. this will be a config element so we cannot use the setxxx() methods
WITHOUT_CLASSIFICATION	overrides abstractjmeterguicomponent.configure(testelement)
WITHOUT_CLASSIFICATION	element.setproperty(tcpsampler.filename filename.gettext())
WITHOUT_CLASSIFICATION	element.setproperty(tcpsampler.nodelay setnodelay.isselected())
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	don't use default for saving tristates element.setproperty(tcpsampler.close_connection closeconnection.isselected() tcpsampler.close_connection_default)
WITHOUT_CLASSIFICATION	5 columns size
WITHOUT_CLASSIFICATION	3 columns size
WITHOUT_CLASSIFICATION	mainpanel.add(createfilenamepanel())
WITHOUT_CLASSIFICATION	-- jmx file constants - do not change
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ key for hashmap
WITHOUT_CLASSIFICATION	$non-nls-1$ key for hashmap
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	entry tends to be ignored
WITHOUT_CLASSIFICATION	set if we were successful or not
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	++ jmx file constants - do not change $non-nls-1$
WITHOUT_CLASSIFICATION	if set this is the regex that is used to extract the status from the response not implemented yet private static final string status_regex = jmeterutils.getpropdefault("tcp.status.regex""")
WITHOUT_CLASSIFICATION	are we processing the first sample?
WITHOUT_CLASSIFICATION	used for handling interrupt
WITHOUT_CLASSIFICATION	not in cache so create new one and cache it
WITHOUT_CLASSIFICATION	do stuff we cannot do as part of threadstarted()
WITHOUT_CLASSIFICATION	use the test element name for the label
WITHOUT_CLASSIFICATION	calculate response time
WITHOUT_CLASSIFICATION	reset the status code if the message contains one
WITHOUT_CLASSIFICATION	cannot do this as part of threadstarted() because the config elements have not been processed.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	fetch in case gets nulled later
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	the data implementation
WITHOUT_CLASSIFICATION	preserve sign on first byte
WITHOUT_CLASSIFICATION	do we need to close byte array (or flush it?)
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	process command line property definitions (can occur multiple times)
WITHOUT_CLASSIFICATION	private imageicon runningicon = jmeterutils.getimage("thread.enabled.gif")
WITHOUT_CLASSIFICATION	private set hosts = new hashset()
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.modifytestelement(testelement)
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	called from ctor so must not be overridable
WITHOUT_CLASSIFICATION	called from ctor so must not be overridable
WITHOUT_CLASSIFICATION	set it
WITHOUT_CLASSIFICATION	set it
WITHOUT_CLASSIFICATION	reset it
WITHOUT_CLASSIFICATION	reset it
WITHOUT_CLASSIFICATION	set category
WITHOUT_CLASSIFICATION	set root level
WITHOUT_CLASSIFICATION	the default title for the menu bar
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	probably a missing jar
WITHOUT_CLASSIFICATION	programming error bail out.
WITHOUT_CLASSIFICATION	programming error bail out.
WITHOUT_CLASSIFICATION	$non-nsl-1$
WITHOUT_CLASSIFICATION	editmenu.setenabled(false)
WITHOUT_CLASSIFICATION	if we are enabling the edit-->remove menu item then we also need to enable the edit menu. the edit menu may already be enabled but there's no harm it trying to enable it again.
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	called from ctor so must not be overridable
WITHOUT_CLASSIFICATION	file new operation may set to null so just return app name
WITHOUT_CLASSIFICATION	first make sure we save the content of the current gui (since we will flush it away)
WITHOUT_CLASSIFICATION	forget about all guis we've created so far we'll need to re-created them all!
WITHOUT_CLASSIFICATION	beaninfo objects also contain locale-sensitive data -- flush them away
WITHOUT_CLASSIFICATION	now put the current gui in place. [this code was copied from the editcommand action -- we can't just trigger the action because that would populate the current node with the contents of the new gui -- which is empty.] fetch once probably caused by unit testing on headless system
WITHOUT_CLASSIFICATION	jmenu reportmenu jmenuitem analyze
WITHOUT_CLASSIFICATION	if the add menu already exists remove it.
WITHOUT_CLASSIFICATION	insert the add menu as the first menu item in the edit menu.
WITHOUT_CLASSIFICATION	there was a npe being thrown without the null check here.. jkb
WITHOUT_CLASSIFICATION	if we are enabling the edit-->add menu item then we also need to enable the edit menu. the edit menu may already be enabled but there's no harm it trying to enable it again.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	help menu $non-nls-1$
WITHOUT_CLASSIFICATION	options menu $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	strings used to set up and process actions in this menu the strings need to agree with the those in the action routines
WITHOUT_CLASSIFICATION	run menu $non-nls-1$
WITHOUT_CLASSIFICATION	edit menu $non-nls-1$ from the java look and feel guidelines if all items in a menu are disabled then disable the menu. makes sense.
WITHOUT_CLASSIFICATION	file menu $non-nls-1$
WITHOUT_CLASSIFICATION	set default save menu item to disabled since the default node that is selected is root which does not allow items to be inserted.
WITHOUT_CLASSIFICATION	$non-nls-1$ file_merge.setaccelerator( keystroke.getkeystroke(keyevent.vk_o keyevent.ctrl_mask))
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$ $non-nls-3$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$ $non-nls-3$ $non-nls-1$ $non-nls-2$ $non-nls-3$ $non-nls-1$ $non-nls-2$ $non-nls-3$ $non-nls-1$ $non-nls-2$ $non-nls-3$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	menu_add_xxx - controls which items are in the add menu menu_parent_xxx - controls which items are in the insert parent menu
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$ $non-nls-3$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	private static final logger log = loggingmanager.getloggerforclass()
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$ $non-nls-3$ $non-nls-1$ $non-nls-2$ $non-nls-3$ $non-nls-1$ $non-nls-2$ $non-nls-3$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$ $non-nls-3$ $non-nls-1$ $non-nls-2$ $non-nls-3$
WITHOUT_CLASSIFICATION	don't try to instantiate these
WITHOUT_CLASSIFICATION	called from ctor so must not be overridable
WITHOUT_CLASSIFICATION	called from ctor so must not be overridable
WITHOUT_CLASSIFICATION	jfilechooser jfc = null
WITHOUT_CLASSIFICATION	private static final logger log = loggingmanager.getloggerforclass()
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	same code as for default jmeter class
WITHOUT_CLASSIFICATION	avoid npe in resetpage()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.gui.jmeterguicomponent#createtestelement()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.gui.jmeterguicomponent#modifytestelement(org.apache.jmeter.testelement.testelement)
WITHOUT_CLASSIFICATION	don't change name if merging
WITHOUT_CLASSIFICATION	allow for missing optional jars
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	clear the name of the test plan file
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$ $non-nls-1$
WITHOUT_CLASSIFICATION	can't be null - this is checked by canaddto
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	save parent node for later
WITHOUT_CLASSIFICATION	so elements can only be added as children
WITHOUT_CLASSIFICATION	can't be null - this is checked by canaddto
WITHOUT_CLASSIFICATION	log.info("classname " + strclassname)
WITHOUT_CLASSIFICATION	match all
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	special handling
WITHOUT_CLASSIFICATION	converttree(tree)
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	not implemented public static final string save = "save_as" not implemented public static final string save_all = "save_all" not implemented public static final string save_to_previous = "save"
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	get the jcomponent from the visualizer
WITHOUT_CLASSIFICATION	get the string given from the choose and check the file extension.
WITHOUT_CLASSIFICATION	i.e. no disabled icon found
WITHOUT_CLASSIFICATION	must therefore set the enabled icon so there is at least some icon
WITHOUT_CLASSIFICATION	put the gui object back to the way it was.
WITHOUT_CLASSIFICATION	this check the state of the testelement and if returns false it disable the loaded node
WITHOUT_CLASSIFICATION	container endwindow jpopupmenu pop
WITHOUT_CLASSIFICATION	endwindow = window
WITHOUT_CLASSIFICATION	get the main frame.
WITHOUT_CLASSIFICATION	close any main menu that is open
WITHOUT_CLASSIFICATION	transient private static final logger log = loggingmanager.getloggerforclass()
WITHOUT_CLASSIFICATION	boolean enabled = true
WITHOUT_CLASSIFICATION	if icon has not been defined then use gui_class property
WITHOUT_CLASSIFICATION	mkdir() returns false if the directory was not created could be because it exists
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	there's only 1 test plan so can cache the mode here
WITHOUT_CLASSIFICATION	private static final logger log = loggingmanager.getloggerforclass()
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	called from ctor so must not be overridable
WITHOUT_CLASSIFICATION	if the directory already exists and is a directory we just renamed to "archive.date"
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	return the pagesize divided by 1024 to get kilobytes
WITHOUT_CLASSIFICATION	we add the entry
WITHOUT_CLASSIFICATION	we should make this configurable eventually
WITHOUT_CLASSIFICATION	private static reportplan plan
WITHOUT_CLASSIFICATION	now add the samples to the hashmap
WITHOUT_CLASSIFICATION	iterator itr = data.iterator()
WITHOUT_CLASSIFICATION	duplicates
WITHOUT_CLASSIFICATION	incompatable (blee/all)
WITHOUT_CLASSIFICATION	check that optional args work woth long options
WITHOUT_CLASSIFICATION	"-t3""-a"
WITHOUT_CLASSIFICATION	"-t3""-a"
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	result.setresponsedata - not set
WITHOUT_CLASSIFICATION	todo - charset?
WITHOUT_CLASSIFICATION	"-t""-a"
WITHOUT_CLASSIFICATION	"-dstupid=idiot""are""--all""--all""here"
WITHOUT_CLASSIFICATION	check delimiters are allowed
WITHOUT_CLASSIFICATION	check delimiters are allowed
WITHOUT_CLASSIFICATION	should not detect trailing option
WITHOUT_CLASSIFICATION	should detect trailing option
WITHOUT_CLASSIFICATION	"-dstupid=idiot""are""--all""here"
WITHOUT_CLASSIFICATION	check "-" is allowed in arg2
WITHOUT_CLASSIFICATION	"-dstupid="
WITHOUT_CLASSIFICATION	"-dstupid=""-c"
WITHOUT_CLASSIFICATION	"-dstupid""-c"
WITHOUT_CLASSIFICATION	canonical form
WITHOUT_CLASSIFICATION	test optional arguments
WITHOUT_CLASSIFICATION	ok should treat b as separate should have no arg
WITHOUT_CLASSIFICATION	convert between eclipse jar name and build.properties name
WITHOUT_CLASSIFICATION	remove docs-only jars
WITHOUT_CLASSIFICATION	assume default charset is ok here <classpathentry kind="lib" path="lib/geronimo-jms_1.1_spec-1.1.1.jar"/> <classpathentry kind="lib" path="lib/activation-1.1.1.jar"/> <classpathentry kind="lib" path="lib/jtidy-r938.jar"/>
WITHOUT_CLASSIFICATION	special handling
WITHOUT_CLASSIFICATION	this would be done by the run command
WITHOUT_CLASSIFICATION	testlog.setpriority(org.apache.log.priority.debug)
WITHOUT_CLASSIFICATION	not present
WITHOUT_CLASSIFICATION	wrong
WITHOUT_CLASSIFICATION	wrong
WITHOUT_CLASSIFICATION	loggingmanager.setpriority("debug""jmeter")
WITHOUT_CLASSIFICATION	restart file
WITHOUT_CLASSIFICATION	check random number
WITHOUT_CLASSIFICATION	this would be done by the run command
WITHOUT_CLASSIFICATION	test csv file with a header line
WITHOUT_CLASSIFICATION	test csv file with a header line
WITHOUT_CLASSIFICATION	test csv file with a header line and recycle is true
WITHOUT_CLASSIFICATION	read 1st line read 5 lines + restart to file begin line 2 line 3 line 4 line 5 return to 2nd line (first line is names)
WITHOUT_CLASSIFICATION	needs to be initialised
WITHOUT_CLASSIFICATION	etc
WITHOUT_CLASSIFICATION	genericcontroller sub_1 = new genericcontroller() sub_1.addtestelement(new ifcontroller("3==3")) controller.addtestelement(sub_1) controller.addtestelement(new ifcontroller("false==true"))
WITHOUT_CLASSIFICATION	ifcontroller controller = new ifcontroller("12==12") controller.initialize()
WITHOUT_CLASSIFICATION	should not enter the loop
WITHOUT_CLASSIFICATION	test with simplecontroller as first item
WITHOUT_CLASSIFICATION	should not enter the loop next time
WITHOUT_CLASSIFICATION	should not enter the loop next time but should continue to the end of the loop
WITHOUT_CLASSIFICATION	get next sample and its name
WITHOUT_CLASSIFICATION	match by name
WITHOUT_CLASSIFICATION	should not run any children should match the default entry
WITHOUT_CLASSIFICATION	selection controller with two sub-controllers but each has only 1 child
WITHOUT_CLASSIFICATION	controller + before + switch (cond) + + zero + + controller sub_1 + + + one + + two + + controller sub_2 + + + three + after
WITHOUT_CLASSIFICATION	test before selection controller - zero (default) - simple controller 1 - - one - - two - simple controller 2 - - three - - four - five - six after cond = switch condition exp[] = expected results
WITHOUT_CLASSIFICATION	n.b. requires apachejmeter_functions.jar to be on the classpath otherwise the function cannot be resolved.
WITHOUT_CLASSIFICATION	while (blank) previous sample ok - should loop until false
WITHOUT_CLASSIFICATION	log.info("testblankprevok")
WITHOUT_CLASSIFICATION	while (last) previous sample ok - should loop until false
WITHOUT_CLASSIFICATION	while (last) previous sample ok - should loop until false
WITHOUT_CLASSIFICATION	log.info("testlastprevok")
WITHOUT_CLASSIFICATION	dummy for testing functions
WITHOUT_CLASSIFICATION	log.info("testotherprevok")
WITHOUT_CLASSIFICATION	while (blank) previous sample failed - should run once
WITHOUT_CLASSIFICATION	log.info("testblankprevfailed")
WITHOUT_CLASSIFICATION	run entire test again
WITHOUT_CLASSIFICATION	should not enter the loop
WITHOUT_CLASSIFICATION	while last previous sample failed - should not run
WITHOUT_CLASSIFICATION	log.info("testlastprevfailed")
WITHOUT_CLASSIFICATION	while false previous sample failed - should not run
WITHOUT_CLASSIFICATION	log.info("testfalseprevfailed")
WITHOUT_CLASSIFICATION	should behave the same for blank and last because success on input
WITHOUT_CLASSIFICATION	should be ok
WITHOUT_CLASSIFICATION	e.printstacktrace()
WITHOUT_CLASSIFICATION	set up the test plan
WITHOUT_CLASSIFICATION	onlyonce samples
WITHOUT_CLASSIFICATION	outer sample
WITHOUT_CLASSIFICATION	inner loop
WITHOUT_CLASSIFICATION	sample in inner loop
WITHOUT_CLASSIFICATION	compute the expected sample names
WITHOUT_CLASSIFICATION	outer only once + ("three" + ("four" + "five" + "six" + "seven") innerloopcount) outerloopcount
WITHOUT_CLASSIFICATION	the only once samples
WITHOUT_CLASSIFICATION	the outer sample and the inner loop samples
WITHOUT_CLASSIFICATION	execute the test pan
WITHOUT_CLASSIFICATION	outer sample
WITHOUT_CLASSIFICATION	inner loop
WITHOUT_CLASSIFICATION	inner loop
WITHOUT_CLASSIFICATION	sample in inner loop
WITHOUT_CLASSIFICATION	compute the expected sample names
WITHOUT_CLASSIFICATION	compute the expected sample names
WITHOUT_CLASSIFICATION	the only once samples
WITHOUT_CLASSIFICATION	the only once samples
WITHOUT_CLASSIFICATION	the outer sample and the inner loop samples
WITHOUT_CLASSIFICATION	execute the test pan
WITHOUT_CLASSIFICATION	execute the test pan
WITHOUT_CLASSIFICATION	test plan with onlyoncecontroller inside inner loop set up the test plan
WITHOUT_CLASSIFICATION	onlyonce inside inner loop
WITHOUT_CLASSIFICATION	outer only once + ("three" + "only once five and six" + ("four" + "seven") innerloopcount) outerloopcount
WITHOUT_CLASSIFICATION	test skipped for now as behaviour is not yet properly defined
WITHOUT_CLASSIFICATION	interleavecontroller in inner loop
WITHOUT_CLASSIFICATION	onlyonce inside interleavecontroller
WITHOUT_CLASSIFICATION	samples inside interleavecontroller
WITHOUT_CLASSIFICATION	sample in inner loop
WITHOUT_CLASSIFICATION	outer only once + ("three" + "only once five and six" + "eight in interleave only once" + ("four" + "interleave" + "eleven") innerloopcount) outerloopcount
WITHOUT_CLASSIFICATION	escaped dollar commma and backslash with no variable reference
WITHOUT_CLASSIFICATION	escaped dollar commma and backslash with variable reference
WITHOUT_CLASSIFICATION	n.b. backslashes are removed before dollar comma and backslash
WITHOUT_CLASSIFICATION	n.b. backslashes are removed before dollar comma and backslash
WITHOUT_CLASSIFICATION	escaped dollar commma and backslash with missing variable reference
WITHOUT_CLASSIFICATION	escaped dollar commma and backslash with missing function reference
WITHOUT_CLASSIFICATION	log.debug("domain property = " + element.getproperty("domain"))
WITHOUT_CLASSIFICATION	log.debug("domain property = " + element.getproperty("domain"))
WITHOUT_CLASSIFICATION	set up the non-wild variables
WITHOUT_CLASSIFICATION	should not clear this?
WITHOUT_CLASSIFICATION	check when match fails
WITHOUT_CLASSIFICATION	extractor.setdefaultvalue("default")
WITHOUT_CLASSIFICATION	now rerun with match fail
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	this would be done by the run command
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	has child but child is empty
WITHOUT_CLASSIFICATION	has no child
WITHOUT_CLASSIFICATION	no text
WITHOUT_CLASSIFICATION	test fragment
WITHOUT_CLASSIFICATION	now get its text
WITHOUT_CLASSIFICATION	no text but using fragment mode
WITHOUT_CLASSIFICATION	there aren't any
WITHOUT_CLASSIFICATION	try to get data from subresult needed for addsubresult()
WITHOUT_CLASSIFICATION	get data from both
WITHOUT_CLASSIFICATION	get data from child
WITHOUT_CLASSIFICATION	create the stringfromfile function and set its parameters.
WITHOUT_CLASSIFICATION	create the splitfile function and set its parameters.
WITHOUT_CLASSIFICATION	create the beanshell function and set its parameters.
WITHOUT_CLASSIFICATION	reset files
WITHOUT_CLASSIFICATION	check some initial variables
WITHOUT_CLASSIFICATION	check source works
WITHOUT_CLASSIFICATION	check persistence
WITHOUT_CLASSIFICATION	check that bsh has read the file
WITHOUT_CLASSIFICATION	restarts
WITHOUT_CLASSIFICATION	test that only loops twice
WITHOUT_CLASSIFICATION	function objects to be tested
WITHOUT_CLASSIFICATION	helper class used to implement co-routine between two threads
WITHOUT_CLASSIFICATION	allow other thread to start
WITHOUT_CLASSIFICATION	open as a
WITHOUT_CLASSIFICATION	open as b
WITHOUT_CLASSIFICATION	col2 line 1
WITHOUT_CLASSIFICATION	a next
WITHOUT_CLASSIFICATION	col 1 line 2 a
WITHOUT_CLASSIFICATION	b next
WITHOUT_CLASSIFICATION	col2 line 2 b
WITHOUT_CLASSIFICATION	xpathfilecontainer tests
WITHOUT_CLASSIFICATION	assertequals("expected 4 lines"4f.size())
WITHOUT_CLASSIFICATION	the suite() method creates separate test suites for each of the types of test. the suitexxx() methods create a list of items to be tested and create a new test instance for each. each test type has its own constructor which saves the item to be tested note that the suite() method must be static and the methods to run the tests must be instance methods so that they can pick up the item value which was saved by the constructor.
WITHOUT_CLASSIFICATION	use same xpath for both threads
WITHOUT_CLASSIFICATION	string s =
WITHOUT_CLASSIFICATION	prevent accidental use of is below
WITHOUT_CLASSIFICATION	wrap-round check
WITHOUT_CLASSIFICATION	no wrap-round check
WITHOUT_CLASSIFICATION	perform a sum and check the results
WITHOUT_CLASSIFICATION	trailing space
WITHOUT_CLASSIFICATION	test with output variable name
WITHOUT_CLASSIFICATION	template match number all separator
WITHOUT_CLASSIFICATION	template match number all separator
WITHOUT_CLASSIFICATION	test with empty output variable name
WITHOUT_CLASSIFICATION	not full test plans
WITHOUT_CLASSIFICATION	start in new state
WITHOUT_CLASSIFICATION	suite.addtest(new testload("checkguipackage"))
WITHOUT_CLASSIFICATION	save the method name
WITHOUT_CLASSIFICATION	constructor for testelement tests
WITHOUT_CLASSIFICATION	save the method name
WITHOUT_CLASSIFICATION	save the method name
WITHOUT_CLASSIFICATION	save the method name
WITHOUT_CLASSIFICATION	constructor for serializable tests
WITHOUT_CLASSIFICATION	constructor for gui tests
WITHOUT_CLASSIFICATION	constructor for function tests
WITHOUT_CLASSIFICATION	only show classpath once
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	used by testanchormodifier used by testanchormodifier used by testsaveservice
WITHOUT_CLASSIFICATION	use a suite to allow the tests to be generated at run-time
WITHOUT_CLASSIFICATION	the locale used to instantiate the gui objects
WITHOUT_CLASSIFICATION	needs to be done before any gui classes are instantiated
WITHOUT_CLASSIFICATION	restore the original locale
WITHOUT_CLASSIFICATION	extract titles from component_reference.xml
WITHOUT_CLASSIFICATION	not a true gui component
WITHOUT_CLASSIFICATION	add titles that don't need to be documented guititles.put("root" boolean.false)
WITHOUT_CLASSIFICATION	extract titles from functions.xml
WITHOUT_CLASSIFICATION	first time
WITHOUT_CLASSIFICATION	we don't mind if this is left over ditto not a sampler
WITHOUT_CLASSIFICATION	test gui elements - create the suite of tests
WITHOUT_CLASSIFICATION	test functions - create the suite of tests
WITHOUT_CLASSIFICATION	jmeterguicomponent item = (jmeterguicomponent) iter.next()
WITHOUT_CLASSIFICATION	test gui elements - run the test
WITHOUT_CLASSIFICATION	so we can detect extra entries
WITHOUT_CLASSIFICATION	is this a work in progress or an internal gui component? will be "" for internal components
WITHOUT_CLASSIFICATION	skip the example samplers
WITHOUT_CLASSIFICATION	record in log as well
WITHOUT_CLASSIFICATION	record in log as well
WITHOUT_CLASSIFICATION	run the function test
WITHOUT_CLASSIFICATION	for detecting extra entries
WITHOUT_CLASSIFICATION	check that function descriptions are ok
WITHOUT_CLASSIFICATION	test gui elements - run for all components
WITHOUT_CLASSIFICATION	test gui elements - not run for testbeangui items
WITHOUT_CLASSIFICATION	test serializable elements - create the suite of tests
WITHOUT_CLASSIFICATION	test serializable elements - test the object
WITHOUT_CLASSIFICATION	test testelements - implement the test case
WITHOUT_CLASSIFICATION	don't try to instantiate remote server
WITHOUT_CLASSIFICATION	try with a parameter-less constructor first
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	no luck. ignore this class
WITHOUT_CLASSIFICATION	we won't test restricted-access classes.
WITHOUT_CLASSIFICATION	not thrown so need to check here
WITHOUT_CLASSIFICATION	only dump it once
WITHOUT_CLASSIFICATION	[sebb] assertequals(item2 cloneditem.getproperty(item2.getname()))
WITHOUT_CLASSIFICATION	used by findtestfile
WITHOUT_CLASSIFICATION	jmeterutils assumes unix-style separators
WITHOUT_CLASSIFICATION	used to be done in initializeproperties
WITHOUT_CLASSIFICATION	needed for scripts
WITHOUT_CLASSIFICATION	display actual encoding used (will differ if file.encoding is not recognised)
WITHOUT_CLASSIFICATION	helper method to find a file
WITHOUT_CLASSIFICATION	add the offset
WITHOUT_CLASSIFICATION	add the offset
WITHOUT_CLASSIFICATION	helper method to find a test path
WITHOUT_CLASSIFICATION	number of samples taken
WITHOUT_CLASSIFICATION	same as above
WITHOUT_CLASSIFICATION	not same
WITHOUT_CLASSIFICATION	this is needed in order to set up the cookie policy
WITHOUT_CLASSIFICATION	this should be ignored as there is no value
WITHOUT_CLASSIFICATION	starts empty
WITHOUT_CLASSIFICATION	should not be stored
WITHOUT_CLASSIFICATION	test session cookie is returned
WITHOUT_CLASSIFICATION	test old cookie is not returned
WITHOUT_CLASSIFICATION	test multi-cookie header handling
WITHOUT_CLASSIFICATION	test duplicate cookie handling
WITHOUT_CLASSIFICATION	assumes some kind of list is used
WITHOUT_CLASSIFICATION	test cookie matching
WITHOUT_CLASSIFICATION	defaults to caller url
WITHOUT_CLASSIFICATION	ensure policy is picked up
WITHOUT_CLASSIFICATION	assertequals("/"man.get(0).getpath())
WITHOUT_CLASSIFICATION	cookies are ignored
WITHOUT_CLASSIFICATION	cookies again ignored
WITHOUT_CLASSIFICATION	show that maxlong now saved as 0
WITHOUT_CLASSIFICATION	shutdown the http server
WITHOUT_CLASSIFICATION	wait up to 1 second
WITHOUT_CLASSIFICATION	already failed
WITHOUT_CLASSIFICATION	succeeded
WITHOUT_CLASSIFICATION	connect to the http server and do a simple http get
WITHOUT_CLASSIFICATION	write to the socket
WITHOUT_CLASSIFICATION	headers
WITHOUT_CLASSIFICATION	check that the request and response matches
WITHOUT_CLASSIFICATION	close the connection
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	write to the socket
WITHOUT_CLASSIFICATION	headers
WITHOUT_CLASSIFICATION	headers
WITHOUT_CLASSIFICATION	headers
WITHOUT_CLASSIFICATION	read the response
WITHOUT_CLASSIFICATION	read the response
WITHOUT_CLASSIFICATION	read the response
WITHOUT_CLASSIFICATION	check that the request and response matches
WITHOUT_CLASSIFICATION	check that the request and response matches
WITHOUT_CLASSIFICATION	check that the request and response matches
WITHOUT_CLASSIFICATION	close the connection
WITHOUT_CLASSIFICATION	close the connection
WITHOUT_CLASSIFICATION	close the connection
WITHOUT_CLASSIFICATION	connect to the http server and do a simple http get with a pause in the middle of transmitting the header
WITHOUT_CLASSIFICATION	write the start of the headers and then sleep so that the mirror thread will have to block to wait for more data to appear
WITHOUT_CLASSIFICATION	write the rest of the headers
WITHOUT_CLASSIFICATION	the content sent
WITHOUT_CLASSIFICATION	the content sent
WITHOUT_CLASSIFICATION	connect to the http server and do a simple http post
WITHOUT_CLASSIFICATION	construct body
WITHOUT_CLASSIFICATION	construct body
WITHOUT_CLASSIFICATION	write the headers and body
WITHOUT_CLASSIFICATION	connect to the http server and do a simple http post with a pause after transmitting the headers
WITHOUT_CLASSIFICATION	write the headers and then sleep
WITHOUT_CLASSIFICATION	write the body
WITHOUT_CLASSIFICATION	write the body
WITHOUT_CLASSIFICATION	check that the request and response matches
WITHOUT_CLASSIFICATION	$sid$
WITHOUT_CLASSIFICATION	arguments args = sampler.getarguments()
WITHOUT_CLASSIFICATION	no entry check it is still present
WITHOUT_CLASSIFICATION	test https works too
WITHOUT_CLASSIFICATION	these are some of the special characters
WITHOUT_CLASSIFICATION	can't instantiate
WITHOUT_CLASSIFICATION	list of parsers to test. should probably be derived automatically
WITHOUT_CLASSIFICATION	dummy as the file has no entries
WITHOUT_CLASSIFICATION	dummy as the file has no entries
WITHOUT_CLASSIFICATION	relative filenames
WITHOUT_CLASSIFICATION	identify subtests
WITHOUT_CLASSIFICATION	this is ok
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	a http get request with encoding not known
WITHOUT_CLASSIFICATION	private testdata(string f string b string s) { this(f b s null) }
WITHOUT_CLASSIFICATION	does the order matter?
WITHOUT_CLASSIFICATION	convert both to sets
WITHOUT_CLASSIFICATION	get expected results as a list
WITHOUT_CLASSIFICATION	a http get request
WITHOUT_CLASSIFICATION	check arguments
WITHOUT_CLASSIFICATION	check arguments
WITHOUT_CLASSIFICATION	a http post request
WITHOUT_CLASSIFICATION	a http get request with encoding not known
WITHOUT_CLASSIFICATION	a http post request with content-type text/plain
WITHOUT_CLASSIFICATION	a http get request with utf-8 encoding
WITHOUT_CLASSIFICATION	when the encoding is not known the argument will get the encoded value and the "encode?" set to false
WITHOUT_CLASSIFICATION	when the encoding is not known the argument will get the encoded value and the "encode?" set to false
WITHOUT_CLASSIFICATION	when the encoding is not known the argument will get the encoded value and the "encode?" set to false
WITHOUT_CLASSIFICATION	a http post request with utf-8 encoding
WITHOUT_CLASSIFICATION	a http post request with unknown encoding
WITHOUT_CLASSIFICATION	a http post request with utf-8 encoding
WITHOUT_CLASSIFICATION	a http get request with iso-8859-1 encoding
WITHOUT_CLASSIFICATION	a http get request with utf-8 encoding
WITHOUT_CLASSIFICATION	a http post request with encoding not known
WITHOUT_CLASSIFICATION	check arguments we should have one argument with the value equal to the post body
WITHOUT_CLASSIFICATION	a http post request with content-type text/plain charset=utf-8 the encoding should be picked up from the header we send with the request
WITHOUT_CLASSIFICATION	a http post request with content-type text/plain charset=utf-8 the encoding should be picked up from the header we send with the request
WITHOUT_CLASSIFICATION	use null for url to simulate that httprequesthdr do not know the encoding for the page. specify contentencoding so the request is "sent" using that encoding
WITHOUT_CLASSIFICATION	use null for url to simulate that httprequesthdr do not know the encoding for the page. specify contentencoding so the request is "sent" using that encoding
WITHOUT_CLASSIFICATION	use null for url and contentencoding to simulate that httprequesthdr do not know the encoding for the page
WITHOUT_CLASSIFICATION	use null for url and contentencoding to simulate that httprequesthdr do not know the encoding for the page
WITHOUT_CLASSIFICATION	a http post request with iso-8859-1 encoding
WITHOUT_CLASSIFICATION	a http post request multipart/form-data simple values
WITHOUT_CLASSIFICATION	a http post request multipart/form-data simple values
WITHOUT_CLASSIFICATION	no space after
WITHOUT_CLASSIFICATION	spaces after
WITHOUT_CLASSIFICATION	assume there's at least one file
WITHOUT_CLASSIFICATION	title multipart
WITHOUT_CLASSIFICATION	description multipart
WITHOUT_CLASSIFICATION	file upload multipart
WITHOUT_CLASSIFICATION	most browsers use iso-8859-1 as default encoding even if spec says utf-8
WITHOUT_CLASSIFICATION	most browsers use iso-8859-1 as default encoding even if spec says utf-8
WITHOUT_CLASSIFICATION	no filters
WITHOUT_CLASSIFICATION	empty filters
WITHOUT_CLASSIFICATION	non empty filters
WITHOUT_CLASSIFICATION	simple inclusion and exclusion filter
WITHOUT_CLASSIFICATION	allow all but images
WITHOUT_CLASSIFICATION	throw new unsupportedoperationexception("for test purposes only")
WITHOUT_CLASSIFICATION	this must be the original (java) http sampler
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	a http post request multipart/form-data with value that will change if they are url encoded values are similar to __viewstate parameter that .net uses
WITHOUT_CLASSIFICATION	most browsers use iso-8859-1 as default encoding even if spec says utf-8 todo - charset?
WITHOUT_CLASSIFICATION	create the test file content
WITHOUT_CLASSIFICATION	create a temporary file to make sure we always have a file to give to the postwriter whereever we are or whatever the current path is.
WITHOUT_CLASSIFICATION	delete temporay file
WITHOUT_CLASSIFICATION	test sending data with default encoding
WITHOUT_CLASSIFICATION	test sending data with default encoding
WITHOUT_CLASSIFICATION	test sending data with default encoding
WITHOUT_CLASSIFICATION	test sending data as iso-8859-1
WITHOUT_CLASSIFICATION	test sending data as iso-8859-1
WITHOUT_CLASSIFICATION	test sending data as iso-8859-1
WITHOUT_CLASSIFICATION	test sending data as iso-8859-1
WITHOUT_CLASSIFICATION	test sending data as iso-8859-1
WITHOUT_CLASSIFICATION	test sending data as utf-8
WITHOUT_CLASSIFICATION	test sending data as utf-8
WITHOUT_CLASSIFICATION	test sending data as utf-8
WITHOUT_CLASSIFICATION	test sending data as utf-8
WITHOUT_CLASSIFICATION	test sending data as utf-8
WITHOUT_CLASSIFICATION	test sending utf-8 data with iso-8859-1 content encoding
WITHOUT_CLASSIFICATION	test method for 'org.apache.jmeter.protocol.http.sampler.postwriter.sendpostdata(urlconnection httpsampler)' this method test sending a httpsampler with form parameters and only the filename of a file.
WITHOUT_CLASSIFICATION	test method for 'org.apache.jmeter.protocol.http.sampler.postwriter.sendpostdata(urlconnection httpsampler)' this method test sending file content as the only content of the post body
WITHOUT_CLASSIFICATION	check using default encoding
WITHOUT_CLASSIFICATION	check using a different encoding
WITHOUT_CLASSIFICATION	file content is sent as binary so the content encoding should not change the file data
WITHOUT_CLASSIFICATION	if we have both file as body and form data then only form data will be sent
WITHOUT_CLASSIFICATION	test method for 'org.apache.jmeter.protocol.http.sampler.postwriter.sendpostdata(urlconnection httpsampler)' this method test sending only a file multipart.
WITHOUT_CLASSIFICATION	test method for 'org.apache.jmeter.protocol.http.sampler.postwriter.sendpostdata(urlconnection httpsampler)' this method test sending only a formdata as a multipart/form-data request.
WITHOUT_CLASSIFICATION	tell sampler to do multipart even if we have no files to upload
WITHOUT_CLASSIFICATION	test sending data as iso-8859-1 with values that need to be urlencoded
WITHOUT_CLASSIFICATION	test sending data as iso-8859-1 with values that need to be urlencoded
WITHOUT_CLASSIFICATION	test method for 'org.apache.jmeter.protocol.http.sampler.postwriter.sendpostdata(urlconnection httpsampler)' this method test sending only a formdata as urlencoded data
WITHOUT_CLASSIFICATION	test sending data as utf-8 with values that needs to be urlencoded
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	delete temporay file
WITHOUT_CLASSIFICATION	test sending data as iso-8859-1
WITHOUT_CLASSIFICATION	test sending data as iso-8859-1
WITHOUT_CLASSIFICATION	test sending data as iso-8859-1
WITHOUT_CLASSIFICATION	test sending data as utf-8
WITHOUT_CLASSIFICATION	test sending data as utf-8
WITHOUT_CLASSIFICATION	check that other encoding is not the current encoding todo - charset?
WITHOUT_CLASSIFICATION	test sending data as utf-8 with values that would have been urlencoded if it was not sent as multipart
WITHOUT_CLASSIFICATION	test sending parameters which are urlencoded beforehand the values must be url encoded with utf-8 encoding because that is what the httpargument assumes %c3%85 in utf-8 is the same as %c5 in iso-8859-1 which is the same as &aring
WITHOUT_CLASSIFICATION	httpsampler uses iso-8859-1 as default encoding httpsampler uses iso-8859-1 as default encoding
WITHOUT_CLASSIFICATION	test method for 'org.apache.jmeter.protocol.http.sampler.postwriter.setheaders(urlconnection httpsampler)'
WITHOUT_CLASSIFICATION	create the multiparts
WITHOUT_CLASSIFICATION	join the two multiparts
WITHOUT_CLASSIFICATION	the encoding used for http headers and control information
WITHOUT_CLASSIFICATION	replace all backslash with double backslash
WITHOUT_CLASSIFICATION	different from testhttpmirrorthread port and standard mirror server
WITHOUT_CLASSIFICATION	additional ctor for processing tests which use int parameters
WITHOUT_CLASSIFICATION	this is used to emulate @before class and @after class
WITHOUT_CLASSIFICATION	add parameterised tests. for simplicity we assune each has cases 0-10
WITHOUT_CLASSIFICATION	shutdown mirror server
WITHOUT_CLASSIFICATION	test sending data as utf-8 with values that will change when urlencoded
WITHOUT_CLASSIFICATION	test sending data as utf-8 with values that have been urlencoded
WITHOUT_CLASSIFICATION	test sending data as utf-8 with values similar to __viewstate parameter that .net uses
WITHOUT_CLASSIFICATION	test sending data as utf-8 with values similar to __viewstate parameter that .net uses
WITHOUT_CLASSIFICATION	replace the variables in the sampler
WITHOUT_CLASSIFICATION	replace the variables in the sampler
WITHOUT_CLASSIFICATION	ensure only values are used
WITHOUT_CLASSIFICATION	test sending data with default encoding
WITHOUT_CLASSIFICATION	test sending data as iso-8859-1
WITHOUT_CLASSIFICATION	test sending data as utf-8 with values that would have been urlencoded if it was not sent as multipart
WITHOUT_CLASSIFICATION	test sending data as utf-8 with values that will change when urlencoded
WITHOUT_CLASSIFICATION	test sending data as utf-8 with values that have been urlencoded
WITHOUT_CLASSIFICATION	test sending data as utf-8 with values similar to __viewstate parameter that .net uses
WITHOUT_CLASSIFICATION	replace the variables in the sampler
WITHOUT_CLASSIFICATION	test sending data as utf-8 where user defined variables are used to set the value for form data
WITHOUT_CLASSIFICATION	test sending data as utf-8 where user defined variables are used to set the value for form data
WITHOUT_CLASSIFICATION	replace the variables in the sampler
WITHOUT_CLASSIFICATION	ensure only values are used
WITHOUT_CLASSIFICATION	test sending data as utf-8 with values that have been urlencoded and where we tell the sampler to urlencode the parameter values
WITHOUT_CLASSIFICATION	test sending data with iso-8859-1 encoding
WITHOUT_CLASSIFICATION	test sending data with iso-8859-1 encoding
WITHOUT_CLASSIFICATION	test sending data with utf-8 encoding
WITHOUT_CLASSIFICATION	test sending data with utf-8 encoding
WITHOUT_CLASSIFICATION	test sending data as utf-8 with values that changes when urlencoded
WITHOUT_CLASSIFICATION	check url
WITHOUT_CLASSIFICATION	check the request
WITHOUT_CLASSIFICATION	check request headers
WITHOUT_CLASSIFICATION	check post body from the result query string
WITHOUT_CLASSIFICATION	find the data sent to the mirror server which the mirror server is sending back to us
WITHOUT_CLASSIFICATION	skip the blank line with crlf dividing headers and body
WITHOUT_CLASSIFICATION	check response headers
WITHOUT_CLASSIFICATION	check url
WITHOUT_CLASSIFICATION	test sending data as utf-8 with + as part of the value where the value is set in sampler as not urluencoded but the isalwaysencoded flag of the argument is set to false. this mimics the httpconstants.addnonencodedargument which the proxy server calls in some cases
WITHOUT_CLASSIFICATION	test sending simple http get test sending data with default encoding
WITHOUT_CLASSIFICATION	test sending simple http get test sending data with default encoding
WITHOUT_CLASSIFICATION	check request headers
WITHOUT_CLASSIFICATION	check post body from the result query string
WITHOUT_CLASSIFICATION	find the data sent to the mirror server which the mirror server is sending back to us
WITHOUT_CLASSIFICATION	find the data sent to the mirror server which the mirror server is sending back to us
WITHOUT_CLASSIFICATION	skip the blank line with crlf dividing headers and body
WITHOUT_CLASSIFICATION	check response headers
WITHOUT_CLASSIFICATION	check response headers
WITHOUT_CLASSIFICATION	check post body which was sent to the mirror server and sent back by the mirror server
WITHOUT_CLASSIFICATION	check method path and query sent
WITHOUT_CLASSIFICATION	check method path and query sent
WITHOUT_CLASSIFICATION	find the data sent to the mirror server which the mirror server is sending back to us
WITHOUT_CLASSIFICATION	skip the blank line with crlf dividing headers and body
WITHOUT_CLASSIFICATION	skip the blank line with crlf dividing headers and body
WITHOUT_CLASSIFICATION	check method path and query sent
WITHOUT_CLASSIFICATION	check method path and query sent
WITHOUT_CLASSIFICATION	check method
WITHOUT_CLASSIFICATION	check method
WITHOUT_CLASSIFICATION	check that the query string is empty
WITHOUT_CLASSIFICATION	no body should have been sent
WITHOUT_CLASSIFICATION	no body should have been sent
WITHOUT_CLASSIFICATION	check the request uri sent to the mirror server and sent back by the mirror server
WITHOUT_CLASSIFICATION	we should have a query string part
WITHOUT_CLASSIFICATION	we should not have a query string part
WITHOUT_CLASSIFICATION	check path
WITHOUT_CLASSIFICATION	check query
WITHOUT_CLASSIFICATION	is it only the parameter values which are encoded in the specified content encoding the rest of the query is encoded in utf-8 therefore we compare the whole query using utf-8
WITHOUT_CLASSIFICATION	find the data sent to the mirror server which the mirror server is sending back to us we assume the headers are in iso_8859_1 and the body can be in any content encoding.
WITHOUT_CLASSIFICATION	find the data sent to the mirror server which the mirror server is sending back to us we assume the headers are in iso_8859_1 and the body can be in any content encoding. therefore we get the data sent in iso_8859_1 to be able to determine the end of the header part and then we just construct a byte array to hold the body part not taking encoding of the body into consideration because it can contain file data which is sent as raw byte data
WITHOUT_CLASSIFICATION	no divider was found
WITHOUT_CLASSIFICATION	set the form data
WITHOUT_CLASSIFICATION	todo - charset?
WITHOUT_CLASSIFICATION	todo - charset?
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	join the two multiparts
WITHOUT_CLASSIFICATION	the encoding used for http headers and control information
WITHOUT_CLASSIFICATION	replace all backslash with double backslash
WITHOUT_CLASSIFICATION	the value is in the first group group 0 is the whole match
WITHOUT_CLASSIFICATION	the headers and body are divided by a blank line
WITHOUT_CLASSIFICATION	header may contain charset= regexp extracts it so computed boundary is wrong
WITHOUT_CLASSIFICATION	string domain = "localhost"
WITHOUT_CLASSIFICATION	set the file upload data
WITHOUT_CLASSIFICATION	parse arguments singly
WITHOUT_CLASSIFICATION	parse arguments all at once
WITHOUT_CLASSIFICATION	test cases for making url and exercise method addargument(string namestring valuestring metadata)
WITHOUT_CLASSIFICATION	test cases for making url and exercise method parsearguments(string querystring)
WITHOUT_CLASSIFICATION	ignore empty file specs
WITHOUT_CLASSIFICATION	ignore trailing empty spec
WITHOUT_CLASSIFICATION	ignore leading empty spec
WITHOUT_CLASSIFICATION	show that can bypass encoding
WITHOUT_CLASSIFICATION	the sample does not use a valid encoding
WITHOUT_CLASSIFICATION	by default name/value are encoded on fetch
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	try a real encoded argument
WITHOUT_CLASSIFICATION	trailing file
WITHOUT_CLASSIFICATION	trailing directory
WITHOUT_CLASSIFICATION	file exclf inclf exclp inclp
WITHOUT_CLASSIFICATION	odd chars
WITHOUT_CLASSIFICATION	invalid
WITHOUT_CLASSIFICATION	'12345'
WITHOUT_CLASSIFICATION	check illegal array lengths
WITHOUT_CLASSIFICATION	current default language properties file
WITHOUT_CLASSIFICATION	messages.properties
WITHOUT_CLASSIFICATION	read resource into resourcebundle and store in list
WITHOUT_CLASSIFICATION	read resource file saving the keys
WITHOUT_CLASSIFICATION	only relevant for messages
WITHOUT_CLASSIFICATION	store the key
WITHOUT_CLASSIFICATION	helper method to construct resource name
WITHOUT_CLASSIFICATION	check that there aren't any extra entries
WITHOUT_CLASSIFICATION	perform the checks on the resources
WITHOUT_CLASSIFICATION	holds keys from file
WITHOUT_CLASSIFICATION	look for duplicate keys in the file
WITHOUT_CLASSIFICATION	must be the default resource file
WITHOUT_CLASSIFICATION	check all the keys are in the default props file
WITHOUT_CLASSIFICATION	also check key is in default
WITHOUT_CLASSIFICATION	better error than npe
WITHOUT_CLASSIFICATION	fix up windows paths
WITHOUT_CLASSIFICATION	use a suite to ensure that the default is done first
WITHOUT_CLASSIFICATION	load the default resource
WITHOUT_CLASSIFICATION	don't try to check the default language
WITHOUT_CLASSIFICATION	e.g. "/org/apache/jmeter/resources/messages"
WITHOUT_CLASSIFICATION	check that calls to getresstring use a valid property key name
WITHOUT_CLASSIFICATION	leading comment
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	\u00e7 = latin small letter c with cedilla \u00e9 = latin small letter e with acute
WITHOUT_CLASSIFICATION	change the original back again
WITHOUT_CLASSIFICATION	a and b should be equal
WITHOUT_CLASSIFICATION	a and b should not be equal
WITHOUT_CLASSIFICATION	needs to be greater than the minimum to allow for boundary errors
WITHOUT_CLASSIFICATION	needs to be greater than the minimum to allow for boundary errors
WITHOUT_CLASSIFICATION	re-increment
WITHOUT_CLASSIFICATION	re-increment
WITHOUT_CLASSIFICATION	n.b. this needs to divert the log for sampleresult
WITHOUT_CLASSIFICATION	temp test case for exploring settings
WITHOUT_CLASSIFICATION	don't use nanothread
WITHOUT_CLASSIFICATION	this test tries to emulate a http sample with two subsamples representing images that are downloaded for the page representing the first sample.
WITHOUT_CLASSIFICATION	sample that will get two sub results simulates a web page load
WITHOUT_CLASSIFICATION	sample with no sub results simulates an image download
WITHOUT_CLASSIFICATION	sample with no sub results simulates an image download
WITHOUT_CLASSIFICATION	now add the subsamples to the sample
WITHOUT_CLASSIFICATION	timemillis has granularity of 10-20
WITHOUT_CLASSIFICATION	check that calculator gets the correct statistics from the sample
WITHOUT_CLASSIFICATION	allow for some margin of error check that the throughput uses the time elapsed for the sub results
WITHOUT_CLASSIFICATION	check default
WITHOUT_CLASSIFICATION	check null changes nothing
WITHOUT_CLASSIFICATION	check no charset
WITHOUT_CLASSIFICATION	check unquoted charset
WITHOUT_CLASSIFICATION	check quoted charset
WITHOUT_CLASSIFICATION	this is what jorphanutils.split() does
WITHOUT_CLASSIFICATION	these tests should agree with those for jorphanutils.split() as far as possible
WITHOUT_CLASSIFICATION	\u00e7 = latin small letter c with cedilla \u00e9 = latin small letter e with acute
WITHOUT_CLASSIFICATION	blank line
WITHOUT_CLASSIFICATION	empty strings at eof
WITHOUT_CLASSIFICATION	testloadandsave test files
WITHOUT_CLASSIFICATION	graphaccumvisualizer obsolete bsfsamplergui now a testbean graphaccumvisualizer obsolete bsfsamplergui now a testbean graphaccumvisualizer now obsolete ctt changed to use intprop for mode
WITHOUT_CLASSIFICATION	test files for testload output will generally be different in size and line count
WITHOUT_CLASSIFICATION	did a test fail?
WITHOUT_CLASSIFICATION	make sure all the data is flushed out
WITHOUT_CLASSIFICATION	test non-empty parameters
WITHOUT_CLASSIFICATION	unrecognised files are ignored
WITHOUT_CLASSIFICATION	does not open file
WITHOUT_CLASSIFICATION	does not open file
WITHOUT_CLASSIFICATION	re-read 1st line
WITHOUT_CLASSIFICATION	re-read 1st line
WITHOUT_CLASSIFICATION	should not be able to write to it
WITHOUT_CLASSIFICATION	does not remove the entry
WITHOUT_CLASSIFICATION	removes all entries
WITHOUT_CLASSIFICATION	test code intentional
WITHOUT_CLASSIFICATION	check "undefined" does not become a "reserved word"
WITHOUT_CLASSIFICATION	errordetected()
WITHOUT_CLASSIFICATION	errordetected()
WITHOUT_CLASSIFICATION	programming error. don't continue.
WITHOUT_CLASSIFICATION	check that all keys in the bundle are also in the default bundle
WITHOUT_CLASSIFICATION	will throw missingresourceexception if key is not there.
WITHOUT_CLASSIFICATION	check that all necessary keys are there
WITHOUT_CLASSIFICATION	displayname is always mandatory
WITHOUT_CLASSIFICATION	skip the rest of this test for alpha/experimental beans
WITHOUT_CLASSIFICATION	check for property- and group-related texts
WITHOUT_CLASSIFICATION	skip non-editable properties that is ignore hidden read-only and write-only properties
WITHOUT_CLASSIFICATION	ignore testelement properties which don't have an explicit editor
WITHOUT_CLASSIFICATION	done -- we're working with an editable property.
WITHOUT_CLASSIFICATION	throw new error("no default bundle for class " + classname)
WITHOUT_CLASSIFICATION	string samplelog = "c/eclipse3/workspace/jmeter-21/bin/testfiles/sample_log1.jtl"
WITHOUT_CLASSIFICATION	string samplelog = "c/eclipse3/workspace/jmeter-21/bin/testfiles/sample_log1.jtl"
WITHOUT_CLASSIFICATION	tweak.
WITHOUT_CLASSIFICATION	tweak.
WITHOUT_CLASSIFICATION	test needs to run in this package in order to give access to abstracttestelement.addproperty()
WITHOUT_CLASSIFICATION	this test should work whether or not all nulls are equal
WITHOUT_CLASSIFICATION	do not check hashcodes unequal objects may have equal hashcodes
WITHOUT_CLASSIFICATION	give access to the method for test code
WITHOUT_CLASSIFICATION	give access to the method for test code
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	p.add(makebuttonpanel() borderlayout.south)
WITHOUT_CLASSIFICATION	assume this thread only 1 per second should delay for 1 second 1 per milli-second should delay for 1 milli-second
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	10 per second should delay for 1 second 10 per milli-second should delay for 1 milli-second
WITHOUT_CLASSIFICATION	1000 per milli-second should delay for 1 milli-second
WITHOUT_CLASSIFICATION	not sure we can test anything else here
WITHOUT_CLASSIFICATION	use old style
WITHOUT_CLASSIFICATION	probably needed to avoid npes with guis
WITHOUT_CLASSIFICATION	tree1.add("a3")
WITHOUT_CLASSIFICATION	no duplicates when adding
WITHOUT_CLASSIFICATION	add duplicates
WITHOUT_CLASSIFICATION	as above but with aggregate sample instead
WITHOUT_CLASSIFICATION	add duplicates as per bug
WITHOUT_CLASSIFICATION	assertequals("t2"f2.invoke())
WITHOUT_CLASSIFICATION	assertequals("1aaa."f1a.invoke())
WITHOUT_CLASSIFICATION	can't call invoke using super class
WITHOUT_CLASSIFICATION	ok (currently) to invoke using sub-class
WITHOUT_CLASSIFICATION	args will be provided later
WITHOUT_CLASSIFICATION	should use original object
WITHOUT_CLASSIFICATION	check how class definition behaves
WITHOUT_CLASSIFICATION	logprop("java.class.path")
WITHOUT_CLASSIFICATION	don't call isheadless() here as it has a side effect. --
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	send different event wether we are merging a test plan into another test plan or loading a testplan from scratch
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	private static final string rootdn = "rootdn" private static final string test = "test" private static string testvalue="nnnn"
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	test ignore trailing split characters ignore adjacent delimiters
WITHOUT_CLASSIFICATION	tests for split(stringstringboolean)
WITHOUT_CLASSIFICATION	test leading split characters
WITHOUT_CLASSIFICATION	test leading split characters
WITHOUT_CLASSIFICATION	empty string
WITHOUT_CLASSIFICATION	tests for split(stringstringstring)
WITHOUT_CLASSIFICATION	empty default
WITHOUT_CLASSIFICATION	empty delimiter
WITHOUT_CLASSIFICATION	multiple delimiters
WITHOUT_CLASSIFICATION	delimiter same as splitter
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	node node = tidy.parsedom(new bytearrayinputstream(response.getresponsedata()) null)
WITHOUT_CLASSIFICATION	values for test_field n.b. we cannot change the text value as it is in test plans $non-nls-1$
WITHOUT_CLASSIFICATION	in case parse fails $non-nls-1$ in case parse fails $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ make it easier to enter a tab $non-nls-1$
WITHOUT_CLASSIFICATION	the loop controller panel can be displayed standalone or inside another panel. for standalone we want to display the title name etc. (everything). however if we want to display it within another panel we just display the loop count fields (not the title and name).
WITHOUT_CLASSIFICATION	$non-nls-1$ don't set empty to keep regexp regexpfield.settext("") $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	this 'other value' regex is deliberately weak even accepting an empty string to be useful when reporting malformed data. $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	condition label $non-nls-1$
WITHOUT_CLASSIFICATION	if the -j or -l flag is set to last or last.log|last.jtl then the last loaded file name is used to generate the log file name by removing .jmx and replacing it with .log|.jtl
WITHOUT_CLASSIFICATION	if a table cell is being edited we should accept the current value and stop the editing before adding a new row.
WITHOUT_CLASSIFICATION	$non-nls-1$ i.e. boolean savexxx() $non-nls-1$ i.e. void setxxx(boolean) $non-nls-1$ e.g. save_xxx property
WITHOUT_CLASSIFICATION	keep the '\' unless it is one of the escapable chars '$' '' or '\' n.b. this method is used to parse function parameters so must treat '' as special
WITHOUT_CLASSIFICATION	en fr de $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ ja zh_cn zh_tw
WITHOUT_CLASSIFICATION	@guardedby("lock") keep track of how many instances are active
WITHOUT_CLASSIFICATION	sampleoccurred is called from multiple threads not safe to write from multiple threads. also decouples the file io from sample generation
WITHOUT_CLASSIFICATION	file name sequence number @guardedby("lock")
WITHOUT_CLASSIFICATION	instance fields are constructed by the client when the instance is create in the test plan and the field values are then transferred to the server copy by rmi serialisation/deserialisation
WITHOUT_CLASSIFICATION	process special keys $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	if there are some recent files we must make the separator visisble the separator is the last item in the list
WITHOUT_CLASSIFICATION	put the gui object back to the way it was.
WITHOUT_CLASSIFICATION	make sure decoding follows input file
WITHOUT_CLASSIFICATION	save (selection) as save testplan as save
WITHOUT_CLASSIFICATION	y y y y sp m m / d d / h h m m s s end
WITHOUT_CLASSIFICATION	ok todo ??
WITHOUT_CLASSIFICATION	support original property name $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	allow for windows / chars in filename $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	updatemainmenu(((jmeterguicomponent) getcurrentnode().getuserobject()).createpopupmenu())
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	a http post request multipart/form-data simple values with \r\n as end of line which is according to spec and with more headers in each multipart
WITHOUT_CLASSIFICATION	two jars same version two jars same version
WITHOUT_CLASSIFICATION	test plan with onlyoncecontroller inside inner loop set up the test plan
WITHOUT_CLASSIFICATION	the following used to be jacks_password but the arguments class uses hashmap for which the order is not defined.
WITHOUT_CLASSIFICATION	myrow = f.nextrow() assertequals(3myrow) assertequals(0f.getnextrow())
WITHOUT_CLASSIFICATION	is this a work in progress ? no not a work in progress
WITHOUT_CLASSIFICATION	assumes some kind of list is use if not using a list that retains the order then the asserts would need to change
WITHOUT_CLASSIFICATION	test sending data as utf-8 with values that will change when urlencoded and where we tell the sampler to urlencode the parameter value
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	pick up headers if failed to execute the request httpmethod can be null if method is unexpected
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	resource keys cannot contain spaces and are forced to lower case $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	nulls cannot be written using prettyprintwriter - they cause an npe $non-nls-1$
WITHOUT_CLASSIFICATION	default is 1 default is 0
WITHOUT_CLASSIFICATION	n.b. jvms other than sun may return different instances each time so we cache the value here (and avoid having to fetch it every time)
WITHOUT_CLASSIFICATION	programming error. don't continue.
WITHOUT_CLASSIFICATION	+ jmx attributes - do not change $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ - jmx
WITHOUT_CLASSIFICATION	note this is only used to implement testiterationlistener#testiterationstart since this is a frequent event it makes sense to create the list once rather than scanning each time the memory used will be released when the thread finishes
WITHOUT_CLASSIFICATION	we only check the length of the result. comparing the actual result (out.tobytearray==original) will usually fail because the order of the properties within each test element may change. comparing the lengths should be enough to detect most problem cases
WITHOUT_CLASSIFICATION	assume this thread only 1 per second initialise
WITHOUT_CLASSIFICATION	test ignore trailing split characters ignore adjacent delimiters
WITHOUT_CLASSIFICATION	write a ok reponse to browser to engage ssl exchange $non-nls-1$
WITHOUT_CLASSIFICATION	we use the page encoding where the form resides as the default encoding for the form
WITHOUT_CLASSIFICATION	+ action names $non-nls-1$
WITHOUT_CLASSIFICATION	set up list of potential targets and enable listener
WITHOUT_CLASSIFICATION	.equals caused npe
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	record headers size to allow httpsampleresult.getbytes() with different options $non-nls-1$ $non-nls-2$ add 2 for a '\r\n' at end of headers (before data)
WITHOUT_CLASSIFICATION	a well-bahaved browser is supposed to send 'connection close' with the last request to an http server. instead most browsers leave it to the server to close the connection after their timeout period. leave it to the jmeter user to decide.
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	one space for blank header $non-nls-1$ one space for blank header $non-nls-1$
WITHOUT_CLASSIFICATION	a well-behaved browser is supposed to send 'connection close' with the last request to an http server. instead most browsers leave it to the server to close the connection after their timeout period. leave it to the jmeter user to decide.
WITHOUT_CLASSIFICATION	process apache httpclient parameters file $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	in a post request which is not multipart we only support parameters no file upload is allowed
WITHOUT_CLASSIFICATION	embedded urls must match this re (if provided) $non-nls-1$
WITHOUT_CLASSIFICATION	mark walsh 2002-08-03 modified to also parse a parameter name value string where string contains only the parameter name and no equal sign.
WITHOUT_CLASSIFICATION	check if the header manager had a content type header this allows the user to specify his own content-type for a put request
WITHOUT_CLASSIFICATION	if the multipart is repeatable we can send it first to our own stream without the actual file content so we can return it
WITHOUT_CLASSIFICATION	headermanager was set so let's set the connection to use it.
WITHOUT_CLASSIFICATION	we call parse with 1 to get only one. this also means if we change the implementation to use 2 it would use every other entry and so on. not that it is really useful but a person could use it that way if they have a huge gigabyte log file and they only want to use a quarter of the entries.
WITHOUT_CLASSIFICATION	the document should only have one service node if it doesn't it may not work!
WITHOUT_CLASSIFICATION	new wsdlhelper("httplocalhost/wstest/wstest.asmx?wsdl") new wsdlhelper("httplocalhost/axiswsdl.xml") new wsdlhelper("httplocalhost8080/wsmyupper.wsdl") new wsdlhelper("httplocalhost8080/test.wsdl")
WITHOUT_CLASSIFICATION	read one line at a time using bufferedreader
WITHOUT_CLASSIFICATION	there's little point saving the manager between invocations as we need to reset most of the beans anyway
WITHOUT_CLASSIFICATION	/ only do the calculation if it is needed
WITHOUT_CLASSIFICATION	a callablestatement can return more than 1 resultsets plus a number of update counts.
WITHOUT_CLASSIFICATION	++ do not change these strings they are used in jmx files to record the button settings $non-nls-1$
WITHOUT_CLASSIFICATION	timeouts not active how much left
WITHOUT_CLASSIFICATION	needs to be accessible from test code only contains ldapargument entries
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	the default is false so we can remove the property to simplify jmx files this also allows httpdefaults to work for this checkbox
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	++ for testbean implementations only passed to file or script
WITHOUT_CLASSIFICATION	put a warning if tika-app.jar missing (or some dependencies in only tika-core|parsers packages are using) $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	resource keys cannot contain spaces and are forced to lower case $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	can occur at run-time could be caused by the bsh exceptions evalerror parseexception or targeterror
WITHOUT_CLASSIFICATION	errorlogging and successonlylogging are mutually exclusive $non-nls-1$
WITHOUT_CLASSIFICATION	a testbean is a java bean. just define some properties and they will automagically show up in the gui. a string property
WITHOUT_CLASSIFICATION	only try to format if there is a number
WITHOUT_CLASSIFICATION	requires java 7 $non-nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$ don't match the empty category
WITHOUT_CLASSIFICATION	if a table cell is being edited we should accept the current value and stop the editing before adding a new row.
WITHOUT_CLASSIFICATION	read the header part we will be looking for a content-length header so we know how much we should read. we assume headers are in iso_8859_1 if we do not find such a header we will just have to read until we have to block to read more until we support chunked transfer
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	request validation $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ no point trying these
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	+ jmx file attributes $non-nls-1$
WITHOUT_CLASSIFICATION	this is not the result of a redirect so break the chain
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	+ jmx attributes - do not change the values $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	did sample succeed?
WITHOUT_CLASSIFICATION	requires javamail 1.4.2+
WITHOUT_CLASSIFICATION	requires javamail 1.4.2+
WITHOUT_CLASSIFICATION	requires javamail 1.4.2+
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	no need to log normally as we set the status $non-nls-1$
WITHOUT_CLASSIFICATION	no need to log normally as we set the status $non-nls-1$
WITHOUT_CLASSIFICATION	not been set by any child samples
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	throws me
WITHOUT_CLASSIFICATION	throws me
WITHOUT_CLASSIFICATION	tfmailfrom.setenabled(false) tfmailto.setenabled(false) tfmailtocc.setenabled(false) tfmailtobcc.setenabled(false) tfsubject.setenabled(false)
WITHOUT_CLASSIFICATION	++jmx attribute names - do not change the values! these were moved from smtpsampler which is why the prefix is still smtsampler $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ --jmx attribute names
WITHOUT_CLASSIFICATION	for completeness
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ default is not in range of a byte
WITHOUT_CLASSIFICATION	programming error bail out.
WITHOUT_CLASSIFICATION	if we are disabling the edit-->remove menu item and the edit-->add menu item is disabled then we also need to disable the edit menu. the java look and feel guidelines say to disable a menu if all menu items are disabled.
WITHOUT_CLASSIFICATION	set default save menu item to disabled since the default node that is selected is root which does not allow items to be inserted.
WITHOUT_CLASSIFICATION	we add the entry
WITHOUT_CLASSIFICATION	we should make this configurable eventually
WITHOUT_CLASSIFICATION	we clean up the resultcollector to make sure there's no slow leaks
WITHOUT_CLASSIFICATION	just like the aggregate listener we use the sample label to represent a row. in this case we use it as a key.
WITHOUT_CLASSIFICATION	check that optional args work woth long options
WITHOUT_CLASSIFICATION	separate argument
WITHOUT_CLASSIFICATION	assume default charset is ok here <apache-bsf.version>2.4.0</apache-bsf.version>
WITHOUT_CLASSIFICATION	used to be 'dábale' but caused trouble on gump. reasons unknown.
WITHOUT_CLASSIFICATION	this would be done by the run command
WITHOUT_CLASSIFICATION	result.setresponsedata - not set
WITHOUT_CLASSIFICATION	expected results established using the dda algorithm (see httpwww.siggraph.org/education/materials/hypergraph/scanline/outprims/drawline.htm) 0/1 vs. 1/1 -> 0 is closer to 33.33 0/2 vs. 1/2 -> 50.0 is closer to 33.33 1/3 vs. 2/3 -> 33.33 is closer to 33.33 1/4 vs. 2/4 -> 25.0 is closer to 33.33 1/5 vs. 2/5 -> 40.0 is closer to 33.33 2/6 vs. 3/6 -> 33.33 is closer to 33.33
WITHOUT_CLASSIFICATION	genericcontroller controller = new genericcontroller() genericcontroller sub_1 = new genericcontroller() sub_1.addtestelement(new ifcontroller("10<100")) sub_1.addtestelement(new ifcontroller("true==false")) controller.addtestelement(sub_1) controller.addtestelement(new ifcontroller("false==false")) ifcontroller sub_2 = new ifcontroller() sub_2.setcondition( "10<10000") genericcontroller sub_3 = new genericcontroller() sub_2.addtestelement(new ifcontroller( " \"a\".equals(\"a\")" ) ) sub_3.addtestelement(new ifcontroller("2>100")) sub_3.addtestelement(new ifcontroller("false==true")) sub_2.addtestelement(sub_3) sub_2.addtestelement(new ifcontroller("2==3")) controller.addtestelement(sub_2)
WITHOUT_CLASSIFICATION	get next sample and its name
WITHOUT_CLASSIFICATION	match by name
WITHOUT_CLASSIFICATION	match by name
WITHOUT_CLASSIFICATION	simple test with single selection controller generic controller + sampler "before" + switch controller + + sampler "zero" + + sampler "one" + + sampler "two" + + sampler "three" + sampler "after"
WITHOUT_CLASSIFICATION	generic controller - before - while controller ${var} - - one - - two - - simple controller - - - three - - - four - after
WITHOUT_CLASSIFICATION	onlyonce samples
WITHOUT_CLASSIFICATION	onlyonce samples
WITHOUT_CLASSIFICATION	outer sample
WITHOUT_CLASSIFICATION	sample in inner loop
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	the outer sample and the inner loop samples
WITHOUT_CLASSIFICATION	onlyonce inside inner loop
WITHOUT_CLASSIFICATION	test to show current problem with interleavecontroller i am not sure if the expected order of the samples below are correct because i am not sure if it is properly defined how the interleavecontroller and onlyoncecontroller should function.
WITHOUT_CLASSIFICATION	n.b. backslashes are removed before dollar comma and backslash
WITHOUT_CLASSIFICATION	log.debug("domain property = " + element.getproperty("domain"))
WITHOUT_CLASSIFICATION	check old values don't hang around fewer matches
WITHOUT_CLASSIFICATION	same as parent
WITHOUT_CLASSIFICATION	create the csvread function and set its parameters.
WITHOUT_CLASSIFICATION	check init file functioning
WITHOUT_CLASSIFICATION	restarts
WITHOUT_CLASSIFICATION	col 1 line 1 a
WITHOUT_CLASSIFICATION	col2 line 1 b
WITHOUT_CLASSIFICATION	check blank lines are treated as eof
WITHOUT_CLASSIFICATION	myrow = f.nextrow() assertequals(0myrow) assertequals(1f.getnextrow())
WITHOUT_CLASSIFICATION	use different xpath for both threads
WITHOUT_CLASSIFICATION	wrap-round check
WITHOUT_CLASSIFICATION	perform a sum and check the results
WITHOUT_CLASSIFICATION	template match number all separator
WITHOUT_CLASSIFICATION	template match number all separator
WITHOUT_CLASSIFICATION	template match number all separator
WITHOUT_CLASSIFICATION	template match number all separator
WITHOUT_CLASSIFICATION	template match number all separator
WITHOUT_CLASSIFICATION	template match number all separator
WITHOUT_CLASSIFICATION	template match number all separator
WITHOUT_CLASSIFICATION	template match number all separator
WITHOUT_CLASSIFICATION	template match number all separator
WITHOUT_CLASSIFICATION	extract titles from component_reference.xml
WITHOUT_CLASSIFICATION	test gui elements - create the suite of tests
WITHOUT_CLASSIFICATION	skip report packages as implementation is incomplete skip report gui as implementation is incomplete no not a work in progress
WITHOUT_CLASSIFICATION	test testelements - create the suite
WITHOUT_CLASSIFICATION	events often have this constructor
WITHOUT_CLASSIFICATION	no luck. ignore this class
WITHOUT_CLASSIFICATION	if not running under alltests.java make sure that the properties (and log file) are set up correctly. n.b. in order for this to work correctly the junit test must be started in the bin directory and all the jmeter jars (plus any others needed at run-time) need to be on the classpath.
WITHOUT_CLASSIFICATION	display actual encoding used (will differ if file.encoding is not recognised)
WITHOUT_CLASSIFICATION	test new cookie is returned
WITHOUT_CLASSIFICATION	ensure policy is picked up
WITHOUT_CLASSIFICATION	ensure policy is picked up
WITHOUT_CLASSIFICATION	write to the socket
WITHOUT_CLASSIFICATION	write to the socket
WITHOUT_CLASSIFICATION	write to the socket
WITHOUT_CLASSIFICATION	headers
WITHOUT_CLASSIFICATION	read the response
WITHOUT_CLASSIFICATION	read the response
WITHOUT_CLASSIFICATION	close the connection
WITHOUT_CLASSIFICATION	the content sent
WITHOUT_CLASSIFICATION	write the headers and then sleep
WITHOUT_CLASSIFICATION	connect to the http server and do a simple http post with utf-8 encoding of the body which caused problems when reader/writer classes were used in the httpmirrorthread
WITHOUT_CLASSIFICATION	the response includes the headers from the mirror server we want to skip those to only keep the content mirrored. look for the first crlfcrlf section
WITHOUT_CLASSIFICATION	can't instantiate
WITHOUT_CLASSIFICATION	test if can instantiate parser using property name
WITHOUT_CLASSIFICATION	check arguments
WITHOUT_CLASSIFICATION	check arguments
WITHOUT_CLASSIFICATION	check arguments
WITHOUT_CLASSIFICATION	check arguments
WITHOUT_CLASSIFICATION	check arguments
WITHOUT_CLASSIFICATION	check arguments
WITHOUT_CLASSIFICATION	check arguments
WITHOUT_CLASSIFICATION	check arguments
WITHOUT_CLASSIFICATION	check arguments
WITHOUT_CLASSIFICATION	check arguments
WITHOUT_CLASSIFICATION	check arguments
WITHOUT_CLASSIFICATION	check arguments
WITHOUT_CLASSIFICATION	check arguments
WITHOUT_CLASSIFICATION	check arguments
WITHOUT_CLASSIFICATION	check arguments
WITHOUT_CLASSIFICATION	check arguments we should have one argument with the value equal to the post body
WITHOUT_CLASSIFICATION	use null for url and contentencoding to simulate that httprequesthdr do not know the encoding for the page
WITHOUT_CLASSIFICATION	use null for url and contentencoding to simulate that httprequesthdr do not know the encoding for the page
WITHOUT_CLASSIFICATION	when the encoding is not known the argument will get the encoded value and the "encode?" set to false
WITHOUT_CLASSIFICATION	a http post request multipart/form-data simple values with \n as end of line which should also be handled and with more headers in each multipart
WITHOUT_CLASSIFICATION	create the test file content
WITHOUT_CLASSIFICATION	create a temporary file to make sure we always have a file to give to the postwriter whereever we are or whatever the current path is.
WITHOUT_CLASSIFICATION	test method for 'org.apache.jmeter.protocol.http.sampler.postwriter.sendpostdata(urlconnection httpsampler)' this method test sending a request which contains both formdata and file content
WITHOUT_CLASSIFICATION	test sending data with default encoding
WITHOUT_CLASSIFICATION	test sending data with default encoding
WITHOUT_CLASSIFICATION	test sending data with default encoding
WITHOUT_CLASSIFICATION	test sending data with default encoding
WITHOUT_CLASSIFICATION	test sending data with default encoding
WITHOUT_CLASSIFICATION	test sending data with default encoding
WITHOUT_CLASSIFICATION	test sending data as iso-8859-1
WITHOUT_CLASSIFICATION	test sending data as utf-8
WITHOUT_CLASSIFICATION	test sending data as utf-8
WITHOUT_CLASSIFICATION	test method for 'org.apache.jmeter.protocol.http.sampler.postwriter.setheaders(urlconnection httpsampler)'
WITHOUT_CLASSIFICATION	create the multiparts
WITHOUT_CLASSIFICATION	test sending data as utf-8 with values that have been urlencoded
WITHOUT_CLASSIFICATION	test sending data as utf-8 with values that have been urlencoded
WITHOUT_CLASSIFICATION	test sending data as utf-8 with values similar to __viewstate parameter that .net uses with values urlencoded but the always encode set to false for the arguments this is how the http proxy server adds arguments to the sampler
WITHOUT_CLASSIFICATION	test sending data as utf-8 where user defined variables are used to set the value for form data
WITHOUT_CLASSIFICATION	test sending data as utf-8 where user defined variables are used to set the value for form data
WITHOUT_CLASSIFICATION	check url
WITHOUT_CLASSIFICATION	check url
WITHOUT_CLASSIFICATION	check url
WITHOUT_CLASSIFICATION	check url
WITHOUT_CLASSIFICATION	check request headers
WITHOUT_CLASSIFICATION	find the data sent to the mirror server which the mirror server is sending back to us
WITHOUT_CLASSIFICATION	check post body which was sent to the mirror server and sent back by the mirror server
WITHOUT_CLASSIFICATION	check post body which was sent to the mirror server and sent back by the mirror server
WITHOUT_CLASSIFICATION	check method path and query sent
WITHOUT_CLASSIFICATION	cannot check the query string of the result because the mirror server replies without including query string in url
WITHOUT_CLASSIFICATION	show that can bypass encoding
WITHOUT_CLASSIFICATION	set the required variables
WITHOUT_CLASSIFICATION	test invalid byte arrays
WITHOUT_CLASSIFICATION	ensure properties files don't use special characters
WITHOUT_CLASSIFICATION	now check for invalid message format if string contains {0} and ' there may be a problem so do a format with dummy parameters and check if there is a { in the output. a bit crude but should be enough for now.
WITHOUT_CLASSIFICATION	original and clone should be equal
WITHOUT_CLASSIFICATION	change the original
WITHOUT_CLASSIFICATION	check sample increments ok
WITHOUT_CLASSIFICATION	check sample increments ok
WITHOUT_CLASSIFICATION	check sample increments ok
WITHOUT_CLASSIFICATION	check sample increments ok
WITHOUT_CLASSIFICATION	parent elapsed total should be no smaller than the sum of the individual samples. it may be greater by the timer granularity.
WITHOUT_CLASSIFICATION	test files for testloadandsave output will generally be different in size but same number of lines
WITHOUT_CLASSIFICATION	note this test will fail if a property is added or removed to any of the components used in the test files. the way to solve this is to appropriately change the test file.
WITHOUT_CLASSIFICATION	test code intentional
WITHOUT_CLASSIFICATION	test code intentional
WITHOUT_CLASSIFICATION	test code intentional
WITHOUT_CLASSIFICATION	p.add(makemainpanel() borderlayout.center) force a minimum table height of 70 pixels
WITHOUT_CLASSIFICATION	check reflexive
WITHOUT_CLASSIFICATION	this is not a requirement
WITHOUT_CLASSIFICATION	this is not a requirement
WITHOUT_CLASSIFICATION	assertequals("t1"f1.invoke())
WITHOUT_CLASSIFICATION	assertequals("1aaa."f1.invoke()) n.b. returns different result from before
WITHOUT_CLASSIFICATION	++ gui tests throw the error testargumentcreation(org.apache.jmeter.config.gui.argumentspanel$test)java.lang.noclassdeffounderror at java.lang.class.forname0(native method) at java.lang.class.forname(class.java141) at java.awt.graphicsenvironment.getlocalgraphicsenvironment(graphicsenvironment.java62) try to find out why this is
WITHOUT_CLASSIFICATION	externally callable suite() method for use by junit allows tests to be run directly under junit rather than using the startup code in the rest of the module. no parameters can be passed in so it is less flexible.
WITHOUT_CLASSIFICATION	testsuite only finds testxxx() methods and does not look for suite() methods. to provide more compatibilty with stand-alone tests where junit does look for a suite() method check for it first here.
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ modal dialog box
WITHOUT_CLASSIFICATION	$non-nls-1$ return unknown action names for display error msg
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	set up some objects for the script to play with $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ previously mis-spelt as theadname $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	for omitted file names $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	desc.add("use fully qualified host name true/false (default false)") $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	names of junit3 methods $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	leave header as is headerbuf.append(conn.getheaderfield(0).substring(0 8)) headerbuf.append(" ") headerbuf.append(conn.getresponsecode()) headerbuf.append(" ") headerbuf.append(conn.getresponsemessage()) $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	otherwise the response is scanned for these strings $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	allow access to context and variables directly $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$ $non-nls-1$
WITHOUT_CLASSIFICATION	can be specified in jmeter.properties $non-nls-1$
WITHOUT_CLASSIFICATION	these names must agree case-wise with the variable and property names $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	can be specified in jmeter.properties $non-nls-1$
WITHOUT_CLASSIFICATION	add variables for access to context and variables $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	identifiers $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ default normal
WITHOUT_CLASSIFICATION	$non-nls-1$ test can't have a duration more than 2^31 secs (cast from long to int)
WITHOUT_CLASSIFICATION	default sans serif $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	default normal $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	default sans serif $non-nls-1$
WITHOUT_CLASSIFICATION	default 16 $non-nls-1$
WITHOUT_CLASSIFICATION	default sans serif $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	change cancel label to close $non-nls-1$
WITHOUT_CLASSIFICATION	default for writing$non-nls-1$
WITHOUT_CLASSIFICATION	only encode strings if outversion = 1.0 $non-nls-1$
WITHOUT_CLASSIFICATION	element tags. must be unique. keep sorted. $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	+ jmx field names - do not change values $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	regex $non-nls-1$ template $non-nls-1$ which match $non-nls-1$ between text $non-nls-1$ default text $non-nls-1$ output variable name $non-nls-1$ input variable $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ previously mis-spelt as theadname $non-nls-1$ $non-nls-1$ (may be null) $non-nls-1$ (may be null) $non-nls-1$
WITHOUT_CLASSIFICATION	function name $non-nls-1$
WITHOUT_CLASSIFICATION	process __csvread(filenamealias) $non-nls-1$
WITHOUT_CLASSIFICATION	if argument is 'next' - go to the next line $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ we have a default
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ previously mis-spelt as theadname $non-nls-1$ $non-nls-1$ (may be null) $non-nls-1$ (may be null) $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	ensure that these are set even if no paramters are provided $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ change the classname drop down
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	don't make these static otherwise language change does not work $non-nls-1$
WITHOUT_CLASSIFICATION	notused font plaintext = new font("plain" font.plain 9) these must not be static otherwise language change does not work $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ check if it is form data $non-nls-1$ get the form field name $non-nls-1$
WITHOUT_CLASSIFICATION	check if it is a file being uploaded $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ see testelementpropertyconverter
WITHOUT_CLASSIFICATION	look for special response length header $non-nls-1$
WITHOUT_CLASSIFICATION	look for special response length header $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	look for special cookie request $non-nls-1$
WITHOUT_CLASSIFICATION	check if we have found a content-length header $non-nls-1$
WITHOUT_CLASSIFICATION	look for special sleep request $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ resource name
WITHOUT_CLASSIFICATION	$non-nls-1$ resource name
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$$non-nls-2$
WITHOUT_CLASSIFICATION	cookie $non-nls-1$
WITHOUT_CLASSIFICATION	list of parsers $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$$non-nls-2$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	obtain message formats $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	independent frame to allow it to be overlaid by the main frame $non-nls-1$
WITHOUT_CLASSIFICATION	needed by abstracttestelement. also testelementconverter and testelementpropertyconverter for handling empty comments $non-nls-1$ n.b. comments originally only applied to test plans hence the name - which can now not be easily changed
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	value to return at eof $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	add variables for access to context and variables $non-nls-1$
WITHOUT_CLASSIFICATION	default 16 $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	default 3.0f $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ default bottom $non-nls-1$
WITHOUT_CLASSIFICATION	default sans serif $non-nls-1$
WITHOUT_CLASSIFICATION	default 10 $non-nls-1$
WITHOUT_CLASSIFICATION	tabbed results fill table $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	set the title for the first tab $non-nls-1$ add the other tabs if not present $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	fields table $non-nls-1$ not sure needs i18n? $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ select last tab
WITHOUT_CLASSIFICATION	setup bottom tabs first raw second parsed $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	can be specified in jmeter.properties $non-nls-1$
WITHOUT_CLASSIFICATION	should header be saved with the data? $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	label count mean median 90% min max error %age $non-nls-1$ throughput $non-nls-1$ pagesize $non-nls-1$
WITHOUT_CLASSIFICATION	default 10 $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ default bottom $non-nls-1$
WITHOUT_CLASSIFICATION	default sans serif $non-nls-1$
WITHOUT_CLASSIFICATION	default 10 $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	add local system properties if the file is found $non-nls-1$
WITHOUT_CLASSIFICATION	add local jmeter properties if the file is found $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	hide window on esc $non-nls-1$
WITHOUT_CLASSIFICATION	do search on enter $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ file_merge.setaccelerator( keystroke.getkeystroke(keyevent.vk_o keyevent.ctrl_mask)) set default save menu item to disabled since the default node that is selected is root which does not allow items to be inserted.
WITHOUT_CLASSIFICATION	$non-nls-1$ set default save menu item to disabled since the default node that is selected is root which does not allow items to be inserted.
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	search menu $non-nls-1$
WITHOUT_CLASSIFICATION	no must be csv $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ (flash media manifest)
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	attributes for testelement and testelementproperty must all be unique $non-nls-1$ also used by propertyconverter classes $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	not used protected static final string tag_url = "requesturl" $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	samplerdata attributes. must be unique. keep sorted by string value. ensure the listener documentation is updated when new attributes are added $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	n.b. originally the response code was saved with the code "rs" but retrieved with the code "rc". changed to always use "rc" but allow for "rs" when restoring values. $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	needs to be visible to test cases $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ add variables for access to context and variables
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ ensure variable has been provided
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	otherwise we use "text/xml" as the default $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	could time this res.sampleend() if sampleend() is not called elapsed time will remain zero todo distinguish errors better $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ - all threads all threads
WITHOUT_CLASSIFICATION	$non-nls-1$ -- end of names used in jmx files
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	package access for use by test code $non-nls-1$
WITHOUT_CLASSIFICATION	set the title for the first tab $non-nls-1$ remove the other tabs if present $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-2$ $non-nls-3$ $non-nls-1$
WITHOUT_CLASSIFICATION	public final static string connection = "mongosourceelement.connection" $non-nls-1$ public final static string source = "mongosourceelement.source" $non-nls-1$ public final static string auto_connect_retry = "mongosourceelement.autoconnectretry" $non-nls-1$ public final static string connections_per_host = "mongosourceelement.connectionsperhost" $non-nls-1$ public final static string connect_timeout = "mongosourceelement.connecttimeout" $non-nls-1$ public final static string continue_on_insert_error = "mongosourceelement.continueoninserterror" $non-nls-1$ public final static string max_auto_connect_retry_time = "mongosourceelement.maxautoconnectretrytime" $non-nls-1$ public final static string max_wait_time = "mongosourceelement.maxwaittime" $non-nls-1$ public final static string socket_timeout = "mongosourceelement.sockettimeout" $non-nls-1$ public final static string socket_keep_alive = "mongosourceelement.socketkeepalive" $non-nls-1$ public final static string threads_allowed_to_block_multiplier = "mongosourceelement.threadsallowedtoblockforconnectionmultiplier" $non-nls-1$ public final static string fsync = "mongosourceelement.fsync" $non-nls-1$ public final static string safe = "mongosourceelement.safe" $non-nls-1$ public final static string wait_for_journaling = "mongosourceelement.waitforjournaling" $non-nls-1$ public final static string write_operation_number_of_servers = "mongosourceelement.writeoperationnumberofservers" $non-nls-1$ public final static string write_operation_timeout = "mongosourceelement.writeoperationtimeout" $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.http.conn.ssl.sslsocketfactory#createlayeredsocket(java.net.socket java.lang.string int boolean)
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.protocol.http.util.accesslog.logfilter#excpattern(java.lang.string)
WITHOUT_CLASSIFICATION	(non-javadoc) a new instance is created for each thread group and the clone() method is then called to create copies for each thread in a thread group. this means that the lock object is common to a thread group separate thread groups have separate locks. if this is not intended the lock object could be made static. @see java.lang.object#clone()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.visualizers.request.requestview#setsamplerresult(java.lang.object)
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.visualizers.request.requestview#getpanel()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.visualizers.request.requestview#getlabel()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.visualizers.samplerresulttab#cleardata()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.log.logtarget#processevent(org.apache.log.logevent)
WITHOUT_CLASSIFICATION	this is required so that @see org.apache.jmeter.gui.tree.jmetertreemodel.getnodesoftype() can find the clearable nodes - the userobject has to implement the interface.
WITHOUT_CLASSIFICATION	n.b. originally called clear() @see also jmeterguicomponent
WITHOUT_CLASSIFICATION	for unit tests @see testcsvsaveservice
WITHOUT_CLASSIFICATION	@see getstaticlabel
WITHOUT_CLASSIFICATION	(non-javadoc) @see javax.swing.jtabbedpane#setselectedindex(int)
WITHOUT_CLASSIFICATION	(non-javadoc) @see jodd.lagarto.emptytagvisitor#script(jodd.lagarto.tag java.lang.charsequence)
WITHOUT_CLASSIFICATION	(non-javadoc) @see jodd.lagarto.emptytagvisitor#tag(jodd.lagarto.tag)
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.protocol.http.parser.htmlparser#isreusable()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.protocol.http.parser.htmlparser#isreusable()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.xml.sax.helpers.defaulthandler#error(org.xml.sax.saxparseexception)
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.xml.sax.helpers.defaulthandler#fatalerror(org.xml.sax.saxparseexception)
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.protocol.http.sampler.httpsamplerbase#testended()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.protocol.http.sampler.httpsamplerbase#testended(java.lang.string)
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.protocol.http.sampler.httpsamplerbase#testiterationstart(org.apache.jmeter.engine.event.loopiterationevent)
WITHOUT_CLASSIFICATION	@see mergefileproperties must be private as the file list needs special handling $non-nls-1$ mimetype is kept for backward compatibility with old test plans $non-nls-1$ file_name is kept for backward compatibility with old test plans $non-nls-1$
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.http.conn.ssl.sslsocketfactory#createsocket(org.apache.http.params.httpparams)
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.visualizers.request.requestview#setsamplerresult(java.lang.object)
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.visualizers.request.requestview#getlabel()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.gui.abstractjmeterguicomponent#cleargui()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.util.localechangelistener#localechanged(org.apache.jmeter.util.localechangeevent)
WITHOUT_CLASSIFICATION	(non-javadoc) @see java.lang.runnable#run()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.report.engine.reportengine#configure(org.apache.jorphan.collections.hashtree)
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.report.engine.reportengine#runreport()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.report.engine.reportengine#stopreport()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.report.engine.reportengine#reset()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.report.engine.reportengine#exit()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.gui.jmeterguicomponent#getlabelresource()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.gui.jmeterguicomponent#createpopupmenu()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.gui.jmeterguicomponent#getmenucategories()
WITHOUT_CLASSIFICATION	@see org.apache.jmeter.report.gui.action.command#getactionnames()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.report.writers.pagesummary#getfilename()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.report.writers.pagesummary#getpagetitle()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.report.writers.pagesummary#issuccessful()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.report.writers.pagesummary#pagestarted()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.report.writers.pagesummary#pageended()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.report.writers.pagesummary#setfilename(java.lang.string)
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.report.writers.pagesummary#setpagetitle(java.lang.string)
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.report.writers.pagesummary#setsuccessful(boolean)
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.gui.jmeterguicomponent#createtestelement()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.gui.jmeterguicomponent#modifytestelement(org.apache.jmeter.testelement.testelement)
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.testelement.teststatelistener#testended()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.testelement.teststatelistener#testended(java.lang.string)
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.testelement.teststatelistener#teststarted()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.testelement.teststatelistener#teststarted(java.lang.string)
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.protocol.http.sampler.httpsamplerbase#testiterationstart(org.apache.jmeter.engine.event.loopiterationevent)
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ so we can add them again in init
WITHOUT_CLASSIFICATION	independent frame to allow it to be overlaid by the main frame $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$$non-nls-2$
WITHOUT_CLASSIFICATION	run menu $non-nls-1$
WITHOUT_CLASSIFICATION	edit menu $non-nls-1$
WITHOUT_CLASSIFICATION	file menu $non-nls-1$
WITHOUT_CLASSIFICATION	protected fields jmetertoolbar class can be use to create another toolbar (plugin etc.) $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	reuse documentation $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ resource name
WITHOUT_CLASSIFICATION	$non-nls-1$ resource name
WITHOUT_CLASSIFICATION	$non-nls-1$ resource name
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	the following are used to set the result details on return from the script $non-nls-1$ $non-nls-2$ $non-nls-1$
WITHOUT_CLASSIFICATION	add samplerdata for consistency with beanshell sampler $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	add alias for original stringfromfile name (had only one underscore) $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	functions are wrapped in ${ and } $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$$non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	the headers are written using iso_8859_1 encoding $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ we only support chunked transfer encoding
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ resource name
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$$non-nls-2$$non-nls-3$ $non-nls-1$
WITHOUT_CLASSIFICATION	allow headers to override host setting $non-nls-1$ host
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	revert
WITHOUT_CLASSIFICATION	revert to previous behaviour $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	not a real sampler
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	if we still can't find it just try using all of the text
WITHOUT_CLASSIFICATION	method called by add is synchronized this is a different model from the one used by the result collector
WITHOUT_CLASSIFICATION	we are displaying an assertionresult
WITHOUT_CLASSIFICATION	creates one of the fields used to display the graph's current values. @param color the color used to draw the value. by convention this is the same color that is used to draw the graph for this value and in the choose panel. @param length the number of digits which the field should be able to display @return a text field configured to display one of the current graph values private jtextfield createinfofield(color color int length) { jtextfield field = new jtextfield(length) field.setborder(borderfactory.createemptyborder(0 0 0 0)) field.seteditable(false) field.setforeground(color) field.setbackground(getbackground()) the text field should expand horizontally but have a fixed height field.setmaximumsize(new dimension( field.getmaximumsize().width field.getpreferredsize().height)) return field }
WITHOUT_CLASSIFICATION	allow functions etc to register for teststopped notification. only used by the function parser so far. the list is merged with the testlisteners and then cleared.
WITHOUT_CLASSIFICATION	insert the workbench node
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ look and feel prefix $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ enable/disable $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	we stay within the same parent node
WITHOUT_CLASSIFICATION	we stay within the same parent node
WITHOUT_CLASSIFICATION	get the preference for the recent files
WITHOUT_CLASSIFICATION	get the preference for the recent files
WITHOUT_CLASSIFICATION	find and set the file for this recent file command
WITHOUT_CLASSIFICATION	check if laf is a built-in one
WITHOUT_CLASSIFICATION	using index 0 is voluntary as child is removed in next step and added to new parent
WITHOUT_CLASSIFICATION	or a treenode from the same tree
WITHOUT_CLASSIFICATION	extract transfer data.
WITHOUT_CLASSIFICATION	insert a clone of the node the original one will be removed by the exportdone method the children are not cloned but moved to the cloned node working on the original node would be harder as you'll have to deal with the insertion index offset if you re-order a node inside a parent
WITHOUT_CLASSIFICATION	the following array must agree with dateformat it is used to translate the positions in the buffer to the values used by the calendar class for the field id. current format mm/dd/yyyy hhmmss 01234567890123456789 ^buffer positions
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	used by samplesaveconfigurationconverter.unmarshall()
WITHOUT_CLASSIFICATION	note that samplestarted() and samplestopped() is not made to appear in synch with sampleoccured() when replaying held samples. for now this is not critical since samplestarted() and samplestopped() is not used but it may become an issue in the future. then these events must also be stored so that replay of all events may occur and in the right order. each stored event must then be tagged with something that lets you distinguish between occured started and ended.
WITHOUT_CLASSIFICATION	allow testresultwrapper to feed back the samples this is effectively the same as saver.fromxml(inputstream) except we get to provide the dataholder don't know why there is no method for this in the xstream class
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	n.b. default charset is used deliberately here
WITHOUT_CLASSIFICATION	catch errors and rethrow as conversionexception so we get location details
WITHOUT_CLASSIFICATION	version information for test plan header this is written to jmx files by scriptwrapperconverter also to jtl files by resultcollector $non-nls-1$
WITHOUT_CLASSIFICATION	for converters to use
WITHOUT_CLASSIFICATION	get the outputwriter to use
WITHOUT_CLASSIFICATION	use deprecated method to avoid duplicating code
WITHOUT_CLASSIFICATION	get the inputreader to use
WITHOUT_CLASSIFICATION	get the inputreader to use
WITHOUT_CLASSIFICATION	normal output ---- debugging information ---- required-type org.apache.jorphan.collections.listedhashtree cause-message webservicesampler webservicesampler class org.apache.jmeter.save.scriptwrapper message webservicesampler webservicesampler line number 929 path /jmetertestplan/hashtree/hashtree/hashtree[4]/hashtree[5]/webservicesampler cause-exception com.thoughtworks.xstream.alias.cannotresolveclassexception -------------------------------
WITHOUT_CLASSIFICATION	--------------------------------------------------------------------- xml result file constants and field name constants ---------------------------------------------------------------------
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	it is the sub sampler of the transaction that will be sampled
WITHOUT_CLASSIFICATION	n.b. this is only called at the start and end of a thread so there is not necessary to cache the search results thus saving memory
WITHOUT_CLASSIFICATION	if parent is ok but child failed add a message and flag the parent as failed
WITHOUT_CLASSIFICATION	private static configuration getconfiguration(assertionresult assresult) { defaultconfiguration config = new defaultconfiguration(assertion_result_tag_name "jmeter save service") config.setattribute(failure_message assresult.getfailuremessage()) config.setattribute(error "" + assresult.iserror()) config.setattribute(failure "" + assresult.isfailure()) return config }
WITHOUT_CLASSIFICATION	see if this works it did not let's try some other formats
WITHOUT_CLASSIFICATION	both these are needed in the list even though they set the same variable
WITHOUT_CLASSIFICATION	class to handle generating the delimited string. - adds the delimiter if not the first call - quotes any strings that require it
WITHOUT_CLASSIFICATION	<p> returns a <code>string</code> value for a character-delimited column value enclosed in the quote character if required. </p> <p> if the value contains a special character then the string value is returned enclosed in the quote character. </p> <p> any quote characters in the value are doubled up. </p> <p> if the value does not contain any special characters then the string value is returned unchanged. </p> <p> n.b. the list of special characters includes the quote character. </p> @param input the input column string may be null (without enclosing delimiters) @param specialchars special characters second one must be the quote character @return the input string enclosed in quote characters if the value contains a special character <code>null</code> for null string input
WITHOUT_CLASSIFICATION	read first line and forget
WITHOUT_CLASSIFICATION	read first line and forget
WITHOUT_CLASSIFICATION	obtain a value of the appropriate type for this property.
WITHOUT_CLASSIFICATION	use negative condition so missing (null) value is treated as false
WITHOUT_CLASSIFICATION	the default class convert int to integer etc
WITHOUT_CLASSIFICATION	might be null (e.g. in testing)
WITHOUT_CLASSIFICATION	true iff we're currently processing an event triggered by the user selecting the "edit" option. used to prevent reverting the combo to non-editable during processing of secondary events.
WITHOUT_CLASSIFICATION	programming error. don't continue.
WITHOUT_CLASSIFICATION	creation of the customizer and gui initialization is delayed until the first configure call. we don't need all that just to find out the static label menu categories etc!
WITHOUT_CLASSIFICATION	<p> super-class for testelements that can be applied to main sample sub-samples or both. [assertions use a different class because they use a different value for the {@link #getscopename()} constant] </p> <p> their corresponding gui classes need to add the scopepanel to the gui using the abstractxxxgui methods <ul> <li>createscopepanel()</li> <li>savescopesettings()</li> <li>showscopesettings()</li> </ul> </p>
WITHOUT_CLASSIFICATION	testbeanhelper.prepare() is ok
WITHOUT_CLASSIFICATION	trigger end of loop condition on all parent controllers of current sampler
WITHOUT_CLASSIFICATION	ok to call testbeanhelper.prepare()
WITHOUT_CLASSIFICATION	ok to call testbeanhelper.prepare()
WITHOUT_CLASSIFICATION	ok to call testbeanhelper.prepare()
WITHOUT_CLASSIFICATION	original (rather odd) behaviour start at the end
WITHOUT_CLASSIFICATION	property names to preload into jmeter variables
WITHOUT_CLASSIFICATION	list of active threads
WITHOUT_CLASSIFICATION	set the endtime for the thread duration is in seconds
WITHOUT_CLASSIFICATION	n.b. we don't wait for the thread to complete as that would prevent parallel tgs
WITHOUT_CLASSIFICATION	for example jarfile/jmeter/lib/ext/apachejmeter_core.jar!/org/apache/jmeter/util/jmeterversion.class or if using an ide file/workspaces/jmeter/build/core/org/apache/jmeter/util/jmeterversion.class
WITHOUT_CLASSIFICATION	for use by the server script
WITHOUT_CLASSIFICATION	override so we can intercept the stream
WITHOUT_CLASSIFICATION	todo - charset?
WITHOUT_CLASSIFICATION	todo - charset?
WITHOUT_CLASSIFICATION	todo - charset?
WITHOUT_CLASSIFICATION	todo - charset?
WITHOUT_CLASSIFICATION	todo - charset?
WITHOUT_CLASSIFICATION	api expects null not empty array see httpdocs.oracle.com/javase/6/docs/api/javax/net/ssl/x509keymanager.html
WITHOUT_CLASSIFICATION	the copying thread won't generally detect eof
WITHOUT_CLASSIFICATION	n.b. it seems that opera needs a chain in order to accept server keys signed by the intermediate ca opera does not seem to like server keys signed by the root (self-signed) cert.
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	needs to be volatile as may be referenced from multiple threads todo see if this can be made final somehow
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
DESIGN	add logtargets to root logger fixme what's the clean way to add a logtarget afterwards ? @param logtargets logtarget array
DESIGN	todo find a way to avoid the cost of creating a string here -- probably a new patternmatcherinput working on a byte[] would do better.
DESIGN	not clear what can cause this ? conflicting versions perhaps
DESIGN	result.seterror(true) todo is this the correct strategy? throw exception allow assertion to pass
DESIGN	todo replace with proper exception
DESIGN	todo replace with proper exception return with an error
DESIGN	mask values for test_type todo remove either match or contains - they are mutually exckusive
DESIGN	todo ought to be a filechooser
DESIGN	todo do we need to add a charset for the file contents? $non-nls-1$
DESIGN	this could perhaps be a variable name
DESIGN	todo - should we skip processing here?
DESIGN	should we return fragment as text rather than text of fragment?
DESIGN	todo should this be cleardata()?
DESIGN	todo - is this used? (apart from test code)
DESIGN	provide a description of this timer class. todo is this ever used? i can't remember where. remove if it isn't -- todo or obtain text from bean's displayname or shortdescription. @return the description of this timer class.
DESIGN	todo - is this needed?
DESIGN	n.b. needs to implement visualizer so that testbeangui can find the correct gui class
DESIGN	todo should these fields be public? they don't appear to be used externally. also are they any different from httpconstants.get etc. ? in some cases they seem to be used as the method name from the tomcat log. however the rmethod field is used as the value for httpsamplerbase.method for which httpconstants is most approriate.
DESIGN	in milli-seconds todo properties?
DESIGN	allow jmeter to render frames (and relative images) must be done after setcontenttype [why?]
DESIGN	n.b. needs to implement visualizer so that testbeangui can find the correct gui class
DESIGN	showing large strings can be very costly so we will avoid doing so if the response data is larger than 200k. todo instead we could delay doing the result.settext call until the user chooses the "response data" tab. plus we could warn the user if this happens and revert the choice if he doesn't confirm he's ready to wait.
DESIGN	n.b. needs to implement visualizer so that testbeangui can find the correct gui class todo - remove unsharedcomponent ? probably does not make sense for a testbean.
DESIGN	it might be useful also to make this available in the 'request' tab for when posting json.
DESIGN	should header be saved with the data? $non-nls-1$
DESIGN	should header be saved with the data? $non-nls-1$
DESIGN	not used protected double[][] data = null
DESIGN	todo work out how to search the xml pane
DESIGN	notused long[] longsample = getsamples() load each node
DESIGN	hack to allow automated tests to find when test has ended transient boolean testended = false
DESIGN	$non-nls-1$ so it agrees with above todo perhaps should share code with __time() function for this $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$
DESIGN	hack to resolve modulecontrollers in non gui mode
DESIGN	todo this bit of code needs to be tidied up unfortunately modulecontroller is in components not core bug 47165
DESIGN	todo move this to components -- the only reason why it's in core is because it's used as a guinea pig by a couple of tests.
DESIGN	todo - should this use setfirst() ?
DESIGN	if child of transactioncontroller is a throughputcontroller and tpc does not sample its children then we will have this todo should this be at warn level ?
DESIGN	hack to allow external control
DESIGN	todo should level be more than debug ?
DESIGN	todo should this also clear isdynamic rawparameters permanentresults?
DESIGN	todo make the running indicator its own class instead of a jbutton
DESIGN	todo this method doesn't appear to be used.
DESIGN	todo this method doesn't appear to be used.
DESIGN	todo - why lower case? ok to use the default locale?
DESIGN	todo consider removing this method and providing method wrappers instead. this would allow the gui package to do any additional clearups if required as has been done with cleartestplan()
DESIGN	fixme why is searchtf not getting focus correctly after having been setvisible(false) once
DESIGN	todo i believe the following code (to the end of the method) is obsolete since namepanel no longer seems to be the gui for any component
DESIGN	notused private void initbuttonmap() { }
DESIGN	allow serializable test to work todo is the serializable test necessary now that jmetertreenode is no longer a gui component?
DESIGN	avoid error in ant task tests (good way?)
DESIGN	does not appear to be used called by mainframe#seteditaddmenu() but that is not called
DESIGN	jmetertreenode and testbeangui are special gui classes and aren't intended to be added to menus todo find a better way of checking this
DESIGN	should the testbean be hidden?
DESIGN	not used
DESIGN	not used
DESIGN	todo should class implement samplelistener?
DESIGN	not used
DESIGN	not used
DESIGN	todo - perhaps save other items such as headers?
DESIGN	todo should errors be thrown back through rmi?
DESIGN	not used
DESIGN	not used
DESIGN	@guardedby("samplestore") todo perhaps use concurrenthashmap ?
DESIGN	todo should this throw an error?
DESIGN	not used
DESIGN	yuck tiffimageencoder uses error to report runtime problems
DESIGN	todo clazz is probably always the same as testclass
DESIGN	todo does not work yet need to determine the sample type
DESIGN	programming error bail out.
DESIGN	todo - use or remove
DESIGN	a check just in case
DESIGN	a check just in case
DESIGN	todo should this implement supportscustomeditor() ?
DESIGN	todo is this ever used?
DESIGN	programming error bail out.
DESIGN	todo - yet another ambiguous name - does it need changing? see also clearable jmeterguicomponent
DESIGN	surely this is always null in the constructor?
DESIGN	note source and line arguments are nonsense in a call(). any way to make these arguments sensible?
DESIGN	todo probably not needed
DESIGN	clone will produce correct type todo but why do we need to clone the list?
DESIGN	all keys in messages.properties are lowercase (historical reasons?)
DESIGN	todo needs to be synch? probably not changed after threads have started jmeter home directory (excludes trailing separator) jmeter bin directory (excludes trailing separator)
DESIGN	todo why empty block ?
DESIGN	todo is sync really needed?
DESIGN	todo is this correct?
DESIGN	todo should equals and hashcode depend on field other than count?
DESIGN	todo does this method need to be public? it isn't currently called outside of this class.
DESIGN	todo should this method be synchronized ? all other function execute are
DESIGN	todo improve the error handling
DESIGN	todo improve the error handling
DESIGN	not used
DESIGN	keep the unexpanded path todo - allow directories to end with .jar by removing this check?
DESIGN	todo should we allow null for non-primitive types?
DESIGN	todo field always true what for ?
DESIGN	todo - should this be done for embedded usage? note the element is a configtestelement when used standalone so we cannot use ftpsampler access methods
DESIGN	not currently used
DESIGN	todo is this possible?
DESIGN	todo not used by gui
DESIGN	todo replace all this url2 mess with a proper method "areequivalent(url1 url2)" that would also ignore case in protocol and host names etc. -- use that method in the cookiemanager too.
DESIGN	todo should really return most specific (i.e. longest) match.
DESIGN	todo improve string version to better match browser behaviour? e.g. do browsers regard httphost/ and httphost80/ as the same? if so it would be better to reflect this in the string
DESIGN	todo is it the best way ? httpsissues.apache.org/bugzilla/show_bug.cgi?id=55634
DESIGN	$non-nls-1$ todo should this be a variable?
DESIGN	todo - should this be done when the client is created? if so then the details need to be added as part of httpclientkey
DESIGN	todo is null correct?
DESIGN	$non-nls-1$ todo can this be obtained from the file somehow?
DESIGN	todo - belongs elsewhere
DESIGN	todo - should we call start() and stop()?
DESIGN	$non-nls-1$ todo - change to use url version? will this affect test plans?
DESIGN	todo - is this the correct default?
DESIGN	$non-nls-1$ todo should this be variable?
DESIGN	may be replaced later
DESIGN	todo move to utils class (jmeterutils?)
DESIGN	todo find out how to retrieve these from the script at present the script has to use sampleresult methods to set them. $non-nls-1$ $non-nls-1$
DESIGN	todo ought to be a filechooser
DESIGN	remember to change this when the class changes
DESIGN	todo process warnings? set code and message to success?
DESIGN	$non-nls-1$ todo - probably wrong
DESIGN	should we use java.naming.security.[principal|credentials] to create the queueconnection?
DESIGN	dircontext dc = todo perhaps return this?
DESIGN	todo is this sensible?
DESIGN	$non-nls-1$ todo - use a different format here?
DESIGN	todo - charset? todo this should really be request data but there is none
DESIGN	results.setresponsecode("???") todo what code should be set here?
DESIGN	results.setresponsecode("???") todo what code should be set here?
DESIGN	notused yet private jtextfield filename
DESIGN	todo should this be indeterminate? todo should this be indeterminate? $non-nls-1$ $non-nls-1$
DESIGN	all the others could be private too?
DESIGN	todo fetch list of languages from a file? n.b. changes to language list need to be reflected in resources/packagetest.java
DESIGN	method is broken anyway
DESIGN	todo fix this when there is a real implementation
DESIGN	jmetertreenode and testbeangui are special gui classes and aren't intended to be added to menus todo find a better way of checking this
DESIGN	fixme broken code
DESIGN	todo i believe the following code (to the end of the method) is obsolete since namepanel no longer seems to be the gui for any component
DESIGN	allow serializable test to work todo is the serializable test necessary now that jmetertreenode is no longer a gui component?
DESIGN	todo can this ever happen?
DESIGN	method is broken anyway
DESIGN	todo fix this when there is a real implementation
DESIGN	notused org.apache.jmeter.monitor.model.status st = todo - charset?
DESIGN	todo this is a bit fragile
DESIGN	todo should this be ok ? assertequals(contentencoding s.getcontentencoding()) check arguments we should have one argument with the value equal to the post body
DESIGN	all form parameter always have text/plain as mime type todo make this a parameter?
DESIGN	maps to contain page and form encodings todo - do these really need to be shared between all proxy instances?
DESIGN	java 1.6.0_22+ no longer allows content-length to be set so don't check it. see httpbugs.sun.com/bugdatabase/view_bug.do?bug_id=6996110 todo any point in checking the other headers?
DESIGN	find all beans out there and check their resource property files - check that non-default property files don't have any extra keys. - check all necessary properties are defined at least in the default property file except for beans whose name contains "experimental" or "alpha". todo - check property files don't have duplicate keys (is this important)
DESIGN	todo should setbaseforscript be called here rather than above?
DESIGN	provide dummy implementations to suppress download and display of related resources - frames - images todo create better dummy displays todo suppress link somehow
DESIGN	should we run a beanshell script on startup? $non-nls-1$
DESIGN	add a system property so samplers can check to see if jmeter is running in nongui mode $non-nls-1$ todo - why does it create a new instance?
DESIGN	todo this class looks a lot like argumentspanel. what exactly is the difference? could they be combined? note it seems that this class is not actually used
DESIGN	todo - why use space?
DESIGN	todo - why use space?
DESIGN	menubar related methods todo do we really need to have all these menubar methods duplicated here? perhaps we can make the menu bar accessible through guipackage?
DESIGN	programming error bail out.
DESIGN	programming error bail out.
DESIGN	programming error bail out.
DESIGN	todo - can this eever happen?
DESIGN	todo fix up for nimbus laf
DESIGN	maybe do nothing at all?
DESIGN	does not appear to be used (yet)
DESIGN	make it easier to enter a tab (can use \<tab> but that is awkward)
DESIGN	settings readresolve sets these from the server/client values as appropriate todo would be nice to make these final not 100% sure volatile is needed as not changed after creation
DESIGN	todo - should this be restored?
DESIGN	todo should this be restored?
DESIGN	programming error bail out.
DESIGN	not used as the <testresult> element is generated by the resultcollector class
DESIGN	todo the above works in the current situation but it's just a hack. how to get each editor to report whether it wants to grow bigger? whether the property label should be at the left or at the top of the editor? ?
DESIGN	how many classes can we assign from? todo there must be a nicer way
DESIGN	does not appear to be used yet
DESIGN	setting samplingstarted before the contollers are initialised allows them to access the running values of functions and variables (however it does not seem to help with the listeners)
DESIGN	does not appear to be used
DESIGN	todo should equals and hashcode depend on field other than count?
DESIGN	todo what is this for?
DESIGN	todo cpercent is the same as cmedian here - why? and why pass it to "distributionline"?
DESIGN	todo does this method need to be public? it isn't currently called outside of this class.
DESIGN	todo should the method signature of this method be changed to match the super-implementation (using a testelement parameter instead of abstractlistenerelement)? this would require an instanceof check before adding the listener (below) but would also make the behavior a bit more obvious for sub-classes -- the java rules dealing with this situation aren't always intuitive and a subclass may think it is calling this version of the method when it is really calling the superclass version instead.
DESIGN	todo only clear the relevant entry - if possible
DESIGN	todo only clear the relevant entry - if possible
DESIGN	not used
DESIGN	todo not used?
DESIGN	todo should this be getmin()?
DESIGN	n.b. commons io ioutils has equivalent methods these were added before io was included todo - perhaps deprecate these in favour of commons io?
DESIGN	remember to change this when the class changes
DESIGN	wrapper to convert a junit4 class into a testcase todo - work out how to convert junit4 assertions so they are treated as failures rather than errors
DESIGN	very wrong.
DESIGN	sampleevent is not passed jmetervariables because they don't make sense for proxy recording todo - is this the correct threadgroup name?
DESIGN	todo perhaps make more specific than this? no point parsing anything else e.g. gif
DESIGN	set the content type todo - needed? string multipartcontenttype = multipart.getcontenttype().getvalue() post.setheader(header_content_type multipartcontenttype)
DESIGN	todo merge put and post methods as far as possible. e.g. post checks for multipart form/files and if not invokes senddata(httpentityenclosingrequestbase)
DESIGN	todo needed here because currently done on sample completion in jmeterthread but that only catches top-level samples.
DESIGN	todo can this happen?
DESIGN	todo downcase upper case non-final variables
DESIGN	not used transient protected threadgroup threadgroup = null anyway was this supposed to be the class from java.lang or jmeter.threads?
DESIGN	todo - should the encoding be configurable? $non-nls-1$
DESIGN	maybe we should consider creating a global cache for the random files to make jmeter more efficient.
DESIGN	maybe we should consider creating a global cache for the random files to make jmeter more efficient.
DESIGN	todo do we need to implement any kind of connection pooling? if so which connections should be shared? should threads share connections to the same destination? what about cross-thread sharing?
DESIGN	menubar related methods todo do we really need to have all these menubar methods duplicated here? perhaps we can make the menu bar accessible through guipackage?
DESIGN	notused private string chosenfile
DESIGN	todo fix this when there is a real implementation
DESIGN	todo - should lf-only eol be allowed?
DESIGN	get the content length it tells us how much data to read todo maybe support chunked encoding then we cannot rely on content length
DESIGN	this is effectively the same as saver.toxml(object writer) except we get to provide the dataholder don't know why there is no method for this in the xstream class
DESIGN	todo should this set the thread names for all the subsamples? might be more efficient than fetching the name elsewehere
DESIGN	todo is this the right thing to do?
DESIGN	hack to reduce the need to load every class in non-gui mode which only needs functions todo perhaps use bcel to scan class files instead? class name should contain this string class name should not contain this string
DESIGN	note the handling of simple- vs. double-quotes could be formally more accurate but i can't imagine a session id containing either so we should be ok. the whole set of expressions is a quick hack anyway so who cares.
DESIGN	don't allow override of content-length this helps with soapsampler hack too todo - what other headers are not allowed?
DESIGN	aggregates sample results for use by the statistical remote batch mode. samples are aggregated by the key defined by getkey(). todo merge error count into parent class?
DESIGN	todo strings should be resources
DESIGN	should we add the "_" separator?
DESIGN	todo validate contenttype for reasonable types?
DESIGN	a dom tree panel for to display response as tree view author <a href="mailtod.maung@mdl.com">dave maung</a> todo implement to find any nodes in the tree using treepath.
DESIGN	todo implement other non-text types
DESIGN	notused guipackage guipack =
DESIGN	todo - could this be return?
DESIGN	does the system support unc paths? if so may need to fix them up later
DESIGN	todo could these be done earlier (or just once?)
DESIGN	a little hack - add each listener to the start of the list - this ensures that the thread running the show is the first listener and can modify certain values before other listeners are called.
DESIGN	ensure that the sample variables are correctly initialised for each run. todo is this the best way to do this? should it be done elsewhere ?
DESIGN	a hack to make user-defined variables in the testplan element more dynamic
DESIGN	add fix for deadlocks see see httpsissues.apache.org/bugzilla/show_bug.cgi?id=48350
DESIGN	todo should level be more than debug ?
DESIGN	todo does not appear to be used
DESIGN	todo does not appear to be used
DESIGN	todo does not appear to be used
DESIGN	hack to get full modifier value
DESIGN	todo not used - make private?
DESIGN	should the samples be aggregated on thread name or thread group (default) ?
DESIGN	should the samples be aggregated on thread name or thread group (default) ?
DESIGN	todo do contenttype and/or dataencoding belong in httpsampleresult instead?
DESIGN	todo do this more efficiently
DESIGN	todo is this really necessary?
DESIGN	houston we have a problem !!
DESIGN	todo turn into method?
DESIGN	todo appears to duplicate the threadname field in sampleresult
DESIGN	todo should this be jtlsaver? only seems to be called by monitorhealthvisualzer
DESIGN	todo provide proper name?
DESIGN	slight hack - we need to ensure the testclass is not reset by the previous call
DESIGN	these must be set before reading/writing the xml. rather a hack but saves changing all the method calls to include an extra variable. afaik the variables should only be accessed from one thread so no need to synchronize.
DESIGN	todo - convert to work more like upgrade.properties/nameupdater.java special processing is carried out for the header class the string property testelement.name is converted to header.name for example <elementprop name="user-agent" elementtype="org.apache.jmeter.protocol.http.control.header"> <stringprop name="header.value">mozilla%2f4.0+%28compatible%3b+msie+5.5%3b+windows+98%29</stringprop> <stringprop name="testelement.name">user-agent</stringprop> </elementprop> becomes <elementprop name="user-agent" elementtype="org.apache.jmeter.protocol.http.control.header"> <stringprop name="header.value">mozilla%2f4.0+%28compatible%3b+msie+5.5%3b+windows+98%29</stringprop> <stringprop name="header.name">user-agent</stringprop> </elementprop>
DESIGN	todo should this be called if basedir == null?
DESIGN	todo is this silent exception intended
DESIGN	todo - does not appear to be called directly
DESIGN	todo only called by userparameterxmlparser.getxmlparameters which is a deprecated class
DESIGN	todo - move to jorphanutils?
DESIGN	todo - move to jorphanutils?
DESIGN	todo - move to jorphanutils?
DESIGN	todo - perhaps this should be a fatal error?
DESIGN	hack bsh-2.0b5.jar bshscriptengine implements compilable but throws "java.lang.error unimplemented"
DESIGN	is it an exception wrapped in a javascriptexception?
DESIGN	custom trustmanager ignores all certificate errors todo implement conditional checking and logging (derived from authsslx509trustmanager in httpclient contrib directory)
DESIGN	todo is this correct? if this is not the first file we can't write its header now for simplicity we always save it even if there is only one file
DESIGN	temporary fix to allow default protocol to be changed
DESIGN	todo why not use the super class value?
DESIGN	todo should the engine be static?
DESIGN	todo - not sure this is the best method
DESIGN	todo - is this the correct default?
DESIGN	todo is this the correct default?
DESIGN	todo hack to be removed later
DESIGN	could we drop the sync here?
DESIGN	may be replaced later
DESIGN	may be replaced later
DESIGN	hack force the controller to load its tree
DESIGN	todo needs cleaning up
DESIGN	todo - should this return something else?
DESIGN	hack to allow entire url to be provided in host field
DESIGN	todo make static?
DESIGN	todo should we allow mimetype only?
DESIGN	todo method with 0 reference really useful ?
DESIGN	todo method with 0 reference really useful ?
DESIGN	todo set different status if not enough messages found?
DESIGN	todo turn into parameter?
DESIGN	todo improve this
DESIGN	todo exact ordering is only required for some tests change the comparison to do a set compare where necessary.
DESIGN	todo does it matter that an empty line will terminate the loop? csv output files should never contain empty lines so probably not if so then need to check whether the reader is at eof
DESIGN	check if a string is a valid jmeter 'expression'. <p> the current implementation is very basic it just accepts any string containing "${" as a valid expression. todo improve but keep returning true for "${}".
DESIGN	i guess this can happen as a result of a bad file read? in this case it would be better to replace the incorrect value with anything valid e.g. the default value for the property. but for the time being i just prefer to be aware of any problems occuring here most likely programming errors so i'll bail out. (ms note) can't bail out - newly create elements have blank values and must get the defaults. also when loading previous versions of jmeter test scripts some values may not be right and should get default values - ms todo review this and possibly change to
DESIGN	todo temporary hack to avoid unnecessary bug reports for subclasses
DESIGN	remember to change this when the class changes
DESIGN	remember to change this when the class changes
DESIGN	remember to change this when the class changes
DESIGN	todo consider using private logs for each derived class
DESIGN	the following variables are set by standardjmeterengine. this is done before start() is called so the values will be published to the thread safely todo - consider passing them to the constructor so that they can be made final (to avoid adding lots of parameters perhaps have a parameter wrapper object.
DESIGN	hack save the package for any transaction controllers
DESIGN	todo remove this useless entry parameter
DESIGN	todo - how to handle thread stopped here
DESIGN	fix bug -d arg1=arg2 was causing parse error however --define arg1=arg2 is ok this seems to be because the parser skips the terminator for the long options but was not doing so for the short options.
DESIGN	todo specify collection type without breaking callers
DESIGN	todo should this just call super()?
DESIGN	todo should this just call super()?
DESIGN	maybe move to vector if mt problems occur
DESIGN	maybe move to vector if mt problems occur
DESIGN	maybe move to vector if mt problems occur
DESIGN	todo field always true what for ?
DESIGN	code also allows for lf only (not sure why - perhaps because the test code uses it?)
DESIGN	holder for storing cache details. perhaps add original response later?
DESIGN	todo correct url?
DESIGN	hack to skip processing
DESIGN	hack to skip processing
DESIGN	hack to skip processing
DESIGN	won't work writeerrortoclient(httpreplyhdr.forminternalerror()) generate result (if nec.) and populate it hack to skip processing
DESIGN	todo replace repeated substr() above and below with more efficient method.
DESIGN	todo this assumes that the redirected response will always immediately follow the original response. this may not always be true. is there a better way to do this?
DESIGN	todo - could be converted to generic class?
DESIGN	hack
DESIGN	todo - needs more work
DESIGN	todo is this a sensible number? $non-nls-1$
DESIGN	can be null (not sure why)
DESIGN	todo this is not populated currently
DESIGN	this can lead to code smell meh! do we care
DESIGN	todo is this the best way to do this?
DESIGN	todo - should this be a failure?
DESIGN	todo - improve this check
DESIGN	todo add some real tests now that split() has been removed
DESIGN	why does this not call guiinstance.cleartestplan() ? is there a reason for not clearing everything?
DESIGN	programming error bail out.
