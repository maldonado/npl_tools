set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9982933998481067	WITHOUT_CLASSIFICATION	0.001706600151893349	DESIGN
line 335	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
Figure end-char. '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9984190073878093	WITHOUT_CLASSIFICATION	0.0015809926121906803	DESIGN
line 362	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 372	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
line 391	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
^D	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
^Z	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
Do nothing	WITHOUT_CLASSIFICATION	0.9999095721380862	WITHOUT_CLASSIFICATION	9.042786191391607E-5	DESIGN
Do nothing	WITHOUT_CLASSIFICATION	0.9999095721380862	WITHOUT_CLASSIFICATION	9.042786191391607E-5	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9992080714449347	WITHOUT_CLASSIFICATION	7.919285550652741E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9992080714449347	WITHOUT_CLASSIFICATION	7.919285550652741E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9992080714449347	WITHOUT_CLASSIFICATION	7.919285550652741E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9992080714449347	WITHOUT_CLASSIFICATION	7.919285550652741E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9992080714449347	WITHOUT_CLASSIFICATION	7.919285550652741E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9992080714449347	WITHOUT_CLASSIFICATION	7.919285550652741E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9992080714449347	WITHOUT_CLASSIFICATION	7.919285550652741E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9992080714449347	WITHOUT_CLASSIFICATION	7.919285550652741E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9992080714449347	WITHOUT_CLASSIFICATION	7.919285550652741E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9992080714449347	WITHOUT_CLASSIFICATION	7.919285550652741E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9992080714449347	WITHOUT_CLASSIFICATION	7.919285550652741E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9992080714449347	WITHOUT_CLASSIFICATION	7.919285550652741E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9992080714449347	WITHOUT_CLASSIFICATION	7.919285550652741E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9992080714449347	WITHOUT_CLASSIFICATION	7.919285550652741E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9992080714449347	WITHOUT_CLASSIFICATION	7.919285550652741E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9992080714449347	WITHOUT_CLASSIFICATION	7.919285550652741E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9992080714449347	WITHOUT_CLASSIFICATION	7.919285550652741E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9992080714449347	WITHOUT_CLASSIFICATION	7.919285550652741E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9992080714449347	WITHOUT_CLASSIFICATION	7.919285550652741E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9992080714449347	WITHOUT_CLASSIFICATION	7.919285550652741E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9992080714449347	WITHOUT_CLASSIFICATION	7.919285550652741E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9992080714449347	WITHOUT_CLASSIFICATION	7.919285550652741E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9992080714449347	WITHOUT_CLASSIFICATION	7.919285550652741E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9992080714449347	WITHOUT_CLASSIFICATION	7.919285550652741E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9992080714449347	WITHOUT_CLASSIFICATION	7.919285550652741E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9992080714449347	WITHOUT_CLASSIFICATION	7.919285550652741E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9992080714449347	WITHOUT_CLASSIFICATION	7.919285550652741E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9992080714449347	WITHOUT_CLASSIFICATION	7.919285550652741E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9992080714449347	WITHOUT_CLASSIFICATION	7.919285550652741E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9992080714449347	WITHOUT_CLASSIFICATION	7.919285550652741E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9992080714449347	WITHOUT_CLASSIFICATION	7.919285550652741E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9992080714449347	WITHOUT_CLASSIFICATION	7.919285550652741E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9992080714449347	WITHOUT_CLASSIFICATION	7.919285550652741E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9992080714449347	WITHOUT_CLASSIFICATION	7.919285550652741E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9992080714449347	WITHOUT_CLASSIFICATION	7.919285550652741E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9992080714449347	WITHOUT_CLASSIFICATION	7.919285550652741E-4	DESIGN
return result	WITHOUT_CLASSIFICATION	0.9999341811596952	WITHOUT_CLASSIFICATION	6.581884030470254E-5	DESIGN
name	WITHOUT_CLASSIFICATION	0.999038137216645	WITHOUT_CLASSIFICATION	9.61862783355015E-4	DESIGN
Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9981215126788888	WITHOUT_CLASSIFICATION	0.0018784873211111868	DESIGN
Accessor methods.	WITHOUT_CLASSIFICATION	0.9995126652148284	WITHOUT_CLASSIFICATION	4.873347851716824E-4	DESIGN
MRI behavior	WITHOUT_CLASSIFICATION	0.9995255561361042	WITHOUT_CLASSIFICATION	4.7444386389583167E-4	DESIGN
MRI behavior	WITHOUT_CLASSIFICATION	0.9995255561361042	WITHOUT_CLASSIFICATION	4.7444386389583167E-4	DESIGN
MRI behavior	WITHOUT_CLASSIFICATION	0.9995255561361042	WITHOUT_CLASSIFICATION	4.7444386389583167E-4	DESIGN
MRI behavior	WITHOUT_CLASSIFICATION	0.9995255561361042	WITHOUT_CLASSIFICATION	4.7444386389583167E-4	DESIGN
call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9976435197331315	WITHOUT_CLASSIFICATION	0.0023564802668684954	DESIGN
fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9918835494070233	WITHOUT_CLASSIFICATION	0.008116450592976736	DESIGN
try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9993088134451261	WITHOUT_CLASSIFICATION	6.911865548737621E-4	DESIGN
define ARGV and $ for this runtime	WITHOUT_CLASSIFICATION	0.9916492791737652	WITHOUT_CLASSIFICATION	0.00835072082623484	DESIGN
Version information:	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9997082216074161	WITHOUT_CLASSIFICATION	2.917783925839414E-4	DESIGN
ARGF, $< object	WITHOUT_CLASSIFICATION	0.9995336320856332	WITHOUT_CLASSIFICATION	4.6636791436673E-4	DESIGN
if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9990732231909738	WITHOUT_CLASSIFICATION	9.267768090260893E-4	DESIGN
On platforms without a c-library accessable through JNA, getpid will return hashCode as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9978388230607147	WITHOUT_CLASSIFICATION	0.0021611769392853434	DESIGN
$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9992874280290056	WITHOUT_CLASSIFICATION	7.125719709944187E-4	DESIGN
include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9849969760323775	WITHOUT_CLASSIFICATION	0.015003023967622637	DESIGN
MRI behavior: just plain '' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9972302087300453	WITHOUT_CLASSIFICATION	0.0027697912699548065	DESIGN
this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9906045812961038	WITHOUT_CLASSIFICATION	0.00939541870389611	DESIGN
What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.8883553050090145	WITHOUT_CLASSIFICATION	0.11164469499098549	DESIGN
----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9988152998083186	WITHOUT_CLASSIFICATION	0.001184700191681481	DESIGN
CONSTANT TABLE METHODS - pass to delegate	WITHOUT_CLASSIFICATION	0.9955850396193449	WITHOUT_CLASSIFICATION	0.004414960380655113	DESIGN
We get canonical path to try and flatten the path out. a dir '/subdir/..' should return as '/' cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9933526012871285	WITHOUT_CLASSIFICATION	0.006647398712871578	DESIGN
MRI behavior	WITHOUT_CLASSIFICATION	0.9995255561361042	WITHOUT_CLASSIFICATION	4.7444386389583167E-4	DESIGN
----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9988958351501235	WITHOUT_CLASSIFICATION	0.0011041648498765246	DESIGN
Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999673775552349	WITHOUT_CLASSIFICATION	3.262244476513336E-5	DESIGN
----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9987637800264477	WITHOUT_CLASSIFICATION	0.0012362199735522627	DESIGN
try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9889723681148638	WITHOUT_CLASSIFICATION	0.011027631885136172	DESIGN
otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9953086265642821	WITHOUT_CLASSIFICATION	0.004691373435717878	DESIGN
Proc class	WITHOUT_CLASSIFICATION	0.9982970438862581	WITHOUT_CLASSIFICATION	0.0017029561137419536	DESIGN
No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9998064612103112	WITHOUT_CLASSIFICATION	1.9353878968863546E-4	DESIGN
modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9987857049557217	WITHOUT_CLASSIFICATION	0.0012142950442783713	DESIGN
for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9964010554888316	WITHOUT_CLASSIFICATION	0.003598944511168379	DESIGN
case RUBY_HYBRID: backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); break;	WITHOUT_CLASSIFICATION	0.9999591236766716	WITHOUT_CLASSIFICATION	4.0876323328450717E-5	DESIGN
This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9978398546789805	WITHOUT_CLASSIFICATION	0.002160145321019452	DESIGN
rb_exc_new3	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9988241308427888	WITHOUT_CLASSIFICATION	0.0011758691572112529	DESIGN
registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9986828689501004	WITHOUT_CLASSIFICATION	0.001317131049899571	DESIGN
IOT is also 6	WITHOUT_CLASSIFICATION	0.9995221846374718	WITHOUT_CLASSIFICATION	4.778153625281771E-4	DESIGN
CLD is also 20	WITHOUT_CLASSIFICATION	0.9988489669006151	WITHOUT_CLASSIFICATION	0.001151033099384816	DESIGN
RubySignal	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
ZStream actually isn't allocatable	WITHOUT_CLASSIFICATION	0.9935767736718397	WITHOUT_CLASSIFICATION	0.006423226328160364	DESIGN
MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9978331931579892	WITHOUT_CLASSIFICATION	0.002166806842010701	DESIGN
it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9998461760615027	WITHOUT_CLASSIFICATION	1.5382393849722704E-4	DESIGN
MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9974422514510427	WITHOUT_CLASSIFICATION	0.002557748548957262	DESIGN
SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9996241415410111	WITHOUT_CLASSIFICATION	3.7585845898890013E-4	DESIGN
io.finish();	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9932019954669669	WITHOUT_CLASSIFICATION	0.006798004533033116	DESIGN
hmm...	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
Called before any write to make sure the header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9985598715536638	WITHOUT_CLASSIFICATION	0.0014401284463362344	DESIGN
For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9531119973785066	WITHOUT_CLASSIFICATION	0.046888002621493424	DESIGN
We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.994480209795166	WITHOUT_CLASSIFICATION	0.0055197902048339294	DESIGN
float number of seconds	WITHOUT_CLASSIFICATION	0.9996990778053088	WITHOUT_CLASSIFICATION	3.009221946912552E-4	DESIGN
modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9978647724223267	WITHOUT_CLASSIFICATION	0.002135227577673328	DESIGN
dump usec, not msec	WITHOUT_CLASSIFICATION	0.9997227926017535	WITHOUT_CLASSIFICATION	2.772073982464921E-4	DESIGN
Time class methods	WITHOUT_CLASSIFICATION	0.9989574144689384	WITHOUT_CLASSIFICATION	0.001042585531061633	DESIGN
marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9995825106684573	WITHOUT_CLASSIFICATION	4.1748933154273055E-4	DESIGN
MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999053073944507	WITHOUT_CLASSIFICATION	9.469260554929026E-5	DESIGN
set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9985828871915013	WITHOUT_CLASSIFICATION	0.0014171128084986035	DESIGN
the instant at which we will ask dtz what the difference between DST and standard time is	WITHOUT_CLASSIFICATION	0.9760104881979035	WITHOUT_CLASSIFICATION	0.023989511802096446	DESIGN
if we might be moving this time from !DST -> DST, the offset is assumed to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9764805344187272	WITHOUT_CLASSIFICATION	0.023519465581272804	DESIGN
Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9990306721777641	WITHOUT_CLASSIFICATION	9.693278222359114E-4	DESIGN
================ Utility Methods ================	WITHOUT_CLASSIFICATION	0.9987615837906779	WITHOUT_CLASSIFICATION	0.001238416209322024	DESIGN
If the value will fit in a Fixnum, return one of those.	WITHOUT_CLASSIFICATION	0.9997747149833695	WITHOUT_CLASSIFICATION	2.2528501663044388E-4	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9988587337523623	WITHOUT_CLASSIFICATION	0.0011412662476376519	DESIGN
MRI issuses warning here on (RBIGNUM(x)->len SIZEOF_BDIGITS yy > 10241024)	WITHOUT_CLASSIFICATION	0.9396127687616866	WITHOUT_CLASSIFICATION	0.06038723123831323	DESIGN
num2int is also implemented	WITHOUT_CLASSIFICATION	0.9990003434760463	WITHOUT_CLASSIFICATION	9.996565239536706E-4	DESIGN
num2int is also implemented	WITHOUT_CLASSIFICATION	0.9990003434760463	WITHOUT_CLASSIFICATION	9.996565239536706E-4	DESIGN
no bignorm here needed	WITHOUT_CLASSIFICATION	0.9946194348011433	WITHOUT_CLASSIFICATION	0.0053805651988566815	DESIGN
wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9970020740160458	WITHOUT_CLASSIFICATION	0.002997925983954291	DESIGN
Pad with a 0	WITHOUT_CLASSIFICATION	0.9996037050537007	WITHOUT_CLASSIFICATION	3.962949462993279E-4	DESIGN
BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9988679872642982	WITHOUT_CLASSIFICATION	0.0011320127357018607	DESIGN
This should only be called by this and RubyFile. It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9711247054841978	WITHOUT_CLASSIFICATION	0.028875294515802157	DESIGN
We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9810314155562808	WITHOUT_CLASSIFICATION	0.01896858444371917	DESIGN
???	WITHOUT_CLASSIFICATION	0.9994596396150077	WITHOUT_CLASSIFICATION	5.403603849923143E-4	DESIGN
PID	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9988587337523623	WITHOUT_CLASSIFICATION	0.0011412662476376519	DESIGN
elements and trailing nils	WITHOUT_CLASSIFICATION	0.9998086486204406	WITHOUT_CLASSIFICATION	1.9135137955935793E-4	DESIGN
Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999457915642244	WITHOUT_CLASSIFICATION	5.4208435775585674E-5	DESIGN
Ruby arrays default to holding 16 elements, so we create an ArrayList of the same size if we're not told otherwise	WITHOUT_CLASSIFICATION	0.9999926704692994	WITHOUT_CLASSIFICATION	7.329530700549265E-6	DESIGN
rb_ary_new2 just allocates the internal array	WITHOUT_CLASSIFICATION	0.9980400689957107	WITHOUT_CLASSIFICATION	0.0019599310042892676	DESIGN
plain internal array assignment	WITHOUT_CLASSIFICATION	0.9980972140172863	WITHOUT_CLASSIFICATION	0.001902785982713555	DESIGN
plain internal array assignment	WITHOUT_CLASSIFICATION	0.9980972140172863	WITHOUT_CLASSIFICATION	0.001902785982713555	DESIGN
plain internal array assignment	WITHOUT_CLASSIFICATION	0.9980972140172863	WITHOUT_CLASSIFICATION	0.001902785982713555	DESIGN
Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour	WITHOUT_CLASSIFICATION	0.9986269900420668	WITHOUT_CLASSIFICATION	0.0013730099579331964	DESIGN
NEWOBJ and OBJSETUP equivalent fastest one, for shared arrays, optional objectspace	WITHOUT_CLASSIFICATION	0.9980108183082543	WITHOUT_CLASSIFICATION	0.00198918169174572	DESIGN
Create global constants and variables	WITHOUT_CLASSIFICATION	0.9990969432635115	WITHOUT_CLASSIFICATION	9.03056736488426E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9996927476460621	WITHOUT_CLASSIFICATION	3.0725235393801853E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9996927476460621	WITHOUT_CLASSIFICATION	3.0725235393801853E-4	DESIGN
Windows does not support these functions, so we won't even try This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9750144097557498	WITHOUT_CLASSIFICATION	0.024985590244250094	DESIGN
There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and newer one (US/Pacific, America/Los_Angeles). This pattern is to detect the legacy TZ format in order to convert it to the newer format understood by Java API.	WITHOUT_CLASSIFICATION	0.9817918079152786	WITHOUT_CLASSIFICATION	0.0182081920847213	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9996927476460621	WITHOUT_CLASSIFICATION	3.0725235393801853E-4	DESIGN
1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9922051855998582	WITHOUT_CLASSIFICATION	0.007794814400141831	DESIGN
possibly should not in object space	WITHOUT_CLASSIFICATION	0.9769817765154037	WITHOUT_CLASSIFICATION	0.023018223484596263	DESIGN
only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999411154588697	WITHOUT_CLASSIFICATION	5.888454113020833E-5	DESIGN
rb_ary_new4	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
rb_ary_new4	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9995141148975027	WITHOUT_CLASSIFICATION	4.858851024972617E-4	DESIGN
If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9993633505244578	WITHOUT_CLASSIFICATION	6.366494755421307E-4	DESIGN
See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9993824469523136	WITHOUT_CLASSIFICATION	6.175530476864567E-4	DESIGN
See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9993824469523136	WITHOUT_CLASSIFICATION	6.175530476864567E-4	DESIGN
Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9991465572238182	WITHOUT_CLASSIFICATION	8.534427761818703E-4	DESIGN
pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9991728898800174	WITHOUT_CLASSIFICATION	8.27110119982601E-4	DESIGN
root fiber	WITHOUT_CLASSIFICATION	0.9991574054727893	WITHOUT_CLASSIFICATION	8.425945272106456E-4	DESIGN
GMT+00:00 --> Etc/GMT, see "MRI behavior" comment below.	WITHOUT_CLASSIFICATION	0.9991819067196618	WITHOUT_CLASSIFICATION	8.18093280338249E-4	DESIGN
See http:www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.998627864605664	WITHOUT_CLASSIFICATION	0.0013721353943359751	DESIGN
extras flag	WITHOUT_CLASSIFICATION	0.9995545356766153	WITHOUT_CLASSIFICATION	4.4546432338471827E-4	DESIGN
Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
...nothing	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
utility method	WITHOUT_CLASSIFICATION	0.9992385573526671	WITHOUT_CLASSIFICATION	7.614426473328928E-4	DESIGN
Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9991554802312997	WITHOUT_CLASSIFICATION	8.445197687001954E-4	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9988587337523623	WITHOUT_CLASSIFICATION	0.0011412662476376519	DESIGN
flags 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999023099769104	WITHOUT_CLASSIFICATION	9.7690023089519E-5	DESIGN
range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.998133223508476	WITHOUT_CLASSIFICATION	0.001866776491523969	DESIGN
1.8 "include?"	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9977331977486041	WITHOUT_CLASSIFICATION	0.0022668022513958716	DESIGN
beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9991262886100134	WITHOUT_CLASSIFICATION	8.73711389986646E-4	DESIGN
MRI does it!	WITHOUT_CLASSIFICATION	0.9994179046686943	WITHOUT_CLASSIFICATION	5.820953313057416E-4	DESIGN
won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9998558938842149	WITHOUT_CLASSIFICATION	1.44106115785147E-4	DESIGN
it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9998064347911136	WITHOUT_CLASSIFICATION	1.9356520888641636E-4	DESIGN
RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9994072205555466	WITHOUT_CLASSIFICATION	5.927794444533294E-4	DESIGN
not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9983185553147159	WITHOUT_CLASSIFICATION	0.0016814446852840568	DESIGN
second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.999974168015008	WITHOUT_CLASSIFICATION	2.5831984991997173E-5	DESIGN
we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.995940203949834	WITHOUT_CLASSIFICATION	0.004059796050166039	DESIGN
terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9976093020775577	WITHOUT_CLASSIFICATION	0.0023906979224421836	DESIGN
Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9996647761528765	WITHOUT_CLASSIFICATION	3.352238471234356E-4	DESIGN
do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9900859565664907	WITHOUT_CLASSIFICATION	0.00991404343350925	DESIGN
recheck condition	WITHOUT_CLASSIFICATION	0.9996011031201477	WITHOUT_CLASSIFICATION	3.9889687985224936E-4	DESIGN
Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9997195639795446	WITHOUT_CLASSIFICATION	2.8043602045528987E-4	DESIGN
Construct key services	WITHOUT_CLASSIFICATION	0.9965824719352617	WITHOUT_CLASSIFICATION	0.003417528064738225	DESIGN
initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9982553987319542	WITHOUT_CLASSIFICATION	0.0017446012680457238	DESIGN
Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9998322496739072	WITHOUT_CLASSIFICATION	1.6775032609291386E-4	DESIGN
Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9994185640438076	WITHOUT_CLASSIFICATION	5.814359561923669E-4	DESIGN
Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9935333700404277	WITHOUT_CLASSIFICATION	0.006466629959572194	DESIGN
Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9912504412446634	WITHOUT_CLASSIFICATION	0.0087495587553365	DESIGN
Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9942932625145185	WITHOUT_CLASSIFICATION	0.0057067374854815	DESIGN
Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9996315707614581	WITHOUT_CLASSIFICATION	3.684292385419423E-4	DESIGN
Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9981597839262126	WITHOUT_CLASSIFICATION	0.0018402160737874312	DESIGN
depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9984125674609454	WITHOUT_CLASSIFICATION	0.0015874325390545622	DESIGN
initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9994030702292808	WITHOUT_CLASSIFICATION	5.969297707191632E-4	DESIGN
Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9969280245058912	WITHOUT_CLASSIFICATION	0.003071975494108852	DESIGN
Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9995866024136836	WITHOUT_CLASSIFICATION	4.133975863163848E-4	DESIGN
we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9991146181805233	WITHOUT_CLASSIFICATION	8.853818194767773E-4	DESIGN
determine spacing	WITHOUT_CLASSIFICATION	0.9996008899540878	WITHOUT_CLASSIFICATION	3.9911004591225164E-4	DESIGN
should alter global state	WITHOUT_CLASSIFICATION	0.9982968608584174	WITHOUT_CLASSIFICATION	0.0017031391415825727	DESIGN
For JSR 223 support: see http:scripting.java.net/	WITHOUT_CLASSIFICATION	0.9991027667061879	WITHOUT_CLASSIFICATION	8.972332938119628E-4	DESIGN
use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9784654392851105	WITHOUT_CLASSIFICATION	0.021534560714889562	DESIGN
this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9828677583542117	WITHOUT_CLASSIFICATION	0.01713224164578831	DESIGN
new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9940677363182583	WITHOUT_CLASSIFICATION	0.005932263681741724	DESIGN
assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9870438314912545	WITHOUT_CLASSIFICATION	0.012956168508745456	DESIGN
Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9994860702992764	WITHOUT_CLASSIFICATION	5.13929700723685E-4	DESIGN
default: don't retain	WITHOUT_CLASSIFICATION	0.999481765369552	WITHOUT_CLASSIFICATION	5.182346304479346E-4	DESIGN
ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9976464260331398	WITHOUT_CLASSIFICATION	0.002353573966860192	DESIGN
Default objects	WITHOUT_CLASSIFICATION	0.9997888682305215	WITHOUT_CLASSIFICATION	2.111317694785819E-4	DESIGN
record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9969509217603536	WITHOUT_CLASSIFICATION	0.003049078239646467	DESIGN
former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.998287151783516	WITHOUT_CLASSIFICATION	0.0017128482164839643	DESIGN
Java support	WITHOUT_CLASSIFICATION	0.9990650981795389	WITHOUT_CLASSIFICATION	9.349018204611254E-4	DESIGN
Parser stats	WITHOUT_CLASSIFICATION	0.9991502633779059	WITHOUT_CLASSIFICATION	8.497366220940957E-4	DESIGN
Compilation	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
can't read non-standard properties	WITHOUT_CLASSIFICATION	0.999320504592252	WITHOUT_CLASSIFICATION	6.794954077481166E-4	DESIGN
can't create custom classloaders	WITHOUT_CLASSIFICATION	0.999080805777185	WITHOUT_CLASSIFICATION	9.191942228148898E-4	DESIGN
mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9990535835200899	WITHOUT_CLASSIFICATION	9.464164799101904E-4	DESIGN
mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9967398310010391	WITHOUT_CLASSIFICATION	0.003260168998960889	DESIGN
A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9841114717569697	WITHOUT_CLASSIFICATION	0.01588852824303032	DESIGN
A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9981852721512195	WITHOUT_CLASSIFICATION	0.0018147278487803888	DESIGN
initial spaces spaces before "at"	WITHOUT_CLASSIFICATION	0.9996965720903493	WITHOUT_CLASSIFICATION	3.034279096506476E-4	DESIGN
event name filename line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9951243044750119	WITHOUT_CLASSIFICATION	0.004875695524988113	DESIGN
The method is intentionally not public, since it typically should not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9944666453760496	WITHOUT_CLASSIFICATION	0.005533354623950332	DESIGN
Note: this field and the following static initializer must be located be in this order!	WITHOUT_CLASSIFICATION	0.9996336918123334	WITHOUT_CLASSIFICATION	3.663081876665705E-4	DESIGN
Contains a list of all blocks (as Procs) that should be called when the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9989790240263328	WITHOUT_CLASSIFICATION	0.001020975973667188	DESIGN
quoted-printable	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
default options	WITHOUT_CLASSIFICATION	0.9997235045075709	WITHOUT_CLASSIFICATION	2.7649549242912073E-4	DESIGN
iso-2022-jp	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
iso-2022-jp	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
Shift_JIS	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
Shift_JIS	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
EUC-JP	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
EUC-JP	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
UTF-8	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
UTF-8	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
long name option	WITHOUT_CLASSIFICATION	0.9996890610583743	WITHOUT_CLASSIFICATION	3.1093894162570603E-4	DESIGN
conversion	WITHOUT_CLASSIFICATION	0.9993035948674961	WITHOUT_CLASSIFICATION	6.964051325038487E-4	DESIGN
================ Singleton Methods ================	WITHOUT_CLASSIFICATION	0.9987455033100152	WITHOUT_CLASSIFICATION	0.0012544966899848556	DESIGN
string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9997700390945505	WITHOUT_CLASSIFICATION	2.299609054494463E-4	DESIGN
string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9977532559051652	WITHOUT_CLASSIFICATION	0.0022467440948347604	DESIGN
string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9995941096373309	WITHOUT_CLASSIFICATION	4.058903626691187E-4	DESIGN
ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9994072205555466	WITHOUT_CLASSIFICATION	5.927794444533294E-4	DESIGN
rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9994072205555466	WITHOUT_CLASSIFICATION	5.927794444533294E-4	DESIGN
rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.99864660547089	WITHOUT_CLASSIFICATION	0.0013533945291099132	DESIGN
String construction routines by NOT byte[] buffer and NOT making the target String shared	WITHOUT_CLASSIFICATION	0.999836402284185	WITHOUT_CLASSIFICATION	1.635977158149398E-4	DESIGN
rb_str_subseq	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9932856710212129	WITHOUT_CLASSIFICATION	0.006714328978787109	DESIGN
if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999299024756194	WITHOUT_CLASSIFICATION	7.009752438065523E-5	DESIGN
rb_str_cmp_m	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9960374200647711	WITHOUT_CLASSIFICATION	0.003962579935228802	DESIGN
rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9995978082626611	WITHOUT_CLASSIFICATION	4.0219173733895225E-4	DESIGN
this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.5772002227490153	DESIGN	0.42279977725098483	WITHOUT_CLASSIFICATION
must not reallocate	WITHOUT_CLASSIFICATION	0.9996635718827009	WITHOUT_CLASSIFICATION	3.36428117299122E-4	DESIGN
Illegal combination	WITHOUT_CLASSIFICATION	0.9995194945184496	WITHOUT_CLASSIFICATION	4.805054815504044E-4	DESIGN
use 1.8 impl	WITHOUT_CLASSIFICATION	0.9973830473792734	WITHOUT_CLASSIFICATION	0.002616952620726469	DESIGN
RubyString aka rb_string_value	WITHOUT_CLASSIFICATION	0.9994072205555466	WITHOUT_CLASSIFICATION	5.927794444533294E-4	DESIGN
bang: true, no match, no substitution	WITHOUT_CLASSIFICATION	0.9995387122543894	WITHOUT_CLASSIFICATION	4.612877456106308E-4	DESIGN
out of byte range there will be no match for sure	WITHOUT_CLASSIFICATION	0.9998036305182556	WITHOUT_CLASSIFICATION	1.963694817444808E-4	DESIGN
len + margin	WITHOUT_CLASSIFICATION	0.9993412335643025	WITHOUT_CLASSIFICATION	6.587664356975507E-4	DESIGN
block given	WITHOUT_CLASSIFICATION	0.9999269107354661	WITHOUT_CLASSIFICATION	7.30892645338461E-5	DESIGN
block given	WITHOUT_CLASSIFICATION	0.9999269107354661	WITHOUT_CLASSIFICATION	7.30892645338461E-5	DESIGN
copy pre-match substr	WITHOUT_CLASSIFICATION	0.9997992045458257	WITHOUT_CLASSIFICATION	2.0079545417437005E-4	DESIGN
string given	WITHOUT_CLASSIFICATION	0.9998797078588736	WITHOUT_CLASSIFICATION	1.2029214112644464E-4	DESIGN
hash given	WITHOUT_CLASSIFICATION	0.9995433638894738	WITHOUT_CLASSIFICATION	4.5663611052625537E-4	DESIGN
This represents left most digit in a set of incremented values? Therefore leftmost numeric must be '1' and not '0' 999 -> 1000, not 999 -> 0000. whereas chars should be zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9982238570916558	WITHOUT_CLASSIFICATION	0.001776142908344097	DESIGN
substring longer than string	WITHOUT_CLASSIFICATION	0.9995404984934025	WITHOUT_CLASSIFICATION	4.5950150659743204E-4	DESIGN
rb_str_substr	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
nothing	WITHOUT_CLASSIFICATION	0.9999669673405408	WITHOUT_CLASSIFICATION	3.303265945919047E-5	DESIGN
nothing	WITHOUT_CLASSIFICATION	0.9999669673405408	WITHOUT_CLASSIFICATION	3.303265945919047E-5	DESIGN
rb_str_splice	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
TODO: keep cr TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.6003304001989421	WITHOUT_CLASSIFICATION	0.3996695998010578	DESIGN
keep cr ?	WITHOUT_CLASSIFICATION	0.9995138372771459	WITHOUT_CLASSIFICATION	4.8616272285418205E-4	DESIGN
keep cr ?	WITHOUT_CLASSIFICATION	0.9995138372771459	WITHOUT_CLASSIFICATION	4.8616272285418205E-4	DESIGN
wrapped to \0...\0. search next valid char.	WITHOUT_CLASSIFICATION	0.9996652448075529	WITHOUT_CLASSIFICATION	3.3475519244703796E-4	DESIGN
only this case affects backrefs	WITHOUT_CLASSIFICATION	0.9992172444460278	WITHOUT_CLASSIFICATION	7.827555539722951E-4	DESIGN
only this case affects backrefs	WITHOUT_CLASSIFICATION	0.9992172444460278	WITHOUT_CLASSIFICATION	7.827555539722951E-4	DESIGN
modified	WITHOUT_CLASSIFICATION	0.9998120951336683	WITHOUT_CLASSIFICATION	1.8790486633176855E-4	DESIGN
modified	WITHOUT_CLASSIFICATION	0.9998120951336683	WITHOUT_CLASSIFICATION	1.8790486633176855E-4	DESIGN
1.8	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
1.8	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
QTRUE	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
retrieve last replacer	WITHOUT_CLASSIFICATION	0.9994626580404956	WITHOUT_CLASSIFICATION	5.373419595044955E-4	DESIGN
Check the length every iteration, since the block can modify this string.	WITHOUT_CLASSIFICATION	0.9921657966888744	WITHOUT_CLASSIFICATION	0.00783420331112562	DESIGN
long size bits in byte	WITHOUT_CLASSIFICATION	0.999868057120958	WITHOUT_CLASSIFICATION	1.3194287904188013E-4	DESIGN
from encoding, special-casing ASCII to ASCII	WITHOUT_CLASSIFICATION	0.9970821842506862	WITHOUT_CLASSIFICATION	0.00291781574931376	DESIGN
to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9961955768964793	WITHOUT_CLASSIFICATION	0.0038044231035206637	DESIGN
create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9990120504665893	WITHOUT_CLASSIFICATION	9.879495334106753E-4	DESIGN
decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9970226627896223	WITHOUT_CLASSIFICATION	0.002977337210377791	DESIGN
create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9990120504665893	WITHOUT_CLASSIFICATION	9.879495334106753E-4	DESIGN
Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9985388642409166	WITHOUT_CLASSIFICATION	0.0014611357590832532	DESIGN
no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9992385262245297	WITHOUT_CLASSIFICATION	7.614737754703478E-4	DESIGN
interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9977226697034889	WITHOUT_CLASSIFICATION	0.0022773302965112354	DESIGN
File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9992744291225463	WITHOUT_CLASSIFICATION	7.255708774538424E-4	DESIGN
rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9998948358072087	WITHOUT_CLASSIFICATION	1.0516419279127867E-4	DESIGN
We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9949258393801695	WITHOUT_CLASSIFICATION	0.005074160619830477	DESIGN
exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9990216182808609	WITHOUT_CLASSIFICATION	9.783817191391226E-4	DESIGN
Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9955543006694266	WITHOUT_CLASSIFICATION	0.004445699330573407	DESIGN
Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9995149625971148	WITHOUT_CLASSIFICATION	4.8503740288519646E-4	DESIGN
Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9978996290158049	WITHOUT_CLASSIFICATION	0.002100370984195221	DESIGN
file not given	WITHOUT_CLASSIFICATION	0.9998534210105038	WITHOUT_CLASSIFICATION	1.4657898949618165E-4	DESIGN
string to eval	WITHOUT_CLASSIFICATION	0.9996794594789538	WITHOUT_CLASSIFICATION	3.2054052104619525E-4	DESIGN
binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9978000550928935	WITHOUT_CLASSIFICATION	0.002199944907106437	DESIGN
?g | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9997695359621761	WITHOUT_CLASSIFICATION	2.3046403782394213E-4	DESIGN
bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9993161593846608	WITHOUT_CLASSIFICATION	6.838406153391742E-4	DESIGN
Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9991398798729855	WITHOUT_CLASSIFICATION	8.601201270145438E-4	DESIGN
Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9790266734809187	WITHOUT_CLASSIFICATION	0.020973326519081303	DESIGN
No catch active for this throw	WITHOUT_CLASSIFICATION	0.9984052975474749	WITHOUT_CLASSIFICATION	0.0015947024525251594	DESIGN
without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9973247707039294	WITHOUT_CLASSIFICATION	0.002675229296070572	DESIGN
ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9991989574631086	WITHOUT_CLASSIFICATION	8.010425368914124E-4	DESIGN
MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9996639914449446	WITHOUT_CLASSIFICATION	3.3600855505553013E-4	DESIGN
MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9972912810952262	WITHOUT_CLASSIFICATION	0.0027087189047737773	DESIGN
?A | Time | Last access time for file1	WITHOUT_CLASSIFICATION	0.9994143486027466	WITHOUT_CLASSIFICATION	5.856513972534443E-4	DESIGN
?b | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999350344417212	WITHOUT_CLASSIFICATION	6.496555827892809E-5	DESIGN
?c | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9998556665517226	WITHOUT_CLASSIFICATION	1.4433344827734977E-4	DESIGN
?C | Time | Last change time for file1	WITHOUT_CLASSIFICATION	0.9998438188825352	WITHOUT_CLASSIFICATION	1.561811174648799E-4	DESIGN
?d | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.999982027720595	WITHOUT_CLASSIFICATION	1.7972279405025575E-5	DESIGN
?e | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999516616348436	WITHOUT_CLASSIFICATION	4.833836515634018E-5	DESIGN
?f | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999252845200681	WITHOUT_CLASSIFICATION	7.471547993192509E-5	DESIGN
?G | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999550380036594	WITHOUT_CLASSIFICATION	4.4961996340702486E-5	DESIGN
?k | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9997724846981724	WITHOUT_CLASSIFICATION	2.2751530182750433E-4	DESIGN
?M | Time | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9997989048848829	WITHOUT_CLASSIFICATION	2.0109511511710423E-4	DESIGN
?o | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999101522497621	WITHOUT_CLASSIFICATION	8.984775023792481E-5	DESIGN
?O | boolean | True if file1 exists and is owned by the caller's real uid	WITHOUT_CLASSIFICATION	0.9997607535048033	WITHOUT_CLASSIFICATION	2.3924649519676725E-4	DESIGN
?p | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9998790343289355	WITHOUT_CLASSIFICATION	1.2096567106437599E-4	DESIGN
?r | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999127543370536	WITHOUT_CLASSIFICATION	8.724566294640743E-5	DESIGN
?s | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999936340851444	WITHOUT_CLASSIFICATION	6.365914855662248E-6	DESIGN
?S | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9998790343289355	WITHOUT_CLASSIFICATION	1.2096567106437599E-4	DESIGN
?u | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9995436100484589	WITHOUT_CLASSIFICATION	4.563899515410505E-4	DESIGN
?x | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.999946690580822	WITHOUT_CLASSIFICATION	5.3309419178090703E-5	DESIGN
?X | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9998580391087303	WITHOUT_CLASSIFICATION	1.4196089126970735E-4	DESIGN
?z | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.999958922277281	WITHOUT_CLASSIFICATION	4.107772271900077E-5	DESIGN
?= | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999769926560701	WITHOUT_CLASSIFICATION	2.3007343929821216E-5	DESIGN
?< | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999464900875056	WITHOUT_CLASSIFICATION	5.350991249432071E-5	DESIGN
?> | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999732186598217	WITHOUT_CLASSIFICATION	2.6781340178394385E-5	DESIGN
?- | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999193434112663	WITHOUT_CLASSIFICATION	8.065658873363406E-5	DESIGN
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9998764020327401	WITHOUT_CLASSIFICATION	1.2359796725985482E-4	DESIGN
Error info is per-thread	WITHOUT_CLASSIFICATION	0.9986172357670701	WITHOUT_CLASSIFICATION	0.0013827642329300005	DESIGN
init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9989369511979875	WITHOUT_CLASSIFICATION	0.0010630488020124348	DESIGN
if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9998832819025069	WITHOUT_CLASSIFICATION	1.1671809749308824E-4	DESIGN
If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9991998730423819	WITHOUT_CLASSIFICATION	8.001269576180985E-4	DESIGN
new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9966182457108063	WITHOUT_CLASSIFICATION	0.0033817542891937387	DESIGN
set to default thread group	WITHOUT_CLASSIFICATION	0.9997293524952928	WITHOUT_CLASSIFICATION	2.706475047071453E-4	DESIGN
set to default thread group	WITHOUT_CLASSIFICATION	0.9997293524952928	WITHOUT_CLASSIFICATION	2.706475047071453E-4	DESIGN
JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.999392543848452	WITHOUT_CLASSIFICATION	6.074561515480758E-4	DESIGN
JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9995702264224449	WITHOUT_CLASSIFICATION	4.29773577555049E-4	DESIGN
for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9978219136209231	WITHOUT_CLASSIFICATION	0.0021780863790769353	DESIGN
JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9992457920151597	WITHOUT_CLASSIFICATION	7.542079848403864E-4	DESIGN
MRI behavior: value given in seconds; converted to Float; less than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9984109401094678	WITHOUT_CLASSIFICATION	0.0015890598905321297	DESIGN
If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999891925856124	WITHOUT_CLASSIFICATION	1.0807414387602628E-5	DESIGN
We need this loop in order to be able to "unblock" the join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9677102292484462	WITHOUT_CLASSIFICATION	0.03228977075155387	DESIGN
attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9993278691565916	WITHOUT_CLASSIFICATION	6.721308434084973E-4	DESIGN
not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9998998610580985	WITHOUT_CLASSIFICATION	1.0013894190157893E-4	DESIGN
If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9997755541242992	WITHOUT_CLASSIFICATION	2.2444587570075245E-4	DESIGN
check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999465009772295	WITHOUT_CLASSIFICATION	5.349902277047974E-5	DESIGN
check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999465009772295	WITHOUT_CLASSIFICATION	5.349902277047974E-5	DESIGN
ignore; I don't like doing it, but it seems like we really just need to make all channels non-blocking by default and use select when implementing blocking ops, so if this remains set non-blocking, perhaps it's not such a big deal...	WITHOUT_CLASSIFICATION	0.9738748295426352	DESIGN	0.026125170457364778	WITHOUT_CLASSIFICATION
can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9865151032227727	WITHOUT_CLASSIFICATION	0.013484896777227359	DESIGN
compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9861628179892037	WITHOUT_CLASSIFICATION	0.01383718201079625	DESIGN
Create Constants class	WITHOUT_CLASSIFICATION	0.9991322828494836	WITHOUT_CLASSIFICATION	8.677171505162927E-4	DESIGN
Create constants for open flags	WITHOUT_CLASSIFICATION	0.9992657195614973	WITHOUT_CLASSIFICATION	7.342804385026813E-4	DESIGN
Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9982312591233581	WITHOUT_CLASSIFICATION	0.001768740876641863	DESIGN
Create constants for flock	WITHOUT_CLASSIFICATION	0.9995516290620572	WITHOUT_CLASSIFICATION	4.483709379427495E-4	DESIGN
File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9940059382534602	WITHOUT_CLASSIFICATION	0.005994061746539823	DESIGN
Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999960175938171	WITHOUT_CLASSIFICATION	3.982406182913E-6	DESIGN
null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9979687987024686	WITHOUT_CLASSIFICATION	0.0020312012975313544	DESIGN
Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9997066526258515	WITHOUT_CLASSIFICATION	2.933473741485686E-4	DESIGN
Special case for handling ACCMODE, since constantine will generate an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999963205567148	WITHOUT_CLASSIFICATION	3.679443285205925E-6	DESIGN
Return false here	WITHOUT_CLASSIFICATION	0.9993925922367123	WITHOUT_CLASSIFICATION	6.074077632876276E-4	DESIGN
Return false here	WITHOUT_CLASSIFICATION	0.9993925922367123	WITHOUT_CLASSIFICATION	6.074077632876276E-4	DESIGN
We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9871820145671969	WITHOUT_CLASSIFICATION	0.012817985432803098	DESIGN
Should we do anything?	WITHOUT_CLASSIFICATION	0.9985213422806702	WITHOUT_CLASSIFICATION	0.0014786577193297065	DESIGN
File class methods	WITHOUT_CLASSIFICATION	0.9990541215218086	WITHOUT_CLASSIFICATION	9.458784781914626E-4	DESIGN
MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9985274580705444	WITHOUT_CLASSIFICATION	0.001472541929455546	DESIGN
strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9967733576092875	WITHOUT_CLASSIFICATION	0.0032266423907124486	DESIGN
C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9992382887841887	WITHOUT_CLASSIFICATION	7.617112158113434E-4	DESIGN
-1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9993988388828035	WITHOUT_CLASSIFICATION	6.011611171966141E-4	DESIGN
trim trailing slashes	WITHOUT_CLASSIFICATION	0.9992181990824031	WITHOUT_CLASSIFICATION	7.81800917596917E-4	DESIGN
Dot is not at beginning and not at end of filename.	WITHOUT_CLASSIFICATION	0.9988656287040213	WITHOUT_CLASSIFICATION	0.0011343712959787035	DESIGN
Handle ~user paths	WITHOUT_CLASSIFICATION	0.9987206933286159	WITHOUT_CLASSIFICATION	0.0012793066713840376	DESIGN
compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9861628179892037	WITHOUT_CLASSIFICATION	0.01383718201079625	DESIGN
Include additional path separator (so that dirname of "C:\file.txt" is "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.995346751916454	WITHOUT_CLASSIFICATION	0.004653248083545872	DESIGN
FNFException can be thrown in both cases, when the file is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.998494002069933	WITHOUT_CLASSIFICATION	0.0015059979300670171	DESIGN
No directory delimeter. Rest of string is username	WITHOUT_CLASSIFICATION	0.9999501417563171	WITHOUT_CLASSIFICATION	4.9858243682820385E-5	DESIGN
If there's a second argument, it's the path to which the first argument is relative.	WITHOUT_CLASSIFICATION	0.9999874793003438	WITHOUT_CLASSIFICATION	1.2520699656178886E-5	DESIGN
Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9990162425386732	WITHOUT_CLASSIFICATION	9.837574613268479E-4	DESIGN
If there's no second argument, simply use the working directory of the runtime.	WITHOUT_CLASSIFICATION	0.9999882577317174	WITHOUT_CLASSIFICATION	1.1742268282697517E-5	DESIGN
Find out which string to check.	WITHOUT_CLASSIFICATION	0.9983644481208126	WITHOUT_CLASSIFICATION	0.0016355518791873948	DESIGN
Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9956764169971815	WITHOUT_CLASSIFICATION	0.004323583002818583	DESIGN
Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9991192797392662	WITHOUT_CLASSIFICATION	8.807202607337809E-4	DESIGN
'~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9989478907903014	WITHOUT_CLASSIFICATION	0.0010521092096985555	DESIGN
'~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9989478907903014	WITHOUT_CLASSIFICATION	0.0010521092096985555	DESIGN
Prepare a string with the same number of redundant slashes so that we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9949366840052091	WITHOUT_CLASSIFICATION	0.005063315994790914	DESIGN
If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9996797875936687	WITHOUT_CLASSIFICATION	3.20212406331242E-4	DESIGN
no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9998220504599273	WITHOUT_CLASSIFICATION	1.7794954007258046E-4	DESIGN
we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.999861940025699	WITHOUT_CLASSIFICATION	1.380599743010746E-4	DESIGN
we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9995271266956751	WITHOUT_CLASSIFICATION	4.728733043249007E-4	DESIGN
do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9988916034232121	WITHOUT_CLASSIFICATION	0.0011083965767877688	DESIGN
rb: check_modifiable	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
rb: readable	WITHOUT_CLASSIFICATION	0.9996021078750033	WITHOUT_CLASSIFICATION	3.978921249967694E-4	DESIGN
rename is successful	WITHOUT_CLASSIFICATION	0.9738752090177344	WITHOUT_CLASSIFICATION	0.02612479098226565	DESIGN
rename via Java API call wasn't successful, let's try some tricks, similar to MRI	WITHOUT_CLASSIFICATION	0.9994082341659761	WITHOUT_CLASSIFICATION	5.917658340238767E-4	DESIGN
try to rename one more time	WITHOUT_CLASSIFICATION	0.9690158688802577	WITHOUT_CLASSIFICATION	0.03098413111974228	DESIGN
Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9975344716052389	WITHOUT_CLASSIFICATION	0.0024655283947610162	DESIGN
Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.962681987518759	WITHOUT_CLASSIFICATION	0.03731801248124103	DESIGN
RubyContinuation	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq) it doesn't initialize ifNone field	WITHOUT_CLASSIFICATION	0.9997322452045782	WITHOUT_CLASSIFICATION	2.677547954219147E-4	DESIGN
16 ?	WITHOUT_CLASSIFICATION	0.9991497151177554	WITHOUT_CLASSIFICATION	8.502848822444985E-4	DESIGN
generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9954445214764024	WITHOUT_CLASSIFICATION	0.004555478523597588	DESIGN
size + 1;	WITHOUT_CLASSIFICATION	0.9998028869181402	WITHOUT_CLASSIFICATION	1.9711308185974891E-4	DESIGN
suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9975774106044767	WITHOUT_CLASSIFICATION	0.0024225893955233313	DESIGN
------------------------------	WITHOUT_CLASSIFICATION	0.9994072205555466	WITHOUT_CLASSIFICATION	5.927794444533294E-4	DESIGN
------------------------------	WITHOUT_CLASSIFICATION	0.9994072205555466	WITHOUT_CLASSIFICATION	5.927794444533294E-4	DESIGN
put implementation	WITHOUT_CLASSIFICATION	0.9990958292676017	WITHOUT_CLASSIFICATION	9.041707323982996E-4	DESIGN
get implementation	WITHOUT_CLASSIFICATION	0.9991254111869118	WITHOUT_CLASSIFICATION	8.745888130882558E-4	DESIGN
specialized for value	WITHOUT_CLASSIFICATION	0.9995028577034484	WITHOUT_CLASSIFICATION	4.971422965515274E-4	DESIGN
delete implementation	WITHOUT_CLASSIFICATION	0.9998220330972473	WITHOUT_CLASSIFICATION	1.7796690275263406E-4	DESIGN
n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9970517513346215	WITHOUT_CLASSIFICATION	0.002948248665378576	DESIGN
============================ End of hash internals ============================	WITHOUT_CLASSIFICATION	0.998882876805711	WITHOUT_CLASSIFICATION	0.0011171231942890198	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9988587337523623	WITHOUT_CLASSIFICATION	0.0011412662476376519	DESIGN
update the hash value	WITHOUT_CLASSIFICATION	0.999929106289992	WITHOUT_CLASSIFICATION	7.08937100080742E-5	DESIGN
other hash does not contain key	WITHOUT_CLASSIFICATION	0.9917493296700152	WITHOUT_CLASSIFICATION	0.00825067032998476	DESIGN
rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9992749341000486	WITHOUT_CLASSIFICATION	7.250658999514094E-4	DESIGN
Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9991465572238182	WITHOUT_CLASSIFICATION	8.534427761818703E-4	DESIGN
remain where we are	WITHOUT_CLASSIFICATION	0.9989027393252828	WITHOUT_CLASSIFICATION	0.0010972606747172418	DESIGN
We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.999809012012024	WITHOUT_CLASSIFICATION	1.9098798797604615E-4	DESIGN
default: don't retain	WITHOUT_CLASSIFICATION	0.999481765369552	WITHOUT_CLASSIFICATION	5.182346304479346E-4	DESIGN
once hasNext has been called, we commit to next() returning the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9981385222109767	WITHOUT_CLASSIFICATION	0.001861477789023259	DESIGN
Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9900231281569808	WITHOUT_CLASSIFICATION	0.009976871843019108	DESIGN
We do both writable and writable_real through the same method because in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9967935301532207	WITHOUT_CLASSIFICATION	0.0032064698467793684	DESIGN
first try as directory	WITHOUT_CLASSIFICATION	0.9999826134427348	WITHOUT_CLASSIFICATION	1.738655726532315E-5	DESIGN
next as regular file	WITHOUT_CLASSIFICATION	0.9997215802178229	WITHOUT_CLASSIFICATION	2.784197821771424E-4	DESIGN
We only want IO objects with valid streams (better to error now).	WITHOUT_CLASSIFICATION	0.9993629433619738	WITHOUT_CLASSIFICATION	6.370566380261599E-4	DESIGN
NIO-based	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
NIO-based	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
Stream-based	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9990114282581203	WITHOUT_CLASSIFICATION	9.885717418797054E-4	DESIGN
We use FILE versus IO to match T_FILE in MRI.	WITHOUT_CLASSIFICATION	0.995343876135682	WITHOUT_CLASSIFICATION	0.004656123864318016	DESIGN
Constants for seek	WITHOUT_CLASSIFICATION	0.9995051220407359	WITHOUT_CLASSIFICATION	4.948779592640146E-4	DESIGN
confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9988096591052851	WITHOUT_CLASSIFICATION	0.001190340894714939	DESIGN
check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999255200599759	WITHOUT_CLASSIFICATION	7.447994002410501E-5	DESIGN
dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9907802686451648	WITHOUT_CLASSIFICATION	0.0092197313548352	DESIGN
re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9996825600793505	WITHOUT_CLASSIFICATION	3.174399206494893E-4	DESIGN
re-register the descriptor	WITHOUT_CLASSIFICATION	0.9996751255735673	WITHOUT_CLASSIFICATION	3.2487442643262744E-4	DESIGN
since we're not actually duping the incoming channel into our handler, we need to copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9753937581926098	WITHOUT_CLASSIFICATION	0.02460624180739014	DESIGN
re-register	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9995426911292752	WITHOUT_CLASSIFICATION	4.573088707247878E-4	DESIGN
Ensure that separator is valid otherwise give it the default paragraph separator.	WITHOUT_CLASSIFICATION	0.99997753007516	WITHOUT_CLASSIFICATION	2.2469924840002373E-5	DESIGN
loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.999871738066094	WITHOUT_CLASSIFICATION	1.2826193390601137E-4	DESIGN
if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9980920604089099	WITHOUT_CLASSIFICATION	0.0019079395910901688	DESIGN
this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.6344967888021893	WITHOUT_CLASSIFICATION	0.36550321119781054	DESIGN
IO class methods.	WITHOUT_CLASSIFICATION	0.998496680690714	WITHOUT_CLASSIFICATION	0.0015033193092860932	DESIGN
use original modes	WITHOUT_CLASSIFICATION	0.9991972206817615	WITHOUT_CLASSIFICATION	8.027793182384535E-4	DESIGN
See if we already have this descriptor open. If so then we can mostly share the handler (keep open file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9998147052938292	WITHOUT_CLASSIFICATION	1.8529470617070765E-4	DESIGN
redundant, done above as well	WITHOUT_CLASSIFICATION	0.9892369641033112	WITHOUT_CLASSIFICATION	0.010763035896688837	DESIGN
MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9987646461212785	WITHOUT_CLASSIFICATION	0.0012353538787215435	DESIGN
-1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9996275078223285	WITHOUT_CLASSIFICATION	3.724921776715334E-4	DESIGN
isRetained=true	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
This appears to be some windows-only mode. On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9235455901093966	WITHOUT_CLASSIFICATION	0.07645440989060341	DESIGN
if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9980099630162863	WITHOUT_CLASSIFICATION	0.001990036983713658	DESIGN
Throw bad file descriptor is we can not read on supplied descriptor.	WITHOUT_CLASSIFICATION	0.9916919033027597	WITHOUT_CLASSIFICATION	0.008308096697240273	DESIGN
Everything written	WITHOUT_CLASSIFICATION	0.9997908186568987	WITHOUT_CLASSIFICATION	2.0918134310129587E-4	DESIGN
return len - n;	WITHOUT_CLASSIFICATION	0.999730312001045	WITHOUT_CLASSIFICATION	2.6968799895497696E-4	DESIGN
Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9829792669083056	WITHOUT_CLASSIFICATION	0.017020733091694374	DESIGN
Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9865770045845935	WITHOUT_CLASSIFICATION	0.013422995415406466	DESIGN
Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9890781594221566	WITHOUT_CLASSIFICATION	0.010921840577843357	DESIGN
Register the new descriptor	WITHOUT_CLASSIFICATION	0.9995911672779005	WITHOUT_CLASSIFICATION	4.088327220995439E-4	DESIGN
cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9994647618619429	WITHOUT_CLASSIFICATION	5.352381380570276E-4	DESIGN
hmmmm	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9931448172419047	WITHOUT_CLASSIFICATION	0.0068551827580952285	DESIGN
Do nothing. FD_CLOEXEC has no meaning in JVM since we cannot really exec. And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.6602504556097649	WITHOUT_CLASSIFICATION	0.3397495443902352	DESIGN
Do nothing. FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9930665900605244	WITHOUT_CLASSIFICATION	0.006933409939475524	DESIGN
Length to read	WITHOUT_CLASSIFICATION	0.9992007721725251	WITHOUT_CLASSIFICATION	7.992278274747869E-4	DESIGN
String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9912250323981471	WITHOUT_CLASSIFICATION	0.008774967601852922	DESIGN
cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9995942741036785	WITHOUT_CLASSIFICATION	4.0572589632147793E-4	DESIGN
select until read is ready	WITHOUT_CLASSIFICATION	0.9995388426093026	WITHOUT_CLASSIFICATION	4.6115739069740066E-4	DESIGN
ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999321336348077	WITHOUT_CLASSIFICATION	6.786636519228402E-5	DESIGN
buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999308306030436	WITHOUT_CLASSIFICATION	6.916939695649003E-5	DESIGN
READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9992776253932997	WITHOUT_CLASSIFICATION	7.223746067004025E-4	DESIGN
rb: writable	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9992776253932997	WITHOUT_CLASSIFICATION	7.223746067004025E-4	DESIGN
All errors to sysread should be SystemCallErrors, but on a closed stream Ruby returns an IOError. Java throws same exception for all errors so we resort to this hack...	WITHOUT_CLASSIFICATION	0.888088422310462	WITHOUT_CLASSIFICATION	0.11191157768953802	DESIGN
TODO: read into buffer using all the fread logic int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.8354062743395377	WITHOUT_CLASSIFICATION	0.16459372566046226	DESIGN
truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9995859190273697	WITHOUT_CLASSIFICATION	4.14080972630264E-4	DESIGN
TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.6094677284481875	WITHOUT_CLASSIFICATION	0.3905322715518125	DESIGN
class methods for IO	WITHOUT_CLASSIFICATION	0.9983351705571654	WITHOUT_CLASSIFICATION	0.0016648294428346392	DESIGN
save blocking state	WITHOUT_CLASSIFICATION	0.9998376245584496	WITHOUT_CLASSIFICATION	1.6237544155039963E-4	DESIGN
write	WITHOUT_CLASSIFICATION	0.999440535817261	WITHOUT_CLASSIFICATION	5.594641827390713E-4	DESIGN
Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9995152368783256	WITHOUT_CLASSIFICATION	4.8476312167442936E-4	DESIGN
make all sockets blocking as configured again close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9997048586787981	WITHOUT_CLASSIFICATION	2.951413212020085E-4	DESIGN
FIXME: process options	WITHOUT_CLASSIFICATION	0.9060609999857383	WITHOUT_CLASSIFICATION	0.09393900001426161	DESIGN
Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9499114489562057	WITHOUT_CLASSIFICATION	0.050088551043794276	DESIGN
NIO based pipe	WITHOUT_CLASSIFICATION	0.9990383143019237	WITHOUT_CLASSIFICATION	9.616856980762675E-4	DESIGN
not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9970867247197711	WITHOUT_CLASSIFICATION	0.0029132752802288556	DESIGN
raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9998170814752319	WITHOUT_CLASSIFICATION	1.8291852476809311E-4	DESIGN
may need to handle ENC_CODERANGE_BROKEN	WITHOUT_CLASSIFICATION	0.9659992081182934	WITHOUT_CLASSIFICATION	0.03400079188170661	DESIGN
TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.6554147056480769	WITHOUT_CLASSIFICATION	0.3445852943519232	DESIGN
If we know what method was being called, strip everything before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9782982819667904	WITHOUT_CLASSIFICATION	0.02170171803320967	DESIGN
The class of this object	WITHOUT_CLASSIFICATION	0.9950217789573456	WITHOUT_CLASSIFICATION	0.0049782210426544396	DESIGN
zeroed by jvm	WITHOUT_CLASSIFICATION	0.999534752238301	WITHOUT_CLASSIFICATION	4.65247761698863E-4	DESIGN
objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9986828689501004	WITHOUT_CLASSIFICATION	0.001317131049899571	DESIGN
JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.974080461593646	WITHOUT_CLASSIFICATION	0.025919538406354036	DESIGN
rb_class_boot	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
6:tags 16:addr 1:eos	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9994072205555466	WITHOUT_CLASSIFICATION	5.927794444533294E-4	DESIGN
for interface impls	WITHOUT_CLASSIFICATION	0.9991052073874332	WITHOUT_CLASSIFICATION	8.947926125667733E-4	DESIGN
We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9906451951168914	WITHOUT_CLASSIFICATION	0.009354804883108631	DESIGN
Methods of the Object class (rb_obj_):	WITHOUT_CLASSIFICATION	0.9985418357290337	WITHOUT_CLASSIFICATION	0.0014581642709663057	DESIGN
can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9989129769759016	WITHOUT_CLASSIFICATION	0.0010870230240984085	DESIGN
include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9849969760323775	WITHOUT_CLASSIFICATION	0.015003023967622637	DESIGN
Equivalent of Data_Get_Struct This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9943865460262039	WITHOUT_CLASSIFICATION	0.00561345397379603	DESIGN
COMMON VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9994072205555466	WITHOUT_CLASSIFICATION	5.927794444533294E-4	DESIGN
INTERNAL VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9994072205555466	WITHOUT_CLASSIFICATION	5.927794444533294E-4	DESIGN
INSTANCE VARIABLE API METHODS	WITHOUT_CLASSIFICATION	0.9997467938676113	WITHOUT_CLASSIFICATION	2.5320613238860335E-4	DESIGN
Struct methods	WITHOUT_CLASSIFICATION	0.9995651445781544	WITHOUT_CLASSIFICATION	4.348554218456479E-4	DESIGN
runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.997570845592766	WITHOUT_CLASSIFICATION	0.00242915440723406	DESIGN
define access methods.	WITHOUT_CLASSIFICATION	0.9979028402524992	WITHOUT_CLASSIFICATION	0.0020971597475008424	DESIGN
if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9468090215636703	WITHOUT_CLASSIFICATION	0.05319097843632969	DESIGN
Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9973814204917817	WITHOUT_CLASSIFICATION	0.002618579508218294	DESIGN
For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9997711692115211	WITHOUT_CLASSIFICATION	2.288307884790015E-4	DESIGN
OBJ_INFECT	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
These call assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9996400875123926	WITHOUT_CLASSIFICATION	3.599124876073986E-4	DESIGN
Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9991881626249226	WITHOUT_CLASSIFICATION	8.118373750774714E-4	DESIGN
@param nv number of times to cycle or -1 to cycle indefinitely	WITHOUT_CLASSIFICATION	0.9883932864543751	WITHOUT_CLASSIFICATION	0.011606713545625036	DESIGN
Atomic ?	WITHOUT_CLASSIFICATION	0.9991466197614056	WITHOUT_CLASSIFICATION	8.533802385943717E-4	DESIGN
Atomic ?	WITHOUT_CLASSIFICATION	0.9991466197614056	WITHOUT_CLASSIFICATION	8.533802385943717E-4	DESIGN
MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9970554762739111	WITHOUT_CLASSIFICATION	0.002944523726088823	DESIGN
superClass may be null.	WITHOUT_CLASSIFICATION	0.9988142437365477	WITHOUT_CLASSIFICATION	0.0011857562634523438	DESIGN
Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9490993275407936	WITHOUT_CLASSIFICATION	0.05090067245920644	DESIGN
ClassId is the name of the class/module sans where it is located. If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9998120769621985	WITHOUT_CLASSIFICATION	1.8792303780140865E-4	DESIGN
ClassProviders return Java class/module (in #defineOrGetClassUnder and #defineOrGetModuleUnder) when class/module is opened using colon syntax.	WITHOUT_CLASSIFICATION	0.999952931862846	WITHOUT_CLASSIFICATION	4.7068137154117074E-5	DESIGN
update superclass reference	WITHOUT_CLASSIFICATION	0.9999174990819424	WITHOUT_CLASSIFICATION	8.25009180576302E-5	DESIGN
Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9993411870248944	WITHOUT_CLASSIFICATION	6.588129751056073E-4	DESIGN
MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9994094259423081	WITHOUT_CLASSIFICATION	5.905740576919944E-4	DESIGN
we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9875497590239065	WITHOUT_CLASSIFICATION	0.012450240976093535	DESIGN
module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9997840345843162	WITHOUT_CLASSIFICATION	2.1596541568382675E-4	DESIGN
See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9996841959782914	WITHOUT_CLASSIFICATION	3.15804021708684E-4	DESIGN
We can safely reference methods here instead of doing getMethods() since if we are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9997382807256309	WITHOUT_CLASSIFICATION	2.617192743690819E-4	DESIGN
we grab serial number first; the worst that will happen is we cache a later update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999385187798175	WITHOUT_CLASSIFICATION	6.148122018252269E-5	DESIGN
update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9851802262986824	WITHOUT_CLASSIFICATION	0.014819773701317665	DESIGN
This method is intended only for defining new classes in Ruby code, so it uses the allocator of the specified superclass or default to the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.8079508753041124	WITHOUT_CLASSIFICATION	0.19204912469588764	DESIGN
need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9985147580533646	WITHOUT_CLASSIFICATION	0.0014852419466354016	DESIGN
superClazz = null;	WITHOUT_CLASSIFICATION	0.9999527231217296	WITHOUT_CLASSIFICATION	4.7276878270444475E-5	DESIGN
reopen a java class	WITHOUT_CLASSIFICATION	0.9986769431121214	WITHOUT_CLASSIFICATION	0.0013230568878785992	DESIGN
This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.8590165828236423	WITHOUT_CLASSIFICATION	0.14098341717635765	DESIGN
reopen a java module	WITHOUT_CLASSIFICATION	0.9988562772266669	WITHOUT_CLASSIFICATION	0.001143722773332992	DESIGN
FIXME warning	WITHOUT_CLASSIFICATION	0.9908843178852039	WITHOUT_CLASSIFICATION	0.009115682114796098	DESIGN
FIXME warning	WITHOUT_CLASSIFICATION	0.9908843178852039	WITHOUT_CLASSIFICATION	0.009115682114796098	DESIGN
a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.996682357980843	WITHOUT_CLASSIFICATION	0.00331764201915696	DESIGN
for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9992392023823871	WITHOUT_CLASSIFICATION	7.607976176129773E-4	DESIGN
just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9996116114089237	WITHOUT_CLASSIFICATION	3.883885910762782E-4	DESIGN
class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9960001569929126	WITHOUT_CLASSIFICATION	0.003999843007087483	DESIGN
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9971709783601247	WITHOUT_CLASSIFICATION	0.0028290216398752796	DESIGN
MRI error message says Class, even though Module is ok	WITHOUT_CLASSIFICATION	0.9929562407425414	WITHOUT_CLASSIFICATION	0.007043759257458556	DESIGN
scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9950747371342196	WITHOUT_CLASSIFICATION	0.0049252628657804	DESIGN
Module class methods	WITHOUT_CLASSIFICATION	0.9989433076153312	WITHOUT_CLASSIFICATION	0.0010566923846686966	DESIGN
Note: we change current frames visibility here because the methods which call this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9041065528285708	WITHOUT_CLASSIFICATION	0.09589344717142918	DESIGN
next in hierarchy is an included version of the module we're attempting, so we skip including it	WITHOUT_CLASSIFICATION	0.999708356181695	WITHOUT_CLASSIFICATION	2.916438183050608E-4	DESIGN
if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9960794668238453	WITHOUT_CLASSIFICATION	0.003920533176154657	DESIGN
build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9881511587857884	WITHOUT_CLASSIFICATION	0.011848841214211647	DESIGN
if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999821307442518	WITHOUT_CLASSIFICATION	1.786925574826535E-5	DESIGN
if there's a non-null superclass, we're including into a normal class hierarchy; update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9964191878671711	WITHOUT_CLASSIFICATION	0.0035808121328288565	DESIGN
CLASS VARIABLE RUBY METHODS	WITHOUT_CLASSIFICATION	0.9994294303386462	WITHOUT_CLASSIFICATION	5.705696613538825E-4	DESIGN
CONSTANT RUBY METHODS	WITHOUT_CLASSIFICATION	0.9994072205555466	WITHOUT_CLASSIFICATION	5.927794444533294E-4	DESIGN
Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9956275239427452	WITHOUT_CLASSIFICATION	0.004372476057254774	DESIGN
CLASS VARIABLE API METHODS	WITHOUT_CLASSIFICATION	0.9997562838937802	WITHOUT_CLASSIFICATION	2.4371610621972163E-4	DESIGN
Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9995377403494055	WITHOUT_CLASSIFICATION	4.6225965059454327E-4	DESIGN
not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9980250298548774	WITHOUT_CLASSIFICATION	0.001974970145122703	DESIGN
Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9907838329469248	WITHOUT_CLASSIFICATION	0.009216167053075099	DESIGN
if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9968424612039201	WITHOUT_CLASSIFICATION	0.0031575387960799312	DESIGN
Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9983302485843135	WITHOUT_CLASSIFICATION	0.0016697514156864717	DESIGN
returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.99928490850303	WITHOUT_CLASSIFICATION	7.150914969699355E-4	DESIGN
removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9996955292312312	WITHOUT_CLASSIFICATION	3.044707687688123E-4	DESIGN
we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9862096620980698	WITHOUT_CLASSIFICATION	0.013790337901930166	DESIGN
reopen	WITHOUT_CLASSIFICATION	0.9993023889655205	WITHOUT_CLASSIFICATION	6.976110344795637E-4	DESIGN
ARGF methods	WITHOUT_CLASSIFICATION	0.9995651445781544	WITHOUT_CLASSIFICATION	4.348554218456479E-4	DESIGN
data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9986828689501004	WITHOUT_CLASSIFICATION	0.001317131049899571	DESIGN
one optional, one required args	WITHOUT_CLASSIFICATION	0.9993650680480741	WITHOUT_CLASSIFICATION	6.349319519258475E-4	DESIGN
one optional and no required args	WITHOUT_CLASSIFICATION	0.9997736795038414	WITHOUT_CLASSIFICATION	2.2632049615857767E-4	DESIGN
try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9982709231643425	WITHOUT_CLASSIFICATION	0.0017290768356575108	DESIGN
we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999367030911994	WITHOUT_CLASSIFICATION	6.329690880050486E-5	DESIGN
Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9995924206491117	WITHOUT_CLASSIFICATION	4.0757935088825257E-4	DESIGN
print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.986922890922976	WITHOUT_CLASSIFICATION	0.013077109077023936	DESIGN
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9936776959817233	WITHOUT_CLASSIFICATION	0.0063223040182767126	DESIGN
set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9993713000081947	WITHOUT_CLASSIFICATION	6.286999918052274E-4	DESIGN
can't set TC classloader	WITHOUT_CLASSIFICATION	0.9991273669296771	WITHOUT_CLASSIFICATION	8.726330703229389E-4	DESIGN
no script to run, return success below	WITHOUT_CLASSIFICATION	0.9997853126519801	WITHOUT_CLASSIFICATION	2.1468734801987106E-4	DESIGN
Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9998150803973107	WITHOUT_CLASSIFICATION	1.8491960268922792E-4	DESIGN
Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9991006881476459	WITHOUT_CLASSIFICATION	8.993118523541799E-4	DESIGN
Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9989092408257317	WITHOUT_CLASSIFICATION	0.0010907591742683564	DESIGN
ignore error	WITHOUT_CLASSIFICATION	0.9993644452707307	WITHOUT_CLASSIFICATION	6.355547292692747E-4	DESIGN
COMMON CONSTANT / CVAR METHODS	WITHOUT_CLASSIFICATION	0.9996745390805637	WITHOUT_CLASSIFICATION	3.2546091943622064E-4	DESIGN
INTERNAL MODULE VARIABLE API METHODS	WITHOUT_CLASSIFICATION	0.9994371529107556	WITHOUT_CLASSIFICATION	5.628470892444551E-4	DESIGN
LOW-LEVEL CONSTANT INTERFACE fetch/store/list constants for this module	WITHOUT_CLASSIFICATION	0.984363046141902	WITHOUT_CLASSIFICATION	0.015636953858097994	DESIGN
odd	WITHOUT_CLASSIFICATION	0.9993147966653072	WITHOUT_CLASSIFICATION	6.852033346928262E-4	DESIGN
JRubyClient	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
x = mantissa 2 exponent Where mantissa is in the range of [.5, 1)	WITHOUT_CLASSIFICATION	0.9999548434316662	WITHOUT_CLASSIFICATION	4.515656833381271E-5	DESIGN
Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9991911782818967	WITHOUT_CLASSIFICATION	8.088217181033516E-4	DESIGN
Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9977476013084325	WITHOUT_CLASSIFICATION	0.002252398691567515	DESIGN
r = x 2 y	WITHOUT_CLASSIFICATION	0.9999871465311416	WITHOUT_CLASSIFICATION	1.2853468858303509E-5	DESIGN
0!	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
1!	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
2!	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
3!	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
4!	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
5!	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
6!	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
7!	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
8!	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
9!	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
11!	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
12!	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
13!	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
15!	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
16!	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
17!	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
19!	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
20!	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
21!	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
Static constants	WITHOUT_CLASSIFICATION	0.9996089999816905	WITHOUT_CLASSIFICATION	3.910000183095387E-4	DESIGN
Clean-up string representation so that it could be understood by Java's BigDecimal. Not terribly efficient for now. 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9998601546049909	WITHOUT_CLASSIFICATION	1.3984539500921478E-4	DESIGN
2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9996295786959124	WITHOUT_CLASSIFICATION	3.704213040875311E-4	DESIGN
3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9990273961139995	WITHOUT_CLASSIFICATION	9.726038860005858E-4	DESIGN
MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.997289930918846	WITHOUT_CLASSIFICATION	0.0027100690811540117	DESIGN
Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9995118368629622	WITHOUT_CLASSIFICATION	4.8816313703785313E-4	DESIGN
Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9998611351578788	WITHOUT_CLASSIFICATION	1.3886484212119108E-4	DESIGN
Note: MRI has a very non-trivial way of calculating the precision, so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9621728577609819	WITHOUT_CLASSIFICATION	0.03782714223901808	DESIGN
Iteration variables, for the square root x and the reciprocal v initial x: x0 ~ sqrt() initial v: v0 = 1/(2x)	WITHOUT_CLASSIFICATION	0.9999908742457229	WITHOUT_CLASSIFICATION	9.125754277161729E-6	DESIGN
it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9966824010421564	WITHOUT_CLASSIFICATION	0.0033175989578435117	DESIGN
TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9419845035174794	DESIGN	0.05801549648252054	WITHOUT_CLASSIFICATION
integer division	WITHOUT_CLASSIFICATION	0.9995610670177506	WITHOUT_CLASSIFICATION	4.3893298224934794E-4	DESIGN
MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9995649327075454	WITHOUT_CLASSIFICATION	4.350672924545266E-4	DESIGN
rounding neccessary	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
rounding neccessary	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
Java and MRI definitions of divmod are different.	WITHOUT_CLASSIFICATION	0.9995118368629622	WITHOUT_CLASSIFICATION	4.8816313703785313E-4	DESIGN
JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9911720617515279	WITHOUT_CLASSIFICATION	0.008827938248472042	DESIGN
shift the decimal point just to the right of the digit to be rounded to (divide by 10(abs(scale))) -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.998738183968607	WITHOUT_CLASSIFICATION	0.0012618160313929909	DESIGN
...round to that digit	WITHOUT_CLASSIFICATION	0.9988413534489788	WITHOUT_CLASSIFICATION	0.0011586465510211841	DESIGN
...and shift the result back to the left (multiply by 10(abs(scale)))	WITHOUT_CLASSIFICATION	0.9992553181948932	WITHOUT_CLASSIFICATION	7.446818051067284E-4	DESIGN
this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9979712663246556	WITHOUT_CLASSIFICATION	0.0020287336753443087	DESIGN
sign	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
significant digits and exponent	WITHOUT_CLASSIFICATION	0.9987668979307834	WITHOUT_CLASSIFICATION	0.0012331020692166188	DESIGN
normalize the value	WITHOUT_CLASSIFICATION	0.9998864769282866	WITHOUT_CLASSIFICATION	1.1352307171338415E-4	DESIGN
base	WITHOUT_CLASSIFICATION	0.999563931241372	WITHOUT_CLASSIFICATION	4.3606875862798336E-4	DESIGN
NOTE: MRI's sqrt precision is limited by 100, but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9975583522133494	WITHOUT_CLASSIFICATION	0.00244164778665054	DESIGN
just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9882821995000343	WITHOUT_CLASSIFICATION	0.01171780049996576	DESIGN
eh?!	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.999715099012544	WITHOUT_CLASSIFICATION	2.8490098745606954E-4	DESIGN
General number and precision checking	WITHOUT_CLASSIFICATION	0.9995969937023111	WITHOUT_CLASSIFICATION	4.0300629768886463E-4	DESIGN
the requested precision	WITHOUT_CLASSIFICATION	0.999822552353053	WITHOUT_CLASSIFICATION	1.7744764694701702E-4	DESIGN
Proc class	WITHOUT_CLASSIFICATION	0.9982970438862581	WITHOUT_CLASSIFICATION	0.0017029561137419536	DESIGN
.append(" -x[directory] strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9956086966523435	WITHOUT_CLASSIFICATION	0.004391303347656475	DESIGN
even shift.. ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9882307411263326	WITHOUT_CLASSIFICATION	0.011769258873667353	DESIGN
5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9968248860319338	WITHOUT_CLASSIFICATION	0.0031751139680661388	DESIGN
..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9997314986951129	WITHOUT_CLASSIFICATION	2.685013048871058E-4	DESIGN
Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9953357389345093	WITHOUT_CLASSIFICATION	0.004664261065490686	DESIGN
x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
for prec 15 root x0 must surely be OK return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9997565779067743	WITHOUT_CLASSIFICATION	2.4342209322573215E-4	DESIGN
Initial v - the reciprocal v0 = 1/(2x)	WITHOUT_CLASSIFICATION	0.9997553078513232	WITHOUT_CLASSIFICATION	2.44692148676881E-4	DESIGN
Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9992480226624413	WITHOUT_CLASSIFICATION	7.519773375587534E-4	DESIGN
assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999014059888643	WITHOUT_CLASSIFICATION	9.859401113571308E-5	DESIGN
The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9994266714708521	WITHOUT_CLASSIFICATION	5.73328529147886E-4	DESIGN
Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9922652668894799	WITHOUT_CLASSIFICATION	0.0077347331105201865	DESIGN
Next x e = d - x^2	WITHOUT_CLASSIFICATION	0.9999616268824733	WITHOUT_CLASSIFICATION	3.83731175267519E-5	DESIGN
x += ev ~ sqrt()	WITHOUT_CLASSIFICATION	0.999854924496214	WITHOUT_CLASSIFICATION	1.4507550378593348E-4	DESIGN
root x is ready!	WITHOUT_CLASSIFICATION	0.9995438722352233	WITHOUT_CLASSIFICATION	4.5612776477666996E-4	DESIGN
Next v g = 1 - 2xv	WITHOUT_CLASSIFICATION	0.9999131316344357	WITHOUT_CLASSIFICATION	8.686836556433726E-5	DESIGN
v += gv ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.99966174180736	WITHOUT_CLASSIFICATION	3.382581926399646E-4	DESIGN
RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
c: bind_eval	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
================ Module Methods ================	WITHOUT_CLASSIFICATION	0.9987402461888959	WITHOUT_CLASSIFICATION	0.0012597538111041575	DESIGN
from CommandlineParser	WITHOUT_CLASSIFICATION	0.9992776253932997	WITHOUT_CLASSIFICATION	7.223746067004025E-4	DESIGN
This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9862651041531368	WITHOUT_CLASSIFICATION	0.013734895846863153	DESIGN
default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9996637471204932	WITHOUT_CLASSIFICATION	3.3625287950674054E-4	DESIGN
Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9495853186083683	WITHOUT_CLASSIFICATION	0.05041468139163176	DESIGN
Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9943372792634853	WITHOUT_CLASSIFICATION	0.005662720736514812	DESIGN
try the normal property first	WITHOUT_CLASSIFICATION	0.9999687603009163	WITHOUT_CLASSIFICATION	3.123969908370252E-5	DESIGN
verify it if it's there	WITHOUT_CLASSIFICATION	0.999943400495049	WITHOUT_CLASSIFICATION	5.65995049509894E-5	DESIGN
verify it if it's there	WITHOUT_CLASSIFICATION	0.999943400495049	WITHOUT_CLASSIFICATION	5.65995049509894E-5	DESIGN
try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9984243408548904	WITHOUT_CLASSIFICATION	0.001575659145109595	DESIGN
otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9997991114802101	WITHOUT_CLASSIFICATION	2.0088851979006118E-4	DESIGN
We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.999805511566786	WITHOUT_CLASSIFICATION	1.94488433213941E-4	DESIGN
consume the file name	WITHOUT_CLASSIFICATION	0.9997589679101423	WITHOUT_CLASSIFICATION	2.410320898576101E-4	DESIGN
Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9991215411254256	WITHOUT_CLASSIFICATION	8.784588745742627E-4	DESIGN
try cwd first	WITHOUT_CLASSIFICATION	0.9998890113666289	WITHOUT_CLASSIFICATION	1.10988633371092E-4	DESIGN
ruby interpreter compatibilty Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9986828689501004	WITHOUT_CLASSIFICATION	0.001317131049899571	DESIGN
KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.7760075118754046	WITHOUT_CLASSIFICATION	0.2239924881245954	DESIGN
@JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9998406902016139	WITHOUT_CLASSIFICATION	1.5930979838612298E-4	DESIGN
@JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999283477509946	WITHOUT_CLASSIFICATION	7.165224900544555E-5	DESIGN
@JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9998406902016139	WITHOUT_CLASSIFICATION	1.5930979838612298E-4	DESIGN
symbol string must be interned	WITHOUT_CLASSIFICATION	0.9997194716578446	WITHOUT_CLASSIFICATION	2.8052834215534057E-4	DESIGN
assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9870438314912545	WITHOUT_CLASSIFICATION	0.012956168508745456	DESIGN
Symbol class methods.	WITHOUT_CLASSIFICATION	0.9982401334272353	WITHOUT_CLASSIFICATION	0.001759866572764675	DESIGN
TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.6554147056480769	WITHOUT_CLASSIFICATION	0.3445852943519232	DESIGN
This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9707396976649715	WITHOUT_CLASSIFICATION	0.029260302335028462	DESIGN
we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9832280182425615	WITHOUT_CLASSIFICATION	0.01677198175743855	DESIGN
must be power of 2!	WITHOUT_CLASSIFICATION	0.9996296783603658	WITHOUT_CLASSIFICATION	3.7032163963413223E-4	DESIGN
note all fields are final -- rehash creates new entries when necessary. as documented in java.util.concurrent.ConcurrentHashMap.java, that will statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9997628898847999	WITHOUT_CLASSIFICATION	2.3711011520016336E-4	DESIGN
assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9870438314912545	WITHOUT_CLASSIFICATION	0.012956168508745456	DESIGN
try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999050197477015	WITHOUT_CLASSIFICATION	9.498025229843654E-5	DESIGN
try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999050197477015	WITHOUT_CLASSIFICATION	9.498025229843654E-5	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9993525870155354	WITHOUT_CLASSIFICATION	6.474129844645502E-4	DESIGN
Single node on list	WITHOUT_CLASSIFICATION	0.9991348721990061	WITHOUT_CLASSIFICATION	8.651278009938891E-4	DESIGN
Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9967615445911842	WITHOUT_CLASSIFICATION	0.0032384554088158313	DESIGN
Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9998805921619164	WITHOUT_CLASSIFICATION	1.1940783808364825E-4	DESIGN
Check the length every iteration, since the block can modify this string.	WITHOUT_CLASSIFICATION	0.9921657966888744	WITHOUT_CLASSIFICATION	0.00783420331112562	DESIGN
we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9986887191415695	WITHOUT_CLASSIFICATION	0.0013112808584304003	DESIGN
not so backwards-compatible here, but no one should have been calling this anyway.	WITHOUT_CLASSIFICATION	0.9954981825763287	WITHOUT_CLASSIFICATION	0.004501817423671237	DESIGN
Profile	WITHOUT_CLASSIFICATION	0.9995265616716604	WITHOUT_CLASSIFICATION	4.734383283396277E-4	DESIGN
static private final String TRANSLIT = "translit";	WITHOUT_CLASSIFICATION	0.9995386458585325	WITHOUT_CLASSIFICATION	4.6135414146750706E-4	DESIGN
treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9998148716058869	WITHOUT_CLASSIFICATION	1.8512839411307142E-4	DESIGN
invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9993485789594425	WITHOUT_CLASSIFICATION	6.514210405575427E-4	DESIGN
Methods of the Nil Class (nil_):	WITHOUT_CLASSIFICATION	0.9994144302694568	WITHOUT_CLASSIFICATION	5.855697305433109E-4	DESIGN
Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9995046585832996	WITHOUT_CLASSIFICATION	4.953414167004342E-4	DESIGN
Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9929742997681426	WITHOUT_CLASSIFICATION	0.00702570023185738	DESIGN
must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9988389053579283	WITHOUT_CLASSIFICATION	0.0011610946420717114	DESIGN
reset the state	WITHOUT_CLASSIFICATION	0.9999329705879463	WITHOUT_CLASSIFICATION	6.7029412053704E-5	DESIGN
Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9942397045837555	WITHOUT_CLASSIFICATION	0.00576029541624441	DESIGN
rb_match_busy	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
str is frozen	WITHOUT_CLASSIFICATION	0.9991478872404215	WITHOUT_CLASSIFICATION	8.521127595786053E-4	DESIGN
MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9645316203124229	WITHOUT_CLASSIFICATION	0.03546837968757706	DESIGN
JRubyServer	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9985210219113524	WITHOUT_CLASSIFICATION	0.0014789780886475758	DESIGN
boot the Object class	WITHOUT_CLASSIFICATION	0.9992085244159397	WITHOUT_CLASSIFICATION	7.914755840602454E-4	DESIGN
Methods of the Object class (rb_obj_):	WITHOUT_CLASSIFICATION	0.9985418357290337	WITHOUT_CLASSIFICATION	0.0014581642709663057	DESIGN
update superclass reference	WITHOUT_CLASSIFICATION	0.9999174990819424	WITHOUT_CLASSIFICATION	8.25009180576302E-5	DESIGN
undo check	WITHOUT_CLASSIFICATION	0.999853383848634	WITHOUT_CLASSIFICATION	1.4661615136598045E-4	DESIGN
This is a non-standard method; have we decided to start extending Ruby? classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9655806176916054	WITHOUT_CLASSIFICATION	0.0344193823083947	DESIGN
boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9996817369812264	WITHOUT_CLASSIFICATION	3.18263018773593E-4	DESIGN
this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9887638226861921	WITHOUT_CLASSIFICATION	0.01123617731380792	DESIGN
use parent's marshal	WITHOUT_CLASSIFICATION	0.9988264601985304	WITHOUT_CLASSIFICATION	0.0011735398014696267	DESIGN
use parent's marshal	WITHOUT_CLASSIFICATION	0.9988264601985304	WITHOUT_CLASSIFICATION	0.0011735398014696267	DESIGN
could be pulled down to RubyClass in future rb_class_boot	WITHOUT_CLASSIFICATION	0.9995438997610462	WITHOUT_CLASSIFICATION	4.5610023895376875E-4	DESIGN
remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9993597606905443	WITHOUT_CLASSIFICATION	6.40239309455687E-4	DESIGN
add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9998537396875682	WITHOUT_CLASSIFICATION	1.4626031243177847E-4	DESIGN
update all subclasses	WITHOUT_CLASSIFICATION	0.9998162499770267	WITHOUT_CLASSIFICATION	1.8375002297341394E-4	DESIGN
fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9990606308519819	WITHOUT_CLASSIFICATION	9.39369148018066E-4	DESIGN
static initializing method	WITHOUT_CLASSIFICATION	0.9979343182478735	WITHOUT_CLASSIFICATION	0.002065681752126489	DESIGN
standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9970833120133724	WITHOUT_CLASSIFICATION	0.002916687986627636	DESIGN
no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9996077284554902	WITHOUT_CLASSIFICATION	3.9227154450989775E-4	DESIGN
non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9979095324086837	WITHOUT_CLASSIFICATION	0.0020904675913162225	DESIGN
indices for temp values	WITHOUT_CLASSIFICATION	0.9999061179872969	WITHOUT_CLASSIFICATION	9.388201270309104E-5	DESIGN
self method name	WITHOUT_CLASSIFICATION	0.9971207665564551	WITHOUT_CLASSIFICATION	0.002879233443544879	DESIGN
the default allocator	WITHOUT_CLASSIFICATION	0.9998340657496545	WITHOUT_CLASSIFICATION	1.6593425034544727E-4	DESIGN
Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9996543431461834	WITHOUT_CLASSIFICATION	3.456568538166824E-4	DESIGN
do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9988444255135659	WITHOUT_CLASSIFICATION	0.0011555744864341286	DESIGN
Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9998420386070987	WITHOUT_CLASSIFICATION	1.579613929012429E-4	DESIGN
================ Singleton Methods ================	WITHOUT_CLASSIFICATION	0.9987455033100152	WITHOUT_CLASSIFICATION	0.0012544966899848556	DESIGN
Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.7121270959061784	WITHOUT_CLASSIFICATION	0.2878729040938216	DESIGN
Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9997783352206768	WITHOUT_CLASSIFICATION	2.216647793232158E-4	DESIGN
MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9980183177760245	WITHOUT_CLASSIFICATION	0.001981682223975624	DESIGN
NOTE: Serialization is primarily supported for testing purposes, and there is no general guarantee that serialization will work correctly. Specifically, instance variables pointing at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999660324536167	WITHOUT_CLASSIFICATION	3.396754638317826E-5	DESIGN
write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.989141287039248	WITHOUT_CLASSIFICATION	0.010858712960751913	DESIGN
rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9915313958603503	WITHOUT_CLASSIFICATION	0.008468604139649607	DESIGN
0x3fff_ffff -0x4000_0000	WITHOUT_CLASSIFICATION	0.9994072205555466	WITHOUT_CLASSIFICATION	5.927794444533294E-4	DESIGN
a gotcha	WITHOUT_CLASSIFICATION	0.9989768381567916	WITHOUT_CLASSIFICATION	0.0010231618432084036	DESIGN
Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9998522926658574	WITHOUT_CLASSIFICATION	1.477073341425107E-4	DESIGN
A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9998703082509487	WITHOUT_CLASSIFICATION	1.296917490512977E-4	DESIGN
Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9994860702992764	WITHOUT_CLASSIFICATION	5.13929700723685E-4	DESIGN
Java Doubles are 64 bit long:	WITHOUT_CLASSIFICATION	0.9989341676568495	WITHOUT_CLASSIFICATION	0.0010658323431505423	DESIGN
Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9998420386070987	WITHOUT_CLASSIFICATION	1.579613929012429E-4	DESIGN
don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9996392973612992	WITHOUT_CLASSIFICATION	3.607026387007931E-4	DESIGN
Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.998223669065685	WITHOUT_CLASSIFICATION	0.0017763309343149592	DESIGN
MRI behavior:	WITHOUT_CLASSIFICATION	0.9996093358967719	WITHOUT_CLASSIFICATION	3.9066410322810915E-4	DESIGN
Numeric.equal	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
provider is not available	WITHOUT_CLASSIFICATION	0.9978963544690235	WITHOUT_CLASSIFICATION	0.0021036455309764728	DESIGN
bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.995926687118355	WITHOUT_CLASSIFICATION	0.004073312881645049	DESIGN
fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9952590731694829	WITHOUT_CLASSIFICATION	0.004740926830517012	DESIGN
RubyDigest	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9963206147126464	WITHOUT_CLASSIFICATION	0.003679385287353654	DESIGN
synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9990250835966583	WITHOUT_CLASSIFICATION	9.749164033416019E-4	DESIGN
we only add live threads	WITHOUT_CLASSIFICATION	0.9997026506782222	WITHOUT_CLASSIFICATION	2.973493217778497E-4	DESIGN
use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9965901131282368	WITHOUT_CLASSIFICATION	0.0034098868717631673	DESIGN
handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9989006656461529	WITHOUT_CLASSIFICATION	0.0010993343538471811	DESIGN
JRubyService	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
while	WITHOUT_CLASSIFICATION	0.9996106185146123	WITHOUT_CLASSIFICATION	3.893814853877516E-4	DESIGN
\OOO	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
CRuby uses sprintf(buf, "%.g", FLOAT_DIG, d); This pattern adjusts the output of String.pattern("%g") to mimic the C version.	WITHOUT_CLASSIFICATION	0.9843835768960586	WITHOUT_CLASSIFICATION	0.015616423103941459	DESIGN
mask off "once" flag	WITHOUT_CLASSIFICATION	0.9998703031559213	WITHOUT_CLASSIFICATION	1.2969684407861573E-4	DESIGN
used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9992912374333855	WITHOUT_CLASSIFICATION	7.087625666144806E-4	DESIGN
internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9983434331720914	WITHOUT_CLASSIFICATION	0.001656566827908559	DESIGN
silent ?	WITHOUT_CLASSIFICATION	0.9991466197614056	WITHOUT_CLASSIFICATION	8.533802385943717E-4	DESIGN
\xHH	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
\M-X, \M-\C-X, \M-\cX	WITHOUT_CLASSIFICATION	0.9994072205555466	WITHOUT_CLASSIFICATION	5.927794444533294E-4	DESIGN
\C-X, \C-\M-X	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
\cX, \c\M-X	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
\O, \OO, \OOO or backref	WITHOUT_CLASSIFICATION	0.9996160406576324	WITHOUT_CLASSIFICATION	3.83959342367641E-4	DESIGN
MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9950537159252051	WITHOUT_CLASSIFICATION	0.004946284074794852	DESIGN
Surrogates	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
do not load the class if not used	WITHOUT_CLASSIFICATION	0.9968247231430315	WITHOUT_CLASSIFICATION	0.0031752768569685364	DESIGN
\0, \0O, \0OO	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
\xHH	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
\C-X, \C-\M-X	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
\M-X, \M-\C-X, \M-\cX	WITHOUT_CLASSIFICATION	0.9994072205555466	WITHOUT_CLASSIFICATION	5.927794444533294E-4	DESIGN
\\u{H HH HHH HHHH HHHHH HHHHHH ...}	WITHOUT_CLASSIFICATION	0.9986828689501004	WITHOUT_CLASSIFICATION	0.001317131049899571	DESIGN
\\uHHHH	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
\p{Hiragana}	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
inner switch	WITHOUT_CLASSIFICATION	0.999216715446607	WITHOUT_CLASSIFICATION	7.832845533931E-4	DESIGN
newInstance here	WITHOUT_CLASSIFICATION	0.9972811261641069	WITHOUT_CLASSIFICATION	0.002718873835892993	DESIGN
rb_reg_raise	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
rb_reg_desc	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9994072205555466	WITHOUT_CLASSIFICATION	5.927794444533294E-4	DESIGN
rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9994072205555466	WITHOUT_CLASSIFICATION	5.927794444533294E-4	DESIGN
rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9997687312313612	WITHOUT_CLASSIFICATION	2.3126876863878697E-4	DESIGN
rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
option_to_str	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
Don't initialize with class Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9989561702893188	WITHOUT_CLASSIFICATION	0.001043829710681196	DESIGN
args should be before block	WITHOUT_CLASSIFICATION	0.9988583754000014	WITHOUT_CLASSIFICATION	0.0011416245999984794	DESIGN
args should be at end	WITHOUT_CLASSIFICATION	0.9964570575675307	WITHOUT_CLASSIFICATION	0.0035429424324692777	DESIGN
minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9945260301473301	WITHOUT_CLASSIFICATION	0.005473969852669894	DESIGN
minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9945260301473301	WITHOUT_CLASSIFICATION	0.005473969852669894	DESIGN
skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999672220541779	WITHOUT_CLASSIFICATION	3.277794582219678E-5	DESIGN
start a new populator	WITHOUT_CLASSIFICATION	0.998689355832723	WITHOUT_CLASSIFICATION	0.001310644167277044	DESIGN
check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9996371471133789	WITHOUT_CLASSIFICATION	3.628528866210531E-4	DESIGN
add all names for this annotation	WITHOUT_CLASSIFICATION	0.9964480575058926	WITHOUT_CLASSIFICATION	0.003551942494107316	DESIGN
no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9998924139561438	WITHOUT_CLASSIFICATION	1.075860438562306E-4	DESIGN
write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9993608531938568	WITHOUT_CLASSIFICATION	6.391468061431782E-4	DESIGN
single method, use normal logic	WITHOUT_CLASSIFICATION	0.997419128901117	WITHOUT_CLASSIFICATION	0.002580871098882973	DESIGN
multimethod, new logic	WITHOUT_CLASSIFICATION	0.9993001303922904	WITHOUT_CLASSIFICATION	6.998696077096065E-4	DESIGN
declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9901878124872243	WITHOUT_CLASSIFICATION	0.009812187512775685	DESIGN
inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9989609108590193	WITHOUT_CLASSIFICATION	0.0010390891409807373	DESIGN
RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9998406902016139	WITHOUT_CLASSIFICATION	1.5930979838612298E-4	DESIGN
}	WITHOUT_CLASSIFICATION	0.9993475617335801	WITHOUT_CLASSIFICATION	6.524382664198767E-4	DESIGN
fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9980432139205926	WITHOUT_CLASSIFICATION	0.0019567860794074523	DESIGN
refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9990680999054582	WITHOUT_CLASSIFICATION	9.319000945417737E-4	DESIGN
If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9992472983418736	WITHOUT_CLASSIFICATION	7.527016581263716E-4	DESIGN
attribute set.	WITHOUT_CLASSIFICATION	0.9997547501469967	WITHOUT_CLASSIFICATION	2.4524985300325663E-4	DESIGN
element set	WITHOUT_CLASSIFICATION	0.999398192596901	WITHOUT_CLASSIFICATION	6.018074030991313E-4	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9834042120343243	WITHOUT_CLASSIFICATION	0.016595787965675717	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9834042120343243	WITHOUT_CLASSIFICATION	0.016595787965675717	DESIGN
colon3	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
Colon3	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9976576586864984	WITHOUT_CLASSIFICATION	0.002342341313501572	DESIGN
For b.foo	WITHOUT_CLASSIFICATION	0.9996107673435819	WITHOUT_CLASSIFICATION	3.8923265641800474E-4	DESIGN
instance config for the script run	WITHOUT_CLASSIFICATION	0.9978319843068106	WITHOUT_CLASSIFICATION	0.0021680156931892926	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9834042120343243	WITHOUT_CLASSIFICATION	0.016595787965675717	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9834042120343243	WITHOUT_CLASSIFICATION	0.016595787965675717	DESIGN
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9988735200626435	WITHOUT_CLASSIFICATION	0.0011264799373565215	DESIGN
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9988735200626435	WITHOUT_CLASSIFICATION	0.0011264799373565215	DESIGN
RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9996652623964045	WITHOUT_CLASSIFICATION	3.3473760359546256E-4	DESIGN
For 'b.foo'	WITHOUT_CLASSIFICATION	0.9997786744817619	WITHOUT_CLASSIFICATION	2.2132551823819238E-4	DESIGN
We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9450815459418165	WITHOUT_CLASSIFICATION	0.05491845405818347	DESIGN
something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.8423738119982324	WITHOUT_CLASSIFICATION	0.1576261880017677	DESIGN
Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9996101476385901	WITHOUT_CLASSIFICATION	3.898523614099444E-4	DESIGN
Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9996101476385901	WITHOUT_CLASSIFICATION	3.898523614099444E-4	DESIGN
do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9861379905013331	WITHOUT_CLASSIFICATION	0.01386200949866683	DESIGN
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9968481482860877	WITHOUT_CLASSIFICATION	0.0031518517139121965	DESIGN
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9928151277413678	WITHOUT_CLASSIFICATION	0.007184872258632244	DESIGN
never visited, should be fine	WITHOUT_CLASSIFICATION	0.9943967432421348	WITHOUT_CLASSIFICATION	0.005603256757865224	DESIGN
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9988735200626435	WITHOUT_CLASSIFICATION	0.0011264799373565215	DESIGN
The name of the variable	WITHOUT_CLASSIFICATION	0.9997380053598294	WITHOUT_CLASSIFICATION	2.6199464017060325E-4	DESIGN
If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9977258107638975	WITHOUT_CLASSIFICATION	0.0022741892361024282	DESIGN
Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9994298946669694	WITHOUT_CLASSIFICATION	5.70105333030617E-4	DESIGN
Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9636555920905907	WITHOUT_CLASSIFICATION	0.03634440790940921	DESIGN
no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9974515465519601	WITHOUT_CLASSIFICATION	0.0025484534480398674	DESIGN
optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9895774921629698	WITHOUT_CLASSIFICATION	0.010422507837030174	DESIGN
arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9986828689501004	WITHOUT_CLASSIFICATION	0.001317131049899571	DESIGN
no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9991854035395565	WITHOUT_CLASSIFICATION	8.145964604434207E-4	DESIGN
set argv from main's args	WITHOUT_CLASSIFICATION	0.998275071326751	WITHOUT_CLASSIFICATION	0.0017249286732489413	DESIGN
attribute set.	WITHOUT_CLASSIFICATION	0.9997547501469967	WITHOUT_CLASSIFICATION	2.4524985300325663E-4	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9834042120343243	WITHOUT_CLASSIFICATION	0.016595787965675717	DESIGN
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9988735200626435	WITHOUT_CLASSIFICATION	0.0011264799373565215	DESIGN
The name of the variable	WITHOUT_CLASSIFICATION	0.9997380053598294	WITHOUT_CLASSIFICATION	2.6199464017060325E-4	DESIGN
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.7281799630091269	DESIGN	0.27182003699087304	WITHOUT_CLASSIFICATION
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.7281799630091269	DESIGN	0.27182003699087304	WITHOUT_CLASSIFICATION
block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.672474712222772	WITHOUT_CLASSIFICATION	0.32752528777722795	DESIGN
assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9983865618638688	WITHOUT_CLASSIFICATION	0.0016134381361312478	DESIGN
in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9868432661027112	WITHOUT_CLASSIFICATION	0.013156733897288801	DESIGN
assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9998732125669243	WITHOUT_CLASSIFICATION	1.267874330756711E-4	DESIGN
Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9959009537992521	WITHOUT_CLASSIFICATION	0.004099046200747829	DESIGN
Experimental class reification support, to create real Java classes for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9990375659238739	WITHOUT_CLASSIFICATION	9.624340761260078E-4	DESIGN
This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9771094050194025	WITHOUT_CLASSIFICATION	0.022890594980597628	DESIGN
Make a nil node if no body. Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9993402687156114	WITHOUT_CLASSIFICATION	6.597312843885583E-4	DESIGN
'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9950800148907738	WITHOUT_CLASSIFICATION	0.004919985109226169	DESIGN
now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9979640677220138	WITHOUT_CLASSIFICATION	0.0020359322779861812	DESIGN
never visited, should be ok	WITHOUT_CLASSIFICATION	0.9963386079376034	WITHOUT_CLASSIFICATION	0.003661392062396544	DESIGN
If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999482927836837	WITHOUT_CLASSIFICATION	5.170721631636981E-5	DESIGN
JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999614619099919	WITHOUT_CLASSIFICATION	3.853809000802644E-5	DESIGN
element set	WITHOUT_CLASSIFICATION	0.999398192596901	WITHOUT_CLASSIFICATION	6.018074030991313E-4	DESIGN
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9988735200626435	WITHOUT_CLASSIFICATION	0.0011264799373565215	DESIGN
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9968481482860877	WITHOUT_CLASSIFICATION	0.0031518517139121965	DESIGN
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9928151277413678	WITHOUT_CLASSIFICATION	0.007184872258632244	DESIGN
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9928151277413678	WITHOUT_CLASSIFICATION	0.007184872258632244	DESIGN
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9988735200626435	WITHOUT_CLASSIFICATION	0.0011264799373565215	DESIGN
The name of the variable	WITHOUT_CLASSIFICATION	0.9997380053598294	WITHOUT_CLASSIFICATION	2.6199464017060325E-4	DESIGN
The name of the variable	WITHOUT_CLASSIFICATION	0.9997380053598294	WITHOUT_CLASSIFICATION	2.6199464017060325E-4	DESIGN
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.7281799630091269	DESIGN	0.27182003699087304	WITHOUT_CLASSIFICATION
Empirical Observations: null -> Some arity argsNode == this.argsNode then check for arity changes newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999395342085649	WITHOUT_CLASSIFICATION	6.046579143522613E-5	DESIGN
assert !(value instanceof RubyArray) : "Not an array";	WITHOUT_CLASSIFICATION	0.9793110220416863	WITHOUT_CLASSIFICATION	0.02068897795831372	DESIGN
Serialization killed our dynamic scope. We can just create an empty one since serialization cannot serialize an eval (which is the only thing which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9970613864374542	WITHOUT_CLASSIFICATION	0.002938613562545835	DESIGN
Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9663714337215924	WITHOUT_CLASSIFICATION	0.03362856627840758	DESIGN
We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9994347064628566	WITHOUT_CLASSIFICATION	5.65293537143435E-4	DESIGN
assert thenBody != null : "thenBody is not null"; assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9676749740973678	WITHOUT_CLASSIFICATION	0.03232502590263223	DESIGN
add in reverse order	WITHOUT_CLASSIFICATION	0.9996436859756419	WITHOUT_CLASSIFICATION	3.563140243580658E-4	DESIGN
in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9926618538418428	WITHOUT_CLASSIFICATION	0.007338146158157137	DESIGN
ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9989679054392522	WITHOUT_CLASSIFICATION	0.0010320945607478187	DESIGN
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9968481482860877	WITHOUT_CLASSIFICATION	0.0031518517139121965	DESIGN
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9928151277413678	WITHOUT_CLASSIFICATION	0.007184872258632244	DESIGN
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9928151277413678	WITHOUT_CLASSIFICATION	0.007184872258632244	DESIGN
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9988735200626435	WITHOUT_CLASSIFICATION	0.0011264799373565215	DESIGN
Make a nil node if no body. Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9993402687156114	WITHOUT_CLASSIFICATION	6.597312843885583E-4	DESIGN
now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9979640677220138	WITHOUT_CLASSIFICATION	0.0020359322779861812	DESIGN
No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9999523768341212	WITHOUT_CLASSIFICATION	4.76231658787698E-5	DESIGN
save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999984364023422	WITHOUT_CLASSIFICATION	1.5635976576937647E-6	DESIGN
For 'foo'	WITHOUT_CLASSIFICATION	0.9996189654161862	WITHOUT_CLASSIFICATION	3.81034583813765E-4	DESIGN
For 'foo'	WITHOUT_CLASSIFICATION	0.9996189654161862	WITHOUT_CLASSIFICATION	3.81034583813765E-4	DESIGN
admittedly inefficient	WITHOUT_CLASSIFICATION	0.9896648577329136	WITHOUT_CLASSIFICATION	0.010335142267086423	DESIGN
JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999131675157289	WITHOUT_CLASSIFICATION	8.683248427119922E-5	DESIGN
What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9521512248331339	WITHOUT_CLASSIFICATION	0.04784877516686621	DESIGN
let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9990771219154746	WITHOUT_CLASSIFICATION	9.228780845253729E-4	DESIGN
just rethrow	WITHOUT_CLASSIFICATION	0.9990609290164162	WITHOUT_CLASSIFICATION	9.390709835837693E-4	DESIGN
just rethrow	WITHOUT_CLASSIFICATION	0.9990609290164162	WITHOUT_CLASSIFICATION	9.390709835837693E-4	DESIGN
clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9998084762256716	WITHOUT_CLASSIFICATION	1.9152377432830577E-4	DESIGN
clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9998084762256716	WITHOUT_CLASSIFICATION	1.9152377432830577E-4	DESIGN
no takers; bubble up	WITHOUT_CLASSIFICATION	0.9996617129232376	WITHOUT_CLASSIFICATION	3.3828707676246026E-4	DESIGN
no takers; bubble up	WITHOUT_CLASSIFICATION	0.9996617129232376	WITHOUT_CLASSIFICATION	3.3828707676246026E-4	DESIGN
Execute rescue block	WITHOUT_CLASSIFICATION	0.99988056026392	WITHOUT_CLASSIFICATION	1.1943973608001895E-4	DESIGN
If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9998422111574318	WITHOUT_CLASSIFICATION	1.5778884256832106E-4	DESIGN
index of variable for this arg	WITHOUT_CLASSIFICATION	0.9410927343028006	WITHOUT_CLASSIFICATION	0.058907265697199375	DESIGN
only a marker interface	WITHOUT_CLASSIFICATION	0.9991353377020075	WITHOUT_CLASSIFICATION	8.64662297992544E-4	DESIGN
don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9985230668396384	WITHOUT_CLASSIFICATION	0.0014769331603615753	DESIGN
pragmas	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9705308483011806	WITHOUT_CLASSIFICATION	0.029469151698819394	DESIGN
We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9919867259371529	WITHOUT_CLASSIFICATION	0.008013274062847171	DESIGN
The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9980148763002663	WITHOUT_CLASSIFICATION	0.0019851236997336643	DESIGN
The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9826399671980829	WITHOUT_CLASSIFICATION	0.017360032801917093	DESIGN
Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.998934240168668	WITHOUT_CLASSIFICATION	0.0010657598313319658	DESIGN
check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9881845726348671	WITHOUT_CLASSIFICATION	0.011815427365132799	DESIGN
long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9896669497566551	WITHOUT_CLASSIFICATION	0.010333050243344927	DESIGN
ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9995294137219518	WITHOUT_CLASSIFICATION	4.7058627804811437E-4	DESIGN
ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9995294137219518	WITHOUT_CLASSIFICATION	4.7058627804811437E-4	DESIGN
long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9963895200968589	WITHOUT_CLASSIFICATION	0.003610479903141134	DESIGN
we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9986887191415695	WITHOUT_CLASSIFICATION	0.0013112808584304003	DESIGN
Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9380204821885795	WITHOUT_CLASSIFICATION	0.06197951781142044	DESIGN
encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9902368196957265	WITHOUT_CLASSIFICATION	0.00976318030427346	DESIGN
only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9960114634289979	WITHOUT_CLASSIFICATION	0.0039885365710021084	DESIGN
otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9993168617332002	WITHOUT_CLASSIFICATION	6.831382667997826E-4	DESIGN
use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9977177468495123	WITHOUT_CLASSIFICATION	0.0022822531504877795	DESIGN
unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9993255870715326	WITHOUT_CLASSIFICATION	6.744129284673319E-4	DESIGN
compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9992259556848878	WITHOUT_CLASSIFICATION	7.740443151122476E-4	DESIGN
last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9995901651500152	WITHOUT_CLASSIFICATION	4.098348499847769E-4	DESIGN
compile first node only	WITHOUT_CLASSIFICATION	0.9987380062824549	WITHOUT_CLASSIFICATION	0.0012619937175451094	DESIGN
splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9995810181545153	WITHOUT_CLASSIFICATION	4.189818454846924E-4	DESIGN
if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9925643375390328	WITHOUT_CLASSIFICATION	0.007435662460967254	DESIGN
NOTE: Currently this optimization is limited to the following situations: All expressions must be int-ranged literal fixnums It also still emits the code for the "safe" when logic, which is rather wasteful (since it essentially doubles each code body). As such it is normally disabled, but it serves as an example of how this optimization could be done. Ideally, it should be combined with the when processing to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9791505946633121	WITHOUT_CLASSIFICATION	0.020849405336687964	DESIGN
aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9762609958777543	WITHOUT_CLASSIFICATION	0.0237390041222457	DESIGN
one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9993076218615231	WITHOUT_CLASSIFICATION	6.923781384768935E-4	DESIGN
can't do it	WITHOUT_CLASSIFICATION	0.999088235298957	WITHOUT_CLASSIFICATION	9.117647010430527E-4	DESIGN
otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9970309677255152	WITHOUT_CLASSIFICATION	0.0029690322744848757	DESIGN
colon3, assign in Object	WITHOUT_CLASSIFICATION	0.999471578595685	WITHOUT_CLASSIFICATION	5.284214043149609E-4	DESIGN
colon3, assign in Object	WITHOUT_CLASSIFICATION	0.999471578595685	WITHOUT_CLASSIFICATION	5.284214043149609E-4	DESIGN
these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9972684922514276	WITHOUT_CLASSIFICATION	0.002731507748572467	DESIGN
[IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass] [IRubyObject]	WITHOUT_CLASSIFICATION	0.9986828689501004	WITHOUT_CLASSIFICATION	0.001317131049899571	DESIGN
[]	WITHOUT_CLASSIFICATION	0.9993022808425766	WITHOUT_CLASSIFICATION	6.977191574234552E-4	DESIGN
[]	WITHOUT_CLASSIFICATION	0.9993022808425766	WITHOUT_CLASSIFICATION	6.977191574234552E-4	DESIGN
context.swapValues(); context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9986828689501004	WITHOUT_CLASSIFICATION	0.001317131049899571	DESIGN
[RubyClass] [RubyClass, RubyClass] [RubyClass] [] [self] [RubyClass] [RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.998689171796442	WITHOUT_CLASSIFICATION	0.0013108282035580075	DESIGN
[RubyClass]	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
[RubyClass] [RubyClass, RubyClass] [RubyClass] []	WITHOUT_CLASSIFICATION	0.998689171796442	WITHOUT_CLASSIFICATION	0.0013108282035580075	DESIGN
if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9745797471845656	WITHOUT_CLASSIFICATION	0.025420252815434443	DESIGN
inspect body and args	WITHOUT_CLASSIFICATION	0.9996226259753273	WITHOUT_CLASSIFICATION	3.773740246726967E-4	DESIGN
inspect body and args	WITHOUT_CLASSIFICATION	0.9996226259753273	WITHOUT_CLASSIFICATION	3.773740246726967E-4	DESIGN
check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.99338814507429	WITHOUT_CLASSIFICATION	0.0066118549257101495	DESIGN
if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.982446957688765	WITHOUT_CLASSIFICATION	0.017553042311234925	DESIGN
invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9987521579105413	WITHOUT_CLASSIFICATION	0.0012478420894587643	DESIGN
[IRubyObject] [IRubyObject, IRubyObject] [IRubyObject, RubyClass] [IRubyObject, RubyClass, RubyClass] [IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9986828689501004	WITHOUT_CLASSIFICATION	0.001317131049899571	DESIGN
[IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass] [IRubyObject]	WITHOUT_CLASSIFICATION	0.9986828689501004	WITHOUT_CLASSIFICATION	0.001317131049899571	DESIGN
[RubyClass] []	WITHOUT_CLASSIFICATION	0.9996032100284449	WITHOUT_CLASSIFICATION	3.967899715550779E-4	DESIGN
[String] [String, String] [String] [String, RubyClass] [String, RubyClass, RubyClass] [String, RubyClass]	WITHOUT_CLASSIFICATION	0.9986828689501004	WITHOUT_CLASSIFICATION	0.001317131049899571	DESIGN
[String] [String, String] [String] [String, RubyClass] [String, RubyClass, RubyClass] [String, RubyClass]	WITHOUT_CLASSIFICATION	0.9986828689501004	WITHOUT_CLASSIFICATION	0.001317131049899571	DESIGN
no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9983135213160363	WITHOUT_CLASSIFICATION	0.0016864786839637322	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9995440719624455	WITHOUT_CLASSIFICATION	4.5592803755449313E-4	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9995440719624455	WITHOUT_CLASSIFICATION	4.5592803755449313E-4	DESIGN
not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9995392703145537	WITHOUT_CLASSIFICATION	4.607296854464244E-4	DESIGN
not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9995392703145537	WITHOUT_CLASSIFICATION	4.607296854464244E-4	DESIGN
not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9995392703145537	WITHOUT_CLASSIFICATION	4.607296854464244E-4	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9995440719624455	WITHOUT_CLASSIFICATION	4.5592803755449313E-4	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9995440719624455	WITHOUT_CLASSIFICATION	4.5592803755449313E-4	DESIGN
no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9983135213160363	WITHOUT_CLASSIFICATION	0.0016864786839637322	DESIGN
force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9993180135321731	WITHOUT_CLASSIFICATION	6.819864678267999E-4	DESIGN
always false or nil	WITHOUT_CLASSIFICATION	0.9998052497284194	WITHOUT_CLASSIFICATION	1.9475027158065994E-4	DESIGN
optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999313421721991	WITHOUT_CLASSIFICATION	6.86578278008958E-5	DESIGN
normal	WITHOUT_CLASSIFICATION	0.9994940420670938	WITHOUT_CLASSIFICATION	5.059579329063094E-4	DESIGN
compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9948981772669595	WITHOUT_CLASSIFICATION	0.005101822733040439	DESIGN
need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9909189114909747	WITHOUT_CLASSIFICATION	0.009081088509025248	DESIGN
just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9988528085785447	WITHOUT_CLASSIFICATION	0.0011471914214552627	DESIGN
"assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9993232543980514	WITHOUT_CLASSIFICATION	6.767456019486375E-4	DESIGN
compile first node only	WITHOUT_CLASSIFICATION	0.9987380062824549	WITHOUT_CLASSIFICATION	0.0012619937175451094	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9995440719624455	WITHOUT_CLASSIFICATION	4.5592803755449313E-4	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9995440719624455	WITHOUT_CLASSIFICATION	4.5592803755449313E-4	DESIGN
eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9989755876076698	WITHOUT_CLASSIFICATION	0.001024412392330239	DESIGN
try optz version	WITHOUT_CLASSIFICATION	0.9997783368622174	WITHOUT_CLASSIFICATION	2.2166313778251533E-4	DESIGN
sizes must match	WITHOUT_CLASSIFICATION	0.999767571230754	WITHOUT_CLASSIFICATION	2.3242876924591864E-4	DESIGN
expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9998671736266577	WITHOUT_CLASSIFICATION	1.3282637334223991E-4	DESIGN
normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.998843111544042	WITHOUT_CLASSIFICATION	0.0011568884559579854	DESIGN
head must not be null and there must be no "args" (like arg)	WITHOUT_CLASSIFICATION	0.9996001985473796	WITHOUT_CLASSIFICATION	3.998014526204161E-4	DESIGN
"head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9995241436205996	WITHOUT_CLASSIFICATION	4.758563794003496E-4	DESIGN
only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9997350449478382	WITHOUT_CLASSIFICATION	2.649550521617738E-4	DESIGN
perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9989909566943713	WITHOUT_CLASSIFICATION	0.001009043305628645	DESIGN
if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9885146230331024	WITHOUT_CLASSIFICATION	0.011485376966897467	DESIGN
RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9998406902016139	WITHOUT_CLASSIFICATION	1.5930979838612298E-4	DESIGN
done processing args	WITHOUT_CLASSIFICATION	0.9983630132343663	WITHOUT_CLASSIFICATION	0.0016369867656337038	DESIGN
all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9990615481085927	WITHOUT_CLASSIFICATION	9.384518914072676E-4	DESIGN
assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9980083472243022	WITHOUT_CLASSIFICATION	0.00199165277569777	DESIGN
if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9987182978512875	WITHOUT_CLASSIFICATION	0.001281702148712459	DESIGN
[recv]	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
[recv]	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
[recv]	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
compile into array	WITHOUT_CLASSIFICATION	0.9894968504753099	WITHOUT_CLASSIFICATION	0.010503149524690149	DESIGN
compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9986488725264802	WITHOUT_CLASSIFICATION	0.0013511274735198615	DESIGN
check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9998566235225329	WITHOUT_CLASSIFICATION	1.4337647746716082E-4	DESIGN
condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9921546442618514	WITHOUT_CLASSIFICATION	0.007845355738148504	DESIGN
force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9997070030478696	WITHOUT_CLASSIFICATION	2.9299695213037797E-4	DESIGN
create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9954679647489278	WITHOUT_CLASSIFICATION	0.004532035251072154	DESIGN
it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9991994354611037	WITHOUT_CLASSIFICATION	8.005645388962406E-4	DESIGN
send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9982993278733571	WITHOUT_CLASSIFICATION	0.001700672126642939	DESIGN
single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9908310845239975	WITHOUT_CLASSIFICATION	0.009168915476002442	DESIGN
leave as a normal array	WITHOUT_CLASSIFICATION	0.9998012027004599	WITHOUT_CLASSIFICATION	1.9879729954002932E-4	DESIGN
This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9941711853624656	WITHOUT_CLASSIFICATION	0.005828814637534432	DESIGN
The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9721968456418998	WITHOUT_CLASSIFICATION	0.02780315435810017	DESIGN
check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.99338814507429	WITHOUT_CLASSIFICATION	0.0066118549257101495	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9995440719624455	WITHOUT_CLASSIFICATION	4.5592803755449313E-4	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9995440719624455	WITHOUT_CLASSIFICATION	4.5592803755449313E-4	DESIGN
no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9983135213160363	WITHOUT_CLASSIFICATION	0.0016864786839637322	DESIGN
need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9909189114909747	WITHOUT_CLASSIFICATION	0.009081088509025248	DESIGN
try optz version	WITHOUT_CLASSIFICATION	0.9997783368622174	WITHOUT_CLASSIFICATION	2.2166313778251533E-4	DESIGN
expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9998671736266577	WITHOUT_CLASSIFICATION	1.3282637334223991E-4	DESIGN
head must not be null and there must be no "args" (like arg)	WITHOUT_CLASSIFICATION	0.9996001985473796	WITHOUT_CLASSIFICATION	3.998014526204161E-4	DESIGN
sizes must match	WITHOUT_CLASSIFICATION	0.999767571230754	WITHOUT_CLASSIFICATION	2.3242876924591864E-4	DESIGN
"head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9995241436205996	WITHOUT_CLASSIFICATION	4.758563794003496E-4	DESIGN
if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9885146230331024	WITHOUT_CLASSIFICATION	0.011485376966897467	DESIGN
perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9989909566943713	WITHOUT_CLASSIFICATION	0.001009043305628645	DESIGN
done processing args	WITHOUT_CLASSIFICATION	0.9983630132343663	WITHOUT_CLASSIFICATION	0.0016369867656337038	DESIGN
Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9980882878653372	WITHOUT_CLASSIFICATION	0.0019117121346627658	DESIGN
class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9953174040044908	WITHOUT_CLASSIFICATION	0.00468259599550918	DESIGN
successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9977219565278119	WITHOUT_CLASSIFICATION	0.0022780434721880374	DESIGN
finally, grab the script	WITHOUT_CLASSIFICATION	0.9998036233176119	WITHOUT_CLASSIFICATION	1.9637668238810127E-4	DESIGN
logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9899771811195522	WITHOUT_CLASSIFICATION	0.010022818880447789	DESIGN
Time the compilation	WITHOUT_CLASSIFICATION	0.9994474061558776	WITHOUT_CLASSIFICATION	5.525938441224726E-4	DESIGN
we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.989057277531704	WITHOUT_CLASSIFICATION	0.010942722468295887	DESIGN
If we don't have a body, check for required or opt args if opt args, they could have side effects if required args, need to raise errors if too few args passed otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9864158773309802	WITHOUT_CLASSIFICATION	0.013584122669019757	DESIGN
if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9989084584795985	WITHOUT_CLASSIFICATION	0.0010915415204014389	DESIGN
only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9994764709138271	WITHOUT_CLASSIFICATION	5.235290861728724E-4	DESIGN
normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9990876106949867	WITHOUT_CLASSIFICATION	9.123893050132247E-4	DESIGN
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9860659344363205	WITHOUT_CLASSIFICATION	0.013934065563679536	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9931294934462497	WITHOUT_CLASSIFICATION	0.006870506553750407	DESIGN
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.6086274395305815	WITHOUT_CLASSIFICATION	0.39137256046941854	DESIGN
return last value from execution	WITHOUT_CLASSIFICATION	0.9996513481953233	WITHOUT_CLASSIFICATION	3.486518046766252E-4	DESIGN
end of variable scope	WITHOUT_CLASSIFICATION	0.9998465142398677	WITHOUT_CLASSIFICATION	1.5348576013219162E-4	DESIGN
method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9855048939652299	WITHOUT_CLASSIFICATION	0.014495106034770135	DESIGN
Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9972859008571693	WITHOUT_CLASSIFICATION	0.0027140991428307396	DESIGN
check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9994925510695791	WITHOUT_CLASSIFICATION	5.074489304208724E-4	DESIGN
load block from [] version of method	WITHOUT_CLASSIFICATION	0.9990946717126143	WITHOUT_CLASSIFICATION	9.053282873856039E-4	DESIGN
normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.998677933095767	WITHOUT_CLASSIFICATION	0.0013220669042330398	DESIGN
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9899788925147632	WITHOUT_CLASSIFICATION	0.01002110748523675	DESIGN
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9899788925147632	WITHOUT_CLASSIFICATION	0.01002110748523675	DESIGN
value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9994259450567947	WITHOUT_CLASSIFICATION	5.740549432052975E-4	DESIGN
receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9968881503378418	WITHOUT_CLASSIFICATION	0.0031118496621581806	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.999305046052419	WITHOUT_CLASSIFICATION	6.949539475809712E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.999305046052419	WITHOUT_CLASSIFICATION	6.949539475809712E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.999305046052419	WITHOUT_CLASSIFICATION	6.949539475809712E-4	DESIGN
self	WITHOUT_CLASSIFICATION	0.9987689240563608	WITHOUT_CLASSIFICATION	0.0012310759436393274	DESIGN
self	WITHOUT_CLASSIFICATION	0.9987689240563608	WITHOUT_CLASSIFICATION	0.0012310759436393274	DESIGN
self	WITHOUT_CLASSIFICATION	0.9987689240563608	WITHOUT_CLASSIFICATION	0.0012310759436393274	DESIGN
self	WITHOUT_CLASSIFICATION	0.9987689240563608	WITHOUT_CLASSIFICATION	0.0012310759436393274	DESIGN
arg0	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
arg0	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
arg0	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
arg1	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
arg1	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
arg2	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
args	WITHOUT_CLASSIFICATION	0.9991541063853296	WITHOUT_CLASSIFICATION	8.458936146703169E-4	DESIGN
receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9968881503378418	WITHOUT_CLASSIFICATION	0.0031118496621581806	DESIGN
select appropriate call site dup receiver load self	WITHOUT_CLASSIFICATION	0.9919433173135452	WITHOUT_CLASSIFICATION	0.008056682686454836	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.999305046052419	WITHOUT_CLASSIFICATION	6.949539475809712E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.999305046052419	WITHOUT_CLASSIFICATION	6.949539475809712E-4	DESIGN
self	WITHOUT_CLASSIFICATION	0.9987689240563608	WITHOUT_CLASSIFICATION	0.0012310759436393274	DESIGN
self	WITHOUT_CLASSIFICATION	0.9987689240563608	WITHOUT_CLASSIFICATION	0.0012310759436393274	DESIGN
self	WITHOUT_CLASSIFICATION	0.9987689240563608	WITHOUT_CLASSIFICATION	0.0012310759436393274	DESIGN
arg0	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
arg0	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
arg1	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
args	WITHOUT_CLASSIFICATION	0.9991541063853296	WITHOUT_CLASSIFICATION	8.458936146703169E-4	DESIGN
get call site and thread context	WITHOUT_CLASSIFICATION	0.9994313267873836	WITHOUT_CLASSIFICATION	5.686732126163923E-4	DESIGN
get call site and thread context	WITHOUT_CLASSIFICATION	0.9994313267873836	WITHOUT_CLASSIFICATION	5.686732126163923E-4	DESIGN
evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9991981795163569	WITHOUT_CLASSIFICATION	8.018204836430334E-4	DESIGN
evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9991981795163569	WITHOUT_CLASSIFICATION	8.018204836430334E-4	DESIGN
invoke	WITHOUT_CLASSIFICATION	0.9993497910221878	WITHOUT_CLASSIFICATION	6.502089778121353E-4	DESIGN
invoke	WITHOUT_CLASSIFICATION	0.9993497910221878	WITHOUT_CLASSIFICATION	6.502089778121353E-4	DESIGN
check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9998802021549973	WITHOUT_CLASSIFICATION	1.1979784500276807E-4	DESIGN
not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9997795667011641	WITHOUT_CLASSIFICATION	2.2043329883586835E-4	DESIGN
not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9997795667011641	WITHOUT_CLASSIFICATION	2.2043329883586835E-4	DESIGN
thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9997101482635173	WITHOUT_CLASSIFICATION	2.8985173648266987E-4	DESIGN
thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9997101482635173	WITHOUT_CLASSIFICATION	2.8985173648266987E-4	DESIGN
eval value for assignment	WITHOUT_CLASSIFICATION	0.9995215194438338	WITHOUT_CLASSIFICATION	4.7848055616614134E-4	DESIGN
call site	WITHOUT_CLASSIFICATION	0.9988783346683694	WITHOUT_CLASSIFICATION	0.0011216653316306132	DESIGN
call site	WITHOUT_CLASSIFICATION	0.9988783346683694	WITHOUT_CLASSIFICATION	0.0011216653316306132	DESIGN
depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9977486298209783	WITHOUT_CLASSIFICATION	0.0022513701790216685	DESIGN
check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9998178275902683	WITHOUT_CLASSIFICATION	1.8217240973177726E-4	DESIGN
eval value and save it	WITHOUT_CLASSIFICATION	0.9998027537463932	WITHOUT_CLASSIFICATION	1.972462536069211E-4	DESIGN
self	WITHOUT_CLASSIFICATION	0.9987689240563608	WITHOUT_CLASSIFICATION	0.0012310759436393274	DESIGN
self	WITHOUT_CLASSIFICATION	0.9987689240563608	WITHOUT_CLASSIFICATION	0.0012310759436393274	DESIGN
depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9977486298209783	WITHOUT_CLASSIFICATION	0.0022513701790216685	DESIGN
receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9996009427135898	WITHOUT_CLASSIFICATION	3.99057286410218E-4	DESIGN
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
super uses current block if none given	WITHOUT_CLASSIFICATION	0.9997393049125892	WITHOUT_CLASSIFICATION	2.606950874107649E-4	DESIGN
args	WITHOUT_CLASSIFICATION	0.9991541063853296	WITHOUT_CLASSIFICATION	8.458936146703169E-4	DESIGN
block	WITHOUT_CLASSIFICATION	0.9998118140795204	WITHOUT_CLASSIFICATION	1.881859204796573E-4	DESIGN
block	WITHOUT_CLASSIFICATION	0.9998118140795204	WITHOUT_CLASSIFICATION	1.881859204796573E-4	DESIGN
no args, no block	WITHOUT_CLASSIFICATION	0.9999429873565415	WITHOUT_CLASSIFICATION	5.701264345863003E-5	DESIGN
no args, with block	WITHOUT_CLASSIFICATION	0.9999418209810085	WITHOUT_CLASSIFICATION	5.8179018991484634E-5	DESIGN
with args, no block	WITHOUT_CLASSIFICATION	0.9999418209810085	WITHOUT_CLASSIFICATION	5.8179018991484634E-5	DESIGN
with args, with block	WITHOUT_CLASSIFICATION	0.9998382455794539	WITHOUT_CLASSIFICATION	1.6175442054608736E-4	DESIGN
adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9986828689501004	WITHOUT_CLASSIFICATION	0.001317131049899571	DESIGN
pop extra attr value	WITHOUT_CLASSIFICATION	0.9996357867033816	WITHOUT_CLASSIFICATION	3.6421329661847734E-4	DESIGN
pop extra attr value	WITHOUT_CLASSIFICATION	0.9996357867033816	WITHOUT_CLASSIFICATION	3.6421329661847734E-4	DESIGN
arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9988228144304928	WITHOUT_CLASSIFICATION	0.0011771855695070922	DESIGN
arg	WITHOUT_CLASSIFICATION	0.9993427039216687	WITHOUT_CLASSIFICATION	6.572960783313918E-4	DESIGN
arg	WITHOUT_CLASSIFICATION	0.9993427039216687	WITHOUT_CLASSIFICATION	6.572960783313918E-4	DESIGN
self	WITHOUT_CLASSIFICATION	0.9987689240563608	WITHOUT_CLASSIFICATION	0.0012310759436393274	DESIGN
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
args	WITHOUT_CLASSIFICATION	0.9991541063853296	WITHOUT_CLASSIFICATION	8.458936146703169E-4	DESIGN
block	WITHOUT_CLASSIFICATION	0.9998118140795204	WITHOUT_CLASSIFICATION	1.881859204796573E-4	DESIGN
no args, no block	WITHOUT_CLASSIFICATION	0.9999429873565415	WITHOUT_CLASSIFICATION	5.701264345863003E-5	DESIGN
no args, with block	WITHOUT_CLASSIFICATION	0.9999418209810085	WITHOUT_CLASSIFICATION	5.8179018991484634E-5	DESIGN
with args, no block	WITHOUT_CLASSIFICATION	0.9999418209810085	WITHOUT_CLASSIFICATION	5.8179018991484634E-5	DESIGN
with args, with block	WITHOUT_CLASSIFICATION	0.9998382455794539	WITHOUT_CLASSIFICATION	1.6175442054608736E-4	DESIGN
arg	WITHOUT_CLASSIFICATION	0.9993427039216687	WITHOUT_CLASSIFICATION	6.572960783313918E-4	DESIGN
retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9993513687792497	WITHOUT_CLASSIFICATION	6.486312207502642E-4	DESIGN
use numbered access method	WITHOUT_CLASSIFICATION	0.9902214758405228	WITHOUT_CLASSIFICATION	0.009778524159477268	DESIGN
retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.998645387796096	WITHOUT_CLASSIFICATION	0.0013546122039039897	DESIGN
add name to call site list	WITHOUT_CLASSIFICATION	0.9987485724448066	WITHOUT_CLASSIFICATION	0.0012514275551933315	DESIGN
module is on top of stack	WITHOUT_CLASSIFICATION	0.9966835322663871	WITHOUT_CLASSIFICATION	0.0033164677336128957	DESIGN
build scope names string	WITHOUT_CLASSIFICATION	0.9992761905965334	WITHOUT_CLASSIFICATION	7.238094034666876E-4	DESIGN
build descriptor string	WITHOUT_CLASSIFICATION	0.9989932083911631	WITHOUT_CLASSIFICATION	0.0010067916088367934	DESIGN
build descriptor string	WITHOUT_CLASSIFICATION	0.9989932083911631	WITHOUT_CLASSIFICATION	0.0010067916088367934	DESIGN
generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9974311765077811	WITHOUT_CLASSIFICATION	0.0025688234922188148	DESIGN
generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9983935319164792	WITHOUT_CLASSIFICATION	0.0016064680835208643	DESIGN
generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9983935319164792	WITHOUT_CLASSIFICATION	0.0016064680835208643	DESIGN
generate constants initialization code	WITHOUT_CLASSIFICATION	0.9983747475701499	WITHOUT_CLASSIFICATION	0.0016252524298502335	DESIGN
generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9983935319164792	WITHOUT_CLASSIFICATION	0.0016064680835208643	DESIGN
generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9983935319164792	WITHOUT_CLASSIFICATION	0.0016064680835208643	DESIGN
generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.998555976436237	WITHOUT_CLASSIFICATION	0.0014440235637630829	DESIGN
generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.998555976436237	WITHOUT_CLASSIFICATION	0.0014440235637630829	DESIGN
generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9995744597615286	WITHOUT_CLASSIFICATION	4.255402384713701E-4	DESIGN
generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9995744597615286	WITHOUT_CLASSIFICATION	4.255402384713701E-4	DESIGN
generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9983935319164792	WITHOUT_CLASSIFICATION	0.0016064680835208643	DESIGN
generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9951889899827713	WITHOUT_CLASSIFICATION	0.00481101001722872	DESIGN
adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9986828689501004	WITHOUT_CLASSIFICATION	0.001317131049899571	DESIGN
use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9988264601985304	WITHOUT_CLASSIFICATION	0.0011735398014696267	DESIGN
do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9950208701806961	WITHOUT_CLASSIFICATION	0.004979129819303956	DESIGN
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9979029771538387	WITHOUT_CLASSIFICATION	0.002097022846161328	DESIGN
No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999601152379541	WITHOUT_CLASSIFICATION	3.988476204582752E-5	DESIGN
load Object under value	WITHOUT_CLASSIFICATION	0.9998054719489635	WITHOUT_CLASSIFICATION	1.9452805103649593E-4	DESIGN
put under object array already present	WITHOUT_CLASSIFICATION	0.9989888957310354	WITHOUT_CLASSIFICATION	0.00101110426896457	DESIGN
if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.8592942119116094	WITHOUT_CLASSIFICATION	0.14070578808839068	DESIGN
This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9887285056171256	WITHOUT_CLASSIFICATION	0.011271494382874541	DESIGN
if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9936574214478056	WITHOUT_CLASSIFICATION	0.006342578552194412	DESIGN
if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9936574214478056	WITHOUT_CLASSIFICATION	0.006342578552194412	DESIGN
brute force construction inline	WITHOUT_CLASSIFICATION	0.9997313993609462	WITHOUT_CLASSIFICATION	2.6860063905379726E-4	DESIGN
brute force construction inline	WITHOUT_CLASSIFICATION	0.9997313993609462	WITHOUT_CLASSIFICATION	2.6860063905379726E-4	DESIGN
use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9944521453617334	WITHOUT_CLASSIFICATION	0.005547854638266639	DESIGN
call isTrue on the result	WITHOUT_CLASSIFICATION	0.9995255329590342	WITHOUT_CLASSIFICATION	4.7446704096582205E-4	DESIGN
call isTrue on the result	WITHOUT_CLASSIFICATION	0.9995255329590342	WITHOUT_CLASSIFICATION	4.7446704096582205E-4	DESIGN
call isTrue on the result	WITHOUT_CLASSIFICATION	0.9995255329590342	WITHOUT_CLASSIFICATION	4.7446704096582205E-4	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999255823244912	WITHOUT_CLASSIFICATION	7.441767550871002E-5	DESIGN
dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9996915094730718	WITHOUT_CLASSIFICATION	3.0849052692806837E-4	DESIGN
dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9996915094730718	WITHOUT_CLASSIFICATION	3.0849052692806837E-4	DESIGN
clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9998944605544475	WITHOUT_CLASSIFICATION	1.0553944555252015E-4	DESIGN
check the condition	WITHOUT_CLASSIFICATION	0.9999007360323147	WITHOUT_CLASSIFICATION	9.926396768532876E-5	DESIGN
NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9998341516016387	WITHOUT_CLASSIFICATION	1.6584839836132907E-4	DESIGN
skip catch block	WITHOUT_CLASSIFICATION	0.9999947767402717	WITHOUT_CLASSIFICATION	5.223259728225777E-6	DESIGN
catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.999307607358878	WITHOUT_CLASSIFICATION	6.923926411219187E-4	DESIGN
next jump	WITHOUT_CLASSIFICATION	0.998925955691906	WITHOUT_CLASSIFICATION	0.0010740443080939507	DESIGN
exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9951621862338706	WITHOUT_CLASSIFICATION	0.004837813766129395	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9931294934462497	WITHOUT_CLASSIFICATION	0.006870506553750407	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9931294934462497	WITHOUT_CLASSIFICATION	0.006870506553750407	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999255823244912	WITHOUT_CLASSIFICATION	7.441767550871002E-5	DESIGN
clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9998944605544475	WITHOUT_CLASSIFICATION	1.0553944555252015E-4	DESIGN
EQ == 0 (i.e. false) pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999176762883895	WITHOUT_CLASSIFICATION	8.232371161053942E-5	DESIGN
check the condition	WITHOUT_CLASSIFICATION	0.9999007360323147	WITHOUT_CLASSIFICATION	9.926396768532876E-5	DESIGN
NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9998341516016387	WITHOUT_CLASSIFICATION	1.6584839836132907E-4	DESIGN
synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9998702842016192	WITHOUT_CLASSIFICATION	1.297157983807832E-4	DESIGN
break jump	WITHOUT_CLASSIFICATION	0.9990801346950864	WITHOUT_CLASSIFICATION	9.198653049135454E-4	DESIGN
Done with closure compilation	WITHOUT_CLASSIFICATION	0.99919632272485	WITHOUT_CLASSIFICATION	8.036772751500049E-4	DESIGN
[reg]	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9973003924265292	WITHOUT_CLASSIFICATION	0.0026996075734708113	DESIGN
inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9987209051868784	WITHOUT_CLASSIFICATION	0.001279094813121683	DESIGN
inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9932823734846807	WITHOUT_CLASSIFICATION	0.006717626515319326	DESIGN
synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9998702842016192	WITHOUT_CLASSIFICATION	1.297157983807832E-4	DESIGN
store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9998459784284709	WITHOUT_CLASSIFICATION	1.5402157152904908E-4	DESIGN
store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9998459784284709	WITHOUT_CLASSIFICATION	1.5402157152904908E-4	DESIGN
if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9991558232975077	WITHOUT_CLASSIFICATION	8.44176702492314E-4	DESIGN
retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9994262616883144	WITHOUT_CLASSIFICATION	5.737383116855994E-4	DESIGN
any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9987822828058793	WITHOUT_CLASSIFICATION	0.0012177171941207294	DESIGN
and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9919474554075988	WITHOUT_CLASSIFICATION	0.008052544592401251	DESIGN
restore the original exception	WITHOUT_CLASSIFICATION	0.9997508592364552	WITHOUT_CLASSIFICATION	2.4914076354477446E-4	DESIGN
Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9981807466534507	WITHOUT_CLASSIFICATION	0.0018192533465493078	DESIGN
rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9992450092948578	WITHOUT_CLASSIFICATION	7.549907051421388E-4	DESIGN
Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.997392687085377	WITHOUT_CLASSIFICATION	0.0026073129146230818	DESIGN
inside a loop, break out of it go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9971010830046532	WITHOUT_CLASSIFICATION	0.00289891699534678	DESIGN
false zero	WITHOUT_CLASSIFICATION	0.9997648275824498	WITHOUT_CLASSIFICATION	2.3517241755021553E-4	DESIGN
load all arguments straight through	WITHOUT_CLASSIFICATION	0.9994395859292221	WITHOUT_CLASSIFICATION	5.604140707778841E-4	DESIGN
and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9919474554075988	WITHOUT_CLASSIFICATION	0.008052544592401251	DESIGN
restore the original exception	WITHOUT_CLASSIFICATION	0.9997508592364552	WITHOUT_CLASSIFICATION	2.4914076354477446E-4	DESIGN
retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.997864814259073	WITHOUT_CLASSIFICATION	0.0021351857409270354	DESIGN
push false	WITHOUT_CLASSIFICATION	0.9995046159480666	WITHOUT_CLASSIFICATION	4.953840519333398E-4	DESIGN
method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9986828689501004	WITHOUT_CLASSIFICATION	0.001317131049899571	DESIGN
method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9994072205555466	WITHOUT_CLASSIFICATION	5.927794444533294E-4	DESIGN
EQ == 0 (i.e. false) [C]	WITHOUT_CLASSIFICATION	0.9998893396563467	WITHOUT_CLASSIFICATION	1.1066034365330332E-4	DESIGN
[C, C] [C, C, String] [C, null|C]	WITHOUT_CLASSIFICATION	0.9986828689501004	WITHOUT_CLASSIFICATION	0.001317131049899571	DESIGN
[C]	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
push true	WITHOUT_CLASSIFICATION	0.9995260591896525	WITHOUT_CLASSIFICATION	4.7394081034742957E-4	DESIGN
EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999064641367785	WITHOUT_CLASSIFICATION	9.353586322151891E-5	DESIGN
[?, ?] [?, boolean]	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
[RubyModule] [RubyModule, String]	WITHOUT_CLASSIFICATION	0.9986828689501004	WITHOUT_CLASSIFICATION	0.001317131049899571	DESIGN
[boolean]	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9984011924916869	WITHOUT_CLASSIFICATION	0.0015988075083130649	DESIGN
but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9991318051449491	WITHOUT_CLASSIFICATION	8.681948550509128E-4	DESIGN
we re-set self to the class, but store the old self in a temporary local variable this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9612696625074997	WITHOUT_CLASSIFICATION	0.03873033749250039	DESIGN
set self to the class	WITHOUT_CLASSIFICATION	0.9949882682754757	WITHOUT_CLASSIFICATION	0.005011731724524339	DESIGN
CLASS BODY	WITHOUT_CLASSIFICATION	0.9993251885488025	WITHOUT_CLASSIFICATION	6.748114511975343E-4	DESIGN
static scope	WITHOUT_CLASSIFICATION	0.9997135846801836	WITHOUT_CLASSIFICATION	2.8641531981641927E-4	DESIGN
Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9992318913433194	WITHOUT_CLASSIFICATION	7.681086566806509E-4	DESIGN
new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9987192167993733	WITHOUT_CLASSIFICATION	0.001280783200626674	DESIGN
CLASS BODY	WITHOUT_CLASSIFICATION	0.9993251885488025	WITHOUT_CLASSIFICATION	6.748114511975343E-4	DESIGN
static scope	WITHOUT_CLASSIFICATION	0.9997135846801836	WITHOUT_CLASSIFICATION	2.8641531981641927E-4	DESIGN
Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9992318913433194	WITHOUT_CLASSIFICATION	7.681086566806509E-4	DESIGN
finally with exception	WITHOUT_CLASSIFICATION	0.999570487161865	WITHOUT_CLASSIFICATION	4.295128381350142E-4	DESIGN
prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9550965148810446	WITHOUT_CLASSIFICATION	0.0449034851189553	DESIGN
otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9990435076866073	WITHOUT_CLASSIFICATION	9.564923133928024E-4	DESIGN
original exception is on stack	WITHOUT_CLASSIFICATION	0.9989620332868676	WITHOUT_CLASSIFICATION	0.0010379667131323708	DESIGN
RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9902513023622306	WITHOUT_CLASSIFICATION	0.009748697637769428	DESIGN
updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9998804639567888	WITHOUT_CLASSIFICATION	1.195360432112278E-4	DESIGN
callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9956144323687334	WITHOUT_CLASSIFICATION	0.00438556763126661	DESIGN
prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9557081379532176	WITHOUT_CLASSIFICATION	0.044291862046782475	DESIGN
script object	WITHOUT_CLASSIFICATION	0.9995488151347313	WITHOUT_CLASSIFICATION	4.51184865268824E-4	DESIGN
arities	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.869774087370147	WITHOUT_CLASSIFICATION	0.13022591262985303	DESIGN
we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9980210976025161	WITHOUT_CLASSIFICATION	0.0019789023974839267	DESIGN
we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9922282679145086	WITHOUT_CLASSIFICATION	0.007771732085491374	DESIGN
checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999333462528762	WITHOUT_CLASSIFICATION	6.66537471236953E-5	DESIGN
expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9983589782038417	WITHOUT_CLASSIFICATION	0.0016410217961582998	DESIGN
normal case, create a new label	WITHOUT_CLASSIFICATION	0.9978809968021187	WITHOUT_CLASSIFICATION	0.002119003197881388	DESIGN
last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9928109249637195	WITHOUT_CLASSIFICATION	0.0071890750362805	DESIGN
do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9758191594382291	WITHOUT_CLASSIFICATION	0.02418084056177099	DESIGN
just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9987216854728623	WITHOUT_CLASSIFICATION	0.001278314527137683	DESIGN
just confirm args length == required	WITHOUT_CLASSIFICATION	0.9997185441090121	WITHOUT_CLASSIFICATION	2.8145589098791404E-4	DESIGN
extract item from array	WITHOUT_CLASSIFICATION	0.9999787771362247	WITHOUT_CLASSIFICATION	2.1222863775274872E-5	DESIGN
index for the item	WITHOUT_CLASSIFICATION	0.9995678745343909	WITHOUT_CLASSIFICATION	4.321254656090741E-4	DESIGN
index for the item	WITHOUT_CLASSIFICATION	0.9995678745343909	WITHOUT_CLASSIFICATION	4.321254656090741E-4	DESIGN
prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.998031375272096	WITHOUT_CLASSIFICATION	0.0019686247279040894	DESIGN
prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.998031375272096	WITHOUT_CLASSIFICATION	0.0019686247279040894	DESIGN
next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9987437938144804	WITHOUT_CLASSIFICATION	0.0012562061855196107	DESIGN
next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9987437938144804	WITHOUT_CLASSIFICATION	0.0012562061855196107	DESIGN
now logic for each optional value	WITHOUT_CLASSIFICATION	0.9995612471198553	WITHOUT_CLASSIFICATION	4.387528801448395E-4	DESIGN
otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9989426749664446	WITHOUT_CLASSIFICATION	0.0010573250335554512	DESIGN
pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9798282822196135	WITHOUT_CLASSIFICATION	0.020171717780386535	DESIGN
if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9995255580895708	WITHOUT_CLASSIFICATION	4.744419104292283E-4	DESIGN
assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999187756272627	WITHOUT_CLASSIFICATION	8.122437273729423E-5	DESIGN
block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999860263754243	WITHOUT_CLASSIFICATION	1.3973624575724097E-5	DESIGN
first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9989761116973865	WITHOUT_CLASSIFICATION	0.0010238883026133733	DESIGN
then optional args	WITHOUT_CLASSIFICATION	0.9997359455502218	WITHOUT_CLASSIFICATION	2.640544497781223E-4	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9931294934462497	WITHOUT_CLASSIFICATION	0.006870506553750407	DESIGN
now logic for each optional value	WITHOUT_CLASSIFICATION	0.9995612471198553	WITHOUT_CLASSIFICATION	4.387528801448395E-4	DESIGN
otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9989426749664446	WITHOUT_CLASSIFICATION	0.0010573250335554512	DESIGN
pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9798282822196135	WITHOUT_CLASSIFICATION	0.020171717780386535	DESIGN
assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999187756272627	WITHOUT_CLASSIFICATION	8.122437273729423E-5	DESIGN
block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999860263754243	WITHOUT_CLASSIFICATION	1.3973624575724097E-5	DESIGN
if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9991052904192116	WITHOUT_CLASSIFICATION	8.947095807884052E-4	DESIGN
finally, post args	WITHOUT_CLASSIFICATION	0.9993882633867672	WITHOUT_CLASSIFICATION	6.117366132327374E-4	DESIGN
not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9988917885531412	WITHOUT_CLASSIFICATION	0.001108211446858898	DESIGN
not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9988917885531412	WITHOUT_CLASSIFICATION	0.001108211446858898	DESIGN
unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9943994165802802	WITHOUT_CLASSIFICATION	0.005600583419719805	DESIGN
fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9978610240991821	WITHOUT_CLASSIFICATION	0.0021389759008178886	DESIGN
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9782695224623614	WITHOUT_CLASSIFICATION	0.021730477537638557	DESIGN
temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9848848150989986	WITHOUT_CLASSIFICATION	0.015115184901001466	DESIGN
temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9848848150989986	WITHOUT_CLASSIFICATION	0.015115184901001466	DESIGN
declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9997138486868382	WITHOUT_CLASSIFICATION	2.861513131617377E-4	DESIGN
class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9618548510031625	WITHOUT_CLASSIFICATION	0.03814514899683756	DESIGN
store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9943107953579875	WITHOUT_CLASSIFICATION	0.005689204642012449	DESIGN
load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999423423049997	WITHOUT_CLASSIFICATION	5.765769500036255E-5	DESIGN
return in a class body raises error	WITHOUT_CLASSIFICATION	0.9983877659304448	WITHOUT_CLASSIFICATION	0.0016122340695551678	DESIGN
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.6086274395305815	WITHOUT_CLASSIFICATION	0.39137256046941854	DESIGN
return last value from execution	WITHOUT_CLASSIFICATION	0.9996513481953233	WITHOUT_CLASSIFICATION	3.486518046766252E-4	DESIGN
end of variable scope	WITHOUT_CLASSIFICATION	0.9998465142398677	WITHOUT_CLASSIFICATION	1.5348576013219162E-4	DESIGN
method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9855048939652299	WITHOUT_CLASSIFICATION	0.014495106034770135	DESIGN
load block from [] version of method	WITHOUT_CLASSIFICATION	0.9990946717126143	WITHOUT_CLASSIFICATION	9.053282873856039E-4	DESIGN
normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.998677933095767	WITHOUT_CLASSIFICATION	0.0013220669042330398	DESIGN
declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9997138486868382	WITHOUT_CLASSIFICATION	2.861513131617377E-4	DESIGN
class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9618548510031625	WITHOUT_CLASSIFICATION	0.03814514899683756	DESIGN
load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999423423049997	WITHOUT_CLASSIFICATION	5.765769500036255E-5	DESIGN
we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9994605346547326	WITHOUT_CLASSIFICATION	5.394653452674125E-4	DESIGN
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9782695224623614	WITHOUT_CLASSIFICATION	0.021730477537638557	DESIGN
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9782695224623614	WITHOUT_CLASSIFICATION	0.021730477537638557	DESIGN
load all arguments straight through	WITHOUT_CLASSIFICATION	0.9994395859292221	WITHOUT_CLASSIFICATION	5.604140707778841E-4	DESIGN
load all arguments straight through	WITHOUT_CLASSIFICATION	0.9994395859292221	WITHOUT_CLASSIFICATION	5.604140707778841E-4	DESIGN
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.974341905840224	WITHOUT_CLASSIFICATION	0.02565809415977606	DESIGN
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.974341905840224	WITHOUT_CLASSIFICATION	0.02565809415977606	DESIGN
store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.998741261040776	WITHOUT_CLASSIFICATION	0.0012587389592240122	DESIGN
if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9983693322039782	WITHOUT_CLASSIFICATION	0.0016306677960219174	DESIGN
fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9909392220172988	WITHOUT_CLASSIFICATION	0.009060777982701218	DESIGN
default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9970133327848276	WITHOUT_CLASSIFICATION	0.002986667215172424	DESIGN
store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.985217718087169	WITHOUT_CLASSIFICATION	0.01478228191283103	DESIGN
store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9932132284585323	WITHOUT_CLASSIFICATION	0.006786771541467704	DESIGN
in 1.8 mode, this will be a RubyArray containing the arguments in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9962361201002669	WITHOUT_CLASSIFICATION	0.0037638798997330796	DESIGN
no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9989875775854027	WITHOUT_CLASSIFICATION	0.0010124224145972925	DESIGN
for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9988384941294366	WITHOUT_CLASSIFICATION	0.0011615058705634735	DESIGN
set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9860659344363205	WITHOUT_CLASSIFICATION	0.013934065563679536	DESIGN
if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9993611336450416	WITHOUT_CLASSIFICATION	6.388663549583956E-4	DESIGN
verify the class	WITHOUT_CLASSIFICATION	0.9996759649780672	WITHOUT_CLASSIFICATION	3.240350219327264E-4	DESIGN
create dir if necessary	WITHOUT_CLASSIFICATION	0.9939449030320736	WITHOUT_CLASSIFICATION	0.0060550969679262975	DESIGN
Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9988059316590376	WITHOUT_CLASSIFICATION	0.001194068340962331	DESIGN
add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9998567869896865	WITHOUT_CLASSIFICATION	1.4321301031344752E-4	DESIGN
thread context	WITHOUT_CLASSIFICATION	0.9998743763805268	WITHOUT_CLASSIFICATION	1.2562361947317195E-4	DESIGN
line number	WITHOUT_CLASSIFICATION	0.9998777239837784	WITHOUT_CLASSIFICATION	1.222760162215458E-4	DESIGN
invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9996891197252505	WITHOUT_CLASSIFICATION	3.1088027474942626E-4	DESIGN
load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9936193291905489	WITHOUT_CLASSIFICATION	0.006380670809451144	DESIGN
return last value from execution	WITHOUT_CLASSIFICATION	0.9996513481953233	WITHOUT_CLASSIFICATION	3.486518046766252E-4	DESIGN
method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9855048939652299	WITHOUT_CLASSIFICATION	0.014495106034770135	DESIGN
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9899788925147632	WITHOUT_CLASSIFICATION	0.01002110748523675	DESIGN
block	WITHOUT_CLASSIFICATION	0.9998118140795204	WITHOUT_CLASSIFICATION	1.881859204796573E-4	DESIGN
block	WITHOUT_CLASSIFICATION	0.9998118140795204	WITHOUT_CLASSIFICATION	1.881859204796573E-4	DESIGN
we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9994605346547326	WITHOUT_CLASSIFICATION	5.394653452674125E-4	DESIGN
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9782695224623614	WITHOUT_CLASSIFICATION	0.021730477537638557	DESIGN
load all arguments straight through	WITHOUT_CLASSIFICATION	0.9994395859292221	WITHOUT_CLASSIFICATION	5.604140707778841E-4	DESIGN
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.974341905840224	WITHOUT_CLASSIFICATION	0.02565809415977606	DESIGN
add Script#run impl, used for running this script with a specified threadcontext and self root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.8753640671415799	WITHOUT_CLASSIFICATION	0.12463593285842012	DESIGN
add main impl, used for detached or command-line execution of this script with a new runtime root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9411215262603437	WITHOUT_CLASSIFICATION	0.05887847373965632	DESIGN
construct static scope list of names	WITHOUT_CLASSIFICATION	0.9991936681096291	WITHOUT_CLASSIFICATION	8.06331890370941E-4	DESIGN
JRUBY-3014: make __FILE__ dynamically determined at load time, but we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9977671316185533	WITHOUT_CLASSIFICATION	0.0022328683814467516	DESIGN
ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9983737775394412	WITHOUT_CLASSIFICATION	0.0016262224605587915	DESIGN
ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9983737775394412	WITHOUT_CLASSIFICATION	0.0016262224605587915	DESIGN
lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9864483504292209	WITHOUT_CLASSIFICATION	0.013551649570779154	DESIGN
boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9995043344084903	WITHOUT_CLASSIFICATION	4.956655915097575E-4	DESIGN
invoke static __file__	WITHOUT_CLASSIFICATION	0.9994843712885398	WITHOUT_CLASSIFICATION	5.156287114602297E-4	DESIGN
exact arg list __file__	WITHOUT_CLASSIFICATION	0.999270253176072	WITHOUT_CLASSIFICATION	7.297468239279951E-4	DESIGN
declare the field	WITHOUT_CLASSIFICATION	0.9999059316509221	WITHOUT_CLASSIFICATION	9.406834907795363E-5	DESIGN
declare the field	WITHOUT_CLASSIFICATION	0.9999059316509221	WITHOUT_CLASSIFICATION	9.406834907795363E-5	DESIGN
not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9994313710888065	WITHOUT_CLASSIFICATION	5.686289111934784E-4	DESIGN
normal closure	WITHOUT_CLASSIFICATION	0.9998499635066482	WITHOUT_CLASSIFICATION	1.5003649335170946E-4	DESIGN
end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9993900884289927	WITHOUT_CLASSIFICATION	6.099115710073961E-4	DESIGN
we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9998229534699258	WITHOUT_CLASSIFICATION	1.7704653007418887E-4	DESIGN
handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9991905934623511	WITHOUT_CLASSIFICATION	8.094065376488796E-4	DESIGN
jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9979836995181779	WITHOUT_CLASSIFICATION	0.0020163004818220956	DESIGN
Ruby name	WITHOUT_CLASSIFICATION	0.999038137216645	WITHOUT_CLASSIFICATION	9.61862783355015E-4	DESIGN
Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9990456704163897	WITHOUT_CLASSIFICATION	9.543295836102822E-4	DESIGN
Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9904848027985411	WITHOUT_CLASSIFICATION	0.009515197201458886	DESIGN
We need to ensure that the variable names generated here cannot conflict with ruby variable names! Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9932775119790842	WITHOUT_CLASSIFICATION	0.006722488020915784	DESIGN
Does this method define code? Default is yes -- which basically leads to pessimistic but safe optimizations But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9615299867256819	WITHOUT_CLASSIFICATION	0.03847001327431802	DESIGN
Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9995963219485977	WITHOUT_CLASSIFICATION	4.0367805140232904E-4	DESIGN
NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner with outer loops encountered before inner loops, and inner loops finished before outer ones. So, we can keep track of loops in a loop stack which keeps track of loops as they are encountered. This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9492816432953057	WITHOUT_CLASSIFICATION	0.050718356704694226	DESIGN
Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9654532031966712	WITHOUT_CLASSIFICATION	0.034546796803328735	DESIGN
Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9961628616350573	WITHOUT_CLASSIFICATION	0.003837138364942759	DESIGN
_lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9939469582821704	WITHOUT_CLASSIFICATION	0.00605304171782957	DESIGN
List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9987132154297413	WITHOUT_CLASSIFICATION	0.0012867845702586496	DESIGN
Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9989828947747775	WITHOUT_CLASSIFICATION	0.001017105225222517	DESIGN
Insert nesting level to ensure variable names don't conflict across nested scopes! i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9924847288103036	WITHOUT_CLASSIFICATION	0.007515271189696366	DESIGN
get "self"	WITHOUT_CLASSIFICATION	0.999223289600243	WITHOUT_CLASSIFICATION	7.767103997570261E-4	DESIGN
variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9980885611253584	WITHOUT_CLASSIFICATION	0.0019114388746415414	DESIGN
inline script	WITHOUT_CLASSIFICATION	0.9996134383814265	WITHOUT_CLASSIFICATION	3.8656161857359924E-4	DESIGN
inline script	WITHOUT_CLASSIFICATION	0.9996134383814265	WITHOUT_CLASSIFICATION	3.8656161857359924E-4	DESIGN
This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.7899701785122968	WITHOUT_CLASSIFICATION	0.21002982148770324	DESIGN
Build the class body!	WITHOUT_CLASSIFICATION	0.9992991708730099	WITHOUT_CLASSIFICATION	7.008291269900371E-4	DESIGN
unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9993255870715326	WITHOUT_CLASSIFICATION	6.744129284673319E-4	DESIGN
unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9993255870715326	WITHOUT_CLASSIFICATION	6.744129284673319E-4	DESIGN
SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.7836530726711164	DESIGN	0.21634692732888355	WITHOUT_CLASSIFICATION
Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9988268164384495	WITHOUT_CLASSIFICATION	0.0011731835615504298	DESIGN
done done done done	WITHOUT_CLASSIFICATION	0.9981689265475094	WITHOUT_CLASSIFICATION	0.0018310734524904862	DESIGN
NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9991401866012328	WITHOUT_CLASSIFICATION	8.598133987671789E-4	DESIGN
NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9991401866012328	WITHOUT_CLASSIFICATION	8.598133987671789E-4	DESIGN
This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.7722941505443831	WITHOUT_CLASSIFICATION	0.22770584945561684	DESIGN
build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9952864535616254	WITHOUT_CLASSIFICATION	0.00471354643837465	DESIGN
build first node only and return false	WITHOUT_CLASSIFICATION	0.9996555898563056	WITHOUT_CLASSIFICATION	3.444101436943626E-4	DESIGN
Value of the last expression in the block	WITHOUT_CLASSIFICATION	0.9998908196400214	WITHOUT_CLASSIFICATION	1.0918035997869248E-4	DESIGN
If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9992596458073132	WITHOUT_CLASSIFICATION	7.403541926866768E-4	DESIGN
get the incoming case value	WITHOUT_CLASSIFICATION	0.9998871818655303	WITHOUT_CLASSIFICATION	1.1281813446971812E-4	DESIGN
the CASE instruction	WITHOUT_CLASSIFICATION	0.9998050420378213	WITHOUT_CLASSIFICATION	1.949579621787196E-4	DESIGN
lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9966237238346043	WITHOUT_CLASSIFICATION	0.003376276165395772	DESIGN
build each "when"	WITHOUT_CLASSIFICATION	0.9993841188661619	WITHOUT_CLASSIFICATION	6.158811338381891E-4	DESIGN
multiple conditions for when	WITHOUT_CLASSIFICATION	0.998303282994	WITHOUT_CLASSIFICATION	0.0016967170060000107	DESIGN
build "else" if it exists	WITHOUT_CLASSIFICATION	0.9993716511536226	WITHOUT_CLASSIFICATION	6.283488463774551E-4	DESIGN
now emit bodies	WITHOUT_CLASSIFICATION	0.9995496784121314	WITHOUT_CLASSIFICATION	4.503215878687117E-4	DESIGN
close it out	WITHOUT_CLASSIFICATION	0.9999124261486593	WITHOUT_CLASSIFICATION	8.757385134070039E-5	DESIGN
By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.990300764555279	WITHOUT_CLASSIFICATION	0.009699235444720905	DESIGN
Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.992009795987417	WITHOUT_CLASSIFICATION	0.007990204012582963	DESIGN
Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9985095463279989	WITHOUT_CLASSIFICATION	0.001490453672001041	DESIGN
1. Load the module first (lhs of node) 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9997495080549598	WITHOUT_CLASSIFICATION	2.504919450402683E-4	DESIGN
Build IR for args	WITHOUT_CLASSIFICATION	0.9994732244756906	WITHOUT_CLASSIFICATION	5.267755243093115E-4	DESIGN
Build IR for body	WITHOUT_CLASSIFICATION	0.9996619971713205	WITHOUT_CLASSIFICATION	3.380028286793732E-4	DESIGN
if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9830901807412226	WITHOUT_CLASSIFICATION	0.01690981925877737	DESIGN
Instance method	WITHOUT_CLASSIFICATION	0.9989163312082245	WITHOUT_CLASSIFICATION	0.0010836687917754832	DESIGN
Class method	WITHOUT_CLASSIFICATION	0.9988372890634603	WITHOUT_CLASSIFICATION	0.0011627109365396977	DESIGN
Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9736336949492549	WITHOUT_CLASSIFICATION	0.026366305050745116	DESIGN
Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9974833016195416	WITHOUT_CLASSIFICATION	0.0025166983804583687	DESIGN
Now for the rest	WITHOUT_CLASSIFICATION	0.9999225411287251	WITHOUT_CLASSIFICATION	7.7458871274769E-5	DESIGN
Jump to 'l' if this arg is not null. If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9977935339315267	WITHOUT_CLASSIFICATION	0.002206466068473341	DESIGN
This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9991646847095146	WITHOUT_CLASSIFICATION	8.353152904854968E-4	DESIGN
Create a new closure context	WITHOUT_CLASSIFICATION	0.9997499914849415	WITHOUT_CLASSIFICATION	2.500085150584895E-4	DESIGN
Build args	WITHOUT_CLASSIFICATION	0.9992537457079989	WITHOUT_CLASSIFICATION	7.462542920011645E-4	DESIGN
Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999713967285561	WITHOUT_CLASSIFICATION	2.8603271443902332E-5	DESIGN
Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.999949725962456	WITHOUT_CLASSIFICATION	5.0274037544078544E-5	DESIGN
By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.990300764555279	WITHOUT_CLASSIFICATION	0.009699235444720905	DESIGN
Create a new closure context	WITHOUT_CLASSIFICATION	0.9997499914849415	WITHOUT_CLASSIFICATION	2.500085150584895E-4	DESIGN
Build args	WITHOUT_CLASSIFICATION	0.9992537457079989	WITHOUT_CLASSIFICATION	7.462542920011645E-4	DESIGN
Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.999949725962456	WITHOUT_CLASSIFICATION	5.0274037544078544E-5	DESIGN
Get the container for this new module	WITHOUT_CLASSIFICATION	0.9981651408595223	WITHOUT_CLASSIFICATION	0.0018348591404776752	DESIGN
Build the new module	WITHOUT_CLASSIFICATION	0.9995134480622107	WITHOUT_CLASSIFICATION	4.865519377893645E-4	DESIGN
Build the module body	WITHOUT_CLASSIFICATION	0.9995309669811743	WITHOUT_CLASSIFICATION	4.6903301882573345E-4	DESIGN
First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9989308826236505	WITHOUT_CLASSIFICATION	0.0010691173763494825	DESIGN
rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999160925082733	WITHOUT_CLASSIFICATION	8.390749172672734E-5	DESIGN
If a closure, the next is simply a return from the closure! If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9997183041874509	WITHOUT_CLASSIFICATION	2.8169581254912184E-4	DESIGN
get attr	WITHOUT_CLASSIFICATION	0.9990578898530743	WITHOUT_CLASSIFICATION	9.421101469257437E-4	DESIGN
call operator	WITHOUT_CLASSIFICATION	0.9995448428490211	WITHOUT_CLASSIFICATION	4.5515715097894265E-4	DESIGN
set attr	WITHOUT_CLASSIFICATION	0.9983170016020358	WITHOUT_CLASSIFICATION	0.0016829983979641664	DESIGN
Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> x = -- build(x) should return a variable! -- f = is_true(x) beq(f, false, L) x = -- build(y) -- L:	WITHOUT_CLASSIFICATION	0.9980222380779301	WITHOUT_CLASSIFICATION	0.0019777619220698807	DESIGN
This does the assignment!	WITHOUT_CLASSIFICATION	0.9948347813211161	WITHOUT_CLASSIFICATION	0.005165218678883793	DESIGN
This does the assignment!	WITHOUT_CLASSIFICATION	0.9948347813211161	WITHOUT_CLASSIFICATION	0.005165218678883793	DESIGN
if v1 is defined and true, we are done!	WITHOUT_CLASSIFICATION	0.9996570287359368	WITHOUT_CLASSIFICATION	3.429712640632442E-4	DESIGN
build first node only and return true	WITHOUT_CLASSIFICATION	0.9996705001811911	WITHOUT_CLASSIFICATION	3.294998188089162E-4	DESIGN
build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9991085862596876	WITHOUT_CLASSIFICATION	8.914137403125115E-4	DESIGN
Top-level script!	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9993389440225575	WITHOUT_CLASSIFICATION	6.610559774425558E-4	DESIGN
----------- Private Interface ------------	WITHOUT_CLASSIFICATION	0.9994538315259367	WITHOUT_CLASSIFICATION	5.461684740632663E-4	DESIGN
What handles warnings	WITHOUT_CLASSIFICATION	0.9991421453733165	WITHOUT_CLASSIFICATION	8.578546266835159E-4	DESIGN
Tries to load at compile-time the constant referred to by 'constRef'. This might be possible if the constant is defined and is not a forward reference to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9992988922146158	WITHOUT_CLASSIFICATION	7.01107785384203E-4	DESIGN
For closures, a redo is a jump to the beginning of the closure For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9994171829654404	WITHOUT_CLASSIFICATION	5.828170345595946E-4	DESIGN
The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.992199699754489	WITHOUT_CLASSIFICATION	0.007800300245510945	DESIGN
Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9936492061529308	WITHOUT_CLASSIFICATION	0.006350793847069191	DESIGN
Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9846653550454629	WITHOUT_CLASSIFICATION	0.01533464495453703	DESIGN
------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9995243044505914	WITHOUT_CLASSIFICATION	4.756955494087218E-4	DESIGN
value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9993097576731796	WITHOUT_CLASSIFICATION	6.902423268203239E-4	DESIGN
alu operations	WITHOUT_CLASSIFICATION	0.999629733192828	WITHOUT_CLASSIFICATION	3.7026680717196095E-4	DESIGN
method handle, arg receive, return value, and call instructions	WITHOUT_CLASSIFICATION	0.9976792877729661	WITHOUT_CLASSIFICATION	0.0023207122270338257	DESIGN
closure instructions	WITHOUT_CLASSIFICATION	0.9997920747267864	WITHOUT_CLASSIFICATION	2.0792527321345877E-4	DESIGN
eval instructions	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
def instructions	WITHOUT_CLASSIFICATION	0.9992524794369252	WITHOUT_CLASSIFICATION	7.475205630747629E-4	DESIGN
exception instructions	WITHOUT_CLASSIFICATION	0.9995567214751996	WITHOUT_CLASSIFICATION	4.432785248004682E-4	DESIGN
Loads	WITHOUT_CLASSIFICATION	0.9991382167218256	WITHOUT_CLASSIFICATION	8.617832781744461E-4	DESIGN
Stores	WITHOUT_CLASSIFICATION	0.9990885938104193	WITHOUT_CLASSIFICATION	9.114061895807555E-4	DESIGN
jump and branch operations	WITHOUT_CLASSIFICATION	0.9995950118103407	WITHOUT_CLASSIFICATION	4.049881896593241E-4	DESIGN
others	WITHOUT_CLASSIFICATION	0.9989204980183851	WITHOUT_CLASSIFICATION	0.0010795019816149084	DESIGN
a case/when branch	WITHOUT_CLASSIFICATION	0.9994233756631016	WITHOUT_CLASSIFICATION	5.766243368984898E-4	DESIGN
optimization guards	WITHOUT_CLASSIFICATION	0.9996127542973302	WITHOUT_CLASSIFICATION	3.8724570266979223E-4	DESIGN
By default, call instructions cannot be deleted even if their results aren't used by anyone unless we know more about what the call is, what it does, etc. Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9545317265658091	WITHOUT_CLASSIFICATION	0.04546827343419093	DESIGN
Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9974045184395413	WITHOUT_CLASSIFICATION	0.0025954815604586974	DESIGN
scripts	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
scripts and modules	WITHOUT_CLASSIFICATION	0.9998452567918954	WITHOUT_CLASSIFICATION	1.547432081045778E-4	DESIGN
scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9997759751709691	WITHOUT_CLASSIFICATION	2.2402482903092336E-4	DESIGN
methods and closures	WITHOUT_CLASSIFICATION	0.9996641219553631	WITHOUT_CLASSIFICATION	3.3587804463684653E-4	DESIGN
create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9995420556642998	WITHOUT_CLASSIFICATION	4.579443357001761E-4	DESIGN
create a new temporary variable	WITHOUT_CLASSIFICATION	0.9644858639161672	WITHOUT_CLASSIFICATION	0.035514136083832894	DESIGN
Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9990981152283043	WITHOUT_CLASSIFICATION	9.018847716956123E-4	DESIGN
Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9998858192142295	WITHOUT_CLASSIFICATION	1.1418078577051336E-4	DESIGN
Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999541229122167	WITHOUT_CLASSIFICATION	4.5877087783233456E-5	DESIGN
While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9757932443752654	WITHOUT_CLASSIFICATION	0.024206755624734594	DESIGN
Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9993494559078127	WITHOUT_CLASSIFICATION	6.505440921872685E-4	DESIGN
Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9973362943764854	WITHOUT_CLASSIFICATION	0.0026637056235146945	DESIGN
Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9946683658424602	WITHOUT_CLASSIFICATION	0.005331634157539785	DESIGN
Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9986061123631953	WITHOUT_CLASSIFICATION	0.0013938876368047694	DESIGN
Readline	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9988259043656114	WITHOUT_CLASSIFICATION	0.0011740956343886148	DESIGN
Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9973193744265689	WITHOUT_CLASSIFICATION	0.0026806255734310044	DESIGN
If 'r' is not a constant, it could actually be a compound value! Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999751424236599	WITHOUT_CLASSIFICATION	2.4857576340173475E-5	DESIGN
Check if we can optimize this call based on the receiving method and receiver type Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.8551850545711752	DESIGN	0.14481494542882473	WITHOUT_CLASSIFICATION
If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999498492863508	WITHOUT_CLASSIFICATION	5.0150713649264926E-5	DESIGN
If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9991173879021936	WITHOUT_CLASSIFICATION	8.82612097806362E-4	DESIGN
----------- Public abstract methods ----------	WITHOUT_CLASSIFICATION	0.9946155107270446	WITHOUT_CLASSIFICATION	0.005384489272955467	DESIGN
----------- Public methods with a default implementation ----------	WITHOUT_CLASSIFICATION	0.9980514858539802	WITHOUT_CLASSIFICATION	0.0019485141460197598	DESIGN
Compute meet over all "sources" and compute "destination" basic blocks that should then be processed. sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9989823728310506	WITHOUT_CLASSIFICATION	0.001017627168949397	DESIGN
If the solution has changed, add "dsts" to the work list. No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9699316650183167	WITHOUT_CLASSIFICATION	0.0300683349816833	DESIGN
--------- Protected fields/methods below ---------	WITHOUT_CLASSIFICATION	0.9990648213262497	WITHOUT_CLASSIFICATION	9.351786737502325E-4	DESIGN
Dataflow problem with which this node is associated CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9834418047961412	WITHOUT_CLASSIFICATION	0.016558195203858785	DESIGN
-------------- Public fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9992046152349576	WITHOUT_CLASSIFICATION	7.953847650422766E-4	DESIGN
------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9979731127656318	WITHOUT_CLASSIFICATION	0.002026887234368181	DESIGN
------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9989988408495233	WITHOUT_CLASSIFICATION	0.0010011591504767024	DESIGN
Compute Meet Over All Paths solution for this dataflow problem on the input CFG. This implements a standard worklist algorithm.	WITHOUT_CLASSIFICATION	0.5176282175197444	WITHOUT_CLASSIFICATION	0.4823717824802557	DESIGN
Individual analyses should override this	WITHOUT_CLASSIFICATION	0.9641505219784344	WITHOUT_CLASSIFICATION	0.035849478021565594	DESIGN
Individual analyses should override this	WITHOUT_CLASSIFICATION	0.9641505219784344	WITHOUT_CLASSIFICATION	0.035849478021565594	DESIGN
-------------- Packaged/protected fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9991876641156952	WITHOUT_CLASSIFICATION	8.123358843049467E-4	DESIGN
We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.995432322492418	WITHOUT_CLASSIFICATION	0.004567677507581991	DESIGN
-------------- Protected fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9991876641156952	WITHOUT_CLASSIFICATION	8.123358843049467E-4	DESIGN
-------------- Private fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9995248801936574	WITHOUT_CLASSIFICATION	4.751198063425483E-4	DESIGN
Initialize all flow graph nodes	WITHOUT_CLASSIFICATION	0.9996846297928631	WITHOUT_CLASSIFICATION	3.1537020713685176E-4	DESIGN
Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses	WITHOUT_CLASSIFICATION	0.99864301878129	WITHOUT_CLASSIFICATION	0.0013569812187099175	DESIGN
PUBLIC INTERFACE	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9952518298411078	WITHOUT_CLASSIFICATION	0.004748170158892209	DESIGN
start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9979552056967653	WITHOUT_CLASSIFICATION	0.0020447943032346765	DESIGN
switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9874748104337511	WITHOUT_CLASSIFICATION	0.012525189566248993	DESIGN
----------- Public Interface ------------	WITHOUT_CLASSIFICATION	0.9990857184571098	WITHOUT_CLASSIFICATION	9.142815428902121E-4	DESIGN
class or module	WITHOUT_CLASSIFICATION	0.9986818655766623	WITHOUT_CLASSIFICATION	0.0013181344233378063	DESIGN
OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999283477509946	WITHOUT_CLASSIFICATION	7.165224900544555E-5	DESIGN
Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9989391478361772	WITHOUT_CLASSIFICATION	0.0010608521638228294	DESIGN
v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9998974472797113	WITHOUT_CLASSIFICATION	1.0255272028865266E-4	DESIGN
IN is the same!	WITHOUT_CLASSIFICATION	0.999527101530097	WITHOUT_CLASSIFICATION	4.728984699028858E-4	DESIGN
IN changed!	WITHOUT_CLASSIFICATION	0.999619226928712	WITHOUT_CLASSIFICATION	3.807730712879733E-4	DESIGN
---------- Protected / package fields, methods ---------	WITHOUT_CLASSIFICATION	0.9980302593930661	WITHOUT_CLASSIFICATION	0.0019697406069338844	DESIGN
If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9992698547000386	WITHOUT_CLASSIFICATION	7.301452999614026E-4	DESIGN
Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9957389012939665	WITHOUT_CLASSIFICATION	0.004261098706033553	DESIGN
---------- Private fields, methods ---------	WITHOUT_CLASSIFICATION	0.9991850138918837	WITHOUT_CLASSIFICATION	8.149861081163092E-4	DESIGN
Variables live at entry of this node Variables live at exit of node Temporary set of live variables Size of the "_in" and "_out" bit sets	WITHOUT_CLASSIFICATION	0.7890184409945036	WITHOUT_CLASSIFICATION	0.2109815590054963	DESIGN
Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9955193769197213	WITHOUT_CLASSIFICATION	0.0044806230802786765	DESIGN
Does this instruction have side effects as a result of its operation This information is used in optimization phases to impact dead code elimination and other optimization passes	WITHOUT_CLASSIFICATION	0.5052466707808092	DESIGN	0.4947533292191909	WITHOUT_CLASSIFICATION
--------- "Abstract"/"please-override" methods ---------	WITHOUT_CLASSIFICATION	0.9985946716573828	WITHOUT_CLASSIFICATION	0.001405328342617265	DESIGN
Array of all operands for this instruction	WITHOUT_CLASSIFICATION	0.9948710994804512	WITHOUT_CLASSIFICATION	0.005128900519548822	DESIGN
List of all variables used by all operands of this instruction	WITHOUT_CLASSIFICATION	0.9851293713076831	WITHOUT_CLASSIFICATION	0.014870628692316827	DESIGN
This method takes as input a map of operands to their values, and outputs If the value map provides a value for any of the instruction's operands this method is expected to replace the original operands with the simplified values. It is not required that it do so -- code correctness is not compromised by failure to simplify	WITHOUT_CLASSIFICATION	0.9959824690759825	WITHOUT_CLASSIFICATION	0.004017530924017418	DESIGN
By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9993355256603572	WITHOUT_CLASSIFICATION	6.644743396428725E-4	DESIGN
Can this call lead to ruby code getting modified? If we don't know what method we are calling, we assume it can (pessimistic, but safe!) If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.5871159635645261	WITHOUT_CLASSIFICATION	0.4128840364354738	DESIGN
By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9990682628177067	WITHOUT_CLASSIFICATION	9.317371822933992E-4	DESIGN
If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9978247434149525	WITHOUT_CLASSIFICATION	0.00217525658504736	DESIGN
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.9834049630408233	WITHOUT_CLASSIFICATION	0.01659503695917682	DESIGN
Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9991763718831987	WITHOUT_CLASSIFICATION	8.2362811680117E-4	DESIGN
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.9834049630408233	WITHOUT_CLASSIFICATION	0.01659503695917682	DESIGN
You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9995003373123588	WITHOUT_CLASSIFICATION	4.996626876411861E-4	DESIGN
If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9993501294513343	WITHOUT_CLASSIFICATION	6.498705486656925E-4	DESIGN
If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9993501294513343	WITHOUT_CLASSIFICATION	6.498705486656925E-4	DESIGN
If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9993501294513343	WITHOUT_CLASSIFICATION	6.498705486656925E-4	DESIGN
For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999677402217483	WITHOUT_CLASSIFICATION	3.225977825165872E-5	DESIGN
For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999677402217483	WITHOUT_CLASSIFICATION	3.225977825165872E-5	DESIGN
The operand that this attribute targets DEFERRED AttributeValue _val; Attribute value	WITHOUT_CLASSIFICATION	0.9991421884940749	WITHOUT_CLASSIFICATION	8.578115059251105E-4	DESIGN
Arrays, Ranges, etc. are compound values Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9997461011607116	WITHOUT_CLASSIFICATION	2.538988392883905E-4	DESIGN
Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9998826992709192	WITHOUT_CLASSIFICATION	1.1730072908076121E-4	DESIGN
The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9913532246511367	WITHOUT_CLASSIFICATION	0.00864677534886326	DESIGN
Nothing to do by default	WITHOUT_CLASSIFICATION	0.9990813274220377	WITHOUT_CLASSIFICATION	9.186725779622145E-4	DESIGN
Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9983406737125998	WITHOUT_CLASSIFICATION	0.0016593262874001723	DESIGN
Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9989993920127254	WITHOUT_CLASSIFICATION	0.001000607987274633	DESIGN
ignore	WITHOUT_CLASSIFICATION	0.9987794470667928	WITHOUT_CLASSIFICATION	0.0012205529332072046	DESIGN
Scope (method/closure) to which this cfg belongs Entry BB -- dummy Exit BB -- dummy The actual graph Next available basic block id	WITHOUT_CLASSIFICATION	0.9991071205919387	WITHOUT_CLASSIFICATION	8.928794080611545E-4	DESIGN
Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9997912005275248	WITHOUT_CLASSIFICATION	2.0879947247531938E-4	DESIGN
Add forward ref. edges	WITHOUT_CLASSIFICATION	0.999620524295325	WITHOUT_CLASSIFICATION	3.794757046750029E-4	DESIGN
currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9994937522339459	WITHOUT_CLASSIFICATION	5.062477660541959E-4	DESIGN
Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9992508050569688	WITHOUT_CLASSIFICATION	7.491949430312526E-4	DESIGN
root-level logic	WITHOUT_CLASSIFICATION	0.999605790610607	WITHOUT_CLASSIFICATION	3.942093893930207E-4	DESIGN
root-level methods	WITHOUT_CLASSIFICATION	0.9995651445781544	WITHOUT_CLASSIFICATION	4.348554218456479E-4	DESIGN
root-level classes	WITHOUT_CLASSIFICATION	0.9997673924980147	WITHOUT_CLASSIFICATION	2.326075019851795E-4	DESIGN
case 4: signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); break; case 5: signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); break;	WITHOUT_CLASSIFICATION	0.9999591751759952	WITHOUT_CLASSIFICATION	4.082482400479753E-5	DESIGN
load receiver	WITHOUT_CLASSIFICATION	0.9997049245185496	WITHOUT_CLASSIFICATION	2.9507548145030394E-4	DESIGN
load receiver	WITHOUT_CLASSIFICATION	0.9997049245185496	WITHOUT_CLASSIFICATION	2.9507548145030394E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.999305046052419	WITHOUT_CLASSIFICATION	6.949539475809712E-4	DESIGN
load arguments	WITHOUT_CLASSIFICATION	0.9996944335702762	WITHOUT_CLASSIFICATION	3.0556642972379616E-4	DESIGN
load arguments	WITHOUT_CLASSIFICATION	0.9996944335702762	WITHOUT_CLASSIFICATION	3.0556642972379616E-4	DESIGN
case 4: case 5:	WITHOUT_CLASSIFICATION	0.9998948358072087	WITHOUT_CLASSIFICATION	1.0516419279127867E-4	DESIGN
Object[] args	WITHOUT_CLASSIFICATION	0.9992734053039728	WITHOUT_CLASSIFICATION	7.265946960272744E-4	DESIGN
load handle	WITHOUT_CLASSIFICATION	0.9989414793541496	WITHOUT_CLASSIFICATION	0.0010585206458503952	DESIGN
args array	WITHOUT_CLASSIFICATION	0.9995344354471052	WITHOUT_CLASSIFICATION	4.655645528948042E-4	DESIGN
i'th argument	WITHOUT_CLASSIFICATION	0.9999569614446908	WITHOUT_CLASSIFICATION	4.3038555309096344E-5	DESIGN
invoke specific arity version	WITHOUT_CLASSIFICATION	0.9991093158271863	WITHOUT_CLASSIFICATION	8.906841728136346E-4	DESIGN
Object arg0	WITHOUT_CLASSIFICATION	0.9996027727692725	WITHOUT_CLASSIFICATION	3.9722723072757506E-4	DESIGN
useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.995801866976137	WITHOUT_CLASSIFICATION	0.004198133023862867	DESIGN
No editing before startPos	WITHOUT_CLASSIFICATION	0.9999501365173933	WITHOUT_CLASSIFICATION	4.986348260669398E-5	DESIGN
no silly ticks!	WITHOUT_CLASSIFICATION	0.9997989546280017	WITHOUT_CLASSIFICATION	2.010453719983796E-4	DESIGN
no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9997867331911152	WITHOUT_CLASSIFICATION	2.132668088848752E-4	DESIGN
at end	WITHOUT_CLASSIFICATION	0.9994654923991741	WITHOUT_CLASSIFICATION	5.345076008258885E-4	DESIGN
undo check	WITHOUT_CLASSIFICATION	0.999853383848634	WITHOUT_CLASSIFICATION	1.4661615136598045E-4	DESIGN
Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.998485922281705	WITHOUT_CLASSIFICATION	0.0015140777182950738	DESIGN
ignore	WITHOUT_CLASSIFICATION	0.9987794470667928	WITHOUT_CLASSIFICATION	0.0012205529332072046	DESIGN
\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
Assign the values.	WITHOUT_CLASSIFICATION	0.9995711742745517	WITHOUT_CLASSIFICATION	4.2882572544839914E-4	DESIGN
no check for ''	WITHOUT_CLASSIFICATION	0.99988075181929	WITHOUT_CLASSIFICATION	1.1924818070993955E-4	DESIGN
no check for ''	WITHOUT_CLASSIFICATION	0.99988075181929	WITHOUT_CLASSIFICATION	1.1924818070993955E-4	DESIGN
Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9962449605312661	WITHOUT_CLASSIFICATION	0.0037550394687339513	DESIGN
this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9955054517458829	WITHOUT_CLASSIFICATION	0.004494548254117127	DESIGN
no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9984835506422284	WITHOUT_CLASSIFICATION	0.0015164493577715604	DESIGN
restore position	WITHOUT_CLASSIFICATION	0.9996789355414674	WITHOUT_CLASSIFICATION	3.210644585326876E-4	DESIGN
Something like cvar_cbase() from eval.c, factored out for the benefit of all the classvar-related node evaluations	WITHOUT_CLASSIFICATION	0.9958814897613687	WITHOUT_CLASSIFICATION	0.0041185102386313245	DESIGN
Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.999391282145596	WITHOUT_CLASSIFICATION	6.087178544039622E-4	DESIGN
JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9998490625536057	WITHOUT_CLASSIFICATION	1.5093744639422678E-4	DESIGN
MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.993915072527277	WITHOUT_CLASSIFICATION	0.0060849274727230625	DESIGN
We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9979164660957912	WITHOUT_CLASSIFICATION	0.0020835339042087754	DESIGN
JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9932942225876061	WITHOUT_CLASSIFICATION	0.006705777412393907	DESIGN
not overridden, let's go	WITHOUT_CLASSIFICATION	0.9999577258672311	WITHOUT_CLASSIFICATION	4.227413276897011E-5	DESIGN
Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8()	WITHOUT_CLASSIFICATION	0.9949917218606004	WITHOUT_CLASSIFICATION	0.0050082781393996955	DESIGN
FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9121160890011599	WITHOUT_CLASSIFICATION	0.08788391099884008	DESIGN
Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9996272938281671	WITHOUT_CLASSIFICATION	3.7270617183286656E-4	DESIGN
clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9997943499671005	WITHOUT_CLASSIFICATION	2.0565003289955782E-4	DESIGN
These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9650526358860786	WITHOUT_CLASSIFICATION	0.03494736411392139	DESIGN
Timeout module methods	WITHOUT_CLASSIFICATION	0.9986422693984685	WITHOUT_CLASSIFICATION	0.0013577306015314788	DESIGN
Toplevel defines	WITHOUT_CLASSIFICATION	0.9996096183276982	WITHOUT_CLASSIFICATION	3.903816723017669E-4	DESIGN
No seconds, just yield	WITHOUT_CLASSIFICATION	0.999723225777145	WITHOUT_CLASSIFICATION	2.76774222854926E-4	DESIGN
No timeout in critical section	WITHOUT_CLASSIFICATION	0.999602647101744	WITHOUT_CLASSIFICATION	3.9735289825611555E-4	DESIGN
if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.999809455088601	WITHOUT_CLASSIFICATION	1.9054491139900456E-4	DESIGN
and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9993519845507646	WITHOUT_CLASSIFICATION	6.480154492354723E-4	DESIGN
otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9994693461633707	WITHOUT_CLASSIFICATION	5.306538366293847E-4	DESIGN
Remove the Executor task now, to avoid cancelled tasks accumulating until an Executor thread can schedule and remove them	WITHOUT_CLASSIFICATION	0.996037937434386	WITHOUT_CLASSIFICATION	0.003962062565613959	DESIGN
If the task was scheduled, wait for it to finish before polling for the exception it would have thrown.	WITHOUT_CLASSIFICATION	0.9998447964614642	WITHOUT_CLASSIFICATION	1.5520353853585163E-4	DESIGN
NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9994072205555466	WITHOUT_CLASSIFICATION	5.927794444533294E-4	DESIGN
When a length is given, read_string acts like get_bytes	WITHOUT_CLASSIFICATION	0.9892780877524623	WITHOUT_CLASSIFICATION	0.010721912247537794	DESIGN
Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9930574321982136	WITHOUT_CLASSIFICATION	0.006942567801786393	DESIGN
ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9986395639440308	WITHOUT_CLASSIFICATION	0.0013604360559691666	DESIGN
If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9969815569451029	WITHOUT_CLASSIFICATION	0.0030184430548970574	DESIGN
This variant of newStruct is called from StructLayoutBuilder	WITHOUT_CLASSIFICATION	0.9923395715766067	WITHOUT_CLASSIFICATION	0.007660428423393292	DESIGN
This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9997625622776207	WITHOUT_CLASSIFICATION	2.37437722379424E-4	DESIGN
Windows is LLP64	WITHOUT_CLASSIFICATION	0.9991350361469772	WITHOUT_CLASSIFICATION	8.649638530229242E-4	DESIGN
Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9975373856555549	WITHOUT_CLASSIFICATION	0.0024626143444450737	DESIGN
Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9990295062777377	WITHOUT_CLASSIFICATION	9.704937222623784E-4	DESIGN
$blah	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9930574321982136	WITHOUT_CLASSIFICATION	0.006942567801786393	DESIGN
A specific version was requested - use as is for search	WITHOUT_CLASSIFICATION	0.9966707713713663	WITHOUT_CLASSIFICATION	0.0033292286286336625	DESIGN
Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9990295062777377	WITHOUT_CLASSIFICATION	9.704937222623784E-4	DESIGN
Keep a reference to the temporary memory in the cache so it does not get freed by the GC until the struct is freed	WITHOUT_CLASSIFICATION	0.968486151779708	WITHOUT_CLASSIFICATION	0.03151384822029209	DESIGN
Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9991844038863427	WITHOUT_CLASSIFICATION	8.155961136574368E-4	DESIGN
Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9998911633252674	WITHOUT_CLASSIFICATION	1.0883667473265011E-4	DESIGN
Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9991191647707833	WITHOUT_CLASSIFICATION	8.808352292167267E-4	DESIGN
case FLOAT:	WITHOUT_CLASSIFICATION	0.9998948358072087	WITHOUT_CLASSIFICATION	1.0516419279127867E-4	DESIGN
keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9995304276350802	WITHOUT_CLASSIFICATION	4.6957236491975253E-4	DESIGN
keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9995304276350802	WITHOUT_CLASSIFICATION	4.6957236491975253E-4	DESIGN
No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9998495085302487	WITHOUT_CLASSIFICATION	1.5049146975130767E-4	DESIGN
Wire up Function#call(args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9945311202247283	WITHOUT_CLASSIFICATION	0.005468879775271713	DESIGN
Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9995649565194867	WITHOUT_CLASSIFICATION	4.3504348051318315E-4	DESIGN
Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9995649565194867	WITHOUT_CLASSIFICATION	4.3504348051318315E-4	DESIGN
If there is exactly _one_ callback argument to the function, then a block can be given and automatically subsituted for the callback parameter.	WITHOUT_CLASSIFICATION	0.9999952116167604	WITHOUT_CLASSIFICATION	4.788383239607086E-6	DESIGN
------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9986828689501004	WITHOUT_CLASSIFICATION	0.001317131049899571	DESIGN
AF_INET	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
AF_INET	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
line 321	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
Set up for potentially fast-int operations	WITHOUT_CLASSIFICATION	0.9985406400713625	WITHOUT_CLASSIFICATION	0.0014593599286375017	DESIGN
Hook up the MemoryPointer class if its not already there	WITHOUT_CLASSIFICATION	0.999830773781617	WITHOUT_CLASSIFICATION	1.6922621838304523E-4	DESIGN
This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9694564711215653	WITHOUT_CLASSIFICATION	0.030543528878434676	DESIGN
no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9994188217700106	WITHOUT_CLASSIFICATION	5.811782299894393E-4	DESIGN
Sockaddr_un has different structure on different platforms. See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9705402959811976	WITHOUT_CLASSIFICATION	0.02945970401880226	DESIGN
There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9998861377983304	WITHOUT_CLASSIFICATION	1.1386220166962421E-4	DESIGN
RubyIPSocket	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.99813724042462	WITHOUT_CLASSIFICATION	0.001862759575379951	DESIGN
host and port given	WITHOUT_CLASSIFICATION	0.9998233208960366	WITHOUT_CLASSIFICATION	1.7667910396332336E-4	DESIGN
RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9992775614410147	WITHOUT_CLASSIFICATION	7.224385589853893E-4	DESIGN
make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9950018232073825	WITHOUT_CLASSIFICATION	0.004998176792617467	DESIGN
continue with normal initialization	WITHOUT_CLASSIFICATION	0.9997466213552842	WITHOUT_CLASSIFICATION	2.5337864471581997E-4	DESIGN
recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9984140888834503	WITHOUT_CLASSIFICATION	0.0015859111165497416	DESIGN
Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9968342959473907	WITHOUT_CLASSIFICATION	0.0031657040526092955	DESIGN
RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9977210379439259	WITHOUT_CLASSIFICATION	0.002278962056074167	DESIGN
mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9985841314790267	WITHOUT_CLASSIFICATION	0.0014158685209732724	DESIGN
constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9987309958028762	WITHOUT_CLASSIFICATION	0.0012690041971238966	DESIGN
More constants needed by specs	WITHOUT_CLASSIFICATION	0.9973272450619746	WITHOUT_CLASSIFICATION	0.0026727549380254484	DESIGN
normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9976714205306213	WITHOUT_CLASSIFICATION	0.0023285794693786235	DESIGN
AF_INET	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
255.255.255.255	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
0.0.0.0	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.999707773399886	WITHOUT_CLASSIFICATION	2.922266001139702E-4	DESIGN
line 323	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
can't set TC classloader	WITHOUT_CLASSIFICATION	0.9991273669296771	WITHOUT_CLASSIFICATION	8.726330703229389E-4	DESIGN
can't set TC classloader	WITHOUT_CLASSIFICATION	0.9991273669296771	WITHOUT_CLASSIFICATION	8.726330703229389E-4	DESIGN
ok, it's a socket...set values accordingly just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999348010513245	WITHOUT_CLASSIFICATION	6.519894867557502E-5	DESIGN
datagram, set accordingly again, AF_INET	WITHOUT_CLASSIFICATION	0.9987294114364696	WITHOUT_CLASSIFICATION	0.0012705885635303574	DESIGN
IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9999283477509946	WITHOUT_CLASSIFICATION	7.165224900544555E-5	DESIGN
When Socket::AI_PASSIVE and host is nil, return 'any' address.	WITHOUT_CLASSIFICATION	0.999386484881906	WITHOUT_CLASSIFICATION	6.135151180939997E-4	DESIGN
The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.998536183603892	WITHOUT_CLASSIFICATION	0.0014638163961080183	DESIGN
RubySocket	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9989848471562137	WITHOUT_CLASSIFICATION	0.0010151528437862358	DESIGN
e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9976401052894809	WITHOUT_CLASSIFICATION	0.002359894710519171	DESIGN
otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999325115141084	WITHOUT_CLASSIFICATION	6.748848589157111E-5	DESIGN
no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9998801520174783	WITHOUT_CLASSIFICATION	1.198479825218181E-4	DESIGN
do nothing, just exit	WITHOUT_CLASSIFICATION	0.9984329267766184	WITHOUT_CLASSIFICATION	0.001567073223381461	DESIGN
nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9986828689501004	WITHOUT_CLASSIFICATION	0.001317131049899571	DESIGN
set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9986049752262723	WITHOUT_CLASSIFICATION	0.0013950247737276305	DESIGN
uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9957956419819171	WITHOUT_CLASSIFICATION	0.004204358018082943	DESIGN
Call the thread's code	WITHOUT_CLASSIFICATION	0.9979337833446515	WITHOUT_CLASSIFICATION	0.0020662166553485164	DESIGN
Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9995054796534321	WITHOUT_CLASSIFICATION	4.94520346567908E-4	DESIGN
restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.999841417481756	WITHOUT_CLASSIFICATION	1.5858251824402782E-4	DESIGN
be dead	WITHOUT_CLASSIFICATION	0.9993116387687316	WITHOUT_CLASSIFICATION	6.883612312683982E-4	DESIGN
loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9991948104150936	WITHOUT_CLASSIFICATION	8.051895849063614E-4	DESIGN
all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9997602652017198	WITHOUT_CLASSIFICATION	2.3973479828017207E-4	DESIGN
thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9999414438557481	WITHOUT_CLASSIFICATION	5.8556144251833467E-5	DESIGN
future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9992914723258338	WITHOUT_CLASSIFICATION	7.085276741662477E-4	DESIGN
first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9998885862447511	WITHOUT_CLASSIFICATION	1.1141375524889539E-4	DESIGN
then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999151230156509	WITHOUT_CLASSIFICATION	8.487698434905227E-5	DESIGN
UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9938132269396155	WITHOUT_CLASSIFICATION	0.006186773060384482	DESIGN
Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9951679472338802	WITHOUT_CLASSIFICATION	0.004832052766119722	DESIGN
invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9984503698357975	WITHOUT_CLASSIFICATION	0.001549630164202587	DESIGN
main body	WITHOUT_CLASSIFICATION	0.9995565266585299	WITHOUT_CLASSIFICATION	4.4347334147005677E-4	DESIGN
return jump handling	WITHOUT_CLASSIFICATION	0.999883005518876	WITHOUT_CLASSIFICATION	1.1699448112407611E-4	DESIGN
finally	WITHOUT_CLASSIFICATION	0.9993343004414472	WITHOUT_CLASSIFICATION	6.656995585526949E-4	DESIGN
return result if we're still good	WITHOUT_CLASSIFICATION	0.9999457180038691	WITHOUT_CLASSIFICATION	5.428199613085183E-5	DESIGN
redo jump handling	WITHOUT_CLASSIFICATION	0.9996570937237438	WITHOUT_CLASSIFICATION	3.4290627625621715E-4	DESIGN
clear the redo	WITHOUT_CLASSIFICATION	0.999822316661397	WITHOUT_CLASSIFICATION	1.7768333860303717E-4	DESIGN
get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9940141845657959	WITHOUT_CLASSIFICATION	0.005985815434203993	DESIGN
throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9983754932714789	WITHOUT_CLASSIFICATION	0.0016245067285210778	DESIGN
finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9986446282517168	WITHOUT_CLASSIFICATION	0.0013553717482832014	DESIGN
call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9897043884913561	WITHOUT_CLASSIFICATION	0.010295611508643915	DESIGN
No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999789716595132	WITHOUT_CLASSIFICATION	2.1028340486668576E-5	DESIGN
actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9949960705850891	WITHOUT_CLASSIFICATION	0.005003929414910885	DESIGN
actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9933268990074429	WITHOUT_CLASSIFICATION	0.006673100992557134	DESIGN
simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9992432157491474	WITHOUT_CLASSIFICATION	7.567842508525765E-4	DESIGN
in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9684280869366777	WITHOUT_CLASSIFICATION	0.03157191306332235	DESIGN
in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9684280869366777	WITHOUT_CLASSIFICATION	0.03157191306332235	DESIGN
normal all-rest method	WITHOUT_CLASSIFICATION	0.9987166175628192	WITHOUT_CLASSIFICATION	0.001283382437180904	DESIGN
for zero, one, two, three arities, JavaMethod.JavaMethod.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9997062280045057	WITHOUT_CLASSIFICATION	2.937719954943495E-4	DESIGN
promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9967799108927718	WITHOUT_CLASSIFICATION	0.0032200891072281727	DESIGN
return	WITHOUT_CLASSIFICATION	0.9997607468806753	WITHOUT_CLASSIFICATION	2.392531193246752E-4	DESIGN
just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9987216854728623	WITHOUT_CLASSIFICATION	0.001278314527137683	DESIGN
just confirm args length == required	WITHOUT_CLASSIFICATION	0.9997185441090121	WITHOUT_CLASSIFICATION	2.8145589098791404E-4	DESIGN
confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9996307849061438	WITHOUT_CLASSIFICATION	3.692150938561882E-4	DESIGN
confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9980379966348346	WITHOUT_CLASSIFICATION	0.0019620033651654013	DESIGN
Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9992790622999936	WITHOUT_CLASSIFICATION	7.209377000064491E-4	DESIGN
tc	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
self name	WITHOUT_CLASSIFICATION	0.9983113208043445	WITHOUT_CLASSIFICATION	0.0016886791956555213	DESIGN
no args	WITHOUT_CLASSIFICATION	0.9995474322727305	WITHOUT_CLASSIFICATION	4.525677272695088E-4	DESIGN
variable args with block	WITHOUT_CLASSIFICATION	0.9998239183456088	WITHOUT_CLASSIFICATION	1.760816543913122E-4	DESIGN
variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9997187477495063	WITHOUT_CLASSIFICATION	2.8125225049373004E-4	DESIGN
zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9997508600775218	WITHOUT_CLASSIFICATION	2.4913992247820456E-4	DESIGN
one arg with block	WITHOUT_CLASSIFICATION	0.9998930085608417	WITHOUT_CLASSIFICATION	1.0699143915829807E-4	DESIGN
one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9994499297390904	WITHOUT_CLASSIFICATION	5.500702609095952E-4	DESIGN
two args with block	WITHOUT_CLASSIFICATION	0.9998145469251234	WITHOUT_CLASSIFICATION	1.85453074876552E-4	DESIGN
two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9992620960265823	WITHOUT_CLASSIFICATION	7.3790397341764E-4	DESIGN
three args with block	WITHOUT_CLASSIFICATION	0.9998430560073258	WITHOUT_CLASSIFICATION	1.569439926741584E-4	DESIGN
three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9995799465181571	WITHOUT_CLASSIFICATION	4.200534818428772E-4	DESIGN
load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999460483298446	WITHOUT_CLASSIFICATION	5.3951670155455054E-5	DESIGN
all other arg cases with block	WITHOUT_CLASSIFICATION	0.9996272687510559	WITHOUT_CLASSIFICATION	3.7273124894413045E-4	DESIGN
all other arg cases without block	WITHOUT_CLASSIFICATION	0.999216624089806	WITHOUT_CLASSIFICATION	7.833759101939394E-4	DESIGN
one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999509694817799	WITHOUT_CLASSIFICATION	4.9030518220201604E-5	DESIGN
two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999342156606195	WITHOUT_CLASSIFICATION	6.578433938045743E-5	DESIGN
three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999167599579848	WITHOUT_CLASSIFICATION	8.324004201515702E-5	DESIGN
load target for invocations	WITHOUT_CLASSIFICATION	0.9999385907004448	WITHOUT_CLASSIFICATION	6.140929955517374E-5	DESIGN
load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9976160885461256	WITHOUT_CLASSIFICATION	0.0023839114538743164	DESIGN
static invocation	WITHOUT_CLASSIFICATION	0.9994812606222317	WITHOUT_CLASSIFICATION	5.187393777683322E-4	DESIGN
virtual invocation	WITHOUT_CLASSIFICATION	0.9995369111708073	WITHOUT_CLASSIFICATION	4.6308882919261177E-4	DESIGN
void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9986285362617588	WITHOUT_CLASSIFICATION	0.0013714637382411204	DESIGN
normal finally and exit	WITHOUT_CLASSIFICATION	0.9996904525589757	WITHOUT_CLASSIFICATION	3.0954744102429973E-4	DESIGN
promise to implement one to N	WITHOUT_CLASSIFICATION	0.9929420432320986	WITHOUT_CLASSIFICATION	0.007057956767901403	DESIGN
call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9897043884913561	WITHOUT_CLASSIFICATION	0.010295611508643915	DESIGN
these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9964446934446404	WITHOUT_CLASSIFICATION	0.003555306555359534	DESIGN
method itself ThreadContext invoked name	WITHOUT_CLASSIFICATION	0.9926058380534011	WITHOUT_CLASSIFICATION	0.007394161946598874	DESIGN
method itself ThreadContext invoked name	WITHOUT_CLASSIFICATION	0.9926058380534011	WITHOUT_CLASSIFICATION	0.007394161946598874	DESIGN
singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9978535755274087	WITHOUT_CLASSIFICATION	0.002146424472591258	DESIGN
For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9722245409950919	WITHOUT_CLASSIFICATION	0.027775459004908118	DESIGN
SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9994072205555466	WITHOUT_CLASSIFICATION	5.927794444533294E-4	DESIGN
never reached	WITHOUT_CLASSIFICATION	0.9998038645825641	WITHOUT_CLASSIFICATION	1.9613541743594224E-4	DESIGN
promise to implement N with block	WITHOUT_CLASSIFICATION	0.9958771106105953	WITHOUT_CLASSIFICATION	0.004122889389404748	DESIGN
promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9980372681399985	WITHOUT_CLASSIFICATION	0.0019627318600015206	DESIGN
promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9956915059613214	WITHOUT_CLASSIFICATION	0.004308494038678525	DESIGN
promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9942062520266659	WITHOUT_CLASSIFICATION	0.005793747973334046	DESIGN
promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.998427160540153	WITHOUT_CLASSIFICATION	0.001572839459847057	DESIGN
promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9965457661272457	WITHOUT_CLASSIFICATION	0.0034542338727542796	DESIGN
promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9953536244637384	WITHOUT_CLASSIFICATION	0.004646375536261641	DESIGN
promise to implement three with block	WITHOUT_CLASSIFICATION	0.9966946924574998	WITHOUT_CLASSIFICATION	0.0033053075425002053	DESIGN
promise to implement N	WITHOUT_CLASSIFICATION	0.9932452878565975	WITHOUT_CLASSIFICATION	0.006754712143402503	DESIGN
DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9994072205555466	WITHOUT_CLASSIFICATION	5.927794444533294E-4	DESIGN
We promote our box to being its own box since we're changing visibilities, and need it to be reflected on this method object independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9359330128644662	WITHOUT_CLASSIFICATION	0.06406698713553377	DESIGN
Normally we could leave these to fall back on the superclass, but since it dispatches through the [] version below, which may dispatch through the []+block version, we can save it a couple hops by overriding these here.	WITHOUT_CLASSIFICATION	0.984558267526941	WITHOUT_CLASSIFICATION	0.015441732473058892	DESIGN
promise to implement two to N	WITHOUT_CLASSIFICATION	0.9905180015023834	WITHOUT_CLASSIFICATION	0.009481998497616554	DESIGN
promise to implement three to N	WITHOUT_CLASSIFICATION	0.9880318830859854	WITHOUT_CLASSIFICATION	0.01196811691401456	DESIGN
promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9942788760486093	WITHOUT_CLASSIFICATION	0.005721123951390591	DESIGN
promise to implement one to three	WITHOUT_CLASSIFICATION	0.9874975350612439	WITHOUT_CLASSIFICATION	0.012502464938756157	DESIGN
promise to implement two to three	WITHOUT_CLASSIFICATION	0.983235158936832	WITHOUT_CLASSIFICATION	0.01676484106316801	DESIGN
promise to implement three	WITHOUT_CLASSIFICATION	0.9945819289875493	WITHOUT_CLASSIFICATION	0.005418071012450734	DESIGN
all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9964457802795301	WITHOUT_CLASSIFICATION	0.003554219720469854	DESIGN
load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9990252251978071	WITHOUT_CLASSIFICATION	9.747748021928089E-4	DESIGN
open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9987568221032043	WITHOUT_CLASSIFICATION	0.0012431778967957115	DESIGN
construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.999840678742571	WITHOUT_CLASSIFICATION	1.5932125742891545E-4	DESIGN
fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9972363734496922	WITHOUT_CLASSIFICATION	0.002763626550307757	DESIGN
create constructor	WITHOUT_CLASSIFICATION	0.9992577784713954	WITHOUT_CLASSIFICATION	7.422215286046188E-4	DESIGN
wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9998217419332859	WITHOUT_CLASSIFICATION	1.7825806671403142E-4	DESIGN
end constructor	WITHOUT_CLASSIFICATION	0.9997179938001349	WITHOUT_CLASSIFICATION	2.8200619986507307E-4	DESIGN
start setup method	WITHOUT_CLASSIFICATION	0.9986509358353877	WITHOUT_CLASSIFICATION	0.0013490641646123121	DESIGN
set RubyClass	WITHOUT_CLASSIFICATION	0.9992105818979103	WITHOUT_CLASSIFICATION	7.894181020896703E-4	DESIGN
set Ruby	WITHOUT_CLASSIFICATION	0.998612293290262	WITHOUT_CLASSIFICATION	0.0013877067097379744	DESIGN
all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9977317014432646	WITHOUT_CLASSIFICATION	0.002268298556735388	DESIGN
try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9983446373567927	WITHOUT_CLASSIFICATION	0.001655362643207255	DESIGN
get current context	WITHOUT_CLASSIFICATION	0.9998882063160438	WITHOUT_CLASSIFICATION	1.1179368395614158E-4	DESIGN
load self, class, and name	WITHOUT_CLASSIFICATION	0.9999083090575943	WITHOUT_CLASSIFICATION	9.169094240564056E-5	DESIGN
construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.999840678742571	WITHOUT_CLASSIFICATION	1.5932125742891545E-4	DESIGN
fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9972363734496922	WITHOUT_CLASSIFICATION	0.002763626550307757	DESIGN
create constructor	WITHOUT_CLASSIFICATION	0.9992577784713954	WITHOUT_CLASSIFICATION	7.422215286046188E-4	DESIGN
end constructor	WITHOUT_CLASSIFICATION	0.9997179938001349	WITHOUT_CLASSIFICATION	2.8200619986507307E-4	DESIGN
for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9482304728592661	WITHOUT_CLASSIFICATION	0.051769527140733844	DESIGN
load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.990030168706816	WITHOUT_CLASSIFICATION	0.009969831293184007	DESIGN
convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9990471905951192	WITHOUT_CLASSIFICATION	9.528094048808268E-4	DESIGN
load null block	WITHOUT_CLASSIFICATION	0.9998533337785274	WITHOUT_CLASSIFICATION	1.466662214727153E-4	DESIGN
invoke method	WITHOUT_CLASSIFICATION	0.9988905664183403	WITHOUT_CLASSIFICATION	0.0011094335816597774	DESIGN
if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9998425996907594	WITHOUT_CLASSIFICATION	1.5740030924063587E-4	DESIGN
end setup method	WITHOUT_CLASSIFICATION	0.9995385288456071	WITHOUT_CLASSIFICATION	4.614711543928103E-4	DESIGN
end class	WITHOUT_CLASSIFICATION	0.9992606641156708	WITHOUT_CLASSIFICATION	7.393358843292038E-4	DESIGN
create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9970141557095453	WITHOUT_CLASSIFICATION	0.002985844290454702	DESIGN
store the wrapper	WITHOUT_CLASSIFICATION	0.9999670006819084	WITHOUT_CLASSIFICATION	3.2999318091635396E-5	DESIGN
prepare temp locals	WITHOUT_CLASSIFICATION	0.9997785691416441	WITHOUT_CLASSIFICATION	2.2143085835582432E-4	DESIGN
Try to look up field for simple name get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9955420160301826	WITHOUT_CLASSIFICATION	0.004457983969817467	DESIGN
field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9993144335327006	WITHOUT_CLASSIFICATION	6.855664672993652E-4	DESIGN
try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9998314919992068	WITHOUT_CLASSIFICATION	1.6850800079305398E-4	DESIGN
store it	WITHOUT_CLASSIFICATION	0.9995392441313661	WITHOUT_CLASSIFICATION	4.6075586863390675E-4	DESIGN
end of try block	WITHOUT_CLASSIFICATION	0.9999794152565712	WITHOUT_CLASSIFICATION	2.058474342883771E-5	DESIGN
finally block to release monitor	WITHOUT_CLASSIFICATION	0.9947261335236268	WITHOUT_CLASSIFICATION	0.00527386647637315	DESIGN
exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9905955956225371	WITHOUT_CLASSIFICATION	0.009404404377462974	DESIGN
re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9974137874219666	WITHOUT_CLASSIFICATION	0.002586212578033392	DESIGN
load self, class, and name	WITHOUT_CLASSIFICATION	0.9999083090575943	WITHOUT_CLASSIFICATION	9.169094240564056E-5	DESIGN
load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.990030168706816	WITHOUT_CLASSIFICATION	0.009969831293184007	DESIGN
convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9990471905951192	WITHOUT_CLASSIFICATION	9.528094048808268E-4	DESIGN
invoke method	WITHOUT_CLASSIFICATION	0.9988905664183403	WITHOUT_CLASSIFICATION	0.0011094335816597774	DESIGN
if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9998425996907594	WITHOUT_CLASSIFICATION	1.5740030924063587E-4	DESIGN
end setup method	WITHOUT_CLASSIFICATION	0.9995385288456071	WITHOUT_CLASSIFICATION	4.614711543928103E-4	DESIGN
end class	WITHOUT_CLASSIFICATION	0.9992606641156708	WITHOUT_CLASSIFICATION	7.393358843292038E-4	DESIGN
create the class	WITHOUT_CLASSIFICATION	0.9993897802472823	WITHOUT_CLASSIFICATION	6.102197527175996E-4	DESIGN
method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9964515377290576	WITHOUT_CLASSIFICATION	0.0035484622709423632	DESIGN
perform the dispatch	WITHOUT_CLASSIFICATION	0.9998795366708081	WITHOUT_CLASSIFICATION	1.2046332919194795E-4	DESIGN
try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9996200804482174	WITHOUT_CLASSIFICATION	3.799195517825951E-4	DESIGN
up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.996357376853057	WITHOUT_CLASSIFICATION	0.0036426231469429285	DESIGN
up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.996357376853057	WITHOUT_CLASSIFICATION	0.0036426231469429285	DESIGN
setup the class	WITHOUT_CLASSIFICATION	0.9995250379981708	WITHOUT_CLASSIFICATION	4.749620018291606E-4	DESIGN
now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9954798399547148	WITHOUT_CLASSIFICATION	0.00452016004528514	DESIGN
do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9913073928644277	WITHOUT_CLASSIFICATION	0.008692607135572331	DESIGN
probably a primitive	WITHOUT_CLASSIFICATION	0.9993756085810155	WITHOUT_CLASSIFICATION	6.243914189844989E-4	DESIGN
interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9995624433211102	WITHOUT_CLASSIFICATION	4.37556678889812E-4	DESIGN
construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9989082664739711	WITHOUT_CLASSIFICATION	0.0010917335260289221	DESIGN
set the full name	WITHOUT_CLASSIFICATION	0.9990826569021933	WITHOUT_CLASSIFICATION	9.173430978066294E-4	DESIGN
include all interfaces	WITHOUT_CLASSIFICATION	0.9997268742139289	WITHOUT_CLASSIFICATION	2.731257860710798E-4	DESIGN
if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9998646597892008	WITHOUT_CLASSIFICATION	1.3534021079924128E-4	DESIGN
add array construction methods	WITHOUT_CLASSIFICATION	0.9998786916816768	WITHOUT_CLASSIFICATION	1.2130831832317809E-4	DESIGN
add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9998049722651632	WITHOUT_CLASSIFICATION	1.9502773483678172E-4	DESIGN
add all instance and static methods	WITHOUT_CLASSIFICATION	0.9990394335763761	WITHOUT_CLASSIFICATION	9.605664236238483E-4	DESIGN
proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9998784749782327	WITHOUT_CLASSIFICATION	1.215250217673335E-4	DESIGN
too much array creation!	WITHOUT_CLASSIFICATION	0.9990801656876268	WITHOUT_CLASSIFICATION	9.198343123733362E-4	DESIGN
only include static methods if specified	WITHOUT_CLASSIFICATION	0.9998200449208852	WITHOUT_CLASSIFICATION	1.799550791148363E-4	DESIGN
add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9994014629805261	WITHOUT_CLASSIFICATION	5.985370194739691E-4	DESIGN
add all static variables	WITHOUT_CLASSIFICATION	0.9994489260828235	WITHOUT_CLASSIFICATION	5.510739171764278E-4	DESIGN
only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9998644687596111	WITHOUT_CLASSIFICATION	1.3553124038902296E-4	DESIGN
looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.999882763285937	WITHOUT_CLASSIFICATION	1.1723671406311296E-4	DESIGN
NOTE: The five match methods are arity-split to avoid the cost of boxing arguments when there's already a cached match. Do not condense them into a single method.	WITHOUT_CLASSIFICATION	0.9998945592625843	WITHOUT_CLASSIFICATION	1.0544073741569405E-4	DESIGN
TODO: This is where we would want to do precision checks to see if it's non-destructive to coerce a given type into the target integral primitive	WITHOUT_CLASSIFICATION	0.9974799506176043	DESIGN	0.002520049382395644	WITHOUT_CLASSIFICATION
long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.996188701244677	WITHOUT_CLASSIFICATION	0.0038112987553231147	DESIGN
double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9992444683441588	WITHOUT_CLASSIFICATION	7.555316558412596E-4	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.7387988374098038	WITHOUT_CLASSIFICATION	0.26120116259019616	DESIGN
read-volatile	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9620280905790118	WITHOUT_CLASSIFICATION	0.03797190942098806	DESIGN
we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9995741074255655	WITHOUT_CLASSIFICATION	4.2589257443449187E-4	DESIGN
If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9990372737121257	WITHOUT_CLASSIFICATION	9.627262878742594E-4	DESIGN
line 326	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
read-volatile	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9620280905790118	WITHOUT_CLASSIFICATION	0.03797190942098806	DESIGN
too much array creation!	WITHOUT_CLASSIFICATION	0.9990801656876268	WITHOUT_CLASSIFICATION	9.198343123733362E-4	DESIGN
construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9996933995999722	WITHOUT_CLASSIFICATION	3.0660040002774327E-4	DESIGN
Get map of all fields we want to define.	WITHOUT_CLASSIFICATION	0.9991153959133644	WITHOUT_CLASSIFICATION	8.84604086635701E-4	DESIGN
Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9997491204692573	WITHOUT_CLASSIFICATION	2.50879530742693E-4	DESIGN
Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.997254778585533	WITHOUT_CLASSIFICATION	0.0027452214144669303	DESIGN
We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999486635826283	WITHOUT_CLASSIFICATION	5.133641737165215E-5	DESIGN
dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9995751263482439	WITHOUT_CLASSIFICATION	4.248736517561508E-4	DESIGN
initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9958359915182913	WITHOUT_CLASSIFICATION	0.004164008481708652	DESIGN
initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9986552323351888	WITHOUT_CLASSIFICATION	0.0013447676648111276	DESIGN
not allowed for original (non-generated) Java classes note: not allowing for any previously created class right now; this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9986168837499824	WITHOUT_CLASSIFICATION	0.0013831162500175988	DESIGN
setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9826596375365269	WITHOUT_CLASSIFICATION	0.01734036246347314	DESIGN
First we make modifications to the class, to adapt it to being both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9987731830928807	WITHOUT_CLASSIFICATION	0.0012268169071194008	DESIGN
list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9936325631523548	WITHOUT_CLASSIFICATION	0.006367436847645176	DESIGN
We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9983590355928587	WITHOUT_CLASSIFICATION	0.0016409644071413286	DESIGN
The replacement "new" allocates and inits the Ruby object as before, but also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999288402715639	WITHOUT_CLASSIFICATION	7.11597284360751E-5	DESIGN
Next, we define a few private methods that we'll use to manipulate the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9435216032514686	WITHOUT_CLASSIFICATION	0.05647839674853147	DESIGN
jcreate instantiates the proxy object which implements all interfaces and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9974435197416699	WITHOUT_CLASSIFICATION	0.0025564802583301154	DESIGN
Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9993581033319724	WITHOUT_CLASSIFICATION	6.418966680276972E-4	DESIGN
implement all forces implementation of all interfaces we intend for this class to implement	WITHOUT_CLASSIFICATION	0.7981158196443933	WITHOUT_CLASSIFICATION	0.20188418035560673	DESIGN
we've already done the above priming logic, just add another interface to the list of intentions unless we're past the point of no return or already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9988824983377153	WITHOUT_CLASSIFICATION	0.0011175016622847296	DESIGN
walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.999268498779135	WITHOUT_CLASSIFICATION	7.315012208649445E-4	DESIGN
construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9434199785662569	WITHOUT_CLASSIFICATION	0.05658002143374293	DESIGN
assuming the user wants a collection of interfaces that can be included together. make it so.	WITHOUT_CLASSIFICATION	0.9920754884362608	WITHOUT_CLASSIFICATION	0.007924511563739186	DESIGN
not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9998886667909621	WITHOUT_CLASSIFICATION	1.113332090378356E-4	DESIGN
To turn a module into an "interface collection" we add a class instance variable to hold the list of interfaces, and modify append_features for this module to call append_features on each of those interfaces as well	WITHOUT_CLASSIFICATION	0.6631797575154131	WITHOUT_CLASSIFICATION	0.33682024248458675	DESIGN
already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9990284859060939	WITHOUT_CLASSIFICATION	9.715140939061755E-4	DESIGN
array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9986828689501004	WITHOUT_CLASSIFICATION	0.001317131049899571	DESIGN
keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.996484522524984	WITHOUT_CLASSIFICATION	0.003515477475015865	DESIGN
array creation should use this variant	WITHOUT_CLASSIFICATION	0.9163376418603197	WITHOUT_CLASSIFICATION	0.08366235813968027	DESIGN
parent.setConstant(name, proxyClass); where the name should come from ?	WITHOUT_CLASSIFICATION	0.9861808653774639	WITHOUT_CLASSIFICATION	0.013819134622536042	DESIGN
including interface module so old-style interface "subclasses" will respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9988572337486324	WITHOUT_CLASSIFICATION	0.0011427662513675454	DESIGN
add reference to interface module	WITHOUT_CLASSIFICATION	0.9968859418714893	WITHOUT_CLASSIFICATION	0.0031140581285107366	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9990251680550339	WITHOUT_CLASSIFICATION	9.748319449660113E-4	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9990251680550339	WITHOUT_CLASSIFICATION	9.748319449660113E-4	DESIGN
proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9998784749782327	WITHOUT_CLASSIFICATION	1.215250217673335E-4	DESIGN
same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9993451570324294	WITHOUT_CLASSIFICATION	6.548429675706342E-4	DESIGN
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9997743414550929	WITHOUT_CLASSIFICATION	2.256585449070978E-4	DESIGN
weakly reserved names	WITHOUT_CLASSIFICATION	0.999380852559317	WITHOUT_CLASSIFICATION	6.191474406829886E-4	DESIGN
called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999435735307843	WITHOUT_CLASSIFICATION	5.64264692157673E-5	DESIGN
called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999435735307843	WITHOUT_CLASSIFICATION	5.64264692157673E-5	DESIGN
modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999749406579209	WITHOUT_CLASSIFICATION	2.5059342079064512E-5	DESIGN
if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9998857410318476	WITHOUT_CLASSIFICATION	1.1425896815248632E-4	DESIGN
caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9993166564520816	WITHOUT_CLASSIFICATION	6.833435479184066E-4	DESIGN
proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9996014558032115	WITHOUT_CLASSIFICATION	3.9854419678851254E-4	DESIGN
proxy class for concrete classes. also used for "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.897088164585716	WITHOUT_CLASSIFICATION	0.10291183541428389	DESIGN
readable only by thread building proxy, so don't need to be volatile. used to handle recursive calls to getProxyClass/Module while proxy is being constructed (usually when a constant defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9951779208423228	WITHOUT_CLASSIFICATION	0.004822079157677085	DESIGN
allow proxy to be read without synchronization. if proxy is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9997211352764198	WITHOUT_CLASSIFICATION	2.7886472358022447E-4	DESIGN
Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.999581622267804	WITHOUT_CLASSIFICATION	4.1837773219601047E-4	DESIGN
proxy is under construction, building thread can safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9993916747922409	WITHOUT_CLASSIFICATION	6.083252077590562E-4	DESIGN
Add property name aliases	WITHOUT_CLASSIFICATION	0.9998072074192328	WITHOUT_CLASSIFICATION	1.9279258076719506E-4	DESIGN
getFoo => foo getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9994563445421034	WITHOUT_CLASSIFICATION	5.43655457896556E-4	DESIGN
setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9997501673985361	WITHOUT_CLASSIFICATION	2.4983260146392057E-4	DESIGN
isFoo() => foo, isFoo() => foo()	WITHOUT_CLASSIFICATION	0.9992753202213102	WITHOUT_CLASSIFICATION	7.246797786898951E-4	DESIGN
Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9997945705752596	WITHOUT_CLASSIFICATION	2.0542942474048893E-4	DESIGN
is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9994072205555466	WITHOUT_CLASSIFICATION	5.927794444533294E-4	DESIGN
something?	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9993833783343977	WITHOUT_CLASSIFICATION	6.166216656023133E-4	DESIGN
setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9993833783343977	WITHOUT_CLASSIFICATION	6.166216656023133E-4	DESIGN
Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9995792303274096	WITHOUT_CLASSIFICATION	4.2076967259036696E-4	DESIGN
Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9995792303274096	WITHOUT_CLASSIFICATION	4.2076967259036696E-4	DESIGN
create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999105443332973	WITHOUT_CLASSIFICATION	8.945566670268778E-5	DESIGN
we need to collect all methods, though we'll only install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9792900808142284	WITHOUT_CLASSIFICATION	0.020709919185771572	DESIGN
Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.991893612418614	WITHOUT_CLASSIFICATION	0.008106387581386014	DESIGN
now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9711649858494178	WITHOUT_CLASSIFICATION	0.028835014150582327	DESIGN
old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9945508454813623	WITHOUT_CLASSIFICATION	0.00544915451863763	DESIGN
1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9952985688155488	WITHOUT_CLASSIFICATION	0.004701431184451272	DESIGN
double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9991775248938859	WITHOUT_CLASSIFICATION	8.224751061141853E-4	DESIGN
setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9997501673985361	WITHOUT_CLASSIFICATION	2.4983260146392057E-4	DESIGN
isFoo() => foo, isFoo() => foo()	WITHOUT_CLASSIFICATION	0.9992753202213102	WITHOUT_CLASSIFICATION	7.246797786898951E-4	DESIGN
is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9994072205555466	WITHOUT_CLASSIFICATION	5.927794444533294E-4	DESIGN
one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9943134537499524	WITHOUT_CLASSIFICATION	0.005686546250047649	DESIGN
Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9796984353757595	WITHOUT_CLASSIFICATION	0.020301564624240494	DESIGN
note: intentionally returning the actual array returned from Java, rather than wrapping it in a RubyArray. wave of the future, when java_class will return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.999990438483589	WITHOUT_CLASSIFICATION	9.56151641094668E-6	DESIGN
see note above re: return type	WITHOUT_CLASSIFICATION	0.9315812447951966	WITHOUT_CLASSIFICATION	0.06841875520480341	DESIGN
restrictive security policy; no matter, we only want public classes anyway	WITHOUT_CLASSIFICATION	0.9997825049586179	WITHOUT_CLASSIFICATION	2.1749504138221913E-4	DESIGN
very restrictive policy (disallows Member.PUBLIC) we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9991105520008563	WITHOUT_CLASSIFICATION	8.894479991436753E-4	DESIGN
one-dimensional array	WITHOUT_CLASSIFICATION	0.9996737820669953	WITHOUT_CLASSIFICATION	3.2621793300465434E-4	DESIGN
n-dimensional array	WITHOUT_CLASSIFICATION	0.999780607093265	WITHOUT_CLASSIFICATION	2.1939290673495763E-4	DESIGN
if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9996739690940654	WITHOUT_CLASSIFICATION	3.260309059346149E-4	DESIGN
we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods see JRUBY-3130	WITHOUT_CLASSIFICATION	0.999374020357648	WITHOUT_CLASSIFICATION	6.259796423520595E-4	DESIGN
Proc implementing an interface, pull in the catch-all code that lets the proc get invoked no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.6704777120655468	DESIGN	0.32952228793445304	WITHOUT_CLASSIFICATION
can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9998226445421879	WITHOUT_CLASSIFICATION	1.773554578120753E-4	DESIGN
getFooBar() => fooBar?, foo_bar?()	WITHOUT_CLASSIFICATION	0.9994446495767597	WITHOUT_CLASSIFICATION	5.55350423240355E-4	DESIGN
If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999179857429815	WITHOUT_CLASSIFICATION	8.201425701844052E-5	DESIGN
many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9942256881535968	WITHOUT_CLASSIFICATION	0.005774311846403278	DESIGN
for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9990382737746443	WITHOUT_CLASSIFICATION	9.617262253556427E-4	DESIGN
rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9997248132664386	WITHOUT_CLASSIFICATION	2.751867335614534E-4	DESIGN
the converters handle not only primitive types but also their boxed versions, so we should check if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9999209935997522	WITHOUT_CLASSIFICATION	7.900640024774374E-5	DESIGN
it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9995856818333997	WITHOUT_CLASSIFICATION	4.1431816660037954E-4	DESIGN
we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9994254326505005	WITHOUT_CLASSIFICATION	5.745673494994085E-4	DESIGN
set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.999362011461349	WITHOUT_CLASSIFICATION	6.379885386511075E-4	DESIGN
the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9995324888755471	WITHOUT_CLASSIFICATION	4.6751112445285735E-4	DESIGN
InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9986828689501004	WITHOUT_CLASSIFICATION	0.001317131049899571	DESIGN
also create the JavaProxy classes	WITHOUT_CLASSIFICATION	0.9995997695084566	WITHOUT_CLASSIFICATION	4.0023049154329463E-4	DESIGN
The template for interface modules	WITHOUT_CLASSIFICATION	0.9987352291461212	WITHOUT_CLASSIFICATION	0.0012647708538787766	DESIGN
Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9994112126404607	WITHOUT_CLASSIFICATION	5.887873595392366E-4	DESIGN
add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9996812478648958	WITHOUT_CLASSIFICATION	3.187521351042264E-4	DESIGN
add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9997635293695044	WITHOUT_CLASSIFICATION	2.3647063049563917E-4	DESIGN
finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9976191349027306	WITHOUT_CLASSIFICATION	0.002380865097269445	DESIGN
shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9991736673321974	WITHOUT_CLASSIFICATION	8.263326678026912E-4	DESIGN
include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9912998507612324	WITHOUT_CLASSIFICATION	0.008700149238767668	DESIGN
java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9998299314201092	WITHOUT_CLASSIFICATION	1.7006857989088138E-4	DESIGN
other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999792800528414	WITHOUT_CLASSIFICATION	2.0719947158552035E-5	DESIGN
include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9973225798149178	WITHOUT_CLASSIFICATION	0.0026774201850822184	DESIGN
JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9996475083436135	WITHOUT_CLASSIFICATION	3.524916563864525E-4	DESIGN
add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9971514389473439	WITHOUT_CLASSIFICATION	0.0028485610526560548	DESIGN
add alias to meta	WITHOUT_CLASSIFICATION	0.9997776040705159	WITHOUT_CLASSIFICATION	2.223959294840732E-4	DESIGN
we'll only map conventional class names to modules	WITHOUT_CLASSIFICATION	0.9989788354282474	WITHOUT_CLASSIFICATION	0.001021164571752648	DESIGN
expected	WITHOUT_CLASSIFICATION	0.9996582251867591	WITHOUT_CLASSIFICATION	3.4177481324093145E-4	DESIGN
Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9997353715022419	WITHOUT_CLASSIFICATION	2.646284977581337E-4	DESIGN
upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9996298297678635	WITHOUT_CLASSIFICATION	3.7017023213652226E-4	DESIGN
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9997743414550929	WITHOUT_CLASSIFICATION	2.256585449070978E-4	DESIGN
add alias to meta	WITHOUT_CLASSIFICATION	0.9997776040705159	WITHOUT_CLASSIFICATION	2.223959294840732E-4	DESIGN
this is where we'll get connected when classes are opened using package module syntax.	WITHOUT_CLASSIFICATION	0.9731292438463588	WITHOUT_CLASSIFICATION	0.026870756153641234	DESIGN
save package module as ivar in parent, and add method to parent so we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9841959060611816	WITHOUT_CLASSIFICATION	0.01580409393881848	DESIGN
this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.992076151367646	WITHOUT_CLASSIFICATION	0.007923848632354031	DESIGN
not primitive or lc class	WITHOUT_CLASSIFICATION	0.9994533318902502	WITHOUT_CLASSIFICATION	5.466681097498402E-4	DESIGN
not primitive or lc class	WITHOUT_CLASSIFICATION	0.9994533318902502	WITHOUT_CLASSIFICATION	5.466681097498402E-4	DESIGN
Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.998740608128849	WITHOUT_CLASSIFICATION	0.0012593918711509015	DESIGN
Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.8968948618803131	WITHOUT_CLASSIFICATION	0.1031051381196869	DESIGN
hashcode is a combination of the interfaces and the Ruby class we're using to implement them	WITHOUT_CLASSIFICATION	0.9912503586940735	WITHOUT_CLASSIFICATION	0.008749641305926542	DESIGN
if it's a singleton class and the real class is proc, we're doing closure conversion so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9988530760985385	WITHOUT_CLASSIFICATION	0.0011469239014616	DESIGN
normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9973917825225663	WITHOUT_CLASSIFICATION	0.002608217477433685	DESIGN
Initialize some components.	WITHOUT_CLASSIFICATION	0.999010155556796	WITHOUT_CLASSIFICATION	9.898444432039943E-4	DESIGN
not synchronizing these methods, no harm if these values get set more than once. (also note that there's no chance of getting a partially initialized class/module, as happens-before is guaranteed by volatile write/read of constants table.)	WITHOUT_CLASSIFICATION	0.9886869794448037	WITHOUT_CLASSIFICATION	0.011313020555196276	DESIGN
Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9845483567899449	WITHOUT_CLASSIFICATION	0.015451643210055065	DESIGN
for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9987452818951393	WITHOUT_CLASSIFICATION	0.0012547181048606095	DESIGN
for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9987452818951393	WITHOUT_CLASSIFICATION	0.0012547181048606095	DESIGN
no matching ctor found	WITHOUT_CLASSIFICATION	0.9993710817314803	WITHOUT_CLASSIFICATION	6.289182685198125E-4	DESIGN
Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9907370168938894	WITHOUT_CLASSIFICATION	0.009262983106110637	DESIGN
prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9992801610334066	WITHOUT_CLASSIFICATION	7.198389665933664E-4	DESIGN
must be a public method	WITHOUT_CLASSIFICATION	0.9988509105771027	WITHOUT_CLASSIFICATION	0.001149089422897272	DESIGN
must be a public class	WITHOUT_CLASSIFICATION	0.9990692693324711	WITHOUT_CLASSIFICATION	9.307306675289347E-4	DESIGN
must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9994871180740523	WITHOUT_CLASSIFICATION	5.128819259476813E-4	DESIGN
Special classes like Collections.EMPTY_LIST are inner classes that are private but implement public interfaces. Their methods are all public methods for the public interface. Let these public methods execute via setAccessible(true).	WITHOUT_CLASSIFICATION	0.5766321779606188	WITHOUT_CLASSIFICATION	0.4233678220393812	DESIGN
search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9997125265781593	WITHOUT_CLASSIFICATION	2.874734218406966E-4	DESIGN
no matching method found	WITHOUT_CLASSIFICATION	0.9978789758245817	WITHOUT_CLASSIFICATION	0.0021210241754183374	DESIGN
this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9484397042597551	WITHOUT_CLASSIFICATION	0.05156029574024491	DESIGN
First we need to register the JRuby engine.	WITHOUT_CLASSIFICATION	0.991662016632973	WITHOUT_CLASSIFICATION	0.008337983367026871	DESIGN
Now we create a new BSFManager.	WITHOUT_CLASSIFICATION	0.9987736118791424	WITHOUT_CLASSIFICATION	0.0012263881208575828	DESIGN
Initialize a simple Frame.	WITHOUT_CLASSIFICATION	0.9982250702563681	WITHOUT_CLASSIFICATION	0.0017749297436319398	DESIGN
e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999131675157289	WITHOUT_CLASSIFICATION	8.683248427119922E-5	DESIGN
end class	WITHOUT_CLASSIFICATION	0.9992606641156708	WITHOUT_CLASSIFICATION	7.393358843292038E-4	DESIGN
this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9484397042597551	WITHOUT_CLASSIFICATION	0.05156029574024491	DESIGN
for our purposes, Accessibles are also Members, and vice-versa, so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9977025780083186	WITHOUT_CLASSIFICATION	0.0022974219916813542	DESIGN
Declare those components as beans in BSF. Then it will be possible to access those components in Ruby as global variables ($frame, $menubar, ...)	WITHOUT_CLASSIFICATION	0.9985235072222881	WITHOUT_CLASSIFICATION	0.0014764927777117787	DESIGN
Execute a Ruby script (add the menubar to the frame).	WITHOUT_CLASSIFICATION	0.9988161978459289	WITHOUT_CLASSIFICATION	0.0011838021540711173	DESIGN
Execute Ruby statements.	WITHOUT_CLASSIFICATION	0.9993383234162958	WITHOUT_CLASSIFICATION	6.616765837041109E-4	DESIGN
Evaluates a Ruby expression and display the result.	WITHOUT_CLASSIFICATION	0.9995245966751877	WITHOUT_CLASSIFICATION	4.7540332481235063E-4	DESIGN
Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9986367982651093	WITHOUT_CLASSIFICATION	0.001363201734890643	DESIGN
package scope	WITHOUT_CLASSIFICATION	0.9992132684823403	WITHOUT_CLASSIFICATION	7.867315176597928E-4	DESIGN
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9997743414550929	WITHOUT_CLASSIFICATION	2.256585449070978E-4	DESIGN
Ruby-level methods	WITHOUT_CLASSIFICATION	0.9995651445781544	WITHOUT_CLASSIFICATION	4.348554218456479E-4	DESIGN
need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9865221260428405	WITHOUT_CLASSIFICATION	0.013477873957159473	DESIGN
we only collect methods and interfaces for user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9996737594335399	WITHOUT_CLASSIFICATION	3.262405664601008E-4	DESIGN
get JavaClass if this is the new proxy class; verify it matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.999611745419175	WITHOUT_CLASSIFICATION	3.882545808250347E-4	DESIGN
get any included interfaces	WITHOUT_CLASSIFICATION	0.999714108739803	WITHOUT_CLASSIFICATION	2.8589126019692713E-4	DESIGN
lock in the overridden methods for the new class, and any as-yet uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9994605990148178	WITHOUT_CLASSIFICATION	5.394009851821889E-4	DESIGN
statically initialized below	WITHOUT_CLASSIFICATION	0.9997120693241591	WITHOUT_CLASSIFICATION	2.8793067584091827E-4	DESIGN
finish class initializer	WITHOUT_CLASSIFICATION	0.9991151939292966	WITHOUT_CLASSIFICATION	8.848060707035499E-4	DESIGN
trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.999519991010001	WITHOUT_CLASSIFICATION	4.800089899989321E-4	DESIGN
should not happen!	WITHOUT_CLASSIFICATION	0.9979571774739088	WITHOUT_CLASSIFICATION	0.002042822526091216	DESIGN
start class	WITHOUT_CLASSIFICATION	0.9987707168078609	WITHOUT_CLASSIFICATION	0.0012292831921391007	DESIGN
make getter for handler	WITHOUT_CLASSIFICATION	0.9967083293642308	WITHOUT_CLASSIFICATION	0.0032916706357692805	DESIGN
make getter for proxy class	WITHOUT_CLASSIFICATION	0.9972379538527087	WITHOUT_CLASSIFICATION	0.0027620461472912176	DESIGN
add (potentially) overridden names to the key. TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.998321006611704	DESIGN	0.0016789933882959739	WITHOUT_CLASSIFICATION
We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9968623632877313	WITHOUT_CLASSIFICATION	0.003137636712268746	DESIGN
create static private method field	WITHOUT_CLASSIFICATION	0.996863462838561	WITHOUT_CLASSIFICATION	0.0031365371614391424	DESIGN
load static empty array	WITHOUT_CLASSIFICATION	0.9996826775478667	WITHOUT_CLASSIFICATION	3.1732245213335136E-4	DESIGN
box arguments	WITHOUT_CLASSIFICATION	0.9998605799776947	WITHOUT_CLASSIFICATION	1.3942002230523897E-4	DESIGN
this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9698972051593644	WITHOUT_CLASSIFICATION	0.030102794840635574	DESIGN
construct the super-proxy method	WITHOUT_CLASSIFICATION	0.9974277833592258	WITHOUT_CLASSIFICATION	0.0025722166407742865	DESIGN
do a void return	WITHOUT_CLASSIFICATION	0.9994786942791011	WITHOUT_CLASSIFICATION	5.21305720898943E-4	DESIGN
utility methods	WITHOUT_CLASSIFICATION	0.99972326510988	WITHOUT_CLASSIFICATION	2.767348901199927E-4	DESIGN
Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.998740608128849	WITHOUT_CLASSIFICATION	0.0012593918711509015	DESIGN
store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9903804460080649	WITHOUT_CLASSIFICATION	0.009619553991935028	DESIGN
use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9966038328013552	WITHOUT_CLASSIFICATION	0.0033961671986448556	DESIGN
no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9997138440350076	WITHOUT_CLASSIFICATION	2.861559649923335E-4	DESIGN
only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9993168045436072	WITHOUT_CLASSIFICATION	6.831954563927738E-4	DESIGN
opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9969520452868463	WITHOUT_CLASSIFICATION	0.003047954713153596	DESIGN
opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9989814784316109	WITHOUT_CLASSIFICATION	0.0010185215683891126	DESIGN
No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999152088859525	WITHOUT_CLASSIFICATION	8.479111404749315E-5	DESIGN
If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9992146684974008	WITHOUT_CLASSIFICATION	7.853315025992595E-4	DESIGN
The current block is already associated with proc. No need to create a new one	WITHOUT_CLASSIFICATION	0.999743689114388	WITHOUT_CLASSIFICATION	2.5631088561195616E-4	DESIGN
Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9981279167590553	WITHOUT_CLASSIFICATION	0.0018720832409445847	DESIGN
NUL	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9967615445911842	WITHOUT_CLASSIFICATION	0.0032384554088158313	DESIGN
Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9998805921619164	WITHOUT_CLASSIFICATION	1.1940783808364825E-4	DESIGN
'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9950800148907738	WITHOUT_CLASSIFICATION	0.004919985109226169	DESIGN
Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9663714337215924	WITHOUT_CLASSIFICATION	0.03362856627840758	DESIGN
read-volatile	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
read-volatile	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9867649656958823	WITHOUT_CLASSIFICATION	0.013235034304117642	DESIGN
must be power of 2 must be power of 2	WITHOUT_CLASSIFICATION	0.999222252837284	WITHOUT_CLASSIFICATION	7.777471627160823E-4	DESIGN
Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9959767998094224	WITHOUT_CLASSIFICATION	0.004023200190577661	DESIGN
note segmentShift differs from ConcurrentHashMap's calculation due to issues with System.identityHashCode (upper n bits always 0, at least under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9950607248291409	WITHOUT_CLASSIFICATION	0.004939275170859093	DESIGN
System.err.println("ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.998130744220882	WITHOUT_CLASSIFICATION	0.0018692557791180975	DESIGN
protected void finalize() throws Throwable { System.err.println("ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); }	WITHOUT_CLASSIFICATION	0.9827395149084137	WITHOUT_CLASSIFICATION	0.01726048509158632	DESIGN
EntryRefs include hash with key to facilitate lookup by Segment#expunge after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9825273868902498	WITHOUT_CLASSIFICATION	0.017472613109750283	DESIGN
Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather makes it a final field. The theory is that doing so should force a happens-before relationship WRT the WeakReference constructor, guaranteeing that the key will be visibile to other threads (unless it's been GC'ed). See JLS 17.5 (final fields) and 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9979303440434013	WITHOUT_CLASSIFICATION	0.0020696559565987786	DESIGN
references to the Java object and its proxy will either both be weak or both be soft, since the proxy contains a strong reference to the object, so it wouldn't make sense for the reference types to differ.	WITHOUT_CLASSIFICATION	0.9999252669528379	WITHOUT_CLASSIFICATION	7.47330471620821E-5	DESIGN
ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9986966742578917	WITHOUT_CLASSIFICATION	0.001303325742108331	DESIGN
must be called under lock	WITHOUT_CLASSIFICATION	0.9998378511662882	WITHOUT_CLASSIFICATION	1.621488337119218E-4	DESIGN
must be called under lock	WITHOUT_CLASSIFICATION	0.9998378511662882	WITHOUT_CLASSIFICATION	1.621488337119218E-4	DESIGN
must be called under lock	WITHOUT_CLASSIFICATION	0.9998378511662882	WITHOUT_CLASSIFICATION	1.621488337119218E-4	DESIGN
note that we'll potentially see the refs for both the java object and proxy -- whichever we see first will cause the entry to be removed; the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999512589567208	WITHOUT_CLASSIFICATION	4.874104327910779E-5	DESIGN
temp method to verify tableSize value must be called under lock	WITHOUT_CLASSIFICATION	0.9995308687711902	WITHOUT_CLASSIFICATION	4.6913122880973637E-4	DESIGN
Single node in list	WITHOUT_CLASSIFICATION	0.9993413644148332	WITHOUT_CLASSIFICATION	6.586355851666807E-4	DESIGN
indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9989479626717046	WITHOUT_CLASSIFICATION	0.0010520373282954657	DESIGN
indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9989479626717046	WITHOUT_CLASSIFICATION	0.0010520373282954657	DESIGN
entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9996144930933483	WITHOUT_CLASSIFICATION	3.855069066517367E-4	DESIGN
Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9951737197029389	WITHOUT_CLASSIFICATION	0.004826280297061106	DESIGN
Start of string ([, (, {, <, ', ", \n)	WITHOUT_CLASSIFICATION	0.9997036141611659	WITHOUT_CLASSIFICATION	2.9638583883408897E-4	DESIGN
Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9991403371781716	WITHOUT_CLASSIFICATION	8.596628218283408E-4	DESIGN
How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9931416673597405	WITHOUT_CLASSIFICATION	0.00685833264025939	DESIGN
For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9995924606845856	WITHOUT_CLASSIFICATION	4.0753931541435387E-4	DESIGN
Last full line read.	WITHOUT_CLASSIFICATION	0.9997291156895841	WITHOUT_CLASSIFICATION	2.7088431041590505E-4	DESIGN
Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9984881446025244	WITHOUT_CLASSIFICATION	0.0015118553974755385	DESIGN
Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9998327028077479	WITHOUT_CLASSIFICATION	1.6729719225202423E-4	DESIGN
Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.999026980560999	WITHOUT_CLASSIFICATION	9.730194390010449E-4	DESIGN
Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.999026980560999	WITHOUT_CLASSIFICATION	9.730194390010449E-4	DESIGN
End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9996245863189794	WITHOUT_CLASSIFICATION	3.7541368102052665E-4	DESIGN
How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9993837371292763	WITHOUT_CLASSIFICATION	6.162628707238179E-4	DESIGN
Single-quote fast path	WITHOUT_CLASSIFICATION	0.999555598150335	WITHOUT_CLASSIFICATION	4.444018496649742E-4	DESIGN
Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9979662544347592	WITHOUT_CLASSIFICATION	0.002033745565240812	DESIGN
just ignore	WITHOUT_CLASSIFICATION	0.9989183942358529	WITHOUT_CLASSIFICATION	0.0010816057641470167	DESIGN
octal constant	WITHOUT_CLASSIFICATION	0.9995452779301384	WITHOUT_CLASSIFICATION	4.5472206986169636E-4	DESIGN
hex constant	WITHOUT_CLASSIFICATION	0.9995452779301384	WITHOUT_CLASSIFICATION	4.5472206986169636E-4	DESIGN
PUSH(1)	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
POP	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
PUSH(0). If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999340091630358	WITHOUT_CLASSIFICATION	6.599083696419475E-5	DESIGN
LEXPOP	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
SET_P	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9988568954276666	WITHOUT_CLASSIFICATION	0.0011431045723333882	DESIGN
Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9968156779865578	WITHOUT_CLASSIFICATION	0.003184322013442216	DESIGN
Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9993668509686601	WITHOUT_CLASSIFICATION	6.331490313399585E-4	DESIGN
Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9995523818871389	WITHOUT_CLASSIFICATION	4.476181128610989E-4	DESIGN
Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9998371486530973	WITHOUT_CLASSIFICATION	1.6285134690275543E-4	DESIGN
Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9989601386503424	WITHOUT_CLASSIFICATION	0.0010398613496575234	DESIGN
Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9990650225794779	WITHOUT_CLASSIFICATION	9.349774205220409E-4	DESIGN
Give a name to a value. Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.7434789806945639	WITHOUT_CLASSIFICATION	0.2565210193054361	DESIGN
When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.997345323453868	WITHOUT_CLASSIFICATION	0.0026546765461321017	DESIGN
Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9951085869671561	WITHOUT_CLASSIFICATION	0.00489141303284388	DESIGN
Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9884457388637996	WITHOUT_CLASSIFICATION	0.011554261136200438	DESIGN
1.9 only	WITHOUT_CLASSIFICATION	0.999639678175546	WITHOUT_CLASSIFICATION	3.6032182445398797E-4	DESIGN
Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9988292663352948	WITHOUT_CLASSIFICATION	0.0011707336647051917	DESIGN
Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9994731496847997	WITHOUT_CLASSIFICATION	5.268503152003279E-4	DESIGN
no mb || ismbchar(term)	WITHOUT_CLASSIFICATION	0.9996658673629738	WITHOUT_CLASSIFICATION	3.341326370262146E-4	DESIGN
Not normally used, but is left in here since it can be useful in debugging grammar and lexing problems.	WITHOUT_CLASSIFICATION	0.9944122874389277	WITHOUT_CLASSIFICATION	0.005587712561072247	DESIGN
DEBUGGING HELP	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
'\v'	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
end of script.	WITHOUT_CLASSIFICATION	0.9998527610961966	WITHOUT_CLASSIFICATION	1.4723890380344422E-4	DESIGN
white spaces	WITHOUT_CLASSIFICATION	0.9996985990083064	WITHOUT_CLASSIFICATION	3.014009916936412E-4	DESIGN
'\v'	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
it's a comment	WITHOUT_CLASSIFICATION	0.9992819142488886	WITHOUT_CLASSIFICATION	7.180857511113739E-4	DESIGN
Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9991628560017609	WITHOUT_CLASSIFICATION	8.371439982390159E-4	DESIGN
$\: output record separator	WITHOUT_CLASSIFICATION	0.9998329831282234	WITHOUT_CLASSIFICATION	1.6701687177661772E-4	DESIGN
EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9996220389013858	WITHOUT_CLASSIFICATION	3.7796109861425165E-4	DESIGN
documentation nodes	WITHOUT_CLASSIFICATION	0.9999037867370235	WITHOUT_CLASSIFICATION	9.62132629764315E-5	DESIGN
In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9997357168599476	WITHOUT_CLASSIFICATION	2.642831400524278E-4	DESIGN
Just a plain bang	WITHOUT_CLASSIFICATION	0.9995881838090456	WITHOUT_CLASSIFICATION	4.1181619095452505E-4	DESIGN
$_: last read line string	WITHOUT_CLASSIFICATION	0.9998753228369816	WITHOUT_CLASSIFICATION	1.2467716301837087E-4	DESIGN
$~: match-data	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
$: argv	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
$$: pid	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
$?: last status	WITHOUT_CLASSIFICATION	0.9996621606893481	WITHOUT_CLASSIFICATION	3.378393106519567E-4	DESIGN
$!: error string	WITHOUT_CLASSIFICATION	0.9998388074162888	WITHOUT_CLASSIFICATION	1.6119258371119133E-4	DESIGN
$@: error position	WITHOUT_CLASSIFICATION	0.9997848359472704	WITHOUT_CLASSIFICATION	2.151640527297013E-4	DESIGN
$/: input record separator	WITHOUT_CLASSIFICATION	0.9992440704461442	WITHOUT_CLASSIFICATION	7.559295538557918E-4	DESIGN
$;: field separator	WITHOUT_CLASSIFICATION	0.9998920358540899	WITHOUT_CLASSIFICATION	1.0796414591013631E-4	DESIGN
$,: output field separator	WITHOUT_CLASSIFICATION	0.9999143478223944	WITHOUT_CLASSIFICATION	8.565217760553152E-5	DESIGN
$.: last read line number	WITHOUT_CLASSIFICATION	0.9998105565981301	WITHOUT_CLASSIFICATION	1.8944340186994628E-4	DESIGN
$=: ignorecase	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
$:: load path	WITHOUT_CLASSIFICATION	0.9996474047621	WITHOUT_CLASSIFICATION	3.5259523789999813E-4	DESIGN
$<: reading filename	WITHOUT_CLASSIFICATION	0.9998581575806796	WITHOUT_CLASSIFICATION	1.418424193203145E-4	DESIGN
$": already loaded files	WITHOUT_CLASSIFICATION	0.9998879775967151	WITHOUT_CLASSIFICATION	1.1202240328497405E-4	DESIGN
$&: last match	WITHOUT_CLASSIFICATION	0.9997602255006749	WITHOUT_CLASSIFICATION	2.3977449932509592E-4	DESIGN
$`: string before last match	WITHOUT_CLASSIFICATION	0.9998561828260422	WITHOUT_CLASSIFICATION	1.4381717395782278E-4	DESIGN
$': string after last match	WITHOUT_CLASSIFICATION	0.9998434318755479	WITHOUT_CLASSIFICATION	1.565681244520307E-4	DESIGN
methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9994679578903054	WITHOUT_CLASSIFICATION	5.32042109694594E-4	DESIGN
See if it is a reserved word.	WITHOUT_CLASSIFICATION	0.9990517178336922	WITHOUT_CLASSIFICATION	9.482821663077649E-4	DESIGN
enum lex_state	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
block (primary)	WITHOUT_CLASSIFICATION	0.9998930029832688	WITHOUT_CLASSIFICATION	1.0699701673121544E-4	DESIGN
block (expr)	WITHOUT_CLASSIFICATION	0.9998930029832688	WITHOUT_CLASSIFICATION	1.0699701673121544E-4	DESIGN
hash	WITHOUT_CLASSIFICATION	0.9993316390709486	WITHOUT_CLASSIFICATION	6.683609290513775E-4	DESIGN
ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9808293928152939	WITHOUT_CLASSIFICATION	0.019170607184706125	DESIGN
FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.7250122229655703	WITHOUT_CLASSIFICATION	0.27498777703442967	DESIGN
We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9998635343912736	WITHOUT_CLASSIFICATION	1.364656087262996E-4	DESIGN
hexadecimal	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
binary	WITHOUT_CLASSIFICATION	0.9994901200809977	WITHOUT_CLASSIFICATION	5.098799190022031E-4	DESIGN
decimal	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
Octal	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
'_' in number just ignored	WITHOUT_CLASSIFICATION	0.999665269249954	WITHOUT_CLASSIFICATION	3.3473075004587934E-4	DESIGN
backslash	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
newline	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
horizontal tab	WITHOUT_CLASSIFICATION	0.9998291811809601	WITHOUT_CLASSIFICATION	1.708188190398159E-4	DESIGN
form feed	WITHOUT_CLASSIFICATION	0.9986504506683266	WITHOUT_CLASSIFICATION	0.0013495493316734181	DESIGN
vertical tab	WITHOUT_CLASSIFICATION	0.9998235947543234	WITHOUT_CLASSIFICATION	1.7640524567664388E-4	DESIGN
alarm(bell)	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
escape	WITHOUT_CLASSIFICATION	0.9996484782239055	WITHOUT_CLASSIFICATION	3.515217760944962E-4	DESIGN
hex constant	WITHOUT_CLASSIFICATION	0.9995452779301384	WITHOUT_CLASSIFICATION	4.5472206986169636E-4	DESIGN
char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999332149906588	WITHOUT_CLASSIFICATION	6.67850093412342E-5	DESIGN
If \r\n then just pass along \n (windows). If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9998215436595064	WITHOUT_CLASSIFICATION	1.7845634049364973E-4	DESIGN
space	WITHOUT_CLASSIFICATION	0.9998146064740092	WITHOUT_CLASSIFICATION	1.8539352599077888E-4	DESIGN
Where we started this marker match	WITHOUT_CLASSIFICATION	0.9961976888165843	WITHOUT_CLASSIFICATION	0.0038023111834157362	DESIGN
Position within source must reflect the actual offset and column. Since we ate an extra character here (this accounting is normally done in read ), we should update position info.	WITHOUT_CLASSIFICATION	0.9987593008994403	WITHOUT_CLASSIFICATION	0.00124069910055975	DESIGN
We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.991277561220139	WITHOUT_CLASSIFICATION	0.008722438779860989	DESIGN
If \r\n then just pass along \n (windows). If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9998215436595064	WITHOUT_CLASSIFICATION	1.7845634049364973E-4	DESIGN
FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.700473420330641	WITHOUT_CLASSIFICATION	0.299526579669359	DESIGN
FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.700473420330641	WITHOUT_CLASSIFICATION	0.299526579669359	DESIGN
Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9993211223048499	WITHOUT_CLASSIFICATION	6.788776951500402E-4	DESIGN
Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9989849986818155	WITHOUT_CLASSIFICATION	0.0010150013181845427	DESIGN
index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9778531085171305	WITHOUT_CLASSIFICATION	0.02214689148286957	DESIGN
Character read before previous read	WITHOUT_CLASSIFICATION	0.9988485556723056	WITHOUT_CLASSIFICATION	0.0011514443276943874	DESIGN
keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9885782822682071	WITHOUT_CLASSIFICATION	0.0114217177317929	DESIGN
NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9994072205555466	WITHOUT_CLASSIFICATION	5.927794444533294E-4	DESIGN
BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. We did it here for now	WITHOUT_CLASSIFICATION	0.98504380195975	DESIGN	0.014956198040249955	WITHOUT_CLASSIFICATION
Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9831729517286049	WITHOUT_CLASSIFICATION	0.01682704827139506	DESIGN
that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.985541769681961	WITHOUT_CLASSIFICATION	0.014458230318038808	DESIGN
Rubygems is too specific on host cpu so until we have real need lets default to universal setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9837384201185826	WITHOUT_CLASSIFICATION	0.016261579881417458	DESIGN
Our shell scripts pass in non-canonicalized paths, but even if we didn't anyone who did would become unhappy because Ruby apps expect no relative operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9968546850641764	WITHOUT_CLASSIFICATION	0.0031453149358236106	DESIGN
this set is only for darwin	WITHOUT_CLASSIFICATION	0.9924670630717572	WITHOUT_CLASSIFICATION	0.007532936928242735	DESIGN
DigestLibrary	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
all errors, just info; do not prevent loading IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.861180827765472	WITHOUT_CLASSIFICATION	0.13881917223452797	DESIGN
all errors, just info; do not prevent unloading IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9204818753551129	WITHOUT_CLASSIFICATION	0.07951812464488708	DESIGN
do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9992356625742141	WITHOUT_CLASSIFICATION	7.643374257859049E-4	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
line 329	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9984274327510634	WITHOUT_CLASSIFICATION	0.001572567248936601	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
dynamically increase	WITHOUT_CLASSIFICATION	0.9996344221746518	WITHOUT_CLASSIFICATION	3.6557782534810877E-4	DESIGN
discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.998715135369564	WITHOUT_CLASSIFICATION	0.0012848646304358812	DESIGN
else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9996495059833204	WITHOUT_CLASSIFICATION	3.504940166796091E-4	DESIGN
shift to yyN	WITHOUT_CLASSIFICATION	0.9992672936069655	WITHOUT_CLASSIFICATION	7.327063930344647E-4	DESIGN
reduce (yyN)	WITHOUT_CLASSIFICATION	0.9995320511427265	WITHOUT_CLASSIFICATION	4.6794885727356647E-4	DESIGN
leave stack alone	WITHOUT_CLASSIFICATION	0.9997552418483564	WITHOUT_CLASSIFICATION	2.4475815164352806E-4	DESIGN
line 271	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 274	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 303	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 311	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 314	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 317	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 332	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 338	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 341	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 344	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 351	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 358	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 367	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 372	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 378	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 382	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 407	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 411	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 414	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 417	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 420	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 426	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 434	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 443	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 446	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 452	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 457	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 464	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 467	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 470	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 479	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 484	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 486	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 492	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 498	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 501	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 504	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 507	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 510	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 519	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 525	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
line 537	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 540	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 543	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 546	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 556	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 559	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 563	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 566	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 569	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 575	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 578	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 587	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 596	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 604	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 607	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 610	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 613	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 616	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 634	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 638	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 643	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 646	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 655	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 660	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 667	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 670	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 672	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 696	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 701	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 717	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 720	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 726	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 729	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 732	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 735	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 738	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 751	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 754	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 757	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 760	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 763	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 769	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 772	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 775	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 782	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 788	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 791	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 794	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 797	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 803	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 806	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 809	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 815	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 818	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 821	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 824	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 830	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 833	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 836	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 839	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 842	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 848	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 852	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 858	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 861	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 868	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 871	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 876	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 879	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 883	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 893	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 896	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 899	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 903	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 907	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 915	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 920	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 923	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 926	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 932	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 936	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 940	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 944	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 948	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 956	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 960	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 964	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 967	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 972	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 978	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 980	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 984	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 986	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 996	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1001	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1004	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1008	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1014	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1029	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1032	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1034	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1045	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1048	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1051	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1058	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1070	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1073	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1076	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1079	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1082	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1089	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1097	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1100	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1103	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1107	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1111	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1113	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1115	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1119	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1130	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1133	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1135	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1137	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1140	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1151	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1154	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1158	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1164	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1175	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1178	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1187	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1189	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1193	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1204	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1207	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1210	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1214	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1234	WITHOUT_CLASSIFICATION	0.9996801134251158	WITHOUT_CLASSIFICATION	3.1988657488421794E-4	DESIGN
line 1239	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1243	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1247	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1251	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1263	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1269	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1280	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1283	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1290	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1296	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1299	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1302	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1309	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1313	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1315	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1320	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1328	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1335	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1348	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1352	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1358	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1374	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1381	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1387	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1392	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1415	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1431	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1434	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1440	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1443	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1453	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1456	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1462	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1465	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1470	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1477	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1480	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1485	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1488	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1496	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1502	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1510	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1513	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1516	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1533	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1550	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1553	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1556	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1565	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1568	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1571	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1574	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1577	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1587	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1595	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1598	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1600	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1609	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1623	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1626	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1629	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1632	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1638	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1641	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1644	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1649	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1655	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1658	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1661	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1672	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1677	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1687	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1694	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1705	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1708	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1725	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1733	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1742	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1745	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1749	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1757	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1769	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1772	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1775	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1784	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1808	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1814	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1818	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1822	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
force for args	WITHOUT_CLASSIFICATION	0.9997895133422222	WITHOUT_CLASSIFICATION	2.1048665777765612E-4	DESIGN
XXX 0;	WITHOUT_CLASSIFICATION	0.9994730302357276	WITHOUT_CLASSIFICATION	5.269697642723172E-4	DESIGN
$$ = $3;	WITHOUT_CLASSIFICATION	0.9999152493172319	WITHOUT_CLASSIFICATION	8.475068276812558E-5	DESIGN
}	WITHOUT_CLASSIFICATION	0.9993475617335801	WITHOUT_CLASSIFICATION	6.524382664198767E-4	DESIGN
last expression should not be void	WITHOUT_CLASSIFICATION	0.997492012631333	WITHOUT_CLASSIFICATION	0.0025079873686670103	DESIGN
compstmt position includes both parens around it	WITHOUT_CLASSIFICATION	0.9940521745607598	WITHOUT_CLASSIFICATION	0.005947825439240221	DESIGN
$8 == null ? NilImplicitNode.NIL : $8;	WITHOUT_CLASSIFICATION	0.9580290361032513	WITHOUT_CLASSIFICATION	0.04197096389674862	DESIGN
$5 == null ? NilImplicitNode.NIL : $5;	WITHOUT_CLASSIFICATION	0.9580290361032513	WITHOUT_CLASSIFICATION	0.04197096389674862	DESIGN
NOEX_PRIVATE for toplevel	WITHOUT_CLASSIFICATION	0.9992885936523824	WITHOUT_CLASSIFICATION	7.114063476175817E-4	DESIGN
mirko: check	WITHOUT_CLASSIFICATION	0.9998203883313516	WITHOUT_CLASSIFICATION	1.7961166864851905E-4	DESIGN
Include pipes on multiple arg type	WITHOUT_CLASSIFICATION	0.9751884777334454	WITHOUT_CLASSIFICATION	0.024811522266554618	DESIGN
line 529	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
.setPosFrom($2);	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
XXX	WITHOUT_CLASSIFICATION	0.9994549250185639	WITHOUT_CLASSIFICATION	5.450749814360651E-4	DESIGN
zero length array	WITHOUT_CLASSIFICATION	0.9999038752058318	WITHOUT_CLASSIFICATION	9.612479416813306E-5	DESIGN
DStrNode: :"some text #{some expression}"	WITHOUT_CLASSIFICATION	0.999495564343122	WITHOUT_CLASSIFICATION	5.044356568780004E-4	DESIGN
StrNode: :"some text"	WITHOUT_CLASSIFICATION	0.9994158487169676	WITHOUT_CLASSIFICATION	5.841512830324515E-4	DESIGN
EvStrNode :"#{some expression}"	WITHOUT_CLASSIFICATION	0.9986828689501004	WITHOUT_CLASSIFICATION	0.001317131049899571	DESIGN
line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9993977301466761	WITHOUT_CLASSIFICATION	6.022698533239536E-4	DESIGN
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9988318943658108	WITHOUT_CLASSIFICATION	0.0011681056341891704	DESIGN
yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9984274327510634	WITHOUT_CLASSIFICATION	0.001572567248936601	DESIGN
line 7713 "-"	WITHOUT_CLASSIFICATION	0.9998177820182296	WITHOUT_CLASSIFICATION	1.8221798177041028E-4	DESIGN
local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9992637811954597	WITHOUT_CLASSIFICATION	7.362188045404181E-4	DESIGN
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9995493579602023	WITHOUT_CLASSIFICATION	4.506420397976482E-4	DESIGN
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9995493579602023	WITHOUT_CLASSIFICATION	4.506420397976482E-4	DESIGN
We know this is a block scope because a local scope cannot be within a local scope If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9998892792178908	WITHOUT_CLASSIFICATION	1.1072078210921811E-4	DESIGN
ENEBO: 1.9 has CURR nodes for local/block variables. We don't. I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9845796767879532	WITHOUT_CLASSIFICATION	0.015420323212046848	DESIGN
odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9976289036998389	WITHOUT_CLASSIFICATION	0.0023710963001611165	DESIGN
What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9941228478338158	WITHOUT_CLASSIFICATION	0.005877152166184276	DESIGN
Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9149041244020599	WITHOUT_CLASSIFICATION	0.08509587559794007	DESIGN
We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9978033811820334	WITHOUT_CLASSIFICATION	0.002196618817966585	DESIGN
Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999495677217354	WITHOUT_CLASSIFICATION	5.043227826458531E-5	DESIGN
Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9975803080478959	WITHOUT_CLASSIFICATION	0.002419691952104092	DESIGN
Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9993257433920355	WITHOUT_CLASSIFICATION	6.742566079644968E-4	DESIGN
__END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9991903567621547	WITHOUT_CLASSIFICATION	8.096432378452547E-4	DESIGN
Parser states:	WITHOUT_CLASSIFICATION	0.9991294265900967	WITHOUT_CLASSIFICATION	8.705734099032543E-4	DESIGN
Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9904515483178853	WITHOUT_CLASSIFICATION	0.00954845168211475	DESIGN
Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.8432963349265035	WITHOUT_CLASSIFICATION	0.15670366507349653	DESIGN
LOCALVAR	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
CONSTANT	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9900577371825877	WITHOUT_CLASSIFICATION	0.009942262817412185	DESIGN
MRI: block_append	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
Reduces overhead in interp by not set position every single line we encounter.	WITHOUT_CLASSIFICATION	0.998783253409796	WITHOUT_CLASSIFICATION	0.0012167465902039945	DESIGN
Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9975634695053357	WITHOUT_CLASSIFICATION	0.0024365304946642563	DESIGN
return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9994630284681195	WITHOUT_CLASSIFICATION	5.369715318805578E-4	DESIGN
Node	WITHOUT_CLASSIFICATION	0.9987553348994788	WITHOUT_CLASSIFICATION	0.0012446651005212001	DESIGN
FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9579522799739972	DESIGN	0.0420477200260028	WITHOUT_CLASSIFICATION
case CONSTNODE: handleUselessWarn(node, "a constant"); return;	WITHOUT_CLASSIFICATION	0.9996656085737518	WITHOUT_CLASSIFICATION	3.3439142624828376E-4	DESIGN
FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9579522799739972	DESIGN	0.0420477200260028	WITHOUT_CLASSIFICATION
case CLASSNODE: case COLON2NODE: handleUselessWarn(node, "::"); return;	WITHOUT_CLASSIFICATION	0.9996656085737518	WITHOUT_CLASSIFICATION	3.3439142624828376E-4	DESIGN
case SELFNODE: handleUselessWarn(node, "self"); return;	WITHOUT_CLASSIFICATION	0.9996656085737518	WITHOUT_CLASSIFICATION	3.3439142624828376E-4	DESIGN
FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.5283107708215885	WITHOUT_CLASSIFICATION	0.47168922917841144	DESIGN
MRI: range_op	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9992894512242803	WITHOUT_CLASSIFICATION	7.105487757198073E-4	DESIGN
foo()	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
foo()	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
foo()	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
tail must be EvStrNode at this point	WITHOUT_CLASSIFICATION	0.9959901818696625	WITHOUT_CLASSIFICATION	0.004009818130337558	DESIGN
Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9988744529214953	WITHOUT_CLASSIFICATION	0.0011255470785047266	DESIGN
Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9997824895394714	WITHOUT_CLASSIFICATION	2.175104605286193E-4	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
dynamically increase	WITHOUT_CLASSIFICATION	0.9996344221746518	WITHOUT_CLASSIFICATION	3.6557782534810877E-4	DESIGN
else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9996495059833204	WITHOUT_CLASSIFICATION	3.504940166796091E-4	DESIGN
shift to yyN	WITHOUT_CLASSIFICATION	0.9992672936069655	WITHOUT_CLASSIFICATION	7.327063930344647E-4	DESIGN
reduce (yyN)	WITHOUT_CLASSIFICATION	0.9995320511427265	WITHOUT_CLASSIFICATION	4.6794885727356647E-4	DESIGN
leave stack alone	WITHOUT_CLASSIFICATION	0.9997552418483564	WITHOUT_CLASSIFICATION	2.4475815164352806E-4	DESIGN
line 321	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 351	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 382	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 417	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 420	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 423	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 426	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 280	WITHOUT_CLASSIFICATION	0.9996986841014827	WITHOUT_CLASSIFICATION	3.0131589851743924E-4	DESIGN
line 283	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 296	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 324	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 327	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 331	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 333	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 336	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 342	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 345	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 348	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 354	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 368	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 377	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 388	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 392	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 397	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 429	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 432	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 436	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 445	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 448	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 454	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 459	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 466	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 469	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 478	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 481	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 488	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 494	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 497	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 503	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 506	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 509	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 512	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 521	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 526	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 540	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 543	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 546	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 566	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 610	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 672	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 691	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 696	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 772	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 782	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 785	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 788	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 791	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 534	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 549	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 552	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 558	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 561	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 571	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 574	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 579	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 586	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 589	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 592	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 595	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 598	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 623	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 627	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 630	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 633	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 639	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 648	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 657	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 661	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 666	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 678	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 682	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 688	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 699	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 706	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 708	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 727	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 737	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 753	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 779	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 801	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 808	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 811	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 817	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 842	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 845	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 848	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 893	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 899	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 932	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 944	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 960	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 980	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1004	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1038	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 820	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 826	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 829	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 832	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 851	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 857	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 860	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 863	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 866	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 869	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 875	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 884	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 887	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 890	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 902	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 909	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 912	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 916	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 922	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 928	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 941	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 947	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 951	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 955	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 965	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 969	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 977	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 983	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1013	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1023	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1035	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1041	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1043	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1054	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1057	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1060	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1069	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1075	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1105	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1111	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1122	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1130	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1140	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1158	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1204	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1207	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1247	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1251	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1261	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1078	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1084	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1087	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1090	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1093	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1114	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1116	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1118	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1124	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1126	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1138	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1144	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1149	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1155	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1162	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1173	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1179	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1182	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1190	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1196	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1213	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1217	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1231	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1236	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1244	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1254	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1258	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1264	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1270	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1273	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1276	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1279	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1282	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1289	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1292	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1295	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1298	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1305	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1348	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1387	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1392	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1448	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1462	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1470	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1496	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1502	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1595	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1598	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1308	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1311	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1317	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1323	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1326	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1329	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1337	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1342	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1345	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1354	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1359	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1366	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1369	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1373	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1377	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1383	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1399	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1401	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1406	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1417	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1424	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1427	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1430	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1433	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1436	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1442	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1445	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1458	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1464	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1489	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1493	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1507	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1519	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1532	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1538	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1542	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1557	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1573	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1591	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1615	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1629	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1632	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1705	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1716	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1725	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1742	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1749	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1818	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1822	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1607	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1610	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1622	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1625	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1636	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1639	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1647	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1651	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1657	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1660	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1663	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1678	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1702	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1711	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1719	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1722	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1731	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1734	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1738	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1746	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1756	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1758	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1761	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1767	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1776	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1782	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1785	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1788	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1791	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1797	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1800	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1803	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1806	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1809	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1815	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1825	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1828	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1831	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1847	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
$8 == null ? NilImplicitNode.NIL : $8;	WITHOUT_CLASSIFICATION	0.9580290361032513	WITHOUT_CLASSIFICATION	0.04197096389674862	DESIGN
$5 == null ? NilImplicitNode.NIL : $5;	WITHOUT_CLASSIFICATION	0.9580290361032513	WITHOUT_CLASSIFICATION	0.04197096389674862	DESIGN
.setPosFrom($2);	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
zero length array	WITHOUT_CLASSIFICATION	0.9999038752058318	WITHOUT_CLASSIFICATION	9.612479416813306E-5	DESIGN
DStrNode: :"some text #{some expression}"	WITHOUT_CLASSIFICATION	0.999495564343122	WITHOUT_CLASSIFICATION	5.044356568780004E-4	DESIGN
StrNode: :"some text"	WITHOUT_CLASSIFICATION	0.9994158487169676	WITHOUT_CLASSIFICATION	5.841512830324515E-4	DESIGN
EvStrNode :"#{some expression}"	WITHOUT_CLASSIFICATION	0.9986828689501004	WITHOUT_CLASSIFICATION	0.001317131049899571	DESIGN
INSTANCE VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9994072205555466	WITHOUT_CLASSIFICATION	5.927794444533294E-4	DESIGN
line 1854	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1869	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1872	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1877	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1886	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1898	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1902	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1905	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1911	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1918	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1935	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1938	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1942	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1948	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1960	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1963	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1968	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1972	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1982	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1995	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 2000	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 2006	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 2010	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
We may need to subtract addition offset off of first	WITHOUT_CLASSIFICATION	0.9992909655004979	WITHOUT_CLASSIFICATION	7.090344995021643E-4	DESIGN
string fragment (we optimistically take one off in	WITHOUT_CLASSIFICATION	0.9996615893282117	WITHOUT_CLASSIFICATION	3.3841067178829923E-4	DESIGN
ParserSupport.literal_concat). Check token length	WITHOUT_CLASSIFICATION	0.9989082822661786	WITHOUT_CLASSIFICATION	0.0010917177338214976	DESIGN
and subtract as neeeded.	WITHOUT_CLASSIFICATION	0.9996753093103862	WITHOUT_CLASSIFICATION	3.246906896137668E-4	DESIGN
$$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);	WITHOUT_CLASSIFICATION	0.9998121631727354	WITHOUT_CLASSIFICATION	1.8783682726461487E-4	DESIGN
ENEBO: arg surrounded by in_defined set/unset	WITHOUT_CLASSIFICATION	0.998559147734943	WITHOUT_CLASSIFICATION	0.0014408522650569792	DESIGN
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9988318943658108	WITHOUT_CLASSIFICATION	0.0011681056341891704	DESIGN
yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9984274327510634	WITHOUT_CLASSIFICATION	0.001572567248936601	DESIGN
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9995493579602023	WITHOUT_CLASSIFICATION	4.506420397976482E-4	DESIGN
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9995493579602023	WITHOUT_CLASSIFICATION	4.506420397976482E-4	DESIGN
ENEBO: Removed !compile_for_eval which probably is to reduce warnings	WITHOUT_CLASSIFICATION	0.9986786748483961	WITHOUT_CLASSIFICATION	0.0013213251516039682	DESIGN
was $$ = null;	WITHOUT_CLASSIFICATION	0.9999652819441317	WITHOUT_CLASSIFICATION	3.471805586823957E-5	DESIGN
line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9997290530014017	WITHOUT_CLASSIFICATION	2.709469985983396E-4	DESIGN
line 8143 "-"	WITHOUT_CLASSIFICATION	0.9998177820182296	WITHOUT_CLASSIFICATION	1.8221798177041028E-4	DESIGN
we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9992161270325811	WITHOUT_CLASSIFICATION	7.838729674188591E-4	DESIGN
No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9983910477348086	WITHOUT_CLASSIFICATION	0.0016089522651913965	DESIGN
Next immediate scope. Variable and constant scoping rules make use of this variable in different ways.	WITHOUT_CLASSIFICATION	0.91181790367944	WITHOUT_CLASSIFICATION	0.08818209632055997	DESIGN
Live reference to module	WITHOUT_CLASSIFICATION	0.9987950352764432	WITHOUT_CLASSIFICATION	0.0012049647235568275	DESIGN
Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9995057786382606	WITHOUT_CLASSIFICATION	4.942213617394409E-4	DESIGN
Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9996397572518748	WITHOUT_CLASSIFICATION	3.6024274812523725E-4	DESIGN
number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9978634614324072	WITHOUT_CLASSIFICATION	0.0021365385675927565	DESIGN
number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9940658711109153	WITHOUT_CLASSIFICATION	0.005934128889084647	DESIGN
index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9820707724771404	WITHOUT_CLASSIFICATION	0.017929227522859657	DESIGN
Note that this object equality check is intentional, to ensure the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9993950492593373	WITHOUT_CLASSIFICATION	6.049507406626445E-4	DESIGN
Returns slot of variable	WITHOUT_CLASSIFICATION	0.9995660365246488	WITHOUT_CLASSIFICATION	4.339634753511494E-4	DESIGN
Returns slot of variable	WITHOUT_CLASSIFICATION	0.9995660365246488	WITHOUT_CLASSIFICATION	4.339634753511494E-4	DESIGN
Note: Only used by compiler until it can use getConstant again or use some other refactoring	WITHOUT_CLASSIFICATION	0.9995718143448871	WITHOUT_CLASSIFICATION	4.2818565511300197E-4	DESIGN
If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999682329041514	WITHOUT_CLASSIFICATION	3.176709584861738E-5	DESIGN
Try and unload the autoload specified from internedName	WITHOUT_CLASSIFICATION	0.9988625150671311	WITHOUT_CLASSIFICATION	0.0011374849328689063	DESIGN
We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9953750036714133	WITHOUT_CLASSIFICATION	0.0046249963285867664	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9992096562955868	WITHOUT_CLASSIFICATION	7.903437044131978E-4	DESIGN
do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9972649402407325	WITHOUT_CLASSIFICATION	0.002735059759267408	DESIGN
source extensions	WITHOUT_CLASSIFICATION	0.9998328652113188	WITHOUT_CLASSIFICATION	1.6713478868123633E-4	DESIGN
do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9972649402407325	WITHOUT_CLASSIFICATION	0.002735059759267408	DESIGN
. Array given to rest should pass itself . Array with rest + other args should extract array . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.999601293017132	WITHOUT_CLASSIFICATION	3.9870698286799156E-4	DESIGN
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9166636902339613	WITHOUT_CLASSIFICATION	0.0833363097660386	DESIGN
Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.6704216739703956	WITHOUT_CLASSIFICATION	0.32957832602960446	DESIGN
Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.8368467630528293	WITHOUT_CLASSIFICATION	0.16315323694717074	DESIGN
private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9977186909351878	WITHOUT_CLASSIFICATION	0.0022813090648120416	DESIGN
private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9977186909351878	WITHOUT_CLASSIFICATION	0.0022813090648120416	DESIGN
List of active dynamic scopes. Each of these may have captured other dynamic scopes to implement closures.	WITHOUT_CLASSIFICATION	0.9807355203487437	WITHOUT_CLASSIFICATION	0.019264479651256407	DESIGN
File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9987300062650312	WITHOUT_CLASSIFICATION	0.0012699937349688615	DESIGN
Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9986643330980589	WITHOUT_CLASSIFICATION	0.0013356669019411287	DESIGN
In certain places, like grep, we don't use real frames for the call blocks. This has the effect of not setting the backref in the correct frame - this delta is activated to the place where the grep is running in so that the backref will be set in an appropriate place.	WITHOUT_CLASSIFICATION	0.9467654931341319	DESIGN	0.05323450686586809	WITHOUT_CLASSIFICATION
TOPLEVEL self and a few others want a top-level scope. We create this one right away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.6483333614801102	WITHOUT_CLASSIFICATION	0.3516666385198896	DESIGN
CATCH MANAGEMENT	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
FRAME MANAGEMENT	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9959797126964456	WITHOUT_CLASSIFICATION	0.004020287303554408	DESIGN
assert level == 0;	WITHOUT_CLASSIFICATION	0.9999371552635107	WITHOUT_CLASSIFICATION	6.284473648930109E-5	DESIGN
assert level == 0;	WITHOUT_CLASSIFICATION	0.9999371552635107	WITHOUT_CLASSIFICATION	6.284473648930109E-5	DESIGN
look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9883355417140098	WITHOUT_CLASSIFICATION	0.01166445828599019	DESIGN
if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999133356914861	WITHOUT_CLASSIFICATION	8.666430851385678E-5	DESIGN
look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9940716693377416	WITHOUT_CLASSIFICATION	0.005928330662258397	DESIGN
All entries following removed node can stay in list, but all preceding ones need to be cloned.	WITHOUT_CLASSIFICATION	0.998356619229694	WITHOUT_CLASSIFICATION	0.0016433807703059161	DESIGN
required and optional only	WITHOUT_CLASSIFICATION	0.9999224646190114	WITHOUT_CLASSIFICATION	7.753538098868019E-5	DESIGN
do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9972649402407325	WITHOUT_CLASSIFICATION	0.002735059759267408	DESIGN
look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9896831670224067	WITHOUT_CLASSIFICATION	0.010316832977593308	DESIGN
set the binding's frame's "previous" file and line to current, so trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999840910180748	WITHOUT_CLASSIFICATION	1.590898192518902E-5	DESIGN
framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9998596466355592	WITHOUT_CLASSIFICATION	1.403533644408703E-4	DESIGN
look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9896831670224067	WITHOUT_CLASSIFICATION	0.010316832977593308	DESIGN
unframed invokers have no Ruby frames, so pull from class name but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9998534696310512	WITHOUT_CLASSIFICATION	1.4653036894892528E-4	DESIGN
try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9991617613151392	WITHOUT_CLASSIFICATION	8.38238684860782E-4	DESIGN
Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.999618624367706	WITHOUT_CLASSIFICATION	3.813756322939249E-4	DESIGN
Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9996707207349559	WITHOUT_CLASSIFICATION	3.292792650441452E-4	DESIGN
Determine what sort of assigner should be used for the provided 'iter' (e.g. block). Assigner provides just the right logic for assigning values to local parameters of the block. This method also has a second optimization which is to set 'noargblock' in the case that the block is a block which accepts no arguments. The primary reason for this second optimization is that in the case of a yield with a RubyArray we will bypass some logic processing the RubyArray into a proper form (only to then not do anythign with it). A secondary benefit is that a simple boolean seems to optimize by hotspot much faster than the zero arg assigner.	WITHOUT_CLASSIFICATION	0.9898197945864134	DESIGN	0.010180205413586565	WITHOUT_CLASSIFICATION
new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9767378455877436	WITHOUT_CLASSIFICATION	0.023262154412256465	DESIGN
No argument blocks	WITHOUT_CLASSIFICATION	0.9999871096918558	WITHOUT_CLASSIFICATION	1.2890308144205602E-5	DESIGN
just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9989493030856242	WITHOUT_CLASSIFICATION	0.0010506969143758353	DESIGN
Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.8580017993847912	WITHOUT_CLASSIFICATION	0.14199820061520893	DESIGN
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9995805952876962	WITHOUT_CLASSIFICATION	4.1940471230383675E-4	DESIGN
This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.7053592765023387	WITHOUT_CLASSIFICATION	0.29464072349766135	DESIGN
Highest reserved id	WITHOUT_CLASSIFICATION	0.9996636275715161	WITHOUT_CLASSIFICATION	3.3637242848397864E-4	DESIGN
binary typed calls	WITHOUT_CLASSIFICATION	0.9998452462771856	WITHOUT_CLASSIFICATION	1.5475372281441337E-4	DESIGN
id must always be even	WITHOUT_CLASSIFICATION	0.9987969375481697	WITHOUT_CLASSIFICATION	0.0012030624518302772	DESIGN
with block pass	WITHOUT_CLASSIFICATION	0.9999100011313181	WITHOUT_CLASSIFICATION	8.999886868186239E-5	DESIGN
no block	WITHOUT_CLASSIFICATION	0.9998993480825226	WITHOUT_CLASSIFICATION	1.0065191747750351E-4	DESIGN
with block literal (iter)	WITHOUT_CLASSIFICATION	0.9998649563118739	WITHOUT_CLASSIFICATION	1.350436881262048E-4	DESIGN
assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9297363488513085	WITHOUT_CLASSIFICATION	0.07026365114869151	DESIGN
if we have multiple asgn with just args, need a special type for that	WITHOUT_CLASSIFICATION	0.9693955233145819	WITHOUT_CLASSIFICATION	0.0306044766854182	DESIGN
&& args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9993869824936963	WITHOUT_CLASSIFICATION	6.130175063036718E-4	DESIGN
return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9995503259151526	WITHOUT_CLASSIFICATION	4.496740848474347E-4	DESIGN
ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9985424444762213	WITHOUT_CLASSIFICATION	0.001457555523778718	DESIGN
predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9960387917712481	WITHOUT_CLASSIFICATION	0.003961208228751965	DESIGN
fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9993849391436418	WITHOUT_CLASSIFICATION	6.150608563582527E-4	DESIGN
Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9965818394828865	WITHOUT_CLASSIFICATION	0.003418160517113619	DESIGN
Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.998738799248792	WITHOUT_CLASSIFICATION	0.0012612007512079687	DESIGN
Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9986608739975799	WITHOUT_CLASSIFICATION	0.0013391260024201862	DESIGN
Lastline	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9988410071143113	WITHOUT_CLASSIFICATION	0.0011589928856886517	DESIGN
bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9992856337549255	WITHOUT_CLASSIFICATION	7.143662450744405E-4	DESIGN
Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9921839346753613	WITHOUT_CLASSIFICATION	0.00781606532463871	DESIGN
try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9963991683201162	WITHOUT_CLASSIFICATION	0.0036008316798837605	DESIGN
Some helper functions:	WITHOUT_CLASSIFICATION	0.9985023584622518	WITHOUT_CLASSIFICATION	0.001497641537748167	DESIGN
silently ignore	WITHOUT_CLASSIFICATION	0.9993554906044354	WITHOUT_CLASSIFICATION	6.44509395564619E-4	DESIGN
used by compiler	WITHOUT_CLASSIFICATION	0.9990138094520107	WITHOUT_CLASSIFICATION	9.861905479892933E-4	DESIGN
initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9974936634532914	WITHOUT_CLASSIFICATION	0.0025063365467085704	DESIGN
INSTANCE VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9994072205555466	WITHOUT_CLASSIFICATION	5.927794444533294E-4	DESIGN
We need to guarantee that any existing reads of old Map can proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9988443353881585	WITHOUT_CLASSIFICATION	0.0011556646118415278	DESIGN
Single node on list	WITHOUT_CLASSIFICATION	0.9991348721990061	WITHOUT_CLASSIFICATION	8.651278009938891E-4	DESIGN
Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9967615445911842	WITHOUT_CLASSIFICATION	0.0032384554088158313	DESIGN
Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9998805921619164	WITHOUT_CLASSIFICATION	1.1940783808364825E-4	DESIGN
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9166636902339613	WITHOUT_CLASSIFICATION	0.0833363097660386	DESIGN
Note: In Ruby 1.9 all of this logic can go away since they will require explicit bindings for evals.	WITHOUT_CLASSIFICATION	0.985573038402928	WITHOUT_CLASSIFICATION	0.014426961597072102	DESIGN
We only define one special dynamic scope per 'logical' binding. So all bindings for the same scope should share the same dynamic scope. This allows multiple evals with different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.929433927970626	WITHOUT_CLASSIFICATION	0.07056607202937397	DESIGN
If the next scope out has the same binding scope as this scope it means we are evaling within an eval and in that case we should be sharing the same binding scope.	WITHOUT_CLASSIFICATION	0.9956394592408057	WITHOUT_CLASSIFICATION	0.0043605407591942955	DESIGN
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.998456653675308	WITHOUT_CLASSIFICATION	0.0015433463246920525	DESIGN
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.998456653675308	WITHOUT_CLASSIFICATION	0.0015433463246920525	DESIGN
nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.999917474581147	WITHOUT_CLASSIFICATION	8.25254188528912E-5	DESIGN
nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.999917474581147	WITHOUT_CLASSIFICATION	8.25254188528912E-5	DESIGN
nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.999917474581147	WITHOUT_CLASSIFICATION	8.25254188528912E-5	DESIGN
no extra args for rest	WITHOUT_CLASSIFICATION	0.9994826071124608	WITHOUT_CLASSIFICATION	5.173928875391431E-4	DESIGN
no extra args for rest	WITHOUT_CLASSIFICATION	0.9994826071124608	WITHOUT_CLASSIFICATION	5.173928875391431E-4	DESIGN
extra args for rest	WITHOUT_CLASSIFICATION	0.9993495198298772	WITHOUT_CLASSIFICATION	6.504801701228122E-4	DESIGN
extra args for rest	WITHOUT_CLASSIFICATION	0.9993495198298772	WITHOUT_CLASSIFICATION	6.504801701228122E-4	DESIGN
This is the proper behavior for all non-expanded assigners which have a pre > 0. The rest override this.	WITHOUT_CLASSIFICATION	0.9764318120467711	WITHOUT_CLASSIFICATION	0.02356818795322886	DESIGN
This is the proper behavior for all non-expanded assigners.	WITHOUT_CLASSIFICATION	0.9616507422301118	WITHOUT_CLASSIFICATION	0.03834925776988823	DESIGN
prefill ?	WITHOUT_CLASSIFICATION	0.9991466197614056	WITHOUT_CLASSIFICATION	8.533802385943717E-4	DESIGN
prefill ?	WITHOUT_CLASSIFICATION	0.9991466197614056	WITHOUT_CLASSIFICATION	8.533802385943717E-4	DESIGN
MUST be called from synchronized/locked block! should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9980608205047425	WITHOUT_CLASSIFICATION	0.0019391794952574946	DESIGN
retrieve method module name	WITHOUT_CLASSIFICATION	0.9951020618385851	WITHOUT_CLASSIFICATION	0.004897938161414923	DESIGN
call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9986334508420297	WITHOUT_CLASSIFICATION	0.0013665491579703012	DESIGN
if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9988864210101593	WITHOUT_CLASSIFICATION	0.0011135789898406418	DESIGN
if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9962067507954832	WITHOUT_CLASSIFICATION	0.00379324920451676	DESIGN
method object already present, push various args tc self klazz name	WITHOUT_CLASSIFICATION	0.9930239592703227	WITHOUT_CLASSIFICATION	0.006976040729677233	DESIGN
if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9992893518959541	WITHOUT_CLASSIFICATION	7.106481040457777E-4	DESIGN
invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9994502344251316	WITHOUT_CLASSIFICATION	5.497655748684543E-4	DESIGN
caller	WITHOUT_CLASSIFICATION	0.9993374122072763	WITHOUT_CLASSIFICATION	6.62587792723603E-4	DESIGN
calltype block	WITHOUT_CLASSIFICATION	0.9998930029832688	WITHOUT_CLASSIFICATION	1.0699701673121544E-4	DESIGN
if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999556599275268	WITHOUT_CLASSIFICATION	4.434007247324672E-5	DESIGN
load arity for check	WITHOUT_CLASSIFICATION	0.9998335482269496	WITHOUT_CLASSIFICATION	1.664517730504782E-4	DESIGN
throw	WITHOUT_CLASSIFICATION	0.9962230470433406	WITHOUT_CLASSIFICATION	0.003776952956659439	DESIGN
load arity for error	WITHOUT_CLASSIFICATION	0.9996617693155613	WITHOUT_CLASSIFICATION	3.382306844387707E-4	DESIGN
arity ok, continue	WITHOUT_CLASSIFICATION	0.9995468141470811	WITHOUT_CLASSIFICATION	4.5318585291892575E-4	DESIGN
InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9994072205555466	WITHOUT_CLASSIFICATION	5.927794444533294E-4	DESIGN
ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.997786658489551	WITHOUT_CLASSIFICATION	0.002213341510449163	DESIGN
FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9994072205555466	WITHOUT_CLASSIFICATION	5.927794444533294E-4	DESIGN
InvocationCallback	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9986828689501004	WITHOUT_CLASSIFICATION	0.001317131049899571	DESIGN
for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9997917691834013	WITHOUT_CLASSIFICATION	2.0823081659869378E-4	DESIGN
for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9995637106127393	WITHOUT_CLASSIFICATION	4.36289387260817E-4	DESIGN
load the encoding	WITHOUT_CLASSIFICATION	0.9999061800211252	WITHOUT_CLASSIFICATION	9.381997887484142E-5	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9976351697069	WITHOUT_CLASSIFICATION	0.0023648302930999636	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9976351697069	WITHOUT_CLASSIFICATION	0.0023648302930999636	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9976351697069	WITHOUT_CLASSIFICATION	0.0023648302930999636	DESIGN
IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9987281856709425	WITHOUT_CLASSIFICATION	0.001271814329057564	DESIGN
IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9987281856709425	WITHOUT_CLASSIFICATION	0.001271814329057564	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9987281856709425	WITHOUT_CLASSIFICATION	0.001271814329057564	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9987281856709425	WITHOUT_CLASSIFICATION	0.001271814329057564	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9987281856709425	WITHOUT_CLASSIFICATION	0.001271814329057564	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9984656547751134	WITHOUT_CLASSIFICATION	0.0015343452248865598	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9984656547751134	WITHOUT_CLASSIFICATION	0.0015343452248865598	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9984656547751134	WITHOUT_CLASSIFICATION	0.0015343452248865598	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9984656547751134	WITHOUT_CLASSIFICATION	0.0015343452248865598	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9984656547751134	WITHOUT_CLASSIFICATION	0.0015343452248865598	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9984656547751134	WITHOUT_CLASSIFICATION	0.0015343452248865598	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9984656547751134	WITHOUT_CLASSIFICATION	0.0015343452248865598	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9984656547751134	WITHOUT_CLASSIFICATION	0.0015343452248865598	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9984656547751134	WITHOUT_CLASSIFICATION	0.0015343452248865598	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9984656547751134	WITHOUT_CLASSIFICATION	0.0015343452248865598	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9984656547751134	WITHOUT_CLASSIFICATION	0.0015343452248865598	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9984656547751134	WITHOUT_CLASSIFICATION	0.0015343452248865598	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9984656547751134	WITHOUT_CLASSIFICATION	0.0015343452248865598	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9984656547751134	WITHOUT_CLASSIFICATION	0.0015343452248865598	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9984656547751134	WITHOUT_CLASSIFICATION	0.0015343452248865598	DESIGN
If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9995280664709062	WITHOUT_CLASSIFICATION	4.7193352909385213E-4	DESIGN
BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9994072205555466	WITHOUT_CLASSIFICATION	5.927794444533294E-4	DESIGN
ThreadContext	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9986828689501004	WITHOUT_CLASSIFICATION	0.001317131049899571	DESIGN
Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.999721149621177	WITHOUT_CLASSIFICATION	2.7885037882311353E-4	DESIGN
RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9986828689501004	WITHOUT_CLASSIFICATION	0.001317131049899571	DESIGN
add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9998787088206085	WITHOUT_CLASSIFICATION	1.2129117939147001E-4	DESIGN
if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9995571107558455	WITHOUT_CLASSIFICATION	4.428892441543775E-4	DESIGN
wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9980718001472966	WITHOUT_CLASSIFICATION	0.001928199852703442	DESIGN
add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9996927578365761	WITHOUT_CLASSIFICATION	3.072421634239879E-4	DESIGN
Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9953208807481101	WITHOUT_CLASSIFICATION	0.0046791192518898005	DESIGN
"." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9446234372285489	WITHOUT_CLASSIFICATION	0.05537656277145101	DESIGN
Add 1.8 libs	WITHOUT_CLASSIFICATION	0.999790951979297	WITHOUT_CLASSIFICATION	2.0904802070298328E-4	DESIGN
Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999185242212055	WITHOUT_CLASSIFICATION	8.14757787944939E-5	DESIGN
Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9992514765576521	WITHOUT_CLASSIFICATION	7.485234423479382E-4	DESIGN
We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9887272139849865	WITHOUT_CLASSIFICATION	0.011272786015013405	DESIGN
If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9990555132544909	WITHOUT_CLASSIFICATION	9.444867455090456E-4	DESIGN
quietly try to load the class	WITHOUT_CLASSIFICATION	0.9994474859058474	WITHOUT_CLASSIFICATION	5.52514094152641E-4	DESIGN
If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9996646444925166	WITHOUT_CLASSIFICATION	3.3535550748338584E-4	DESIGN
no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9971503279499416	WITHOUT_CLASSIFICATION	0.002849672050058242	DESIGN
if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9955260016286405	WITHOUT_CLASSIFICATION	0.0044739983713595185	DESIGN
signed short, big-endian	WITHOUT_CLASSIFICATION	0.9994105316463773	WITHOUT_CLASSIFICATION	5.894683536226677E-4	DESIGN
source extensions	WITHOUT_CLASSIFICATION	0.9998328652113188	WITHOUT_CLASSIFICATION	1.6713478868123633E-4	DESIGN
We don't support .so, but some stdlib require .so directly replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.7133328713349001	WITHOUT_CLASSIFICATION	0.2866671286650999	DESIGN
This code exploits the fact that all .jar files will be found for the JarredScript feature. This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.5567017422163872	WITHOUT_CLASSIFICATION	0.4432982577836127	DESIGN
Make the class name look nice, by splitting on _ and capitalize each segment, then joining the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9998879073110105	WITHOUT_CLASSIFICATION	1.1209268898950435E-4	DESIGN
It's _really_ expensive to check that the class actually exists in the Jar, so we don't do that now.	WITHOUT_CLASSIFICATION	0.9843919728151997	WITHOUT_CLASSIFICATION	0.015608027184800284	DESIGN
trim extension to try other options	WITHOUT_CLASSIFICATION	0.9969802230066005	WITHOUT_CLASSIFICATION	0.003019776993399563	DESIGN
extension extensions	WITHOUT_CLASSIFICATION	0.9993271273338367	WITHOUT_CLASSIFICATION	6.728726661632035E-4	DESIGN
unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.998272313084622	WITHOUT_CLASSIFICATION	0.0017276869153779162	DESIGN
try all extensions	WITHOUT_CLASSIFICATION	0.9998383778724799	WITHOUT_CLASSIFICATION	1.6162212752014014E-4	DESIGN
if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9993238540106036	WITHOUT_CLASSIFICATION	6.761459893963503E-4	DESIGN
unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9972963307665111	WITHOUT_CLASSIFICATION	0.002703669233488851	DESIGN
try only literal search	WITHOUT_CLASSIFICATION	0.9999541964707408	WITHOUT_CLASSIFICATION	4.580352925911988E-5	DESIGN
attempt to load the found library	WITHOUT_CLASSIFICATION	0.997815719387145	WITHOUT_CLASSIFICATION	0.0021842806128549806	DESIGN
otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999490534373405	WITHOUT_CLASSIFICATION	5.094656265945357E-5	DESIGN
allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9934785986973275	WITHOUT_CLASSIFICATION	0.006521401302672544	DESIGN
Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9908323563255098	WITHOUT_CLASSIFICATION	0.009167643674490219	DESIGN
check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999889749464823	WITHOUT_CLASSIFICATION	1.1025053517755395E-5	DESIGN
if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9998031199902057	WITHOUT_CLASSIFICATION	1.968800097942395E-4	DESIGN
end suffix iteration	WITHOUT_CLASSIFICATION	0.9998692676089431	WITHOUT_CLASSIFICATION	1.3073239105682846E-4	DESIGN
if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9976893044362308	WITHOUT_CLASSIFICATION	0.0023106955637690932	DESIGN
if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9997597257226045	WITHOUT_CLASSIFICATION	2.4027427739557652E-4	DESIGN
we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9991514958240737	WITHOUT_CLASSIFICATION	8.485041759261756E-4	DESIGN
we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9991514958240737	WITHOUT_CLASSIFICATION	8.485041759261756E-4	DESIGN
it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9948296543137334	WITHOUT_CLASSIFICATION	0.0051703456862666735	DESIGN
it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9948296543137334	WITHOUT_CLASSIFICATION	0.0051703456862666735	DESIGN
prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9985625091160623	WITHOUT_CLASSIFICATION	0.0014374908839377952	DESIGN
prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9985625091160623	WITHOUT_CLASSIFICATION	0.0014374908839377952	DESIGN
actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9998097518759558	WITHOUT_CLASSIFICATION	1.902481240441855E-4	DESIGN
handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9994437246870234	WITHOUT_CLASSIFICATION	5.562753129766981E-4	DESIGN
if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9998101065746621	WITHOUT_CLASSIFICATION	1.8989342533789797E-4	DESIGN
if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999902326036514	WITHOUT_CLASSIFICATION	9.767396348549909E-6	DESIGN
otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9960988207832859	WITHOUT_CLASSIFICATION	0.0039011792167141083	DESIGN
Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9956983276742333	WITHOUT_CLASSIFICATION	0.004301672325766697	DESIGN
signed short, native	WITHOUT_CLASSIFICATION	0.9996475146320349	WITHOUT_CLASSIFICATION	3.5248536796496865E-4	DESIGN
If we fail to find as a normal Ruby script, we try to find as an extension, checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999746959728579	WITHOUT_CLASSIFICATION	2.5304027142098377E-5	DESIGN
write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9680415553893957	WITHOUT_CLASSIFICATION	0.03195844461060425	DESIGN
if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9998090943389056	WITHOUT_CLASSIFICATION	1.9090566109433442E-4	DESIGN
Look in classpath next (we do not use File as a test since UNC names will match) Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9995868142087309	WITHOUT_CLASSIFICATION	4.131857912691115E-4	DESIGN
Directories and unavailable resources are not able to open a stream.	WITHOUT_CLASSIFICATION	0.9965340906394936	WITHOUT_CLASSIFICATION	0.003465909360506438	DESIGN
Try to load from classpath without prefix. "A/b.rb" will not load as "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9980567376787844	WITHOUT_CLASSIFICATION	0.0019432623212155549	DESIGN
object has instance vars and isn't a class, get a snapshot to be marshalled and output the ivar header here	WITHOUT_CLASSIFICATION	0.9930201728022915	WITHOUT_CLASSIFICATION	0.006979827197708514	DESIGN
flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9971191161317171	WITHOUT_CLASSIFICATION	0.0028808838682829368	DESIGN
write('S');	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
switch on the object's native type. This allows use-defined classes that have extended core native types to piggyback on their marshalling logic.	WITHOUT_CLASSIFICATION	0.9974300304473411	WITHOUT_CLASSIFICATION	0.002569969552658906	DESIGN
object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.990006217440555	WITHOUT_CLASSIFICATION	0.009993782559445039	DESIGN
We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9963543700138952	WITHOUT_CLASSIFICATION	0.0036456299861049655	DESIGN
w_symbol	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
w_unique	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9994767282917821	WITHOUT_CLASSIFICATION	5.232717082178363E-4	DESIGN
Major Minor	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9997878016625158	WITHOUT_CLASSIFICATION	2.1219833748427612E-4	DESIGN
"hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9990960256513337	WITHOUT_CLASSIFICATION	9.039743486662165E-4	DESIGN
All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9991882967093604	WITHOUT_CLASSIFICATION	8.117032906396697E-4	DESIGN
sic	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9997685292075458	WITHOUT_CLASSIFICATION	2.3147079245432623E-4	DESIGN
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9997685292075458	WITHOUT_CLASSIFICATION	2.3147079245432623E-4	DESIGN
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9997685292075458	WITHOUT_CLASSIFICATION	2.3147079245432623E-4	DESIGN
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9977696235079971	WITHOUT_CLASSIFICATION	0.0022303764920028465	DESIGN
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9977696235079971	WITHOUT_CLASSIFICATION	0.0022303764920028465	DESIGN
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9995805952876962	WITHOUT_CLASSIFICATION	4.1940471230383675E-4	DESIGN
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9995805952876962	WITHOUT_CLASSIFICATION	4.1940471230383675E-4	DESIGN
If we are setting post arguments we can assume there are no pre or others	WITHOUT_CLASSIFICATION	0.9996080310112097	WITHOUT_CLASSIFICATION	3.919689887903799E-4	DESIGN
XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.99889234975623	WITHOUT_CLASSIFICATION	0.001107650243770015	DESIGN
unsigned short, native	WITHOUT_CLASSIFICATION	0.9994759192671505	WITHOUT_CLASSIFICATION	5.240807328494446E-4	DESIGN
int, native long, native	WITHOUT_CLASSIFICATION	0.9996354854283636	WITHOUT_CLASSIFICATION	3.645145716365059E-4	DESIGN
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9997685292075458	WITHOUT_CLASSIFICATION	2.3147079245432623E-4	DESIGN
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9997685292075458	WITHOUT_CLASSIFICATION	2.3147079245432623E-4	DESIGN
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9997685292075458	WITHOUT_CLASSIFICATION	2.3147079245432623E-4	DESIGN
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9977696235079971	WITHOUT_CLASSIFICATION	0.0022303764920028465	DESIGN
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9977696235079971	WITHOUT_CLASSIFICATION	0.0022303764920028465	DESIGN
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9977696235079971	WITHOUT_CLASSIFICATION	0.0022303764920028465	DESIGN
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9995805952876962	WITHOUT_CLASSIFICATION	4.1940471230383675E-4	DESIGN
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9995805952876962	WITHOUT_CLASSIFICATION	4.1940471230383675E-4	DESIGN
Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999070848416206	WITHOUT_CLASSIFICATION	9.291515837939322E-5	DESIGN
Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9991600632682104	WITHOUT_CLASSIFICATION	8.399367317895669E-4	DESIGN
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9836828208626694	WITHOUT_CLASSIFICATION	0.016317179137330502	DESIGN
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9836828208626694	WITHOUT_CLASSIFICATION	0.016317179137330502	DESIGN
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9836828208626694	WITHOUT_CLASSIFICATION	0.016317179137330502	DESIGN
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9836828208626694	WITHOUT_CLASSIFICATION	0.016317179137330502	DESIGN
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9836828208626694	WITHOUT_CLASSIFICATION	0.016317179137330502	DESIGN
SunSignalFacade	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
All braces pushed..	WITHOUT_CLASSIFICATION	0.9997908135357372	WITHOUT_CLASSIFICATION	2.0918646426273764E-4	DESIGN
failed : try next recursion	WITHOUT_CLASSIFICATION	0.9698620063466478	WITHOUT_CLASSIFICATION	0.030137993653352197	DESIGN
leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9987569876788166	WITHOUT_CLASSIFICATION	0.0012430123211834702	DESIGN
are we at ''	WITHOUT_CLASSIFICATION	0.9987713249007906	WITHOUT_CLASSIFICATION	0.0012286750992093784	DESIGN
No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.996238078784609	WITHOUT_CLASSIFICATION	0.0037619212153910436	DESIGN
not enough bytes	WITHOUT_CLASSIFICATION	0.9997133741247132	WITHOUT_CLASSIFICATION	2.866258752867849E-4	DESIGN
Get index of last read byte	WITHOUT_CLASSIFICATION	0.9935481430394602	WITHOUT_CLASSIFICATION	0.006451856960539904	DESIGN
skip inner braces	WITHOUT_CLASSIFICATION	0.9998923654282343	WITHOUT_CLASSIFICATION	1.0763457176560145E-4	DESIGN
Process {}'s (example: Dir.glob("{jruby,jython}/README")	WITHOUT_CLASSIFICATION	0.9990135306629174	WITHOUT_CLASSIFICATION	9.864693370825388E-4	DESIGN
complete, according to Posix.2	WITHOUT_CLASSIFICATION	0.9989550314847925	WITHOUT_CLASSIFICATION	0.0010449685152074857	DESIGN
Only accept an open brace if there is a close	WITHOUT_CLASSIFICATION	0.9999651356103546	WITHOUT_CLASSIFICATION	3.486438964538074E-5	DESIGN
brace to match it. Bracket expressions must be	WITHOUT_CLASSIFICATION	0.9979495720701278	WITHOUT_CLASSIFICATION	0.002050427929872091	DESIGN
index of left-most brace index of right-most brace	WITHOUT_CLASSIFICATION	0.9719900466566724	WITHOUT_CLASSIFICATION	0.028009953343327513	DESIGN
Length check is a hack. We should not be reeiving "" as a filename ever.	WITHOUT_CLASSIFICATION	0.9982660059555004	WITHOUT_CLASSIFICATION	0.0017339940444995058	DESIGN
NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9991995756772868	WITHOUT_CLASSIFICATION	8.004243227132201E-4	DESIGN
NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9991995756772868	WITHOUT_CLASSIFICATION	8.004243227132201E-4	DESIGN
NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9991995756772868	WITHOUT_CLASSIFICATION	8.004243227132201E-4	DESIGN
Pickaxe says @ must be followed by a name character, but MRI does not require this.	WITHOUT_CLASSIFICATION	0.9853439014200028	WITHOUT_CLASSIFICATION	0.014656098579997221	DESIGN
Pickaxe says @@ must be followed by a name character, but MRI does not require this.	WITHOUT_CLASSIFICATION	0.9860616840991029	WITHOUT_CLASSIFICATION	0.013938315900897238	DESIGN
SimpleSampler	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
convert into longs, returning unsigned 64-bit values as signed longs ( num2long raises a RangeError on values > Long.MAX_VALUE )	WITHOUT_CLASSIFICATION	0.9957809106821273	WITHOUT_CLASSIFICATION	0.004219089317872735	DESIGN
b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9984242934679703	WITHOUT_CLASSIFICATION	0.0015757065320297129	DESIGN
single precision, little-endian	WITHOUT_CLASSIFICATION	0.9990926880463409	WITHOUT_CLASSIFICATION	9.073119536589683E-4	DESIGN
single precision, big-endian	WITHOUT_CLASSIFICATION	0.9995917532073139	WITHOUT_CLASSIFICATION	4.082467926861257E-4	DESIGN
single precision, native	WITHOUT_CLASSIFICATION	0.9996370458675778	WITHOUT_CLASSIFICATION	3.6295413242212656E-4	DESIGN
single precision, native single precision, native	WITHOUT_CLASSIFICATION	0.9991933044646998	WITHOUT_CLASSIFICATION	8.066955353003381E-4	DESIGN
double precision, little-endian	WITHOUT_CLASSIFICATION	0.9997810911893918	WITHOUT_CLASSIFICATION	2.189088106081651E-4	DESIGN
double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999015388680491	WITHOUT_CLASSIFICATION	9.846113195088481E-5	DESIGN
double precision, native	WITHOUT_CLASSIFICATION	0.999912465580462	WITHOUT_CLASSIFICATION	8.753441953797618E-5	DESIGN
signed short, little-endian	WITHOUT_CLASSIFICATION	0.9994105316463773	WITHOUT_CLASSIFICATION	5.894683536226677E-4	DESIGN
signed char	WITHOUT_CLASSIFICATION	0.9996283752560617	WITHOUT_CLASSIFICATION	3.71624743938249E-4	DESIGN
unsigned char	WITHOUT_CLASSIFICATION	0.9996283752560617	WITHOUT_CLASSIFICATION	3.71624743938249E-4	DESIGN
long, little-endian	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
long, big-endian	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
unsigned int, native	WITHOUT_CLASSIFICATION	0.9997548481963118	WITHOUT_CLASSIFICATION	2.4515180368828404E-4	DESIGN
int, native	WITHOUT_CLASSIFICATION	0.9997548481963118	WITHOUT_CLASSIFICATION	2.4515180368828404E-4	DESIGN
64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.999004531168571	WITHOUT_CLASSIFICATION	9.954688314290313E-4	DESIGN
How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9923101914461605	WITHOUT_CLASSIFICATION	0.007689808553839389	DESIGN
See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9996994895999242	WITHOUT_CLASSIFICATION	3.005104000758855E-4	DESIGN
Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9846106000529828	WITHOUT_CLASSIFICATION	0.01538939994701711	DESIGN
Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9994025718147868	WITHOUT_CLASSIFICATION	5.974281852131221E-4	DESIGN
obtain a	WITHOUT_CLASSIFICATION	0.999043461872388	WITHOUT_CLASSIFICATION	9.565381276120516E-4	DESIGN
obtain b	WITHOUT_CLASSIFICATION	0.9995849758559685	WITHOUT_CLASSIFICATION	4.150241440314594E-4	DESIGN
obtain c	WITHOUT_CLASSIFICATION	0.9994850413532447	WITHOUT_CLASSIFICATION	5.14958646755338E-4	DESIGN
obtain d	WITHOUT_CLASSIFICATION	0.9993632533159328	WITHOUT_CLASSIFICATION	6.367466840671621E-4	DESIGN
encode.limit() -	WITHOUT_CLASSIFICATION	0.9992070970748835	WITHOUT_CLASSIFICATION	7.929029251164859E-4	DESIGN
1	WITHOUT_CLASSIFICATION	0.9993565964668686	WITHOUT_CLASSIFICATION	6.43403533131399E-4	DESIGN
2	WITHOUT_CLASSIFICATION	0.9995544154118896	WITHOUT_CLASSIFICATION	4.455845881103054E-4	DESIGN
3	WITHOUT_CLASSIFICATION	0.998170713293408	WITHOUT_CLASSIFICATION	0.0018292867065919757	DESIGN
4	WITHOUT_CLASSIFICATION	0.9990315733075509	WITHOUT_CLASSIFICATION	9.684266924491671E-4	DESIGN
5	WITHOUT_CLASSIFICATION	0.9995834862407321	WITHOUT_CLASSIFICATION	4.165137592678029E-4	DESIGN
6	WITHOUT_CLASSIFICATION	0.9995419507860904	WITHOUT_CLASSIFICATION	4.580492139094672E-4	DESIGN
7	WITHOUT_CLASSIFICATION	0.9993114466387589	WITHOUT_CLASSIFICATION	6.885533612410876E-4	DESIGN
Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9997748518992513	WITHOUT_CLASSIFICATION	2.2514810074883402E-4	DESIGN
Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9998524914390519	WITHOUT_CLASSIFICATION	1.4750856094809396E-4	DESIGN
In case when the number of occurences is explicitly specified, we have to read up the remaining garbage after the '\0' to satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9997453507721852	WITHOUT_CLASSIFICATION	2.546492278148537E-4	DESIGN
normal exit, this should be faster than a test at each iterations for string with more than about 40 char	WITHOUT_CLASSIFICATION	0.949113833474918	WITHOUT_CLASSIFICATION	0.05088616652508196	DESIGN
We encountered '\0' when were reading the buffer above, increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.999967782353443	WITHOUT_CLASSIFICATION	3.221764655697775E-5	DESIGN
MRI behavior: Contrary to what seems to be logical, when '' is given, MRI calculates the distance to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9977306409565886	WITHOUT_CLASSIFICATION	0.002269359043411371	DESIGN
Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9795338459899339	WITHOUT_CLASSIFICATION	0.02046615401006611	DESIGN
'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9978702072125063	WITHOUT_CLASSIFICATION	0.0021297927874937487	DESIGN
if the low bit is set set the high bit of the result	WITHOUT_CLASSIFICATION	0.997960904850648	WITHOUT_CLASSIFICATION	0.0020390951493518897	DESIGN
if the index is not a multiple of 8, we are not on a byte boundary shift the byte	WITHOUT_CLASSIFICATION	0.8118910358690737	WITHOUT_CLASSIFICATION	0.18810896413092623	DESIGN
if the length is not a multiple of 8 we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9818988664674566	WITHOUT_CLASSIFICATION	0.018101133532543442	DESIGN
if the length is not a multiple of 8 we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9818988664674566	WITHOUT_CLASSIFICATION	0.018101133532543442	DESIGN
do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.6716008388079222	WITHOUT_CLASSIFICATION	0.3283991611920778	DESIGN
we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.998947499847581	WITHOUT_CLASSIFICATION	0.0010525001524190147	DESIGN
if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.8133738470816819	WITHOUT_CLASSIFICATION	0.1866261529183181	DESIGN
this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9987834965140319	WITHOUT_CLASSIFICATION	0.0012165034859680562	DESIGN
we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9994304226425696	WITHOUT_CLASSIFICATION	5.695773574303182E-4	DESIGN
populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9986958828057035	WITHOUT_CLASSIFICATION	0.0013041171942965238	DESIGN
are we recursing?	WITHOUT_CLASSIFICATION	0.9993005284236356	WITHOUT_CLASSIFICATION	6.994715763643507E-4	DESIGN
snip off ruby or jruby command from list of arguments leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9995256308261492	WITHOUT_CLASSIFICATION	4.743691738507647E-4	DESIGN
default PidGetter	WITHOUT_CLASSIFICATION	0.9997975935657242	WITHOUT_CLASSIFICATION	2.0240643427584467E-4	DESIGN
ignore and try windows version	WITHOUT_CLASSIFICATION	0.9996509131881012	WITHOUT_CLASSIFICATION	3.490868118987276E-4	DESIGN
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9976958273393514	WITHOUT_CLASSIFICATION	0.0023041726606485933	DESIGN
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9976958273393514	WITHOUT_CLASSIFICATION	0.0023041726606485933	DESIGN
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9976958273393514	WITHOUT_CLASSIFICATION	0.0023041726606485933	DESIGN
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9976958273393514	WITHOUT_CLASSIFICATION	0.0023041726606485933	DESIGN
try both	WITHOUT_CLASSIFICATION	0.9997055645580208	WITHOUT_CLASSIFICATION	2.944354419792148E-4	DESIGN
just unix	WITHOUT_CLASSIFICATION	0.9989078109591072	WITHOUT_CLASSIFICATION	0.001092189040892776	DESIGN
just windows	WITHOUT_CLASSIFICATION	0.9995108277372897	WITHOUT_CLASSIFICATION	4.891722627102219E-4	DESIGN
neither	WITHOUT_CLASSIFICATION	0.9993035974288038	WITHOUT_CLASSIFICATION	6.964025711961476E-4	DESIGN
CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.5094063201278777	WITHOUT_CLASSIFICATION	0.4905936798721223	DESIGN
single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.999301675365178	WITHOUT_CLASSIFICATION	6.983246348219906E-4	DESIGN
direct invocation of the command	WITHOUT_CLASSIFICATION	0.9950736543933366	WITHOUT_CLASSIFICATION	0.004926345606663353	DESIGN
break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9988307449604454	WITHOUT_CLASSIFICATION	0.001169255039554591	DESIGN
break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9988307449604454	WITHOUT_CLASSIFICATION	0.001169255039554591	DESIGN
close process output See JRUBY-3405; hooking up to parent process stdin caused problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999278891644194	WITHOUT_CLASSIFICATION	7.211083558067155E-5	DESIGN
ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9927096727476159	WITHOUT_CLASSIFICATION	0.007290327252384129	DESIGN
processes seem to have some peculiar locking sequences, so we need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9997576630562494	WITHOUT_CLASSIFICATION	2.4233694375060182E-4	DESIGN
popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9983599302993039	WITHOUT_CLASSIFICATION	0.001640069700696156	DESIGN
popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9983599302993039	WITHOUT_CLASSIFICATION	0.001640069700696156	DESIGN
popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9984892504131527	WITHOUT_CLASSIFICATION	0.0015107495868472273	DESIGN
no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9984676859410755	WITHOUT_CLASSIFICATION	0.001532314058924549	DESIGN
no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9984676859410755	WITHOUT_CLASSIFICATION	0.001532314058924549	DESIGN
execute command with sh -c this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.88983976562824	WITHOUT_CLASSIFICATION	0.11016023437175998	DESIGN
We need to close the out, since some processes would just wait for the stream to be closed before they process its content, and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9996459288004743	WITHOUT_CLASSIFICATION	3.540711995255937E-4	DESIGN
we only close out if it's the slave stream, to avoid closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9998656083423446	WITHOUT_CLASSIFICATION	1.3439165765543123E-4	DESIGN
The assumption here is that the 'in' stream provides proper available() support. If available() always returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9769499054773071	WITHOUT_CLASSIFICATION	0.023050094522692965	DESIGN
Force t3 to quit, just in case if it's stuck. Note: On some platforms, even interrupt might not have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.999746060910251	WITHOUT_CLASSIFICATION	2.5393908974909125E-4	DESIGN
Check for special shell characters [<>|] at the beginning and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999770513046701	WITHOUT_CLASSIFICATION	2.2948695329849936E-5	DESIGN
Note: this method produces meaningful results only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9973458890376077	WITHOUT_CLASSIFICATION	0.002654110962392275	DESIGN
sequential	WITHOUT_CLASSIFICATION	0.9995875921054369	WITHOUT_CLASSIFICATION	4.124078945630651E-4	DESIGN
reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999376827182856	WITHOUT_CLASSIFICATION	6.23172817144026E-5	DESIGN
do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9987694537565107	WITHOUT_CLASSIFICATION	0.0012305462434892185	DESIGN
if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9848094915230858	WITHOUT_CLASSIFICATION	0.015190508476914227	DESIGN
SignalFacade	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9627352594005274	WITHOUT_CLASSIFICATION	0.03726474059947253	DESIGN
this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.97323772777763	WITHOUT_CLASSIFICATION	0.02676227222237001	DESIGN
basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9864531408538144	WITHOUT_CLASSIFICATION	0.013546859146185669	DESIGN
not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9995755509196059	WITHOUT_CLASSIFICATION	4.2444908039413344E-4	DESIGN
Args	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
static methods only	WITHOUT_CLASSIFICATION	0.9997904127634546	WITHOUT_CLASSIFICATION	2.0958723654537816E-4	DESIGN
System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9977169965678687	WITHOUT_CLASSIFICATION	0.0022830034321312358	DESIGN
MRI 1.8.6 behavior: null byte after '%' leads to "%" string. Null byte in other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9908302836679036	WITHOUT_CLASSIFICATION	0.009169716332096414	DESIGN
last index (+1) accessed by next() last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9719665970360729	WITHOUT_CLASSIFICATION	0.028033402963927114	DESIGN
Special form of sprintf that returns a RubyString and handles tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9998770457787938	WITHOUT_CLASSIFICATION	1.2295422120634392E-4	DESIGN
Special form of sprintf that returns a RubyString and handles tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9998473753620878	WITHOUT_CLASSIFICATION	1.5262463791229248E-4	DESIGN
MRI doesn't flag it as an error if width is given multiple times as a number (but it does for )	WITHOUT_CLASSIFICATION	0.9988839358161103	WITHOUT_CLASSIFICATION	0.001116064183889715	DESIGN
let the width (if any), get processed in the next loop, so any leading 0 gets treated correctly	WITHOUT_CLASSIFICATION	0.9996078566133542	WITHOUT_CLASSIFICATION	3.9214338664587305E-4	DESIGN
MRI 1.8.5-p12 doesn't support 1-char strings, but YARV 0.4.1 does. I don't think it hurts to include this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.6746160278470251	WITHOUT_CLASSIFICATION	0.32538397215297493	DESIGN
'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9993928833381537	WITHOUT_CLASSIFICATION	6.071166618463439E-4	DESIGN
'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9995726625559858	WITHOUT_CLASSIFICATION	4.273374440141557E-4	DESIGN
We depart here from strict adherence to MRI code, as MRI uses C-sprintf, in part, to format numeric output, while we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.5161211587296561	DESIGN	0.4838788412703439	WITHOUT_CLASSIFICATION
skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9994714184254541	WITHOUT_CLASSIFICATION	5.285815745459449E-4	DESIGN
..	WITHOUT_CLASSIFICATION	0.9977392502946307	WITHOUT_CLASSIFICATION	0.002260749705369345	DESIGN
the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9985485256398733	WITHOUT_CLASSIFICATION	0.0014514743601266868	DESIGN
FIXME: what is correct 'recv' argument? (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.6355515848561863	DESIGN	0.3644484151438135	WITHOUT_CLASSIFICATION
gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9984800991439436	WITHOUT_CLASSIFICATION	0.0015199008560563083	DESIGN
OK, we now have the significand in digits[0...nDigits] and the exponent in exponent. We're ready to format.	WITHOUT_CLASSIFICATION	0.9972653207534599	WITHOUT_CLASSIFICATION	0.0027346792465401414	DESIGN
intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9959304014310494	WITHOUT_CLASSIFICATION	0.004069598568950677	DESIGN
intDigits = 1;	WITHOUT_CLASSIFICATION	0.9999521057016343	WITHOUT_CLASSIFICATION	4.7894298365795306E-5	DESIGN
System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9977169965678687	WITHOUT_CLASSIFICATION	0.0022830034321312358	DESIGN
System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9977784168927967	WITHOUT_CLASSIFICATION	0.0022215831072033604	DESIGN
intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9959304014310494	WITHOUT_CLASSIFICATION	0.004069598568950677	DESIGN
intDigits = 1;	WITHOUT_CLASSIFICATION	0.9999521057016343	WITHOUT_CLASSIFICATION	4.7894298365795306E-5	DESIGN
precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9977767112022808	WITHOUT_CLASSIFICATION	0.002223288797719177	DESIGN
deal with length/width	WITHOUT_CLASSIFICATION	0.9994463565116061	WITHOUT_CLASSIFICATION	5.536434883939255E-4	DESIGN
deal with length/width	WITHOUT_CLASSIFICATION	0.9994463565116061	WITHOUT_CLASSIFICATION	5.536434883939255E-4	DESIGN
first digit is always printed	WITHOUT_CLASSIFICATION	0.9992354319597114	WITHOUT_CLASSIFICATION	7.645680402885107E-4	DESIGN
MRI behavior: Be default, 2 digits in the exponent. Use 3 digits only when necessary. See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9737385419902628	WITHOUT_CLASSIFICATION	0.02626145800973725	DESIGN
5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999307755706062	WITHOUT_CLASSIFICATION	6.922442939381381E-5	DESIGN
4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9998389737168825	WITHOUT_CLASSIFICATION	1.6102628311763363E-4	DESIGN
in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.982513095952093	WITHOUT_CLASSIFICATION	0.017486904047907034	DESIGN
MRI behavior: In this mode trailing zeroes are removed: 1.500E+05 -> 1.5E+05	WITHOUT_CLASSIFICATION	0.9838769943125831	WITHOUT_CLASSIFICATION	0.01612300568741685	DESIGN
'.' is printed	WITHOUT_CLASSIFICATION	0.9991300697552343	WITHOUT_CLASSIFICATION	8.699302447657082E-4	DESIGN
all precision numebers printed	WITHOUT_CLASSIFICATION	0.9994902414821044	WITHOUT_CLASSIFICATION	5.097585178955842E-4	DESIGN
now some data...	WITHOUT_CLASSIFICATION	0.9995689927055705	WITHOUT_CLASSIFICATION	4.3100729442948894E-4	DESIGN
'.'	WITHOUT_CLASSIFICATION	0.9993105150717201	WITHOUT_CLASSIFICATION	6.894849282798918E-4	DESIGN
decimal form, like (but not just like!) 'f'	WITHOUT_CLASSIFICATION	0.9973542451492762	WITHOUT_CLASSIFICATION	0.002645754850723847	DESIGN
digits array shifted, update all	WITHOUT_CLASSIFICATION	0.999769086009136	WITHOUT_CLASSIFICATION	2.3091399086391052E-4	DESIGN
will have a trailing '.' g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9995942066478609	WITHOUT_CLASSIFICATION	4.057933521389969E-4	DESIGN
s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9998622182077173	WITHOUT_CLASSIFICATION	1.377817922827517E-4	DESIGN
s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9998622182077173	WITHOUT_CLASSIFICATION	1.377817922827517E-4	DESIGN
always need at least a 0	WITHOUT_CLASSIFICATION	0.9930686104698437	WITHOUT_CLASSIFICATION	0.006931389530156217	DESIGN
always need at least a 0	WITHOUT_CLASSIFICATION	0.9930686104698437	WITHOUT_CLASSIFICATION	0.006931389530156217	DESIGN
digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9998112360986484	WITHOUT_CLASSIFICATION	1.8876390135165759E-4	DESIGN
(1|intlen).prec	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
(1|intlen)	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
will have a trailing '.'	WITHOUT_CLASSIFICATION	0.999623399551939	WITHOUT_CLASSIFICATION	3.7660044806097314E-4	DESIGN
fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9997503360292131	WITHOUT_CLASSIFICATION	2.4966397078683423E-4	DESIGN
System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9977169965678687	WITHOUT_CLASSIFICATION	0.0022830034321312358	DESIGN
5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999307755706062	WITHOUT_CLASSIFICATION	6.922442939381381E-5	DESIGN
4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9998389737168825	WITHOUT_CLASSIFICATION	1.6102628311763363E-4	DESIGN
now some data...	WITHOUT_CLASSIFICATION	0.9995689927055705	WITHOUT_CLASSIFICATION	4.3100729442948894E-4	DESIGN
'.'	WITHOUT_CLASSIFICATION	0.9993105150717201	WITHOUT_CLASSIFICATION	6.894849282798918E-4	DESIGN
equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9998433724483192	WITHOUT_CLASSIFICATION	1.566275516808464E-4	DESIGN
'.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.999052578525296	WITHOUT_CLASSIFICATION	9.474214747039582E-4	DESIGN
\v	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
dangling '%' char	WITHOUT_CLASSIFICATION	0.9996283752560617	WITHOUT_CLASSIFICATION	3.71624743938249E-4	DESIGN
main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9997049581459748	WITHOUT_CLASSIFICATION	2.950418540251272E-4	DESIGN
debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9994706575442016	WITHOUT_CLASSIFICATION	5.293424557984113E-4	DESIGN
MRI rounds up on nnn5nnn, but not nnn5 -- except for when they do	WITHOUT_CLASSIFICATION	0.996337596458252	WITHOUT_CLASSIFICATION	0.0036624035417480326	DESIGN
"%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9996037870848186	WITHOUT_CLASSIFICATION	3.9621291518140636E-4	DESIGN
limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9998578464569815	WITHOUT_CLASSIFICATION	1.4215354301856702E-4	DESIGN
negative values	WITHOUT_CLASSIFICATION	0.9999121824844368	WITHOUT_CLASSIFICATION	8.781751556317958E-5	DESIGN
calculation for negatives when %u specified for values >= Integer.MIN_VALUE 2, MRI uses (the equivalent of) long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val for smaller values, BigInteger math is required to conform to MRI's result.	WITHOUT_CLASSIFICATION	0.9997669060683639	WITHOUT_CLASSIFICATION	2.3309393163608135E-4	DESIGN
relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999184286640941	WITHOUT_CLASSIFICATION	8.157133590589015E-5	DESIGN
no such luck...	WITHOUT_CLASSIFICATION	0.9998140320385722	WITHOUT_CLASSIFICATION	1.8596796142767948E-4	DESIGN
ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9986677452215971	WITHOUT_CLASSIFICATION	0.0013322547784029397	DESIGN
go through negated powers of 32 until we find one small enough	WITHOUT_CLASSIFICATION	0.9997067065312736	WITHOUT_CLASSIFICATION	2.932934687264104E-4	DESIGN
add to the corresponding positive power of 32 for the result. meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9777052735885718	WITHOUT_CLASSIFICATION	0.022294726411428156	DESIGN
constant vector a	WITHOUT_CLASSIFICATION	0.999347356086748	WITHOUT_CLASSIFICATION	6.526439132519699E-4	DESIGN
most significant w-r bits	WITHOUT_CLASSIFICATION	0.9995997337767439	WITHOUT_CLASSIFICATION	4.0026622325606113E-4	DESIGN
least significant r bits	WITHOUT_CLASSIFICATION	0.998988889648958	WITHOUT_CLASSIFICATION	0.001011110351041945	DESIGN
state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9994072205555466	WITHOUT_CLASSIFICATION	5.927794444533294E-4	DESIGN
state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9994072205555466	WITHOUT_CLASSIFICATION	5.927794444533294E-4	DESIGN
state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9994072205555466	WITHOUT_CLASSIFICATION	5.927794444533294E-4	DESIGN
MSB is 1; assuring non-zero initial array	WITHOUT_CLASSIFICATION	0.9995934250954228	WITHOUT_CLASSIFICATION	4.065749045771564E-4	DESIGN
Tempering	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
MRI behavior: Week values are monotonous. So, weeks that effectively belong to previous year, will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.99992358128481	WITHOUT_CLASSIFICATION	7.641871519011575E-5	DESIGN
System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9978006089613651	WITHOUT_CLASSIFICATION	0.0021993910386347384	DESIGN
System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9978006089613651	WITHOUT_CLASSIFICATION	0.0021993910386347384	DESIGN
\v	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9986828689501004	WITHOUT_CLASSIFICATION	0.001317131049899571	DESIGN
System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9977169965678687	WITHOUT_CLASSIFICATION	0.0022830034321312358	DESIGN
System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.997295891483203	WITHOUT_CLASSIFICATION	0.0027041085167970242	DESIGN
System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.997295891483203	WITHOUT_CLASSIFICATION	0.0027041085167970242	DESIGN
System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9977169965678687	WITHOUT_CLASSIFICATION	0.0022830034321312358	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9992080714449347	WITHOUT_CLASSIFICATION	7.919285550652741E-4	DESIGN
System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9977169965678687	WITHOUT_CLASSIFICATION	0.0022830034321312358	DESIGN
no number	WITHOUT_CLASSIFICATION	0.9997483011031855	WITHOUT_CLASSIFICATION	2.516988968145993E-4	DESIGN
trailing garbage	WITHOUT_CLASSIFICATION	0.9996628819529212	WITHOUT_CLASSIFICATION	3.371180470788316E-4	DESIGN
System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9987809259608771	WITHOUT_CLASSIFICATION	0.0012190740391229162	DESIGN
it was not found at all!	WITHOUT_CLASSIFICATION	0.9992330903187501	WITHOUT_CLASSIFICATION	7.669096812500433E-4	DESIGN
can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9855711378702926	WITHOUT_CLASSIFICATION	0.014428862129707462	DESIGN
we reached the end of a list	WITHOUT_CLASSIFICATION	0.9998149514567846	WITHOUT_CLASSIFICATION	1.8504854321554673E-4	DESIGN
goto next bucket	WITHOUT_CLASSIFICATION	0.9993644495024512	WITHOUT_CLASSIFICATION	6.355504975488314E-4	DESIGN
we reached the end	WITHOUT_CLASSIFICATION	0.9998897409051848	WITHOUT_CLASSIFICATION	1.1025909481518652E-4	DESIGN
entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9977951103265611	WITHOUT_CLASSIFICATION	0.0022048896734389164	DESIGN
states	WITHOUT_CLASSIFICATION	0.9993320605983657	WITHOUT_CLASSIFICATION	6.679394016342754E-4	DESIGN
remove leading whitespace (includes _ for lax) get sign, if any	WITHOUT_CLASSIFICATION	0.996986189395507	WITHOUT_CLASSIFICATION	0.003013810604492924	DESIGN
optimistic pass - calculate value as digits are processed digits - lax rules decimal digits - lax rules exponent sign/digits - lax rules digits - strict rules decimal digits - strict rules exponent sign/digits - strict rules complete calculation if possible	WITHOUT_CLASSIFICATION	0.9995985834039983	WITHOUT_CLASSIFICATION	4.0141659600163615E-4	DESIGN
fields used for direct (optimistic) calculation number of significant digits, updated as parsed zeroes that may go to significand or exponent offset of decimal pt from start (-1 -> no decimal) significand, updated as parsed exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9990611385120682	WITHOUT_CLASSIFICATION	9.388614879317632E-4	DESIGN
drop through for sign	WITHOUT_CLASSIFICATION	0.9990217335938538	WITHOUT_CLASSIFICATION	9.782664061461725E-4	DESIGN
switch will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9664553170509276	WITHOUT_CLASSIFICATION	0.0335446829490724	DESIGN
drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9976085407542021	WITHOUT_CLASSIFICATION	0.0023914592457979027	DESIGN
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9998352178120753	WITHOUT_CLASSIFICATION	1.6478218792470172E-4	DESIGN
ignore leading zeroes switch	WITHOUT_CLASSIFICATION	0.9985792760543414	WITHOUT_CLASSIFICATION	0.0014207239456586038	DESIGN
no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9996468008934436	WITHOUT_CLASSIFICATION	3.5319910655646705E-4	DESIGN
ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9987421750855123	WITHOUT_CLASSIFICATION	0.0012578249144876853	DESIGN
just save a count of zeroes for now; if no digit ends up following them, they'll be applied to the exponent rather than the significand (and our max length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9895687272434575	WITHOUT_CLASSIFICATION	0.010431272756542587	DESIGN
ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9962030088383377	WITHOUT_CLASSIFICATION	0.0037969911616623927	DESIGN
else catch oversize below	WITHOUT_CLASSIFICATION	0.9999320664645043	WITHOUT_CLASSIFICATION	6.793353549574188E-5	DESIGN
else catch oversize below	WITHOUT_CLASSIFICATION	0.9999320664645043	WITHOUT_CLASSIFICATION	6.793353549574188E-5	DESIGN
oh, well, it was worth a try. go let Double/FloatingDecimal handle it	WITHOUT_CLASSIFICATION	0.9869689717350872	WITHOUT_CLASSIFICATION	0.01303102826491283	DESIGN
ignore switch	WITHOUT_CLASSIFICATION	0.9992157474915004	WITHOUT_CLASSIFICATION	7.842525084995888E-4	DESIGN
ignore switch	WITHOUT_CLASSIFICATION	0.9992157474915004	WITHOUT_CLASSIFICATION	7.842525084995888E-4	DESIGN
end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9990682480050984	WITHOUT_CLASSIFICATION	9.317519949016619E-4	DESIGN
end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9990682480050984	WITHOUT_CLASSIFICATION	9.317519949016619E-4	DESIGN
switch for	WITHOUT_CLASSIFICATION	0.9990171277032965	WITHOUT_CLASSIFICATION	9.828722967034445E-4	DESIGN
first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9992841053025893	WITHOUT_CLASSIFICATION	7.15894697410702E-4	DESIGN
no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9995014766337676	WITHOUT_CLASSIFICATION	4.985233662322345E-4	DESIGN
switch if	WITHOUT_CLASSIFICATION	0.9996287493681874	WITHOUT_CLASSIFICATION	3.712506318126384E-4	DESIGN
difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9953577077251969	WITHOUT_CLASSIFICATION	0.004642292274803033	DESIGN
block	WITHOUT_CLASSIFICATION	0.9998118140795204	WITHOUT_CLASSIFICATION	1.881859204796573E-4	DESIGN
block	WITHOUT_CLASSIFICATION	0.9998118140795204	WITHOUT_CLASSIFICATION	1.881859204796573E-4	DESIGN
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9998352178120753	WITHOUT_CLASSIFICATION	1.6478218792470172E-4	DESIGN
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9998352178120753	WITHOUT_CLASSIFICATION	1.6478218792470172E-4	DESIGN
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9998352178120753	WITHOUT_CLASSIFICATION	1.6478218792470172E-4	DESIGN
ignore leading zeroes switch	WITHOUT_CLASSIFICATION	0.9985792760543414	WITHOUT_CLASSIFICATION	0.0014207239456586038	DESIGN
else catch oversize below	WITHOUT_CLASSIFICATION	0.9999320664645043	WITHOUT_CLASSIFICATION	6.793353549574188E-5	DESIGN
else catch oversize below	WITHOUT_CLASSIFICATION	0.9999320664645043	WITHOUT_CLASSIFICATION	6.793353549574188E-5	DESIGN
else catch oversize below	WITHOUT_CLASSIFICATION	0.9999320664645043	WITHOUT_CLASSIFICATION	6.793353549574188E-5	DESIGN
switch for	WITHOUT_CLASSIFICATION	0.9990171277032965	WITHOUT_CLASSIFICATION	9.828722967034445E-4	DESIGN
switch for	WITHOUT_CLASSIFICATION	0.9990171277032965	WITHOUT_CLASSIFICATION	9.828722967034445E-4	DESIGN
switch for	WITHOUT_CLASSIFICATION	0.9990171277032965	WITHOUT_CLASSIFICATION	9.828722967034445E-4	DESIGN
switch if	WITHOUT_CLASSIFICATION	0.9996287493681874	WITHOUT_CLASSIFICATION	3.712506318126384E-4	DESIGN
switch if	WITHOUT_CLASSIFICATION	0.9996287493681874	WITHOUT_CLASSIFICATION	3.712506318126384E-4	DESIGN
lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9958744729841165	WITHOUT_CLASSIFICATION	0.0041255270158835015	DESIGN
switch for no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9993812232941328	WITHOUT_CLASSIFICATION	6.187767058672047E-4	DESIGN
switch for no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9925000346630851	WITHOUT_CLASSIFICATION	0.007499965336914849	DESIGN
TODO: it's not clear to me why, in FloatingDecimal, the "slop" calculation performed above for positive exponents isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.973796016615354	DESIGN	0.02620398338464596	WITHOUT_CLASSIFICATION
no digits, error	WITHOUT_CLASSIFICATION	0.9998047801960668	WITHOUT_CLASSIFICATION	1.952198039332893E-4	DESIGN
too big for us	WITHOUT_CLASSIFICATION	0.9996692495501315	WITHOUT_CLASSIFICATION	3.3075044986850404E-4	DESIGN
too big for us	WITHOUT_CLASSIFICATION	0.9996692495501315	WITHOUT_CLASSIFICATION	3.3075044986850404E-4	DESIGN
must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9949125695439375	WITHOUT_CLASSIFICATION	0.005087430456062516	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9992080714449347	WITHOUT_CLASSIFICATION	7.919285550652741E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9992080714449347	WITHOUT_CLASSIFICATION	7.919285550652741E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9992080714449347	WITHOUT_CLASSIFICATION	7.919285550652741E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9992080714449347	WITHOUT_CLASSIFICATION	7.919285550652741E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9992080714449347	WITHOUT_CLASSIFICATION	7.919285550652741E-4	DESIGN
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9997055238203553	WITHOUT_CLASSIFICATION	2.9447617964471664E-4	DESIGN
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9997055238203553	WITHOUT_CLASSIFICATION	2.9447617964471664E-4	DESIGN
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9997055238203553	WITHOUT_CLASSIFICATION	2.9447617964471664E-4	DESIGN
first char must be digit	WITHOUT_CLASSIFICATION	0.999677915719738	WITHOUT_CLASSIFICATION	3.220842802620388E-4	DESIGN
no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9991396828032124	WITHOUT_CLASSIFICATION	8.603171967875059E-4	DESIGN
ignore leading zeroes switch	WITHOUT_CLASSIFICATION	0.9985792760543414	WITHOUT_CLASSIFICATION	0.0014207239456586038	DESIGN
switch for	WITHOUT_CLASSIFICATION	0.9990171277032965	WITHOUT_CLASSIFICATION	9.828722967034445E-4	DESIGN
switch for	WITHOUT_CLASSIFICATION	0.9990171277032965	WITHOUT_CLASSIFICATION	9.828722967034445E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9992080714449347	WITHOUT_CLASSIFICATION	7.919285550652741E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9992080714449347	WITHOUT_CLASSIFICATION	7.919285550652741E-4	DESIGN
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9997055238203553	WITHOUT_CLASSIFICATION	2.9447617964471664E-4	DESIGN
must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9949125695439375	WITHOUT_CLASSIFICATION	0.005087430456062516	DESIGN
Copy out any buffered bytes	WITHOUT_CLASSIFICATION	0.9994960886754792	WITHOUT_CLASSIFICATION	5.039113245207175E-4	DESIGN
switch while	WITHOUT_CLASSIFICATION	0.9997498817261219	WITHOUT_CLASSIFICATION	2.501182738781645E-4	DESIGN
All the positive powers of 10 that can be represented exactly in double/float. (From sun.misc.FloatingDecimal.java)	WITHOUT_CLASSIFICATION	0.9997977400511453	WITHOUT_CLASSIFICATION	2.0225994885479805E-4	DESIGN
Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9995613231418602	WITHOUT_CLASSIFICATION	4.386768581397693E-4	DESIGN
rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9994072205555466	WITHOUT_CLASSIFICATION	5.927794444533294E-4	DESIGN
utf8 lead byte	WITHOUT_CLASSIFICATION	0.999511911045474	WITHOUT_CLASSIFICATION	4.880889545260004E-4	DESIGN
arg cannot be negative	WITHOUT_CLASSIFICATION	0.9995220464706593	WITHOUT_CLASSIFICATION	4.7795352934063457E-4	DESIGN
NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9994072205555466	WITHOUT_CLASSIFICATION	5.927794444533294E-4	DESIGN
Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9963056583159733	WITHOUT_CLASSIFICATION	0.003694341684026683	DESIGN
could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9951178963313491	WITHOUT_CLASSIFICATION	0.004882103668650953	DESIGN
strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9996488017225157	WITHOUT_CLASSIFICATION	3.5119827748427915E-4	DESIGN
Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.996115950423265	WITHOUT_CLASSIFICATION	0.003884049576734916	DESIGN
Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.998817626484488	WITHOUT_CLASSIFICATION	0.001182373515511953	DESIGN
Creates the new entry.	WITHOUT_CLASSIFICATION	0.9994915062851543	WITHOUT_CLASSIFICATION	5.084937148457545E-4	DESIGN
next entry to return current slot current entry	WITHOUT_CLASSIFICATION	0.9996420320250621	WITHOUT_CLASSIFICATION	3.5796797493792395E-4	DESIGN
advance to first entry	WITHOUT_CLASSIFICATION	0.9995099084582616	WITHOUT_CLASSIFICATION	4.90091541738273E-4	DESIGN
The reason why we need the stream is to be able to invoke available() on it. STDIN in Java is non-interruptible, non-selectable, and attempt to read on such stream might lead to thread being blocked without any way to unblock it. That's where available() comes it, so at least we could check whether anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9485562388434061	WITHOUT_CLASSIFICATION	0.05144376115659381	DESIGN
package-protected	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9975500187439374	WITHOUT_CLASSIFICATION	0.002449981256062547	DESIGN
We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9989363273216015	WITHOUT_CLASSIFICATION	0.0010636726783984816	DESIGN
if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9998229013306595	WITHOUT_CLASSIFICATION	1.7709866934056034E-4	DESIGN
if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.999907103779562	WITHOUT_CLASSIFICATION	9.289622043795008E-5	DESIGN
otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999085472094934	WITHOUT_CLASSIFICATION	9.145279050655106E-5	DESIGN
r/w buffer are we reading or writing?	WITHOUT_CLASSIFICATION	0.998640566764123	WITHOUT_CLASSIFICATION	0.00135943323587696	DESIGN
this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9182128428465328	WITHOUT_CLASSIFICATION	0.08178715715346717	DESIGN
unread back	WITHOUT_CLASSIFICATION	0.9995051650199748	WITHOUT_CLASSIFICATION	4.948349800252644E-4	DESIGN
iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9997097976017127	WITHOUT_CLASSIFICATION	2.902023982872662E-4	DESIGN
terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9996594673129946	WITHOUT_CLASSIFICATION	3.405326870054461E-4	DESIGN
no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9998519686745013	WITHOUT_CLASSIFICATION	1.4803132549866472E-4	DESIGN
found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9998367306282536	WITHOUT_CLASSIFICATION	1.6326937174634897E-4	DESIGN
Check file size - special files in /proc have zero size and need to be handled by the generic read path.	WITHOUT_CLASSIFICATION	0.999597698732	WITHOUT_CLASSIFICATION	4.02301267999961E-4	DESIGN
Copy any buffered data (including ungetc byte)	WITHOUT_CLASSIFICATION	0.9992799832243414	WITHOUT_CLASSIFICATION	7.200167756584887E-4	DESIGN
Now read unbuffered directly from the file	WITHOUT_CLASSIFICATION	0.9994631068496417	WITHOUT_CLASSIFICATION	5.368931503584053E-4	DESIGN
Copy out any buffered bytes	WITHOUT_CLASSIFICATION	0.9994960886754792	WITHOUT_CLASSIFICATION	5.039113245207175E-4	DESIGN
Need to clamp source (buffer) size to avoid overrun	WITHOUT_CLASSIFICATION	0.9997237221495395	WITHOUT_CLASSIFICATION	2.762778504604643E-4	DESIGN
not closing from finalize	WITHOUT_CLASSIFICATION	0.9994579584140258	WITHOUT_CLASSIFICATION	5.420415859741538E-4	DESIGN
clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9997340576196936	WITHOUT_CLASSIFICATION	2.659423803064513E-4	DESIGN
silence	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
silence	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
Don't bother	WITHOUT_CLASSIFICATION	0.9996703348195837	WITHOUT_CLASSIFICATION	3.29665180416342E-4	DESIGN
Don't bother	WITHOUT_CLASSIFICATION	0.9996703348195837	WITHOUT_CLASSIFICATION	3.29665180416342E-4	DESIGN
For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9996857983261105	WITHOUT_CLASSIFICATION	3.142016738895049E-4	DESIGN
Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9998894556688603	WITHOUT_CLASSIFICATION	1.1054433113968696E-4	DESIGN
Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9993798584416691	WITHOUT_CLASSIFICATION	6.201415583308751E-4	DESIGN
for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9871827827645905	WITHOUT_CLASSIFICATION	0.01281721723540949	DESIGN
libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9986245490100399	WITHOUT_CLASSIFICATION	0.0013754509899600636	DESIGN
we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9886442733118461	WITHOUT_CLASSIFICATION	0.011355726688153852	DESIGN
128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9955571196711792	WITHOUT_CLASSIFICATION	0.004442880328820835	DESIGN
limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations	WITHOUT_CLASSIFICATION	0.9991654621149612	WITHOUT_CLASSIFICATION	8.345378850388155E-4	DESIGN
append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9402582370523009	WITHOUT_CLASSIFICATION	0.059741762947699055	DESIGN
Copy what is in the buffer, if there is some buffered data	WITHOUT_CLASSIFICATION	0.998855802005666	WITHOUT_CLASSIFICATION	0.0011441979943339726	DESIGN
Avoid double-copying for reads that are larger than the buffer size	WITHOUT_CLASSIFICATION	0.9994065276397545	WITHOUT_CLASSIFICATION	5.934723602455728E-4	DESIGN
Complete the request by filling the read buffer first	WITHOUT_CLASSIFICATION	0.9996143891560788	WITHOUT_CLASSIFICATION	3.856108439210964E-4	DESIGN
Complete the request by filling the read buffer first	WITHOUT_CLASSIFICATION	0.9996143891560788	WITHOUT_CLASSIFICATION	3.856108439210964E-4	DESIGN
Avoid double-copying for reads that are larger than the buffer size, or the destination is a direct buffer.	WITHOUT_CLASSIFICATION	0.9836366692336853	WITHOUT_CLASSIFICATION	0.016363330766314677	DESIGN
We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating a huge temporary native buffer, when doing reads into a heap buffer If the dst buffer is direct, then no need to limit.	WITHOUT_CLASSIFICATION	0.9885102449791868	WITHOUT_CLASSIFICATION	0.011489755020813295	DESIGN
Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9991766523548101	WITHOUT_CLASSIFICATION	8.233476451899319E-4	DESIGN
Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9991766523548101	WITHOUT_CLASSIFICATION	8.233476451899319E-4	DESIGN
Doesn't fit in buffer. Write immediately. ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999590558070476	WITHOUT_CLASSIFICATION	4.094419295236238E-5	DESIGN
truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.999252384493735	WITHOUT_CLASSIFICATION	7.476155062650285E-4	DESIGN
how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9996273144898102	WITHOUT_CLASSIFICATION	3.726855101897827E-4	DESIGN
if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9984190413001561	WITHOUT_CLASSIFICATION	0.001580958699843926	DESIGN
close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9997005464814753	WITHOUT_CLASSIFICATION	2.994535185246806E-4	DESIGN
putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9955711848252631	WITHOUT_CLASSIFICATION	0.004428815174736959	DESIGN
save the ungot	WITHOUT_CLASSIFICATION	0.9998450525418687	WITHOUT_CLASSIFICATION	1.5494745813130064E-4	DESIGN
otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9971806838245533	WITHOUT_CLASSIFICATION	0.0028193161754466265	DESIGN
ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9965410839711294	WITHOUT_CLASSIFICATION	0.003458916028870498	DESIGN
flush first	WITHOUT_CLASSIFICATION	0.9999289357189491	WITHOUT_CLASSIFICATION	7.10642810507818E-5	DESIGN
Wake up any channels that became unblocked	WITHOUT_CLASSIFICATION	0.9983470626958836	WITHOUT_CLASSIFICATION	0.0016529373041164989	DESIGN
Register any new blocking I/O requests	WITHOUT_CLASSIFICATION	0.99671150394401	WITHOUT_CLASSIFICATION	0.003288496055990011	DESIGN
Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9998848756505704	WITHOUT_CLASSIFICATION	1.1512434942967643E-4	DESIGN
Wait for I/O on any channel	WITHOUT_CLASSIFICATION	0.9992189377607237	WITHOUT_CLASSIFICATION	7.810622392763715E-4	DESIGN
Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.999342357708842	WITHOUT_CLASSIFICATION	6.576422911580459E-4	DESIGN
Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9826136122504515	WITHOUT_CLASSIFICATION	0.017386387749548527	DESIGN
seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9997321629008492	WITHOUT_CLASSIFICATION	2.6783709915085586E-4	DESIGN
seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.999101160533205	WITHOUT_CLASSIFICATION	8.988394667950353E-4	DESIGN
result = eval("arr = Array::['c', 200]; p arr"); assertEquals("[\"c\", 200]", result); result = eval("arr = Array.['d', 200]; p arr"); assertEquals("[\"d\", 200]", result);	WITHOUT_CLASSIFICATION	0.9999259844102738	WITHOUT_CLASSIFICATION	7.401558972611431E-5	DESIGN
MRI ignores seek errors, presumably for unseekable files like serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.974977923885462	WITHOUT_CLASSIFICATION	0.02502207611453801	DESIGN
TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.8948910764264172	DESIGN	0.10510892357358281	WITHOUT_CLASSIFICATION
make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9287319042927885	WITHOUT_CLASSIFICATION	0.07126809570721152	DESIGN
make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9410119436024547	WITHOUT_CLASSIFICATION	0.058988056397545445	DESIGN
first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9996274513461192	WITHOUT_CLASSIFICATION	3.7254865388076415E-4	DESIGN
then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9998262861562431	WITHOUT_CLASSIFICATION	1.7371384375685113E-4	DESIGN
if we get here, the class and field exist; construct our Unsafe impl that calls it directly	WITHOUT_CLASSIFICATION	0.998596611461486	WITHOUT_CLASSIFICATION	0.001403388538513953	DESIGN
else leave it null	WITHOUT_CLASSIFICATION	0.999728259771997	WITHOUT_CLASSIFICATION	2.717402280029601E-4	DESIGN
TypeMatcher	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
This is now needed, since module Java isn't in by default	WITHOUT_CLASSIFICATION	0.9900257845859214	WITHOUT_CLASSIFICATION	0.009974215414078556	DESIGN
Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9991955784485899	WITHOUT_CLASSIFICATION	8.044215514101044E-4	DESIGN
Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9994192690786163	WITHOUT_CLASSIFICATION	5.807309213835903E-4	DESIGN
Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999816869863725	WITHOUT_CLASSIFICATION	1.8313013627441066E-5	DESIGN
Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.999870775812635	WITHOUT_CLASSIFICATION	1.2922418736509492E-4	DESIGN
Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.999681335295497	WITHOUT_CLASSIFICATION	3.186647045030213E-4	DESIGN
Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.999681335295497	WITHOUT_CLASSIFICATION	3.186647045030213E-4	DESIGN
Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9993669894872335	WITHOUT_CLASSIFICATION	6.330105127665054E-4	DESIGN
If we're running from within an IDE we may not have the .rb files in our classpath. Try to find them in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9998518292753706	WITHOUT_CLASSIFICATION	1.4817072462928552E-4	DESIGN
assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9987351838627607	WITHOUT_CLASSIFICATION	0.0012648161372393156	DESIGN
Init	WITHOUT_CLASSIFICATION	0.999307875383307	WITHOUT_CLASSIFICATION	6.921246166930117E-4	DESIGN
Block	WITHOUT_CLASSIFICATION	0.999302138380283	WITHOUT_CLASSIFICATION	6.978616197169942E-4	DESIGN
Copy constructor	WITHOUT_CLASSIFICATION	0.999432574412852	WITHOUT_CLASSIFICATION	5.674255871480328E-4	DESIGN
presumably this require should fail	WITHOUT_CLASSIFICATION	0.8878413855658529	WITHOUT_CLASSIFICATION	0.1121586144341471	DESIGN
JRUBY-646 presumably this require should fail	WITHOUT_CLASSIFICATION	0.8878413855658529	WITHOUT_CLASSIFICATION	0.1121586144341471	DESIGN
Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9996517822728255	WITHOUT_CLASSIFICATION	3.482177271744557E-4	DESIGN
ok	WITHOUT_CLASSIFICATION	0.9986503728518522	WITHOUT_CLASSIFICATION	0.0013496271481478696	DESIGN
Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.6837938744014788	WITHOUT_CLASSIFICATION	0.31620612559852124	DESIGN
load should work several times in a row	WITHOUT_CLASSIFICATION	0.9683127099366268	WITHOUT_CLASSIFICATION	0.03168729006337322	DESIGN
reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9998278618191393	WITHOUT_CLASSIFICATION	1.7213818086081212E-4	DESIGN
call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9991394017619228	WITHOUT_CLASSIFICATION	8.605982380771962E-4	DESIGN
Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.998386806722369	WITHOUT_CLASSIFICATION	0.0016131932776309427	DESIGN
wait for the go signal	WITHOUT_CLASSIFICATION	0.9996641116092594	WITHOUT_CLASSIFICATION	3.358883907405457E-4	DESIGN
run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9882440956421825	WITHOUT_CLASSIFICATION	0.01175590435781739	DESIGN
wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9998246683371841	WITHOUT_CLASSIFICATION	1.7533166281592747E-4	DESIGN
notify thread to proceed	WITHOUT_CLASSIFICATION	0.9995321744290585	WITHOUT_CLASSIFICATION	4.6782557094147373E-4	DESIGN
wait until thread has completed	WITHOUT_CLASSIFICATION	0.9997426186343131	WITHOUT_CLASSIFICATION	2.5738136568692805E-4	DESIGN
we do preand post load outside the "body" versions to pre-prepare and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.93703473733394	WITHOUT_CLASSIFICATION	0.06296526266605984	DESIGN
out of byte range there will be no match for sure	WITHOUT_CLASSIFICATION	0.9998036305182556	WITHOUT_CLASSIFICATION	1.963694817444808E-4	DESIGN
MRI behavior: raise ArgumentError for 'unknown command' before checking number of args.	WITHOUT_CLASSIFICATION	0.9995232651264239	WITHOUT_CLASSIFICATION	4.7673487357608086E-4	DESIGN
if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9996243658474868	WITHOUT_CLASSIFICATION	3.7563415251308925E-4	DESIGN
there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9950110810265278	WITHOUT_CLASSIFICATION	0.004988918973472278	DESIGN
construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9990835250739424	WITHOUT_CLASSIFICATION	9.164749260576288E-4	DESIGN
Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9998406902016139	WITHOUT_CLASSIFICATION	1.5930979838612298E-4	DESIGN
assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9994072205555466	WITHOUT_CLASSIFICATION	5.927794444533294E-4	DESIGN
void methods should work	WITHOUT_CLASSIFICATION	0.992516534654705	WITHOUT_CLASSIFICATION	0.007483465345294977	DESIGN
methods with required = 4 or higher should bind and be callable using reflection JRUBY-3649	WITHOUT_CLASSIFICATION	0.9997178392229698	WITHOUT_CLASSIFICATION	2.821607770303115E-4	DESIGN
Since we don't have any other error reporting mechanism, we add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.999989232513518	WITHOUT_CLASSIFICATION	1.0767486482015754E-5	DESIGN
Ensure we have a new interpreter for each test. Previous we were using the same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999933755361382	WITHOUT_CLASSIFICATION	6.624463861816057E-6	DESIGN
Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9997216494097829	WITHOUT_CLASSIFICATION	2.783505902169911E-4	DESIGN
assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9986828689501004	WITHOUT_CLASSIFICATION	0.001317131049899571	DESIGN
int n = 10;	WITHOUT_CLASSIFICATION	0.9999456566289926	WITHOUT_CLASSIFICATION	5.434337100743248E-5	DESIGN
there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9998523393797503	WITHOUT_CLASSIFICATION	1.476606202497223E-4	DESIGN
No ClassCastException!	WITHOUT_CLASSIFICATION	0.99982239056534	WITHOUT_CLASSIFICATION	1.7760943466010222E-4	DESIGN
value equality	WITHOUT_CLASSIFICATION	0.9998114320387628	WITHOUT_CLASSIFICATION	1.8856796123710386E-4	DESIGN
identity equality	WITHOUT_CLASSIFICATION	0.9998538473105673	WITHOUT_CLASSIFICATION	1.4615268943279672E-4	DESIGN
bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9985500897183281	WITHOUT_CLASSIFICATION	0.0014499102816718835	DESIGN
bench Integer fib	WITHOUT_CLASSIFICATION	0.9995883992840556	WITHOUT_CLASSIFICATION	4.116007159442991E-4	DESIGN
bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9994072205555466	WITHOUT_CLASSIFICATION	5.927794444533294E-4	DESIGN
bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9994072205555466	WITHOUT_CLASSIFICATION	5.927794444533294E-4	DESIGN
bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9994072205555466	WITHOUT_CLASSIFICATION	5.927794444533294E-4	DESIGN
bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9995268167089603	WITHOUT_CLASSIFICATION	4.7318329103969523E-4	DESIGN
bench Long fib	WITHOUT_CLASSIFICATION	0.9996003844698871	WITHOUT_CLASSIFICATION	3.9961553011291106E-4	DESIGN
skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9994418510233507	WITHOUT_CLASSIFICATION	5.581489766492683E-4	DESIGN
start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9991548278238006	WITHOUT_CLASSIFICATION	8.451721761993178E-4	DESIGN
public class Hello { public static String getMessage() { return "....."; } }	WITHOUT_CLASSIFICATION	0.9988760473283873	WITHOUT_CLASSIFICATION	0.0011239526716126625	DESIGN
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9899788925147632	WITHOUT_CLASSIFICATION	0.01002110748523675	DESIGN
Note: We can't use file.exists() to check whether the symlink exists or not, because that method returns false for existing but broken symlink. So, we try without the existence check, but in the try-catch block. MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9998848834191558	WITHOUT_CLASSIFICATION	1.151165808441957E-4	DESIGN
We are creating a new IO object that shares the same IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9911512093453768	WITHOUT_CLASSIFICATION	0.008848790654623169	DESIGN
a while node could receive non-local flow control from any of these: a closure within the loop an eval within the loop a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999925288415007	WITHOUT_CLASSIFICATION	7.471158499330755E-6	DESIGN
[IRubyObject] [IRubyObject, IRubyObject] [IRubyObject, RubyClass] [IRubyObject, RubyClass, RubyClass] [IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9986828689501004	WITHOUT_CLASSIFICATION	0.001317131049899571	DESIGN
select appropriate call site dup receiver load self	WITHOUT_CLASSIFICATION	0.9919433173135452	WITHOUT_CLASSIFICATION	0.008056682686454836	DESIGN
Translate "x || y" --> "x = (is_true(x) ? x : y)" --> x = -- build(x) should return a variable! -- f = is_true(x) beq(f, true, L) x = -- build(y) -- L:	WITHOUT_CLASSIFICATION	0.9981441434395667	WITHOUT_CLASSIFICATION	0.0018558565604333082	DESIGN
Force the client socket to be blocking	WITHOUT_CLASSIFICATION	0.9815553665549942	WITHOUT_CLASSIFICATION	0.018444633445005847	DESIGN
Additional context surrounding tokens that both the lexer and grammar use.	WITHOUT_CLASSIFICATION	0.9998736863024038	WITHOUT_CLASSIFICATION	1.2631369759621262E-4	DESIGN
Enebo: c can never be antrhign but '.' Why did I put this here?	WITHOUT_CLASSIFICATION	0.8228199836201211	WITHOUT_CLASSIFICATION	0.17718001637987882	DESIGN
save package module as ivar in parent, and add method to parent so we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9841959060611816	WITHOUT_CLASSIFICATION	0.01580409393881848	DESIGN
[C,C] [C, boolean]	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
Label for the start of the closure (used to implement redo) Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9974566676983113	WITHOUT_CLASSIFICATION	0.0025433323016885927	DESIGN
ignore; job was cancelled FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9986708013210998	DESIGN	0.0013291986789003326	WITHOUT_CLASSIFICATION
check arity checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.999406341008008	WITHOUT_CLASSIFICATION	5.936589919919876E-4	DESIGN
rethrow exception rethrow it	WITHOUT_CLASSIFICATION	0.9993946232501868	WITHOUT_CLASSIFICATION	6.0537674981324E-4	DESIGN
we take the first method found as our "n" method, since for any non-specific arity they'll all error the same. If an actual "n" method is created, we use that.	WITHOUT_CLASSIFICATION	0.9994188010615609	WITHOUT_CLASSIFICATION	5.811989384391604E-4	DESIGN
Used by our duck-typification of Proc into interface types, to allow coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.942051424360891	WITHOUT_CLASSIFICATION	0.057948575639108976	DESIGN
proxy is under construction, building thread can safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9993916747922409	WITHOUT_CLASSIFICATION	6.083252077590562E-4	DESIGN
it's either as converted as we can make it via above logic or it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.8892131059112868	WITHOUT_CLASSIFICATION	0.11078689408871317	DESIGN
package scheme 2: separate module for each full package name, constructed from the camel-cased package segments: Java::JavaLang::Object,	WITHOUT_CLASSIFICATION	0.9910188050368672	WITHOUT_CLASSIFICATION	0.008981194963132738	DESIGN
construct the proxy method	WITHOUT_CLASSIFICATION	0.9996526422650343	WITHOUT_CLASSIFICATION	3.473577349656777E-4	DESIGN
line 159 "-" %token constants	WITHOUT_CLASSIFICATION	0.9997258805448924	WITHOUT_CLASSIFICATION	2.7411945510760706E-4	DESIGN
+++ Helper Methods	WITHOUT_CLASSIFICATION	0.9996047058630114	WITHOUT_CLASSIFICATION	3.952941369886759E-4	DESIGN
line 152 "-" %token constants	WITHOUT_CLASSIFICATION	0.9997258805448924	WITHOUT_CLASSIFICATION	2.7411945510760706E-4	DESIGN
initial size state stack value stack current input #tokens to shift	WITHOUT_CLASSIFICATION	0.9999764579842313	WITHOUT_CLASSIFICATION	2.3542015768681414E-5	DESIGN
+++ Helper Methods	WITHOUT_CLASSIFICATION	0.9996047058630114	WITHOUT_CLASSIFICATION	3.952941369886759E-4	DESIGN
We only need to pass in current scope if we are evaluating as a block (which is only done for evals). We need to pass this in so that we can appropriately scope down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9952875500111776	WITHOUT_CLASSIFICATION	0.004712449988822396	DESIGN
let the width (if any), get processed in the next loop, so any leading 0 gets treated correctly	WITHOUT_CLASSIFICATION	0.9996078566133542	WITHOUT_CLASSIFICATION	3.9214338664587305E-4	DESIGN
A place to store that special hiding space that bindings need to implement things like: eval("a = 1", binding); eval("p a"). All binding instances must get access to this hidden shared scope. We store it here. This will be null if no binding has yet been called.	WITHOUT_CLASSIFICATION	0.9992626725046208	WITHOUT_CLASSIFICATION	7.373274953791745E-4	DESIGN
TODO: make it 16 now ? MUST be power of 2!	WITHOUT_CLASSIFICATION	0.7917167696562473	DESIGN	0.20828323034375265	WITHOUT_CLASSIFICATION
check visibility dup method	WITHOUT_CLASSIFICATION	0.9990163364289022	WITHOUT_CLASSIFICATION	9.836635710977386E-4	DESIGN
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9836828208626694	WITHOUT_CLASSIFICATION	0.016317179137330502	DESIGN
unsigned int, native unsigned long, native	WITHOUT_CLASSIFICATION	0.9991898378058317	WITHOUT_CLASSIFICATION	8.101621941683719E-4	DESIGN
need padding I'm fairly sure there is a library call to create a string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9808818180953952	WITHOUT_CLASSIFICATION	0.01911818190460473	DESIGN
MRI behavior: Be default, 2 digits in the exponent. Use 3 digits only when necessary. See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9737385419902628	WITHOUT_CLASSIFICATION	0.02626145800973725	DESIGN
MRI ignores seek errors, presumably for unseekable files like serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.974977923885462	WITHOUT_CLASSIFICATION	0.02502207611453801	DESIGN
switch for no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9925000346630851	WITHOUT_CLASSIFICATION	0.007499965336914849	DESIGN
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.7281799630091269	DESIGN	0.27182003699087304	WITHOUT_CLASSIFICATION
Estimate the square root with the foremost 62 bits of squarD bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9987363501104657	WITHOUT_CLASSIFICATION	0.0012636498895343272	DESIGN
captures begin and end are used when not groups defined source string	WITHOUT_CLASSIFICATION	0.9999746383993049	WITHOUT_CLASSIFICATION	2.5361600695060388E-5	DESIGN
INSTANCE VARIABLE RUBY METHODS	WITHOUT_CLASSIFICATION	0.9994072205555466	WITHOUT_CLASSIFICATION	5.927794444533294E-4	DESIGN
switch while	WITHOUT_CLASSIFICATION	0.9997498817261219	WITHOUT_CLASSIFICATION	2.501182738781645E-4	DESIGN
For nodes do not have their own scope so we pass null to indicate this. 'For's are implemented as blocks in evaluation, but they have no scope so we just deal with this lack of scope throughout its lifespan. We should probably change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9159299906230177	WITHOUT_CLASSIFICATION	0.08407000937698227	DESIGN
This field is used during argument processing to avoid putting RubyArray instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9797506714252441	WITHOUT_CLASSIFICATION	0.02024932857475586	DESIGN
Parent container for this context (can be dynamic!!) If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9982263742172091	WITHOUT_CLASSIFICATION	0.0017736257827910237	DESIGN
Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> v1 = -- build(a) -- OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. while this info can be inferred by using attributes, why bother if we can do this? ret = false beq(v1, false, L) v2 = -- build(b) -- ret = v2 L:	WITHOUT_CLASSIFICATION	0.9846659673128689	DESIGN	0.01533403268713101	WITHOUT_CLASSIFICATION
expected	WITHOUT_CLASSIFICATION	0.9996582251867591	WITHOUT_CLASSIFICATION	3.4177481324093145E-4	DESIGN
Do nothing	WITHOUT_CLASSIFICATION	0.9999095721380862	WITHOUT_CLASSIFICATION	9.042786191391607E-5	DESIGN
constructor	WITHOUT_CLASSIFICATION	0.9993500507255022	WITHOUT_CLASSIFICATION	6.49949274497749E-4	DESIGN
If a line is followed by a blank line put it back.	WITHOUT_CLASSIFICATION	0.9994658177857416	WITHOUT_CLASSIFICATION	5.341822142583486E-4	DESIGN
$>: default output handle	WITHOUT_CLASSIFICATION	0.9994287851839676	WITHOUT_CLASSIFICATION	5.712148160324431E-4	DESIGN
line 423	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 486	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
Signal uses sun.misc. classes, this is not allowed in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9970962589366639	WITHOUT_CLASSIFICATION	0.002903741063336029	DESIGN
re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9996825600793505	WITHOUT_CLASSIFICATION	3.174399206494893E-4	DESIGN
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9936776959817233	WITHOUT_CLASSIFICATION	0.0063223040182767126	DESIGN
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9936776959817233	WITHOUT_CLASSIFICATION	0.0063223040182767126	DESIGN
colon3, assign in Object	WITHOUT_CLASSIFICATION	0.999471578595685	WITHOUT_CLASSIFICATION	5.284214043149609E-4	DESIGN
if there's no receiver, evaluate and pass in the superclass, or pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999298694963961	WITHOUT_CLASSIFICATION	7.013050360394837E-5	DESIGN
Wire up Function#call(args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9945311202247283	WITHOUT_CLASSIFICATION	0.005468879775271713	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.7387988374098038	WITHOUT_CLASSIFICATION	0.26120116259019616	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.7387988374098038	WITHOUT_CLASSIFICATION	0.26120116259019616	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.7387988374098038	WITHOUT_CLASSIFICATION	0.26120116259019616	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.7387988374098038	WITHOUT_CLASSIFICATION	0.26120116259019616	DESIGN
Decrease value to hit upper range.	WITHOUT_CLASSIFICATION	0.995965758423892	WITHOUT_CLASSIFICATION	0.004034241576107947	DESIGN
assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9980083472243022	WITHOUT_CLASSIFICATION	0.00199165277569777	DESIGN
"else" body	WITHOUT_CLASSIFICATION	0.999691318079177	WITHOUT_CLASSIFICATION	3.0868192082293884E-4	DESIGN
done done done Nothing to do for 1.8 done done done done done done done? done done done done done done done done done done done case DEFINEDNODE: return buildDefined(node, m); Incomplete done done done done done done done done case ENSURENODE: return buildEnsureNode(node, m); DEFERRED done done done done case FLIPNODE: return buildFlip(node, m); SSS FIXME: What code generates this AST? done done done done done done done done done done done done done done done done done done? done done done done done done -- partially case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); DEFERRED SSS FIXME: What code generates this AST? done case POSTEXENODE: return buildPostExe(node, m); DEFERRED case PREEXENODE: return buildPreExe(node, m); DEFERRED done?? done	WITHOUT_CLASSIFICATION	0.9898202822144284	DESIGN	0.010179717785571526	WITHOUT_CLASSIFICATION
read-volatile	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
$+: string matches last paren.	WITHOUT_CLASSIFICATION	0.9998811027685172	WITHOUT_CLASSIFICATION	1.1889723148283284E-4	DESIGN
should alter global state	WITHOUT_CLASSIFICATION	0.9982968608584174	WITHOUT_CLASSIFICATION	0.0017031391415825727	DESIGN
should alter global state	WITHOUT_CLASSIFICATION	0.9982968608584174	WITHOUT_CLASSIFICATION	0.0017031391415825727	DESIGN
Ruby code frequently uses a platform check to choose "NUL:" on windows but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9833126731638713	WITHOUT_CLASSIFICATION	0.01668732683612867	DESIGN
10!	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
case RESCUENODE: return buildRescue(node, m); DEFERRED case RETRYNODE: return buildRetry(node, m); DEFERRED done	WITHOUT_CLASSIFICATION	0.9994656908824017	WITHOUT_CLASSIFICATION	5.343091175983376E-4	DESIGN
Is this instruction live or dead? During optimization passes, if this instruction causes no side-effects and the result of the instruction is not needed by anyone else, we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.6225138294909034	WITHOUT_CLASSIFICATION	0.37748617050909655	DESIGN
all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9990615481085927	WITHOUT_CLASSIFICATION	9.384518914072676E-4	DESIGN
first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9996405471195361	WITHOUT_CLASSIFICATION	3.5945288046382534E-4	DESIGN
Determine if the parameter might be passed as a 32bit int parameter. This just applies to buffer/pointer types.	WITHOUT_CLASSIFICATION	0.9893553366123357	WITHOUT_CLASSIFICATION	0.010644663387664408	DESIGN
Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999234927592432	WITHOUT_CLASSIFICATION	7.65072407567922E-5	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
initial size state stack value stack current input #tokens to shift	WITHOUT_CLASSIFICATION	0.9999764579842313	WITHOUT_CLASSIFICATION	2.3542015768681414E-5	DESIGN
line 449	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 495	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
Management/monitoring	WITHOUT_CLASSIFICATION	0.9994072205555466	WITHOUT_CLASSIFICATION	5.927794444533294E-4	DESIGN
if we've found the last char of the separator, and we've found at least as many characters as separator length, and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9995965146831665	WITHOUT_CLASSIFICATION	4.034853168335324E-4	DESIGN
14!	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
Process any set of annotations No supported options	WITHOUT_CLASSIFICATION	0.9998907323341479	WITHOUT_CLASSIFICATION	1.0926766585201688E-4	DESIGN
add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9992387803038189	WITHOUT_CLASSIFICATION	7.612196961811493E-4	DESIGN
extract item from array	WITHOUT_CLASSIFICATION	0.9999787771362247	WITHOUT_CLASSIFICATION	2.1222863775274872E-5	DESIGN
extract item from array	WITHOUT_CLASSIFICATION	0.9999787771362247	WITHOUT_CLASSIFICATION	2.1222863775274872E-5	DESIGN
case SCLASSNODE: return buildSClass(node, m); DEFERRED done done done done done done done done case UNDEFNODE: return buildUndef(node, m); DEFERRED done case VALIASNODE: return buildVAlias(node, m); DEFERRED done done	WITHOUT_CLASSIFICATION	0.9994656908824017	WITHOUT_CLASSIFICATION	5.343091175983376E-4	DESIGN
Adding a post-invoke for the cb result serves to both keep it alive until after the function returns, and allows us to clean up the native trampoline early, instead of letting them accumulate until a GC run	WITHOUT_CLASSIFICATION	0.9998158954874066	WITHOUT_CLASSIFICATION	1.8410451259338753E-4	DESIGN
The Java method doesn't care what class it is, but we need to know what to convert it to, so we use the object's own class. If that doesn't help, we use String to force a call to the object's "to_s" method.	WITHOUT_CLASSIFICATION	0.9892613745567648	WITHOUT_CLASSIFICATION	0.01073862544323519	DESIGN
index for the item	WITHOUT_CLASSIFICATION	0.9995678745343909	WITHOUT_CLASSIFICATION	4.321254656090741E-4	DESIGN
Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9962291018221064	WITHOUT_CLASSIFICATION	0.003770898177893585	DESIGN
18!	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9992472983418736	WITHOUT_CLASSIFICATION	7.527016581263716E-4	DESIGN
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9860659344363205	WITHOUT_CLASSIFICATION	0.013934065563679536	DESIGN
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9860659344363205	WITHOUT_CLASSIFICATION	0.013934065563679536	DESIGN
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9860659344363205	WITHOUT_CLASSIFICATION	0.013934065563679536	DESIGN
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9860659344363205	WITHOUT_CLASSIFICATION	0.013934065563679536	DESIGN
NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9991401866012328	WITHOUT_CLASSIFICATION	8.598133987671789E-4	DESIGN
This method takes as input a map of operands to their values, and outputs the result of this instruction. If the value map provides a value for any of the instruction's operands the expectation is that the operand will be replaced with the simplified value. It is not required that it do so -- code correctness is not compromised by failure to simplify. @param valueMap Mapping from operands to their simplified values @returns simplified result / output of this instruction	WITHOUT_CLASSIFICATION	0.999580956073569	WITHOUT_CLASSIFICATION	4.190439264309797E-4	DESIGN
Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9968342959473907	WITHOUT_CLASSIFICATION	0.0031657040526092955	DESIGN
An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.996422249396484	WITHOUT_CLASSIFICATION	0.0035777506035158738	DESIGN
MRI behavior: always check whether the file is writable or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9993119824600949	WITHOUT_CLASSIFICATION	6.880175399050801E-4	DESIGN
22!	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
attribute set.	WITHOUT_CLASSIFICATION	0.9997547501469967	WITHOUT_CLASSIFICATION	2.4524985300325663E-4	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9931294934462497	WITHOUT_CLASSIFICATION	0.006870506553750407	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9931294934462497	WITHOUT_CLASSIFICATION	0.006870506553750407	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9931294934462497	WITHOUT_CLASSIFICATION	0.006870506553750407	DESIGN
fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9978610240991821	WITHOUT_CLASSIFICATION	0.0021389759008178886	DESIGN
Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9994364685101991	WITHOUT_CLASSIFICATION	5.635314898008293E-4	DESIGN
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.9834049630408233	WITHOUT_CLASSIFICATION	0.01659503695917682	DESIGN
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.9834049630408233	WITHOUT_CLASSIFICATION	0.01659503695917682	DESIGN
AF_INET	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
Now we provide default impls of a number of signatures. For each arity, we first generate a non-block version of the method, which just adds NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can potentially take a block, to only generate the block-receiving signature and still avoid arg boxing. We then provide default implementations of each block-accepting method that in turn call the IRubyObject[]+Block version of call. This then finally falls back on the minimum implementation requirement for dynamic method handles.	WITHOUT_CLASSIFICATION	0.9981326339382399	WITHOUT_CLASSIFICATION	0.0018673660617600934	DESIGN
Because we implement Java interfaces now, we need a new === that's aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9771137749511103	WITHOUT_CLASSIFICATION	0.02288622504888969	DESIGN
BASE64	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY when value is an integer less than 1. We treat 0 as a special case to avoid Domain error.	WITHOUT_CLASSIFICATION	0.9995421445860109	WITHOUT_CLASSIFICATION	4.578554139891563E-4	DESIGN
element set	WITHOUT_CLASSIFICATION	0.999398192596901	WITHOUT_CLASSIFICATION	6.018074030991313E-4	DESIGN
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.6086274395305815	WITHOUT_CLASSIFICATION	0.39137256046941854	DESIGN
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.6086274395305815	WITHOUT_CLASSIFICATION	0.39137256046941854	DESIGN
temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9848848150989986	WITHOUT_CLASSIFICATION	0.015115184901001466	DESIGN
SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode We won't get here for argument receives! So, buildDasgn is called for assignments to block variables within a block. As far as the IR is concerned, this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999225209926325	WITHOUT_CLASSIFICATION	7.74790073674919E-5	DESIGN
getSimplifiedOperand returns the value of this operand, fully simplified getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away The value is used during optimizations and propagated through the IR. But, it is thrown away after that. But, the operand form is used for constructing the compound objects represented by the operand. Example: a = [1], b = [3,4], c = [a,b], d = [2,c] -- getValue(c) = [1,[3,4]]; getSimplifiedOperand(c) = [1, b] -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. So, if contents of a or b is modified, the "simplified value"s of c and d also change! This difference is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9601951987108985	WITHOUT_CLASSIFICATION	0.039804801289101445	DESIGN
IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9998406902016139	WITHOUT_CLASSIFICATION	1.5930979838612298E-4	DESIGN
promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9966946924574998	WITHOUT_CLASSIFICATION	0.0033053075425002053	DESIGN
Ruby's OMG capture all source in a Hash feature Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999429819211904	WITHOUT_CLASSIFICATION	5.701807880959968E-5	DESIGN
carriage return	WITHOUT_CLASSIFICATION	0.9998639646682015	WITHOUT_CLASSIFICATION	1.3603533179847415E-4	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.998715135369564	WITHOUT_CLASSIFICATION	0.0012848646304358812	DESIGN
String construction routines by NOT byte[] buffer and making the target String shared	WITHOUT_CLASSIFICATION	0.999836402284185	WITHOUT_CLASSIFICATION	1.635977158149398E-4	DESIGN
insert all nodes in sequence, hash them in the final instruction KEY	WITHOUT_CLASSIFICATION	0.9998898494058163	WITHOUT_CLASSIFICATION	1.1015059418369638E-4	DESIGN
return last value from execution	WITHOUT_CLASSIFICATION	0.9996513481953233	WITHOUT_CLASSIFICATION	3.486518046766252E-4	DESIGN
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.974341905840224	WITHOUT_CLASSIFICATION	0.02565809415977606	DESIGN
Basic Block id CFG that this basic block belongs to All basic blocks have a starting label List of non-label instructions	WITHOUT_CLASSIFICATION	0.9991742219512861	WITHOUT_CLASSIFICATION	8.257780487140044E-4	DESIGN
otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999325115141084	WITHOUT_CLASSIFICATION	6.748848589157111E-5	DESIGN
For all uninitialized specific arities, we defer to the "n" method which should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9618861019026159	WITHOUT_CLASSIFICATION	0.038113898097384115	DESIGN
implement is called to force this class to create stubs for all methods in the given interface, so they'll show up in the list of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9867477567625392	WITHOUT_CLASSIFICATION	0.013252243237460758	DESIGN
CASE IR instructions are dummy instructions -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9979980099798442	WITHOUT_CLASSIFICATION	0.0020019900201558192	DESIGN
check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9994925510695791	WITHOUT_CLASSIFICATION	5.074489304208724E-4	DESIGN
leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9917739941275403	WITHOUT_CLASSIFICATION	0.008226005872459715	DESIGN
Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999713967285561	WITHOUT_CLASSIFICATION	2.8603271443902332E-5	DESIGN
for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9482304728592661	WITHOUT_CLASSIFICATION	0.051769527140733844	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9990251680550339	WITHOUT_CLASSIFICATION	9.748319449660113E-4	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9990251680550339	WITHOUT_CLASSIFICATION	9.748319449660113E-4	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9990251680550339	WITHOUT_CLASSIFICATION	9.748319449660113E-4	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9990251680550339	WITHOUT_CLASSIFICATION	9.748319449660113E-4	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9990251680550339	WITHOUT_CLASSIFICATION	9.748319449660113E-4	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9990251680550339	WITHOUT_CLASSIFICATION	9.748319449660113E-4	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9990251680550339	WITHOUT_CLASSIFICATION	9.748319449660113E-4	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9990251680550339	WITHOUT_CLASSIFICATION	9.748319449660113E-4	DESIGN
Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.991893612418614	WITHOUT_CLASSIFICATION	0.008106387581386014	DESIGN
fall through	WITHOUT_CLASSIFICATION	0.9993147266742596	WITHOUT_CLASSIFICATION	6.852733257404145E-4	DESIGN
deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9998138260507193	WITHOUT_CLASSIFICATION	1.8617394928076847E-4	DESIGN
All errors to sysread should be SystemCallErrors, but on a closed stream Ruby returns an IOError. Java throws same exception for all errors so we resort to this hack...	WITHOUT_CLASSIFICATION	0.888088422310462	WITHOUT_CLASSIFICATION	0.11191157768953802	DESIGN
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9899788925147632	WITHOUT_CLASSIFICATION	0.01002110748523675	DESIGN
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9899788925147632	WITHOUT_CLASSIFICATION	0.01002110748523675	DESIGN
store argument count information into scope	WITHOUT_CLASSIFICATION	0.9980685252427537	WITHOUT_CLASSIFICATION	0.0019314747572462512	DESIGN
the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.7363143194447126	DESIGN	0.2636856805552874	WITHOUT_CLASSIFICATION
First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9930708924848733	WITHOUT_CLASSIFICATION	0.006929107515126599	DESIGN
public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9956855133256587	WITHOUT_CLASSIFICATION	0.004314486674341377	DESIGN
get current context	WITHOUT_CLASSIFICATION	0.9998882063160438	WITHOUT_CLASSIFICATION	1.1179368395614158E-4	DESIGN
octal constant	WITHOUT_CLASSIFICATION	0.9995452779301384	WITHOUT_CLASSIFICATION	4.5472206986169636E-4	DESIGN
read	WITHOUT_CLASSIFICATION	0.9992277939493122	WITHOUT_CLASSIFICATION	7.722060506879467E-4	DESIGN
this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.5772002227490153	DESIGN	0.42279977725098483	WITHOUT_CLASSIFICATION
it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9966824010421564	WITHOUT_CLASSIFICATION	0.0033175989578435117	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9834042120343243	WITHOUT_CLASSIFICATION	0.016595787965675717	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9834042120343243	WITHOUT_CLASSIFICATION	0.016595787965675717	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9834042120343243	WITHOUT_CLASSIFICATION	0.016595787965675717	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.999305046052419	WITHOUT_CLASSIFICATION	6.949539475809712E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.999305046052419	WITHOUT_CLASSIFICATION	6.949539475809712E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.999305046052419	WITHOUT_CLASSIFICATION	6.949539475809712E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.999305046052419	WITHOUT_CLASSIFICATION	6.949539475809712E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.999305046052419	WITHOUT_CLASSIFICATION	6.949539475809712E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.999305046052419	WITHOUT_CLASSIFICATION	6.949539475809712E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.999305046052419	WITHOUT_CLASSIFICATION	6.949539475809712E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.999305046052419	WITHOUT_CLASSIFICATION	6.949539475809712E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.999305046052419	WITHOUT_CLASSIFICATION	6.949539475809712E-4	DESIGN
ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9983737775394412	WITHOUT_CLASSIFICATION	0.0016262224605587915	DESIGN
at end	WITHOUT_CLASSIFICATION	0.9994654923991741	WITHOUT_CLASSIFICATION	5.345076008258885E-4	DESIGN
bang: true, no match, no substitution	WITHOUT_CLASSIFICATION	0.9995387122543894	WITHOUT_CLASSIFICATION	4.612877456106308E-4	DESIGN
save blocking state	WITHOUT_CLASSIFICATION	0.9998376245584496	WITHOUT_CLASSIFICATION	1.6237544155039963E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.999305046052419	WITHOUT_CLASSIFICATION	6.949539475809712E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.999305046052419	WITHOUT_CLASSIFICATION	6.949539475809712E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.999305046052419	WITHOUT_CLASSIFICATION	6.949539475809712E-4	DESIGN
invoke static __file__	WITHOUT_CLASSIFICATION	0.9994843712885398	WITHOUT_CLASSIFICATION	5.156287114602297E-4	DESIGN
rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999160925082733	WITHOUT_CLASSIFICATION	8.390749172672734E-5	DESIGN
fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9853813015209834	WITHOUT_CLASSIFICATION	0.014618698479016515	DESIGN
UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9938132269396155	WITHOUT_CLASSIFICATION	0.006186773060384482	DESIGN
UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9938132269396155	WITHOUT_CLASSIFICATION	0.006186773060384482	DESIGN
load null block	WITHOUT_CLASSIFICATION	0.9998533337785274	WITHOUT_CLASSIFICATION	1.466662214727153E-4	DESIGN
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9997743414550929	WITHOUT_CLASSIFICATION	2.256585449070978E-4	DESIGN
nothing else to here - the module version will be included in the class.	WITHOUT_CLASSIFICATION	0.9991429842332279	WITHOUT_CLASSIFICATION	8.57015766772059E-4	DESIGN
JRUBY-1000, fail early when attempting to subclass a final Java class; solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9958556037765995	WITHOUT_CLASSIFICATION	0.004144396223400435	DESIGN
block given	WITHOUT_CLASSIFICATION	0.9999269107354661	WITHOUT_CLASSIFICATION	7.30892645338461E-5	DESIGN
block given	WITHOUT_CLASSIFICATION	0.9999269107354661	WITHOUT_CLASSIFICATION	7.30892645338461E-5	DESIGN
Translate ret = (a || b) to ret = (a ? true : b) as follows v1 = -- build(a) -- OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. while this info can be inferred by using attributes, why bother if we can do this? ret = true beq(v1, true, L) v2 = -- build(b) -- ret = v2 L:	WITHOUT_CLASSIFICATION	0.9897894494769607	DESIGN	0.010210550523039258	WITHOUT_CLASSIFICATION
Initial precision is that of double numbers 2^63/2 ~ 4E18 63-1 an even number of number bits precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9979599312258423	WITHOUT_CLASSIFICATION	0.002040068774157738	DESIGN
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9968481482860877	WITHOUT_CLASSIFICATION	0.0031518517139121965	DESIGN
self	WITHOUT_CLASSIFICATION	0.9987689240563608	WITHOUT_CLASSIFICATION	0.0012310759436393274	DESIGN
self	WITHOUT_CLASSIFICATION	0.9987689240563608	WITHOUT_CLASSIFICATION	0.0012310759436393274	DESIGN
self	WITHOUT_CLASSIFICATION	0.9987689240563608	WITHOUT_CLASSIFICATION	0.0012310759436393274	DESIGN
declare the field	WITHOUT_CLASSIFICATION	0.9999059316509221	WITHOUT_CLASSIFICATION	9.406834907795363E-5	DESIGN
Assign the values.	WITHOUT_CLASSIFICATION	0.9995711742745517	WITHOUT_CLASSIFICATION	4.2882572544839914E-4	DESIGN
Assign the values.	WITHOUT_CLASSIFICATION	0.9995711742745517	WITHOUT_CLASSIFICATION	4.2882572544839914E-4	DESIGN
check arity	WITHOUT_CLASSIFICATION	0.9998203883313516	WITHOUT_CLASSIFICATION	1.7961166864851905E-4	DESIGN
check arity	WITHOUT_CLASSIFICATION	0.9998203883313516	WITHOUT_CLASSIFICATION	1.7961166864851905E-4	DESIGN
create the class	WITHOUT_CLASSIFICATION	0.9993897802472823	WITHOUT_CLASSIFICATION	6.102197527175996E-4	DESIGN
called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999435735307843	WITHOUT_CLASSIFICATION	5.64264692157673E-5	DESIGN
No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999341349764188	WITHOUT_CLASSIFICATION	6.58650235811919E-5	DESIGN
1.8	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
6:tags 16:addr 1:eos	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.999241167043739	WITHOUT_CLASSIFICATION	7.588329562610251E-4	DESIGN
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9988735200626435	WITHOUT_CLASSIFICATION	0.0011264799373565215	DESIGN
block	WITHOUT_CLASSIFICATION	0.9998118140795204	WITHOUT_CLASSIFICATION	1.881859204796573E-4	DESIGN
Label for the start of the method Label for the end of the method	WITHOUT_CLASSIFICATION	0.9987085250647646	WITHOUT_CLASSIFICATION	0.0012914749352354593	DESIGN
comparisons & checks checks if the operand is non-null and non-false EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9962309927203884	WITHOUT_CLASSIFICATION	0.003769007279611666	DESIGN
FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9121160890011599	WITHOUT_CLASSIFICATION	0.08788391099884008	DESIGN
invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9984503698357975	WITHOUT_CLASSIFICATION	0.001549630164202587	DESIGN
all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9305916468117431	WITHOUT_CLASSIFICATION	0.06940835318825687	DESIGN
allow proxy to be read without synchronization. if proxy is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9997211352764198	WITHOUT_CLASSIFICATION	2.7886472358022447E-4	DESIGN
Create list of interface names to proxy (and make sure they really are interfaces) Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.8750588906098985	DESIGN	0.12494110939010146	WITHOUT_CLASSIFICATION
Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.6632762742280282	WITHOUT_CLASSIFICATION	0.33672372577197174	DESIGN
Value of "TZ" property is of a bit different format, which confuses the Java's TimeZone.getTimeZone(id) method, and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9902953628039292	WITHOUT_CLASSIFICATION	0.0097046371960708	DESIGN
file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9955543006694266	WITHOUT_CLASSIFICATION	0.004445699330573407	DESIGN
ensure the object is associated with the wrapper we found it in, so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999788086632863	WITHOUT_CLASSIFICATION	2.1191336713776504E-5	DESIGN
return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9996021746736967	WITHOUT_CLASSIFICATION	3.9782532630325447E-4	DESIGN
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.7281799630091269	DESIGN	0.27182003699087304	WITHOUT_CLASSIFICATION
arg	WITHOUT_CLASSIFICATION	0.9993427039216687	WITHOUT_CLASSIFICATION	6.572960783313918E-4	DESIGN
Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9998453100023507	WITHOUT_CLASSIFICATION	1.546899976492632E-4	DESIGN
normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9998661311633328	WITHOUT_CLASSIFICATION	1.338688366672636E-4	DESIGN
coerce arguments	WITHOUT_CLASSIFICATION	0.9995907331995537	WITHOUT_CLASSIFICATION	4.092668004462079E-4	DESIGN
0.0 is ok float range inverted float range? NaN +infinity -infinity	WITHOUT_CLASSIFICATION	0.9944709136768084	WITHOUT_CLASSIFICATION	0.005529086323191525	DESIGN
expected	WITHOUT_CLASSIFICATION	0.9996582251867591	WITHOUT_CLASSIFICATION	3.4177481324093145E-4	DESIGN
set this class's method names in var @__java_ovrd_methods if this is the new class; otherwise, get method names from there if this is a proxy superclass.	WITHOUT_CLASSIFICATION	0.9946083965678385	WITHOUT_CLASSIFICATION	0.005391603432161469	DESIGN
ignore backslashed spaces in %w	WITHOUT_CLASSIFICATION	0.9967593322830604	WITHOUT_CLASSIFICATION	0.003240667716939688	DESIGN
Invert the sign, since TZ format and Java format use opposite signs, sigh... Also, Java API requires the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9995721243132659	WITHOUT_CLASSIFICATION	4.2787568673407426E-4	DESIGN
no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.998849742247503	WITHOUT_CLASSIFICATION	0.0011502577524970074	DESIGN
<=> may return nil in many circumstances, e.g. 3 <=> NaN	WITHOUT_CLASSIFICATION	0.9966214206417059	WITHOUT_CLASSIFICATION	0.0033785793582940243	DESIGN
use numbered access method	WITHOUT_CLASSIFICATION	0.9902214758405228	WITHOUT_CLASSIFICATION	0.009778524159477268	DESIGN
Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9996932379462501	WITHOUT_CLASSIFICATION	3.067620537498931E-4	DESIGN
ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9991989574631086	WITHOUT_CLASSIFICATION	8.010425368914124E-4	DESIGN
The dataStruct is a place where custom information can be contained for core implementations that doesn't necessarily want to go to the trouble of creating a subclass of RubyObject. The OpenSSL implementation uses this heavily to save holder objects containing Java cryptography objects. Java integration uses this to store the Java object ref. protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9225698461725877	WITHOUT_CLASSIFICATION	0.0774301538274122	DESIGN
Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9993256381366515	WITHOUT_CLASSIFICATION	6.743618633483817E-4	DESIGN
arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9964192910189819	WITHOUT_CLASSIFICATION	0.0035807089810180807	DESIGN
build scope names string	WITHOUT_CLASSIFICATION	0.9992761905965334	WITHOUT_CLASSIFICATION	7.238094034666876E-4	DESIGN
Tries to load at compile-time the constant referred to by 'constRef'. This might be possible if the constant is defined and is not a forward reference to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9992988922146158	WITHOUT_CLASSIFICATION	7.01107785384203E-4	DESIGN
Here we create an "anonymous" exception type used for unrolling the stack. MRI creates a new one for every call to timeout, which can be costly. We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.8033232578965456	WITHOUT_CLASSIFICATION	0.19667674210345448	DESIGN
finally	WITHOUT_CLASSIFICATION	0.9993343004414472	WITHOUT_CLASSIFICATION	6.656995585526949E-4	DESIGN
MRI behavior: With TZ equal to "GMT" or "UTC", Time.now is NOT considered as a proper GMT/UTC time: ENV['TZ']="GMT" Time.now.gmt? ==> false ENV['TZ']="UTC" Time.now.utc? ==> false Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.98168308958557	WITHOUT_CLASSIFICATION	0.018316910414429975	DESIGN
?l | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999195252733856	WITHOUT_CLASSIFICATION	8.047472661451376E-5	DESIGN
This try/catch is to allow failing over to the "commands" logic when running from within a jruby-complete jar file, which has jruby.home = a jar file URL that does not resolve correctly with JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9981582323591877	WITHOUT_CLASSIFICATION	0.0018417676408122717	DESIGN
Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9663714337215924	WITHOUT_CLASSIFICATION	0.03362856627840758	DESIGN
specific arity	WITHOUT_CLASSIFICATION	0.9994053999965092	WITHOUT_CLASSIFICATION	5.946000034908641E-4	DESIGN
In the case of two arguments, MRI will discard the portion of the first argument after a decimal point (i.e., "floor"). However in the case of a single argument, any portion after the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999922810089594	WITHOUT_CLASSIFICATION	7.718991040602444E-6	DESIGN
?w | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999033012454945	WITHOUT_CLASSIFICATION	9.669875450538191E-5	DESIGN
COMMON VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9994072205555466	WITHOUT_CLASSIFICATION	5.927794444533294E-4	DESIGN
@JRubyMethod public IRubyObject to_proc() { return RubyProc.newProc(getRuntime(), CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()), Block.Type.PROC); }	WITHOUT_CLASSIFICATION	0.9996722521224831	WITHOUT_CLASSIFICATION	3.277478775168942E-4	DESIGN
let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9990771219154746	WITHOUT_CLASSIFICATION	9.228780845253729E-4	DESIGN
let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9990771219154746	WITHOUT_CLASSIFICATION	9.228780845253729E-4	DESIGN
do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9950208701806961	WITHOUT_CLASSIFICATION	0.004979129819303956	DESIGN
do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9950208701806961	WITHOUT_CLASSIFICATION	0.004979129819303956	DESIGN
Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9986061123631953	WITHOUT_CLASSIFICATION	0.0013938876368047694	DESIGN
Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9986061123631953	WITHOUT_CLASSIFICATION	0.0013938876368047694	DESIGN
================ Utility Methods ================	WITHOUT_CLASSIFICATION	0.9987615837906779	WITHOUT_CLASSIFICATION	0.001238416209322024	DESIGN
================ Utility Methods ================	WITHOUT_CLASSIFICATION	0.9987615837906779	WITHOUT_CLASSIFICATION	0.001238416209322024	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9979029771538387	WITHOUT_CLASSIFICATION	0.002097022846161328	DESIGN
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9979029771538387	WITHOUT_CLASSIFICATION	0.002097022846161328	DESIGN
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9979029771538387	WITHOUT_CLASSIFICATION	0.002097022846161328	DESIGN
Add property name aliases	WITHOUT_CLASSIFICATION	0.9998072074192328	WITHOUT_CLASSIFICATION	1.9279258076719506E-4	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9988587337523623	WITHOUT_CLASSIFICATION	0.0011412662476376519	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9988587337523623	WITHOUT_CLASSIFICATION	0.0011412662476376519	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9988587337523623	WITHOUT_CLASSIFICATION	0.0011412662476376519	DESIGN
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9998764020327401	WITHOUT_CLASSIFICATION	1.2359796725985482E-4	DESIGN
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9998764020327401	WITHOUT_CLASSIFICATION	1.2359796725985482E-4	DESIGN
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9998764020327401	WITHOUT_CLASSIFICATION	1.2359796725985482E-4	DESIGN
INTERNAL VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9994072205555466	WITHOUT_CLASSIFICATION	5.927794444533294E-4	DESIGN
backspace	WITHOUT_CLASSIFICATION	0.999309486048855	WITHOUT_CLASSIFICATION	6.905139511450216E-4	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
package-private	WITHOUT_CLASSIFICATION	0.9996093652773287	WITHOUT_CLASSIFICATION	3.90634722671236E-4	DESIGN
fall through	WITHOUT_CLASSIFICATION	0.9993147266742596	WITHOUT_CLASSIFICATION	6.852733257404145E-4	DESIGN
fall through	WITHOUT_CLASSIFICATION	0.9993147266742596	WITHOUT_CLASSIFICATION	6.852733257404145E-4	DESIGN
MRI issuses warning here on (RBIGNUM(x)->len SIZEOF_BDIGITS yy > 10241024)	WITHOUT_CLASSIFICATION	0.9396127687616866	WITHOUT_CLASSIFICATION	0.06038723123831323	DESIGN
interrupt the target thread in case it's blocking or waiting WARNING: We no longer interrupt the target thread, since this usually means interrupting IO and with NIO that means the channel is no longer usable. We either need a new way to handle waking a target thread that's waiting on IO, or we need to accept that we can't wake such threads and must wait for them to complete their operation. threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9991040211145452	WITHOUT_CLASSIFICATION	8.959788854546577E-4	DESIGN
interrupt the target thread in case it's blocking or waiting WARNING: We no longer interrupt the target thread, since this usually means interrupting IO and with NIO that means the channel is no longer usable. We either need a new way to handle waking a target thread that's waiting on IO, or we need to accept that we can't wake such threads and must wait for them to complete their operation. threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9991040211145452	WITHOUT_CLASSIFICATION	8.959788854546577E-4	DESIGN
Nested class whose instances act as thunks reacting to to_str method called from (Exception#to_str, Exception#message) MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!", to_str implementation: "name_err_mesg_to_str" TODO: this class should not be lookupable	WITHOUT_CLASSIFICATION	0.5004519492945617	WITHOUT_CLASSIFICATION	0.4995480507054384	DESIGN
We need to guarantee that any existing reads of old Map can proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9988443353881585	WITHOUT_CLASSIFICATION	0.0011556646118415278	DESIGN
The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9968419228717482	WITHOUT_CLASSIFICATION	0.0031580771282516415	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999255823244912	WITHOUT_CLASSIFICATION	7.441767550871002E-5	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999255823244912	WITHOUT_CLASSIFICATION	7.441767550871002E-5	DESIGN
This should only be called by this and RubyFile. It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9711247054841978	WITHOUT_CLASSIFICATION	0.028875294515802157	DESIGN
We yield here to hopefully permit the target thread to schedule MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999763101335348	WITHOUT_CLASSIFICATION	2.3689866465153312E-5	DESIGN
note that addMethod now does its own put, so any change made to functionality here should be made there as well	WITHOUT_CLASSIFICATION	0.9193285556446049	WITHOUT_CLASSIFICATION	0.08067144435539511	DESIGN
Currently dead code, but useful when we figure out how to actually perform translit. private static boolean isTranslit(String encoding) { return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false; }	WITHOUT_CLASSIFICATION	0.9976338034802295	WITHOUT_CLASSIFICATION	0.002366196519770488	DESIGN
empirically it appears that to_ary coersions always return array or nil, so this should always be an array by now.	WITHOUT_CLASSIFICATION	0.9950504711475435	WITHOUT_CLASSIFICATION	0.0049495288524564985	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999255823244912	WITHOUT_CLASSIFICATION	7.441767550871002E-5	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999255823244912	WITHOUT_CLASSIFICATION	7.441767550871002E-5	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999255823244912	WITHOUT_CLASSIFICATION	7.441767550871002E-5	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999255823244912	WITHOUT_CLASSIFICATION	7.441767550871002E-5	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999255823244912	WITHOUT_CLASSIFICATION	7.441767550871002E-5	DESIGN
No seconds, just yield	WITHOUT_CLASSIFICATION	0.999723225777145	WITHOUT_CLASSIFICATION	2.76774222854926E-4	DESIGN
finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9986446282517168	WITHOUT_CLASSIFICATION	0.0013553717482832014	DESIGN
if it's an inner class and it's not public, we can't access it; skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999436355443554	WITHOUT_CLASSIFICATION	5.6364455644685344E-5	DESIGN
getFoo => foo getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9994563445421034	WITHOUT_CLASSIFICATION	5.43655457896556E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9996927476460621	WITHOUT_CLASSIFICATION	3.0725235393801853E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9996927476460621	WITHOUT_CLASSIFICATION	3.0725235393801853E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9996927476460621	WITHOUT_CLASSIFICATION	3.0725235393801853E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9996927476460621	WITHOUT_CLASSIFICATION	3.0725235393801853E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9996927476460621	WITHOUT_CLASSIFICATION	3.0725235393801853E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9996927476460621	WITHOUT_CLASSIFICATION	3.0725235393801853E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9996927476460621	WITHOUT_CLASSIFICATION	3.0725235393801853E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9996927476460621	WITHOUT_CLASSIFICATION	3.0725235393801853E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9996927476460621	WITHOUT_CLASSIFICATION	3.0725235393801853E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9996927476460621	WITHOUT_CLASSIFICATION	3.0725235393801853E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9996927476460621	WITHOUT_CLASSIFICATION	3.0725235393801853E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9996927476460621	WITHOUT_CLASSIFICATION	3.0725235393801853E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9996927476460621	WITHOUT_CLASSIFICATION	3.0725235393801853E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9996927476460621	WITHOUT_CLASSIFICATION	3.0725235393801853E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9996927476460621	WITHOUT_CLASSIFICATION	3.0725235393801853E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9996927476460621	WITHOUT_CLASSIFICATION	3.0725235393801853E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9996927476460621	WITHOUT_CLASSIFICATION	3.0725235393801853E-4	DESIGN
MRI behavior on Windows: it treats '/' as a root of a current drive (but only if SINGLE slash is present!): E.g., if current work directory is 'D:/home/directory', then '/' means 'D:/'. Basically, '/path' is treated as a RELATIVE path, relative to the current drive. 'path' is treated as absolute one.	WITHOUT_CLASSIFICATION	0.9998851187189881	WITHOUT_CLASSIFICATION	1.1488128101185132E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9996927476460621	WITHOUT_CLASSIFICATION	3.0725235393801853E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9996927476460621	WITHOUT_CLASSIFICATION	3.0725235393801853E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9996927476460621	WITHOUT_CLASSIFICATION	3.0725235393801853E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9996927476460621	WITHOUT_CLASSIFICATION	3.0725235393801853E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9996927476460621	WITHOUT_CLASSIFICATION	3.0725235393801853E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9996927476460621	WITHOUT_CLASSIFICATION	3.0725235393801853E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9996927476460621	WITHOUT_CLASSIFICATION	3.0725235393801853E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9996927476460621	WITHOUT_CLASSIFICATION	3.0725235393801853E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9996927476460621	WITHOUT_CLASSIFICATION	3.0725235393801853E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9996927476460621	WITHOUT_CLASSIFICATION	3.0725235393801853E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9996927476460621	WITHOUT_CLASSIFICATION	3.0725235393801853E-4	DESIGN
This is needed when the enclosing class or module is a singleton. In that case, we generated a name such as null::Foo, which broke Marshalling, among others. The correct thing to do in this situation is to insert the generate the name of form #<Class:01xasdfasd> if it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.8881843842414608	DESIGN	0.11181561575853921	WITHOUT_CLASSIFICATION
this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9887638226861921	WITHOUT_CLASSIFICATION	0.01123617731380792	DESIGN
EQ == 0 (i.e. false) pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999176762883895	WITHOUT_CLASSIFICATION	8.232371161053942E-5	DESIGN
get "self"	WITHOUT_CLASSIFICATION	0.999223289600243	WITHOUT_CLASSIFICATION	7.767103997570261E-4	DESIGN
No timeout in critical section	WITHOUT_CLASSIFICATION	0.999602647101744	WITHOUT_CLASSIFICATION	3.9735289825611555E-4	DESIGN
rethrow exception rethrow it	WITHOUT_CLASSIFICATION	0.9993946232501868	WITHOUT_CLASSIFICATION	6.0537674981324E-4	DESIGN
only public methods	WITHOUT_CLASSIFICATION	0.9999076980130699	WITHOUT_CLASSIFICATION	9.23019869301226E-5	DESIGN
If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9993633505244578	WITHOUT_CLASSIFICATION	6.366494755421307E-4	DESIGN
First try to use drive letter from supplied dir value, then try current work dir.	WITHOUT_CLASSIFICATION	0.9992685374728075	WITHOUT_CLASSIFICATION	7.314625271925173E-4	DESIGN
JRUBY-2435: Aliasing eval and other "special" methods should display a warning We warn because we treat certain method names as "special" for purposes of optimization. Hopefully this will be enough to convince people not to alias them.	WITHOUT_CLASSIFICATION	0.9840767582110682	WITHOUT_CLASSIFICATION	0.015923241788931838	DESIGN
generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9903019122335743	WITHOUT_CLASSIFICATION	0.009698087766425757	DESIGN
block argument to the method closure present class present method table mutations, def, defs, undef, alias likely call to eval makes calls that are aware of the frame makes calls that are aware of the frame's self makes calls that are aware of the frame's visibility makes calls that are aware of the frame's block makes calls that are aware of the frame's name makes calls that set or get backref makes calls that set or get lastline makes calls that are aware of the frame's class optional arguments to the method rest arg to the method makes calls that are aware of the scope makes a zero-argument super call accesses or sets constants accesses or sets class variables makes normal super call contains a retry	WITHOUT_CLASSIFICATION	0.9914145359277803	WITHOUT_CLASSIFICATION	0.00858546407221975	DESIGN
Add aliases in Type::, NativeType:: and FFI::TYPE_	WITHOUT_CLASSIFICATION	0.9992768421132102	WITHOUT_CLASSIFICATION	7.23157886789906E-4	DESIGN
Create constants for flock	WITHOUT_CLASSIFICATION	0.9995516290620572	WITHOUT_CLASSIFICATION	4.483709379427495E-4	DESIGN
double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9940045617849764	WITHOUT_CLASSIFICATION	0.005995438215023506	DESIGN
indices for temp values	WITHOUT_CLASSIFICATION	0.9999061179872969	WITHOUT_CLASSIFICATION	9.388201270309104E-5	DESIGN
a while node could receive non-local flow control from any of these: a closure within the loop an eval within the loop a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999925288415007	WITHOUT_CLASSIFICATION	7.471158499330755E-6	DESIGN
Done with closure compilation	WITHOUT_CLASSIFICATION	0.99919632272485	WITHOUT_CLASSIFICATION	8.036772751500049E-4	DESIGN
Done with closure compilation	WITHOUT_CLASSIFICATION	0.99919632272485	WITHOUT_CLASSIFICATION	8.036772751500049E-4	DESIGN
Done with closure compilation	WITHOUT_CLASSIFICATION	0.99919632272485	WITHOUT_CLASSIFICATION	8.036772751500049E-4	DESIGN
Done with closure compilation	WITHOUT_CLASSIFICATION	0.99919632272485	WITHOUT_CLASSIFICATION	8.036772751500049E-4	DESIGN
snapshot of contents of directory current position in directory	WITHOUT_CLASSIFICATION	0.9999698584355249	WITHOUT_CLASSIFICATION	3.0141564475104806E-5	DESIGN
Exclusive locks in Java require the channel to be writable, otherwise an exception is thrown (terminating JRuby execution). But flock behavior of MRI is that it allows exclusive locks even on non-writable file. So we convert exclusive lock to shared lock if the channel is not writable, to better match the MRI behavior.	WITHOUT_CLASSIFICATION	0.9958868708608831	WITHOUT_CLASSIFICATION	0.0041131291391169125	DESIGN
explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9982971732768136	WITHOUT_CLASSIFICATION	0.0017028267231863623	DESIGN
explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9982971732768136	WITHOUT_CLASSIFICATION	0.0017028267231863623	DESIGN
set self to the class	WITHOUT_CLASSIFICATION	0.9949882682754757	WITHOUT_CLASSIFICATION	0.005011731724524339	DESIGN
---------- Public fields, methods ---------	WITHOUT_CLASSIFICATION	0.9986359672157435	WITHOUT_CLASSIFICATION	0.0013640327842565283	DESIGN
A specific version was requested - use as is for search	WITHOUT_CLASSIFICATION	0.9966707713713663	WITHOUT_CLASSIFICATION	0.0033292286286336625	DESIGN
zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.999950635869902	WITHOUT_CLASSIFICATION	4.9364130098114326E-5	DESIGN
we need to collect all methods, though we'll only install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9792900808142284	WITHOUT_CLASSIFICATION	0.020709919185771572	DESIGN
Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9944077417991714	WITHOUT_CLASSIFICATION	0.005592258200828548	DESIGN
Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9973572518054509	WITHOUT_CLASSIFICATION	0.002642748194549089	DESIGN
do nothing	WITHOUT_CLASSIFICATION	0.9998962566845825	WITHOUT_CLASSIFICATION	1.037433154174717E-4	DESIGN
do nothing	WITHOUT_CLASSIFICATION	0.9998962566845825	WITHOUT_CLASSIFICATION	1.037433154174717E-4	DESIGN
do nothing	WITHOUT_CLASSIFICATION	0.9998962566845825	WITHOUT_CLASSIFICATION	1.037433154174717E-4	DESIGN
do nothing	WITHOUT_CLASSIFICATION	0.9998962566845825	WITHOUT_CLASSIFICATION	1.037433154174717E-4	DESIGN
If an IO exception occurs (something odd, but possible) A directory may return null.	WITHOUT_CLASSIFICATION	0.9999814650407447	WITHOUT_CLASSIFICATION	1.853495925521524E-5	DESIGN
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9971709783601247	WITHOUT_CLASSIFICATION	0.0028290216398752796	DESIGN
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9971709783601247	WITHOUT_CLASSIFICATION	0.0028290216398752796	DESIGN
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9971709783601247	WITHOUT_CLASSIFICATION	0.0028290216398752796	DESIGN
use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9977177468495123	WITHOUT_CLASSIFICATION	0.0022822531504877795	DESIGN
finally with no exception	WITHOUT_CLASSIFICATION	0.9997702477161865	WITHOUT_CLASSIFICATION	2.2975228381339152E-4	DESIGN
Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9971437971802869	WITHOUT_CLASSIFICATION	0.0028562028197131857	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.7387988374098038	WITHOUT_CLASSIFICATION	0.26120116259019616	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.7387988374098038	WITHOUT_CLASSIFICATION	0.26120116259019616	DESIGN
The counting of slashes that follows is simply a way to adhere to Ruby's UNC (or something) compatibility. When Ruby's expand_path is called with "foobar" it will return "foo/bar". JRuby uses java.io.File, and hence returns "/foo/bar". In order to retain java.io.File in the lower layers and provide full Ruby compatibility, the number of extra slashes must be counted and prepended to the result.	WITHOUT_CLASSIFICATION	0.9960768433320986	WITHOUT_CLASSIFICATION	0.003923156667901425	DESIGN
This is almost always already interned, since it will be called with a symbol in most cases but when created from Java code, we might get an argument that needs to be interned. addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999943568284009	WITHOUT_CLASSIFICATION	5.6431715990573674E-6	DESIGN
not a class	WITHOUT_CLASSIFICATION	0.9989064026117833	WITHOUT_CLASSIFICATION	0.0010935973882166116	DESIGN
not a class	WITHOUT_CLASSIFICATION	0.9989064026117833	WITHOUT_CLASSIFICATION	0.0010935973882166116	DESIGN
Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.7121270959061784	WITHOUT_CLASSIFICATION	0.2878729040938216	DESIGN
Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.7121270959061784	WITHOUT_CLASSIFICATION	0.2878729040938216	DESIGN
io.available() only returns 0 after EOF is encountered so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9928661384145883	WITHOUT_CLASSIFICATION	0.0071338615854117556	DESIGN
In the current logic, if we get here we know that module is not an IncludedModuleWrapper, so there's no need to fish out the delegate. But just in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9953300864478384	WITHOUT_CLASSIFICATION	0.004669913552161635	DESIGN
rb_iterate((VALUE()_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9986828689501004	WITHOUT_CLASSIFICATION	0.001317131049899571	DESIGN
Broken symlinks considered by exists() as non-existing, so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9977210481315073	WITHOUT_CLASSIFICATION	0.002278951868492697	DESIGN
CONSTANT API METHODS	WITHOUT_CLASSIFICATION	0.9998297141414012	WITHOUT_CLASSIFICATION	1.7028585859878395E-4	DESIGN
create the default thread group	WITHOUT_CLASSIFICATION	0.9998949117491127	WITHOUT_CLASSIFICATION	1.050882508872099E-4	DESIGN
range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.998133223508476	WITHOUT_CLASSIFICATION	0.001866776491523969	DESIGN
============================ Here are hash internals (This could be extracted to a separate class but it's not too large though) ============================	WITHOUT_CLASSIFICATION	0.9991419260998438	WITHOUT_CLASSIFICATION	8.580739001562638E-4	DESIGN
LOW-LEVEL CLASS VARIABLE INTERFACE fetch/store/list class variables for this module	WITHOUT_CLASSIFICATION	0.9332636279252962	WITHOUT_CLASSIFICATION	0.06673637207470375	DESIGN
used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9992912374333855	WITHOUT_CLASSIFICATION	7.087625666144806E-4	DESIGN
used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9992912374333855	WITHOUT_CLASSIFICATION	7.087625666144806E-4	DESIGN
Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9996647761528765	WITHOUT_CLASSIFICATION	3.352238471234356E-4	DESIGN
Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9996647761528765	WITHOUT_CLASSIFICATION	3.352238471234356E-4	DESIGN
retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9970646041495725	WITHOUT_CLASSIFICATION	0.0029353958504275274	DESIGN
returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.99928490850303	WITHOUT_CLASSIFICATION	7.150914969699355E-4	DESIGN
\cX, \c\M-X	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9984274327510634	WITHOUT_CLASSIFICATION	0.001572567248936601	DESIGN
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9984274327510634	WITHOUT_CLASSIFICATION	0.001572567248936601	DESIGN
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9984274327510634	WITHOUT_CLASSIFICATION	0.001572567248936601	DESIGN
line 286	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 476	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 513	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 530	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 533	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 537	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 551	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
end loop	WITHOUT_CLASSIFICATION	0.9998254987212459	WITHOUT_CLASSIFICATION	1.7450127875418296E-4	DESIGN
MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9981429227406601	WITHOUT_CLASSIFICATION	0.0018570772593399878	DESIGN
prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9550965148810446	WITHOUT_CLASSIFICATION	0.0449034851189553	DESIGN
Traverse the instructions in this basic block in reverse order! Mark as dead all instructions whose results are not used!	WITHOUT_CLASSIFICATION	0.9996642111831375	WITHOUT_CLASSIFICATION	3.3578881686243414E-4	DESIGN
fields should really be an immutable map as it is never modified after construction	WITHOUT_CLASSIFICATION	0.9984302383489239	WITHOUT_CLASSIFICATION	0.001569761651076177	DESIGN
load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9992717523006097	WITHOUT_CLASSIFICATION	7.282476993903113E-4	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.7387988374098038	WITHOUT_CLASSIFICATION	0.26120116259019616	DESIGN
If we define a class in Ruby, but later want to allow it to be defined in Java, the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9980449968156312	WITHOUT_CLASSIFICATION	0.001955003184368749	DESIGN
We only want IO objects with valid streams (better to error now).	WITHOUT_CLASSIFICATION	0.9993629433619738	WITHOUT_CLASSIFICATION	6.370566380261599E-4	DESIGN
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9936776959817233	WITHOUT_CLASSIFICATION	0.0063223040182767126	DESIGN
value	WITHOUT_CLASSIFICATION	0.9995256373703764	WITHOUT_CLASSIFICATION	4.743626296235965E-4	DESIGN
value	WITHOUT_CLASSIFICATION	0.9995256373703764	WITHOUT_CLASSIFICATION	4.743626296235965E-4	DESIGN
value	WITHOUT_CLASSIFICATION	0.9995256373703764	WITHOUT_CLASSIFICATION	4.743626296235965E-4	DESIGN
value	WITHOUT_CLASSIFICATION	0.9995256373703764	WITHOUT_CLASSIFICATION	4.743626296235965E-4	DESIGN
value	WITHOUT_CLASSIFICATION	0.9995256373703764	WITHOUT_CLASSIFICATION	4.743626296235965E-4	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9992989239348036	WITHOUT_CLASSIFICATION	7.010760651963849E-4	DESIGN
value	WITHOUT_CLASSIFICATION	0.9995256373703764	WITHOUT_CLASSIFICATION	4.743626296235965E-4	DESIGN
value	WITHOUT_CLASSIFICATION	0.9995256373703764	WITHOUT_CLASSIFICATION	4.743626296235965E-4	DESIGN
value	WITHOUT_CLASSIFICATION	0.9995256373703764	WITHOUT_CLASSIFICATION	4.743626296235965E-4	DESIGN
MRI has extra pointer which makes our code look a little bit more strange in comparison	WITHOUT_CLASSIFICATION	0.8572134919178416	WITHOUT_CLASSIFICATION	0.14278650808215831	DESIGN
Tempory buffer to build up a potential token. Consumer takes responsibility to reset this before use.	WITHOUT_CLASSIFICATION	0.9782943573344958	WITHOUT_CLASSIFICATION	0.021705642665504236	DESIGN
tmpPosition is required because getPosition()'s side effects. if the warning is generated, the getPosition() on line 954 (this line + 18) will create a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9994377443054236	WITHOUT_CLASSIFICATION	5.622556945763272E-4	DESIGN
What is \v in C? case '\v': c2 = 'v'; break;	WITHOUT_CLASSIFICATION	0.9956673203823998	WITHOUT_CLASSIFICATION	0.0043326796176001835	DESIGN
Consider Thread aspects of this	WITHOUT_CLASSIFICATION	0.9930247975458655	WITHOUT_CLASSIFICATION	0.00697520245413464	DESIGN
Position within source must reflect the actual offset and column. Since we ate an extra character here (this accounting is normally done in read ), we should update position info.	WITHOUT_CLASSIFICATION	0.9987593008994403	WITHOUT_CLASSIFICATION	0.00124069910055975	DESIGN
An interrupt or timeout may have caused us to miss a notify that we consumed, so do another notify in case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9990245988157632	WITHOUT_CLASSIFICATION	9.75401184236798E-4	DESIGN
line 572	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 601	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 601	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 625	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 649	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 691	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 723	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 732	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 745	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 766	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 785	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 794	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 800	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 812	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 827	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 839	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 845	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 864	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 886	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 896	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 911	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 929	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 952	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 970	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 972	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 991	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1011	WITHOUT_CLASSIFICATION	0.9984086774213863	WITHOUT_CLASSIFICATION	0.0015913225786137314	DESIGN
line 1026	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1038	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1067	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1085	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1097	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1105	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1122	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1133	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1145	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1169	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1201	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1210	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1229	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1261	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1287	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1293	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1307	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1320	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1325	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1363	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1398	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1448	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1456	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1473	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1492	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1513	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1523	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1562	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1582	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1603	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1603	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1615	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1620	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1635	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1652	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1681	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1708	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1716	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1755	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1772	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1789	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
ACTIONS_END	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
ACTIONS_END	WITHOUT_CLASSIFICATION	0.9996013003913514	WITHOUT_CLASSIFICATION	3.986996086486484E-4	DESIGN
force for args	WITHOUT_CLASSIFICATION	0.9997895133422222	WITHOUT_CLASSIFICATION	2.1048665777765612E-4	DESIGN
last expression should not be void	WITHOUT_CLASSIFICATION	0.997492012631333	WITHOUT_CLASSIFICATION	0.0025079873686670103	DESIGN
compstmt position includes both parens around it	WITHOUT_CLASSIFICATION	0.9940521745607598	WITHOUT_CLASSIFICATION	0.005947825439240221	DESIGN
We can assign if we already have variable of that name here or we are the only scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9994573143683178	WITHOUT_CLASSIFICATION	5.426856316822499E-4	DESIGN
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9988318943658108	WITHOUT_CLASSIFICATION	0.0011681056341891704	DESIGN
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9988318943658108	WITHOUT_CLASSIFICATION	0.0011681056341891704	DESIGN
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9988318943658108	WITHOUT_CLASSIFICATION	0.0011681056341891704	DESIGN
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9988318943658108	WITHOUT_CLASSIFICATION	0.0011681056341891704	DESIGN
FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9579522799739972	DESIGN	0.0420477200260028	WITHOUT_CLASSIFICATION
This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:) into individual whenNodes. The primary reason for this is to ensure lazy evaluation of the arguments (when foo,bar,gar:) to prevent side-effects. In the old code this was done using nested when statements, which was awful for interpreter and compilation. Notes: This has semantic equivalence but will not be lexically equivalent. Compiler needs to detect same bodies to simplify bytecode generated.	WITHOUT_CLASSIFICATION	0.5274063977367	WITHOUT_CLASSIFICATION	0.4725936022633001	DESIGN
line 313	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 339	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 361	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 413	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 451	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 472	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 500	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 515	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 555	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 582	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 619	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 636	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 669	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 703	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 776	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 814	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 823	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 854	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 872	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 905	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 925	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 958	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 992	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1047	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1072	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1081	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1108	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1136	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1168	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1192	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1241	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1267	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1286	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1301	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1314	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1333	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1362	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1395	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1420	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1439	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1476	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1535	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1588	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1618	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1643	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1669	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1728	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1753	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1779	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1794	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1812	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1837	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1895	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1925	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1950	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 1992	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
line 2014	WITHOUT_CLASSIFICATION	0.9996795340436078	WITHOUT_CLASSIFICATION	3.204659563921408E-4	DESIGN
Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9816388256605779	WITHOUT_CLASSIFICATION	0.018361174339422075	DESIGN
If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999682329041514	WITHOUT_CLASSIFICATION	3.176709584861738E-5	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9992096562955868	WITHOUT_CLASSIFICATION	7.903437044131978E-4	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9992096562955868	WITHOUT_CLASSIFICATION	7.903437044131978E-4	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9992096562955868	WITHOUT_CLASSIFICATION	7.903437044131978E-4	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9992096562955868	WITHOUT_CLASSIFICATION	7.903437044131978E-4	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9992096562955868	WITHOUT_CLASSIFICATION	7.903437044131978E-4	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9992096562955868	WITHOUT_CLASSIFICATION	7.903437044131978E-4	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9992096562955868	WITHOUT_CLASSIFICATION	7.903437044131978E-4	DESIGN
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9166636902339613	WITHOUT_CLASSIFICATION	0.0833363097660386	DESIGN
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9166636902339613	WITHOUT_CLASSIFICATION	0.0833363097660386	DESIGN
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9166636902339613	WITHOUT_CLASSIFICATION	0.0833363097660386	DESIGN
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9166636902339613	WITHOUT_CLASSIFICATION	0.0833363097660386	DESIGN
happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9959797126964456	WITHOUT_CLASSIFICATION	0.004020287303554408	DESIGN
happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9959797126964456	WITHOUT_CLASSIFICATION	0.004020287303554408	DESIGN
We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the 'b' will get put into this new dynamic scope. The original scope does not see the new 'b' and successive evals with this binding will. I take it having the ability to have succesive binding evals be able to share same scope makes sense from a programmers perspective. One crappy outcome of this design is it requires Dynamic and Static scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9900587622824816	DESIGN	0.009941237717518427	WITHOUT_CLASSIFICATION
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.998456653675308	WITHOUT_CLASSIFICATION	0.0015433463246920525	DESIGN
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.998456653675308	WITHOUT_CLASSIFICATION	0.0015433463246920525	DESIGN
tc under method self under method name args	WITHOUT_CLASSIFICATION	0.9925441438989833	WITHOUT_CLASSIFICATION	0.007455856101016783	DESIGN
allow it to bubble up	WITHOUT_CLASSIFICATION	0.9960341680101229	WITHOUT_CLASSIFICATION	0.00396583198987717	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9984656547751134	WITHOUT_CLASSIFICATION	0.0015343452248865598	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9984656547751134	WITHOUT_CLASSIFICATION	0.0015343452248865598	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9984656547751134	WITHOUT_CLASSIFICATION	0.0015343452248865598	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9984656547751134	WITHOUT_CLASSIFICATION	0.0015343452248865598	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9984656547751134	WITHOUT_CLASSIFICATION	0.0015343452248865598	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9984656547751134	WITHOUT_CLASSIFICATION	0.0015343452248865598	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9984656547751134	WITHOUT_CLASSIFICATION	0.0015343452248865598	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9984656547751134	WITHOUT_CLASSIFICATION	0.0015343452248865598	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9984656547751134	WITHOUT_CLASSIFICATION	0.0015343452248865598	DESIGN
trim extension to try other options	WITHOUT_CLASSIFICATION	0.9969802230066005	WITHOUT_CLASSIFICATION	0.003019776993399563	DESIGN
trim extension to try other options	WITHOUT_CLASSIFICATION	0.9969802230066005	WITHOUT_CLASSIFICATION	0.003019776993399563	DESIGN
Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9997793847044882	WITHOUT_CLASSIFICATION	2.206152955116968E-4	DESIGN
end suffix iteration	WITHOUT_CLASSIFICATION	0.9998692676089431	WITHOUT_CLASSIFICATION	1.3073239105682846E-4	DESIGN
end suffix iteration	WITHOUT_CLASSIFICATION	0.9998692676089431	WITHOUT_CLASSIFICATION	1.3073239105682846E-4	DESIGN
Unfortunately, the number of digits in the exponent is not clearly defined in Ruby documentation. This is a platform/version-dependent behavior. On Linux/Mac/Cygwinnix, two digits are used. On Windows, 3 digits are used. It is desirable for JRuby to have consistent behavior, and the two digits behavior was selected. This is also in sync with "Java-native" sprintf behavior (java.util.Formatter). E or e	WITHOUT_CLASSIFICATION	0.9754905185444325	WITHOUT_CLASSIFICATION	0.024509481455567517	DESIGN
Represents the the dynamic portion of scoping information. The variableValues are the values of assigned local or block variables. The staticScope identifies which sort of scope this is (block or local). Properties of Dynamic Scopes: 1. static and dynamic scopes have the same number of names to values 2. size of variables (and thus names) is determined during parsing. So those structured do not need to change FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents. This is harmless (other than wasting memory), but we should not do that. We can fix this in two ways: 1. Fix all callers 2. Check parent that is passed in and make if new instance is local, then its parent is not local	WITHOUT_CLASSIFICATION	0.9999226978567619	DESIGN	7.730214323810103E-5	WITHOUT_CLASSIFICATION
This method handles '' patterns and delegates to fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9979177324442637	WITHOUT_CLASSIFICATION	0.0020822675557362075	DESIGN
Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.999678875245899	WITHOUT_CLASSIFICATION	3.2112475410094184E-4	DESIGN
double precision, native double precision, native	WITHOUT_CLASSIFICATION	0.999805381966974	WITHOUT_CLASSIFICATION	1.9461803302599519E-4	DESIGN
64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.999004531168571	WITHOUT_CLASSIFICATION	9.954688314290313E-4	DESIGN
Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9997668716580418	WITHOUT_CLASSIFICATION	2.3312834195824656E-4	DESIGN
calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9970981600801868	WITHOUT_CLASSIFICATION	0.002901839919813298	DESIGN
processes seem to have some peculiar locking sequences, so we need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9997576630562494	WITHOUT_CLASSIFICATION	2.4233694375060182E-4	DESIGN
MRI behavior: for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9970407242955514	WITHOUT_CLASSIFICATION	0.002959275704448675	DESIGN
this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9987834965140319	WITHOUT_CLASSIFICATION	0.0012165034859680562	DESIGN
exec needs to behave differently in-process, because it's technically supposed to replace the calling process. So if we're supposed to run in-process, we allow it to use the default streams and not use pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9622844940047041	WITHOUT_CLASSIFICATION	0.03771550599529597	DESIGN
snip off ruby or jruby command from list of arguments leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9995256308261492	WITHOUT_CLASSIFICATION	4.743691738507647E-4	DESIGN
The problem we trying to solve below: STDIN in Java is blocked and non-interruptible, so if we invoke read on it, we might never be able to interrupt such thread. So, we use in.available() to see if there is any input ready, and only then read it. But this approach can't tell whether the end of stream reached or not, so we might end up looping right at the end of the stream. Well, at least, we can improve the situation by checking if some input was ever available, and if so, not checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.942043810017547	WITHOUT_CLASSIFICATION	0.05795618998245301	DESIGN
first digit is always printed	WITHOUT_CLASSIFICATION	0.9992354319597114	WITHOUT_CLASSIFICATION	7.645680402885107E-4	DESIGN
an empirically derived rule: precision applies to significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9987874024303177	WITHOUT_CLASSIFICATION	0.0012125975696823017	DESIGN
an official rule, clarified: if the exponent <clarif>after adjusting for exponent form</clarif> is < -4, or the exponent <clarif>after adjusting for exponent form</clarif> is greater than the precision, use exponent form	WITHOUT_CLASSIFICATION	0.9947668434353062	WITHOUT_CLASSIFICATION	0.005233156564693705	DESIGN
in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.982513095952093	WITHOUT_CLASSIFICATION	0.017486904047907034	DESIGN
now some data...	WITHOUT_CLASSIFICATION	0.9995689927055705	WITHOUT_CLASSIFICATION	4.3100729442948894E-4	DESIGN
now some data...	WITHOUT_CLASSIFICATION	0.9995689927055705	WITHOUT_CLASSIFICATION	4.3100729442948894E-4	DESIGN
MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9996244226987092	WITHOUT_CLASSIFICATION	3.7557730129079254E-4	DESIGN
else catch oversize below	WITHOUT_CLASSIFICATION	0.9999320664645043	WITHOUT_CLASSIFICATION	6.793353549574188E-5	DESIGN
calculation for simple (and typical) case, adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.990459049149955	WITHOUT_CLASSIFICATION	0.009540950850044973	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9992080714449347	WITHOUT_CLASSIFICATION	7.919285550652741E-4	DESIGN
utf8 lead byte	WITHOUT_CLASSIFICATION	0.999511911045474	WITHOUT_CLASSIFICATION	4.880889545260004E-4	DESIGN
utf8 lead byte	WITHOUT_CLASSIFICATION	0.999511911045474	WITHOUT_CLASSIFICATION	4.880889545260004E-4	DESIGN
utf8 lead byte	WITHOUT_CLASSIFICATION	0.999511911045474	WITHOUT_CLASSIFICATION	4.880889545260004E-4	DESIGN
could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9951178963313491	WITHOUT_CLASSIFICATION	0.004882103668650953	DESIGN
We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9989363273216015	WITHOUT_CLASSIFICATION	0.0010636726783984816	DESIGN
call chmod after we created the RandomAccesFile because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9997055357462755	WITHOUT_CLASSIFICATION	2.9446425372449967E-4	DESIGN
attempt to set the permissions, if we have been passed a POSIX instance, and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9995295695289588	WITHOUT_CLASSIFICATION	4.704304710411624E-4	DESIGN
When reading into a heap buffer, the jvm allocates a temporary direct ByteBuffer of the requested size. To avoid allocating a huge direct buffer when doing ludicrous reads (e.g. 1G or more) we split the read up into chunks of no more than 1M	WITHOUT_CLASSIFICATION	0.915467626170802	WITHOUT_CLASSIFICATION	0.08453237382919797	DESIGN
If it is a file channel, then we can pre-allocate the output buffer to the total size of buffered + remaining bytes in file	WITHOUT_CLASSIFICATION	0.9998043863091175	WITHOUT_CLASSIFICATION	1.9561369088253589E-4	DESIGN
Cannot discern the total read length - allocate at least enough for the buffered data	WITHOUT_CLASSIFICATION	0.9963278227232003	WITHOUT_CLASSIFICATION	0.003672177276799555	DESIGN
Copy what is in the buffer, if there is some buffered data	WITHOUT_CLASSIFICATION	0.998855802005666	WITHOUT_CLASSIFICATION	0.0011441979943339726	DESIGN
append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9402582370523009	WITHOUT_CLASSIFICATION	0.059741762947699055	DESIGN
already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9998419036271274	WITHOUT_CLASSIFICATION	1.5809637287260572E-4	DESIGN
reset buffer	WITHOUT_CLASSIFICATION	0.9997973012185527	WITHOUT_CLASSIFICATION	2.026987814472589E-4	DESIGN
Synchronize and re-check to avoid creating more than one Selector per provider	WITHOUT_CLASSIFICATION	0.9947490518451437	WITHOUT_CLASSIFICATION	0.005250948154856287	DESIGN
TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.8948910764264172	DESIGN	0.10510892357358281	WITHOUT_CLASSIFICATION
Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9266674672534461	DESIGN	0.07333253274655396	WITHOUT_CLASSIFICATION
Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9997670957473361	WITHOUT_CLASSIFICATION	2.3290425266387358E-4	DESIGN
value equality result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999640124843342	WITHOUT_CLASSIFICATION	3.598751566582715E-5	DESIGN
Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9949548284697887	WITHOUT_CLASSIFICATION	0.005045171530211355	DESIGN
Since we don't have any other error reporting mechanism, we add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.999989232513518	WITHOUT_CLASSIFICATION	1.0767486482015754E-5	DESIGN
change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9996832653417398	WITHOUT_CLASSIFICATION	3.1673465826022724E-4	DESIGN
Fixme: Do we need the check or does Main.java not call this...they should consolidate	DESIGN	0.9376309680679926	WITHOUT_CLASSIFICATION	0.06236903193200749	DESIGN
FIXME: move out of this class!	DESIGN	0.5126763033638814	DESIGN	0.4873236966361187	WITHOUT_CLASSIFICATION
this is a rather ugly hack, but similar to MRI. See hash.c:ruby_setenv and similar in MRI we search all keys for a case-insensitive match, and use that	DESIGN	0.6965862835695863	DESIGN	0.30341371643041365	WITHOUT_CLASSIFICATION
FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.6284478389926793	DESIGN	0.3715521610073207	WITHOUT_CLASSIFICATION
FIXME: Don't allow multiple threads to do this at once	DESIGN	0.9939958762665732	DESIGN	0.006004123733426861	WITHOUT_CLASSIFICATION
TODO: eliminate?	DESIGN	0.7387988374098038	WITHOUT_CLASSIFICATION	0.26120116259019616	DESIGN
TODO: People extending GzipWriter/reader will break. Find better way here.	DESIGN	0.9982704361789052	DESIGN	0.0017295638210947284	WITHOUT_CLASSIFICATION
For JRUBY-2759, when MET choose CET timezone to work around Joda	DESIGN	0.982407686160743	WITHOUT_CLASSIFICATION	0.01759231383925701	DESIGN
we might need to perform a DST correction	DESIGN	0.9898588234849499	WITHOUT_CLASSIFICATION	0.010141176515050199	DESIGN
rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9891323929688455	WITHOUT_CLASSIFICATION	0.010867607031154494	DESIGN
rb_ary_push_m FIXME: Whis is this named "push_m"?	DESIGN	0.7235294268839405	DESIGN	0.2764705731160595	WITHOUT_CLASSIFICATION
from DUP_SETUP rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9891323929688455	WITHOUT_CLASSIFICATION	0.010867607031154494	DESIGN
TODO: ary_sort_check should be done here	DESIGN	0.9958418614446124	DESIGN	0.004158138555387697	WITHOUT_CLASSIFICATION
TODO: ary_sort_check should be done here	DESIGN	0.9958418614446124	DESIGN	0.004158138555387697	WITHOUT_CLASSIFICATION
TODO: is this correct ?	DESIGN	0.8873509240538636	DESIGN	0.11264907594613628	WITHOUT_CLASSIFICATION
TODO: make more efficient by not creating IRubyArray[]	DESIGN	0.9153188916483924	DESIGN	0.0846811083516076	WITHOUT_CLASSIFICATION
TODO: list.subList(from, to).clear() is supposed to clear the sublist from the list. How can we support this operation?	DESIGN	0.9984870256401299	DESIGN	0.001512974359870088	WITHOUT_CLASSIFICATION
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9614291777103534	DESIGN	0.03857082228964661	WITHOUT_CLASSIFICATION
FIXME: This table will get moved into POSIX library so we can get all actual supported signals. This is a quick fix to support basic signals until that happens.	DESIGN	0.9983040214454556	DESIGN	0.0016959785545444422	WITHOUT_CLASSIFICATION
The implementations of these are all bonus (see TODO above) I was going to throw an error from these, but it appears to be the wrong place to do it.	DESIGN	0.9758192649515819	DESIGN	0.024180735048418053	WITHOUT_CLASSIFICATION
TODO: number formatting here, MRI uses "%-.10g", 1.4 API is a must?	DESIGN	0.9550872720902558	DESIGN	0.04491272790974414	WITHOUT_CLASSIFICATION
TODO: remove	DESIGN	0.653087100739459	DESIGN	0.34691289926054103	WITHOUT_CLASSIFICATION
FIXME moved this here to get what's obviously a utility method out of IRubyObject. perhaps security methods should find their own centralized home at some point.	DESIGN	0.9999412842580857	DESIGN	5.871574191416762E-5	WITHOUT_CLASSIFICATION
FIXME: Get rid of laziness and handle restricted access elsewhere	DESIGN	0.5239355289153014	WITHOUT_CLASSIFICATION	0.47606447108469846	DESIGN
TODO: Should frozen error have its own distinct class? If not should more share?	DESIGN	0.9010099407398754	DESIGN	0.09899005926012454	WITHOUT_CLASSIFICATION
TODO: this is kinda gross	DESIGN	0.992130281685938	DESIGN	0.007869718314061991	WITHOUT_CLASSIFICATION
Not sure how well this works, but it works much better than just currentTimeMillis by itself.	DESIGN	0.8344921353064526	WITHOUT_CLASSIFICATION	0.1655078646935473	DESIGN
TODO: exec should replace the current process. This could be possible with JNA.	DESIGN	0.8166287853939875	DESIGN	0.18337121460601252	WITHOUT_CLASSIFICATION
FIXME: In order for Thread to play well with the standard 'new' behavior, it must provide an allocator that can create empty object instances which initialize then fills with appropriate data.	DESIGN	0.9184938448654474	WITHOUT_CLASSIFICATION	0.08150615513455271	DESIGN
TODO: not sure that we should skip calling join() altogether. Thread.join() has some implications for Java Memory Model, etc.	DESIGN	0.6468090939431601	DESIGN	0.35319090605683995	WITHOUT_CLASSIFICATION
FIXME: There's some code duplication here with RubyObject#inspect	DESIGN	0.9779890261051386	DESIGN	0.022010973894861386	WITHOUT_CLASSIFICATION
FIXME: This should probably do some translation from Ruby priority levels to Java priority levels (until we have green threads)	DESIGN	0.9670050904424691	DESIGN	0.03299490955753084	WITHOUT_CLASSIFICATION
TODO: no java stringity	DESIGN	0.7908848966684787	WITHOUT_CLASSIFICATION	0.20911510333152122	DESIGN
need to reexamine this	DESIGN	0.9807701405191168	WITHOUT_CLASSIFICATION	0.01922985948088317	DESIGN
TODO: These were missing, so we're not handling them elsewhere?	DESIGN	0.5327061786636674	WITHOUT_CLASSIFICATION	0.4672938213363325	DESIGN
TODO: why are we duplicating the constants here, and then in File::Constants below? File::Constants is included in IO.	DESIGN	0.9767864286971274	DESIGN	0.023213571302872625	WITHOUT_CLASSIFICATION
TODO: this method is not present in MRI!	DESIGN	0.9931341120973989	DESIGN	0.006865887902601109	WITHOUT_CLASSIFICATION
TODO: This is also defined in the MetaClass too...Consolidate somewhere.	DESIGN	0.7126013475591295	DESIGN	0.2873986524408705	WITHOUT_CLASSIFICATION
Something wrong we don't know the cwd... TODO: Is this behavior really desirable? /mov	DESIGN	0.9990989759858392	DESIGN	9.010240141608524E-4	WITHOUT_CLASSIFICATION
Fixme: This does not have exact same semantics as RubyArray.join, but they probably could be consolidated (perhaps as join(args[], sep, doChomp)).	DESIGN	0.9610639302269457	WITHOUT_CLASSIFICATION	0.038936069773054284	DESIGN
TODO should this be deprecated ? (to be efficient, internals should deal with RubyHash directly)	DESIGN	0.9865204516812011	DESIGN	0.013479548318798976	WITHOUT_CLASSIFICATION
TODO: Implement tty? and isatty. We have no real capability to determine this from java, but if we could set tty status, then we could invoke jruby differently to allow stdin to return true on this. This would allow things like cgi.rb to work properly.	DESIGN	0.995851832128899	DESIGN	0.004148167871101006	WITHOUT_CLASSIFICATION
TODO: better error handling	DESIGN	0.9181018922883675	DESIGN	0.08189810771163251	WITHOUT_CLASSIFICATION
this seems unlikely to happen unless it's a totally bogus fileno ...so do we even need to bother trying to create one?	DESIGN	0.9353132738038741	WITHOUT_CLASSIFICATION	0.06468672619612577	DESIGN
IN FACT, we should probably raise an error, yes?	DESIGN	0.9888542600141469	WITHOUT_CLASSIFICATION	0.011145739985853168	DESIGN
TODO: Ruby reuses this logic for other "write" behavior by checking if it's an IO and calling write again	DESIGN	0.5110887834029926	WITHOUT_CLASSIFICATION	0.48891121659700737	DESIGN
FIXME we should probably still be dyncalling 'write' here	DESIGN	0.5933330356499564	WITHOUT_CLASSIFICATION	0.4066669643500436	DESIGN
TODO: This version differs from ioctl by checking whether fcntl exists and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9961499787652986	DESIGN	0.0038500212347013676	WITHOUT_CLASSIFICATION
FIXME: I don't like the null checks here	DESIGN	0.9887666378191594	DESIGN	0.011233362180840523	WITHOUT_CLASSIFICATION
TODO: handle writing into original buffer better	DESIGN	0.9985097130613019	DESIGN	0.0014902869386981415	WITHOUT_CLASSIFICATION
TODO: is this the right thing to do?	DESIGN	0.9987373933233593	DESIGN	0.0012626066766407657	WITHOUT_CLASSIFICATION
TODO: This isn't an exact port of MRI's pipe behavior, so revisit	DESIGN	0.9266740095052661	DESIGN	0.07332599049473384	WITHOUT_CLASSIFICATION
FIXME: If NativeException is expected to be used from Ruby code, it should provide a real allocator to be used. Otherwise Class.new will fail, as will marshalling. JRUBY-415	DESIGN	0.7343237906193288	WITHOUT_CLASSIFICATION	0.2656762093806712	DESIGN
FIXME: finalizer should be dupped here	DESIGN	0.9341724063807597	DESIGN	0.06582759361924037	WITHOUT_CLASSIFICATION
rb_obj_id Return the internal id of an object. FIXME: Should this be renamed to match its ruby name?	DESIGN	0.5041159716500625	WITHOUT_CLASSIFICATION	0.49588402834993756	DESIGN
FIXME: Obvious issue that not all platforms can display all attributes. Ugly hacks. Using generic posix library makes pushing inspect behavior into specific system impls rather painful.	DESIGN	0.9939096954964572	DESIGN	0.006090304503542776	WITHOUT_CLASSIFICATION
Workaround for JRUBY-4149	DESIGN	0.9987988116693706	WITHOUT_CLASSIFICATION	0.0012011883306293938	DESIGN
TODO: NOT_ALLOCATABLE_ALLOCATOR may be ok here, but it's unclear how Structs work with marshalling. Confirm behavior and ensure we're doing this correctly. JRUBY-415	DESIGN	0.5112505153827042	WITHOUT_CLASSIFICATION	0.4887494846172958	DESIGN
FIXME: This is copied code from RubyArray. Both RE, Struct, and Array should share one impl This is also hacky since I construct ruby objects to access ruby arrays through aref instead of something lower.	DESIGN	0.9999638107761449	DESIGN	3.6189223855142067E-5	WITHOUT_CLASSIFICATION
FIXME: We should not be regenerating this over and over	DESIGN	0.8745198444338546	DESIGN	0.1254801555661455	WITHOUT_CLASSIFICATION
FIXME: This is probably not very efficient, since it loads all methods for each call	DESIGN	0.5602279658054837	DESIGN	0.4397720341945163	WITHOUT_CLASSIFICATION
TODO: Consider a better way of synchronizing	DESIGN	0.9971641390707923	DESIGN	0.002835860929207708	WITHOUT_CLASSIFICATION
FIXME: Why was this using a FullFunctionCallbackMethod before that did callSuper?	DESIGN	0.5459739364152522	DESIGN	0.4540260635847479	WITHOUT_CLASSIFICATION
A cloned method now belongs to a new class. Set it. TODO: Make DynamicMethod immutable	DESIGN	0.6935456856542358	DESIGN	0.3064543143457642	WITHOUT_CLASSIFICATION
FIXME: figure out why we get null sometimes	DESIGN	0.9416968150012782	DESIGN	0.05830318499872181	WITHOUT_CLASSIFICATION
FIXME: Can get optimized for IEqlNode	DESIGN	0.6238467489870002	DESIGN	0.3761532510129998	WITHOUT_CLASSIFICATION
rb_mod_remove_cvar FIXME: any good reason to have two identical methods? (same as remove_class_variable)	DESIGN	0.856596070658012	WITHOUT_CLASSIFICATION	0.1434039293419879	DESIGN
FIXME: these descriptions should probably be moved out, to Constantine project which deals with all platform-dependent constants.	DESIGN	0.9739670847363358	DESIGN	0.02603291526366432	WITHOUT_CLASSIFICATION
TODO: what about n arg?	DESIGN	0.8817327891017309	DESIGN	0.11826721089826907	WITHOUT_CLASSIFICATION
TODO: rounding mode should not be hard-coded. See #mode.	DESIGN	0.9311518636036401	DESIGN	0.06884813639635982	WITHOUT_CLASSIFICATION
regular division with some default precision TODO: proper algorithm to set the precision	DESIGN	0.8033318111124143	DESIGN	0.19666818888758583	WITHOUT_CLASSIFICATION
TODO: better algorithm to set precision needed	DESIGN	0.9963664993418304	DESIGN	0.0036335006581695536	WITHOUT_CLASSIFICATION
FIXME: what should these really be? Numeric? assert x instanceof RubyComplex && y instanceof RubyComplex;	DESIGN	0.8576787640989832	DESIGN	0.14232123590101683	WITHOUT_CLASSIFICATION
FIXME: what should this really be? assert x instanceof RubyComplex;	DESIGN	0.9720781350704322	DESIGN	0.027921864929567844	WITHOUT_CLASSIFICATION
FIXME: the code below is a copy of RubyIO.puts, and we should avoid copy-paste.	DESIGN	0.8247083301846786	DESIGN	0.17529166981532143	WITHOUT_CLASSIFICATION
Yow...this is still ugly	DESIGN	0.9673984217050675	WITHOUT_CLASSIFICATION	0.03260157829493259	DESIGN
end hack	DESIGN	0.9586134254627039	WITHOUT_CLASSIFICATION	0.041386574537296106	DESIGN
TODO: Should next and return also catch here?	DESIGN	0.8799034050611853	WITHOUT_CLASSIFICATION	0.12009659493881474	DESIGN
TODO: Generalize this type-checking code into IRubyObject helper.	DESIGN	0.9990587112944215	DESIGN	9.412887055784875E-4	WITHOUT_CLASSIFICATION
TODO: newTypeError does not offer enough for ruby error string...	DESIGN	0.7784498072189867	DESIGN	0.22155019278101334	WITHOUT_CLASSIFICATION
FIXME: If true array is common enough we should pre-allocate and stick somewhere	DESIGN	0.6438290860978637	WITHOUT_CLASSIFICATION	0.35617091390213634	DESIGN
TODO: This is almost RubyModule#instance_methods on the metaClass. Perhaps refactor.	DESIGN	0.9639425122457296	DESIGN	0.036057487754270465	WITHOUT_CLASSIFICATION
The following three methods must be defined fast, since they expect to modify the current frame (i.e. they expect no frame will be allocated for them). JRUBY-1185.	DESIGN	0.9999562120694243	WITHOUT_CLASSIFICATION	4.378793057566959E-5	DESIGN
FIXME: I think this chunk is equivalent to MRI id2name (and not our public method id2name). Make into method if used more than once.	DESIGN	0.9999065915561516	DESIGN	9.340844384842864E-5	WITHOUT_CLASSIFICATION
TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.6398109182430186	WITHOUT_CLASSIFICATION	0.36018908175698144	DESIGN
TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.6398109182430186	WITHOUT_CLASSIFICATION	0.36018908175698144	DESIGN
TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.6398109182430186	WITHOUT_CLASSIFICATION	0.36018908175698144	DESIGN
optional args, so we have IRubyObject[] TODO: confirm	DESIGN	0.7113443251858641	WITHOUT_CLASSIFICATION	0.288655674814136	DESIGN
TODO: Split this into two sub-classes so that name and constNode can be specified seperately.	DESIGN	0.989649243630284	DESIGN	0.010350756369715988	WITHOUT_CLASSIFICATION
TODO: wire into new exception handling mechanism	DESIGN	0.9040989052739168	DESIGN	0.09590109472608327	WITHOUT_CLASSIFICATION
FIXME: ConstDecl could be two seperate classes (or done differently since constNode and name never exist at the same time.	DESIGN	0.7971062192159153	WITHOUT_CLASSIFICATION	0.20289378078408474	DESIGN
TODO: do above but not below for additional newline nodes	DESIGN	0.7794560178306071	DESIGN	0.22054398216939275	WITHOUT_CLASSIFICATION
TODO: Figure out how this can happen and possibly remove	DESIGN	0.9997085055128141	DESIGN	2.9149448718590197E-4	WITHOUT_CLASSIFICATION
TODO: At least ParserSupport.attrset passes argsNode as null. ImplicitNil is wrong magic for setupArgs since it will IRubyObject[] { nil }. So we need to figure out a nice fast null pattern for setupArgs. assert argsNode != null : "receiverNode is not null";	DESIGN	0.9999148114308418	DESIGN	8.518856915807938E-5	WITHOUT_CLASSIFICATION
FIXME: JRUBY-3188 ends up with condition returning null...quick fix until I can dig into it	DESIGN	0.998128936523879	DESIGN	0.0018710634761210385	WITHOUT_CLASSIFICATION
FIXME: I use a for block to implement END node because we need a proc which captures its enclosing scope. ForBlock now represents these node and should be renamed.	DESIGN	0.9992322547642104	DESIGN	7.677452357896658E-4	WITHOUT_CLASSIFICATION
method has more than 500 lines; we'll need to split it and therefore need to use a heap-based scope	DESIGN	0.5470263276334342	DESIGN	0.4529736723665659	WITHOUT_CLASSIFICATION
TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.8729064687161954	DESIGN	0.1270935312838047	WITHOUT_CLASSIFICATION
If it's a single-arg when but contains an array, we know it's a real literal array FIXME: This is a gross way to figure it out; parser help similar to yield argument passing (expandArguments) would be better	DESIGN	0.9935771750719085	DESIGN	0.006422824928091504	WITHOUT_CLASSIFICATION
TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.8729064687161954	DESIGN	0.1270935312838047	WITHOUT_CLASSIFICATION
XXX: const lookup can trigger const_missing; is that enough to warrant it always being executed?	DESIGN	0.9717734568817983	WITHOUT_CLASSIFICATION	0.028226543118201684	DESIGN
if body is a rescue node, inspect its pieces separately to avoid it disabling all optz TODO: this is gross.	DESIGN	0.8691521022661843	DESIGN	0.13084789773381575	WITHOUT_CLASSIFICATION
if body is a rescue node, inspect its pieces separately to avoid it disabling all optz TODO: this is gross.	DESIGN	0.8691521022661843	DESIGN	0.13084789773381575	WITHOUT_CLASSIFICATION
FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.9992436622563274	DESIGN	7.563377436726002E-4	WITHOUT_CLASSIFICATION
TODO: This filtering is kind of gross...it would be nice to get some parser help here	DESIGN	0.9999966214904131	DESIGN	3.3785095867697198E-6	WITHOUT_CLASSIFICATION
FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.9992436622563274	DESIGN	7.563377436726002E-4	WITHOUT_CLASSIFICATION
arguments compilers always create IRubyObject[], but we want to use RubyArray.concat here; FIXME: as a result, this is NOT efficient, since it creates and then later unwraps an array	DESIGN	0.8303133932317522	DESIGN	0.1696866067682478	WITHOUT_CLASSIFICATION
FIXME: This is temporary since the variable compilers assume we want args already on stack for assignment. We just pop and continue with 1.9 args logic.	DESIGN	0.9237903390922287	DESIGN	0.0762096609077713	WITHOUT_CLASSIFICATION
TODO: reads/writes from frame TODO: information on scoping TODO: visibility?	DESIGN	0.5947212547092716	WITHOUT_CLASSIFICATION	0.4052787452907283	DESIGN
for visibility checking without requiring frame self TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.6704839741715062	WITHOUT_CLASSIFICATION	0.3295160258284937	DESIGN
TODO: cache?	DESIGN	0.6314701927830996	WITHOUT_CLASSIFICATION	0.36852980721690043	DESIGN
TODO: cache?	DESIGN	0.6314701927830996	WITHOUT_CLASSIFICATION	0.36852980721690043	DESIGN
index for the item this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.956317138069151	WITHOUT_CLASSIFICATION	0.04368286193084899	DESIGN
if we don't have opt args, start after args (they will be assigned later) this is for crap like def foo(a = (b = true; 1)) which numbers b before a FIXME: only starting after required args, since opt args may access others and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.9901770829116918	WITHOUT_CLASSIFICATION	0.009822917088308215	DESIGN
FIXME: this really ought to be in clinit, but it doesn't matter much	DESIGN	0.9339252849513832	DESIGN	0.06607471504861696	WITHOUT_CLASSIFICATION
install invokedynamic bootstrapper TODO need to abstract this setup behind another compiler interface	DESIGN	0.9940962704958568	DESIGN	0.005903729504143224	WITHOUT_CLASSIFICATION
FIXME: This isn't right for within ensured/rescued code	DESIGN	0.9915987300590692	DESIGN	0.008401269940930899	WITHOUT_CLASSIFICATION
SSS FIXME: Deprecated! Going forward, all instructions should come from the CFG	DESIGN	0.5105105495190686	DESIGN	0.48948945048093123	WITHOUT_CLASSIFICATION
SSS FIXME: Do we need to check if l is same as whatever popped?	DESIGN	0.7857712458986342	DESIGN	0.21422875410136574	WITHOUT_CLASSIFICATION
SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.9754427824659896	DESIGN	0.024557217534010446	WITHOUT_CLASSIFICATION
SSS FIXME: I added this in. Is this correct?	DESIGN	0.995910157878984	DESIGN	0.0040898421210159965	WITHOUT_CLASSIFICATION
SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.9754427824659896	DESIGN	0.024557217534010446	WITHOUT_CLASSIFICATION
SSS FIXME: Are we guaranteed that we splats dont head to multiple-assignment nodes! i.e. |(a,b)|?	DESIGN	0.7929887492965835	DESIGN	0.2070112507034165	WITHOUT_CLASSIFICATION
SSS FIXME: Can this return anything other than nil?	DESIGN	0.6269014892763815	WITHOUT_CLASSIFICATION	0.37309851072361855	DESIGN
SSS FIXME: What happens to the add class in this case??	DESIGN	0.9612196457763647	DESIGN	0.038780354223635356	WITHOUT_CLASSIFICATION
CON FIXME: I don't know how to make case be an expression...does that logic need to go here?	DESIGN	0.9954166995817403	DESIGN	0.004583300418259679	WITHOUT_CLASSIFICATION
SSS FIXME: Where is this set up? How is this diff from ClassVarDeclNode??	DESIGN	0.9450134254154327	DESIGN	0.05498657458456738	WITHOUT_CLASSIFICATION
SSS FIXME: Is this correct?	DESIGN	0.979404147943287	DESIGN	0.02059585205671303	WITHOUT_CLASSIFICATION
SSS FIXME: Used anywhere? I don't see calls to this anywhere public Operand buildDAsgnAssignment(Node node, IR_Scope s) { DAsgnNode dasgnNode = (DAsgnNode) node; s.getVariableCompiler().assignLocalVariable(dasgnNode.getIndex(), dasgnNode.getDepth()); }	DESIGN	0.7935035694340019	WITHOUT_CLASSIFICATION	0.20649643056599806	DESIGN
SSS FIXME: Receiver -- this is the class meta object basically? Operand receiver = build(defsNode.getReceiverNode(), s);	DESIGN	0.7948895337441229	WITHOUT_CLASSIFICATION	0.2051104662558771	DESIGN
self = args[0] SSS FIXME: Verify that this is correct	DESIGN	0.6501789410781509	WITHOUT_CLASSIFICATION	0.3498210589218491	DESIGN
SSS FIXME: Is this correct?	DESIGN	0.979404147943287	DESIGN	0.02059585205671303	WITHOUT_CLASSIFICATION
SSS FIXME: 1. Is the ordering correct? (poll before next)	DESIGN	0.87082032541297	DESIGN	0.12917967458702995	WITHOUT_CLASSIFICATION
add a "self" recv here TODO: is this right?	DESIGN	0.9870069226081567	DESIGN	0.012993077391843287	WITHOUT_CLASSIFICATION
SSS FIXME: Is this correctly placed ... at the end of the loop iteration?	DESIGN	0.9581929154550244	DESIGN	0.041807084544975594	WITHOUT_CLASSIFICATION
SSS FIXME: Where does this go? m.setLinePosition(arrayNode.getPosition());	DESIGN	0.7939949918239783	DESIGN	0.20600500817602174	WITHOUT_CLASSIFICATION
SSS FIXME: I could make IR_Loop a scope too ... semantically, it is a scope, but, functionally, not sure if this is required yet ...	DESIGN	0.9061350318007744	DESIGN	0.09386496819922563	WITHOUT_CLASSIFICATION
SSS FIXME: Should this be a string literal or a string? Dummy class for the script	DESIGN	0.6465645484572392	WITHOUT_CLASSIFICATION	0.3534354515427607	DESIGN
SSS FIXME: Does int suffice, or do we need long?	DESIGN	0.958120017451696	DESIGN	0.04187998254830398	WITHOUT_CLASSIFICATION
SSS FIXME: Correct? Where does closure arg come from?	DESIGN	0.769707734564741	WITHOUT_CLASSIFICATION	0.23029226543525902	DESIGN
SSS FIXME: Should I have a reference to the IR_loop that is being retried?	DESIGN	0.8139801102619547	DESIGN	0.18601988973804534	WITHOUT_CLASSIFICATION
Simplify the variables too -- to keep these variables in sync with what is actually used in the when clauses This is not required for correctness reasons, but only for performance reasons.	DESIGN	0.9798055218943545	WITHOUT_CLASSIFICATION	0.020194478105645473	DESIGN
SSS FIXME: This should never get called for constant svalues	DESIGN	0.8072602277757707	DESIGN	0.19273977222422936	WITHOUT_CLASSIFICATION
SSS FIXME: Should this be Operand or CompoundString? Can it happen that symbols are built out of other than compound strings? Or can it happen during optimizations that this becomes a generic operand?	DESIGN	0.9985606494737935	DESIGN	0.001439350526206482	WITHOUT_CLASSIFICATION
TODO: need to get this back into the method signature...now is too late...	DESIGN	0.9994151311086842	DESIGN	5.848688913158697E-4	WITHOUT_CLASSIFICATION
Hack in to replace usual readline with this	DESIGN	0.981439967480329	WITHOUT_CLASSIFICATION	0.018560032519670987	DESIGN
bit risky if someone changes completor, but useful for method calls	DESIGN	0.9997329341951403	WITHOUT_CLASSIFICATION	2.670658048596431E-4	DESIGN
FIXME: This determine module is in a strange location and should somehow be in block	DESIGN	0.8708334697658016	DESIGN	0.12916653023419838	WITHOUT_CLASSIFICATION
Create block for this iter node FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.9421555997516661	WITHOUT_CLASSIFICATION	0.057844400248334024	DESIGN
we basically ignore protocol. let someone report it...	DESIGN	0.9991212704921899	WITHOUT_CLASSIFICATION	8.78729507810097E-4	DESIGN
Workaround for a bug in Sun's JDK 1.5.x, see http:bugs.sun.com/bugdatabase/view_bug.do?bug_id=6303753	DESIGN	0.9487702333031718	WITHOUT_CLASSIFICATION	0.0512297666968282	DESIGN
context is null, wipe out the SoftReference (this could be done with a reference queue)	DESIGN	0.9988014313495204	WITHOUT_CLASSIFICATION	0.0011985686504796553	DESIGN
FIXME we want to eliminate these type casts when possible	DESIGN	0.7204699260329932	WITHOUT_CLASSIFICATION	0.2795300739670068	DESIGN
TODO: Determine whether we should perhaps store non-singleton class in the implementationClass	DESIGN	0.9987195939209965	DESIGN	0.0012804060790034683	WITHOUT_CLASSIFICATION
FIXME: set up a CallConfiguration for this	DESIGN	0.892236589885753	DESIGN	0.10776341011424695	WITHOUT_CLASSIFICATION
FIXME: set up a call configuration for this	DESIGN	0.9439695872409154	DESIGN	0.056030412759084595	WITHOUT_CLASSIFICATION
TODO: make this do specific-arity calling	DESIGN	0.9939957175836664	DESIGN	0.006004282416333564	WITHOUT_CLASSIFICATION
add 'new' with full signature, so it's guaranteed to be directly accessible TODO: no need for this to be a full, formal JVM signature	DESIGN	0.9561871351869463	DESIGN	0.043812864813053735	WITHOUT_CLASSIFICATION
add method with full signature, so it's guaranteed to be directly accessible TODO: no need for this to be a full, formal JVM signature	DESIGN	0.9849691786745568	DESIGN	0.01503082132544335	WITHOUT_CLASSIFICATION
FIXME This whole thing could probably be implemented as a module and mixed into appropriate classes, especially if it uses either IOInput/OutputStream or is smart about the kind of IO-like object it's being used against.	DESIGN	0.9987246231976821	DESIGN	0.001275376802317878	WITHOUT_CLASSIFICATION
using IOInputStream may not be the most performance way, but it's easy.	DESIGN	0.9999377447431295	WITHOUT_CLASSIFICATION	6.225525687051128E-5	DESIGN
using IOOutputStream may not be the most performance way, but it's easy.	DESIGN	0.9999377447431295	WITHOUT_CLASSIFICATION	6.225525687051128E-5	DESIGN
using IOChannel may not be the most performant way, but it's easy.	DESIGN	0.9999447359497896	WITHOUT_CLASSIFICATION	5.526405021047515E-5	DESIGN
these extra arrays are really unfortunate; split some of these paths out to eliminate?	DESIGN	0.7882585650976139	WITHOUT_CLASSIFICATION	0.21174143490238598	DESIGN
TODO: WRONG - get interfaces from class	DESIGN	0.8678605360703675	DESIGN	0.13213946392963252	WITHOUT_CLASSIFICATION
TODO: catch exception if constant is already set by other thread	DESIGN	0.8903483537044219	WITHOUT_CLASSIFICATION	0.10965164629557816	DESIGN
TODO: public only?	DESIGN	0.8725911239531957	WITHOUT_CLASSIFICATION	0.1274088760468044	DESIGN
see note below re: 2-field kludge	DESIGN	0.9955606361053996	WITHOUT_CLASSIFICATION	0.00443936389460038	DESIGN
TODO: protected methods. this is going to require a rework of some of the mechanism.	DESIGN	0.9952599641863114	DESIGN	0.0047400358136885905	WITHOUT_CLASSIFICATION
TODO: protected methods. this is going to require a rework of some of the mechanism.	DESIGN	0.9952599641863114	DESIGN	0.0047400358136885905	WITHOUT_CLASSIFICATION
FIXME: do we really want 'declared' methods? includes private/protected, and does _not_ include superclass methods	DESIGN	0.9513803108736953	DESIGN	0.04861968912630474	WITHOUT_CLASSIFICATION
FIXME: This doesn't actually support anything but String	DESIGN	0.6004738891079305	DESIGN	0.3995261108920694	WITHOUT_CLASSIFICATION
again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.9235707642846596	DESIGN	0.07642923571534045	WITHOUT_CLASSIFICATION
again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.9235707642846596	DESIGN	0.07642923571534045	WITHOUT_CLASSIFICATION
this needs to be split, since conditional calling #inherited doesn't fit standard ruby semantics	DESIGN	0.8400608762022965	WITHOUT_CLASSIFICATION	0.1599391237977034	DESIGN
TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.5767736687084842	DESIGN	0.42322633129151593	WITHOUT_CLASSIFICATION
TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.5767736687084842	DESIGN	0.42322633129151593	WITHOUT_CLASSIFICATION
this covers the rare case of lower-case class names (and thus will fail 99.999% of the time). fortunately, we'll only do this once per package name. (and seriously, folks, look into best practices...)	DESIGN	0.8159914442701186	WITHOUT_CLASSIFICATION	0.18400855572988142	DESIGN
FIXME: we should also support orgs that use capitalized package names (including, embarrassingly, the one I work for), but this should be enabled by a system property, as the expected default behavior for an upper-case value should be (and is) to treat it as a class name, and raise an exception if it's not found	DESIGN	0.9994217931018198	DESIGN	5.782068981802972E-4	WITHOUT_CLASSIFICATION
TODO: check for Java reserved names and raise exception if encountered	DESIGN	0.9415762995591731	WITHOUT_CLASSIFICATION	0.05842370044082688	DESIGN
upper-case package name TODO: top-level upper-case package was supported in the previous (Ruby-based) implementation, so leaving as is. see note at #getProxyOrPackageUnderPackage re: future approach below the top-level.	DESIGN	0.6360238682438116	DESIGN	0.3639761317561884	WITHOUT_CLASSIFICATION
FIXME: wtf is this? Why would these use the class?	DESIGN	0.998735458503032	DESIGN	0.0012645414969679604	WITHOUT_CLASSIFICATION
FIXME: needs to be rethought	DESIGN	0.5409393007335404	WITHOUT_CLASSIFICATION	0.45906069926645976	DESIGN
TODO: specifying soft refs, may want to compare memory consumption, behavior with weak refs (specify WEAK in place of SOFT below)	DESIGN	0.8094552288067935	DESIGN	0.19054477119320637	WITHOUT_CLASSIFICATION
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9850874094994686	DESIGN	0.014912590500531493	WITHOUT_CLASSIFICATION
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9850874094994686	DESIGN	0.014912590500531493	WITHOUT_CLASSIFICATION
if we get here, we found a matching method, use it TODO: choose narrowest method by continuing to search	DESIGN	0.9711760708604578	DESIGN	0.028823929139542164	WITHOUT_CLASSIFICATION
TODO: Only setAccessible to account for pattern found by accessing constants included from a non-public interface. (aka java.util.zip.ZipConstants being implemented by many classes)	DESIGN	0.991732358593751	DESIGN	0.008267641406249072	WITHOUT_CLASSIFICATION
TODO: Only setAccessible to account for pattern found by accessing constants included from a non-public interface. (aka java.util.zip.ZipConstants being implemented by many classes) TODO: not sure we need this at all, since we only expose public fields. field.setAccessible(true);	DESIGN	0.9966712789560584	DESIGN	0.003328721043941574	WITHOUT_CLASSIFICATION
FIXME: NOT_ALLOCATABLE_ALLOCATOR is probably not right here, since we might eventually want JavaArray to be marshallable. JRUBY-414	DESIGN	0.948002799648905	DESIGN	0.0519972003510951	WITHOUT_CLASSIFICATION
FIXME: do we really want 'declared' methods? includes private/protected, and does _not_ include superclass methods. also, the getDeclared calls may throw SecurityException if we're running under a restrictive security policy.	DESIGN	0.9388189692019213	DESIGN	0.061181030798078656	WITHOUT_CLASSIFICATION
don't bother to check if final method, it won't be there (not generated, can't be!)	DESIGN	0.9999776217606502	WITHOUT_CLASSIFICATION	2.237823934982843E-5	DESIGN
super calls from proxies must use reflected method FIXME: possible to make handles do the superclass call?	DESIGN	0.9441160214654889	DESIGN	0.055883978534511006	WITHOUT_CLASSIFICATION
actual type does not exactly match method return type, re-get converter FIXME: when the only autoconversions are primitives, this won't be needed	DESIGN	0.8537117110056333	WITHOUT_CLASSIFICATION	0.1462882889943667	DESIGN
FIXME: Ideally JavaObject instances should be marshallable, which means that the JavaObject metaclass should have an appropriate allocator. JRUBY-414	DESIGN	0.5845010811404908	WITHOUT_CLASSIFICATION	0.4154989188595093	DESIGN
FIXME: shouldn't need @__java_ovrd_methods, just query locally defined methods.	DESIGN	0.7649958239653825	WITHOUT_CLASSIFICATION	0.23500417603461754	DESIGN
We always prepend an org.jruby.proxy package to the beginning because java and javax packages are protected and signed jars prevent us generating new classes with those package names. See JRUBY-2439.	DESIGN	0.9877332239826886	WITHOUT_CLASSIFICATION	0.012266776017311331	DESIGN
TODO: Only used by interface implementation; eliminate it	DESIGN	0.9204199900057557	DESIGN	0.07958000999424424	WITHOUT_CLASSIFICATION
Create block for this iter node FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.9421555997516661	WITHOUT_CLASSIFICATION	0.057844400248334024	DESIGN
modules are included with a shim class; we must find that shim to handle super() appropriately	DESIGN	0.9956094876976622	WITHOUT_CLASSIFICATION	0.004390512302337774	DESIGN
lame generics issues: making Segment class static and manually inserting cache reference to work around various problems generically referencing methods/vars across classes.	DESIGN	0.9581615722670704	WITHOUT_CLASSIFICATION	0.04183842773292964	DESIGN
entry exists, proxy doesn't match. replace. this could happen if old proxy was gc'ed TODO: raise exception if stored proxy is non-null? (not gc'ed)	DESIGN	0.8885921596082071	WITHOUT_CLASSIFICATION	0.11140784039179293	DESIGN
FIXME: How much more obtuse can this be? Heredoc already parsed this and saved string...Do not parse..just return	DESIGN	0.7006802324277361	DESIGN	0.29931976757226386	WITHOUT_CLASSIFICATION
ruby constants for strings (should this be moved somewhere else?)	DESIGN	0.9630702570856013	WITHOUT_CLASSIFICATION	0.03692974291439859	DESIGN
Hacky: Advance position to eat newline here....	DESIGN	0.9985951407699899	WITHOUT_CLASSIFICATION	0.0014048592300101102	DESIGN
FIXME: Not sure what the semantics of transfer are cFiber.defineFastMethod("transfer", cb.getFastOptMethod("transfer"));	DESIGN	0.5926313877370976	DESIGN	0.4073686122629025	WITHOUT_CLASSIFICATION
ignore...bean doesn't get registered TODO: Why does that bother me?	DESIGN	0.6701535007683057	DESIGN	0.3298464992316944	WITHOUT_CLASSIFICATION
ignore...bean doesn't get registered TODO: Why does that bother me?	DESIGN	0.6701535007683057	DESIGN	0.3298464992316944	WITHOUT_CLASSIFICATION
ENEBO: Totally weird naming (in MRI is not allocated and is a local var name)	DESIGN	0.9820385925373769	WITHOUT_CLASSIFICATION	0.01796140746262305	DESIGN
FIXME: Remove this from grammars.	DESIGN	0.8313341756356128	DESIGN	0.1686658243643871	WITHOUT_CLASSIFICATION
FIXME: Consider fixing node_assign itself rather than single case	DESIGN	0.8877505852523666	WITHOUT_CLASSIFICATION	0.11224941474763342	DESIGN
Workaround for JRUBY-2326 (MRI does not enter this production for some reason)	DESIGN	0.9714231949434122	WITHOUT_CLASSIFICATION	0.02857680505658772	DESIGN
FIXME: lose syntactical elements here (and others like this)	DESIGN	0.9144082096224933	DESIGN	0.08559179037750676	WITHOUT_CLASSIFICATION
ENEBO: Lots of optz in 1.9 parser here	DESIGN	0.9821573171381054	WITHOUT_CLASSIFICATION	0.017842682861894547	DESIGN
This is perhaps innefficient timewise? Optimal spacewise	DESIGN	0.5383917146774881	WITHOUT_CLASSIFICATION	0.46160828532251197	DESIGN
This is a dummy scope; we should find a way to make that more explicit	DESIGN	0.9521961691411175	DESIGN	0.04780383085888256	WITHOUT_CLASSIFICATION
We clone dynamic scope because this will be a new instance of a block. Any previously captured instances of this block may still be around and we do not want to start overwriting those values when we create a new one. ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.5808145701943598	WITHOUT_CLASSIFICATION	0.4191854298056402	DESIGN
TODO: This probably isn't the best hack, but it works until we can have different root frame setup for 1.9 easily.	DESIGN	0.8186773119714269	DESIGN	0.18132268802857313	WITHOUT_CLASSIFICATION
FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9816162348733773	DESIGN	0.018383765126622622	WITHOUT_CLASSIFICATION
FIXME: I think we need these pushed somewhere?	DESIGN	0.99001620068012	DESIGN	0.009983799319880114	WITHOUT_CLASSIFICATION
FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9816162348733773	DESIGN	0.018383765126622622	WITHOUT_CLASSIFICATION
FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9816162348733773	DESIGN	0.018383765126622622	WITHOUT_CLASSIFICATION
XXX: Again, screwy evaling under previous frame's scope	DESIGN	0.9994444676844602	WITHOUT_CLASSIFICATION	5.555323155399255E-4	DESIGN
FIXME: This version is faster than the previous, but both suffer from a crucial flaw: It is impossible to create an ObjectSpace with an iterator that doesn't either: a. hold on to objects that might otherwise be collected or b. have no way to guarantee that a call to hasNext() will be correct or that a subsequent call to next() will produce an object. For our purposes, for now, this may be acceptable.	DESIGN	0.5637912351382873	DESIGN	0.43620876486171284	WITHOUT_CLASSIFICATION
FIXME: Maybe not best place, but move it to a good home	DESIGN	0.5563271872116519	DESIGN	0.4436728127883482	WITHOUT_CLASSIFICATION
FIXME: This is gross. Don't do this.	DESIGN	0.9350367830811133	DESIGN	0.0649632169188867	WITHOUT_CLASSIFICATION
@author headius FIXME convert to enum ?	DESIGN	0.9669830785100603	WITHOUT_CLASSIFICATION	0.03301692148993971	DESIGN
FIXME: No, I don't like it.	DESIGN	0.6741645377398088	DESIGN	0.3258354622601911	WITHOUT_CLASSIFICATION
TODO: This is probably BAD...	DESIGN	0.8967919357333118	DESIGN	0.1032080642666882	WITHOUT_CLASSIFICATION
FIXME: not very efficient	DESIGN	0.8727951021415824	WITHOUT_CLASSIFICATION	0.12720489785841754	DESIGN
invoke callMethodMissing method directly TODO: this could be further optimized, since some DSLs hit method_missing pretty hard...	DESIGN	0.8842778887195999	DESIGN	0.11572211128040003	WITHOUT_CLASSIFICATION
TODO this is really ineffient, and potentially a problem everytime anyone require's something. we should try to make LoadPath a special array object.	DESIGN	0.997442116573715	DESIGN	0.002557883426284941	WITHOUT_CLASSIFICATION
FIXME: inefficient; constructing a bignum just for dumping?	DESIGN	0.6359568928240743	WITHOUT_CLASSIFICATION	0.36404310717592564	DESIGN
FIXME: not very efficient	DESIGN	0.8727951021415824	WITHOUT_CLASSIFICATION	0.12720489785841754	DESIGN
FIXME: not very efficient	DESIGN	0.8727951021415824	WITHOUT_CLASSIFICATION	0.12720489785841754	DESIGN
FIXME: not very efficient	DESIGN	0.8727951021415824	WITHOUT_CLASSIFICATION	0.12720489785841754	DESIGN
FIXME: not very efficient	DESIGN	0.8727951021415824	WITHOUT_CLASSIFICATION	0.12720489785841754	DESIGN
FIXME: this should go somewhere more generic -- maybe IdUtil	DESIGN	0.9953255018781706	DESIGN	0.004674498121829329	WITHOUT_CLASSIFICATION
FIXME: potentially could just use ByteList here?	DESIGN	0.5433073598809076	DESIGN	0.45669264011909233	WITHOUT_CLASSIFICATION
FIXME: This is almost entirely duplicated from Main.java	DESIGN	0.8173574371193402	DESIGN	0.18264256288065983	WITHOUT_CLASSIFICATION
TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.6629688207929575	DESIGN	0.3370311792070424	WITHOUT_CLASSIFICATION
TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.6629688207929575	DESIGN	0.3370311792070424	WITHOUT_CLASSIFICATION
grrr, arghh, want to subclass sun.misc.FloatingDecimal, but can't, so we must do all this (the next 70 lines of code), which has already been done by FloatingDecimal.	DESIGN	0.886459040894454	WITHOUT_CLASSIFICATION	0.11354095910554603	DESIGN
it would be nice (and logical!) if exponent form behaved like E/e, and decimal form behaved like f, but no such luck. hence:	DESIGN	0.9714822941125615	WITHOUT_CLASSIFICATION	0.028517705887438505	DESIGN
This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.9957481558739325	WITHOUT_CLASSIFICATION	0.004251844126067567	DESIGN
This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.9957481558739325	WITHOUT_CLASSIFICATION	0.004251844126067567	DESIGN
TODO: get rid of this (lax returns 0.0, strict will throw)	DESIGN	0.8643889872581487	DESIGN	0.13561101274185128	WITHOUT_CLASSIFICATION
TODO: turn off the negative? will return -0.0 in lax mode	DESIGN	0.7634997131145357	WITHOUT_CLASSIFICATION	0.2365002868854644	DESIGN
FIXME: this probably belongs in a different package.	DESIGN	0.87958739535808	DESIGN	0.12041260464192005	WITHOUT_CLASSIFICATION
TODO: It would be nice to throw a better error for this	DESIGN	0.9999456539207559	DESIGN	5.434607924405086E-5	WITHOUT_CLASSIFICATION
TODO: It would be nice to throw a better error for this	DESIGN	0.9999456539207559	DESIGN	5.434607924405086E-5	WITHOUT_CLASSIFICATION
FIXME: I don't like this	DESIGN	0.9567613518488879	DESIGN	0.043238648151112044	WITHOUT_CLASSIFICATION
TODO: It's perhaps just a coincidence that all the channels for which we should raise are instanceof SelectableChannel, since stdio is not...so this bothers me slightly. -CON	DESIGN	0.9998537429476141	DESIGN	1.4625705238590289E-4	WITHOUT_CLASSIFICATION
FIXME: Clearing read buffer here...is this appropriate?	DESIGN	0.6991044548990359	DESIGN	0.30089554510096395	WITHOUT_CLASSIFICATION
TODO this should entry into error handling somewhere	DESIGN	0.9913333843455507	DESIGN	0.008666615654449351	WITHOUT_CLASSIFICATION
FIXME: This worries me a bit, since it could allocate a lot with a large newLength	DESIGN	0.8534367686594009	WITHOUT_CLASSIFICATION	0.14656323134059904	DESIGN
We use a highly uncommon string to represent the paragraph delimiter (100% soln not worth it)	DESIGN	0.999379716910196	WITHOUT_CLASSIFICATION	6.202830898039427E-4	DESIGN
TODO: Ruby does not seem to care about invalid numeric mode values I am not sure if ruby overflows here also...	DESIGN	0.9567814546125841	DESIGN	0.0432185453874159	WITHOUT_CLASSIFICATION
TODO: Make this more intelligible value	DESIGN	0.812631955015634	DESIGN	0.18736804498436602	WITHOUT_CLASSIFICATION
XXX: do something?	DESIGN	0.9987523030753656	WITHOUT_CLASSIFICATION	0.0012476969246344005	DESIGN
for visibility checking without requiring frame self TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.6704839741715062	WITHOUT_CLASSIFICATION	0.3295160258284937	DESIGN
for visibility checking without requiring frame self TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.6704839741715062	WITHOUT_CLASSIFICATION	0.3295160258284937	DESIGN
up to ten, stuff into tmp locals, load in reverse order, and assign FIXME: There's probably a slightly smarter way, but is it important?	DESIGN	0.9434939157781388	DESIGN	0.05650608422186129	WITHOUT_CLASSIFICATION
index for the item this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.956317138069151	WITHOUT_CLASSIFICATION	0.04368286193084899	DESIGN
if we don't have opt args, start after args (they will be assigned later) this is for crap like def foo(a = (b = true; 1)) which numbers b before a FIXME: only starting after required args, since opt args may access others and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.9901770829116918	WITHOUT_CLASSIFICATION	0.009822917088308215	DESIGN
SSS FIXME: These should get normally compiled or initialized some other way ... SSS FIXME: Parent/super-type info is incorrect! These are just placeholders for now .. this needs to be updated with real class objects later!	DESIGN	0.9999814296884432	DESIGN	1.8570311556756756E-5	WITHOUT_CLASSIFICATION
SSS FIXME: Move this code to some utils area .. or probably there is already a method for this in some jruby utils class Holy cow! Just to append two darned arrays!	DESIGN	0.9998890604427141	DESIGN	1.1093955728593195E-4	WITHOUT_CLASSIFICATION
SSS FIXME: This method (at least in the context of multiple assignment) is a little weird. It calls regular to_ary on the object. But, if it encounters a method_missing, the value is inserted into an 1-element array! try "a,b,c = 1" first; then define Fixnum.to_ary method and try it again. Ex: http:gist.github.com/163551	DESIGN	0.9018302672863823	DESIGN	0.09816973271361769	WITHOUT_CLASSIFICATION
This is for JRUBY-2988, since after a suspend the terminal seems to need to be reinitialized. Since we can't easily detect suspension, initialize after every readline. Probably not fast, but this is for interactive terminals anyway...so who cares?	DESIGN	0.9953770418189959	WITHOUT_CLASSIFICATION	0.004622958181004137	DESIGN
set up a field for the CacheEntry TODO: make this an array so it's not as much class metadata; similar to AbstractScript stuff	DESIGN	0.9793307092722835	DESIGN	0.020669290727716477	WITHOUT_CLASSIFICATION
exit monitor before making call FIXME: this not being in a finally is a little worrisome	DESIGN	0.7996865368059045	DESIGN	0.2003134631940955	WITHOUT_CLASSIFICATION
FIXME: Added this because marshal_spec seemed to reconstitute objects without calling dataWrapStruct this resulted in object being null after unmarshalling...	DESIGN	0.9397440999804675	DESIGN	0.060255900019532516	WITHOUT_CLASSIFICATION
if we get here, we found a matching method, use it TODO: choose narrowest method by continuing to search	DESIGN	0.9711760708604578	DESIGN	0.028823929139542164	WITHOUT_CLASSIFICATION
We clone dynamic scope because this will be a new instance of a block. Any previously captured instances of this block may still be around and we do not want to start overwriting those values when we create a new one. ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.5808145701943598	WITHOUT_CLASSIFICATION	0.4191854298056402	DESIGN
TODO: This is actually now returning the scope of whoever called Method#to_proc which is obviously wrong; but there's no scope to provide for many methods. It fixes JRUBY-2237, but needs a better solution.	DESIGN	0.9599620773776459	DESIGN	0.04003792262235401	WITHOUT_CLASSIFICATION
FIXME: We should be getting this from the runtime rather than assume none? return runtime.getEncodingService().getEncoding(runtime.getDefaultExternalEncoding());	DESIGN	0.8269251782659877	DESIGN	0.17307482173401237	WITHOUT_CLASSIFICATION
ignore...bean doesn't get registered TODO: Why does that bother me?	DESIGN	0.6701535007683057	DESIGN	0.3298464992316944	WITHOUT_CLASSIFICATION
This is a fairly specific hack for empty string, but it does the job	DESIGN	0.7936271402573182	DESIGN	0.2063728597426817	WITHOUT_CLASSIFICATION
XXX This constructor is a hack to implement the __END__ syntax. Converting a reader back into an InputStream doesn't generally work.	DESIGN	0.9938553395188934	DESIGN	0.006144660481106595	WITHOUT_CLASSIFICATION
FIXME: Total hack to get flash in Rails marshalling/unmarshalling in session ok...We need to totally change marshalling to work with overridden core classes.	DESIGN	0.9981864332181459	DESIGN	0.0018135667818540565	WITHOUT_CLASSIFICATION
FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9998717956080287	DESIGN	1.282043919712165E-4	WITHOUT_CLASSIFICATION
We're not setting the provider or anything, but it seems that BouncyCastle does some internal things in its provider's constructor which require it to be executed in a secure context. Ideally this hack should be removed. See JRUBY-3919 and this BC bug: http:www.bouncycastle.org/jira/browse/BJA-227	DESIGN	0.9954044107248549	DESIGN	0.004595589275145126	WITHOUT_CLASSIFICATION
FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.9777498954027184	DESIGN	0.02225010459728153	WITHOUT_CLASSIFICATION
FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.9777498954027184	DESIGN	0.02225010459728153	WITHOUT_CLASSIFICATION
hack to get right style for input	DESIGN	0.8067877195631278	DESIGN	0.19321228043687214	WITHOUT_CLASSIFICATION
Object#to_a is obsolete. We match Ruby's hack until to_a goes away. Then we can remove this hack too.	DESIGN	0.796503349175728	DESIGN	0.20349665082427204	WITHOUT_CLASSIFICATION
small hack to save a cast later on	DESIGN	0.8390710640153389	WITHOUT_CLASSIFICATION	0.16092893598466101	DESIGN
temporary hack to handle non-Ruby values will come up with better solution shortly	DESIGN	0.9964423614636594	DESIGN	0.003557638536340593	WITHOUT_CLASSIFICATION
Object#to_a is obsolete. We match Ruby's hack until to_a goes away. Then we can remove this hack too.	DESIGN	0.796503349175728	DESIGN	0.20349665082427204	WITHOUT_CLASSIFICATION
HACK: in order to have stdout/err act like ttys and flush always, we set anything assigned to stdout/stderr to sync	DESIGN	0.9998000088991984	WITHOUT_CLASSIFICATION	1.9999110080154374E-4	DESIGN
HACK: force clinit to be created	DESIGN	0.9996338658631897	WITHOUT_CLASSIFICATION	3.6613413681028966E-4	DESIGN
FIXME: This is pretty gross; we should have a cleaner initialization that doesn't depend on package-visible fields and ideally is atomic, probably using an immutable structure we replace all at once. lazy, null when no groups defined	DESIGN	0.8956279942066336	DESIGN	0.10437200579336627	WITHOUT_CLASSIFICATION
TODO: should probably apply the null object pattern for a non-allowed class, rather than null	DESIGN	0.985423795286391	DESIGN	0.014576204713608931	WITHOUT_CLASSIFICATION
TODO: set our metaclass to target's class (i.e. scary!)	DESIGN	0.929066455917245	DESIGN	0.070933544082755	WITHOUT_CLASSIFICATION
TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.6398109182430186	WITHOUT_CLASSIFICATION	0.36018908175698144	DESIGN
ignore...bean doesn't get registered TODO: Why does that bother me?	DESIGN	0.6701535007683057	DESIGN	0.3298464992316944	WITHOUT_CLASSIFICATION
optional args, so we have IRubyObject[] TODO: confirm	DESIGN	0.7113443251858641	WITHOUT_CLASSIFICATION	0.288655674814136	DESIGN
not intended to be called directly by users (private) OLD TODO from Ruby code: This should be implemented in JavaClass.java, where we can check for reserved Ruby names, conflicting methods, etc.	DESIGN	0.9942651277354403	DESIGN	0.005734872264559621	WITHOUT_CLASSIFICATION
TODO? I think this ends up propagating from normal Java exceptions sys_fail(openFile.getPath())	DESIGN	0.9298011657287646	WITHOUT_CLASSIFICATION	0.07019883427123545	DESIGN
TODO: Make callCoerced work in block context...then fix downto, step, and upto.	DESIGN	0.6640624623733216	DESIGN	0.33593753762667844	WITHOUT_CLASSIFICATION
TODO: the rest of this...seeking to same position is unnecessary since we share a channel but some of this may be needed?	DESIGN	0.9998348750126015	DESIGN	1.6512498739857198E-4	WITHOUT_CLASSIFICATION
TODO: This version differs from ioctl by checking whether fcntl exists and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9961499787652986	DESIGN	0.0038500212347013676	WITHOUT_CLASSIFICATION
FIXME this below is temporary, but its much safer for COW (it prevents not shared Strings with begin != 0) this allows now e.g.: ByteList#set not to be begin aware	DESIGN	0.8767931300112611	WITHOUT_CLASSIFICATION	0.12320686998873893	DESIGN
ignore; job was cancelled FIXME: Is this ok?	DESIGN	0.9999128462781203	DESIGN	8.715372187978731E-5	WITHOUT_CLASSIFICATION
TODO: MRI behavior: Call "+" or "add", depending on the call. But this leads to exceptions when Floats are added. See: http:blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/17374 return callCoerced(context, op, b, true); -- this is MRI behavior. We'll use ours for now, thus providing an ability to add Floats.	DESIGN	0.8921710176607195	DESIGN	0.10782898233928044	WITHOUT_CLASSIFICATION
Must be called from main thread (it is currently, but this bothers me)	DESIGN	0.9873188894083903	WITHOUT_CLASSIFICATION	0.01268111059160975	DESIGN
TODO: wire into new exception handling mechanism	DESIGN	0.9040989052739168	DESIGN	0.09590109472608327	WITHOUT_CLASSIFICATION
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9850874094994686	DESIGN	0.014912590500531493	WITHOUT_CLASSIFICATION
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9614291777103534	DESIGN	0.03857082228964661	WITHOUT_CLASSIFICATION
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9614291777103534	DESIGN	0.03857082228964661	WITHOUT_CLASSIFICATION
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9614291777103534	DESIGN	0.03857082228964661	WITHOUT_CLASSIFICATION
FIXME: Determine if a real allocator is needed here. Do people want to extend JavaClass? Do we want them to do that? Can you Class.new(JavaClass)? Should you be able to? TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9999999837206403	DESIGN	1.6279359749868152E-8	WITHOUT_CLASSIFICATION
SSS FIXME: Token can be final for a method -- implying that the token is only for this particular implementation of the method But, if the mehod is modified, we create a new method object which in turn gets a new token. What makes sense?? Intuitively, it seems the first one ... but let us see ... Current code version token for this method -- can change during execution as methods get redefined!	DESIGN	0.9998435208575774	DESIGN	1.5647914242256656E-4	WITHOUT_CLASSIFICATION
FIXME weakref.rb also does caller(2) here for the backtrace	DESIGN	0.8691829004877252	WITHOUT_CLASSIFICATION	0.13081709951227485	DESIGN
FIXME: bit of a kludge here (non-interface classes assigned to both class and module fields). simplifies proxy extender code, will go away when JI is overhauled (and proxy extenders are deprecated).	DESIGN	0.9423204343572508	DESIGN	0.05767956564274913	WITHOUT_CLASSIFICATION
There's not a compelling reason to keep JavaClass instances in a weak map (any proxies created are [were] kept in a non-weak map, so in most cases they will stick around anyway), and some good reasons not to (JavaClass creation is expensive, for one; many lookups are performed when passing parameters to/from methods; etc.). TODO: faster custom concurrent map	DESIGN	0.8457222020303031	DESIGN	0.15427779796969693	WITHOUT_CLASSIFICATION
TODO: we should be able to optimize this quite a bit post-1.0. JavaClass already has all the methods organized by method name; the next version (supporting protected methods/fields) will have them organized even further. So collectMethods here can just lookup the overridden methods in the JavaClass map, should be much faster.	DESIGN	0.999999786419028	DESIGN	2.1358097208385032E-7	WITHOUT_CLASSIFICATION
FIXME: finalizer should be dupped here	DESIGN	0.9341724063807597	DESIGN	0.06582759361924037	WITHOUT_CLASSIFICATION
FIXME: null check is removable once we figure out how to assign to unset named block args	DESIGN	0.7882968638752744	WITHOUT_CLASSIFICATION	0.21170313612472558	DESIGN
rb_obj_id Return the internal id of an object. FIXME: Should this be renamed to match its ruby name?	DESIGN	0.5041159716500625	WITHOUT_CLASSIFICATION	0.49588402834993756	DESIGN
TODO: Bleeding runtime into parser. Arity may be should be in parser (to keep bleeding oneway)	DESIGN	0.9825862579643768	DESIGN	0.017413742035623136	WITHOUT_CLASSIFICATION
SSS FIXME: Maybe this is not really a concern after all ... Nesting level of this scope in the lexical nesting of scopes in the current file -- this is not to be confused with semantic nesting of scopes across files. Consider this code in a file f class M1::M2::M3::C ... end So, C is at lexical nesting level of 1 (the file script is at 0) in the file 'f' Semantically it is at level 3 (M1, M2, M3 are at 0,1,2). This is primarily used to ensure that variable names don't clash! i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! private int _lexicalNestingLevel;	DESIGN	0.9999803667286067	DESIGN	1.963327139330653E-5	WITHOUT_CLASSIFICATION
Sometimes the value can be retrieved at "compile time". If we succeed, nothing like it! We might not .. for the following reasons: 1. The constant is missing, 2. The reference is a forward-reference, 3. The constant's value is only known at run-time on first-access (but, this is runtime, isn't it??) 4. Our compiler isn't able to right away infer that this is a constant. SSS FIXME: 1. The operand can be a literal array, range, or hash -- hence Operand because Array, Range, and Hash derive from Operand and not Constant ... Is there a way to fix this impedance mismatch? 2. It should be possible to handle the forward-reference case by creating a new ForwardReference operand and then inform the scope of the forward reference which the scope can fix up when the reference gets defined. At code-gen time, if the reference is unresolved, when a value is retrieved for the forward-ref and we get a null, we can throw a ConstMissing exception! Not sure!	DESIGN	0.9999726414903162	DESIGN	2.735850968379949E-5	WITHOUT_CLASSIFICATION
Reset value map if this instruction is the start/end of a basic block Right now, calls are considered hard boundaries for optimization and information cannot be propagated across them! SSS FIXME: Rather than treat all calls with a broad brush, what we need is to capture different attributes about a call : - uses closures - known call target - can modify scope, - etc. This information is probably already present in the AST Inspector	DESIGN	0.9999843355991346	DESIGN	1.5664400865432026E-5	WITHOUT_CLASSIFICATION
FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.6284478389926793	DESIGN	0.3715521610073207	WITHOUT_CLASSIFICATION
XXX: This check previously used callMethod("==") to check for equality between classes when scanning the hierarchy. However the == check may be safe; we should only ever have one instance bound to a given type/constant. If it's found to be unsafe, examine ways to avoid the == call.	DESIGN	0.9748591409587424	WITHOUT_CLASSIFICATION	0.02514085904125762	DESIGN
end hack	DESIGN	0.9586134254627039	WITHOUT_CLASSIFICATION	0.041386574537296106	DESIGN
if not overloaded, we add a method that guesses at which signature to use TODO: just adding first one right now...add in signature-guessing logic	DESIGN	0.9804747723561723	DESIGN	0.019525227643827657	WITHOUT_CLASSIFICATION
FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9998717956080287	DESIGN	1.282043919712165E-4	WITHOUT_CLASSIFICATION
TODO: This version is better than the hackish previous one. Windows behavior needs to be defined though. I suppose this version could be improved more too. TODO: /etc/passwd is also inadequate for MacOSX since it does not use /etc/passwd for regular user accounts	DESIGN	0.9999583031176039	DESIGN	4.1696882396088776E-5	WITHOUT_CLASSIFICATION
TODO: Should next and return also catch here?	DESIGN	0.8799034050611853	WITHOUT_CLASSIFICATION	0.12009659493881474	DESIGN
Let's only generate methods for those the user may actually intend to override. That includes any defined in the current class, and any ancestors that are also JavaProxyClasses (but none from any other ancestor classes). Methods defined in mixins will be considered intentionally overridden, except those from Kernel, Java, and JavaProxyMethods, as well as Enumerable. TODO: may want to exclude other common mixins?	DESIGN	0.9991809097846119	WITHOUT_CLASSIFICATION	8.19090215388151E-4	DESIGN
FIXME: Consider fixing node_assign itself rather than single case	DESIGN	0.8877505852523666	WITHOUT_CLASSIFICATION	0.11224941474763342	DESIGN
Workaround for JRUBY-2326 (MRI does not enter this production for some reason)	DESIGN	0.9714231949434122	WITHOUT_CLASSIFICATION	0.02857680505658772	DESIGN
FIXME: We should really not be creating the dynamic scope for the root of the AST before parsing. This makes us end up needing to readjust this dynamic scope coming out of parse (and for local static scopes it will always happen because of $~ and $_). FIXME: Because we end up adjusting this after-the-fact, we can't use any of the specific-size scopes.	DESIGN	0.9997627927778614	DESIGN	2.3720722213869749E-4	WITHOUT_CLASSIFICATION
FIXME: Resolve what the hell is going on	DESIGN	0.6086015398885309	DESIGN	0.39139846011146917	WITHOUT_CLASSIFICATION
This is perhaps innefficient timewise? Optimal spacewise	DESIGN	0.5383917146774881	WITHOUT_CLASSIFICATION	0.46160828532251197	DESIGN
If variables were added then we may need to grow the dynamic scope to match the static one. FIXME: Make this so we only need to check this for blockScope != null. We cannot currently since we create the DynamicScope for a LocalStaticScope before parse begins. Refactoring should make this fixable.	DESIGN	0.8933735636590444	WITHOUT_CLASSIFICATION	0.1066264363409556	DESIGN
FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9816162348733773	DESIGN	0.018383765126622622	WITHOUT_CLASSIFICATION
FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9816162348733773	DESIGN	0.018383765126622622	WITHOUT_CLASSIFICATION
we're depending on the side effect of the load, which loads the class but does not turn it into a script I don't like it, but until we restructure the code a bit more, we'll need to quietly let it by here.	DESIGN	0.9993969677610957	DESIGN	6.030322389042548E-4	WITHOUT_CLASSIFICATION
TODO: for now, we use a faithful reimplementation of MRI's algorithm, but should use UTF8Encoding facilities from Joni, once it starts prefroming UTF-8 content validation.	DESIGN	0.965007285588726	DESIGN	0.03499271441127405	WITHOUT_CLASSIFICATION
Process streams get Channel.newChannel()ed into FileChannel but are not actually seekable. So instead of just the isSeekable check doing instanceof FileChannel, we must also add this boolean to check, which we set to false when it's known that the incoming channel is from a process. FIXME: This is gross, and it's NIO's fault for not providing a nice way to tell if a channel is "really" seekable.	DESIGN	0.9967830880403515	DESIGN	0.0032169119596484872	WITHOUT_CLASSIFICATION
