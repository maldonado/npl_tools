set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9993170492317905	WITHOUT_CLASSIFICATION	6.829507682095039E-4	DESIGN
line 335	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
Figure end-char. '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9997755446392507	WITHOUT_CLASSIFICATION	2.244553607493334E-4	DESIGN
line 362	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 372	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
line 391	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
^D	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
^Z	WITHOUT_CLASSIFICATION	0.9991656787219674	WITHOUT_CLASSIFICATION	8.34321278032705E-4	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
Do nothing	WITHOUT_CLASSIFICATION	0.9996632256848077	WITHOUT_CLASSIFICATION	3.367743151922202E-4	DESIGN
Do nothing	WITHOUT_CLASSIFICATION	0.9996632256848077	WITHOUT_CLASSIFICATION	3.367743151922202E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.998900527112762	WITHOUT_CLASSIFICATION	0.001099472887237909	DESIGN
switch	WITHOUT_CLASSIFICATION	0.998900527112762	WITHOUT_CLASSIFICATION	0.001099472887237909	DESIGN
switch	WITHOUT_CLASSIFICATION	0.998900527112762	WITHOUT_CLASSIFICATION	0.001099472887237909	DESIGN
switch	WITHOUT_CLASSIFICATION	0.998900527112762	WITHOUT_CLASSIFICATION	0.001099472887237909	DESIGN
switch	WITHOUT_CLASSIFICATION	0.998900527112762	WITHOUT_CLASSIFICATION	0.001099472887237909	DESIGN
switch	WITHOUT_CLASSIFICATION	0.998900527112762	WITHOUT_CLASSIFICATION	0.001099472887237909	DESIGN
switch	WITHOUT_CLASSIFICATION	0.998900527112762	WITHOUT_CLASSIFICATION	0.001099472887237909	DESIGN
switch	WITHOUT_CLASSIFICATION	0.998900527112762	WITHOUT_CLASSIFICATION	0.001099472887237909	DESIGN
switch	WITHOUT_CLASSIFICATION	0.998900527112762	WITHOUT_CLASSIFICATION	0.001099472887237909	DESIGN
switch	WITHOUT_CLASSIFICATION	0.998900527112762	WITHOUT_CLASSIFICATION	0.001099472887237909	DESIGN
switch	WITHOUT_CLASSIFICATION	0.998900527112762	WITHOUT_CLASSIFICATION	0.001099472887237909	DESIGN
switch	WITHOUT_CLASSIFICATION	0.998900527112762	WITHOUT_CLASSIFICATION	0.001099472887237909	DESIGN
switch	WITHOUT_CLASSIFICATION	0.998900527112762	WITHOUT_CLASSIFICATION	0.001099472887237909	DESIGN
switch	WITHOUT_CLASSIFICATION	0.998900527112762	WITHOUT_CLASSIFICATION	0.001099472887237909	DESIGN
switch	WITHOUT_CLASSIFICATION	0.998900527112762	WITHOUT_CLASSIFICATION	0.001099472887237909	DESIGN
switch	WITHOUT_CLASSIFICATION	0.998900527112762	WITHOUT_CLASSIFICATION	0.001099472887237909	DESIGN
switch	WITHOUT_CLASSIFICATION	0.998900527112762	WITHOUT_CLASSIFICATION	0.001099472887237909	DESIGN
switch	WITHOUT_CLASSIFICATION	0.998900527112762	WITHOUT_CLASSIFICATION	0.001099472887237909	DESIGN
switch	WITHOUT_CLASSIFICATION	0.998900527112762	WITHOUT_CLASSIFICATION	0.001099472887237909	DESIGN
switch	WITHOUT_CLASSIFICATION	0.998900527112762	WITHOUT_CLASSIFICATION	0.001099472887237909	DESIGN
switch	WITHOUT_CLASSIFICATION	0.998900527112762	WITHOUT_CLASSIFICATION	0.001099472887237909	DESIGN
switch	WITHOUT_CLASSIFICATION	0.998900527112762	WITHOUT_CLASSIFICATION	0.001099472887237909	DESIGN
switch	WITHOUT_CLASSIFICATION	0.998900527112762	WITHOUT_CLASSIFICATION	0.001099472887237909	DESIGN
switch	WITHOUT_CLASSIFICATION	0.998900527112762	WITHOUT_CLASSIFICATION	0.001099472887237909	DESIGN
switch	WITHOUT_CLASSIFICATION	0.998900527112762	WITHOUT_CLASSIFICATION	0.001099472887237909	DESIGN
switch	WITHOUT_CLASSIFICATION	0.998900527112762	WITHOUT_CLASSIFICATION	0.001099472887237909	DESIGN
switch	WITHOUT_CLASSIFICATION	0.998900527112762	WITHOUT_CLASSIFICATION	0.001099472887237909	DESIGN
switch	WITHOUT_CLASSIFICATION	0.998900527112762	WITHOUT_CLASSIFICATION	0.001099472887237909	DESIGN
switch	WITHOUT_CLASSIFICATION	0.998900527112762	WITHOUT_CLASSIFICATION	0.001099472887237909	DESIGN
switch	WITHOUT_CLASSIFICATION	0.998900527112762	WITHOUT_CLASSIFICATION	0.001099472887237909	DESIGN
switch	WITHOUT_CLASSIFICATION	0.998900527112762	WITHOUT_CLASSIFICATION	0.001099472887237909	DESIGN
switch	WITHOUT_CLASSIFICATION	0.998900527112762	WITHOUT_CLASSIFICATION	0.001099472887237909	DESIGN
switch	WITHOUT_CLASSIFICATION	0.998900527112762	WITHOUT_CLASSIFICATION	0.001099472887237909	DESIGN
switch	WITHOUT_CLASSIFICATION	0.998900527112762	WITHOUT_CLASSIFICATION	0.001099472887237909	DESIGN
switch	WITHOUT_CLASSIFICATION	0.998900527112762	WITHOUT_CLASSIFICATION	0.001099472887237909	DESIGN
switch	WITHOUT_CLASSIFICATION	0.998900527112762	WITHOUT_CLASSIFICATION	0.001099472887237909	DESIGN
return result	WITHOUT_CLASSIFICATION	0.9998965789040625	WITHOUT_CLASSIFICATION	1.0342109593752213E-4	DESIGN
name	WITHOUT_CLASSIFICATION	0.9988825726847009	WITHOUT_CLASSIFICATION	0.001117427315299016	DESIGN
Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9990107517753506	WITHOUT_CLASSIFICATION	9.892482246493604E-4	DESIGN
Accessor methods.	WITHOUT_CLASSIFICATION	0.9992014155010088	WITHOUT_CLASSIFICATION	7.985844989911283E-4	DESIGN
MRI behavior	WITHOUT_CLASSIFICATION	0.9988414355722415	WITHOUT_CLASSIFICATION	0.0011585644277585718	DESIGN
MRI behavior	WITHOUT_CLASSIFICATION	0.9988414355722415	WITHOUT_CLASSIFICATION	0.0011585644277585718	DESIGN
MRI behavior	WITHOUT_CLASSIFICATION	0.9988414355722415	WITHOUT_CLASSIFICATION	0.0011585644277585718	DESIGN
MRI behavior	WITHOUT_CLASSIFICATION	0.9988414355722415	WITHOUT_CLASSIFICATION	0.0011585644277585718	DESIGN
call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999277444712075	WITHOUT_CLASSIFICATION	7.225552879250558E-5	DESIGN
fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9978080194076915	WITHOUT_CLASSIFICATION	0.0021919805923085955	DESIGN
try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999321476345431	WITHOUT_CLASSIFICATION	6.785236545687875E-5	DESIGN
define ARGV and $ for this runtime	WITHOUT_CLASSIFICATION	0.9986569061352727	WITHOUT_CLASSIFICATION	0.0013430938647272803	DESIGN
Version information:	WITHOUT_CLASSIFICATION	0.9992733112410751	WITHOUT_CLASSIFICATION	7.26688758924819E-4	DESIGN
after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9997434220244106	WITHOUT_CLASSIFICATION	2.56577975589327E-4	DESIGN
ARGF, $< object	WITHOUT_CLASSIFICATION	0.999018140248444	WITHOUT_CLASSIFICATION	9.818597515559154E-4	DESIGN
if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999473904672236	WITHOUT_CLASSIFICATION	5.2609532776293715E-5	DESIGN
On platforms without a c-library accessable through JNA, getpid will return hashCode as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.6280584891355194	DESIGN	0.3719415108644806	WITHOUT_CLASSIFICATION
$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9988467040940671	WITHOUT_CLASSIFICATION	0.0011532959059329544	DESIGN
include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.8928130255346091	WITHOUT_CLASSIFICATION	0.10718697446539087	DESIGN
MRI behavior: just plain '' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9998790165696034	WITHOUT_CLASSIFICATION	1.2098343039654202E-4	DESIGN
this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9912313172332742	WITHOUT_CLASSIFICATION	0.008768682766725799	DESIGN
What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9977166872882022	WITHOUT_CLASSIFICATION	0.0022833127117978485	DESIGN
----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9993820632826816	WITHOUT_CLASSIFICATION	6.179367173182976E-4	DESIGN
CONSTANT TABLE METHODS - pass to delegate	WITHOUT_CLASSIFICATION	0.9995558685557896	WITHOUT_CLASSIFICATION	4.4413144421046654E-4	DESIGN
We get canonical path to try and flatten the path out. a dir '/subdir/..' should return as '/' cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9764069491792302	WITHOUT_CLASSIFICATION	0.02359305082076972	DESIGN
MRI behavior	WITHOUT_CLASSIFICATION	0.9988414355722415	WITHOUT_CLASSIFICATION	0.0011585644277585718	DESIGN
----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999799093554594	WITHOUT_CLASSIFICATION	2.0090644540502895E-5	DESIGN
Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999907960914578	WITHOUT_CLASSIFICATION	9.203908542133338E-6	DESIGN
----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9997559613521565	WITHOUT_CLASSIFICATION	2.4403864784344376E-4	DESIGN
try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9950169206774557	WITHOUT_CLASSIFICATION	0.00498307932254429	DESIGN
otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9989425505806645	WITHOUT_CLASSIFICATION	0.0010574494193355435	DESIGN
Proc class	WITHOUT_CLASSIFICATION	0.9976381976905616	WITHOUT_CLASSIFICATION	0.0023618023094384615	DESIGN
No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999862145015166	WITHOUT_CLASSIFICATION	1.3785498483376578E-5	DESIGN
modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9956535915887135	WITHOUT_CLASSIFICATION	0.004346408411286608	DESIGN
for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9737383478919619	WITHOUT_CLASSIFICATION	0.02626165210803815	DESIGN
case RUBY_HYBRID: backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); break;	WITHOUT_CLASSIFICATION	0.9999822538364521	WITHOUT_CLASSIFICATION	1.7746163547899418E-5	DESIGN
This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9996823405196158	WITHOUT_CLASSIFICATION	3.1765948038417924E-4	DESIGN
rb_exc_new3	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9998503282719582	WITHOUT_CLASSIFICATION	1.4967172804183714E-4	DESIGN
registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9991856162036415	WITHOUT_CLASSIFICATION	8.143837963584149E-4	DESIGN
IOT is also 6	WITHOUT_CLASSIFICATION	0.9998113708231774	WITHOUT_CLASSIFICATION	1.8862917682259267E-4	DESIGN
CLD is also 20	WITHOUT_CLASSIFICATION	0.9998513790321436	WITHOUT_CLASSIFICATION	1.4862096785635842E-4	DESIGN
RubySignal	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
ZStream actually isn't allocatable	WITHOUT_CLASSIFICATION	0.9919881538337586	WITHOUT_CLASSIFICATION	0.008011846166241359	DESIGN
MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9994390781444106	WITHOUT_CLASSIFICATION	5.60921855589527E-4	DESIGN
it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999061877660987	WITHOUT_CLASSIFICATION	9.381223390132423E-5	DESIGN
MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9994200550042776	WITHOUT_CLASSIFICATION	5.799449957225439E-4	DESIGN
SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.999678500717863	WITHOUT_CLASSIFICATION	3.214992821370389E-4	DESIGN
io.finish();	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9877805010088522	WITHOUT_CLASSIFICATION	0.012219498991147774	DESIGN
hmm...	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
Called before any write to make sure the header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9967353152192827	WITHOUT_CLASSIFICATION	0.003264684780717334	DESIGN
For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9435741911952511	WITHOUT_CLASSIFICATION	0.0564258088047489	DESIGN
We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9997938192026744	WITHOUT_CLASSIFICATION	2.061807973255217E-4	DESIGN
float number of seconds	WITHOUT_CLASSIFICATION	0.9989836072107401	WITHOUT_CLASSIFICATION	0.0010163927892598808	DESIGN
modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9998955173952672	WITHOUT_CLASSIFICATION	1.0448260473280553E-4	DESIGN
dump usec, not msec	WITHOUT_CLASSIFICATION	0.9988057218189147	WITHOUT_CLASSIFICATION	0.0011942781810852625	DESIGN
Time class methods	WITHOUT_CLASSIFICATION	0.9977216873418701	WITHOUT_CLASSIFICATION	0.002278312658130044	DESIGN
marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9980100790958786	WITHOUT_CLASSIFICATION	0.0019899209041215147	DESIGN
MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.99925593467531	WITHOUT_CLASSIFICATION	7.440653246898921E-4	DESIGN
set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9928076588423854	WITHOUT_CLASSIFICATION	0.007192341157614556	DESIGN
the instant at which we will ask dtz what the difference between DST and standard time is	WITHOUT_CLASSIFICATION	0.999087773601356	WITHOUT_CLASSIFICATION	9.122263986440125E-4	DESIGN
if we might be moving this time from !DST -> DST, the offset is assumed to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.997221731308049	WITHOUT_CLASSIFICATION	0.0027782686919510294	DESIGN
Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9980370696394122	WITHOUT_CLASSIFICATION	0.0019629303605877475	DESIGN
================ Utility Methods ================	WITHOUT_CLASSIFICATION	0.9988842823877196	WITHOUT_CLASSIFICATION	0.001115717612280281	DESIGN
If the value will fit in a Fixnum, return one of those.	WITHOUT_CLASSIFICATION	0.9999354445610277	WITHOUT_CLASSIFICATION	6.455543897228671E-5	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999797876714283	WITHOUT_CLASSIFICATION	2.021232857179103E-5	DESIGN
MRI issuses warning here on (RBIGNUM(x)->len SIZEOF_BDIGITS yy > 10241024)	WITHOUT_CLASSIFICATION	0.9824721104985301	WITHOUT_CLASSIFICATION	0.01752788950146997	DESIGN
num2int is also implemented	WITHOUT_CLASSIFICATION	0.9986575971349541	WITHOUT_CLASSIFICATION	0.0013424028650459105	DESIGN
num2int is also implemented	WITHOUT_CLASSIFICATION	0.9986575971349541	WITHOUT_CLASSIFICATION	0.0013424028650459105	DESIGN
no bignorm here needed	WITHOUT_CLASSIFICATION	0.9903804119736012	WITHOUT_CLASSIFICATION	0.009619588026398897	DESIGN
wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9820729682218232	WITHOUT_CLASSIFICATION	0.017927031778176814	DESIGN
Pad with a 0	WITHOUT_CLASSIFICATION	0.9994095796406914	WITHOUT_CLASSIFICATION	5.904203593084722E-4	DESIGN
BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9994121762383266	WITHOUT_CLASSIFICATION	5.878237616734101E-4	DESIGN
This should only be called by this and RubyFile. It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.7196383440095627	WITHOUT_CLASSIFICATION	0.2803616559904372	DESIGN
We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9914781991338164	WITHOUT_CLASSIFICATION	0.008521800866183591	DESIGN
???	WITHOUT_CLASSIFICATION	0.9942710480000483	WITHOUT_CLASSIFICATION	0.005728951999951644	DESIGN
PID	WITHOUT_CLASSIFICATION	0.9991495495583116	WITHOUT_CLASSIFICATION	8.504504416885242E-4	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999797876714283	WITHOUT_CLASSIFICATION	2.021232857179103E-5	DESIGN
elements and trailing nils	WITHOUT_CLASSIFICATION	0.9993730397039668	WITHOUT_CLASSIFICATION	6.269602960331011E-4	DESIGN
Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999996009824117	WITHOUT_CLASSIFICATION	3.99017588313203E-7	DESIGN
Ruby arrays default to holding 16 elements, so we create an ArrayList of the same size if we're not told otherwise	WITHOUT_CLASSIFICATION	0.9999913913028734	WITHOUT_CLASSIFICATION	8.608697126697788E-6	DESIGN
rb_ary_new2 just allocates the internal array	WITHOUT_CLASSIFICATION	0.9998241242823273	WITHOUT_CLASSIFICATION	1.758757176728063E-4	DESIGN
plain internal array assignment	WITHOUT_CLASSIFICATION	0.999801185569894	WITHOUT_CLASSIFICATION	1.9881443010606427E-4	DESIGN
plain internal array assignment	WITHOUT_CLASSIFICATION	0.999801185569894	WITHOUT_CLASSIFICATION	1.9881443010606427E-4	DESIGN
plain internal array assignment	WITHOUT_CLASSIFICATION	0.999801185569894	WITHOUT_CLASSIFICATION	1.9881443010606427E-4	DESIGN
Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour	WITHOUT_CLASSIFICATION	0.9905825953804547	WITHOUT_CLASSIFICATION	0.009417404619545315	DESIGN
NEWOBJ and OBJSETUP equivalent fastest one, for shared arrays, optional objectspace	WITHOUT_CLASSIFICATION	0.999427851065015	WITHOUT_CLASSIFICATION	5.721489349850083E-4	DESIGN
Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999645474724261	WITHOUT_CLASSIFICATION	3.545252757376768E-5	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991235374467142	WITHOUT_CLASSIFICATION	8.764625532857504E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991235374467142	WITHOUT_CLASSIFICATION	8.764625532857504E-4	DESIGN
Windows does not support these functions, so we won't even try This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.8583709787765399	WITHOUT_CLASSIFICATION	0.14162902122346002	DESIGN
There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and newer one (US/Pacific, America/Los_Angeles). This pattern is to detect the legacy TZ format in order to convert it to the newer format understood by Java API.	WITHOUT_CLASSIFICATION	0.999456871794402	WITHOUT_CLASSIFICATION	5.431282055979862E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991235374467142	WITHOUT_CLASSIFICATION	8.764625532857504E-4	DESIGN
1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9963015375498552	WITHOUT_CLASSIFICATION	0.00369846245014498	DESIGN
possibly should not in object space	WITHOUT_CLASSIFICATION	0.9773760638300828	WITHOUT_CLASSIFICATION	0.022623936169917324	DESIGN
only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999969502719923	WITHOUT_CLASSIFICATION	3.049728007615274E-6	DESIGN
rb_ary_new4	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
rb_ary_new4	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9991273151001799	WITHOUT_CLASSIFICATION	8.726848998201471E-4	DESIGN
If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999133688475996	WITHOUT_CLASSIFICATION	8.663115240040514E-5	DESIGN
See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9993080946412362	WITHOUT_CLASSIFICATION	6.919053587637474E-4	DESIGN
See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9993080946412362	WITHOUT_CLASSIFICATION	6.919053587637474E-4	DESIGN
Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9991761409854973	WITHOUT_CLASSIFICATION	8.238590145026199E-4	DESIGN
pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9984933057917288	WITHOUT_CLASSIFICATION	0.0015066942082711517	DESIGN
root fiber	WITHOUT_CLASSIFICATION	0.9984896199194471	WITHOUT_CLASSIFICATION	0.001510380080552921	DESIGN
GMT+00:00 --> Etc/GMT, see "MRI behavior" comment below.	WITHOUT_CLASSIFICATION	0.999680101986802	WITHOUT_CLASSIFICATION	3.198980131980115E-4	DESIGN
See http:www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9995271005012232	WITHOUT_CLASSIFICATION	4.7289949877686474E-4	DESIGN
extras flag	WITHOUT_CLASSIFICATION	0.9993341297834796	WITHOUT_CLASSIFICATION	6.65870216520401E-4	DESIGN
Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
...nothing	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
utility method	WITHOUT_CLASSIFICATION	0.9995876496760098	WITHOUT_CLASSIFICATION	4.1235032399022286E-4	DESIGN
Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9979750712962212	WITHOUT_CLASSIFICATION	0.0020249287037787606	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999797876714283	WITHOUT_CLASSIFICATION	2.021232857179103E-5	DESIGN
flags 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999938118871494	WITHOUT_CLASSIFICATION	6.188112850588146E-6	DESIGN
range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.999339710226887	WITHOUT_CLASSIFICATION	6.602897731130057E-4	DESIGN
1.8 "include?"	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9989245791357277	WITHOUT_CLASSIFICATION	0.0010754208642722643	DESIGN
beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9687846735296383	WITHOUT_CLASSIFICATION	0.031215326470361605	DESIGN
MRI does it!	WITHOUT_CLASSIFICATION	0.9996827288877583	WITHOUT_CLASSIFICATION	3.1727111224170155E-4	DESIGN
won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9996897373854959	WITHOUT_CLASSIFICATION	3.1026261450408803E-4	DESIGN
it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9995799077454868	WITHOUT_CLASSIFICATION	4.200922545131675E-4	DESIGN
RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9988086530547068	WITHOUT_CLASSIFICATION	0.0011913469452933098	DESIGN
not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9942051986203142	WITHOUT_CLASSIFICATION	0.005794801379685826	DESIGN
second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999845178583732	WITHOUT_CLASSIFICATION	1.5482141626796996E-5	DESIGN
we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.974101690705163	WITHOUT_CLASSIFICATION	0.02589830929483708	DESIGN
terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9987055814036828	WITHOUT_CLASSIFICATION	0.0012944185963172385	DESIGN
Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9998524202932727	WITHOUT_CLASSIFICATION	1.4757970672732966E-4	DESIGN
do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9940136761281603	WITHOUT_CLASSIFICATION	0.0059863238718397445	DESIGN
recheck condition	WITHOUT_CLASSIFICATION	0.999488924157987	WITHOUT_CLASSIFICATION	5.11075842013028E-4	DESIGN
Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999288764024225	WITHOUT_CLASSIFICATION	7.112359757765129E-5	DESIGN
Construct key services	WITHOUT_CLASSIFICATION	0.9967707835046958	WITHOUT_CLASSIFICATION	0.003229216495304105	DESIGN
initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9996670254857762	WITHOUT_CLASSIFICATION	3.3297451422368706E-4	DESIGN
Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999691296723658	WITHOUT_CLASSIFICATION	3.087032763421798E-5	DESIGN
Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9998097340917173	WITHOUT_CLASSIFICATION	1.9026590828281068E-4	DESIGN
Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.843039429995149	WITHOUT_CLASSIFICATION	0.15696057000485103	DESIGN
Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9932037708731382	WITHOUT_CLASSIFICATION	0.006796229126861777	DESIGN
Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9988702071818604	WITHOUT_CLASSIFICATION	0.0011297928181396458	DESIGN
Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999975438474122	WITHOUT_CLASSIFICATION	2.456152587839241E-6	DESIGN
Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9981978631799028	WITHOUT_CLASSIFICATION	0.0018021368200971393	DESIGN
depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9845679764863344	WITHOUT_CLASSIFICATION	0.015432023513665542	DESIGN
initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9992156049361289	WITHOUT_CLASSIFICATION	7.843950638710763E-4	DESIGN
Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9983323671760366	WITHOUT_CLASSIFICATION	0.0016676328239635058	DESIGN
Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9998638881681583	WITHOUT_CLASSIFICATION	1.361118318417316E-4	DESIGN
we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.998773600609206	WITHOUT_CLASSIFICATION	0.0012263993907940527	DESIGN
determine spacing	WITHOUT_CLASSIFICATION	0.9986939762845113	WITHOUT_CLASSIFICATION	0.0013060237154886906	DESIGN
should alter global state	WITHOUT_CLASSIFICATION	0.9969451259230768	WITHOUT_CLASSIFICATION	0.0030548740769230976	DESIGN
For JSR 223 support: see http:scripting.java.net/	WITHOUT_CLASSIFICATION	0.9998209125869196	WITHOUT_CLASSIFICATION	1.790874130804506E-4	DESIGN
use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9818522221464534	WITHOUT_CLASSIFICATION	0.018147777853546602	DESIGN
this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9995702763386429	WITHOUT_CLASSIFICATION	4.2972366135699566E-4	DESIGN
new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.997469133972789	WITHOUT_CLASSIFICATION	0.00253086602721098	DESIGN
assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9737386559886811	WITHOUT_CLASSIFICATION	0.026261344011318837	DESIGN
Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9989893378814637	WITHOUT_CLASSIFICATION	0.001010662118536263	DESIGN
default: don't retain	WITHOUT_CLASSIFICATION	0.9993983195437945	WITHOUT_CLASSIFICATION	6.016804562054042E-4	DESIGN
ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9998871252100818	WITHOUT_CLASSIFICATION	1.1287478991816147E-4	DESIGN
Default objects	WITHOUT_CLASSIFICATION	0.9997354050743471	WITHOUT_CLASSIFICATION	2.645949256529057E-4	DESIGN
record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.99980396878058	WITHOUT_CLASSIFICATION	1.960312194199247E-4	DESIGN
former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9990082249397235	WITHOUT_CLASSIFICATION	9.917750602764705E-4	DESIGN
Java support	WITHOUT_CLASSIFICATION	0.998748756958302	WITHOUT_CLASSIFICATION	0.0012512430416980306	DESIGN
Parser stats	WITHOUT_CLASSIFICATION	0.9989249909713812	WITHOUT_CLASSIFICATION	0.001075009028618798	DESIGN
Compilation	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999281340763889	WITHOUT_CLASSIFICATION	7.186592361103136E-5	DESIGN
can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999300782681838	WITHOUT_CLASSIFICATION	6.99217318161953E-5	DESIGN
mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9998486415155432	WITHOUT_CLASSIFICATION	1.5135848445684756E-4	DESIGN
mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.999723855684966	WITHOUT_CLASSIFICATION	2.7614431503405004E-4	DESIGN
A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9993913505458177	WITHOUT_CLASSIFICATION	6.086494541822688E-4	DESIGN
A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9997726641312227	WITHOUT_CLASSIFICATION	2.2733586877731997E-4	DESIGN
initial spaces spaces before "at"	WITHOUT_CLASSIFICATION	0.9998080152344744	WITHOUT_CLASSIFICATION	1.9198476552565117E-4	DESIGN
event name filename line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9988434733009437	WITHOUT_CLASSIFICATION	0.0011565266990563982	DESIGN
The method is intentionally not public, since it typically should not be used outside of the core.	WITHOUT_CLASSIFICATION	0.6112868471632992	WITHOUT_CLASSIFICATION	0.3887131528367008	DESIGN
Note: this field and the following static initializer must be located be in this order!	WITHOUT_CLASSIFICATION	0.5542477781668323	WITHOUT_CLASSIFICATION	0.4457522218331677	DESIGN
Contains a list of all blocks (as Procs) that should be called when the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9997101191728043	WITHOUT_CLASSIFICATION	2.898808271956731E-4	DESIGN
quoted-printable	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
default options	WITHOUT_CLASSIFICATION	0.9997679586391731	WITHOUT_CLASSIFICATION	2.3204136082696235E-4	DESIGN
iso-2022-jp	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
iso-2022-jp	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
Shift_JIS	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
Shift_JIS	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
EUC-JP	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
EUC-JP	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
UTF-8	WITHOUT_CLASSIFICATION	0.999782642289187	WITHOUT_CLASSIFICATION	2.173577108130841E-4	DESIGN
UTF-8	WITHOUT_CLASSIFICATION	0.999782642289187	WITHOUT_CLASSIFICATION	2.173577108130841E-4	DESIGN
long name option	WITHOUT_CLASSIFICATION	0.9998257689530148	WITHOUT_CLASSIFICATION	1.7423104698519347E-4	DESIGN
conversion	WITHOUT_CLASSIFICATION	0.9997967368739081	WITHOUT_CLASSIFICATION	2.0326312609190975E-4	DESIGN
================ Singleton Methods ================	WITHOUT_CLASSIFICATION	0.9984687282680544	WITHOUT_CLASSIFICATION	0.001531271731945495	DESIGN
string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9993647916051995	WITHOUT_CLASSIFICATION	6.352083948004924E-4	DESIGN
string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9995499974909664	WITHOUT_CLASSIFICATION	4.500025090337051E-4	DESIGN
string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9993954383360132	WITHOUT_CLASSIFICATION	6.045616639867743E-4	DESIGN
ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9988086530547068	WITHOUT_CLASSIFICATION	0.0011913469452933098	DESIGN
rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9988086530547068	WITHOUT_CLASSIFICATION	0.0011913469452933098	DESIGN
rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9996835546475226	WITHOUT_CLASSIFICATION	3.164453524774521E-4	DESIGN
String construction routines by NOT byte[] buffer and NOT making the target String shared	WITHOUT_CLASSIFICATION	0.9998490847573517	WITHOUT_CLASSIFICATION	1.5091524264836242E-4	DESIGN
rb_str_subseq	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9990628324610596	WITHOUT_CLASSIFICATION	9.37167538940309E-4	DESIGN
if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999114567650642	WITHOUT_CLASSIFICATION	8.854323493581132E-5	DESIGN
rb_str_cmp_m	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999384082848771	WITHOUT_CLASSIFICATION	6.159171512280075E-5	DESIGN
rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9992996765583652	WITHOUT_CLASSIFICATION	7.003234416348371E-4	DESIGN
this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.793606195968112	DESIGN	0.2063938040318881	WITHOUT_CLASSIFICATION
must not reallocate	WITHOUT_CLASSIFICATION	0.9976204404853724	WITHOUT_CLASSIFICATION	0.002379559514627637	DESIGN
Illegal combination	WITHOUT_CLASSIFICATION	0.9991518931351321	WITHOUT_CLASSIFICATION	8.481068648679046E-4	DESIGN
use 1.8 impl	WITHOUT_CLASSIFICATION	0.9917773195652928	WITHOUT_CLASSIFICATION	0.008222680434707304	DESIGN
RubyString aka rb_string_value	WITHOUT_CLASSIFICATION	0.9988086530547068	WITHOUT_CLASSIFICATION	0.0011913469452933098	DESIGN
bang: true, no match, no substitution	WITHOUT_CLASSIFICATION	0.9986232141579291	WITHOUT_CLASSIFICATION	0.0013767858420709047	DESIGN
out of byte range there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999824982220931	WITHOUT_CLASSIFICATION	1.7501777906901232E-5	DESIGN
len + margin	WITHOUT_CLASSIFICATION	0.9996343359478891	WITHOUT_CLASSIFICATION	3.656640521110165E-4	DESIGN
block given	WITHOUT_CLASSIFICATION	0.9994027689035908	WITHOUT_CLASSIFICATION	5.972310964091796E-4	DESIGN
block given	WITHOUT_CLASSIFICATION	0.9994027689035908	WITHOUT_CLASSIFICATION	5.972310964091796E-4	DESIGN
copy pre-match substr	WITHOUT_CLASSIFICATION	0.9982003768552506	WITHOUT_CLASSIFICATION	0.0017996231447492668	DESIGN
string given	WITHOUT_CLASSIFICATION	0.9997024479882747	WITHOUT_CLASSIFICATION	2.975520117253315E-4	DESIGN
hash given	WITHOUT_CLASSIFICATION	0.9996434418146859	WITHOUT_CLASSIFICATION	3.5655818531409055E-4	DESIGN
This represents left most digit in a set of incremented values? Therefore leftmost numeric must be '1' and not '0' 999 -> 1000, not 999 -> 0000. whereas chars should be zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.5756760740023149	WITHOUT_CLASSIFICATION	0.42432392599768504	DESIGN
substring longer than string	WITHOUT_CLASSIFICATION	0.9994088045062893	WITHOUT_CLASSIFICATION	5.911954937107773E-4	DESIGN
rb_str_substr	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
nothing	WITHOUT_CLASSIFICATION	0.99977529495203	WITHOUT_CLASSIFICATION	2.2470504796990982E-4	DESIGN
nothing	WITHOUT_CLASSIFICATION	0.99977529495203	WITHOUT_CLASSIFICATION	2.2470504796990982E-4	DESIGN
rb_str_splice	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
TODO: keep cr TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.6033300815677367	DESIGN	0.39666991843226324	WITHOUT_CLASSIFICATION
keep cr ?	WITHOUT_CLASSIFICATION	0.996858628635409	WITHOUT_CLASSIFICATION	0.0031413713645911277	DESIGN
keep cr ?	WITHOUT_CLASSIFICATION	0.996858628635409	WITHOUT_CLASSIFICATION	0.0031413713645911277	DESIGN
wrapped to \0...\0. search next valid char.	WITHOUT_CLASSIFICATION	0.9905599722045666	WITHOUT_CLASSIFICATION	0.009440027795433369	DESIGN
only this case affects backrefs	WITHOUT_CLASSIFICATION	0.9997453435961583	WITHOUT_CLASSIFICATION	2.546564038417213E-4	DESIGN
only this case affects backrefs	WITHOUT_CLASSIFICATION	0.9997453435961583	WITHOUT_CLASSIFICATION	2.546564038417213E-4	DESIGN
modified	WITHOUT_CLASSIFICATION	0.9999042750161096	WITHOUT_CLASSIFICATION	9.572498389040851E-5	DESIGN
modified	WITHOUT_CLASSIFICATION	0.9999042750161096	WITHOUT_CLASSIFICATION	9.572498389040851E-5	DESIGN
1.8	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
1.8	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
QTRUE	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
retrieve last replacer	WITHOUT_CLASSIFICATION	0.9995421951864294	WITHOUT_CLASSIFICATION	4.578048135705879E-4	DESIGN
Check the length every iteration, since the block can modify this string.	WITHOUT_CLASSIFICATION	0.9799476940288406	WITHOUT_CLASSIFICATION	0.020052305971159406	DESIGN
long size bits in byte	WITHOUT_CLASSIFICATION	0.9997319480293855	WITHOUT_CLASSIFICATION	2.6805197061457813E-4	DESIGN
from encoding, special-casing ASCII to ASCII	WITHOUT_CLASSIFICATION	0.9991784684131625	WITHOUT_CLASSIFICATION	8.215315868374351E-4	DESIGN
to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9984089045592984	WITHOUT_CLASSIFICATION	0.0015910954407015818	DESIGN
create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9969038080236253	WITHOUT_CLASSIFICATION	0.003096191976374676	DESIGN
decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9986969508889687	WITHOUT_CLASSIFICATION	0.0013030491110313336	DESIGN
create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9969038080236253	WITHOUT_CLASSIFICATION	0.003096191976374676	DESIGN
Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9990014661395942	WITHOUT_CLASSIFICATION	9.985338604057423E-4	DESIGN
no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9979363761036358	WITHOUT_CLASSIFICATION	0.002063623896364103	DESIGN
interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.999945169818306	WITHOUT_CLASSIFICATION	5.483018169400243E-5	DESIGN
File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.999788532861638	WITHOUT_CLASSIFICATION	2.1146713836193428E-4	DESIGN
rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999098795689494	WITHOUT_CLASSIFICATION	9.012043105066784E-5	DESIGN
We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9880698467478097	WITHOUT_CLASSIFICATION	0.011930153252190323	DESIGN
exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9994193864435531	WITHOUT_CLASSIFICATION	5.806135564468811E-4	DESIGN
Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9993766427556312	WITHOUT_CLASSIFICATION	6.23357244368834E-4	DESIGN
file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9937651311571376	WITHOUT_CLASSIFICATION	0.006234868842862365	DESIGN
Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9997238045199349	WITHOUT_CLASSIFICATION	2.7619548006514293E-4	DESIGN
Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9986447555166204	WITHOUT_CLASSIFICATION	0.0013552444833795814	DESIGN
file not given	WITHOUT_CLASSIFICATION	0.9990482499569201	WITHOUT_CLASSIFICATION	9.517500430799413E-4	DESIGN
string to eval	WITHOUT_CLASSIFICATION	0.9996187293151644	WITHOUT_CLASSIFICATION	3.8127068483560203E-4	DESIGN
binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9991303192853963	WITHOUT_CLASSIFICATION	8.696807146036697E-4	DESIGN
?g | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9997056496028985	WITHOUT_CLASSIFICATION	2.9435039710142555E-4	DESIGN
bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9986742601389094	WITHOUT_CLASSIFICATION	0.001325739861090613	DESIGN
Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9989986291989394	WITHOUT_CLASSIFICATION	0.0010013708010605084	DESIGN
Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9886270819281573	WITHOUT_CLASSIFICATION	0.011372918071842682	DESIGN
No catch active for this throw	WITHOUT_CLASSIFICATION	0.9982048038211258	WITHOUT_CLASSIFICATION	0.0017951961788742457	DESIGN
without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9926356820945686	WITHOUT_CLASSIFICATION	0.007364317905431252	DESIGN
ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9998677272144684	WITHOUT_CLASSIFICATION	1.322727855317105E-4	DESIGN
MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999847235669762	WITHOUT_CLASSIFICATION	1.5276433023757382E-5	DESIGN
MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9998163468690578	WITHOUT_CLASSIFICATION	1.8365313094216747E-4	DESIGN
?A | Time | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999801549937931	WITHOUT_CLASSIFICATION	1.9845006206896485E-5	DESIGN
?b | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999586065120866	WITHOUT_CLASSIFICATION	4.139348791332189E-5	DESIGN
?c | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999816061613677	WITHOUT_CLASSIFICATION	1.839383863226031E-5	DESIGN
?C | Time | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999671140123546	WITHOUT_CLASSIFICATION	3.288598764529189E-5	DESIGN
?d | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999957510026657	WITHOUT_CLASSIFICATION	4.248997334283358E-6	DESIGN
?e | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999868264212276	WITHOUT_CLASSIFICATION	1.3173578772431859E-5	DESIGN
?f | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999525000267105	WITHOUT_CLASSIFICATION	4.749997328934292E-5	DESIGN
?G | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999872916498119	WITHOUT_CLASSIFICATION	1.270835018801048E-5	DESIGN
?k | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9997223204116599	WITHOUT_CLASSIFICATION	2.7767958834014106E-4	DESIGN
?M | Time | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999909635293546	WITHOUT_CLASSIFICATION	9.03647064555598E-6	DESIGN
?o | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999929917056765	WITHOUT_CLASSIFICATION	7.00829432360161E-6	DESIGN
?O | boolean | True if file1 exists and is owned by the caller's real uid	WITHOUT_CLASSIFICATION	0.9999825041571048	WITHOUT_CLASSIFICATION	1.7495842895199985E-5	DESIGN
?p | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999708673008714	WITHOUT_CLASSIFICATION	2.9132699128729235E-5	DESIGN
?r | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999945295899024	WITHOUT_CLASSIFICATION	5.470410097633254E-6	DESIGN
?s | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999969077870022	WITHOUT_CLASSIFICATION	3.0922129976960127E-6	DESIGN
?S | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999734505765046	WITHOUT_CLASSIFICATION	2.6549423495482056E-5	DESIGN
?u | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9994028008501817	WITHOUT_CLASSIFICATION	5.971991498182268E-4	DESIGN
?x | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999949099285139	WITHOUT_CLASSIFICATION	5.090071486110445E-6	DESIGN
?X | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999872928643445	WITHOUT_CLASSIFICATION	1.2707135655453308E-5	DESIGN
?z | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999889236874587	WITHOUT_CLASSIFICATION	1.1076312541300724E-5	DESIGN
?= | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.999998301736616	WITHOUT_CLASSIFICATION	1.6982633840906677E-6	DESIGN
?< | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999989605423149	WITHOUT_CLASSIFICATION	1.0394576850878008E-6	DESIGN
?> | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999989840542672	WITHOUT_CLASSIFICATION	1.015945732874552E-6	DESIGN
?- | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999865276538197	WITHOUT_CLASSIFICATION	1.347234618019148E-5	DESIGN
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9978404440779509	WITHOUT_CLASSIFICATION	0.0021595559220490656	DESIGN
Error info is per-thread	WITHOUT_CLASSIFICATION	0.9986831491432588	WITHOUT_CLASSIFICATION	0.0013168508567411618	DESIGN
init errorInfo to nil	WITHOUT_CLASSIFICATION	0.999197547047801	WITHOUT_CLASSIFICATION	8.024529521990072E-4	DESIGN
if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999750695109607	WITHOUT_CLASSIFICATION	2.4930489039307995E-5	DESIGN
If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999041101620288	WITHOUT_CLASSIFICATION	9.58898379711152E-5	DESIGN
new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9941479573227187	WITHOUT_CLASSIFICATION	0.005852042677281425	DESIGN
set to default thread group	WITHOUT_CLASSIFICATION	0.9995102023887558	WITHOUT_CLASSIFICATION	4.897976112442406E-4	DESIGN
set to default thread group	WITHOUT_CLASSIFICATION	0.9995102023887558	WITHOUT_CLASSIFICATION	4.897976112442406E-4	DESIGN
JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9997282302095973	WITHOUT_CLASSIFICATION	2.717697904026453E-4	DESIGN
JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9996747937640776	WITHOUT_CLASSIFICATION	3.2520623592235915E-4	DESIGN
for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9993842118529527	WITHOUT_CLASSIFICATION	6.157881470473064E-4	DESIGN
JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9996071261849112	WITHOUT_CLASSIFICATION	3.928738150888216E-4	DESIGN
MRI behavior: value given in seconds; converted to Float; less than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999157310684068	WITHOUT_CLASSIFICATION	8.426893159323428E-5	DESIGN
If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999993654704558	WITHOUT_CLASSIFICATION	6.34529544311105E-7	DESIGN
We need this loop in order to be able to "unblock" the join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9998248880579421	WITHOUT_CLASSIFICATION	1.7511194205798274E-4	DESIGN
attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9998163206030568	WITHOUT_CLASSIFICATION	1.8367939694317E-4	DESIGN
not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9993118575470485	WITHOUT_CLASSIFICATION	6.881424529514623E-4	DESIGN
If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999933531593629	WITHOUT_CLASSIFICATION	6.646840637198849E-6	DESIGN
check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.999996601515417	WITHOUT_CLASSIFICATION	3.3984845829238804E-6	DESIGN
check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.999996601515417	WITHOUT_CLASSIFICATION	3.3984845829238804E-6	DESIGN
ignore; I don't like doing it, but it seems like we really just need to make all channels non-blocking by default and use select when implementing blocking ops, so if this remains set non-blocking, perhaps it's not such a big deal...	WITHOUT_CLASSIFICATION	0.99899031948231	DESIGN	0.0010096805176900503	WITHOUT_CLASSIFICATION
can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9992366562685511	WITHOUT_CLASSIFICATION	7.633437314490438E-4	DESIGN
compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9905013154761799	WITHOUT_CLASSIFICATION	0.009498684523820057	DESIGN
Create Constants class	WITHOUT_CLASSIFICATION	0.9986697231912497	WITHOUT_CLASSIFICATION	0.00133027680875032	DESIGN
Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999748292452904	WITHOUT_CLASSIFICATION	2.517075470973184E-5	DESIGN
Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9977565129885365	WITHOUT_CLASSIFICATION	0.002243487011463381	DESIGN
Create constants for flock	WITHOUT_CLASSIFICATION	0.9998486431445579	WITHOUT_CLASSIFICATION	1.5135685544220197E-4	DESIGN
File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9989155617530214	WITHOUT_CLASSIFICATION	0.001084438246978506	DESIGN
Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.99999904856012	WITHOUT_CLASSIFICATION	9.514398798720379E-7	DESIGN
null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9998899587831818	WITHOUT_CLASSIFICATION	1.1004121681828002E-4	DESIGN
Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9997590906452155	WITHOUT_CLASSIFICATION	2.409093547845759E-4	DESIGN
Special case for handling ACCMODE, since constantine will generate an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999996426031114	WITHOUT_CLASSIFICATION	3.5739688864726684E-7	DESIGN
Return false here	WITHOUT_CLASSIFICATION	0.9992148123305132	WITHOUT_CLASSIFICATION	7.851876694868437E-4	DESIGN
Return false here	WITHOUT_CLASSIFICATION	0.9992148123305132	WITHOUT_CLASSIFICATION	7.851876694868437E-4	DESIGN
We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9917009730517513	WITHOUT_CLASSIFICATION	0.008299026948248715	DESIGN
Should we do anything?	WITHOUT_CLASSIFICATION	0.965710316189626	WITHOUT_CLASSIFICATION	0.03428968381037407	DESIGN
File class methods	WITHOUT_CLASSIFICATION	0.9992277714446373	WITHOUT_CLASSIFICATION	7.722285553627975E-4	DESIGN
MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9966005160081248	WITHOUT_CLASSIFICATION	0.003399483991875275	DESIGN
strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9993769875928826	WITHOUT_CLASSIFICATION	6.230124071173586E-4	DESIGN
C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9981485837247922	WITHOUT_CLASSIFICATION	0.0018514162752078435	DESIGN
-1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999371040735496	WITHOUT_CLASSIFICATION	6.28959264503804E-5	DESIGN
trim trailing slashes	WITHOUT_CLASSIFICATION	0.9984386559254129	WITHOUT_CLASSIFICATION	0.0015613440745870602	DESIGN
Dot is not at beginning and not at end of filename.	WITHOUT_CLASSIFICATION	0.9987416221210642	WITHOUT_CLASSIFICATION	0.0012583778789358473	DESIGN
Handle ~user paths	WITHOUT_CLASSIFICATION	0.9982716616105842	WITHOUT_CLASSIFICATION	0.0017283383894157462	DESIGN
compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9905013154761799	WITHOUT_CLASSIFICATION	0.009498684523820057	DESIGN
Include additional path separator (so that dirname of "C:\file.txt" is "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9964770860482125	WITHOUT_CLASSIFICATION	0.0035229139517874005	DESIGN
FNFException can be thrown in both cases, when the file is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.994106177352923	WITHOUT_CLASSIFICATION	0.0058938226470770265	DESIGN
No directory delimeter. Rest of string is username	WITHOUT_CLASSIFICATION	0.999981291920662	WITHOUT_CLASSIFICATION	1.870807933811756E-5	DESIGN
If there's a second argument, it's the path to which the first argument is relative.	WITHOUT_CLASSIFICATION	0.9999973982380975	WITHOUT_CLASSIFICATION	2.6017619024260596E-6	DESIGN
Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9970334491096917	WITHOUT_CLASSIFICATION	0.0029665508903082612	DESIGN
If there's no second argument, simply use the working directory of the runtime.	WITHOUT_CLASSIFICATION	0.9999876531083595	WITHOUT_CLASSIFICATION	1.2346891640469317E-5	DESIGN
Find out which string to check.	WITHOUT_CLASSIFICATION	0.9998721286957236	WITHOUT_CLASSIFICATION	1.278713042763579E-4	DESIGN
Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.99916544707646	WITHOUT_CLASSIFICATION	8.345529235399451E-4	DESIGN
Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9992530625201803	WITHOUT_CLASSIFICATION	7.469374798196352E-4	DESIGN
'~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9995072341939923	WITHOUT_CLASSIFICATION	4.927658060077189E-4	DESIGN
'~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9995072341939923	WITHOUT_CLASSIFICATION	4.927658060077189E-4	DESIGN
Prepare a string with the same number of redundant slashes so that we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.6985583584015407	WITHOUT_CLASSIFICATION	0.3014416415984594	DESIGN
If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9997962080639176	WITHOUT_CLASSIFICATION	2.037919360824279E-4	DESIGN
no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9998444571440415	WITHOUT_CLASSIFICATION	1.55542855958483E-4	DESIGN
we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9975530215146321	WITHOUT_CLASSIFICATION	0.002446978485367967	DESIGN
we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.997696592560945	WITHOUT_CLASSIFICATION	0.0023034074390550197	DESIGN
do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9941114916321094	WITHOUT_CLASSIFICATION	0.005888508367890644	DESIGN
rb: check_modifiable	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
rb: readable	WITHOUT_CLASSIFICATION	0.9992347517720014	WITHOUT_CLASSIFICATION	7.652482279985538E-4	DESIGN
rename is successful	WITHOUT_CLASSIFICATION	0.9830771522883175	WITHOUT_CLASSIFICATION	0.016922847711682457	DESIGN
rename via Java API call wasn't successful, let's try some tricks, similar to MRI	WITHOUT_CLASSIFICATION	0.9988730474159124	WITHOUT_CLASSIFICATION	0.001126952584087535	DESIGN
try to rename one more time	WITHOUT_CLASSIFICATION	0.9856760969004833	WITHOUT_CLASSIFICATION	0.014323903099516758	DESIGN
Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.991410681281522	WITHOUT_CLASSIFICATION	0.00858931871847801	DESIGN
Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9977956322434712	WITHOUT_CLASSIFICATION	0.002204367756528765	DESIGN
RubyContinuation	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq) it doesn't initialize ifNone field	WITHOUT_CLASSIFICATION	0.9997107744946201	WITHOUT_CLASSIFICATION	2.892255053798603E-4	DESIGN
16 ?	WITHOUT_CLASSIFICATION	0.998626591176408	WITHOUT_CLASSIFICATION	0.001373408823592019	DESIGN
generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9998134168502704	WITHOUT_CLASSIFICATION	1.8658314972961178E-4	DESIGN
size + 1;	WITHOUT_CLASSIFICATION	0.9999093565718695	WITHOUT_CLASSIFICATION	9.064342813050454E-5	DESIGN
suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9994434534224781	WITHOUT_CLASSIFICATION	5.56546577521848E-4	DESIGN
------------------------------	WITHOUT_CLASSIFICATION	0.9988164860844512	WITHOUT_CLASSIFICATION	0.0011835139155488912	DESIGN
------------------------------	WITHOUT_CLASSIFICATION	0.9988164860844512	WITHOUT_CLASSIFICATION	0.0011835139155488912	DESIGN
put implementation	WITHOUT_CLASSIFICATION	0.9992075498797282	WITHOUT_CLASSIFICATION	7.92450120271932E-4	DESIGN
get implementation	WITHOUT_CLASSIFICATION	0.9993099430205787	WITHOUT_CLASSIFICATION	6.900569794212638E-4	DESIGN
specialized for value	WITHOUT_CLASSIFICATION	0.9995326250592141	WITHOUT_CLASSIFICATION	4.6737494078586257E-4	DESIGN
delete implementation	WITHOUT_CLASSIFICATION	0.9998115785256524	WITHOUT_CLASSIFICATION	1.8842147434758276E-4	DESIGN
n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999355187195301	WITHOUT_CLASSIFICATION	6.448128046990328E-5	DESIGN
============================ End of hash internals ============================	WITHOUT_CLASSIFICATION	0.9998408221112328	WITHOUT_CLASSIFICATION	1.5917788876713802E-4	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999797876714283	WITHOUT_CLASSIFICATION	2.021232857179103E-5	DESIGN
update the hash value	WITHOUT_CLASSIFICATION	0.9998718459891529	WITHOUT_CLASSIFICATION	1.2815401084718134E-4	DESIGN
other hash does not contain key	WITHOUT_CLASSIFICATION	0.9960725629654543	WITHOUT_CLASSIFICATION	0.0039274370345456985	DESIGN
rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.99951062753829	WITHOUT_CLASSIFICATION	4.893724617100246E-4	DESIGN
Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9991761409854973	WITHOUT_CLASSIFICATION	8.238590145026199E-4	DESIGN
remain where we are	WITHOUT_CLASSIFICATION	0.9996113667575987	WITHOUT_CLASSIFICATION	3.886332424013648E-4	DESIGN
We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999937124739984	WITHOUT_CLASSIFICATION	6.28752600158124E-6	DESIGN
default: don't retain	WITHOUT_CLASSIFICATION	0.9993983195437945	WITHOUT_CLASSIFICATION	6.016804562054042E-4	DESIGN
once hasNext has been called, we commit to next() returning the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9989397220533935	WITHOUT_CLASSIFICATION	0.0010602779466063678	DESIGN
Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9979720004318458	WITHOUT_CLASSIFICATION	0.0020279995681542337	DESIGN
We do both writable and writable_real through the same method because in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9989898198512084	WITHOUT_CLASSIFICATION	0.0010101801487916173	DESIGN
first try as directory	WITHOUT_CLASSIFICATION	0.9999810628784117	WITHOUT_CLASSIFICATION	1.8937121588334228E-5	DESIGN
next as regular file	WITHOUT_CLASSIFICATION	0.9976781955424819	WITHOUT_CLASSIFICATION	0.0023218044575180753	DESIGN
We only want IO objects with valid streams (better to error now).	WITHOUT_CLASSIFICATION	0.9995112645965905	WITHOUT_CLASSIFICATION	4.887354034095827E-4	DESIGN
NIO-based	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
NIO-based	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
Stream-based	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9886146883564609	WITHOUT_CLASSIFICATION	0.011385311643539106	DESIGN
We use FILE versus IO to match T_FILE in MRI.	WITHOUT_CLASSIFICATION	0.9995748774458725	WITHOUT_CLASSIFICATION	4.2512255412752924E-4	DESIGN
Constants for seek	WITHOUT_CLASSIFICATION	0.9994785662387877	WITHOUT_CLASSIFICATION	5.214337612123822E-4	DESIGN
confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.994508296767987	WITHOUT_CLASSIFICATION	0.005491703232012898	DESIGN
check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999152713569324	WITHOUT_CLASSIFICATION	8.472864306771637E-5	DESIGN
dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9923562173358099	WITHOUT_CLASSIFICATION	0.00764378266419011	DESIGN
re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9998728758865149	WITHOUT_CLASSIFICATION	1.2712411348515614E-4	DESIGN
re-register the descriptor	WITHOUT_CLASSIFICATION	0.999313321825474	WITHOUT_CLASSIFICATION	6.866781745260501E-4	DESIGN
since we're not actually duping the incoming channel into our handler, we need to copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9799286228857834	WITHOUT_CLASSIFICATION	0.020071377114216492	DESIGN
re-register	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.999981394228637	WITHOUT_CLASSIFICATION	1.8605771363003198E-5	DESIGN
Ensure that separator is valid otherwise give it the default paragraph separator.	WITHOUT_CLASSIFICATION	0.9999983072198514	WITHOUT_CLASSIFICATION	1.6927801486270266E-6	DESIGN
loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999910565868677	WITHOUT_CLASSIFICATION	8.94341313226954E-6	DESIGN
if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9998141113749388	WITHOUT_CLASSIFICATION	1.8588862506105464E-4	DESIGN
this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.8429598090626897	DESIGN	0.15704019093731028	WITHOUT_CLASSIFICATION
IO class methods.	WITHOUT_CLASSIFICATION	0.9979522438612097	WITHOUT_CLASSIFICATION	0.0020477561387902384	DESIGN
use original modes	WITHOUT_CLASSIFICATION	0.999091648513932	WITHOUT_CLASSIFICATION	9.083514860680898E-4	DESIGN
See if we already have this descriptor open. If so then we can mostly share the handler (keep open file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999499648700819	WITHOUT_CLASSIFICATION	5.0035129918161954E-5	DESIGN
redundant, done above as well	WITHOUT_CLASSIFICATION	0.9986804888192797	WITHOUT_CLASSIFICATION	0.001319511180720231	DESIGN
MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9992719747292681	WITHOUT_CLASSIFICATION	7.280252707318585E-4	DESIGN
-1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9947012967036462	WITHOUT_CLASSIFICATION	0.00529870329635378	DESIGN
isRetained=true	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
This appears to be some windows-only mode. On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.7438906610403592	WITHOUT_CLASSIFICATION	0.2561093389596409	DESIGN
if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9949935212518596	WITHOUT_CLASSIFICATION	0.005006478748140455	DESIGN
Throw bad file descriptor is we can not read on supplied descriptor.	WITHOUT_CLASSIFICATION	0.9947152516096993	WITHOUT_CLASSIFICATION	0.005284748390300745	DESIGN
Everything written	WITHOUT_CLASSIFICATION	0.9995497186150734	WITHOUT_CLASSIFICATION	4.5028138492657355E-4	DESIGN
return len - n;	WITHOUT_CLASSIFICATION	0.999057624673383	WITHOUT_CLASSIFICATION	9.423753266170944E-4	DESIGN
Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999321827861382	WITHOUT_CLASSIFICATION	6.781721386183017E-5	DESIGN
Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.8533770642519894	WITHOUT_CLASSIFICATION	0.14662293574801052	DESIGN
Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9970233813669671	WITHOUT_CLASSIFICATION	0.0029766186330329016	DESIGN
Register the new descriptor	WITHOUT_CLASSIFICATION	0.9987057488936801	WITHOUT_CLASSIFICATION	0.001294251106319883	DESIGN
cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9997499894460625	WITHOUT_CLASSIFICATION	2.500105539374654E-4	DESIGN
hmmmm	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9945246040928323	WITHOUT_CLASSIFICATION	0.005475395907167714	DESIGN
Do nothing. FD_CLOEXEC has no meaning in JVM since we cannot really exec. And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9983190059633449	WITHOUT_CLASSIFICATION	0.0016809940366550682	DESIGN
Do nothing. FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9998895340855072	WITHOUT_CLASSIFICATION	1.104659144927734E-4	DESIGN
Length to read	WITHOUT_CLASSIFICATION	0.9994648007054026	WITHOUT_CLASSIFICATION	5.351992945974369E-4	DESIGN
String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9960693216698296	WITHOUT_CLASSIFICATION	0.0039306783301703155	DESIGN
cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9993764046522325	WITHOUT_CLASSIFICATION	6.235953477673863E-4	DESIGN
select until read is ready	WITHOUT_CLASSIFICATION	0.9998944833125187	WITHOUT_CLASSIFICATION	1.055166874813013E-4	DESIGN
ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9973136421800224	WITHOUT_CLASSIFICATION	0.0026863578199776555	DESIGN
buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.999484149440804	WITHOUT_CLASSIFICATION	5.158505591960558E-4	DESIGN
READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9986749913463657	WITHOUT_CLASSIFICATION	0.001325008653634268	DESIGN
rb: writable	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9986749913463657	WITHOUT_CLASSIFICATION	0.001325008653634268	DESIGN
All errors to sysread should be SystemCallErrors, but on a closed stream Ruby returns an IOError. Java throws same exception for all errors so we resort to this hack...	WITHOUT_CLASSIFICATION	0.9894558106573595	DESIGN	0.01054418934264049	WITHOUT_CLASSIFICATION
TODO: read into buffer using all the fread logic int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.8873483481869292	WITHOUT_CLASSIFICATION	0.1126516518130708	DESIGN
truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999283070243581	WITHOUT_CLASSIFICATION	7.169297564198986E-5	DESIGN
TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.628299397176564	DESIGN	0.37170060282343603	WITHOUT_CLASSIFICATION
class methods for IO	WITHOUT_CLASSIFICATION	0.9981374271002105	WITHOUT_CLASSIFICATION	0.0018625728997896072	DESIGN
save blocking state	WITHOUT_CLASSIFICATION	0.9993635001999431	WITHOUT_CLASSIFICATION	6.364998000567854E-4	DESIGN
write	WITHOUT_CLASSIFICATION	0.9991242622302141	WITHOUT_CLASSIFICATION	8.757377697859587E-4	DESIGN
Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9994967534904737	WITHOUT_CLASSIFICATION	5.032465095262591E-4	DESIGN
make all sockets blocking as configured again close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.999997764139125	WITHOUT_CLASSIFICATION	2.2358608749810245E-6	DESIGN
FIXME: process options	WITHOUT_CLASSIFICATION	0.7677865650874581	WITHOUT_CLASSIFICATION	0.23221343491254182	DESIGN
Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.6590480338292075	WITHOUT_CLASSIFICATION	0.3409519661707925	DESIGN
NIO based pipe	WITHOUT_CLASSIFICATION	0.9989900996236845	WITHOUT_CLASSIFICATION	0.0010099003763155486	DESIGN
not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9913597255672657	WITHOUT_CLASSIFICATION	0.00864027443273433	DESIGN
raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999822249338997	WITHOUT_CLASSIFICATION	1.7775066100366752E-5	DESIGN
may need to handle ENC_CODERANGE_BROKEN	WITHOUT_CLASSIFICATION	0.9739158930751634	WITHOUT_CLASSIFICATION	0.026084106924836613	DESIGN
TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.6031146430220187	DESIGN	0.3968853569779814	WITHOUT_CLASSIFICATION
If we know what method was being called, strip everything before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9724917091678907	WITHOUT_CLASSIFICATION	0.027508290832109285	DESIGN
The class of this object	WITHOUT_CLASSIFICATION	0.996288785990478	WITHOUT_CLASSIFICATION	0.0037112140095219193	DESIGN
zeroed by jvm	WITHOUT_CLASSIFICATION	0.9995928154282488	WITHOUT_CLASSIFICATION	4.071845717511555E-4	DESIGN
objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9991856162036415	WITHOUT_CLASSIFICATION	8.143837963584149E-4	DESIGN
JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.8820334259318574	WITHOUT_CLASSIFICATION	0.11796657406814257	DESIGN
rb_class_boot	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
6:tags 16:addr 1:eos	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9988086530547068	WITHOUT_CLASSIFICATION	0.0011913469452933098	DESIGN
for interface impls	WITHOUT_CLASSIFICATION	0.9990516863997619	WITHOUT_CLASSIFICATION	9.483136002380899E-4	DESIGN
We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9362907294795288	WITHOUT_CLASSIFICATION	0.06370927052047114	DESIGN
Methods of the Object class (rb_obj_):	WITHOUT_CLASSIFICATION	0.9981992052247026	WITHOUT_CLASSIFICATION	0.0018007947752974208	DESIGN
can't use -v and stdin	WITHOUT_CLASSIFICATION	0.998033314391733	WITHOUT_CLASSIFICATION	0.0019666856082669946	DESIGN
include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.8928130255346091	WITHOUT_CLASSIFICATION	0.10718697446539087	DESIGN
Equivalent of Data_Get_Struct This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9991894205395059	WITHOUT_CLASSIFICATION	8.105794604942356E-4	DESIGN
COMMON VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9987282124042417	WITHOUT_CLASSIFICATION	0.0012717875957582317	DESIGN
INTERNAL VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9988359068557464	WITHOUT_CLASSIFICATION	0.001164093144253562	DESIGN
INSTANCE VARIABLE API METHODS	WITHOUT_CLASSIFICATION	0.9977769290652355	WITHOUT_CLASSIFICATION	0.002223070934764582	DESIGN
Struct methods	WITHOUT_CLASSIFICATION	0.9991089277706227	WITHOUT_CLASSIFICATION	8.910722293773005E-4	DESIGN
runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9998477628173629	WITHOUT_CLASSIFICATION	1.5223718263712266E-4	DESIGN
define access methods.	WITHOUT_CLASSIFICATION	0.9989956965674985	WITHOUT_CLASSIFICATION	0.0010043034325014932	DESIGN
if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9912883293570053	WITHOUT_CLASSIFICATION	0.00871167064299477	DESIGN
Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9989375090878175	WITHOUT_CLASSIFICATION	0.0010624909121825152	DESIGN
For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9998226528965128	WITHOUT_CLASSIFICATION	1.7734710348720037E-4	DESIGN
OBJ_INFECT	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
These call assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9998986021858967	WITHOUT_CLASSIFICATION	1.013978141032655E-4	DESIGN
Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9989528430763459	WITHOUT_CLASSIFICATION	0.0010471569236541226	DESIGN
@param nv number of times to cycle or -1 to cycle indefinitely	WITHOUT_CLASSIFICATION	0.9798803187206903	WITHOUT_CLASSIFICATION	0.020119681279309815	DESIGN
Atomic ?	WITHOUT_CLASSIFICATION	0.9978532155311095	WITHOUT_CLASSIFICATION	0.0021467844688905823	DESIGN
Atomic ?	WITHOUT_CLASSIFICATION	0.9978532155311095	WITHOUT_CLASSIFICATION	0.0021467844688905823	DESIGN
MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.7171761076579016	WITHOUT_CLASSIFICATION	0.2828238923420983	DESIGN
superClass may be null.	WITHOUT_CLASSIFICATION	0.9944200811097985	WITHOUT_CLASSIFICATION	0.005579918890201415	DESIGN
Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.8343099099945733	WITHOUT_CLASSIFICATION	0.1656900900054267	DESIGN
ClassId is the name of the class/module sans where it is located. If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.999976702534687	WITHOUT_CLASSIFICATION	2.3297465313070726E-5	DESIGN
ClassProviders return Java class/module (in #defineOrGetClassUnder and #defineOrGetModuleUnder) when class/module is opened using colon syntax.	WITHOUT_CLASSIFICATION	0.9999718916137422	WITHOUT_CLASSIFICATION	2.8108386257702647E-5	DESIGN
update superclass reference	WITHOUT_CLASSIFICATION	0.9998714470227794	WITHOUT_CLASSIFICATION	1.2855297722059E-4	DESIGN
Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9910900397020775	WITHOUT_CLASSIFICATION	0.008909960297922485	DESIGN
MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9996286860784735	WITHOUT_CLASSIFICATION	3.713139215264869E-4	DESIGN
we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.974834268456264	WITHOUT_CLASSIFICATION	0.025165731543736053	DESIGN
module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999734984190589	WITHOUT_CLASSIFICATION	2.650158094102852E-5	DESIGN
See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999689591013069	WITHOUT_CLASSIFICATION	3.104089869297357E-5	DESIGN
We can safely reference methods here instead of doing getMethods() since if we are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.999254140660528	WITHOUT_CLASSIFICATION	7.458593394719569E-4	DESIGN
we grab serial number first; the worst that will happen is we cache a later update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9907937919460543	WITHOUT_CLASSIFICATION	0.009206208053945609	DESIGN
update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9863733729978504	WITHOUT_CLASSIFICATION	0.013626627002149654	DESIGN
This method is intended only for defining new classes in Ruby code, so it uses the allocator of the specified superclass or default to the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.8793290042823464	DESIGN	0.12067099571765366	WITHOUT_CLASSIFICATION
need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.997855991466292	WITHOUT_CLASSIFICATION	0.002144008533708012	DESIGN
superClazz = null;	WITHOUT_CLASSIFICATION	0.9989297634848733	WITHOUT_CLASSIFICATION	0.001070236515126703	DESIGN
reopen a java class	WITHOUT_CLASSIFICATION	0.9912545796633613	WITHOUT_CLASSIFICATION	0.008745420336638754	DESIGN
This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9901154985983603	WITHOUT_CLASSIFICATION	0.009884501401639614	DESIGN
reopen a java module	WITHOUT_CLASSIFICATION	0.9915530596347293	WITHOUT_CLASSIFICATION	0.008446940365270656	DESIGN
FIXME warning	WITHOUT_CLASSIFICATION	0.8678434921388005	WITHOUT_CLASSIFICATION	0.13215650786119945	DESIGN
FIXME warning	WITHOUT_CLASSIFICATION	0.8678434921388005	WITHOUT_CLASSIFICATION	0.13215650786119945	DESIGN
a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9983066690326577	WITHOUT_CLASSIFICATION	0.0016933309673421652	DESIGN
for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.999696007245632	WITHOUT_CLASSIFICATION	3.0399275436789535E-4	DESIGN
just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9746864396009051	WITHOUT_CLASSIFICATION	0.025313560399095034	DESIGN
class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9909229363542367	WITHOUT_CLASSIFICATION	0.00907706364576341	DESIGN
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.998031565973572	WITHOUT_CLASSIFICATION	0.0019684340264279634	DESIGN
MRI error message says Class, even though Module is ok	WITHOUT_CLASSIFICATION	0.9965235099343192	WITHOUT_CLASSIFICATION	0.0034764900656808185	DESIGN
scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9989589048596704	WITHOUT_CLASSIFICATION	0.001041095140329597	DESIGN
Module class methods	WITHOUT_CLASSIFICATION	0.9975543395675907	WITHOUT_CLASSIFICATION	0.00244566043240944	DESIGN
Note: we change current frames visibility here because the methods which call this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.8319956698367603	DESIGN	0.1680043301632396	WITHOUT_CLASSIFICATION
next in hierarchy is an included version of the module we're attempting, so we skip including it	WITHOUT_CLASSIFICATION	0.9999654504398305	WITHOUT_CLASSIFICATION	3.454956016949363E-5	DESIGN
if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9991802114638696	WITHOUT_CLASSIFICATION	8.197885361303089E-4	DESIGN
build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9989995673659987	WITHOUT_CLASSIFICATION	0.0010004326340012982	DESIGN
if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.999623907421545	WITHOUT_CLASSIFICATION	3.7609257845492645E-4	DESIGN
if there's a non-null superclass, we're including into a normal class hierarchy; update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.999675453618398	WITHOUT_CLASSIFICATION	3.2454638160195966E-4	DESIGN
CLASS VARIABLE RUBY METHODS	WITHOUT_CLASSIFICATION	0.9987590200081192	WITHOUT_CLASSIFICATION	0.0012409799918807656	DESIGN
CONSTANT RUBY METHODS	WITHOUT_CLASSIFICATION	0.9988359068557464	WITHOUT_CLASSIFICATION	0.001164093144253562	DESIGN
Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.8280790620192049	DESIGN	0.17192093798079514	WITHOUT_CLASSIFICATION
CLASS VARIABLE API METHODS	WITHOUT_CLASSIFICATION	0.9976302640454925	WITHOUT_CLASSIFICATION	0.002369735954507438	DESIGN
Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9984043584547173	WITHOUT_CLASSIFICATION	0.0015956415452826665	DESIGN
not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9992298835303595	WITHOUT_CLASSIFICATION	7.701164696405186E-4	DESIGN
Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.6326127530890555	DESIGN	0.3673872469109443	WITHOUT_CLASSIFICATION
if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9997305640824878	WITHOUT_CLASSIFICATION	2.69435917512104E-4	DESIGN
Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9988007379880203	WITHOUT_CLASSIFICATION	0.0011992620119797579	DESIGN
returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9996743820099446	WITHOUT_CLASSIFICATION	3.2561799005536695E-4	DESIGN
removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9998135742134023	WITHOUT_CLASSIFICATION	1.864257865976578E-4	DESIGN
we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9723025512973015	WITHOUT_CLASSIFICATION	0.027697448702698572	DESIGN
reopen	WITHOUT_CLASSIFICATION	0.9992547176830797	WITHOUT_CLASSIFICATION	7.452823169203491E-4	DESIGN
ARGF methods	WITHOUT_CLASSIFICATION	0.9991089277706227	WITHOUT_CLASSIFICATION	8.910722293773005E-4	DESIGN
data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9991856162036415	WITHOUT_CLASSIFICATION	8.143837963584149E-4	DESIGN
one optional, one required args	WITHOUT_CLASSIFICATION	0.9995775439010557	WITHOUT_CLASSIFICATION	4.224560989442846E-4	DESIGN
one optional and no required args	WITHOUT_CLASSIFICATION	0.9998574120213599	WITHOUT_CLASSIFICATION	1.4258797864010207E-4	DESIGN
try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.999679901497894	WITHOUT_CLASSIFICATION	3.2009850210609655E-4	DESIGN
we got a valid errno value	WITHOUT_CLASSIFICATION	0.9998722222865183	WITHOUT_CLASSIFICATION	1.277777134818037E-4	DESIGN
Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9993024368593618	WITHOUT_CLASSIFICATION	6.975631406381651E-4	DESIGN
print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.996409502181405	WITHOUT_CLASSIFICATION	0.003590497818595025	DESIGN
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.6069176753150892	DESIGN	0.39308232468491083	WITHOUT_CLASSIFICATION
set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9998422700323479	WITHOUT_CLASSIFICATION	1.5772996765204268E-4	DESIGN
can't set TC classloader	WITHOUT_CLASSIFICATION	0.9981252005150614	WITHOUT_CLASSIFICATION	0.0018747994849386523	DESIGN
no script to run, return success below	WITHOUT_CLASSIFICATION	0.9998772785586246	WITHOUT_CLASSIFICATION	1.2272144137532545E-4	DESIGN
Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999189518058761	WITHOUT_CLASSIFICATION	8.104819412397118E-5	DESIGN
Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9998004723254885	WITHOUT_CLASSIFICATION	1.9952767451151981E-4	DESIGN
Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9998302627155371	WITHOUT_CLASSIFICATION	1.6973728446297094E-4	DESIGN
ignore error	WITHOUT_CLASSIFICATION	0.9983776994981305	WITHOUT_CLASSIFICATION	0.0016223005018694858	DESIGN
COMMON CONSTANT / CVAR METHODS	WITHOUT_CLASSIFICATION	0.9994371446297616	WITHOUT_CLASSIFICATION	5.628553702384026E-4	DESIGN
INTERNAL MODULE VARIABLE API METHODS	WITHOUT_CLASSIFICATION	0.9984798509963491	WITHOUT_CLASSIFICATION	0.0015201490036508844	DESIGN
LOW-LEVEL CONSTANT INTERFACE fetch/store/list constants for this module	WITHOUT_CLASSIFICATION	0.9958003493070827	WITHOUT_CLASSIFICATION	0.004199650692917212	DESIGN
odd	WITHOUT_CLASSIFICATION	0.999156151786849	WITHOUT_CLASSIFICATION	8.438482131509291E-4	DESIGN
JRubyClient	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
x = mantissa 2 exponent Where mantissa is in the range of [.5, 1)	WITHOUT_CLASSIFICATION	0.9999931310966187	WITHOUT_CLASSIFICATION	6.868903381300989E-6	DESIGN
Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.999686153835512	WITHOUT_CLASSIFICATION	3.138461644881501E-4	DESIGN
Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.99908365064639	WITHOUT_CLASSIFICATION	9.163493536098765E-4	DESIGN
r = x 2 y	WITHOUT_CLASSIFICATION	0.9999764761304726	WITHOUT_CLASSIFICATION	2.352386952743777E-5	DESIGN
0!	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
1!	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
2!	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
3!	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
4!	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
5!	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
6!	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
7!	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
8!	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
9!	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
11!	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
12!	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
13!	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
15!	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
16!	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
17!	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
19!	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
20!	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
21!	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
Static constants	WITHOUT_CLASSIFICATION	0.9997343618030655	WITHOUT_CLASSIFICATION	2.656381969345074E-4	DESIGN
Clean-up string representation so that it could be understood by Java's BigDecimal. Not terribly efficient for now. 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9820055298988245	WITHOUT_CLASSIFICATION	0.017994470101175504	DESIGN
2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9996716458964329	WITHOUT_CLASSIFICATION	3.2835410356717095E-4	DESIGN
3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9990625214948473	WITHOUT_CLASSIFICATION	9.374785051527501E-4	DESIGN
MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9980547631660381	WITHOUT_CLASSIFICATION	0.0019452368339619582	DESIGN
Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9998395026462759	WITHOUT_CLASSIFICATION	1.6049735372408489E-4	DESIGN
Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999655485052474	WITHOUT_CLASSIFICATION	3.44514947525273E-5	DESIGN
Note: MRI has a very non-trivial way of calculating the precision, so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.713118446401373	DESIGN	0.28688155359862705	WITHOUT_CLASSIFICATION
Iteration variables, for the square root x and the reciprocal v initial x: x0 ~ sqrt() initial v: v0 = 1/(2x)	WITHOUT_CLASSIFICATION	0.9999920583387872	WITHOUT_CLASSIFICATION	7.941661212848955E-6	DESIGN
it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9870176981162441	WITHOUT_CLASSIFICATION	0.012982301883755912	DESIGN
TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9791299746575545	DESIGN	0.020870025342445562	WITHOUT_CLASSIFICATION
integer division	WITHOUT_CLASSIFICATION	0.9992990076990814	WITHOUT_CLASSIFICATION	7.009923009185582E-4	DESIGN
MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999870474907068	WITHOUT_CLASSIFICATION	1.2952509293321705E-5	DESIGN
rounding neccessary	WITHOUT_CLASSIFICATION	0.9992450257597602	WITHOUT_CLASSIFICATION	7.549742402398391E-4	DESIGN
rounding neccessary	WITHOUT_CLASSIFICATION	0.9992450257597602	WITHOUT_CLASSIFICATION	7.549742402398391E-4	DESIGN
Java and MRI definitions of divmod are different.	WITHOUT_CLASSIFICATION	0.9998395026462759	WITHOUT_CLASSIFICATION	1.6049735372408489E-4	DESIGN
JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.884332375442058	WITHOUT_CLASSIFICATION	0.11566762455794195	DESIGN
shift the decimal point just to the right of the digit to be rounded to (divide by 10(abs(scale))) -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9997554609376575	WITHOUT_CLASSIFICATION	2.445390623424336E-4	DESIGN
...round to that digit	WITHOUT_CLASSIFICATION	0.9989231390705121	WITHOUT_CLASSIFICATION	0.0010768609294879157	DESIGN
...and shift the result back to the left (multiply by 10(abs(scale)))	WITHOUT_CLASSIFICATION	0.9993929857105425	WITHOUT_CLASSIFICATION	6.07014289457519E-4	DESIGN
this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9961598488834013	WITHOUT_CLASSIFICATION	0.0038401511165987536	DESIGN
sign	WITHOUT_CLASSIFICATION	0.9992307059145605	WITHOUT_CLASSIFICATION	7.692940854395547E-4	DESIGN
significant digits and exponent	WITHOUT_CLASSIFICATION	0.9997793570259795	WITHOUT_CLASSIFICATION	2.2064297402057522E-4	DESIGN
normalize the value	WITHOUT_CLASSIFICATION	0.9997803276017175	WITHOUT_CLASSIFICATION	2.1967239828244706E-4	DESIGN
base	WITHOUT_CLASSIFICATION	0.9994999055351653	WITHOUT_CLASSIFICATION	5.000944648346724E-4	DESIGN
NOTE: MRI's sqrt precision is limited by 100, but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9991196374828255	WITHOUT_CLASSIFICATION	8.803625171745655E-4	DESIGN
just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9875317425343889	WITHOUT_CLASSIFICATION	0.012468257465611036	DESIGN
eh?!	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9915622506551578	WITHOUT_CLASSIFICATION	0.008437749344842224	DESIGN
General number and precision checking	WITHOUT_CLASSIFICATION	0.9218481579951946	WITHOUT_CLASSIFICATION	0.07815184200480546	DESIGN
the requested precision	WITHOUT_CLASSIFICATION	0.9997893204768546	WITHOUT_CLASSIFICATION	2.106795231453884E-4	DESIGN
Proc class	WITHOUT_CLASSIFICATION	0.9976381976905616	WITHOUT_CLASSIFICATION	0.0023618023094384615	DESIGN
.append(" -x[directory] strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9905283438170853	WITHOUT_CLASSIFICATION	0.009471656182914645	DESIGN
even shift.. ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9915098771799989	WITHOUT_CLASSIFICATION	0.008490122820001157	DESIGN
5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.999593882182884	WITHOUT_CLASSIFICATION	4.0611781711598837E-4	DESIGN
..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999757545029111	WITHOUT_CLASSIFICATION	2.4245497088867663E-5	DESIGN
Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9994000813034837	WITHOUT_CLASSIFICATION	5.999186965161904E-4	DESIGN
x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9992326052144203	WITHOUT_CLASSIFICATION	7.673947855797211E-4	DESIGN
for prec 15 root x0 must surely be OK return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999715138439667	WITHOUT_CLASSIFICATION	2.8486156033374167E-5	DESIGN
Initial v - the reciprocal v0 = 1/(2x)	WITHOUT_CLASSIFICATION	0.9996443297640567	WITHOUT_CLASSIFICATION	3.5567023594336764E-4	DESIGN
Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9994097941969209	WITHOUT_CLASSIFICATION	5.902058030792378E-4	DESIGN
assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999115604117663	WITHOUT_CLASSIFICATION	8.843958823366264E-5	DESIGN
The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999893885940815	WITHOUT_CLASSIFICATION	1.061140591846893E-5	DESIGN
Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9977493523953017	WITHOUT_CLASSIFICATION	0.0022506476046982573	DESIGN
Next x e = d - x^2	WITHOUT_CLASSIFICATION	0.9998905569808634	WITHOUT_CLASSIFICATION	1.094430191365679E-4	DESIGN
x += ev ~ sqrt()	WITHOUT_CLASSIFICATION	0.9995426561426778	WITHOUT_CLASSIFICATION	4.573438573222292E-4	DESIGN
root x is ready!	WITHOUT_CLASSIFICATION	0.9992756923141793	WITHOUT_CLASSIFICATION	7.243076858206468E-4	DESIGN
Next v g = 1 - 2xv	WITHOUT_CLASSIFICATION	0.9998329976757065	WITHOUT_CLASSIFICATION	1.6700232429357262E-4	DESIGN
v += gv ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9991106033115201	WITHOUT_CLASSIFICATION	8.893966884798367E-4	DESIGN
RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
c: bind_eval	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
================ Module Methods ================	WITHOUT_CLASSIFICATION	0.9984615454288088	WITHOUT_CLASSIFICATION	0.0015384545711912623	DESIGN
from CommandlineParser	WITHOUT_CLASSIFICATION	0.9986749913463657	WITHOUT_CLASSIFICATION	0.001325008653634268	DESIGN
This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9992354055051981	WITHOUT_CLASSIFICATION	7.645944948019051E-4	DESIGN
default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9998976365703365	WITHOUT_CLASSIFICATION	1.0236342966343295E-4	DESIGN
Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9598985208070706	WITHOUT_CLASSIFICATION	0.040101479192929355	DESIGN
Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9842768530947903	WITHOUT_CLASSIFICATION	0.015723146905209748	DESIGN
try the normal property first	WITHOUT_CLASSIFICATION	0.9999409851699058	WITHOUT_CLASSIFICATION	5.901483009427835E-5	DESIGN
verify it if it's there	WITHOUT_CLASSIFICATION	0.9998707319022963	WITHOUT_CLASSIFICATION	1.2926809770378927E-4	DESIGN
verify it if it's there	WITHOUT_CLASSIFICATION	0.9998707319022963	WITHOUT_CLASSIFICATION	1.2926809770378927E-4	DESIGN
try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9985725818481337	WITHOUT_CLASSIFICATION	0.0014274181518662793	DESIGN
otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999712658253204	WITHOUT_CLASSIFICATION	2.8734174679658795E-5	DESIGN
We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9878028718101464	WITHOUT_CLASSIFICATION	0.012197128189853702	DESIGN
consume the file name	WITHOUT_CLASSIFICATION	0.9994598620557676	WITHOUT_CLASSIFICATION	5.401379442323832E-4	DESIGN
Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9998797632935752	WITHOUT_CLASSIFICATION	1.202367064248307E-4	DESIGN
try cwd first	WITHOUT_CLASSIFICATION	0.9998496673990188	WITHOUT_CLASSIFICATION	1.5033260098121475E-4	DESIGN
ruby interpreter compatibilty Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9982606273409628	WITHOUT_CLASSIFICATION	0.0017393726590372006	DESIGN
KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.6998458319244725	DESIGN	0.3001541680755275	WITHOUT_CLASSIFICATION
@JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9997869639614881	WITHOUT_CLASSIFICATION	2.1303603851184524E-4	DESIGN
@JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9996882666894781	WITHOUT_CLASSIFICATION	3.11733310521854E-4	DESIGN
@JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9997869639614881	WITHOUT_CLASSIFICATION	2.1303603851184524E-4	DESIGN
symbol string must be interned	WITHOUT_CLASSIFICATION	0.9989899514520337	WITHOUT_CLASSIFICATION	0.00101004854796622	DESIGN
assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9737386559886811	WITHOUT_CLASSIFICATION	0.026261344011318837	DESIGN
Symbol class methods.	WITHOUT_CLASSIFICATION	0.9967987712833423	WITHOUT_CLASSIFICATION	0.003201228716657713	DESIGN
TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.6031146430220187	DESIGN	0.3968853569779814	WITHOUT_CLASSIFICATION
This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9906215693503413	WITHOUT_CLASSIFICATION	0.009378430649658763	DESIGN
we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9987071096432796	WITHOUT_CLASSIFICATION	0.0012928903567204844	DESIGN
must be power of 2!	WITHOUT_CLASSIFICATION	0.9985119139253729	WITHOUT_CLASSIFICATION	0.0014880860746271315	DESIGN
note all fields are final -- rehash creates new entries when necessary. as documented in java.util.concurrent.ConcurrentHashMap.java, that will statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999608732929662	WITHOUT_CLASSIFICATION	3.9126707033758205E-5	DESIGN
assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9737386559886811	WITHOUT_CLASSIFICATION	0.026261344011318837	DESIGN
try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999594893249648	WITHOUT_CLASSIFICATION	4.0510675035123864E-5	DESIGN
try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999594893249648	WITHOUT_CLASSIFICATION	4.0510675035123864E-5	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9994166457453942	WITHOUT_CLASSIFICATION	5.833542546058674E-4	DESIGN
Single node on list	WITHOUT_CLASSIFICATION	0.9997220358500201	WITHOUT_CLASSIFICATION	2.7796414997992676E-4	DESIGN
Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9976095806697922	WITHOUT_CLASSIFICATION	0.0023904193302078727	DESIGN
Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9996156056730061	WITHOUT_CLASSIFICATION	3.843943269939944E-4	DESIGN
Check the length every iteration, since the block can modify this string.	WITHOUT_CLASSIFICATION	0.9799476940288406	WITHOUT_CLASSIFICATION	0.020052305971159406	DESIGN
we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.99723133717045	WITHOUT_CLASSIFICATION	0.0027686628295500275	DESIGN
not so backwards-compatible here, but no one should have been calling this anyway.	WITHOUT_CLASSIFICATION	0.9930981330769065	WITHOUT_CLASSIFICATION	0.006901866923093476	DESIGN
Profile	WITHOUT_CLASSIFICATION	0.9993774603423102	WITHOUT_CLASSIFICATION	6.225396576896766E-4	DESIGN
static private final String TRANSLIT = "translit";	WITHOUT_CLASSIFICATION	0.9989040498126439	WITHOUT_CLASSIFICATION	0.0010959501873561018	DESIGN
treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999917786516742	WITHOUT_CLASSIFICATION	8.221348325745324E-6	DESIGN
invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9998810182454448	WITHOUT_CLASSIFICATION	1.1898175455515103E-4	DESIGN
Methods of the Nil Class (nil_):	WITHOUT_CLASSIFICATION	0.9996524387510629	WITHOUT_CLASSIFICATION	3.475612489371874E-4	DESIGN
Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999843183745512	WITHOUT_CLASSIFICATION	1.5681625448847876E-5	DESIGN
Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9960138356292756	WITHOUT_CLASSIFICATION	0.003986164370724344	DESIGN
must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9998343769208347	WITHOUT_CLASSIFICATION	1.6562307916544335E-4	DESIGN
reset the state	WITHOUT_CLASSIFICATION	0.9997262145794249	WITHOUT_CLASSIFICATION	2.737854205750117E-4	DESIGN
Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9983476634693726	WITHOUT_CLASSIFICATION	0.0016523365306273224	DESIGN
rb_match_busy	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
str is frozen	WITHOUT_CLASSIFICATION	0.9991103827339376	WITHOUT_CLASSIFICATION	8.896172660624547E-4	DESIGN
MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9972218135516004	WITHOUT_CLASSIFICATION	0.0027781864483994254	DESIGN
JRubyServer	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9906431162535336	WITHOUT_CLASSIFICATION	0.0093568837464664	DESIGN
boot the Object class	WITHOUT_CLASSIFICATION	0.9983674531198194	WITHOUT_CLASSIFICATION	0.0016325468801805304	DESIGN
Methods of the Object class (rb_obj_):	WITHOUT_CLASSIFICATION	0.9981992052247026	WITHOUT_CLASSIFICATION	0.0018007947752974208	DESIGN
update superclass reference	WITHOUT_CLASSIFICATION	0.9998714470227794	WITHOUT_CLASSIFICATION	1.2855297722059E-4	DESIGN
undo check	WITHOUT_CLASSIFICATION	0.9998504878851743	WITHOUT_CLASSIFICATION	1.4951211482575782E-4	DESIGN
This is a non-standard method; have we decided to start extending Ruby? classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9969314088026113	WITHOUT_CLASSIFICATION	0.0030685911973886942	DESIGN
boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9998961536419917	WITHOUT_CLASSIFICATION	1.0384635800836977E-4	DESIGN
this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9975350615477662	WITHOUT_CLASSIFICATION	0.0024649384522338535	DESIGN
use parent's marshal	WITHOUT_CLASSIFICATION	0.9970143554233744	WITHOUT_CLASSIFICATION	0.00298564457662561	DESIGN
use parent's marshal	WITHOUT_CLASSIFICATION	0.9970143554233744	WITHOUT_CLASSIFICATION	0.00298564457662561	DESIGN
could be pulled down to RubyClass in future rb_class_boot	WITHOUT_CLASSIFICATION	0.988803908605809	WITHOUT_CLASSIFICATION	0.011196091394190904	DESIGN
remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999059001933893	WITHOUT_CLASSIFICATION	9.409980661062104E-5	DESIGN
add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999458194150358	WITHOUT_CLASSIFICATION	5.418058496424258E-5	DESIGN
update all subclasses	WITHOUT_CLASSIFICATION	0.9996222104107155	WITHOUT_CLASSIFICATION	3.777895892844802E-4	DESIGN
fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9995634384795417	WITHOUT_CLASSIFICATION	4.365615204583834E-4	DESIGN
static initializing method	WITHOUT_CLASSIFICATION	0.9892337797794208	WITHOUT_CLASSIFICATION	0.010766220220579208	DESIGN
standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9985938400531014	WITHOUT_CLASSIFICATION	0.0014061599468986289	DESIGN
no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.994991181396601	WITHOUT_CLASSIFICATION	0.005008818603398975	DESIGN
non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9991851018127597	WITHOUT_CLASSIFICATION	8.148981872403382E-4	DESIGN
indices for temp values	WITHOUT_CLASSIFICATION	0.9997734918090803	WITHOUT_CLASSIFICATION	2.2650819091980432E-4	DESIGN
self method name	WITHOUT_CLASSIFICATION	0.9981613415503947	WITHOUT_CLASSIFICATION	0.001838658449605311	DESIGN
the default allocator	WITHOUT_CLASSIFICATION	0.999686702825934	WITHOUT_CLASSIFICATION	3.132971740659532E-4	DESIGN
Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9993344233596221	WITHOUT_CLASSIFICATION	6.65576640377819E-4	DESIGN
do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9984449811155552	WITHOUT_CLASSIFICATION	0.0015550188844447397	DESIGN
Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999414048767258	WITHOUT_CLASSIFICATION	5.859512327420769E-5	DESIGN
================ Singleton Methods ================	WITHOUT_CLASSIFICATION	0.9984687282680544	WITHOUT_CLASSIFICATION	0.001531271731945495	DESIGN
Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9515497032660557	WITHOUT_CLASSIFICATION	0.04845029673394429	DESIGN
Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.999929950730549	WITHOUT_CLASSIFICATION	7.004926945108355E-5	DESIGN
MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9998897356301075	WITHOUT_CLASSIFICATION	1.1026436989253106E-4	DESIGN
NOTE: Serialization is primarily supported for testing purposes, and there is no general guarantee that serialization will work correctly. Specifically, instance variables pointing at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999968119347012	WITHOUT_CLASSIFICATION	3.1880652988324654E-6	DESIGN
write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9995713434975603	WITHOUT_CLASSIFICATION	4.286565024396092E-4	DESIGN
rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9995957384570759	WITHOUT_CLASSIFICATION	4.042615429239578E-4	DESIGN
0x3fff_ffff -0x4000_0000	WITHOUT_CLASSIFICATION	0.9988086530547068	WITHOUT_CLASSIFICATION	0.0011913469452933098	DESIGN
a gotcha	WITHOUT_CLASSIFICATION	0.9983814445171981	WITHOUT_CLASSIFICATION	0.001618555482801909	DESIGN
Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.999818254640377	WITHOUT_CLASSIFICATION	1.8174535962300168E-4	DESIGN
A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999238478481723	WITHOUT_CLASSIFICATION	7.615215182759727E-5	DESIGN
Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9989893378814637	WITHOUT_CLASSIFICATION	0.001010662118536263	DESIGN
Java Doubles are 64 bit long:	WITHOUT_CLASSIFICATION	0.9951681994474453	WITHOUT_CLASSIFICATION	0.004831800552554794	DESIGN
Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999414048767258	WITHOUT_CLASSIFICATION	5.859512327420769E-5	DESIGN
don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9997325561711241	WITHOUT_CLASSIFICATION	2.674438288758834E-4	DESIGN
Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9985261180347484	WITHOUT_CLASSIFICATION	0.0014738819652515376	DESIGN
MRI behavior:	WITHOUT_CLASSIFICATION	0.9992333626106604	WITHOUT_CLASSIFICATION	7.666373893395175E-4	DESIGN
Numeric.equal	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
provider is not available	WITHOUT_CLASSIFICATION	0.9902798882377954	WITHOUT_CLASSIFICATION	0.009720111762204556	DESIGN
bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9965865608676872	WITHOUT_CLASSIFICATION	0.003413439132312723	DESIGN
fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9994487197716263	WITHOUT_CLASSIFICATION	5.512802283738016E-4	DESIGN
RubyDigest	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.8469712878993012	WITHOUT_CLASSIFICATION	0.15302871210069877	DESIGN
synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9994952728774471	WITHOUT_CLASSIFICATION	5.047271225529568E-4	DESIGN
we only add live threads	WITHOUT_CLASSIFICATION	0.9998151767752145	WITHOUT_CLASSIFICATION	1.8482322478546054E-4	DESIGN
use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9998583445093517	WITHOUT_CLASSIFICATION	1.4165549064837184E-4	DESIGN
handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9996130232003724	WITHOUT_CLASSIFICATION	3.8697679962761844E-4	DESIGN
JRubyService	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
while	WITHOUT_CLASSIFICATION	0.9990099296479453	WITHOUT_CLASSIFICATION	9.900703520546827E-4	DESIGN
\OOO	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
CRuby uses sprintf(buf, "%.g", FLOAT_DIG, d); This pattern adjusts the output of String.pattern("%g") to mimic the C version.	WITHOUT_CLASSIFICATION	0.9948867610453285	WITHOUT_CLASSIFICATION	0.005113238954671555	DESIGN
mask off "once" flag	WITHOUT_CLASSIFICATION	0.999539802794587	WITHOUT_CLASSIFICATION	4.601972054129854E-4	DESIGN
used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9854563571270014	WITHOUT_CLASSIFICATION	0.014543642872998584	DESIGN
internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9995209651506968	WITHOUT_CLASSIFICATION	4.79034849303222E-4	DESIGN
silent ?	WITHOUT_CLASSIFICATION	0.9969039586328227	WITHOUT_CLASSIFICATION	0.0030960413671773947	DESIGN
\xHH	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
\M-X, \M-\C-X, \M-\cX	WITHOUT_CLASSIFICATION	0.9988086530547068	WITHOUT_CLASSIFICATION	0.0011913469452933098	DESIGN
\C-X, \C-\M-X	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
\cX, \c\M-X	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
\O, \OO, \OOO or backref	WITHOUT_CLASSIFICATION	0.9993666166500539	WITHOUT_CLASSIFICATION	6.333833499461028E-4	DESIGN
MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9988002049757067	WITHOUT_CLASSIFICATION	0.0011997950242933985	DESIGN
Surrogates	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
do not load the class if not used	WITHOUT_CLASSIFICATION	0.5035907966682648	DESIGN	0.4964092033317353	WITHOUT_CLASSIFICATION
\0, \0O, \0OO	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
\xHH	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
\C-X, \C-\M-X	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
\M-X, \M-\C-X, \M-\cX	WITHOUT_CLASSIFICATION	0.9988086530547068	WITHOUT_CLASSIFICATION	0.0011913469452933098	DESIGN
\\u{H HH HHH HHHH HHHHH HHHHHH ...}	WITHOUT_CLASSIFICATION	0.9991856162036415	WITHOUT_CLASSIFICATION	8.143837963584149E-4	DESIGN
\\uHHHH	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
\p{Hiragana}	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
inner switch	WITHOUT_CLASSIFICATION	0.9972204704556865	WITHOUT_CLASSIFICATION	0.00277952954431343	DESIGN
newInstance here	WITHOUT_CLASSIFICATION	0.995660393243581	WITHOUT_CLASSIFICATION	0.0043396067564189945	DESIGN
rb_reg_raise	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
rb_reg_desc	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9988086530547068	WITHOUT_CLASSIFICATION	0.0011913469452933098	DESIGN
rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9988086530547068	WITHOUT_CLASSIFICATION	0.0011913469452933098	DESIGN
rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999591060581651	WITHOUT_CLASSIFICATION	4.08939418349111E-5	DESIGN
rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
option_to_str	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
Don't initialize with class Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9997886451054383	WITHOUT_CLASSIFICATION	2.1135489456178958E-4	DESIGN
args should be before block	WITHOUT_CLASSIFICATION	0.9743368070307908	WITHOUT_CLASSIFICATION	0.025663192969209138	DESIGN
args should be at end	WITHOUT_CLASSIFICATION	0.9720429117307059	WITHOUT_CLASSIFICATION	0.027957088269294085	DESIGN
minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9978375769378107	WITHOUT_CLASSIFICATION	0.002162423062189224	DESIGN
minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9978375769378107	WITHOUT_CLASSIFICATION	0.002162423062189224	DESIGN
skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.999876432033537	WITHOUT_CLASSIFICATION	1.2356796646295875E-4	DESIGN
start a new populator	WITHOUT_CLASSIFICATION	0.9985624582552964	WITHOUT_CLASSIFICATION	0.0014375417447035084	DESIGN
check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9998665462994769	WITHOUT_CLASSIFICATION	1.3345370052311037E-4	DESIGN
add all names for this annotation	WITHOUT_CLASSIFICATION	0.9973696945877496	WITHOUT_CLASSIFICATION	0.0026303054122504554	DESIGN
no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9998397164600384	WITHOUT_CLASSIFICATION	1.6028353996163226E-4	DESIGN
write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.999701164395101	WITHOUT_CLASSIFICATION	2.988356048989639E-4	DESIGN
single method, use normal logic	WITHOUT_CLASSIFICATION	0.9998821878946984	WITHOUT_CLASSIFICATION	1.1781210530171435E-4	DESIGN
multimethod, new logic	WITHOUT_CLASSIFICATION	0.998101021090151	WITHOUT_CLASSIFICATION	0.0018989789098490528	DESIGN
declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9948653403223652	WITHOUT_CLASSIFICATION	0.00513465967763471	DESIGN
inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9952160172201966	WITHOUT_CLASSIFICATION	0.00478398277980346	DESIGN
RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9997869639614881	WITHOUT_CLASSIFICATION	2.1303603851184524E-4	DESIGN
}	WITHOUT_CLASSIFICATION	0.9986208339458441	WITHOUT_CLASSIFICATION	0.0013791660541558042	DESIGN
fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9980237683565564	WITHOUT_CLASSIFICATION	0.001976231643443657	DESIGN
refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9997041229445636	WITHOUT_CLASSIFICATION	2.958770554364643E-4	DESIGN
If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9996571502614513	WITHOUT_CLASSIFICATION	3.428497385486286E-4	DESIGN
attribute set.	WITHOUT_CLASSIFICATION	0.9995050364782626	WITHOUT_CLASSIFICATION	4.949635217372899E-4	DESIGN
element set	WITHOUT_CLASSIFICATION	0.9981219061485117	WITHOUT_CLASSIFICATION	0.0018780938514883158	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9960588835050367	WITHOUT_CLASSIFICATION	0.003941116494963279	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9960588835050367	WITHOUT_CLASSIFICATION	0.003941116494963279	DESIGN
colon3	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
Colon3	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.996024381633157	WITHOUT_CLASSIFICATION	0.003975618366843052	DESIGN
For b.foo	WITHOUT_CLASSIFICATION	0.999685026747	WITHOUT_CLASSIFICATION	3.1497325300004867E-4	DESIGN
instance config for the script run	WITHOUT_CLASSIFICATION	0.9965766067256517	WITHOUT_CLASSIFICATION	0.0034233932743483637	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9960588835050367	WITHOUT_CLASSIFICATION	0.003941116494963279	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9960588835050367	WITHOUT_CLASSIFICATION	0.003941116494963279	DESIGN
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9998600275759251	WITHOUT_CLASSIFICATION	1.3997242407488535E-4	DESIGN
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9998600275759251	WITHOUT_CLASSIFICATION	1.3997242407488535E-4	DESIGN
RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9994347408992654	WITHOUT_CLASSIFICATION	5.652591007344967E-4	DESIGN
For 'b.foo'	WITHOUT_CLASSIFICATION	0.999712807664823	WITHOUT_CLASSIFICATION	2.8719233517702673E-4	DESIGN
We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9944957452109419	WITHOUT_CLASSIFICATION	0.005504254789058181	DESIGN
something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.7915415716752403	WITHOUT_CLASSIFICATION	0.2084584283247596	DESIGN
Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9996513488835846	WITHOUT_CLASSIFICATION	3.486511164153424E-4	DESIGN
Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9996513488835846	WITHOUT_CLASSIFICATION	3.486511164153424E-4	DESIGN
do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9982684060490292	WITHOUT_CLASSIFICATION	0.001731593950970749	DESIGN
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9983442397211817	WITHOUT_CLASSIFICATION	0.0016557602788182797	DESIGN
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998957491614439	WITHOUT_CLASSIFICATION	1.0425083855605263E-4	DESIGN
never visited, should be fine	WITHOUT_CLASSIFICATION	0.9494320384529793	WITHOUT_CLASSIFICATION	0.05056796154702072	DESIGN
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9998600275759251	WITHOUT_CLASSIFICATION	1.3997242407488535E-4	DESIGN
The name of the variable	WITHOUT_CLASSIFICATION	0.9999034790574239	WITHOUT_CLASSIFICATION	9.652094257608427E-5	DESIGN
If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.997858832617371	WITHOUT_CLASSIFICATION	0.002141167382629071	DESIGN
Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9993967348265004	WITHOUT_CLASSIFICATION	6.032651734995251E-4	DESIGN
Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9952021502227882	WITHOUT_CLASSIFICATION	0.004797849777211815	DESIGN
no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.999696604109389	WITHOUT_CLASSIFICATION	3.0339589061098636E-4	DESIGN
optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9909571679378957	WITHOUT_CLASSIFICATION	0.009042832062104454	DESIGN
arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9991856162036415	WITHOUT_CLASSIFICATION	8.143837963584149E-4	DESIGN
no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9991496699420604	WITHOUT_CLASSIFICATION	8.503300579394864E-4	DESIGN
set argv from main's args	WITHOUT_CLASSIFICATION	0.9977351727667517	WITHOUT_CLASSIFICATION	0.0022648272332483127	DESIGN
attribute set.	WITHOUT_CLASSIFICATION	0.9995050364782626	WITHOUT_CLASSIFICATION	4.949635217372899E-4	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9960588835050367	WITHOUT_CLASSIFICATION	0.003941116494963279	DESIGN
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9998600275759251	WITHOUT_CLASSIFICATION	1.3997242407488535E-4	DESIGN
The name of the variable	WITHOUT_CLASSIFICATION	0.9999034790574239	WITHOUT_CLASSIFICATION	9.652094257608427E-5	DESIGN
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9836553887937808	WITHOUT_CLASSIFICATION	0.01634461120621917	DESIGN
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9836553887937808	WITHOUT_CLASSIFICATION	0.01634461120621917	DESIGN
block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.5056139665569762	WITHOUT_CLASSIFICATION	0.4943860334430239	DESIGN
assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9997895007720107	WITHOUT_CLASSIFICATION	2.1049922798934833E-4	DESIGN
in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9890710368052639	WITHOUT_CLASSIFICATION	0.01092896319473626	DESIGN
assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999772243436609	WITHOUT_CLASSIFICATION	2.27756563391546E-5	DESIGN
Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9909568443717847	WITHOUT_CLASSIFICATION	0.009043155628215387	DESIGN
Experimental class reification support, to create real Java classes for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9997841524711922	WITHOUT_CLASSIFICATION	2.1584752880774485E-4	DESIGN
This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9979921360336714	WITHOUT_CLASSIFICATION	0.002007863966328596	DESIGN
Make a nil node if no body. Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9899777521952516	WITHOUT_CLASSIFICATION	0.010022247804748322	DESIGN
'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9990173136749212	WITHOUT_CLASSIFICATION	9.826863250788026E-4	DESIGN
now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9137932979981547	WITHOUT_CLASSIFICATION	0.08620670200184524	DESIGN
never visited, should be ok	WITHOUT_CLASSIFICATION	0.9378625772629506	WITHOUT_CLASSIFICATION	0.062137422737049475	DESIGN
If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999669157102827	WITHOUT_CLASSIFICATION	3.3084289717203946E-5	DESIGN
JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999838522455049	WITHOUT_CLASSIFICATION	1.6147754495138665E-5	DESIGN
element set	WITHOUT_CLASSIFICATION	0.9981219061485117	WITHOUT_CLASSIFICATION	0.0018780938514883158	DESIGN
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9998600275759251	WITHOUT_CLASSIFICATION	1.3997242407488535E-4	DESIGN
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9983442397211817	WITHOUT_CLASSIFICATION	0.0016557602788182797	DESIGN
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998957491614439	WITHOUT_CLASSIFICATION	1.0425083855605263E-4	DESIGN
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998957491614439	WITHOUT_CLASSIFICATION	1.0425083855605263E-4	DESIGN
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9998600275759251	WITHOUT_CLASSIFICATION	1.3997242407488535E-4	DESIGN
The name of the variable	WITHOUT_CLASSIFICATION	0.9999034790574239	WITHOUT_CLASSIFICATION	9.652094257608427E-5	DESIGN
The name of the variable	WITHOUT_CLASSIFICATION	0.9999034790574239	WITHOUT_CLASSIFICATION	9.652094257608427E-5	DESIGN
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9836553887937808	WITHOUT_CLASSIFICATION	0.01634461120621917	DESIGN
Empirical Observations: null -> Some arity argsNode == this.argsNode then check for arity changes newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.999789545063915	WITHOUT_CLASSIFICATION	2.1045493608501538E-4	DESIGN
assert !(value instanceof RubyArray) : "Not an array";	WITHOUT_CLASSIFICATION	0.9390893544637343	WITHOUT_CLASSIFICATION	0.060910645536265566	DESIGN
Serialization killed our dynamic scope. We can just create an empty one since serialization cannot serialize an eval (which is the only thing which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999912773645205	WITHOUT_CLASSIFICATION	8.722635479438654E-6	DESIGN
Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9963887873839564	WITHOUT_CLASSIFICATION	0.003611212616043631	DESIGN
We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9569569644060028	WITHOUT_CLASSIFICATION	0.04304303559399718	DESIGN
assert thenBody != null : "thenBody is not null"; assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9837959764664563	WITHOUT_CLASSIFICATION	0.016204023533543676	DESIGN
add in reverse order	WITHOUT_CLASSIFICATION	0.9997275493592216	WITHOUT_CLASSIFICATION	2.7245064077843886E-4	DESIGN
in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9995272783891418	WITHOUT_CLASSIFICATION	4.727216108582351E-4	DESIGN
ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9993742615251565	WITHOUT_CLASSIFICATION	6.25738474843428E-4	DESIGN
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9983442397211817	WITHOUT_CLASSIFICATION	0.0016557602788182797	DESIGN
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998957491614439	WITHOUT_CLASSIFICATION	1.0425083855605263E-4	DESIGN
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998957491614439	WITHOUT_CLASSIFICATION	1.0425083855605263E-4	DESIGN
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9998600275759251	WITHOUT_CLASSIFICATION	1.3997242407488535E-4	DESIGN
Make a nil node if no body. Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9899777521952516	WITHOUT_CLASSIFICATION	0.010022247804748322	DESIGN
now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9137932979981547	WITHOUT_CLASSIFICATION	0.08620670200184524	DESIGN
No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9999895778670128	WITHOUT_CLASSIFICATION	1.0422132987191332E-5	DESIGN
save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999992714322931	WITHOUT_CLASSIFICATION	7.285677069433143E-7	DESIGN
For 'foo'	WITHOUT_CLASSIFICATION	0.9996853586882154	WITHOUT_CLASSIFICATION	3.1464131178464476E-4	DESIGN
For 'foo'	WITHOUT_CLASSIFICATION	0.9996853586882154	WITHOUT_CLASSIFICATION	3.1464131178464476E-4	DESIGN
admittedly inefficient	WITHOUT_CLASSIFICATION	0.9839367737803013	WITHOUT_CLASSIFICATION	0.016063226219698648	DESIGN
JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9998424794574269	WITHOUT_CLASSIFICATION	1.5752054257313616E-4	DESIGN
What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9928750958955844	WITHOUT_CLASSIFICATION	0.00712490410441555	DESIGN
let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9983729761174261	WITHOUT_CLASSIFICATION	0.0016270238825738727	DESIGN
just rethrow	WITHOUT_CLASSIFICATION	0.9990561725176721	WITHOUT_CLASSIFICATION	9.438274823279166E-4	DESIGN
just rethrow	WITHOUT_CLASSIFICATION	0.9990561725176721	WITHOUT_CLASSIFICATION	9.438274823279166E-4	DESIGN
clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9998345874069307	WITHOUT_CLASSIFICATION	1.654125930692406E-4	DESIGN
clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9998345874069307	WITHOUT_CLASSIFICATION	1.654125930692406E-4	DESIGN
no takers; bubble up	WITHOUT_CLASSIFICATION	0.9995082169527254	WITHOUT_CLASSIFICATION	4.917830472746006E-4	DESIGN
no takers; bubble up	WITHOUT_CLASSIFICATION	0.9995082169527254	WITHOUT_CLASSIFICATION	4.917830472746006E-4	DESIGN
Execute rescue block	WITHOUT_CLASSIFICATION	0.9994701544421758	WITHOUT_CLASSIFICATION	5.298455578242242E-4	DESIGN
If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9998464167207597	WITHOUT_CLASSIFICATION	1.5358327924029145E-4	DESIGN
index of variable for this arg	WITHOUT_CLASSIFICATION	0.9968184784535497	WITHOUT_CLASSIFICATION	0.0031815215464504067	DESIGN
only a marker interface	WITHOUT_CLASSIFICATION	0.9985302308142477	WITHOUT_CLASSIFICATION	0.001469769185752207	DESIGN
don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9994763356181517	WITHOUT_CLASSIFICATION	5.236643818483273E-4	DESIGN
pragmas	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9981509182797693	WITHOUT_CLASSIFICATION	0.001849081720230629	DESIGN
We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9946613396603102	WITHOUT_CLASSIFICATION	0.005338660339689704	DESIGN
The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9994387161132574	WITHOUT_CLASSIFICATION	5.612838867426297E-4	DESIGN
The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9815100836722483	WITHOUT_CLASSIFICATION	0.018489916327751668	DESIGN
Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9981140009035905	WITHOUT_CLASSIFICATION	0.0018859990964095288	DESIGN
check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.8567186812787992	WITHOUT_CLASSIFICATION	0.14328131872120078	DESIGN
long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9951620493009569	WITHOUT_CLASSIFICATION	0.004837950699043105	DESIGN
ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9997086686992641	WITHOUT_CLASSIFICATION	2.9133130073593223E-4	DESIGN
ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9997086686992641	WITHOUT_CLASSIFICATION	2.9133130073593223E-4	DESIGN
long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.998137979005798	WITHOUT_CLASSIFICATION	0.0018620209942019584	DESIGN
we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.99723133717045	WITHOUT_CLASSIFICATION	0.0027686628295500275	DESIGN
Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9841385009165105	WITHOUT_CLASSIFICATION	0.01586149908348947	DESIGN
encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9952988237569121	WITHOUT_CLASSIFICATION	0.004701176243087922	DESIGN
only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.970821203221505	WITHOUT_CLASSIFICATION	0.02917879677849507	DESIGN
otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9991135765785337	WITHOUT_CLASSIFICATION	8.864234214663607E-4	DESIGN
use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9961999680952562	WITHOUT_CLASSIFICATION	0.0038000319047438638	DESIGN
unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999779454536182	WITHOUT_CLASSIFICATION	2.2054546381849493E-5	DESIGN
compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999281804447087	WITHOUT_CLASSIFICATION	7.181955529129339E-5	DESIGN
last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999862292984342	WITHOUT_CLASSIFICATION	1.3770701565789472E-5	DESIGN
compile first node only	WITHOUT_CLASSIFICATION	0.99968076035545	WITHOUT_CLASSIFICATION	3.1923964454997294E-4	DESIGN
splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9992259810709411	WITHOUT_CLASSIFICATION	7.740189290588465E-4	DESIGN
if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.996799991690858	WITHOUT_CLASSIFICATION	0.003200008309142116	DESIGN
NOTE: Currently this optimization is limited to the following situations: All expressions must be int-ranged literal fixnums It also still emits the code for the "safe" when logic, which is rather wasteful (since it essentially doubles each code body). As such it is normally disabled, but it serves as an example of how this optimization could be done. Ideally, it should be combined with the when processing to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.8461089702296419	DESIGN	0.15389102977035807	WITHOUT_CLASSIFICATION
aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9931784965400539	WITHOUT_CLASSIFICATION	0.00682150345994619	DESIGN
one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9994991538011145	WITHOUT_CLASSIFICATION	5.00846198885521E-4	DESIGN
can't do it	WITHOUT_CLASSIFICATION	0.9994267672645446	WITHOUT_CLASSIFICATION	5.732327354553989E-4	DESIGN
otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.999624803947753	WITHOUT_CLASSIFICATION	3.751960522470108E-4	DESIGN
colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9995077708234743	WITHOUT_CLASSIFICATION	4.92229176525662E-4	DESIGN
colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9995077708234743	WITHOUT_CLASSIFICATION	4.92229176525662E-4	DESIGN
these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9986546388426336	WITHOUT_CLASSIFICATION	0.001345361157366392	DESIGN
[IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass] [IRubyObject]	WITHOUT_CLASSIFICATION	0.9991856162036415	WITHOUT_CLASSIFICATION	8.143837963584149E-4	DESIGN
[]	WITHOUT_CLASSIFICATION	0.9986460082619755	WITHOUT_CLASSIFICATION	0.001353991738024494	DESIGN
[]	WITHOUT_CLASSIFICATION	0.9986460082619755	WITHOUT_CLASSIFICATION	0.001353991738024494	DESIGN
context.swapValues(); context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9991856162036415	WITHOUT_CLASSIFICATION	8.143837963584149E-4	DESIGN
[RubyClass] [RubyClass, RubyClass] [RubyClass] [] [self] [RubyClass] [RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9987184972574468	WITHOUT_CLASSIFICATION	0.0012815027425531766	DESIGN
[RubyClass]	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
[RubyClass] [RubyClass, RubyClass] [RubyClass] []	WITHOUT_CLASSIFICATION	0.9987184972574468	WITHOUT_CLASSIFICATION	0.0012815027425531766	DESIGN
if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9984718715226826	WITHOUT_CLASSIFICATION	0.0015281284773173858	DESIGN
inspect body and args	WITHOUT_CLASSIFICATION	0.9997097357448398	WITHOUT_CLASSIFICATION	2.9026425516016176E-4	DESIGN
inspect body and args	WITHOUT_CLASSIFICATION	0.9997097357448398	WITHOUT_CLASSIFICATION	2.9026425516016176E-4	DESIGN
check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9996318266580672	WITHOUT_CLASSIFICATION	3.681733419328653E-4	DESIGN
if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9991876354879231	WITHOUT_CLASSIFICATION	8.123645120768906E-4	DESIGN
invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9988383678505919	WITHOUT_CLASSIFICATION	0.0011616321494081388	DESIGN
[IRubyObject] [IRubyObject, IRubyObject] [IRubyObject, RubyClass] [IRubyObject, RubyClass, RubyClass] [IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9991856162036415	WITHOUT_CLASSIFICATION	8.143837963584149E-4	DESIGN
[IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass] [IRubyObject]	WITHOUT_CLASSIFICATION	0.9991856162036415	WITHOUT_CLASSIFICATION	8.143837963584149E-4	DESIGN
[RubyClass] []	WITHOUT_CLASSIFICATION	0.9987653183388583	WITHOUT_CLASSIFICATION	0.0012346816611417514	DESIGN
[String] [String, String] [String] [String, RubyClass] [String, RubyClass, RubyClass] [String, RubyClass]	WITHOUT_CLASSIFICATION	0.9991856162036415	WITHOUT_CLASSIFICATION	8.143837963584149E-4	DESIGN
[String] [String, String] [String] [String, RubyClass] [String, RubyClass, RubyClass] [String, RubyClass]	WITHOUT_CLASSIFICATION	0.9991856162036415	WITHOUT_CLASSIFICATION	8.143837963584149E-4	DESIGN
no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9986431095178647	WITHOUT_CLASSIFICATION	0.0013568904821352943	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998702863427891	WITHOUT_CLASSIFICATION	1.2971365721093533E-4	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998702863427891	WITHOUT_CLASSIFICATION	1.2971365721093533E-4	DESIGN
not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9996078800581485	WITHOUT_CLASSIFICATION	3.9211994185152935E-4	DESIGN
not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9996078800581485	WITHOUT_CLASSIFICATION	3.9211994185152935E-4	DESIGN
not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9996078800581485	WITHOUT_CLASSIFICATION	3.9211994185152935E-4	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998702863427891	WITHOUT_CLASSIFICATION	1.2971365721093533E-4	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998702863427891	WITHOUT_CLASSIFICATION	1.2971365721093533E-4	DESIGN
no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9986431095178647	WITHOUT_CLASSIFICATION	0.0013568904821352943	DESIGN
force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9996379589717442	WITHOUT_CLASSIFICATION	3.6204102825579713E-4	DESIGN
always false or nil	WITHOUT_CLASSIFICATION	0.9998280876958028	WITHOUT_CLASSIFICATION	1.7191230419725474E-4	DESIGN
optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999311122080473	WITHOUT_CLASSIFICATION	6.888779195266189E-5	DESIGN
normal	WITHOUT_CLASSIFICATION	0.9998013689259904	WITHOUT_CLASSIFICATION	1.9863107400958633E-4	DESIGN
compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.999798605647524	WITHOUT_CLASSIFICATION	2.0139435247607326E-4	DESIGN
need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9989445868619301	WITHOUT_CLASSIFICATION	0.0010554131380699145	DESIGN
just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9996883481492526	WITHOUT_CLASSIFICATION	3.1165185074745266E-4	DESIGN
"assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9997806234496295	WITHOUT_CLASSIFICATION	2.193765503705037E-4	DESIGN
compile first node only	WITHOUT_CLASSIFICATION	0.99968076035545	WITHOUT_CLASSIFICATION	3.1923964454997294E-4	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998702863427891	WITHOUT_CLASSIFICATION	1.2971365721093533E-4	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998702863427891	WITHOUT_CLASSIFICATION	1.2971365721093533E-4	DESIGN
eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9998738513359706	WITHOUT_CLASSIFICATION	1.261486640294183E-4	DESIGN
try optz version	WITHOUT_CLASSIFICATION	0.9999063520626247	WITHOUT_CLASSIFICATION	9.364793737541735E-5	DESIGN
sizes must match	WITHOUT_CLASSIFICATION	0.999820596747176	WITHOUT_CLASSIFICATION	1.7940325282395021E-4	DESIGN
expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.999978504685164	WITHOUT_CLASSIFICATION	2.1495314836002294E-5	DESIGN
normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9997699433868212	WITHOUT_CLASSIFICATION	2.3005661317885157E-4	DESIGN
head must not be null and there must be no "args" (like arg)	WITHOUT_CLASSIFICATION	0.9989064620326522	WITHOUT_CLASSIFICATION	0.001093537967347813	DESIGN
"head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9997072545093378	WITHOUT_CLASSIFICATION	2.9274549066219617E-4	DESIGN
only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999715374859313	WITHOUT_CLASSIFICATION	2.8462514068688913E-5	DESIGN
perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999484744412037	WITHOUT_CLASSIFICATION	5.152555879634341E-5	DESIGN
if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9993438360469952	WITHOUT_CLASSIFICATION	6.561639530049476E-4	DESIGN
RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9997869639614881	WITHOUT_CLASSIFICATION	2.1303603851184524E-4	DESIGN
done processing args	WITHOUT_CLASSIFICATION	0.998833034188364	WITHOUT_CLASSIFICATION	0.0011669658116359736	DESIGN
all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999020839842769	WITHOUT_CLASSIFICATION	9.791601572310422E-5	DESIGN
assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9990656871380162	WITHOUT_CLASSIFICATION	9.343128619837579E-4	DESIGN
if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9998466986175635	WITHOUT_CLASSIFICATION	1.533013824365472E-4	DESIGN
[recv]	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
[recv]	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
[recv]	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
compile into array	WITHOUT_CLASSIFICATION	0.9936471621176485	WITHOUT_CLASSIFICATION	0.0063528378823515	DESIGN
compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999364801848354	WITHOUT_CLASSIFICATION	6.351981516456581E-5	DESIGN
check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999911076607596	WITHOUT_CLASSIFICATION	8.892339240259782E-6	DESIGN
condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9911019601836982	WITHOUT_CLASSIFICATION	0.008898039816301792	DESIGN
force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9993137725515364	WITHOUT_CLASSIFICATION	6.862274484635152E-4	DESIGN
create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9988847604213602	WITHOUT_CLASSIFICATION	0.0011152395786398314	DESIGN
it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9988909739052388	WITHOUT_CLASSIFICATION	0.001109026094761171	DESIGN
send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9994955147575325	WITHOUT_CLASSIFICATION	5.044852424674583E-4	DESIGN
single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9991154366662514	WITHOUT_CLASSIFICATION	8.845633337485389E-4	DESIGN
leave as a normal array	WITHOUT_CLASSIFICATION	0.9999203668042981	WITHOUT_CLASSIFICATION	7.963319570187323E-5	DESIGN
This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9717012966429565	WITHOUT_CLASSIFICATION	0.028298703357043507	DESIGN
The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.85923118217119	WITHOUT_CLASSIFICATION	0.14076881782881012	DESIGN
check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9996318266580672	WITHOUT_CLASSIFICATION	3.681733419328653E-4	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998702863427891	WITHOUT_CLASSIFICATION	1.2971365721093533E-4	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998702863427891	WITHOUT_CLASSIFICATION	1.2971365721093533E-4	DESIGN
no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9986431095178647	WITHOUT_CLASSIFICATION	0.0013568904821352943	DESIGN
need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9989445868619301	WITHOUT_CLASSIFICATION	0.0010554131380699145	DESIGN
try optz version	WITHOUT_CLASSIFICATION	0.9999063520626247	WITHOUT_CLASSIFICATION	9.364793737541735E-5	DESIGN
expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.999978504685164	WITHOUT_CLASSIFICATION	2.1495314836002294E-5	DESIGN
head must not be null and there must be no "args" (like arg)	WITHOUT_CLASSIFICATION	0.9989064620326522	WITHOUT_CLASSIFICATION	0.001093537967347813	DESIGN
sizes must match	WITHOUT_CLASSIFICATION	0.999820596747176	WITHOUT_CLASSIFICATION	1.7940325282395021E-4	DESIGN
"head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9997072545093378	WITHOUT_CLASSIFICATION	2.9274549066219617E-4	DESIGN
if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9993438360469952	WITHOUT_CLASSIFICATION	6.561639530049476E-4	DESIGN
perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999484744412037	WITHOUT_CLASSIFICATION	5.152555879634341E-5	DESIGN
done processing args	WITHOUT_CLASSIFICATION	0.998833034188364	WITHOUT_CLASSIFICATION	0.0011669658116359736	DESIGN
Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9994382944641915	WITHOUT_CLASSIFICATION	5.617055358085216E-4	DESIGN
class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.6173492332763177	DESIGN	0.3826507667236823	WITHOUT_CLASSIFICATION
successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9994335402650344	WITHOUT_CLASSIFICATION	5.664597349656228E-4	DESIGN
finally, grab the script	WITHOUT_CLASSIFICATION	0.9990297592310955	WITHOUT_CLASSIFICATION	9.702407689043504E-4	DESIGN
logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9972190962853424	WITHOUT_CLASSIFICATION	0.0027809037146576364	DESIGN
Time the compilation	WITHOUT_CLASSIFICATION	0.9981758070609734	WITHOUT_CLASSIFICATION	0.0018241929390265402	DESIGN
we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9977335468328533	WITHOUT_CLASSIFICATION	0.0022664531671466696	DESIGN
If we don't have a body, check for required or opt args if opt args, they could have side effects if required args, need to raise errors if too few args passed otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9996687818316935	WITHOUT_CLASSIFICATION	3.312181683064191E-4	DESIGN
if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9990815620240094	WITHOUT_CLASSIFICATION	9.184379759904327E-4	DESIGN
only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999094912240538	WITHOUT_CLASSIFICATION	9.050877594625424E-5	DESIGN
normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9998737187096548	WITHOUT_CLASSIFICATION	1.2628129034528474E-4	DESIGN
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9865530354704038	WITHOUT_CLASSIFICATION	0.01344696452959613	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9980455494016266	WITHOUT_CLASSIFICATION	0.001954450598373454	DESIGN
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9972029178681368	WITHOUT_CLASSIFICATION	0.0027970821318633174	DESIGN
return last value from execution	WITHOUT_CLASSIFICATION	0.9998606642860841	WITHOUT_CLASSIFICATION	1.3933571391588846E-4	DESIGN
end of variable scope	WITHOUT_CLASSIFICATION	0.9998773780599584	WITHOUT_CLASSIFICATION	1.226219400416487E-4	DESIGN
method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9995521207541238	WITHOUT_CLASSIFICATION	4.4787924587618447E-4	DESIGN
Define the annotation for the method	WITHOUT_CLASSIFICATION	0.999224640072626	WITHOUT_CLASSIFICATION	7.753599273740403E-4	DESIGN
check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.999943421036678	WITHOUT_CLASSIFICATION	5.6578963322023495E-5	DESIGN
load block from [] version of method	WITHOUT_CLASSIFICATION	0.999091399283245	WITHOUT_CLASSIFICATION	9.086007167551384E-4	DESIGN
normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.999917786044925	WITHOUT_CLASSIFICATION	8.221395507498117E-5	DESIGN
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9896551940305556	WITHOUT_CLASSIFICATION	0.01034480596944448	DESIGN
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9896551940305556	WITHOUT_CLASSIFICATION	0.01034480596944448	DESIGN
value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9982133120226919	WITHOUT_CLASSIFICATION	0.0017866879773079751	DESIGN
receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9978489540547032	WITHOUT_CLASSIFICATION	0.0021510459452967535	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9993195187418791	WITHOUT_CLASSIFICATION	6.804812581208811E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9993195187418791	WITHOUT_CLASSIFICATION	6.804812581208811E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9993195187418791	WITHOUT_CLASSIFICATION	6.804812581208811E-4	DESIGN
self	WITHOUT_CLASSIFICATION	0.9989418921570226	WITHOUT_CLASSIFICATION	0.00105810784297743	DESIGN
self	WITHOUT_CLASSIFICATION	0.9989418921570226	WITHOUT_CLASSIFICATION	0.00105810784297743	DESIGN
self	WITHOUT_CLASSIFICATION	0.9989418921570226	WITHOUT_CLASSIFICATION	0.00105810784297743	DESIGN
self	WITHOUT_CLASSIFICATION	0.9989418921570226	WITHOUT_CLASSIFICATION	0.00105810784297743	DESIGN
arg0	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
arg0	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
arg0	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
arg1	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
arg1	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
arg2	WITHOUT_CLASSIFICATION	0.9991487078155921	WITHOUT_CLASSIFICATION	8.512921844079654E-4	DESIGN
args	WITHOUT_CLASSIFICATION	0.9992745042515665	WITHOUT_CLASSIFICATION	7.254957484334893E-4	DESIGN
receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9978489540547032	WITHOUT_CLASSIFICATION	0.0021510459452967535	DESIGN
select appropriate call site dup receiver load self	WITHOUT_CLASSIFICATION	0.9946875584050661	WITHOUT_CLASSIFICATION	0.005312441594933946	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9993195187418791	WITHOUT_CLASSIFICATION	6.804812581208811E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9993195187418791	WITHOUT_CLASSIFICATION	6.804812581208811E-4	DESIGN
self	WITHOUT_CLASSIFICATION	0.9989418921570226	WITHOUT_CLASSIFICATION	0.00105810784297743	DESIGN
self	WITHOUT_CLASSIFICATION	0.9989418921570226	WITHOUT_CLASSIFICATION	0.00105810784297743	DESIGN
self	WITHOUT_CLASSIFICATION	0.9989418921570226	WITHOUT_CLASSIFICATION	0.00105810784297743	DESIGN
arg0	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
arg0	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
arg1	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
args	WITHOUT_CLASSIFICATION	0.9992745042515665	WITHOUT_CLASSIFICATION	7.254957484334893E-4	DESIGN
get call site and thread context	WITHOUT_CLASSIFICATION	0.9998209334751365	WITHOUT_CLASSIFICATION	1.7906652486366368E-4	DESIGN
get call site and thread context	WITHOUT_CLASSIFICATION	0.9998209334751365	WITHOUT_CLASSIFICATION	1.7906652486366368E-4	DESIGN
evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9994367543440683	WITHOUT_CLASSIFICATION	5.632456559316234E-4	DESIGN
evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9994367543440683	WITHOUT_CLASSIFICATION	5.632456559316234E-4	DESIGN
invoke	WITHOUT_CLASSIFICATION	0.9996233533241379	WITHOUT_CLASSIFICATION	3.7664667586217337E-4	DESIGN
invoke	WITHOUT_CLASSIFICATION	0.9996233533241379	WITHOUT_CLASSIFICATION	3.7664667586217337E-4	DESIGN
check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999145027100121	WITHOUT_CLASSIFICATION	8.549728998785847E-5	DESIGN
not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9983269500851278	WITHOUT_CLASSIFICATION	0.0016730499148721817	DESIGN
not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9983269500851278	WITHOUT_CLASSIFICATION	0.0016730499148721817	DESIGN
thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999658194226565	WITHOUT_CLASSIFICATION	3.418057734355353E-5	DESIGN
thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999658194226565	WITHOUT_CLASSIFICATION	3.418057734355353E-5	DESIGN
eval value for assignment	WITHOUT_CLASSIFICATION	0.9998431262101428	WITHOUT_CLASSIFICATION	1.5687378985713743E-4	DESIGN
call site	WITHOUT_CLASSIFICATION	0.9987701098331189	WITHOUT_CLASSIFICATION	0.0012298901668810992	DESIGN
call site	WITHOUT_CLASSIFICATION	0.9987701098331189	WITHOUT_CLASSIFICATION	0.0012298901668810992	DESIGN
depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999299435794958	WITHOUT_CLASSIFICATION	7.005642050423174E-5	DESIGN
check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9993388536485718	WITHOUT_CLASSIFICATION	6.611463514282129E-4	DESIGN
eval value and save it	WITHOUT_CLASSIFICATION	0.999227614785281	WITHOUT_CLASSIFICATION	7.723852147189794E-4	DESIGN
self	WITHOUT_CLASSIFICATION	0.9989418921570226	WITHOUT_CLASSIFICATION	0.00105810784297743	DESIGN
self	WITHOUT_CLASSIFICATION	0.9989418921570226	WITHOUT_CLASSIFICATION	0.00105810784297743	DESIGN
depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999299435794958	WITHOUT_CLASSIFICATION	7.005642050423174E-5	DESIGN
receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9994236225260947	WITHOUT_CLASSIFICATION	5.763774739052661E-4	DESIGN
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
super uses current block if none given	WITHOUT_CLASSIFICATION	0.9996428632347474	WITHOUT_CLASSIFICATION	3.5713676525261993E-4	DESIGN
args	WITHOUT_CLASSIFICATION	0.9992745042515665	WITHOUT_CLASSIFICATION	7.254957484334893E-4	DESIGN
block	WITHOUT_CLASSIFICATION	0.9993427209472601	WITHOUT_CLASSIFICATION	6.572790527398869E-4	DESIGN
block	WITHOUT_CLASSIFICATION	0.9993427209472601	WITHOUT_CLASSIFICATION	6.572790527398869E-4	DESIGN
no args, no block	WITHOUT_CLASSIFICATION	0.9996253147760531	WITHOUT_CLASSIFICATION	3.7468522394695433E-4	DESIGN
no args, with block	WITHOUT_CLASSIFICATION	0.99935210062395	WITHOUT_CLASSIFICATION	6.478993760501657E-4	DESIGN
with args, no block	WITHOUT_CLASSIFICATION	0.99935210062395	WITHOUT_CLASSIFICATION	6.478993760501657E-4	DESIGN
with args, with block	WITHOUT_CLASSIFICATION	0.9984647342302172	WITHOUT_CLASSIFICATION	0.001535265769782687	DESIGN
adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9991856162036415	WITHOUT_CLASSIFICATION	8.143837963584149E-4	DESIGN
pop extra attr value	WITHOUT_CLASSIFICATION	0.9965497142975422	WITHOUT_CLASSIFICATION	0.0034502857024576623	DESIGN
pop extra attr value	WITHOUT_CLASSIFICATION	0.9965497142975422	WITHOUT_CLASSIFICATION	0.0034502857024576623	DESIGN
arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9998942069366483	WITHOUT_CLASSIFICATION	1.0579306335158671E-4	DESIGN
arg	WITHOUT_CLASSIFICATION	0.9994576228181379	WITHOUT_CLASSIFICATION	5.423771818620706E-4	DESIGN
arg	WITHOUT_CLASSIFICATION	0.9994576228181379	WITHOUT_CLASSIFICATION	5.423771818620706E-4	DESIGN
self	WITHOUT_CLASSIFICATION	0.9989418921570226	WITHOUT_CLASSIFICATION	0.00105810784297743	DESIGN
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
args	WITHOUT_CLASSIFICATION	0.9992745042515665	WITHOUT_CLASSIFICATION	7.254957484334893E-4	DESIGN
block	WITHOUT_CLASSIFICATION	0.9993427209472601	WITHOUT_CLASSIFICATION	6.572790527398869E-4	DESIGN
no args, no block	WITHOUT_CLASSIFICATION	0.9996253147760531	WITHOUT_CLASSIFICATION	3.7468522394695433E-4	DESIGN
no args, with block	WITHOUT_CLASSIFICATION	0.99935210062395	WITHOUT_CLASSIFICATION	6.478993760501657E-4	DESIGN
with args, no block	WITHOUT_CLASSIFICATION	0.99935210062395	WITHOUT_CLASSIFICATION	6.478993760501657E-4	DESIGN
with args, with block	WITHOUT_CLASSIFICATION	0.9984647342302172	WITHOUT_CLASSIFICATION	0.001535265769782687	DESIGN
arg	WITHOUT_CLASSIFICATION	0.9994576228181379	WITHOUT_CLASSIFICATION	5.423771818620706E-4	DESIGN
retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9998851525075351	WITHOUT_CLASSIFICATION	1.1484749246496972E-4	DESIGN
use numbered access method	WITHOUT_CLASSIFICATION	0.9913229170923072	WITHOUT_CLASSIFICATION	0.008677082907692755	DESIGN
retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9996227053402313	WITHOUT_CLASSIFICATION	3.772946597685585E-4	DESIGN
add name to call site list	WITHOUT_CLASSIFICATION	0.9991160483021243	WITHOUT_CLASSIFICATION	8.83951697875799E-4	DESIGN
module is on top of stack	WITHOUT_CLASSIFICATION	0.9974736377583078	WITHOUT_CLASSIFICATION	0.0025263622416923483	DESIGN
build scope names string	WITHOUT_CLASSIFICATION	0.999748204013631	WITHOUT_CLASSIFICATION	2.517959863691146E-4	DESIGN
build descriptor string	WITHOUT_CLASSIFICATION	0.9993640148215996	WITHOUT_CLASSIFICATION	6.359851784002898E-4	DESIGN
build descriptor string	WITHOUT_CLASSIFICATION	0.9993640148215996	WITHOUT_CLASSIFICATION	6.359851784002898E-4	DESIGN
generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9989212102956543	WITHOUT_CLASSIFICATION	0.0010787897043456366	DESIGN
generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9992462958389835	WITHOUT_CLASSIFICATION	7.537041610164474E-4	DESIGN
generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9992458500612937	WITHOUT_CLASSIFICATION	7.541499387063178E-4	DESIGN
generate constants initialization code	WITHOUT_CLASSIFICATION	0.9997402019774804	WITHOUT_CLASSIFICATION	2.597980225196135E-4	DESIGN
generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9986743984944927	WITHOUT_CLASSIFICATION	0.001325601505507227	DESIGN
generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9986743984944927	WITHOUT_CLASSIFICATION	0.001325601505507227	DESIGN
generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9994396652128759	WITHOUT_CLASSIFICATION	5.603347871241827E-4	DESIGN
generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9994396652128759	WITHOUT_CLASSIFICATION	5.603347871241827E-4	DESIGN
generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9994318184197465	WITHOUT_CLASSIFICATION	5.681815802535924E-4	DESIGN
generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9994318184197465	WITHOUT_CLASSIFICATION	5.681815802535924E-4	DESIGN
generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9992458500612937	WITHOUT_CLASSIFICATION	7.541499387063178E-4	DESIGN
generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9982149547487232	WITHOUT_CLASSIFICATION	0.0017850452512767386	DESIGN
adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9991856162036415	WITHOUT_CLASSIFICATION	8.143837963584149E-4	DESIGN
use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9968646823907766	WITHOUT_CLASSIFICATION	0.0031353176092234125	DESIGN
do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.999882036805252	WITHOUT_CLASSIFICATION	1.179631947479454E-4	DESIGN
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9989160815913631	WITHOUT_CLASSIFICATION	0.0010839184086368833	DESIGN
No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999875331600186	WITHOUT_CLASSIFICATION	1.2466839981363124E-5	DESIGN
load Object under value	WITHOUT_CLASSIFICATION	0.9993727508068682	WITHOUT_CLASSIFICATION	6.272491931318543E-4	DESIGN
put under object array already present	WITHOUT_CLASSIFICATION	0.9999141122879741	WITHOUT_CLASSIFICATION	8.588771202584552E-5	DESIGN
if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.999416415947625	WITHOUT_CLASSIFICATION	5.835840523751051E-4	DESIGN
This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9997160882557203	WITHOUT_CLASSIFICATION	2.83911744279643E-4	DESIGN
if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9998129409629232	WITHOUT_CLASSIFICATION	1.8705903707684702E-4	DESIGN
if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9998129409629232	WITHOUT_CLASSIFICATION	1.8705903707684702E-4	DESIGN
brute force construction inline	WITHOUT_CLASSIFICATION	0.9997249089650798	WITHOUT_CLASSIFICATION	2.750910349201229E-4	DESIGN
brute force construction inline	WITHOUT_CLASSIFICATION	0.9997249089650798	WITHOUT_CLASSIFICATION	2.750910349201229E-4	DESIGN
use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9979175974418995	WITHOUT_CLASSIFICATION	0.002082402558100612	DESIGN
call isTrue on the result	WITHOUT_CLASSIFICATION	0.9993973915078226	WITHOUT_CLASSIFICATION	6.026084921773058E-4	DESIGN
call isTrue on the result	WITHOUT_CLASSIFICATION	0.9993973915078226	WITHOUT_CLASSIFICATION	6.026084921773058E-4	DESIGN
call isTrue on the result	WITHOUT_CLASSIFICATION	0.9993973915078226	WITHOUT_CLASSIFICATION	6.026084921773058E-4	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998532292771718	WITHOUT_CLASSIFICATION	1.4677072282822905E-4	DESIGN
dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999830010663935	WITHOUT_CLASSIFICATION	1.6998933606508026E-5	DESIGN
dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999830010663935	WITHOUT_CLASSIFICATION	1.6998933606508026E-5	DESIGN
clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999964911165398	WITHOUT_CLASSIFICATION	3.5088834601863453E-6	DESIGN
check the condition	WITHOUT_CLASSIFICATION	0.9998876887263389	WITHOUT_CLASSIFICATION	1.1231127366111681E-4	DESIGN
NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9990332390022918	WITHOUT_CLASSIFICATION	9.667609977082731E-4	DESIGN
skip catch block	WITHOUT_CLASSIFICATION	0.9997675614122863	WITHOUT_CLASSIFICATION	2.3243858771384402E-4	DESIGN
catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9981684934465761	WITHOUT_CLASSIFICATION	0.0018315065534239767	DESIGN
next jump	WITHOUT_CLASSIFICATION	0.9977341381904644	WITHOUT_CLASSIFICATION	0.0022658618095355203	DESIGN
exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9985658719863839	WITHOUT_CLASSIFICATION	0.0014341280136160443	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9980455494016266	WITHOUT_CLASSIFICATION	0.001954450598373454	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9980455494016266	WITHOUT_CLASSIFICATION	0.001954450598373454	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998532292771718	WITHOUT_CLASSIFICATION	1.4677072282822905E-4	DESIGN
clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999964911165398	WITHOUT_CLASSIFICATION	3.5088834601863453E-6	DESIGN
EQ == 0 (i.e. false) pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.994394586075069	WITHOUT_CLASSIFICATION	0.005605413924931004	DESIGN
check the condition	WITHOUT_CLASSIFICATION	0.9998876887263389	WITHOUT_CLASSIFICATION	1.1231127366111681E-4	DESIGN
NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9990332390022918	WITHOUT_CLASSIFICATION	9.667609977082731E-4	DESIGN
synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999847711805439	WITHOUT_CLASSIFICATION	1.5228819456210805E-5	DESIGN
break jump	WITHOUT_CLASSIFICATION	0.9982578710130096	WITHOUT_CLASSIFICATION	0.0017421289869905478	DESIGN
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9987474806136538	WITHOUT_CLASSIFICATION	0.0012525193863461754	DESIGN
[reg]	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9929093540035696	WITHOUT_CLASSIFICATION	0.007090645996430392	DESIGN
inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9997230327539433	WITHOUT_CLASSIFICATION	2.769672460566612E-4	DESIGN
inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9981664203822161	WITHOUT_CLASSIFICATION	0.0018335796177838413	DESIGN
synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999847711805439	WITHOUT_CLASSIFICATION	1.5228819456210805E-5	DESIGN
store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999891017199174	WITHOUT_CLASSIFICATION	1.0898280082584505E-5	DESIGN
store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999891017199174	WITHOUT_CLASSIFICATION	1.0898280082584505E-5	DESIGN
if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.999136186394917	WITHOUT_CLASSIFICATION	8.638136050829758E-4	DESIGN
retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9974162703917693	WITHOUT_CLASSIFICATION	0.002583729608230669	DESIGN
any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9919223381702497	WITHOUT_CLASSIFICATION	0.008077661829750343	DESIGN
and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9968213703824091	WITHOUT_CLASSIFICATION	0.003178629617590859	DESIGN
restore the original exception	WITHOUT_CLASSIFICATION	0.9998168891004812	WITHOUT_CLASSIFICATION	1.831108995187742E-4	DESIGN
Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9990420916435161	WITHOUT_CLASSIFICATION	9.579083564839671E-4	DESIGN
rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9996950646351241	WITHOUT_CLASSIFICATION	3.049353648757825E-4	DESIGN
Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9957311548331705	WITHOUT_CLASSIFICATION	0.004268845166829417	DESIGN
inside a loop, break out of it go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9997167411097744	WITHOUT_CLASSIFICATION	2.8325889022566374E-4	DESIGN
false zero	WITHOUT_CLASSIFICATION	0.9999721741179353	WITHOUT_CLASSIFICATION	2.7825882064762738E-5	DESIGN
load all arguments straight through	WITHOUT_CLASSIFICATION	0.9983757216492033	WITHOUT_CLASSIFICATION	0.0016242783507967211	DESIGN
and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9968213703824091	WITHOUT_CLASSIFICATION	0.003178629617590859	DESIGN
restore the original exception	WITHOUT_CLASSIFICATION	0.9998168891004812	WITHOUT_CLASSIFICATION	1.831108995187742E-4	DESIGN
retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9979865601710316	WITHOUT_CLASSIFICATION	0.0020134398289683372	DESIGN
push false	WITHOUT_CLASSIFICATION	0.9999271405053285	WITHOUT_CLASSIFICATION	7.28594946715594E-5	DESIGN
method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9991856162036415	WITHOUT_CLASSIFICATION	8.143837963584149E-4	DESIGN
method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9988086530547068	WITHOUT_CLASSIFICATION	0.0011913469452933098	DESIGN
EQ == 0 (i.e. false) [C]	WITHOUT_CLASSIFICATION	0.9997770721828975	WITHOUT_CLASSIFICATION	2.229278171025464E-4	DESIGN
[C, C] [C, C, String] [C, null|C]	WITHOUT_CLASSIFICATION	0.9991856162036415	WITHOUT_CLASSIFICATION	8.143837963584149E-4	DESIGN
[C]	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
push true	WITHOUT_CLASSIFICATION	0.999780215883261	WITHOUT_CLASSIFICATION	2.1978411673904765E-4	DESIGN
EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999436765345082	WITHOUT_CLASSIFICATION	5.632346549171848E-5	DESIGN
[?, ?] [?, boolean]	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
[RubyModule] [RubyModule, String]	WITHOUT_CLASSIFICATION	0.9991856162036415	WITHOUT_CLASSIFICATION	8.143837963584149E-4	DESIGN
[boolean]	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
no receiver for singleton class	WITHOUT_CLASSIFICATION	0.999366126701603	WITHOUT_CLASSIFICATION	6.338732983970821E-4	DESIGN
but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999514914140211	WITHOUT_CLASSIFICATION	4.8508585978881E-5	DESIGN
we re-set self to the class, but store the old self in a temporary local variable this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9986618584050586	WITHOUT_CLASSIFICATION	0.001338141594941436	DESIGN
set self to the class	WITHOUT_CLASSIFICATION	0.9940700078411243	WITHOUT_CLASSIFICATION	0.00592999215887564	DESIGN
CLASS BODY	WITHOUT_CLASSIFICATION	0.9990826757890943	WITHOUT_CLASSIFICATION	9.17324210905727E-4	DESIGN
static scope	WITHOUT_CLASSIFICATION	0.9985163981225086	WITHOUT_CLASSIFICATION	0.001483601877491406	DESIGN
Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999786953494751	WITHOUT_CLASSIFICATION	2.1304650524878643E-5	DESIGN
new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9997908455900703	WITHOUT_CLASSIFICATION	2.0915440992970655E-4	DESIGN
CLASS BODY	WITHOUT_CLASSIFICATION	0.9990826757890943	WITHOUT_CLASSIFICATION	9.17324210905727E-4	DESIGN
static scope	WITHOUT_CLASSIFICATION	0.9985163981225086	WITHOUT_CLASSIFICATION	0.001483601877491406	DESIGN
Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999786953494751	WITHOUT_CLASSIFICATION	2.1304650524878643E-5	DESIGN
finally with exception	WITHOUT_CLASSIFICATION	0.9978026984949168	WITHOUT_CLASSIFICATION	0.002197301505083142	DESIGN
prepare to call class definition method	WITHOUT_CLASSIFICATION	0.992850367587752	WITHOUT_CLASSIFICATION	0.007149632412247936	DESIGN
otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9997263019958778	WITHOUT_CLASSIFICATION	2.736980041223017E-4	DESIGN
original exception is on stack	WITHOUT_CLASSIFICATION	0.9996174711779089	WITHOUT_CLASSIFICATION	3.8252882209108204E-4	DESIGN
RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9982188078706752	WITHOUT_CLASSIFICATION	0.001781192129324842	DESIGN
updating position for same line; skip	WITHOUT_CLASSIFICATION	0.999753053297938	WITHOUT_CLASSIFICATION	2.469467020620789E-4	DESIGN
callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.999853813906755	WITHOUT_CLASSIFICATION	1.4618609324495898E-4	DESIGN
prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9952926205700995	WITHOUT_CLASSIFICATION	0.004707379429900569	DESIGN
script object	WITHOUT_CLASSIFICATION	0.9984679238390102	WITHOUT_CLASSIFICATION	0.0015320761609898892	DESIGN
arities	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9549866469700187	WITHOUT_CLASSIFICATION	0.04501335302998139	DESIGN
we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9987274214358685	WITHOUT_CLASSIFICATION	0.0012725785641316014	DESIGN
we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9943435778702759	WITHOUT_CLASSIFICATION	0.005656422129724102	DESIGN
checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999859173614644	WITHOUT_CLASSIFICATION	1.4082638535756037E-5	DESIGN
expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9997895794215504	WITHOUT_CLASSIFICATION	2.1042057844943316E-4	DESIGN
normal case, create a new label	WITHOUT_CLASSIFICATION	0.9998708329068441	WITHOUT_CLASSIFICATION	1.2916709315592665E-4	DESIGN
last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9927200283201513	WITHOUT_CLASSIFICATION	0.007279971679848675	DESIGN
do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9985825048397359	WITHOUT_CLASSIFICATION	0.001417495160264073	DESIGN
just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.999892533207933	WITHOUT_CLASSIFICATION	1.0746679206696733E-4	DESIGN
just confirm args length == required	WITHOUT_CLASSIFICATION	0.9992290039314798	WITHOUT_CLASSIFICATION	7.709960685200787E-4	DESIGN
extract item from array	WITHOUT_CLASSIFICATION	0.9999941231566898	WITHOUT_CLASSIFICATION	5.876843310175267E-6	DESIGN
index for the item	WITHOUT_CLASSIFICATION	0.9999861913183388	WITHOUT_CLASSIFICATION	1.380868166112672E-5	DESIGN
index for the item	WITHOUT_CLASSIFICATION	0.9999861913183388	WITHOUT_CLASSIFICATION	1.380868166112672E-5	DESIGN
prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9963088094940451	WITHOUT_CLASSIFICATION	0.0036911905059547542	DESIGN
prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9963088094940451	WITHOUT_CLASSIFICATION	0.0036911905059547542	DESIGN
next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.999458059897092	WITHOUT_CLASSIFICATION	5.419401029079982E-4	DESIGN
next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.999458059897092	WITHOUT_CLASSIFICATION	5.419401029079982E-4	DESIGN
now logic for each optional value	WITHOUT_CLASSIFICATION	0.999755107269822	WITHOUT_CLASSIFICATION	2.448927301779782E-4	DESIGN
otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9996689847566361	WITHOUT_CLASSIFICATION	3.3101524336382826E-4	DESIGN
pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9863978357788932	WITHOUT_CLASSIFICATION	0.01360216422110677	DESIGN
if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9998789547402774	WITHOUT_CLASSIFICATION	1.2104525972253546E-4	DESIGN
assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999966462145865	WITHOUT_CLASSIFICATION	3.3537854135012846E-6	DESIGN
block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999747300075832	WITHOUT_CLASSIFICATION	2.526999241690402E-5	DESIGN
first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9994453982219538	WITHOUT_CLASSIFICATION	5.546017780461752E-4	DESIGN
then optional args	WITHOUT_CLASSIFICATION	0.9995248498536107	WITHOUT_CLASSIFICATION	4.7515014638936176E-4	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9980455494016266	WITHOUT_CLASSIFICATION	0.001954450598373454	DESIGN
now logic for each optional value	WITHOUT_CLASSIFICATION	0.999755107269822	WITHOUT_CLASSIFICATION	2.448927301779782E-4	DESIGN
otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9996689847566361	WITHOUT_CLASSIFICATION	3.3101524336382826E-4	DESIGN
pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9863978357788932	WITHOUT_CLASSIFICATION	0.01360216422110677	DESIGN
assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999966462145865	WITHOUT_CLASSIFICATION	3.3537854135012846E-6	DESIGN
block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999747300075832	WITHOUT_CLASSIFICATION	2.526999241690402E-5	DESIGN
if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9995220957914843	WITHOUT_CLASSIFICATION	4.7790420851575465E-4	DESIGN
finally, post args	WITHOUT_CLASSIFICATION	0.9984453697192998	WITHOUT_CLASSIFICATION	0.0015546302807001842	DESIGN
not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9870783230372839	WITHOUT_CLASSIFICATION	0.012921676962716074	DESIGN
not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9870783230372839	WITHOUT_CLASSIFICATION	0.012921676962716074	DESIGN
unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9992951794329659	WITHOUT_CLASSIFICATION	7.04820567034038E-4	DESIGN
fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999505805534394	WITHOUT_CLASSIFICATION	4.941944656059174E-5	DESIGN
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9900353158674277	WITHOUT_CLASSIFICATION	0.009964684132572324	DESIGN
temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9990250817095029	WITHOUT_CLASSIFICATION	9.749182904970235E-4	DESIGN
temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9990250817095029	WITHOUT_CLASSIFICATION	9.749182904970235E-4	DESIGN
declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9998457656556267	WITHOUT_CLASSIFICATION	1.54234344373342E-4	DESIGN
class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9818197826398286	WITHOUT_CLASSIFICATION	0.01818021736017133	DESIGN
store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9995483915169671	WITHOUT_CLASSIFICATION	4.5160848303299673E-4	DESIGN
load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9994289232278938	WITHOUT_CLASSIFICATION	5.710767721061019E-4	DESIGN
return in a class body raises error	WITHOUT_CLASSIFICATION	0.9975024096775327	WITHOUT_CLASSIFICATION	0.0024975903224672457	DESIGN
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9972029178681368	WITHOUT_CLASSIFICATION	0.0027970821318633174	DESIGN
return last value from execution	WITHOUT_CLASSIFICATION	0.9998606642860841	WITHOUT_CLASSIFICATION	1.3933571391588846E-4	DESIGN
end of variable scope	WITHOUT_CLASSIFICATION	0.9998773780599584	WITHOUT_CLASSIFICATION	1.226219400416487E-4	DESIGN
method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9995521207541238	WITHOUT_CLASSIFICATION	4.4787924587618447E-4	DESIGN
load block from [] version of method	WITHOUT_CLASSIFICATION	0.999091399283245	WITHOUT_CLASSIFICATION	9.086007167551384E-4	DESIGN
normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.999917786044925	WITHOUT_CLASSIFICATION	8.221395507498117E-5	DESIGN
declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9998457656556267	WITHOUT_CLASSIFICATION	1.54234344373342E-4	DESIGN
class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9818197826398286	WITHOUT_CLASSIFICATION	0.01818021736017133	DESIGN
load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9994289232278938	WITHOUT_CLASSIFICATION	5.710767721061019E-4	DESIGN
we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9959310123448876	WITHOUT_CLASSIFICATION	0.0040689876551124335	DESIGN
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9900353158674277	WITHOUT_CLASSIFICATION	0.009964684132572324	DESIGN
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9900353158674277	WITHOUT_CLASSIFICATION	0.009964684132572324	DESIGN
load all arguments straight through	WITHOUT_CLASSIFICATION	0.9983757216492033	WITHOUT_CLASSIFICATION	0.0016242783507967211	DESIGN
load all arguments straight through	WITHOUT_CLASSIFICATION	0.9983757216492033	WITHOUT_CLASSIFICATION	0.0016242783507967211	DESIGN
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9993475082938246	WITHOUT_CLASSIFICATION	6.524917061754255E-4	DESIGN
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9993475082938246	WITHOUT_CLASSIFICATION	6.524917061754255E-4	DESIGN
store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999585073263026	WITHOUT_CLASSIFICATION	4.149267369728829E-5	DESIGN
if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9981165273549166	WITHOUT_CLASSIFICATION	0.001883472645083405	DESIGN
fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.7114384697081931	WITHOUT_CLASSIFICATION	0.2885615302918068	DESIGN
default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9997876048593601	WITHOUT_CLASSIFICATION	2.123951406399383E-4	DESIGN
store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9996361664151513	WITHOUT_CLASSIFICATION	3.6383358484868715E-4	DESIGN
store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9995031104145581	WITHOUT_CLASSIFICATION	4.968895854419686E-4	DESIGN
in 1.8 mode, this will be a RubyArray containing the arguments in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9833263713899357	WITHOUT_CLASSIFICATION	0.016673628610064307	DESIGN
no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999464385227647	WITHOUT_CLASSIFICATION	5.356147723525297E-5	DESIGN
for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9839410798988906	WITHOUT_CLASSIFICATION	0.016058920101109406	DESIGN
set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9865530354704038	WITHOUT_CLASSIFICATION	0.01344696452959613	DESIGN
if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9962599846435618	WITHOUT_CLASSIFICATION	0.0037400153564381097	DESIGN
verify the class	WITHOUT_CLASSIFICATION	0.9983011737191981	WITHOUT_CLASSIFICATION	0.0016988262808018781	DESIGN
create dir if necessary	WITHOUT_CLASSIFICATION	0.9935418880319012	WITHOUT_CLASSIFICATION	0.006458111968098716	DESIGN
Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.999670546306176	WITHOUT_CLASSIFICATION	3.29453693824014E-4	DESIGN
add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.999996249537307	WITHOUT_CLASSIFICATION	3.750462692869867E-6	DESIGN
thread context	WITHOUT_CLASSIFICATION	0.9998294995148348	WITHOUT_CLASSIFICATION	1.7050048516506087E-4	DESIGN
line number	WITHOUT_CLASSIFICATION	0.9995845553910868	WITHOUT_CLASSIFICATION	4.1544460891312934E-4	DESIGN
invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9996736469973502	WITHOUT_CLASSIFICATION	3.2635300264974933E-4	DESIGN
load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.998916726064966	WITHOUT_CLASSIFICATION	0.001083273935034051	DESIGN
return last value from execution	WITHOUT_CLASSIFICATION	0.9998606642860841	WITHOUT_CLASSIFICATION	1.3933571391588846E-4	DESIGN
method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9995521207541238	WITHOUT_CLASSIFICATION	4.4787924587618447E-4	DESIGN
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9896551940305556	WITHOUT_CLASSIFICATION	0.01034480596944448	DESIGN
block	WITHOUT_CLASSIFICATION	0.9993427209472601	WITHOUT_CLASSIFICATION	6.572790527398869E-4	DESIGN
block	WITHOUT_CLASSIFICATION	0.9993427209472601	WITHOUT_CLASSIFICATION	6.572790527398869E-4	DESIGN
we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9959310123448876	WITHOUT_CLASSIFICATION	0.0040689876551124335	DESIGN
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9900353158674277	WITHOUT_CLASSIFICATION	0.009964684132572324	DESIGN
load all arguments straight through	WITHOUT_CLASSIFICATION	0.9983757216492033	WITHOUT_CLASSIFICATION	0.0016242783507967211	DESIGN
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9993475082938246	WITHOUT_CLASSIFICATION	6.524917061754255E-4	DESIGN
add Script#run impl, used for running this script with a specified threadcontext and self root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9909241010169205	DESIGN	0.009075898983079377	WITHOUT_CLASSIFICATION
add main impl, used for detached or command-line execution of this script with a new runtime root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.6963708220188511	DESIGN	0.3036291779811488	WITHOUT_CLASSIFICATION
construct static scope list of names	WITHOUT_CLASSIFICATION	0.9995906116069401	WITHOUT_CLASSIFICATION	4.0938839305992045E-4	DESIGN
JRUBY-3014: make __FILE__ dynamically determined at load time, but we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9951654331552628	WITHOUT_CLASSIFICATION	0.004834566844737208	DESIGN
ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9974575615695958	WITHOUT_CLASSIFICATION	0.0025424384304041626	DESIGN
ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9974575615695958	WITHOUT_CLASSIFICATION	0.0025424384304041626	DESIGN
lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.995934732961757	WITHOUT_CLASSIFICATION	0.004065267038242957	DESIGN
boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9996730048503193	WITHOUT_CLASSIFICATION	3.269951496807099E-4	DESIGN
invoke static __file__	WITHOUT_CLASSIFICATION	0.997735847052591	WITHOUT_CLASSIFICATION	0.0022641529474089904	DESIGN
exact arg list __file__	WITHOUT_CLASSIFICATION	0.9995383482932293	WITHOUT_CLASSIFICATION	4.616517067706881E-4	DESIGN
declare the field	WITHOUT_CLASSIFICATION	0.9992948128641894	WITHOUT_CLASSIFICATION	7.051871358105928E-4	DESIGN
declare the field	WITHOUT_CLASSIFICATION	0.9992948128641894	WITHOUT_CLASSIFICATION	7.051871358105928E-4	DESIGN
not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9988536705081308	WITHOUT_CLASSIFICATION	0.0011463294918691912	DESIGN
normal closure	WITHOUT_CLASSIFICATION	0.999967430583133	WITHOUT_CLASSIFICATION	3.256941686710699E-5	DESIGN
end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999550987240418	WITHOUT_CLASSIFICATION	4.4901275958202215E-5	DESIGN
we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9997949957235217	WITHOUT_CLASSIFICATION	2.050042764783281E-4	DESIGN
handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9993100935197344	WITHOUT_CLASSIFICATION	6.899064802655033E-4	DESIGN
jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9998834586740741	WITHOUT_CLASSIFICATION	1.1654132592586598E-4	DESIGN
Ruby name	WITHOUT_CLASSIFICATION	0.9988825726847009	WITHOUT_CLASSIFICATION	0.001117427315299016	DESIGN
Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9980388273964855	WITHOUT_CLASSIFICATION	0.0019611726035144096	DESIGN
Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9973488594159311	WITHOUT_CLASSIFICATION	0.002651140584068826	DESIGN
We need to ensure that the variable names generated here cannot conflict with ruby variable names! Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9997936684072477	WITHOUT_CLASSIFICATION	2.0633159275229495E-4	DESIGN
Does this method define code? Default is yes -- which basically leads to pessimistic but safe optimizations But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9981761079303476	WITHOUT_CLASSIFICATION	0.001823892069652327	DESIGN
Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9981161251162891	WITHOUT_CLASSIFICATION	0.0018838748837109582	DESIGN
NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner with outer loops encountered before inner loops, and inner loops finished before outer ones. So, we can keep track of loops in a loop stack which keeps track of loops as they are encountered. This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9983851268445306	WITHOUT_CLASSIFICATION	0.0016148731554693008	DESIGN
Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9993303924993793	WITHOUT_CLASSIFICATION	6.696075006206484E-4	DESIGN
Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.999149871534409	WITHOUT_CLASSIFICATION	8.501284655909783E-4	DESIGN
_lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9993608255488906	WITHOUT_CLASSIFICATION	6.391744511092772E-4	DESIGN
List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9989727482777662	WITHOUT_CLASSIFICATION	0.0010272517222337763	DESIGN
Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9936263541904558	WITHOUT_CLASSIFICATION	0.006373645809544271	DESIGN
Insert nesting level to ensure variable names don't conflict across nested scopes! i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9932782174144005	WITHOUT_CLASSIFICATION	0.006721782585599556	DESIGN
get "self"	WITHOUT_CLASSIFICATION	0.99940612843183	WITHOUT_CLASSIFICATION	5.938715681699767E-4	DESIGN
variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9990474070648299	WITHOUT_CLASSIFICATION	9.525929351700928E-4	DESIGN
inline script	WITHOUT_CLASSIFICATION	0.9987725157482458	WITHOUT_CLASSIFICATION	0.0012274842517541996	DESIGN
inline script	WITHOUT_CLASSIFICATION	0.9987725157482458	WITHOUT_CLASSIFICATION	0.0012274842517541996	DESIGN
This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9950025882781675	WITHOUT_CLASSIFICATION	0.004997411721832615	DESIGN
Build the class body!	WITHOUT_CLASSIFICATION	0.9981196177054414	WITHOUT_CLASSIFICATION	0.001880382294558615	DESIGN
unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999779454536182	WITHOUT_CLASSIFICATION	2.2054546381849493E-5	DESIGN
unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999779454536182	WITHOUT_CLASSIFICATION	2.2054546381849493E-5	DESIGN
SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9932491714262698	DESIGN	0.006750828573730263	WITHOUT_CLASSIFICATION
Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9998229865308916	WITHOUT_CLASSIFICATION	1.7701346910850113E-4	DESIGN
done done done done	WITHOUT_CLASSIFICATION	0.9989520157880571	WITHOUT_CLASSIFICATION	0.001047984211942861	DESIGN
NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9985123084742794	WITHOUT_CLASSIFICATION	0.0014876915257206367	DESIGN
NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9985123084742794	WITHOUT_CLASSIFICATION	0.0014876915257206367	DESIGN
This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9920681312519026	WITHOUT_CLASSIFICATION	0.007931868748097473	DESIGN
build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9997220310852175	WITHOUT_CLASSIFICATION	2.779689147824942E-4	DESIGN
build first node only and return false	WITHOUT_CLASSIFICATION	0.9999887737109945	WITHOUT_CLASSIFICATION	1.1226289005585677E-5	DESIGN
Value of the last expression in the block	WITHOUT_CLASSIFICATION	0.9999110928071602	WITHOUT_CLASSIFICATION	8.89071928397887E-5	DESIGN
If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9998866753727516	WITHOUT_CLASSIFICATION	1.1332462724844759E-4	DESIGN
get the incoming case value	WITHOUT_CLASSIFICATION	0.9999728636846303	WITHOUT_CLASSIFICATION	2.7136315369585954E-5	DESIGN
the CASE instruction	WITHOUT_CLASSIFICATION	0.9998890916484008	WITHOUT_CLASSIFICATION	1.1090835159930946E-4	DESIGN
lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9992919840005898	WITHOUT_CLASSIFICATION	7.080159994101301E-4	DESIGN
build each "when"	WITHOUT_CLASSIFICATION	0.9993453803521777	WITHOUT_CLASSIFICATION	6.546196478223246E-4	DESIGN
multiple conditions for when	WITHOUT_CLASSIFICATION	0.988197523357692	WITHOUT_CLASSIFICATION	0.011802476642308076	DESIGN
build "else" if it exists	WITHOUT_CLASSIFICATION	0.999749392729814	WITHOUT_CLASSIFICATION	2.5060727018603665E-4	DESIGN
now emit bodies	WITHOUT_CLASSIFICATION	0.9986821418987253	WITHOUT_CLASSIFICATION	0.0013178581012746637	DESIGN
close it out	WITHOUT_CLASSIFICATION	0.999980013258726	WITHOUT_CLASSIFICATION	1.9986741273995577E-5	DESIGN
By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9987360632636219	WITHOUT_CLASSIFICATION	0.0012639367363782052	DESIGN
Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9932052599828471	WITHOUT_CLASSIFICATION	0.006794740017152842	DESIGN
Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9963336499861462	WITHOUT_CLASSIFICATION	0.0036663500138538275	DESIGN
1. Load the module first (lhs of node) 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9994428307248158	WITHOUT_CLASSIFICATION	5.57169275184243E-4	DESIGN
Build IR for args	WITHOUT_CLASSIFICATION	0.9995173834248863	WITHOUT_CLASSIFICATION	4.826165751137305E-4	DESIGN
Build IR for body	WITHOUT_CLASSIFICATION	0.9998033707960045	WITHOUT_CLASSIFICATION	1.966292039956175E-4	DESIGN
if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9992327808815227	WITHOUT_CLASSIFICATION	7.672191184773417E-4	DESIGN
Instance method	WITHOUT_CLASSIFICATION	0.9999848750870699	WITHOUT_CLASSIFICATION	1.512491293012773E-5	DESIGN
Class method	WITHOUT_CLASSIFICATION	0.999503542961886	WITHOUT_CLASSIFICATION	4.964570381140115E-4	DESIGN
Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9988546117256936	WITHOUT_CLASSIFICATION	0.0011453882743063912	DESIGN
Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9990123353000621	WITHOUT_CLASSIFICATION	9.87664699937906E-4	DESIGN
Now for the rest	WITHOUT_CLASSIFICATION	0.9998912575447411	WITHOUT_CLASSIFICATION	1.0874245525889009E-4	DESIGN
Jump to 'l' if this arg is not null. If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999783547672753	WITHOUT_CLASSIFICATION	2.1645232724765406E-5	DESIGN
This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9998191801141302	WITHOUT_CLASSIFICATION	1.8081988586977365E-4	DESIGN
Create a new closure context	WITHOUT_CLASSIFICATION	0.99981591488219	WITHOUT_CLASSIFICATION	1.840851178098529E-4	DESIGN
Build args	WITHOUT_CLASSIFICATION	0.9993505878260159	WITHOUT_CLASSIFICATION	6.494121739841589E-4	DESIGN
Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999966870325089	WITHOUT_CLASSIFICATION	3.3129674911590912E-6	DESIGN
Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9998922553116026	WITHOUT_CLASSIFICATION	1.0774468839736071E-4	DESIGN
By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9987360632636219	WITHOUT_CLASSIFICATION	0.0012639367363782052	DESIGN
Create a new closure context	WITHOUT_CLASSIFICATION	0.99981591488219	WITHOUT_CLASSIFICATION	1.840851178098529E-4	DESIGN
Build args	WITHOUT_CLASSIFICATION	0.9993505878260159	WITHOUT_CLASSIFICATION	6.494121739841589E-4	DESIGN
Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9998922553116026	WITHOUT_CLASSIFICATION	1.0774468839736071E-4	DESIGN
Get the container for this new module	WITHOUT_CLASSIFICATION	0.99884103635441	WITHOUT_CLASSIFICATION	0.0011589636455899884	DESIGN
Build the new module	WITHOUT_CLASSIFICATION	0.9986840504792994	WITHOUT_CLASSIFICATION	0.001315949520700576	DESIGN
Build the module body	WITHOUT_CLASSIFICATION	0.9993757751880296	WITHOUT_CLASSIFICATION	6.242248119704665E-4	DESIGN
First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999148059525107	WITHOUT_CLASSIFICATION	8.519404748936395E-5	DESIGN
rest of the argument array!	WITHOUT_CLASSIFICATION	0.9979064608845085	WITHOUT_CLASSIFICATION	0.0020935391154915774	DESIGN
If a closure, the next is simply a return from the closure! If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.999553399584912	WITHOUT_CLASSIFICATION	4.4660041508805156E-4	DESIGN
get attr	WITHOUT_CLASSIFICATION	0.9991749056216247	WITHOUT_CLASSIFICATION	8.25094378375207E-4	DESIGN
call operator	WITHOUT_CLASSIFICATION	0.9991429537297252	WITHOUT_CLASSIFICATION	8.570462702747832E-4	DESIGN
set attr	WITHOUT_CLASSIFICATION	0.9975769906230899	WITHOUT_CLASSIFICATION	0.002423009376910104	DESIGN
Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> x = -- build(x) should return a variable! -- f = is_true(x) beq(f, false, L) x = -- build(y) -- L:	WITHOUT_CLASSIFICATION	0.9898616590898248	WITHOUT_CLASSIFICATION	0.010138340910175127	DESIGN
This does the assignment!	WITHOUT_CLASSIFICATION	0.9966084057866678	WITHOUT_CLASSIFICATION	0.0033915942133322767	DESIGN
This does the assignment!	WITHOUT_CLASSIFICATION	0.9966084057866678	WITHOUT_CLASSIFICATION	0.0033915942133322767	DESIGN
if v1 is defined and true, we are done!	WITHOUT_CLASSIFICATION	0.9994879865660082	WITHOUT_CLASSIFICATION	5.120134339917205E-4	DESIGN
build first node only and return true	WITHOUT_CLASSIFICATION	0.9999661311577313	WITHOUT_CLASSIFICATION	3.386884226875532E-5	DESIGN
build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999681322294399	WITHOUT_CLASSIFICATION	3.1867770560151424E-5	DESIGN
Top-level script!	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999802864247193	WITHOUT_CLASSIFICATION	1.9713575280758132E-5	DESIGN
----------- Private Interface ------------	WITHOUT_CLASSIFICATION	0.9997164273911026	WITHOUT_CLASSIFICATION	2.83572608897404E-4	DESIGN
What handles warnings	WITHOUT_CLASSIFICATION	0.9996858864352363	WITHOUT_CLASSIFICATION	3.1411356476368534E-4	DESIGN
Tries to load at compile-time the constant referred to by 'constRef'. This might be possible if the constant is defined and is not a forward reference to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9364293756497144	WITHOUT_CLASSIFICATION	0.06357062435028556	DESIGN
For closures, a redo is a jump to the beginning of the closure For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999944088856618	WITHOUT_CLASSIFICATION	5.591114338107239E-6	DESIGN
The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.999310556177817	WITHOUT_CLASSIFICATION	6.894438221828187E-4	DESIGN
Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9963656074817963	WITHOUT_CLASSIFICATION	0.0036343925182037227	DESIGN
Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9736167146638396	WITHOUT_CLASSIFICATION	0.02638328533616043	DESIGN
------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999491680430654	WITHOUT_CLASSIFICATION	5.083195693451214E-5	DESIGN
value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9998751402940409	WITHOUT_CLASSIFICATION	1.248597059590964E-4	DESIGN
alu operations	WITHOUT_CLASSIFICATION	0.9997086374708738	WITHOUT_CLASSIFICATION	2.913625291262044E-4	DESIGN
method handle, arg receive, return value, and call instructions	WITHOUT_CLASSIFICATION	0.9996541469349338	WITHOUT_CLASSIFICATION	3.458530650662651E-4	DESIGN
closure instructions	WITHOUT_CLASSIFICATION	0.9998652281201955	WITHOUT_CLASSIFICATION	1.347718798044975E-4	DESIGN
eval instructions	WITHOUT_CLASSIFICATION	0.9991576096168053	WITHOUT_CLASSIFICATION	8.423903831946078E-4	DESIGN
def instructions	WITHOUT_CLASSIFICATION	0.9988427754379202	WITHOUT_CLASSIFICATION	0.0011572245620798407	DESIGN
exception instructions	WITHOUT_CLASSIFICATION	0.998808567089103	WITHOUT_CLASSIFICATION	0.0011914329108970024	DESIGN
Loads	WITHOUT_CLASSIFICATION	0.9990915589733795	WITHOUT_CLASSIFICATION	9.084410266204685E-4	DESIGN
Stores	WITHOUT_CLASSIFICATION	0.9990045312985909	WITHOUT_CLASSIFICATION	9.954687014090123E-4	DESIGN
jump and branch operations	WITHOUT_CLASSIFICATION	0.9998709754201315	WITHOUT_CLASSIFICATION	1.2902457986842125E-4	DESIGN
others	WITHOUT_CLASSIFICATION	0.9881896491006854	WITHOUT_CLASSIFICATION	0.011810350899314478	DESIGN
a case/when branch	WITHOUT_CLASSIFICATION	0.9993656322093434	WITHOUT_CLASSIFICATION	6.343677906566128E-4	DESIGN
optimization guards	WITHOUT_CLASSIFICATION	0.999252425825808	WITHOUT_CLASSIFICATION	7.47574174191888E-4	DESIGN
By default, call instructions cannot be deleted even if their results aren't used by anyone unless we know more about what the call is, what it does, etc. Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.5439508943046365	DESIGN	0.45604910569536344	WITHOUT_CLASSIFICATION
Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9648807513603237	WITHOUT_CLASSIFICATION	0.03511924863967629	DESIGN
scripts	WITHOUT_CLASSIFICATION	0.9992418234805569	WITHOUT_CLASSIFICATION	7.581765194429861E-4	DESIGN
scripts and modules	WITHOUT_CLASSIFICATION	0.9995571315247096	WITHOUT_CLASSIFICATION	4.4286847529030713E-4	DESIGN
scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9991127222418997	WITHOUT_CLASSIFICATION	8.872777581002834E-4	DESIGN
methods and closures	WITHOUT_CLASSIFICATION	0.9990861368094044	WITHOUT_CLASSIFICATION	9.138631905957652E-4	DESIGN
create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999498614339314	WITHOUT_CLASSIFICATION	5.0138566068584226E-5	DESIGN
create a new temporary variable	WITHOUT_CLASSIFICATION	0.97533842334368	WITHOUT_CLASSIFICATION	0.024661576656319996	DESIGN
Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999771612241017	WITHOUT_CLASSIFICATION	2.283877589828824E-5	DESIGN
Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999660917129787	WITHOUT_CLASSIFICATION	3.3908287021338975E-5	DESIGN
Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.999989325102326	WITHOUT_CLASSIFICATION	1.067489767399984E-5	DESIGN
While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.981487044176425	WITHOUT_CLASSIFICATION	0.018512955823575063	DESIGN
Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999767050305254	WITHOUT_CLASSIFICATION	2.3294969474627216E-5	DESIGN
Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.999807512338811	WITHOUT_CLASSIFICATION	1.9248766118904828E-4	DESIGN
Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9992200520057757	WITHOUT_CLASSIFICATION	7.799479942242813E-4	DESIGN
Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9539845583485906	WITHOUT_CLASSIFICATION	0.04601544165140941	DESIGN
Readline	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999312613845364	WITHOUT_CLASSIFICATION	6.873861546367267E-5	DESIGN
Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9962649186281435	WITHOUT_CLASSIFICATION	0.0037350813718564995	DESIGN
If 'r' is not a constant, it could actually be a compound value! Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9820233241575618	WITHOUT_CLASSIFICATION	0.017976675842438145	DESIGN
Check if we can optimize this call based on the receiving method and receiver type Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9572465020805295	DESIGN	0.042753497919470376	WITHOUT_CLASSIFICATION
If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.989979812711437	WITHOUT_CLASSIFICATION	0.010020187288563045	DESIGN
If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.999927716795089	WITHOUT_CLASSIFICATION	7.228320491110237E-5	DESIGN
----------- Public abstract methods ----------	WITHOUT_CLASSIFICATION	0.9980641463910189	WITHOUT_CLASSIFICATION	0.001935853608981002	DESIGN
----------- Public methods with a default implementation ----------	WITHOUT_CLASSIFICATION	0.9986361624823024	WITHOUT_CLASSIFICATION	0.0013638375176976759	DESIGN
Compute meet over all "sources" and compute "destination" basic blocks that should then be processed. sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9938093885624332	WITHOUT_CLASSIFICATION	0.006190611437566814	DESIGN
If the solution has changed, add "dsts" to the work list. No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9995957859235496	WITHOUT_CLASSIFICATION	4.042140764504771E-4	DESIGN
--------- Protected fields/methods below ---------	WITHOUT_CLASSIFICATION	0.9997535649920919	WITHOUT_CLASSIFICATION	2.464350079080793E-4	DESIGN
Dataflow problem with which this node is associated CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9922682941049057	WITHOUT_CLASSIFICATION	0.007731705895094211	DESIGN
-------------- Public fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9998230102128361	WITHOUT_CLASSIFICATION	1.7698978716397304E-4	DESIGN
------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9989862207178948	WITHOUT_CLASSIFICATION	0.0010137792821052094	DESIGN
------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9998449703201723	WITHOUT_CLASSIFICATION	1.5502967982775824E-4	DESIGN
Compute Meet Over All Paths solution for this dataflow problem on the input CFG. This implements a standard worklist algorithm.	WITHOUT_CLASSIFICATION	0.6074290879185956	WITHOUT_CLASSIFICATION	0.3925709120814043	DESIGN
Individual analyses should override this	WITHOUT_CLASSIFICATION	0.9798649755563508	WITHOUT_CLASSIFICATION	0.020135024443649247	DESIGN
Individual analyses should override this	WITHOUT_CLASSIFICATION	0.9798649755563508	WITHOUT_CLASSIFICATION	0.020135024443649247	DESIGN
-------------- Packaged/protected fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9998082572426973	WITHOUT_CLASSIFICATION	1.9174275730262267E-4	DESIGN
We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9997326783929096	WITHOUT_CLASSIFICATION	2.673216070903664E-4	DESIGN
-------------- Protected fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9998204494103637	WITHOUT_CLASSIFICATION	1.7955058963634938E-4	DESIGN
-------------- Private fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9999140495212958	WITHOUT_CLASSIFICATION	8.595047870416321E-5	DESIGN
Initialize all flow graph nodes	WITHOUT_CLASSIFICATION	0.9999397285210492	WITHOUT_CLASSIFICATION	6.0271478950852685E-5	DESIGN
Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses	WITHOUT_CLASSIFICATION	0.7309772528389119	WITHOUT_CLASSIFICATION	0.26902274716108815	DESIGN
PUBLIC INTERFACE	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9975656664590888	WITHOUT_CLASSIFICATION	0.0024343335409110936	DESIGN
start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9991442276771539	WITHOUT_CLASSIFICATION	8.557723228459452E-4	DESIGN
switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9953064027867362	WITHOUT_CLASSIFICATION	0.00469359721326377	DESIGN
----------- Public Interface ------------	WITHOUT_CLASSIFICATION	0.9994161876471563	WITHOUT_CLASSIFICATION	5.838123528437145E-4	DESIGN
class or module	WITHOUT_CLASSIFICATION	0.9969649153495013	WITHOUT_CLASSIFICATION	0.003035084650498718	DESIGN
OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9996882666894781	WITHOUT_CLASSIFICATION	3.11733310521854E-4	DESIGN
Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9974616137079495	WITHOUT_CLASSIFICATION	0.0025383862920504794	DESIGN
v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9997860064077232	WITHOUT_CLASSIFICATION	2.139935922768012E-4	DESIGN
IN is the same!	WITHOUT_CLASSIFICATION	0.9987497358546535	WITHOUT_CLASSIFICATION	0.0012502641453465196	DESIGN
IN changed!	WITHOUT_CLASSIFICATION	0.9983057657320177	WITHOUT_CLASSIFICATION	0.0016942342679822876	DESIGN
---------- Protected / package fields, methods ---------	WITHOUT_CLASSIFICATION	0.9989447338876568	WITHOUT_CLASSIFICATION	0.0010552661123431992	DESIGN
If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9995322632201655	WITHOUT_CLASSIFICATION	4.677367798343651E-4	DESIGN
Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9856018367183177	WITHOUT_CLASSIFICATION	0.014398163281682272	DESIGN
---------- Private fields, methods ---------	WITHOUT_CLASSIFICATION	0.999678670574467	WITHOUT_CLASSIFICATION	3.213294255330033E-4	DESIGN
Variables live at entry of this node Variables live at exit of node Temporary set of live variables Size of the "_in" and "_out" bit sets	WITHOUT_CLASSIFICATION	0.5464760875868611	DESIGN	0.453523912413139	WITHOUT_CLASSIFICATION
Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9978662627852073	WITHOUT_CLASSIFICATION	0.0021337372147927345	DESIGN
Does this instruction have side effects as a result of its operation This information is used in optimization phases to impact dead code elimination and other optimization passes	WITHOUT_CLASSIFICATION	0.9971081277428628	DESIGN	0.0028918722571370957	WITHOUT_CLASSIFICATION
--------- "Abstract"/"please-override" methods ---------	WITHOUT_CLASSIFICATION	0.9990791788430889	WITHOUT_CLASSIFICATION	9.208211569111443E-4	DESIGN
Array of all operands for this instruction	WITHOUT_CLASSIFICATION	0.9982175095427502	WITHOUT_CLASSIFICATION	0.0017824904572496852	DESIGN
List of all variables used by all operands of this instruction	WITHOUT_CLASSIFICATION	0.9781093431117348	WITHOUT_CLASSIFICATION	0.021890656888265154	DESIGN
This method takes as input a map of operands to their values, and outputs If the value map provides a value for any of the instruction's operands this method is expected to replace the original operands with the simplified values. It is not required that it do so -- code correctness is not compromised by failure to simplify	WITHOUT_CLASSIFICATION	0.9967498583261318	WITHOUT_CLASSIFICATION	0.0032501416738681403	DESIGN
By default, no simplifications!	WITHOUT_CLASSIFICATION	0.999786249163465	WITHOUT_CLASSIFICATION	2.137508365348737E-4	DESIGN
Can this call lead to ruby code getting modified? If we don't know what method we are calling, we assume it can (pessimistic, but safe!) If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9313685924021036	WITHOUT_CLASSIFICATION	0.06863140759789645	DESIGN
By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9998089751637932	WITHOUT_CLASSIFICATION	1.9102483620687304E-4	DESIGN
If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.999669122360772	WITHOUT_CLASSIFICATION	3.3087763922797484E-4	DESIGN
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.9795419358802628	WITHOUT_CLASSIFICATION	0.020458064119737256	DESIGN
Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999220418390309	WITHOUT_CLASSIFICATION	7.795816096907211E-5	DESIGN
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.9795419358802628	WITHOUT_CLASSIFICATION	0.020458064119737256	DESIGN
You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9993076770049916	WITHOUT_CLASSIFICATION	6.923229950084074E-4	DESIGN
If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9998778973391682	WITHOUT_CLASSIFICATION	1.2210266083179016E-4	DESIGN
If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9998778973391682	WITHOUT_CLASSIFICATION	1.2210266083179016E-4	DESIGN
If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9998778973391682	WITHOUT_CLASSIFICATION	1.2210266083179016E-4	DESIGN
For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999978776203357	WITHOUT_CLASSIFICATION	2.1223796643355277E-6	DESIGN
For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999978776203357	WITHOUT_CLASSIFICATION	2.1223796643355277E-6	DESIGN
The operand that this attribute targets DEFERRED AttributeValue _val; Attribute value	WITHOUT_CLASSIFICATION	0.9999899921141154	WITHOUT_CLASSIFICATION	1.0007885884444727E-5	DESIGN
Arrays, Ranges, etc. are compound values Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.999819500250808	WITHOUT_CLASSIFICATION	1.8049974919195577E-4	DESIGN
Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9998635548756979	WITHOUT_CLASSIFICATION	1.3644512430200888E-4	DESIGN
The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.6157556553702253	DESIGN	0.38424434462977486	WITHOUT_CLASSIFICATION
Nothing to do by default	WITHOUT_CLASSIFICATION	0.9998311871460728	WITHOUT_CLASSIFICATION	1.6881285392729228E-4	DESIGN
Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999442964556893	WITHOUT_CLASSIFICATION	5.570354431066345E-5	DESIGN
Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9995857934938671	WITHOUT_CLASSIFICATION	4.1420650613294114E-4	DESIGN
ignore	WITHOUT_CLASSIFICATION	0.999288108244124	WITHOUT_CLASSIFICATION	7.118917558759758E-4	DESIGN
Scope (method/closure) to which this cfg belongs Entry BB -- dummy Exit BB -- dummy The actual graph Next available basic block id	WITHOUT_CLASSIFICATION	0.9998839497363041	WITHOUT_CLASSIFICATION	1.1605026369592216E-4	DESIGN
Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999490014524545	WITHOUT_CLASSIFICATION	5.0998547545487414E-5	DESIGN
Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9993281224068243	WITHOUT_CLASSIFICATION	6.718775931756183E-4	DESIGN
currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9994933969089325	WITHOUT_CLASSIFICATION	5.066030910674344E-4	DESIGN
Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9996305115159664	WITHOUT_CLASSIFICATION	3.6948848403352914E-4	DESIGN
root-level logic	WITHOUT_CLASSIFICATION	0.998862958905463	WITHOUT_CLASSIFICATION	0.0011370410945370048	DESIGN
root-level methods	WITHOUT_CLASSIFICATION	0.9991089277706227	WITHOUT_CLASSIFICATION	8.910722293773005E-4	DESIGN
root-level classes	WITHOUT_CLASSIFICATION	0.9996473411083278	WITHOUT_CLASSIFICATION	3.5265889167225106E-4	DESIGN
case 4: signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); break; case 5: signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); break;	WITHOUT_CLASSIFICATION	0.9999864597203384	WITHOUT_CLASSIFICATION	1.3540279661608862E-5	DESIGN
load receiver	WITHOUT_CLASSIFICATION	0.9982105051332575	WITHOUT_CLASSIFICATION	0.0017894948667424898	DESIGN
load receiver	WITHOUT_CLASSIFICATION	0.9982105051332575	WITHOUT_CLASSIFICATION	0.0017894948667424898	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9993195187418791	WITHOUT_CLASSIFICATION	6.804812581208811E-4	DESIGN
load arguments	WITHOUT_CLASSIFICATION	0.9973457634766542	WITHOUT_CLASSIFICATION	0.00265423652334588	DESIGN
load arguments	WITHOUT_CLASSIFICATION	0.9973457634766542	WITHOUT_CLASSIFICATION	0.00265423652334588	DESIGN
case 4: case 5:	WITHOUT_CLASSIFICATION	0.9999103786649512	WITHOUT_CLASSIFICATION	8.962133504882698E-5	DESIGN
Object[] args	WITHOUT_CLASSIFICATION	0.9991724799839277	WITHOUT_CLASSIFICATION	8.275200160722311E-4	DESIGN
load handle	WITHOUT_CLASSIFICATION	0.9925271944412998	WITHOUT_CLASSIFICATION	0.007472805558700163	DESIGN
args array	WITHOUT_CLASSIFICATION	0.9996406286871349	WITHOUT_CLASSIFICATION	3.5937131286510913E-4	DESIGN
i'th argument	WITHOUT_CLASSIFICATION	0.9995622187046729	WITHOUT_CLASSIFICATION	4.377812953270771E-4	DESIGN
invoke specific arity version	WITHOUT_CLASSIFICATION	0.9998320563345601	WITHOUT_CLASSIFICATION	1.6794366543991475E-4	DESIGN
Object arg0	WITHOUT_CLASSIFICATION	0.9993903264368338	WITHOUT_CLASSIFICATION	6.096735631661718E-4	DESIGN
useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9994802956546698	WITHOUT_CLASSIFICATION	5.197043453302682E-4	DESIGN
No editing before startPos	WITHOUT_CLASSIFICATION	0.9999334874610736	WITHOUT_CLASSIFICATION	6.651253892640318E-5	DESIGN
no silly ticks!	WITHOUT_CLASSIFICATION	0.9971748844197926	WITHOUT_CLASSIFICATION	0.002825115580207274	DESIGN
no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9994973382989967	WITHOUT_CLASSIFICATION	5.0266170100327E-4	DESIGN
at end	WITHOUT_CLASSIFICATION	0.9991335715273878	WITHOUT_CLASSIFICATION	8.664284726121355E-4	DESIGN
undo check	WITHOUT_CLASSIFICATION	0.9998504878851743	WITHOUT_CLASSIFICATION	1.4951211482575782E-4	DESIGN
Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.999289523527401	WITHOUT_CLASSIFICATION	7.10476472598998E-4	DESIGN
ignore	WITHOUT_CLASSIFICATION	0.999288108244124	WITHOUT_CLASSIFICATION	7.118917558759758E-4	DESIGN
\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
Assign the values.	WITHOUT_CLASSIFICATION	0.9989337107009444	WITHOUT_CLASSIFICATION	0.0010662892990555414	DESIGN
no check for ''	WITHOUT_CLASSIFICATION	0.9999404631032899	WITHOUT_CLASSIFICATION	5.9536896710081846E-5	DESIGN
no check for ''	WITHOUT_CLASSIFICATION	0.9999404631032899	WITHOUT_CLASSIFICATION	5.9536896710081846E-5	DESIGN
Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9990862235679658	WITHOUT_CLASSIFICATION	9.137764320342828E-4	DESIGN
this is ensured by the callers	WITHOUT_CLASSIFICATION	0.99310414628956	WITHOUT_CLASSIFICATION	0.0068958537104401125	DESIGN
no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9996915331916431	WITHOUT_CLASSIFICATION	3.0846680835701037E-4	DESIGN
restore position	WITHOUT_CLASSIFICATION	0.9993105663688849	WITHOUT_CLASSIFICATION	6.894336311151622E-4	DESIGN
Something like cvar_cbase() from eval.c, factored out for the benefit of all the classvar-related node evaluations	WITHOUT_CLASSIFICATION	0.9995679051766085	WITHOUT_CLASSIFICATION	4.3209482339146097E-4	DESIGN
Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.999972161905916	WITHOUT_CLASSIFICATION	2.783809408404298E-5	DESIGN
JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.999983595072673	WITHOUT_CLASSIFICATION	1.640492732710881E-5	DESIGN
MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9932041215844298	WITHOUT_CLASSIFICATION	0.006795878415570144	DESIGN
We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9998503692198146	WITHOUT_CLASSIFICATION	1.496307801852702E-4	DESIGN
JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9992517507943537	WITHOUT_CLASSIFICATION	7.482492056463568E-4	DESIGN
not overridden, let's go	WITHOUT_CLASSIFICATION	0.9998379969658473	WITHOUT_CLASSIFICATION	1.6200303415266602E-4	DESIGN
Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8()	WITHOUT_CLASSIFICATION	0.9992960904291422	WITHOUT_CLASSIFICATION	7.039095708577167E-4	DESIGN
FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.5606503421817814	WITHOUT_CLASSIFICATION	0.43934965781821866	DESIGN
Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9990800488876019	WITHOUT_CLASSIFICATION	9.199511123979219E-4	DESIGN
clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999086544243275	WITHOUT_CLASSIFICATION	9.13455756724205E-5	DESIGN
These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.512125519304075	DESIGN	0.487874480695925	WITHOUT_CLASSIFICATION
Timeout module methods	WITHOUT_CLASSIFICATION	0.9964486964499873	WITHOUT_CLASSIFICATION	0.003551303550012695	DESIGN
Toplevel defines	WITHOUT_CLASSIFICATION	0.9992644883936898	WITHOUT_CLASSIFICATION	7.355116063101167E-4	DESIGN
No seconds, just yield	WITHOUT_CLASSIFICATION	0.9996108853867804	WITHOUT_CLASSIFICATION	3.8911461321956646E-4	DESIGN
No timeout in critical section	WITHOUT_CLASSIFICATION	0.9986327028087257	WITHOUT_CLASSIFICATION	0.0013672971912742442	DESIGN
if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9998356342073204	WITHOUT_CLASSIFICATION	1.6436579267960238E-4	DESIGN
and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9973118590413416	WITHOUT_CLASSIFICATION	0.0026881409586583574	DESIGN
otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9988341365954798	WITHOUT_CLASSIFICATION	0.001165863404520166	DESIGN
Remove the Executor task now, to avoid cancelled tasks accumulating until an Executor thread can schedule and remove them	WITHOUT_CLASSIFICATION	0.9861736153955835	WITHOUT_CLASSIFICATION	0.013826384604416564	DESIGN
If the task was scheduled, wait for it to finish before polling for the exception it would have thrown.	WITHOUT_CLASSIFICATION	0.9999751587362169	WITHOUT_CLASSIFICATION	2.484126378306926E-5	DESIGN
NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9988086530547068	WITHOUT_CLASSIFICATION	0.0011913469452933098	DESIGN
When a length is given, read_string acts like get_bytes	WITHOUT_CLASSIFICATION	0.9705442666132259	WITHOUT_CLASSIFICATION	0.029455733386774152	DESIGN
Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9902027356941047	WITHOUT_CLASSIFICATION	0.009797264305895363	DESIGN
ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9792186912854445	WITHOUT_CLASSIFICATION	0.020781308714555566	DESIGN
If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9996508567844059	WITHOUT_CLASSIFICATION	3.4914321559415315E-4	DESIGN
This variant of newStruct is called from StructLayoutBuilder	WITHOUT_CLASSIFICATION	0.9984175564873141	WITHOUT_CLASSIFICATION	0.0015824435126858948	DESIGN
This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999623310160982	WITHOUT_CLASSIFICATION	3.766898390182827E-5	DESIGN
Windows is LLP64	WITHOUT_CLASSIFICATION	0.9576496053163807	WITHOUT_CLASSIFICATION	0.0423503946836193	DESIGN
Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9934096642295052	WITHOUT_CLASSIFICATION	0.006590335770494766	DESIGN
Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999662727140306	WITHOUT_CLASSIFICATION	3.372728596942333E-5	DESIGN
$blah	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9902027356941047	WITHOUT_CLASSIFICATION	0.009797264305895363	DESIGN
A specific version was requested - use as is for search	WITHOUT_CLASSIFICATION	0.9996173850042024	WITHOUT_CLASSIFICATION	3.826149957976155E-4	DESIGN
Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999662727140306	WITHOUT_CLASSIFICATION	3.372728596942333E-5	DESIGN
Keep a reference to the temporary memory in the cache so it does not get freed by the GC until the struct is freed	WITHOUT_CLASSIFICATION	0.9992888456987222	WITHOUT_CLASSIFICATION	7.111543012777508E-4	DESIGN
Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9996773423913808	WITHOUT_CLASSIFICATION	3.226576086191501E-4	DESIGN
Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9998711453510601	WITHOUT_CLASSIFICATION	1.2885464893985042E-4	DESIGN
Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9996008591937383	WITHOUT_CLASSIFICATION	3.991408062616508E-4	DESIGN
case FLOAT:	WITHOUT_CLASSIFICATION	0.9999098795689494	WITHOUT_CLASSIFICATION	9.012043105066784E-5	DESIGN
keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9990331790942453	WITHOUT_CLASSIFICATION	9.668209057548227E-4	DESIGN
keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9990331790942453	WITHOUT_CLASSIFICATION	9.668209057548227E-4	DESIGN
No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9998938028624665	WITHOUT_CLASSIFICATION	1.0619713753341645E-4	DESIGN
Wire up Function#call(args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9979272248228996	WITHOUT_CLASSIFICATION	0.0020727751771003194	DESIGN
Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999426648088826	WITHOUT_CLASSIFICATION	5.733519111736012E-5	DESIGN
Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999426648088826	WITHOUT_CLASSIFICATION	5.733519111736012E-5	DESIGN
If there is exactly _one_ callback argument to the function, then a block can be given and automatically subsituted for the callback parameter.	WITHOUT_CLASSIFICATION	0.9999078661207771	WITHOUT_CLASSIFICATION	9.213387922294752E-5	DESIGN
------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9995212729899738	WITHOUT_CLASSIFICATION	4.787270100261432E-4	DESIGN
AF_INET	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
AF_INET	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
line 321	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
Set up for potentially fast-int operations	WITHOUT_CLASSIFICATION	0.9999165353300323	WITHOUT_CLASSIFICATION	8.34646699676086E-5	DESIGN
Hook up the MemoryPointer class if its not already there	WITHOUT_CLASSIFICATION	0.9998053653560119	WITHOUT_CLASSIFICATION	1.946346439879798E-4	DESIGN
This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9757604130948484	WITHOUT_CLASSIFICATION	0.024239586905151652	DESIGN
no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9266383314368913	WITHOUT_CLASSIFICATION	0.07336166856310865	DESIGN
Sockaddr_un has different structure on different platforms. See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9161957745841	WITHOUT_CLASSIFICATION	0.0838042254159	DESIGN
There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999919072398535	WITHOUT_CLASSIFICATION	8.092760146574673E-6	DESIGN
RubyIPSocket	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9997499324782565	WITHOUT_CLASSIFICATION	2.500675217435167E-4	DESIGN
host and port given	WITHOUT_CLASSIFICATION	0.9995114817101028	WITHOUT_CLASSIFICATION	4.885182898970985E-4	DESIGN
RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9995662361562393	WITHOUT_CLASSIFICATION	4.337638437607989E-4	DESIGN
make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9994344991229337	WITHOUT_CLASSIFICATION	5.655008770664172E-4	DESIGN
continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999054759141305	WITHOUT_CLASSIFICATION	9.452408586949026E-5	DESIGN
recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9821514378655863	WITHOUT_CLASSIFICATION	0.01784856213441363	DESIGN
Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9971141513217601	WITHOUT_CLASSIFICATION	0.0028858486782399923	DESIGN
RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9995802753379017	WITHOUT_CLASSIFICATION	4.1972466209827774E-4	DESIGN
mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9985155577441394	WITHOUT_CLASSIFICATION	0.0014844422558605958	DESIGN
constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9996601368040314	WITHOUT_CLASSIFICATION	3.3986319596851787E-4	DESIGN
More constants needed by specs	WITHOUT_CLASSIFICATION	0.99927826894297	WITHOUT_CLASSIFICATION	7.217310570299046E-4	DESIGN
normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9998270697739614	WITHOUT_CLASSIFICATION	1.7293022603862495E-4	DESIGN
AF_INET	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
255.255.255.255	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
0.0.0.0	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9986546011944063	WITHOUT_CLASSIFICATION	0.0013453988055937042	DESIGN
line 323	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
can't set TC classloader	WITHOUT_CLASSIFICATION	0.9981252005150614	WITHOUT_CLASSIFICATION	0.0018747994849386523	DESIGN
can't set TC classloader	WITHOUT_CLASSIFICATION	0.9981252005150614	WITHOUT_CLASSIFICATION	0.0018747994849386523	DESIGN
ok, it's a socket...set values accordingly just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999613699741028	WITHOUT_CLASSIFICATION	3.8630025897281154E-5	DESIGN
datagram, set accordingly again, AF_INET	WITHOUT_CLASSIFICATION	0.9992592632938828	WITHOUT_CLASSIFICATION	7.40736706117125E-4	DESIGN
IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9996491972956916	WITHOUT_CLASSIFICATION	3.508027043084698E-4	DESIGN
When Socket::AI_PASSIVE and host is nil, return 'any' address.	WITHOUT_CLASSIFICATION	0.9990162165051363	WITHOUT_CLASSIFICATION	9.837834948636978E-4	DESIGN
The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999665129974472	WITHOUT_CLASSIFICATION	3.34870025528507E-5	DESIGN
RubySocket	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9989430315220009	WITHOUT_CLASSIFICATION	0.001056968477999011	DESIGN
e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9994768118841603	WITHOUT_CLASSIFICATION	5.231881158397557E-4	DESIGN
we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9995297442853274	WITHOUT_CLASSIFICATION	4.7025571467266983E-4	DESIGN
otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999919048824348	WITHOUT_CLASSIFICATION	8.095117565145966E-6	DESIGN
no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999682643064546	WITHOUT_CLASSIFICATION	3.173569354543943E-5	DESIGN
do nothing, just exit	WITHOUT_CLASSIFICATION	0.9993886508945474	WITHOUT_CLASSIFICATION	6.113491054526193E-4	DESIGN
nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9991856162036415	WITHOUT_CLASSIFICATION	8.143837963584149E-4	DESIGN
set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9995793479991477	WITHOUT_CLASSIFICATION	4.206520008522593E-4	DESIGN
uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9992013800361256	WITHOUT_CLASSIFICATION	7.986199638745307E-4	DESIGN
Call the thread's code	WITHOUT_CLASSIFICATION	0.9972326127381218	WITHOUT_CLASSIFICATION	0.0027673872618782496	DESIGN
Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.999927058419451	WITHOUT_CLASSIFICATION	7.294158054914743E-5	DESIGN
restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.999982519257834	WITHOUT_CLASSIFICATION	1.7480742166068506E-5	DESIGN
be dead	WITHOUT_CLASSIFICATION	0.9703670137542827	WITHOUT_CLASSIFICATION	0.029632986245717315	DESIGN
loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9993957314407572	WITHOUT_CLASSIFICATION	6.042685592427126E-4	DESIGN
all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999828993661962	WITHOUT_CLASSIFICATION	1.7100633803690214E-5	DESIGN
thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9994768583905531	WITHOUT_CLASSIFICATION	5.231416094469146E-4	DESIGN
future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999312487154844	WITHOUT_CLASSIFICATION	6.875128451548805E-5	DESIGN
first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999727429713504	WITHOUT_CLASSIFICATION	2.7257028649522293E-5	DESIGN
then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999510144269567	WITHOUT_CLASSIFICATION	4.8985573043393105E-5	DESIGN
UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9858135295563334	WITHOUT_CLASSIFICATION	0.014186470443666586	DESIGN
Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.999873285144771	WITHOUT_CLASSIFICATION	1.2671485522901886E-4	DESIGN
invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9995075528806953	WITHOUT_CLASSIFICATION	4.924471193047138E-4	DESIGN
main body	WITHOUT_CLASSIFICATION	0.9998273454344065	WITHOUT_CLASSIFICATION	1.7265456559352482E-4	DESIGN
return jump handling	WITHOUT_CLASSIFICATION	0.999521655042758	WITHOUT_CLASSIFICATION	4.7834495724196545E-4	DESIGN
finally	WITHOUT_CLASSIFICATION	0.9991232330940609	WITHOUT_CLASSIFICATION	8.767669059389553E-4	DESIGN
return result if we're still good	WITHOUT_CLASSIFICATION	0.9999206713624029	WITHOUT_CLASSIFICATION	7.932863759704615E-5	DESIGN
redo jump handling	WITHOUT_CLASSIFICATION	0.9990523088128722	WITHOUT_CLASSIFICATION	9.476911871277265E-4	DESIGN
clear the redo	WITHOUT_CLASSIFICATION	0.9997814562120589	WITHOUT_CLASSIFICATION	2.1854378794100929E-4	DESIGN
get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9992320222392488	WITHOUT_CLASSIFICATION	7.6797776075131E-4	DESIGN
throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9975297018108017	WITHOUT_CLASSIFICATION	0.0024702981891982848	DESIGN
finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.99929774143222	WITHOUT_CLASSIFICATION	7.022585677798879E-4	DESIGN
call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9970321245365297	WITHOUT_CLASSIFICATION	0.0029678754634702115	DESIGN
No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999833716802872	WITHOUT_CLASSIFICATION	1.66283197128659E-5	DESIGN
actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9995737268670178	WITHOUT_CLASSIFICATION	4.262731329821733E-4	DESIGN
actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9996406266918516	WITHOUT_CLASSIFICATION	3.593733081484717E-4	DESIGN
simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9995058038905014	WITHOUT_CLASSIFICATION	4.941961094986404E-4	DESIGN
in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9356640386676972	WITHOUT_CLASSIFICATION	0.06433596133230284	DESIGN
in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9356640386676972	WITHOUT_CLASSIFICATION	0.06433596133230284	DESIGN
normal all-rest method	WITHOUT_CLASSIFICATION	0.9995961383137999	WITHOUT_CLASSIFICATION	4.0386168620014455E-4	DESIGN
for zero, one, two, three arities, JavaMethod.JavaMethod.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.999949677710723	WITHOUT_CLASSIFICATION	5.032228927699834E-5	DESIGN
promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9941436480872651	WITHOUT_CLASSIFICATION	0.005856351912734915	DESIGN
return	WITHOUT_CLASSIFICATION	0.9995656971596356	WITHOUT_CLASSIFICATION	4.343028403643576E-4	DESIGN
just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.999892533207933	WITHOUT_CLASSIFICATION	1.0746679206696733E-4	DESIGN
just confirm args length == required	WITHOUT_CLASSIFICATION	0.9992290039314798	WITHOUT_CLASSIFICATION	7.709960685200787E-4	DESIGN
confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9997914443111177	WITHOUT_CLASSIFICATION	2.0855568888236784E-4	DESIGN
confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9980332961983853	WITHOUT_CLASSIFICATION	0.0019667038016146807	DESIGN
Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.999561661949368	WITHOUT_CLASSIFICATION	4.383380506319336E-4	DESIGN
tc	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
self name	WITHOUT_CLASSIFICATION	0.9986260008125107	WITHOUT_CLASSIFICATION	0.0013739991874892887	DESIGN
no args	WITHOUT_CLASSIFICATION	0.9995352233789068	WITHOUT_CLASSIFICATION	4.647766210931263E-4	DESIGN
variable args with block	WITHOUT_CLASSIFICATION	0.9990142732821098	WITHOUT_CLASSIFICATION	9.85726717890259E-4	DESIGN
variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9996204953839652	WITHOUT_CLASSIFICATION	3.795046160347071E-4	DESIGN
zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9997602471116412	WITHOUT_CLASSIFICATION	2.3975288835881411E-4	DESIGN
one arg with block	WITHOUT_CLASSIFICATION	0.9994624830339888	WITHOUT_CLASSIFICATION	5.375169660112253E-4	DESIGN
one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9987612957261872	WITHOUT_CLASSIFICATION	0.0012387042738127654	DESIGN
two args with block	WITHOUT_CLASSIFICATION	0.9985207430504083	WITHOUT_CLASSIFICATION	0.0014792569495916583	DESIGN
two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9975141005464354	WITHOUT_CLASSIFICATION	0.0024858994535644913	DESIGN
three args with block	WITHOUT_CLASSIFICATION	0.9990728110724887	WITHOUT_CLASSIFICATION	9.271889275112914E-4	DESIGN
three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9989732964751535	WITHOUT_CLASSIFICATION	0.001026703524846457	DESIGN
load block if it accepts block	WITHOUT_CLASSIFICATION	0.9985119140430188	WITHOUT_CLASSIFICATION	0.00148808595698123	DESIGN
all other arg cases with block	WITHOUT_CLASSIFICATION	0.9964943054532573	WITHOUT_CLASSIFICATION	0.0035056945467427272	DESIGN
all other arg cases without block	WITHOUT_CLASSIFICATION	0.9982819117567192	WITHOUT_CLASSIFICATION	0.0017180882432808245	DESIGN
one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9996658878086059	WITHOUT_CLASSIFICATION	3.3411219139418296E-4	DESIGN
two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9993288733738505	WITHOUT_CLASSIFICATION	6.711266261495323E-4	DESIGN
three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9998107797996313	WITHOUT_CLASSIFICATION	1.8922020036872862E-4	DESIGN
load target for invocations	WITHOUT_CLASSIFICATION	0.9996744610049286	WITHOUT_CLASSIFICATION	3.2553899507129294E-4	DESIGN
load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9998915240212503	WITHOUT_CLASSIFICATION	1.0847597874973792E-4	DESIGN
static invocation	WITHOUT_CLASSIFICATION	0.9991190971124633	WITHOUT_CLASSIFICATION	8.809028875366074E-4	DESIGN
virtual invocation	WITHOUT_CLASSIFICATION	0.9998233812618632	WITHOUT_CLASSIFICATION	1.766187381366525E-4	DESIGN
void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9961776048544765	WITHOUT_CLASSIFICATION	0.003822395145523529	DESIGN
normal finally and exit	WITHOUT_CLASSIFICATION	0.9998308882776039	WITHOUT_CLASSIFICATION	1.6911172239613458E-4	DESIGN
promise to implement one to N	WITHOUT_CLASSIFICATION	0.9711262984473055	WITHOUT_CLASSIFICATION	0.02887370155269455	DESIGN
call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9970321245365297	WITHOUT_CLASSIFICATION	0.0029678754634702115	DESIGN
these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.998162865026681	WITHOUT_CLASSIFICATION	0.0018371349733191584	DESIGN
method itself ThreadContext invoked name	WITHOUT_CLASSIFICATION	0.982757490958211	WITHOUT_CLASSIFICATION	0.01724250904178898	DESIGN
method itself ThreadContext invoked name	WITHOUT_CLASSIFICATION	0.982757490958211	WITHOUT_CLASSIFICATION	0.01724250904178898	DESIGN
singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9988946609097001	WITHOUT_CLASSIFICATION	0.001105339090299818	DESIGN
For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.8783179971007891	WITHOUT_CLASSIFICATION	0.12168200289921091	DESIGN
SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9988086530547068	WITHOUT_CLASSIFICATION	0.0011913469452933098	DESIGN
never reached	WITHOUT_CLASSIFICATION	0.9997647975515754	WITHOUT_CLASSIFICATION	2.3520244842459086E-4	DESIGN
promise to implement N with block	WITHOUT_CLASSIFICATION	0.9684149285730655	WITHOUT_CLASSIFICATION	0.03158507142693435	DESIGN
promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9947108489371287	WITHOUT_CLASSIFICATION	0.005289151062871366	DESIGN
promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9738641740074138	WITHOUT_CLASSIFICATION	0.026135825992586167	DESIGN
promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.947636641588255	WITHOUT_CLASSIFICATION	0.05236335841174486	DESIGN
promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9962985614962234	WITHOUT_CLASSIFICATION	0.0037014385037765275	DESIGN
promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9815939069540904	WITHOUT_CLASSIFICATION	0.01840609304590957	DESIGN
promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9628271470645615	WITHOUT_CLASSIFICATION	0.03717285293543844	DESIGN
promise to implement three with block	WITHOUT_CLASSIFICATION	0.9777194172010262	WITHOUT_CLASSIFICATION	0.022280582798973762	DESIGN
promise to implement N	WITHOUT_CLASSIFICATION	0.9651266550662448	WITHOUT_CLASSIFICATION	0.034873344933755095	DESIGN
DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9988086530547068	WITHOUT_CLASSIFICATION	0.0011913469452933098	DESIGN
We promote our box to being its own box since we're changing visibilities, and need it to be reflected on this method object independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9458465387434479	WITHOUT_CLASSIFICATION	0.054153461256552037	DESIGN
Normally we could leave these to fall back on the superclass, but since it dispatches through the [] version below, which may dispatch through the []+block version, we can save it a couple hops by overriding these here.	WITHOUT_CLASSIFICATION	0.9191572923144206	WITHOUT_CLASSIFICATION	0.08084270768557941	DESIGN
promise to implement two to N	WITHOUT_CLASSIFICATION	0.9423140283548415	WITHOUT_CLASSIFICATION	0.05768597164515854	DESIGN
promise to implement three to N	WITHOUT_CLASSIFICATION	0.9830410154987097	WITHOUT_CLASSIFICATION	0.016958984501290214	DESIGN
promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9971953596198698	WITHOUT_CLASSIFICATION	0.002804640380130081	DESIGN
promise to implement one to three	WITHOUT_CLASSIFICATION	0.9860033517322513	WITHOUT_CLASSIFICATION	0.013996648267748673	DESIGN
promise to implement two to three	WITHOUT_CLASSIFICATION	0.971602374162555	WITHOUT_CLASSIFICATION	0.02839762583744496	DESIGN
promise to implement three	WITHOUT_CLASSIFICATION	0.9753751883304272	WITHOUT_CLASSIFICATION	0.024624811669572737	DESIGN
all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9974760414417762	WITHOUT_CLASSIFICATION	0.002523958558223978	DESIGN
load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9972900794176758	WITHOUT_CLASSIFICATION	0.0027099205823241683	DESIGN
open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999050410375283	WITHOUT_CLASSIFICATION	9.495896247167203E-5	DESIGN
construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9998391046209628	WITHOUT_CLASSIFICATION	1.6089537903721094E-4	DESIGN
fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9980278723893927	WITHOUT_CLASSIFICATION	0.0019721276106072017	DESIGN
create constructor	WITHOUT_CLASSIFICATION	0.9969072031924103	WITHOUT_CLASSIFICATION	0.003092796807589596	DESIGN
wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999745277296552	WITHOUT_CLASSIFICATION	2.547227034481456E-5	DESIGN
end constructor	WITHOUT_CLASSIFICATION	0.9991595982520237	WITHOUT_CLASSIFICATION	8.404017479762736E-4	DESIGN
start setup method	WITHOUT_CLASSIFICATION	0.9996504216052416	WITHOUT_CLASSIFICATION	3.495783947582834E-4	DESIGN
set RubyClass	WITHOUT_CLASSIFICATION	0.9984089177209694	WITHOUT_CLASSIFICATION	0.0015910822790305566	DESIGN
set Ruby	WITHOUT_CLASSIFICATION	0.9982552280114869	WITHOUT_CLASSIFICATION	0.001744771988513076	DESIGN
all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999966581943148	WITHOUT_CLASSIFICATION	3.34180568518649E-6	DESIGN
try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9996386467667792	WITHOUT_CLASSIFICATION	3.6135323322093114E-4	DESIGN
get current context	WITHOUT_CLASSIFICATION	0.9999139627141423	WITHOUT_CLASSIFICATION	8.603728585775254E-5	DESIGN
load self, class, and name	WITHOUT_CLASSIFICATION	0.9972962596520024	WITHOUT_CLASSIFICATION	0.0027037403479975145	DESIGN
construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9998391046209628	WITHOUT_CLASSIFICATION	1.6089537903721094E-4	DESIGN
fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9980278723893927	WITHOUT_CLASSIFICATION	0.0019721276106072017	DESIGN
create constructor	WITHOUT_CLASSIFICATION	0.9969072031924103	WITHOUT_CLASSIFICATION	0.003092796807589596	DESIGN
end constructor	WITHOUT_CLASSIFICATION	0.9991595982520237	WITHOUT_CLASSIFICATION	8.404017479762736E-4	DESIGN
for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9983387288597106	WITHOUT_CLASSIFICATION	0.001661271140289388	DESIGN
load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9903280097852686	WITHOUT_CLASSIFICATION	0.00967199021473145	DESIGN
convert to IRubyObject	WITHOUT_CLASSIFICATION	0.999191153065155	WITHOUT_CLASSIFICATION	8.088469348448726E-4	DESIGN
load null block	WITHOUT_CLASSIFICATION	0.9990586906499651	WITHOUT_CLASSIFICATION	9.413093500347885E-4	DESIGN
invoke method	WITHOUT_CLASSIFICATION	0.9994958086017514	WITHOUT_CLASSIFICATION	5.041913982487224E-4	DESIGN
if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999679955212719	WITHOUT_CLASSIFICATION	3.200447872818292E-5	DESIGN
end setup method	WITHOUT_CLASSIFICATION	0.9997749904247237	WITHOUT_CLASSIFICATION	2.250095752763365E-4	DESIGN
end class	WITHOUT_CLASSIFICATION	0.9991129685423287	WITHOUT_CLASSIFICATION	8.870314576712332E-4	DESIGN
create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9917828511513184	WITHOUT_CLASSIFICATION	0.008217148848681704	DESIGN
store the wrapper	WITHOUT_CLASSIFICATION	0.99998212304719	WITHOUT_CLASSIFICATION	1.7876952810004828E-5	DESIGN
prepare temp locals	WITHOUT_CLASSIFICATION	0.999725385174225	WITHOUT_CLASSIFICATION	2.7461482577487037E-4	DESIGN
Try to look up field for simple name get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999658588663848	WITHOUT_CLASSIFICATION	3.414113361523349E-5	DESIGN
field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9995569978772527	WITHOUT_CLASSIFICATION	4.4300212274729015E-4	DESIGN
try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9995643201265023	WITHOUT_CLASSIFICATION	4.3567987349762483E-4	DESIGN
store it	WITHOUT_CLASSIFICATION	0.9998668327279542	WITHOUT_CLASSIFICATION	1.331672720457898E-4	DESIGN
end of try block	WITHOUT_CLASSIFICATION	0.9999019463894651	WITHOUT_CLASSIFICATION	9.805361053502282E-5	DESIGN
finally block to release monitor	WITHOUT_CLASSIFICATION	0.9961644147896515	WITHOUT_CLASSIFICATION	0.003835585210348577	DESIGN
exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9932552461091958	WITHOUT_CLASSIFICATION	0.006744753890804203	DESIGN
re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9993158016729857	WITHOUT_CLASSIFICATION	6.841983270143643E-4	DESIGN
load self, class, and name	WITHOUT_CLASSIFICATION	0.9972962596520024	WITHOUT_CLASSIFICATION	0.0027037403479975145	DESIGN
load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9903280097852686	WITHOUT_CLASSIFICATION	0.00967199021473145	DESIGN
convert to IRubyObject	WITHOUT_CLASSIFICATION	0.999191153065155	WITHOUT_CLASSIFICATION	8.088469348448726E-4	DESIGN
invoke method	WITHOUT_CLASSIFICATION	0.9994958086017514	WITHOUT_CLASSIFICATION	5.041913982487224E-4	DESIGN
if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999679955212719	WITHOUT_CLASSIFICATION	3.200447872818292E-5	DESIGN
end setup method	WITHOUT_CLASSIFICATION	0.9997749904247237	WITHOUT_CLASSIFICATION	2.250095752763365E-4	DESIGN
end class	WITHOUT_CLASSIFICATION	0.9991129685423287	WITHOUT_CLASSIFICATION	8.870314576712332E-4	DESIGN
create the class	WITHOUT_CLASSIFICATION	0.9980869775125352	WITHOUT_CLASSIFICATION	0.0019130224874647672	DESIGN
method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9987503376242417	WITHOUT_CLASSIFICATION	0.0012496623757583367	DESIGN
perform the dispatch	WITHOUT_CLASSIFICATION	0.9998907599435058	WITHOUT_CLASSIFICATION	1.092400564940353E-4	DESIGN
try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.999612063873324	WITHOUT_CLASSIFICATION	3.8793612667590373E-4	DESIGN
up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9988990093230421	WITHOUT_CLASSIFICATION	0.0011009906769579212	DESIGN
up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9988990093230421	WITHOUT_CLASSIFICATION	0.0011009906769579212	DESIGN
setup the class	WITHOUT_CLASSIFICATION	0.9992792956007986	WITHOUT_CLASSIFICATION	7.207043992014074E-4	DESIGN
now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9979163227468874	WITHOUT_CLASSIFICATION	0.0020836772531126263	DESIGN
do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9978727104183065	WITHOUT_CLASSIFICATION	0.0021272895816934322	DESIGN
probably a primitive	WITHOUT_CLASSIFICATION	0.9752399156915579	WITHOUT_CLASSIFICATION	0.02476008430844218	DESIGN
interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9998312655163398	WITHOUT_CLASSIFICATION	1.6873448366011885E-4	DESIGN
construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9963680356490822	WITHOUT_CLASSIFICATION	0.00363196435091783	DESIGN
set the full name	WITHOUT_CLASSIFICATION	0.9951105272684794	WITHOUT_CLASSIFICATION	0.0048894727315206285	DESIGN
include all interfaces	WITHOUT_CLASSIFICATION	0.9990174292816296	WITHOUT_CLASSIFICATION	9.825707183703512E-4	DESIGN
if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999554654992334	WITHOUT_CLASSIFICATION	4.453450076655368E-5	DESIGN
add array construction methods	WITHOUT_CLASSIFICATION	0.9997953937270566	WITHOUT_CLASSIFICATION	2.0460627294338138E-4	DESIGN
add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9995576628647068	WITHOUT_CLASSIFICATION	4.423371352932096E-4	DESIGN
add all instance and static methods	WITHOUT_CLASSIFICATION	0.9916660706526271	WITHOUT_CLASSIFICATION	0.008333929347372896	DESIGN
proxy is complete, return it	WITHOUT_CLASSIFICATION	0.999766421260657	WITHOUT_CLASSIFICATION	2.335787393430408E-4	DESIGN
too much array creation!	WITHOUT_CLASSIFICATION	0.9969650309190902	WITHOUT_CLASSIFICATION	0.003034969080909723	DESIGN
only include static methods if specified	WITHOUT_CLASSIFICATION	0.9980686425001593	WITHOUT_CLASSIFICATION	0.0019313574998408287	DESIGN
add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9993576081951374	WITHOUT_CLASSIFICATION	6.423918048625083E-4	DESIGN
add all static variables	WITHOUT_CLASSIFICATION	0.9986062779226678	WITHOUT_CLASSIFICATION	0.0013937220773322064	DESIGN
only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.999990181163498	WITHOUT_CLASSIFICATION	9.818836501995455E-6	DESIGN
looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999921557675406	WITHOUT_CLASSIFICATION	7.844232459272714E-6	DESIGN
NOTE: The five match methods are arity-split to avoid the cost of boxing arguments when there's already a cached match. Do not condense them into a single method.	WITHOUT_CLASSIFICATION	0.9999950724436055	WITHOUT_CLASSIFICATION	4.927556394407311E-6	DESIGN
TODO: This is where we would want to do precision checks to see if it's non-destructive to coerce a given type into the target integral primitive	WITHOUT_CLASSIFICATION	0.840220646276984	DESIGN	0.15977935372301597	WITHOUT_CLASSIFICATION
long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9990927508368366	WITHOUT_CLASSIFICATION	9.072491631634673E-4	DESIGN
double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999144794566265	WITHOUT_CLASSIFICATION	8.552054337345498E-5	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.5001018236306697	DESIGN	0.49989817636933026	WITHOUT_CLASSIFICATION
read-volatile	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9971283024579606	WITHOUT_CLASSIFICATION	0.0028716975420395143	DESIGN
we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9998878492214297	WITHOUT_CLASSIFICATION	1.1215077857026845E-4	DESIGN
If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9997696294237135	WITHOUT_CLASSIFICATION	2.3037057628648048E-4	DESIGN
line 326	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
read-volatile	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9971283024579606	WITHOUT_CLASSIFICATION	0.0028716975420395143	DESIGN
too much array creation!	WITHOUT_CLASSIFICATION	0.9969650309190902	WITHOUT_CLASSIFICATION	0.003034969080909723	DESIGN
construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9997975274259716	WITHOUT_CLASSIFICATION	2.024725740284364E-4	DESIGN
Get map of all fields we want to define.	WITHOUT_CLASSIFICATION	0.9995555581748327	WITHOUT_CLASSIFICATION	4.4444182516726634E-4	DESIGN
Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9974197123204517	WITHOUT_CLASSIFICATION	0.002580287679548224	DESIGN
Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9895719047875658	WITHOUT_CLASSIFICATION	0.010428095212434126	DESIGN
We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9985341443938726	WITHOUT_CLASSIFICATION	0.0014658556061274578	DESIGN
dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9994992717639586	WITHOUT_CLASSIFICATION	5.007282360414191E-4	DESIGN
initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9981267678843453	WITHOUT_CLASSIFICATION	0.0018732321156547283	DESIGN
initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9986838213372163	WITHOUT_CLASSIFICATION	0.0013161786627836393	DESIGN
not allowed for original (non-generated) Java classes note: not allowing for any previously created class right now; this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9818001689579985	WITHOUT_CLASSIFICATION	0.01819983104200154	DESIGN
setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.97217989026955	WITHOUT_CLASSIFICATION	0.027820109730450064	DESIGN
First we make modifications to the class, to adapt it to being both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9911967461803868	WITHOUT_CLASSIFICATION	0.00880325381961321	DESIGN
list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9864352109308963	WITHOUT_CLASSIFICATION	0.013564789069103734	DESIGN
We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9994617945483778	WITHOUT_CLASSIFICATION	5.382054516222157E-4	DESIGN
The replacement "new" allocates and inits the Ruby object as before, but also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999996635593192	WITHOUT_CLASSIFICATION	3.3644068083467314E-7	DESIGN
Next, we define a few private methods that we'll use to manipulate the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9261581518581027	WITHOUT_CLASSIFICATION	0.07384184814189725	DESIGN
jcreate instantiates the proxy object which implements all interfaces and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9488884439435188	WITHOUT_CLASSIFICATION	0.051111556056481135	DESIGN
Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.999520378878599	WITHOUT_CLASSIFICATION	4.796211214009587E-4	DESIGN
implement all forces implementation of all interfaces we intend for this class to implement	WITHOUT_CLASSIFICATION	0.7626906610866171	WITHOUT_CLASSIFICATION	0.23730933891338293	DESIGN
we've already done the above priming logic, just add another interface to the list of intentions unless we're past the point of no return or already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9995401818258672	WITHOUT_CLASSIFICATION	4.5981817413287513E-4	DESIGN
walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9996602222482962	WITHOUT_CLASSIFICATION	3.397777517037805E-4	DESIGN
construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9701023624186103	WITHOUT_CLASSIFICATION	0.029897637581389826	DESIGN
assuming the user wants a collection of interfaces that can be included together. make it so.	WITHOUT_CLASSIFICATION	0.9988508305592982	WITHOUT_CLASSIFICATION	0.0011491694407017232	DESIGN
not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9998101232137969	WITHOUT_CLASSIFICATION	1.8987678620313814E-4	DESIGN
To turn a module into an "interface collection" we add a class instance variable to hold the list of interfaces, and modify append_features for this module to call append_features on each of those interfaces as well	WITHOUT_CLASSIFICATION	0.7410912635571559	WITHOUT_CLASSIFICATION	0.2589087364428441	DESIGN
already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.999672923757727	WITHOUT_CLASSIFICATION	3.270762422730426E-4	DESIGN
array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9991856162036415	WITHOUT_CLASSIFICATION	8.143837963584149E-4	DESIGN
keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9986000932652703	WITHOUT_CLASSIFICATION	0.0013999067347296229	DESIGN
array creation should use this variant	WITHOUT_CLASSIFICATION	0.819596956239254	WITHOUT_CLASSIFICATION	0.18040304376074598	DESIGN
parent.setConstant(name, proxyClass); where the name should come from ?	WITHOUT_CLASSIFICATION	0.9908497471821274	WITHOUT_CLASSIFICATION	0.00915025281787265	DESIGN
including interface module so old-style interface "subclasses" will respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9998618902433608	WITHOUT_CLASSIFICATION	1.3810975663922185E-4	DESIGN
add reference to interface module	WITHOUT_CLASSIFICATION	0.9981183089691682	WITHOUT_CLASSIFICATION	0.0018816910308317918	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9983033731510164	WITHOUT_CLASSIFICATION	0.0016966268489837033	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9983033731510164	WITHOUT_CLASSIFICATION	0.0016966268489837033	DESIGN
proxy is complete, return it	WITHOUT_CLASSIFICATION	0.999766421260657	WITHOUT_CLASSIFICATION	2.335787393430408E-4	DESIGN
same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999087882764159	WITHOUT_CLASSIFICATION	9.12117235840553E-5	DESIGN
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999917931794945	WITHOUT_CLASSIFICATION	8.206820505463532E-6	DESIGN
weakly reserved names	WITHOUT_CLASSIFICATION	0.9990102028322948	WITHOUT_CLASSIFICATION	9.89797167705285E-4	DESIGN
called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999642530521422	WITHOUT_CLASSIFICATION	3.5746947857770374E-5	DESIGN
called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999642530521422	WITHOUT_CLASSIFICATION	3.5746947857770374E-5	DESIGN
modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999938079577196	WITHOUT_CLASSIFICATION	6.1920422803077646E-6	DESIGN
if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.999963558183557	WITHOUT_CLASSIFICATION	3.644181644310105E-5	DESIGN
caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.999707233033061	WITHOUT_CLASSIFICATION	2.9276696693904416E-4	DESIGN
proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9986359433114528	WITHOUT_CLASSIFICATION	0.0013640566885472344	DESIGN
proxy class for concrete classes. also used for "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.812104306805905	WITHOUT_CLASSIFICATION	0.18789569319409502	DESIGN
readable only by thread building proxy, so don't need to be volatile. used to handle recursive calls to getProxyClass/Module while proxy is being constructed (usually when a constant defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.6631562457505055	WITHOUT_CLASSIFICATION	0.33684375424949464	DESIGN
allow proxy to be read without synchronization. if proxy is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.999985781588668	WITHOUT_CLASSIFICATION	1.4218411331918432E-5	DESIGN
Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9997605544554222	WITHOUT_CLASSIFICATION	2.3944554457769533E-4	DESIGN
proxy is under construction, building thread can safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999451675398426	WITHOUT_CLASSIFICATION	5.483246015734816E-5	DESIGN
Add property name aliases	WITHOUT_CLASSIFICATION	0.9990310126513808	WITHOUT_CLASSIFICATION	9.689873486193095E-4	DESIGN
getFoo => foo getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9997305368205022	WITHOUT_CLASSIFICATION	2.694631794978562E-4	DESIGN
setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9995877866328702	WITHOUT_CLASSIFICATION	4.1221336712973853E-4	DESIGN
isFoo() => foo, isFoo() => foo()	WITHOUT_CLASSIFICATION	0.9996097318260934	WITHOUT_CLASSIFICATION	3.902681739066794E-4	DESIGN
Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9997300238515145	WITHOUT_CLASSIFICATION	2.699761484854202E-4	DESIGN
is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9988086530547068	WITHOUT_CLASSIFICATION	0.0011913469452933098	DESIGN
something?	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999808990310755	WITHOUT_CLASSIFICATION	1.910096892448764E-5	DESIGN
setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999808990310755	WITHOUT_CLASSIFICATION	1.910096892448764E-5	DESIGN
Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999419185772122	WITHOUT_CLASSIFICATION	5.808142278786935E-5	DESIGN
Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999419185772122	WITHOUT_CLASSIFICATION	5.808142278786935E-5	DESIGN
create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999712776208879	WITHOUT_CLASSIFICATION	2.872237911208386E-5	DESIGN
we need to collect all methods, though we'll only install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9885395710947544	WITHOUT_CLASSIFICATION	0.011460428905245502	DESIGN
Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9689549487283267	WITHOUT_CLASSIFICATION	0.031045051271673306	DESIGN
now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9964715578456531	WITHOUT_CLASSIFICATION	0.003528442154346933	DESIGN
old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9988034826562503	WITHOUT_CLASSIFICATION	0.0011965173437496752	DESIGN
1.9 support for encodings	WITHOUT_CLASSIFICATION	0.996674359335029	WITHOUT_CLASSIFICATION	0.003325640664970922	DESIGN
double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9993487845993237	WITHOUT_CLASSIFICATION	6.512154006762488E-4	DESIGN
setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9995877866328702	WITHOUT_CLASSIFICATION	4.1221336712973853E-4	DESIGN
isFoo() => foo, isFoo() => foo()	WITHOUT_CLASSIFICATION	0.9996097318260934	WITHOUT_CLASSIFICATION	3.902681739066794E-4	DESIGN
is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9988086530547068	WITHOUT_CLASSIFICATION	0.0011913469452933098	DESIGN
one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9942882921363713	WITHOUT_CLASSIFICATION	0.005711707863628831	DESIGN
Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9613712890059236	WITHOUT_CLASSIFICATION	0.038628710994076436	DESIGN
note: intentionally returning the actual array returned from Java, rather than wrapping it in a RubyArray. wave of the future, when java_class will return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999332496500727	WITHOUT_CLASSIFICATION	6.675034992730759E-5	DESIGN
see note above re: return type	WITHOUT_CLASSIFICATION	0.9824204746949164	WITHOUT_CLASSIFICATION	0.01757952530508355	DESIGN
restrictive security policy; no matter, we only want public classes anyway	WITHOUT_CLASSIFICATION	0.9990456219878716	WITHOUT_CLASSIFICATION	9.543780121282407E-4	DESIGN
very restrictive policy (disallows Member.PUBLIC) we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9977759235769388	WITHOUT_CLASSIFICATION	0.0022240764230612034	DESIGN
one-dimensional array	WITHOUT_CLASSIFICATION	0.9994097323580695	WITHOUT_CLASSIFICATION	5.902676419305466E-4	DESIGN
n-dimensional array	WITHOUT_CLASSIFICATION	0.9996113321109473	WITHOUT_CLASSIFICATION	3.886678890526173E-4	DESIGN
if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999310402563604	WITHOUT_CLASSIFICATION	6.895974363952275E-5	DESIGN
we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9992869727188329	WITHOUT_CLASSIFICATION	7.130272811670039E-4	DESIGN
Proc implementing an interface, pull in the catch-all code that lets the proc get invoked no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9716114037651198	WITHOUT_CLASSIFICATION	0.028388596234880194	DESIGN
can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9996035082496191	WITHOUT_CLASSIFICATION	3.9649175038087745E-4	DESIGN
getFooBar() => fooBar?, foo_bar?()	WITHOUT_CLASSIFICATION	0.9997182877336722	WITHOUT_CLASSIFICATION	2.817122663277206E-4	DESIGN
If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.999822129033373	WITHOUT_CLASSIFICATION	1.7787096662698964E-4	DESIGN
many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9950828476334412	WITHOUT_CLASSIFICATION	0.004917152366558768	DESIGN
for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9998585804132025	WITHOUT_CLASSIFICATION	1.4141958679755024E-4	DESIGN
rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9997752103134472	WITHOUT_CLASSIFICATION	2.247896865528596E-4	DESIGN
the converters handle not only primitive types but also their boxed versions, so we should check if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9654703741031184	WITHOUT_CLASSIFICATION	0.034529625896881584	DESIGN
it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9997568490033681	WITHOUT_CLASSIFICATION	2.431509966318246E-4	DESIGN
we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999215576593294	WITHOUT_CLASSIFICATION	7.844234067047502E-5	DESIGN
set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9998140631702759	WITHOUT_CLASSIFICATION	1.859368297241959E-4	DESIGN
the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9997878366064462	WITHOUT_CLASSIFICATION	2.1216339355374167E-4	DESIGN
InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9991856162036415	WITHOUT_CLASSIFICATION	8.143837963584149E-4	DESIGN
also create the JavaProxy classes	WITHOUT_CLASSIFICATION	0.9999018120769323	WITHOUT_CLASSIFICATION	9.818792306767944E-5	DESIGN
The template for interface modules	WITHOUT_CLASSIFICATION	0.9998893299480229	WITHOUT_CLASSIFICATION	1.1067005197718118E-4	DESIGN
Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.999866029349076	WITHOUT_CLASSIFICATION	1.3397065092414143E-4	DESIGN
add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9990895416630663	WITHOUT_CLASSIFICATION	9.104583369336515E-4	DESIGN
add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.999048760466335	WITHOUT_CLASSIFICATION	9.512395336650287E-4	DESIGN
finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9990047718287881	WITHOUT_CLASSIFICATION	9.952281712118742E-4	DESIGN
shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9995547690426986	WITHOUT_CLASSIFICATION	4.452309573014585E-4	DESIGN
include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9893429917189877	WITHOUT_CLASSIFICATION	0.010657008281012377	DESIGN
java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.999436611380524	WITHOUT_CLASSIFICATION	5.633886194760172E-4	DESIGN
other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.999857319929348	WITHOUT_CLASSIFICATION	1.4268007065196858E-4	DESIGN
include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9940421185084621	WITHOUT_CLASSIFICATION	0.005957881491537903	DESIGN
JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9989298111003647	WITHOUT_CLASSIFICATION	0.0010701888996353687	DESIGN
add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9978544922453594	WITHOUT_CLASSIFICATION	0.0021455077546406165	DESIGN
add alias to meta	WITHOUT_CLASSIFICATION	0.9998170228129231	WITHOUT_CLASSIFICATION	1.8297718707682988E-4	DESIGN
we'll only map conventional class names to modules	WITHOUT_CLASSIFICATION	0.9986248990610722	WITHOUT_CLASSIFICATION	0.001375100938927758	DESIGN
expected	WITHOUT_CLASSIFICATION	0.9998452027877549	WITHOUT_CLASSIFICATION	1.5479721224515112E-4	DESIGN
Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.998991941120509	WITHOUT_CLASSIFICATION	0.0010080588794910176	DESIGN
upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999076276627366	WITHOUT_CLASSIFICATION	9.237233726354117E-5	DESIGN
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999917931794945	WITHOUT_CLASSIFICATION	8.206820505463532E-6	DESIGN
add alias to meta	WITHOUT_CLASSIFICATION	0.9998170228129231	WITHOUT_CLASSIFICATION	1.8297718707682988E-4	DESIGN
this is where we'll get connected when classes are opened using package module syntax.	WITHOUT_CLASSIFICATION	0.994939195072885	WITHOUT_CLASSIFICATION	0.00506080492711507	DESIGN
save package module as ivar in parent, and add method to parent so we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9770703317790884	WITHOUT_CLASSIFICATION	0.02292966822091155	DESIGN
this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.994164570883961	WITHOUT_CLASSIFICATION	0.005835429116039062	DESIGN
not primitive or lc class	WITHOUT_CLASSIFICATION	0.9928950232047368	WITHOUT_CLASSIFICATION	0.007104976795263236	DESIGN
not primitive or lc class	WITHOUT_CLASSIFICATION	0.9928950232047368	WITHOUT_CLASSIFICATION	0.007104976795263236	DESIGN
Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9987644122576024	WITHOUT_CLASSIFICATION	0.001235587742397681	DESIGN
Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9850905136717953	WITHOUT_CLASSIFICATION	0.014909486328204677	DESIGN
hashcode is a combination of the interfaces and the Ruby class we're using to implement them	WITHOUT_CLASSIFICATION	0.9753115017314625	WITHOUT_CLASSIFICATION	0.024688498268537428	DESIGN
if it's a singleton class and the real class is proc, we're doing closure conversion so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999292199047866	WITHOUT_CLASSIFICATION	7.078009521342931E-5	DESIGN
normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9994465923021438	WITHOUT_CLASSIFICATION	5.534076978560853E-4	DESIGN
Initialize some components.	WITHOUT_CLASSIFICATION	0.9985069083391296	WITHOUT_CLASSIFICATION	0.0014930916608703751	DESIGN
not synchronizing these methods, no harm if these values get set more than once. (also note that there's no chance of getting a partially initialized class/module, as happens-before is guaranteed by volatile write/read of constants table.)	WITHOUT_CLASSIFICATION	0.9998778069311897	WITHOUT_CLASSIFICATION	1.2219306881033697E-4	DESIGN
Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9226970872156468	WITHOUT_CLASSIFICATION	0.07730291278435311	DESIGN
for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999605591479543	WITHOUT_CLASSIFICATION	3.944085204574818E-5	DESIGN
for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999605591479543	WITHOUT_CLASSIFICATION	3.944085204574818E-5	DESIGN
no matching ctor found	WITHOUT_CLASSIFICATION	0.9995746101084168	WITHOUT_CLASSIFICATION	4.253898915832079E-4	DESIGN
Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9951595430399096	WITHOUT_CLASSIFICATION	0.004840456960090457	DESIGN
prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999670128908553	WITHOUT_CLASSIFICATION	3.298710914476708E-5	DESIGN
must be a public method	WITHOUT_CLASSIFICATION	0.9990441037191053	WITHOUT_CLASSIFICATION	9.558962808946603E-4	DESIGN
must be a public class	WITHOUT_CLASSIFICATION	0.9982119535622094	WITHOUT_CLASSIFICATION	0.0017880464377905494	DESIGN
must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9996887083528873	WITHOUT_CLASSIFICATION	3.1129164711273796E-4	DESIGN
Special classes like Collections.EMPTY_LIST are inner classes that are private but implement public interfaces. Their methods are all public methods for the public interface. Let these public methods execute via setAccessible(true).	WITHOUT_CLASSIFICATION	0.9363727550594192	WITHOUT_CLASSIFICATION	0.0636272449405808	DESIGN
search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.999661197186226	WITHOUT_CLASSIFICATION	3.3880281377396827E-4	DESIGN
no matching method found	WITHOUT_CLASSIFICATION	0.9991433072687292	WITHOUT_CLASSIFICATION	8.566927312707882E-4	DESIGN
this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.842114468584155	WITHOUT_CLASSIFICATION	0.15788553141584508	DESIGN
First we need to register the JRuby engine.	WITHOUT_CLASSIFICATION	0.9930863897199563	WITHOUT_CLASSIFICATION	0.006913610280043693	DESIGN
Now we create a new BSFManager.	WITHOUT_CLASSIFICATION	0.9989094924905596	WITHOUT_CLASSIFICATION	0.0010905075094404266	DESIGN
Initialize a simple Frame.	WITHOUT_CLASSIFICATION	0.9987157555085296	WITHOUT_CLASSIFICATION	0.00128424449147032	DESIGN
e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9994768118841603	WITHOUT_CLASSIFICATION	5.231881158397557E-4	DESIGN
e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9994768118841603	WITHOUT_CLASSIFICATION	5.231881158397557E-4	DESIGN
JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9998424794574269	WITHOUT_CLASSIFICATION	1.5752054257313616E-4	DESIGN
end class	WITHOUT_CLASSIFICATION	0.9991129685423287	WITHOUT_CLASSIFICATION	8.870314576712332E-4	DESIGN
this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.842114468584155	WITHOUT_CLASSIFICATION	0.15788553141584508	DESIGN
for our purposes, Accessibles are also Members, and vice-versa, so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9997310323247665	WITHOUT_CLASSIFICATION	2.6896767523360975E-4	DESIGN
Declare those components as beans in BSF. Then it will be possible to access those components in Ruby as global variables ($frame, $menubar, ...)	WITHOUT_CLASSIFICATION	0.9998917964160277	WITHOUT_CLASSIFICATION	1.0820358397232972E-4	DESIGN
Execute a Ruby script (add the menubar to the frame).	WITHOUT_CLASSIFICATION	0.9992497452841012	WITHOUT_CLASSIFICATION	7.502547158988435E-4	DESIGN
Execute Ruby statements.	WITHOUT_CLASSIFICATION	0.9991145527852735	WITHOUT_CLASSIFICATION	8.854472147263815E-4	DESIGN
Evaluates a Ruby expression and display the result.	WITHOUT_CLASSIFICATION	0.9990769426958903	WITHOUT_CLASSIFICATION	9.230573041095835E-4	DESIGN
Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9993470765471812	WITHOUT_CLASSIFICATION	6.529234528187515E-4	DESIGN
package scope	WITHOUT_CLASSIFICATION	0.9987861515645354	WITHOUT_CLASSIFICATION	0.0012138484354645574	DESIGN
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999917931794945	WITHOUT_CLASSIFICATION	8.206820505463532E-6	DESIGN
Ruby-level methods	WITHOUT_CLASSIFICATION	0.9991089277706227	WITHOUT_CLASSIFICATION	8.910722293773005E-4	DESIGN
need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9818633198565272	WITHOUT_CLASSIFICATION	0.018136680143472816	DESIGN
we only collect methods and interfaces for user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9998088991584695	WITHOUT_CLASSIFICATION	1.9110084153051263E-4	DESIGN
get JavaClass if this is the new proxy class; verify it matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999548918881528	WITHOUT_CLASSIFICATION	4.5108111847263434E-5	DESIGN
get any included interfaces	WITHOUT_CLASSIFICATION	0.9997320151237975	WITHOUT_CLASSIFICATION	2.679848762024578E-4	DESIGN
lock in the overridden methods for the new class, and any as-yet uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.999633752377683	WITHOUT_CLASSIFICATION	3.662476223169959E-4	DESIGN
statically initialized below	WITHOUT_CLASSIFICATION	0.9990712152005572	WITHOUT_CLASSIFICATION	9.28784799442738E-4	DESIGN
finish class initializer	WITHOUT_CLASSIFICATION	0.9983701087109734	WITHOUT_CLASSIFICATION	0.0016298912890266185	DESIGN
trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.99925013223424	WITHOUT_CLASSIFICATION	7.498677657600588E-4	DESIGN
should not happen!	WITHOUT_CLASSIFICATION	0.9708516310229722	WITHOUT_CLASSIFICATION	0.029148368977027765	DESIGN
start class	WITHOUT_CLASSIFICATION	0.9987437869064909	WITHOUT_CLASSIFICATION	0.0012562130935090323	DESIGN
make getter for handler	WITHOUT_CLASSIFICATION	0.9973858128570511	WITHOUT_CLASSIFICATION	0.002614187142948883	DESIGN
make getter for proxy class	WITHOUT_CLASSIFICATION	0.9967614697867092	WITHOUT_CLASSIFICATION	0.0032385302132909035	DESIGN
add (potentially) overridden names to the key. TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9562889715689153	DESIGN	0.04371102843108456	WITHOUT_CLASSIFICATION
We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9994949228000283	WITHOUT_CLASSIFICATION	5.050771999716905E-4	DESIGN
create static private method field	WITHOUT_CLASSIFICATION	0.9631494486235795	WITHOUT_CLASSIFICATION	0.0368505513764205	DESIGN
load static empty array	WITHOUT_CLASSIFICATION	0.9878468725102958	WITHOUT_CLASSIFICATION	0.01215312748970424	DESIGN
box arguments	WITHOUT_CLASSIFICATION	0.9998030892885676	WITHOUT_CLASSIFICATION	1.9691071143227326E-4	DESIGN
this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9916777811118433	WITHOUT_CLASSIFICATION	0.008322218888156608	DESIGN
construct the super-proxy method	WITHOUT_CLASSIFICATION	0.9993233380307247	WITHOUT_CLASSIFICATION	6.766619692752555E-4	DESIGN
do a void return	WITHOUT_CLASSIFICATION	0.9983485268694997	WITHOUT_CLASSIFICATION	0.0016514731305003452	DESIGN
utility methods	WITHOUT_CLASSIFICATION	0.9996810083524182	WITHOUT_CLASSIFICATION	3.189916475817384E-4	DESIGN
Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9987644122576024	WITHOUT_CLASSIFICATION	0.001235587742397681	DESIGN
store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9984319050443159	WITHOUT_CLASSIFICATION	0.0015680949556840188	DESIGN
use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.996981267907019	WITHOUT_CLASSIFICATION	0.0030187320929809564	DESIGN
no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9996597868268065	WITHOUT_CLASSIFICATION	3.402131731935811E-4	DESIGN
only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9988837739622547	WITHOUT_CLASSIFICATION	0.0011162260377452422	DESIGN
opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9981421174498717	WITHOUT_CLASSIFICATION	0.0018578825501282877	DESIGN
opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9976433497397982	WITHOUT_CLASSIFICATION	0.0023566502602017777	DESIGN
No block from a nil proc	WITHOUT_CLASSIFICATION	0.9991851762053069	WITHOUT_CLASSIFICATION	8.148237946930848E-4	DESIGN
If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9917561768775919	WITHOUT_CLASSIFICATION	0.008243823122408109	DESIGN
The current block is already associated with proc. No need to create a new one	WITHOUT_CLASSIFICATION	0.999953561642609	WITHOUT_CLASSIFICATION	4.643835739111541E-5	DESIGN
Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9992805931336126	WITHOUT_CLASSIFICATION	7.194068663873907E-4	DESIGN
NUL	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9976095806697922	WITHOUT_CLASSIFICATION	0.0023904193302078727	DESIGN
Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9996156056730061	WITHOUT_CLASSIFICATION	3.843943269939944E-4	DESIGN
'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9990173136749212	WITHOUT_CLASSIFICATION	9.826863250788026E-4	DESIGN
Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9963887873839564	WITHOUT_CLASSIFICATION	0.003611212616043631	DESIGN
read-volatile	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
read-volatile	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9955410552139542	WITHOUT_CLASSIFICATION	0.004458944786045822	DESIGN
must be power of 2 must be power of 2	WITHOUT_CLASSIFICATION	0.9992480248335128	WITHOUT_CLASSIFICATION	7.519751664871228E-4	DESIGN
Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9986689610754145	WITHOUT_CLASSIFICATION	0.0013310389245855924	DESIGN
note segmentShift differs from ConcurrentHashMap's calculation due to issues with System.identityHashCode (upper n bits always 0, at least under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9993009393948921	WITHOUT_CLASSIFICATION	6.990606051080271E-4	DESIGN
System.err.println("ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9989902905845716	WITHOUT_CLASSIFICATION	0.001009709415428486	DESIGN
protected void finalize() throws Throwable { System.err.println("ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); }	WITHOUT_CLASSIFICATION	0.9724808744050698	WITHOUT_CLASSIFICATION	0.027519125594930187	DESIGN
EntryRefs include hash with key to facilitate lookup by Segment#expunge after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9992077927841817	WITHOUT_CLASSIFICATION	7.922072158182643E-4	DESIGN
Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather makes it a final field. The theory is that doing so should force a happens-before relationship WRT the WeakReference constructor, guaranteeing that the key will be visibile to other threads (unless it's been GC'ed). See JLS 17.5 (final fields) and 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9994997738938993	WITHOUT_CLASSIFICATION	5.00226106100581E-4	DESIGN
references to the Java object and its proxy will either both be weak or both be soft, since the proxy contains a strong reference to the object, so it wouldn't make sense for the reference types to differ.	WITHOUT_CLASSIFICATION	0.9999376434481286	WITHOUT_CLASSIFICATION	6.235655187133351E-5	DESIGN
ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9424538320072388	WITHOUT_CLASSIFICATION	0.057546167992761264	DESIGN
must be called under lock	WITHOUT_CLASSIFICATION	0.99962105245351	WITHOUT_CLASSIFICATION	3.789475464900162E-4	DESIGN
must be called under lock	WITHOUT_CLASSIFICATION	0.99962105245351	WITHOUT_CLASSIFICATION	3.789475464900162E-4	DESIGN
must be called under lock	WITHOUT_CLASSIFICATION	0.99962105245351	WITHOUT_CLASSIFICATION	3.789475464900162E-4	DESIGN
note that we'll potentially see the refs for both the java object and proxy -- whichever we see first will cause the entry to be removed; the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9930184104829555	WITHOUT_CLASSIFICATION	0.006981589517044508	DESIGN
temp method to verify tableSize value must be called under lock	WITHOUT_CLASSIFICATION	0.9999010925470658	WITHOUT_CLASSIFICATION	9.890745293418977E-5	DESIGN
Single node in list	WITHOUT_CLASSIFICATION	0.9998193329685912	WITHOUT_CLASSIFICATION	1.806670314087626E-4	DESIGN
indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9989826427103313	WITHOUT_CLASSIFICATION	0.0010173572896686807	DESIGN
indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9989826427103313	WITHOUT_CLASSIFICATION	0.0010173572896686807	DESIGN
entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9957770249127169	WITHOUT_CLASSIFICATION	0.004222975087283078	DESIGN
Where we get new positions from.	WITHOUT_CLASSIFICATION	0.998198715332592	WITHOUT_CLASSIFICATION	0.0018012846674081268	DESIGN
Start of string ([, (, {, <, ', ", \n)	WITHOUT_CLASSIFICATION	0.9999493551521754	WITHOUT_CLASSIFICATION	5.064484782452894E-5	DESIGN
Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9997910137046874	WITHOUT_CLASSIFICATION	2.0898629531260475E-4	DESIGN
How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9978399065856162	WITHOUT_CLASSIFICATION	0.002160093414383803	DESIGN
For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9999131350041773	WITHOUT_CLASSIFICATION	8.686499582263387E-5	DESIGN
Last full line read.	WITHOUT_CLASSIFICATION	0.9994922959428201	WITHOUT_CLASSIFICATION	5.077040571799044E-4	DESIGN
Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9997076884841046	WITHOUT_CLASSIFICATION	2.92311515895297E-4	DESIGN
Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999442574635314	WITHOUT_CLASSIFICATION	5.574253646856927E-5	DESIGN
Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.999965992979195	WITHOUT_CLASSIFICATION	3.400702080498155E-5	DESIGN
Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.999965992979195	WITHOUT_CLASSIFICATION	3.400702080498155E-5	DESIGN
End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999302972398789	WITHOUT_CLASSIFICATION	6.970276012103745E-5	DESIGN
How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.998980804266335	WITHOUT_CLASSIFICATION	0.0010191957336650622	DESIGN
Single-quote fast path	WITHOUT_CLASSIFICATION	0.9994965348068012	WITHOUT_CLASSIFICATION	5.034651931988394E-4	DESIGN
Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9989703246873971	WITHOUT_CLASSIFICATION	0.0010296753126029243	DESIGN
Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9994169787242292	WITHOUT_CLASSIFICATION	5.830212757708511E-4	DESIGN
just ignore	WITHOUT_CLASSIFICATION	0.999510470310291	WITHOUT_CLASSIFICATION	4.895296897090298E-4	DESIGN
octal constant	WITHOUT_CLASSIFICATION	0.9994208074089013	WITHOUT_CLASSIFICATION	5.791925910986758E-4	DESIGN
hex constant	WITHOUT_CLASSIFICATION	0.9996160833121579	WITHOUT_CLASSIFICATION	3.83916687842101E-4	DESIGN
PUSH(1)	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
POP	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
PUSH(0). If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999979297287295	WITHOUT_CLASSIFICATION	2.070271270524464E-6	DESIGN
LEXPOP	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
SET_P	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9993462754279345	WITHOUT_CLASSIFICATION	6.537245720654306E-4	DESIGN
Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9990207500306966	WITHOUT_CLASSIFICATION	9.79249969303526E-4	DESIGN
Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9994666533708192	WITHOUT_CLASSIFICATION	5.333466291808215E-4	DESIGN
Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999566140555862	WITHOUT_CLASSIFICATION	4.338594441373971E-5	DESIGN
Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.999979112649128	WITHOUT_CLASSIFICATION	2.0887350872099982E-5	DESIGN
Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9998620400031107	WITHOUT_CLASSIFICATION	1.3795999688922405E-4	DESIGN
Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9996971560914348	WITHOUT_CLASSIFICATION	3.028439085651229E-4	DESIGN
Give a name to a value. Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.962658658371592	DESIGN	0.03734134162840793	WITHOUT_CLASSIFICATION
When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9971270076488483	WITHOUT_CLASSIFICATION	0.002872992351151782	DESIGN
Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9989715267973417	WITHOUT_CLASSIFICATION	0.0010284732026582778	DESIGN
Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9945103880879603	WITHOUT_CLASSIFICATION	0.005489611912039736	DESIGN
1.9 only	WITHOUT_CLASSIFICATION	0.9995870966152692	WITHOUT_CLASSIFICATION	4.129033847306973E-4	DESIGN
Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9994117036828645	WITHOUT_CLASSIFICATION	5.882963171354607E-4	DESIGN
Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9991393020862319	WITHOUT_CLASSIFICATION	8.60697913768032E-4	DESIGN
no mb || ismbchar(term)	WITHOUT_CLASSIFICATION	0.9994610292839418	WITHOUT_CLASSIFICATION	5.389707160581425E-4	DESIGN
Not normally used, but is left in here since it can be useful in debugging grammar and lexing problems.	WITHOUT_CLASSIFICATION	0.7806566186630584	WITHOUT_CLASSIFICATION	0.2193433813369416	DESIGN
DEBUGGING HELP	WITHOUT_CLASSIFICATION	0.9992251995788654	WITHOUT_CLASSIFICATION	7.748004211346419E-4	DESIGN
'\v'	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
end of script.	WITHOUT_CLASSIFICATION	0.9998167789563636	WITHOUT_CLASSIFICATION	1.8322104363651642E-4	DESIGN
white spaces	WITHOUT_CLASSIFICATION	0.9994680200219607	WITHOUT_CLASSIFICATION	5.319799780393136E-4	DESIGN
'\v'	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
it's a comment	WITHOUT_CLASSIFICATION	0.9979781725035771	WITHOUT_CLASSIFICATION	0.0020218274964229903	DESIGN
Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9984268406238456	WITHOUT_CLASSIFICATION	0.0015731593761545018	DESIGN
$\: output record separator	WITHOUT_CLASSIFICATION	0.9998247272417958	WITHOUT_CLASSIFICATION	1.7527275820418067E-4	DESIGN
EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9975357173019838	WITHOUT_CLASSIFICATION	0.002464282698016191	DESIGN
documentation nodes	WITHOUT_CLASSIFICATION	0.9998996323711595	WITHOUT_CLASSIFICATION	1.0036762884043466E-4	DESIGN
In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999228567811539	WITHOUT_CLASSIFICATION	7.71432188462043E-5	DESIGN
Just a plain bang	WITHOUT_CLASSIFICATION	0.9988995641761711	WITHOUT_CLASSIFICATION	0.0011004358238288904	DESIGN
$_: last read line string	WITHOUT_CLASSIFICATION	0.9999446064455099	WITHOUT_CLASSIFICATION	5.539355449025842E-5	DESIGN
$~: match-data	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
$: argv	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
$$: pid	WITHOUT_CLASSIFICATION	0.9991411017922578	WITHOUT_CLASSIFICATION	8.588982077421842E-4	DESIGN
$?: last status	WITHOUT_CLASSIFICATION	0.9992750535497366	WITHOUT_CLASSIFICATION	7.249464502635214E-4	DESIGN
$!: error string	WITHOUT_CLASSIFICATION	0.9992533545706869	WITHOUT_CLASSIFICATION	7.466454293130803E-4	DESIGN
$@: error position	WITHOUT_CLASSIFICATION	0.9977553297425361	WITHOUT_CLASSIFICATION	0.0022446702574639202	DESIGN
$/: input record separator	WITHOUT_CLASSIFICATION	0.999509400881923	WITHOUT_CLASSIFICATION	4.905991180771479E-4	DESIGN
$;: field separator	WITHOUT_CLASSIFICATION	0.9993423535157577	WITHOUT_CLASSIFICATION	6.576464842422692E-4	DESIGN
$,: output field separator	WITHOUT_CLASSIFICATION	0.9993568947311784	WITHOUT_CLASSIFICATION	6.431052688216087E-4	DESIGN
$.: last read line number	WITHOUT_CLASSIFICATION	0.999743608478315	WITHOUT_CLASSIFICATION	2.563915216849859E-4	DESIGN
$=: ignorecase	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
$:: load path	WITHOUT_CLASSIFICATION	0.9978759263264586	WITHOUT_CLASSIFICATION	0.0021240736735413496	DESIGN
$<: reading filename	WITHOUT_CLASSIFICATION	0.9999082285081673	WITHOUT_CLASSIFICATION	9.177149183269508E-5	DESIGN
$": already loaded files	WITHOUT_CLASSIFICATION	0.9997577384378704	WITHOUT_CLASSIFICATION	2.422615621296164E-4	DESIGN
$&: last match	WITHOUT_CLASSIFICATION	0.999830075565378	WITHOUT_CLASSIFICATION	1.6992443462195066E-4	DESIGN
$`: string before last match	WITHOUT_CLASSIFICATION	0.9998814450681562	WITHOUT_CLASSIFICATION	1.185549318437465E-4	DESIGN
$': string after last match	WITHOUT_CLASSIFICATION	0.9999204706434638	WITHOUT_CLASSIFICATION	7.952935653630957E-5	DESIGN
methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999416869474561	WITHOUT_CLASSIFICATION	5.8313052543839216E-5	DESIGN
See if it is a reserved word.	WITHOUT_CLASSIFICATION	0.9996103361020575	WITHOUT_CLASSIFICATION	3.8966389794246E-4	DESIGN
enum lex_state	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
block (primary)	WITHOUT_CLASSIFICATION	0.999400675437246	WITHOUT_CLASSIFICATION	5.993245627540318E-4	DESIGN
block (expr)	WITHOUT_CLASSIFICATION	0.999400675437246	WITHOUT_CLASSIFICATION	5.993245627540318E-4	DESIGN
hash	WITHOUT_CLASSIFICATION	0.9996421916739087	WITHOUT_CLASSIFICATION	3.5780832609131003E-4	DESIGN
ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.994177894529047	WITHOUT_CLASSIFICATION	0.005822105470952938	DESIGN
FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.724590428861015	WITHOUT_CLASSIFICATION	0.27540957113898484	DESIGN
We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9995548906508069	WITHOUT_CLASSIFICATION	4.451093491931648E-4	DESIGN
hexadecimal	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
binary	WITHOUT_CLASSIFICATION	0.9997314224851768	WITHOUT_CLASSIFICATION	2.685775148232335E-4	DESIGN
decimal	WITHOUT_CLASSIFICATION	0.9995708990602987	WITHOUT_CLASSIFICATION	4.291009397013236E-4	DESIGN
Octal	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
'_' in number just ignored	WITHOUT_CLASSIFICATION	0.9995252232995622	WITHOUT_CLASSIFICATION	4.747767004378071E-4	DESIGN
backslash	WITHOUT_CLASSIFICATION	0.9992288579210361	WITHOUT_CLASSIFICATION	7.711420789638499E-4	DESIGN
newline	WITHOUT_CLASSIFICATION	0.9994768483353391	WITHOUT_CLASSIFICATION	5.231516646609646E-4	DESIGN
horizontal tab	WITHOUT_CLASSIFICATION	0.9987408399951858	WITHOUT_CLASSIFICATION	0.0012591600048142237	DESIGN
form feed	WITHOUT_CLASSIFICATION	0.9990212450295345	WITHOUT_CLASSIFICATION	9.787549704655366E-4	DESIGN
vertical tab	WITHOUT_CLASSIFICATION	0.999117595500296	WITHOUT_CLASSIFICATION	8.824044997039434E-4	DESIGN
alarm(bell)	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
escape	WITHOUT_CLASSIFICATION	0.9992579535946156	WITHOUT_CLASSIFICATION	7.420464053844155E-4	DESIGN
hex constant	WITHOUT_CLASSIFICATION	0.9996160833121579	WITHOUT_CLASSIFICATION	3.83916687842101E-4	DESIGN
char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9998485410555926	WITHOUT_CLASSIFICATION	1.5145894440733775E-4	DESIGN
If \r\n then just pass along \n (windows). If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999945108535764	WITHOUT_CLASSIFICATION	5.489146423580088E-6	DESIGN
space	WITHOUT_CLASSIFICATION	0.9999366811763688	WITHOUT_CLASSIFICATION	6.33188236312497E-5	DESIGN
Where we started this marker match	WITHOUT_CLASSIFICATION	0.9965284725094541	WITHOUT_CLASSIFICATION	0.003471527490545975	DESIGN
Position within source must reflect the actual offset and column. Since we ate an extra character here (this accounting is normally done in read ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999452093979975	WITHOUT_CLASSIFICATION	5.4790602002424434E-5	DESIGN
We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9925206854532016	WITHOUT_CLASSIFICATION	0.007479314546798393	DESIGN
If \r\n then just pass along \n (windows). If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999945108535764	WITHOUT_CLASSIFICATION	5.489146423580088E-6	DESIGN
FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.5693814625805692	DESIGN	0.43061853741943074	WITHOUT_CLASSIFICATION
FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.5693814625805692	DESIGN	0.43061853741943074	WITHOUT_CLASSIFICATION
Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9993475453089581	WITHOUT_CLASSIFICATION	6.524546910419831E-4	DESIGN
Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9990900222753613	WITHOUT_CLASSIFICATION	9.099777246387073E-4	DESIGN
index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9995848260085117	WITHOUT_CLASSIFICATION	4.1517399148831855E-4	DESIGN
Character read before previous read	WITHOUT_CLASSIFICATION	0.9996922318250452	WITHOUT_CLASSIFICATION	3.077681749547999E-4	DESIGN
keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9532253950630706	WITHOUT_CLASSIFICATION	0.046774604936929406	DESIGN
NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9988086530547068	WITHOUT_CLASSIFICATION	0.0011913469452933098	DESIGN
BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. We did it here for now	WITHOUT_CLASSIFICATION	0.9910347684433157	DESIGN	0.008965231556684272	WITHOUT_CLASSIFICATION
Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9982938599422008	WITHOUT_CLASSIFICATION	0.001706140057799157	DESIGN
that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.6402595895373684	WITHOUT_CLASSIFICATION	0.3597404104626315	DESIGN
Rubygems is too specific on host cpu so until we have real need lets default to universal setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9993052137711153	WITHOUT_CLASSIFICATION	6.947862288847312E-4	DESIGN
Our shell scripts pass in non-canonicalized paths, but even if we didn't anyone who did would become unhappy because Ruby apps expect no relative operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9996373608560496	WITHOUT_CLASSIFICATION	3.6263914395039067E-4	DESIGN
this set is only for darwin	WITHOUT_CLASSIFICATION	0.9925263347662194	WITHOUT_CLASSIFICATION	0.007473665233780537	DESIGN
DigestLibrary	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
all errors, just info; do not prevent loading IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9398116919964432	WITHOUT_CLASSIFICATION	0.06018830800355683	DESIGN
all errors, just info; do not prevent unloading IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9451052851436009	WITHOUT_CLASSIFICATION	0.054894714856399025	DESIGN
do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.999942108367241	WITHOUT_CLASSIFICATION	5.7891632759085585E-5	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
line 329	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9991039935764315	WITHOUT_CLASSIFICATION	8.960064235685084E-4	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
dynamically increase	WITHOUT_CLASSIFICATION	0.9994241837787585	WITHOUT_CLASSIFICATION	5.758162212415534E-4	DESIGN
discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9983629748698222	WITHOUT_CLASSIFICATION	0.0016370251301778547	DESIGN
else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9995530289143472	WITHOUT_CLASSIFICATION	4.469710856527845E-4	DESIGN
shift to yyN	WITHOUT_CLASSIFICATION	0.9914736511573304	WITHOUT_CLASSIFICATION	0.008526348842669552	DESIGN
reduce (yyN)	WITHOUT_CLASSIFICATION	0.9990106591866583	WITHOUT_CLASSIFICATION	9.893408133416573E-4	DESIGN
leave stack alone	WITHOUT_CLASSIFICATION	0.999772616681949	WITHOUT_CLASSIFICATION	2.2738331805109918E-4	DESIGN
line 271	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 274	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 303	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 311	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 314	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 317	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 332	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 338	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 341	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 344	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 351	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 358	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 367	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 372	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 378	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 382	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 407	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 411	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 414	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 417	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 420	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 426	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 434	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 443	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 446	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 452	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 457	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 464	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 467	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 470	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 479	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 484	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 486	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 492	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 498	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 501	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 504	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 507	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 510	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 519	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 525	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
line 537	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 540	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 543	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 546	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 556	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 559	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 563	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 566	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 569	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 575	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 578	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 587	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 596	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 604	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 607	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 610	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 613	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 616	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 634	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 638	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 643	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 646	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 655	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 660	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 667	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 670	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 672	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 696	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 701	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 717	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 720	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 726	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 729	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 732	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 735	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 738	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 751	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 754	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 757	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 760	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 763	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 769	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 772	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 775	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 782	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 788	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 791	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 794	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 797	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 803	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 806	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 809	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 815	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 818	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 821	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 824	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 830	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 833	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 836	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 839	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 842	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 848	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 852	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 858	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 861	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 868	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 871	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 876	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 879	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 883	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 893	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 896	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 899	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 903	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 907	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 915	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 920	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 923	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 926	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 932	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 936	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 940	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 944	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 948	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 956	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 960	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 964	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 967	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 972	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 978	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 980	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 984	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 986	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 996	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1001	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1004	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1008	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1014	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1029	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1032	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1034	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1045	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1048	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1051	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1058	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1070	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1073	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1076	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1079	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1082	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1089	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1097	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1100	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1103	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1107	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1111	WITHOUT_CLASSIFICATION	0.9997449647612229	WITHOUT_CLASSIFICATION	2.5503523877710483E-4	DESIGN
line 1113	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1115	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1119	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1130	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1133	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1135	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1137	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1140	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1151	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1154	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1158	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1164	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1175	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1178	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1187	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1189	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1193	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1204	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1207	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1210	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1214	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1234	WITHOUT_CLASSIFICATION	0.9997415644484738	WITHOUT_CLASSIFICATION	2.584355515260586E-4	DESIGN
line 1239	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1243	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1247	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1251	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1263	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1269	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1280	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1283	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1290	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1296	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1299	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1302	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1309	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1313	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1315	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1320	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1328	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1335	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1348	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1352	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1358	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1374	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1381	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1387	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1392	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1415	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1431	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1434	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1440	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1443	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1453	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1456	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1462	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1465	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1470	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1477	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1480	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1485	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1488	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1496	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1502	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1510	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1513	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1516	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1533	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1550	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1553	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1556	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1565	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1568	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1571	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1574	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1577	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1587	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1595	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1598	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1600	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1609	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1623	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1626	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1629	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1632	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1638	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1641	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1644	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1649	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1655	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1658	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1661	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1672	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1677	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1687	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1694	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1705	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1708	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1725	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1733	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1742	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1745	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1749	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1757	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1769	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1772	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1775	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1784	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1808	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1814	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1818	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1822	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
force for args	WITHOUT_CLASSIFICATION	0.9991948661397884	WITHOUT_CLASSIFICATION	8.05133860211564E-4	DESIGN
XXX 0;	WITHOUT_CLASSIFICATION	0.976978701022141	WITHOUT_CLASSIFICATION	0.023021298977858932	DESIGN
$$ = $3;	WITHOUT_CLASSIFICATION	0.9997748998239994	WITHOUT_CLASSIFICATION	2.251001760005517E-4	DESIGN
}	WITHOUT_CLASSIFICATION	0.9986208339458441	WITHOUT_CLASSIFICATION	0.0013791660541558042	DESIGN
last expression should not be void	WITHOUT_CLASSIFICATION	0.9840593730033655	WITHOUT_CLASSIFICATION	0.01594062699663448	DESIGN
compstmt position includes both parens around it	WITHOUT_CLASSIFICATION	0.8367378994022711	WITHOUT_CLASSIFICATION	0.16326210059772894	DESIGN
$8 == null ? NilImplicitNode.NIL : $8;	WITHOUT_CLASSIFICATION	0.9800972329419607	WITHOUT_CLASSIFICATION	0.01990276705803926	DESIGN
$5 == null ? NilImplicitNode.NIL : $5;	WITHOUT_CLASSIFICATION	0.9800972329419607	WITHOUT_CLASSIFICATION	0.01990276705803926	DESIGN
NOEX_PRIVATE for toplevel	WITHOUT_CLASSIFICATION	0.9993928799384946	WITHOUT_CLASSIFICATION	6.071200615054363E-4	DESIGN
mirko: check	WITHOUT_CLASSIFICATION	0.9997328868247228	WITHOUT_CLASSIFICATION	2.671131752771562E-4	DESIGN
Include pipes on multiple arg type	WITHOUT_CLASSIFICATION	0.9855725213549732	WITHOUT_CLASSIFICATION	0.014427478645026736	DESIGN
line 529	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
.setPosFrom($2);	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
XXX	WITHOUT_CLASSIFICATION	0.9758448311953708	WITHOUT_CLASSIFICATION	0.024155168804629205	DESIGN
zero length array	WITHOUT_CLASSIFICATION	0.9998911651980911	WITHOUT_CLASSIFICATION	1.0883480190884286E-4	DESIGN
DStrNode: :"some text #{some expression}"	WITHOUT_CLASSIFICATION	0.9997192533624424	WITHOUT_CLASSIFICATION	2.80746637557692E-4	DESIGN
StrNode: :"some text"	WITHOUT_CLASSIFICATION	0.99881240596817	WITHOUT_CLASSIFICATION	0.0011875940318299952	DESIGN
EvStrNode :"#{some expression}"	WITHOUT_CLASSIFICATION	0.9991856162036415	WITHOUT_CLASSIFICATION	8.143837963584149E-4	DESIGN
line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9997550791724079	WITHOUT_CLASSIFICATION	2.4492082759212773E-4	DESIGN
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9986343655754161	WITHOUT_CLASSIFICATION	0.0013656344245839768	DESIGN
yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9991039935764315	WITHOUT_CLASSIFICATION	8.960064235685084E-4	DESIGN
line 7713 "-"	WITHOUT_CLASSIFICATION	0.9997705509817554	WITHOUT_CLASSIFICATION	2.2944901824464546E-4	DESIGN
local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9996965761697792	WITHOUT_CLASSIFICATION	3.03423830220675E-4	DESIGN
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999094664964396	WITHOUT_CLASSIFICATION	9.053350356036795E-5	DESIGN
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999094664964396	WITHOUT_CLASSIFICATION	9.053350356036795E-5	DESIGN
We know this is a block scope because a local scope cannot be within a local scope If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999891744963871	WITHOUT_CLASSIFICATION	1.0825503612823313E-5	DESIGN
ENEBO: 1.9 has CURR nodes for local/block variables. We don't. I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9868763000369769	WITHOUT_CLASSIFICATION	0.013123699963023138	DESIGN
odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9993842695935362	WITHOUT_CLASSIFICATION	6.157304064638643E-4	DESIGN
What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999159075636873	WITHOUT_CLASSIFICATION	8.409243631278966E-5	DESIGN
Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.985364363010538	WITHOUT_CLASSIFICATION	0.01463563698946191	DESIGN
We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999000201245489	WITHOUT_CLASSIFICATION	9.997987545099113E-5	DESIGN
Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9997783009430462	WITHOUT_CLASSIFICATION	2.216990569536864E-4	DESIGN
Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.998678719072736	WITHOUT_CLASSIFICATION	0.0013212809272640457	DESIGN
Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.968966168266237	WITHOUT_CLASSIFICATION	0.031033831733762878	DESIGN
__END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9984809640775641	WITHOUT_CLASSIFICATION	0.0015190359224357842	DESIGN
Parser states:	WITHOUT_CLASSIFICATION	0.9988494698828347	WITHOUT_CLASSIFICATION	0.001150530117165334	DESIGN
Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9975305311680618	WITHOUT_CLASSIFICATION	0.002469468831938169	DESIGN
Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.940850883071518	WITHOUT_CLASSIFICATION	0.05914911692848216	DESIGN
LOCALVAR	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
CONSTANT	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9979433372306656	WITHOUT_CLASSIFICATION	0.002056662769334405	DESIGN
MRI: block_append	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
Reduces overhead in interp by not set position every single line we encounter.	WITHOUT_CLASSIFICATION	0.9994307202741708	WITHOUT_CLASSIFICATION	5.692797258291368E-4	DESIGN
Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9997563038849314	WITHOUT_CLASSIFICATION	2.4369611506864177E-4	DESIGN
return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.999547754395958	WITHOUT_CLASSIFICATION	4.5224560404195804E-4	DESIGN
Node	WITHOUT_CLASSIFICATION	0.9992506965172061	WITHOUT_CLASSIFICATION	7.49303482793851E-4	DESIGN
FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9905396431090344	DESIGN	0.009460356890965577	WITHOUT_CLASSIFICATION
case CONSTNODE: handleUselessWarn(node, "a constant"); return;	WITHOUT_CLASSIFICATION	0.9999103176339803	WITHOUT_CLASSIFICATION	8.968236601961718E-5	DESIGN
FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9905396431090344	DESIGN	0.009460356890965577	WITHOUT_CLASSIFICATION
case CLASSNODE: case COLON2NODE: handleUselessWarn(node, "::"); return;	WITHOUT_CLASSIFICATION	0.9999103176339803	WITHOUT_CLASSIFICATION	8.968236601961718E-5	DESIGN
case SELFNODE: handleUselessWarn(node, "self"); return;	WITHOUT_CLASSIFICATION	0.9999103176339803	WITHOUT_CLASSIFICATION	8.968236601961718E-5	DESIGN
FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.7809977632632938	DESIGN	0.21900223673670624	WITHOUT_CLASSIFICATION
MRI: range_op	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9957295417339109	WITHOUT_CLASSIFICATION	0.004270458266089076	DESIGN
foo()	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
foo()	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
foo()	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
tail must be EvStrNode at this point	WITHOUT_CLASSIFICATION	0.9928421697489777	WITHOUT_CLASSIFICATION	0.007157830251022329	DESIGN
Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9995047920374178	WITHOUT_CLASSIFICATION	4.952079625822463E-4	DESIGN
Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9966268468877516	WITHOUT_CLASSIFICATION	0.0033731531122484022	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
dynamically increase	WITHOUT_CLASSIFICATION	0.9994241837787585	WITHOUT_CLASSIFICATION	5.758162212415534E-4	DESIGN
else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9995530289143472	WITHOUT_CLASSIFICATION	4.469710856527845E-4	DESIGN
shift to yyN	WITHOUT_CLASSIFICATION	0.9914736511573304	WITHOUT_CLASSIFICATION	0.008526348842669552	DESIGN
reduce (yyN)	WITHOUT_CLASSIFICATION	0.9990106591866583	WITHOUT_CLASSIFICATION	9.893408133416573E-4	DESIGN
leave stack alone	WITHOUT_CLASSIFICATION	0.999772616681949	WITHOUT_CLASSIFICATION	2.2738331805109918E-4	DESIGN
line 321	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 351	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 382	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 417	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 420	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 423	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 426	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 280	WITHOUT_CLASSIFICATION	0.9997435136274835	WITHOUT_CLASSIFICATION	2.5648637251645686E-4	DESIGN
line 283	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 296	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 324	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 327	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 331	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 333	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 336	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 342	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 345	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 348	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 354	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 368	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 377	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 388	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 392	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 397	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 429	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 432	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 436	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 445	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 448	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 454	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 459	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 466	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 469	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 478	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 481	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 488	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 494	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 497	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 503	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 506	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 509	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 512	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 521	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 526	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 540	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 543	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 546	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 566	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 610	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 672	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 691	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 696	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 772	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 782	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 785	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 788	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 791	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 534	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 549	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 552	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 558	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 561	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 571	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 574	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 579	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 586	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 589	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 592	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 595	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 598	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 623	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 627	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 630	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 633	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 639	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 648	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 657	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 661	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 666	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 678	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 682	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 688	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 699	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 706	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 708	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 727	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 737	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 753	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 779	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 801	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 808	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 811	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 817	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 842	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 845	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 848	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 893	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 899	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 932	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 944	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 960	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 980	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1004	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1038	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 820	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 826	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 829	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 832	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 851	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 857	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 860	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 863	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 866	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 869	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 875	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 884	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 887	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 890	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 902	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 909	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 912	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 916	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 922	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 928	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 941	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 947	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 951	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 955	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 965	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 969	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 977	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 983	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1013	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1023	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1035	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1041	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1043	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1054	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1057	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1060	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1069	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1075	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1105	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1111	WITHOUT_CLASSIFICATION	0.9997449647612229	WITHOUT_CLASSIFICATION	2.5503523877710483E-4	DESIGN
line 1122	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1130	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1140	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1158	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1204	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1207	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1247	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1251	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1261	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1078	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1084	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1087	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1090	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1093	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1114	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1116	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1118	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1124	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1126	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1138	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1144	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1149	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1155	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1162	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1173	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1179	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1182	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1190	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1196	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1213	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1217	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1231	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1236	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1244	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1254	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1258	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1264	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1270	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1273	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1276	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1279	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1282	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1289	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1292	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1295	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1298	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1305	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1348	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1387	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1392	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1448	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1462	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1470	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1496	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1502	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1595	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1598	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1308	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1311	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1317	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1323	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1326	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1329	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1337	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1342	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1345	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1354	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1359	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1366	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1369	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1373	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1377	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1383	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1399	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1401	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1406	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1417	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1424	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1427	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1430	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1433	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1436	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1442	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1445	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1458	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1464	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1489	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1493	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1507	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1519	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1532	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1538	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1542	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1557	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1573	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1591	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1615	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1629	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1632	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1705	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1716	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1725	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1742	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1749	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1818	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1822	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1607	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1610	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1622	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1625	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1636	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1639	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1647	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1651	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1657	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1660	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1663	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1678	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1702	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1711	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1719	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1722	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1731	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1734	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1738	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1746	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1756	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1758	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1761	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1767	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1776	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1782	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1785	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1788	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1791	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1797	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1800	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1803	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1806	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1809	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1815	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1825	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1828	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1831	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1847	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
$8 == null ? NilImplicitNode.NIL : $8;	WITHOUT_CLASSIFICATION	0.9800972329419607	WITHOUT_CLASSIFICATION	0.01990276705803926	DESIGN
$5 == null ? NilImplicitNode.NIL : $5;	WITHOUT_CLASSIFICATION	0.9800972329419607	WITHOUT_CLASSIFICATION	0.01990276705803926	DESIGN
.setPosFrom($2);	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
zero length array	WITHOUT_CLASSIFICATION	0.9998911651980911	WITHOUT_CLASSIFICATION	1.0883480190884286E-4	DESIGN
DStrNode: :"some text #{some expression}"	WITHOUT_CLASSIFICATION	0.9997192533624424	WITHOUT_CLASSIFICATION	2.80746637557692E-4	DESIGN
StrNode: :"some text"	WITHOUT_CLASSIFICATION	0.99881240596817	WITHOUT_CLASSIFICATION	0.0011875940318299952	DESIGN
EvStrNode :"#{some expression}"	WITHOUT_CLASSIFICATION	0.9991856162036415	WITHOUT_CLASSIFICATION	8.143837963584149E-4	DESIGN
INSTANCE VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9988359068557464	WITHOUT_CLASSIFICATION	0.001164093144253562	DESIGN
line 1854	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1869	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1872	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1877	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1886	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1898	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1902	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1905	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1911	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1918	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1935	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1938	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1942	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1948	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1960	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1963	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1968	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1972	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1982	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1995	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 2000	WITHOUT_CLASSIFICATION	0.9996971856884408	WITHOUT_CLASSIFICATION	3.0281431155923874E-4	DESIGN
line 2006	WITHOUT_CLASSIFICATION	0.9997479993569217	WITHOUT_CLASSIFICATION	2.5200064307824446E-4	DESIGN
line 2010	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
We may need to subtract addition offset off of first	WITHOUT_CLASSIFICATION	0.9993045237708135	WITHOUT_CLASSIFICATION	6.95476229186546E-4	DESIGN
string fragment (we optimistically take one off in	WITHOUT_CLASSIFICATION	0.9991341083395133	WITHOUT_CLASSIFICATION	8.658916604866595E-4	DESIGN
ParserSupport.literal_concat). Check token length	WITHOUT_CLASSIFICATION	0.9993770209396713	WITHOUT_CLASSIFICATION	6.229790603287229E-4	DESIGN
and subtract as neeeded.	WITHOUT_CLASSIFICATION	0.9995321961943106	WITHOUT_CLASSIFICATION	4.678038056894949E-4	DESIGN
$$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);	WITHOUT_CLASSIFICATION	0.9997713721002844	WITHOUT_CLASSIFICATION	2.286278997156001E-4	DESIGN
ENEBO: arg surrounded by in_defined set/unset	WITHOUT_CLASSIFICATION	0.9997328555116494	WITHOUT_CLASSIFICATION	2.6714448835067715E-4	DESIGN
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9986343655754161	WITHOUT_CLASSIFICATION	0.0013656344245839768	DESIGN
yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9991039935764315	WITHOUT_CLASSIFICATION	8.960064235685084E-4	DESIGN
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999094664964396	WITHOUT_CLASSIFICATION	9.053350356036795E-5	DESIGN
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999094664964396	WITHOUT_CLASSIFICATION	9.053350356036795E-5	DESIGN
ENEBO: Removed !compile_for_eval which probably is to reduce warnings	WITHOUT_CLASSIFICATION	0.9985364821985564	WITHOUT_CLASSIFICATION	0.0014635178014435319	DESIGN
was $$ = null;	WITHOUT_CLASSIFICATION	0.9993194080619242	WITHOUT_CLASSIFICATION	6.80591938075854E-4	DESIGN
line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.999641615320683	WITHOUT_CLASSIFICATION	3.5838467931702684E-4	DESIGN
line 8143 "-"	WITHOUT_CLASSIFICATION	0.9997705509817554	WITHOUT_CLASSIFICATION	2.2944901824464546E-4	DESIGN
we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999549256502357	WITHOUT_CLASSIFICATION	4.507434976417265E-5	DESIGN
No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.999939278923959	WITHOUT_CLASSIFICATION	6.072107604102531E-5	DESIGN
Next immediate scope. Variable and constant scoping rules make use of this variable in different ways.	WITHOUT_CLASSIFICATION	0.9886877753282599	WITHOUT_CLASSIFICATION	0.011312224671740041	DESIGN
Live reference to module	WITHOUT_CLASSIFICATION	0.9981872386001691	WITHOUT_CLASSIFICATION	0.001812761399830786	DESIGN
Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9996347990532376	WITHOUT_CLASSIFICATION	3.6520094676241547E-4	DESIGN
Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999838566036816	WITHOUT_CLASSIFICATION	1.6143396318426178E-5	DESIGN
number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9986380385987126	WITHOUT_CLASSIFICATION	0.001361961401287465	DESIGN
number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.998569361427603	WITHOUT_CLASSIFICATION	0.0014306385723969672	DESIGN
index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9998340880916731	WITHOUT_CLASSIFICATION	1.659119083269292E-4	DESIGN
Note that this object equality check is intentional, to ensure the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999920417684601	WITHOUT_CLASSIFICATION	7.958231539849845E-6	DESIGN
Returns slot of variable	WITHOUT_CLASSIFICATION	0.9992743015697169	WITHOUT_CLASSIFICATION	7.256984302831502E-4	DESIGN
Returns slot of variable	WITHOUT_CLASSIFICATION	0.9992743015697169	WITHOUT_CLASSIFICATION	7.256984302831502E-4	DESIGN
Note: Only used by compiler until it can use getConstant again or use some other refactoring	WITHOUT_CLASSIFICATION	0.80742724539529	WITHOUT_CLASSIFICATION	0.19257275460471002	DESIGN
If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9983571987854509	WITHOUT_CLASSIFICATION	0.0016428012145490222	DESIGN
Try and unload the autoload specified from internedName	WITHOUT_CLASSIFICATION	0.9988062969111587	WITHOUT_CLASSIFICATION	0.0011937030888412436	DESIGN
We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9994681616489811	WITHOUT_CLASSIFICATION	5.318383510188832E-4	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9998561754745148	WITHOUT_CLASSIFICATION	1.4382452548518068E-4	DESIGN
do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9990218319168352	WITHOUT_CLASSIFICATION	9.781680831647663E-4	DESIGN
source extensions	WITHOUT_CLASSIFICATION	0.9998343390812385	WITHOUT_CLASSIFICATION	1.6566091876154163E-4	DESIGN
do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9990218319168352	WITHOUT_CLASSIFICATION	9.781680831647663E-4	DESIGN
. Array given to rest should pass itself . Array with rest + other args should extract array . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9974148762558341	WITHOUT_CLASSIFICATION	0.002585123744165788	DESIGN
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.974132730399584	WITHOUT_CLASSIFICATION	0.02586726960041601	DESIGN
Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.814169222164016	WITHOUT_CLASSIFICATION	0.18583077783598395	DESIGN
Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.5760460731153457	WITHOUT_CLASSIFICATION	0.4239539268846543	DESIGN
private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9962314578835606	WITHOUT_CLASSIFICATION	0.003768542116439408	DESIGN
private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9962314578835606	WITHOUT_CLASSIFICATION	0.003768542116439408	DESIGN
List of active dynamic scopes. Each of these may have captured other dynamic scopes to implement closures.	WITHOUT_CLASSIFICATION	0.8603826550509989	WITHOUT_CLASSIFICATION	0.1396173449490011	DESIGN
File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.999915529622273	WITHOUT_CLASSIFICATION	8.447037772701661E-5	DESIGN
Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9997502980998578	WITHOUT_CLASSIFICATION	2.49701900142191E-4	DESIGN
In certain places, like grep, we don't use real frames for the call blocks. This has the effect of not setting the backref in the correct frame - this delta is activated to the place where the grep is running in so that the backref will be set in an appropriate place.	WITHOUT_CLASSIFICATION	0.9709241206631382	DESIGN	0.029075879336861798	WITHOUT_CLASSIFICATION
TOPLEVEL self and a few others want a top-level scope. We create this one right away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.8370123515771961	WITHOUT_CLASSIFICATION	0.16298764842280394	DESIGN
CATCH MANAGEMENT	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
FRAME MANAGEMENT	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9659631349749889	WITHOUT_CLASSIFICATION	0.03403686502501111	DESIGN
assert level == 0;	WITHOUT_CLASSIFICATION	0.9991451109106269	WITHOUT_CLASSIFICATION	8.548890893731613E-4	DESIGN
assert level == 0;	WITHOUT_CLASSIFICATION	0.9991451109106269	WITHOUT_CLASSIFICATION	8.548890893731613E-4	DESIGN
look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9993319049550584	WITHOUT_CLASSIFICATION	6.68095044941572E-4	DESIGN
if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999747042401264	WITHOUT_CLASSIFICATION	2.5295759873595606E-5	DESIGN
look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9991323895875285	WITHOUT_CLASSIFICATION	8.676104124715587E-4	DESIGN
All entries following removed node can stay in list, but all preceding ones need to be cloned.	WITHOUT_CLASSIFICATION	0.9998094792707513	WITHOUT_CLASSIFICATION	1.905207292488369E-4	DESIGN
required and optional only	WITHOUT_CLASSIFICATION	0.9997747399436553	WITHOUT_CLASSIFICATION	2.252600563445813E-4	DESIGN
do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9990218319168352	WITHOUT_CLASSIFICATION	9.781680831647663E-4	DESIGN
look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9983402572421558	WITHOUT_CLASSIFICATION	0.0016597427578441193	DESIGN
set the binding's frame's "previous" file and line to current, so trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999922117890039	WITHOUT_CLASSIFICATION	7.788210996139254E-6	DESIGN
framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.999666572341288	WITHOUT_CLASSIFICATION	3.3342765871198634E-4	DESIGN
look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9983402572421558	WITHOUT_CLASSIFICATION	0.0016597427578441193	DESIGN
unframed invokers have no Ruby frames, so pull from class name but use current frame as file and line	WITHOUT_CLASSIFICATION	0.999991674047685	WITHOUT_CLASSIFICATION	8.325952315019776E-6	DESIGN
try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999266513612648	WITHOUT_CLASSIFICATION	7.334863873526577E-5	DESIGN
Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999449503758622	WITHOUT_CLASSIFICATION	5.504962413778848E-5	DESIGN
Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999134478773191	WITHOUT_CLASSIFICATION	8.655212268083735E-5	DESIGN
Determine what sort of assigner should be used for the provided 'iter' (e.g. block). Assigner provides just the right logic for assigning values to local parameters of the block. This method also has a second optimization which is to set 'noargblock' in the case that the block is a block which accepts no arguments. The primary reason for this second optimization is that in the case of a yield with a RubyArray we will bypass some logic processing the RubyArray into a proper form (only to then not do anythign with it). A secondary benefit is that a simple boolean seems to optimize by hotspot much faster than the zero arg assigner.	WITHOUT_CLASSIFICATION	0.9631194425542621	DESIGN	0.03688055744573798	WITHOUT_CLASSIFICATION
new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9947313508907993	WITHOUT_CLASSIFICATION	0.005268649109200641	DESIGN
No argument blocks	WITHOUT_CLASSIFICATION	0.9998871249956904	WITHOUT_CLASSIFICATION	1.128750043095756E-4	DESIGN
just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9998194510331632	WITHOUT_CLASSIFICATION	1.8054896683674708E-4	DESIGN
Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.8878713745685468	WITHOUT_CLASSIFICATION	0.11212862543145319	DESIGN
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9983943890079553	WITHOUT_CLASSIFICATION	0.001605610992044695	DESIGN
This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.8555621540730861	WITHOUT_CLASSIFICATION	0.1444378459269138	DESIGN
Highest reserved id	WITHOUT_CLASSIFICATION	0.999356136127262	WITHOUT_CLASSIFICATION	6.43863872738034E-4	DESIGN
binary typed calls	WITHOUT_CLASSIFICATION	0.9996731350194875	WITHOUT_CLASSIFICATION	3.268649805124555E-4	DESIGN
id must always be even	WITHOUT_CLASSIFICATION	0.9933206681102436	WITHOUT_CLASSIFICATION	0.00667933188975645	DESIGN
with block pass	WITHOUT_CLASSIFICATION	0.9994779808946146	WITHOUT_CLASSIFICATION	5.220191053853902E-4	DESIGN
no block	WITHOUT_CLASSIFICATION	0.9995789355848433	WITHOUT_CLASSIFICATION	4.210644151566144E-4	DESIGN
with block literal (iter)	WITHOUT_CLASSIFICATION	0.99759233255375	WITHOUT_CLASSIFICATION	0.0024076674462499012	DESIGN
assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9705045345932719	WITHOUT_CLASSIFICATION	0.02949546540672799	DESIGN
if we have multiple asgn with just args, need a special type for that	WITHOUT_CLASSIFICATION	0.9810639456821457	WITHOUT_CLASSIFICATION	0.018936054317854258	DESIGN
&& args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9988722397820373	WITHOUT_CLASSIFICATION	0.0011277602179627538	DESIGN
return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9995889688054266	WITHOUT_CLASSIFICATION	4.110311945734111E-4	DESIGN
ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999756753060348	WITHOUT_CLASSIFICATION	2.4324693965149478E-5	DESIGN
predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9882120692025739	WITHOUT_CLASSIFICATION	0.011787930797426129	DESIGN
fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9998014698124689	WITHOUT_CLASSIFICATION	1.9853018753106203E-4	DESIGN
Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.999301404020586	WITHOUT_CLASSIFICATION	6.985959794140671E-4	DESIGN
Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9962949948920261	WITHOUT_CLASSIFICATION	0.0037050051079739734	DESIGN
Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9974749695526947	WITHOUT_CLASSIFICATION	0.0025250304473053505	DESIGN
Lastline	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9990185784672779	WITHOUT_CLASSIFICATION	9.814215327220198E-4	DESIGN
bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9992260103526269	WITHOUT_CLASSIFICATION	7.73989647373034E-4	DESIGN
Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9997351210327873	WITHOUT_CLASSIFICATION	2.6487896721267553E-4	DESIGN
try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9995919630089645	WITHOUT_CLASSIFICATION	4.080369910355386E-4	DESIGN
Some helper functions:	WITHOUT_CLASSIFICATION	0.9991698743231555	WITHOUT_CLASSIFICATION	8.301256768445751E-4	DESIGN
silently ignore	WITHOUT_CLASSIFICATION	0.9994102687828652	WITHOUT_CLASSIFICATION	5.897312171346623E-4	DESIGN
used by compiler	WITHOUT_CLASSIFICATION	0.9661818781882306	WITHOUT_CLASSIFICATION	0.0338181218117693	DESIGN
initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9893385660807607	WITHOUT_CLASSIFICATION	0.010661433919239266	DESIGN
INSTANCE VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9988359068557464	WITHOUT_CLASSIFICATION	0.001164093144253562	DESIGN
We need to guarantee that any existing reads of old Map can proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999767128179273	WITHOUT_CLASSIFICATION	2.3287182072651615E-5	DESIGN
Single node on list	WITHOUT_CLASSIFICATION	0.9997220358500201	WITHOUT_CLASSIFICATION	2.7796414997992676E-4	DESIGN
Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9976095806697922	WITHOUT_CLASSIFICATION	0.0023904193302078727	DESIGN
Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9996156056730061	WITHOUT_CLASSIFICATION	3.843943269939944E-4	DESIGN
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.974132730399584	WITHOUT_CLASSIFICATION	0.02586726960041601	DESIGN
Note: In Ruby 1.9 all of this logic can go away since they will require explicit bindings for evals.	WITHOUT_CLASSIFICATION	0.9959648171494976	WITHOUT_CLASSIFICATION	0.004035182850502408	DESIGN
We only define one special dynamic scope per 'logical' binding. So all bindings for the same scope should share the same dynamic scope. This allows multiple evals with different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.8211667090578773	WITHOUT_CLASSIFICATION	0.17883329094212272	DESIGN
If the next scope out has the same binding scope as this scope it means we are evaling within an eval and in that case we should be sharing the same binding scope.	WITHOUT_CLASSIFICATION	0.9984015554773286	WITHOUT_CLASSIFICATION	0.0015984445226714143	DESIGN
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9998736627058024	WITHOUT_CLASSIFICATION	1.2633729419764063E-4	DESIGN
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9998736627058024	WITHOUT_CLASSIFICATION	1.2633729419764063E-4	DESIGN
nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999593893501706	WITHOUT_CLASSIFICATION	4.0610649829397865E-5	DESIGN
nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999593893501706	WITHOUT_CLASSIFICATION	4.0610649829397865E-5	DESIGN
nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999593893501706	WITHOUT_CLASSIFICATION	4.0610649829397865E-5	DESIGN
no extra args for rest	WITHOUT_CLASSIFICATION	0.9992117597157933	WITHOUT_CLASSIFICATION	7.882402842067462E-4	DESIGN
no extra args for rest	WITHOUT_CLASSIFICATION	0.9992117597157933	WITHOUT_CLASSIFICATION	7.882402842067462E-4	DESIGN
extra args for rest	WITHOUT_CLASSIFICATION	0.9991897947330838	WITHOUT_CLASSIFICATION	8.102052669160881E-4	DESIGN
extra args for rest	WITHOUT_CLASSIFICATION	0.9991897947330838	WITHOUT_CLASSIFICATION	8.102052669160881E-4	DESIGN
This is the proper behavior for all non-expanded assigners which have a pre > 0. The rest override this.	WITHOUT_CLASSIFICATION	0.9993323922069308	WITHOUT_CLASSIFICATION	6.67607793069143E-4	DESIGN
This is the proper behavior for all non-expanded assigners.	WITHOUT_CLASSIFICATION	0.970133507587225	WITHOUT_CLASSIFICATION	0.02986649241277486	DESIGN
prefill ?	WITHOUT_CLASSIFICATION	0.9978532155311095	WITHOUT_CLASSIFICATION	0.0021467844688905823	DESIGN
prefill ?	WITHOUT_CLASSIFICATION	0.9978532155311095	WITHOUT_CLASSIFICATION	0.0021467844688905823	DESIGN
MUST be called from synchronized/locked block! should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9978047685678348	WITHOUT_CLASSIFICATION	0.0021952314321650717	DESIGN
retrieve method module name	WITHOUT_CLASSIFICATION	0.9964618894132447	WITHOUT_CLASSIFICATION	0.0035381105867552083	DESIGN
call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9992936657124486	WITHOUT_CLASSIFICATION	7.063342875514655E-4	DESIGN
if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.999916658053681	WITHOUT_CLASSIFICATION	8.334194631907008E-5	DESIGN
if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9997723087913999	WITHOUT_CLASSIFICATION	2.2769120860020108E-4	DESIGN
method object already present, push various args tc self klazz name	WITHOUT_CLASSIFICATION	0.9997800891819715	WITHOUT_CLASSIFICATION	2.19910818028476E-4	DESIGN
if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999435494125936	WITHOUT_CLASSIFICATION	5.6450587406451086E-5	DESIGN
invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9994784257036763	WITHOUT_CLASSIFICATION	5.215742963236655E-4	DESIGN
caller	WITHOUT_CLASSIFICATION	0.9994081714732694	WITHOUT_CLASSIFICATION	5.918285267305406E-4	DESIGN
calltype block	WITHOUT_CLASSIFICATION	0.999400675437246	WITHOUT_CLASSIFICATION	5.993245627540318E-4	DESIGN
if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999970889233768	WITHOUT_CLASSIFICATION	2.911076623169777E-6	DESIGN
load arity for check	WITHOUT_CLASSIFICATION	0.9993716957078285	WITHOUT_CLASSIFICATION	6.283042921714522E-4	DESIGN
throw	WITHOUT_CLASSIFICATION	0.998586533022389	WITHOUT_CLASSIFICATION	0.001413466977610921	DESIGN
load arity for error	WITHOUT_CLASSIFICATION	0.9953989920762312	WITHOUT_CLASSIFICATION	0.004601007923768776	DESIGN
arity ok, continue	WITHOUT_CLASSIFICATION	0.9991529005401804	WITHOUT_CLASSIFICATION	8.470994598197434E-4	DESIGN
InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9988086530547068	WITHOUT_CLASSIFICATION	0.0011913469452933098	DESIGN
ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9975867114173304	WITHOUT_CLASSIFICATION	0.0024132885826696386	DESIGN
FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9988086530547068	WITHOUT_CLASSIFICATION	0.0011913469452933098	DESIGN
InvocationCallback	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9991856162036415	WITHOUT_CLASSIFICATION	8.143837963584149E-4	DESIGN
for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.999909253492393	WITHOUT_CLASSIFICATION	9.074650760707516E-5	DESIGN
for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9998967114626436	WITHOUT_CLASSIFICATION	1.0328853735648596E-4	DESIGN
load the encoding	WITHOUT_CLASSIFICATION	0.999428434474229	WITHOUT_CLASSIFICATION	5.715655257708878E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9986145458130723	WITHOUT_CLASSIFICATION	0.0013854541869277408	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9986145458130723	WITHOUT_CLASSIFICATION	0.0013854541869277408	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9986145458130723	WITHOUT_CLASSIFICATION	0.0013854541869277408	DESIGN
IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9992797525480076	WITHOUT_CLASSIFICATION	7.202474519924026E-4	DESIGN
IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9992797525480076	WITHOUT_CLASSIFICATION	7.202474519924026E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9992797525480076	WITHOUT_CLASSIFICATION	7.202474519924026E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9992797525480076	WITHOUT_CLASSIFICATION	7.202474519924026E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9992797525480076	WITHOUT_CLASSIFICATION	7.202474519924026E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993927466032608	WITHOUT_CLASSIFICATION	6.072533967391039E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993927466032608	WITHOUT_CLASSIFICATION	6.072533967391039E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993927466032608	WITHOUT_CLASSIFICATION	6.072533967391039E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993927466032608	WITHOUT_CLASSIFICATION	6.072533967391039E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993927466032608	WITHOUT_CLASSIFICATION	6.072533967391039E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993927466032608	WITHOUT_CLASSIFICATION	6.072533967391039E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993927466032608	WITHOUT_CLASSIFICATION	6.072533967391039E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993927466032608	WITHOUT_CLASSIFICATION	6.072533967391039E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993927466032608	WITHOUT_CLASSIFICATION	6.072533967391039E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993927466032608	WITHOUT_CLASSIFICATION	6.072533967391039E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993927466032608	WITHOUT_CLASSIFICATION	6.072533967391039E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993927466032608	WITHOUT_CLASSIFICATION	6.072533967391039E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993927466032608	WITHOUT_CLASSIFICATION	6.072533967391039E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993927466032608	WITHOUT_CLASSIFICATION	6.072533967391039E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993927466032608	WITHOUT_CLASSIFICATION	6.072533967391039E-4	DESIGN
If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9996290935254625	WITHOUT_CLASSIFICATION	3.7090647453755113E-4	DESIGN
BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9988086530547068	WITHOUT_CLASSIFICATION	0.0011913469452933098	DESIGN
ThreadContext	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9991856162036415	WITHOUT_CLASSIFICATION	8.143837963584149E-4	DESIGN
Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9997220603533595	WITHOUT_CLASSIFICATION	2.7793964664042984E-4	DESIGN
RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9991856162036415	WITHOUT_CLASSIFICATION	8.143837963584149E-4	DESIGN
add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999909933862888	WITHOUT_CLASSIFICATION	9.006613711127968E-6	DESIGN
if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9997995810204982	WITHOUT_CLASSIFICATION	2.0041897950182265E-4	DESIGN
wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9991692194586832	WITHOUT_CLASSIFICATION	8.307805413168541E-4	DESIGN
add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9996308642782994	WITHOUT_CLASSIFICATION	3.6913572170062134E-4	DESIGN
Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9953273078735354	WITHOUT_CLASSIFICATION	0.004672692126464569	DESIGN
"." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.5963675503443411	WITHOUT_CLASSIFICATION	0.403632449655659	DESIGN
Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9995281583203995	WITHOUT_CLASSIFICATION	4.7184167960040516E-4	DESIGN
Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999813971372683	WITHOUT_CLASSIFICATION	1.8602862731657922E-5	DESIGN
Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9833846215756499	WITHOUT_CLASSIFICATION	0.016615378424350197	DESIGN
We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9798131497257863	WITHOUT_CLASSIFICATION	0.020186850274213693	DESIGN
If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9996032986836019	WITHOUT_CLASSIFICATION	3.967013163980257E-4	DESIGN
quietly try to load the class	WITHOUT_CLASSIFICATION	0.9964650412548394	WITHOUT_CLASSIFICATION	0.003534958745160642	DESIGN
If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9993370199643283	WITHOUT_CLASSIFICATION	6.629800356716362E-4	DESIGN
no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9967628045287477	WITHOUT_CLASSIFICATION	0.0032371954712523254	DESIGN
if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9990797904430135	WITHOUT_CLASSIFICATION	9.202095569865403E-4	DESIGN
signed short, big-endian	WITHOUT_CLASSIFICATION	0.9994819774684347	WITHOUT_CLASSIFICATION	5.180225315652524E-4	DESIGN
source extensions	WITHOUT_CLASSIFICATION	0.9998343390812385	WITHOUT_CLASSIFICATION	1.6566091876154163E-4	DESIGN
We don't support .so, but some stdlib require .so directly replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.8488241325772515	WITHOUT_CLASSIFICATION	0.1511758674227485	DESIGN
This code exploits the fact that all .jar files will be found for the JarredScript feature. This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.8504864506851956	WITHOUT_CLASSIFICATION	0.14951354931480434	DESIGN
Make the class name look nice, by splitting on _ and capitalize each segment, then joining the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9977205433886491	WITHOUT_CLASSIFICATION	0.002279456611350943	DESIGN
It's _really_ expensive to check that the class actually exists in the Jar, so we don't do that now.	WITHOUT_CLASSIFICATION	0.9998171137215911	WITHOUT_CLASSIFICATION	1.8288627840876324E-4	DESIGN
trim extension to try other options	WITHOUT_CLASSIFICATION	0.9989356542354548	WITHOUT_CLASSIFICATION	0.0010643457645451075	DESIGN
extension extensions	WITHOUT_CLASSIFICATION	0.9986745893378859	WITHOUT_CLASSIFICATION	0.0013254106621141762	DESIGN
unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9989925553116088	WITHOUT_CLASSIFICATION	0.0010074446883911897	DESIGN
try all extensions	WITHOUT_CLASSIFICATION	0.9997730030829668	WITHOUT_CLASSIFICATION	2.2699691703323757E-4	DESIGN
if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999383593592027	WITHOUT_CLASSIFICATION	6.164064079727024E-5	DESIGN
unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9990934259945496	WITHOUT_CLASSIFICATION	9.065740054502771E-4	DESIGN
try only literal search	WITHOUT_CLASSIFICATION	0.9993941362404727	WITHOUT_CLASSIFICATION	6.058637595272848E-4	DESIGN
attempt to load the found library	WITHOUT_CLASSIFICATION	0.9971139661002669	WITHOUT_CLASSIFICATION	0.0028860338997331717	DESIGN
otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9998215743387755	WITHOUT_CLASSIFICATION	1.7842566122442427E-4	DESIGN
allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9968738457670783	WITHOUT_CLASSIFICATION	0.0031261542329218297	DESIGN
Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9902949661185403	WITHOUT_CLASSIFICATION	0.009705033881459588	DESIGN
check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999993651016306	WITHOUT_CLASSIFICATION	6.348983695316227E-7	DESIGN
if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9998651072911336	WITHOUT_CLASSIFICATION	1.3489270886633917E-4	DESIGN
end suffix iteration	WITHOUT_CLASSIFICATION	0.9998776222473317	WITHOUT_CLASSIFICATION	1.2237775266838767E-4	DESIGN
if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9979061328094747	WITHOUT_CLASSIFICATION	0.0020938671905252585	DESIGN
if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9998540365308354	WITHOUT_CLASSIFICATION	1.4596346916452037E-4	DESIGN
we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9965528476993303	WITHOUT_CLASSIFICATION	0.0034471523006698035	DESIGN
we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9965528476993303	WITHOUT_CLASSIFICATION	0.0034471523006698035	DESIGN
it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9981072791111392	WITHOUT_CLASSIFICATION	0.001892720888860766	DESIGN
it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9981072791111392	WITHOUT_CLASSIFICATION	0.001892720888860766	DESIGN
prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9997186692477669	WITHOUT_CLASSIFICATION	2.8133075223308316E-4	DESIGN
prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9997186692477669	WITHOUT_CLASSIFICATION	2.8133075223308316E-4	DESIGN
actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.999765598020886	WITHOUT_CLASSIFICATION	2.3440197911396733E-4	DESIGN
handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9995455807590734	WITHOUT_CLASSIFICATION	4.5441924092662616E-4	DESIGN
if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9996860408095738	WITHOUT_CLASSIFICATION	3.139591904262252E-4	DESIGN
if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999708078303574	WITHOUT_CLASSIFICATION	2.9192169642556036E-5	DESIGN
otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9960568143267878	WITHOUT_CLASSIFICATION	0.003943185673212116	DESIGN
Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.942902814939407	WITHOUT_CLASSIFICATION	0.05709718506059307	DESIGN
signed short, native	WITHOUT_CLASSIFICATION	0.9996832498428444	WITHOUT_CLASSIFICATION	3.167501571556012E-4	DESIGN
If we fail to find as a normal Ruby script, we try to find as an extension, checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999751495362987	WITHOUT_CLASSIFICATION	2.4850463701281075E-5	DESIGN
write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.8513435800391421	WITHOUT_CLASSIFICATION	0.14865641996085785	DESIGN
if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999153030358712	WITHOUT_CLASSIFICATION	8.469696412883818E-5	DESIGN
Look in classpath next (we do not use File as a test since UNC names will match) Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9992441877745997	WITHOUT_CLASSIFICATION	7.558122254001814E-4	DESIGN
Directories and unavailable resources are not able to open a stream.	WITHOUT_CLASSIFICATION	0.9994273847574144	WITHOUT_CLASSIFICATION	5.726152425856304E-4	DESIGN
Try to load from classpath without prefix. "A/b.rb" will not load as "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9984035711595967	WITHOUT_CLASSIFICATION	0.0015964288404033756	DESIGN
object has instance vars and isn't a class, get a snapshot to be marshalled and output the ivar header here	WITHOUT_CLASSIFICATION	0.6951791162941122	WITHOUT_CLASSIFICATION	0.3048208837058878	DESIGN
flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9949626874880138	WITHOUT_CLASSIFICATION	0.0050373125119863	DESIGN
write('S');	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
switch on the object's native type. This allows use-defined classes that have extended core native types to piggyback on their marshalling logic.	WITHOUT_CLASSIFICATION	0.9977598492341879	WITHOUT_CLASSIFICATION	0.0022401507658120004	DESIGN
object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9996123640274532	WITHOUT_CLASSIFICATION	3.8763597254671915E-4	DESIGN
We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9976366440067002	WITHOUT_CLASSIFICATION	0.002363355993299839	DESIGN
w_symbol	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
w_unique	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9991359643975962	WITHOUT_CLASSIFICATION	8.640356024036893E-4	DESIGN
Major Minor	WITHOUT_CLASSIFICATION	0.9992311871149274	WITHOUT_CLASSIFICATION	7.688128850726442E-4	DESIGN
any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9998021258099041	WITHOUT_CLASSIFICATION	1.9787419009591794E-4	DESIGN
"hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9996684355497698	WITHOUT_CLASSIFICATION	3.3156445023010966E-4	DESIGN
All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999700073917756	WITHOUT_CLASSIFICATION	2.999260822443805E-5	DESIGN
sic	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9990755450887768	WITHOUT_CLASSIFICATION	9.244549112232842E-4	DESIGN
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9990755450887768	WITHOUT_CLASSIFICATION	9.244549112232842E-4	DESIGN
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9990755450887768	WITHOUT_CLASSIFICATION	9.244549112232842E-4	DESIGN
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9974847068650399	WITHOUT_CLASSIFICATION	0.00251529313496018	DESIGN
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9974847068650399	WITHOUT_CLASSIFICATION	0.00251529313496018	DESIGN
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9983943890079553	WITHOUT_CLASSIFICATION	0.001605610992044695	DESIGN
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9983943890079553	WITHOUT_CLASSIFICATION	0.001605610992044695	DESIGN
If we are setting post arguments we can assume there are no pre or others	WITHOUT_CLASSIFICATION	0.9997625184334132	WITHOUT_CLASSIFICATION	2.3748156658673196E-4	DESIGN
XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9691714696173556	WITHOUT_CLASSIFICATION	0.030828530382644395	DESIGN
unsigned short, native	WITHOUT_CLASSIFICATION	0.999293532441443	WITHOUT_CLASSIFICATION	7.064675585570114E-4	DESIGN
int, native long, native	WITHOUT_CLASSIFICATION	0.9993670236923454	WITHOUT_CLASSIFICATION	6.329763076546727E-4	DESIGN
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9990755450887768	WITHOUT_CLASSIFICATION	9.244549112232842E-4	DESIGN
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9990755450887768	WITHOUT_CLASSIFICATION	9.244549112232842E-4	DESIGN
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9990755450887768	WITHOUT_CLASSIFICATION	9.244549112232842E-4	DESIGN
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9974847068650399	WITHOUT_CLASSIFICATION	0.00251529313496018	DESIGN
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9974847068650399	WITHOUT_CLASSIFICATION	0.00251529313496018	DESIGN
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9974847068650399	WITHOUT_CLASSIFICATION	0.00251529313496018	DESIGN
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9983943890079553	WITHOUT_CLASSIFICATION	0.001605610992044695	DESIGN
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9983943890079553	WITHOUT_CLASSIFICATION	0.001605610992044695	DESIGN
Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999894271039921	WITHOUT_CLASSIFICATION	1.0572896008030618E-5	DESIGN
Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9998949242933151	WITHOUT_CLASSIFICATION	1.0507570668490163E-4	DESIGN
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9733074925613832	WITHOUT_CLASSIFICATION	0.026692507438616817	DESIGN
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9733074925613832	WITHOUT_CLASSIFICATION	0.026692507438616817	DESIGN
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9733074925613832	WITHOUT_CLASSIFICATION	0.026692507438616817	DESIGN
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9733074925613832	WITHOUT_CLASSIFICATION	0.026692507438616817	DESIGN
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9733074925613832	WITHOUT_CLASSIFICATION	0.026692507438616817	DESIGN
SunSignalFacade	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
All braces pushed..	WITHOUT_CLASSIFICATION	0.9997592948122287	WITHOUT_CLASSIFICATION	2.4070518777127172E-4	DESIGN
failed : try next recursion	WITHOUT_CLASSIFICATION	0.8830993539240246	WITHOUT_CLASSIFICATION	0.11690064607597542	DESIGN
leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9998792023381211	WITHOUT_CLASSIFICATION	1.2079766187881338E-4	DESIGN
are we at ''	WITHOUT_CLASSIFICATION	0.998851945439541	WITHOUT_CLASSIFICATION	0.0011480545604589587	DESIGN
No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9994401423437768	WITHOUT_CLASSIFICATION	5.598576562232828E-4	DESIGN
not enough bytes	WITHOUT_CLASSIFICATION	0.9982644511023041	WITHOUT_CLASSIFICATION	0.0017355488976958618	DESIGN
Get index of last read byte	WITHOUT_CLASSIFICATION	0.9997771778771006	WITHOUT_CLASSIFICATION	2.2282212289937673E-4	DESIGN
skip inner braces	WITHOUT_CLASSIFICATION	0.9987219059554087	WITHOUT_CLASSIFICATION	0.0012780940445913632	DESIGN
Process {}'s (example: Dir.glob("{jruby,jython}/README")	WITHOUT_CLASSIFICATION	0.9993938872789555	WITHOUT_CLASSIFICATION	6.061127210443733E-4	DESIGN
complete, according to Posix.2	WITHOUT_CLASSIFICATION	0.9995434624924286	WITHOUT_CLASSIFICATION	4.5653750757131947E-4	DESIGN
Only accept an open brace if there is a close	WITHOUT_CLASSIFICATION	0.9999996054575587	WITHOUT_CLASSIFICATION	3.945424412562705E-7	DESIGN
brace to match it. Bracket expressions must be	WITHOUT_CLASSIFICATION	0.9995572234189014	WITHOUT_CLASSIFICATION	4.427765810985879E-4	DESIGN
index of left-most brace index of right-most brace	WITHOUT_CLASSIFICATION	0.9991818638783848	WITHOUT_CLASSIFICATION	8.181361216151393E-4	DESIGN
Length check is a hack. We should not be reeiving "" as a filename ever.	WITHOUT_CLASSIFICATION	0.9829375739783789	WITHOUT_CLASSIFICATION	0.01706242602162105	DESIGN
NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9863381953188284	WITHOUT_CLASSIFICATION	0.013661804681171673	DESIGN
NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9863381953188284	WITHOUT_CLASSIFICATION	0.013661804681171673	DESIGN
NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9863381953188284	WITHOUT_CLASSIFICATION	0.013661804681171673	DESIGN
Pickaxe says @ must be followed by a name character, but MRI does not require this.	WITHOUT_CLASSIFICATION	0.9943319810082586	WITHOUT_CLASSIFICATION	0.0056680189917413075	DESIGN
Pickaxe says @@ must be followed by a name character, but MRI does not require this.	WITHOUT_CLASSIFICATION	0.9954863587341691	WITHOUT_CLASSIFICATION	0.004513641265830958	DESIGN
SimpleSampler	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
convert into longs, returning unsigned 64-bit values as signed longs ( num2long raises a RangeError on values > Long.MAX_VALUE )	WITHOUT_CLASSIFICATION	0.999403153715466	WITHOUT_CLASSIFICATION	5.968462845341633E-4	DESIGN
b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9994133458730674	WITHOUT_CLASSIFICATION	5.866541269326027E-4	DESIGN
single precision, little-endian	WITHOUT_CLASSIFICATION	0.9996918587890472	WITHOUT_CLASSIFICATION	3.08141210952782E-4	DESIGN
single precision, big-endian	WITHOUT_CLASSIFICATION	0.9995495630294238	WITHOUT_CLASSIFICATION	4.504369705761654E-4	DESIGN
single precision, native	WITHOUT_CLASSIFICATION	0.999581701175012	WITHOUT_CLASSIFICATION	4.1829882498809135E-4	DESIGN
single precision, native single precision, native	WITHOUT_CLASSIFICATION	0.9997141282973637	WITHOUT_CLASSIFICATION	2.858717026362772E-4	DESIGN
double precision, little-endian	WITHOUT_CLASSIFICATION	0.999909478605703	WITHOUT_CLASSIFICATION	9.052139429700325E-5	DESIGN
double precision, big-endian	WITHOUT_CLASSIFICATION	0.9998676636541614	WITHOUT_CLASSIFICATION	1.3233634583872074E-4	DESIGN
double precision, native	WITHOUT_CLASSIFICATION	0.9998771084864759	WITHOUT_CLASSIFICATION	1.2289151352401509E-4	DESIGN
signed short, little-endian	WITHOUT_CLASSIFICATION	0.9994814682281914	WITHOUT_CLASSIFICATION	5.185317718087041E-4	DESIGN
signed char	WITHOUT_CLASSIFICATION	0.9997951448851377	WITHOUT_CLASSIFICATION	2.04855114862222E-4	DESIGN
unsigned char	WITHOUT_CLASSIFICATION	0.999699120976468	WITHOUT_CLASSIFICATION	3.008790235319758E-4	DESIGN
long, little-endian	WITHOUT_CLASSIFICATION	0.9993634885704176	WITHOUT_CLASSIFICATION	6.365114295824737E-4	DESIGN
long, big-endian	WITHOUT_CLASSIFICATION	0.9993641136025353	WITHOUT_CLASSIFICATION	6.358863974646516E-4	DESIGN
unsigned int, native	WITHOUT_CLASSIFICATION	0.9996105101687328	WITHOUT_CLASSIFICATION	3.894898312672323E-4	DESIGN
int, native	WITHOUT_CLASSIFICATION	0.9995064076367157	WITHOUT_CLASSIFICATION	4.935923632841708E-4	DESIGN
64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9997222036363752	WITHOUT_CLASSIFICATION	2.7779636362479165E-4	DESIGN
How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9584497187364137	WITHOUT_CLASSIFICATION	0.0415502812635862	DESIGN
See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999003713609388	WITHOUT_CLASSIFICATION	9.962863906119113E-5	DESIGN
Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9734811307372087	WITHOUT_CLASSIFICATION	0.02651886926279135	DESIGN
Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9977575283044948	WITHOUT_CLASSIFICATION	0.0022424716955050964	DESIGN
obtain a	WITHOUT_CLASSIFICATION	0.9990760730589378	WITHOUT_CLASSIFICATION	9.239269410622886E-4	DESIGN
obtain b	WITHOUT_CLASSIFICATION	0.999759113290267	WITHOUT_CLASSIFICATION	2.4088670973298798E-4	DESIGN
obtain c	WITHOUT_CLASSIFICATION	0.9996162629217631	WITHOUT_CLASSIFICATION	3.8373707823688186E-4	DESIGN
obtain d	WITHOUT_CLASSIFICATION	0.9995401771218778	WITHOUT_CLASSIFICATION	4.5982287812213504E-4	DESIGN
encode.limit() -	WITHOUT_CLASSIFICATION	0.9980983385098138	WITHOUT_CLASSIFICATION	0.0019016614901861742	DESIGN
1	WITHOUT_CLASSIFICATION	0.9993979152799117	WITHOUT_CLASSIFICATION	6.020847200881599E-4	DESIGN
2	WITHOUT_CLASSIFICATION	0.9995812068912797	WITHOUT_CLASSIFICATION	4.187931087202514E-4	DESIGN
3	WITHOUT_CLASSIFICATION	0.998537833737712	WITHOUT_CLASSIFICATION	0.0014621662622879914	DESIGN
4	WITHOUT_CLASSIFICATION	0.9990657550095209	WITHOUT_CLASSIFICATION	9.342449904790207E-4	DESIGN
5	WITHOUT_CLASSIFICATION	0.999729420183968	WITHOUT_CLASSIFICATION	2.70579816031898E-4	DESIGN
6	WITHOUT_CLASSIFICATION	0.9994022153386164	WITHOUT_CLASSIFICATION	5.977846613835526E-4	DESIGN
7	WITHOUT_CLASSIFICATION	0.9991738822217058	WITHOUT_CLASSIFICATION	8.261177782943579E-4	DESIGN
Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999211474576457	WITHOUT_CLASSIFICATION	7.885254235426863E-5	DESIGN
Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9992325570510893	WITHOUT_CLASSIFICATION	7.674429489107945E-4	DESIGN
In case when the number of occurences is explicitly specified, we have to read up the remaining garbage after the '\0' to satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.999995526328777	WITHOUT_CLASSIFICATION	4.473671223002591E-6	DESIGN
normal exit, this should be faster than a test at each iterations for string with more than about 40 char	WITHOUT_CLASSIFICATION	0.9867070201646359	WITHOUT_CLASSIFICATION	0.013292979835364186	DESIGN
We encountered '\0' when were reading the buffer above, increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9998067706836966	WITHOUT_CLASSIFICATION	1.9322931630326155E-4	DESIGN
MRI behavior: Contrary to what seems to be logical, when '' is given, MRI calculates the distance to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9986804457582845	WITHOUT_CLASSIFICATION	0.0013195542417154486	DESIGN
Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9861375075192318	WITHOUT_CLASSIFICATION	0.013862492480768122	DESIGN
'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9997479582733738	WITHOUT_CLASSIFICATION	2.520417266261861E-4	DESIGN
if the low bit is set set the high bit of the result	WITHOUT_CLASSIFICATION	0.9989645117435184	WITHOUT_CLASSIFICATION	0.0010354882564816176	DESIGN
if the index is not a multiple of 8, we are not on a byte boundary shift the byte	WITHOUT_CLASSIFICATION	0.8820440397235029	WITHOUT_CLASSIFICATION	0.1179559602764971	DESIGN
if the length is not a multiple of 8 we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9652907005198879	WITHOUT_CLASSIFICATION	0.03470929948011205	DESIGN
if the length is not a multiple of 8 we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9652907005198879	WITHOUT_CLASSIFICATION	0.03470929948011205	DESIGN
do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.7622840549432642	WITHOUT_CLASSIFICATION	0.23771594505673585	DESIGN
we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9993634708924063	WITHOUT_CLASSIFICATION	6.365291075937647E-4	DESIGN
if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9863250114189459	WITHOUT_CLASSIFICATION	0.013674988581054124	DESIGN
this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9970217418883638	WITHOUT_CLASSIFICATION	0.0029782581116361735	DESIGN
we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9932609486372629	WITHOUT_CLASSIFICATION	0.006739051362737169	DESIGN
populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9984212315517494	WITHOUT_CLASSIFICATION	0.0015787684482505705	DESIGN
are we recursing?	WITHOUT_CLASSIFICATION	0.9989983879379836	WITHOUT_CLASSIFICATION	0.0010016120620164365	DESIGN
snip off ruby or jruby command from list of arguments leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999150618784088	WITHOUT_CLASSIFICATION	8.493812159123652E-5	DESIGN
default PidGetter	WITHOUT_CLASSIFICATION	0.9996787083006354	WITHOUT_CLASSIFICATION	3.2129169936460597E-4	DESIGN
ignore and try windows version	WITHOUT_CLASSIFICATION	0.9995272061760103	WITHOUT_CLASSIFICATION	4.7279382398957194E-4	DESIGN
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.996611500762103	WITHOUT_CLASSIFICATION	0.003388499237897008	DESIGN
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.996611500762103	WITHOUT_CLASSIFICATION	0.003388499237897008	DESIGN
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.996611500762103	WITHOUT_CLASSIFICATION	0.003388499237897008	DESIGN
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.996611500762103	WITHOUT_CLASSIFICATION	0.003388499237897008	DESIGN
try both	WITHOUT_CLASSIFICATION	0.9993171162428762	WITHOUT_CLASSIFICATION	6.82883757123637E-4	DESIGN
just unix	WITHOUT_CLASSIFICATION	0.9993510513016688	WITHOUT_CLASSIFICATION	6.489486983312866E-4	DESIGN
just windows	WITHOUT_CLASSIFICATION	0.9976849375877185	WITHOUT_CLASSIFICATION	0.0023150624122815436	DESIGN
neither	WITHOUT_CLASSIFICATION	0.9991570609601375	WITHOUT_CLASSIFICATION	8.429390398625548E-4	DESIGN
CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.5495582702326225	DESIGN	0.4504417297673775	WITHOUT_CLASSIFICATION
single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999428671895912	WITHOUT_CLASSIFICATION	5.71328104086899E-5	DESIGN
direct invocation of the command	WITHOUT_CLASSIFICATION	0.999741935219708	WITHOUT_CLASSIFICATION	2.5806478029200984E-4	DESIGN
break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.999601972395327	WITHOUT_CLASSIFICATION	3.9802760467294297E-4	DESIGN
break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.999601972395327	WITHOUT_CLASSIFICATION	3.9802760467294297E-4	DESIGN
close process output See JRUBY-3405; hooking up to parent process stdin caused problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999918508817737	WITHOUT_CLASSIFICATION	8.149118226298749E-6	DESIGN
ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9242081316066146	WITHOUT_CLASSIFICATION	0.07579186839338538	DESIGN
processes seem to have some peculiar locking sequences, so we need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9997826849689525	WITHOUT_CLASSIFICATION	2.1731503104754834E-4	DESIGN
popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9991680554158089	WITHOUT_CLASSIFICATION	8.31944584191156E-4	DESIGN
popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9991680554158089	WITHOUT_CLASSIFICATION	8.31944584191156E-4	DESIGN
popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9997456412275373	WITHOUT_CLASSIFICATION	2.5435877246272236E-4	DESIGN
no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9995593983919744	WITHOUT_CLASSIFICATION	4.406016080256564E-4	DESIGN
no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9995593983919744	WITHOUT_CLASSIFICATION	4.406016080256564E-4	DESIGN
execute command with sh -c this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9617500042526259	WITHOUT_CLASSIFICATION	0.03824999574737398	DESIGN
We need to close the out, since some processes would just wait for the stream to be closed before they process its content, and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999996202360102	WITHOUT_CLASSIFICATION	3.7976398973775693E-7	DESIGN
we only close out if it's the slave stream, to avoid closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999759759407925	WITHOUT_CLASSIFICATION	2.402405920755586E-5	DESIGN
The assumption here is that the 'in' stream provides proper available() support. If available() always returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9911471318560853	WITHOUT_CLASSIFICATION	0.008852868143914717	DESIGN
Force t3 to quit, just in case if it's stuck. Note: On some platforms, even interrupt might not have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9999476937851025	WITHOUT_CLASSIFICATION	5.23062148975157E-5	DESIGN
Check for special shell characters [<>|] at the beginning and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999892538033435	WITHOUT_CLASSIFICATION	1.0746196656462831E-5	DESIGN
Note: this method produces meaningful results only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9008652381788228	WITHOUT_CLASSIFICATION	0.09913476182117717	DESIGN
sequential	WITHOUT_CLASSIFICATION	0.9997904704873619	WITHOUT_CLASSIFICATION	2.0952951263799867E-4	DESIGN
reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999974213934314	WITHOUT_CLASSIFICATION	2.578606568623619E-6	DESIGN
do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.999894386949431	WITHOUT_CLASSIFICATION	1.0561305056910245E-4	DESIGN
if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9995024623322624	WITHOUT_CLASSIFICATION	4.975376677376492E-4	DESIGN
SignalFacade	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9943353967363966	WITHOUT_CLASSIFICATION	0.005664603263603373	DESIGN
this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9966486989535273	WITHOUT_CLASSIFICATION	0.0033513010464726444	DESIGN
basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9990646809164078	WITHOUT_CLASSIFICATION	9.353190835921557E-4	DESIGN
not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.6505306602889905	WITHOUT_CLASSIFICATION	0.3494693397110095	DESIGN
Args	WITHOUT_CLASSIFICATION	0.999174022135606	WITHOUT_CLASSIFICATION	8.259778643939825E-4	DESIGN
static methods only	WITHOUT_CLASSIFICATION	0.9981432338155195	WITHOUT_CLASSIFICATION	0.0018567661844805744	DESIGN
System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9995614337592822	WITHOUT_CLASSIFICATION	4.3856624071782094E-4	DESIGN
MRI 1.8.6 behavior: null byte after '%' leads to "%" string. Null byte in other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9910627094569382	WITHOUT_CLASSIFICATION	0.008937290543061763	DESIGN
last index (+1) accessed by next() last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9996472857623705	WITHOUT_CLASSIFICATION	3.527142376294521E-4	DESIGN
Special form of sprintf that returns a RubyString and handles tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9988620009060736	WITHOUT_CLASSIFICATION	0.0011379990939264137	DESIGN
Special form of sprintf that returns a RubyString and handles tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9991408846310876	WITHOUT_CLASSIFICATION	8.591153689124509E-4	DESIGN
MRI doesn't flag it as an error if width is given multiple times as a number (but it does for )	WITHOUT_CLASSIFICATION	0.9975641926177823	WITHOUT_CLASSIFICATION	0.002435807382217696	DESIGN
let the width (if any), get processed in the next loop, so any leading 0 gets treated correctly	WITHOUT_CLASSIFICATION	0.9988633496187783	WITHOUT_CLASSIFICATION	0.0011366503812215828	DESIGN
MRI 1.8.5-p12 doesn't support 1-char strings, but YARV 0.4.1 does. I don't think it hurts to include this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9688729236558494	WITHOUT_CLASSIFICATION	0.03112707634415055	DESIGN
'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9990458088933649	WITHOUT_CLASSIFICATION	9.541911066350207E-4	DESIGN
'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999828072933101	WITHOUT_CLASSIFICATION	1.7192706689826653E-5	DESIGN
We depart here from strict adherence to MRI code, as MRI uses C-sprintf, in part, to format numeric output, while we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.7016446945696254	DESIGN	0.29835530543037464	WITHOUT_CLASSIFICATION
skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9994091442266523	WITHOUT_CLASSIFICATION	5.908557733477593E-4	DESIGN
..	WITHOUT_CLASSIFICATION	0.996516684316192	WITHOUT_CLASSIFICATION	0.0034833156838079546	DESIGN
the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999095314511686	WITHOUT_CLASSIFICATION	9.046854883148502E-5	DESIGN
FIXME: what is correct 'recv' argument? (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9723011984014163	DESIGN	0.027698801598583775	WITHOUT_CLASSIFICATION
gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9972043932803736	WITHOUT_CLASSIFICATION	0.0027956067196263684	DESIGN
OK, we now have the significand in digits[0...nDigits] and the exponent in exponent. We're ready to format.	WITHOUT_CLASSIFICATION	0.9988610925838932	WITHOUT_CLASSIFICATION	0.0011389074161067007	DESIGN
intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9215136887515439	WITHOUT_CLASSIFICATION	0.07848631124845608	DESIGN
intDigits = 1;	WITHOUT_CLASSIFICATION	0.9998012158163254	WITHOUT_CLASSIFICATION	1.9878418367465605E-4	DESIGN
System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9995614337592822	WITHOUT_CLASSIFICATION	4.3856624071782094E-4	DESIGN
System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9995758886158581	WITHOUT_CLASSIFICATION	4.241113841419512E-4	DESIGN
intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9215136887515439	WITHOUT_CLASSIFICATION	0.07848631124845608	DESIGN
intDigits = 1;	WITHOUT_CLASSIFICATION	0.9998012158163254	WITHOUT_CLASSIFICATION	1.9878418367465605E-4	DESIGN
precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9997616374069325	WITHOUT_CLASSIFICATION	2.3836259306748007E-4	DESIGN
deal with length/width	WITHOUT_CLASSIFICATION	0.9961172676763587	WITHOUT_CLASSIFICATION	0.003882732323641274	DESIGN
deal with length/width	WITHOUT_CLASSIFICATION	0.9961172676763587	WITHOUT_CLASSIFICATION	0.003882732323641274	DESIGN
first digit is always printed	WITHOUT_CLASSIFICATION	0.998746387636961	WITHOUT_CLASSIFICATION	0.0012536123630389456	DESIGN
MRI behavior: Be default, 2 digits in the exponent. Use 3 digits only when necessary. See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.966675007582665	WITHOUT_CLASSIFICATION	0.03332499241733499	DESIGN
5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999633170379225	WITHOUT_CLASSIFICATION	3.6682962077472585E-5	DESIGN
4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9998732701072703	WITHOUT_CLASSIFICATION	1.267298927297283E-4	DESIGN
in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.986759516997132	WITHOUT_CLASSIFICATION	0.013240483002867903	DESIGN
MRI behavior: In this mode trailing zeroes are removed: 1.500E+05 -> 1.5E+05	WITHOUT_CLASSIFICATION	0.9952133960096026	WITHOUT_CLASSIFICATION	0.004786603990397402	DESIGN
'.' is printed	WITHOUT_CLASSIFICATION	0.9992668453943581	WITHOUT_CLASSIFICATION	7.331546056420015E-4	DESIGN
all precision numebers printed	WITHOUT_CLASSIFICATION	0.9995505264642203	WITHOUT_CLASSIFICATION	4.4947353577973767E-4	DESIGN
now some data...	WITHOUT_CLASSIFICATION	0.9981225703855522	WITHOUT_CLASSIFICATION	0.0018774296144478363	DESIGN
'.'	WITHOUT_CLASSIFICATION	0.9992980010695869	WITHOUT_CLASSIFICATION	7.019989304130289E-4	DESIGN
decimal form, like (but not just like!) 'f'	WITHOUT_CLASSIFICATION	0.999297097982238	WITHOUT_CLASSIFICATION	7.029020177621035E-4	DESIGN
digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999236890721153	WITHOUT_CLASSIFICATION	7.631092788481963E-5	DESIGN
will have a trailing '.' g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9998434019223061	WITHOUT_CLASSIFICATION	1.565980776938748E-4	DESIGN
s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9998784033187208	WITHOUT_CLASSIFICATION	1.2159668127924095E-4	DESIGN
s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9998784033187208	WITHOUT_CLASSIFICATION	1.2159668127924095E-4	DESIGN
always need at least a 0	WITHOUT_CLASSIFICATION	0.9907143469595618	WITHOUT_CLASSIFICATION	0.009285653040438102	DESIGN
always need at least a 0	WITHOUT_CLASSIFICATION	0.9907143469595618	WITHOUT_CLASSIFICATION	0.009285653040438102	DESIGN
digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9997745005435733	WITHOUT_CLASSIFICATION	2.2549945642655241E-4	DESIGN
(1|intlen).prec	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
(1|intlen)	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
will have a trailing '.'	WITHOUT_CLASSIFICATION	0.999055542915941	WITHOUT_CLASSIFICATION	9.444570840588489E-4	DESIGN
fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9994390077208383	WITHOUT_CLASSIFICATION	5.609922791616895E-4	DESIGN
System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9995614337592822	WITHOUT_CLASSIFICATION	4.3856624071782094E-4	DESIGN
5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999633170379225	WITHOUT_CLASSIFICATION	3.6682962077472585E-5	DESIGN
4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9998732701072703	WITHOUT_CLASSIFICATION	1.267298927297283E-4	DESIGN
now some data...	WITHOUT_CLASSIFICATION	0.9981225703855522	WITHOUT_CLASSIFICATION	0.0018774296144478363	DESIGN
'.'	WITHOUT_CLASSIFICATION	0.9992980010695869	WITHOUT_CLASSIFICATION	7.019989304130289E-4	DESIGN
equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999066294113484	WITHOUT_CLASSIFICATION	9.337058865155789E-5	DESIGN
'.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999062494716268	WITHOUT_CLASSIFICATION	9.375052837319191E-5	DESIGN
\v	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
dangling '%' char	WITHOUT_CLASSIFICATION	0.9986787445439028	WITHOUT_CLASSIFICATION	0.0013212554560971825	DESIGN
main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999432527251781	WITHOUT_CLASSIFICATION	5.674727482185509E-5	DESIGN
debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9995484869817185	WITHOUT_CLASSIFICATION	4.5151301828141415E-4	DESIGN
MRI rounds up on nnn5nnn, but not nnn5 -- except for when they do	WITHOUT_CLASSIFICATION	0.9809889335178588	WITHOUT_CLASSIFICATION	0.01901106648214115	DESIGN
"%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9992294841563405	WITHOUT_CLASSIFICATION	7.705158436594443E-4	DESIGN
limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9998984368591276	WITHOUT_CLASSIFICATION	1.0156314087237831E-4	DESIGN
negative values	WITHOUT_CLASSIFICATION	0.9929024714755381	WITHOUT_CLASSIFICATION	0.007097528524461904	DESIGN
calculation for negatives when %u specified for values >= Integer.MIN_VALUE 2, MRI uses (the equivalent of) long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val for smaller values, BigInteger math is required to conform to MRI's result.	WITHOUT_CLASSIFICATION	0.9999598635598274	WITHOUT_CLASSIFICATION	4.013644017264424E-5	DESIGN
relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.999974263081744	WITHOUT_CLASSIFICATION	2.5736918256008265E-5	DESIGN
no such luck...	WITHOUT_CLASSIFICATION	0.9987757974166364	WITHOUT_CLASSIFICATION	0.0012242025833636972	DESIGN
ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9835788019369578	WITHOUT_CLASSIFICATION	0.016421198063042198	DESIGN
go through negated powers of 32 until we find one small enough	WITHOUT_CLASSIFICATION	0.9997706812192406	WITHOUT_CLASSIFICATION	2.2931878075934149E-4	DESIGN
add to the corresponding positive power of 32 for the result. meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.99875619355593	WITHOUT_CLASSIFICATION	0.001243806444070035	DESIGN
constant vector a	WITHOUT_CLASSIFICATION	0.9968867384710187	WITHOUT_CLASSIFICATION	0.0031132615289813457	DESIGN
most significant w-r bits	WITHOUT_CLASSIFICATION	0.999021924363684	WITHOUT_CLASSIFICATION	9.780756363160692E-4	DESIGN
least significant r bits	WITHOUT_CLASSIFICATION	0.9992306650188886	WITHOUT_CLASSIFICATION	7.693349811114487E-4	DESIGN
state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9988124467887727	WITHOUT_CLASSIFICATION	0.00118755321122727	DESIGN
state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9988124467887727	WITHOUT_CLASSIFICATION	0.00118755321122727	DESIGN
state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9988124467887727	WITHOUT_CLASSIFICATION	0.00118755321122727	DESIGN
MSB is 1; assuring non-zero initial array	WITHOUT_CLASSIFICATION	0.9999082379196871	WITHOUT_CLASSIFICATION	9.176208031300239E-5	DESIGN
Tempering	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
MRI behavior: Week values are monotonous. So, weeks that effectively belong to previous year, will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999413947289079	WITHOUT_CLASSIFICATION	5.8605271092104086E-5	DESIGN
System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9995658465650288	WITHOUT_CLASSIFICATION	4.341534349711607E-4	DESIGN
System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9995658465650288	WITHOUT_CLASSIFICATION	4.341534349711607E-4	DESIGN
\v	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9991856162036415	WITHOUT_CLASSIFICATION	8.143837963584149E-4	DESIGN
System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9995614337592822	WITHOUT_CLASSIFICATION	4.3856624071782094E-4	DESIGN
System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.999554008265669	WITHOUT_CLASSIFICATION	4.459917343309903E-4	DESIGN
System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.999554008265669	WITHOUT_CLASSIFICATION	4.459917343309903E-4	DESIGN
System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9995614337592822	WITHOUT_CLASSIFICATION	4.3856624071782094E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.998900527112762	WITHOUT_CLASSIFICATION	0.001099472887237909	DESIGN
System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9995614337592822	WITHOUT_CLASSIFICATION	4.3856624071782094E-4	DESIGN
no number	WITHOUT_CLASSIFICATION	0.9990296423764377	WITHOUT_CLASSIFICATION	9.703576235623561E-4	DESIGN
trailing garbage	WITHOUT_CLASSIFICATION	0.9995188247203216	WITHOUT_CLASSIFICATION	4.8117527967839023E-4	DESIGN
System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9995184792196358	WITHOUT_CLASSIFICATION	4.815207803642295E-4	DESIGN
it was not found at all!	WITHOUT_CLASSIFICATION	0.9964084079533237	WITHOUT_CLASSIFICATION	0.003591592046676199	DESIGN
can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9968726377296977	WITHOUT_CLASSIFICATION	0.00312736227030219	DESIGN
we reached the end of a list	WITHOUT_CLASSIFICATION	0.9998790722618489	WITHOUT_CLASSIFICATION	1.2092773815108378E-4	DESIGN
goto next bucket	WITHOUT_CLASSIFICATION	0.9968928593546111	WITHOUT_CLASSIFICATION	0.0031071406453889237	DESIGN
we reached the end	WITHOUT_CLASSIFICATION	0.9998854328381923	WITHOUT_CLASSIFICATION	1.1456716180759146E-4	DESIGN
entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9957071182800373	WITHOUT_CLASSIFICATION	0.004292881719962603	DESIGN
states	WITHOUT_CLASSIFICATION	0.999078426854183	WITHOUT_CLASSIFICATION	9.215731458170554E-4	DESIGN
remove leading whitespace (includes _ for lax) get sign, if any	WITHOUT_CLASSIFICATION	0.999763075992036	WITHOUT_CLASSIFICATION	2.3692400796406993E-4	DESIGN
optimistic pass - calculate value as digits are processed digits - lax rules decimal digits - lax rules exponent sign/digits - lax rules digits - strict rules decimal digits - strict rules exponent sign/digits - strict rules complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999949491670135	WITHOUT_CLASSIFICATION	5.050832986487705E-6	DESIGN
fields used for direct (optimistic) calculation number of significant digits, updated as parsed zeroes that may go to significand or exponent offset of decimal pt from start (-1 -> no decimal) significand, updated as parsed exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9992415165300615	WITHOUT_CLASSIFICATION	7.584834699385282E-4	DESIGN
drop through for sign	WITHOUT_CLASSIFICATION	0.995047704617045	WITHOUT_CLASSIFICATION	0.004952295382955066	DESIGN
switch will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9819585478108236	WITHOUT_CLASSIFICATION	0.018041452189176424	DESIGN
drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9986143575792326	WITHOUT_CLASSIFICATION	0.0013856424207674145	DESIGN
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999780582507629	WITHOUT_CLASSIFICATION	2.194174923711774E-5	DESIGN
ignore leading zeroes switch	WITHOUT_CLASSIFICATION	0.9990803060143407	WITHOUT_CLASSIFICATION	9.196939856592838E-4	DESIGN
no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9998719502360427	WITHOUT_CLASSIFICATION	1.280497639572917E-4	DESIGN
ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9992802545629816	WITHOUT_CLASSIFICATION	7.197454370184113E-4	DESIGN
just save a count of zeroes for now; if no digit ends up following them, they'll be applied to the exponent rather than the significand (and our max length for optimistic calc).	WITHOUT_CLASSIFICATION	0.996528122455694	WITHOUT_CLASSIFICATION	0.003471877544305956	DESIGN
ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9997382303660804	WITHOUT_CLASSIFICATION	2.617696339196097E-4	DESIGN
else catch oversize below	WITHOUT_CLASSIFICATION	0.9999241196277426	WITHOUT_CLASSIFICATION	7.588037225728068E-5	DESIGN
else catch oversize below	WITHOUT_CLASSIFICATION	0.9999241196277426	WITHOUT_CLASSIFICATION	7.588037225728068E-5	DESIGN
oh, well, it was worth a try. go let Double/FloatingDecimal handle it	WITHOUT_CLASSIFICATION	0.9978799733453138	WITHOUT_CLASSIFICATION	0.0021200266546862762	DESIGN
ignore switch	WITHOUT_CLASSIFICATION	0.9991705288325866	WITHOUT_CLASSIFICATION	8.294711674133687E-4	DESIGN
ignore switch	WITHOUT_CLASSIFICATION	0.9991705288325866	WITHOUT_CLASSIFICATION	8.294711674133687E-4	DESIGN
end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9996348093130308	WITHOUT_CLASSIFICATION	3.651906869692182E-4	DESIGN
end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9996348093130308	WITHOUT_CLASSIFICATION	3.651906869692182E-4	DESIGN
switch for	WITHOUT_CLASSIFICATION	0.9991038202440208	WITHOUT_CLASSIFICATION	8.96179755979168E-4	DESIGN
first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9996068054573674	WITHOUT_CLASSIFICATION	3.931945426325978E-4	DESIGN
no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9997672908118507	WITHOUT_CLASSIFICATION	2.3270918814935287E-4	DESIGN
switch if	WITHOUT_CLASSIFICATION	0.9996833175305707	WITHOUT_CLASSIFICATION	3.1668246942933925E-4	DESIGN
difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.999058830584655	WITHOUT_CLASSIFICATION	9.411694153450018E-4	DESIGN
block	WITHOUT_CLASSIFICATION	0.9993427209472601	WITHOUT_CLASSIFICATION	6.572790527398869E-4	DESIGN
block	WITHOUT_CLASSIFICATION	0.9993427209472601	WITHOUT_CLASSIFICATION	6.572790527398869E-4	DESIGN
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999780582507629	WITHOUT_CLASSIFICATION	2.194174923711774E-5	DESIGN
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999780582507629	WITHOUT_CLASSIFICATION	2.194174923711774E-5	DESIGN
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999780582507629	WITHOUT_CLASSIFICATION	2.194174923711774E-5	DESIGN
ignore leading zeroes switch	WITHOUT_CLASSIFICATION	0.9990803060143407	WITHOUT_CLASSIFICATION	9.196939856592838E-4	DESIGN
else catch oversize below	WITHOUT_CLASSIFICATION	0.9999241196277426	WITHOUT_CLASSIFICATION	7.588037225728068E-5	DESIGN
else catch oversize below	WITHOUT_CLASSIFICATION	0.9999241196277426	WITHOUT_CLASSIFICATION	7.588037225728068E-5	DESIGN
else catch oversize below	WITHOUT_CLASSIFICATION	0.9999241196277426	WITHOUT_CLASSIFICATION	7.588037225728068E-5	DESIGN
switch for	WITHOUT_CLASSIFICATION	0.9991038202440208	WITHOUT_CLASSIFICATION	8.96179755979168E-4	DESIGN
switch for	WITHOUT_CLASSIFICATION	0.9991038202440208	WITHOUT_CLASSIFICATION	8.96179755979168E-4	DESIGN
switch for	WITHOUT_CLASSIFICATION	0.9991038202440208	WITHOUT_CLASSIFICATION	8.96179755979168E-4	DESIGN
switch if	WITHOUT_CLASSIFICATION	0.9996833175305707	WITHOUT_CLASSIFICATION	3.1668246942933925E-4	DESIGN
switch if	WITHOUT_CLASSIFICATION	0.9996833175305707	WITHOUT_CLASSIFICATION	3.1668246942933925E-4	DESIGN
lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9974527792215723	WITHOUT_CLASSIFICATION	0.0025472207784276025	DESIGN
switch for no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9986375764225301	WITHOUT_CLASSIFICATION	0.0013624235774698625	DESIGN
switch for no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9990100672413544	WITHOUT_CLASSIFICATION	9.899327586455273E-4	DESIGN
TODO: it's not clear to me why, in FloatingDecimal, the "slop" calculation performed above for positive exponents isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9999959713981396	DESIGN	4.028601860463027E-6	WITHOUT_CLASSIFICATION
no digits, error	WITHOUT_CLASSIFICATION	0.9987499793085092	WITHOUT_CLASSIFICATION	0.0012500206914908911	DESIGN
too big for us	WITHOUT_CLASSIFICATION	0.9993420299391464	WITHOUT_CLASSIFICATION	6.579700608535731E-4	DESIGN
too big for us	WITHOUT_CLASSIFICATION	0.9993420299391464	WITHOUT_CLASSIFICATION	6.579700608535731E-4	DESIGN
must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9890731561381094	WITHOUT_CLASSIFICATION	0.01092684386189055	DESIGN
switch	WITHOUT_CLASSIFICATION	0.998900527112762	WITHOUT_CLASSIFICATION	0.001099472887237909	DESIGN
switch	WITHOUT_CLASSIFICATION	0.998900527112762	WITHOUT_CLASSIFICATION	0.001099472887237909	DESIGN
switch	WITHOUT_CLASSIFICATION	0.998900527112762	WITHOUT_CLASSIFICATION	0.001099472887237909	DESIGN
switch	WITHOUT_CLASSIFICATION	0.998900527112762	WITHOUT_CLASSIFICATION	0.001099472887237909	DESIGN
switch	WITHOUT_CLASSIFICATION	0.998900527112762	WITHOUT_CLASSIFICATION	0.001099472887237909	DESIGN
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999227698932904	WITHOUT_CLASSIFICATION	7.72301067095694E-5	DESIGN
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999227698932904	WITHOUT_CLASSIFICATION	7.72301067095694E-5	DESIGN
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999227698932904	WITHOUT_CLASSIFICATION	7.72301067095694E-5	DESIGN
first char must be digit	WITHOUT_CLASSIFICATION	0.9994246907449623	WITHOUT_CLASSIFICATION	5.753092550376152E-4	DESIGN
no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9986465996997737	WITHOUT_CLASSIFICATION	0.0013534003002263666	DESIGN
ignore leading zeroes switch	WITHOUT_CLASSIFICATION	0.9990803060143407	WITHOUT_CLASSIFICATION	9.196939856592838E-4	DESIGN
switch for	WITHOUT_CLASSIFICATION	0.9991038202440208	WITHOUT_CLASSIFICATION	8.96179755979168E-4	DESIGN
switch for	WITHOUT_CLASSIFICATION	0.9991038202440208	WITHOUT_CLASSIFICATION	8.96179755979168E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.998900527112762	WITHOUT_CLASSIFICATION	0.001099472887237909	DESIGN
switch	WITHOUT_CLASSIFICATION	0.998900527112762	WITHOUT_CLASSIFICATION	0.001099472887237909	DESIGN
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999227698932904	WITHOUT_CLASSIFICATION	7.72301067095694E-5	DESIGN
must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9890731561381094	WITHOUT_CLASSIFICATION	0.01092684386189055	DESIGN
Copy out any buffered bytes	WITHOUT_CLASSIFICATION	0.9994711207228488	WITHOUT_CLASSIFICATION	5.288792771512283E-4	DESIGN
switch while	WITHOUT_CLASSIFICATION	0.9988464579805238	WITHOUT_CLASSIFICATION	0.0011535420194761904	DESIGN
All the positive powers of 10 that can be represented exactly in double/float. (From sun.misc.FloatingDecimal.java)	WITHOUT_CLASSIFICATION	0.9999766443401187	WITHOUT_CLASSIFICATION	2.335565988122484E-5	DESIGN
Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9060188354829384	WITHOUT_CLASSIFICATION	0.09398116451706157	DESIGN
rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9988086530547068	WITHOUT_CLASSIFICATION	0.0011913469452933098	DESIGN
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9964490953260027	WITHOUT_CLASSIFICATION	0.003550904673997348	DESIGN
arg cannot be negative	WITHOUT_CLASSIFICATION	0.9941367807059294	WITHOUT_CLASSIFICATION	0.005863219294070554	DESIGN
NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9988086530547068	WITHOUT_CLASSIFICATION	0.0011913469452933098	DESIGN
Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.970230009467268	WITHOUT_CLASSIFICATION	0.029769990532731914	DESIGN
could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.8510063740971215	WITHOUT_CLASSIFICATION	0.1489936259028785	DESIGN
strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9997624850087262	WITHOUT_CLASSIFICATION	2.375149912738514E-4	DESIGN
Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9963233446895273	WITHOUT_CLASSIFICATION	0.003676655310472686	DESIGN
Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9992389381309422	WITHOUT_CLASSIFICATION	7.610618690578196E-4	DESIGN
Creates the new entry.	WITHOUT_CLASSIFICATION	0.999134647165756	WITHOUT_CLASSIFICATION	8.653528342441238E-4	DESIGN
next entry to return current slot current entry	WITHOUT_CLASSIFICATION	0.9992796427952093	WITHOUT_CLASSIFICATION	7.203572047905853E-4	DESIGN
advance to first entry	WITHOUT_CLASSIFICATION	0.9986473532831367	WITHOUT_CLASSIFICATION	0.0013526467168632208	DESIGN
The reason why we need the stream is to be able to invoke available() on it. STDIN in Java is non-interruptible, non-selectable, and attempt to read on such stream might lead to thread being blocked without any way to unblock it. That's where available() comes it, so at least we could check whether anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9474521374501154	WITHOUT_CLASSIFICATION	0.0525478625498845	DESIGN
package-protected	WITHOUT_CLASSIFICATION	0.9993636634588018	WITHOUT_CLASSIFICATION	6.363365411981305E-4	DESIGN
raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9996875003124863	WITHOUT_CLASSIFICATION	3.1249968751373663E-4	DESIGN
We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.999756142562554	WITHOUT_CLASSIFICATION	2.438574374458971E-4	DESIGN
if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999544977452243	WITHOUT_CLASSIFICATION	4.5502254775799625E-5	DESIGN
if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999511103298491	WITHOUT_CLASSIFICATION	4.888967015092673E-5	DESIGN
otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999954355673973	WITHOUT_CLASSIFICATION	4.5644326026652455E-6	DESIGN
r/w buffer are we reading or writing?	WITHOUT_CLASSIFICATION	0.9990236730649475	WITHOUT_CLASSIFICATION	9.763269350524524E-4	DESIGN
this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.7239295129105108	WITHOUT_CLASSIFICATION	0.27607048708948917	DESIGN
unread back	WITHOUT_CLASSIFICATION	0.9988060203192377	WITHOUT_CLASSIFICATION	0.0011939796807623549	DESIGN
iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9996096749959443	WITHOUT_CLASSIFICATION	3.903250040556979E-4	DESIGN
terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9986416128160682	WITHOUT_CLASSIFICATION	0.001358387183931761	DESIGN
no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.998017668588496	WITHOUT_CLASSIFICATION	0.0019823314115039077	DESIGN
found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999969746797488	WITHOUT_CLASSIFICATION	3.0253202511838734E-6	DESIGN
Check file size - special files in /proc have zero size and need to be handled by the generic read path.	WITHOUT_CLASSIFICATION	0.9999729554509782	WITHOUT_CLASSIFICATION	2.704454902178033E-5	DESIGN
Copy any buffered data (including ungetc byte)	WITHOUT_CLASSIFICATION	0.9998431038937431	WITHOUT_CLASSIFICATION	1.568961062568335E-4	DESIGN
Now read unbuffered directly from the file	WITHOUT_CLASSIFICATION	0.9998783574613593	WITHOUT_CLASSIFICATION	1.2164253864055643E-4	DESIGN
Copy out any buffered bytes	WITHOUT_CLASSIFICATION	0.9994711207228488	WITHOUT_CLASSIFICATION	5.288792771512283E-4	DESIGN
Need to clamp source (buffer) size to avoid overrun	WITHOUT_CLASSIFICATION	0.9997043998831734	WITHOUT_CLASSIFICATION	2.9560011682657747E-4	DESIGN
not closing from finalize	WITHOUT_CLASSIFICATION	0.9963419228833108	WITHOUT_CLASSIFICATION	0.0036580771166891688	DESIGN
clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999711111443036	WITHOUT_CLASSIFICATION	2.8888855696442457E-5	DESIGN
silence	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
silence	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
Don't bother	WITHOUT_CLASSIFICATION	0.9996719429050642	WITHOUT_CLASSIFICATION	3.28057094935773E-4	DESIGN
Don't bother	WITHOUT_CLASSIFICATION	0.9996719429050642	WITHOUT_CLASSIFICATION	3.28057094935773E-4	DESIGN
For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999496936800557	WITHOUT_CLASSIFICATION	5.030631994433004E-5	DESIGN
Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9989820366848247	WITHOUT_CLASSIFICATION	0.0010179633151754278	DESIGN
Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9997724690559507	WITHOUT_CLASSIFICATION	2.2753094404915413E-4	DESIGN
for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9995231110986934	WITHOUT_CLASSIFICATION	4.7688890130663514E-4	DESIGN
libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9995710659942314	WITHOUT_CLASSIFICATION	4.289340057685944E-4	DESIGN
we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9967067663350332	WITHOUT_CLASSIFICATION	0.0032932336649668537	DESIGN
128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9967429637585932	WITHOUT_CLASSIFICATION	0.003257036241406779	DESIGN
limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations	WITHOUT_CLASSIFICATION	0.9994668940801026	WITHOUT_CLASSIFICATION	5.331059198973873E-4	DESIGN
append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9898791295199466	WITHOUT_CLASSIFICATION	0.010120870480053409	DESIGN
Copy what is in the buffer, if there is some buffered data	WITHOUT_CLASSIFICATION	0.9999120164336105	WITHOUT_CLASSIFICATION	8.798356638960197E-5	DESIGN
Avoid double-copying for reads that are larger than the buffer size	WITHOUT_CLASSIFICATION	0.9999007660554237	WITHOUT_CLASSIFICATION	9.923394457636308E-5	DESIGN
Complete the request by filling the read buffer first	WITHOUT_CLASSIFICATION	0.9999668047114962	WITHOUT_CLASSIFICATION	3.319528850376066E-5	DESIGN
Complete the request by filling the read buffer first	WITHOUT_CLASSIFICATION	0.9999668047114962	WITHOUT_CLASSIFICATION	3.319528850376066E-5	DESIGN
Avoid double-copying for reads that are larger than the buffer size, or the destination is a direct buffer.	WITHOUT_CLASSIFICATION	0.9997271807689204	WITHOUT_CLASSIFICATION	2.7281923107962206E-4	DESIGN
We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating a huge temporary native buffer, when doing reads into a heap buffer If the dst buffer is direct, then no need to limit.	WITHOUT_CLASSIFICATION	0.9917280370891411	WITHOUT_CLASSIFICATION	0.008271962910858728	DESIGN
Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9979886534176705	WITHOUT_CLASSIFICATION	0.0020113465823295407	DESIGN
Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9979886534176705	WITHOUT_CLASSIFICATION	0.0020113465823295407	DESIGN
Doesn't fit in buffer. Write immediately. ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999957666372451	WITHOUT_CLASSIFICATION	4.233362754889031E-6	DESIGN
truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9996118610402523	WITHOUT_CLASSIFICATION	3.881389597477294E-4	DESIGN
how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9967706007284214	WITHOUT_CLASSIFICATION	0.003229399271578687	DESIGN
if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9997364401373834	WITHOUT_CLASSIFICATION	2.635598626167058E-4	DESIGN
close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999723425586738	WITHOUT_CLASSIFICATION	2.7657441326180824E-5	DESIGN
putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9332489902297736	WITHOUT_CLASSIFICATION	0.06675100977022642	DESIGN
save the ungot	WITHOUT_CLASSIFICATION	0.9993407760788683	WITHOUT_CLASSIFICATION	6.592239211317501E-4	DESIGN
otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9994295097991471	WITHOUT_CLASSIFICATION	5.704902008529654E-4	DESIGN
ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9961433793158582	WITHOUT_CLASSIFICATION	0.0038566206841417257	DESIGN
flush first	WITHOUT_CLASSIFICATION	0.999482171919664	WITHOUT_CLASSIFICATION	5.178280803359942E-4	DESIGN
Wake up any channels that became unblocked	WITHOUT_CLASSIFICATION	0.9993336696861327	WITHOUT_CLASSIFICATION	6.663303138672014E-4	DESIGN
Register any new blocking I/O requests	WITHOUT_CLASSIFICATION	0.9984172246595601	WITHOUT_CLASSIFICATION	0.0015827753404398883	DESIGN
Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999964126350835	WITHOUT_CLASSIFICATION	3.5873649165272606E-6	DESIGN
Wait for I/O on any channel	WITHOUT_CLASSIFICATION	0.9994470716432401	WITHOUT_CLASSIFICATION	5.529283567599636E-4	DESIGN
Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999815395585601	WITHOUT_CLASSIFICATION	1.846044143993811E-5	DESIGN
Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.996870336617055	WITHOUT_CLASSIFICATION	0.003129663382944965	DESIGN
seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.995757490317254	WITHOUT_CLASSIFICATION	0.004242509682745967	DESIGN
seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.99872128451206	WITHOUT_CLASSIFICATION	0.0012787154879399876	DESIGN
result = eval("arr = Array::['c', 200]; p arr"); assertEquals("[\"c\", 200]", result); result = eval("arr = Array.['d', 200]; p arr"); assertEquals("[\"d\", 200]", result);	WITHOUT_CLASSIFICATION	0.9999464618212727	WITHOUT_CLASSIFICATION	5.3538178727250964E-5	DESIGN
MRI ignores seek errors, presumably for unseekable files like serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.996562457925569	WITHOUT_CLASSIFICATION	0.0034375420744309337	DESIGN
TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.8021338370674918	DESIGN	0.19786616293250814	WITHOUT_CLASSIFICATION
make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9982698189542958	WITHOUT_CLASSIFICATION	0.001730181045704198	DESIGN
make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9989889195131921	WITHOUT_CLASSIFICATION	0.0010110804868079448	DESIGN
first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999095556013169	WITHOUT_CLASSIFICATION	9.044439868305717E-5	DESIGN
then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9993171852856988	WITHOUT_CLASSIFICATION	6.828147143011628E-4	DESIGN
if we get here, the class and field exist; construct our Unsafe impl that calls it directly	WITHOUT_CLASSIFICATION	0.9983935184363867	WITHOUT_CLASSIFICATION	0.0016064815636133722	DESIGN
else leave it null	WITHOUT_CLASSIFICATION	0.9999229349986658	WITHOUT_CLASSIFICATION	7.706500133414371E-5	DESIGN
TypeMatcher	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
This is now needed, since module Java isn't in by default	WITHOUT_CLASSIFICATION	0.9981814515883051	WITHOUT_CLASSIFICATION	0.001818548411694883	DESIGN
Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9997368071853833	WITHOUT_CLASSIFICATION	2.6319281461672025E-4	DESIGN
Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999622434974192	WITHOUT_CLASSIFICATION	3.7756502580858904E-5	DESIGN
Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999972979725901	WITHOUT_CLASSIFICATION	2.7020274099757366E-6	DESIGN
Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9996713343635373	WITHOUT_CLASSIFICATION	3.286656364626462E-4	DESIGN
Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9995468246416344	WITHOUT_CLASSIFICATION	4.531753583656586E-4	DESIGN
Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9995468246416344	WITHOUT_CLASSIFICATION	4.531753583656586E-4	DESIGN
Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9993718155869065	WITHOUT_CLASSIFICATION	6.281844130935631E-4	DESIGN
If we're running from within an IDE we may not have the .rb files in our classpath. Try to find them in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9998929823497883	WITHOUT_CLASSIFICATION	1.0701765021167086E-4	DESIGN
assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.999216213041087	WITHOUT_CLASSIFICATION	7.837869589130813E-4	DESIGN
Init	WITHOUT_CLASSIFICATION	0.9992060000346249	WITHOUT_CLASSIFICATION	7.939999653750904E-4	DESIGN
Block	WITHOUT_CLASSIFICATION	0.999158407050284	WITHOUT_CLASSIFICATION	8.415929497160256E-4	DESIGN
Copy constructor	WITHOUT_CLASSIFICATION	0.9983614133070262	WITHOUT_CLASSIFICATION	0.00163858669297385	DESIGN
presumably this require should fail	WITHOUT_CLASSIFICATION	0.9727955434423055	WITHOUT_CLASSIFICATION	0.027204456557694455	DESIGN
JRUBY-646 presumably this require should fail	WITHOUT_CLASSIFICATION	0.9727955434423055	WITHOUT_CLASSIFICATION	0.027204456557694455	DESIGN
Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999579771537266	WITHOUT_CLASSIFICATION	4.202284627339878E-5	DESIGN
ok	WITHOUT_CLASSIFICATION	0.997969218082356	WITHOUT_CLASSIFICATION	0.002030781917643967	DESIGN
Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9975037885176552	DESIGN	0.002496211482344814	WITHOUT_CLASSIFICATION
load should work several times in a row	WITHOUT_CLASSIFICATION	0.9486671166712167	WITHOUT_CLASSIFICATION	0.051332883328783246	DESIGN
reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9994161429342583	WITHOUT_CLASSIFICATION	5.838570657417456E-4	DESIGN
call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9997131089899457	WITHOUT_CLASSIFICATION	2.868910100543468E-4	DESIGN
Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999791501503466	WITHOUT_CLASSIFICATION	2.0849849653443143E-5	DESIGN
wait for the go signal	WITHOUT_CLASSIFICATION	0.9998660414486589	WITHOUT_CLASSIFICATION	1.339585513411652E-4	DESIGN
run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9925925825054822	WITHOUT_CLASSIFICATION	0.007407417494517812	DESIGN
wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999579241216405	WITHOUT_CLASSIFICATION	4.2075878359583485E-5	DESIGN
notify thread to proceed	WITHOUT_CLASSIFICATION	0.9992413178743574	WITHOUT_CLASSIFICATION	7.586821256425822E-4	DESIGN
wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999900419340755	WITHOUT_CLASSIFICATION	9.958065924550997E-6	DESIGN
we do preand post load outside the "body" versions to pre-prepare and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9588618991321549	WITHOUT_CLASSIFICATION	0.041138100867845015	DESIGN
out of byte range there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999824982220931	WITHOUT_CLASSIFICATION	1.7501777906901232E-5	DESIGN
MRI behavior: raise ArgumentError for 'unknown command' before checking number of args.	WITHOUT_CLASSIFICATION	0.9140911182300662	WITHOUT_CLASSIFICATION	0.08590888176993378	DESIGN
if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9998658899965898	WITHOUT_CLASSIFICATION	1.3411000341029372E-4	DESIGN
there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9660461457341821	WITHOUT_CLASSIFICATION	0.033953854265817825	DESIGN
construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9979510276875014	WITHOUT_CLASSIFICATION	0.0020489723124986004	DESIGN
Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9997869639614881	WITHOUT_CLASSIFICATION	2.1303603851184524E-4	DESIGN
assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9988086530547068	WITHOUT_CLASSIFICATION	0.0011913469452933098	DESIGN
void methods should work	WITHOUT_CLASSIFICATION	0.9762389604884119	WITHOUT_CLASSIFICATION	0.023761039511588165	DESIGN
methods with required = 4 or higher should bind and be callable using reflection JRUBY-3649	WITHOUT_CLASSIFICATION	0.9958503299779876	WITHOUT_CLASSIFICATION	0.0041496700220124355	DESIGN
Since we don't have any other error reporting mechanism, we add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.999997375670993	WITHOUT_CLASSIFICATION	2.62432900701508E-6	DESIGN
Ensure we have a new interpreter for each test. Previous we were using the same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.999999589103659	WITHOUT_CLASSIFICATION	4.108963409632679E-7	DESIGN
Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9988177040576504	WITHOUT_CLASSIFICATION	0.001182295942349575	DESIGN
assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9991856162036415	WITHOUT_CLASSIFICATION	8.143837963584149E-4	DESIGN
int n = 10;	WITHOUT_CLASSIFICATION	0.9999063421836353	WITHOUT_CLASSIFICATION	9.365781636465176E-5	DESIGN
there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9998732628056032	WITHOUT_CLASSIFICATION	1.2673719439684015E-4	DESIGN
No ClassCastException!	WITHOUT_CLASSIFICATION	0.9994833894924682	WITHOUT_CLASSIFICATION	5.16610507531805E-4	DESIGN
value equality	WITHOUT_CLASSIFICATION	0.9997321611806866	WITHOUT_CLASSIFICATION	2.6783881931342863E-4	DESIGN
identity equality	WITHOUT_CLASSIFICATION	0.9996355376665158	WITHOUT_CLASSIFICATION	3.64462333484136E-4	DESIGN
bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9992182939355148	WITHOUT_CLASSIFICATION	7.81706064485214E-4	DESIGN
bench Integer fib	WITHOUT_CLASSIFICATION	0.9988631456393796	WITHOUT_CLASSIFICATION	0.0011368543606203234	DESIGN
bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9988086530547068	WITHOUT_CLASSIFICATION	0.0011913469452933098	DESIGN
bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9988086530547068	WITHOUT_CLASSIFICATION	0.0011913469452933098	DESIGN
bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9988086530547068	WITHOUT_CLASSIFICATION	0.0011913469452933098	DESIGN
bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9989804121826535	WITHOUT_CLASSIFICATION	0.0010195878173463763	DESIGN
bench Long fib	WITHOUT_CLASSIFICATION	0.999216974823131	WITHOUT_CLASSIFICATION	7.830251768689571E-4	DESIGN
skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9755114252239251	WITHOUT_CLASSIFICATION	0.024488574776074842	DESIGN
start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9928968605909395	WITHOUT_CLASSIFICATION	0.007103139409060405	DESIGN
public class Hello { public static String getMessage() { return "....."; } }	WITHOUT_CLASSIFICATION	0.9965019887844109	WITHOUT_CLASSIFICATION	0.003498011215589033	DESIGN
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9896551940305556	WITHOUT_CLASSIFICATION	0.01034480596944448	DESIGN
Note: We can't use file.exists() to check whether the symlink exists or not, because that method returns false for existing but broken symlink. So, we try without the existence check, but in the try-catch block. MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.5060144513155225	DESIGN	0.4939855486844776	WITHOUT_CLASSIFICATION
We are creating a new IO object that shares the same IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9992626770854106	WITHOUT_CLASSIFICATION	7.373229145894315E-4	DESIGN
a while node could receive non-local flow control from any of these: a closure within the loop an eval within the loop a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999976259152128	WITHOUT_CLASSIFICATION	2.374084787198594E-6	DESIGN
[IRubyObject] [IRubyObject, IRubyObject] [IRubyObject, RubyClass] [IRubyObject, RubyClass, RubyClass] [IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9991856162036415	WITHOUT_CLASSIFICATION	8.143837963584149E-4	DESIGN
select appropriate call site dup receiver load self	WITHOUT_CLASSIFICATION	0.9946875584050661	WITHOUT_CLASSIFICATION	0.005312441594933946	DESIGN
Translate "x || y" --> "x = (is_true(x) ? x : y)" --> x = -- build(x) should return a variable! -- f = is_true(x) beq(f, true, L) x = -- build(y) -- L:	WITHOUT_CLASSIFICATION	0.9627494441135843	WITHOUT_CLASSIFICATION	0.037250555886415584	DESIGN
Force the client socket to be blocking	WITHOUT_CLASSIFICATION	0.9950059567931666	WITHOUT_CLASSIFICATION	0.0049940432068334	DESIGN
Additional context surrounding tokens that both the lexer and grammar use.	WITHOUT_CLASSIFICATION	0.999806387312078	WITHOUT_CLASSIFICATION	1.9361268792196192E-4	DESIGN
Enebo: c can never be antrhign but '.' Why did I put this here?	WITHOUT_CLASSIFICATION	0.7895591770259136	DESIGN	0.21044082297408645	WITHOUT_CLASSIFICATION
save package module as ivar in parent, and add method to parent so we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9770703317790884	WITHOUT_CLASSIFICATION	0.02292966822091155	DESIGN
[C,C] [C, boolean]	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
Label for the start of the closure (used to implement redo) Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9997508334868878	WITHOUT_CLASSIFICATION	2.49166513112227E-4	DESIGN
ignore; job was cancelled FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9984459296627712	DESIGN	0.001554070337228726	WITHOUT_CLASSIFICATION
check arity checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9997227472851828	WITHOUT_CLASSIFICATION	2.77252714817148E-4	DESIGN
rethrow exception rethrow it	WITHOUT_CLASSIFICATION	0.9982258583516102	WITHOUT_CLASSIFICATION	0.0017741416483899122	DESIGN
we take the first method found as our "n" method, since for any non-specific arity they'll all error the same. If an actual "n" method is created, we use that.	WITHOUT_CLASSIFICATION	0.9999998438175047	WITHOUT_CLASSIFICATION	1.5618249530322748E-7	DESIGN
Used by our duck-typification of Proc into interface types, to allow coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9993266761295155	WITHOUT_CLASSIFICATION	6.733238704845596E-4	DESIGN
proxy is under construction, building thread can safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999451675398426	WITHOUT_CLASSIFICATION	5.483246015734816E-5	DESIGN
it's either as converted as we can make it via above logic or it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.999494927097946	WITHOUT_CLASSIFICATION	5.050729020540288E-4	DESIGN
package scheme 2: separate module for each full package name, constructed from the camel-cased package segments: Java::JavaLang::Object,	WITHOUT_CLASSIFICATION	0.9967648095395035	WITHOUT_CLASSIFICATION	0.0032351904604965313	DESIGN
construct the proxy method	WITHOUT_CLASSIFICATION	0.9994875366462072	WITHOUT_CLASSIFICATION	5.124633537928107E-4	DESIGN
line 159 "-" %token constants	WITHOUT_CLASSIFICATION	0.9998799796233836	WITHOUT_CLASSIFICATION	1.2002037661649327E-4	DESIGN
+++ Helper Methods	WITHOUT_CLASSIFICATION	0.9997604904066449	WITHOUT_CLASSIFICATION	2.3950959335503793E-4	DESIGN
line 152 "-" %token constants	WITHOUT_CLASSIFICATION	0.9998799796233836	WITHOUT_CLASSIFICATION	1.2002037661649327E-4	DESIGN
initial size state stack value stack current input #tokens to shift	WITHOUT_CLASSIFICATION	0.9999830364950227	WITHOUT_CLASSIFICATION	1.6963504977224786E-5	DESIGN
+++ Helper Methods	WITHOUT_CLASSIFICATION	0.9997604904066449	WITHOUT_CLASSIFICATION	2.3950959335503793E-4	DESIGN
We only need to pass in current scope if we are evaluating as a block (which is only done for evals). We need to pass this in so that we can appropriately scope down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999675647032029	WITHOUT_CLASSIFICATION	3.243529679716448E-5	DESIGN
let the width (if any), get processed in the next loop, so any leading 0 gets treated correctly	WITHOUT_CLASSIFICATION	0.9988633496187783	WITHOUT_CLASSIFICATION	0.0011366503812215828	DESIGN
A place to store that special hiding space that bindings need to implement things like: eval("a = 1", binding); eval("p a"). All binding instances must get access to this hidden shared scope. We store it here. This will be null if no binding has yet been called.	WITHOUT_CLASSIFICATION	0.9999925379008997	WITHOUT_CLASSIFICATION	7.462099100170607E-6	DESIGN
TODO: make it 16 now ? MUST be power of 2!	WITHOUT_CLASSIFICATION	0.8891618087443214	DESIGN	0.11083819125567858	WITHOUT_CLASSIFICATION
check visibility dup method	WITHOUT_CLASSIFICATION	0.9988868716291632	WITHOUT_CLASSIFICATION	0.0011131283708367661	DESIGN
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9733074925613832	WITHOUT_CLASSIFICATION	0.026692507438616817	DESIGN
unsigned int, native unsigned long, native	WITHOUT_CLASSIFICATION	0.9996586313679852	WITHOUT_CLASSIFICATION	3.413686320149096E-4	DESIGN
need padding I'm fairly sure there is a library call to create a string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9682049080642208	WITHOUT_CLASSIFICATION	0.03179509193577928	DESIGN
MRI behavior: Be default, 2 digits in the exponent. Use 3 digits only when necessary. See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.966675007582665	WITHOUT_CLASSIFICATION	0.03332499241733499	DESIGN
MRI ignores seek errors, presumably for unseekable files like serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.996562457925569	WITHOUT_CLASSIFICATION	0.0034375420744309337	DESIGN
switch for no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9990100672413544	WITHOUT_CLASSIFICATION	9.899327586455273E-4	DESIGN
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9836553887937808	WITHOUT_CLASSIFICATION	0.01634461120621917	DESIGN
Estimate the square root with the foremost 62 bits of squarD bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9992236610010982	WITHOUT_CLASSIFICATION	7.763389989018733E-4	DESIGN
captures begin and end are used when not groups defined source string	WITHOUT_CLASSIFICATION	0.998280642836737	WITHOUT_CLASSIFICATION	0.0017193571632630503	DESIGN
INSTANCE VARIABLE RUBY METHODS	WITHOUT_CLASSIFICATION	0.9988359068557464	WITHOUT_CLASSIFICATION	0.001164093144253562	DESIGN
switch while	WITHOUT_CLASSIFICATION	0.9988464579805238	WITHOUT_CLASSIFICATION	0.0011535420194761904	DESIGN
For nodes do not have their own scope so we pass null to indicate this. 'For's are implemented as blocks in evaluation, but they have no scope so we just deal with this lack of scope throughout its lifespan. We should probably change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.7691811947951129	WITHOUT_CLASSIFICATION	0.23081880520488718	DESIGN
This field is used during argument processing to avoid putting RubyArray instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9369824283075184	WITHOUT_CLASSIFICATION	0.06301757169248161	DESIGN
Parent container for this context (can be dynamic!!) If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9991117751968308	WITHOUT_CLASSIFICATION	8.882248031691259E-4	DESIGN
Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> v1 = -- build(a) -- OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. while this info can be inferred by using attributes, why bother if we can do this? ret = false beq(v1, false, L) v2 = -- build(b) -- ret = v2 L:	WITHOUT_CLASSIFICATION	0.9340507362045498	DESIGN	0.0659492637954503	WITHOUT_CLASSIFICATION
expected	WITHOUT_CLASSIFICATION	0.9998452027877549	WITHOUT_CLASSIFICATION	1.5479721224515112E-4	DESIGN
Do nothing	WITHOUT_CLASSIFICATION	0.9996632256848077	WITHOUT_CLASSIFICATION	3.367743151922202E-4	DESIGN
constructor	WITHOUT_CLASSIFICATION	0.9977621799098503	WITHOUT_CLASSIFICATION	0.0022378200901496544	DESIGN
If a line is followed by a blank line put it back.	WITHOUT_CLASSIFICATION	0.9999870633740767	WITHOUT_CLASSIFICATION	1.293662592325789E-5	DESIGN
$>: default output handle	WITHOUT_CLASSIFICATION	0.9989574351248699	WITHOUT_CLASSIFICATION	0.001042564875130086	DESIGN
line 423	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 486	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
Signal uses sun.misc. classes, this is not allowed in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9991096501753921	WITHOUT_CLASSIFICATION	8.903498246080201E-4	DESIGN
re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9998728758865149	WITHOUT_CLASSIFICATION	1.2712411348515614E-4	DESIGN
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.6069176753150892	DESIGN	0.39308232468491083	WITHOUT_CLASSIFICATION
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.6069176753150892	DESIGN	0.39308232468491083	WITHOUT_CLASSIFICATION
colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9995077708234743	WITHOUT_CLASSIFICATION	4.92229176525662E-4	DESIGN
if there's no receiver, evaluate and pass in the superclass, or pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999983410929975	WITHOUT_CLASSIFICATION	1.6589070025985108E-6	DESIGN
Wire up Function#call(args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9979272248228996	WITHOUT_CLASSIFICATION	0.0020727751771003194	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.5001018236306697	DESIGN	0.49989817636933026	WITHOUT_CLASSIFICATION
TODO: varargs?	WITHOUT_CLASSIFICATION	0.5001018236306697	DESIGN	0.49989817636933026	WITHOUT_CLASSIFICATION
TODO: varargs?	WITHOUT_CLASSIFICATION	0.5001018236306697	DESIGN	0.49989817636933026	WITHOUT_CLASSIFICATION
TODO: varargs?	WITHOUT_CLASSIFICATION	0.5001018236306697	DESIGN	0.49989817636933026	WITHOUT_CLASSIFICATION
Decrease value to hit upper range.	WITHOUT_CLASSIFICATION	0.9987791040892222	WITHOUT_CLASSIFICATION	0.0012208959107778176	DESIGN
assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9990656871380162	WITHOUT_CLASSIFICATION	9.343128619837579E-4	DESIGN
"else" body	WITHOUT_CLASSIFICATION	0.9997304485778027	WITHOUT_CLASSIFICATION	2.6955142219732683E-4	DESIGN
done done done Nothing to do for 1.8 done done done done done done done? done done done done done done done done done done done case DEFINEDNODE: return buildDefined(node, m); Incomplete done done done done done done done done case ENSURENODE: return buildEnsureNode(node, m); DEFERRED done done done done case FLIPNODE: return buildFlip(node, m); SSS FIXME: What code generates this AST? done done done done done done done done done done done done done done done done done done? done done done done done done -- partially case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); DEFERRED SSS FIXME: What code generates this AST? done case POSTEXENODE: return buildPostExe(node, m); DEFERRED case PREEXENODE: return buildPreExe(node, m); DEFERRED done?? done	WITHOUT_CLASSIFICATION	0.5810798597572998	WITHOUT_CLASSIFICATION	0.4189201402427003	DESIGN
read-volatile	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
$+: string matches last paren.	WITHOUT_CLASSIFICATION	0.9999440205170388	WITHOUT_CLASSIFICATION	5.5979482961100976E-5	DESIGN
should alter global state	WITHOUT_CLASSIFICATION	0.9969451259230768	WITHOUT_CLASSIFICATION	0.0030548740769230976	DESIGN
should alter global state	WITHOUT_CLASSIFICATION	0.9969451259230768	WITHOUT_CLASSIFICATION	0.0030548740769230976	DESIGN
Ruby code frequently uses a platform check to choose "NUL:" on windows but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9377748767862667	WITHOUT_CLASSIFICATION	0.06222512321373342	DESIGN
10!	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
case RESCUENODE: return buildRescue(node, m); DEFERRED case RETRYNODE: return buildRetry(node, m); DEFERRED done	WITHOUT_CLASSIFICATION	0.9999377594663467	WITHOUT_CLASSIFICATION	6.224053365334797E-5	DESIGN
Is this instruction live or dead? During optimization passes, if this instruction causes no side-effects and the result of the instruction is not needed by anyone else, we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.8026188960168164	WITHOUT_CLASSIFICATION	0.1973811039831836	DESIGN
all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999020839842769	WITHOUT_CLASSIFICATION	9.791601572310422E-5	DESIGN
first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9996580613941622	WITHOUT_CLASSIFICATION	3.419386058376604E-4	DESIGN
Determine if the parameter might be passed as a 32bit int parameter. This just applies to buffer/pointer types.	WITHOUT_CLASSIFICATION	0.9993668311676274	WITHOUT_CLASSIFICATION	6.331688323726883E-4	DESIGN
Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.999946163856185	WITHOUT_CLASSIFICATION	5.383614381495992E-5	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
initial size state stack value stack current input #tokens to shift	WITHOUT_CLASSIFICATION	0.9999830364950227	WITHOUT_CLASSIFICATION	1.6963504977224786E-5	DESIGN
line 449	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 495	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
Management/monitoring	WITHOUT_CLASSIFICATION	0.9988086530547068	WITHOUT_CLASSIFICATION	0.0011913469452933098	DESIGN
if we've found the last char of the separator, and we've found at least as many characters as separator length, and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999986453398214	WITHOUT_CLASSIFICATION	1.3546601785888432E-6	DESIGN
14!	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
Process any set of annotations No supported options	WITHOUT_CLASSIFICATION	0.9998826120694461	WITHOUT_CLASSIFICATION	1.1738793055401504E-4	DESIGN
add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9983830057563239	WITHOUT_CLASSIFICATION	0.0016169942436760597	DESIGN
extract item from array	WITHOUT_CLASSIFICATION	0.9999941231566898	WITHOUT_CLASSIFICATION	5.876843310175267E-6	DESIGN
extract item from array	WITHOUT_CLASSIFICATION	0.9999941231566898	WITHOUT_CLASSIFICATION	5.876843310175267E-6	DESIGN
case SCLASSNODE: return buildSClass(node, m); DEFERRED done done done done done done done done case UNDEFNODE: return buildUndef(node, m); DEFERRED done case VALIASNODE: return buildVAlias(node, m); DEFERRED done done	WITHOUT_CLASSIFICATION	0.9999377594663467	WITHOUT_CLASSIFICATION	6.224053365334797E-5	DESIGN
Adding a post-invoke for the cb result serves to both keep it alive until after the function returns, and allows us to clean up the native trampoline early, instead of letting them accumulate until a GC run	WITHOUT_CLASSIFICATION	0.9983712546366654	WITHOUT_CLASSIFICATION	0.00162874536333456	DESIGN
The Java method doesn't care what class it is, but we need to know what to convert it to, so we use the object's own class. If that doesn't help, we use String to force a call to the object's "to_s" method.	WITHOUT_CLASSIFICATION	0.9872089972212007	WITHOUT_CLASSIFICATION	0.012791002778799394	DESIGN
index for the item	WITHOUT_CLASSIFICATION	0.9999861913183388	WITHOUT_CLASSIFICATION	1.380868166112672E-5	DESIGN
Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9994739673714913	WITHOUT_CLASSIFICATION	5.260326285087054E-4	DESIGN
18!	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9996571502614513	WITHOUT_CLASSIFICATION	3.428497385486286E-4	DESIGN
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9865530354704038	WITHOUT_CLASSIFICATION	0.01344696452959613	DESIGN
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9865530354704038	WITHOUT_CLASSIFICATION	0.01344696452959613	DESIGN
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9865530354704038	WITHOUT_CLASSIFICATION	0.01344696452959613	DESIGN
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9865530354704038	WITHOUT_CLASSIFICATION	0.01344696452959613	DESIGN
NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9985123084742794	WITHOUT_CLASSIFICATION	0.0014876915257206367	DESIGN
This method takes as input a map of operands to their values, and outputs the result of this instruction. If the value map provides a value for any of the instruction's operands the expectation is that the operand will be replaced with the simplified value. It is not required that it do so -- code correctness is not compromised by failure to simplify. @param valueMap Mapping from operands to their simplified values @returns simplified result / output of this instruction	WITHOUT_CLASSIFICATION	0.9617886489097507	WITHOUT_CLASSIFICATION	0.038211351090249195	DESIGN
Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9971141513217601	WITHOUT_CLASSIFICATION	0.0028858486782399923	DESIGN
An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9993615847176627	WITHOUT_CLASSIFICATION	6.384152823372939E-4	DESIGN
MRI behavior: always check whether the file is writable or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999933347872875	WITHOUT_CLASSIFICATION	6.665212712412464E-6	DESIGN
22!	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
attribute set.	WITHOUT_CLASSIFICATION	0.9995050364782626	WITHOUT_CLASSIFICATION	4.949635217372899E-4	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9980455494016266	WITHOUT_CLASSIFICATION	0.001954450598373454	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9980455494016266	WITHOUT_CLASSIFICATION	0.001954450598373454	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9980455494016266	WITHOUT_CLASSIFICATION	0.001954450598373454	DESIGN
fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999505805534394	WITHOUT_CLASSIFICATION	4.941944656059174E-5	DESIGN
Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9993619280844934	WITHOUT_CLASSIFICATION	6.380719155066366E-4	DESIGN
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.9795419358802628	WITHOUT_CLASSIFICATION	0.020458064119737256	DESIGN
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.9795419358802628	WITHOUT_CLASSIFICATION	0.020458064119737256	DESIGN
AF_INET	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
Now we provide default impls of a number of signatures. For each arity, we first generate a non-block version of the method, which just adds NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can potentially take a block, to only generate the block-receiving signature and still avoid arg boxing. We then provide default implementations of each block-accepting method that in turn call the IRubyObject[]+Block version of call. This then finally falls back on the minimum implementation requirement for dynamic method handles.	WITHOUT_CLASSIFICATION	0.9999998592454717	WITHOUT_CLASSIFICATION	1.4075452826458527E-7	DESIGN
Because we implement Java interfaces now, we need a new === that's aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9096511250302088	WITHOUT_CLASSIFICATION	0.09034887496979113	DESIGN
BASE64	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY when value is an integer less than 1. We treat 0 as a special case to avoid Domain error.	WITHOUT_CLASSIFICATION	0.9999944084349557	WITHOUT_CLASSIFICATION	5.591565044237647E-6	DESIGN
element set	WITHOUT_CLASSIFICATION	0.9981219061485117	WITHOUT_CLASSIFICATION	0.0018780938514883158	DESIGN
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9972029178681368	WITHOUT_CLASSIFICATION	0.0027970821318633174	DESIGN
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9972029178681368	WITHOUT_CLASSIFICATION	0.0027970821318633174	DESIGN
temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9990250817095029	WITHOUT_CLASSIFICATION	9.749182904970235E-4	DESIGN
SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode We won't get here for argument receives! So, buildDasgn is called for assignments to block variables within a block. As far as the IR is concerned, this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999997834814813	WITHOUT_CLASSIFICATION	2.1651851860707493E-7	DESIGN
getSimplifiedOperand returns the value of this operand, fully simplified getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away The value is used during optimizations and propagated through the IR. But, it is thrown away after that. But, the operand form is used for constructing the compound objects represented by the operand. Example: a = [1], b = [3,4], c = [a,b], d = [2,c] -- getValue(c) = [1,[3,4]]; getSimplifiedOperand(c) = [1, b] -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. So, if contents of a or b is modified, the "simplified value"s of c and d also change! This difference is captured by these two methods.	WITHOUT_CLASSIFICATION	0.8491628587543883	WITHOUT_CLASSIFICATION	0.15083714124561168	DESIGN
IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9985067033335313	WITHOUT_CLASSIFICATION	0.0014932966664687574	DESIGN
promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9777194172010262	WITHOUT_CLASSIFICATION	0.022280582798973762	DESIGN
Ruby's OMG capture all source in a Hash feature Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999965428510391	WITHOUT_CLASSIFICATION	3.457148960983368E-6	DESIGN
carriage return	WITHOUT_CLASSIFICATION	0.9996044313690949	WITHOUT_CLASSIFICATION	3.955686309049896E-4	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9983629748698222	WITHOUT_CLASSIFICATION	0.0016370251301778547	DESIGN
String construction routines by NOT byte[] buffer and making the target String shared	WITHOUT_CLASSIFICATION	0.9998490847573517	WITHOUT_CLASSIFICATION	1.5091524264836242E-4	DESIGN
insert all nodes in sequence, hash them in the final instruction KEY	WITHOUT_CLASSIFICATION	0.9999987027712499	WITHOUT_CLASSIFICATION	1.2972287500653507E-6	DESIGN
return last value from execution	WITHOUT_CLASSIFICATION	0.9998606642860841	WITHOUT_CLASSIFICATION	1.3933571391588846E-4	DESIGN
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9993475082938246	WITHOUT_CLASSIFICATION	6.524917061754255E-4	DESIGN
Basic Block id CFG that this basic block belongs to All basic blocks have a starting label List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999855106693386	WITHOUT_CLASSIFICATION	1.4489330661348027E-5	DESIGN
otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999919048824348	WITHOUT_CLASSIFICATION	8.095117565145966E-6	DESIGN
For all uninitialized specific arities, we defer to the "n" method which should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.878205693588827	DESIGN	0.12179430641117293	WITHOUT_CLASSIFICATION
implement is called to force this class to create stubs for all methods in the given interface, so they'll show up in the list of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9291821951446702	WITHOUT_CLASSIFICATION	0.07081780485532987	DESIGN
CASE IR instructions are dummy instructions -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999101256911811	WITHOUT_CLASSIFICATION	8.987430881886184E-5	DESIGN
check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.999943421036678	WITHOUT_CLASSIFICATION	5.6578963322023495E-5	DESIGN
leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999832916874327	WITHOUT_CLASSIFICATION	1.670831256735014E-5	DESIGN
Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999966870325089	WITHOUT_CLASSIFICATION	3.3129674911590912E-6	DESIGN
for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9983387288597106	WITHOUT_CLASSIFICATION	0.001661271140289388	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9983033731510164	WITHOUT_CLASSIFICATION	0.0016966268489837033	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9983033731510164	WITHOUT_CLASSIFICATION	0.0016966268489837033	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9983033731510164	WITHOUT_CLASSIFICATION	0.0016966268489837033	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9983033731510164	WITHOUT_CLASSIFICATION	0.0016966268489837033	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9983033731510164	WITHOUT_CLASSIFICATION	0.0016966268489837033	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9983033731510164	WITHOUT_CLASSIFICATION	0.0016966268489837033	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9983033731510164	WITHOUT_CLASSIFICATION	0.0016966268489837033	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9983033731510164	WITHOUT_CLASSIFICATION	0.0016966268489837033	DESIGN
Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9689549487283267	WITHOUT_CLASSIFICATION	0.031045051271673306	DESIGN
fall through	WITHOUT_CLASSIFICATION	0.9996518171358487	WITHOUT_CLASSIFICATION	3.4818286415135073E-4	DESIGN
deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9993019510136657	WITHOUT_CLASSIFICATION	6.980489863344012E-4	DESIGN
All errors to sysread should be SystemCallErrors, but on a closed stream Ruby returns an IOError. Java throws same exception for all errors so we resort to this hack...	WITHOUT_CLASSIFICATION	0.9894558106573595	DESIGN	0.01054418934264049	WITHOUT_CLASSIFICATION
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9896551940305556	WITHOUT_CLASSIFICATION	0.01034480596944448	DESIGN
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9896551940305556	WITHOUT_CLASSIFICATION	0.01034480596944448	DESIGN
store argument count information into scope	WITHOUT_CLASSIFICATION	0.9998916752185647	WITHOUT_CLASSIFICATION	1.0832478143534876E-4	DESIGN
the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9954390460044501	DESIGN	0.0045609539955498045	WITHOUT_CLASSIFICATION
First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9993683999593038	WITHOUT_CLASSIFICATION	6.316000406961321E-4	DESIGN
public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9994525416619775	WITHOUT_CLASSIFICATION	5.474583380225109E-4	DESIGN
get current context	WITHOUT_CLASSIFICATION	0.9999139627141423	WITHOUT_CLASSIFICATION	8.603728585775254E-5	DESIGN
octal constant	WITHOUT_CLASSIFICATION	0.9994208074089013	WITHOUT_CLASSIFICATION	5.791925910986758E-4	DESIGN
read	WITHOUT_CLASSIFICATION	0.999466946243031	WITHOUT_CLASSIFICATION	5.33053756969074E-4	DESIGN
this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.793606195968112	DESIGN	0.2063938040318881	WITHOUT_CLASSIFICATION
it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9870176981162441	WITHOUT_CLASSIFICATION	0.012982301883755912	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9960588835050367	WITHOUT_CLASSIFICATION	0.003941116494963279	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9960588835050367	WITHOUT_CLASSIFICATION	0.003941116494963279	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9960588835050367	WITHOUT_CLASSIFICATION	0.003941116494963279	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9993195187418791	WITHOUT_CLASSIFICATION	6.804812581208811E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9993195187418791	WITHOUT_CLASSIFICATION	6.804812581208811E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9993195187418791	WITHOUT_CLASSIFICATION	6.804812581208811E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9993195187418791	WITHOUT_CLASSIFICATION	6.804812581208811E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9993195187418791	WITHOUT_CLASSIFICATION	6.804812581208811E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9993195187418791	WITHOUT_CLASSIFICATION	6.804812581208811E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9993195187418791	WITHOUT_CLASSIFICATION	6.804812581208811E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9993195187418791	WITHOUT_CLASSIFICATION	6.804812581208811E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9993195187418791	WITHOUT_CLASSIFICATION	6.804812581208811E-4	DESIGN
ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9974575615695958	WITHOUT_CLASSIFICATION	0.0025424384304041626	DESIGN
at end	WITHOUT_CLASSIFICATION	0.9991335715273878	WITHOUT_CLASSIFICATION	8.664284726121355E-4	DESIGN
bang: true, no match, no substitution	WITHOUT_CLASSIFICATION	0.9986232141579291	WITHOUT_CLASSIFICATION	0.0013767858420709047	DESIGN
save blocking state	WITHOUT_CLASSIFICATION	0.9993635001999431	WITHOUT_CLASSIFICATION	6.364998000567854E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9993195187418791	WITHOUT_CLASSIFICATION	6.804812581208811E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9993195187418791	WITHOUT_CLASSIFICATION	6.804812581208811E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9993195187418791	WITHOUT_CLASSIFICATION	6.804812581208811E-4	DESIGN
invoke static __file__	WITHOUT_CLASSIFICATION	0.997735847052591	WITHOUT_CLASSIFICATION	0.0022641529474089904	DESIGN
rest of the argument array!	WITHOUT_CLASSIFICATION	0.9979064608845085	WITHOUT_CLASSIFICATION	0.0020935391154915774	DESIGN
fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9990757020711135	WITHOUT_CLASSIFICATION	9.242979288865311E-4	DESIGN
UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9858135295563334	WITHOUT_CLASSIFICATION	0.014186470443666586	DESIGN
UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9858135295563334	WITHOUT_CLASSIFICATION	0.014186470443666586	DESIGN
load null block	WITHOUT_CLASSIFICATION	0.9990586906499651	WITHOUT_CLASSIFICATION	9.413093500347885E-4	DESIGN
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999917931794945	WITHOUT_CLASSIFICATION	8.206820505463532E-6	DESIGN
nothing else to here - the module version will be included in the class.	WITHOUT_CLASSIFICATION	0.9995537214971085	WITHOUT_CLASSIFICATION	4.462785028914764E-4	DESIGN
JRUBY-1000, fail early when attempting to subclass a final Java class; solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9998920621333347	WITHOUT_CLASSIFICATION	1.0793786666537421E-4	DESIGN
block given	WITHOUT_CLASSIFICATION	0.9994027689035908	WITHOUT_CLASSIFICATION	5.972310964091796E-4	DESIGN
block given	WITHOUT_CLASSIFICATION	0.9994027689035908	WITHOUT_CLASSIFICATION	5.972310964091796E-4	DESIGN
Translate ret = (a || b) to ret = (a ? true : b) as follows v1 = -- build(a) -- OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. while this info can be inferred by using attributes, why bother if we can do this? ret = true beq(v1, true, L) v2 = -- build(b) -- ret = v2 L:	WITHOUT_CLASSIFICATION	0.9890169168173825	DESIGN	0.01098308318261761	WITHOUT_CLASSIFICATION
Initial precision is that of double numbers 2^63/2 ~ 4E18 63-1 an even number of number bits precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999468393108555	WITHOUT_CLASSIFICATION	5.316068914450197E-5	DESIGN
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9983442397211817	WITHOUT_CLASSIFICATION	0.0016557602788182797	DESIGN
self	WITHOUT_CLASSIFICATION	0.9989418921570226	WITHOUT_CLASSIFICATION	0.00105810784297743	DESIGN
self	WITHOUT_CLASSIFICATION	0.9989418921570226	WITHOUT_CLASSIFICATION	0.00105810784297743	DESIGN
self	WITHOUT_CLASSIFICATION	0.9989418921570226	WITHOUT_CLASSIFICATION	0.00105810784297743	DESIGN
declare the field	WITHOUT_CLASSIFICATION	0.9992948128641894	WITHOUT_CLASSIFICATION	7.051871358105928E-4	DESIGN
Assign the values.	WITHOUT_CLASSIFICATION	0.9989337107009444	WITHOUT_CLASSIFICATION	0.0010662892990555414	DESIGN
Assign the values.	WITHOUT_CLASSIFICATION	0.9989337107009444	WITHOUT_CLASSIFICATION	0.0010662892990555414	DESIGN
check arity	WITHOUT_CLASSIFICATION	0.9997328868247228	WITHOUT_CLASSIFICATION	2.671131752771562E-4	DESIGN
check arity	WITHOUT_CLASSIFICATION	0.9997328868247228	WITHOUT_CLASSIFICATION	2.671131752771562E-4	DESIGN
create the class	WITHOUT_CLASSIFICATION	0.9980869775125352	WITHOUT_CLASSIFICATION	0.0019130224874647672	DESIGN
called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999642530521422	WITHOUT_CLASSIFICATION	3.5746947857770374E-5	DESIGN
No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999174800174064	WITHOUT_CLASSIFICATION	8.251998259362069E-5	DESIGN
1.8	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
6:tags 16:addr 1:eos	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999576205974987	WITHOUT_CLASSIFICATION	4.237940250131037E-5	DESIGN
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9998600275759251	WITHOUT_CLASSIFICATION	1.3997242407488535E-4	DESIGN
block	WITHOUT_CLASSIFICATION	0.9993427209472601	WITHOUT_CLASSIFICATION	6.572790527398869E-4	DESIGN
Label for the start of the method Label for the end of the method	WITHOUT_CLASSIFICATION	0.9998937167290154	WITHOUT_CLASSIFICATION	1.0628327098459543E-4	DESIGN
comparisons & checks checks if the operand is non-null and non-false EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9974731004191032	WITHOUT_CLASSIFICATION	0.002526899580896703	DESIGN
FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.5606503421817814	WITHOUT_CLASSIFICATION	0.43934965781821866	DESIGN
invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9995075528806953	WITHOUT_CLASSIFICATION	4.924471193047138E-4	DESIGN
all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9936933801527482	WITHOUT_CLASSIFICATION	0.006306619847251855	DESIGN
allow proxy to be read without synchronization. if proxy is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.999985781588668	WITHOUT_CLASSIFICATION	1.4218411331918432E-5	DESIGN
Create list of interface names to proxy (and make sure they really are interfaces) Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9242016188211389	WITHOUT_CLASSIFICATION	0.07579838117886113	DESIGN
Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9933330367431417	WITHOUT_CLASSIFICATION	0.006666963256858277	DESIGN
Value of "TZ" property is of a bit different format, which confuses the Java's TimeZone.getTimeZone(id) method, and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9789298765621149	WITHOUT_CLASSIFICATION	0.021070123437885075	DESIGN
file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9937651311571376	WITHOUT_CLASSIFICATION	0.006234868842862365	DESIGN
ensure the object is associated with the wrapper we found it in, so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.999998455469786	WITHOUT_CLASSIFICATION	1.544530213890431E-6	DESIGN
return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9996332752974232	WITHOUT_CLASSIFICATION	3.6672470257682476E-4	DESIGN
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9836553887937808	WITHOUT_CLASSIFICATION	0.01634461120621917	DESIGN
arg	WITHOUT_CLASSIFICATION	0.9994576228181379	WITHOUT_CLASSIFICATION	5.423771818620706E-4	DESIGN
Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999981994381257	WITHOUT_CLASSIFICATION	1.8005618741784067E-6	DESIGN
normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999738626887789	WITHOUT_CLASSIFICATION	2.613731122106191E-5	DESIGN
coerce arguments	WITHOUT_CLASSIFICATION	0.9990791596287205	WITHOUT_CLASSIFICATION	9.208403712794164E-4	DESIGN
0.0 is ok float range inverted float range? NaN +infinity -infinity	WITHOUT_CLASSIFICATION	0.9997103917361702	WITHOUT_CLASSIFICATION	2.896082638297867E-4	DESIGN
expected	WITHOUT_CLASSIFICATION	0.9998452027877549	WITHOUT_CLASSIFICATION	1.5479721224515112E-4	DESIGN
set this class's method names in var @__java_ovrd_methods if this is the new class; otherwise, get method names from there if this is a proxy superclass.	WITHOUT_CLASSIFICATION	0.9997553247161571	WITHOUT_CLASSIFICATION	2.4467528384283365E-4	DESIGN
ignore backslashed spaces in %w	WITHOUT_CLASSIFICATION	0.9991267291526684	WITHOUT_CLASSIFICATION	8.732708473315537E-4	DESIGN
Invert the sign, since TZ format and Java format use opposite signs, sigh... Also, Java API requires the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9976465243662725	WITHOUT_CLASSIFICATION	0.0023534756337275273	DESIGN
no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9995894837005632	WITHOUT_CLASSIFICATION	4.105162994367674E-4	DESIGN
<=> may return nil in many circumstances, e.g. 3 <=> NaN	WITHOUT_CLASSIFICATION	0.9986206590148602	WITHOUT_CLASSIFICATION	0.0013793409851398065	DESIGN
use numbered access method	WITHOUT_CLASSIFICATION	0.9913229170923072	WITHOUT_CLASSIFICATION	0.008677082907692755	DESIGN
Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999127322551435	WITHOUT_CLASSIFICATION	8.726774485652768E-5	DESIGN
ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9998677272144684	WITHOUT_CLASSIFICATION	1.322727855317105E-4	DESIGN
The dataStruct is a place where custom information can be contained for core implementations that doesn't necessarily want to go to the trouble of creating a subclass of RubyObject. The OpenSSL implementation uses this heavily to save holder objects containing Java cryptography objects. Java integration uses this to store the Java object ref. protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9995128538631608	WITHOUT_CLASSIFICATION	4.871461368391961E-4	DESIGN
Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9977051338944641	WITHOUT_CLASSIFICATION	0.0022948661055357477	DESIGN
arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9976196096629868	WITHOUT_CLASSIFICATION	0.0023803903370132264	DESIGN
build scope names string	WITHOUT_CLASSIFICATION	0.999748204013631	WITHOUT_CLASSIFICATION	2.517959863691146E-4	DESIGN
Tries to load at compile-time the constant referred to by 'constRef'. This might be possible if the constant is defined and is not a forward reference to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9364293756497144	WITHOUT_CLASSIFICATION	0.06357062435028556	DESIGN
Here we create an "anonymous" exception type used for unrolling the stack. MRI creates a new one for every call to timeout, which can be costly. We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.6989780956678219	WITHOUT_CLASSIFICATION	0.3010219043321781	DESIGN
finally	WITHOUT_CLASSIFICATION	0.9991232330940609	WITHOUT_CLASSIFICATION	8.767669059389553E-4	DESIGN
MRI behavior: With TZ equal to "GMT" or "UTC", Time.now is NOT considered as a proper GMT/UTC time: ENV['TZ']="GMT" Time.now.gmt? ==> false ENV['TZ']="UTC" Time.now.utc? ==> false Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9993525786320416	WITHOUT_CLASSIFICATION	6.474213679583205E-4	DESIGN
?l | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999824770937235	WITHOUT_CLASSIFICATION	1.7522906276614758E-5	DESIGN
This try/catch is to allow failing over to the "commands" logic when running from within a jruby-complete jar file, which has jruby.home = a jar file URL that does not resolve correctly with JRubyFile.create.	WITHOUT_CLASSIFICATION	0.990371954217234	WITHOUT_CLASSIFICATION	0.00962804578276593	DESIGN
Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9963887873839564	WITHOUT_CLASSIFICATION	0.003611212616043631	DESIGN
specific arity	WITHOUT_CLASSIFICATION	0.9989117748355975	WITHOUT_CLASSIFICATION	0.001088225164402498	DESIGN
In the case of two arguments, MRI will discard the portion of the first argument after a decimal point (i.e., "floor"). However in the case of a single argument, any portion after the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999997233020391	WITHOUT_CLASSIFICATION	2.766979609032196E-7	DESIGN
?w | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999919476441023	WITHOUT_CLASSIFICATION	8.052355897738555E-6	DESIGN
COMMON VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9987282124042417	WITHOUT_CLASSIFICATION	0.0012717875957582317	DESIGN
@JRubyMethod public IRubyObject to_proc() { return RubyProc.newProc(getRuntime(), CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()), Block.Type.PROC); }	WITHOUT_CLASSIFICATION	0.9997619215109546	WITHOUT_CLASSIFICATION	2.3807848904540003E-4	DESIGN
let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9983729761174261	WITHOUT_CLASSIFICATION	0.0016270238825738727	DESIGN
let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9983729761174261	WITHOUT_CLASSIFICATION	0.0016270238825738727	DESIGN
do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.999882036805252	WITHOUT_CLASSIFICATION	1.179631947479454E-4	DESIGN
do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.999882036805252	WITHOUT_CLASSIFICATION	1.179631947479454E-4	DESIGN
Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9539845583485906	WITHOUT_CLASSIFICATION	0.04601544165140941	DESIGN
Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9539845583485906	WITHOUT_CLASSIFICATION	0.04601544165140941	DESIGN
================ Utility Methods ================	WITHOUT_CLASSIFICATION	0.9988842823877196	WITHOUT_CLASSIFICATION	0.001115717612280281	DESIGN
================ Utility Methods ================	WITHOUT_CLASSIFICATION	0.9988842823877196	WITHOUT_CLASSIFICATION	0.001115717612280281	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9989160815913631	WITHOUT_CLASSIFICATION	0.0010839184086368833	DESIGN
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9989160815913631	WITHOUT_CLASSIFICATION	0.0010839184086368833	DESIGN
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9989160815913631	WITHOUT_CLASSIFICATION	0.0010839184086368833	DESIGN
Add property name aliases	WITHOUT_CLASSIFICATION	0.9990310126513808	WITHOUT_CLASSIFICATION	9.689873486193095E-4	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999797876714283	WITHOUT_CLASSIFICATION	2.021232857179103E-5	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999797876714283	WITHOUT_CLASSIFICATION	2.021232857179103E-5	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999797876714283	WITHOUT_CLASSIFICATION	2.021232857179103E-5	DESIGN
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9978404440779509	WITHOUT_CLASSIFICATION	0.0021595559220490656	DESIGN
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9978404440779509	WITHOUT_CLASSIFICATION	0.0021595559220490656	DESIGN
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9978404440779509	WITHOUT_CLASSIFICATION	0.0021595559220490656	DESIGN
INTERNAL VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9988359068557464	WITHOUT_CLASSIFICATION	0.001164093144253562	DESIGN
backspace	WITHOUT_CLASSIFICATION	0.9991676522994138	WITHOUT_CLASSIFICATION	8.32347700586245E-4	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
package-private	WITHOUT_CLASSIFICATION	0.9993716727415555	WITHOUT_CLASSIFICATION	6.283272584445894E-4	DESIGN
fall through	WITHOUT_CLASSIFICATION	0.9996518171358487	WITHOUT_CLASSIFICATION	3.4818286415135073E-4	DESIGN
fall through	WITHOUT_CLASSIFICATION	0.9996518171358487	WITHOUT_CLASSIFICATION	3.4818286415135073E-4	DESIGN
MRI issuses warning here on (RBIGNUM(x)->len SIZEOF_BDIGITS yy > 10241024)	WITHOUT_CLASSIFICATION	0.9824721104985301	WITHOUT_CLASSIFICATION	0.01752788950146997	DESIGN
interrupt the target thread in case it's blocking or waiting WARNING: We no longer interrupt the target thread, since this usually means interrupting IO and with NIO that means the channel is no longer usable. We either need a new way to handle waking a target thread that's waiting on IO, or we need to accept that we can't wake such threads and must wait for them to complete their operation. threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999998161546841	WITHOUT_CLASSIFICATION	1.8384531577836213E-7	DESIGN
interrupt the target thread in case it's blocking or waiting WARNING: We no longer interrupt the target thread, since this usually means interrupting IO and with NIO that means the channel is no longer usable. We either need a new way to handle waking a target thread that's waiting on IO, or we need to accept that we can't wake such threads and must wait for them to complete their operation. threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999998161546841	WITHOUT_CLASSIFICATION	1.8384531577836213E-7	DESIGN
Nested class whose instances act as thunks reacting to to_str method called from (Exception#to_str, Exception#message) MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!", to_str implementation: "name_err_mesg_to_str" TODO: this class should not be lookupable	WITHOUT_CLASSIFICATION	0.5362025314908875	DESIGN	0.46379746850911246	WITHOUT_CLASSIFICATION
We need to guarantee that any existing reads of old Map can proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999767128179273	WITHOUT_CLASSIFICATION	2.3287182072651615E-5	DESIGN
The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9996962395145332	WITHOUT_CLASSIFICATION	3.037604854667154E-4	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998532292771718	WITHOUT_CLASSIFICATION	1.4677072282822905E-4	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998532292771718	WITHOUT_CLASSIFICATION	1.4677072282822905E-4	DESIGN
This should only be called by this and RubyFile. It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.7196383440095627	WITHOUT_CLASSIFICATION	0.2803616559904372	DESIGN
We yield here to hopefully permit the target thread to schedule MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999813624903362	WITHOUT_CLASSIFICATION	1.863750966378437E-5	DESIGN
note that addMethod now does its own put, so any change made to functionality here should be made there as well	WITHOUT_CLASSIFICATION	0.9207253295524295	WITHOUT_CLASSIFICATION	0.0792746704475705	DESIGN
Currently dead code, but useful when we figure out how to actually perform translit. private static boolean isTranslit(String encoding) { return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false; }	WITHOUT_CLASSIFICATION	0.9193913814011796	DESIGN	0.08060861859882039	WITHOUT_CLASSIFICATION
empirically it appears that to_ary coersions always return array or nil, so this should always be an array by now.	WITHOUT_CLASSIFICATION	0.9972159358309733	WITHOUT_CLASSIFICATION	0.0027840641690267407	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998532292771718	WITHOUT_CLASSIFICATION	1.4677072282822905E-4	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998532292771718	WITHOUT_CLASSIFICATION	1.4677072282822905E-4	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998532292771718	WITHOUT_CLASSIFICATION	1.4677072282822905E-4	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998532292771718	WITHOUT_CLASSIFICATION	1.4677072282822905E-4	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998532292771718	WITHOUT_CLASSIFICATION	1.4677072282822905E-4	DESIGN
No seconds, just yield	WITHOUT_CLASSIFICATION	0.9996108853867804	WITHOUT_CLASSIFICATION	3.8911461321956646E-4	DESIGN
finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.99929774143222	WITHOUT_CLASSIFICATION	7.022585677798879E-4	DESIGN
if it's an inner class and it's not public, we can't access it; skip population of declared elements	WITHOUT_CLASSIFICATION	0.9989390683075325	WITHOUT_CLASSIFICATION	0.0010609316924674542	DESIGN
getFoo => foo getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9997305368205022	WITHOUT_CLASSIFICATION	2.694631794978562E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991235374467142	WITHOUT_CLASSIFICATION	8.764625532857504E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991235374467142	WITHOUT_CLASSIFICATION	8.764625532857504E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991235374467142	WITHOUT_CLASSIFICATION	8.764625532857504E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991235374467142	WITHOUT_CLASSIFICATION	8.764625532857504E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991235374467142	WITHOUT_CLASSIFICATION	8.764625532857504E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991235374467142	WITHOUT_CLASSIFICATION	8.764625532857504E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991235374467142	WITHOUT_CLASSIFICATION	8.764625532857504E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991235374467142	WITHOUT_CLASSIFICATION	8.764625532857504E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991235374467142	WITHOUT_CLASSIFICATION	8.764625532857504E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991235374467142	WITHOUT_CLASSIFICATION	8.764625532857504E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991235374467142	WITHOUT_CLASSIFICATION	8.764625532857504E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991235374467142	WITHOUT_CLASSIFICATION	8.764625532857504E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991235374467142	WITHOUT_CLASSIFICATION	8.764625532857504E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991235374467142	WITHOUT_CLASSIFICATION	8.764625532857504E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991235374467142	WITHOUT_CLASSIFICATION	8.764625532857504E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991235374467142	WITHOUT_CLASSIFICATION	8.764625532857504E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991235374467142	WITHOUT_CLASSIFICATION	8.764625532857504E-4	DESIGN
MRI behavior on Windows: it treats '/' as a root of a current drive (but only if SINGLE slash is present!): E.g., if current work directory is 'D:/home/directory', then '/' means 'D:/'. Basically, '/path' is treated as a RELATIVE path, relative to the current drive. 'path' is treated as absolute one.	WITHOUT_CLASSIFICATION	0.9998618238752496	WITHOUT_CLASSIFICATION	1.3817612475040125E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991235374467142	WITHOUT_CLASSIFICATION	8.764625532857504E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991235374467142	WITHOUT_CLASSIFICATION	8.764625532857504E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991235374467142	WITHOUT_CLASSIFICATION	8.764625532857504E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991235374467142	WITHOUT_CLASSIFICATION	8.764625532857504E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991235374467142	WITHOUT_CLASSIFICATION	8.764625532857504E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991235374467142	WITHOUT_CLASSIFICATION	8.764625532857504E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991235374467142	WITHOUT_CLASSIFICATION	8.764625532857504E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991235374467142	WITHOUT_CLASSIFICATION	8.764625532857504E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991235374467142	WITHOUT_CLASSIFICATION	8.764625532857504E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991235374467142	WITHOUT_CLASSIFICATION	8.764625532857504E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991235374467142	WITHOUT_CLASSIFICATION	8.764625532857504E-4	DESIGN
This is needed when the enclosing class or module is a singleton. In that case, we generated a name such as null::Foo, which broke Marshalling, among others. The correct thing to do in this situation is to insert the generate the name of form #<Class:01xasdfasd> if it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9408469555728469	DESIGN	0.05915304442715299	WITHOUT_CLASSIFICATION
this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9975350615477662	WITHOUT_CLASSIFICATION	0.0024649384522338535	DESIGN
EQ == 0 (i.e. false) pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.994394586075069	WITHOUT_CLASSIFICATION	0.005605413924931004	DESIGN
get "self"	WITHOUT_CLASSIFICATION	0.99940612843183	WITHOUT_CLASSIFICATION	5.938715681699767E-4	DESIGN
No timeout in critical section	WITHOUT_CLASSIFICATION	0.9986327028087257	WITHOUT_CLASSIFICATION	0.0013672971912742442	DESIGN
rethrow exception rethrow it	WITHOUT_CLASSIFICATION	0.9982258583516102	WITHOUT_CLASSIFICATION	0.0017741416483899122	DESIGN
only public methods	WITHOUT_CLASSIFICATION	0.9999449914261201	WITHOUT_CLASSIFICATION	5.5008573879834095E-5	DESIGN
If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999133688475996	WITHOUT_CLASSIFICATION	8.663115240040514E-5	DESIGN
First try to use drive letter from supplied dir value, then try current work dir.	WITHOUT_CLASSIFICATION	0.999792883641456	WITHOUT_CLASSIFICATION	2.0711635854402954E-4	DESIGN
JRUBY-2435: Aliasing eval and other "special" methods should display a warning We warn because we treat certain method names as "special" for purposes of optimization. Hopefully this will be enough to convince people not to alias them.	WITHOUT_CLASSIFICATION	0.8778125119880906	WITHOUT_CLASSIFICATION	0.12218748801190944	DESIGN
generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9988084152579718	WITHOUT_CLASSIFICATION	0.001191584742028181	DESIGN
block argument to the method closure present class present method table mutations, def, defs, undef, alias likely call to eval makes calls that are aware of the frame makes calls that are aware of the frame's self makes calls that are aware of the frame's visibility makes calls that are aware of the frame's block makes calls that are aware of the frame's name makes calls that set or get backref makes calls that set or get lastline makes calls that are aware of the frame's class optional arguments to the method rest arg to the method makes calls that are aware of the scope makes a zero-argument super call accesses or sets constants accesses or sets class variables makes normal super call contains a retry	WITHOUT_CLASSIFICATION	0.9999980412374853	WITHOUT_CLASSIFICATION	1.9587625147643845E-6	DESIGN
Add aliases in Type::, NativeType:: and FFI::TYPE_	WITHOUT_CLASSIFICATION	0.9994882807838457	WITHOUT_CLASSIFICATION	5.117192161542996E-4	DESIGN
Create constants for flock	WITHOUT_CLASSIFICATION	0.9998486431445579	WITHOUT_CLASSIFICATION	1.5135685544220197E-4	DESIGN
double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9996388309952686	WITHOUT_CLASSIFICATION	3.6116900473131327E-4	DESIGN
indices for temp values	WITHOUT_CLASSIFICATION	0.9997734918090803	WITHOUT_CLASSIFICATION	2.2650819091980432E-4	DESIGN
a while node could receive non-local flow control from any of these: a closure within the loop an eval within the loop a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999976259152128	WITHOUT_CLASSIFICATION	2.374084787198594E-6	DESIGN
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9987474806136538	WITHOUT_CLASSIFICATION	0.0012525193863461754	DESIGN
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9987474806136538	WITHOUT_CLASSIFICATION	0.0012525193863461754	DESIGN
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9987474806136538	WITHOUT_CLASSIFICATION	0.0012525193863461754	DESIGN
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9987474806136538	WITHOUT_CLASSIFICATION	0.0012525193863461754	DESIGN
snapshot of contents of directory current position in directory	WITHOUT_CLASSIFICATION	0.9999937790448915	WITHOUT_CLASSIFICATION	6.220955108562405E-6	DESIGN
Exclusive locks in Java require the channel to be writable, otherwise an exception is thrown (terminating JRuby execution). But flock behavior of MRI is that it allows exclusive locks even on non-writable file. So we convert exclusive lock to shared lock if the channel is not writable, to better match the MRI behavior.	WITHOUT_CLASSIFICATION	0.9986321361285656	WITHOUT_CLASSIFICATION	0.001367863871434352	DESIGN
explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9998865851210494	WITHOUT_CLASSIFICATION	1.1341487895066912E-4	DESIGN
explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9998865851210494	WITHOUT_CLASSIFICATION	1.1341487895066912E-4	DESIGN
set self to the class	WITHOUT_CLASSIFICATION	0.9940700078411243	WITHOUT_CLASSIFICATION	0.00592999215887564	DESIGN
---------- Public fields, methods ---------	WITHOUT_CLASSIFICATION	0.999338481288724	WITHOUT_CLASSIFICATION	6.615187112759341E-4	DESIGN
A specific version was requested - use as is for search	WITHOUT_CLASSIFICATION	0.9996173850042024	WITHOUT_CLASSIFICATION	3.826149957976155E-4	DESIGN
zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999558422114843	WITHOUT_CLASSIFICATION	4.4157788515707465E-5	DESIGN
we need to collect all methods, though we'll only install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9885395710947544	WITHOUT_CLASSIFICATION	0.011460428905245502	DESIGN
Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9986805281321879	WITHOUT_CLASSIFICATION	0.0013194718678121399	DESIGN
Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9998459322304846	WITHOUT_CLASSIFICATION	1.5406776951538376E-4	DESIGN
do nothing	WITHOUT_CLASSIFICATION	0.9995423009005762	WITHOUT_CLASSIFICATION	4.576990994238609E-4	DESIGN
do nothing	WITHOUT_CLASSIFICATION	0.9995423009005762	WITHOUT_CLASSIFICATION	4.576990994238609E-4	DESIGN
do nothing	WITHOUT_CLASSIFICATION	0.9995423009005762	WITHOUT_CLASSIFICATION	4.576990994238609E-4	DESIGN
do nothing	WITHOUT_CLASSIFICATION	0.9995423009005762	WITHOUT_CLASSIFICATION	4.576990994238609E-4	DESIGN
If an IO exception occurs (something odd, but possible) A directory may return null.	WITHOUT_CLASSIFICATION	0.9999955039505184	WITHOUT_CLASSIFICATION	4.496049481588369E-6	DESIGN
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.998031565973572	WITHOUT_CLASSIFICATION	0.0019684340264279634	DESIGN
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.998031565973572	WITHOUT_CLASSIFICATION	0.0019684340264279634	DESIGN
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.998031565973572	WITHOUT_CLASSIFICATION	0.0019684340264279634	DESIGN
use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9961999680952562	WITHOUT_CLASSIFICATION	0.0038000319047438638	DESIGN
finally with no exception	WITHOUT_CLASSIFICATION	0.9985915903577248	WITHOUT_CLASSIFICATION	0.0014084096422751478	DESIGN
Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9945587372771121	WITHOUT_CLASSIFICATION	0.005441262722887975	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.5001018236306697	DESIGN	0.49989817636933026	WITHOUT_CLASSIFICATION
TODO: varargs?	WITHOUT_CLASSIFICATION	0.5001018236306697	DESIGN	0.49989817636933026	WITHOUT_CLASSIFICATION
The counting of slashes that follows is simply a way to adhere to Ruby's UNC (or something) compatibility. When Ruby's expand_path is called with "foobar" it will return "foo/bar". JRuby uses java.io.File, and hence returns "/foo/bar". In order to retain java.io.File in the lower layers and provide full Ruby compatibility, the number of extra slashes must be counted and prepended to the result.	WITHOUT_CLASSIFICATION	0.9771263435707955	WITHOUT_CLASSIFICATION	0.022873656429204376	DESIGN
This is almost always already interned, since it will be called with a symbol in most cases but when created from Java code, we might get an argument that needs to be interned. addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9997823350715459	WITHOUT_CLASSIFICATION	2.1766492845406163E-4	DESIGN
not a class	WITHOUT_CLASSIFICATION	0.9876164298414823	WITHOUT_CLASSIFICATION	0.012383570158517649	DESIGN
not a class	WITHOUT_CLASSIFICATION	0.9876164298414823	WITHOUT_CLASSIFICATION	0.012383570158517649	DESIGN
Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9515497032660557	WITHOUT_CLASSIFICATION	0.04845029673394429	DESIGN
Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9515497032660557	WITHOUT_CLASSIFICATION	0.04845029673394429	DESIGN
io.available() only returns 0 after EOF is encountered so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9988870374009458	WITHOUT_CLASSIFICATION	0.0011129625990543067	DESIGN
In the current logic, if we get here we know that module is not an IncludedModuleWrapper, so there's no need to fish out the delegate. But just in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9958959332104853	WITHOUT_CLASSIFICATION	0.004104066789514666	DESIGN
rb_iterate((VALUE()_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9991856162036415	WITHOUT_CLASSIFICATION	8.143837963584149E-4	DESIGN
Broken symlinks considered by exists() as non-existing, so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999802555377368	WITHOUT_CLASSIFICATION	1.9744462263155925E-5	DESIGN
CONSTANT API METHODS	WITHOUT_CLASSIFICATION	0.9985353784889477	WITHOUT_CLASSIFICATION	0.0014646215110522803	DESIGN
create the default thread group	WITHOUT_CLASSIFICATION	0.9998709829275204	WITHOUT_CLASSIFICATION	1.2901707247957084E-4	DESIGN
range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.999339710226887	WITHOUT_CLASSIFICATION	6.602897731130057E-4	DESIGN
============================ Here are hash internals (This could be extracted to a separate class but it's not too large though) ============================	WITHOUT_CLASSIFICATION	0.9955754196249982	WITHOUT_CLASSIFICATION	0.004424580375001795	DESIGN
LOW-LEVEL CLASS VARIABLE INTERFACE fetch/store/list class variables for this module	WITHOUT_CLASSIFICATION	0.9810862914951893	WITHOUT_CLASSIFICATION	0.018913708504810698	DESIGN
used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9854563571270014	WITHOUT_CLASSIFICATION	0.014543642872998584	DESIGN
used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9854563571270014	WITHOUT_CLASSIFICATION	0.014543642872998584	DESIGN
Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9998524202932727	WITHOUT_CLASSIFICATION	1.4757970672732966E-4	DESIGN
Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9998524202932727	WITHOUT_CLASSIFICATION	1.4757970672732966E-4	DESIGN
retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9992184756270491	WITHOUT_CLASSIFICATION	7.815243729508291E-4	DESIGN
returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9996743820099446	WITHOUT_CLASSIFICATION	3.2561799005536695E-4	DESIGN
\cX, \c\M-X	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9991039935764315	WITHOUT_CLASSIFICATION	8.960064235685084E-4	DESIGN
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9991039935764315	WITHOUT_CLASSIFICATION	8.960064235685084E-4	DESIGN
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9991039935764315	WITHOUT_CLASSIFICATION	8.960064235685084E-4	DESIGN
line 286	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 476	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 513	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 530	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 533	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 537	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 551	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
end loop	WITHOUT_CLASSIFICATION	0.9999371226881566	WITHOUT_CLASSIFICATION	6.287731184335702E-5	DESIGN
MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9998962630190534	WITHOUT_CLASSIFICATION	1.037369809464865E-4	DESIGN
prepare to call class definition method	WITHOUT_CLASSIFICATION	0.992850367587752	WITHOUT_CLASSIFICATION	0.007149632412247936	DESIGN
Traverse the instructions in this basic block in reverse order! Mark as dead all instructions whose results are not used!	WITHOUT_CLASSIFICATION	0.9816094179046829	WITHOUT_CLASSIFICATION	0.018390582095317087	DESIGN
fields should really be an immutable map as it is never modified after construction	WITHOUT_CLASSIFICATION	0.9995477233562563	WITHOUT_CLASSIFICATION	4.5227664374360697E-4	DESIGN
load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9995121940113183	WITHOUT_CLASSIFICATION	4.878059886817638E-4	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.5001018236306697	DESIGN	0.49989817636933026	WITHOUT_CLASSIFICATION
If we define a class in Ruby, but later want to allow it to be defined in Java, the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9746231346594476	WITHOUT_CLASSIFICATION	0.02537686534055237	DESIGN
We only want IO objects with valid streams (better to error now).	WITHOUT_CLASSIFICATION	0.9995112645965905	WITHOUT_CLASSIFICATION	4.887354034095827E-4	DESIGN
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.6069176753150892	DESIGN	0.39308232468491083	WITHOUT_CLASSIFICATION
value	WITHOUT_CLASSIFICATION	0.9995854180843685	WITHOUT_CLASSIFICATION	4.1458191563143164E-4	DESIGN
value	WITHOUT_CLASSIFICATION	0.9995854180843685	WITHOUT_CLASSIFICATION	4.1458191563143164E-4	DESIGN
value	WITHOUT_CLASSIFICATION	0.9995854180843685	WITHOUT_CLASSIFICATION	4.1458191563143164E-4	DESIGN
value	WITHOUT_CLASSIFICATION	0.9995854180843685	WITHOUT_CLASSIFICATION	4.1458191563143164E-4	DESIGN
value	WITHOUT_CLASSIFICATION	0.9995854180843685	WITHOUT_CLASSIFICATION	4.1458191563143164E-4	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9991395273150249	WITHOUT_CLASSIFICATION	8.604726849751716E-4	DESIGN
value	WITHOUT_CLASSIFICATION	0.9995854180843685	WITHOUT_CLASSIFICATION	4.1458191563143164E-4	DESIGN
value	WITHOUT_CLASSIFICATION	0.9995854180843685	WITHOUT_CLASSIFICATION	4.1458191563143164E-4	DESIGN
value	WITHOUT_CLASSIFICATION	0.9995854180843685	WITHOUT_CLASSIFICATION	4.1458191563143164E-4	DESIGN
MRI has extra pointer which makes our code look a little bit more strange in comparison	WITHOUT_CLASSIFICATION	0.8712831185575581	WITHOUT_CLASSIFICATION	0.12871688144244198	DESIGN
Tempory buffer to build up a potential token. Consumer takes responsibility to reset this before use.	WITHOUT_CLASSIFICATION	0.9901039091008872	WITHOUT_CLASSIFICATION	0.009896090899112866	DESIGN
tmpPosition is required because getPosition()'s side effects. if the warning is generated, the getPosition() on line 954 (this line + 18) will create a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9995317045926616	WITHOUT_CLASSIFICATION	4.6829540733844057E-4	DESIGN
What is \v in C? case '\v': c2 = 'v'; break;	WITHOUT_CLASSIFICATION	0.9998987723979812	WITHOUT_CLASSIFICATION	1.0122760201880082E-4	DESIGN
Consider Thread aspects of this	WITHOUT_CLASSIFICATION	0.9942203743918168	WITHOUT_CLASSIFICATION	0.005779625608183249	DESIGN
Position within source must reflect the actual offset and column. Since we ate an extra character here (this accounting is normally done in read ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999452093979975	WITHOUT_CLASSIFICATION	5.4790602002424434E-5	DESIGN
An interrupt or timeout may have caused us to miss a notify that we consumed, so do another notify in case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999505494993849	WITHOUT_CLASSIFICATION	4.945050061522655E-5	DESIGN
line 572	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 601	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 601	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 625	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 649	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 691	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 723	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 732	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 745	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 766	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 785	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 794	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 800	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 812	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 827	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 839	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 845	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 864	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 886	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 896	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 911	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 929	WITHOUT_CLASSIFICATION	0.9997544968276414	WITHOUT_CLASSIFICATION	2.455031723586282E-4	DESIGN
line 952	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 970	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 972	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 991	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1011	WITHOUT_CLASSIFICATION	0.9976347747093125	WITHOUT_CLASSIFICATION	0.002365225290687439	DESIGN
line 1026	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1038	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1067	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1085	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1097	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1105	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1122	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1133	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1145	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1169	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1201	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1210	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1229	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1261	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1287	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1293	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1307	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1320	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1325	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1363	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1398	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1448	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1456	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1473	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1492	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1513	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1523	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1562	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1582	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1603	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1603	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1615	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1620	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1635	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1652	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1681	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1708	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1716	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1755	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1772	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1789	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
ACTIONS_END	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
ACTIONS_END	WITHOUT_CLASSIFICATION	0.9992153839997842	WITHOUT_CLASSIFICATION	7.846160002159112E-4	DESIGN
force for args	WITHOUT_CLASSIFICATION	0.9991948661397884	WITHOUT_CLASSIFICATION	8.05133860211564E-4	DESIGN
last expression should not be void	WITHOUT_CLASSIFICATION	0.9840593730033655	WITHOUT_CLASSIFICATION	0.01594062699663448	DESIGN
compstmt position includes both parens around it	WITHOUT_CLASSIFICATION	0.8367378994022711	WITHOUT_CLASSIFICATION	0.16326210059772894	DESIGN
We can assign if we already have variable of that name here or we are the only scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999839627447842	WITHOUT_CLASSIFICATION	1.6037255215797598E-5	DESIGN
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9986343655754161	WITHOUT_CLASSIFICATION	0.0013656344245839768	DESIGN
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9986343655754161	WITHOUT_CLASSIFICATION	0.0013656344245839768	DESIGN
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9986343655754161	WITHOUT_CLASSIFICATION	0.0013656344245839768	DESIGN
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9986343655754161	WITHOUT_CLASSIFICATION	0.0013656344245839768	DESIGN
FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9905396431090344	DESIGN	0.009460356890965577	WITHOUT_CLASSIFICATION
This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:) into individual whenNodes. The primary reason for this is to ensure lazy evaluation of the arguments (when foo,bar,gar:) to prevent side-effects. In the old code this was done using nested when statements, which was awful for interpreter and compilation. Notes: This has semantic equivalence but will not be lexically equivalent. Compiler needs to detect same bodies to simplify bytecode generated.	WITHOUT_CLASSIFICATION	0.9965401953329311	WITHOUT_CLASSIFICATION	0.0034598046670688883	DESIGN
line 313	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 339	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 361	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 413	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 451	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 472	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 500	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 515	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 555	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 582	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 619	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 636	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 669	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 703	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 776	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 814	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 823	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 854	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 872	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 905	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 925	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 958	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 992	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1047	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1072	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1081	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1108	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1136	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1168	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1192	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1241	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1267	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1286	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1301	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1314	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1333	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1362	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1395	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1420	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1439	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1476	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1535	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1588	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1618	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1643	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1669	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1728	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1753	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1779	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1794	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1812	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1837	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1895	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1925	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1950	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 1992	WITHOUT_CLASSIFICATION	0.999741209880665	WITHOUT_CLASSIFICATION	2.5879011933496314E-4	DESIGN
line 2014	WITHOUT_CLASSIFICATION	0.9997421609921656	WITHOUT_CLASSIFICATION	2.5783900783435816E-4	DESIGN
Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9628722523515522	WITHOUT_CLASSIFICATION	0.037127747648447784	DESIGN
If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9983571987854509	WITHOUT_CLASSIFICATION	0.0016428012145490222	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9998561754745148	WITHOUT_CLASSIFICATION	1.4382452548518068E-4	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9998561754745148	WITHOUT_CLASSIFICATION	1.4382452548518068E-4	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9998561754745148	WITHOUT_CLASSIFICATION	1.4382452548518068E-4	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9998561754745148	WITHOUT_CLASSIFICATION	1.4382452548518068E-4	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9998561754745148	WITHOUT_CLASSIFICATION	1.4382452548518068E-4	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9998561754745148	WITHOUT_CLASSIFICATION	1.4382452548518068E-4	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9998561754745148	WITHOUT_CLASSIFICATION	1.4382452548518068E-4	DESIGN
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.974132730399584	WITHOUT_CLASSIFICATION	0.02586726960041601	DESIGN
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.974132730399584	WITHOUT_CLASSIFICATION	0.02586726960041601	DESIGN
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.974132730399584	WITHOUT_CLASSIFICATION	0.02586726960041601	DESIGN
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.974132730399584	WITHOUT_CLASSIFICATION	0.02586726960041601	DESIGN
happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9659631349749889	WITHOUT_CLASSIFICATION	0.03403686502501111	DESIGN
happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9659631349749889	WITHOUT_CLASSIFICATION	0.03403686502501111	DESIGN
We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the 'b' will get put into this new dynamic scope. The original scope does not see the new 'b' and successive evals with this binding will. I take it having the ability to have succesive binding evals be able to share same scope makes sense from a programmers perspective. One crappy outcome of this design is it requires Dynamic and Static scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.976379906634391	WITHOUT_CLASSIFICATION	0.023620093365609017	DESIGN
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9998736627058024	WITHOUT_CLASSIFICATION	1.2633729419764063E-4	DESIGN
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9998736627058024	WITHOUT_CLASSIFICATION	1.2633729419764063E-4	DESIGN
tc under method self under method name args	WITHOUT_CLASSIFICATION	0.9992155106351267	WITHOUT_CLASSIFICATION	7.844893648732543E-4	DESIGN
allow it to bubble up	WITHOUT_CLASSIFICATION	0.996221192487998	WITHOUT_CLASSIFICATION	0.003778807512001975	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993927466032608	WITHOUT_CLASSIFICATION	6.072533967391039E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993927466032608	WITHOUT_CLASSIFICATION	6.072533967391039E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993927466032608	WITHOUT_CLASSIFICATION	6.072533967391039E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993927466032608	WITHOUT_CLASSIFICATION	6.072533967391039E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993927466032608	WITHOUT_CLASSIFICATION	6.072533967391039E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993927466032608	WITHOUT_CLASSIFICATION	6.072533967391039E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993927466032608	WITHOUT_CLASSIFICATION	6.072533967391039E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993927466032608	WITHOUT_CLASSIFICATION	6.072533967391039E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993927466032608	WITHOUT_CLASSIFICATION	6.072533967391039E-4	DESIGN
trim extension to try other options	WITHOUT_CLASSIFICATION	0.9989356542354548	WITHOUT_CLASSIFICATION	0.0010643457645451075	DESIGN
trim extension to try other options	WITHOUT_CLASSIFICATION	0.9989356542354548	WITHOUT_CLASSIFICATION	0.0010643457645451075	DESIGN
Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9998756633419972	WITHOUT_CLASSIFICATION	1.2433665800271908E-4	DESIGN
end suffix iteration	WITHOUT_CLASSIFICATION	0.9998776222473317	WITHOUT_CLASSIFICATION	1.2237775266838767E-4	DESIGN
end suffix iteration	WITHOUT_CLASSIFICATION	0.9998776222473317	WITHOUT_CLASSIFICATION	1.2237775266838767E-4	DESIGN
Unfortunately, the number of digits in the exponent is not clearly defined in Ruby documentation. This is a platform/version-dependent behavior. On Linux/Mac/Cygwinnix, two digits are used. On Windows, 3 digits are used. It is desirable for JRuby to have consistent behavior, and the two digits behavior was selected. This is also in sync with "Java-native" sprintf behavior (java.util.Formatter). E or e	WITHOUT_CLASSIFICATION	0.9865753875994296	WITHOUT_CLASSIFICATION	0.013424612400570248	DESIGN
Represents the the dynamic portion of scoping information. The variableValues are the values of assigned local or block variables. The staticScope identifies which sort of scope this is (block or local). Properties of Dynamic Scopes: 1. static and dynamic scopes have the same number of names to values 2. size of variables (and thus names) is determined during parsing. So those structured do not need to change FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents. This is harmless (other than wasting memory), but we should not do that. We can fix this in two ways: 1. Fix all callers 2. Check parent that is passed in and make if new instance is local, then its parent is not local	WITHOUT_CLASSIFICATION	0.9999520260974127	DESIGN	4.7973902587282085E-5	WITHOUT_CLASSIFICATION
This method handles '' patterns and delegates to fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9998517514913563	WITHOUT_CLASSIFICATION	1.482485086435862E-4	DESIGN
Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999068958396954	WITHOUT_CLASSIFICATION	9.310416030462467E-5	DESIGN
double precision, native double precision, native	WITHOUT_CLASSIFICATION	0.9999160219500483	WITHOUT_CLASSIFICATION	8.397804995171032E-5	DESIGN
64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9997222036363752	WITHOUT_CLASSIFICATION	2.7779636362479165E-4	DESIGN
Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999910610048437	WITHOUT_CLASSIFICATION	8.938995156293152E-6	DESIGN
calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9995873486390827	WITHOUT_CLASSIFICATION	4.1265136091733453E-4	DESIGN
processes seem to have some peculiar locking sequences, so we need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9997826849689525	WITHOUT_CLASSIFICATION	2.1731503104754834E-4	DESIGN
MRI behavior: for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.994883942843905	WITHOUT_CLASSIFICATION	0.005116057156094975	DESIGN
this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9970217418883638	WITHOUT_CLASSIFICATION	0.0029782581116361735	DESIGN
exec needs to behave differently in-process, because it's technically supposed to replace the calling process. So if we're supposed to run in-process, we allow it to use the default streams and not use pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.967210678994636	WITHOUT_CLASSIFICATION	0.0327893210053641	DESIGN
snip off ruby or jruby command from list of arguments leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999150618784088	WITHOUT_CLASSIFICATION	8.493812159123652E-5	DESIGN
The problem we trying to solve below: STDIN in Java is blocked and non-interruptible, so if we invoke read on it, we might never be able to interrupt such thread. So, we use in.available() to see if there is any input ready, and only then read it. But this approach can't tell whether the end of stream reached or not, so we might end up looping right at the end of the stream. Well, at least, we can improve the situation by checking if some input was ever available, and if so, not checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.7850021989731023	WITHOUT_CLASSIFICATION	0.21499780102689767	DESIGN
first digit is always printed	WITHOUT_CLASSIFICATION	0.998746387636961	WITHOUT_CLASSIFICATION	0.0012536123630389456	DESIGN
an empirically derived rule: precision applies to significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.999802753884713	WITHOUT_CLASSIFICATION	1.9724611528707013E-4	DESIGN
an official rule, clarified: if the exponent <clarif>after adjusting for exponent form</clarif> is < -4, or the exponent <clarif>after adjusting for exponent form</clarif> is greater than the precision, use exponent form	WITHOUT_CLASSIFICATION	0.9996174471743504	WITHOUT_CLASSIFICATION	3.8255282564952605E-4	DESIGN
in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.986759516997132	WITHOUT_CLASSIFICATION	0.013240483002867903	DESIGN
now some data...	WITHOUT_CLASSIFICATION	0.9981225703855522	WITHOUT_CLASSIFICATION	0.0018774296144478363	DESIGN
now some data...	WITHOUT_CLASSIFICATION	0.9981225703855522	WITHOUT_CLASSIFICATION	0.0018774296144478363	DESIGN
MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9994761938918434	WITHOUT_CLASSIFICATION	5.238061081566131E-4	DESIGN
else catch oversize below	WITHOUT_CLASSIFICATION	0.9999241196277426	WITHOUT_CLASSIFICATION	7.588037225728068E-5	DESIGN
calculation for simple (and typical) case, adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9974311403586713	WITHOUT_CLASSIFICATION	0.002568859641328718	DESIGN
switch	WITHOUT_CLASSIFICATION	0.998900527112762	WITHOUT_CLASSIFICATION	0.001099472887237909	DESIGN
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9964490953260027	WITHOUT_CLASSIFICATION	0.003550904673997348	DESIGN
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9964490953260027	WITHOUT_CLASSIFICATION	0.003550904673997348	DESIGN
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9964490953260027	WITHOUT_CLASSIFICATION	0.003550904673997348	DESIGN
could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.8510063740971215	WITHOUT_CLASSIFICATION	0.1489936259028785	DESIGN
We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.999756142562554	WITHOUT_CLASSIFICATION	2.438574374458971E-4	DESIGN
call chmod after we created the RandomAccesFile because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9961193684641702	WITHOUT_CLASSIFICATION	0.0038806315358298846	DESIGN
attempt to set the permissions, if we have been passed a POSIX instance, and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9997253654061871	WITHOUT_CLASSIFICATION	2.7463459381295025E-4	DESIGN
When reading into a heap buffer, the jvm allocates a temporary direct ByteBuffer of the requested size. To avoid allocating a huge direct buffer when doing ludicrous reads (e.g. 1G or more) we split the read up into chunks of no more than 1M	WITHOUT_CLASSIFICATION	0.5758356014910125	WITHOUT_CLASSIFICATION	0.4241643985089875	DESIGN
If it is a file channel, then we can pre-allocate the output buffer to the total size of buffered + remaining bytes in file	WITHOUT_CLASSIFICATION	0.9999953964439571	WITHOUT_CLASSIFICATION	4.603556042945414E-6	DESIGN
Cannot discern the total read length - allocate at least enough for the buffered data	WITHOUT_CLASSIFICATION	0.9996949401733601	WITHOUT_CLASSIFICATION	3.050598266398907E-4	DESIGN
Copy what is in the buffer, if there is some buffered data	WITHOUT_CLASSIFICATION	0.9999120164336105	WITHOUT_CLASSIFICATION	8.798356638960197E-5	DESIGN
append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9898791295199466	WITHOUT_CLASSIFICATION	0.010120870480053409	DESIGN
already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999461666695995	WITHOUT_CLASSIFICATION	5.383333040049982E-5	DESIGN
reset buffer	WITHOUT_CLASSIFICATION	0.9990093833424104	WITHOUT_CLASSIFICATION	9.906166575895895E-4	DESIGN
Synchronize and re-check to avoid creating more than one Selector per provider	WITHOUT_CLASSIFICATION	0.9938091247640795	WITHOUT_CLASSIFICATION	0.006190875235920621	DESIGN
TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.8021338370674918	DESIGN	0.19786616293250814	WITHOUT_CLASSIFICATION
Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.5454353173742096	WITHOUT_CLASSIFICATION	0.45456468262579053	DESIGN
Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999972179176115	WITHOUT_CLASSIFICATION	2.782082388525972E-6	DESIGN
value equality result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999828733855565	WITHOUT_CLASSIFICATION	1.7126614443597E-5	DESIGN
Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.998657619646157	WITHOUT_CLASSIFICATION	0.0013423803538430072	DESIGN
Since we don't have any other error reporting mechanism, we add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.999997375670993	WITHOUT_CLASSIFICATION	2.62432900701508E-6	DESIGN
change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9990476120377629	WITHOUT_CLASSIFICATION	9.523879622371572E-4	DESIGN
Fixme: Do we need the check or does Main.java not call this...they should consolidate	DESIGN	0.9468572062120929	WITHOUT_CLASSIFICATION	0.05314279378790707	DESIGN
FIXME: move out of this class!	DESIGN	0.968840257928338	DESIGN	0.03115974207166204	WITHOUT_CLASSIFICATION
this is a rather ugly hack, but similar to MRI. See hash.c:ruby_setenv and similar in MRI we search all keys for a case-insensitive match, and use that	DESIGN	0.9845455244553121	DESIGN	0.0154544755446879	WITHOUT_CLASSIFICATION
FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9852592339952273	DESIGN	0.014740766004772629	WITHOUT_CLASSIFICATION
FIXME: Don't allow multiple threads to do this at once	DESIGN	0.9876401275636918	DESIGN	0.012359872436308192	WITHOUT_CLASSIFICATION
TODO: eliminate?	DESIGN	0.5001018236306697	DESIGN	0.49989817636933026	WITHOUT_CLASSIFICATION
TODO: People extending GzipWriter/reader will break. Find better way here.	DESIGN	0.9958629592576758	DESIGN	0.004137040742324291	WITHOUT_CLASSIFICATION
For JRUBY-2759, when MET choose CET timezone to work around Joda	DESIGN	0.6494506220160422	DESIGN	0.3505493779839577	WITHOUT_CLASSIFICATION
we might need to perform a DST correction	DESIGN	0.997294369679149	WITHOUT_CLASSIFICATION	0.002705630320851047	DESIGN
rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9949929419311825	WITHOUT_CLASSIFICATION	0.005007058068817474	DESIGN
rb_ary_push_m FIXME: Whis is this named "push_m"?	DESIGN	0.7385082224491649	DESIGN	0.2614917775508352	WITHOUT_CLASSIFICATION
from DUP_SETUP rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9949929419311825	WITHOUT_CLASSIFICATION	0.005007058068817474	DESIGN
TODO: ary_sort_check should be done here	DESIGN	0.9954491666627435	DESIGN	0.00455083333725649	WITHOUT_CLASSIFICATION
TODO: ary_sort_check should be done here	DESIGN	0.9954491666627435	DESIGN	0.00455083333725649	WITHOUT_CLASSIFICATION
TODO: is this correct ?	DESIGN	0.9951821766466975	DESIGN	0.004817823353302466	WITHOUT_CLASSIFICATION
TODO: make more efficient by not creating IRubyArray[]	DESIGN	0.9088909299865021	DESIGN	0.0911090700134978	WITHOUT_CLASSIFICATION
TODO: list.subList(from, to).clear() is supposed to clear the sublist from the list. How can we support this operation?	DESIGN	0.9979030233899078	DESIGN	0.0020969766100921348	WITHOUT_CLASSIFICATION
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9895727234373644	DESIGN	0.010427276562635639	WITHOUT_CLASSIFICATION
FIXME: This table will get moved into POSIX library so we can get all actual supported signals. This is a quick fix to support basic signals until that happens.	DESIGN	0.9806581183894253	DESIGN	0.019341881610574627	WITHOUT_CLASSIFICATION
The implementations of these are all bonus (see TODO above) I was going to throw an error from these, but it appears to be the wrong place to do it.	DESIGN	0.5260196320470961	DESIGN	0.4739803679529038	WITHOUT_CLASSIFICATION
TODO: number formatting here, MRI uses "%-.10g", 1.4 API is a must?	DESIGN	0.9920985959848053	DESIGN	0.007901404015194591	WITHOUT_CLASSIFICATION
TODO: remove	DESIGN	0.8472092228998364	DESIGN	0.15279077710016362	WITHOUT_CLASSIFICATION
FIXME moved this here to get what's obviously a utility method out of IRubyObject. perhaps security methods should find their own centralized home at some point.	DESIGN	0.9999999659123848	DESIGN	3.408761520078994E-8	WITHOUT_CLASSIFICATION
FIXME: Get rid of laziness and handle restricted access elsewhere	DESIGN	0.7988889946810627	DESIGN	0.20111100531893736	WITHOUT_CLASSIFICATION
TODO: Should frozen error have its own distinct class? If not should more share?	DESIGN	0.9959172769288056	DESIGN	0.0040827230711944305	WITHOUT_CLASSIFICATION
TODO: this is kinda gross	DESIGN	0.9971631462542636	DESIGN	0.0028368537457363723	WITHOUT_CLASSIFICATION
Not sure how well this works, but it works much better than just currentTimeMillis by itself.	DESIGN	0.7211601277582007	DESIGN	0.2788398722417993	WITHOUT_CLASSIFICATION
TODO: exec should replace the current process. This could be possible with JNA.	DESIGN	0.9997438925184013	DESIGN	2.561074815986093E-4	WITHOUT_CLASSIFICATION
FIXME: In order for Thread to play well with the standard 'new' behavior, it must provide an allocator that can create empty object instances which initialize then fills with appropriate data.	DESIGN	0.9985672327064418	WITHOUT_CLASSIFICATION	0.0014327672935582278	DESIGN
TODO: not sure that we should skip calling join() altogether. Thread.join() has some implications for Java Memory Model, etc.	DESIGN	0.9308054762711647	DESIGN	0.0691945237288353	WITHOUT_CLASSIFICATION
FIXME: There's some code duplication here with RubyObject#inspect	DESIGN	0.993415699127781	DESIGN	0.006584300872218934	WITHOUT_CLASSIFICATION
FIXME: This should probably do some translation from Ruby priority levels to Java priority levels (until we have green threads)	DESIGN	0.9993806446072327	DESIGN	6.193553927672569E-4	WITHOUT_CLASSIFICATION
TODO: no java stringity	DESIGN	0.7093142801423482	DESIGN	0.29068571985765185	WITHOUT_CLASSIFICATION
need to reexamine this	DESIGN	0.9641565037304048	WITHOUT_CLASSIFICATION	0.035843496269595175	DESIGN
TODO: These were missing, so we're not handling them elsewhere?	DESIGN	0.7589038325905239	DESIGN	0.2410961674094761	WITHOUT_CLASSIFICATION
TODO: why are we duplicating the constants here, and then in File::Constants below? File::Constants is included in IO.	DESIGN	0.5921854330896348	DESIGN	0.40781456691036516	WITHOUT_CLASSIFICATION
TODO: this method is not present in MRI!	DESIGN	0.9746891907168964	DESIGN	0.025310809283103572	WITHOUT_CLASSIFICATION
TODO: This is also defined in the MetaClass too...Consolidate somewhere.	DESIGN	0.6232456251279076	WITHOUT_CLASSIFICATION	0.3767543748720924	DESIGN
Something wrong we don't know the cwd... TODO: Is this behavior really desirable? /mov	DESIGN	0.9999032009169626	DESIGN	9.679908303745807E-5	WITHOUT_CLASSIFICATION
Fixme: This does not have exact same semantics as RubyArray.join, but they probably could be consolidated (perhaps as join(args[], sep, doChomp)).	DESIGN	0.968567726369558	DESIGN	0.031432273630442	WITHOUT_CLASSIFICATION
TODO should this be deprecated ? (to be efficient, internals should deal with RubyHash directly)	DESIGN	0.9997010499268011	DESIGN	2.98950073198948E-4	WITHOUT_CLASSIFICATION
TODO: Implement tty? and isatty. We have no real capability to determine this from java, but if we could set tty status, then we could invoke jruby differently to allow stdin to return true on this. This would allow things like cgi.rb to work properly.	DESIGN	0.9993302706270135	DESIGN	6.697293729864927E-4	WITHOUT_CLASSIFICATION
TODO: better error handling	DESIGN	0.9947686301742755	DESIGN	0.0052313698257244615	WITHOUT_CLASSIFICATION
this seems unlikely to happen unless it's a totally bogus fileno ...so do we even need to bother trying to create one?	DESIGN	0.9954172033135561	WITHOUT_CLASSIFICATION	0.004582796686443883	DESIGN
IN FACT, we should probably raise an error, yes?	DESIGN	0.7972339637671163	WITHOUT_CLASSIFICATION	0.2027660362328837	DESIGN
TODO: Ruby reuses this logic for other "write" behavior by checking if it's an IO and calling write again	DESIGN	0.9602333473541337	DESIGN	0.039766652645866395	WITHOUT_CLASSIFICATION
FIXME we should probably still be dyncalling 'write' here	DESIGN	0.9849521560474315	DESIGN	0.015047843952568607	WITHOUT_CLASSIFICATION
TODO: This version differs from ioctl by checking whether fcntl exists and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9979480384453062	DESIGN	0.0020519615546936835	WITHOUT_CLASSIFICATION
FIXME: I don't like the null checks here	DESIGN	0.954223973829332	DESIGN	0.045776026170668054	WITHOUT_CLASSIFICATION
TODO: handle writing into original buffer better	DESIGN	0.9954067413068137	DESIGN	0.004593258693186255	WITHOUT_CLASSIFICATION
TODO: is this the right thing to do?	DESIGN	0.9993940093267373	DESIGN	6.059906732626367E-4	WITHOUT_CLASSIFICATION
TODO: This isn't an exact port of MRI's pipe behavior, so revisit	DESIGN	0.9506609970389632	DESIGN	0.049339002961036806	WITHOUT_CLASSIFICATION
FIXME: If NativeException is expected to be used from Ruby code, it should provide a real allocator to be used. Otherwise Class.new will fail, as will marshalling. JRUBY-415	DESIGN	0.9553702929683484	DESIGN	0.04462970703165159	WITHOUT_CLASSIFICATION
FIXME: finalizer should be dupped here	DESIGN	0.992263056691217	DESIGN	0.007736943308783011	WITHOUT_CLASSIFICATION
rb_obj_id Return the internal id of an object. FIXME: Should this be renamed to match its ruby name?	DESIGN	0.9957736098080809	DESIGN	0.004226390191918999	WITHOUT_CLASSIFICATION
FIXME: Obvious issue that not all platforms can display all attributes. Ugly hacks. Using generic posix library makes pushing inspect behavior into specific system impls rather painful.	DESIGN	0.9996621844661742	DESIGN	3.378155338258408E-4	WITHOUT_CLASSIFICATION
Workaround for JRUBY-4149	DESIGN	0.991294214122668	WITHOUT_CLASSIFICATION	0.008705785877331892	DESIGN
TODO: NOT_ALLOCATABLE_ALLOCATOR may be ok here, but it's unclear how Structs work with marshalling. Confirm behavior and ensure we're doing this correctly. JRUBY-415	DESIGN	0.9749917306934995	DESIGN	0.02500826930650043	WITHOUT_CLASSIFICATION
FIXME: This is copied code from RubyArray. Both RE, Struct, and Array should share one impl This is also hacky since I construct ruby objects to access ruby arrays through aref instead of something lower.	DESIGN	0.9987940076799685	DESIGN	0.001205992320031436	WITHOUT_CLASSIFICATION
FIXME: We should not be regenerating this over and over	DESIGN	0.99803188001985	DESIGN	0.0019681199801500166	WITHOUT_CLASSIFICATION
FIXME: This is probably not very efficient, since it loads all methods for each call	DESIGN	0.9879061899484957	DESIGN	0.012093810051504462	WITHOUT_CLASSIFICATION
TODO: Consider a better way of synchronizing	DESIGN	0.9990367392305028	DESIGN	9.63260769497264E-4	WITHOUT_CLASSIFICATION
FIXME: Why was this using a FullFunctionCallbackMethod before that did callSuper?	DESIGN	0.9577270517247023	DESIGN	0.0422729482752977	WITHOUT_CLASSIFICATION
A cloned method now belongs to a new class. Set it. TODO: Make DynamicMethod immutable	DESIGN	0.6208990455829246	WITHOUT_CLASSIFICATION	0.3791009544170753	DESIGN
FIXME: figure out why we get null sometimes	DESIGN	0.9109607363997722	DESIGN	0.08903926360022782	WITHOUT_CLASSIFICATION
FIXME: Can get optimized for IEqlNode	DESIGN	0.8514127046767781	DESIGN	0.1485872953232219	WITHOUT_CLASSIFICATION
rb_mod_remove_cvar FIXME: any good reason to have two identical methods? (same as remove_class_variable)	DESIGN	0.6541874090878501	DESIGN	0.3458125909121499	WITHOUT_CLASSIFICATION
FIXME: these descriptions should probably be moved out, to Constantine project which deals with all platform-dependent constants.	DESIGN	0.9998811526637784	DESIGN	1.1884733622158334E-4	WITHOUT_CLASSIFICATION
TODO: what about n arg?	DESIGN	0.9460376162938908	DESIGN	0.05396238370610924	WITHOUT_CLASSIFICATION
TODO: rounding mode should not be hard-coded. See #mode.	DESIGN	0.9932402779531045	DESIGN	0.0067597220468954295	WITHOUT_CLASSIFICATION
regular division with some default precision TODO: proper algorithm to set the precision	DESIGN	0.982190636345314	DESIGN	0.017809363654685995	WITHOUT_CLASSIFICATION
TODO: better algorithm to set precision needed	DESIGN	0.9858736348379742	DESIGN	0.014126365162025839	WITHOUT_CLASSIFICATION
FIXME: what should these really be? Numeric? assert x instanceof RubyComplex && y instanceof RubyComplex;	DESIGN	0.9997438259014579	DESIGN	2.5617409854202124E-4	WITHOUT_CLASSIFICATION
FIXME: what should this really be? assert x instanceof RubyComplex;	DESIGN	0.9998834846047819	DESIGN	1.165153952180819E-4	WITHOUT_CLASSIFICATION
FIXME: the code below is a copy of RubyIO.puts, and we should avoid copy-paste.	DESIGN	0.9852958779167788	DESIGN	0.014704122083221187	WITHOUT_CLASSIFICATION
Yow...this is still ugly	DESIGN	0.9671228392780219	WITHOUT_CLASSIFICATION	0.032877160721978126	DESIGN
end hack	DESIGN	0.8305306197448373	DESIGN	0.16946938025516256	WITHOUT_CLASSIFICATION
TODO: Should next and return also catch here?	DESIGN	0.9565454950125788	DESIGN	0.04345450498742124	WITHOUT_CLASSIFICATION
TODO: Generalize this type-checking code into IRubyObject helper.	DESIGN	0.9988951072066973	DESIGN	0.0011048927933026663	WITHOUT_CLASSIFICATION
TODO: newTypeError does not offer enough for ruby error string...	DESIGN	0.9145059167362583	DESIGN	0.08549408326374172	WITHOUT_CLASSIFICATION
FIXME: If true array is common enough we should pre-allocate and stick somewhere	DESIGN	0.5388493634476524	WITHOUT_CLASSIFICATION	0.4611506365523476	DESIGN
TODO: This is almost RubyModule#instance_methods on the metaClass. Perhaps refactor.	DESIGN	0.9918786574239257	DESIGN	0.008121342576074428	WITHOUT_CLASSIFICATION
The following three methods must be defined fast, since they expect to modify the current frame (i.e. they expect no frame will be allocated for them). JRUBY-1185.	DESIGN	0.9999969060083577	WITHOUT_CLASSIFICATION	3.0939916423483803E-6	DESIGN
FIXME: I think this chunk is equivalent to MRI id2name (and not our public method id2name). Make into method if used more than once.	DESIGN	0.9999833928077682	DESIGN	1.6607192231853098E-5	WITHOUT_CLASSIFICATION
TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9283395623110234	WITHOUT_CLASSIFICATION	0.07166043768897648	DESIGN
TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9283395623110234	WITHOUT_CLASSIFICATION	0.07166043768897648	DESIGN
TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9283395623110234	WITHOUT_CLASSIFICATION	0.07166043768897648	DESIGN
optional args, so we have IRubyObject[] TODO: confirm	DESIGN	0.7421956494638856	WITHOUT_CLASSIFICATION	0.25780435053611456	DESIGN
TODO: Split this into two sub-classes so that name and constNode can be specified seperately.	DESIGN	0.9998535535548002	DESIGN	1.4644644519987756E-4	WITHOUT_CLASSIFICATION
TODO: wire into new exception handling mechanism	DESIGN	0.9763334445609726	DESIGN	0.02366655543902749	WITHOUT_CLASSIFICATION
FIXME: ConstDecl could be two seperate classes (or done differently since constNode and name never exist at the same time.	DESIGN	0.8117558668021514	DESIGN	0.18824413319784866	WITHOUT_CLASSIFICATION
TODO: do above but not below for additional newline nodes	DESIGN	0.8312513496950742	WITHOUT_CLASSIFICATION	0.16874865030492578	DESIGN
TODO: Figure out how this can happen and possibly remove	DESIGN	0.9988700737677956	DESIGN	0.001129926232204444	WITHOUT_CLASSIFICATION
TODO: At least ParserSupport.attrset passes argsNode as null. ImplicitNil is wrong magic for setupArgs since it will IRubyObject[] { nil }. So we need to figure out a nice fast null pattern for setupArgs. assert argsNode != null : "receiverNode is not null";	DESIGN	0.9999767477859443	DESIGN	2.3252214055782136E-5	WITHOUT_CLASSIFICATION
FIXME: JRUBY-3188 ends up with condition returning null...quick fix until I can dig into it	DESIGN	0.9994289995754015	DESIGN	5.71000424598539E-4	WITHOUT_CLASSIFICATION
FIXME: I use a for block to implement END node because we need a proc which captures its enclosing scope. ForBlock now represents these node and should be renamed.	DESIGN	0.9999338517950679	DESIGN	6.614820493218437E-5	WITHOUT_CLASSIFICATION
method has more than 500 lines; we'll need to split it and therefore need to use a heap-based scope	DESIGN	0.8283916835401256	WITHOUT_CLASSIFICATION	0.1716083164598744	DESIGN
TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.6862270603881891	WITHOUT_CLASSIFICATION	0.3137729396118108	DESIGN
If it's a single-arg when but contains an array, we know it's a real literal array FIXME: This is a gross way to figure it out; parser help similar to yield argument passing (expandArguments) would be better	DESIGN	0.9996697021429403	DESIGN	3.302978570597907E-4	WITHOUT_CLASSIFICATION
TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.6862270603881891	WITHOUT_CLASSIFICATION	0.3137729396118108	DESIGN
XXX: const lookup can trigger const_missing; is that enough to warrant it always being executed?	DESIGN	0.7419709891403736	WITHOUT_CLASSIFICATION	0.2580290108596265	DESIGN
if body is a rescue node, inspect its pieces separately to avoid it disabling all optz TODO: this is gross.	DESIGN	0.6201127889987573	WITHOUT_CLASSIFICATION	0.3798872110012428	DESIGN
if body is a rescue node, inspect its pieces separately to avoid it disabling all optz TODO: this is gross.	DESIGN	0.6201127889987573	WITHOUT_CLASSIFICATION	0.3798872110012428	DESIGN
FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.9998003347536782	DESIGN	1.9966524632177452E-4	WITHOUT_CLASSIFICATION
TODO: This filtering is kind of gross...it would be nice to get some parser help here	DESIGN	0.9999748167150913	DESIGN	2.5183284908698467E-5	WITHOUT_CLASSIFICATION
FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.9998003347536782	DESIGN	1.9966524632177452E-4	WITHOUT_CLASSIFICATION
arguments compilers always create IRubyObject[], but we want to use RubyArray.concat here; FIXME: as a result, this is NOT efficient, since it creates and then later unwraps an array	DESIGN	0.999351646956936	DESIGN	6.483530430640855E-4	WITHOUT_CLASSIFICATION
FIXME: This is temporary since the variable compilers assume we want args already on stack for assignment. We just pop and continue with 1.9 args logic.	DESIGN	0.8516055272780282	DESIGN	0.14839447272197182	WITHOUT_CLASSIFICATION
TODO: reads/writes from frame TODO: information on scoping TODO: visibility?	DESIGN	0.8829378868725909	WITHOUT_CLASSIFICATION	0.11706211312740922	DESIGN
for visibility checking without requiring frame self TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9361169521213377	DESIGN	0.06388304787866214	WITHOUT_CLASSIFICATION
TODO: cache?	DESIGN	0.77605137454121	DESIGN	0.22394862545879007	WITHOUT_CLASSIFICATION
TODO: cache?	DESIGN	0.77605137454121	DESIGN	0.22394862545879007	WITHOUT_CLASSIFICATION
index for the item this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.6328019284593367	WITHOUT_CLASSIFICATION	0.3671980715406633	DESIGN
if we don't have opt args, start after args (they will be assigned later) this is for crap like def foo(a = (b = true; 1)) which numbers b before a FIXME: only starting after required args, since opt args may access others and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.9801517540235549	WITHOUT_CLASSIFICATION	0.019848245976445064	DESIGN
FIXME: this really ought to be in clinit, but it doesn't matter much	DESIGN	0.990146514538723	DESIGN	0.009853485461276937	WITHOUT_CLASSIFICATION
install invokedynamic bootstrapper TODO need to abstract this setup behind another compiler interface	DESIGN	0.97983634983199	DESIGN	0.020163650168009965	WITHOUT_CLASSIFICATION
FIXME: This isn't right for within ensured/rescued code	DESIGN	0.9821303187939076	DESIGN	0.01786968120609239	WITHOUT_CLASSIFICATION
SSS FIXME: Deprecated! Going forward, all instructions should come from the CFG	DESIGN	0.6231687119275346	DESIGN	0.3768312880724654	WITHOUT_CLASSIFICATION
SSS FIXME: Do we need to check if l is same as whatever popped?	DESIGN	0.5756206666935948	WITHOUT_CLASSIFICATION	0.4243793333064052	DESIGN
SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.6940764733486358	DESIGN	0.3059235266513643	WITHOUT_CLASSIFICATION
SSS FIXME: I added this in. Is this correct?	DESIGN	0.9996393221996309	DESIGN	3.6067780036905055E-4	WITHOUT_CLASSIFICATION
SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.6940764733486358	DESIGN	0.3059235266513643	WITHOUT_CLASSIFICATION
SSS FIXME: Are we guaranteed that we splats dont head to multiple-assignment nodes! i.e. |(a,b)|?	DESIGN	0.5300384871174094	WITHOUT_CLASSIFICATION	0.4699615128825906	DESIGN
SSS FIXME: Can this return anything other than nil?	DESIGN	0.8841239577608667	DESIGN	0.11587604223913327	WITHOUT_CLASSIFICATION
SSS FIXME: What happens to the add class in this case??	DESIGN	0.9618835200832554	DESIGN	0.038116479916744654	WITHOUT_CLASSIFICATION
CON FIXME: I don't know how to make case be an expression...does that logic need to go here?	DESIGN	0.9992702821089341	DESIGN	7.29717891065901E-4	WITHOUT_CLASSIFICATION
SSS FIXME: Where is this set up? How is this diff from ClassVarDeclNode??	DESIGN	0.9938990020179429	DESIGN	0.006100997982057054	WITHOUT_CLASSIFICATION
SSS FIXME: Is this correct?	DESIGN	0.9996146602326227	DESIGN	3.8533976737732017E-4	WITHOUT_CLASSIFICATION
SSS FIXME: Used anywhere? I don't see calls to this anywhere public Operand buildDAsgnAssignment(Node node, IR_Scope s) { DAsgnNode dasgnNode = (DAsgnNode) node; s.getVariableCompiler().assignLocalVariable(dasgnNode.getIndex(), dasgnNode.getDepth()); }	DESIGN	0.6304533745650527	WITHOUT_CLASSIFICATION	0.36954662543494726	DESIGN
SSS FIXME: Receiver -- this is the class meta object basically? Operand receiver = build(defsNode.getReceiverNode(), s);	DESIGN	0.7978641328665205	DESIGN	0.20213586713347947	WITHOUT_CLASSIFICATION
self = args[0] SSS FIXME: Verify that this is correct	DESIGN	0.8843092752934798	DESIGN	0.1156907247065202	WITHOUT_CLASSIFICATION
SSS FIXME: Is this correct?	DESIGN	0.9996146602326227	DESIGN	3.8533976737732017E-4	WITHOUT_CLASSIFICATION
SSS FIXME: 1. Is the ordering correct? (poll before next)	DESIGN	0.9920332053398272	DESIGN	0.007966794660172836	WITHOUT_CLASSIFICATION
add a "self" recv here TODO: is this right?	DESIGN	0.999923778242263	DESIGN	7.622175773706942E-5	WITHOUT_CLASSIFICATION
SSS FIXME: Is this correctly placed ... at the end of the loop iteration?	DESIGN	0.8993957485946057	DESIGN	0.10060425140539428	WITHOUT_CLASSIFICATION
SSS FIXME: Where does this go? m.setLinePosition(arrayNode.getPosition());	DESIGN	0.861216320441571	DESIGN	0.13878367955842896	WITHOUT_CLASSIFICATION
SSS FIXME: I could make IR_Loop a scope too ... semantically, it is a scope, but, functionally, not sure if this is required yet ...	DESIGN	0.9997761130102666	DESIGN	2.2388698973334413E-4	WITHOUT_CLASSIFICATION
SSS FIXME: Should this be a string literal or a string? Dummy class for the script	DESIGN	0.9957308774169278	DESIGN	0.004269122583072203	WITHOUT_CLASSIFICATION
SSS FIXME: Does int suffice, or do we need long?	DESIGN	0.9619366871929134	DESIGN	0.0380633128070866	WITHOUT_CLASSIFICATION
SSS FIXME: Correct? Where does closure arg come from?	DESIGN	0.9453317424223486	WITHOUT_CLASSIFICATION	0.054668257577651466	DESIGN
SSS FIXME: Should I have a reference to the IR_loop that is being retried?	DESIGN	0.9808554883724016	DESIGN	0.019144511627598414	WITHOUT_CLASSIFICATION
Simplify the variables too -- to keep these variables in sync with what is actually used in the when clauses This is not required for correctness reasons, but only for performance reasons.	DESIGN	0.9354939058080994	DESIGN	0.06450609419190054	WITHOUT_CLASSIFICATION
SSS FIXME: This should never get called for constant svalues	DESIGN	0.8678254807122137	DESIGN	0.13217451928778637	WITHOUT_CLASSIFICATION
SSS FIXME: Should this be Operand or CompoundString? Can it happen that symbols are built out of other than compound strings? Or can it happen during optimizations that this becomes a generic operand?	DESIGN	0.9990726496664197	DESIGN	9.273503335802528E-4	WITHOUT_CLASSIFICATION
TODO: need to get this back into the method signature...now is too late...	DESIGN	0.9986953465002572	DESIGN	0.001304653499742791	WITHOUT_CLASSIFICATION
Hack in to replace usual readline with this	DESIGN	0.9902062454820222	DESIGN	0.009793754517977893	WITHOUT_CLASSIFICATION
bit risky if someone changes completor, but useful for method calls	DESIGN	0.9964034855875696	WITHOUT_CLASSIFICATION	0.0035965144124303666	DESIGN
FIXME: This determine module is in a strange location and should somehow be in block	DESIGN	0.9935109432601967	DESIGN	0.006489056739803304	WITHOUT_CLASSIFICATION
Create block for this iter node FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.7273761302385473	WITHOUT_CLASSIFICATION	0.2726238697614527	DESIGN
we basically ignore protocol. let someone report it...	DESIGN	0.8925555741589639	WITHOUT_CLASSIFICATION	0.1074444258410361	DESIGN
Workaround for a bug in Sun's JDK 1.5.x, see http:bugs.sun.com/bugdatabase/view_bug.do?bug_id=6303753	DESIGN	0.911088712650797	WITHOUT_CLASSIFICATION	0.08891128734920303	DESIGN
context is null, wipe out the SoftReference (this could be done with a reference queue)	DESIGN	0.9739706411239738	WITHOUT_CLASSIFICATION	0.0260293588760263	DESIGN
FIXME we want to eliminate these type casts when possible	DESIGN	0.9892303690212786	DESIGN	0.010769630978721299	WITHOUT_CLASSIFICATION
TODO: Determine whether we should perhaps store non-singleton class in the implementationClass	DESIGN	0.99513318047905	DESIGN	0.004866819520950108	WITHOUT_CLASSIFICATION
FIXME: set up a CallConfiguration for this	DESIGN	0.9451528637456379	DESIGN	0.05484713625436199	WITHOUT_CLASSIFICATION
FIXME: set up a call configuration for this	DESIGN	0.9645511340479597	DESIGN	0.03544886595204035	WITHOUT_CLASSIFICATION
TODO: make this do specific-arity calling	DESIGN	0.9619080904618855	DESIGN	0.03809190953811453	WITHOUT_CLASSIFICATION
add 'new' with full signature, so it's guaranteed to be directly accessible TODO: no need for this to be a full, formal JVM signature	DESIGN	0.9967817935561982	DESIGN	0.003218206443801814	WITHOUT_CLASSIFICATION
add method with full signature, so it's guaranteed to be directly accessible TODO: no need for this to be a full, formal JVM signature	DESIGN	0.9978060318484071	DESIGN	0.0021939681515929428	WITHOUT_CLASSIFICATION
FIXME This whole thing could probably be implemented as a module and mixed into appropriate classes, especially if it uses either IOInput/OutputStream or is smart about the kind of IO-like object it's being used against.	DESIGN	0.9999999967762678	DESIGN	3.2237320959613976E-9	WITHOUT_CLASSIFICATION
using IOInputStream may not be the most performance way, but it's easy.	DESIGN	0.9990804360554987	WITHOUT_CLASSIFICATION	9.195639445012405E-4	DESIGN
using IOOutputStream may not be the most performance way, but it's easy.	DESIGN	0.9990804360554987	WITHOUT_CLASSIFICATION	9.195639445012405E-4	DESIGN
using IOChannel may not be the most performant way, but it's easy.	DESIGN	0.9988966533541501	WITHOUT_CLASSIFICATION	0.001103346645849891	DESIGN
these extra arrays are really unfortunate; split some of these paths out to eliminate?	DESIGN	0.8706794720661107	WITHOUT_CLASSIFICATION	0.12932052793388923	DESIGN
TODO: WRONG - get interfaces from class	DESIGN	0.8446948968021791	DESIGN	0.15530510319782087	WITHOUT_CLASSIFICATION
TODO: catch exception if constant is already set by other thread	DESIGN	0.9586100939525423	WITHOUT_CLASSIFICATION	0.04138990604745782	DESIGN
TODO: public only?	DESIGN	0.8380817870394869	WITHOUT_CLASSIFICATION	0.16191821296051306	DESIGN
see note below re: 2-field kludge	DESIGN	0.9106702745589631	WITHOUT_CLASSIFICATION	0.08932972544103693	DESIGN
TODO: protected methods. this is going to require a rework of some of the mechanism.	DESIGN	0.996998111816021	DESIGN	0.003001888183978968	WITHOUT_CLASSIFICATION
TODO: protected methods. this is going to require a rework of some of the mechanism.	DESIGN	0.996998111816021	DESIGN	0.003001888183978968	WITHOUT_CLASSIFICATION
FIXME: do we really want 'declared' methods? includes private/protected, and does _not_ include superclass methods	DESIGN	0.9803352106353243	DESIGN	0.019664789364675778	WITHOUT_CLASSIFICATION
FIXME: This doesn't actually support anything but String	DESIGN	0.7466401883252307	DESIGN	0.2533598116747694	WITHOUT_CLASSIFICATION
again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.8170242692672407	DESIGN	0.18297573073275925	WITHOUT_CLASSIFICATION
again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.8170242692672407	DESIGN	0.18297573073275925	WITHOUT_CLASSIFICATION
this needs to be split, since conditional calling #inherited doesn't fit standard ruby semantics	DESIGN	0.9306266474733412	WITHOUT_CLASSIFICATION	0.06937335252665877	DESIGN
TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.5267653833413874	DESIGN	0.47323461665861266	WITHOUT_CLASSIFICATION
TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.5267653833413874	DESIGN	0.47323461665861266	WITHOUT_CLASSIFICATION
this covers the rare case of lower-case class names (and thus will fail 99.999% of the time). fortunately, we'll only do this once per package name. (and seriously, folks, look into best practices...)	DESIGN	0.9351993031174834	WITHOUT_CLASSIFICATION	0.0648006968825166	DESIGN
FIXME: we should also support orgs that use capitalized package names (including, embarrassingly, the one I work for), but this should be enabled by a system property, as the expected default behavior for an upper-case value should be (and is) to treat it as a class name, and raise an exception if it's not found	DESIGN	0.9962668413073303	DESIGN	0.0037331586926696208	WITHOUT_CLASSIFICATION
TODO: check for Java reserved names and raise exception if encountered	DESIGN	0.973808646325307	WITHOUT_CLASSIFICATION	0.02619135367469311	DESIGN
upper-case package name TODO: top-level upper-case package was supported in the previous (Ruby-based) implementation, so leaving as is. see note at #getProxyOrPackageUnderPackage re: future approach below the top-level.	DESIGN	0.6623832064213837	WITHOUT_CLASSIFICATION	0.3376167935786163	DESIGN
FIXME: wtf is this? Why would these use the class?	DESIGN	0.999950605737209	DESIGN	4.939426279100209E-5	WITHOUT_CLASSIFICATION
FIXME: needs to be rethought	DESIGN	0.9458116225817635	DESIGN	0.054188377418236344	WITHOUT_CLASSIFICATION
TODO: specifying soft refs, may want to compare memory consumption, behavior with weak refs (specify WEAK in place of SOFT below)	DESIGN	0.6824828227409744	DESIGN	0.3175171772590258	WITHOUT_CLASSIFICATION
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.991049058998804	DESIGN	0.008950941001195999	WITHOUT_CLASSIFICATION
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.991049058998804	DESIGN	0.008950941001195999	WITHOUT_CLASSIFICATION
if we get here, we found a matching method, use it TODO: choose narrowest method by continuing to search	DESIGN	0.6703431486601641	WITHOUT_CLASSIFICATION	0.3296568513398359	DESIGN
TODO: Only setAccessible to account for pattern found by accessing constants included from a non-public interface. (aka java.util.zip.ZipConstants being implemented by many classes)	DESIGN	0.8260949387505445	DESIGN	0.1739050612494554	WITHOUT_CLASSIFICATION
TODO: Only setAccessible to account for pattern found by accessing constants included from a non-public interface. (aka java.util.zip.ZipConstants being implemented by many classes) TODO: not sure we need this at all, since we only expose public fields. field.setAccessible(true);	DESIGN	0.9717169704491968	DESIGN	0.02828302955080319	WITHOUT_CLASSIFICATION
FIXME: NOT_ALLOCATABLE_ALLOCATOR is probably not right here, since we might eventually want JavaArray to be marshallable. JRUBY-414	DESIGN	0.9912406702030782	DESIGN	0.008759329796921818	WITHOUT_CLASSIFICATION
FIXME: do we really want 'declared' methods? includes private/protected, and does _not_ include superclass methods. also, the getDeclared calls may throw SecurityException if we're running under a restrictive security policy.	DESIGN	0.9895159254755571	DESIGN	0.01048407452444293	WITHOUT_CLASSIFICATION
don't bother to check if final method, it won't be there (not generated, can't be!)	DESIGN	0.9999969856106985	WITHOUT_CLASSIFICATION	3.0143893014225876E-6	DESIGN
super calls from proxies must use reflected method FIXME: possible to make handles do the superclass call?	DESIGN	0.9643516239050934	DESIGN	0.03564837609490655	WITHOUT_CLASSIFICATION
actual type does not exactly match method return type, re-get converter FIXME: when the only autoconversions are primitives, this won't be needed	DESIGN	0.828281835780488	WITHOUT_CLASSIFICATION	0.17171816421951203	DESIGN
FIXME: Ideally JavaObject instances should be marshallable, which means that the JavaObject metaclass should have an appropriate allocator. JRUBY-414	DESIGN	0.9025008239624801	DESIGN	0.0974991760375199	WITHOUT_CLASSIFICATION
FIXME: shouldn't need @__java_ovrd_methods, just query locally defined methods.	DESIGN	0.6120036757625943	WITHOUT_CLASSIFICATION	0.3879963242374058	DESIGN
We always prepend an org.jruby.proxy package to the beginning because java and javax packages are protected and signed jars prevent us generating new classes with those package names. See JRUBY-2439.	DESIGN	0.9994275898924034	WITHOUT_CLASSIFICATION	5.724101075965964E-4	DESIGN
TODO: Only used by interface implementation; eliminate it	DESIGN	0.9981919525193984	DESIGN	0.0018080474806015552	WITHOUT_CLASSIFICATION
Create block for this iter node FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.7273761302385473	WITHOUT_CLASSIFICATION	0.2726238697614527	DESIGN
modules are included with a shim class; we must find that shim to handle super() appropriately	DESIGN	0.9983162473909017	WITHOUT_CLASSIFICATION	0.0016837526090982531	DESIGN
lame generics issues: making Segment class static and manually inserting cache reference to work around various problems generically referencing methods/vars across classes.	DESIGN	0.7313956123120037	WITHOUT_CLASSIFICATION	0.2686043876879963	DESIGN
entry exists, proxy doesn't match. replace. this could happen if old proxy was gc'ed TODO: raise exception if stored proxy is non-null? (not gc'ed)	DESIGN	0.8767554431033935	DESIGN	0.12324455689660647	WITHOUT_CLASSIFICATION
FIXME: How much more obtuse can this be? Heredoc already parsed this and saved string...Do not parse..just return	DESIGN	0.9982160763759624	DESIGN	0.0017839236240375714	WITHOUT_CLASSIFICATION
ruby constants for strings (should this be moved somewhere else?)	DESIGN	0.7291488921271592	WITHOUT_CLASSIFICATION	0.2708511078728408	DESIGN
Hacky: Advance position to eat newline here....	DESIGN	0.9993611050271581	WITHOUT_CLASSIFICATION	6.388949728419061E-4	DESIGN
FIXME: Not sure what the semantics of transfer are cFiber.defineFastMethod("transfer", cb.getFastOptMethod("transfer"));	DESIGN	0.9856101606798094	DESIGN	0.014389839320190514	WITHOUT_CLASSIFICATION
ignore...bean doesn't get registered TODO: Why does that bother me?	DESIGN	0.8548230406301848	DESIGN	0.14517695936981523	WITHOUT_CLASSIFICATION
ignore...bean doesn't get registered TODO: Why does that bother me?	DESIGN	0.8548230406301848	DESIGN	0.14517695936981523	WITHOUT_CLASSIFICATION
ENEBO: Totally weird naming (in MRI is not allocated and is a local var name)	DESIGN	0.936557293641286	WITHOUT_CLASSIFICATION	0.06344270635871398	DESIGN
FIXME: Remove this from grammars.	DESIGN	0.9622385098598353	DESIGN	0.03776149014016475	WITHOUT_CLASSIFICATION
FIXME: Consider fixing node_assign itself rather than single case	DESIGN	0.6533338084992923	DESIGN	0.3466661915007076	WITHOUT_CLASSIFICATION
Workaround for JRUBY-2326 (MRI does not enter this production for some reason)	DESIGN	0.8373471185175461	WITHOUT_CLASSIFICATION	0.162652881482454	DESIGN
FIXME: lose syntactical elements here (and others like this)	DESIGN	0.9961597873888285	DESIGN	0.0038402126111715044	WITHOUT_CLASSIFICATION
ENEBO: Lots of optz in 1.9 parser here	DESIGN	0.9937691706543336	WITHOUT_CLASSIFICATION	0.006230829345666524	DESIGN
This is perhaps innefficient timewise? Optimal spacewise	DESIGN	0.7530638963983117	WITHOUT_CLASSIFICATION	0.24693610360168833	DESIGN
This is a dummy scope; we should find a way to make that more explicit	DESIGN	0.9241741464791563	DESIGN	0.07582585352084374	WITHOUT_CLASSIFICATION
We clone dynamic scope because this will be a new instance of a block. Any previously captured instances of this block may still be around and we do not want to start overwriting those values when we create a new one. ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.9992320705945237	DESIGN	7.679294054763637E-4	WITHOUT_CLASSIFICATION
TODO: This probably isn't the best hack, but it works until we can have different root frame setup for 1.9 easily.	DESIGN	0.9986395510523991	DESIGN	0.0013604489476009521	WITHOUT_CLASSIFICATION
FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9975359063995408	DESIGN	0.0024640936004592137	WITHOUT_CLASSIFICATION
FIXME: I think we need these pushed somewhere?	DESIGN	0.9992242206034259	DESIGN	7.757793965741325E-4	WITHOUT_CLASSIFICATION
FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9975359063995408	DESIGN	0.0024640936004592137	WITHOUT_CLASSIFICATION
FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9975359063995408	DESIGN	0.0024640936004592137	WITHOUT_CLASSIFICATION
XXX: Again, screwy evaling under previous frame's scope	DESIGN	0.9989258578287148	WITHOUT_CLASSIFICATION	0.0010741421712852095	DESIGN
FIXME: This version is faster than the previous, but both suffer from a crucial flaw: It is impossible to create an ObjectSpace with an iterator that doesn't either: a. hold on to objects that might otherwise be collected or b. have no way to guarantee that a call to hasNext() will be correct or that a subsequent call to next() will produce an object. For our purposes, for now, this may be acceptable.	DESIGN	0.9699244054683979	DESIGN	0.03007559453160211	WITHOUT_CLASSIFICATION
FIXME: Maybe not best place, but move it to a good home	DESIGN	0.9999998925583842	DESIGN	1.0744161583696614E-7	WITHOUT_CLASSIFICATION
FIXME: This is gross. Don't do this.	DESIGN	0.8464440253866106	DESIGN	0.15355597461338935	WITHOUT_CLASSIFICATION
@author headius FIXME convert to enum ?	DESIGN	0.677406925512396	WITHOUT_CLASSIFICATION	0.3225930744876038	DESIGN
FIXME: No, I don't like it.	DESIGN	0.6369682338854546	WITHOUT_CLASSIFICATION	0.3630317661145454	DESIGN
TODO: This is probably BAD...	DESIGN	0.9891643990095794	DESIGN	0.010835600990420604	WITHOUT_CLASSIFICATION
FIXME: not very efficient	DESIGN	0.9900154137636702	DESIGN	0.009984586236329848	WITHOUT_CLASSIFICATION
invoke callMethodMissing method directly TODO: this could be further optimized, since some DSLs hit method_missing pretty hard...	DESIGN	0.9948710380347818	DESIGN	0.005128961965218082	WITHOUT_CLASSIFICATION
TODO this is really ineffient, and potentially a problem everytime anyone require's something. we should try to make LoadPath a special array object.	DESIGN	0.9998725349846669	DESIGN	1.2746501533313648E-4	WITHOUT_CLASSIFICATION
FIXME: inefficient; constructing a bignum just for dumping?	DESIGN	0.6309213996216363	WITHOUT_CLASSIFICATION	0.36907860037836376	DESIGN
FIXME: not very efficient	DESIGN	0.9900154137636702	DESIGN	0.009984586236329848	WITHOUT_CLASSIFICATION
FIXME: not very efficient	DESIGN	0.9900154137636702	DESIGN	0.009984586236329848	WITHOUT_CLASSIFICATION
FIXME: not very efficient	DESIGN	0.9900154137636702	DESIGN	0.009984586236329848	WITHOUT_CLASSIFICATION
FIXME: not very efficient	DESIGN	0.9900154137636702	DESIGN	0.009984586236329848	WITHOUT_CLASSIFICATION
FIXME: this should go somewhere more generic -- maybe IdUtil	DESIGN	0.999293599785921	DESIGN	7.064002140788497E-4	WITHOUT_CLASSIFICATION
FIXME: potentially could just use ByteList here?	DESIGN	0.9957938148099579	DESIGN	0.004206185190042149	WITHOUT_CLASSIFICATION
FIXME: This is almost entirely duplicated from Main.java	DESIGN	0.7116658419677956	DESIGN	0.2883341580322044	WITHOUT_CLASSIFICATION
TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.6012416360723393	DESIGN	0.3987583639276608	WITHOUT_CLASSIFICATION
TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.6012416360723393	DESIGN	0.3987583639276608	WITHOUT_CLASSIFICATION
grrr, arghh, want to subclass sun.misc.FloatingDecimal, but can't, so we must do all this (the next 70 lines of code), which has already been done by FloatingDecimal.	DESIGN	0.9745569182939059	WITHOUT_CLASSIFICATION	0.025443081706094148	DESIGN
it would be nice (and logical!) if exponent form behaved like E/e, and decimal form behaved like f, but no such luck. hence:	DESIGN	0.9692622146443713	WITHOUT_CLASSIFICATION	0.030737785355628766	DESIGN
This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.9961177690900951	WITHOUT_CLASSIFICATION	0.0038822309099048324	DESIGN
This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.9961177690900951	WITHOUT_CLASSIFICATION	0.0038822309099048324	DESIGN
TODO: get rid of this (lax returns 0.0, strict will throw)	DESIGN	0.9771875640065678	DESIGN	0.02281243599343224	WITHOUT_CLASSIFICATION
TODO: turn off the negative? will return -0.0 in lax mode	DESIGN	0.6627936105167576	DESIGN	0.33720638948324255	WITHOUT_CLASSIFICATION
FIXME: this probably belongs in a different package.	DESIGN	0.9988956005421294	DESIGN	0.0011043994578705384	WITHOUT_CLASSIFICATION
TODO: It would be nice to throw a better error for this	DESIGN	0.9999507129659172	DESIGN	4.9287034082864085E-5	WITHOUT_CLASSIFICATION
TODO: It would be nice to throw a better error for this	DESIGN	0.9999507129659172	DESIGN	4.9287034082864085E-5	WITHOUT_CLASSIFICATION
FIXME: I don't like this	DESIGN	0.9947121686317132	DESIGN	0.005287831368286782	WITHOUT_CLASSIFICATION
TODO: It's perhaps just a coincidence that all the channels for which we should raise are instanceof SelectableChannel, since stdio is not...so this bothers me slightly. -CON	DESIGN	0.9999804329453192	DESIGN	1.9567054680769973E-5	WITHOUT_CLASSIFICATION
FIXME: Clearing read buffer here...is this appropriate?	DESIGN	0.9003257441963132	DESIGN	0.09967425580368679	WITHOUT_CLASSIFICATION
TODO this should entry into error handling somewhere	DESIGN	0.9992589560934807	DESIGN	7.410439065193402E-4	WITHOUT_CLASSIFICATION
FIXME: This worries me a bit, since it could allocate a lot with a large newLength	DESIGN	0.994869687905804	DESIGN	0.005130312094195983	WITHOUT_CLASSIFICATION
We use a highly uncommon string to represent the paragraph delimiter (100% soln not worth it)	DESIGN	0.9997611142203328	WITHOUT_CLASSIFICATION	2.388857796673116E-4	DESIGN
TODO: Ruby does not seem to care about invalid numeric mode values I am not sure if ruby overflows here also...	DESIGN	0.9792673066692756	DESIGN	0.020732693330724323	WITHOUT_CLASSIFICATION
TODO: Make this more intelligible value	DESIGN	0.9351435111859135	DESIGN	0.06485648881408657	WITHOUT_CLASSIFICATION
XXX: do something?	DESIGN	0.9801609672281719	WITHOUT_CLASSIFICATION	0.01983903277182804	DESIGN
for visibility checking without requiring frame self TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9361169521213377	DESIGN	0.06388304787866214	WITHOUT_CLASSIFICATION
for visibility checking without requiring frame self TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9361169521213377	DESIGN	0.06388304787866214	WITHOUT_CLASSIFICATION
up to ten, stuff into tmp locals, load in reverse order, and assign FIXME: There's probably a slightly smarter way, but is it important?	DESIGN	0.9624146271257589	DESIGN	0.037585372874241095	WITHOUT_CLASSIFICATION
index for the item this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.6328019284593367	WITHOUT_CLASSIFICATION	0.3671980715406633	DESIGN
if we don't have opt args, start after args (they will be assigned later) this is for crap like def foo(a = (b = true; 1)) which numbers b before a FIXME: only starting after required args, since opt args may access others and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.9801517540235549	WITHOUT_CLASSIFICATION	0.019848245976445064	DESIGN
SSS FIXME: These should get normally compiled or initialized some other way ... SSS FIXME: Parent/super-type info is incorrect! These are just placeholders for now .. this needs to be updated with real class objects later!	DESIGN	0.9999994260645517	DESIGN	5.739354482626168E-7	WITHOUT_CLASSIFICATION
SSS FIXME: Move this code to some utils area .. or probably there is already a method for this in some jruby utils class Holy cow! Just to append two darned arrays!	DESIGN	0.9999773050812083	DESIGN	2.2694918791658044E-5	WITHOUT_CLASSIFICATION
SSS FIXME: This method (at least in the context of multiple assignment) is a little weird. It calls regular to_ary on the object. But, if it encounters a method_missing, the value is inserted into an 1-element array! try "a,b,c = 1" first; then define Fixnum.to_ary method and try it again. Ex: http:gist.github.com/163551	DESIGN	0.9933201304044855	DESIGN	0.006679869595514447	WITHOUT_CLASSIFICATION
This is for JRUBY-2988, since after a suspend the terminal seems to need to be reinitialized. Since we can't easily detect suspension, initialize after every readline. Probably not fast, but this is for interactive terminals anyway...so who cares?	DESIGN	0.9955651384291608	WITHOUT_CLASSIFICATION	0.004434861570839117	DESIGN
set up a field for the CacheEntry TODO: make this an array so it's not as much class metadata; similar to AbstractScript stuff	DESIGN	0.9079232149587749	DESIGN	0.09207678504122509	WITHOUT_CLASSIFICATION
exit monitor before making call FIXME: this not being in a finally is a little worrisome	DESIGN	0.9805288062956306	DESIGN	0.019471193704369442	WITHOUT_CLASSIFICATION
FIXME: Added this because marshal_spec seemed to reconstitute objects without calling dataWrapStruct this resulted in object being null after unmarshalling...	DESIGN	0.5580969412201907	WITHOUT_CLASSIFICATION	0.4419030587798094	DESIGN
if we get here, we found a matching method, use it TODO: choose narrowest method by continuing to search	DESIGN	0.6703431486601641	WITHOUT_CLASSIFICATION	0.3296568513398359	DESIGN
We clone dynamic scope because this will be a new instance of a block. Any previously captured instances of this block may still be around and we do not want to start overwriting those values when we create a new one. ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.9992320705945237	DESIGN	7.679294054763637E-4	WITHOUT_CLASSIFICATION
TODO: This is actually now returning the scope of whoever called Method#to_proc which is obviously wrong; but there's no scope to provide for many methods. It fixes JRUBY-2237, but needs a better solution.	DESIGN	0.9570618308709741	DESIGN	0.04293816912902593	WITHOUT_CLASSIFICATION
FIXME: We should be getting this from the runtime rather than assume none? return runtime.getEncodingService().getEncoding(runtime.getDefaultExternalEncoding());	DESIGN	0.9249607107665453	DESIGN	0.0750392892334547	WITHOUT_CLASSIFICATION
ignore...bean doesn't get registered TODO: Why does that bother me?	DESIGN	0.8548230406301848	DESIGN	0.14517695936981523	WITHOUT_CLASSIFICATION
This is a fairly specific hack for empty string, but it does the job	DESIGN	0.9774445988372341	DESIGN	0.022555401162765786	WITHOUT_CLASSIFICATION
XXX This constructor is a hack to implement the __END__ syntax. Converting a reader back into an InputStream doesn't generally work.	DESIGN	0.9999998006917936	DESIGN	1.993082062532345E-7	WITHOUT_CLASSIFICATION
FIXME: Total hack to get flash in Rails marshalling/unmarshalling in session ok...We need to totally change marshalling to work with overridden core classes.	DESIGN	0.9999965467937774	DESIGN	3.4532062226366373E-6	WITHOUT_CLASSIFICATION
FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9999999900558607	DESIGN	9.944139342878586E-9	WITHOUT_CLASSIFICATION
We're not setting the provider or anything, but it seems that BouncyCastle does some internal things in its provider's constructor which require it to be executed in a secure context. Ideally this hack should be removed. See JRUBY-3919 and this BC bug: http:www.bouncycastle.org/jira/browse/BJA-227	DESIGN	0.9999791884525027	DESIGN	2.0811547497255558E-5	WITHOUT_CLASSIFICATION
FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.9930475107227518	DESIGN	0.006952489277248126	WITHOUT_CLASSIFICATION
FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.9930475107227518	DESIGN	0.006952489277248126	WITHOUT_CLASSIFICATION
hack to get right style for input	DESIGN	0.9205744881116312	DESIGN	0.07942551188836885	WITHOUT_CLASSIFICATION
Object#to_a is obsolete. We match Ruby's hack until to_a goes away. Then we can remove this hack too.	DESIGN	0.9907276708321081	DESIGN	0.009272329167891936	WITHOUT_CLASSIFICATION
small hack to save a cast later on	DESIGN	0.9971731474974788	DESIGN	0.00282685250252119	WITHOUT_CLASSIFICATION
temporary hack to handle non-Ruby values will come up with better solution shortly	DESIGN	0.9999301230776878	DESIGN	6.987692231222104E-5	WITHOUT_CLASSIFICATION
Object#to_a is obsolete. We match Ruby's hack until to_a goes away. Then we can remove this hack too.	DESIGN	0.9907276708321081	DESIGN	0.009272329167891936	WITHOUT_CLASSIFICATION
HACK: in order to have stdout/err act like ttys and flush always, we set anything assigned to stdout/stderr to sync	DESIGN	0.996569659502724	WITHOUT_CLASSIFICATION	0.0034303404972759895	DESIGN
HACK: force clinit to be created	DESIGN	0.9003595093287109	WITHOUT_CLASSIFICATION	0.09964049067128913	DESIGN
FIXME: This is pretty gross; we should have a cleaner initialization that doesn't depend on package-visible fields and ideally is atomic, probably using an immutable structure we replace all at once. lazy, null when no groups defined	DESIGN	0.9941892463342606	DESIGN	0.005810753665739402	WITHOUT_CLASSIFICATION
TODO: should probably apply the null object pattern for a non-allowed class, rather than null	DESIGN	0.9992316696347779	DESIGN	7.683303652220695E-4	WITHOUT_CLASSIFICATION
TODO: set our metaclass to target's class (i.e. scary!)	DESIGN	0.8514442481392168	DESIGN	0.14855575186078315	WITHOUT_CLASSIFICATION
TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9283395623110234	WITHOUT_CLASSIFICATION	0.07166043768897648	DESIGN
ignore...bean doesn't get registered TODO: Why does that bother me?	DESIGN	0.8548230406301848	DESIGN	0.14517695936981523	WITHOUT_CLASSIFICATION
optional args, so we have IRubyObject[] TODO: confirm	DESIGN	0.7421956494638856	WITHOUT_CLASSIFICATION	0.25780435053611456	DESIGN
not intended to be called directly by users (private) OLD TODO from Ruby code: This should be implemented in JavaClass.java, where we can check for reserved Ruby names, conflicting methods, etc.	DESIGN	0.997739278854352	DESIGN	0.002260721145648083	WITHOUT_CLASSIFICATION
TODO? I think this ends up propagating from normal Java exceptions sys_fail(openFile.getPath())	DESIGN	0.9900186672857861	WITHOUT_CLASSIFICATION	0.009981332714213883	DESIGN
TODO: Make callCoerced work in block context...then fix downto, step, and upto.	DESIGN	0.9871573773279794	DESIGN	0.012842622672020592	WITHOUT_CLASSIFICATION
TODO: the rest of this...seeking to same position is unnecessary since we share a channel but some of this may be needed?	DESIGN	0.9999488746585805	DESIGN	5.1125341419509366E-5	WITHOUT_CLASSIFICATION
TODO: This version differs from ioctl by checking whether fcntl exists and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9979480384453062	DESIGN	0.0020519615546936835	WITHOUT_CLASSIFICATION
FIXME this below is temporary, but its much safer for COW (it prevents not shared Strings with begin != 0) this allows now e.g.: ByteList#set not to be begin aware	DESIGN	0.749285290229704	WITHOUT_CLASSIFICATION	0.25071470977029586	DESIGN
ignore; job was cancelled FIXME: Is this ok?	DESIGN	0.9998415481619068	DESIGN	1.5845183809323068E-4	WITHOUT_CLASSIFICATION
TODO: MRI behavior: Call "+" or "add", depending on the call. But this leads to exceptions when Floats are added. See: http:blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/17374 return callCoerced(context, op, b, true); -- this is MRI behavior. We'll use ours for now, thus providing an ability to add Floats.	DESIGN	0.7011703237940011	DESIGN	0.2988296762059989	WITHOUT_CLASSIFICATION
Must be called from main thread (it is currently, but this bothers me)	DESIGN	0.9992183217195576	WITHOUT_CLASSIFICATION	7.816782804422937E-4	DESIGN
TODO: wire into new exception handling mechanism	DESIGN	0.9763334445609726	DESIGN	0.02366655543902749	WITHOUT_CLASSIFICATION
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.991049058998804	DESIGN	0.008950941001195999	WITHOUT_CLASSIFICATION
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9895727234373644	DESIGN	0.010427276562635639	WITHOUT_CLASSIFICATION
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9895727234373644	DESIGN	0.010427276562635639	WITHOUT_CLASSIFICATION
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9895727234373644	DESIGN	0.010427276562635639	WITHOUT_CLASSIFICATION
FIXME: Determine if a real allocator is needed here. Do people want to extend JavaClass? Do we want them to do that? Can you Class.new(JavaClass)? Should you be able to? TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9999999977713733	DESIGN	2.2286267306341114E-9	WITHOUT_CLASSIFICATION
SSS FIXME: Token can be final for a method -- implying that the token is only for this particular implementation of the method But, if the mehod is modified, we create a new method object which in turn gets a new token. What makes sense?? Intuitively, it seems the first one ... but let us see ... Current code version token for this method -- can change during execution as methods get redefined!	DESIGN	0.9671516893489598	DESIGN	0.03284831065104027	WITHOUT_CLASSIFICATION
FIXME weakref.rb also does caller(2) here for the backtrace	DESIGN	0.9323521057614811	WITHOUT_CLASSIFICATION	0.06764789423851893	DESIGN
FIXME: bit of a kludge here (non-interface classes assigned to both class and module fields). simplifies proxy extender code, will go away when JI is overhauled (and proxy extenders are deprecated).	DESIGN	0.9999210930088315	DESIGN	7.890699116849611E-5	WITHOUT_CLASSIFICATION
There's not a compelling reason to keep JavaClass instances in a weak map (any proxies created are [were] kept in a non-weak map, so in most cases they will stick around anyway), and some good reasons not to (JavaClass creation is expensive, for one; many lookups are performed when passing parameters to/from methods; etc.). TODO: faster custom concurrent map	DESIGN	0.9799006484982089	DESIGN	0.020099351501791072	WITHOUT_CLASSIFICATION
TODO: we should be able to optimize this quite a bit post-1.0. JavaClass already has all the methods organized by method name; the next version (supporting protected methods/fields) will have them organized even further. So collectMethods here can just lookup the overridden methods in the JavaClass map, should be much faster.	DESIGN	0.9999066270859107	DESIGN	9.337291408931341E-5	WITHOUT_CLASSIFICATION
FIXME: finalizer should be dupped here	DESIGN	0.992263056691217	DESIGN	0.007736943308783011	WITHOUT_CLASSIFICATION
FIXME: null check is removable once we figure out how to assign to unset named block args	DESIGN	0.9322250179599618	WITHOUT_CLASSIFICATION	0.06777498204003825	DESIGN
rb_obj_id Return the internal id of an object. FIXME: Should this be renamed to match its ruby name?	DESIGN	0.9957736098080809	DESIGN	0.004226390191918999	WITHOUT_CLASSIFICATION
TODO: Bleeding runtime into parser. Arity may be should be in parser (to keep bleeding oneway)	DESIGN	0.9982044611300837	DESIGN	0.001795538869916442	WITHOUT_CLASSIFICATION
SSS FIXME: Maybe this is not really a concern after all ... Nesting level of this scope in the lexical nesting of scopes in the current file -- this is not to be confused with semantic nesting of scopes across files. Consider this code in a file f class M1::M2::M3::C ... end So, C is at lexical nesting level of 1 (the file script is at 0) in the file 'f' Semantically it is at level 3 (M1, M2, M3 are at 0,1,2). This is primarily used to ensure that variable names don't clash! i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! private int _lexicalNestingLevel;	DESIGN	0.9999999603047403	DESIGN	3.969525979435906E-8	WITHOUT_CLASSIFICATION
Sometimes the value can be retrieved at "compile time". If we succeed, nothing like it! We might not .. for the following reasons: 1. The constant is missing, 2. The reference is a forward-reference, 3. The constant's value is only known at run-time on first-access (but, this is runtime, isn't it??) 4. Our compiler isn't able to right away infer that this is a constant. SSS FIXME: 1. The operand can be a literal array, range, or hash -- hence Operand because Array, Range, and Hash derive from Operand and not Constant ... Is there a way to fix this impedance mismatch? 2. It should be possible to handle the forward-reference case by creating a new ForwardReference operand and then inform the scope of the forward reference which the scope can fix up when the reference gets defined. At code-gen time, if the reference is unresolved, when a value is retrieved for the forward-ref and we get a null, we can throw a ConstMissing exception! Not sure!	DESIGN	0.9982675981708756	DESIGN	0.0017324018291243442	WITHOUT_CLASSIFICATION
Reset value map if this instruction is the start/end of a basic block Right now, calls are considered hard boundaries for optimization and information cannot be propagated across them! SSS FIXME: Rather than treat all calls with a broad brush, what we need is to capture different attributes about a call : - uses closures - known call target - can modify scope, - etc. This information is probably already present in the AST Inspector	DESIGN	0.9999541908827724	DESIGN	4.580911722752541E-5	WITHOUT_CLASSIFICATION
FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9852592339952273	DESIGN	0.014740766004772629	WITHOUT_CLASSIFICATION
XXX: This check previously used callMethod("==") to check for equality between classes when scanning the hierarchy. However the == check may be safe; we should only ever have one instance bound to a given type/constant. If it's found to be unsafe, examine ways to avoid the == call.	DESIGN	0.943355867819415	DESIGN	0.05664413218058508	WITHOUT_CLASSIFICATION
end hack	DESIGN	0.8305306197448373	DESIGN	0.16946938025516256	WITHOUT_CLASSIFICATION
if not overloaded, we add a method that guesses at which signature to use TODO: just adding first one right now...add in signature-guessing logic	DESIGN	0.9433204203353756	DESIGN	0.056679579664624447	WITHOUT_CLASSIFICATION
FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9999999900558607	DESIGN	9.944139342878586E-9	WITHOUT_CLASSIFICATION
TODO: This version is better than the hackish previous one. Windows behavior needs to be defined though. I suppose this version could be improved more too. TODO: /etc/passwd is also inadequate for MacOSX since it does not use /etc/passwd for regular user accounts	DESIGN	0.9999999918071371	DESIGN	8.19286300107053E-9	WITHOUT_CLASSIFICATION
TODO: Should next and return also catch here?	DESIGN	0.9565454950125788	DESIGN	0.04345450498742124	WITHOUT_CLASSIFICATION
Let's only generate methods for those the user may actually intend to override. That includes any defined in the current class, and any ancestors that are also JavaProxyClasses (but none from any other ancestor classes). Methods defined in mixins will be considered intentionally overridden, except those from Kernel, Java, and JavaProxyMethods, as well as Enumerable. TODO: may want to exclude other common mixins?	DESIGN	0.9996177284434677	WITHOUT_CLASSIFICATION	3.822715565322769E-4	DESIGN
FIXME: Consider fixing node_assign itself rather than single case	DESIGN	0.6533338084992923	DESIGN	0.3466661915007076	WITHOUT_CLASSIFICATION
Workaround for JRUBY-2326 (MRI does not enter this production for some reason)	DESIGN	0.8373471185175461	WITHOUT_CLASSIFICATION	0.162652881482454	DESIGN
FIXME: We should really not be creating the dynamic scope for the root of the AST before parsing. This makes us end up needing to readjust this dynamic scope coming out of parse (and for local static scopes it will always happen because of $~ and $_). FIXME: Because we end up adjusting this after-the-fact, we can't use any of the specific-size scopes.	DESIGN	0.9999644910927424	DESIGN	3.5508907257554266E-5	WITHOUT_CLASSIFICATION
FIXME: Resolve what the hell is going on	DESIGN	0.9789513040048073	DESIGN	0.02104869599519266	WITHOUT_CLASSIFICATION
This is perhaps innefficient timewise? Optimal spacewise	DESIGN	0.7530638963983117	WITHOUT_CLASSIFICATION	0.24693610360168833	DESIGN
If variables were added then we may need to grow the dynamic scope to match the static one. FIXME: Make this so we only need to check this for blockScope != null. We cannot currently since we create the DynamicScope for a LocalStaticScope before parse begins. Refactoring should make this fixable.	DESIGN	0.8541246429804978	WITHOUT_CLASSIFICATION	0.1458753570195022	DESIGN
FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9975359063995408	DESIGN	0.0024640936004592137	WITHOUT_CLASSIFICATION
FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9975359063995408	DESIGN	0.0024640936004592137	WITHOUT_CLASSIFICATION
we're depending on the side effect of the load, which loads the class but does not turn it into a script I don't like it, but until we restructure the code a bit more, we'll need to quietly let it by here.	DESIGN	0.9992720148359734	DESIGN	7.279851640267281E-4	WITHOUT_CLASSIFICATION
TODO: for now, we use a faithful reimplementation of MRI's algorithm, but should use UTF8Encoding facilities from Joni, once it starts prefroming UTF-8 content validation.	DESIGN	0.6638949677599182	DESIGN	0.3361050322400818	WITHOUT_CLASSIFICATION
Process streams get Channel.newChannel()ed into FileChannel but are not actually seekable. So instead of just the isSeekable check doing instanceof FileChannel, we must also add this boolean to check, which we set to false when it's known that the incoming channel is from a process. FIXME: This is gross, and it's NIO's fault for not providing a nice way to tell if a channel is "really" seekable.	DESIGN	0.999989187363417	DESIGN	1.0812636582996695E-5	WITHOUT_CLASSIFICATION
