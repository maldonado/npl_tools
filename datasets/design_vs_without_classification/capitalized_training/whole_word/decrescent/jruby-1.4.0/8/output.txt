set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9994550252576975	WITHOUT_CLASSIFICATION	5.449747423025711E-4	DESIGN
line 335	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
Figure end-char. '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9998506466927064	WITHOUT_CLASSIFICATION	1.493533072936616E-4	DESIGN
line 362	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 372	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
line 391	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
^D	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
^Z	WITHOUT_CLASSIFICATION	0.99946007234695	WITHOUT_CLASSIFICATION	5.399276530499447E-4	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
Do nothing	WITHOUT_CLASSIFICATION	0.9996754899655761	WITHOUT_CLASSIFICATION	3.245100344240067E-4	DESIGN
Do nothing	WITHOUT_CLASSIFICATION	0.9996754899655761	WITHOUT_CLASSIFICATION	3.245100344240067E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995523747177635	WITHOUT_CLASSIFICATION	4.476252822365963E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995523747177635	WITHOUT_CLASSIFICATION	4.476252822365963E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995523747177635	WITHOUT_CLASSIFICATION	4.476252822365963E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995523747177635	WITHOUT_CLASSIFICATION	4.476252822365963E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995523747177635	WITHOUT_CLASSIFICATION	4.476252822365963E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995523747177635	WITHOUT_CLASSIFICATION	4.476252822365963E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995523747177635	WITHOUT_CLASSIFICATION	4.476252822365963E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995523747177635	WITHOUT_CLASSIFICATION	4.476252822365963E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995523747177635	WITHOUT_CLASSIFICATION	4.476252822365963E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995523747177635	WITHOUT_CLASSIFICATION	4.476252822365963E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995523747177635	WITHOUT_CLASSIFICATION	4.476252822365963E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995523747177635	WITHOUT_CLASSIFICATION	4.476252822365963E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995523747177635	WITHOUT_CLASSIFICATION	4.476252822365963E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995523747177635	WITHOUT_CLASSIFICATION	4.476252822365963E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995523747177635	WITHOUT_CLASSIFICATION	4.476252822365963E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995523747177635	WITHOUT_CLASSIFICATION	4.476252822365963E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995523747177635	WITHOUT_CLASSIFICATION	4.476252822365963E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995523747177635	WITHOUT_CLASSIFICATION	4.476252822365963E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995523747177635	WITHOUT_CLASSIFICATION	4.476252822365963E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995523747177635	WITHOUT_CLASSIFICATION	4.476252822365963E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995523747177635	WITHOUT_CLASSIFICATION	4.476252822365963E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995523747177635	WITHOUT_CLASSIFICATION	4.476252822365963E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995523747177635	WITHOUT_CLASSIFICATION	4.476252822365963E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995523747177635	WITHOUT_CLASSIFICATION	4.476252822365963E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995523747177635	WITHOUT_CLASSIFICATION	4.476252822365963E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995523747177635	WITHOUT_CLASSIFICATION	4.476252822365963E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995523747177635	WITHOUT_CLASSIFICATION	4.476252822365963E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995523747177635	WITHOUT_CLASSIFICATION	4.476252822365963E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995523747177635	WITHOUT_CLASSIFICATION	4.476252822365963E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995523747177635	WITHOUT_CLASSIFICATION	4.476252822365963E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995523747177635	WITHOUT_CLASSIFICATION	4.476252822365963E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995523747177635	WITHOUT_CLASSIFICATION	4.476252822365963E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995523747177635	WITHOUT_CLASSIFICATION	4.476252822365963E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995523747177635	WITHOUT_CLASSIFICATION	4.476252822365963E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995523747177635	WITHOUT_CLASSIFICATION	4.476252822365963E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995523747177635	WITHOUT_CLASSIFICATION	4.476252822365963E-4	DESIGN
return result	WITHOUT_CLASSIFICATION	0.9999295014771727	WITHOUT_CLASSIFICATION	7.049852282721476E-5	DESIGN
name	WITHOUT_CLASSIFICATION	0.9993050367606428	WITHOUT_CLASSIFICATION	6.949632393572093E-4	DESIGN
Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.999060197368689	WITHOUT_CLASSIFICATION	9.398026313109482E-4	DESIGN
Accessor methods.	WITHOUT_CLASSIFICATION	0.999525659470902	WITHOUT_CLASSIFICATION	4.7434052909803276E-4	DESIGN
MRI behavior	WITHOUT_CLASSIFICATION	0.9996333606543817	WITHOUT_CLASSIFICATION	3.6663934561835824E-4	DESIGN
MRI behavior	WITHOUT_CLASSIFICATION	0.9996333606543817	WITHOUT_CLASSIFICATION	3.6663934561835824E-4	DESIGN
MRI behavior	WITHOUT_CLASSIFICATION	0.9996333606543817	WITHOUT_CLASSIFICATION	3.6663934561835824E-4	DESIGN
MRI behavior	WITHOUT_CLASSIFICATION	0.9996333606543817	WITHOUT_CLASSIFICATION	3.6663934561835824E-4	DESIGN
call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9998591786906587	WITHOUT_CLASSIFICATION	1.408213093413388E-4	DESIGN
fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9988334917380622	WITHOUT_CLASSIFICATION	0.0011665082619377804	DESIGN
try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9998696191165816	WITHOUT_CLASSIFICATION	1.303808834184395E-4	DESIGN
define ARGV and $ for this runtime	WITHOUT_CLASSIFICATION	0.99945322478451	WITHOUT_CLASSIFICATION	5.467752154900043E-4	DESIGN
Version information:	WITHOUT_CLASSIFICATION	0.9995385443485973	WITHOUT_CLASSIFICATION	4.614556514027002E-4	DESIGN
after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9997581349050361	WITHOUT_CLASSIFICATION	2.4186509496398352E-4	DESIGN
ARGF, $< object	WITHOUT_CLASSIFICATION	0.9992888442515591	WITHOUT_CLASSIFICATION	7.111557484409001E-4	DESIGN
if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999240594008368	WITHOUT_CLASSIFICATION	7.594059916314538E-5	DESIGN
On platforms without a c-library accessable through JNA, getpid will return hashCode as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.6166588597287721	WITHOUT_CLASSIFICATION	0.38334114027122784	DESIGN
$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9982645451714024	WITHOUT_CLASSIFICATION	0.001735454828597599	DESIGN
include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9459419127265416	WITHOUT_CLASSIFICATION	0.0540580872734584	DESIGN
MRI behavior: just plain '' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9994770155368534	WITHOUT_CLASSIFICATION	5.229844631465895E-4	DESIGN
this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9925953175661267	WITHOUT_CLASSIFICATION	0.0074046824338732066	DESIGN
What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.997943918165143	WITHOUT_CLASSIFICATION	0.0020560818348570034	DESIGN
----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9996937190122798	WITHOUT_CLASSIFICATION	3.0628098772030255E-4	DESIGN
CONSTANT TABLE METHODS - pass to delegate	WITHOUT_CLASSIFICATION	0.9998389146857581	WITHOUT_CLASSIFICATION	1.610853142418727E-4	DESIGN
We get canonical path to try and flatten the path out. a dir '/subdir/..' should return as '/' cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9872273971322517	WITHOUT_CLASSIFICATION	0.012772602867748336	DESIGN
MRI behavior	WITHOUT_CLASSIFICATION	0.9996333606543817	WITHOUT_CLASSIFICATION	3.6663934561835824E-4	DESIGN
----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999916502831966	WITHOUT_CLASSIFICATION	8.349716803336863E-6	DESIGN
Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999976981611032	WITHOUT_CLASSIFICATION	2.301838896766939E-6	DESIGN
----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998661072370665	WITHOUT_CLASSIFICATION	1.3389276293343717E-4	DESIGN
try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9974362546831405	WITHOUT_CLASSIFICATION	0.0025637453168595352	DESIGN
otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9983744037746201	WITHOUT_CLASSIFICATION	0.0016255962253799157	DESIGN
Proc class	WITHOUT_CLASSIFICATION	0.9986680257921141	WITHOUT_CLASSIFICATION	0.0013319742078859384	DESIGN
No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.999994117465699	WITHOUT_CLASSIFICATION	5.882534300972305E-6	DESIGN
modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9988198353695351	WITHOUT_CLASSIFICATION	0.0011801646304648416	DESIGN
for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.8364948578177686	WITHOUT_CLASSIFICATION	0.16350514218223136	DESIGN
case RUBY_HYBRID: backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); break;	WITHOUT_CLASSIFICATION	0.9999724263663604	WITHOUT_CLASSIFICATION	2.7573633639625973E-5	DESIGN
This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9997130818163082	WITHOUT_CLASSIFICATION	2.869181836918116E-4	DESIGN
rb_exc_new3	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9998799465085972	WITHOUT_CLASSIFICATION	1.2005349140275763E-4	DESIGN
registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9992535500365699	WITHOUT_CLASSIFICATION	7.464499634301213E-4	DESIGN
IOT is also 6	WITHOUT_CLASSIFICATION	0.9998338612451801	WITHOUT_CLASSIFICATION	1.6613875481990474E-4	DESIGN
CLD is also 20	WITHOUT_CLASSIFICATION	0.999845101772	WITHOUT_CLASSIFICATION	1.5489822800003112E-4	DESIGN
RubySignal	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
ZStream actually isn't allocatable	WITHOUT_CLASSIFICATION	0.9952186041729404	WITHOUT_CLASSIFICATION	0.004781395827059629	DESIGN
MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9974008467984702	WITHOUT_CLASSIFICATION	0.0025991532015298066	DESIGN
it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999670557197858	WITHOUT_CLASSIFICATION	3.294428021420485E-5	DESIGN
MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.999621903876476	WITHOUT_CLASSIFICATION	3.780961235239279E-4	DESIGN
SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9998821412051567	WITHOUT_CLASSIFICATION	1.1785879484333462E-4	DESIGN
io.finish();	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9918097349250962	WITHOUT_CLASSIFICATION	0.008190265074903834	DESIGN
hmm...	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
Called before any write to make sure the header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.999409579799772	WITHOUT_CLASSIFICATION	5.904202002280972E-4	DESIGN
For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9673154618628821	WITHOUT_CLASSIFICATION	0.03268453813711797	DESIGN
We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9997780704727498	WITHOUT_CLASSIFICATION	2.2192952725018556E-4	DESIGN
float number of seconds	WITHOUT_CLASSIFICATION	0.9980425883967176	WITHOUT_CLASSIFICATION	0.001957411603282511	DESIGN
modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9998363032987764	WITHOUT_CLASSIFICATION	1.636967012235437E-4	DESIGN
dump usec, not msec	WITHOUT_CLASSIFICATION	0.9992403707827705	WITHOUT_CLASSIFICATION	7.596292172294695E-4	DESIGN
Time class methods	WITHOUT_CLASSIFICATION	0.9987782089971392	WITHOUT_CLASSIFICATION	0.0012217910028608564	DESIGN
marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9981194400289043	WITHOUT_CLASSIFICATION	0.0018805599710956826	DESIGN
MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9993798705567769	WITHOUT_CLASSIFICATION	6.201294432231335E-4	DESIGN
set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9946539119882335	WITHOUT_CLASSIFICATION	0.005346088011766601	DESIGN
the instant at which we will ask dtz what the difference between DST and standard time is	WITHOUT_CLASSIFICATION	0.999322949600106	WITHOUT_CLASSIFICATION	6.770503998940048E-4	DESIGN
if we might be moving this time from !DST -> DST, the offset is assumed to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9981117964043545	WITHOUT_CLASSIFICATION	0.0018882035956454097	DESIGN
Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9996706461628494	WITHOUT_CLASSIFICATION	3.293538371506661E-4	DESIGN
================ Utility Methods ================	WITHOUT_CLASSIFICATION	0.9989909546251667	WITHOUT_CLASSIFICATION	0.0010090453748332908	DESIGN
If the value will fit in a Fixnum, return one of those.	WITHOUT_CLASSIFICATION	0.9999417247916471	WITHOUT_CLASSIFICATION	5.8275208352865655E-5	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999872388273321	WITHOUT_CLASSIFICATION	1.2761172668034517E-5	DESIGN
MRI issuses warning here on (RBIGNUM(x)->len SIZEOF_BDIGITS yy > 10241024)	WITHOUT_CLASSIFICATION	0.9904907797719574	WITHOUT_CLASSIFICATION	0.009509220228042606	DESIGN
num2int is also implemented	WITHOUT_CLASSIFICATION	0.9981827836969888	WITHOUT_CLASSIFICATION	0.001817216303011202	DESIGN
num2int is also implemented	WITHOUT_CLASSIFICATION	0.9981827836969888	WITHOUT_CLASSIFICATION	0.001817216303011202	DESIGN
no bignorm here needed	WITHOUT_CLASSIFICATION	0.9934311440697481	WITHOUT_CLASSIFICATION	0.006568855930251956	DESIGN
wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9763250013082834	WITHOUT_CLASSIFICATION	0.023674998691716593	DESIGN
Pad with a 0	WITHOUT_CLASSIFICATION	0.9995614535493302	WITHOUT_CLASSIFICATION	4.385464506698426E-4	DESIGN
BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9994612029696213	WITHOUT_CLASSIFICATION	5.387970303786661E-4	DESIGN
This should only be called by this and RubyFile. It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9145815375229068	WITHOUT_CLASSIFICATION	0.08541846247709318	DESIGN
We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9954051584822861	WITHOUT_CLASSIFICATION	0.004594841517713931	DESIGN
???	WITHOUT_CLASSIFICATION	0.9940389880944368	WITHOUT_CLASSIFICATION	0.005961011905563277	DESIGN
PID	WITHOUT_CLASSIFICATION	0.9994481092216964	WITHOUT_CLASSIFICATION	5.518907783036462E-4	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999872388273321	WITHOUT_CLASSIFICATION	1.2761172668034517E-5	DESIGN
elements and trailing nils	WITHOUT_CLASSIFICATION	0.99949982588982	WITHOUT_CLASSIFICATION	5.001741101800223E-4	DESIGN
Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.999998979759427	WITHOUT_CLASSIFICATION	1.0202405730223406E-6	DESIGN
Ruby arrays default to holding 16 elements, so we create an ArrayList of the same size if we're not told otherwise	WITHOUT_CLASSIFICATION	0.9999523621421853	WITHOUT_CLASSIFICATION	4.763785781470111E-5	DESIGN
rb_ary_new2 just allocates the internal array	WITHOUT_CLASSIFICATION	0.9997207681595668	WITHOUT_CLASSIFICATION	2.792318404331747E-4	DESIGN
plain internal array assignment	WITHOUT_CLASSIFICATION	0.9995590192134718	WITHOUT_CLASSIFICATION	4.4098078652817944E-4	DESIGN
plain internal array assignment	WITHOUT_CLASSIFICATION	0.9995590192134718	WITHOUT_CLASSIFICATION	4.4098078652817944E-4	DESIGN
plain internal array assignment	WITHOUT_CLASSIFICATION	0.9995590192134718	WITHOUT_CLASSIFICATION	4.4098078652817944E-4	DESIGN
Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour	WITHOUT_CLASSIFICATION	0.987385421914217	WITHOUT_CLASSIFICATION	0.01261457808578308	DESIGN
NEWOBJ and OBJSETUP equivalent fastest one, for shared arrays, optional objectspace	WITHOUT_CLASSIFICATION	0.9994900677015534	WITHOUT_CLASSIFICATION	5.099322984465967E-4	DESIGN
Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999172512034991	WITHOUT_CLASSIFICATION	8.274879650088947E-5	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992910217047843	WITHOUT_CLASSIFICATION	7.089782952156967E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992910217047843	WITHOUT_CLASSIFICATION	7.089782952156967E-4	DESIGN
Windows does not support these functions, so we won't even try This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9790292236678596	WITHOUT_CLASSIFICATION	0.02097077633214038	DESIGN
There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and newer one (US/Pacific, America/Los_Angeles). This pattern is to detect the legacy TZ format in order to convert it to the newer format understood by Java API.	WITHOUT_CLASSIFICATION	0.9987340867520452	WITHOUT_CLASSIFICATION	0.001265913247954785	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992910217047843	WITHOUT_CLASSIFICATION	7.089782952156967E-4	DESIGN
1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9985115159407548	WITHOUT_CLASSIFICATION	0.0014884840592452127	DESIGN
possibly should not in object space	WITHOUT_CLASSIFICATION	0.9921849638503992	WITHOUT_CLASSIFICATION	0.007815036149600779	DESIGN
only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999740483803082	WITHOUT_CLASSIFICATION	2.5951619691717638E-5	DESIGN
rb_ary_new4	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
rb_ary_new4	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9993965822011954	WITHOUT_CLASSIFICATION	6.034177988044971E-4	DESIGN
If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9997319218980754	WITHOUT_CLASSIFICATION	2.6807810192461576E-4	DESIGN
See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9992574440673042	WITHOUT_CLASSIFICATION	7.425559326957385E-4	DESIGN
See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9992574440673042	WITHOUT_CLASSIFICATION	7.425559326957385E-4	DESIGN
Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9997765150617	WITHOUT_CLASSIFICATION	2.2348493830006872E-4	DESIGN
pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9991956186774692	WITHOUT_CLASSIFICATION	8.043813225306839E-4	DESIGN
root fiber	WITHOUT_CLASSIFICATION	0.9990276306196508	WITHOUT_CLASSIFICATION	9.723693803490399E-4	DESIGN
GMT+00:00 --> Etc/GMT, see "MRI behavior" comment below.	WITHOUT_CLASSIFICATION	0.9998159856174215	WITHOUT_CLASSIFICATION	1.8401438257855833E-4	DESIGN
See http:www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9995278555257643	WITHOUT_CLASSIFICATION	4.721444742357627E-4	DESIGN
extras flag	WITHOUT_CLASSIFICATION	0.999490075666116	WITHOUT_CLASSIFICATION	5.099243338840354E-4	DESIGN
Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
...nothing	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
utility method	WITHOUT_CLASSIFICATION	0.9996717998503875	WITHOUT_CLASSIFICATION	3.282001496125358E-4	DESIGN
Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.999451249732456	WITHOUT_CLASSIFICATION	5.487502675439465E-4	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999872388273321	WITHOUT_CLASSIFICATION	1.2761172668034517E-5	DESIGN
flags 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999843316353378	WITHOUT_CLASSIFICATION	1.5668364662161785E-5	DESIGN
range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9993652702347313	WITHOUT_CLASSIFICATION	6.347297652686717E-4	DESIGN
1.8 "include?"	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9993550368497214	WITHOUT_CLASSIFICATION	6.449631502785891E-4	DESIGN
beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9755395383349471	WITHOUT_CLASSIFICATION	0.024460461665052946	DESIGN
MRI does it!	WITHOUT_CLASSIFICATION	0.9999146588016646	WITHOUT_CLASSIFICATION	8.534119833533384E-5	DESIGN
won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9998125408586743	WITHOUT_CLASSIFICATION	1.8745914132564336E-4	DESIGN
it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9995817195790772	WITHOUT_CLASSIFICATION	4.182804209228143E-4	DESIGN
RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9988262199975204	WITHOUT_CLASSIFICATION	0.0011737800024795742	DESIGN
not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.996123614771502	WITHOUT_CLASSIFICATION	0.003876385228498053	DESIGN
second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999825040402706	WITHOUT_CLASSIFICATION	1.7495959729480486E-5	DESIGN
we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9846729629390959	WITHOUT_CLASSIFICATION	0.015327037060904257	DESIGN
terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9990490532362818	WITHOUT_CLASSIFICATION	9.509467637182353E-4	DESIGN
Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999085878792716	WITHOUT_CLASSIFICATION	9.141212072836825E-5	DESIGN
do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9958193615167525	WITHOUT_CLASSIFICATION	0.004180638483247482	DESIGN
recheck condition	WITHOUT_CLASSIFICATION	0.9996400545004404	WITHOUT_CLASSIFICATION	3.599454995596595E-4	DESIGN
Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.999942057366893	WITHOUT_CLASSIFICATION	5.7942633106890727E-5	DESIGN
Construct key services	WITHOUT_CLASSIFICATION	0.9993402767905367	WITHOUT_CLASSIFICATION	6.59723209463249E-4	DESIGN
initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9997851729655322	WITHOUT_CLASSIFICATION	2.1482703446787304E-4	DESIGN
Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999716925303233	WITHOUT_CLASSIFICATION	2.830746967672748E-5	DESIGN
Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9998855848956578	WITHOUT_CLASSIFICATION	1.1441510434225204E-4	DESIGN
Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9138072333285958	WITHOUT_CLASSIFICATION	0.08619276667140419	DESIGN
Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9986090201081421	WITHOUT_CLASSIFICATION	0.001390979891857886	DESIGN
Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9993850108347423	WITHOUT_CLASSIFICATION	6.149891652576626E-4	DESIGN
Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999971093386287	WITHOUT_CLASSIFICATION	2.890661371265514E-6	DESIGN
Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9986356615966632	WITHOUT_CLASSIFICATION	0.0013643384033368673	DESIGN
depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9909710432353831	WITHOUT_CLASSIFICATION	0.009028956764616859	DESIGN
initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9995209747054536	WITHOUT_CLASSIFICATION	4.7902529454633513E-4	DESIGN
Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9996484013231068	WITHOUT_CLASSIFICATION	3.5159867689314413E-4	DESIGN
Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9998966599535587	WITHOUT_CLASSIFICATION	1.0334004644127748E-4	DESIGN
we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9964451778702783	WITHOUT_CLASSIFICATION	0.003554822129721734	DESIGN
determine spacing	WITHOUT_CLASSIFICATION	0.9993057131065683	WITHOUT_CLASSIFICATION	6.942868934317268E-4	DESIGN
should alter global state	WITHOUT_CLASSIFICATION	0.9977637284834573	WITHOUT_CLASSIFICATION	0.0022362715165427627	DESIGN
For JSR 223 support: see http:scripting.java.net/	WITHOUT_CLASSIFICATION	0.9998389317027728	WITHOUT_CLASSIFICATION	1.610682972272451E-4	DESIGN
use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9861810509836757	WITHOUT_CLASSIFICATION	0.013818949016324229	DESIGN
this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9997457234791162	WITHOUT_CLASSIFICATION	2.5427652088390155E-4	DESIGN
new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9985187858485178	WITHOUT_CLASSIFICATION	0.0014812141514822243	DESIGN
assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9529296471344241	WITHOUT_CLASSIFICATION	0.04707035286557588	DESIGN
Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9989606879673992	WITHOUT_CLASSIFICATION	0.0010393120326006938	DESIGN
default: don't retain	WITHOUT_CLASSIFICATION	0.9995271084830926	WITHOUT_CLASSIFICATION	4.7289151690743924E-4	DESIGN
ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9997365800986877	WITHOUT_CLASSIFICATION	2.634199013122442E-4	DESIGN
Default objects	WITHOUT_CLASSIFICATION	0.9998801523622373	WITHOUT_CLASSIFICATION	1.1984763776271538E-4	DESIGN
record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9998580097858997	WITHOUT_CLASSIFICATION	1.4199021410040148E-4	DESIGN
former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9994669607066293	WITHOUT_CLASSIFICATION	5.330392933707512E-4	DESIGN
Java support	WITHOUT_CLASSIFICATION	0.9995183650115717	WITHOUT_CLASSIFICATION	4.8163498842837554E-4	DESIGN
Parser stats	WITHOUT_CLASSIFICATION	0.9994650786184226	WITHOUT_CLASSIFICATION	5.34921381577502E-4	DESIGN
Compilation	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
can't read non-standard properties	WITHOUT_CLASSIFICATION	0.999939708723722	WITHOUT_CLASSIFICATION	6.029127627814922E-5	DESIGN
can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9997696589236136	WITHOUT_CLASSIFICATION	2.3034107638632493E-4	DESIGN
mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999118450572452	WITHOUT_CLASSIFICATION	8.815494275488064E-5	DESIGN
mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9998233917112467	WITHOUT_CLASSIFICATION	1.7660828875332762E-4	DESIGN
A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9996838566752098	WITHOUT_CLASSIFICATION	3.1614332479022137E-4	DESIGN
A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9997403806720695	WITHOUT_CLASSIFICATION	2.596193279304917E-4	DESIGN
initial spaces spaces before "at"	WITHOUT_CLASSIFICATION	0.9997495866230738	WITHOUT_CLASSIFICATION	2.504133769263035E-4	DESIGN
event name filename line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9986974307932989	WITHOUT_CLASSIFICATION	0.0013025692067011267	DESIGN
The method is intentionally not public, since it typically should not be used outside of the core.	WITHOUT_CLASSIFICATION	0.6023628635622573	WITHOUT_CLASSIFICATION	0.3976371364377426	DESIGN
Note: this field and the following static initializer must be located be in this order!	WITHOUT_CLASSIFICATION	0.7216450879724637	WITHOUT_CLASSIFICATION	0.2783549120275363	DESIGN
Contains a list of all blocks (as Procs) that should be called when the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9998585140632947	WITHOUT_CLASSIFICATION	1.414859367053088E-4	DESIGN
quoted-printable	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
default options	WITHOUT_CLASSIFICATION	0.9999049147611423	WITHOUT_CLASSIFICATION	9.50852388577414E-5	DESIGN
iso-2022-jp	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
iso-2022-jp	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
Shift_JIS	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
Shift_JIS	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
EUC-JP	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
EUC-JP	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
UTF-8	WITHOUT_CLASSIFICATION	0.9998674919177213	WITHOUT_CLASSIFICATION	1.3250808227868087E-4	DESIGN
UTF-8	WITHOUT_CLASSIFICATION	0.9998674919177213	WITHOUT_CLASSIFICATION	1.3250808227868087E-4	DESIGN
long name option	WITHOUT_CLASSIFICATION	0.9997903814594848	WITHOUT_CLASSIFICATION	2.0961854051518354E-4	DESIGN
conversion	WITHOUT_CLASSIFICATION	0.9998857944631604	WITHOUT_CLASSIFICATION	1.1420553683950297E-4	DESIGN
================ Singleton Methods ================	WITHOUT_CLASSIFICATION	0.9910403634579127	WITHOUT_CLASSIFICATION	0.008959636542087203	DESIGN
string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9993458017638546	WITHOUT_CLASSIFICATION	6.541982361454939E-4	DESIGN
string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9991915765523132	WITHOUT_CLASSIFICATION	8.08423447686785E-4	DESIGN
string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9990792772871439	WITHOUT_CLASSIFICATION	9.207227128560806E-4	DESIGN
ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9988262199975204	WITHOUT_CLASSIFICATION	0.0011737800024795742	DESIGN
rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9988262199975204	WITHOUT_CLASSIFICATION	0.0011737800024795742	DESIGN
rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9997999193330603	WITHOUT_CLASSIFICATION	2.0008066693976082E-4	DESIGN
String construction routines by NOT byte[] buffer and NOT making the target String shared	WITHOUT_CLASSIFICATION	0.9999192821208704	WITHOUT_CLASSIFICATION	8.071787912963418E-5	DESIGN
rb_str_subseq	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9977826511937388	WITHOUT_CLASSIFICATION	0.0022173488062612475	DESIGN
if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.999551687605075	WITHOUT_CLASSIFICATION	4.4831239492505406E-4	DESIGN
rb_str_cmp_m	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999094934970997	WITHOUT_CLASSIFICATION	9.050650290034283E-5	DESIGN
rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9991875939365714	WITHOUT_CLASSIFICATION	8.124060634285613E-4	DESIGN
this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.6475160892925682	DESIGN	0.35248391070743174	WITHOUT_CLASSIFICATION
must not reallocate	WITHOUT_CLASSIFICATION	0.9969961689981099	WITHOUT_CLASSIFICATION	0.003003831001890144	DESIGN
Illegal combination	WITHOUT_CLASSIFICATION	0.9993232583964153	WITHOUT_CLASSIFICATION	6.767416035846649E-4	DESIGN
use 1.8 impl	WITHOUT_CLASSIFICATION	0.995201370157684	WITHOUT_CLASSIFICATION	0.00479862984231616	DESIGN
RubyString aka rb_string_value	WITHOUT_CLASSIFICATION	0.9988262199975204	WITHOUT_CLASSIFICATION	0.0011737800024795742	DESIGN
bang: true, no match, no substitution	WITHOUT_CLASSIFICATION	0.9988248844510972	WITHOUT_CLASSIFICATION	0.0011751155489027922	DESIGN
out of byte range there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999791549266889	WITHOUT_CLASSIFICATION	2.084507331113236E-5	DESIGN
len + margin	WITHOUT_CLASSIFICATION	0.999731518758656	WITHOUT_CLASSIFICATION	2.68481241343995E-4	DESIGN
block given	WITHOUT_CLASSIFICATION	0.9997235835139835	WITHOUT_CLASSIFICATION	2.7641648601649954E-4	DESIGN
block given	WITHOUT_CLASSIFICATION	0.9997235835139835	WITHOUT_CLASSIFICATION	2.7641648601649954E-4	DESIGN
copy pre-match substr	WITHOUT_CLASSIFICATION	0.998326715702834	WITHOUT_CLASSIFICATION	0.0016732842971659255	DESIGN
string given	WITHOUT_CLASSIFICATION	0.9997674000229299	WITHOUT_CLASSIFICATION	2.3259997707027237E-4	DESIGN
hash given	WITHOUT_CLASSIFICATION	0.999786054009049	WITHOUT_CLASSIFICATION	2.139459909511657E-4	DESIGN
This represents left most digit in a set of incremented values? Therefore leftmost numeric must be '1' and not '0' 999 -> 1000, not 999 -> 0000. whereas chars should be zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.7947440451407853	WITHOUT_CLASSIFICATION	0.2052559548592146	DESIGN
substring longer than string	WITHOUT_CLASSIFICATION	0.9994081938396059	WITHOUT_CLASSIFICATION	5.91806160394067E-4	DESIGN
rb_str_substr	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
nothing	WITHOUT_CLASSIFICATION	0.9998211875153403	WITHOUT_CLASSIFICATION	1.7881248465976033E-4	DESIGN
nothing	WITHOUT_CLASSIFICATION	0.9998211875153403	WITHOUT_CLASSIFICATION	1.7881248465976033E-4	DESIGN
rb_str_splice	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
TODO: keep cr TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.7086808991027034	DESIGN	0.29131910089729657	WITHOUT_CLASSIFICATION
keep cr ?	WITHOUT_CLASSIFICATION	0.9983019175141087	WITHOUT_CLASSIFICATION	0.0016980824858913819	DESIGN
keep cr ?	WITHOUT_CLASSIFICATION	0.9983019175141087	WITHOUT_CLASSIFICATION	0.0016980824858913819	DESIGN
wrapped to \0...\0. search next valid char.	WITHOUT_CLASSIFICATION	0.9962940393927407	WITHOUT_CLASSIFICATION	0.003705960607259332	DESIGN
only this case affects backrefs	WITHOUT_CLASSIFICATION	0.999691145745814	WITHOUT_CLASSIFICATION	3.0885425418607915E-4	DESIGN
only this case affects backrefs	WITHOUT_CLASSIFICATION	0.999691145745814	WITHOUT_CLASSIFICATION	3.0885425418607915E-4	DESIGN
modified	WITHOUT_CLASSIFICATION	0.9998653151955732	WITHOUT_CLASSIFICATION	1.346848044267747E-4	DESIGN
modified	WITHOUT_CLASSIFICATION	0.9998653151955732	WITHOUT_CLASSIFICATION	1.346848044267747E-4	DESIGN
1.8	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
1.8	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
QTRUE	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
retrieve last replacer	WITHOUT_CLASSIFICATION	0.9996183432226128	WITHOUT_CLASSIFICATION	3.816567773872902E-4	DESIGN
Check the length every iteration, since the block can modify this string.	WITHOUT_CLASSIFICATION	0.9946045325732977	WITHOUT_CLASSIFICATION	0.005395467426702298	DESIGN
long size bits in byte	WITHOUT_CLASSIFICATION	0.999164979265428	WITHOUT_CLASSIFICATION	8.350207345718583E-4	DESIGN
from encoding, special-casing ASCII to ASCII	WITHOUT_CLASSIFICATION	0.9969127212959124	WITHOUT_CLASSIFICATION	0.0030872787040876495	DESIGN
to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9981893791489833	WITHOUT_CLASSIFICATION	0.001810620851016723	DESIGN
create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9973904423025628	WITHOUT_CLASSIFICATION	0.0026095576974371894	DESIGN
decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9989182775644596	WITHOUT_CLASSIFICATION	0.001081722435540323	DESIGN
create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9973904423025628	WITHOUT_CLASSIFICATION	0.0026095576974371894	DESIGN
Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9994045000924721	WITHOUT_CLASSIFICATION	5.954999075280024E-4	DESIGN
no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.997823880924718	WITHOUT_CLASSIFICATION	0.002176119075282001	DESIGN
interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999630784917993	WITHOUT_CLASSIFICATION	3.692150820068343E-5	DESIGN
File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999577805256725	WITHOUT_CLASSIFICATION	4.221947432738511E-5	DESIGN
rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999109621743094	WITHOUT_CLASSIFICATION	8.903782569065944E-5	DESIGN
We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9915926917997567	WITHOUT_CLASSIFICATION	0.008407308200243185	DESIGN
exec process, create IO with process	WITHOUT_CLASSIFICATION	0.999856253489396	WITHOUT_CLASSIFICATION	1.4374651060394925E-4	DESIGN
Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9996375953089967	WITHOUT_CLASSIFICATION	3.6240469100343425E-4	DESIGN
file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9958971079683646	WITHOUT_CLASSIFICATION	0.004102892031635388	DESIGN
Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9995579390612286	WITHOUT_CLASSIFICATION	4.420609387713814E-4	DESIGN
Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9988129193137123	WITHOUT_CLASSIFICATION	0.0011870806862877541	DESIGN
file not given	WITHOUT_CLASSIFICATION	0.999290252504055	WITHOUT_CLASSIFICATION	7.097474959450066E-4	DESIGN
string to eval	WITHOUT_CLASSIFICATION	0.9997070861594356	WITHOUT_CLASSIFICATION	2.929138405643476E-4	DESIGN
binding given, use binding's file	WITHOUT_CLASSIFICATION	0.99906375395118	WITHOUT_CLASSIFICATION	9.362460488199015E-4	DESIGN
?g | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999071334871711	WITHOUT_CLASSIFICATION	9.286651282899361E-5	DESIGN
bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9989545332808092	WITHOUT_CLASSIFICATION	0.001045466719190855	DESIGN
Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9979806727642715	WITHOUT_CLASSIFICATION	0.002019327235728454	DESIGN
Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9931438721464635	WITHOUT_CLASSIFICATION	0.006856127853536506	DESIGN
No catch active for this throw	WITHOUT_CLASSIFICATION	0.998029208823773	WITHOUT_CLASSIFICATION	0.001970791176226949	DESIGN
without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9978904253450563	WITHOUT_CLASSIFICATION	0.0021095746549437445	DESIGN
ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9998991833609983	WITHOUT_CLASSIFICATION	1.0081663900169443E-4	DESIGN
MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999841511761483	WITHOUT_CLASSIFICATION	1.584882385171538E-5	DESIGN
MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9998955871519095	WITHOUT_CLASSIFICATION	1.0441284809046002E-4	DESIGN
?A | Time | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999806502660012	WITHOUT_CLASSIFICATION	1.934973399868874E-5	DESIGN
?b | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999816648041102	WITHOUT_CLASSIFICATION	1.8335195889724797E-5	DESIGN
?c | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999918398179678	WITHOUT_CLASSIFICATION	8.160182032190011E-6	DESIGN
?C | Time | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999740968218733	WITHOUT_CLASSIFICATION	2.5903178126653072E-5	DESIGN
?d | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999965141019792	WITHOUT_CLASSIFICATION	3.4858980208052547E-6	DESIGN
?e | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999913229849362	WITHOUT_CLASSIFICATION	8.677015063864017E-6	DESIGN
?f | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999562635464899	WITHOUT_CLASSIFICATION	4.373645351004288E-5	DESIGN
?G | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999947643102532	WITHOUT_CLASSIFICATION	5.235689746751722E-6	DESIGN
?k | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999152799160905	WITHOUT_CLASSIFICATION	8.47200839094683E-5	DESIGN
?M | Time | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999904585886275	WITHOUT_CLASSIFICATION	9.541411372592644E-6	DESIGN
?o | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999965507654713	WITHOUT_CLASSIFICATION	3.4492345286738565E-6	DESIGN
?O | boolean | True if file1 exists and is owned by the caller's real uid	WITHOUT_CLASSIFICATION	0.9999926339712918	WITHOUT_CLASSIFICATION	7.366028708125648E-6	DESIGN
?p | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999823659308027	WITHOUT_CLASSIFICATION	1.7634069197300736E-5	DESIGN
?r | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999973222214344	WITHOUT_CLASSIFICATION	2.6777785655745213E-6	DESIGN
?s | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999975929140689	WITHOUT_CLASSIFICATION	2.4070859310346573E-6	DESIGN
?S | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999828999468144	WITHOUT_CLASSIFICATION	1.710005318553135E-5	DESIGN
?u | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9998393559871622	WITHOUT_CLASSIFICATION	1.6064401283783048E-4	DESIGN
?x | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999948277820189	WITHOUT_CLASSIFICATION	5.172217981219088E-6	DESIGN
?X | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999889544676432	WITHOUT_CLASSIFICATION	1.1045532356760007E-5	DESIGN
?z | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999970813131895	WITHOUT_CLASSIFICATION	2.918686810494968E-6	DESIGN
?= | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999991760384896	WITHOUT_CLASSIFICATION	8.239615103502251E-7	DESIGN
?< | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999992686795811	WITHOUT_CLASSIFICATION	7.31320418809153E-7	DESIGN
?> | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999994199970488	WITHOUT_CLASSIFICATION	5.800029512009961E-7	DESIGN
?- | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999925387814756	WITHOUT_CLASSIFICATION	7.461218524349491E-6	DESIGN
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.7170826429771638	WITHOUT_CLASSIFICATION	0.2829173570228361	DESIGN
Error info is per-thread	WITHOUT_CLASSIFICATION	0.9989982516137949	WITHOUT_CLASSIFICATION	0.00100174838620511	DESIGN
init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9990773170359193	WITHOUT_CLASSIFICATION	9.226829640805902E-4	DESIGN
if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999585398962826	WITHOUT_CLASSIFICATION	4.146010371744236E-5	DESIGN
If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9998749153594866	WITHOUT_CLASSIFICATION	1.2508464051345407E-4	DESIGN
new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9927668024892881	WITHOUT_CLASSIFICATION	0.007233197510711996	DESIGN
set to default thread group	WITHOUT_CLASSIFICATION	0.9995084256729359	WITHOUT_CLASSIFICATION	4.915743270641391E-4	DESIGN
set to default thread group	WITHOUT_CLASSIFICATION	0.9995084256729359	WITHOUT_CLASSIFICATION	4.915743270641391E-4	DESIGN
JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9977355762885911	WITHOUT_CLASSIFICATION	0.002264423711408961	DESIGN
JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9995983114922273	WITHOUT_CLASSIFICATION	4.0168850777263935E-4	DESIGN
for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9994976425645281	WITHOUT_CLASSIFICATION	5.023574354718821E-4	DESIGN
JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9997632548133429	WITHOUT_CLASSIFICATION	2.3674518665700483E-4	DESIGN
MRI behavior: value given in seconds; converted to Float; less than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999817238528247	WITHOUT_CLASSIFICATION	1.8276147175300212E-5	DESIGN
If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999992127028106	WITHOUT_CLASSIFICATION	7.872971894311672E-7	DESIGN
We need this loop in order to be able to "unblock" the join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999549281561324	WITHOUT_CLASSIFICATION	4.507184386769707E-5	DESIGN
attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9998024713129267	WITHOUT_CLASSIFICATION	1.9752868707332817E-4	DESIGN
not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9994415255699252	WITHOUT_CLASSIFICATION	5.584744300748353E-4	DESIGN
If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.999993187825163	WITHOUT_CLASSIFICATION	6.8121748370542955E-6	DESIGN
check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999969802670232	WITHOUT_CLASSIFICATION	3.01973297679046E-6	DESIGN
check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999969802670232	WITHOUT_CLASSIFICATION	3.01973297679046E-6	DESIGN
ignore; I don't like doing it, but it seems like we really just need to make all channels non-blocking by default and use select when implementing blocking ops, so if this remains set non-blocking, perhaps it's not such a big deal...	WITHOUT_CLASSIFICATION	0.997820270523753	DESIGN	0.002179729476247025	WITHOUT_CLASSIFICATION
can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9976967427143698	WITHOUT_CLASSIFICATION	0.0023032572856301	DESIGN
compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9978073204347568	WITHOUT_CLASSIFICATION	0.0021926795652431955	DESIGN
Create Constants class	WITHOUT_CLASSIFICATION	0.9991548342947495	WITHOUT_CLASSIFICATION	8.451657052503919E-4	DESIGN
Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999592573076695	WITHOUT_CLASSIFICATION	4.0742692330528055E-5	DESIGN
Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9983803988383243	WITHOUT_CLASSIFICATION	0.0016196011616756683	DESIGN
Create constants for flock	WITHOUT_CLASSIFICATION	0.9997545628260148	WITHOUT_CLASSIFICATION	2.4543717398510366E-4	DESIGN
File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9994255029972137	WITHOUT_CLASSIFICATION	5.744970027863654E-4	DESIGN
Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999996496311281	WITHOUT_CLASSIFICATION	3.5036887186954133E-7	DESIGN
null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.99991178312778	WITHOUT_CLASSIFICATION	8.821687221999732E-5	DESIGN
Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9994742052720437	WITHOUT_CLASSIFICATION	5.257947279564065E-4	DESIGN
Special case for handling ACCMODE, since constantine will generate an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999964152827389	WITHOUT_CLASSIFICATION	3.584717261180395E-6	DESIGN
Return false here	WITHOUT_CLASSIFICATION	0.9989890444913123	WITHOUT_CLASSIFICATION	0.0010109555086876736	DESIGN
Return false here	WITHOUT_CLASSIFICATION	0.9989890444913123	WITHOUT_CLASSIFICATION	0.0010109555086876736	DESIGN
We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.975375322837448	WITHOUT_CLASSIFICATION	0.024624677162552105	DESIGN
Should we do anything?	WITHOUT_CLASSIFICATION	0.9656559878123127	WITHOUT_CLASSIFICATION	0.034344012187687296	DESIGN
File class methods	WITHOUT_CLASSIFICATION	0.9998258094153301	WITHOUT_CLASSIFICATION	1.7419058466993607E-4	DESIGN
MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9938242912187737	WITHOUT_CLASSIFICATION	0.006175708781226326	DESIGN
strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9995204346655059	WITHOUT_CLASSIFICATION	4.7956533449414277E-4	DESIGN
C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9985215401925481	WITHOUT_CLASSIFICATION	0.0014784598074518644	DESIGN
-1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999119497270604	WITHOUT_CLASSIFICATION	8.805027293951697E-5	DESIGN
trim trailing slashes	WITHOUT_CLASSIFICATION	0.998383756157226	WITHOUT_CLASSIFICATION	0.0016162438427739512	DESIGN
Dot is not at beginning and not at end of filename.	WITHOUT_CLASSIFICATION	0.9976982550350478	WITHOUT_CLASSIFICATION	0.002301744964952215	DESIGN
Handle ~user paths	WITHOUT_CLASSIFICATION	0.997665175473214	WITHOUT_CLASSIFICATION	0.0023348245267860146	DESIGN
compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9978073204347568	WITHOUT_CLASSIFICATION	0.0021926795652431955	DESIGN
Include additional path separator (so that dirname of "C:\file.txt" is "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.996422386943558	WITHOUT_CLASSIFICATION	0.003577613056441921	DESIGN
FNFException can be thrown in both cases, when the file is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9792005246766042	WITHOUT_CLASSIFICATION	0.020799475323395846	DESIGN
No directory delimeter. Rest of string is username	WITHOUT_CLASSIFICATION	0.9999809788714805	WITHOUT_CLASSIFICATION	1.902112851948019E-5	DESIGN
If there's a second argument, it's the path to which the first argument is relative.	WITHOUT_CLASSIFICATION	0.9999917398700915	WITHOUT_CLASSIFICATION	8.260129908627369E-6	DESIGN
Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9993130411370433	WITHOUT_CLASSIFICATION	6.869588629566783E-4	DESIGN
If there's no second argument, simply use the working directory of the runtime.	WITHOUT_CLASSIFICATION	0.9998692362801199	WITHOUT_CLASSIFICATION	1.3076371988005782E-4	DESIGN
Find out which string to check.	WITHOUT_CLASSIFICATION	0.9998621125470561	WITHOUT_CLASSIFICATION	1.378874529438335E-4	DESIGN
Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9995941522256093	WITHOUT_CLASSIFICATION	4.05847774390713E-4	DESIGN
Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9998544960308613	WITHOUT_CLASSIFICATION	1.455039691387795E-4	DESIGN
'~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9997213584681907	WITHOUT_CLASSIFICATION	2.786415318093545E-4	DESIGN
'~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9997213584681907	WITHOUT_CLASSIFICATION	2.786415318093545E-4	DESIGN
Prepare a string with the same number of redundant slashes so that we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.5519284555349437	WITHOUT_CLASSIFICATION	0.4480715444650563	DESIGN
If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9996848728752064	WITHOUT_CLASSIFICATION	3.151271247935734E-4	DESIGN
no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999248723357954	WITHOUT_CLASSIFICATION	7.512766420456535E-5	DESIGN
we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9765423224555162	WITHOUT_CLASSIFICATION	0.02345767754448387	DESIGN
we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9994116249473025	WITHOUT_CLASSIFICATION	5.883750526973967E-4	DESIGN
do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9915460912823103	WITHOUT_CLASSIFICATION	0.008453908717689753	DESIGN
rb: check_modifiable	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
rb: readable	WITHOUT_CLASSIFICATION	0.9996027625265665	WITHOUT_CLASSIFICATION	3.972374734334463E-4	DESIGN
rename is successful	WITHOUT_CLASSIFICATION	0.9835957150110053	WITHOUT_CLASSIFICATION	0.016404284988994697	DESIGN
rename via Java API call wasn't successful, let's try some tricks, similar to MRI	WITHOUT_CLASSIFICATION	0.9985181118639145	WITHOUT_CLASSIFICATION	0.0014818881360855421	DESIGN
try to rename one more time	WITHOUT_CLASSIFICATION	0.970901226845964	WITHOUT_CLASSIFICATION	0.029098773154035907	DESIGN
Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9921402153565679	WITHOUT_CLASSIFICATION	0.007859784643432092	DESIGN
Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.999683139634328	WITHOUT_CLASSIFICATION	3.1686036567197683E-4	DESIGN
RubyContinuation	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq) it doesn't initialize ifNone field	WITHOUT_CLASSIFICATION	0.9997951998057991	WITHOUT_CLASSIFICATION	2.0480019420091936E-4	DESIGN
16 ?	WITHOUT_CLASSIFICATION	0.9994622273913925	WITHOUT_CLASSIFICATION	5.377726086074389E-4	DESIGN
generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9996629882458445	WITHOUT_CLASSIFICATION	3.3701175415544595E-4	DESIGN
size + 1;	WITHOUT_CLASSIFICATION	0.9997429244673899	WITHOUT_CLASSIFICATION	2.570755326101069E-4	DESIGN
suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9979208751870494	WITHOUT_CLASSIFICATION	0.002079124812950601	DESIGN
------------------------------	WITHOUT_CLASSIFICATION	0.9988315028900743	WITHOUT_CLASSIFICATION	0.0011684971099257706	DESIGN
------------------------------	WITHOUT_CLASSIFICATION	0.9988315028900743	WITHOUT_CLASSIFICATION	0.0011684971099257706	DESIGN
put implementation	WITHOUT_CLASSIFICATION	0.9991839831380651	WITHOUT_CLASSIFICATION	8.16016861934951E-4	DESIGN
get implementation	WITHOUT_CLASSIFICATION	0.9996855899670859	WITHOUT_CLASSIFICATION	3.1441003291413793E-4	DESIGN
specialized for value	WITHOUT_CLASSIFICATION	0.9994706470855029	WITHOUT_CLASSIFICATION	5.293529144970744E-4	DESIGN
delete implementation	WITHOUT_CLASSIFICATION	0.9996540232633382	WITHOUT_CLASSIFICATION	3.4597673666188374E-4	DESIGN
n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999583112309606	WITHOUT_CLASSIFICATION	4.1688769039467387E-5	DESIGN
============================ End of hash internals ============================	WITHOUT_CLASSIFICATION	0.9998457024584796	WITHOUT_CLASSIFICATION	1.542975415204318E-4	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999872388273321	WITHOUT_CLASSIFICATION	1.2761172668034517E-5	DESIGN
update the hash value	WITHOUT_CLASSIFICATION	0.9999031797829359	WITHOUT_CLASSIFICATION	9.68202170642311E-5	DESIGN
other hash does not contain key	WITHOUT_CLASSIFICATION	0.9994475494398497	WITHOUT_CLASSIFICATION	5.524505601503192E-4	DESIGN
rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9995099311231396	WITHOUT_CLASSIFICATION	4.900688768605364E-4	DESIGN
Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9997765150617	WITHOUT_CLASSIFICATION	2.2348493830006872E-4	DESIGN
remain where we are	WITHOUT_CLASSIFICATION	0.9976873008990323	WITHOUT_CLASSIFICATION	0.002312699100967774	DESIGN
We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999859399635141	WITHOUT_CLASSIFICATION	1.4060036485929886E-5	DESIGN
default: don't retain	WITHOUT_CLASSIFICATION	0.9995271084830926	WITHOUT_CLASSIFICATION	4.7289151690743924E-4	DESIGN
once hasNext has been called, we commit to next() returning the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9998060462622158	WITHOUT_CLASSIFICATION	1.939537377843159E-4	DESIGN
Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9930958759235443	WITHOUT_CLASSIFICATION	0.006904124076455607	DESIGN
We do both writable and writable_real through the same method because in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9975080641323684	WITHOUT_CLASSIFICATION	0.002491935867631605	DESIGN
first try as directory	WITHOUT_CLASSIFICATION	0.9999847569202144	WITHOUT_CLASSIFICATION	1.5243079785627405E-5	DESIGN
next as regular file	WITHOUT_CLASSIFICATION	0.9987032175609661	WITHOUT_CLASSIFICATION	0.0012967824390338395	DESIGN
We only want IO objects with valid streams (better to error now).	WITHOUT_CLASSIFICATION	0.998926371451961	WITHOUT_CLASSIFICATION	0.0010736285480390264	DESIGN
NIO-based	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
NIO-based	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
Stream-based	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.995725257592237	WITHOUT_CLASSIFICATION	0.004274742407763007	DESIGN
We use FILE versus IO to match T_FILE in MRI.	WITHOUT_CLASSIFICATION	0.9990610368816175	WITHOUT_CLASSIFICATION	9.38963118382386E-4	DESIGN
Constants for seek	WITHOUT_CLASSIFICATION	0.9997125509592516	WITHOUT_CLASSIFICATION	2.8744904074837733E-4	DESIGN
confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.994104912957847	WITHOUT_CLASSIFICATION	0.0058950870421530365	DESIGN
check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999199173441603	WITHOUT_CLASSIFICATION	8.008265583976628E-5	DESIGN
dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9983759447215508	WITHOUT_CLASSIFICATION	0.0016240552784492408	DESIGN
re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9998554855875185	WITHOUT_CLASSIFICATION	1.4451441248154143E-4	DESIGN
re-register the descriptor	WITHOUT_CLASSIFICATION	0.9996521751560025	WITHOUT_CLASSIFICATION	3.478248439975873E-4	DESIGN
since we're not actually duping the incoming channel into our handler, we need to copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9946577022465041	WITHOUT_CLASSIFICATION	0.0053422977534959126	DESIGN
re-register	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999931549210003	WITHOUT_CLASSIFICATION	6.845078999826807E-6	DESIGN
Ensure that separator is valid otherwise give it the default paragraph separator.	WITHOUT_CLASSIFICATION	0.9999989490206016	WITHOUT_CLASSIFICATION	1.050979398366066E-6	DESIGN
loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999944416558824	WITHOUT_CLASSIFICATION	5.5583441176548865E-6	DESIGN
if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9998998075895794	WITHOUT_CLASSIFICATION	1.0019241042062276E-4	DESIGN
this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.7050413530556483	DESIGN	0.29495864694435175	WITHOUT_CLASSIFICATION
IO class methods.	WITHOUT_CLASSIFICATION	0.9983246643566284	WITHOUT_CLASSIFICATION	0.0016753356433716826	DESIGN
use original modes	WITHOUT_CLASSIFICATION	0.9986335424249535	WITHOUT_CLASSIFICATION	0.0013664575750465427	DESIGN
See if we already have this descriptor open. If so then we can mostly share the handler (keep open file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999186595160336	WITHOUT_CLASSIFICATION	8.134048396644265E-5	DESIGN
redundant, done above as well	WITHOUT_CLASSIFICATION	0.999192711361604	WITHOUT_CLASSIFICATION	8.072886383960397E-4	DESIGN
MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9994399514935862	WITHOUT_CLASSIFICATION	5.600485064138767E-4	DESIGN
-1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9837582220348616	WITHOUT_CLASSIFICATION	0.016241777965138322	DESIGN
isRetained=true	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
This appears to be some windows-only mode. On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.8272868833435836	WITHOUT_CLASSIFICATION	0.17271311665641653	DESIGN
if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9976221336373399	WITHOUT_CLASSIFICATION	0.002377866362660236	DESIGN
Throw bad file descriptor is we can not read on supplied descriptor.	WITHOUT_CLASSIFICATION	0.9981759436223312	WITHOUT_CLASSIFICATION	0.001824056377668741	DESIGN
Everything written	WITHOUT_CLASSIFICATION	0.9995283270716941	WITHOUT_CLASSIFICATION	4.716729283058673E-4	DESIGN
return len - n;	WITHOUT_CLASSIFICATION	0.9994882307125454	WITHOUT_CLASSIFICATION	5.11769287454586E-4	DESIGN
Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999661527751116	WITHOUT_CLASSIFICATION	3.3847224888351346E-5	DESIGN
Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.8873281875591721	WITHOUT_CLASSIFICATION	0.11267181244082783	DESIGN
Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.998489163251807	WITHOUT_CLASSIFICATION	0.0015108367481929267	DESIGN
Register the new descriptor	WITHOUT_CLASSIFICATION	0.9996066054582051	WITHOUT_CLASSIFICATION	3.933945417947947E-4	DESIGN
cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9997953538034575	WITHOUT_CLASSIFICATION	2.0464619654247287E-4	DESIGN
hmmmm	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9982866797107022	WITHOUT_CLASSIFICATION	0.0017133202892978825	DESIGN
Do nothing. FD_CLOEXEC has no meaning in JVM since we cannot really exec. And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9996635307988915	WITHOUT_CLASSIFICATION	3.36469201108539E-4	DESIGN
Do nothing. FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999366251797536	WITHOUT_CLASSIFICATION	6.337482024640745E-5	DESIGN
Length to read	WITHOUT_CLASSIFICATION	0.9995222639975927	WITHOUT_CLASSIFICATION	4.7773600240732703E-4	DESIGN
String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.997315844567544	WITHOUT_CLASSIFICATION	0.002684155432456122	DESIGN
cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.999395388181005	WITHOUT_CLASSIFICATION	6.046118189950117E-4	DESIGN
select until read is ready	WITHOUT_CLASSIFICATION	0.9998142069695488	WITHOUT_CLASSIFICATION	1.8579303045109706E-4	DESIGN
ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9981815290680305	WITHOUT_CLASSIFICATION	0.0018184709319696017	DESIGN
buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.999618210760737	WITHOUT_CLASSIFICATION	3.817892392630141E-4	DESIGN
READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9986298439217793	WITHOUT_CLASSIFICATION	0.0013701560782206081	DESIGN
rb: writable	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9986298439217793	WITHOUT_CLASSIFICATION	0.0013701560782206081	DESIGN
All errors to sysread should be SystemCallErrors, but on a closed stream Ruby returns an IOError. Java throws same exception for all errors so we resort to this hack...	WITHOUT_CLASSIFICATION	0.9832705967644231	DESIGN	0.016729403235576933	WITHOUT_CLASSIFICATION
TODO: read into buffer using all the fread logic int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9285076841607731	WITHOUT_CLASSIFICATION	0.07149231583922684	DESIGN
truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999323744786986	WITHOUT_CLASSIFICATION	6.76255213014128E-5	DESIGN
TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.708913986270609	DESIGN	0.291086013729391	WITHOUT_CLASSIFICATION
class methods for IO	WITHOUT_CLASSIFICATION	0.9983929977415881	WITHOUT_CLASSIFICATION	0.0016070022584120012	DESIGN
save blocking state	WITHOUT_CLASSIFICATION	0.9997507185735924	WITHOUT_CLASSIFICATION	2.4928142640760715E-4	DESIGN
write	WITHOUT_CLASSIFICATION	0.9995034924432156	WITHOUT_CLASSIFICATION	4.965075567844166E-4	DESIGN
Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9907620607561983	WITHOUT_CLASSIFICATION	0.009237939243801618	DESIGN
make all sockets blocking as configured again close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999997556875035	WITHOUT_CLASSIFICATION	2.4431249640404874E-7	DESIGN
FIXME: process options	WITHOUT_CLASSIFICATION	0.8488432572929913	WITHOUT_CLASSIFICATION	0.15115674270700877	DESIGN
Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.689589934127889	WITHOUT_CLASSIFICATION	0.31041006587211095	DESIGN
NIO based pipe	WITHOUT_CLASSIFICATION	0.9994099252652292	WITHOUT_CLASSIFICATION	5.900747347706939E-4	DESIGN
not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9867509323359985	WITHOUT_CLASSIFICATION	0.013249067664001338	DESIGN
raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999826913440636	WITHOUT_CLASSIFICATION	1.730865593647364E-5	DESIGN
may need to handle ENC_CODERANGE_BROKEN	WITHOUT_CLASSIFICATION	0.9754316856155891	WITHOUT_CLASSIFICATION	0.02456831438441096	DESIGN
TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.6759504692176618	DESIGN	0.3240495307823382	WITHOUT_CLASSIFICATION
If we know what method was being called, strip everything before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9891449458147618	WITHOUT_CLASSIFICATION	0.010855054185238258	DESIGN
The class of this object	WITHOUT_CLASSIFICATION	0.9961126311755041	WITHOUT_CLASSIFICATION	0.0038873688244958748	DESIGN
zeroed by jvm	WITHOUT_CLASSIFICATION	0.9997107231480824	WITHOUT_CLASSIFICATION	2.892768519176634E-4	DESIGN
objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9992535500365699	WITHOUT_CLASSIFICATION	7.464499634301213E-4	DESIGN
JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.8644092921661909	WITHOUT_CLASSIFICATION	0.13559070783380903	DESIGN
rb_class_boot	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
6:tags 16:addr 1:eos	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9988262199975204	WITHOUT_CLASSIFICATION	0.0011737800024795742	DESIGN
for interface impls	WITHOUT_CLASSIFICATION	0.999598034798062	WITHOUT_CLASSIFICATION	4.0196520193811034E-4	DESIGN
We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9518469584408523	WITHOUT_CLASSIFICATION	0.04815304155914763	DESIGN
Methods of the Object class (rb_obj_):	WITHOUT_CLASSIFICATION	0.9986058979196314	WITHOUT_CLASSIFICATION	0.0013941020803686138	DESIGN
can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9968880426535204	WITHOUT_CLASSIFICATION	0.0031119573464796968	DESIGN
include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9459419127265416	WITHOUT_CLASSIFICATION	0.0540580872734584	DESIGN
Equivalent of Data_Get_Struct This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9993407600616108	WITHOUT_CLASSIFICATION	6.592399383892284E-4	DESIGN
COMMON VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9987518475598202	WITHOUT_CLASSIFICATION	0.0012481524401798474	DESIGN
INTERNAL VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9988767841840338	WITHOUT_CLASSIFICATION	0.0011232158159661656	DESIGN
INSTANCE VARIABLE API METHODS	WITHOUT_CLASSIFICATION	0.9963811875577625	WITHOUT_CLASSIFICATION	0.003618812442237477	DESIGN
Struct methods	WITHOUT_CLASSIFICATION	0.9994539534479673	WITHOUT_CLASSIFICATION	5.46046552032758E-4	DESIGN
runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9998567605308947	WITHOUT_CLASSIFICATION	1.4323946910537697E-4	DESIGN
define access methods.	WITHOUT_CLASSIFICATION	0.9991702023283886	WITHOUT_CLASSIFICATION	8.297976716114849E-4	DESIGN
if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9909292406815128	WITHOUT_CLASSIFICATION	0.00907075931848724	DESIGN
Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.5798171255123086	WITHOUT_CLASSIFICATION	0.4201828744876916	DESIGN
For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9998597075934289	WITHOUT_CLASSIFICATION	1.4029240657115798E-4	DESIGN
OBJ_INFECT	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
These call assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9997798116936727	WITHOUT_CLASSIFICATION	2.2018830632744706E-4	DESIGN
Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9981399513610659	WITHOUT_CLASSIFICATION	0.001860048638934147	DESIGN
@param nv number of times to cycle or -1 to cycle indefinitely	WITHOUT_CLASSIFICATION	0.9837253147238216	WITHOUT_CLASSIFICATION	0.01627468527617829	DESIGN
Atomic ?	WITHOUT_CLASSIFICATION	0.9990737155988149	WITHOUT_CLASSIFICATION	9.262844011851661E-4	DESIGN
Atomic ?	WITHOUT_CLASSIFICATION	0.9990737155988149	WITHOUT_CLASSIFICATION	9.262844011851661E-4	DESIGN
MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.8401747088029967	WITHOUT_CLASSIFICATION	0.1598252911970032	DESIGN
superClass may be null.	WITHOUT_CLASSIFICATION	0.9942768853265026	WITHOUT_CLASSIFICATION	0.0057231146734974345	DESIGN
Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9298427120582602	WITHOUT_CLASSIFICATION	0.07015728794173982	DESIGN
ClassId is the name of the class/module sans where it is located. If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999854066875073	WITHOUT_CLASSIFICATION	1.4593312492746054E-5	DESIGN
ClassProviders return Java class/module (in #defineOrGetClassUnder and #defineOrGetModuleUnder) when class/module is opened using colon syntax.	WITHOUT_CLASSIFICATION	0.9999574333583692	WITHOUT_CLASSIFICATION	4.2566641630763805E-5	DESIGN
update superclass reference	WITHOUT_CLASSIFICATION	0.9998917004852901	WITHOUT_CLASSIFICATION	1.0829951470991099E-4	DESIGN
Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9959990730601815	WITHOUT_CLASSIFICATION	0.004000926939818465	DESIGN
MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9986192019556843	WITHOUT_CLASSIFICATION	0.0013807980443157264	DESIGN
we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.986450093394828	WITHOUT_CLASSIFICATION	0.013549906605171828	DESIGN
module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9997351224948546	WITHOUT_CLASSIFICATION	2.6487750514533404E-4	DESIGN
See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999491531175723	WITHOUT_CLASSIFICATION	5.084688242778249E-5	DESIGN
We can safely reference methods here instead of doing getMethods() since if we are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9991375002987734	WITHOUT_CLASSIFICATION	8.624997012265348E-4	DESIGN
we grab serial number first; the worst that will happen is we cache a later update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9820202423526178	WITHOUT_CLASSIFICATION	0.017979757647382324	DESIGN
update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9990758369599777	WITHOUT_CLASSIFICATION	9.241630400223402E-4	DESIGN
This method is intended only for defining new classes in Ruby code, so it uses the allocator of the specified superclass or default to the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.714719248215073	WITHOUT_CLASSIFICATION	0.28528075178492707	DESIGN
need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.998502705459888	WITHOUT_CLASSIFICATION	0.0014972945401120071	DESIGN
superClazz = null;	WITHOUT_CLASSIFICATION	0.9993114158434268	WITHOUT_CLASSIFICATION	6.885841565732731E-4	DESIGN
reopen a java class	WITHOUT_CLASSIFICATION	0.9903129129513838	WITHOUT_CLASSIFICATION	0.0096870870486162	DESIGN
This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9971421683790969	WITHOUT_CLASSIFICATION	0.0028578316209031795	DESIGN
reopen a java module	WITHOUT_CLASSIFICATION	0.9885021370653447	WITHOUT_CLASSIFICATION	0.011497862934655215	DESIGN
FIXME warning	WITHOUT_CLASSIFICATION	0.7407031597289755	WITHOUT_CLASSIFICATION	0.25929684027102456	DESIGN
FIXME warning	WITHOUT_CLASSIFICATION	0.7407031597289755	WITHOUT_CLASSIFICATION	0.25929684027102456	DESIGN
a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9991146925936446	WITHOUT_CLASSIFICATION	8.853074063554135E-4	DESIGN
for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9997543736542703	WITHOUT_CLASSIFICATION	2.456263457296528E-4	DESIGN
just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9906526015385552	WITHOUT_CLASSIFICATION	0.009347398461444877	DESIGN
class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.5426981576051575	DESIGN	0.45730184239484245	WITHOUT_CLASSIFICATION
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.8080800744937202	WITHOUT_CLASSIFICATION	0.1919199255062798	DESIGN
MRI error message says Class, even though Module is ok	WITHOUT_CLASSIFICATION	0.9976532914610203	WITHOUT_CLASSIFICATION	0.0023467085389796576	DESIGN
scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9994925010530287	WITHOUT_CLASSIFICATION	5.074989469714156E-4	DESIGN
Module class methods	WITHOUT_CLASSIFICATION	0.9986955166038011	WITHOUT_CLASSIFICATION	0.0013044833961989044	DESIGN
Note: we change current frames visibility here because the methods which call this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9992321287676044	DESIGN	7.67871232395561E-4	WITHOUT_CLASSIFICATION
next in hierarchy is an included version of the module we're attempting, so we skip including it	WITHOUT_CLASSIFICATION	0.9999783086969727	WITHOUT_CLASSIFICATION	2.169130302740851E-5	DESIGN
if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9997369498821544	WITHOUT_CLASSIFICATION	2.63050117845543E-4	DESIGN
build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9997137792921768	WITHOUT_CLASSIFICATION	2.862207078232714E-4	DESIGN
if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9996378594391602	WITHOUT_CLASSIFICATION	3.6214056083986066E-4	DESIGN
if there's a non-null superclass, we're including into a normal class hierarchy; update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9997936877803132	WITHOUT_CLASSIFICATION	2.0631221968673755E-4	DESIGN
CLASS VARIABLE RUBY METHODS	WITHOUT_CLASSIFICATION	0.9987756572435433	WITHOUT_CLASSIFICATION	0.0012243427564566699	DESIGN
CONSTANT RUBY METHODS	WITHOUT_CLASSIFICATION	0.9988767841840338	WITHOUT_CLASSIFICATION	0.0011232158159661656	DESIGN
Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.8466742227862817	DESIGN	0.1533257772137184	WITHOUT_CLASSIFICATION
CLASS VARIABLE API METHODS	WITHOUT_CLASSIFICATION	0.9960562606679015	WITHOUT_CLASSIFICATION	0.003943739332098398	DESIGN
Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9992457862817908	WITHOUT_CLASSIFICATION	7.54213718209092E-4	DESIGN
not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9992061594487693	WITHOUT_CLASSIFICATION	7.938405512306016E-4	DESIGN
Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.637867780536646	DESIGN	0.36213221946335405	WITHOUT_CLASSIFICATION
if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9998356713876028	WITHOUT_CLASSIFICATION	1.6432861239733056E-4	DESIGN
Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9955800348415816	WITHOUT_CLASSIFICATION	0.004419965158418321	DESIGN
returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9998921992146349	WITHOUT_CLASSIFICATION	1.078007853651184E-4	DESIGN
removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.999955604248931	WITHOUT_CLASSIFICATION	4.439575106893434E-5	DESIGN
we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.8366361918596744	WITHOUT_CLASSIFICATION	0.1633638081403256	DESIGN
reopen	WITHOUT_CLASSIFICATION	0.999538466245289	WITHOUT_CLASSIFICATION	4.6153375471096676E-4	DESIGN
ARGF methods	WITHOUT_CLASSIFICATION	0.9994539534479673	WITHOUT_CLASSIFICATION	5.46046552032758E-4	DESIGN
data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9992535500365699	WITHOUT_CLASSIFICATION	7.464499634301213E-4	DESIGN
one optional, one required args	WITHOUT_CLASSIFICATION	0.9998346393872745	WITHOUT_CLASSIFICATION	1.653606127256089E-4	DESIGN
one optional and no required args	WITHOUT_CLASSIFICATION	0.9999464296502268	WITHOUT_CLASSIFICATION	5.357034977317384E-5	DESIGN
try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.999644784564645	WITHOUT_CLASSIFICATION	3.55215435354936E-4	DESIGN
we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999141318965484	WITHOUT_CLASSIFICATION	8.58681034516453E-5	DESIGN
Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9980617293785573	WITHOUT_CLASSIFICATION	0.0019382706214425992	DESIGN
print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9976842437702357	WITHOUT_CLASSIFICATION	0.0023157562297642974	DESIGN
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.6393209701483026	WITHOUT_CLASSIFICATION	0.3606790298516975	DESIGN
set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9992443251522429	WITHOUT_CLASSIFICATION	7.556748477570553E-4	DESIGN
can't set TC classloader	WITHOUT_CLASSIFICATION	0.9903409137919019	WITHOUT_CLASSIFICATION	0.009659086208098036	DESIGN
no script to run, return success below	WITHOUT_CLASSIFICATION	0.9998632591564056	WITHOUT_CLASSIFICATION	1.3674084359434783E-4	DESIGN
Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999210129644864	WITHOUT_CLASSIFICATION	7.898703551365645E-5	DESIGN
Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9997701093601972	WITHOUT_CLASSIFICATION	2.2989063980273505E-4	DESIGN
Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999040212606947	WITHOUT_CLASSIFICATION	9.597873930523802E-5	DESIGN
ignore error	WITHOUT_CLASSIFICATION	0.9995160537980844	WITHOUT_CLASSIFICATION	4.839462019155081E-4	DESIGN
COMMON CONSTANT / CVAR METHODS	WITHOUT_CLASSIFICATION	0.9992390490059432	WITHOUT_CLASSIFICATION	7.609509940567632E-4	DESIGN
INTERNAL MODULE VARIABLE API METHODS	WITHOUT_CLASSIFICATION	0.9976966110336334	WITHOUT_CLASSIFICATION	0.0023033889663666507	DESIGN
LOW-LEVEL CONSTANT INTERFACE fetch/store/list constants for this module	WITHOUT_CLASSIFICATION	0.9930332985078553	WITHOUT_CLASSIFICATION	0.006966701492144773	DESIGN
odd	WITHOUT_CLASSIFICATION	0.9994553545980324	WITHOUT_CLASSIFICATION	5.446454019676597E-4	DESIGN
JRubyClient	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
x = mantissa 2 exponent Where mantissa is in the range of [.5, 1)	WITHOUT_CLASSIFICATION	0.9999899266965305	WITHOUT_CLASSIFICATION	1.0073303469597967E-5	DESIGN
Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9998252197553273	WITHOUT_CLASSIFICATION	1.7478024467261437E-4	DESIGN
Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.999013931517871	WITHOUT_CLASSIFICATION	9.8606848212903E-4	DESIGN
r = x 2 y	WITHOUT_CLASSIFICATION	0.9999810471736768	WITHOUT_CLASSIFICATION	1.895282632329251E-5	DESIGN
0!	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
1!	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
2!	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
3!	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
4!	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
5!	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
6!	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
7!	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
8!	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
9!	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
11!	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
12!	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
13!	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
15!	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
16!	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
17!	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
19!	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
20!	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
21!	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
Static constants	WITHOUT_CLASSIFICATION	0.9997013684760957	WITHOUT_CLASSIFICATION	2.9863152390422295E-4	DESIGN
Clean-up string representation so that it could be understood by Java's BigDecimal. Not terribly efficient for now. 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9919211043680864	WITHOUT_CLASSIFICATION	0.0080788956319136	DESIGN
2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9994124238536831	WITHOUT_CLASSIFICATION	5.875761463167978E-4	DESIGN
3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9991663714960368	WITHOUT_CLASSIFICATION	8.336285039632494E-4	DESIGN
MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9975587239174024	WITHOUT_CLASSIFICATION	0.002441276082597586	DESIGN
Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9998865688241502	WITHOUT_CLASSIFICATION	1.1343117584983538E-4	DESIGN
Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999763719353708	WITHOUT_CLASSIFICATION	2.36280646291692E-5	DESIGN
Note: MRI has a very non-trivial way of calculating the precision, so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.8529149975531942	DESIGN	0.1470850024468057	WITHOUT_CLASSIFICATION
Iteration variables, for the square root x and the reciprocal v initial x: x0 ~ sqrt() initial v: v0 = 1/(2x)	WITHOUT_CLASSIFICATION	0.9999950162142551	WITHOUT_CLASSIFICATION	4.9837857448893715E-6	DESIGN
it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9931206582031721	WITHOUT_CLASSIFICATION	0.006879341796827981	DESIGN
TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9861512097412508	DESIGN	0.013848790258749279	WITHOUT_CLASSIFICATION
integer division	WITHOUT_CLASSIFICATION	0.9995361308437043	WITHOUT_CLASSIFICATION	4.638691562956357E-4	DESIGN
MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999863223025109	WITHOUT_CLASSIFICATION	1.3677697488997766E-5	DESIGN
rounding neccessary	WITHOUT_CLASSIFICATION	0.9994708684165464	WITHOUT_CLASSIFICATION	5.291315834535809E-4	DESIGN
rounding neccessary	WITHOUT_CLASSIFICATION	0.9994708684165464	WITHOUT_CLASSIFICATION	5.291315834535809E-4	DESIGN
Java and MRI definitions of divmod are different.	WITHOUT_CLASSIFICATION	0.9998865688241502	WITHOUT_CLASSIFICATION	1.1343117584983538E-4	DESIGN
JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.7982482413809985	WITHOUT_CLASSIFICATION	0.2017517586190016	DESIGN
shift the decimal point just to the right of the digit to be rounded to (divide by 10(abs(scale))) -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9996951621863026	WITHOUT_CLASSIFICATION	3.0483781369745124E-4	DESIGN
...round to that digit	WITHOUT_CLASSIFICATION	0.998931665875113	WITHOUT_CLASSIFICATION	0.0010683341248871145	DESIGN
...and shift the result back to the left (multiply by 10(abs(scale)))	WITHOUT_CLASSIFICATION	0.9994340311895988	WITHOUT_CLASSIFICATION	5.659688104011499E-4	DESIGN
this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9929592773303767	WITHOUT_CLASSIFICATION	0.007040722669623231	DESIGN
sign	WITHOUT_CLASSIFICATION	0.9994537755444974	WITHOUT_CLASSIFICATION	5.462244555026346E-4	DESIGN
significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999075042670047	WITHOUT_CLASSIFICATION	9.249573299526758E-5	DESIGN
normalize the value	WITHOUT_CLASSIFICATION	0.9998452370803956	WITHOUT_CLASSIFICATION	1.5476291960437826E-4	DESIGN
base	WITHOUT_CLASSIFICATION	0.9997680894827531	WITHOUT_CLASSIFICATION	2.319105172470051E-4	DESIGN
NOTE: MRI's sqrt precision is limited by 100, but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9987264468998104	WITHOUT_CLASSIFICATION	0.0012735531001896398	DESIGN
just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9963951713295227	WITHOUT_CLASSIFICATION	0.003604828670477356	DESIGN
eh?!	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.99605613721857	WITHOUT_CLASSIFICATION	0.003943862781429913	DESIGN
General number and precision checking	WITHOUT_CLASSIFICATION	0.9136005007119735	WITHOUT_CLASSIFICATION	0.08639949928802643	DESIGN
the requested precision	WITHOUT_CLASSIFICATION	0.9998288764726333	WITHOUT_CLASSIFICATION	1.7112352736678804E-4	DESIGN
Proc class	WITHOUT_CLASSIFICATION	0.9986680257921141	WITHOUT_CLASSIFICATION	0.0013319742078859384	DESIGN
.append(" -x[directory] strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9955144910413193	WITHOUT_CLASSIFICATION	0.004485508958680729	DESIGN
even shift.. ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.993707035677275	WITHOUT_CLASSIFICATION	0.006292964322724866	DESIGN
5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9995260126710406	WITHOUT_CLASSIFICATION	4.739873289593748E-4	DESIGN
..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999736846836256	WITHOUT_CLASSIFICATION	2.631531637441468E-5	DESIGN
Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.99963409315559	WITHOUT_CLASSIFICATION	3.659068444099924E-4	DESIGN
x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9994977111403963	WITHOUT_CLASSIFICATION	5.02288859603765E-4	DESIGN
for prec 15 root x0 must surely be OK return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999937588736394	WITHOUT_CLASSIFICATION	6.241126360604307E-6	DESIGN
Initial v - the reciprocal v0 = 1/(2x)	WITHOUT_CLASSIFICATION	0.9996659449449303	WITHOUT_CLASSIFICATION	3.340550550696571E-4	DESIGN
Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9994391857144194	WITHOUT_CLASSIFICATION	5.608142855806555E-4	DESIGN
assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999032642595806	WITHOUT_CLASSIFICATION	9.673574041942818E-5	DESIGN
The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.999989345200407	WITHOUT_CLASSIFICATION	1.0654799592997784E-5	DESIGN
Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9986413877591678	WITHOUT_CLASSIFICATION	0.0013586122408322018	DESIGN
Next x e = d - x^2	WITHOUT_CLASSIFICATION	0.9999296137413888	WITHOUT_CLASSIFICATION	7.038625861122492E-5	DESIGN
x += ev ~ sqrt()	WITHOUT_CLASSIFICATION	0.9997008993339105	WITHOUT_CLASSIFICATION	2.991006660894987E-4	DESIGN
root x is ready!	WITHOUT_CLASSIFICATION	0.9994903030742133	WITHOUT_CLASSIFICATION	5.096969257866924E-4	DESIGN
Next v g = 1 - 2xv	WITHOUT_CLASSIFICATION	0.999916503002983	WITHOUT_CLASSIFICATION	8.349699701702722E-5	DESIGN
v += gv ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9995079045024171	WITHOUT_CLASSIFICATION	4.920954975829504E-4	DESIGN
RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
c: bind_eval	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
================ Module Methods ================	WITHOUT_CLASSIFICATION	0.9987746007754988	WITHOUT_CLASSIFICATION	0.0012253992245010688	DESIGN
from CommandlineParser	WITHOUT_CLASSIFICATION	0.9986298439217793	WITHOUT_CLASSIFICATION	0.0013701560782206081	DESIGN
This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9959414521001131	WITHOUT_CLASSIFICATION	0.004058547899886879	DESIGN
default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999119632802975	WITHOUT_CLASSIFICATION	8.803671970250456E-5	DESIGN
Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9237809305970568	WITHOUT_CLASSIFICATION	0.07621906940294317	DESIGN
Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9878949271929405	WITHOUT_CLASSIFICATION	0.0121050728070596	DESIGN
try the normal property first	WITHOUT_CLASSIFICATION	0.9999110308657722	WITHOUT_CLASSIFICATION	8.896913422780741E-5	DESIGN
verify it if it's there	WITHOUT_CLASSIFICATION	0.99986933709742	WITHOUT_CLASSIFICATION	1.3066290257998035E-4	DESIGN
verify it if it's there	WITHOUT_CLASSIFICATION	0.99986933709742	WITHOUT_CLASSIFICATION	1.3066290257998035E-4	DESIGN
try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9934202583923926	WITHOUT_CLASSIFICATION	0.006579741607607412	DESIGN
otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999590074693169	WITHOUT_CLASSIFICATION	4.0992530683169924E-5	DESIGN
We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9916688700139565	WITHOUT_CLASSIFICATION	0.0083311299860434	DESIGN
consume the file name	WITHOUT_CLASSIFICATION	0.999165449154047	WITHOUT_CLASSIFICATION	8.345508459529732E-4	DESIGN
Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9991899436373775	WITHOUT_CLASSIFICATION	8.100563626224695E-4	DESIGN
try cwd first	WITHOUT_CLASSIFICATION	0.9999346844712855	WITHOUT_CLASSIFICATION	6.531552871454061E-5	DESIGN
ruby interpreter compatibilty Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9982971477989281	WITHOUT_CLASSIFICATION	0.001702852201071922	DESIGN
KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.6784716485779629	DESIGN	0.3215283514220371	WITHOUT_CLASSIFICATION
@JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9997913724173069	WITHOUT_CLASSIFICATION	2.0862758269324732E-4	DESIGN
@JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9996718355226126	WITHOUT_CLASSIFICATION	3.2816447738733597E-4	DESIGN
@JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9997913724173069	WITHOUT_CLASSIFICATION	2.0862758269324732E-4	DESIGN
symbol string must be interned	WITHOUT_CLASSIFICATION	0.9980864660585902	WITHOUT_CLASSIFICATION	0.0019135339414097228	DESIGN
assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9529296471344241	WITHOUT_CLASSIFICATION	0.04707035286557588	DESIGN
Symbol class methods.	WITHOUT_CLASSIFICATION	0.9975217033384699	WITHOUT_CLASSIFICATION	0.002478296661530158	DESIGN
TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.6759504692176618	DESIGN	0.3240495307823382	WITHOUT_CLASSIFICATION
This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9834565523523453	WITHOUT_CLASSIFICATION	0.016543447647654665	DESIGN
we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.998535219554436	WITHOUT_CLASSIFICATION	0.001464780445563919	DESIGN
must be power of 2!	WITHOUT_CLASSIFICATION	0.9985387472253049	WITHOUT_CLASSIFICATION	0.0014612527746950665	DESIGN
note all fields are final -- rehash creates new entries when necessary. as documented in java.util.concurrent.ConcurrentHashMap.java, that will statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999463232463338	WITHOUT_CLASSIFICATION	5.3676753666128135E-5	DESIGN
assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9529296471344241	WITHOUT_CLASSIFICATION	0.04707035286557588	DESIGN
try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999821343034191	WITHOUT_CLASSIFICATION	1.7865696580922744E-5	DESIGN
try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999821343034191	WITHOUT_CLASSIFICATION	1.7865696580922744E-5	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9995805756235716	WITHOUT_CLASSIFICATION	4.1942437642837355E-4	DESIGN
Single node on list	WITHOUT_CLASSIFICATION	0.9998727625548732	WITHOUT_CLASSIFICATION	1.2723744512685935E-4	DESIGN
Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9975416127815803	WITHOUT_CLASSIFICATION	0.002458387218419839	DESIGN
Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9998042773652438	WITHOUT_CLASSIFICATION	1.9572263475615485E-4	DESIGN
Check the length every iteration, since the block can modify this string.	WITHOUT_CLASSIFICATION	0.9946045325732977	WITHOUT_CLASSIFICATION	0.005395467426702298	DESIGN
we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9959925636393695	WITHOUT_CLASSIFICATION	0.004007436360630401	DESIGN
not so backwards-compatible here, but no one should have been calling this anyway.	WITHOUT_CLASSIFICATION	0.9944061688708267	WITHOUT_CLASSIFICATION	0.005593831129173333	DESIGN
Profile	WITHOUT_CLASSIFICATION	0.9995576016763142	WITHOUT_CLASSIFICATION	4.4239832368575316E-4	DESIGN
static private final String TRANSLIT = "translit";	WITHOUT_CLASSIFICATION	0.999126496951446	WITHOUT_CLASSIFICATION	8.735030485540623E-4	DESIGN
treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999847949120573	WITHOUT_CLASSIFICATION	1.5205087942667594E-5	DESIGN
invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9993352947635032	WITHOUT_CLASSIFICATION	6.647052364967096E-4	DESIGN
Methods of the Nil Class (nil_):	WITHOUT_CLASSIFICATION	0.9997382539399327	WITHOUT_CLASSIFICATION	2.617460600673752E-4	DESIGN
Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999955640924717	WITHOUT_CLASSIFICATION	4.435907528380001E-6	DESIGN
Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9927969421129337	WITHOUT_CLASSIFICATION	0.00720305788706636	DESIGN
must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9990891213469164	WITHOUT_CLASSIFICATION	9.108786530835373E-4	DESIGN
reset the state	WITHOUT_CLASSIFICATION	0.9998831088754134	WITHOUT_CLASSIFICATION	1.1689112458667799E-4	DESIGN
Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9976717803384392	WITHOUT_CLASSIFICATION	0.0023282196615607557	DESIGN
rb_match_busy	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
str is frozen	WITHOUT_CLASSIFICATION	0.9994749797001932	WITHOUT_CLASSIFICATION	5.250202998069257E-4	DESIGN
MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9984295485854618	WITHOUT_CLASSIFICATION	0.0015704514145381738	DESIGN
JRubyServer	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9864220495915109	WITHOUT_CLASSIFICATION	0.013577950408488974	DESIGN
boot the Object class	WITHOUT_CLASSIFICATION	0.9985189329563136	WITHOUT_CLASSIFICATION	0.0014810670436863904	DESIGN
Methods of the Object class (rb_obj_):	WITHOUT_CLASSIFICATION	0.9986058979196314	WITHOUT_CLASSIFICATION	0.0013941020803686138	DESIGN
update superclass reference	WITHOUT_CLASSIFICATION	0.9998917004852901	WITHOUT_CLASSIFICATION	1.0829951470991099E-4	DESIGN
undo check	WITHOUT_CLASSIFICATION	0.9999125122470881	WITHOUT_CLASSIFICATION	8.748775291197112E-5	DESIGN
This is a non-standard method; have we decided to start extending Ruby? classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9902685417179246	WITHOUT_CLASSIFICATION	0.009731458282075363	DESIGN
boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999377265525543	WITHOUT_CLASSIFICATION	6.227344744566726E-5	DESIGN
this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9981255259928943	WITHOUT_CLASSIFICATION	0.0018744740071057063	DESIGN
use parent's marshal	WITHOUT_CLASSIFICATION	0.9980621320614511	WITHOUT_CLASSIFICATION	0.0019378679385487997	DESIGN
use parent's marshal	WITHOUT_CLASSIFICATION	0.9980621320614511	WITHOUT_CLASSIFICATION	0.0019378679385487997	DESIGN
could be pulled down to RubyClass in future rb_class_boot	WITHOUT_CLASSIFICATION	0.9143501366768713	WITHOUT_CLASSIFICATION	0.08564986332312868	DESIGN
remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9998381673252811	WITHOUT_CLASSIFICATION	1.6183267471899193E-4	DESIGN
add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.999948190788128	WITHOUT_CLASSIFICATION	5.180921187197093E-5	DESIGN
update all subclasses	WITHOUT_CLASSIFICATION	0.9997811104468495	WITHOUT_CLASSIFICATION	2.1888955315053403E-4	DESIGN
fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9997237389726789	WITHOUT_CLASSIFICATION	2.7626102732115443E-4	DESIGN
static initializing method	WITHOUT_CLASSIFICATION	0.9521582317268623	WITHOUT_CLASSIFICATION	0.047841768273137734	DESIGN
standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9996570542232686	WITHOUT_CLASSIFICATION	3.429457767314661E-4	DESIGN
no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9953956642066255	WITHOUT_CLASSIFICATION	0.0046043357933745	DESIGN
non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9988597347693106	WITHOUT_CLASSIFICATION	0.0011402652306894147	DESIGN
indices for temp values	WITHOUT_CLASSIFICATION	0.9997681654973007	WITHOUT_CLASSIFICATION	2.3183450269927716E-4	DESIGN
self method name	WITHOUT_CLASSIFICATION	0.9989647214825869	WITHOUT_CLASSIFICATION	0.001035278517413093	DESIGN
the default allocator	WITHOUT_CLASSIFICATION	0.9997700400723056	WITHOUT_CLASSIFICATION	2.2995992769427186E-4	DESIGN
Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9995423710170203	WITHOUT_CLASSIFICATION	4.57628982979769E-4	DESIGN
do nothing, leave empty	WITHOUT_CLASSIFICATION	0.99682913200542	WITHOUT_CLASSIFICATION	0.003170867994579968	DESIGN
Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.999961294134111	WITHOUT_CLASSIFICATION	3.87058658891446E-5	DESIGN
================ Singleton Methods ================	WITHOUT_CLASSIFICATION	0.9910403634579127	WITHOUT_CLASSIFICATION	0.008959636542087203	DESIGN
Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.92663379526222	WITHOUT_CLASSIFICATION	0.07336620473778	DESIGN
Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999678989059956	WITHOUT_CLASSIFICATION	3.2101094004334884E-5	DESIGN
MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999282700900352	WITHOUT_CLASSIFICATION	7.172990996482779E-5	DESIGN
NOTE: Serialization is primarily supported for testing purposes, and there is no general guarantee that serialization will work correctly. Specifically, instance variables pointing at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999929106359333	WITHOUT_CLASSIFICATION	7.089364066666163E-6	DESIGN
write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9994628591333593	WITHOUT_CLASSIFICATION	5.371408666407928E-4	DESIGN
rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9994768378853089	WITHOUT_CLASSIFICATION	5.231621146910471E-4	DESIGN
0x3fff_ffff -0x4000_0000	WITHOUT_CLASSIFICATION	0.9988262199975204	WITHOUT_CLASSIFICATION	0.0011737800024795742	DESIGN
a gotcha	WITHOUT_CLASSIFICATION	0.9989371151772731	WITHOUT_CLASSIFICATION	0.0010628848227269576	DESIGN
Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.999811350860678	WITHOUT_CLASSIFICATION	1.886491393220679E-4	DESIGN
A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999253525834557	WITHOUT_CLASSIFICATION	7.464741654427283E-5	DESIGN
Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9989606879673992	WITHOUT_CLASSIFICATION	0.0010393120326006938	DESIGN
Java Doubles are 64 bit long:	WITHOUT_CLASSIFICATION	0.9954718864101467	WITHOUT_CLASSIFICATION	0.004528113589853362	DESIGN
Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.999961294134111	WITHOUT_CLASSIFICATION	3.87058658891446E-5	DESIGN
don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.99978958691773	WITHOUT_CLASSIFICATION	2.1041308226995195E-4	DESIGN
Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9995088918717362	WITHOUT_CLASSIFICATION	4.911081282637651E-4	DESIGN
MRI behavior:	WITHOUT_CLASSIFICATION	0.9994920945478288	WITHOUT_CLASSIFICATION	5.079054521711727E-4	DESIGN
Numeric.equal	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
provider is not available	WITHOUT_CLASSIFICATION	0.9895032035866894	WITHOUT_CLASSIFICATION	0.010496796413310536	DESIGN
bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9981819259793133	WITHOUT_CLASSIFICATION	0.0018180740206866779	DESIGN
fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9992191323491991	WITHOUT_CLASSIFICATION	7.808676508009897E-4	DESIGN
RubyDigest	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.8657474048471965	WITHOUT_CLASSIFICATION	0.13425259515280344	DESIGN
synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9996497566133256	WITHOUT_CLASSIFICATION	3.502433866745248E-4	DESIGN
we only add live threads	WITHOUT_CLASSIFICATION	0.9997493948989303	WITHOUT_CLASSIFICATION	2.506051010696813E-4	DESIGN
use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999406297333348	WITHOUT_CLASSIFICATION	5.937026666533532E-5	DESIGN
handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999426220190091	WITHOUT_CLASSIFICATION	5.7377980990804874E-5	DESIGN
JRubyService	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
while	WITHOUT_CLASSIFICATION	0.9993757652067073	WITHOUT_CLASSIFICATION	6.242347932927646E-4	DESIGN
\OOO	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
CRuby uses sprintf(buf, "%.g", FLOAT_DIG, d); This pattern adjusts the output of String.pattern("%g") to mimic the C version.	WITHOUT_CLASSIFICATION	0.9901160760103206	WITHOUT_CLASSIFICATION	0.009883923989679392	DESIGN
mask off "once" flag	WITHOUT_CLASSIFICATION	0.9996360736843732	WITHOUT_CLASSIFICATION	3.6392631562685255E-4	DESIGN
used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9916709257374583	WITHOUT_CLASSIFICATION	0.00832907426254171	DESIGN
internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.999478295768368	WITHOUT_CLASSIFICATION	5.217042316319132E-4	DESIGN
silent ?	WITHOUT_CLASSIFICATION	0.9986752842876285	WITHOUT_CLASSIFICATION	0.0013247157123713693	DESIGN
\xHH	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
\M-X, \M-\C-X, \M-\cX	WITHOUT_CLASSIFICATION	0.9988262199975204	WITHOUT_CLASSIFICATION	0.0011737800024795742	DESIGN
\C-X, \C-\M-X	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
\cX, \c\M-X	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
\O, \OO, \OOO or backref	WITHOUT_CLASSIFICATION	0.9994847469369602	WITHOUT_CLASSIFICATION	5.152530630397749E-4	DESIGN
MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9992926867258524	WITHOUT_CLASSIFICATION	7.073132741477211E-4	DESIGN
Surrogates	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
do not load the class if not used	WITHOUT_CLASSIFICATION	0.702118145115474	WITHOUT_CLASSIFICATION	0.2978818548845261	DESIGN
\0, \0O, \0OO	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
\xHH	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
\C-X, \C-\M-X	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
\M-X, \M-\C-X, \M-\cX	WITHOUT_CLASSIFICATION	0.9988262199975204	WITHOUT_CLASSIFICATION	0.0011737800024795742	DESIGN
\\u{H HH HHH HHHH HHHHH HHHHHH ...}	WITHOUT_CLASSIFICATION	0.9992535500365699	WITHOUT_CLASSIFICATION	7.464499634301213E-4	DESIGN
\\uHHHH	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
\p{Hiragana}	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
inner switch	WITHOUT_CLASSIFICATION	0.9989541425863314	WITHOUT_CLASSIFICATION	0.0010458574136686387	DESIGN
newInstance here	WITHOUT_CLASSIFICATION	0.9977527555688324	WITHOUT_CLASSIFICATION	0.002247244431167603	DESIGN
rb_reg_raise	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
rb_reg_desc	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9988262199975204	WITHOUT_CLASSIFICATION	0.0011737800024795742	DESIGN
rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9988262199975204	WITHOUT_CLASSIFICATION	0.0011737800024795742	DESIGN
rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999460545736988	WITHOUT_CLASSIFICATION	5.394542630122164E-5	DESIGN
rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
option_to_str	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
Don't initialize with class Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9998551040592122	WITHOUT_CLASSIFICATION	1.448959407877538E-4	DESIGN
args should be before block	WITHOUT_CLASSIFICATION	0.9905462652421072	WITHOUT_CLASSIFICATION	0.009453734757892823	DESIGN
args should be at end	WITHOUT_CLASSIFICATION	0.9718006245435803	WITHOUT_CLASSIFICATION	0.028199375456419644	DESIGN
minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9974611556365823	WITHOUT_CLASSIFICATION	0.0025388443634176997	DESIGN
minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9974611556365823	WITHOUT_CLASSIFICATION	0.0025388443634176997	DESIGN
skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9998563333811652	WITHOUT_CLASSIFICATION	1.4366661883482627E-4	DESIGN
start a new populator	WITHOUT_CLASSIFICATION	0.9985384519331363	WITHOUT_CLASSIFICATION	0.0014615480668636934	DESIGN
check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9998970580714815	WITHOUT_CLASSIFICATION	1.0294192851840274E-4	DESIGN
add all names for this annotation	WITHOUT_CLASSIFICATION	0.995140229496123	WITHOUT_CLASSIFICATION	0.004859770503876994	DESIGN
no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9998789930237445	WITHOUT_CLASSIFICATION	1.2100697625559556E-4	DESIGN
write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9995479120620092	WITHOUT_CLASSIFICATION	4.52087937990728E-4	DESIGN
single method, use normal logic	WITHOUT_CLASSIFICATION	0.9997464225827756	WITHOUT_CLASSIFICATION	2.535774172244647E-4	DESIGN
multimethod, new logic	WITHOUT_CLASSIFICATION	0.9989461185147586	WITHOUT_CLASSIFICATION	0.0010538814852413898	DESIGN
declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9933696854540626	WITHOUT_CLASSIFICATION	0.006630314545937418	DESIGN
inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9938146907676976	WITHOUT_CLASSIFICATION	0.006185309232302497	DESIGN
RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9997913724173069	WITHOUT_CLASSIFICATION	2.0862758269324732E-4	DESIGN
}	WITHOUT_CLASSIFICATION	0.9992160564161661	WITHOUT_CLASSIFICATION	7.83943583834052E-4	DESIGN
fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9985821858811849	WITHOUT_CLASSIFICATION	0.0014178141188151447	DESIGN
refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9995521634097995	WITHOUT_CLASSIFICATION	4.4783659020052784E-4	DESIGN
If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9991860790161702	WITHOUT_CLASSIFICATION	8.13920983829873E-4	DESIGN
attribute set.	WITHOUT_CLASSIFICATION	0.9998273719195035	WITHOUT_CLASSIFICATION	1.7262808049651795E-4	DESIGN
element set	WITHOUT_CLASSIFICATION	0.9990947039228839	WITHOUT_CLASSIFICATION	9.052960771161702E-4	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9963097345692491	WITHOUT_CLASSIFICATION	0.0036902654307508906	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9963097345692491	WITHOUT_CLASSIFICATION	0.0036902654307508906	DESIGN
colon3	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
Colon3	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9958594426647637	WITHOUT_CLASSIFICATION	0.004140557335236382	DESIGN
For b.foo	WITHOUT_CLASSIFICATION	0.9997701715912476	WITHOUT_CLASSIFICATION	2.298284087524615E-4	DESIGN
instance config for the script run	WITHOUT_CLASSIFICATION	0.9952124637065813	WITHOUT_CLASSIFICATION	0.00478753629341867	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9963097345692491	WITHOUT_CLASSIFICATION	0.0036902654307508906	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9963097345692491	WITHOUT_CLASSIFICATION	0.0036902654307508906	DESIGN
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999755735219122	WITHOUT_CLASSIFICATION	2.442647808769271E-5	DESIGN
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999755735219122	WITHOUT_CLASSIFICATION	2.442647808769271E-5	DESIGN
RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9994071263975158	WITHOUT_CLASSIFICATION	5.92873602484217E-4	DESIGN
For 'b.foo'	WITHOUT_CLASSIFICATION	0.9997869475997219	WITHOUT_CLASSIFICATION	2.1305240027819753E-4	DESIGN
We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9860200911741196	WITHOUT_CLASSIFICATION	0.013979908825880332	DESIGN
something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.783280156554284	WITHOUT_CLASSIFICATION	0.21671984344571593	DESIGN
Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9996908092755111	WITHOUT_CLASSIFICATION	3.0919072448878975E-4	DESIGN
Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9996908092755111	WITHOUT_CLASSIFICATION	3.0919072448878975E-4	DESIGN
do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.998857904816962	WITHOUT_CLASSIFICATION	0.0011420951830379848	DESIGN
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9959457744519218	WITHOUT_CLASSIFICATION	0.004054225548078275	DESIGN
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998440631756109	WITHOUT_CLASSIFICATION	1.559368243891652E-4	DESIGN
never visited, should be fine	WITHOUT_CLASSIFICATION	0.9705763465315412	WITHOUT_CLASSIFICATION	0.02942365346845867	DESIGN
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999755735219122	WITHOUT_CLASSIFICATION	2.442647808769271E-5	DESIGN
The name of the variable	WITHOUT_CLASSIFICATION	0.9995760339201923	WITHOUT_CLASSIFICATION	4.2396607980763935E-4	DESIGN
If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9899667505389088	WITHOUT_CLASSIFICATION	0.010033249461091173	DESIGN
Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9993022578379237	WITHOUT_CLASSIFICATION	6.97742162076268E-4	DESIGN
Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.999228427988935	WITHOUT_CLASSIFICATION	7.715720110649651E-4	DESIGN
no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9996950484608896	WITHOUT_CLASSIFICATION	3.049515391103326E-4	DESIGN
optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9877233816306277	WITHOUT_CLASSIFICATION	0.012276618369372319	DESIGN
arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9992535500365699	WITHOUT_CLASSIFICATION	7.464499634301213E-4	DESIGN
no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9988653513250209	WITHOUT_CLASSIFICATION	0.0011346486749792203	DESIGN
set argv from main's args	WITHOUT_CLASSIFICATION	0.9986551227518085	WITHOUT_CLASSIFICATION	0.0013448772481915682	DESIGN
attribute set.	WITHOUT_CLASSIFICATION	0.9998273719195035	WITHOUT_CLASSIFICATION	1.7262808049651795E-4	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9963097345692491	WITHOUT_CLASSIFICATION	0.0036902654307508906	DESIGN
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999755735219122	WITHOUT_CLASSIFICATION	2.442647808769271E-5	DESIGN
The name of the variable	WITHOUT_CLASSIFICATION	0.9995760339201923	WITHOUT_CLASSIFICATION	4.2396607980763935E-4	DESIGN
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9781016106952097	WITHOUT_CLASSIFICATION	0.021898389304790267	DESIGN
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9781016106952097	WITHOUT_CLASSIFICATION	0.021898389304790267	DESIGN
block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.5575696184663923	WITHOUT_CLASSIFICATION	0.44243038153360764	DESIGN
assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9998476894581192	WITHOUT_CLASSIFICATION	1.523105418808141E-4	DESIGN
in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9901199319896608	WITHOUT_CLASSIFICATION	0.009880068010339131	DESIGN
assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999385586621649	WITHOUT_CLASSIFICATION	6.144133783506961E-5	DESIGN
Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9976030981902689	WITHOUT_CLASSIFICATION	0.0023969018097311097	DESIGN
Experimental class reification support, to create real Java classes for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999401401591455	WITHOUT_CLASSIFICATION	5.985984085448931E-5	DESIGN
This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9977902201280482	WITHOUT_CLASSIFICATION	0.0022097798719517667	DESIGN
Make a nil node if no body. Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9852816535349739	WITHOUT_CLASSIFICATION	0.014718346465026096	DESIGN
'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9990560188643026	WITHOUT_CLASSIFICATION	9.439811356975127E-4	DESIGN
now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9441747203956876	WITHOUT_CLASSIFICATION	0.05582527960431239	DESIGN
never visited, should be ok	WITHOUT_CLASSIFICATION	0.9537496011612464	WITHOUT_CLASSIFICATION	0.04625039883875357	DESIGN
If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999915395077471	WITHOUT_CLASSIFICATION	8.460492252770076E-6	DESIGN
JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999752101601993	WITHOUT_CLASSIFICATION	2.4789839800680775E-5	DESIGN
element set	WITHOUT_CLASSIFICATION	0.9990947039228839	WITHOUT_CLASSIFICATION	9.052960771161702E-4	DESIGN
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999755735219122	WITHOUT_CLASSIFICATION	2.442647808769271E-5	DESIGN
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9959457744519218	WITHOUT_CLASSIFICATION	0.004054225548078275	DESIGN
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998440631756109	WITHOUT_CLASSIFICATION	1.559368243891652E-4	DESIGN
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998440631756109	WITHOUT_CLASSIFICATION	1.559368243891652E-4	DESIGN
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999755735219122	WITHOUT_CLASSIFICATION	2.442647808769271E-5	DESIGN
The name of the variable	WITHOUT_CLASSIFICATION	0.9995760339201923	WITHOUT_CLASSIFICATION	4.2396607980763935E-4	DESIGN
The name of the variable	WITHOUT_CLASSIFICATION	0.9995760339201923	WITHOUT_CLASSIFICATION	4.2396607980763935E-4	DESIGN
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9781016106952097	WITHOUT_CLASSIFICATION	0.021898389304790267	DESIGN
Empirical Observations: null -> Some arity argsNode == this.argsNode then check for arity changes newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9996426118460274	WITHOUT_CLASSIFICATION	3.5738815397267477E-4	DESIGN
assert !(value instanceof RubyArray) : "Not an array";	WITHOUT_CLASSIFICATION	0.9669388591455427	WITHOUT_CLASSIFICATION	0.03306114085445732	DESIGN
Serialization killed our dynamic scope. We can just create an empty one since serialization cannot serialize an eval (which is the only thing which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999947579646218	WITHOUT_CLASSIFICATION	5.2420353781957325E-6	DESIGN
Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9988515336203537	WITHOUT_CLASSIFICATION	0.001148466379646245	DESIGN
We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9026942053524865	WITHOUT_CLASSIFICATION	0.09730579464751363	DESIGN
assert thenBody != null : "thenBody is not null"; assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9838332919711389	WITHOUT_CLASSIFICATION	0.016166708028861117	DESIGN
add in reverse order	WITHOUT_CLASSIFICATION	0.9998350713131251	WITHOUT_CLASSIFICATION	1.6492868687488925E-4	DESIGN
in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9998064010955069	WITHOUT_CLASSIFICATION	1.9359890449302067E-4	DESIGN
ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9996134984554516	WITHOUT_CLASSIFICATION	3.865015445483968E-4	DESIGN
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9959457744519218	WITHOUT_CLASSIFICATION	0.004054225548078275	DESIGN
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998440631756109	WITHOUT_CLASSIFICATION	1.559368243891652E-4	DESIGN
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998440631756109	WITHOUT_CLASSIFICATION	1.559368243891652E-4	DESIGN
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999755735219122	WITHOUT_CLASSIFICATION	2.442647808769271E-5	DESIGN
Make a nil node if no body. Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9852816535349739	WITHOUT_CLASSIFICATION	0.014718346465026096	DESIGN
now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9441747203956876	WITHOUT_CLASSIFICATION	0.05582527960431239	DESIGN
No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9999820467727552	WITHOUT_CLASSIFICATION	1.795322724483135E-5	DESIGN
save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999972585946628	WITHOUT_CLASSIFICATION	2.7414053370860343E-6	DESIGN
For 'foo'	WITHOUT_CLASSIFICATION	0.999771254055311	WITHOUT_CLASSIFICATION	2.2874594468915867E-4	DESIGN
For 'foo'	WITHOUT_CLASSIFICATION	0.999771254055311	WITHOUT_CLASSIFICATION	2.2874594468915867E-4	DESIGN
admittedly inefficient	WITHOUT_CLASSIFICATION	0.9825167936078633	WITHOUT_CLASSIFICATION	0.017483206392136772	DESIGN
JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9997734922098432	WITHOUT_CLASSIFICATION	2.2650779015667748E-4	DESIGN
What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9937524758057014	WITHOUT_CLASSIFICATION	0.00624752419429858	DESIGN
let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9984469827497942	WITHOUT_CLASSIFICATION	0.0015530172502058752	DESIGN
just rethrow	WITHOUT_CLASSIFICATION	0.9996755065252853	WITHOUT_CLASSIFICATION	3.244934747147515E-4	DESIGN
just rethrow	WITHOUT_CLASSIFICATION	0.9996755065252853	WITHOUT_CLASSIFICATION	3.244934747147515E-4	DESIGN
clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.999850398763454	WITHOUT_CLASSIFICATION	1.4960123654600936E-4	DESIGN
clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.999850398763454	WITHOUT_CLASSIFICATION	1.4960123654600936E-4	DESIGN
no takers; bubble up	WITHOUT_CLASSIFICATION	0.9997093866692831	WITHOUT_CLASSIFICATION	2.9061333071693756E-4	DESIGN
no takers; bubble up	WITHOUT_CLASSIFICATION	0.9997093866692831	WITHOUT_CLASSIFICATION	2.9061333071693756E-4	DESIGN
Execute rescue block	WITHOUT_CLASSIFICATION	0.9996860182046549	WITHOUT_CLASSIFICATION	3.1398179534514967E-4	DESIGN
If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999384172749646	WITHOUT_CLASSIFICATION	6.158272503544961E-5	DESIGN
index of variable for this arg	WITHOUT_CLASSIFICATION	0.9898135781663925	WITHOUT_CLASSIFICATION	0.01018642183360743	DESIGN
only a marker interface	WITHOUT_CLASSIFICATION	0.9989678171719847	WITHOUT_CLASSIFICATION	0.0010321828280153839	DESIGN
don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.999523685302903	WITHOUT_CLASSIFICATION	4.763146970970109E-4	DESIGN
pragmas	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9963187999074562	WITHOUT_CLASSIFICATION	0.003681200092543869	DESIGN
We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.986150773214013	WITHOUT_CLASSIFICATION	0.013849226785986945	DESIGN
The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9996282789832466	WITHOUT_CLASSIFICATION	3.7172101675336284E-4	DESIGN
The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9899261366684571	WITHOUT_CLASSIFICATION	0.010073863331542877	DESIGN
Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9985848117077317	WITHOUT_CLASSIFICATION	0.0014151882922682473	DESIGN
check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.97099653057283	WITHOUT_CLASSIFICATION	0.029003469427170067	DESIGN
long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9962840908024879	WITHOUT_CLASSIFICATION	0.0037159091975120075	DESIGN
ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9994357046728709	WITHOUT_CLASSIFICATION	5.64295327129032E-4	DESIGN
ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9994357046728709	WITHOUT_CLASSIFICATION	5.64295327129032E-4	DESIGN
long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9987115974775151	WITHOUT_CLASSIFICATION	0.0012884025224849274	DESIGN
we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9959925636393695	WITHOUT_CLASSIFICATION	0.004007436360630401	DESIGN
Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9880020214184301	WITHOUT_CLASSIFICATION	0.01199797858156987	DESIGN
encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.996613795607365	WITHOUT_CLASSIFICATION	0.003386204392635067	DESIGN
only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9947073450760919	WITHOUT_CLASSIFICATION	0.005292654923908171	DESIGN
otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9989221146976661	WITHOUT_CLASSIFICATION	0.001077885302333928	DESIGN
use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9951745952688862	WITHOUT_CLASSIFICATION	0.004825404731113802	DESIGN
unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999848477760507	WITHOUT_CLASSIFICATION	1.515222394938861E-5	DESIGN
compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999841030533958	WITHOUT_CLASSIFICATION	1.5896946604233588E-5	DESIGN
last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999961965769666	WITHOUT_CLASSIFICATION	3.8034230333925272E-6	DESIGN
compile first node only	WITHOUT_CLASSIFICATION	0.9998424360847091	WITHOUT_CLASSIFICATION	1.5756391529084867E-4	DESIGN
splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9983642795838218	WITHOUT_CLASSIFICATION	0.0016357204161782579	DESIGN
if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9983659511288588	WITHOUT_CLASSIFICATION	0.0016340488711410928	DESIGN
NOTE: Currently this optimization is limited to the following situations: All expressions must be int-ranged literal fixnums It also still emits the code for the "safe" when logic, which is rather wasteful (since it essentially doubles each code body). As such it is normally disabled, but it serves as an example of how this optimization could be done. Ideally, it should be combined with the when processing to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9116367026811028	DESIGN	0.08836329731889722	WITHOUT_CLASSIFICATION
aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9967964598101466	WITHOUT_CLASSIFICATION	0.0032035401898532455	DESIGN
one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.999405161924326	WITHOUT_CLASSIFICATION	5.948380756739241E-4	DESIGN
can't do it	WITHOUT_CLASSIFICATION	0.9992827607580174	WITHOUT_CLASSIFICATION	7.172392419825355E-4	DESIGN
otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9997209606862812	WITHOUT_CLASSIFICATION	2.7903931371875504E-4	DESIGN
colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9989647476937746	WITHOUT_CLASSIFICATION	0.0010352523062253701	DESIGN
colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9989647476937746	WITHOUT_CLASSIFICATION	0.0010352523062253701	DESIGN
these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9991274514250498	WITHOUT_CLASSIFICATION	8.725485749501504E-4	DESIGN
[IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass] [IRubyObject]	WITHOUT_CLASSIFICATION	0.9992535500365699	WITHOUT_CLASSIFICATION	7.464499634301213E-4	DESIGN
[]	WITHOUT_CLASSIFICATION	0.9989664164097282	WITHOUT_CLASSIFICATION	0.0010335835902719236	DESIGN
[]	WITHOUT_CLASSIFICATION	0.9989664164097282	WITHOUT_CLASSIFICATION	0.0010335835902719236	DESIGN
context.swapValues(); context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9992535500365699	WITHOUT_CLASSIFICATION	7.464499634301213E-4	DESIGN
[RubyClass] [RubyClass, RubyClass] [RubyClass] [] [self] [RubyClass] [RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.998616489822255	WITHOUT_CLASSIFICATION	0.001383510177744944	DESIGN
[RubyClass]	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
[RubyClass] [RubyClass, RubyClass] [RubyClass] []	WITHOUT_CLASSIFICATION	0.998616489822255	WITHOUT_CLASSIFICATION	0.001383510177744944	DESIGN
if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.999036831669366	WITHOUT_CLASSIFICATION	9.631683306339945E-4	DESIGN
inspect body and args	WITHOUT_CLASSIFICATION	0.9998406022166229	WITHOUT_CLASSIFICATION	1.5939778337703664E-4	DESIGN
inspect body and args	WITHOUT_CLASSIFICATION	0.9998406022166229	WITHOUT_CLASSIFICATION	1.5939778337703664E-4	DESIGN
check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9998632171082333	WITHOUT_CLASSIFICATION	1.3678289176666293E-4	DESIGN
if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.999494769852019	WITHOUT_CLASSIFICATION	5.052301479809494E-4	DESIGN
invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9984962055629188	WITHOUT_CLASSIFICATION	0.001503794437081155	DESIGN
[IRubyObject] [IRubyObject, IRubyObject] [IRubyObject, RubyClass] [IRubyObject, RubyClass, RubyClass] [IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9992535500365699	WITHOUT_CLASSIFICATION	7.464499634301213E-4	DESIGN
[IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass] [IRubyObject]	WITHOUT_CLASSIFICATION	0.9992535500365699	WITHOUT_CLASSIFICATION	7.464499634301213E-4	DESIGN
[RubyClass] []	WITHOUT_CLASSIFICATION	0.999041805192527	WITHOUT_CLASSIFICATION	9.581948074730681E-4	DESIGN
[String] [String, String] [String] [String, RubyClass] [String, RubyClass, RubyClass] [String, RubyClass]	WITHOUT_CLASSIFICATION	0.9992535500365699	WITHOUT_CLASSIFICATION	7.464499634301213E-4	DESIGN
[String] [String, String] [String] [String, RubyClass] [String, RubyClass, RubyClass] [String, RubyClass]	WITHOUT_CLASSIFICATION	0.9992535500365699	WITHOUT_CLASSIFICATION	7.464499634301213E-4	DESIGN
no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9994233391543215	WITHOUT_CLASSIFICATION	5.766608456784629E-4	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998885427149684	WITHOUT_CLASSIFICATION	1.1145728503160131E-4	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998885427149684	WITHOUT_CLASSIFICATION	1.1145728503160131E-4	DESIGN
not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9998000846026474	WITHOUT_CLASSIFICATION	1.999153973527667E-4	DESIGN
not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9998000846026474	WITHOUT_CLASSIFICATION	1.999153973527667E-4	DESIGN
not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9998000846026474	WITHOUT_CLASSIFICATION	1.999153973527667E-4	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998885427149684	WITHOUT_CLASSIFICATION	1.1145728503160131E-4	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998885427149684	WITHOUT_CLASSIFICATION	1.1145728503160131E-4	DESIGN
no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9994233391543215	WITHOUT_CLASSIFICATION	5.766608456784629E-4	DESIGN
force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9995912277946013	WITHOUT_CLASSIFICATION	4.087722053987464E-4	DESIGN
always false or nil	WITHOUT_CLASSIFICATION	0.9998672576758657	WITHOUT_CLASSIFICATION	1.327423241343217E-4	DESIGN
optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.999922978106363	WITHOUT_CLASSIFICATION	7.70218936370764E-5	DESIGN
normal	WITHOUT_CLASSIFICATION	0.9998215612892731	WITHOUT_CLASSIFICATION	1.7843871072675263E-4	DESIGN
compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999171094223415	WITHOUT_CLASSIFICATION	8.289057765858098E-5	DESIGN
need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9987567792232785	WITHOUT_CLASSIFICATION	0.00124322077672155	DESIGN
just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9997069740124344	WITHOUT_CLASSIFICATION	2.930259875657142E-4	DESIGN
"assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9998416999143058	WITHOUT_CLASSIFICATION	1.5830008569425128E-4	DESIGN
compile first node only	WITHOUT_CLASSIFICATION	0.9998424360847091	WITHOUT_CLASSIFICATION	1.5756391529084867E-4	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998885427149684	WITHOUT_CLASSIFICATION	1.1145728503160131E-4	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998885427149684	WITHOUT_CLASSIFICATION	1.1145728503160131E-4	DESIGN
eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9998568256732996	WITHOUT_CLASSIFICATION	1.4317432670048593E-4	DESIGN
try optz version	WITHOUT_CLASSIFICATION	0.9998926294061413	WITHOUT_CLASSIFICATION	1.0737059385870232E-4	DESIGN
sizes must match	WITHOUT_CLASSIFICATION	0.9998145483699695	WITHOUT_CLASSIFICATION	1.854516300304336E-4	DESIGN
expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999744647367039	WITHOUT_CLASSIFICATION	2.5535263296108327E-5	DESIGN
normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9996424613608361	WITHOUT_CLASSIFICATION	3.575386391639634E-4	DESIGN
head must not be null and there must be no "args" (like arg)	WITHOUT_CLASSIFICATION	0.9967340045920124	WITHOUT_CLASSIFICATION	0.0032659954079875438	DESIGN
"head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9994523991859495	WITHOUT_CLASSIFICATION	5.476008140504873E-4	DESIGN
only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.999936353973084	WITHOUT_CLASSIFICATION	6.3646026916005E-5	DESIGN
perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999489995248478	WITHOUT_CLASSIFICATION	5.1000475152122834E-5	DESIGN
if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9989551392985192	WITHOUT_CLASSIFICATION	0.0010448607014808364	DESIGN
RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9997913724173069	WITHOUT_CLASSIFICATION	2.0862758269324732E-4	DESIGN
done processing args	WITHOUT_CLASSIFICATION	0.9995560595218053	WITHOUT_CLASSIFICATION	4.4394047819470403E-4	DESIGN
all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9997158700175515	WITHOUT_CLASSIFICATION	2.841299824485446E-4	DESIGN
assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9931288109913731	WITHOUT_CLASSIFICATION	0.006871189008627002	DESIGN
if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9998579028330379	WITHOUT_CLASSIFICATION	1.420971669620896E-4	DESIGN
[recv]	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
[recv]	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
[recv]	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
compile into array	WITHOUT_CLASSIFICATION	0.9979426834365608	WITHOUT_CLASSIFICATION	0.0020573165634392714	DESIGN
compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999845515495207	WITHOUT_CLASSIFICATION	1.5448450479352258E-5	DESIGN
check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.999993560700302	WITHOUT_CLASSIFICATION	6.439299698108603E-6	DESIGN
condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9960858517667429	WITHOUT_CLASSIFICATION	0.003914148233257008	DESIGN
force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9972595624976309	WITHOUT_CLASSIFICATION	0.002740437502369119	DESIGN
create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9993866086029515	WITHOUT_CLASSIFICATION	6.133913970485408E-4	DESIGN
it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9993410129646847	WITHOUT_CLASSIFICATION	6.58987035315399E-4	DESIGN
send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9993524735105451	WITHOUT_CLASSIFICATION	6.475264894548298E-4	DESIGN
single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9994965289061868	WITHOUT_CLASSIFICATION	5.034710938131323E-4	DESIGN
leave as a normal array	WITHOUT_CLASSIFICATION	0.9996174327615152	WITHOUT_CLASSIFICATION	3.8256723848483805E-4	DESIGN
This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9767416404436157	WITHOUT_CLASSIFICATION	0.02325835955638426	DESIGN
The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.8296657551183697	WITHOUT_CLASSIFICATION	0.1703342448816303	DESIGN
check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9998632171082333	WITHOUT_CLASSIFICATION	1.3678289176666293E-4	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998885427149684	WITHOUT_CLASSIFICATION	1.1145728503160131E-4	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998885427149684	WITHOUT_CLASSIFICATION	1.1145728503160131E-4	DESIGN
no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9994233391543215	WITHOUT_CLASSIFICATION	5.766608456784629E-4	DESIGN
need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9987567792232785	WITHOUT_CLASSIFICATION	0.00124322077672155	DESIGN
try optz version	WITHOUT_CLASSIFICATION	0.9998926294061413	WITHOUT_CLASSIFICATION	1.0737059385870232E-4	DESIGN
expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999744647367039	WITHOUT_CLASSIFICATION	2.5535263296108327E-5	DESIGN
head must not be null and there must be no "args" (like arg)	WITHOUT_CLASSIFICATION	0.9967340045920124	WITHOUT_CLASSIFICATION	0.0032659954079875438	DESIGN
sizes must match	WITHOUT_CLASSIFICATION	0.9998145483699695	WITHOUT_CLASSIFICATION	1.854516300304336E-4	DESIGN
"head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9994523991859495	WITHOUT_CLASSIFICATION	5.476008140504873E-4	DESIGN
if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9989551392985192	WITHOUT_CLASSIFICATION	0.0010448607014808364	DESIGN
perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999489995248478	WITHOUT_CLASSIFICATION	5.1000475152122834E-5	DESIGN
done processing args	WITHOUT_CLASSIFICATION	0.9995560595218053	WITHOUT_CLASSIFICATION	4.4394047819470403E-4	DESIGN
Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9995888607030998	WITHOUT_CLASSIFICATION	4.111392969001659E-4	DESIGN
class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.68820062406005	WITHOUT_CLASSIFICATION	0.31179937593995	DESIGN
successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.999686830054569	WITHOUT_CLASSIFICATION	3.1316994543092807E-4	DESIGN
finally, grab the script	WITHOUT_CLASSIFICATION	0.999551392219638	WITHOUT_CLASSIFICATION	4.486077803620821E-4	DESIGN
logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9962063083088425	WITHOUT_CLASSIFICATION	0.0037936916911575	DESIGN
Time the compilation	WITHOUT_CLASSIFICATION	0.9987084836515912	WITHOUT_CLASSIFICATION	0.001291516348408788	DESIGN
we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9977569189173651	WITHOUT_CLASSIFICATION	0.0022430810826349745	DESIGN
If we don't have a body, check for required or opt args if opt args, they could have side effects if required args, need to raise errors if too few args passed otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9999693346705223	WITHOUT_CLASSIFICATION	3.0665329477725314E-5	DESIGN
if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9980390441339919	WITHOUT_CLASSIFICATION	0.0019609558660081614	DESIGN
only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9997886160032171	WITHOUT_CLASSIFICATION	2.113839967828181E-4	DESIGN
normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9998708658081467	WITHOUT_CLASSIFICATION	1.2913419185335678E-4	DESIGN
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9822073842088028	WITHOUT_CLASSIFICATION	0.017792615791197154	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9988417054877176	WITHOUT_CLASSIFICATION	0.0011582945122824134	DESIGN
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9981464293254071	WITHOUT_CLASSIFICATION	0.001853570674592894	DESIGN
return last value from execution	WITHOUT_CLASSIFICATION	0.9998587012182409	WITHOUT_CLASSIFICATION	1.4129878175899444E-4	DESIGN
end of variable scope	WITHOUT_CLASSIFICATION	0.9992699734651016	WITHOUT_CLASSIFICATION	7.300265348984231E-4	DESIGN
method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9990630164277389	WITHOUT_CLASSIFICATION	9.369835722610776E-4	DESIGN
Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9990925973471787	WITHOUT_CLASSIFICATION	9.074026528211916E-4	DESIGN
check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999166074306073	WITHOUT_CLASSIFICATION	8.339256939277752E-5	DESIGN
load block from [] version of method	WITHOUT_CLASSIFICATION	0.998936225971891	WITHOUT_CLASSIFICATION	0.001063774028108977	DESIGN
normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9998785737673771	WITHOUT_CLASSIFICATION	1.2142623262301541E-4	DESIGN
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9991961606904587	WITHOUT_CLASSIFICATION	8.038393095412779E-4	DESIGN
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9991961606904587	WITHOUT_CLASSIFICATION	8.038393095412779E-4	DESIGN
value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9973842095042458	WITHOUT_CLASSIFICATION	0.0026157904957543063	DESIGN
receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9976095211941883	WITHOUT_CLASSIFICATION	0.0023904788058116268	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.999693976751061	WITHOUT_CLASSIFICATION	3.0602324893904987E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.999693976751061	WITHOUT_CLASSIFICATION	3.0602324893904987E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.999693976751061	WITHOUT_CLASSIFICATION	3.0602324893904987E-4	DESIGN
self	WITHOUT_CLASSIFICATION	0.9994478066226871	WITHOUT_CLASSIFICATION	5.521933773128488E-4	DESIGN
self	WITHOUT_CLASSIFICATION	0.9994478066226871	WITHOUT_CLASSIFICATION	5.521933773128488E-4	DESIGN
self	WITHOUT_CLASSIFICATION	0.9994478066226871	WITHOUT_CLASSIFICATION	5.521933773128488E-4	DESIGN
self	WITHOUT_CLASSIFICATION	0.9994478066226871	WITHOUT_CLASSIFICATION	5.521933773128488E-4	DESIGN
arg0	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
arg0	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
arg0	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
arg1	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
arg1	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
arg2	WITHOUT_CLASSIFICATION	0.9994504630307097	WITHOUT_CLASSIFICATION	5.495369692902801E-4	DESIGN
args	WITHOUT_CLASSIFICATION	0.9996835789131581	WITHOUT_CLASSIFICATION	3.164210868418505E-4	DESIGN
receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9976095211941883	WITHOUT_CLASSIFICATION	0.0023904788058116268	DESIGN
select appropriate call site dup receiver load self	WITHOUT_CLASSIFICATION	0.9972192350402076	WITHOUT_CLASSIFICATION	0.0027807649597924866	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.999693976751061	WITHOUT_CLASSIFICATION	3.0602324893904987E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.999693976751061	WITHOUT_CLASSIFICATION	3.0602324893904987E-4	DESIGN
self	WITHOUT_CLASSIFICATION	0.9994478066226871	WITHOUT_CLASSIFICATION	5.521933773128488E-4	DESIGN
self	WITHOUT_CLASSIFICATION	0.9994478066226871	WITHOUT_CLASSIFICATION	5.521933773128488E-4	DESIGN
self	WITHOUT_CLASSIFICATION	0.9994478066226871	WITHOUT_CLASSIFICATION	5.521933773128488E-4	DESIGN
arg0	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
arg0	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
arg1	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
args	WITHOUT_CLASSIFICATION	0.9996835789131581	WITHOUT_CLASSIFICATION	3.164210868418505E-4	DESIGN
get call site and thread context	WITHOUT_CLASSIFICATION	0.999633170972668	WITHOUT_CLASSIFICATION	3.6682902733202005E-4	DESIGN
get call site and thread context	WITHOUT_CLASSIFICATION	0.999633170972668	WITHOUT_CLASSIFICATION	3.6682902733202005E-4	DESIGN
evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9998223245981178	WITHOUT_CLASSIFICATION	1.7767540188208308E-4	DESIGN
evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9998223245981178	WITHOUT_CLASSIFICATION	1.7767540188208308E-4	DESIGN
invoke	WITHOUT_CLASSIFICATION	0.9997107467038598	WITHOUT_CLASSIFICATION	2.8925329614013266E-4	DESIGN
invoke	WITHOUT_CLASSIFICATION	0.9997107467038598	WITHOUT_CLASSIFICATION	2.8925329614013266E-4	DESIGN
check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999208928180856	WITHOUT_CLASSIFICATION	7.910718191433345E-5	DESIGN
not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9979856836380169	WITHOUT_CLASSIFICATION	0.002014316361983084	DESIGN
not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9979856836380169	WITHOUT_CLASSIFICATION	0.002014316361983084	DESIGN
thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999526398894651	WITHOUT_CLASSIFICATION	4.736011053479361E-5	DESIGN
thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999526398894651	WITHOUT_CLASSIFICATION	4.736011053479361E-5	DESIGN
eval value for assignment	WITHOUT_CLASSIFICATION	0.9997806468344999	WITHOUT_CLASSIFICATION	2.1935316550023378E-4	DESIGN
call site	WITHOUT_CLASSIFICATION	0.998725645222583	WITHOUT_CLASSIFICATION	0.0012743547774170041	DESIGN
call site	WITHOUT_CLASSIFICATION	0.998725645222583	WITHOUT_CLASSIFICATION	0.0012743547774170041	DESIGN
depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9988111726539576	WITHOUT_CLASSIFICATION	0.0011888273460423826	DESIGN
check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9995209446543127	WITHOUT_CLASSIFICATION	4.790553456872042E-4	DESIGN
eval value and save it	WITHOUT_CLASSIFICATION	0.9994553216876576	WITHOUT_CLASSIFICATION	5.446783123425186E-4	DESIGN
self	WITHOUT_CLASSIFICATION	0.9994478066226871	WITHOUT_CLASSIFICATION	5.521933773128488E-4	DESIGN
self	WITHOUT_CLASSIFICATION	0.9994478066226871	WITHOUT_CLASSIFICATION	5.521933773128488E-4	DESIGN
depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9988111726539576	WITHOUT_CLASSIFICATION	0.0011888273460423826	DESIGN
receiver, args, result, value	WITHOUT_CLASSIFICATION	0.999369792947822	WITHOUT_CLASSIFICATION	6.302070521779302E-4	DESIGN
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
super uses current block if none given	WITHOUT_CLASSIFICATION	0.9996189378776014	WITHOUT_CLASSIFICATION	3.8106212239857813E-4	DESIGN
args	WITHOUT_CLASSIFICATION	0.9996835789131581	WITHOUT_CLASSIFICATION	3.164210868418505E-4	DESIGN
block	WITHOUT_CLASSIFICATION	0.9996605627181319	WITHOUT_CLASSIFICATION	3.3943728186814335E-4	DESIGN
block	WITHOUT_CLASSIFICATION	0.9996605627181319	WITHOUT_CLASSIFICATION	3.3943728186814335E-4	DESIGN
no args, no block	WITHOUT_CLASSIFICATION	0.9997950574249299	WITHOUT_CLASSIFICATION	2.0494257507019898E-4	DESIGN
no args, with block	WITHOUT_CLASSIFICATION	0.9996540994282408	WITHOUT_CLASSIFICATION	3.4590057175923854E-4	DESIGN
with args, no block	WITHOUT_CLASSIFICATION	0.9996540994282408	WITHOUT_CLASSIFICATION	3.4590057175923854E-4	DESIGN
with args, with block	WITHOUT_CLASSIFICATION	0.9988329900081029	WITHOUT_CLASSIFICATION	0.001167009991897111	DESIGN
adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9992535500365699	WITHOUT_CLASSIFICATION	7.464499634301213E-4	DESIGN
pop extra attr value	WITHOUT_CLASSIFICATION	0.9993621783497102	WITHOUT_CLASSIFICATION	6.378216502897631E-4	DESIGN
pop extra attr value	WITHOUT_CLASSIFICATION	0.9993621783497102	WITHOUT_CLASSIFICATION	6.378216502897631E-4	DESIGN
arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999035103510825	WITHOUT_CLASSIFICATION	9.648964891748721E-5	DESIGN
arg	WITHOUT_CLASSIFICATION	0.9996792393728056	WITHOUT_CLASSIFICATION	3.2076062719453487E-4	DESIGN
arg	WITHOUT_CLASSIFICATION	0.9996792393728056	WITHOUT_CLASSIFICATION	3.2076062719453487E-4	DESIGN
self	WITHOUT_CLASSIFICATION	0.9994478066226871	WITHOUT_CLASSIFICATION	5.521933773128488E-4	DESIGN
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
args	WITHOUT_CLASSIFICATION	0.9996835789131581	WITHOUT_CLASSIFICATION	3.164210868418505E-4	DESIGN
block	WITHOUT_CLASSIFICATION	0.9996605627181319	WITHOUT_CLASSIFICATION	3.3943728186814335E-4	DESIGN
no args, no block	WITHOUT_CLASSIFICATION	0.9997950574249299	WITHOUT_CLASSIFICATION	2.0494257507019898E-4	DESIGN
no args, with block	WITHOUT_CLASSIFICATION	0.9996540994282408	WITHOUT_CLASSIFICATION	3.4590057175923854E-4	DESIGN
with args, no block	WITHOUT_CLASSIFICATION	0.9996540994282408	WITHOUT_CLASSIFICATION	3.4590057175923854E-4	DESIGN
with args, with block	WITHOUT_CLASSIFICATION	0.9988329900081029	WITHOUT_CLASSIFICATION	0.001167009991897111	DESIGN
arg	WITHOUT_CLASSIFICATION	0.9996792393728056	WITHOUT_CLASSIFICATION	3.2076062719453487E-4	DESIGN
retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9998600003137491	WITHOUT_CLASSIFICATION	1.3999968625095282E-4	DESIGN
use numbered access method	WITHOUT_CLASSIFICATION	0.9906523993626389	WITHOUT_CLASSIFICATION	0.009347600637361017	DESIGN
retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9990856784139918	WITHOUT_CLASSIFICATION	9.143215860081927E-4	DESIGN
add name to call site list	WITHOUT_CLASSIFICATION	0.9984933981515322	WITHOUT_CLASSIFICATION	0.001506601848467795	DESIGN
module is on top of stack	WITHOUT_CLASSIFICATION	0.9982695937126461	WITHOUT_CLASSIFICATION	0.0017304062873539057	DESIGN
build scope names string	WITHOUT_CLASSIFICATION	0.999815109990184	WITHOUT_CLASSIFICATION	1.848900098160976E-4	DESIGN
build descriptor string	WITHOUT_CLASSIFICATION	0.9997855392277275	WITHOUT_CLASSIFICATION	2.1446077227256345E-4	DESIGN
build descriptor string	WITHOUT_CLASSIFICATION	0.9997855392277275	WITHOUT_CLASSIFICATION	2.1446077227256345E-4	DESIGN
generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9995110553477083	WITHOUT_CLASSIFICATION	4.889446522915643E-4	DESIGN
generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9997884504414069	WITHOUT_CLASSIFICATION	2.115495585931819E-4	DESIGN
generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9997883284783988	WITHOUT_CLASSIFICATION	2.1167152160118518E-4	DESIGN
generate constants initialization code	WITHOUT_CLASSIFICATION	0.9998565540211826	WITHOUT_CLASSIFICATION	1.434459788173725E-4	DESIGN
generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9996773654622224	WITHOUT_CLASSIFICATION	3.2263453777760633E-4	DESIGN
generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9996773654622224	WITHOUT_CLASSIFICATION	3.2263453777760633E-4	DESIGN
generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9994815346754182	WITHOUT_CLASSIFICATION	5.184653245817122E-4	DESIGN
generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9994291474065493	WITHOUT_CLASSIFICATION	5.70852593450676E-4	DESIGN
generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.999872334974342	WITHOUT_CLASSIFICATION	1.2766502565787465E-4	DESIGN
generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.999872334974342	WITHOUT_CLASSIFICATION	1.2766502565787465E-4	DESIGN
generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9997883284783988	WITHOUT_CLASSIFICATION	2.1167152160118518E-4	DESIGN
generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9991280451799851	WITHOUT_CLASSIFICATION	8.719548200147979E-4	DESIGN
adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9992535500365699	WITHOUT_CLASSIFICATION	7.464499634301213E-4	DESIGN
use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9980141025518594	WITHOUT_CLASSIFICATION	0.001985897448140502	DESIGN
do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9998758561482526	WITHOUT_CLASSIFICATION	1.2414385174735164E-4	DESIGN
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9981059819393658	WITHOUT_CLASSIFICATION	0.0018940180606341452	DESIGN
No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999879459194699	WITHOUT_CLASSIFICATION	1.2054080530119672E-5	DESIGN
load Object under value	WITHOUT_CLASSIFICATION	0.9997038134047976	WITHOUT_CLASSIFICATION	2.9618659520229835E-4	DESIGN
put under object array already present	WITHOUT_CLASSIFICATION	0.9994772863217033	WITHOUT_CLASSIFICATION	5.22713678296616E-4	DESIGN
if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9997734304798808	WITHOUT_CLASSIFICATION	2.2656952011928388E-4	DESIGN
This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9993532203432612	WITHOUT_CLASSIFICATION	6.467796567386426E-4	DESIGN
if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9997371768489541	WITHOUT_CLASSIFICATION	2.6282315104590704E-4	DESIGN
if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9997371768489541	WITHOUT_CLASSIFICATION	2.6282315104590704E-4	DESIGN
brute force construction inline	WITHOUT_CLASSIFICATION	0.9947317846336594	WITHOUT_CLASSIFICATION	0.005268215366340583	DESIGN
brute force construction inline	WITHOUT_CLASSIFICATION	0.9947317846336594	WITHOUT_CLASSIFICATION	0.005268215366340583	DESIGN
use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9987227127287972	WITHOUT_CLASSIFICATION	0.0012772872712028367	DESIGN
call isTrue on the result	WITHOUT_CLASSIFICATION	0.9991937560806614	WITHOUT_CLASSIFICATION	8.062439193385741E-4	DESIGN
call isTrue on the result	WITHOUT_CLASSIFICATION	0.9991937560806614	WITHOUT_CLASSIFICATION	8.062439193385741E-4	DESIGN
call isTrue on the result	WITHOUT_CLASSIFICATION	0.9991937560806614	WITHOUT_CLASSIFICATION	8.062439193385741E-4	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9996440562015405	WITHOUT_CLASSIFICATION	3.559437984595559E-4	DESIGN
dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999778306299786	WITHOUT_CLASSIFICATION	2.2169370021444942E-5	DESIGN
dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999778306299786	WITHOUT_CLASSIFICATION	2.2169370021444942E-5	DESIGN
clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.999998987068888	WITHOUT_CLASSIFICATION	1.0129311120022904E-6	DESIGN
check the condition	WITHOUT_CLASSIFICATION	0.9999367095902487	WITHOUT_CLASSIFICATION	6.329040975134718E-5	DESIGN
NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.996941395483132	WITHOUT_CLASSIFICATION	0.0030586045168679676	DESIGN
skip catch block	WITHOUT_CLASSIFICATION	0.9999085293884845	WITHOUT_CLASSIFICATION	9.147061151549754E-5	DESIGN
catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9977820311354462	WITHOUT_CLASSIFICATION	0.0022179688645538468	DESIGN
next jump	WITHOUT_CLASSIFICATION	0.9990648451346694	WITHOUT_CLASSIFICATION	9.351548653305235E-4	DESIGN
exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9998424064237688	WITHOUT_CLASSIFICATION	1.5759357623128023E-4	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9988417054877176	WITHOUT_CLASSIFICATION	0.0011582945122824134	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9988417054877176	WITHOUT_CLASSIFICATION	0.0011582945122824134	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9996440562015405	WITHOUT_CLASSIFICATION	3.559437984595559E-4	DESIGN
clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.999998987068888	WITHOUT_CLASSIFICATION	1.0129311120022904E-6	DESIGN
EQ == 0 (i.e. false) pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9962103619788849	WITHOUT_CLASSIFICATION	0.003789638021115144	DESIGN
check the condition	WITHOUT_CLASSIFICATION	0.9999367095902487	WITHOUT_CLASSIFICATION	6.329040975134718E-5	DESIGN
NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.996941395483132	WITHOUT_CLASSIFICATION	0.0030586045168679676	DESIGN
synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999882934268731	WITHOUT_CLASSIFICATION	1.1706573126864473E-5	DESIGN
break jump	WITHOUT_CLASSIFICATION	0.9988368458663549	WITHOUT_CLASSIFICATION	0.001163154133645094	DESIGN
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9981567457384638	WITHOUT_CLASSIFICATION	0.00184325426153622	DESIGN
[reg]	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9896449654828074	WITHOUT_CLASSIFICATION	0.010355034517192455	DESIGN
inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9998039778106029	WITHOUT_CLASSIFICATION	1.9602218939699737E-4	DESIGN
inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9991041406880569	WITHOUT_CLASSIFICATION	8.958593119431403E-4	DESIGN
synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999882934268731	WITHOUT_CLASSIFICATION	1.1706573126864473E-5	DESIGN
store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999503697199086	WITHOUT_CLASSIFICATION	4.963028009148552E-5	DESIGN
store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999503697199086	WITHOUT_CLASSIFICATION	4.963028009148552E-5	DESIGN
if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9983212072252078	WITHOUT_CLASSIFICATION	0.0016787927747922138	DESIGN
retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9983095311698801	WITHOUT_CLASSIFICATION	0.0016904688301199306	DESIGN
any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9910954596308583	WITHOUT_CLASSIFICATION	0.00890454036914169	DESIGN
and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9986205362330294	WITHOUT_CLASSIFICATION	0.0013794637669706958	DESIGN
restore the original exception	WITHOUT_CLASSIFICATION	0.9995026477967592	WITHOUT_CLASSIFICATION	4.973522032407432E-4	DESIGN
Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9983982265672516	WITHOUT_CLASSIFICATION	0.0016017734327483165	DESIGN
rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9998266359839602	WITHOUT_CLASSIFICATION	1.733640160399693E-4	DESIGN
Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9942689898249647	WITHOUT_CLASSIFICATION	0.005731010175035324	DESIGN
inside a loop, break out of it go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9994855627349245	WITHOUT_CLASSIFICATION	5.144372650755455E-4	DESIGN
false zero	WITHOUT_CLASSIFICATION	0.9999707650807523	WITHOUT_CLASSIFICATION	2.9234919247632246E-5	DESIGN
load all arguments straight through	WITHOUT_CLASSIFICATION	0.9994101270440943	WITHOUT_CLASSIFICATION	5.898729559056491E-4	DESIGN
and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9986205362330294	WITHOUT_CLASSIFICATION	0.0013794637669706958	DESIGN
restore the original exception	WITHOUT_CLASSIFICATION	0.9995026477967592	WITHOUT_CLASSIFICATION	4.973522032407432E-4	DESIGN
retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9985778572214271	WITHOUT_CLASSIFICATION	0.0014221427785729107	DESIGN
push false	WITHOUT_CLASSIFICATION	0.9999220456740441	WITHOUT_CLASSIFICATION	7.795432595597901E-5	DESIGN
method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9992535500365699	WITHOUT_CLASSIFICATION	7.464499634301213E-4	DESIGN
method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9988262199975204	WITHOUT_CLASSIFICATION	0.0011737800024795742	DESIGN
EQ == 0 (i.e. false) [C]	WITHOUT_CLASSIFICATION	0.9991915186126239	WITHOUT_CLASSIFICATION	8.084813873761404E-4	DESIGN
[C, C] [C, C, String] [C, null|C]	WITHOUT_CLASSIFICATION	0.9992535500365699	WITHOUT_CLASSIFICATION	7.464499634301213E-4	DESIGN
[C]	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
push true	WITHOUT_CLASSIFICATION	0.9998329870398983	WITHOUT_CLASSIFICATION	1.670129601016455E-4	DESIGN
EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999363549914364	WITHOUT_CLASSIFICATION	6.364500856359819E-5	DESIGN
[?, ?] [?, boolean]	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
[RubyModule] [RubyModule, String]	WITHOUT_CLASSIFICATION	0.9992535500365699	WITHOUT_CLASSIFICATION	7.464499634301213E-4	DESIGN
[boolean]	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9996099832957162	WITHOUT_CLASSIFICATION	3.900167042838023E-4	DESIGN
but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9997900812017206	WITHOUT_CLASSIFICATION	2.099187982794239E-4	DESIGN
we re-set self to the class, but store the old self in a temporary local variable this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9925741548845749	WITHOUT_CLASSIFICATION	0.0074258451154251065	DESIGN
set self to the class	WITHOUT_CLASSIFICATION	0.9962148515012433	WITHOUT_CLASSIFICATION	0.003785148498756702	DESIGN
CLASS BODY	WITHOUT_CLASSIFICATION	0.9993950231611868	WITHOUT_CLASSIFICATION	6.049768388132769E-4	DESIGN
static scope	WITHOUT_CLASSIFICATION	0.9991868904645099	WITHOUT_CLASSIFICATION	8.131095354899623E-4	DESIGN
Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999913656903376	WITHOUT_CLASSIFICATION	8.634309662401953E-6	DESIGN
new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9998804415790936	WITHOUT_CLASSIFICATION	1.1955842090644819E-4	DESIGN
CLASS BODY	WITHOUT_CLASSIFICATION	0.9993950231611868	WITHOUT_CLASSIFICATION	6.049768388132769E-4	DESIGN
static scope	WITHOUT_CLASSIFICATION	0.9991868904645099	WITHOUT_CLASSIFICATION	8.131095354899623E-4	DESIGN
Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999913656903376	WITHOUT_CLASSIFICATION	8.634309662401953E-6	DESIGN
finally with exception	WITHOUT_CLASSIFICATION	0.9979459408814859	WITHOUT_CLASSIFICATION	0.0020540591185140844	DESIGN
prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9905988544762493	WITHOUT_CLASSIFICATION	0.00940114552375074	DESIGN
otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9994656329503485	WITHOUT_CLASSIFICATION	5.343670496514731E-4	DESIGN
original exception is on stack	WITHOUT_CLASSIFICATION	0.9991796765221126	WITHOUT_CLASSIFICATION	8.203234778872843E-4	DESIGN
RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9984239809160548	WITHOUT_CLASSIFICATION	0.0015760190839452458	DESIGN
updating position for same line; skip	WITHOUT_CLASSIFICATION	0.999899819446258	WITHOUT_CLASSIFICATION	1.0018055374203402E-4	DESIGN
callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9998381218962774	WITHOUT_CLASSIFICATION	1.618781037226018E-4	DESIGN
prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.99530139084863	WITHOUT_CLASSIFICATION	0.004698609151369919	DESIGN
script object	WITHOUT_CLASSIFICATION	0.9993485019721261	WITHOUT_CLASSIFICATION	6.514980278739135E-4	DESIGN
arities	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9219052590302724	WITHOUT_CLASSIFICATION	0.07809474096972753	DESIGN
we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9983096037098086	WITHOUT_CLASSIFICATION	0.0016903962901914328	DESIGN
we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9966522185451314	WITHOUT_CLASSIFICATION	0.003347781454868671	DESIGN
checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999745198289615	WITHOUT_CLASSIFICATION	2.5480171038485912E-5	DESIGN
expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9989871678326945	WITHOUT_CLASSIFICATION	0.0010128321673055713	DESIGN
normal case, create a new label	WITHOUT_CLASSIFICATION	0.999896947941796	WITHOUT_CLASSIFICATION	1.0305205820402386E-4	DESIGN
last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9953042429921952	WITHOUT_CLASSIFICATION	0.0046957570078047794	DESIGN
do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9985898178604845	WITHOUT_CLASSIFICATION	0.0014101821395154687	DESIGN
just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999335468127102	WITHOUT_CLASSIFICATION	6.645318728978524E-5	DESIGN
just confirm args length == required	WITHOUT_CLASSIFICATION	0.9991689724928672	WITHOUT_CLASSIFICATION	8.310275071327711E-4	DESIGN
extract item from array	WITHOUT_CLASSIFICATION	0.9999457883275255	WITHOUT_CLASSIFICATION	5.4211672474561144E-5	DESIGN
index for the item	WITHOUT_CLASSIFICATION	0.9999840365710211	WITHOUT_CLASSIFICATION	1.5963428978900948E-5	DESIGN
index for the item	WITHOUT_CLASSIFICATION	0.9999840365710211	WITHOUT_CLASSIFICATION	1.5963428978900948E-5	DESIGN
prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9967304507104545	WITHOUT_CLASSIFICATION	0.003269549289545422	DESIGN
prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9967304507104545	WITHOUT_CLASSIFICATION	0.003269549289545422	DESIGN
next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9989792678491153	WITHOUT_CLASSIFICATION	0.0010207321508847174	DESIGN
next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9989792678491153	WITHOUT_CLASSIFICATION	0.0010207321508847174	DESIGN
now logic for each optional value	WITHOUT_CLASSIFICATION	0.9998891455878484	WITHOUT_CLASSIFICATION	1.1085441215165869E-4	DESIGN
otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9998729085064448	WITHOUT_CLASSIFICATION	1.2709149355520215E-4	DESIGN
pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9979507963130282	WITHOUT_CLASSIFICATION	0.0020492036869717524	DESIGN
if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9995496375428561	WITHOUT_CLASSIFICATION	4.503624571440362E-4	DESIGN
assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999982234422004	WITHOUT_CLASSIFICATION	1.7765577996651938E-6	DESIGN
block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999388512077575	WITHOUT_CLASSIFICATION	6.114879224252398E-5	DESIGN
first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9998027943098409	WITHOUT_CLASSIFICATION	1.9720569015902668E-4	DESIGN
then optional args	WITHOUT_CLASSIFICATION	0.9998068411327867	WITHOUT_CLASSIFICATION	1.931588672132806E-4	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9988417054877176	WITHOUT_CLASSIFICATION	0.0011582945122824134	DESIGN
now logic for each optional value	WITHOUT_CLASSIFICATION	0.9998891455878484	WITHOUT_CLASSIFICATION	1.1085441215165869E-4	DESIGN
otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9998729085064448	WITHOUT_CLASSIFICATION	1.2709149355520215E-4	DESIGN
pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9979507963130282	WITHOUT_CLASSIFICATION	0.0020492036869717524	DESIGN
assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999982234422004	WITHOUT_CLASSIFICATION	1.7765577996651938E-6	DESIGN
block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999388512077575	WITHOUT_CLASSIFICATION	6.114879224252398E-5	DESIGN
if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.999761913585065	WITHOUT_CLASSIFICATION	2.380864149349646E-4	DESIGN
finally, post args	WITHOUT_CLASSIFICATION	0.9994714966661412	WITHOUT_CLASSIFICATION	5.28503333858748E-4	DESIGN
not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9767234426164398	WITHOUT_CLASSIFICATION	0.023276557383560152	DESIGN
not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9767234426164398	WITHOUT_CLASSIFICATION	0.023276557383560152	DESIGN
unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9991651271997103	WITHOUT_CLASSIFICATION	8.348728002897692E-4	DESIGN
fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9995276340575252	WITHOUT_CLASSIFICATION	4.7236594247479307E-4	DESIGN
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9949499300516373	WITHOUT_CLASSIFICATION	0.005050069948362742	DESIGN
temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9992991488108034	WITHOUT_CLASSIFICATION	7.008511891965904E-4	DESIGN
temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9992991488108034	WITHOUT_CLASSIFICATION	7.008511891965904E-4	DESIGN
declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.999919341014294	WITHOUT_CLASSIFICATION	8.065898570590984E-5	DESIGN
class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9847618682304123	WITHOUT_CLASSIFICATION	0.015238131769587724	DESIGN
store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9990390846901299	WITHOUT_CLASSIFICATION	9.609153098701125E-4	DESIGN
load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9998303786264656	WITHOUT_CLASSIFICATION	1.69621373534304E-4	DESIGN
return in a class body raises error	WITHOUT_CLASSIFICATION	0.9987340664184681	WITHOUT_CLASSIFICATION	0.00126593358153191	DESIGN
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9981464293254071	WITHOUT_CLASSIFICATION	0.001853570674592894	DESIGN
return last value from execution	WITHOUT_CLASSIFICATION	0.9998587012182409	WITHOUT_CLASSIFICATION	1.4129878175899444E-4	DESIGN
end of variable scope	WITHOUT_CLASSIFICATION	0.9992699734651016	WITHOUT_CLASSIFICATION	7.300265348984231E-4	DESIGN
method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9990630164277389	WITHOUT_CLASSIFICATION	9.369835722610776E-4	DESIGN
load block from [] version of method	WITHOUT_CLASSIFICATION	0.998936225971891	WITHOUT_CLASSIFICATION	0.001063774028108977	DESIGN
normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9998785737673771	WITHOUT_CLASSIFICATION	1.2142623262301541E-4	DESIGN
declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.999919341014294	WITHOUT_CLASSIFICATION	8.065898570590984E-5	DESIGN
class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9847618682304123	WITHOUT_CLASSIFICATION	0.015238131769587724	DESIGN
load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9998303786264656	WITHOUT_CLASSIFICATION	1.69621373534304E-4	DESIGN
we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9963196395278	WITHOUT_CLASSIFICATION	0.0036803604722000483	DESIGN
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9949499300516373	WITHOUT_CLASSIFICATION	0.005050069948362742	DESIGN
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9949499300516373	WITHOUT_CLASSIFICATION	0.005050069948362742	DESIGN
load all arguments straight through	WITHOUT_CLASSIFICATION	0.9994101270440943	WITHOUT_CLASSIFICATION	5.898729559056491E-4	DESIGN
load all arguments straight through	WITHOUT_CLASSIFICATION	0.9994101270440943	WITHOUT_CLASSIFICATION	5.898729559056491E-4	DESIGN
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9895004297502487	WITHOUT_CLASSIFICATION	0.010499570249751225	DESIGN
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9895004297502487	WITHOUT_CLASSIFICATION	0.010499570249751225	DESIGN
store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999136979834996	WITHOUT_CLASSIFICATION	8.630201650033151E-5	DESIGN
if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9983313574909388	WITHOUT_CLASSIFICATION	0.00166864250906119	DESIGN
fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.8911023558273952	WITHOUT_CLASSIFICATION	0.10889764417260489	DESIGN
default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9994108423981533	WITHOUT_CLASSIFICATION	5.89157601846833E-4	DESIGN
store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.999435580099374	WITHOUT_CLASSIFICATION	5.644199006259919E-4	DESIGN
store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9992791462589675	WITHOUT_CLASSIFICATION	7.208537410325385E-4	DESIGN
in 1.8 mode, this will be a RubyArray containing the arguments in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9946414926083803	WITHOUT_CLASSIFICATION	0.005358507391619735	DESIGN
no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9996499483760257	WITHOUT_CLASSIFICATION	3.5005162397422205E-4	DESIGN
for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9843371987913433	WITHOUT_CLASSIFICATION	0.01566280120865665	DESIGN
set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9822073842088028	WITHOUT_CLASSIFICATION	0.017792615791197154	DESIGN
if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9987194289212624	WITHOUT_CLASSIFICATION	0.0012805710787375552	DESIGN
verify the class	WITHOUT_CLASSIFICATION	0.999162451981508	WITHOUT_CLASSIFICATION	8.375480184921047E-4	DESIGN
create dir if necessary	WITHOUT_CLASSIFICATION	0.9972117144377814	WITHOUT_CLASSIFICATION	0.002788285562218549	DESIGN
Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9997607494082023	WITHOUT_CLASSIFICATION	2.3925059179770683E-4	DESIGN
add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999949128564334	WITHOUT_CLASSIFICATION	5.087143566689504E-6	DESIGN
thread context	WITHOUT_CLASSIFICATION	0.9998352328384951	WITHOUT_CLASSIFICATION	1.647671615048937E-4	DESIGN
line number	WITHOUT_CLASSIFICATION	0.9995863529703201	WITHOUT_CLASSIFICATION	4.136470296799664E-4	DESIGN
invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9998160077115337	WITHOUT_CLASSIFICATION	1.8399228846628003E-4	DESIGN
load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9992973222856647	WITHOUT_CLASSIFICATION	7.02677714335292E-4	DESIGN
return last value from execution	WITHOUT_CLASSIFICATION	0.9998587012182409	WITHOUT_CLASSIFICATION	1.4129878175899444E-4	DESIGN
method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9990630164277389	WITHOUT_CLASSIFICATION	9.369835722610776E-4	DESIGN
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9991961606904587	WITHOUT_CLASSIFICATION	8.038393095412779E-4	DESIGN
block	WITHOUT_CLASSIFICATION	0.9996605627181319	WITHOUT_CLASSIFICATION	3.3943728186814335E-4	DESIGN
block	WITHOUT_CLASSIFICATION	0.9996605627181319	WITHOUT_CLASSIFICATION	3.3943728186814335E-4	DESIGN
we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9963196395278	WITHOUT_CLASSIFICATION	0.0036803604722000483	DESIGN
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9949499300516373	WITHOUT_CLASSIFICATION	0.005050069948362742	DESIGN
load all arguments straight through	WITHOUT_CLASSIFICATION	0.9994101270440943	WITHOUT_CLASSIFICATION	5.898729559056491E-4	DESIGN
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9895004297502487	WITHOUT_CLASSIFICATION	0.010499570249751225	DESIGN
add Script#run impl, used for running this script with a specified threadcontext and self root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9203920051085327	DESIGN	0.07960799489146728	WITHOUT_CLASSIFICATION
add main impl, used for detached or command-line execution of this script with a new runtime root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.66965136180271	WITHOUT_CLASSIFICATION	0.33034863819728993	DESIGN
construct static scope list of names	WITHOUT_CLASSIFICATION	0.9996454487913811	WITHOUT_CLASSIFICATION	3.54551208618965E-4	DESIGN
JRUBY-3014: make __FILE__ dynamically determined at load time, but we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9816774308558216	WITHOUT_CLASSIFICATION	0.01832256914417843	DESIGN
ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9980171564146934	WITHOUT_CLASSIFICATION	0.001982843585306705	DESIGN
ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9980171564146934	WITHOUT_CLASSIFICATION	0.001982843585306705	DESIGN
lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9985720754734863	WITHOUT_CLASSIFICATION	0.0014279245265138082	DESIGN
boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9997401982900447	WITHOUT_CLASSIFICATION	2.5980170995541254E-4	DESIGN
invoke static __file__	WITHOUT_CLASSIFICATION	0.9972668269972551	WITHOUT_CLASSIFICATION	0.0027331730027448935	DESIGN
exact arg list __file__	WITHOUT_CLASSIFICATION	0.9996588075685938	WITHOUT_CLASSIFICATION	3.411924314062394E-4	DESIGN
declare the field	WITHOUT_CLASSIFICATION	0.9994539993012561	WITHOUT_CLASSIFICATION	5.460006987439948E-4	DESIGN
declare the field	WITHOUT_CLASSIFICATION	0.9994539993012561	WITHOUT_CLASSIFICATION	5.460006987439948E-4	DESIGN
not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9981613603578291	WITHOUT_CLASSIFICATION	0.001838639642170865	DESIGN
normal closure	WITHOUT_CLASSIFICATION	0.9999601566508535	WITHOUT_CLASSIFICATION	3.9843349146528615E-5	DESIGN
end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999017095806193	WITHOUT_CLASSIFICATION	9.829041938059589E-5	DESIGN
we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9995377911728704	WITHOUT_CLASSIFICATION	4.622088271295856E-4	DESIGN
handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.999538040930244	WITHOUT_CLASSIFICATION	4.61959069756061E-4	DESIGN
jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999110221266497	WITHOUT_CLASSIFICATION	8.897787335019387E-5	DESIGN
Ruby name	WITHOUT_CLASSIFICATION	0.9993050367606428	WITHOUT_CLASSIFICATION	6.949632393572093E-4	DESIGN
Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9981631761142781	WITHOUT_CLASSIFICATION	0.0018368238857218726	DESIGN
Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9788973849052391	WITHOUT_CLASSIFICATION	0.021102615094760944	DESIGN
We need to ensure that the variable names generated here cannot conflict with ruby variable names! Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.999123601509293	WITHOUT_CLASSIFICATION	8.763984907069352E-4	DESIGN
Does this method define code? Default is yes -- which basically leads to pessimistic but safe optimizations But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9984319020453533	WITHOUT_CLASSIFICATION	0.0015680979546466899	DESIGN
Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9981822716985379	WITHOUT_CLASSIFICATION	0.0018177283014621794	DESIGN
NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner with outer loops encountered before inner loops, and inner loops finished before outer ones. So, we can keep track of loops in a loop stack which keeps track of loops as they are encountered. This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9977118397202867	WITHOUT_CLASSIFICATION	0.0022881602797133424	DESIGN
Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.996220578118024	WITHOUT_CLASSIFICATION	0.0037794218819760463	DESIGN
Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9995259353466857	WITHOUT_CLASSIFICATION	4.740646533143448E-4	DESIGN
_lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9983566051884214	WITHOUT_CLASSIFICATION	0.001643394811578541	DESIGN
List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9992594957198853	WITHOUT_CLASSIFICATION	7.405042801147428E-4	DESIGN
Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9970003616864396	WITHOUT_CLASSIFICATION	0.0029996383135604886	DESIGN
Insert nesting level to ensure variable names don't conflict across nested scopes! i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9510676904932674	WITHOUT_CLASSIFICATION	0.04893230950673256	DESIGN
get "self"	WITHOUT_CLASSIFICATION	0.999590928963598	WITHOUT_CLASSIFICATION	4.090710364018709E-4	DESIGN
variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9909915635854163	WITHOUT_CLASSIFICATION	0.0090084364145837	DESIGN
inline script	WITHOUT_CLASSIFICATION	0.9933038413050352	WITHOUT_CLASSIFICATION	0.006696158694964704	DESIGN
inline script	WITHOUT_CLASSIFICATION	0.9933038413050352	WITHOUT_CLASSIFICATION	0.006696158694964704	DESIGN
This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9967200471515042	WITHOUT_CLASSIFICATION	0.003279952848495737	DESIGN
Build the class body!	WITHOUT_CLASSIFICATION	0.9985045056231353	WITHOUT_CLASSIFICATION	0.0014954943768646788	DESIGN
unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999848477760507	WITHOUT_CLASSIFICATION	1.515222394938861E-5	DESIGN
unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999848477760507	WITHOUT_CLASSIFICATION	1.515222394938861E-5	DESIGN
SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9916502332302326	DESIGN	0.008349766769767442	WITHOUT_CLASSIFICATION
Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999118378636492	WITHOUT_CLASSIFICATION	8.816213635084693E-5	DESIGN
done done done done	WITHOUT_CLASSIFICATION	0.9994166774611608	WITHOUT_CLASSIFICATION	5.833225388392307E-4	DESIGN
NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.995750347631629	WITHOUT_CLASSIFICATION	0.004249652368371082	DESIGN
NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.995750347631629	WITHOUT_CLASSIFICATION	0.004249652368371082	DESIGN
This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9968958506808079	WITHOUT_CLASSIFICATION	0.0031041493191921996	DESIGN
build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999685590771346	WITHOUT_CLASSIFICATION	3.14409228655185E-5	DESIGN
build first node only and return false	WITHOUT_CLASSIFICATION	0.9999945896193296	WITHOUT_CLASSIFICATION	5.410380670342011E-6	DESIGN
Value of the last expression in the block	WITHOUT_CLASSIFICATION	0.9999367590158263	WITHOUT_CLASSIFICATION	6.324098417367695E-5	DESIGN
If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9997913822655543	WITHOUT_CLASSIFICATION	2.0861773444568035E-4	DESIGN
get the incoming case value	WITHOUT_CLASSIFICATION	0.9999585955535	WITHOUT_CLASSIFICATION	4.140444650001956E-5	DESIGN
the CASE instruction	WITHOUT_CLASSIFICATION	0.9999251324106005	WITHOUT_CLASSIFICATION	7.486758939940342E-5	DESIGN
lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.999077671142477	WITHOUT_CLASSIFICATION	9.223288575229876E-4	DESIGN
build each "when"	WITHOUT_CLASSIFICATION	0.9998126633247513	WITHOUT_CLASSIFICATION	1.8733667524869571E-4	DESIGN
multiple conditions for when	WITHOUT_CLASSIFICATION	0.9910658380237181	WITHOUT_CLASSIFICATION	0.008934161976281996	DESIGN
build "else" if it exists	WITHOUT_CLASSIFICATION	0.9998228357549829	WITHOUT_CLASSIFICATION	1.7716424501716002E-4	DESIGN
now emit bodies	WITHOUT_CLASSIFICATION	0.9995012125668836	WITHOUT_CLASSIFICATION	4.987874331163696E-4	DESIGN
close it out	WITHOUT_CLASSIFICATION	0.9999926666559663	WITHOUT_CLASSIFICATION	7.333344033754213E-6	DESIGN
By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9995859575847701	WITHOUT_CLASSIFICATION	4.1404241522999686E-4	DESIGN
Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9911027713579094	WITHOUT_CLASSIFICATION	0.008897228642090627	DESIGN
Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.991842290815541	WITHOUT_CLASSIFICATION	0.008157709184458975	DESIGN
1. Load the module first (lhs of node) 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9996838539274734	WITHOUT_CLASSIFICATION	3.161460725265129E-4	DESIGN
Build IR for args	WITHOUT_CLASSIFICATION	0.9997891506429467	WITHOUT_CLASSIFICATION	2.108493570532927E-4	DESIGN
Build IR for body	WITHOUT_CLASSIFICATION	0.9998883687144372	WITHOUT_CLASSIFICATION	1.1163128556283904E-4	DESIGN
if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9996409427644529	WITHOUT_CLASSIFICATION	3.590572355470279E-4	DESIGN
Instance method	WITHOUT_CLASSIFICATION	0.9999912689468784	WITHOUT_CLASSIFICATION	8.73105312157649E-6	DESIGN
Class method	WITHOUT_CLASSIFICATION	0.9996637818433314	WITHOUT_CLASSIFICATION	3.362181566685972E-4	DESIGN
Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9990370205803708	WITHOUT_CLASSIFICATION	9.629794196292717E-4	DESIGN
Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9976351534529051	WITHOUT_CLASSIFICATION	0.002364846547094974	DESIGN
Now for the rest	WITHOUT_CLASSIFICATION	0.9999359252669986	WITHOUT_CLASSIFICATION	6.407473300138662E-5	DESIGN
Jump to 'l' if this arg is not null. If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999939795725253	WITHOUT_CLASSIFICATION	6.020427474564241E-6	DESIGN
This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9997172280753703	WITHOUT_CLASSIFICATION	2.8277192462969304E-4	DESIGN
Create a new closure context	WITHOUT_CLASSIFICATION	0.9998544104229734	WITHOUT_CLASSIFICATION	1.4558957702654618E-4	DESIGN
Build args	WITHOUT_CLASSIFICATION	0.9997270044859367	WITHOUT_CLASSIFICATION	2.7299551406326363E-4	DESIGN
Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999968054454491	WITHOUT_CLASSIFICATION	3.1945545509373296E-6	DESIGN
Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9997639547337479	WITHOUT_CLASSIFICATION	2.3604526625211621E-4	DESIGN
By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9995859575847701	WITHOUT_CLASSIFICATION	4.1404241522999686E-4	DESIGN
Create a new closure context	WITHOUT_CLASSIFICATION	0.9998544104229734	WITHOUT_CLASSIFICATION	1.4558957702654618E-4	DESIGN
Build args	WITHOUT_CLASSIFICATION	0.9997270044859367	WITHOUT_CLASSIFICATION	2.7299551406326363E-4	DESIGN
Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9997639547337479	WITHOUT_CLASSIFICATION	2.3604526625211621E-4	DESIGN
Get the container for this new module	WITHOUT_CLASSIFICATION	0.9995676392344035	WITHOUT_CLASSIFICATION	4.3236076559641923E-4	DESIGN
Build the new module	WITHOUT_CLASSIFICATION	0.9994125501968147	WITHOUT_CLASSIFICATION	5.87449803185261E-4	DESIGN
Build the module body	WITHOUT_CLASSIFICATION	0.9994653635401296	WITHOUT_CLASSIFICATION	5.346364598703263E-4	DESIGN
First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999445990169968	WITHOUT_CLASSIFICATION	5.540098300321256E-5	DESIGN
rest of the argument array!	WITHOUT_CLASSIFICATION	0.997222214158157	WITHOUT_CLASSIFICATION	0.002777785841842894	DESIGN
If a closure, the next is simply a return from the closure! If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.999168367520146	WITHOUT_CLASSIFICATION	8.316324798538783E-4	DESIGN
get attr	WITHOUT_CLASSIFICATION	0.9993181372446168	WITHOUT_CLASSIFICATION	6.81862755383231E-4	DESIGN
call operator	WITHOUT_CLASSIFICATION	0.9990814734776832	WITHOUT_CLASSIFICATION	9.185265223167828E-4	DESIGN
set attr	WITHOUT_CLASSIFICATION	0.998393467764338	WITHOUT_CLASSIFICATION	0.00160653223566193	DESIGN
Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> x = -- build(x) should return a variable! -- f = is_true(x) beq(f, false, L) x = -- build(y) -- L:	WITHOUT_CLASSIFICATION	0.9960705100274072	WITHOUT_CLASSIFICATION	0.003929489972592748	DESIGN
This does the assignment!	WITHOUT_CLASSIFICATION	0.9972755837336995	WITHOUT_CLASSIFICATION	0.002724416266300516	DESIGN
This does the assignment!	WITHOUT_CLASSIFICATION	0.9972755837336995	WITHOUT_CLASSIFICATION	0.002724416266300516	DESIGN
if v1 is defined and true, we are done!	WITHOUT_CLASSIFICATION	0.9995664815245715	WITHOUT_CLASSIFICATION	4.3351847542846714E-4	DESIGN
build first node only and return true	WITHOUT_CLASSIFICATION	0.9999884075889249	WITHOUT_CLASSIFICATION	1.1592411074922164E-5	DESIGN
build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.99999424443335	WITHOUT_CLASSIFICATION	5.755566649943546E-6	DESIGN
Top-level script!	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.999995794574721	WITHOUT_CLASSIFICATION	4.20542527901873E-6	DESIGN
----------- Private Interface ------------	WITHOUT_CLASSIFICATION	0.9997449648878522	WITHOUT_CLASSIFICATION	2.550351121477458E-4	DESIGN
What handles warnings	WITHOUT_CLASSIFICATION	0.9997653174153762	WITHOUT_CLASSIFICATION	2.3468258462386462E-4	DESIGN
Tries to load at compile-time the constant referred to by 'constRef'. This might be possible if the constant is defined and is not a forward reference to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9475023561463692	WITHOUT_CLASSIFICATION	0.05249764385363068	DESIGN
For closures, a redo is a jump to the beginning of the closure For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999941487406744	WITHOUT_CLASSIFICATION	5.851259325624681E-6	DESIGN
The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.999359208117607	WITHOUT_CLASSIFICATION	6.40791882392991E-4	DESIGN
Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9974894340564	WITHOUT_CLASSIFICATION	0.0025105659436000247	DESIGN
Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9832642021875946	WITHOUT_CLASSIFICATION	0.016735797812405466	DESIGN
------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999645351897438	WITHOUT_CLASSIFICATION	3.5464810256112975E-5	DESIGN
value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999204847729241	WITHOUT_CLASSIFICATION	7.951522707598284E-5	DESIGN
alu operations	WITHOUT_CLASSIFICATION	0.9998442575609183	WITHOUT_CLASSIFICATION	1.5574243908169402E-4	DESIGN
method handle, arg receive, return value, and call instructions	WITHOUT_CLASSIFICATION	0.9996626517096989	WITHOUT_CLASSIFICATION	3.373482903010476E-4	DESIGN
closure instructions	WITHOUT_CLASSIFICATION	0.9998802374645251	WITHOUT_CLASSIFICATION	1.1976253547483007E-4	DESIGN
eval instructions	WITHOUT_CLASSIFICATION	0.9995694968617639	WITHOUT_CLASSIFICATION	4.3050313823604793E-4	DESIGN
def instructions	WITHOUT_CLASSIFICATION	0.9994799295018232	WITHOUT_CLASSIFICATION	5.200704981768585E-4	DESIGN
exception instructions	WITHOUT_CLASSIFICATION	0.9986963491968017	WITHOUT_CLASSIFICATION	0.0013036508031982665	DESIGN
Loads	WITHOUT_CLASSIFICATION	0.9993424728094396	WITHOUT_CLASSIFICATION	6.575271905605007E-4	DESIGN
Stores	WITHOUT_CLASSIFICATION	0.9993589104761125	WITHOUT_CLASSIFICATION	6.410895238876056E-4	DESIGN
jump and branch operations	WITHOUT_CLASSIFICATION	0.9998908554776796	WITHOUT_CLASSIFICATION	1.0914452232038308E-4	DESIGN
others	WITHOUT_CLASSIFICATION	0.994652105024157	WITHOUT_CLASSIFICATION	0.0053478949758429505	DESIGN
a case/when branch	WITHOUT_CLASSIFICATION	0.9994747732647634	WITHOUT_CLASSIFICATION	5.252267352364945E-4	DESIGN
optimization guards	WITHOUT_CLASSIFICATION	0.9995018697454183	WITHOUT_CLASSIFICATION	4.981302545815943E-4	DESIGN
By default, call instructions cannot be deleted even if their results aren't used by anyone unless we know more about what the call is, what it does, etc. Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.6835430239608766	WITHOUT_CLASSIFICATION	0.3164569760391233	DESIGN
Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9913425368495471	WITHOUT_CLASSIFICATION	0.008657463150452982	DESIGN
scripts	WITHOUT_CLASSIFICATION	0.9995341008847324	WITHOUT_CLASSIFICATION	4.658991152676338E-4	DESIGN
scripts and modules	WITHOUT_CLASSIFICATION	0.9998365085595637	WITHOUT_CLASSIFICATION	1.6349144043624253E-4	DESIGN
scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9994851575484494	WITHOUT_CLASSIFICATION	5.148424515506472E-4	DESIGN
methods and closures	WITHOUT_CLASSIFICATION	0.9994982725328084	WITHOUT_CLASSIFICATION	5.017274671915016E-4	DESIGN
create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9996392657170967	WITHOUT_CLASSIFICATION	3.607342829032284E-4	DESIGN
create a new temporary variable	WITHOUT_CLASSIFICATION	0.966793347210141	WITHOUT_CLASSIFICATION	0.03320665278985909	DESIGN
Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999766317194597	WITHOUT_CLASSIFICATION	2.3368280540284875E-5	DESIGN
Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999543921098354	WITHOUT_CLASSIFICATION	4.560789016460025E-5	DESIGN
Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999941221392975	WITHOUT_CLASSIFICATION	5.8778607024982596E-6	DESIGN
While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9948867790596015	WITHOUT_CLASSIFICATION	0.00511322094039845	DESIGN
Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999885029183703	WITHOUT_CLASSIFICATION	1.1497081629762149E-5	DESIGN
Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9998793788224655	WITHOUT_CLASSIFICATION	1.2062117753455994E-4	DESIGN
Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9996777510639616	WITHOUT_CLASSIFICATION	3.2224893603838956E-4	DESIGN
Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9719919962193218	WITHOUT_CLASSIFICATION	0.02800800378067827	DESIGN
Readline	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999493854588111	WITHOUT_CLASSIFICATION	5.061454118899424E-5	DESIGN
Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.998673362945956	WITHOUT_CLASSIFICATION	0.0013266370540440007	DESIGN
If 'r' is not a constant, it could actually be a compound value! Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9843910461729999	WITHOUT_CLASSIFICATION	0.015608953827000246	DESIGN
Check if we can optimize this call based on the receiving method and receiver type Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.8826981782195872	DESIGN	0.11730182178041275	WITHOUT_CLASSIFICATION
If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9880882744018468	WITHOUT_CLASSIFICATION	0.01191172559815319	DESIGN
If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999613942250333	WITHOUT_CLASSIFICATION	3.8605774966695404E-5	DESIGN
----------- Public abstract methods ----------	WITHOUT_CLASSIFICATION	0.9987380372197727	WITHOUT_CLASSIFICATION	0.001261962780227296	DESIGN
----------- Public methods with a default implementation ----------	WITHOUT_CLASSIFICATION	0.9993875676731884	WITHOUT_CLASSIFICATION	6.124323268116105E-4	DESIGN
Compute meet over all "sources" and compute "destination" basic blocks that should then be processed. sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9940117908326004	WITHOUT_CLASSIFICATION	0.005988209167399539	DESIGN
If the solution has changed, add "dsts" to the work list. No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9923588895907204	WITHOUT_CLASSIFICATION	0.007641110409279538	DESIGN
--------- Protected fields/methods below ---------	WITHOUT_CLASSIFICATION	0.9995610838616199	WITHOUT_CLASSIFICATION	4.3891613838006183E-4	DESIGN
Dataflow problem with which this node is associated CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.99250419545012	WITHOUT_CLASSIFICATION	0.007495804549880066	DESIGN
-------------- Public fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9997157022648568	WITHOUT_CLASSIFICATION	2.842977351431718E-4	DESIGN
------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9998460340037474	WITHOUT_CLASSIFICATION	1.5396599625264494E-4	DESIGN
------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.999880666804051	WITHOUT_CLASSIFICATION	1.1933319594907296E-4	DESIGN
Compute Meet Over All Paths solution for this dataflow problem on the input CFG. This implements a standard worklist algorithm.	WITHOUT_CLASSIFICATION	0.6253641103911433	WITHOUT_CLASSIFICATION	0.37463588960885674	DESIGN
Individual analyses should override this	WITHOUT_CLASSIFICATION	0.9907785683150333	WITHOUT_CLASSIFICATION	0.009221431684966638	DESIGN
Individual analyses should override this	WITHOUT_CLASSIFICATION	0.9907785683150333	WITHOUT_CLASSIFICATION	0.009221431684966638	DESIGN
-------------- Packaged/protected fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9997043149440865	WITHOUT_CLASSIFICATION	2.9568505591348295E-4	DESIGN
We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9993240492356464	WITHOUT_CLASSIFICATION	6.759507643536057E-4	DESIGN
-------------- Protected fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9997233207933814	WITHOUT_CLASSIFICATION	2.7667920661852296E-4	DESIGN
-------------- Private fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9998605613929182	WITHOUT_CLASSIFICATION	1.394386070817129E-4	DESIGN
Initialize all flow graph nodes	WITHOUT_CLASSIFICATION	0.9999517577279857	WITHOUT_CLASSIFICATION	4.8242272014216805E-5	DESIGN
Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses	WITHOUT_CLASSIFICATION	0.6727669833681483	WITHOUT_CLASSIFICATION	0.3272330166318517	DESIGN
PUBLIC INTERFACE	WITHOUT_CLASSIFICATION	0.9995006498851802	WITHOUT_CLASSIFICATION	4.993501148198374E-4	DESIGN
Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9884567265720975	WITHOUT_CLASSIFICATION	0.011543273427902553	DESIGN
start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.999020303120117	WITHOUT_CLASSIFICATION	9.796968798829247E-4	DESIGN
switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.99843969865666	WITHOUT_CLASSIFICATION	0.0015603013433399945	DESIGN
----------- Public Interface ------------	WITHOUT_CLASSIFICATION	0.9994800780152179	WITHOUT_CLASSIFICATION	5.199219847821037E-4	DESIGN
class or module	WITHOUT_CLASSIFICATION	0.9984604778100199	WITHOUT_CLASSIFICATION	0.0015395221899801913	DESIGN
OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9996718355226126	WITHOUT_CLASSIFICATION	3.2816447738733597E-4	DESIGN
Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9989623983435	WITHOUT_CLASSIFICATION	0.0010376016564999956	DESIGN
v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9998741692820615	WITHOUT_CLASSIFICATION	1.258307179383975E-4	DESIGN
IN is the same!	WITHOUT_CLASSIFICATION	0.9993082479609633	WITHOUT_CLASSIFICATION	6.917520390367434E-4	DESIGN
IN changed!	WITHOUT_CLASSIFICATION	0.9990926232102112	WITHOUT_CLASSIFICATION	9.073767897887567E-4	DESIGN
---------- Protected / package fields, methods ---------	WITHOUT_CLASSIFICATION	0.9984986425919373	WITHOUT_CLASSIFICATION	0.0015013574080627395	DESIGN
If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9993764365685002	WITHOUT_CLASSIFICATION	6.235634314997407E-4	DESIGN
Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9830273118830715	WITHOUT_CLASSIFICATION	0.016972688116928526	DESIGN
---------- Private fields, methods ---------	WITHOUT_CLASSIFICATION	0.9997231966510622	WITHOUT_CLASSIFICATION	2.768033489378204E-4	DESIGN
Variables live at entry of this node Variables live at exit of node Temporary set of live variables Size of the "_in" and "_out" bit sets	WITHOUT_CLASSIFICATION	0.7044852570438463	DESIGN	0.29551474295615365	WITHOUT_CLASSIFICATION
Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9885075548714245	WITHOUT_CLASSIFICATION	0.011492445128575415	DESIGN
Does this instruction have side effects as a result of its operation This information is used in optimization phases to impact dead code elimination and other optimization passes	WITHOUT_CLASSIFICATION	0.9988960981624556	DESIGN	0.001103901837544361	WITHOUT_CLASSIFICATION
--------- "Abstract"/"please-override" methods ---------	WITHOUT_CLASSIFICATION	0.9992131736634154	WITHOUT_CLASSIFICATION	7.868263365844557E-4	DESIGN
Array of all operands for this instruction	WITHOUT_CLASSIFICATION	0.9983175856950514	WITHOUT_CLASSIFICATION	0.0016824143049486927	DESIGN
List of all variables used by all operands of this instruction	WITHOUT_CLASSIFICATION	0.971992216995901	WITHOUT_CLASSIFICATION	0.028007783004099004	DESIGN
This method takes as input a map of operands to their values, and outputs If the value map provides a value for any of the instruction's operands this method is expected to replace the original operands with the simplified values. It is not required that it do so -- code correctness is not compromised by failure to simplify	WITHOUT_CLASSIFICATION	0.9986558432456334	WITHOUT_CLASSIFICATION	0.00134415675436666	DESIGN
By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9998854270820818	WITHOUT_CLASSIFICATION	1.1457291791805011E-4	DESIGN
Can this call lead to ruby code getting modified? If we don't know what method we are calling, we assume it can (pessimistic, but safe!) If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.6509123095980391	WITHOUT_CLASSIFICATION	0.3490876904019608	DESIGN
By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999441515402312	WITHOUT_CLASSIFICATION	5.5848459768867805E-5	DESIGN
If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9986139388235817	WITHOUT_CLASSIFICATION	0.0013860611764183266	DESIGN
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.9527118573977444	WITHOUT_CLASSIFICATION	0.0472881426022556	DESIGN
Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999547868932337	WITHOUT_CLASSIFICATION	4.521310676631217E-5	DESIGN
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.9527118573977444	WITHOUT_CLASSIFICATION	0.0472881426022556	DESIGN
You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9996427295689048	WITHOUT_CLASSIFICATION	3.572704310952442E-4	DESIGN
If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9998365164429542	WITHOUT_CLASSIFICATION	1.6348355704576517E-4	DESIGN
If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9998365164429542	WITHOUT_CLASSIFICATION	1.6348355704576517E-4	DESIGN
If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9998365164429542	WITHOUT_CLASSIFICATION	1.6348355704576517E-4	DESIGN
For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999985915587177	WITHOUT_CLASSIFICATION	1.4084412823307759E-6	DESIGN
For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999985915587177	WITHOUT_CLASSIFICATION	1.4084412823307759E-6	DESIGN
The operand that this attribute targets DEFERRED AttributeValue _val; Attribute value	WITHOUT_CLASSIFICATION	0.9999866706209429	WITHOUT_CLASSIFICATION	1.3329379057098404E-5	DESIGN
Arrays, Ranges, etc. are compound values Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9996132030466438	WITHOUT_CLASSIFICATION	3.8679695335620893E-4	DESIGN
Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999682965012144	WITHOUT_CLASSIFICATION	3.1703498785509665E-5	DESIGN
The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.6681194931122589	DESIGN	0.331880506887741	WITHOUT_CLASSIFICATION
Nothing to do by default	WITHOUT_CLASSIFICATION	0.9998988923361571	WITHOUT_CLASSIFICATION	1.0110766384278275E-4	DESIGN
Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999646614109438	WITHOUT_CLASSIFICATION	3.533858905615903E-5	DESIGN
Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9997214154947621	WITHOUT_CLASSIFICATION	2.7858450523791977E-4	DESIGN
ignore	WITHOUT_CLASSIFICATION	0.9997063092870742	WITHOUT_CLASSIFICATION	2.9369071292581044E-4	DESIGN
Scope (method/closure) to which this cfg belongs Entry BB -- dummy Exit BB -- dummy The actual graph Next available basic block id	WITHOUT_CLASSIFICATION	0.9998839373190891	WITHOUT_CLASSIFICATION	1.1606268091081501E-4	DESIGN
Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9996616990378608	WITHOUT_CLASSIFICATION	3.383009621391557E-4	DESIGN
Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9993852820680704	WITHOUT_CLASSIFICATION	6.147179319295812E-4	DESIGN
currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9995207371246896	WITHOUT_CLASSIFICATION	4.792628753104881E-4	DESIGN
Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9996548590567349	WITHOUT_CLASSIFICATION	3.4514094326510607E-4	DESIGN
root-level logic	WITHOUT_CLASSIFICATION	0.9993813599776736	WITHOUT_CLASSIFICATION	6.186400223264958E-4	DESIGN
root-level methods	WITHOUT_CLASSIFICATION	0.9994539534479673	WITHOUT_CLASSIFICATION	5.46046552032758E-4	DESIGN
root-level classes	WITHOUT_CLASSIFICATION	0.9998097472410681	WITHOUT_CLASSIFICATION	1.902527589319188E-4	DESIGN
case 4: signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); break; case 5: signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); break;	WITHOUT_CLASSIFICATION	0.9999657157566731	WITHOUT_CLASSIFICATION	3.428424332681307E-5	DESIGN
load receiver	WITHOUT_CLASSIFICATION	0.9995015154555297	WITHOUT_CLASSIFICATION	4.984845444703342E-4	DESIGN
load receiver	WITHOUT_CLASSIFICATION	0.9995015154555297	WITHOUT_CLASSIFICATION	4.984845444703342E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.999693976751061	WITHOUT_CLASSIFICATION	3.0602324893904987E-4	DESIGN
load arguments	WITHOUT_CLASSIFICATION	0.9993717285305842	WITHOUT_CLASSIFICATION	6.282714694157912E-4	DESIGN
load arguments	WITHOUT_CLASSIFICATION	0.9993717285305842	WITHOUT_CLASSIFICATION	6.282714694157912E-4	DESIGN
case 4: case 5:	WITHOUT_CLASSIFICATION	0.9999113229664981	WITHOUT_CLASSIFICATION	8.867703350193233E-5	DESIGN
Object[] args	WITHOUT_CLASSIFICATION	0.999641974289667	WITHOUT_CLASSIFICATION	3.580257103330796E-4	DESIGN
load handle	WITHOUT_CLASSIFICATION	0.9974195755670533	WITHOUT_CLASSIFICATION	0.0025804244329466768	DESIGN
args array	WITHOUT_CLASSIFICATION	0.9997452706773711	WITHOUT_CLASSIFICATION	2.5472932262899127E-4	DESIGN
i'th argument	WITHOUT_CLASSIFICATION	0.9996820426241446	WITHOUT_CLASSIFICATION	3.1795737585539233E-4	DESIGN
invoke specific arity version	WITHOUT_CLASSIFICATION	0.999683276310507	WITHOUT_CLASSIFICATION	3.167236894930043E-4	DESIGN
Object arg0	WITHOUT_CLASSIFICATION	0.9995565947336885	WITHOUT_CLASSIFICATION	4.434052663114333E-4	DESIGN
useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.999871192298629	WITHOUT_CLASSIFICATION	1.2880770137100935E-4	DESIGN
No editing before startPos	WITHOUT_CLASSIFICATION	0.9999441505372723	WITHOUT_CLASSIFICATION	5.584946272779502E-5	DESIGN
no silly ticks!	WITHOUT_CLASSIFICATION	0.9974493533329846	WITHOUT_CLASSIFICATION	0.002550646667015421	DESIGN
no candidates? Fail.	WITHOUT_CLASSIFICATION	0.999652091144846	WITHOUT_CLASSIFICATION	3.4790885515398285E-4	DESIGN
at end	WITHOUT_CLASSIFICATION	0.9987244388505256	WITHOUT_CLASSIFICATION	0.001275561149474416	DESIGN
undo check	WITHOUT_CLASSIFICATION	0.9999125122470881	WITHOUT_CLASSIFICATION	8.748775291197112E-5	DESIGN
Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9993962241236285	WITHOUT_CLASSIFICATION	6.03775876371481E-4	DESIGN
ignore	WITHOUT_CLASSIFICATION	0.9997063092870742	WITHOUT_CLASSIFICATION	2.9369071292581044E-4	DESIGN
\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
Assign the values.	WITHOUT_CLASSIFICATION	0.9995353402895933	WITHOUT_CLASSIFICATION	4.646597104065971E-4	DESIGN
no check for ''	WITHOUT_CLASSIFICATION	0.9998709965421327	WITHOUT_CLASSIFICATION	1.2900345786733835E-4	DESIGN
no check for ''	WITHOUT_CLASSIFICATION	0.9998709965421327	WITHOUT_CLASSIFICATION	1.2900345786733835E-4	DESIGN
Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9990361728281607	WITHOUT_CLASSIFICATION	9.638271718392711E-4	DESIGN
this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9922609751803813	WITHOUT_CLASSIFICATION	0.007739024819618679	DESIGN
no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9996927272557417	WITHOUT_CLASSIFICATION	3.072727442584257E-4	DESIGN
restore position	WITHOUT_CLASSIFICATION	0.9998222641629436	WITHOUT_CLASSIFICATION	1.777358370563383E-4	DESIGN
Something like cvar_cbase() from eval.c, factored out for the benefit of all the classvar-related node evaluations	WITHOUT_CLASSIFICATION	0.9997468130558308	WITHOUT_CLASSIFICATION	2.531869441692165E-4	DESIGN
Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999678382342632	WITHOUT_CLASSIFICATION	3.2161765736764835E-5	DESIGN
JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999869670810277	WITHOUT_CLASSIFICATION	1.3032918972297573E-5	DESIGN
MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9986799913798646	WITHOUT_CLASSIFICATION	0.0013200086201353774	DESIGN
We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999193703067407	WITHOUT_CLASSIFICATION	8.062969325925678E-5	DESIGN
JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999161820454809	WITHOUT_CLASSIFICATION	8.381795451914024E-5	DESIGN
not overridden, let's go	WITHOUT_CLASSIFICATION	0.9997260721357283	WITHOUT_CLASSIFICATION	2.739278642716511E-4	DESIGN
Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8()	WITHOUT_CLASSIFICATION	0.999306491315713	WITHOUT_CLASSIFICATION	6.935086842869531E-4	DESIGN
FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.6061358643503265	WITHOUT_CLASSIFICATION	0.39386413564967343	DESIGN
Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9986974072017091	WITHOUT_CLASSIFICATION	0.0013025927982909975	DESIGN
clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9998974554516125	WITHOUT_CLASSIFICATION	1.0254454838744826E-4	DESIGN
These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.5949976080711677	WITHOUT_CLASSIFICATION	0.40500239192883225	DESIGN
Timeout module methods	WITHOUT_CLASSIFICATION	0.996551984368509	WITHOUT_CLASSIFICATION	0.003448015631490909	DESIGN
Toplevel defines	WITHOUT_CLASSIFICATION	0.999467473182261	WITHOUT_CLASSIFICATION	5.325268177390484E-4	DESIGN
No seconds, just yield	WITHOUT_CLASSIFICATION	0.9997132473830942	WITHOUT_CLASSIFICATION	2.867526169058477E-4	DESIGN
No timeout in critical section	WITHOUT_CLASSIFICATION	0.9991246479914665	WITHOUT_CLASSIFICATION	8.75352008533399E-4	DESIGN
if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9998576489654981	WITHOUT_CLASSIFICATION	1.423510345018162E-4	DESIGN
and we were given a specific exception	WITHOUT_CLASSIFICATION	0.998204092187702	WITHOUT_CLASSIFICATION	0.001795907812298046	DESIGN
otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9996168520245945	WITHOUT_CLASSIFICATION	3.8314797540546616E-4	DESIGN
Remove the Executor task now, to avoid cancelled tasks accumulating until an Executor thread can schedule and remove them	WITHOUT_CLASSIFICATION	0.9920717000165742	WITHOUT_CLASSIFICATION	0.007928299983425837	DESIGN
If the task was scheduled, wait for it to finish before polling for the exception it would have thrown.	WITHOUT_CLASSIFICATION	0.9999464212122523	WITHOUT_CLASSIFICATION	5.357878774782072E-5	DESIGN
NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9988262199975204	WITHOUT_CLASSIFICATION	0.0011737800024795742	DESIGN
When a length is given, read_string acts like get_bytes	WITHOUT_CLASSIFICATION	0.9874480074038989	WITHOUT_CLASSIFICATION	0.012551992596100951	DESIGN
Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9975372087058848	WITHOUT_CLASSIFICATION	0.002462791294115257	DESIGN
ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9887457235599243	WITHOUT_CLASSIFICATION	0.011254276440075662	DESIGN
If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9994947226928946	WITHOUT_CLASSIFICATION	5.052773071053115E-4	DESIGN
This variant of newStruct is called from StructLayoutBuilder	WITHOUT_CLASSIFICATION	0.9981569839910042	WITHOUT_CLASSIFICATION	0.0018430160089958644	DESIGN
This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999347964924266	WITHOUT_CLASSIFICATION	6.52035075734019E-5	DESIGN
Windows is LLP64	WITHOUT_CLASSIFICATION	0.9893425953374779	WITHOUT_CLASSIFICATION	0.010657404662522081	DESIGN
Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9979746981431682	WITHOUT_CLASSIFICATION	0.0020253018568318773	DESIGN
Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.999983444568852	WITHOUT_CLASSIFICATION	1.655543114794767E-5	DESIGN
$blah	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9975372087058848	WITHOUT_CLASSIFICATION	0.002462791294115257	DESIGN
A specific version was requested - use as is for search	WITHOUT_CLASSIFICATION	0.999805800744715	WITHOUT_CLASSIFICATION	1.9419925528493776E-4	DESIGN
Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.999983444568852	WITHOUT_CLASSIFICATION	1.655543114794767E-5	DESIGN
Keep a reference to the temporary memory in the cache so it does not get freed by the GC until the struct is freed	WITHOUT_CLASSIFICATION	0.9991860671152953	WITHOUT_CLASSIFICATION	8.139328847046167E-4	DESIGN
Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9997660455450605	WITHOUT_CLASSIFICATION	2.339544549394159E-4	DESIGN
Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9998873016252852	WITHOUT_CLASSIFICATION	1.1269837471476144E-4	DESIGN
Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9994323039555907	WITHOUT_CLASSIFICATION	5.676960444092327E-4	DESIGN
case FLOAT:	WITHOUT_CLASSIFICATION	0.9999109621743094	WITHOUT_CLASSIFICATION	8.903782569065944E-5	DESIGN
keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9996312227760707	WITHOUT_CLASSIFICATION	3.6877722392918524E-4	DESIGN
keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9996312227760707	WITHOUT_CLASSIFICATION	3.6877722392918524E-4	DESIGN
No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9999335594194086	WITHOUT_CLASSIFICATION	6.644058059134157E-5	DESIGN
Wire up Function#call(args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9986700441230638	WITHOUT_CLASSIFICATION	0.0013299558769362195	DESIGN
Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999632104241675	WITHOUT_CLASSIFICATION	3.67895758325588E-5	DESIGN
Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999632104241675	WITHOUT_CLASSIFICATION	3.67895758325588E-5	DESIGN
If there is exactly _one_ callback argument to the function, then a block can be given and automatically subsituted for the callback parameter.	WITHOUT_CLASSIFICATION	0.9999485790818294	WITHOUT_CLASSIFICATION	5.142091817051259E-5	DESIGN
------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9995355168053675	WITHOUT_CLASSIFICATION	4.6448319463261565E-4	DESIGN
AF_INET	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
AF_INET	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
line 321	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
Set up for potentially fast-int operations	WITHOUT_CLASSIFICATION	0.9999335136591824	WITHOUT_CLASSIFICATION	6.648634081758723E-5	DESIGN
Hook up the MemoryPointer class if its not already there	WITHOUT_CLASSIFICATION	0.9996579820483565	WITHOUT_CLASSIFICATION	3.4201795164346327E-4	DESIGN
This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9535766617017172	WITHOUT_CLASSIFICATION	0.04642333829828283	DESIGN
no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9780592817365978	WITHOUT_CLASSIFICATION	0.02194071826340226	DESIGN
Sockaddr_un has different structure on different platforms. See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9738638731000547	WITHOUT_CLASSIFICATION	0.026136126899945315	DESIGN
There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999564472051982	WITHOUT_CLASSIFICATION	4.355279480183612E-5	DESIGN
RubyIPSocket	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9998606230390054	WITHOUT_CLASSIFICATION	1.3937696099470978E-4	DESIGN
host and port given	WITHOUT_CLASSIFICATION	0.9989424564347312	WITHOUT_CLASSIFICATION	0.0010575435652687751	DESIGN
RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9998226683058855	WITHOUT_CLASSIFICATION	1.773316941144182E-4	DESIGN
make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9997662605408986	WITHOUT_CLASSIFICATION	2.3373945910137677E-4	DESIGN
continue with normal initialization	WITHOUT_CLASSIFICATION	0.9998808557370896	WITHOUT_CLASSIFICATION	1.191442629104255E-4	DESIGN
recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9918376968537204	WITHOUT_CLASSIFICATION	0.008162303146279698	DESIGN
Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9986993896874158	WITHOUT_CLASSIFICATION	0.0013006103125842107	DESIGN
RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9996605125112349	WITHOUT_CLASSIFICATION	3.394874887650277E-4	DESIGN
mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9979081680464419	WITHOUT_CLASSIFICATION	0.0020918319535581367	DESIGN
constants webrick crashes without	WITHOUT_CLASSIFICATION	0.999793234084594	WITHOUT_CLASSIFICATION	2.067659154060218E-4	DESIGN
More constants needed by specs	WITHOUT_CLASSIFICATION	0.9984831269680953	WITHOUT_CLASSIFICATION	0.001516873031904803	DESIGN
normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9996511975565866	WITHOUT_CLASSIFICATION	3.488024434133576E-4	DESIGN
AF_INET	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
255.255.255.255	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
0.0.0.0	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9994023466468732	WITHOUT_CLASSIFICATION	5.976533531268996E-4	DESIGN
line 323	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
can't set TC classloader	WITHOUT_CLASSIFICATION	0.9903409137919019	WITHOUT_CLASSIFICATION	0.009659086208098036	DESIGN
can't set TC classloader	WITHOUT_CLASSIFICATION	0.9903409137919019	WITHOUT_CLASSIFICATION	0.009659086208098036	DESIGN
ok, it's a socket...set values accordingly just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999192404079291	WITHOUT_CLASSIFICATION	8.075959207083629E-5	DESIGN
datagram, set accordingly again, AF_INET	WITHOUT_CLASSIFICATION	0.9999255853429992	WITHOUT_CLASSIFICATION	7.441465700071396E-5	DESIGN
IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9996495306064743	WITHOUT_CLASSIFICATION	3.5046939352568015E-4	DESIGN
When Socket::AI_PASSIVE and host is nil, return 'any' address.	WITHOUT_CLASSIFICATION	0.9991071891563688	WITHOUT_CLASSIFICATION	8.928108436311736E-4	DESIGN
The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.999953980424665	WITHOUT_CLASSIFICATION	4.60195753349321E-5	DESIGN
RubySocket	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9944211956095762	WITHOUT_CLASSIFICATION	0.005578804390423847	DESIGN
e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998417948479199	WITHOUT_CLASSIFICATION	1.582051520801539E-4	DESIGN
we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999345640043406	WITHOUT_CLASSIFICATION	6.543599565951818E-5	DESIGN
otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999986094368951	WITHOUT_CLASSIFICATION	1.3905631048830336E-6	DESIGN
no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999314333078473	WITHOUT_CLASSIFICATION	6.85666921527565E-5	DESIGN
do nothing, just exit	WITHOUT_CLASSIFICATION	0.9996664595013764	WITHOUT_CLASSIFICATION	3.335404986235416E-4	DESIGN
nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9992535500365699	WITHOUT_CLASSIFICATION	7.464499634301213E-4	DESIGN
set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9980237102887309	WITHOUT_CLASSIFICATION	0.0019762897112691365	DESIGN
uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9993930797162182	WITHOUT_CLASSIFICATION	6.069202837818888E-4	DESIGN
Call the thread's code	WITHOUT_CLASSIFICATION	0.9980790613958743	WITHOUT_CLASSIFICATION	0.001920938604125642	DESIGN
Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9999105656838397	WITHOUT_CLASSIFICATION	8.943431616024619E-5	DESIGN
restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999662619982697	WITHOUT_CLASSIFICATION	3.3738001730258536E-5	DESIGN
be dead	WITHOUT_CLASSIFICATION	0.9776450765768434	WITHOUT_CLASSIFICATION	0.022354923423156568	DESIGN
loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9998334063741655	WITHOUT_CLASSIFICATION	1.6659362583453915E-4	DESIGN
all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999701148478172	WITHOUT_CLASSIFICATION	2.9885152182825402E-5	DESIGN
thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9991833809509204	WITHOUT_CLASSIFICATION	8.166190490796766E-4	DESIGN
future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9995774857142331	WITHOUT_CLASSIFICATION	4.2251428576691667E-4	DESIGN
first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.999973667449114	WITHOUT_CLASSIFICATION	2.6332550886090618E-5	DESIGN
then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999224005448215	WITHOUT_CLASSIFICATION	7.759945517847701E-5	DESIGN
UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9907380608514996	WITHOUT_CLASSIFICATION	0.009261939148500493	DESIGN
Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9998471593871564	WITHOUT_CLASSIFICATION	1.5284061284348894E-4	DESIGN
invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9994202757767623	WITHOUT_CLASSIFICATION	5.797242232377682E-4	DESIGN
main body	WITHOUT_CLASSIFICATION	0.9998964491231925	WITHOUT_CLASSIFICATION	1.035508768074717E-4	DESIGN
return jump handling	WITHOUT_CLASSIFICATION	0.9997215547018111	WITHOUT_CLASSIFICATION	2.7844529818883934E-4	DESIGN
finally	WITHOUT_CLASSIFICATION	0.9994991050796569	WITHOUT_CLASSIFICATION	5.008949203431151E-4	DESIGN
return result if we're still good	WITHOUT_CLASSIFICATION	0.9999428324898885	WITHOUT_CLASSIFICATION	5.716751011164115E-5	DESIGN
redo jump handling	WITHOUT_CLASSIFICATION	0.9994174889020665	WITHOUT_CLASSIFICATION	5.82511097933576E-4	DESIGN
clear the redo	WITHOUT_CLASSIFICATION	0.9998608155721882	WITHOUT_CLASSIFICATION	1.3918442781179428E-4	DESIGN
get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9992692655409179	WITHOUT_CLASSIFICATION	7.307344590821099E-4	DESIGN
throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9985043123792583	WITHOUT_CLASSIFICATION	0.0014956876207417717	DESIGN
finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.999616408717732	WITHOUT_CLASSIFICATION	3.8359128226789804E-4	DESIGN
call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9944777574412426	WITHOUT_CLASSIFICATION	0.0055222425587574606	DESIGN
No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.999993750922059	WITHOUT_CLASSIFICATION	6.2490779409842456E-6	DESIGN
actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9998232851800841	WITHOUT_CLASSIFICATION	1.7671481991585924E-4	DESIGN
actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9999078496279654	WITHOUT_CLASSIFICATION	9.21503720346302E-5	DESIGN
simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9995235078686163	WITHOUT_CLASSIFICATION	4.7649213138362345E-4	DESIGN
in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.8678538800264943	WITHOUT_CLASSIFICATION	0.13214611997350564	DESIGN
in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.8678538800264943	WITHOUT_CLASSIFICATION	0.13214611997350564	DESIGN
normal all-rest method	WITHOUT_CLASSIFICATION	0.9993901329163966	WITHOUT_CLASSIFICATION	6.098670836035189E-4	DESIGN
for zero, one, two, three arities, JavaMethod.JavaMethod.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999449244376626	WITHOUT_CLASSIFICATION	5.5075562337408854E-5	DESIGN
promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9961876861862515	WITHOUT_CLASSIFICATION	0.003812313813748534	DESIGN
return	WITHOUT_CLASSIFICATION	0.9997391698614436	WITHOUT_CLASSIFICATION	2.608301385563586E-4	DESIGN
just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999335468127102	WITHOUT_CLASSIFICATION	6.645318728978524E-5	DESIGN
just confirm args length == required	WITHOUT_CLASSIFICATION	0.9991689724928672	WITHOUT_CLASSIFICATION	8.310275071327711E-4	DESIGN
confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9998558466239729	WITHOUT_CLASSIFICATION	1.441533760270729E-4	DESIGN
confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9984058068601754	WITHOUT_CLASSIFICATION	0.001594193139824454	DESIGN
Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9998451336544876	WITHOUT_CLASSIFICATION	1.5486634551243887E-4	DESIGN
tc	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
self name	WITHOUT_CLASSIFICATION	0.9993117286022853	WITHOUT_CLASSIFICATION	6.882713977146974E-4	DESIGN
no args	WITHOUT_CLASSIFICATION	0.9997870314689559	WITHOUT_CLASSIFICATION	2.1296853104418298E-4	DESIGN
variable args with block	WITHOUT_CLASSIFICATION	0.9981426632724092	WITHOUT_CLASSIFICATION	0.0018573367275907502	DESIGN
variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9994962666494446	WITHOUT_CLASSIFICATION	5.037333505554442E-4	DESIGN
zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9998672097444503	WITHOUT_CLASSIFICATION	1.3279025554959354E-4	DESIGN
one arg with block	WITHOUT_CLASSIFICATION	0.9997752691404028	WITHOUT_CLASSIFICATION	2.2473085959715637E-4	DESIGN
one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9993512500155776	WITHOUT_CLASSIFICATION	6.487499844224085E-4	DESIGN
two args with block	WITHOUT_CLASSIFICATION	0.9992733299861939	WITHOUT_CLASSIFICATION	7.266700138059667E-4	DESIGN
two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9979417511670293	WITHOUT_CLASSIFICATION	0.002058248832970623	DESIGN
three args with block	WITHOUT_CLASSIFICATION	0.9993553852688805	WITHOUT_CLASSIFICATION	6.446147311194747E-4	DESIGN
three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.999195575537401	WITHOUT_CLASSIFICATION	8.044244625990668E-4	DESIGN
load block if it accepts block	WITHOUT_CLASSIFICATION	0.9993997426180354	WITHOUT_CLASSIFICATION	6.002573819645393E-4	DESIGN
all other arg cases with block	WITHOUT_CLASSIFICATION	0.9958600350240553	WITHOUT_CLASSIFICATION	0.004139964975944739	DESIGN
all other arg cases without block	WITHOUT_CLASSIFICATION	0.9993482141558437	WITHOUT_CLASSIFICATION	6.51785844156318E-4	DESIGN
one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9996575193822448	WITHOUT_CLASSIFICATION	3.4248061775530035E-4	DESIGN
two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9989127090218287	WITHOUT_CLASSIFICATION	0.0010872909781712858	DESIGN
three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9997299953276768	WITHOUT_CLASSIFICATION	2.700046723231456E-4	DESIGN
load target for invocations	WITHOUT_CLASSIFICATION	0.9998390656883126	WITHOUT_CLASSIFICATION	1.609343116874636E-4	DESIGN
load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999413383607243	WITHOUT_CLASSIFICATION	5.866163927572047E-5	DESIGN
static invocation	WITHOUT_CLASSIFICATION	0.999313335939625	WITHOUT_CLASSIFICATION	6.866640603749649E-4	DESIGN
virtual invocation	WITHOUT_CLASSIFICATION	0.9999296627149272	WITHOUT_CLASSIFICATION	7.033728507273315E-5	DESIGN
void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9966689884971643	WITHOUT_CLASSIFICATION	0.0033310115028357106	DESIGN
normal finally and exit	WITHOUT_CLASSIFICATION	0.9998813388370574	WITHOUT_CLASSIFICATION	1.1866116294245865E-4	DESIGN
promise to implement one to N	WITHOUT_CLASSIFICATION	0.9822005609723286	WITHOUT_CLASSIFICATION	0.01779943902767144	DESIGN
call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9944777574412426	WITHOUT_CLASSIFICATION	0.0055222425587574606	DESIGN
these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9911253483010515	WITHOUT_CLASSIFICATION	0.008874651698948416	DESIGN
method itself ThreadContext invoked name	WITHOUT_CLASSIFICATION	0.9826817399014163	WITHOUT_CLASSIFICATION	0.017318260098583733	DESIGN
method itself ThreadContext invoked name	WITHOUT_CLASSIFICATION	0.9826817399014163	WITHOUT_CLASSIFICATION	0.017318260098583733	DESIGN
singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.857156361171301	WITHOUT_CLASSIFICATION	0.14284363882869905	DESIGN
For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9162252570959208	DESIGN	0.0837747429040792	WITHOUT_CLASSIFICATION
SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9988262199975204	WITHOUT_CLASSIFICATION	0.0011737800024795742	DESIGN
never reached	WITHOUT_CLASSIFICATION	0.9998384920920045	WITHOUT_CLASSIFICATION	1.6150790799545383E-4	DESIGN
promise to implement N with block	WITHOUT_CLASSIFICATION	0.984164205723727	WITHOUT_CLASSIFICATION	0.01583579427627316	DESIGN
promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9975068820968668	WITHOUT_CLASSIFICATION	0.002493117903133231	DESIGN
promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9883029679462202	WITHOUT_CLASSIFICATION	0.0116970320537798	DESIGN
promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9626356308787039	WITHOUT_CLASSIFICATION	0.037364369121296044	DESIGN
promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9976521433679268	WITHOUT_CLASSIFICATION	0.002347856632073194	DESIGN
promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9889785691945707	WITHOUT_CLASSIFICATION	0.011021430805429219	DESIGN
promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9647408446499547	WITHOUT_CLASSIFICATION	0.03525915535004537	DESIGN
promise to implement three with block	WITHOUT_CLASSIFICATION	0.9850752450813067	WITHOUT_CLASSIFICATION	0.014924754918693219	DESIGN
promise to implement N	WITHOUT_CLASSIFICATION	0.9759551159334352	WITHOUT_CLASSIFICATION	0.024044884066564805	DESIGN
DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9988262199975204	WITHOUT_CLASSIFICATION	0.0011737800024795742	DESIGN
We promote our box to being its own box since we're changing visibilities, and need it to be reflected on this method object independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9695364243723019	WITHOUT_CLASSIFICATION	0.030463575627698136	DESIGN
Normally we could leave these to fall back on the superclass, but since it dispatches through the [] version below, which may dispatch through the []+block version, we can save it a couple hops by overriding these here.	WITHOUT_CLASSIFICATION	0.7642380365847425	WITHOUT_CLASSIFICATION	0.23576196341525746	DESIGN
promise to implement two to N	WITHOUT_CLASSIFICATION	0.943902511307047	WITHOUT_CLASSIFICATION	0.056097488692952856	DESIGN
promise to implement three to N	WITHOUT_CLASSIFICATION	0.985467877119034	WITHOUT_CLASSIFICATION	0.014532122880966093	DESIGN
promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9977146770481317	WITHOUT_CLASSIFICATION	0.0022853229518682958	DESIGN
promise to implement one to three	WITHOUT_CLASSIFICATION	0.9892696333397017	WITHOUT_CLASSIFICATION	0.010730366660298331	DESIGN
promise to implement two to three	WITHOUT_CLASSIFICATION	0.9656497687075153	WITHOUT_CLASSIFICATION	0.034350231292484816	DESIGN
promise to implement three	WITHOUT_CLASSIFICATION	0.9773275475374569	WITHOUT_CLASSIFICATION	0.022672452462543076	DESIGN
all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9984435202725441	WITHOUT_CLASSIFICATION	0.0015564797274559895	DESIGN
load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9994054842167461	WITHOUT_CLASSIFICATION	5.945157832537571E-4	DESIGN
open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999584939315344	WITHOUT_CLASSIFICATION	4.1506068465593585E-5	DESIGN
construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9997551169275706	WITHOUT_CLASSIFICATION	2.448830724294546E-4	DESIGN
fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9983562375356477	WITHOUT_CLASSIFICATION	0.0016437624643523194	DESIGN
create constructor	WITHOUT_CLASSIFICATION	0.9984644295929005	WITHOUT_CLASSIFICATION	0.0015355704070995123	DESIGN
wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999780001690369	WITHOUT_CLASSIFICATION	2.199983096302013E-5	DESIGN
end constructor	WITHOUT_CLASSIFICATION	0.9990277073718574	WITHOUT_CLASSIFICATION	9.722926281425792E-4	DESIGN
start setup method	WITHOUT_CLASSIFICATION	0.9997395020147176	WITHOUT_CLASSIFICATION	2.604979852824659E-4	DESIGN
set RubyClass	WITHOUT_CLASSIFICATION	0.9991061636530238	WITHOUT_CLASSIFICATION	8.938363469761074E-4	DESIGN
set Ruby	WITHOUT_CLASSIFICATION	0.9990358335737686	WITHOUT_CLASSIFICATION	9.641664262313567E-4	DESIGN
all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999894163639229	WITHOUT_CLASSIFICATION	1.0583636077148259E-5	DESIGN
try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9998467659135439	WITHOUT_CLASSIFICATION	1.532340864560676E-4	DESIGN
get current context	WITHOUT_CLASSIFICATION	0.9999315430870266	WITHOUT_CLASSIFICATION	6.845691297344894E-5	DESIGN
load self, class, and name	WITHOUT_CLASSIFICATION	0.9979458008929181	WITHOUT_CLASSIFICATION	0.002054199107081871	DESIGN
construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9997551169275706	WITHOUT_CLASSIFICATION	2.448830724294546E-4	DESIGN
fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9983562375356477	WITHOUT_CLASSIFICATION	0.0016437624643523194	DESIGN
create constructor	WITHOUT_CLASSIFICATION	0.9984644295929005	WITHOUT_CLASSIFICATION	0.0015355704070995123	DESIGN
end constructor	WITHOUT_CLASSIFICATION	0.9990277073718574	WITHOUT_CLASSIFICATION	9.722926281425792E-4	DESIGN
for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.999076067889443	WITHOUT_CLASSIFICATION	9.239321105568996E-4	DESIGN
load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9985098767092937	WITHOUT_CLASSIFICATION	0.00149012329070627	DESIGN
convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9986240115509538	WITHOUT_CLASSIFICATION	0.0013759884490462232	DESIGN
load null block	WITHOUT_CLASSIFICATION	0.9996522943681037	WITHOUT_CLASSIFICATION	3.477056318963968E-4	DESIGN
invoke method	WITHOUT_CLASSIFICATION	0.9995648257050399	WITHOUT_CLASSIFICATION	4.351742949600331E-4	DESIGN
if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999786354830995	WITHOUT_CLASSIFICATION	2.136451690048694E-5	DESIGN
end setup method	WITHOUT_CLASSIFICATION	0.9997789884676611	WITHOUT_CLASSIFICATION	2.2101153233885652E-4	DESIGN
end class	WITHOUT_CLASSIFICATION	0.9990157117997809	WITHOUT_CLASSIFICATION	9.842882002191083E-4	DESIGN
create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9923601413567258	WITHOUT_CLASSIFICATION	0.00763985864327414	DESIGN
store the wrapper	WITHOUT_CLASSIFICATION	0.9999863458321894	WITHOUT_CLASSIFICATION	1.3654167810688753E-5	DESIGN
prepare temp locals	WITHOUT_CLASSIFICATION	0.9998098124634794	WITHOUT_CLASSIFICATION	1.9018753652047933E-4	DESIGN
Try to look up field for simple name get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999783097955055	WITHOUT_CLASSIFICATION	2.1690204494475204E-5	DESIGN
field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9998347094691152	WITHOUT_CLASSIFICATION	1.6529053088477517E-4	DESIGN
try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9994286809418191	WITHOUT_CLASSIFICATION	5.713190581808529E-4	DESIGN
store it	WITHOUT_CLASSIFICATION	0.9998804501312234	WITHOUT_CLASSIFICATION	1.1954986877667205E-4	DESIGN
end of try block	WITHOUT_CLASSIFICATION	0.9999002009615912	WITHOUT_CLASSIFICATION	9.979903840884677E-5	DESIGN
finally block to release monitor	WITHOUT_CLASSIFICATION	0.9952020172603651	WITHOUT_CLASSIFICATION	0.00479798273963498	DESIGN
exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9880027869645174	WITHOUT_CLASSIFICATION	0.011997213035482705	DESIGN
re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9985660347006952	WITHOUT_CLASSIFICATION	0.001433965299304896	DESIGN
load self, class, and name	WITHOUT_CLASSIFICATION	0.9979458008929181	WITHOUT_CLASSIFICATION	0.002054199107081871	DESIGN
load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9985098767092937	WITHOUT_CLASSIFICATION	0.00149012329070627	DESIGN
convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9986240115509538	WITHOUT_CLASSIFICATION	0.0013759884490462232	DESIGN
invoke method	WITHOUT_CLASSIFICATION	0.9995648257050399	WITHOUT_CLASSIFICATION	4.351742949600331E-4	DESIGN
if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999786354830995	WITHOUT_CLASSIFICATION	2.136451690048694E-5	DESIGN
end setup method	WITHOUT_CLASSIFICATION	0.9997789884676611	WITHOUT_CLASSIFICATION	2.2101153233885652E-4	DESIGN
end class	WITHOUT_CLASSIFICATION	0.9990157117997809	WITHOUT_CLASSIFICATION	9.842882002191083E-4	DESIGN
create the class	WITHOUT_CLASSIFICATION	0.9991089868461048	WITHOUT_CLASSIFICATION	8.910131538952262E-4	DESIGN
method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.998534251775928	WITHOUT_CLASSIFICATION	0.0014657482240719648	DESIGN
perform the dispatch	WITHOUT_CLASSIFICATION	0.9999330642205375	WITHOUT_CLASSIFICATION	6.693577946247076E-5	DESIGN
try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999299617585128	WITHOUT_CLASSIFICATION	7.003824148715431E-5	DESIGN
up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9987468516356399	WITHOUT_CLASSIFICATION	0.0012531483643601227	DESIGN
up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9987468516356399	WITHOUT_CLASSIFICATION	0.0012531483643601227	DESIGN
setup the class	WITHOUT_CLASSIFICATION	0.9997277228149619	WITHOUT_CLASSIFICATION	2.722771850380861E-4	DESIGN
now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9983716470235359	WITHOUT_CLASSIFICATION	0.0016283529764640956	DESIGN
do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9983260460354673	WITHOUT_CLASSIFICATION	0.0016739539645327505	DESIGN
probably a primitive	WITHOUT_CLASSIFICATION	0.9788417216153329	WITHOUT_CLASSIFICATION	0.021158278384667044	DESIGN
interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999085640497709	WITHOUT_CLASSIFICATION	9.143595022907066E-5	DESIGN
construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9987562973719805	WITHOUT_CLASSIFICATION	0.001243702628019526	DESIGN
set the full name	WITHOUT_CLASSIFICATION	0.9976655490368758	WITHOUT_CLASSIFICATION	0.002334450963124312	DESIGN
include all interfaces	WITHOUT_CLASSIFICATION	0.9993543566137061	WITHOUT_CLASSIFICATION	6.456433862938916E-4	DESIGN
if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.999973071226667	WITHOUT_CLASSIFICATION	2.6928773332957333E-5	DESIGN
add array construction methods	WITHOUT_CLASSIFICATION	0.99961899782438	WITHOUT_CLASSIFICATION	3.8100217561990254E-4	DESIGN
add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9953631254894213	WITHOUT_CLASSIFICATION	0.004636874510578643	DESIGN
add all instance and static methods	WITHOUT_CLASSIFICATION	0.9936642646531589	WITHOUT_CLASSIFICATION	0.006335735346841	DESIGN
proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9996726804055144	WITHOUT_CLASSIFICATION	3.273195944855964E-4	DESIGN
too much array creation!	WITHOUT_CLASSIFICATION	0.9960525127004158	WITHOUT_CLASSIFICATION	0.003947487299584216	DESIGN
only include static methods if specified	WITHOUT_CLASSIFICATION	0.999612496577703	WITHOUT_CLASSIFICATION	3.87503422296962E-4	DESIGN
add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9997327067072496	WITHOUT_CLASSIFICATION	2.672932927503961E-4	DESIGN
add all static variables	WITHOUT_CLASSIFICATION	0.9974885009659366	WITHOUT_CLASSIFICATION	0.0025114990340633935	DESIGN
only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9997610276994244	WITHOUT_CLASSIFICATION	2.3897230057557135E-4	DESIGN
looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.999990514069556	WITHOUT_CLASSIFICATION	9.485930443928613E-6	DESIGN
NOTE: The five match methods are arity-split to avoid the cost of boxing arguments when there's already a cached match. Do not condense them into a single method.	WITHOUT_CLASSIFICATION	0.9999907834018191	WITHOUT_CLASSIFICATION	9.216598180927071E-6	DESIGN
TODO: This is where we would want to do precision checks to see if it's non-destructive to coerce a given type into the target integral primitive	WITHOUT_CLASSIFICATION	0.8426884343772681	DESIGN	0.15731156562273177	WITHOUT_CLASSIFICATION
long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9984306873713402	WITHOUT_CLASSIFICATION	0.0015693126286597959	DESIGN
double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.999782990860779	WITHOUT_CLASSIFICATION	2.170091392210948E-4	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.5213904819097744	WITHOUT_CLASSIFICATION	0.4786095180902256	DESIGN
read-volatile	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9959313727449614	WITHOUT_CLASSIFICATION	0.004068627255038702	DESIGN
we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9998910727424639	WITHOUT_CLASSIFICATION	1.0892725753617793E-4	DESIGN
If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9998707765428981	WITHOUT_CLASSIFICATION	1.2922345710185372E-4	DESIGN
line 326	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
read-volatile	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9959313727449614	WITHOUT_CLASSIFICATION	0.004068627255038702	DESIGN
too much array creation!	WITHOUT_CLASSIFICATION	0.9960525127004158	WITHOUT_CLASSIFICATION	0.003947487299584216	DESIGN
construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9997846984118604	WITHOUT_CLASSIFICATION	2.1530158813967023E-4	DESIGN
Get map of all fields we want to define.	WITHOUT_CLASSIFICATION	0.9993456474981449	WITHOUT_CLASSIFICATION	6.543525018550971E-4	DESIGN
Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9981224075993488	WITHOUT_CLASSIFICATION	0.0018775924006511641	DESIGN
Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9930687166353092	WITHOUT_CLASSIFICATION	0.006931283364690764	DESIGN
We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9985635080419906	WITHOUT_CLASSIFICATION	0.0014364919580094455	DESIGN
dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9996731370983667	WITHOUT_CLASSIFICATION	3.268629016333841E-4	DESIGN
initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9989488294059216	WITHOUT_CLASSIFICATION	0.0010511705940784693	DESIGN
initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9994056613825557	WITHOUT_CLASSIFICATION	5.943386174442509E-4	DESIGN
not allowed for original (non-generated) Java classes note: not allowing for any previously created class right now; this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9878163603170118	WITHOUT_CLASSIFICATION	0.01218363968298818	DESIGN
setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9891367322342096	WITHOUT_CLASSIFICATION	0.010863267765790366	DESIGN
First we make modifications to the class, to adapt it to being both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9962933248825577	WITHOUT_CLASSIFICATION	0.0037066751174423375	DESIGN
list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9922917743399312	WITHOUT_CLASSIFICATION	0.007708225660068857	DESIGN
We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.998778874532714	WITHOUT_CLASSIFICATION	0.0012211254672859922	DESIGN
The replacement "new" allocates and inits the Ruby object as before, but also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999996510698616	WITHOUT_CLASSIFICATION	3.4893013851546355E-7	DESIGN
Next, we define a few private methods that we'll use to manipulate the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9462049645698497	WITHOUT_CLASSIFICATION	0.053795035430150365	DESIGN
jcreate instantiates the proxy object which implements all interfaces and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9525918589508242	WITHOUT_CLASSIFICATION	0.0474081410491759	DESIGN
Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9995720435866887	WITHOUT_CLASSIFICATION	4.2795641331125936E-4	DESIGN
implement all forces implementation of all interfaces we intend for this class to implement	WITHOUT_CLASSIFICATION	0.8925735487749202	WITHOUT_CLASSIFICATION	0.10742645122507977	DESIGN
we've already done the above priming logic, just add another interface to the list of intentions unless we're past the point of no return or already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.999945400678676	WITHOUT_CLASSIFICATION	5.45993213240912E-5	DESIGN
walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9995635282149968	WITHOUT_CLASSIFICATION	4.364717850031747E-4	DESIGN
construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9958459318025795	WITHOUT_CLASSIFICATION	0.0041540681974204805	DESIGN
assuming the user wants a collection of interfaces that can be included together. make it so.	WITHOUT_CLASSIFICATION	0.9997522393103611	WITHOUT_CLASSIFICATION	2.4776068963892867E-4	DESIGN
not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.999941105562145	WITHOUT_CLASSIFICATION	5.889443785501404E-5	DESIGN
To turn a module into an "interface collection" we add a class instance variable to hold the list of interfaces, and modify append_features for this module to call append_features on each of those interfaces as well	WITHOUT_CLASSIFICATION	0.9293440279653448	WITHOUT_CLASSIFICATION	0.07065597203465523	DESIGN
already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9997361501218087	WITHOUT_CLASSIFICATION	2.638498781912381E-4	DESIGN
array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9992535500365699	WITHOUT_CLASSIFICATION	7.464499634301213E-4	DESIGN
keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9988321092797534	WITHOUT_CLASSIFICATION	0.001167890720246504	DESIGN
array creation should use this variant	WITHOUT_CLASSIFICATION	0.8350659229504043	WITHOUT_CLASSIFICATION	0.1649340770495957	DESIGN
parent.setConstant(name, proxyClass); where the name should come from ?	WITHOUT_CLASSIFICATION	0.9914568957291138	WITHOUT_CLASSIFICATION	0.00854310427088617	DESIGN
including interface module so old-style interface "subclasses" will respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999203402639227	WITHOUT_CLASSIFICATION	7.965973607729593E-5	DESIGN
add reference to interface module	WITHOUT_CLASSIFICATION	0.9984528908346737	WITHOUT_CLASSIFICATION	0.001547109165326361	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9990053661320728	WITHOUT_CLASSIFICATION	9.946338679271505E-4	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9990053661320728	WITHOUT_CLASSIFICATION	9.946338679271505E-4	DESIGN
proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9996726804055144	WITHOUT_CLASSIFICATION	3.273195944855964E-4	DESIGN
same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999198511083491	WITHOUT_CLASSIFICATION	8.014889165095296E-5	DESIGN
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999914732825361	WITHOUT_CLASSIFICATION	8.526717463838324E-6	DESIGN
weakly reserved names	WITHOUT_CLASSIFICATION	0.9986045673549232	WITHOUT_CLASSIFICATION	0.0013954326450768173	DESIGN
called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9998846059442674	WITHOUT_CLASSIFICATION	1.1539405573252617E-4	DESIGN
called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9998846059442674	WITHOUT_CLASSIFICATION	1.1539405573252617E-4	DESIGN
modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.999987830728955	WITHOUT_CLASSIFICATION	1.2169271044944813E-5	DESIGN
if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9998251229386865	WITHOUT_CLASSIFICATION	1.7487706131344823E-4	DESIGN
caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9998639252745768	WITHOUT_CLASSIFICATION	1.360747254232578E-4	DESIGN
proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9981031380952247	WITHOUT_CLASSIFICATION	0.0018968619047753463	DESIGN
proxy class for concrete classes. also used for "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.604080778257132	WITHOUT_CLASSIFICATION	0.39591922174286803	DESIGN
readable only by thread building proxy, so don't need to be volatile. used to handle recursive calls to getProxyClass/Module while proxy is being constructed (usually when a constant defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.886869832626299	WITHOUT_CLASSIFICATION	0.113130167373701	DESIGN
allow proxy to be read without synchronization. if proxy is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.999993266324225	WITHOUT_CLASSIFICATION	6.733675775046628E-6	DESIGN
Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9998277890787144	WITHOUT_CLASSIFICATION	1.7221092128548332E-4	DESIGN
proxy is under construction, building thread can safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999594169437254	WITHOUT_CLASSIFICATION	4.05830562745876E-5	DESIGN
Add property name aliases	WITHOUT_CLASSIFICATION	0.9990070672654553	WITHOUT_CLASSIFICATION	9.929327345447635E-4	DESIGN
getFoo => foo getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9998471290180501	WITHOUT_CLASSIFICATION	1.5287098195003245E-4	DESIGN
setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9997383013890211	WITHOUT_CLASSIFICATION	2.616986109789437E-4	DESIGN
isFoo() => foo, isFoo() => foo()	WITHOUT_CLASSIFICATION	0.9997433666103895	WITHOUT_CLASSIFICATION	2.5663338961045293E-4	DESIGN
Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999646206617927	WITHOUT_CLASSIFICATION	3.5379338207325875E-5	DESIGN
is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9988262199975204	WITHOUT_CLASSIFICATION	0.0011737800024795742	DESIGN
something?	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.99981708989611	WITHOUT_CLASSIFICATION	1.829101038900309E-4	DESIGN
setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.99981708989611	WITHOUT_CLASSIFICATION	1.829101038900309E-4	DESIGN
Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.999964036239951	WITHOUT_CLASSIFICATION	3.596376004905637E-5	DESIGN
Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.999964036239951	WITHOUT_CLASSIFICATION	3.596376004905637E-5	DESIGN
create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999712290577172	WITHOUT_CLASSIFICATION	2.877094228292611E-5	DESIGN
we need to collect all methods, though we'll only install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9857961566652428	WITHOUT_CLASSIFICATION	0.014203843334757296	DESIGN
Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9233869498415447	WITHOUT_CLASSIFICATION	0.07661305015845532	DESIGN
now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.998816492337334	WITHOUT_CLASSIFICATION	0.0011835076626658877	DESIGN
old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9990376665794631	WITHOUT_CLASSIFICATION	9.623334205368651E-4	DESIGN
1.9 support for encodings	WITHOUT_CLASSIFICATION	0.997757641693352	WITHOUT_CLASSIFICATION	0.0022423583066479283	DESIGN
double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9995311465442626	WITHOUT_CLASSIFICATION	4.688534557374005E-4	DESIGN
setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9997383013890211	WITHOUT_CLASSIFICATION	2.616986109789437E-4	DESIGN
isFoo() => foo, isFoo() => foo()	WITHOUT_CLASSIFICATION	0.9997433666103895	WITHOUT_CLASSIFICATION	2.5663338961045293E-4	DESIGN
is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9988262199975204	WITHOUT_CLASSIFICATION	0.0011737800024795742	DESIGN
one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9942078453721244	WITHOUT_CLASSIFICATION	0.00579215462787556	DESIGN
Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9810766484193074	WITHOUT_CLASSIFICATION	0.01892335158069256	DESIGN
note: intentionally returning the actual array returned from Java, rather than wrapping it in a RubyArray. wave of the future, when java_class will return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9996435999991307	WITHOUT_CLASSIFICATION	3.564000008693208E-4	DESIGN
see note above re: return type	WITHOUT_CLASSIFICATION	0.9809182559552005	WITHOUT_CLASSIFICATION	0.019081744044799478	DESIGN
restrictive security policy; no matter, we only want public classes anyway	WITHOUT_CLASSIFICATION	0.9807590043478221	WITHOUT_CLASSIFICATION	0.019240995652177885	DESIGN
very restrictive policy (disallows Member.PUBLIC) we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9918295000224866	WITHOUT_CLASSIFICATION	0.008170499977513433	DESIGN
one-dimensional array	WITHOUT_CLASSIFICATION	0.9990549106843574	WITHOUT_CLASSIFICATION	9.450893156426168E-4	DESIGN
n-dimensional array	WITHOUT_CLASSIFICATION	0.9995838810496727	WITHOUT_CLASSIFICATION	4.161189503273085E-4	DESIGN
if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9998978625244326	WITHOUT_CLASSIFICATION	1.021374755673751E-4	DESIGN
we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9990815119310076	WITHOUT_CLASSIFICATION	9.184880689923028E-4	DESIGN
Proc implementing an interface, pull in the catch-all code that lets the proc get invoked no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9913933926853787	WITHOUT_CLASSIFICATION	0.00860660731462129	DESIGN
can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9996470463010401	WITHOUT_CLASSIFICATION	3.529536989599805E-4	DESIGN
getFooBar() => fooBar?, foo_bar?()	WITHOUT_CLASSIFICATION	0.9998336315167767	WITHOUT_CLASSIFICATION	1.6636848322328554E-4	DESIGN
If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9997500701435482	WITHOUT_CLASSIFICATION	2.499298564518339E-4	DESIGN
many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9892372829934949	WITHOUT_CLASSIFICATION	0.010762717006505067	DESIGN
for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9998851114036597	WITHOUT_CLASSIFICATION	1.1488859634037318E-4	DESIGN
rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9998412601791561	WITHOUT_CLASSIFICATION	1.5873982084392956E-4	DESIGN
the converters handle not only primitive types but also their boxed versions, so we should check if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9314271707521059	WITHOUT_CLASSIFICATION	0.06857282924789411	DESIGN
it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999225180118572	WITHOUT_CLASSIFICATION	7.748198814291142E-5	DESIGN
we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999563551026298	WITHOUT_CLASSIFICATION	4.3644897370206745E-5	DESIGN
set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9998088652990399	WITHOUT_CLASSIFICATION	1.9113470096015453E-4	DESIGN
the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9997495370613495	WITHOUT_CLASSIFICATION	2.504629386504894E-4	DESIGN
InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9992535500365699	WITHOUT_CLASSIFICATION	7.464499634301213E-4	DESIGN
also create the JavaProxy classes	WITHOUT_CLASSIFICATION	0.9999094459474686	WITHOUT_CLASSIFICATION	9.055405253145534E-5	DESIGN
The template for interface modules	WITHOUT_CLASSIFICATION	0.999943027450649	WITHOUT_CLASSIFICATION	5.697254935098648E-5	DESIGN
Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999092012641506	WITHOUT_CLASSIFICATION	9.079873584934158E-5	DESIGN
add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9991833568970129	WITHOUT_CLASSIFICATION	8.166431029871011E-4	DESIGN
add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9996420998052422	WITHOUT_CLASSIFICATION	3.579001947578232E-4	DESIGN
finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.998994162410679	WITHOUT_CLASSIFICATION	0.0010058375893210515	DESIGN
shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9994130841772514	WITHOUT_CLASSIFICATION	5.869158227486322E-4	DESIGN
include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9952843649268391	WITHOUT_CLASSIFICATION	0.004715635073160858	DESIGN
java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9979703382421972	WITHOUT_CLASSIFICATION	0.0020296617578028434	DESIGN
other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9998306422069693	WITHOUT_CLASSIFICATION	1.6935779303078188E-4	DESIGN
include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9993666163586774	WITHOUT_CLASSIFICATION	6.333836413225844E-4	DESIGN
JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.998877004552464	WITHOUT_CLASSIFICATION	0.001122995447536015	DESIGN
add java_method for unbound use	WITHOUT_CLASSIFICATION	0.997809183967213	WITHOUT_CLASSIFICATION	0.0021908160327870816	DESIGN
add alias to meta	WITHOUT_CLASSIFICATION	0.9997980169238787	WITHOUT_CLASSIFICATION	2.0198307612114919E-4	DESIGN
we'll only map conventional class names to modules	WITHOUT_CLASSIFICATION	0.998699153683471	WITHOUT_CLASSIFICATION	0.0013008463165289559	DESIGN
expected	WITHOUT_CLASSIFICATION	0.9999213328659189	WITHOUT_CLASSIFICATION	7.866713408111116E-5	DESIGN
Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9987869007187622	WITHOUT_CLASSIFICATION	0.0012130992812378139	DESIGN
upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9998472211662247	WITHOUT_CLASSIFICATION	1.5277883377533237E-4	DESIGN
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999914732825361	WITHOUT_CLASSIFICATION	8.526717463838324E-6	DESIGN
add alias to meta	WITHOUT_CLASSIFICATION	0.9997980169238787	WITHOUT_CLASSIFICATION	2.0198307612114919E-4	DESIGN
this is where we'll get connected when classes are opened using package module syntax.	WITHOUT_CLASSIFICATION	0.9765123547483024	WITHOUT_CLASSIFICATION	0.023487645251697484	DESIGN
save package module as ivar in parent, and add method to parent so we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9371835176051041	WITHOUT_CLASSIFICATION	0.0628164823948959	DESIGN
this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9940300690541369	WITHOUT_CLASSIFICATION	0.005969930945863049	DESIGN
not primitive or lc class	WITHOUT_CLASSIFICATION	0.992055646282596	WITHOUT_CLASSIFICATION	0.007944353717403946	DESIGN
not primitive or lc class	WITHOUT_CLASSIFICATION	0.992055646282596	WITHOUT_CLASSIFICATION	0.007944353717403946	DESIGN
Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9993571655993161	WITHOUT_CLASSIFICATION	6.42834400684003E-4	DESIGN
Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9925926458143678	WITHOUT_CLASSIFICATION	0.007407354185632184	DESIGN
hashcode is a combination of the interfaces and the Ruby class we're using to implement them	WITHOUT_CLASSIFICATION	0.9738191802165707	WITHOUT_CLASSIFICATION	0.02618081978342943	DESIGN
if it's a singleton class and the real class is proc, we're doing closure conversion so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9998836328738863	WITHOUT_CLASSIFICATION	1.1636712611382455E-4	DESIGN
normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9994815917315101	WITHOUT_CLASSIFICATION	5.184082684900146E-4	DESIGN
Initialize some components.	WITHOUT_CLASSIFICATION	0.9988152342666035	WITHOUT_CLASSIFICATION	0.0011847657333965565	DESIGN
not synchronizing these methods, no harm if these values get set more than once. (also note that there's no chance of getting a partially initialized class/module, as happens-before is guaranteed by volatile write/read of constants table.)	WITHOUT_CLASSIFICATION	0.9991078112785299	WITHOUT_CLASSIFICATION	8.921887214701676E-4	DESIGN
Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9546322977972358	WITHOUT_CLASSIFICATION	0.04536770220276428	DESIGN
for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999567874018513	WITHOUT_CLASSIFICATION	4.321259814863921E-5	DESIGN
for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999567874018513	WITHOUT_CLASSIFICATION	4.321259814863921E-5	DESIGN
no matching ctor found	WITHOUT_CLASSIFICATION	0.9997709227106748	WITHOUT_CLASSIFICATION	2.2907728932517046E-4	DESIGN
Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9975157591102588	WITHOUT_CLASSIFICATION	0.0024842408897411466	DESIGN
prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9997621474243052	WITHOUT_CLASSIFICATION	2.378525756948453E-4	DESIGN
must be a public method	WITHOUT_CLASSIFICATION	0.9848791419146796	WITHOUT_CLASSIFICATION	0.015120858085320418	DESIGN
must be a public class	WITHOUT_CLASSIFICATION	0.9778869899821043	WITHOUT_CLASSIFICATION	0.022113010017895673	DESIGN
must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9983577552595171	WITHOUT_CLASSIFICATION	0.0016422447404829264	DESIGN
Special classes like Collections.EMPTY_LIST are inner classes that are private but implement public interfaces. Their methods are all public methods for the public interface. Let these public methods execute via setAccessible(true).	WITHOUT_CLASSIFICATION	0.8900457994392572	WITHOUT_CLASSIFICATION	0.10995420056074286	DESIGN
search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9983494772797429	WITHOUT_CLASSIFICATION	0.001650522720257079	DESIGN
no matching method found	WITHOUT_CLASSIFICATION	0.999378660632561	WITHOUT_CLASSIFICATION	6.213393674390357E-4	DESIGN
this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.7853723754847721	WITHOUT_CLASSIFICATION	0.21462762451522788	DESIGN
First we need to register the JRuby engine.	WITHOUT_CLASSIFICATION	0.9972131155835897	WITHOUT_CLASSIFICATION	0.0027868844164102144	DESIGN
Now we create a new BSFManager.	WITHOUT_CLASSIFICATION	0.9993955244723879	WITHOUT_CLASSIFICATION	6.044755276122208E-4	DESIGN
Initialize a simple Frame.	WITHOUT_CLASSIFICATION	0.999096540303337	WITHOUT_CLASSIFICATION	9.034596966629512E-4	DESIGN
e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998417948479199	WITHOUT_CLASSIFICATION	1.582051520801539E-4	DESIGN
e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998417948479199	WITHOUT_CLASSIFICATION	1.582051520801539E-4	DESIGN
JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9997734922098432	WITHOUT_CLASSIFICATION	2.2650779015667748E-4	DESIGN
end class	WITHOUT_CLASSIFICATION	0.9990157117997809	WITHOUT_CLASSIFICATION	9.842882002191083E-4	DESIGN
this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.7853723754847721	WITHOUT_CLASSIFICATION	0.21462762451522788	DESIGN
for our purposes, Accessibles are also Members, and vice-versa, so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9996966796560338	WITHOUT_CLASSIFICATION	3.0332034396625586E-4	DESIGN
Declare those components as beans in BSF. Then it will be possible to access those components in Ruby as global variables ($frame, $menubar, ...)	WITHOUT_CLASSIFICATION	0.9998672010242038	WITHOUT_CLASSIFICATION	1.3279897579628684E-4	DESIGN
Execute a Ruby script (add the menubar to the frame).	WITHOUT_CLASSIFICATION	0.9994651357680889	WITHOUT_CLASSIFICATION	5.348642319109655E-4	DESIGN
Execute Ruby statements.	WITHOUT_CLASSIFICATION	0.9989093827768784	WITHOUT_CLASSIFICATION	0.0010906172231216883	DESIGN
Evaluates a Ruby expression and display the result.	WITHOUT_CLASSIFICATION	0.9993581722953488	WITHOUT_CLASSIFICATION	6.418277046511199E-4	DESIGN
Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9991897373698952	WITHOUT_CLASSIFICATION	8.102626301047566E-4	DESIGN
package scope	WITHOUT_CLASSIFICATION	0.9991879680993222	WITHOUT_CLASSIFICATION	8.120319006777999E-4	DESIGN
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999914732825361	WITHOUT_CLASSIFICATION	8.526717463838324E-6	DESIGN
Ruby-level methods	WITHOUT_CLASSIFICATION	0.9994539534479673	WITHOUT_CLASSIFICATION	5.46046552032758E-4	DESIGN
need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9926756906816657	WITHOUT_CLASSIFICATION	0.007324309318334272	DESIGN
we only collect methods and interfaces for user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9998202994460974	WITHOUT_CLASSIFICATION	1.7970055390255168E-4	DESIGN
get JavaClass if this is the new proxy class; verify it matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999644048830824	WITHOUT_CLASSIFICATION	3.559511691753832E-5	DESIGN
get any included interfaces	WITHOUT_CLASSIFICATION	0.9999002512387154	WITHOUT_CLASSIFICATION	9.9748761284603E-5	DESIGN
lock in the overridden methods for the new class, and any as-yet uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9998605023040378	WITHOUT_CLASSIFICATION	1.3949769596223566E-4	DESIGN
statically initialized below	WITHOUT_CLASSIFICATION	0.9980684680209267	WITHOUT_CLASSIFICATION	0.001931531979073285	DESIGN
finish class initializer	WITHOUT_CLASSIFICATION	0.9986755384114856	WITHOUT_CLASSIFICATION	0.0013244615885144567	DESIGN
trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9995433073873198	WITHOUT_CLASSIFICATION	4.5669261268019236E-4	DESIGN
should not happen!	WITHOUT_CLASSIFICATION	0.9825146564524166	WITHOUT_CLASSIFICATION	0.01748534354758337	DESIGN
start class	WITHOUT_CLASSIFICATION	0.9989246132177279	WITHOUT_CLASSIFICATION	0.0010753867822721418	DESIGN
make getter for handler	WITHOUT_CLASSIFICATION	0.9985592415588865	WITHOUT_CLASSIFICATION	0.0014407584411134824	DESIGN
make getter for proxy class	WITHOUT_CLASSIFICATION	0.9975787199288539	WITHOUT_CLASSIFICATION	0.002421280071146136	DESIGN
add (potentially) overridden names to the key. TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9804054289394797	DESIGN	0.019594571060520292	WITHOUT_CLASSIFICATION
We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9990511880222174	WITHOUT_CLASSIFICATION	9.488119777826114E-4	DESIGN
create static private method field	WITHOUT_CLASSIFICATION	0.9629295746970076	WITHOUT_CLASSIFICATION	0.03707042530299237	DESIGN
load static empty array	WITHOUT_CLASSIFICATION	0.9883010642190749	WITHOUT_CLASSIFICATION	0.011698935780925089	DESIGN
box arguments	WITHOUT_CLASSIFICATION	0.9999375600367973	WITHOUT_CLASSIFICATION	6.243996320275821E-5	DESIGN
this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9976199700696278	WITHOUT_CLASSIFICATION	0.002380029930372136	DESIGN
construct the super-proxy method	WITHOUT_CLASSIFICATION	0.9994376786212203	WITHOUT_CLASSIFICATION	5.623213787795594E-4	DESIGN
do a void return	WITHOUT_CLASSIFICATION	0.9987828967711317	WITHOUT_CLASSIFICATION	0.0012171032288681859	DESIGN
utility methods	WITHOUT_CLASSIFICATION	0.9997863656835051	WITHOUT_CLASSIFICATION	2.1363431649505765E-4	DESIGN
Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9993571655993161	WITHOUT_CLASSIFICATION	6.42834400684003E-4	DESIGN
store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9912707991688205	WITHOUT_CLASSIFICATION	0.008729200831179486	DESIGN
use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9981009868322454	WITHOUT_CLASSIFICATION	0.0018990131677546114	DESIGN
no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9997008361591321	WITHOUT_CLASSIFICATION	2.9916384086785806E-4	DESIGN
only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9984590112663217	WITHOUT_CLASSIFICATION	0.0015409887336782556	DESIGN
opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9967570089613882	WITHOUT_CLASSIFICATION	0.0032429910386118786	DESIGN
opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9970502390284979	WITHOUT_CLASSIFICATION	0.0029497609715021396	DESIGN
No block from a nil proc	WITHOUT_CLASSIFICATION	0.9994667612723968	WITHOUT_CLASSIFICATION	5.332387276032326E-4	DESIGN
If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9922243393468262	WITHOUT_CLASSIFICATION	0.007775660653173817	DESIGN
The current block is already associated with proc. No need to create a new one	WITHOUT_CLASSIFICATION	0.9999670751166	WITHOUT_CLASSIFICATION	3.2924883399921755E-5	DESIGN
Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9995381612833949	WITHOUT_CLASSIFICATION	4.6183871660505503E-4	DESIGN
NUL	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9975416127815803	WITHOUT_CLASSIFICATION	0.002458387218419839	DESIGN
Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9998042773652438	WITHOUT_CLASSIFICATION	1.9572263475615485E-4	DESIGN
'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9990560188643026	WITHOUT_CLASSIFICATION	9.439811356975127E-4	DESIGN
Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9988515336203537	WITHOUT_CLASSIFICATION	0.001148466379646245	DESIGN
read-volatile	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
read-volatile	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9985522626259806	WITHOUT_CLASSIFICATION	0.0014477373740193816	DESIGN
must be power of 2 must be power of 2	WITHOUT_CLASSIFICATION	0.998909260575709	WITHOUT_CLASSIFICATION	0.0010907394242910971	DESIGN
Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9994040986451582	WITHOUT_CLASSIFICATION	5.959013548418144E-4	DESIGN
note segmentShift differs from ConcurrentHashMap's calculation due to issues with System.identityHashCode (upper n bits always 0, at least under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.998827602063557	WITHOUT_CLASSIFICATION	0.00117239793644295	DESIGN
System.err.println("ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9983737272954145	WITHOUT_CLASSIFICATION	0.0016262727045854787	DESIGN
protected void finalize() throws Throwable { System.err.println("ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); }	WITHOUT_CLASSIFICATION	0.9908446345019892	WITHOUT_CLASSIFICATION	0.009155365498010794	DESIGN
EntryRefs include hash with key to facilitate lookup by Segment#expunge after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9995024282781747	WITHOUT_CLASSIFICATION	4.975717218252865E-4	DESIGN
Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather makes it a final field. The theory is that doing so should force a happens-before relationship WRT the WeakReference constructor, guaranteeing that the key will be visibile to other threads (unless it's been GC'ed). See JLS 17.5 (final fields) and 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9982106073295695	WITHOUT_CLASSIFICATION	0.001789392670430479	DESIGN
references to the Java object and its proxy will either both be weak or both be soft, since the proxy contains a strong reference to the object, so it wouldn't make sense for the reference types to differ.	WITHOUT_CLASSIFICATION	0.9996093846150758	WITHOUT_CLASSIFICATION	3.906153849243261E-4	DESIGN
ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9578829484671941	WITHOUT_CLASSIFICATION	0.04211705153280586	DESIGN
must be called under lock	WITHOUT_CLASSIFICATION	0.999687574766893	WITHOUT_CLASSIFICATION	3.1242523310703657E-4	DESIGN
must be called under lock	WITHOUT_CLASSIFICATION	0.999687574766893	WITHOUT_CLASSIFICATION	3.1242523310703657E-4	DESIGN
must be called under lock	WITHOUT_CLASSIFICATION	0.999687574766893	WITHOUT_CLASSIFICATION	3.1242523310703657E-4	DESIGN
note that we'll potentially see the refs for both the java object and proxy -- whichever we see first will cause the entry to be removed; the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9795606792698063	WITHOUT_CLASSIFICATION	0.020439320730193774	DESIGN
temp method to verify tableSize value must be called under lock	WITHOUT_CLASSIFICATION	0.9999039247988398	WITHOUT_CLASSIFICATION	9.607520116024833E-5	DESIGN
Single node in list	WITHOUT_CLASSIFICATION	0.9998850763264913	WITHOUT_CLASSIFICATION	1.149236735087346E-4	DESIGN
indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9982822129723995	WITHOUT_CLASSIFICATION	0.001717787027600581	DESIGN
indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9982822129723995	WITHOUT_CLASSIFICATION	0.001717787027600581	DESIGN
entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.998696535238245	WITHOUT_CLASSIFICATION	0.0013034647617550348	DESIGN
Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9988100560681636	WITHOUT_CLASSIFICATION	0.0011899439318363693	DESIGN
Start of string ([, (, {, <, ', ", \n)	WITHOUT_CLASSIFICATION	0.9999276066298473	WITHOUT_CLASSIFICATION	7.239337015275236E-5	DESIGN
Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9996327248600009	WITHOUT_CLASSIFICATION	3.6727513999910933E-4	DESIGN
How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9990587383948553	WITHOUT_CLASSIFICATION	9.412616051448315E-4	DESIGN
For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9999241699887762	WITHOUT_CLASSIFICATION	7.583001122377832E-5	DESIGN
Last full line read.	WITHOUT_CLASSIFICATION	0.9996339755648344	WITHOUT_CLASSIFICATION	3.6602443516564365E-4	DESIGN
Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9997228217926242	WITHOUT_CLASSIFICATION	2.7717820737580234E-4	DESIGN
Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999719762020102	WITHOUT_CLASSIFICATION	2.802379798991615E-5	DESIGN
Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999548703841625	WITHOUT_CLASSIFICATION	4.512961583749158E-5	DESIGN
Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999548703841625	WITHOUT_CLASSIFICATION	4.512961583749158E-5	DESIGN
End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999082212193131	WITHOUT_CLASSIFICATION	9.177878068680923E-5	DESIGN
How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9987979797406394	WITHOUT_CLASSIFICATION	0.0012020202593605756	DESIGN
Single-quote fast path	WITHOUT_CLASSIFICATION	0.9997049663874903	WITHOUT_CLASSIFICATION	2.950336125097343E-4	DESIGN
Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9993349334915895	WITHOUT_CLASSIFICATION	6.650665084104012E-4	DESIGN
Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9986815467600857	WITHOUT_CLASSIFICATION	0.0013184532399143642	DESIGN
just ignore	WITHOUT_CLASSIFICATION	0.9998025593924615	WITHOUT_CLASSIFICATION	1.9744060753847624E-4	DESIGN
octal constant	WITHOUT_CLASSIFICATION	0.9996470416433917	WITHOUT_CLASSIFICATION	3.529583566082653E-4	DESIGN
hex constant	WITHOUT_CLASSIFICATION	0.9997732835774431	WITHOUT_CLASSIFICATION	2.2671642255693081E-4	DESIGN
PUSH(1)	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
POP	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
PUSH(0). If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999951426465358	WITHOUT_CLASSIFICATION	4.857353464238874E-6	DESIGN
LEXPOP	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
SET_P	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9994315790833306	WITHOUT_CLASSIFICATION	5.684209166693649E-4	DESIGN
Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9983371642239888	WITHOUT_CLASSIFICATION	0.001662835776011282	DESIGN
Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999422073177899	WITHOUT_CLASSIFICATION	5.7792682210110274E-5	DESIGN
Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999823993210333	WITHOUT_CLASSIFICATION	1.7600678966666186E-5	DESIGN
Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999798419830139	WITHOUT_CLASSIFICATION	2.0158016986119087E-5	DESIGN
Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9998012306066288	WITHOUT_CLASSIFICATION	1.9876939337109726E-4	DESIGN
Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.999875380519213	WITHOUT_CLASSIFICATION	1.2461948078693172E-4	DESIGN
Give a name to a value. Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9523504793206563	DESIGN	0.047649520679343596	WITHOUT_CLASSIFICATION
When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9967011673473194	WITHOUT_CLASSIFICATION	0.003298832652680661	DESIGN
Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9989095119277006	WITHOUT_CLASSIFICATION	0.0010904880722994335	DESIGN
Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9938634031346092	WITHOUT_CLASSIFICATION	0.0061365968653907	DESIGN
1.9 only	WITHOUT_CLASSIFICATION	0.9997340162568709	WITHOUT_CLASSIFICATION	2.6598374312912347E-4	DESIGN
Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9995142923390572	WITHOUT_CLASSIFICATION	4.857076609427249E-4	DESIGN
Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9992361187689277	WITHOUT_CLASSIFICATION	7.63881231072278E-4	DESIGN
no mb || ismbchar(term)	WITHOUT_CLASSIFICATION	0.9995624637548458	WITHOUT_CLASSIFICATION	4.375362451541702E-4	DESIGN
Not normally used, but is left in here since it can be useful in debugging grammar and lexing problems.	WITHOUT_CLASSIFICATION	0.8094887169399296	WITHOUT_CLASSIFICATION	0.19051128306007042	DESIGN
DEBUGGING HELP	WITHOUT_CLASSIFICATION	0.9994915383027105	WITHOUT_CLASSIFICATION	5.084616972894534E-4	DESIGN
'\v'	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
end of script.	WITHOUT_CLASSIFICATION	0.9997271864238393	WITHOUT_CLASSIFICATION	2.7281357616076515E-4	DESIGN
white spaces	WITHOUT_CLASSIFICATION	0.9995784437540776	WITHOUT_CLASSIFICATION	4.2155624592249083E-4	DESIGN
'\v'	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
it's a comment	WITHOUT_CLASSIFICATION	0.9993461739774248	WITHOUT_CLASSIFICATION	6.538260225752048E-4	DESIGN
Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.997313213147167	WITHOUT_CLASSIFICATION	0.0026867868528329393	DESIGN
$\: output record separator	WITHOUT_CLASSIFICATION	0.9998354259976986	WITHOUT_CLASSIFICATION	1.6457400230133576E-4	DESIGN
EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9982973708603264	WITHOUT_CLASSIFICATION	0.0017026291396736281	DESIGN
documentation nodes	WITHOUT_CLASSIFICATION	0.9999322998781113	WITHOUT_CLASSIFICATION	6.770012188871356E-5	DESIGN
In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999177251281901	WITHOUT_CLASSIFICATION	8.227487180993215E-5	DESIGN
Just a plain bang	WITHOUT_CLASSIFICATION	0.9994768356379803	WITHOUT_CLASSIFICATION	5.231643620198293E-4	DESIGN
$_: last read line string	WITHOUT_CLASSIFICATION	0.999915416923399	WITHOUT_CLASSIFICATION	8.458307660101775E-5	DESIGN
$~: match-data	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
$: argv	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
$$: pid	WITHOUT_CLASSIFICATION	0.9994436255440733	WITHOUT_CLASSIFICATION	5.563744559266716E-4	DESIGN
$?: last status	WITHOUT_CLASSIFICATION	0.9995940000818527	WITHOUT_CLASSIFICATION	4.059999181471919E-4	DESIGN
$!: error string	WITHOUT_CLASSIFICATION	0.9995293275846184	WITHOUT_CLASSIFICATION	4.7067241538156356E-4	DESIGN
$@: error position	WITHOUT_CLASSIFICATION	0.9996038405534227	WITHOUT_CLASSIFICATION	3.961594465773736E-4	DESIGN
$/: input record separator	WITHOUT_CLASSIFICATION	0.999605941774137	WITHOUT_CLASSIFICATION	3.9405822586294074E-4	DESIGN
$;: field separator	WITHOUT_CLASSIFICATION	0.9996335130267763	WITHOUT_CLASSIFICATION	3.6648697322370384E-4	DESIGN
$,: output field separator	WITHOUT_CLASSIFICATION	0.9993302109685237	WITHOUT_CLASSIFICATION	6.697890314763507E-4	DESIGN
$.: last read line number	WITHOUT_CLASSIFICATION	0.9996032866140124	WITHOUT_CLASSIFICATION	3.9671338598749206E-4	DESIGN
$=: ignorecase	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
$:: load path	WITHOUT_CLASSIFICATION	0.9995462725485407	WITHOUT_CLASSIFICATION	4.5372745145938443E-4	DESIGN
$<: reading filename	WITHOUT_CLASSIFICATION	0.9999394094397535	WITHOUT_CLASSIFICATION	6.059056024655149E-5	DESIGN
$": already loaded files	WITHOUT_CLASSIFICATION	0.9994170080290461	WITHOUT_CLASSIFICATION	5.829919709538449E-4	DESIGN
$&: last match	WITHOUT_CLASSIFICATION	0.999913708144561	WITHOUT_CLASSIFICATION	8.629185543895599E-5	DESIGN
$`: string before last match	WITHOUT_CLASSIFICATION	0.9998757629566545	WITHOUT_CLASSIFICATION	1.2423704334554902E-4	DESIGN
$': string after last match	WITHOUT_CLASSIFICATION	0.9999348100194927	WITHOUT_CLASSIFICATION	6.518998050720692E-5	DESIGN
methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999112292233187	WITHOUT_CLASSIFICATION	8.877077668134969E-5	DESIGN
See if it is a reserved word.	WITHOUT_CLASSIFICATION	0.999658002441473	WITHOUT_CLASSIFICATION	3.4199755852698565E-4	DESIGN
enum lex_state	WITHOUT_CLASSIFICATION	0.9994875833617787	WITHOUT_CLASSIFICATION	5.124166382212516E-4	DESIGN
block (primary)	WITHOUT_CLASSIFICATION	0.9996853369573688	WITHOUT_CLASSIFICATION	3.1466304263118766E-4	DESIGN
block (expr)	WITHOUT_CLASSIFICATION	0.9996853369573688	WITHOUT_CLASSIFICATION	3.1466304263118766E-4	DESIGN
hash	WITHOUT_CLASSIFICATION	0.9997564491195366	WITHOUT_CLASSIFICATION	2.4355088046334919E-4	DESIGN
ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9915629199069012	WITHOUT_CLASSIFICATION	0.008437080093098905	DESIGN
FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.6294252177703399	WITHOUT_CLASSIFICATION	0.37057478222966006	DESIGN
We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9980510800461105	WITHOUT_CLASSIFICATION	0.0019489199538894465	DESIGN
hexadecimal	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
binary	WITHOUT_CLASSIFICATION	0.9997999402680199	WITHOUT_CLASSIFICATION	2.0005973198012253E-4	DESIGN
decimal	WITHOUT_CLASSIFICATION	0.9997114459860773	WITHOUT_CLASSIFICATION	2.885540139227282E-4	DESIGN
Octal	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
'_' in number just ignored	WITHOUT_CLASSIFICATION	0.9992657631120965	WITHOUT_CLASSIFICATION	7.342368879034316E-4	DESIGN
backslash	WITHOUT_CLASSIFICATION	0.9995309032395826	WITHOUT_CLASSIFICATION	4.690967604173845E-4	DESIGN
newline	WITHOUT_CLASSIFICATION	0.9997144503737188	WITHOUT_CLASSIFICATION	2.855496262813025E-4	DESIGN
horizontal tab	WITHOUT_CLASSIFICATION	0.9990908437767957	WITHOUT_CLASSIFICATION	9.091562232042791E-4	DESIGN
form feed	WITHOUT_CLASSIFICATION	0.9997779324032005	WITHOUT_CLASSIFICATION	2.22067596799473E-4	DESIGN
vertical tab	WITHOUT_CLASSIFICATION	0.9993485883552023	WITHOUT_CLASSIFICATION	6.514116447976033E-4	DESIGN
alarm(bell)	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
escape	WITHOUT_CLASSIFICATION	0.9994151293158766	WITHOUT_CLASSIFICATION	5.848706841233493E-4	DESIGN
hex constant	WITHOUT_CLASSIFICATION	0.9997732835774431	WITHOUT_CLASSIFICATION	2.2671642255693081E-4	DESIGN
char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9998664795322877	WITHOUT_CLASSIFICATION	1.335204677123287E-4	DESIGN
If \r\n then just pass along \n (windows). If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999950743103866	WITHOUT_CLASSIFICATION	4.92568961334518E-6	DESIGN
space	WITHOUT_CLASSIFICATION	0.9999830911339386	WITHOUT_CLASSIFICATION	1.69088660613808E-5	DESIGN
Where we started this marker match	WITHOUT_CLASSIFICATION	0.9966601730751982	WITHOUT_CLASSIFICATION	0.003339826924801802	DESIGN
Position within source must reflect the actual offset and column. Since we ate an extra character here (this accounting is normally done in read ), we should update position info.	WITHOUT_CLASSIFICATION	0.999964250947042	WITHOUT_CLASSIFICATION	3.5749052957986384E-5	DESIGN
We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9962876563442246	WITHOUT_CLASSIFICATION	0.0037123436557753844	DESIGN
If \r\n then just pass along \n (windows). If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999950743103866	WITHOUT_CLASSIFICATION	4.92568961334518E-6	DESIGN
FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.5321321594304327	DESIGN	0.4678678405695674	WITHOUT_CLASSIFICATION
FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.5321321594304327	DESIGN	0.4678678405695674	WITHOUT_CLASSIFICATION
Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9994282116980375	WITHOUT_CLASSIFICATION	5.717883019623578E-4	DESIGN
Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9990355797403333	WITHOUT_CLASSIFICATION	9.644202596665526E-4	DESIGN
index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9997687381487673	WITHOUT_CLASSIFICATION	2.312618512325473E-4	DESIGN
Character read before previous read	WITHOUT_CLASSIFICATION	0.9997398700812956	WITHOUT_CLASSIFICATION	2.6012991870441447E-4	DESIGN
keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9256327719326208	WITHOUT_CLASSIFICATION	0.07436722806737915	DESIGN
NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9988262199975204	WITHOUT_CLASSIFICATION	0.0011737800024795742	DESIGN
BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. We did it here for now	WITHOUT_CLASSIFICATION	0.9481149521195361	DESIGN	0.051885047880463886	WITHOUT_CLASSIFICATION
Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9973622314759472	WITHOUT_CLASSIFICATION	0.0026377685240528016	DESIGN
that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.843300460669224	WITHOUT_CLASSIFICATION	0.156699539330776	DESIGN
Rubygems is too specific on host cpu so until we have real need lets default to universal setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9994373858030396	WITHOUT_CLASSIFICATION	5.626141969603673E-4	DESIGN
Our shell scripts pass in non-canonicalized paths, but even if we didn't anyone who did would become unhappy because Ruby apps expect no relative operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999362577740243	WITHOUT_CLASSIFICATION	6.37422259757334E-5	DESIGN
this set is only for darwin	WITHOUT_CLASSIFICATION	0.9943063542725652	WITHOUT_CLASSIFICATION	0.005693645727434756	DESIGN
DigestLibrary	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
all errors, just info; do not prevent loading IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9843043136860593	WITHOUT_CLASSIFICATION	0.015695686313940672	DESIGN
all errors, just info; do not prevent unloading IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9878641446078124	WITHOUT_CLASSIFICATION	0.012135855392187594	DESIGN
do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9998634023592353	WITHOUT_CLASSIFICATION	1.365976407646191E-4	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
line 329	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9994400626287616	WITHOUT_CLASSIFICATION	5.599373712384096E-4	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
dynamically increase	WITHOUT_CLASSIFICATION	0.9998406213866763	WITHOUT_CLASSIFICATION	1.5937861332363415E-4	DESIGN
discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9995281634622151	WITHOUT_CLASSIFICATION	4.7183653778487056E-4	DESIGN
else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.999485775608677	WITHOUT_CLASSIFICATION	5.142243913228695E-4	DESIGN
shift to yyN	WITHOUT_CLASSIFICATION	0.9933558141744303	WITHOUT_CLASSIFICATION	0.006644185825569674	DESIGN
reduce (yyN)	WITHOUT_CLASSIFICATION	0.9990627085975925	WITHOUT_CLASSIFICATION	9.372914024075346E-4	DESIGN
leave stack alone	WITHOUT_CLASSIFICATION	0.9996713962024151	WITHOUT_CLASSIFICATION	3.286037975849638E-4	DESIGN
line 271	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 274	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 303	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 311	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 314	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 317	WITHOUT_CLASSIFICATION	0.9998143997833794	WITHOUT_CLASSIFICATION	1.856002166206738E-4	DESIGN
line 332	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 338	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 341	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 344	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 351	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 358	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 367	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 372	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 378	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 382	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 407	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 411	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 414	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 417	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 420	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 426	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 434	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 443	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 446	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 452	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 457	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 464	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 467	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 470	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 479	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 484	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 486	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 492	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 498	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 501	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 504	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 507	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 510	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 519	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 525	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
line 537	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 540	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 543	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 546	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 556	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 559	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 563	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 566	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 569	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 575	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 578	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 587	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 596	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 604	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 607	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 610	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 613	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 616	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 634	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 638	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 643	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 646	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 655	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 660	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 667	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 670	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 672	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 696	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 701	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 717	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 720	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 726	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 729	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 732	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 735	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 738	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 751	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 754	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 757	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 760	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 763	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 769	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 772	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 775	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 782	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 788	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 791	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 794	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 797	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 803	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 806	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 809	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 815	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 818	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 821	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 824	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 830	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 833	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 836	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 839	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 842	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 848	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 852	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 858	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 861	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 868	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 871	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 876	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 879	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 883	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 893	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 896	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 899	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 903	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 907	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 915	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 920	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 923	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 926	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 932	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 936	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 940	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 944	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 948	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 956	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 960	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 964	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 967	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 972	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 978	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 980	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 984	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 986	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 996	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1001	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1004	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1008	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1014	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1029	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1032	WITHOUT_CLASSIFICATION	0.9998178302072391	WITHOUT_CLASSIFICATION	1.8216979276080588E-4	DESIGN
line 1034	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1045	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1048	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1051	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1058	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1070	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1073	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1076	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1079	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1082	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1089	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1097	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1100	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1103	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1107	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1111	WITHOUT_CLASSIFICATION	0.9998182688719126	WITHOUT_CLASSIFICATION	1.8173112808737174E-4	DESIGN
line 1113	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1115	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1119	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1130	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1133	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1135	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1137	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1140	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1151	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1154	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1158	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1164	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1175	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1178	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1187	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1189	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1193	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1204	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1207	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1210	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1214	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1234	WITHOUT_CLASSIFICATION	0.9998145353626612	WITHOUT_CLASSIFICATION	1.8546463733874722E-4	DESIGN
line 1239	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1243	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1247	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1251	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1263	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1269	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1280	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1283	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1290	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1296	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1299	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1302	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1309	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1313	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1315	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1320	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1328	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1335	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1348	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1352	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1358	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1374	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1381	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1387	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1392	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1415	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1431	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1434	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1440	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1443	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1453	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1456	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1462	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1465	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1470	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1477	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1480	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1485	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1488	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1496	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1502	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1510	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1513	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1516	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1533	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1550	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1553	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1556	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1565	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1568	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1571	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1574	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1577	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1587	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1595	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1598	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1600	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1609	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1623	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1626	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1629	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1632	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1638	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1641	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1644	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1649	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1655	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1658	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1661	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1672	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1677	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1687	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1694	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1705	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1708	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1725	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1733	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1742	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1745	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1749	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1757	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1769	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1772	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1775	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1784	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1808	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1814	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1818	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1822	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
force for args	WITHOUT_CLASSIFICATION	0.9995201209317283	WITHOUT_CLASSIFICATION	4.79879068271762E-4	DESIGN
XXX 0;	WITHOUT_CLASSIFICATION	0.9152092215464674	WITHOUT_CLASSIFICATION	0.08479077845353264	DESIGN
$$ = $3;	WITHOUT_CLASSIFICATION	0.9998441862574565	WITHOUT_CLASSIFICATION	1.5581374254354646E-4	DESIGN
}	WITHOUT_CLASSIFICATION	0.9992160564161661	WITHOUT_CLASSIFICATION	7.83943583834052E-4	DESIGN
last expression should not be void	WITHOUT_CLASSIFICATION	0.9874354153992031	WITHOUT_CLASSIFICATION	0.012564584600796996	DESIGN
compstmt position includes both parens around it	WITHOUT_CLASSIFICATION	0.9142169622637867	WITHOUT_CLASSIFICATION	0.0857830377362134	DESIGN
$8 == null ? NilImplicitNode.NIL : $8;	WITHOUT_CLASSIFICATION	0.9610019543431227	WITHOUT_CLASSIFICATION	0.038998045656877325	DESIGN
$5 == null ? NilImplicitNode.NIL : $5;	WITHOUT_CLASSIFICATION	0.9610019543431227	WITHOUT_CLASSIFICATION	0.038998045656877325	DESIGN
NOEX_PRIVATE for toplevel	WITHOUT_CLASSIFICATION	0.9993720659326516	WITHOUT_CLASSIFICATION	6.279340673483597E-4	DESIGN
mirko: check	WITHOUT_CLASSIFICATION	0.999853597009429	WITHOUT_CLASSIFICATION	1.4640299057091984E-4	DESIGN
Include pipes on multiple arg type	WITHOUT_CLASSIFICATION	0.9898849660125291	WITHOUT_CLASSIFICATION	0.010115033987470866	DESIGN
line 529	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
.setPosFrom($2);	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
XXX	WITHOUT_CLASSIFICATION	0.9021409038383422	WITHOUT_CLASSIFICATION	0.09785909616165774	DESIGN
zero length array	WITHOUT_CLASSIFICATION	0.9999234468430618	WITHOUT_CLASSIFICATION	7.655315693817902E-5	DESIGN
DStrNode: :"some text #{some expression}"	WITHOUT_CLASSIFICATION	0.9998043349632473	WITHOUT_CLASSIFICATION	1.9566503675259536E-4	DESIGN
StrNode: :"some text"	WITHOUT_CLASSIFICATION	0.9988284542376509	WITHOUT_CLASSIFICATION	0.0011715457623492152	DESIGN
EvStrNode :"#{some expression}"	WITHOUT_CLASSIFICATION	0.9992535500365699	WITHOUT_CLASSIFICATION	7.464499634301213E-4	DESIGN
line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9997512927221388	WITHOUT_CLASSIFICATION	2.487072778611669E-4	DESIGN
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9980707330657422	WITHOUT_CLASSIFICATION	0.001929266934257701	DESIGN
yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9994400626287616	WITHOUT_CLASSIFICATION	5.599373712384096E-4	DESIGN
line 7713 "-"	WITHOUT_CLASSIFICATION	0.9998275630467994	WITHOUT_CLASSIFICATION	1.7243695320070387E-4	DESIGN
local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9998517028483489	WITHOUT_CLASSIFICATION	1.4829715165121183E-4	DESIGN
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999462054327809	WITHOUT_CLASSIFICATION	5.379456721905188E-5	DESIGN
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999462054327809	WITHOUT_CLASSIFICATION	5.379456721905188E-5	DESIGN
We know this is a block scope because a local scope cannot be within a local scope If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999954354704133	WITHOUT_CLASSIFICATION	4.564529586739042E-6	DESIGN
ENEBO: 1.9 has CURR nodes for local/block variables. We don't. I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9965316976323974	WITHOUT_CLASSIFICATION	0.0034683023676026666	DESIGN
odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9991854094228041	WITHOUT_CLASSIFICATION	8.145905771959964E-4	DESIGN
What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9997282303570263	WITHOUT_CLASSIFICATION	2.717696429736538E-4	DESIGN
Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.8560436998090729	WITHOUT_CLASSIFICATION	0.14395630019092703	DESIGN
We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9998698494317688	WITHOUT_CLASSIFICATION	1.301505682312312E-4	DESIGN
Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9995651030094108	WITHOUT_CLASSIFICATION	4.348969905892559E-4	DESIGN
Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9996252122845719	WITHOUT_CLASSIFICATION	3.74787715428034E-4	DESIGN
Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9833060105340895	WITHOUT_CLASSIFICATION	0.01669398946591046	DESIGN
__END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9991444693678599	WITHOUT_CLASSIFICATION	8.555306321401405E-4	DESIGN
Parser states:	WITHOUT_CLASSIFICATION	0.9994350164831367	WITHOUT_CLASSIFICATION	5.649835168633384E-4	DESIGN
Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9951768772357867	WITHOUT_CLASSIFICATION	0.004823122764213309	DESIGN
Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9540154372012508	WITHOUT_CLASSIFICATION	0.04598456279874912	DESIGN
LOCALVAR	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
CONSTANT	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9992857504807046	WITHOUT_CLASSIFICATION	7.14249519295532E-4	DESIGN
MRI: block_append	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
Reduces overhead in interp by not set position every single line we encounter.	WITHOUT_CLASSIFICATION	0.9996100500522134	WITHOUT_CLASSIFICATION	3.8994994778660414E-4	DESIGN
Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9998025401517388	WITHOUT_CLASSIFICATION	1.9745984826126248E-4	DESIGN
return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9997380587498829	WITHOUT_CLASSIFICATION	2.6194125011710543E-4	DESIGN
Node	WITHOUT_CLASSIFICATION	0.9995440037938256	WITHOUT_CLASSIFICATION	4.559962061743585E-4	DESIGN
FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9792716401790542	DESIGN	0.02072835982094573	WITHOUT_CLASSIFICATION
case CONSTNODE: handleUselessWarn(node, "a constant"); return;	WITHOUT_CLASSIFICATION	0.9998755025820333	WITHOUT_CLASSIFICATION	1.2449741796676992E-4	DESIGN
FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9792716401790542	DESIGN	0.02072835982094573	WITHOUT_CLASSIFICATION
case CLASSNODE: case COLON2NODE: handleUselessWarn(node, "::"); return;	WITHOUT_CLASSIFICATION	0.999874916848322	WITHOUT_CLASSIFICATION	1.2508315167806945E-4	DESIGN
case SELFNODE: handleUselessWarn(node, "self"); return;	WITHOUT_CLASSIFICATION	0.999874916848322	WITHOUT_CLASSIFICATION	1.2508315167806945E-4	DESIGN
FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.8186887737923523	DESIGN	0.18131122620764778	WITHOUT_CLASSIFICATION
MRI: range_op	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9990040648455816	WITHOUT_CLASSIFICATION	9.959351544183987E-4	DESIGN
foo()	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
foo()	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
foo()	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
tail must be EvStrNode at this point	WITHOUT_CLASSIFICATION	0.9929624915474232	WITHOUT_CLASSIFICATION	0.007037508452576715	DESIGN
Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9990364871802264	WITHOUT_CLASSIFICATION	9.635128197736403E-4	DESIGN
Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9964898121184391	WITHOUT_CLASSIFICATION	0.0035101878815607616	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
dynamically increase	WITHOUT_CLASSIFICATION	0.9998406213866763	WITHOUT_CLASSIFICATION	1.5937861332363415E-4	DESIGN
else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.999485775608677	WITHOUT_CLASSIFICATION	5.142243913228695E-4	DESIGN
shift to yyN	WITHOUT_CLASSIFICATION	0.9933558141744303	WITHOUT_CLASSIFICATION	0.006644185825569674	DESIGN
reduce (yyN)	WITHOUT_CLASSIFICATION	0.9990627085975925	WITHOUT_CLASSIFICATION	9.372914024075346E-4	DESIGN
leave stack alone	WITHOUT_CLASSIFICATION	0.9996713962024151	WITHOUT_CLASSIFICATION	3.286037975849638E-4	DESIGN
line 321	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 351	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 382	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 417	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 420	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 423	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 426	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 280	WITHOUT_CLASSIFICATION	0.9998151392480237	WITHOUT_CLASSIFICATION	1.8486075197638433E-4	DESIGN
line 283	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 296	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 324	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 327	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 331	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 333	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 336	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 342	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 345	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 348	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 354	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 368	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 377	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 388	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 392	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 397	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 429	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 432	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 436	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 445	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 448	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 454	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 459	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 466	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 469	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 478	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 481	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 488	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 494	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 497	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 503	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 506	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 509	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 512	WITHOUT_CLASSIFICATION	0.9998156467618072	WITHOUT_CLASSIFICATION	1.8435323819278554E-4	DESIGN
line 521	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 526	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 540	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 543	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 546	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 566	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 610	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 672	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 691	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 696	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 772	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 782	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 785	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 788	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 791	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 534	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 549	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 552	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 558	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 561	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 571	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 574	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 579	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 586	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 589	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 592	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 595	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 598	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 623	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 627	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 630	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 633	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 639	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 648	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 657	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 661	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 666	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 678	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 682	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 688	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 699	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 706	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 708	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 727	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 737	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 753	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 779	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 801	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 808	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 811	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 817	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 842	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 845	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 848	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 893	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 899	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 932	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 944	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 960	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 980	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1004	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1038	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 820	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 826	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 829	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 832	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 851	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 857	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 860	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 863	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 866	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 869	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 875	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 884	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 887	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 890	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 902	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 909	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 912	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 916	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 922	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 928	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 941	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 947	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 951	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 955	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 965	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 969	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 977	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 983	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1013	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1023	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1035	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1041	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1043	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1054	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1057	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1060	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1069	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1075	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1105	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1111	WITHOUT_CLASSIFICATION	0.9998182688719126	WITHOUT_CLASSIFICATION	1.8173112808737174E-4	DESIGN
line 1122	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1130	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1140	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1158	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1204	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1207	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1247	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1251	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1261	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1078	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1084	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1087	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1090	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1093	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1114	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1116	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1118	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1124	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1126	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1138	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1144	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1149	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1155	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1162	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1173	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1179	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1182	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1190	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1196	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1213	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1217	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1231	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1236	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1244	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1254	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1258	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1264	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1270	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1273	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1276	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1279	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1282	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1289	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1292	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1295	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1298	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1305	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1348	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1387	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1392	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1448	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1462	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1470	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1496	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1502	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1595	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1598	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1308	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1311	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1317	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1323	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1326	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1329	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1337	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1342	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1345	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1354	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1359	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1366	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1369	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1373	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1377	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1383	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1399	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1401	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1406	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1417	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1424	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1427	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1430	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1433	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1436	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1442	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1445	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1458	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1464	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1489	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1493	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1507	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1519	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1532	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1538	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1542	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1557	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1573	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1591	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1615	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1629	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1632	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1705	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1716	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1725	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1742	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1749	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1818	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1822	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1607	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1610	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1622	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1625	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1636	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1639	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1647	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1651	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1657	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1660	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1663	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1678	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1702	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1711	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1719	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1722	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1731	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1734	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1738	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1746	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1756	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1758	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1761	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1767	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1776	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1782	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1785	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1788	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1791	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1797	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1800	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1803	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1806	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1809	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1815	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1825	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1828	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1831	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1847	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
$8 == null ? NilImplicitNode.NIL : $8;	WITHOUT_CLASSIFICATION	0.9610019543431227	WITHOUT_CLASSIFICATION	0.038998045656877325	DESIGN
$5 == null ? NilImplicitNode.NIL : $5;	WITHOUT_CLASSIFICATION	0.9610019543431227	WITHOUT_CLASSIFICATION	0.038998045656877325	DESIGN
.setPosFrom($2);	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
zero length array	WITHOUT_CLASSIFICATION	0.9999234468430618	WITHOUT_CLASSIFICATION	7.655315693817902E-5	DESIGN
DStrNode: :"some text #{some expression}"	WITHOUT_CLASSIFICATION	0.9998043349632473	WITHOUT_CLASSIFICATION	1.9566503675259536E-4	DESIGN
StrNode: :"some text"	WITHOUT_CLASSIFICATION	0.9988284542376509	WITHOUT_CLASSIFICATION	0.0011715457623492152	DESIGN
EvStrNode :"#{some expression}"	WITHOUT_CLASSIFICATION	0.9992535500365699	WITHOUT_CLASSIFICATION	7.464499634301213E-4	DESIGN
INSTANCE VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9988767841840338	WITHOUT_CLASSIFICATION	0.0011232158159661656	DESIGN
line 1854	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1869	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1872	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1877	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1886	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1898	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1902	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1905	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1911	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1918	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1935	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1938	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1942	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1948	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1960	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1963	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1968	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1972	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1982	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1995	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 2000	WITHOUT_CLASSIFICATION	0.9998850128105954	WITHOUT_CLASSIFICATION	1.1498718940462282E-4	DESIGN
line 2006	WITHOUT_CLASSIFICATION	0.9998166699158565	WITHOUT_CLASSIFICATION	1.833300841435456E-4	DESIGN
line 2010	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
We may need to subtract addition offset off of first	WITHOUT_CLASSIFICATION	0.9991855833443246	WITHOUT_CLASSIFICATION	8.144166556752476E-4	DESIGN
string fragment (we optimistically take one off in	WITHOUT_CLASSIFICATION	0.9991133498441477	WITHOUT_CLASSIFICATION	8.866501558523334E-4	DESIGN
ParserSupport.literal_concat). Check token length	WITHOUT_CLASSIFICATION	0.9996618387674172	WITHOUT_CLASSIFICATION	3.381612325828008E-4	DESIGN
and subtract as neeeded.	WITHOUT_CLASSIFICATION	0.9996110256744286	WITHOUT_CLASSIFICATION	3.8897432557137535E-4	DESIGN
$$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);	WITHOUT_CLASSIFICATION	0.9998582178514247	WITHOUT_CLASSIFICATION	1.417821485753183E-4	DESIGN
ENEBO: arg surrounded by in_defined set/unset	WITHOUT_CLASSIFICATION	0.9997517522651518	WITHOUT_CLASSIFICATION	2.4824773484821813E-4	DESIGN
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9980707330657422	WITHOUT_CLASSIFICATION	0.001929266934257701	DESIGN
yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9994400626287616	WITHOUT_CLASSIFICATION	5.599373712384096E-4	DESIGN
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999462054327809	WITHOUT_CLASSIFICATION	5.379456721905188E-5	DESIGN
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999462054327809	WITHOUT_CLASSIFICATION	5.379456721905188E-5	DESIGN
ENEBO: Removed !compile_for_eval which probably is to reduce warnings	WITHOUT_CLASSIFICATION	0.9989930232731372	WITHOUT_CLASSIFICATION	0.0010069767268628459	DESIGN
was $$ = null;	WITHOUT_CLASSIFICATION	0.9996175315375438	WITHOUT_CLASSIFICATION	3.8246846245614446E-4	DESIGN
line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9996088004367446	WITHOUT_CLASSIFICATION	3.9119956325540814E-4	DESIGN
line 8143 "-"	WITHOUT_CLASSIFICATION	0.9998275630467994	WITHOUT_CLASSIFICATION	1.7243695320070387E-4	DESIGN
we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999663897657721	WITHOUT_CLASSIFICATION	3.361023422782423E-5	DESIGN
No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999499167623026	WITHOUT_CLASSIFICATION	5.008323769734024E-5	DESIGN
Next immediate scope. Variable and constant scoping rules make use of this variable in different ways.	WITHOUT_CLASSIFICATION	0.9902204599792873	WITHOUT_CLASSIFICATION	0.009779540020712749	DESIGN
Live reference to module	WITHOUT_CLASSIFICATION	0.997865121805051	WITHOUT_CLASSIFICATION	0.0021348781949489374	DESIGN
Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.999796251196525	WITHOUT_CLASSIFICATION	2.0374880347494886E-4	DESIGN
Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999425501221962	WITHOUT_CLASSIFICATION	5.7449877803764096E-5	DESIGN
number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9992208854049316	WITHOUT_CLASSIFICATION	7.791145950683389E-4	DESIGN
number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9988526256727435	WITHOUT_CLASSIFICATION	0.001147374327256601	DESIGN
index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9993672299181611	WITHOUT_CLASSIFICATION	6.327700818389001E-4	DESIGN
Note that this object equality check is intentional, to ensure the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999723956738198	WITHOUT_CLASSIFICATION	2.760432618018538E-5	DESIGN
Returns slot of variable	WITHOUT_CLASSIFICATION	0.9972556459416494	WITHOUT_CLASSIFICATION	0.0027443540583506456	DESIGN
Returns slot of variable	WITHOUT_CLASSIFICATION	0.9972556459416494	WITHOUT_CLASSIFICATION	0.0027443540583506456	DESIGN
Note: Only used by compiler until it can use getConstant again or use some other refactoring	WITHOUT_CLASSIFICATION	0.8616727340673965	WITHOUT_CLASSIFICATION	0.13832726593260342	DESIGN
If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.998422262200312	WITHOUT_CLASSIFICATION	0.0015777377996879015	DESIGN
Try and unload the autoload specified from internedName	WITHOUT_CLASSIFICATION	0.9996683473626821	WITHOUT_CLASSIFICATION	3.316526373178572E-4	DESIGN
We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9996593261646151	WITHOUT_CLASSIFICATION	3.406738353849178E-4	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999729143981631	WITHOUT_CLASSIFICATION	2.7085601836896524E-4	DESIGN
do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9992050626004264	WITHOUT_CLASSIFICATION	7.949373995735862E-4	DESIGN
source extensions	WITHOUT_CLASSIFICATION	0.9998715282501403	WITHOUT_CLASSIFICATION	1.2847174985973684E-4	DESIGN
do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9992050626004264	WITHOUT_CLASSIFICATION	7.949373995735862E-4	DESIGN
. Array given to rest should pass itself . Array with rest + other args should extract array . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9989341590569968	WITHOUT_CLASSIFICATION	0.0010658409430031887	DESIGN
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9919935714209827	WITHOUT_CLASSIFICATION	0.00800642857901732	DESIGN
Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.7606860037518852	WITHOUT_CLASSIFICATION	0.23931399624811484	DESIGN
Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.6915296632240908	WITHOUT_CLASSIFICATION	0.30847033677590924	DESIGN
private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9962498924656797	WITHOUT_CLASSIFICATION	0.00375010753432023	DESIGN
private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9962498924656797	WITHOUT_CLASSIFICATION	0.00375010753432023	DESIGN
List of active dynamic scopes. Each of these may have captured other dynamic scopes to implement closures.	WITHOUT_CLASSIFICATION	0.7473346799651396	WITHOUT_CLASSIFICATION	0.2526653200348604	DESIGN
File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999798293124152	WITHOUT_CLASSIFICATION	2.0170687584852033E-5	DESIGN
Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9998721450436115	WITHOUT_CLASSIFICATION	1.278549563884237E-4	DESIGN
In certain places, like grep, we don't use real frames for the call blocks. This has the effect of not setting the backref in the correct frame - this delta is activated to the place where the grep is running in so that the backref will be set in an appropriate place.	WITHOUT_CLASSIFICATION	0.9886528067857714	DESIGN	0.011347193214228612	WITHOUT_CLASSIFICATION
TOPLEVEL self and a few others want a top-level scope. We create this one right away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9962794753487637	WITHOUT_CLASSIFICATION	0.0037205246512362826	DESIGN
CATCH MANAGEMENT	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
FRAME MANAGEMENT	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9896013302035661	WITHOUT_CLASSIFICATION	0.010398669796433974	DESIGN
assert level == 0;	WITHOUT_CLASSIFICATION	0.9990715005745631	WITHOUT_CLASSIFICATION	9.28499425436902E-4	DESIGN
assert level == 0;	WITHOUT_CLASSIFICATION	0.9990715005745631	WITHOUT_CLASSIFICATION	9.28499425436902E-4	DESIGN
look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9995041555066643	WITHOUT_CLASSIFICATION	4.958444933357609E-4	DESIGN
if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9998928792571489	WITHOUT_CLASSIFICATION	1.0712074285101454E-4	DESIGN
look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9993472644775085	WITHOUT_CLASSIFICATION	6.52735522491528E-4	DESIGN
All entries following removed node can stay in list, but all preceding ones need to be cloned.	WITHOUT_CLASSIFICATION	0.9991293550633761	WITHOUT_CLASSIFICATION	8.706449366238549E-4	DESIGN
required and optional only	WITHOUT_CLASSIFICATION	0.9998569108301137	WITHOUT_CLASSIFICATION	1.4308916988628058E-4	DESIGN
do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9992050626004264	WITHOUT_CLASSIFICATION	7.949373995735862E-4	DESIGN
look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9990662943301286	WITHOUT_CLASSIFICATION	9.33705669871436E-4	DESIGN
set the binding's frame's "previous" file and line to current, so trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999965770001095	WITHOUT_CLASSIFICATION	3.4229998905903916E-6	DESIGN
framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9994928911797819	WITHOUT_CLASSIFICATION	5.071088202180978E-4	DESIGN
look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9992035395903444	WITHOUT_CLASSIFICATION	7.96460409655704E-4	DESIGN
unframed invokers have no Ruby frames, so pull from class name but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999810196404267	WITHOUT_CLASSIFICATION	1.898035957334322E-5	DESIGN
try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9998800792033965	WITHOUT_CLASSIFICATION	1.1992079660346814E-4	DESIGN
Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999231797251895	WITHOUT_CLASSIFICATION	7.68202748105279E-5	DESIGN
Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9998493187021443	WITHOUT_CLASSIFICATION	1.506812978556968E-4	DESIGN
Determine what sort of assigner should be used for the provided 'iter' (e.g. block). Assigner provides just the right logic for assigning values to local parameters of the block. This method also has a second optimization which is to set 'noargblock' in the case that the block is a block which accepts no arguments. The primary reason for this second optimization is that in the case of a yield with a RubyArray we will bypass some logic processing the RubyArray into a proper form (only to then not do anythign with it). A secondary benefit is that a simple boolean seems to optimize by hotspot much faster than the zero arg assigner.	WITHOUT_CLASSIFICATION	0.9420703753155115	WITHOUT_CLASSIFICATION	0.05792962468448848	DESIGN
new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9987040240144823	WITHOUT_CLASSIFICATION	0.001295975985517657	DESIGN
No argument blocks	WITHOUT_CLASSIFICATION	0.9999446781226967	WITHOUT_CLASSIFICATION	5.5321877303225876E-5	DESIGN
just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999020582760417	WITHOUT_CLASSIFICATION	9.79417239582565E-5	DESIGN
Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.8156741139097056	WITHOUT_CLASSIFICATION	0.18432588609029443	DESIGN
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9981317518656125	WITHOUT_CLASSIFICATION	0.0018682481343874312	DESIGN
This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9279959485586304	WITHOUT_CLASSIFICATION	0.07200405144136947	DESIGN
Highest reserved id	WITHOUT_CLASSIFICATION	0.9992540794904428	WITHOUT_CLASSIFICATION	7.459205095572296E-4	DESIGN
binary typed calls	WITHOUT_CLASSIFICATION	0.9998531248306366	WITHOUT_CLASSIFICATION	1.4687516936348242E-4	DESIGN
id must always be even	WITHOUT_CLASSIFICATION	0.9867395603480913	WITHOUT_CLASSIFICATION	0.013260439651908814	DESIGN
with block pass	WITHOUT_CLASSIFICATION	0.9998244816268983	WITHOUT_CLASSIFICATION	1.7551837310178183E-4	DESIGN
no block	WITHOUT_CLASSIFICATION	0.9997715386032562	WITHOUT_CLASSIFICATION	2.2846139674384286E-4	DESIGN
with block literal (iter)	WITHOUT_CLASSIFICATION	0.9981303599299611	WITHOUT_CLASSIFICATION	0.0018696400700388578	DESIGN
assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9790439336416671	WITHOUT_CLASSIFICATION	0.02095606635833288	DESIGN
if we have multiple asgn with just args, need a special type for that	WITHOUT_CLASSIFICATION	0.989971361350031	WITHOUT_CLASSIFICATION	0.010028638649968979	DESIGN
&& args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9988073790138502	WITHOUT_CLASSIFICATION	0.0011926209861498574	DESIGN
return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9996507726264451	WITHOUT_CLASSIFICATION	3.4922737355489E-4	DESIGN
ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999661053782597	WITHOUT_CLASSIFICATION	3.3894621740311834E-5	DESIGN
predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9909409687613888	WITHOUT_CLASSIFICATION	0.009059031238611152	DESIGN
fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.999879903466884	WITHOUT_CLASSIFICATION	1.2009653311595288E-4	DESIGN
Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9988781489915127	WITHOUT_CLASSIFICATION	0.0011218510084873607	DESIGN
Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9963530709203585	WITHOUT_CLASSIFICATION	0.0036469290796415223	DESIGN
Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9982725505304121	WITHOUT_CLASSIFICATION	0.0017274494695878402	DESIGN
Lastline	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9994501877440384	WITHOUT_CLASSIFICATION	5.498122559617041E-4	DESIGN
bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9993149939564684	WITHOUT_CLASSIFICATION	6.850060435315597E-4	DESIGN
Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9997174037346003	WITHOUT_CLASSIFICATION	2.825962653997014E-4	DESIGN
try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9997971241886413	WITHOUT_CLASSIFICATION	2.0287581135863564E-4	DESIGN
Some helper functions:	WITHOUT_CLASSIFICATION	0.9995396404591157	WITHOUT_CLASSIFICATION	4.603595408843462E-4	DESIGN
silently ignore	WITHOUT_CLASSIFICATION	0.9995687478829564	WITHOUT_CLASSIFICATION	4.312521170436569E-4	DESIGN
used by compiler	WITHOUT_CLASSIFICATION	0.9801912914808903	WITHOUT_CLASSIFICATION	0.019808708519109697	DESIGN
initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.991191850839291	WITHOUT_CLASSIFICATION	0.008808149160709145	DESIGN
INSTANCE VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9988767841840338	WITHOUT_CLASSIFICATION	0.0011232158159661656	DESIGN
We need to guarantee that any existing reads of old Map can proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999802071278936	WITHOUT_CLASSIFICATION	1.9792872106364724E-5	DESIGN
Single node on list	WITHOUT_CLASSIFICATION	0.9998727625548732	WITHOUT_CLASSIFICATION	1.2723744512685935E-4	DESIGN
Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9975416127815803	WITHOUT_CLASSIFICATION	0.002458387218419839	DESIGN
Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9998042773652438	WITHOUT_CLASSIFICATION	1.9572263475615485E-4	DESIGN
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9919935714209827	WITHOUT_CLASSIFICATION	0.00800642857901732	DESIGN
Note: In Ruby 1.9 all of this logic can go away since they will require explicit bindings for evals.	WITHOUT_CLASSIFICATION	0.9982715541643888	WITHOUT_CLASSIFICATION	0.0017284458356111511	DESIGN
We only define one special dynamic scope per 'logical' binding. So all bindings for the same scope should share the same dynamic scope. This allows multiple evals with different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.883280802531513	WITHOUT_CLASSIFICATION	0.11671919746848695	DESIGN
If the next scope out has the same binding scope as this scope it means we are evaling within an eval and in that case we should be sharing the same binding scope.	WITHOUT_CLASSIFICATION	0.999684668527747	WITHOUT_CLASSIFICATION	3.1533147225306523E-4	DESIGN
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999806547398855	WITHOUT_CLASSIFICATION	1.9345260114463262E-5	DESIGN
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999806547398855	WITHOUT_CLASSIFICATION	1.9345260114463262E-5	DESIGN
nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999874192401577	WITHOUT_CLASSIFICATION	1.258075984241197E-5	DESIGN
nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999874192401577	WITHOUT_CLASSIFICATION	1.258075984241197E-5	DESIGN
nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999874192401577	WITHOUT_CLASSIFICATION	1.258075984241197E-5	DESIGN
no extra args for rest	WITHOUT_CLASSIFICATION	0.9998935675624177	WITHOUT_CLASSIFICATION	1.0643243758241021E-4	DESIGN
no extra args for rest	WITHOUT_CLASSIFICATION	0.9998935675624177	WITHOUT_CLASSIFICATION	1.0643243758241021E-4	DESIGN
extra args for rest	WITHOUT_CLASSIFICATION	0.9999304015310814	WITHOUT_CLASSIFICATION	6.959846891859797E-5	DESIGN
extra args for rest	WITHOUT_CLASSIFICATION	0.9999304015310814	WITHOUT_CLASSIFICATION	6.959846891859797E-5	DESIGN
This is the proper behavior for all non-expanded assigners which have a pre > 0. The rest override this.	WITHOUT_CLASSIFICATION	0.9999446203019874	WITHOUT_CLASSIFICATION	5.537969801252715E-5	DESIGN
This is the proper behavior for all non-expanded assigners.	WITHOUT_CLASSIFICATION	0.988037356437344	WITHOUT_CLASSIFICATION	0.01196264356265602	DESIGN
prefill ?	WITHOUT_CLASSIFICATION	0.9990737155988149	WITHOUT_CLASSIFICATION	9.262844011851661E-4	DESIGN
prefill ?	WITHOUT_CLASSIFICATION	0.9990737155988149	WITHOUT_CLASSIFICATION	9.262844011851661E-4	DESIGN
MUST be called from synchronized/locked block! should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9988207374748155	WITHOUT_CLASSIFICATION	0.0011792625251845993	DESIGN
retrieve method module name	WITHOUT_CLASSIFICATION	0.9961621111332031	WITHOUT_CLASSIFICATION	0.003837888866796807	DESIGN
call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9992462851922715	WITHOUT_CLASSIFICATION	7.537148077285225E-4	DESIGN
if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9998846056345745	WITHOUT_CLASSIFICATION	1.1539436542557008E-4	DESIGN
if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9995585681345289	WITHOUT_CLASSIFICATION	4.4143186547111654E-4	DESIGN
method object already present, push various args tc self klazz name	WITHOUT_CLASSIFICATION	0.9997339805490741	WITHOUT_CLASSIFICATION	2.6601945092585914E-4	DESIGN
if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.999937511029717	WITHOUT_CLASSIFICATION	6.248897028308377E-5	DESIGN
invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9993908839853847	WITHOUT_CLASSIFICATION	6.091160146153951E-4	DESIGN
caller	WITHOUT_CLASSIFICATION	0.9996226037227749	WITHOUT_CLASSIFICATION	3.7739627722517544E-4	DESIGN
calltype block	WITHOUT_CLASSIFICATION	0.9996853369573688	WITHOUT_CLASSIFICATION	3.1466304263118766E-4	DESIGN
if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999859486331679	WITHOUT_CLASSIFICATION	1.4051366832152595E-5	DESIGN
load arity for check	WITHOUT_CLASSIFICATION	0.9997856417360687	WITHOUT_CLASSIFICATION	2.1435826393143703E-4	DESIGN
throw	WITHOUT_CLASSIFICATION	0.9988560436378613	WITHOUT_CLASSIFICATION	0.0011439563621386932	DESIGN
load arity for error	WITHOUT_CLASSIFICATION	0.9986554990191411	WITHOUT_CLASSIFICATION	0.0013445009808589193	DESIGN
arity ok, continue	WITHOUT_CLASSIFICATION	0.9993678536185566	WITHOUT_CLASSIFICATION	6.321463814432776E-4	DESIGN
InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9988262199975204	WITHOUT_CLASSIFICATION	0.0011737800024795742	DESIGN
ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9970920788182482	WITHOUT_CLASSIFICATION	0.002907921181751724	DESIGN
FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9988262199975204	WITHOUT_CLASSIFICATION	0.0011737800024795742	DESIGN
InvocationCallback	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9992535500365699	WITHOUT_CLASSIFICATION	7.464499634301213E-4	DESIGN
for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999382899314297	WITHOUT_CLASSIFICATION	6.171006857024855E-5	DESIGN
for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999302964182586	WITHOUT_CLASSIFICATION	6.970358174138939E-5	DESIGN
load the encoding	WITHOUT_CLASSIFICATION	0.9996940735014559	WITHOUT_CLASSIFICATION	3.059264985440822E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9993120417264894	WITHOUT_CLASSIFICATION	6.879582735107318E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9993120417264894	WITHOUT_CLASSIFICATION	6.879582735107318E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9993120417264894	WITHOUT_CLASSIFICATION	6.879582735107318E-4	DESIGN
IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9994908861003753	WITHOUT_CLASSIFICATION	5.091138996246654E-4	DESIGN
IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9994908861003753	WITHOUT_CLASSIFICATION	5.091138996246654E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9994908861003753	WITHOUT_CLASSIFICATION	5.091138996246654E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9994908861003753	WITHOUT_CLASSIFICATION	5.091138996246654E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9994908861003753	WITHOUT_CLASSIFICATION	5.091138996246654E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997110801454634	WITHOUT_CLASSIFICATION	2.8891985453658104E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997110801454634	WITHOUT_CLASSIFICATION	2.8891985453658104E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997110801454634	WITHOUT_CLASSIFICATION	2.8891985453658104E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997110801454634	WITHOUT_CLASSIFICATION	2.8891985453658104E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997110801454634	WITHOUT_CLASSIFICATION	2.8891985453658104E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997110801454634	WITHOUT_CLASSIFICATION	2.8891985453658104E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997110801454634	WITHOUT_CLASSIFICATION	2.8891985453658104E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997110801454634	WITHOUT_CLASSIFICATION	2.8891985453658104E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997110801454634	WITHOUT_CLASSIFICATION	2.8891985453658104E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997110801454634	WITHOUT_CLASSIFICATION	2.8891985453658104E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997110801454634	WITHOUT_CLASSIFICATION	2.8891985453658104E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997110801454634	WITHOUT_CLASSIFICATION	2.8891985453658104E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997110801454634	WITHOUT_CLASSIFICATION	2.8891985453658104E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997110801454634	WITHOUT_CLASSIFICATION	2.8891985453658104E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997110801454634	WITHOUT_CLASSIFICATION	2.8891985453658104E-4	DESIGN
If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9997905271969715	WITHOUT_CLASSIFICATION	2.0947280302842985E-4	DESIGN
BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9988262199975204	WITHOUT_CLASSIFICATION	0.0011737800024795742	DESIGN
ThreadContext	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9992535500365699	WITHOUT_CLASSIFICATION	7.464499634301213E-4	DESIGN
Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9998000623639918	WITHOUT_CLASSIFICATION	1.9993763600810902E-4	DESIGN
RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9992535500365699	WITHOUT_CLASSIFICATION	7.464499634301213E-4	DESIGN
add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999931273708916	WITHOUT_CLASSIFICATION	6.87262910838052E-6	DESIGN
if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9997665777465886	WITHOUT_CLASSIFICATION	2.3342225341146084E-4	DESIGN
wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9990473968271966	WITHOUT_CLASSIFICATION	9.526031728034251E-4	DESIGN
add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9995963379316032	WITHOUT_CLASSIFICATION	4.036620683967892E-4	DESIGN
Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9922619757816894	WITHOUT_CLASSIFICATION	0.007738024218310586	DESIGN
"." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.8260891306802952	WITHOUT_CLASSIFICATION	0.1739108693197047	DESIGN
Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9996977855163641	WITHOUT_CLASSIFICATION	3.022144836358221E-4	DESIGN
Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999805341839748	WITHOUT_CLASSIFICATION	1.946581602519039E-5	DESIGN
Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9867347109419804	WITHOUT_CLASSIFICATION	0.013265289058019585	DESIGN
We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9202146038105723	WITHOUT_CLASSIFICATION	0.07978539618942769	DESIGN
If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9996839432888928	WITHOUT_CLASSIFICATION	3.1605671110721955E-4	DESIGN
quietly try to load the class	WITHOUT_CLASSIFICATION	0.99811376066465	WITHOUT_CLASSIFICATION	0.0018862393353499918	DESIGN
If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9991883944929585	WITHOUT_CLASSIFICATION	8.116055070414738E-4	DESIGN
no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9993079181237078	WITHOUT_CLASSIFICATION	6.920818762921926E-4	DESIGN
if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9993189891558615	WITHOUT_CLASSIFICATION	6.810108441385105E-4	DESIGN
signed short, big-endian	WITHOUT_CLASSIFICATION	0.9995188323835981	WITHOUT_CLASSIFICATION	4.8116761640188104E-4	DESIGN
source extensions	WITHOUT_CLASSIFICATION	0.9998715282501403	WITHOUT_CLASSIFICATION	1.2847174985973684E-4	DESIGN
We don't support .so, but some stdlib require .so directly replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.919242130930887	WITHOUT_CLASSIFICATION	0.08075786906911303	DESIGN
This code exploits the fact that all .jar files will be found for the JarredScript feature. This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9634873612116397	WITHOUT_CLASSIFICATION	0.03651263878836021	DESIGN
Make the class name look nice, by splitting on _ and capitalize each segment, then joining the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9989858005895907	WITHOUT_CLASSIFICATION	0.0010141994104092822	DESIGN
It's _really_ expensive to check that the class actually exists in the Jar, so we don't do that now.	WITHOUT_CLASSIFICATION	0.9999109732178327	WITHOUT_CLASSIFICATION	8.902678216734962E-5	DESIGN
trim extension to try other options	WITHOUT_CLASSIFICATION	0.9994046567930341	WITHOUT_CLASSIFICATION	5.953432069659386E-4	DESIGN
extension extensions	WITHOUT_CLASSIFICATION	0.9994486252032718	WITHOUT_CLASSIFICATION	5.513747967282033E-4	DESIGN
unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9993425950679248	WITHOUT_CLASSIFICATION	6.574049320753056E-4	DESIGN
try all extensions	WITHOUT_CLASSIFICATION	0.9998345453810629	WITHOUT_CLASSIFICATION	1.6545461893715675E-4	DESIGN
if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999568555742818	WITHOUT_CLASSIFICATION	4.314442571806778E-5	DESIGN
unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9994421735877316	WITHOUT_CLASSIFICATION	5.578264122684305E-4	DESIGN
try only literal search	WITHOUT_CLASSIFICATION	0.9996221149480279	WITHOUT_CLASSIFICATION	3.7788505197210653E-4	DESIGN
attempt to load the found library	WITHOUT_CLASSIFICATION	0.9989508208854955	WITHOUT_CLASSIFICATION	0.0010491791145046036	DESIGN
otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999128517759328	WITHOUT_CLASSIFICATION	8.714822406724276E-5	DESIGN
allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9950212171918826	WITHOUT_CLASSIFICATION	0.004978782808117366	DESIGN
Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9957476203345513	WITHOUT_CLASSIFICATION	0.004252379665448687	DESIGN
check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999990095374701	WITHOUT_CLASSIFICATION	9.904625299415735E-7	DESIGN
if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999770208482444	WITHOUT_CLASSIFICATION	2.297915175572097E-5	DESIGN
end suffix iteration	WITHOUT_CLASSIFICATION	0.9998621614735765	WITHOUT_CLASSIFICATION	1.3783852642352052E-4	DESIGN
if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9985160183397959	WITHOUT_CLASSIFICATION	0.0014839816602042338	DESIGN
if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999676570622904	WITHOUT_CLASSIFICATION	3.2342937709594756E-5	DESIGN
we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9984623540531739	WITHOUT_CLASSIFICATION	0.0015376459468261683	DESIGN
we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9984623540531739	WITHOUT_CLASSIFICATION	0.0015376459468261683	DESIGN
it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.997514074313738	WITHOUT_CLASSIFICATION	0.00248592568626213	DESIGN
it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.997514074313738	WITHOUT_CLASSIFICATION	0.00248592568626213	DESIGN
prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.999926600231513	WITHOUT_CLASSIFICATION	7.339976848692429E-5	DESIGN
prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.999926600231513	WITHOUT_CLASSIFICATION	7.339976848692429E-5	DESIGN
actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9998435224357257	WITHOUT_CLASSIFICATION	1.564775642742683E-4	DESIGN
handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9994243683494551	WITHOUT_CLASSIFICATION	5.756316505449838E-4	DESIGN
if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9997847693380922	WITHOUT_CLASSIFICATION	2.1523066190769213E-4	DESIGN
if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9998435089055092	WITHOUT_CLASSIFICATION	1.5649109449088566E-4	DESIGN
otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9979812465941204	WITHOUT_CLASSIFICATION	0.0020187534058796527	DESIGN
Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9543994370351665	WITHOUT_CLASSIFICATION	0.04560056296483346	DESIGN
signed short, native	WITHOUT_CLASSIFICATION	0.9998443472642604	WITHOUT_CLASSIFICATION	1.556527357396202E-4	DESIGN
If we fail to find as a normal Ruby script, we try to find as an extension, checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999269739619154	WITHOUT_CLASSIFICATION	7.302603808459566E-5	DESIGN
write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9024466559820863	WITHOUT_CLASSIFICATION	0.09755334401791375	DESIGN
if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999306957415649	WITHOUT_CLASSIFICATION	6.93042584351352E-5	DESIGN
Look in classpath next (we do not use File as a test since UNC names will match) Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9996802138241699	WITHOUT_CLASSIFICATION	3.197861758300109E-4	DESIGN
Directories and unavailable resources are not able to open a stream.	WITHOUT_CLASSIFICATION	0.9987841808067544	WITHOUT_CLASSIFICATION	0.0012158191932455991	DESIGN
Try to load from classpath without prefix. "A/b.rb" will not load as "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9998850492405077	WITHOUT_CLASSIFICATION	1.1495075949230394E-4	DESIGN
object has instance vars and isn't a class, get a snapshot to be marshalled and output the ivar header here	WITHOUT_CLASSIFICATION	0.9302952725444408	WITHOUT_CLASSIFICATION	0.06970472745555926	DESIGN
flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9939565670308327	WITHOUT_CLASSIFICATION	0.006043432969167262	DESIGN
write('S');	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
switch on the object's native type. This allows use-defined classes that have extended core native types to piggyback on their marshalling logic.	WITHOUT_CLASSIFICATION	0.9993897498479748	WITHOUT_CLASSIFICATION	6.102501520252037E-4	DESIGN
object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.999700096233844	WITHOUT_CLASSIFICATION	2.9990376615600595E-4	DESIGN
We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9958556967146264	WITHOUT_CLASSIFICATION	0.0041443032853735965	DESIGN
w_symbol	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
w_unique	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.998059613598501	WITHOUT_CLASSIFICATION	0.001940386401498946	DESIGN
Major Minor	WITHOUT_CLASSIFICATION	0.999493190779123	WITHOUT_CLASSIFICATION	5.068092208770153E-4	DESIGN
any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9998968760196687	WITHOUT_CLASSIFICATION	1.0312398033134421E-4	DESIGN
"hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9997632554584809	WITHOUT_CLASSIFICATION	2.3674454151900522E-4	DESIGN
All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999502933401688	WITHOUT_CLASSIFICATION	4.9706659831153964E-5	DESIGN
sic	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9994037052973592	WITHOUT_CLASSIFICATION	5.962947026407604E-4	DESIGN
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9994037052973592	WITHOUT_CLASSIFICATION	5.962947026407604E-4	DESIGN
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9994037052973592	WITHOUT_CLASSIFICATION	5.962947026407604E-4	DESIGN
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9981900865634556	WITHOUT_CLASSIFICATION	0.0018099134365443105	DESIGN
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9981900865634556	WITHOUT_CLASSIFICATION	0.0018099134365443105	DESIGN
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9981317518656125	WITHOUT_CLASSIFICATION	0.0018682481343874312	DESIGN
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9981317518656125	WITHOUT_CLASSIFICATION	0.0018682481343874312	DESIGN
If we are setting post arguments we can assume there are no pre or others	WITHOUT_CLASSIFICATION	0.9999372650307032	WITHOUT_CLASSIFICATION	6.273496929681158E-5	DESIGN
XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.960390469800516	WITHOUT_CLASSIFICATION	0.03960953019948395	DESIGN
unsigned short, native	WITHOUT_CLASSIFICATION	0.9994893424376657	WITHOUT_CLASSIFICATION	5.106575623342561E-4	DESIGN
int, native long, native	WITHOUT_CLASSIFICATION	0.9994467921771306	WITHOUT_CLASSIFICATION	5.532078228694075E-4	DESIGN
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9994037052973592	WITHOUT_CLASSIFICATION	5.962947026407604E-4	DESIGN
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9994037052973592	WITHOUT_CLASSIFICATION	5.962947026407604E-4	DESIGN
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9994037052973592	WITHOUT_CLASSIFICATION	5.962947026407604E-4	DESIGN
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9981900865634556	WITHOUT_CLASSIFICATION	0.0018099134365443105	DESIGN
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9981900865634556	WITHOUT_CLASSIFICATION	0.0018099134365443105	DESIGN
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9981900865634556	WITHOUT_CLASSIFICATION	0.0018099134365443105	DESIGN
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9981317518656125	WITHOUT_CLASSIFICATION	0.0018682481343874312	DESIGN
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9981317518656125	WITHOUT_CLASSIFICATION	0.0018682481343874312	DESIGN
Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999389412005003	WITHOUT_CLASSIFICATION	6.105879949967108E-5	DESIGN
Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9997916550763837	WITHOUT_CLASSIFICATION	2.0834492361642535E-4	DESIGN
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9792780629741139	WITHOUT_CLASSIFICATION	0.02072193702588602	DESIGN
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9792780629741139	WITHOUT_CLASSIFICATION	0.02072193702588602	DESIGN
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9792780629741139	WITHOUT_CLASSIFICATION	0.02072193702588602	DESIGN
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9792780629741139	WITHOUT_CLASSIFICATION	0.02072193702588602	DESIGN
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9792780629741139	WITHOUT_CLASSIFICATION	0.02072193702588602	DESIGN
SunSignalFacade	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
All braces pushed..	WITHOUT_CLASSIFICATION	0.9997308765527309	WITHOUT_CLASSIFICATION	2.6912344726918075E-4	DESIGN
failed : try next recursion	WITHOUT_CLASSIFICATION	0.9040314464282857	WITHOUT_CLASSIFICATION	0.0959685535717143	DESIGN
leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999372985467972	WITHOUT_CLASSIFICATION	6.270145320268006E-5	DESIGN
are we at ''	WITHOUT_CLASSIFICATION	0.9962723836129062	WITHOUT_CLASSIFICATION	0.0037276163870938635	DESIGN
No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9996685497675538	WITHOUT_CLASSIFICATION	3.3145023244620704E-4	DESIGN
not enough bytes	WITHOUT_CLASSIFICATION	0.9988300073570708	WITHOUT_CLASSIFICATION	0.0011699926429291942	DESIGN
Get index of last read byte	WITHOUT_CLASSIFICATION	0.9998360671213934	WITHOUT_CLASSIFICATION	1.6393287860670704E-4	DESIGN
skip inner braces	WITHOUT_CLASSIFICATION	0.9993247735151486	WITHOUT_CLASSIFICATION	6.752264848513407E-4	DESIGN
Process {}'s (example: Dir.glob("{jruby,jython}/README")	WITHOUT_CLASSIFICATION	0.9995826038289057	WITHOUT_CLASSIFICATION	4.173961710943122E-4	DESIGN
complete, according to Posix.2	WITHOUT_CLASSIFICATION	0.9988779533109826	WITHOUT_CLASSIFICATION	0.0011220466890173703	DESIGN
Only accept an open brace if there is a close	WITHOUT_CLASSIFICATION	0.9999996267833865	WITHOUT_CLASSIFICATION	3.7321661356598546E-7	DESIGN
brace to match it. Bracket expressions must be	WITHOUT_CLASSIFICATION	0.9990626800471392	WITHOUT_CLASSIFICATION	9.373199528609117E-4	DESIGN
index of left-most brace index of right-most brace	WITHOUT_CLASSIFICATION	0.9991457390613686	WITHOUT_CLASSIFICATION	8.542609386314084E-4	DESIGN
Length check is a hack. We should not be reeiving "" as a filename ever.	WITHOUT_CLASSIFICATION	0.8967820111170229	WITHOUT_CLASSIFICATION	0.1032179888829771	DESIGN
NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9902912247305062	WITHOUT_CLASSIFICATION	0.00970877526949382	DESIGN
NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9902912247305062	WITHOUT_CLASSIFICATION	0.00970877526949382	DESIGN
NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9902912247305062	WITHOUT_CLASSIFICATION	0.00970877526949382	DESIGN
Pickaxe says @ must be followed by a name character, but MRI does not require this.	WITHOUT_CLASSIFICATION	0.9973907717111107	WITHOUT_CLASSIFICATION	0.002609228288889339	DESIGN
Pickaxe says @@ must be followed by a name character, but MRI does not require this.	WITHOUT_CLASSIFICATION	0.9978782985109836	WITHOUT_CLASSIFICATION	0.0021217014890163566	DESIGN
SimpleSampler	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
convert into longs, returning unsigned 64-bit values as signed longs ( num2long raises a RangeError on values > Long.MAX_VALUE )	WITHOUT_CLASSIFICATION	0.9867260970691619	WITHOUT_CLASSIFICATION	0.013273902930838207	DESIGN
b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9994553022026204	WITHOUT_CLASSIFICATION	5.446977973795769E-4	DESIGN
single precision, little-endian	WITHOUT_CLASSIFICATION	0.999425259663365	WITHOUT_CLASSIFICATION	5.747403366349333E-4	DESIGN
single precision, big-endian	WITHOUT_CLASSIFICATION	0.9990977544662303	WITHOUT_CLASSIFICATION	9.02245533769598E-4	DESIGN
single precision, native	WITHOUT_CLASSIFICATION	0.9993368178264043	WITHOUT_CLASSIFICATION	6.631821735958415E-4	DESIGN
single precision, native single precision, native	WITHOUT_CLASSIFICATION	0.999578336489203	WITHOUT_CLASSIFICATION	4.2166351079691325E-4	DESIGN
double precision, little-endian	WITHOUT_CLASSIFICATION	0.999920794782168	WITHOUT_CLASSIFICATION	7.920521783204197E-5	DESIGN
double precision, big-endian	WITHOUT_CLASSIFICATION	0.9998756260074554	WITHOUT_CLASSIFICATION	1.243739925446278E-4	DESIGN
double precision, native	WITHOUT_CLASSIFICATION	0.9999085996002118	WITHOUT_CLASSIFICATION	9.140039978810912E-5	DESIGN
signed short, little-endian	WITHOUT_CLASSIFICATION	0.999517971867445	WITHOUT_CLASSIFICATION	4.8202813255510785E-4	DESIGN
signed char	WITHOUT_CLASSIFICATION	0.9998807770759441	WITHOUT_CLASSIFICATION	1.1922292405590626E-4	DESIGN
unsigned char	WITHOUT_CLASSIFICATION	0.9998278215632129	WITHOUT_CLASSIFICATION	1.7217843678715843E-4	DESIGN
long, little-endian	WITHOUT_CLASSIFICATION	0.999561221824168	WITHOUT_CLASSIFICATION	4.387781758321081E-4	DESIGN
long, big-endian	WITHOUT_CLASSIFICATION	0.9995620051643742	WITHOUT_CLASSIFICATION	4.379948356257471E-4	DESIGN
unsigned int, native	WITHOUT_CLASSIFICATION	0.9997751480453038	WITHOUT_CLASSIFICATION	2.2485195469631187E-4	DESIGN
int, native	WITHOUT_CLASSIFICATION	0.999725334105282	WITHOUT_CLASSIFICATION	2.7466589471803913E-4	DESIGN
64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9996932768948608	WITHOUT_CLASSIFICATION	3.0672310513923397E-4	DESIGN
How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9580279490398628	WITHOUT_CLASSIFICATION	0.041972050960137265	DESIGN
See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9998576256431744	WITHOUT_CLASSIFICATION	1.4237435682563267E-4	DESIGN
Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9812266292446504	WITHOUT_CLASSIFICATION	0.01877337075534959	DESIGN
Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9976365836117647	WITHOUT_CLASSIFICATION	0.0023634163882354222	DESIGN
obtain a	WITHOUT_CLASSIFICATION	0.9991478961470904	WITHOUT_CLASSIFICATION	8.521038529094445E-4	DESIGN
obtain b	WITHOUT_CLASSIFICATION	0.9997622789821887	WITHOUT_CLASSIFICATION	2.3772101781125555E-4	DESIGN
obtain c	WITHOUT_CLASSIFICATION	0.9997353026643404	WITHOUT_CLASSIFICATION	2.646973356596619E-4	DESIGN
obtain d	WITHOUT_CLASSIFICATION	0.9995758271496109	WITHOUT_CLASSIFICATION	4.2417285038906814E-4	DESIGN
encode.limit() -	WITHOUT_CLASSIFICATION	0.9988897230707399	WITHOUT_CLASSIFICATION	0.0011102769292601435	DESIGN
1	WITHOUT_CLASSIFICATION	0.9996355583611491	WITHOUT_CLASSIFICATION	3.644416388508602E-4	DESIGN
2	WITHOUT_CLASSIFICATION	0.9997119074491747	WITHOUT_CLASSIFICATION	2.880925508253593E-4	DESIGN
3	WITHOUT_CLASSIFICATION	0.9992118376080452	WITHOUT_CLASSIFICATION	7.881623919548389E-4	DESIGN
4	WITHOUT_CLASSIFICATION	0.9992501882316847	WITHOUT_CLASSIFICATION	7.498117683152827E-4	DESIGN
5	WITHOUT_CLASSIFICATION	0.9997354884613832	WITHOUT_CLASSIFICATION	2.645115386168507E-4	DESIGN
6	WITHOUT_CLASSIFICATION	0.999676176259094	WITHOUT_CLASSIFICATION	3.2382374090599557E-4	DESIGN
7	WITHOUT_CLASSIFICATION	0.9993588640536075	WITHOUT_CLASSIFICATION	6.411359463924582E-4	DESIGN
Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9998986679899551	WITHOUT_CLASSIFICATION	1.0133201004486812E-4	DESIGN
Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9992211601492532	WITHOUT_CLASSIFICATION	7.788398507467865E-4	DESIGN
In case when the number of occurences is explicitly specified, we have to read up the remaining garbage after the '\0' to satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.999992784977025	WITHOUT_CLASSIFICATION	7.215022974952738E-6	DESIGN
normal exit, this should be faster than a test at each iterations for string with more than about 40 char	WITHOUT_CLASSIFICATION	0.9954656258698836	WITHOUT_CLASSIFICATION	0.0045343741301164	DESIGN
We encountered '\0' when were reading the buffer above, increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9997632239227361	WITHOUT_CLASSIFICATION	2.3677607726388456E-4	DESIGN
MRI behavior: Contrary to what seems to be logical, when '' is given, MRI calculates the distance to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9932574031582411	WITHOUT_CLASSIFICATION	0.006742596841758921	DESIGN
Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9947104132290888	WITHOUT_CLASSIFICATION	0.005289586770911162	DESIGN
'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999341295774983	WITHOUT_CLASSIFICATION	6.587042250175524E-5	DESIGN
if the low bit is set set the high bit of the result	WITHOUT_CLASSIFICATION	0.9992449340996058	WITHOUT_CLASSIFICATION	7.550659003942295E-4	DESIGN
if the index is not a multiple of 8, we are not on a byte boundary shift the byte	WITHOUT_CLASSIFICATION	0.8838168988921636	WITHOUT_CLASSIFICATION	0.11618310110783646	DESIGN
if the length is not a multiple of 8 we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9825070516969715	WITHOUT_CLASSIFICATION	0.017492948303028555	DESIGN
if the length is not a multiple of 8 we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9825070516969715	WITHOUT_CLASSIFICATION	0.017492948303028555	DESIGN
do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.8264331243759573	WITHOUT_CLASSIFICATION	0.17356687562404263	DESIGN
we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9992519303531483	WITHOUT_CLASSIFICATION	7.480696468518149E-4	DESIGN
if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9871829097400341	WITHOUT_CLASSIFICATION	0.012817090259965917	DESIGN
this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9965260555754557	WITHOUT_CLASSIFICATION	0.003473944424544205	DESIGN
we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.995486446949607	WITHOUT_CLASSIFICATION	0.004513553050393026	DESIGN
populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9991754066333032	WITHOUT_CLASSIFICATION	8.245933666967275E-4	DESIGN
are we recursing?	WITHOUT_CLASSIFICATION	0.9992323717229912	WITHOUT_CLASSIFICATION	7.676282770088483E-4	DESIGN
snip off ruby or jruby command from list of arguments leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999594291832272	WITHOUT_CLASSIFICATION	4.057081677280365E-5	DESIGN
default PidGetter	WITHOUT_CLASSIFICATION	0.9998362175039078	WITHOUT_CLASSIFICATION	1.637824960922234E-4	DESIGN
ignore and try windows version	WITHOUT_CLASSIFICATION	0.9991114763855453	WITHOUT_CLASSIFICATION	8.885236144546962E-4	DESIGN
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9980913248758876	WITHOUT_CLASSIFICATION	0.0019086751241123208	DESIGN
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9980913248758876	WITHOUT_CLASSIFICATION	0.0019086751241123208	DESIGN
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9980913248758876	WITHOUT_CLASSIFICATION	0.0019086751241123208	DESIGN
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9980913248758876	WITHOUT_CLASSIFICATION	0.0019086751241123208	DESIGN
try both	WITHOUT_CLASSIFICATION	0.9994971389652412	WITHOUT_CLASSIFICATION	5.028610347588782E-4	DESIGN
just unix	WITHOUT_CLASSIFICATION	0.9995981120957056	WITHOUT_CLASSIFICATION	4.0188790429444057E-4	DESIGN
just windows	WITHOUT_CLASSIFICATION	0.997183221696164	WITHOUT_CLASSIFICATION	0.0028167783038358586	DESIGN
neither	WITHOUT_CLASSIFICATION	0.9994584969798326	WITHOUT_CLASSIFICATION	5.415030201674206E-4	DESIGN
CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.7151300723196558	DESIGN	0.28486992768034436	WITHOUT_CLASSIFICATION
single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999046745535185	WITHOUT_CLASSIFICATION	9.53254464815646E-5	DESIGN
direct invocation of the command	WITHOUT_CLASSIFICATION	0.9998400250749886	WITHOUT_CLASSIFICATION	1.5997492501134894E-4	DESIGN
break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9997512522431633	WITHOUT_CLASSIFICATION	2.487477568367162E-4	DESIGN
break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9997512522431633	WITHOUT_CLASSIFICATION	2.487477568367162E-4	DESIGN
close process output See JRUBY-3405; hooking up to parent process stdin caused problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999982076928567	WITHOUT_CLASSIFICATION	1.7923071433081065E-6	DESIGN
ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9546505757797517	WITHOUT_CLASSIFICATION	0.04534942422024833	DESIGN
processes seem to have some peculiar locking sequences, so we need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9998467747789871	WITHOUT_CLASSIFICATION	1.5322522101280194E-4	DESIGN
popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.965999774295908	WITHOUT_CLASSIFICATION	0.03400022570409195	DESIGN
popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.965999774295908	WITHOUT_CLASSIFICATION	0.03400022570409195	DESIGN
popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9961702054902201	WITHOUT_CLASSIFICATION	0.003829794509779904	DESIGN
no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9994662310460535	WITHOUT_CLASSIFICATION	5.337689539464064E-4	DESIGN
no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9994662310460535	WITHOUT_CLASSIFICATION	5.337689539464064E-4	DESIGN
execute command with sh -c this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9941149914268231	WITHOUT_CLASSIFICATION	0.005885008573176766	DESIGN
We need to close the out, since some processes would just wait for the stream to be closed before they process its content, and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999999886611131	WITHOUT_CLASSIFICATION	1.1338886834162614E-8	DESIGN
we only close out if it's the slave stream, to avoid closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999974691294347	WITHOUT_CLASSIFICATION	2.530870565473082E-6	DESIGN
The assumption here is that the 'in' stream provides proper available() support. If available() always returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.99725017010392	WITHOUT_CLASSIFICATION	0.002749829896080054	DESIGN
Force t3 to quit, just in case if it's stuck. Note: On some platforms, even interrupt might not have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9998986707322659	WITHOUT_CLASSIFICATION	1.0132926773415652E-4	DESIGN
Check for special shell characters [<>|] at the beginning and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999852847575381	WITHOUT_CLASSIFICATION	1.4715242461910728E-5	DESIGN
Note: this method produces meaningful results only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9765649764910063	WITHOUT_CLASSIFICATION	0.023435023508993753	DESIGN
sequential	WITHOUT_CLASSIFICATION	0.9998458602929121	WITHOUT_CLASSIFICATION	1.541397070878178E-4	DESIGN
reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999974046018246	WITHOUT_CLASSIFICATION	2.595398175315204E-6	DESIGN
do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9997914427525737	WITHOUT_CLASSIFICATION	2.0855724742618428E-4	DESIGN
if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9998518453720897	WITHOUT_CLASSIFICATION	1.4815462791027464E-4	DESIGN
SignalFacade	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9797656985317094	WITHOUT_CLASSIFICATION	0.020234301468290587	DESIGN
this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9915113187512432	WITHOUT_CLASSIFICATION	0.008488681248756796	DESIGN
basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9994905918124644	WITHOUT_CLASSIFICATION	5.094081875355648E-4	DESIGN
not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.6154797191328506	WITHOUT_CLASSIFICATION	0.3845202808671493	DESIGN
Args	WITHOUT_CLASSIFICATION	0.9994708921678637	WITHOUT_CLASSIFICATION	5.291078321363444E-4	DESIGN
static methods only	WITHOUT_CLASSIFICATION	0.9988297356165158	WITHOUT_CLASSIFICATION	0.0011702643834842089	DESIGN
System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9995709873368813	WITHOUT_CLASSIFICATION	4.290126631187439E-4	DESIGN
MRI 1.8.6 behavior: null byte after '%' leads to "%" string. Null byte in other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9912245045827859	WITHOUT_CLASSIFICATION	0.008775495417214042	DESIGN
last index (+1) accessed by next() last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9994727890201193	WITHOUT_CLASSIFICATION	5.272109798807226E-4	DESIGN
Special form of sprintf that returns a RubyString and handles tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9997320175686569	WITHOUT_CLASSIFICATION	2.6798243134302764E-4	DESIGN
Special form of sprintf that returns a RubyString and handles tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9998006715076004	WITHOUT_CLASSIFICATION	1.99328492399504E-4	DESIGN
MRI doesn't flag it as an error if width is given multiple times as a number (but it does for )	WITHOUT_CLASSIFICATION	0.9913863643604242	WITHOUT_CLASSIFICATION	0.008613635639575887	DESIGN
let the width (if any), get processed in the next loop, so any leading 0 gets treated correctly	WITHOUT_CLASSIFICATION	0.9997851193031208	WITHOUT_CLASSIFICATION	2.1488069687918948E-4	DESIGN
MRI 1.8.5-p12 doesn't support 1-char strings, but YARV 0.4.1 does. I don't think it hurts to include this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.960546283230388	WITHOUT_CLASSIFICATION	0.03945371676961205	DESIGN
'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9991359081316514	WITHOUT_CLASSIFICATION	8.640918683486172E-4	DESIGN
'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999961425551457	WITHOUT_CLASSIFICATION	3.857444854243243E-6	DESIGN
We depart here from strict adherence to MRI code, as MRI uses C-sprintf, in part, to format numeric output, while we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.6811847237025287	WITHOUT_CLASSIFICATION	0.31881527629747136	DESIGN
skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9990020625772674	WITHOUT_CLASSIFICATION	9.979374227326544E-4	DESIGN
..	WITHOUT_CLASSIFICATION	0.9976576646296237	WITHOUT_CLASSIFICATION	0.002342335370376256	DESIGN
the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999366142952097	WITHOUT_CLASSIFICATION	6.338570479030467E-5	DESIGN
FIXME: what is correct 'recv' argument? (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.98555417392583	DESIGN	0.014445826074170047	WITHOUT_CLASSIFICATION
gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9913653743101258	WITHOUT_CLASSIFICATION	0.008634625689874127	DESIGN
OK, we now have the significand in digits[0...nDigits] and the exponent in exponent. We're ready to format.	WITHOUT_CLASSIFICATION	0.9993436984250493	WITHOUT_CLASSIFICATION	6.563015749506479E-4	DESIGN
intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9607007754947137	WITHOUT_CLASSIFICATION	0.03929922450528641	DESIGN
intDigits = 1;	WITHOUT_CLASSIFICATION	0.9998614663589048	WITHOUT_CLASSIFICATION	1.3853364109514868E-4	DESIGN
System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9995709873368813	WITHOUT_CLASSIFICATION	4.290126631187439E-4	DESIGN
System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9995850177681354	WITHOUT_CLASSIFICATION	4.149822318646729E-4	DESIGN
intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9607007754947137	WITHOUT_CLASSIFICATION	0.03929922450528641	DESIGN
intDigits = 1;	WITHOUT_CLASSIFICATION	0.9998614663589048	WITHOUT_CLASSIFICATION	1.3853364109514868E-4	DESIGN
precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9997832701587497	WITHOUT_CLASSIFICATION	2.1672984125039333E-4	DESIGN
deal with length/width	WITHOUT_CLASSIFICATION	0.9979825847230859	WITHOUT_CLASSIFICATION	0.002017415276914187	DESIGN
deal with length/width	WITHOUT_CLASSIFICATION	0.9979825847230859	WITHOUT_CLASSIFICATION	0.002017415276914187	DESIGN
first digit is always printed	WITHOUT_CLASSIFICATION	0.9992151728320289	WITHOUT_CLASSIFICATION	7.848271679710787E-4	DESIGN
MRI behavior: Be default, 2 digits in the exponent. Use 3 digits only when necessary. See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9919662837892171	WITHOUT_CLASSIFICATION	0.00803371621078287	DESIGN
5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.99994408120475	WITHOUT_CLASSIFICATION	5.591879524988272E-5	DESIGN
4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9998414260955568	WITHOUT_CLASSIFICATION	1.5857390444321272E-4	DESIGN
in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9917690583928978	WITHOUT_CLASSIFICATION	0.008230941607102244	DESIGN
MRI behavior: In this mode trailing zeroes are removed: 1.500E+05 -> 1.5E+05	WITHOUT_CLASSIFICATION	0.9939888325582585	WITHOUT_CLASSIFICATION	0.006011167441741528	DESIGN
'.' is printed	WITHOUT_CLASSIFICATION	0.9994790555131522	WITHOUT_CLASSIFICATION	5.209444868478384E-4	DESIGN
all precision numebers printed	WITHOUT_CLASSIFICATION	0.9994787265998571	WITHOUT_CLASSIFICATION	5.212734001429143E-4	DESIGN
now some data...	WITHOUT_CLASSIFICATION	0.9994271777921817	WITHOUT_CLASSIFICATION	5.728222078182323E-4	DESIGN
'.'	WITHOUT_CLASSIFICATION	0.9995361031009715	WITHOUT_CLASSIFICATION	4.638968990284981E-4	DESIGN
decimal form, like (but not just like!) 'f'	WITHOUT_CLASSIFICATION	0.9994747636360216	WITHOUT_CLASSIFICATION	5.252363639784664E-4	DESIGN
digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9998990331609118	WITHOUT_CLASSIFICATION	1.0096683908827092E-4	DESIGN
will have a trailing '.' g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.99973817515686	WITHOUT_CLASSIFICATION	2.618248431399273E-4	DESIGN
s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9998924054367166	WITHOUT_CLASSIFICATION	1.0759456328332675E-4	DESIGN
s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9998924054367166	WITHOUT_CLASSIFICATION	1.0759456328332675E-4	DESIGN
always need at least a 0	WITHOUT_CLASSIFICATION	0.9903477456651185	WITHOUT_CLASSIFICATION	0.009652254334881358	DESIGN
always need at least a 0	WITHOUT_CLASSIFICATION	0.9903477456651185	WITHOUT_CLASSIFICATION	0.009652254334881358	DESIGN
digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9998027023257237	WITHOUT_CLASSIFICATION	1.9729767427638668E-4	DESIGN
(1|intlen).prec	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
(1|intlen)	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9984738358080434	WITHOUT_CLASSIFICATION	0.001526164191956672	DESIGN
fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9996217132536511	WITHOUT_CLASSIFICATION	3.782867463488711E-4	DESIGN
System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9995709873368813	WITHOUT_CLASSIFICATION	4.290126631187439E-4	DESIGN
5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.99994408120475	WITHOUT_CLASSIFICATION	5.591879524988272E-5	DESIGN
4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9998414260955568	WITHOUT_CLASSIFICATION	1.5857390444321272E-4	DESIGN
now some data...	WITHOUT_CLASSIFICATION	0.9994271777921817	WITHOUT_CLASSIFICATION	5.728222078182323E-4	DESIGN
'.'	WITHOUT_CLASSIFICATION	0.9995361031009715	WITHOUT_CLASSIFICATION	4.638968990284981E-4	DESIGN
equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9998303685601467	WITHOUT_CLASSIFICATION	1.6963143985330856E-4	DESIGN
'.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9998951656595269	WITHOUT_CLASSIFICATION	1.0483434047313306E-4	DESIGN
\v	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
dangling '%' char	WITHOUT_CLASSIFICATION	0.99917316609427	WITHOUT_CLASSIFICATION	8.26833905729976E-4	DESIGN
main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.999969161486002	WITHOUT_CLASSIFICATION	3.083851399804703E-5	DESIGN
debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999134209987125	WITHOUT_CLASSIFICATION	8.657900128741725E-5	DESIGN
MRI rounds up on nnn5nnn, but not nnn5 -- except for when they do	WITHOUT_CLASSIFICATION	0.9902879121886388	WITHOUT_CLASSIFICATION	0.009712087811361219	DESIGN
"%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.999494473076817	WITHOUT_CLASSIFICATION	5.055269231829705E-4	DESIGN
limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999303372710313	WITHOUT_CLASSIFICATION	6.96627289686428E-5	DESIGN
negative values	WITHOUT_CLASSIFICATION	0.9954144458610138	WITHOUT_CLASSIFICATION	0.004585554138986246	DESIGN
calculation for negatives when %u specified for values >= Integer.MIN_VALUE 2, MRI uses (the equivalent of) long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val for smaller values, BigInteger math is required to conform to MRI's result.	WITHOUT_CLASSIFICATION	0.9999849115337984	WITHOUT_CLASSIFICATION	1.5088466201664208E-5	DESIGN
relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999751171336728	WITHOUT_CLASSIFICATION	2.4882866327269776E-5	DESIGN
no such luck...	WITHOUT_CLASSIFICATION	0.9991576587923582	WITHOUT_CLASSIFICATION	8.423412076419032E-4	DESIGN
ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9900863550293763	WITHOUT_CLASSIFICATION	0.009913644970623775	DESIGN
go through negated powers of 32 until we find one small enough	WITHOUT_CLASSIFICATION	0.999768042129043	WITHOUT_CLASSIFICATION	2.3195787095690396E-4	DESIGN
add to the corresponding positive power of 32 for the result. meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9987326286273136	WITHOUT_CLASSIFICATION	0.0012673713726863852	DESIGN
constant vector a	WITHOUT_CLASSIFICATION	0.9976316026401149	WITHOUT_CLASSIFICATION	0.002368397359885179	DESIGN
most significant w-r bits	WITHOUT_CLASSIFICATION	0.9996391557400289	WITHOUT_CLASSIFICATION	3.6084425997114544E-4	DESIGN
least significant r bits	WITHOUT_CLASSIFICATION	0.9996259118913907	WITHOUT_CLASSIFICATION	3.7408810860919647E-4	DESIGN
state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9988323633795957	WITHOUT_CLASSIFICATION	0.0011676366204042142	DESIGN
state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9988323633795957	WITHOUT_CLASSIFICATION	0.0011676366204042142	DESIGN
state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9988323633795957	WITHOUT_CLASSIFICATION	0.0011676366204042142	DESIGN
MSB is 1; assuring non-zero initial array	WITHOUT_CLASSIFICATION	0.9998404906294374	WITHOUT_CLASSIFICATION	1.595093705626966E-4	DESIGN
Tempering	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
MRI behavior: Week values are monotonous. So, weeks that effectively belong to previous year, will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999797629648307	WITHOUT_CLASSIFICATION	2.0237035169321268E-5	DESIGN
System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9996402725952425	WITHOUT_CLASSIFICATION	3.597274047575286E-4	DESIGN
System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9996402725952425	WITHOUT_CLASSIFICATION	3.597274047575286E-4	DESIGN
\v	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9992535500365699	WITHOUT_CLASSIFICATION	7.464499634301213E-4	DESIGN
System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9995709873368813	WITHOUT_CLASSIFICATION	4.290126631187439E-4	DESIGN
System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9995607555455777	WITHOUT_CLASSIFICATION	4.392444544224164E-4	DESIGN
System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9995607555455777	WITHOUT_CLASSIFICATION	4.392444544224164E-4	DESIGN
System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9995709873368813	WITHOUT_CLASSIFICATION	4.290126631187439E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995523747177635	WITHOUT_CLASSIFICATION	4.476252822365963E-4	DESIGN
System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9995709873368813	WITHOUT_CLASSIFICATION	4.290126631187439E-4	DESIGN
no number	WITHOUT_CLASSIFICATION	0.9990986860269445	WITHOUT_CLASSIFICATION	9.013139730555442E-4	DESIGN
trailing garbage	WITHOUT_CLASSIFICATION	0.9996264820462003	WITHOUT_CLASSIFICATION	3.735179537996631E-4	DESIGN
System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9995743345835207	WITHOUT_CLASSIFICATION	4.2566541647926355E-4	DESIGN
it was not found at all!	WITHOUT_CLASSIFICATION	0.9965768211326654	WITHOUT_CLASSIFICATION	0.0034231788673346002	DESIGN
can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9891628288853852	WITHOUT_CLASSIFICATION	0.010837171114614706	DESIGN
we reached the end of a list	WITHOUT_CLASSIFICATION	0.9997590705253802	WITHOUT_CLASSIFICATION	2.4092947461984172E-4	DESIGN
goto next bucket	WITHOUT_CLASSIFICATION	0.9986376229754752	WITHOUT_CLASSIFICATION	0.0013623770245248046	DESIGN
we reached the end	WITHOUT_CLASSIFICATION	0.9998366753035262	WITHOUT_CLASSIFICATION	1.6332469647373368E-4	DESIGN
entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9983215019773922	WITHOUT_CLASSIFICATION	0.0016784980226076857	DESIGN
states	WITHOUT_CLASSIFICATION	0.9994902745126484	WITHOUT_CLASSIFICATION	5.097254873515606E-4	DESIGN
remove leading whitespace (includes _ for lax) get sign, if any	WITHOUT_CLASSIFICATION	0.999858994970464	WITHOUT_CLASSIFICATION	1.410050295359888E-4	DESIGN
optimistic pass - calculate value as digits are processed digits - lax rules decimal digits - lax rules exponent sign/digits - lax rules digits - strict rules decimal digits - strict rules exponent sign/digits - strict rules complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999982038260521	WITHOUT_CLASSIFICATION	1.7961739479379421E-6	DESIGN
fields used for direct (optimistic) calculation number of significant digits, updated as parsed zeroes that may go to significand or exponent offset of decimal pt from start (-1 -> no decimal) significand, updated as parsed exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9992313873874261	WITHOUT_CLASSIFICATION	7.686126125739082E-4	DESIGN
drop through for sign	WITHOUT_CLASSIFICATION	0.9949683504687479	WITHOUT_CLASSIFICATION	0.005031649531252123	DESIGN
switch will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9856700153181357	WITHOUT_CLASSIFICATION	0.014329984681864328	DESIGN
drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.998644215007676	WITHOUT_CLASSIFICATION	0.0013557849923240065	DESIGN
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999881029743911	WITHOUT_CLASSIFICATION	1.18970256088042E-5	DESIGN
ignore leading zeroes switch	WITHOUT_CLASSIFICATION	0.9996778959911868	WITHOUT_CLASSIFICATION	3.221040088131559E-4	DESIGN
no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9998868293581031	WITHOUT_CLASSIFICATION	1.1317064189687727E-4	DESIGN
ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9995987742511879	WITHOUT_CLASSIFICATION	4.012257488120882E-4	DESIGN
just save a count of zeroes for now; if no digit ends up following them, they'll be applied to the exponent rather than the significand (and our max length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9985086272095902	WITHOUT_CLASSIFICATION	0.0014913727904097467	DESIGN
ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.999771227713025	WITHOUT_CLASSIFICATION	2.287722869750214E-4	DESIGN
else catch oversize below	WITHOUT_CLASSIFICATION	0.9998999734451911	WITHOUT_CLASSIFICATION	1.0002655480891458E-4	DESIGN
else catch oversize below	WITHOUT_CLASSIFICATION	0.9998999734451911	WITHOUT_CLASSIFICATION	1.0002655480891458E-4	DESIGN
oh, well, it was worth a try. go let Double/FloatingDecimal handle it	WITHOUT_CLASSIFICATION	0.9983615393082887	WITHOUT_CLASSIFICATION	0.0016384606917112842	DESIGN
ignore switch	WITHOUT_CLASSIFICATION	0.999781439717375	WITHOUT_CLASSIFICATION	2.1856028262503765E-4	DESIGN
ignore switch	WITHOUT_CLASSIFICATION	0.999781439717375	WITHOUT_CLASSIFICATION	2.1856028262503765E-4	DESIGN
end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9993778101559282	WITHOUT_CLASSIFICATION	6.221898440718276E-4	DESIGN
end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9993778101559282	WITHOUT_CLASSIFICATION	6.221898440718276E-4	DESIGN
switch for	WITHOUT_CLASSIFICATION	0.9996270407451638	WITHOUT_CLASSIFICATION	3.7295925483616694E-4	DESIGN
first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9996900566793544	WITHOUT_CLASSIFICATION	3.099433206456442E-4	DESIGN
no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9995839167385537	WITHOUT_CLASSIFICATION	4.1608326144628024E-4	DESIGN
switch if	WITHOUT_CLASSIFICATION	0.9998568141393759	WITHOUT_CLASSIFICATION	1.43185860624244E-4	DESIGN
difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9991902557259766	WITHOUT_CLASSIFICATION	8.097442740233903E-4	DESIGN
block	WITHOUT_CLASSIFICATION	0.9996605627181319	WITHOUT_CLASSIFICATION	3.3943728186814335E-4	DESIGN
block	WITHOUT_CLASSIFICATION	0.9996605627181319	WITHOUT_CLASSIFICATION	3.3943728186814335E-4	DESIGN
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999881029743911	WITHOUT_CLASSIFICATION	1.18970256088042E-5	DESIGN
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999881029743911	WITHOUT_CLASSIFICATION	1.18970256088042E-5	DESIGN
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999881029743911	WITHOUT_CLASSIFICATION	1.18970256088042E-5	DESIGN
ignore leading zeroes switch	WITHOUT_CLASSIFICATION	0.9996778959911868	WITHOUT_CLASSIFICATION	3.221040088131559E-4	DESIGN
else catch oversize below	WITHOUT_CLASSIFICATION	0.9998999734451911	WITHOUT_CLASSIFICATION	1.0002655480891458E-4	DESIGN
else catch oversize below	WITHOUT_CLASSIFICATION	0.9998999734451911	WITHOUT_CLASSIFICATION	1.0002655480891458E-4	DESIGN
else catch oversize below	WITHOUT_CLASSIFICATION	0.9998999734451911	WITHOUT_CLASSIFICATION	1.0002655480891458E-4	DESIGN
switch for	WITHOUT_CLASSIFICATION	0.9996270407451638	WITHOUT_CLASSIFICATION	3.7295925483616694E-4	DESIGN
switch for	WITHOUT_CLASSIFICATION	0.9996270407451638	WITHOUT_CLASSIFICATION	3.7295925483616694E-4	DESIGN
switch for	WITHOUT_CLASSIFICATION	0.9996270407451638	WITHOUT_CLASSIFICATION	3.7295925483616694E-4	DESIGN
switch if	WITHOUT_CLASSIFICATION	0.9998568141393759	WITHOUT_CLASSIFICATION	1.43185860624244E-4	DESIGN
switch if	WITHOUT_CLASSIFICATION	0.9998568141393759	WITHOUT_CLASSIFICATION	1.43185860624244E-4	DESIGN
lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9964852692321697	WITHOUT_CLASSIFICATION	0.0035147307678303186	DESIGN
switch for no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9988444505561987	WITHOUT_CLASSIFICATION	0.001155549443801152	DESIGN
switch for no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9993703349344023	WITHOUT_CLASSIFICATION	6.296650655977198E-4	DESIGN
TODO: it's not clear to me why, in FloatingDecimal, the "slop" calculation performed above for positive exponents isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9999929324728587	DESIGN	7.0675271413854014E-6	WITHOUT_CLASSIFICATION
no digits, error	WITHOUT_CLASSIFICATION	0.9993856349563878	WITHOUT_CLASSIFICATION	6.143650436122687E-4	DESIGN
too big for us	WITHOUT_CLASSIFICATION	0.9997001060702733	WITHOUT_CLASSIFICATION	2.9989392972674754E-4	DESIGN
too big for us	WITHOUT_CLASSIFICATION	0.9997001060702733	WITHOUT_CLASSIFICATION	2.9989392972674754E-4	DESIGN
must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9815253349920485	WITHOUT_CLASSIFICATION	0.018474665007951443	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995523747177635	WITHOUT_CLASSIFICATION	4.476252822365963E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995523747177635	WITHOUT_CLASSIFICATION	4.476252822365963E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995523747177635	WITHOUT_CLASSIFICATION	4.476252822365963E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995523747177635	WITHOUT_CLASSIFICATION	4.476252822365963E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995523747177635	WITHOUT_CLASSIFICATION	4.476252822365963E-4	DESIGN
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999557371934863	WITHOUT_CLASSIFICATION	4.426280651361811E-5	DESIGN
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999557371934863	WITHOUT_CLASSIFICATION	4.426280651361811E-5	DESIGN
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999557371934863	WITHOUT_CLASSIFICATION	4.426280651361811E-5	DESIGN
first char must be digit	WITHOUT_CLASSIFICATION	0.9995124974312312	WITHOUT_CLASSIFICATION	4.8750256876888725E-4	DESIGN
no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9990854328638752	WITHOUT_CLASSIFICATION	9.145671361247758E-4	DESIGN
ignore leading zeroes switch	WITHOUT_CLASSIFICATION	0.9996778959911868	WITHOUT_CLASSIFICATION	3.221040088131559E-4	DESIGN
switch for	WITHOUT_CLASSIFICATION	0.9996270407451638	WITHOUT_CLASSIFICATION	3.7295925483616694E-4	DESIGN
switch for	WITHOUT_CLASSIFICATION	0.9996270407451638	WITHOUT_CLASSIFICATION	3.7295925483616694E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995523747177635	WITHOUT_CLASSIFICATION	4.476252822365963E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995523747177635	WITHOUT_CLASSIFICATION	4.476252822365963E-4	DESIGN
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999557371934863	WITHOUT_CLASSIFICATION	4.426280651361811E-5	DESIGN
must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9815253349920485	WITHOUT_CLASSIFICATION	0.018474665007951443	DESIGN
Copy out any buffered bytes	WITHOUT_CLASSIFICATION	0.9996665162518965	WITHOUT_CLASSIFICATION	3.33483748103543E-4	DESIGN
switch while	WITHOUT_CLASSIFICATION	0.9995354144080432	WITHOUT_CLASSIFICATION	4.645855919567929E-4	DESIGN
All the positive powers of 10 that can be represented exactly in double/float. (From sun.misc.FloatingDecimal.java)	WITHOUT_CLASSIFICATION	0.9999585217571337	WITHOUT_CLASSIFICATION	4.14782428662202E-5	DESIGN
Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.984014838022885	WITHOUT_CLASSIFICATION	0.015985161977115	DESIGN
rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9988262199975204	WITHOUT_CLASSIFICATION	0.0011737800024795742	DESIGN
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9980448953344591	WITHOUT_CLASSIFICATION	0.0019551046655409887	DESIGN
arg cannot be negative	WITHOUT_CLASSIFICATION	0.99541258810836	WITHOUT_CLASSIFICATION	0.004587411891640061	DESIGN
NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9988262199975204	WITHOUT_CLASSIFICATION	0.0011737800024795742	DESIGN
Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.7329323573502681	DESIGN	0.26706764264973204	WITHOUT_CLASSIFICATION
could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.920627777443739	WITHOUT_CLASSIFICATION	0.079372222556261	DESIGN
strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9997994725313883	WITHOUT_CLASSIFICATION	2.005274686117042E-4	DESIGN
Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9981654800410834	WITHOUT_CLASSIFICATION	0.0018345199589165858	DESIGN
Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9992630955242583	WITHOUT_CLASSIFICATION	7.369044757416975E-4	DESIGN
Creates the new entry.	WITHOUT_CLASSIFICATION	0.9994370415553507	WITHOUT_CLASSIFICATION	5.629584446491874E-4	DESIGN
next entry to return current slot current entry	WITHOUT_CLASSIFICATION	0.9996442853278306	WITHOUT_CLASSIFICATION	3.557146721695249E-4	DESIGN
advance to first entry	WITHOUT_CLASSIFICATION	0.9991680820717795	WITHOUT_CLASSIFICATION	8.319179282204632E-4	DESIGN
The reason why we need the stream is to be able to invoke available() on it. STDIN in Java is non-interruptible, non-selectable, and attempt to read on such stream might lead to thread being blocked without any way to unblock it. That's where available() comes it, so at least we could check whether anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.8928998895573691	WITHOUT_CLASSIFICATION	0.1071001104426308	DESIGN
package-protected	WITHOUT_CLASSIFICATION	0.9996476923604386	WITHOUT_CLASSIFICATION	3.52307639561412E-4	DESIGN
raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9996252236209585	WITHOUT_CLASSIFICATION	3.74776379041505E-4	DESIGN
We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9997936380997998	WITHOUT_CLASSIFICATION	2.0636190020017039E-4	DESIGN
if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999143193786886	WITHOUT_CLASSIFICATION	8.568062131146425E-5	DESIGN
if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.999922102723281	WITHOUT_CLASSIFICATION	7.789727671905487E-5	DESIGN
otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999972931416329	WITHOUT_CLASSIFICATION	2.7068583670750824E-6	DESIGN
r/w buffer are we reading or writing?	WITHOUT_CLASSIFICATION	0.9995665606377223	WITHOUT_CLASSIFICATION	4.334393622776088E-4	DESIGN
this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.7475508856924932	WITHOUT_CLASSIFICATION	0.2524491143075068	DESIGN
unread back	WITHOUT_CLASSIFICATION	0.9992593588880205	WITHOUT_CLASSIFICATION	7.406411119794444E-4	DESIGN
iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9997370212595552	WITHOUT_CLASSIFICATION	2.629787404448586E-4	DESIGN
terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9993173708528988	WITHOUT_CLASSIFICATION	6.826291471011026E-4	DESIGN
no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9983779195964235	WITHOUT_CLASSIFICATION	0.0016220804035764513	DESIGN
found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999990495853162	WITHOUT_CLASSIFICATION	9.504146838108871E-7	DESIGN
Check file size - special files in /proc have zero size and need to be handled by the generic read path.	WITHOUT_CLASSIFICATION	0.9999490405884409	WITHOUT_CLASSIFICATION	5.095941155897945E-5	DESIGN
Copy any buffered data (including ungetc byte)	WITHOUT_CLASSIFICATION	0.9998575654120428	WITHOUT_CLASSIFICATION	1.4243458795725334E-4	DESIGN
Now read unbuffered directly from the file	WITHOUT_CLASSIFICATION	0.9998514045796132	WITHOUT_CLASSIFICATION	1.4859542038685373E-4	DESIGN
Copy out any buffered bytes	WITHOUT_CLASSIFICATION	0.9996665162518965	WITHOUT_CLASSIFICATION	3.33483748103543E-4	DESIGN
Need to clamp source (buffer) size to avoid overrun	WITHOUT_CLASSIFICATION	0.9987212374788291	WITHOUT_CLASSIFICATION	0.001278762521170919	DESIGN
not closing from finalize	WITHOUT_CLASSIFICATION	0.9970135937725909	WITHOUT_CLASSIFICATION	0.0029864062274090634	DESIGN
clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999805519605877	WITHOUT_CLASSIFICATION	1.944803941239872E-5	DESIGN
silence	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
silence	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
Don't bother	WITHOUT_CLASSIFICATION	0.9998527019533837	WITHOUT_CLASSIFICATION	1.472980466163768E-4	DESIGN
Don't bother	WITHOUT_CLASSIFICATION	0.9998527019533837	WITHOUT_CLASSIFICATION	1.472980466163768E-4	DESIGN
For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999569034895945	WITHOUT_CLASSIFICATION	4.309651040552244E-5	DESIGN
Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9993383636199615	WITHOUT_CLASSIFICATION	6.616363800384926E-4	DESIGN
Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9996483835373084	WITHOUT_CLASSIFICATION	3.5161646269154395E-4	DESIGN
for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9993964719962725	WITHOUT_CLASSIFICATION	6.035280037274931E-4	DESIGN
libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9994333479520179	WITHOUT_CLASSIFICATION	5.666520479820485E-4	DESIGN
we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9973944022136626	WITHOUT_CLASSIFICATION	0.0026055977863374143	DESIGN
128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9990818662197285	WITHOUT_CLASSIFICATION	9.181337802715046E-4	DESIGN
limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations	WITHOUT_CLASSIFICATION	0.9995855983831217	WITHOUT_CLASSIFICATION	4.144016168782464E-4	DESIGN
append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9830328748146849	WITHOUT_CLASSIFICATION	0.016967125185315027	DESIGN
Copy what is in the buffer, if there is some buffered data	WITHOUT_CLASSIFICATION	0.999791676457563	WITHOUT_CLASSIFICATION	2.083235424369948E-4	DESIGN
Avoid double-copying for reads that are larger than the buffer size	WITHOUT_CLASSIFICATION	0.9998443075962299	WITHOUT_CLASSIFICATION	1.5569240377004154E-4	DESIGN
Complete the request by filling the read buffer first	WITHOUT_CLASSIFICATION	0.9999794141076902	WITHOUT_CLASSIFICATION	2.0585892309854658E-5	DESIGN
Complete the request by filling the read buffer first	WITHOUT_CLASSIFICATION	0.9999794141076902	WITHOUT_CLASSIFICATION	2.0585892309854658E-5	DESIGN
Avoid double-copying for reads that are larger than the buffer size, or the destination is a direct buffer.	WITHOUT_CLASSIFICATION	0.9999365637375328	WITHOUT_CLASSIFICATION	6.343626246726872E-5	DESIGN
We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating a huge temporary native buffer, when doing reads into a heap buffer If the dst buffer is direct, then no need to limit.	WITHOUT_CLASSIFICATION	0.9963124840103044	WITHOUT_CLASSIFICATION	0.003687515989695598	DESIGN
Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9981138149602483	WITHOUT_CLASSIFICATION	0.0018861850397516346	DESIGN
Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9981138149602483	WITHOUT_CLASSIFICATION	0.0018861850397516346	DESIGN
Doesn't fit in buffer. Write immediately. ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999969213346249	WITHOUT_CLASSIFICATION	3.0786653751299752E-6	DESIGN
truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9993238289367957	WITHOUT_CLASSIFICATION	6.761710632042633E-4	DESIGN
how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9985154595688622	WITHOUT_CLASSIFICATION	0.0014845404311377658	DESIGN
if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9998164178271264	WITHOUT_CLASSIFICATION	1.8358217287365824E-4	DESIGN
close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999955498493373	WITHOUT_CLASSIFICATION	4.4501506627161665E-6	DESIGN
putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9446031072012095	WITHOUT_CLASSIFICATION	0.055396892798790544	DESIGN
save the ungot	WITHOUT_CLASSIFICATION	0.999649912278313	WITHOUT_CLASSIFICATION	3.500877216869874E-4	DESIGN
otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9992979183508024	WITHOUT_CLASSIFICATION	7.020816491976956E-4	DESIGN
ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9962390721424741	WITHOUT_CLASSIFICATION	0.003760927857526029	DESIGN
flush first	WITHOUT_CLASSIFICATION	0.9996774076792277	WITHOUT_CLASSIFICATION	3.2259232077223247E-4	DESIGN
Wake up any channels that became unblocked	WITHOUT_CLASSIFICATION	0.9996427717107408	WITHOUT_CLASSIFICATION	3.572282892592487E-4	DESIGN
Register any new blocking I/O requests	WITHOUT_CLASSIFICATION	0.9992121194256026	WITHOUT_CLASSIFICATION	7.878805743974885E-4	DESIGN
Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999980638087185	WITHOUT_CLASSIFICATION	1.936191281611407E-6	DESIGN
Wait for I/O on any channel	WITHOUT_CLASSIFICATION	0.9996332831438639	WITHOUT_CLASSIFICATION	3.667168561360777E-4	DESIGN
Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999664628418785	WITHOUT_CLASSIFICATION	3.35371581215889E-5	DESIGN
Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9978249116045704	WITHOUT_CLASSIFICATION	0.002175088395429673	DESIGN
seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9951279398187682	WITHOUT_CLASSIFICATION	0.00487206018123177	DESIGN
seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9986896454704309	WITHOUT_CLASSIFICATION	0.001310354529569091	DESIGN
result = eval("arr = Array::['c', 200]; p arr"); assertEquals("[\"c\", 200]", result); result = eval("arr = Array.['d', 200]; p arr"); assertEquals("[\"d\", 200]", result);	WITHOUT_CLASSIFICATION	0.9999422492025153	WITHOUT_CLASSIFICATION	5.775079748478932E-5	DESIGN
MRI ignores seek errors, presumably for unseekable files like serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.997924815126033	WITHOUT_CLASSIFICATION	0.002075184873967049	DESIGN
TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.8128091286203658	DESIGN	0.18719087137963422	WITHOUT_CLASSIFICATION
make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9989539606412938	WITHOUT_CLASSIFICATION	0.0010460393587061417	DESIGN
make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9993532343866784	WITHOUT_CLASSIFICATION	6.46765613321439E-4	DESIGN
first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999434857823534	WITHOUT_CLASSIFICATION	5.6514217646628125E-5	DESIGN
then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9994594028347022	WITHOUT_CLASSIFICATION	5.405971652977808E-4	DESIGN
if we get here, the class and field exist; construct our Unsafe impl that calls it directly	WITHOUT_CLASSIFICATION	0.9991896426246166	WITHOUT_CLASSIFICATION	8.103573753834819E-4	DESIGN
else leave it null	WITHOUT_CLASSIFICATION	0.9998713181846963	WITHOUT_CLASSIFICATION	1.2868181530373531E-4	DESIGN
TypeMatcher	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
This is now needed, since module Java isn't in by default	WITHOUT_CLASSIFICATION	0.9994075430329692	WITHOUT_CLASSIFICATION	5.92456967030767E-4	DESIGN
Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9998005813086059	WITHOUT_CLASSIFICATION	1.9941869139414092E-4	DESIGN
Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999956218141302	WITHOUT_CLASSIFICATION	4.378185869833638E-6	DESIGN
Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999987559982494	WITHOUT_CLASSIFICATION	1.2440017505917095E-6	DESIGN
Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9997593012556055	WITHOUT_CLASSIFICATION	2.406987443944624E-4	DESIGN
Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9994544675170756	WITHOUT_CLASSIFICATION	5.455324829244906E-4	DESIGN
Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9994544675170756	WITHOUT_CLASSIFICATION	5.455324829244906E-4	DESIGN
Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9981055665084567	WITHOUT_CLASSIFICATION	0.0018944334915433174	DESIGN
If we're running from within an IDE we may not have the .rb files in our classpath. Try to find them in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9997112127929522	WITHOUT_CLASSIFICATION	2.8878720704780066E-4	DESIGN
assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9992912816327634	WITHOUT_CLASSIFICATION	7.087183672365624E-4	DESIGN
Init	WITHOUT_CLASSIFICATION	0.9994976802764468	WITHOUT_CLASSIFICATION	5.023197235531598E-4	DESIGN
Block	WITHOUT_CLASSIFICATION	0.999452071035834	WITHOUT_CLASSIFICATION	5.47928964166038E-4	DESIGN
Copy constructor	WITHOUT_CLASSIFICATION	0.9991694115991834	WITHOUT_CLASSIFICATION	8.30588400816585E-4	DESIGN
presumably this require should fail	WITHOUT_CLASSIFICATION	0.9832347726248811	WITHOUT_CLASSIFICATION	0.01676522737511883	DESIGN
JRUBY-646 presumably this require should fail	WITHOUT_CLASSIFICATION	0.9832347726248811	WITHOUT_CLASSIFICATION	0.01676522737511883	DESIGN
Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999669607100851	WITHOUT_CLASSIFICATION	3.303928991494045E-5	DESIGN
ok	WITHOUT_CLASSIFICATION	0.9984547727465992	WITHOUT_CLASSIFICATION	0.001545227253400711	DESIGN
Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9990564345609376	DESIGN	9.435654390623401E-4	WITHOUT_CLASSIFICATION
load should work several times in a row	WITHOUT_CLASSIFICATION	0.9747305212762482	WITHOUT_CLASSIFICATION	0.025269478723751966	DESIGN
reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9994971001845473	WITHOUT_CLASSIFICATION	5.028998154527859E-4	DESIGN
call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9997051307958573	WITHOUT_CLASSIFICATION	2.9486920414274574E-4	DESIGN
Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999882923624258	WITHOUT_CLASSIFICATION	1.1707637574097064E-5	DESIGN
wait for the go signal	WITHOUT_CLASSIFICATION	0.9998684629049711	WITHOUT_CLASSIFICATION	1.3153709502892392E-4	DESIGN
run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9988545915181481	WITHOUT_CLASSIFICATION	0.00114540848185184	DESIGN
wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999395057612361	WITHOUT_CLASSIFICATION	6.0494238763849086E-5	DESIGN
notify thread to proceed	WITHOUT_CLASSIFICATION	0.9992228629345329	WITHOUT_CLASSIFICATION	7.771370654671518E-4	DESIGN
wait until thread has completed	WITHOUT_CLASSIFICATION	0.999987138718758	WITHOUT_CLASSIFICATION	1.2861281242057776E-5	DESIGN
we do preand post load outside the "body" versions to pre-prepare and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.99325544292882	WITHOUT_CLASSIFICATION	0.006744557071180025	DESIGN
out of byte range there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999791549266889	WITHOUT_CLASSIFICATION	2.084507331113236E-5	DESIGN
MRI behavior: raise ArgumentError for 'unknown command' before checking number of args.	WITHOUT_CLASSIFICATION	0.896662890956828	WITHOUT_CLASSIFICATION	0.10333710904317193	DESIGN
if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9998653146149863	WITHOUT_CLASSIFICATION	1.34685385013798E-4	DESIGN
there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9637878503279826	WITHOUT_CLASSIFICATION	0.03621214967201729	DESIGN
construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9951267680447345	WITHOUT_CLASSIFICATION	0.004873231955265482	DESIGN
Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9997913724173069	WITHOUT_CLASSIFICATION	2.0862758269324732E-4	DESIGN
assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9988262199975204	WITHOUT_CLASSIFICATION	0.0011737800024795742	DESIGN
void methods should work	WITHOUT_CLASSIFICATION	0.9736523861005302	WITHOUT_CLASSIFICATION	0.026347613899469786	DESIGN
methods with required = 4 or higher should bind and be callable using reflection JRUBY-3649	WITHOUT_CLASSIFICATION	0.9979215141318958	WITHOUT_CLASSIFICATION	0.002078485868104237	DESIGN
Since we don't have any other error reporting mechanism, we add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999977871627739	WITHOUT_CLASSIFICATION	2.2128372261289853E-6	DESIGN
Ensure we have a new interpreter for each test. Previous we were using the same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999997025067837	WITHOUT_CLASSIFICATION	2.9749321628990806E-7	DESIGN
Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9995027418630921	WITHOUT_CLASSIFICATION	4.972581369079318E-4	DESIGN
assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9992535500365699	WITHOUT_CLASSIFICATION	7.464499634301213E-4	DESIGN
int n = 10;	WITHOUT_CLASSIFICATION	0.9999363882679332	WITHOUT_CLASSIFICATION	6.361173206683894E-5	DESIGN
there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9994425283088773	WITHOUT_CLASSIFICATION	5.574716911226893E-4	DESIGN
No ClassCastException!	WITHOUT_CLASSIFICATION	0.9996008399212318	WITHOUT_CLASSIFICATION	3.991600787681584E-4	DESIGN
value equality	WITHOUT_CLASSIFICATION	0.9998192390492644	WITHOUT_CLASSIFICATION	1.8076095073570219E-4	DESIGN
identity equality	WITHOUT_CLASSIFICATION	0.9997663425888551	WITHOUT_CLASSIFICATION	2.3365741114482868E-4	DESIGN
bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9992912137191066	WITHOUT_CLASSIFICATION	7.087862808935038E-4	DESIGN
bench Integer fib	WITHOUT_CLASSIFICATION	0.9991556714303679	WITHOUT_CLASSIFICATION	8.44328569632192E-4	DESIGN
bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9988262199975204	WITHOUT_CLASSIFICATION	0.0011737800024795742	DESIGN
bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9988262199975204	WITHOUT_CLASSIFICATION	0.0011737800024795742	DESIGN
bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9988262199975204	WITHOUT_CLASSIFICATION	0.0011737800024795742	DESIGN
bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9991122875546044	WITHOUT_CLASSIFICATION	8.877124453956547E-4	DESIGN
bench Long fib	WITHOUT_CLASSIFICATION	0.9994846294384866	WITHOUT_CLASSIFICATION	5.153705615133431E-4	DESIGN
skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9859082983836799	WITHOUT_CLASSIFICATION	0.01409170161632003	DESIGN
start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9929514021122662	WITHOUT_CLASSIFICATION	0.007048597887733776	DESIGN
public class Hello { public static String getMessage() { return "....."; } }	WITHOUT_CLASSIFICATION	0.9920135826791803	WITHOUT_CLASSIFICATION	0.007986417320819804	DESIGN
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9991961606904587	WITHOUT_CLASSIFICATION	8.038393095412779E-4	DESIGN
Note: We can't use file.exists() to check whether the symlink exists or not, because that method returns false for existing but broken symlink. So, we try without the existence check, but in the try-catch block. MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.5917057790322058	WITHOUT_CLASSIFICATION	0.4082942209677942	DESIGN
We are creating a new IO object that shares the same IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9986454097543064	WITHOUT_CLASSIFICATION	0.0013545902456935117	DESIGN
a while node could receive non-local flow control from any of these: a closure within the loop an eval within the loop a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999988799326431	WITHOUT_CLASSIFICATION	1.120067356886766E-6	DESIGN
[IRubyObject] [IRubyObject, IRubyObject] [IRubyObject, RubyClass] [IRubyObject, RubyClass, RubyClass] [IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9992535500365699	WITHOUT_CLASSIFICATION	7.464499634301213E-4	DESIGN
select appropriate call site dup receiver load self	WITHOUT_CLASSIFICATION	0.9972192350402076	WITHOUT_CLASSIFICATION	0.0027807649597924866	DESIGN
Translate "x || y" --> "x = (is_true(x) ? x : y)" --> x = -- build(x) should return a variable! -- f = is_true(x) beq(f, true, L) x = -- build(y) -- L:	WITHOUT_CLASSIFICATION	0.990357140287696	WITHOUT_CLASSIFICATION	0.009642859712304153	DESIGN
Force the client socket to be blocking	WITHOUT_CLASSIFICATION	0.9970845095641242	WITHOUT_CLASSIFICATION	0.0029154904358757645	DESIGN
Additional context surrounding tokens that both the lexer and grammar use.	WITHOUT_CLASSIFICATION	0.999960580272516	WITHOUT_CLASSIFICATION	3.941972748406472E-5	DESIGN
Enebo: c can never be antrhign but '.' Why did I put this here?	WITHOUT_CLASSIFICATION	0.7634653588181298	DESIGN	0.23653464118187012	WITHOUT_CLASSIFICATION
save package module as ivar in parent, and add method to parent so we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9371835176051041	WITHOUT_CLASSIFICATION	0.0628164823948959	DESIGN
[C,C] [C, boolean]	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
Label for the start of the closure (used to implement redo) Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9993188755666927	WITHOUT_CLASSIFICATION	6.811244333071782E-4	DESIGN
ignore; job was cancelled FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9998982848615141	DESIGN	1.017151384858804E-4	WITHOUT_CLASSIFICATION
check arity checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9997885366238762	WITHOUT_CLASSIFICATION	2.114633761237747E-4	DESIGN
rethrow exception rethrow it	WITHOUT_CLASSIFICATION	0.9988473991680813	WITHOUT_CLASSIFICATION	0.0011526008319187621	DESIGN
we take the first method found as our "n" method, since for any non-specific arity they'll all error the same. If an actual "n" method is created, we use that.	WITHOUT_CLASSIFICATION	0.9999998885737333	WITHOUT_CLASSIFICATION	1.114262667135228E-7	DESIGN
Used by our duck-typification of Proc into interface types, to allow coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9998445506761521	WITHOUT_CLASSIFICATION	1.5544932384785654E-4	DESIGN
proxy is under construction, building thread can safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999594169437254	WITHOUT_CLASSIFICATION	4.05830562745876E-5	DESIGN
it's either as converted as we can make it via above logic or it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999768070504168	WITHOUT_CLASSIFICATION	2.319294958312792E-5	DESIGN
package scheme 2: separate module for each full package name, constructed from the camel-cased package segments: Java::JavaLang::Object,	WITHOUT_CLASSIFICATION	0.9966077177563574	WITHOUT_CLASSIFICATION	0.003392282243642577	DESIGN
construct the proxy method	WITHOUT_CLASSIFICATION	0.9994374970618933	WITHOUT_CLASSIFICATION	5.625029381066244E-4	DESIGN
line 159 "-" %token constants	WITHOUT_CLASSIFICATION	0.9997344957550759	WITHOUT_CLASSIFICATION	2.6550424492408623E-4	DESIGN
+++ Helper Methods	WITHOUT_CLASSIFICATION	0.999828907287795	WITHOUT_CLASSIFICATION	1.7109271220502368E-4	DESIGN
line 152 "-" %token constants	WITHOUT_CLASSIFICATION	0.9997344957550759	WITHOUT_CLASSIFICATION	2.6550424492408623E-4	DESIGN
initial size state stack value stack current input #tokens to shift	WITHOUT_CLASSIFICATION	0.9999219178203912	WITHOUT_CLASSIFICATION	7.808217960875193E-5	DESIGN
+++ Helper Methods	WITHOUT_CLASSIFICATION	0.999828907287795	WITHOUT_CLASSIFICATION	1.7109271220502368E-4	DESIGN
We only need to pass in current scope if we are evaluating as a block (which is only done for evals). We need to pass this in so that we can appropriately scope down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999778308778414	WITHOUT_CLASSIFICATION	2.2169122158536732E-5	DESIGN
let the width (if any), get processed in the next loop, so any leading 0 gets treated correctly	WITHOUT_CLASSIFICATION	0.9997851193031208	WITHOUT_CLASSIFICATION	2.1488069687918948E-4	DESIGN
A place to store that special hiding space that bindings need to implement things like: eval("a = 1", binding); eval("p a"). All binding instances must get access to this hidden shared scope. We store it here. This will be null if no binding has yet been called.	WITHOUT_CLASSIFICATION	0.9999956944850475	WITHOUT_CLASSIFICATION	4.3055149524329555E-6	DESIGN
TODO: make it 16 now ? MUST be power of 2!	WITHOUT_CLASSIFICATION	0.6698405230670789	DESIGN	0.3301594769329212	WITHOUT_CLASSIFICATION
check visibility dup method	WITHOUT_CLASSIFICATION	0.8618079173605833	WITHOUT_CLASSIFICATION	0.13819208263941682	DESIGN
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9792780629741139	WITHOUT_CLASSIFICATION	0.02072193702588602	DESIGN
unsigned int, native unsigned long, native	WITHOUT_CLASSIFICATION	0.999712059942744	WITHOUT_CLASSIFICATION	2.8794005725601084E-4	DESIGN
need padding I'm fairly sure there is a library call to create a string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9700036403711296	WITHOUT_CLASSIFICATION	0.02999635962887038	DESIGN
MRI behavior: Be default, 2 digits in the exponent. Use 3 digits only when necessary. See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9919662837892171	WITHOUT_CLASSIFICATION	0.00803371621078287	DESIGN
MRI ignores seek errors, presumably for unseekable files like serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.997924815126033	WITHOUT_CLASSIFICATION	0.002075184873967049	DESIGN
switch for no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9993703349344023	WITHOUT_CLASSIFICATION	6.296650655977198E-4	DESIGN
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9781016106952097	WITHOUT_CLASSIFICATION	0.021898389304790267	DESIGN
Estimate the square root with the foremost 62 bits of squarD bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9994997132050707	WITHOUT_CLASSIFICATION	5.002867949293105E-4	DESIGN
captures begin and end are used when not groups defined source string	WITHOUT_CLASSIFICATION	0.994706045249458	WITHOUT_CLASSIFICATION	0.005293954750541931	DESIGN
INSTANCE VARIABLE RUBY METHODS	WITHOUT_CLASSIFICATION	0.9988767841840338	WITHOUT_CLASSIFICATION	0.0011232158159661656	DESIGN
switch while	WITHOUT_CLASSIFICATION	0.9995354144080432	WITHOUT_CLASSIFICATION	4.645855919567929E-4	DESIGN
For nodes do not have their own scope so we pass null to indicate this. 'For's are implemented as blocks in evaluation, but they have no scope so we just deal with this lack of scope throughout its lifespan. We should probably change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.8615085119578734	WITHOUT_CLASSIFICATION	0.13849148804212666	DESIGN
This field is used during argument processing to avoid putting RubyArray instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9586811847401571	WITHOUT_CLASSIFICATION	0.041318815259842934	DESIGN
Parent container for this context (can be dynamic!!) If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.998587060617557	WITHOUT_CLASSIFICATION	0.0014129393824431008	DESIGN
Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> v1 = -- build(a) -- OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. while this info can be inferred by using attributes, why bother if we can do this? ret = false beq(v1, false, L) v2 = -- build(b) -- ret = v2 L:	WITHOUT_CLASSIFICATION	0.8991842390788808	DESIGN	0.10081576092111927	WITHOUT_CLASSIFICATION
expected	WITHOUT_CLASSIFICATION	0.9999213328659189	WITHOUT_CLASSIFICATION	7.866713408111116E-5	DESIGN
Do nothing	WITHOUT_CLASSIFICATION	0.9996754899655761	WITHOUT_CLASSIFICATION	3.245100344240067E-4	DESIGN
constructor	WITHOUT_CLASSIFICATION	0.9986842530511918	WITHOUT_CLASSIFICATION	0.0013157469488082388	DESIGN
If a line is followed by a blank line put it back.	WITHOUT_CLASSIFICATION	0.9999485691893326	WITHOUT_CLASSIFICATION	5.143081066741823E-5	DESIGN
$>: default output handle	WITHOUT_CLASSIFICATION	0.9991483206181118	WITHOUT_CLASSIFICATION	8.516793818882236E-4	DESIGN
line 423	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 486	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
Signal uses sun.misc. classes, this is not allowed in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9993883828165854	WITHOUT_CLASSIFICATION	6.116171834146968E-4	DESIGN
re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9998554855875185	WITHOUT_CLASSIFICATION	1.4451441248154143E-4	DESIGN
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.6393209701483026	WITHOUT_CLASSIFICATION	0.3606790298516975	DESIGN
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.6393209701483026	WITHOUT_CLASSIFICATION	0.3606790298516975	DESIGN
colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9989647476937746	WITHOUT_CLASSIFICATION	0.0010352523062253701	DESIGN
if there's no receiver, evaluate and pass in the superclass, or pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999970606933788	WITHOUT_CLASSIFICATION	2.9393066211984837E-6	DESIGN
Wire up Function#call(args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9986700441230638	WITHOUT_CLASSIFICATION	0.0013299558769362195	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.5213904819097744	WITHOUT_CLASSIFICATION	0.4786095180902256	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.5213904819097744	WITHOUT_CLASSIFICATION	0.4786095180902256	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.5213904819097744	WITHOUT_CLASSIFICATION	0.4786095180902256	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.5213904819097744	WITHOUT_CLASSIFICATION	0.4786095180902256	DESIGN
Decrease value to hit upper range.	WITHOUT_CLASSIFICATION	0.9985726938122139	WITHOUT_CLASSIFICATION	0.00142730618778601	DESIGN
assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9931288109913731	WITHOUT_CLASSIFICATION	0.006871189008627002	DESIGN
"else" body	WITHOUT_CLASSIFICATION	0.9998446964478843	WITHOUT_CLASSIFICATION	1.553035521157196E-4	DESIGN
done done done Nothing to do for 1.8 done done done done done done done? done done done done done done done done done done done case DEFINEDNODE: return buildDefined(node, m); Incomplete done done done done done done done done case ENSURENODE: return buildEnsureNode(node, m); DEFERRED done done done done case FLIPNODE: return buildFlip(node, m); SSS FIXME: What code generates this AST? done done done done done done done done done done done done done done done done done done? done done done done done done -- partially case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); DEFERRED SSS FIXME: What code generates this AST? done case POSTEXENODE: return buildPostExe(node, m); DEFERRED case PREEXENODE: return buildPreExe(node, m); DEFERRED done?? done	WITHOUT_CLASSIFICATION	0.8019882447662359	WITHOUT_CLASSIFICATION	0.19801175523376416	DESIGN
read-volatile	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
$+: string matches last paren.	WITHOUT_CLASSIFICATION	0.9999478880567916	WITHOUT_CLASSIFICATION	5.2111943208323006E-5	DESIGN
should alter global state	WITHOUT_CLASSIFICATION	0.9977637284834573	WITHOUT_CLASSIFICATION	0.0022362715165427627	DESIGN
should alter global state	WITHOUT_CLASSIFICATION	0.9977637284834573	WITHOUT_CLASSIFICATION	0.0022362715165427627	DESIGN
Ruby code frequently uses a platform check to choose "NUL:" on windows but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.983373642613795	WITHOUT_CLASSIFICATION	0.016626357386204965	DESIGN
10!	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
case RESCUENODE: return buildRescue(node, m); DEFERRED case RETRYNODE: return buildRetry(node, m); DEFERRED done	WITHOUT_CLASSIFICATION	0.9999326329125461	WITHOUT_CLASSIFICATION	6.736708745398894E-5	DESIGN
Is this instruction live or dead? During optimization passes, if this instruction causes no side-effects and the result of the instruction is not needed by anyone else, we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9610975607017329	WITHOUT_CLASSIFICATION	0.038902439298267213	DESIGN
all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9997158700175515	WITHOUT_CLASSIFICATION	2.841299824485446E-4	DESIGN
first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9998644374892004	WITHOUT_CLASSIFICATION	1.3556251079963925E-4	DESIGN
Determine if the parameter might be passed as a 32bit int parameter. This just applies to buffer/pointer types.	WITHOUT_CLASSIFICATION	0.9995363616133709	WITHOUT_CLASSIFICATION	4.63638386629075E-4	DESIGN
Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999375531557262	WITHOUT_CLASSIFICATION	6.244684427381627E-5	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
initial size state stack value stack current input #tokens to shift	WITHOUT_CLASSIFICATION	0.9999219178203912	WITHOUT_CLASSIFICATION	7.808217960875193E-5	DESIGN
line 449	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 495	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
Management/monitoring	WITHOUT_CLASSIFICATION	0.9988262199975204	WITHOUT_CLASSIFICATION	0.0011737800024795742	DESIGN
if we've found the last char of the separator, and we've found at least as many characters as separator length, and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999996363646988	WITHOUT_CLASSIFICATION	3.636353012134895E-7	DESIGN
14!	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
Process any set of annotations No supported options	WITHOUT_CLASSIFICATION	0.9999305707385734	WITHOUT_CLASSIFICATION	6.942926142652927E-5	DESIGN
add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9984480146331008	WITHOUT_CLASSIFICATION	0.0015519853668991182	DESIGN
extract item from array	WITHOUT_CLASSIFICATION	0.9999457883275255	WITHOUT_CLASSIFICATION	5.4211672474561144E-5	DESIGN
extract item from array	WITHOUT_CLASSIFICATION	0.9999457883275255	WITHOUT_CLASSIFICATION	5.4211672474561144E-5	DESIGN
case SCLASSNODE: return buildSClass(node, m); DEFERRED done done done done done done done done case UNDEFNODE: return buildUndef(node, m); DEFERRED done case VALIASNODE: return buildVAlias(node, m); DEFERRED done done	WITHOUT_CLASSIFICATION	0.9999326329125461	WITHOUT_CLASSIFICATION	6.736708745398894E-5	DESIGN
Adding a post-invoke for the cb result serves to both keep it alive until after the function returns, and allows us to clean up the native trampoline early, instead of letting them accumulate until a GC run	WITHOUT_CLASSIFICATION	0.999064684753877	WITHOUT_CLASSIFICATION	9.353152461231439E-4	DESIGN
The Java method doesn't care what class it is, but we need to know what to convert it to, so we use the object's own class. If that doesn't help, we use String to force a call to the object's "to_s" method.	WITHOUT_CLASSIFICATION	0.9730274076631255	WITHOUT_CLASSIFICATION	0.026972592336874567	DESIGN
index for the item	WITHOUT_CLASSIFICATION	0.9999840365710211	WITHOUT_CLASSIFICATION	1.5963428978900948E-5	DESIGN
Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9994857321412446	WITHOUT_CLASSIFICATION	5.142678587554847E-4	DESIGN
18!	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9991860790161702	WITHOUT_CLASSIFICATION	8.13920983829873E-4	DESIGN
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9822073842088028	WITHOUT_CLASSIFICATION	0.017792615791197154	DESIGN
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9822073842088028	WITHOUT_CLASSIFICATION	0.017792615791197154	DESIGN
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9822073842088028	WITHOUT_CLASSIFICATION	0.017792615791197154	DESIGN
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9822073842088028	WITHOUT_CLASSIFICATION	0.017792615791197154	DESIGN
NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.995750347631629	WITHOUT_CLASSIFICATION	0.004249652368371082	DESIGN
This method takes as input a map of operands to their values, and outputs the result of this instruction. If the value map provides a value for any of the instruction's operands the expectation is that the operand will be replaced with the simplified value. It is not required that it do so -- code correctness is not compromised by failure to simplify. @param valueMap Mapping from operands to their simplified values @returns simplified result / output of this instruction	WITHOUT_CLASSIFICATION	0.9859095710245546	WITHOUT_CLASSIFICATION	0.01409042897544537	DESIGN
Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9986993896874158	WITHOUT_CLASSIFICATION	0.0013006103125842107	DESIGN
An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9996053988449799	WITHOUT_CLASSIFICATION	3.946011550200465E-4	DESIGN
MRI behavior: always check whether the file is writable or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999895782917613	WITHOUT_CLASSIFICATION	1.0421708238718073E-5	DESIGN
22!	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
attribute set.	WITHOUT_CLASSIFICATION	0.9998273719195035	WITHOUT_CLASSIFICATION	1.7262808049651795E-4	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9988417054877176	WITHOUT_CLASSIFICATION	0.0011582945122824134	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9988417054877176	WITHOUT_CLASSIFICATION	0.0011582945122824134	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9988417054877176	WITHOUT_CLASSIFICATION	0.0011582945122824134	DESIGN
fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9995276340575252	WITHOUT_CLASSIFICATION	4.7236594247479307E-4	DESIGN
Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9997393261403623	WITHOUT_CLASSIFICATION	2.606738596377612E-4	DESIGN
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.9527118573977444	WITHOUT_CLASSIFICATION	0.0472881426022556	DESIGN
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.9527118573977444	WITHOUT_CLASSIFICATION	0.0472881426022556	DESIGN
AF_INET	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
Now we provide default impls of a number of signatures. For each arity, we first generate a non-block version of the method, which just adds NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can potentially take a block, to only generate the block-receiving signature and still avoid arg boxing. We then provide default implementations of each block-accepting method that in turn call the IRubyObject[]+Block version of call. This then finally falls back on the minimum implementation requirement for dynamic method handles.	WITHOUT_CLASSIFICATION	0.9999995649273552	WITHOUT_CLASSIFICATION	4.350726448061691E-7	DESIGN
Because we implement Java interfaces now, we need a new === that's aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9405675151395763	WITHOUT_CLASSIFICATION	0.05943248486042367	DESIGN
BASE64	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY when value is an integer less than 1. We treat 0 as a special case to avoid Domain error.	WITHOUT_CLASSIFICATION	0.9999958500326166	WITHOUT_CLASSIFICATION	4.1499673834552286E-6	DESIGN
element set	WITHOUT_CLASSIFICATION	0.9990947039228839	WITHOUT_CLASSIFICATION	9.052960771161702E-4	DESIGN
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9981464293254071	WITHOUT_CLASSIFICATION	0.001853570674592894	DESIGN
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9981464293254071	WITHOUT_CLASSIFICATION	0.001853570674592894	DESIGN
temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9992991488108034	WITHOUT_CLASSIFICATION	7.008511891965904E-4	DESIGN
SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode We won't get here for argument receives! So, buildDasgn is called for assignments to block variables within a block. As far as the IR is concerned, this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999999538856413	WITHOUT_CLASSIFICATION	4.611435863033188E-8	DESIGN
getSimplifiedOperand returns the value of this operand, fully simplified getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away The value is used during optimizations and propagated through the IR. But, it is thrown away after that. But, the operand form is used for constructing the compound objects represented by the operand. Example: a = [1], b = [3,4], c = [a,b], d = [2,c] -- getValue(c) = [1,[3,4]]; getSimplifiedOperand(c) = [1, b] -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. So, if contents of a or b is modified, the "simplified value"s of c and d also change! This difference is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9775731772382956	WITHOUT_CLASSIFICATION	0.02242682276170446	DESIGN
IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9987289562593099	WITHOUT_CLASSIFICATION	0.0012710437406901539	DESIGN
promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9850752450813067	WITHOUT_CLASSIFICATION	0.014924754918693219	DESIGN
Ruby's OMG capture all source in a Hash feature Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999935424256975	WITHOUT_CLASSIFICATION	6.457574302533001E-6	DESIGN
carriage return	WITHOUT_CLASSIFICATION	0.9997583843429757	WITHOUT_CLASSIFICATION	2.416156570243833E-4	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9995281634622151	WITHOUT_CLASSIFICATION	4.7183653778487056E-4	DESIGN
String construction routines by NOT byte[] buffer and making the target String shared	WITHOUT_CLASSIFICATION	0.9999192821208704	WITHOUT_CLASSIFICATION	8.071787912963418E-5	DESIGN
insert all nodes in sequence, hash them in the final instruction KEY	WITHOUT_CLASSIFICATION	0.99999784954538	WITHOUT_CLASSIFICATION	2.1504546199841615E-6	DESIGN
return last value from execution	WITHOUT_CLASSIFICATION	0.9998587012182409	WITHOUT_CLASSIFICATION	1.4129878175899444E-4	DESIGN
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9895004297502487	WITHOUT_CLASSIFICATION	0.010499570249751225	DESIGN
Basic Block id CFG that this basic block belongs to All basic blocks have a starting label List of non-label instructions	WITHOUT_CLASSIFICATION	0.999937462897362	WITHOUT_CLASSIFICATION	6.253710263807469E-5	DESIGN
otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999986094368951	WITHOUT_CLASSIFICATION	1.3905631048830336E-6	DESIGN
For all uninitialized specific arities, we defer to the "n" method which should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.799908715933209	DESIGN	0.200091284066791	WITHOUT_CLASSIFICATION
implement is called to force this class to create stubs for all methods in the given interface, so they'll show up in the list of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9952903736471544	WITHOUT_CLASSIFICATION	0.0047096263528455555	DESIGN
CASE IR instructions are dummy instructions -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999778361968429	WITHOUT_CLASSIFICATION	2.2163803157090484E-5	DESIGN
check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999166074306073	WITHOUT_CLASSIFICATION	8.339256939277752E-5	DESIGN
leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999537263813028	WITHOUT_CLASSIFICATION	4.627361869721325E-5	DESIGN
Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999968054454491	WITHOUT_CLASSIFICATION	3.1945545509373296E-6	DESIGN
for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.999076067889443	WITHOUT_CLASSIFICATION	9.239321105568996E-4	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9990053661320728	WITHOUT_CLASSIFICATION	9.946338679271505E-4	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9990053661320728	WITHOUT_CLASSIFICATION	9.946338679271505E-4	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9990053661320728	WITHOUT_CLASSIFICATION	9.946338679271505E-4	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9990053661320728	WITHOUT_CLASSIFICATION	9.946338679271505E-4	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9990053661320728	WITHOUT_CLASSIFICATION	9.946338679271505E-4	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9990053661320728	WITHOUT_CLASSIFICATION	9.946338679271505E-4	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9990053661320728	WITHOUT_CLASSIFICATION	9.946338679271505E-4	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9990053661320728	WITHOUT_CLASSIFICATION	9.946338679271505E-4	DESIGN
Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9233869498415447	WITHOUT_CLASSIFICATION	0.07661305015845532	DESIGN
fall through	WITHOUT_CLASSIFICATION	0.9997418473723262	WITHOUT_CLASSIFICATION	2.581526276738267E-4	DESIGN
deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9990185654797952	WITHOUT_CLASSIFICATION	9.814345202047987E-4	DESIGN
All errors to sysread should be SystemCallErrors, but on a closed stream Ruby returns an IOError. Java throws same exception for all errors so we resort to this hack...	WITHOUT_CLASSIFICATION	0.9832705967644231	DESIGN	0.016729403235576933	WITHOUT_CLASSIFICATION
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9991961606904587	WITHOUT_CLASSIFICATION	8.038393095412779E-4	DESIGN
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9991961606904587	WITHOUT_CLASSIFICATION	8.038393095412779E-4	DESIGN
store argument count information into scope	WITHOUT_CLASSIFICATION	0.9997935939934329	WITHOUT_CLASSIFICATION	2.0640600656705686E-4	DESIGN
the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9817820470910225	DESIGN	0.0182179529089775	WITHOUT_CLASSIFICATION
First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9998603711050014	WITHOUT_CLASSIFICATION	1.3962889499870743E-4	DESIGN
public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9959008582738795	WITHOUT_CLASSIFICATION	0.004099141726120459	DESIGN
get current context	WITHOUT_CLASSIFICATION	0.9999315430870266	WITHOUT_CLASSIFICATION	6.845691297344894E-5	DESIGN
octal constant	WITHOUT_CLASSIFICATION	0.9996470416433917	WITHOUT_CLASSIFICATION	3.529583566082653E-4	DESIGN
read	WITHOUT_CLASSIFICATION	0.9995896190384133	WITHOUT_CLASSIFICATION	4.103809615866561E-4	DESIGN
this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.6475160892925682	DESIGN	0.35248391070743174	WITHOUT_CLASSIFICATION
it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9931206582031721	WITHOUT_CLASSIFICATION	0.006879341796827981	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9963097345692491	WITHOUT_CLASSIFICATION	0.0036902654307508906	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9963097345692491	WITHOUT_CLASSIFICATION	0.0036902654307508906	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9963097345692491	WITHOUT_CLASSIFICATION	0.0036902654307508906	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.999693976751061	WITHOUT_CLASSIFICATION	3.0602324893904987E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.999693976751061	WITHOUT_CLASSIFICATION	3.0602324893904987E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.999693976751061	WITHOUT_CLASSIFICATION	3.0602324893904987E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.999693976751061	WITHOUT_CLASSIFICATION	3.0602324893904987E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.999693976751061	WITHOUT_CLASSIFICATION	3.0602324893904987E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.999693976751061	WITHOUT_CLASSIFICATION	3.0602324893904987E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.999693976751061	WITHOUT_CLASSIFICATION	3.0602324893904987E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.999693976751061	WITHOUT_CLASSIFICATION	3.0602324893904987E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.999693976751061	WITHOUT_CLASSIFICATION	3.0602324893904987E-4	DESIGN
ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9980171564146934	WITHOUT_CLASSIFICATION	0.001982843585306705	DESIGN
at end	WITHOUT_CLASSIFICATION	0.9987244388505256	WITHOUT_CLASSIFICATION	0.001275561149474416	DESIGN
bang: true, no match, no substitution	WITHOUT_CLASSIFICATION	0.9988248844510972	WITHOUT_CLASSIFICATION	0.0011751155489027922	DESIGN
save blocking state	WITHOUT_CLASSIFICATION	0.9997507185735924	WITHOUT_CLASSIFICATION	2.4928142640760715E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.999693976751061	WITHOUT_CLASSIFICATION	3.0602324893904987E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.999693976751061	WITHOUT_CLASSIFICATION	3.0602324893904987E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.999693976751061	WITHOUT_CLASSIFICATION	3.0602324893904987E-4	DESIGN
invoke static __file__	WITHOUT_CLASSIFICATION	0.9972668269972551	WITHOUT_CLASSIFICATION	0.0027331730027448935	DESIGN
rest of the argument array!	WITHOUT_CLASSIFICATION	0.997222214158157	WITHOUT_CLASSIFICATION	0.002777785841842894	DESIGN
fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9995341560656171	WITHOUT_CLASSIFICATION	4.6584393438288266E-4	DESIGN
UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9907380608514996	WITHOUT_CLASSIFICATION	0.009261939148500493	DESIGN
UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9907380608514996	WITHOUT_CLASSIFICATION	0.009261939148500493	DESIGN
load null block	WITHOUT_CLASSIFICATION	0.9996522943681037	WITHOUT_CLASSIFICATION	3.477056318963968E-4	DESIGN
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999914732825361	WITHOUT_CLASSIFICATION	8.526717463838324E-6	DESIGN
nothing else to here - the module version will be included in the class.	WITHOUT_CLASSIFICATION	0.9997737336054257	WITHOUT_CLASSIFICATION	2.2626639457431157E-4	DESIGN
JRUBY-1000, fail early when attempting to subclass a final Java class; solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9997828127773634	WITHOUT_CLASSIFICATION	2.171872226366507E-4	DESIGN
block given	WITHOUT_CLASSIFICATION	0.9997235835139835	WITHOUT_CLASSIFICATION	2.7641648601649954E-4	DESIGN
block given	WITHOUT_CLASSIFICATION	0.9997235835139835	WITHOUT_CLASSIFICATION	2.7641648601649954E-4	DESIGN
Translate ret = (a || b) to ret = (a ? true : b) as follows v1 = -- build(a) -- OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. while this info can be inferred by using attributes, why bother if we can do this? ret = true beq(v1, true, L) v2 = -- build(b) -- ret = v2 L:	WITHOUT_CLASSIFICATION	0.9183522035622717	DESIGN	0.0816477964377284	WITHOUT_CLASSIFICATION
Initial precision is that of double numbers 2^63/2 ~ 4E18 63-1 an even number of number bits precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999398552233004	WITHOUT_CLASSIFICATION	6.014477669967179E-5	DESIGN
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9959457744519218	WITHOUT_CLASSIFICATION	0.004054225548078275	DESIGN
self	WITHOUT_CLASSIFICATION	0.9994478066226871	WITHOUT_CLASSIFICATION	5.521933773128488E-4	DESIGN
self	WITHOUT_CLASSIFICATION	0.9994478066226871	WITHOUT_CLASSIFICATION	5.521933773128488E-4	DESIGN
self	WITHOUT_CLASSIFICATION	0.9994478066226871	WITHOUT_CLASSIFICATION	5.521933773128488E-4	DESIGN
declare the field	WITHOUT_CLASSIFICATION	0.9994539993012561	WITHOUT_CLASSIFICATION	5.460006987439948E-4	DESIGN
Assign the values.	WITHOUT_CLASSIFICATION	0.9995353402895933	WITHOUT_CLASSIFICATION	4.646597104065971E-4	DESIGN
Assign the values.	WITHOUT_CLASSIFICATION	0.9995353402895933	WITHOUT_CLASSIFICATION	4.646597104065971E-4	DESIGN
check arity	WITHOUT_CLASSIFICATION	0.999853597009429	WITHOUT_CLASSIFICATION	1.4640299057091984E-4	DESIGN
check arity	WITHOUT_CLASSIFICATION	0.999853597009429	WITHOUT_CLASSIFICATION	1.4640299057091984E-4	DESIGN
create the class	WITHOUT_CLASSIFICATION	0.9991089868461048	WITHOUT_CLASSIFICATION	8.910131538952262E-4	DESIGN
called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9998846059442674	WITHOUT_CLASSIFICATION	1.1539405573252617E-4	DESIGN
No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999462629392577	WITHOUT_CLASSIFICATION	5.3737060742306E-5	DESIGN
1.8	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
6:tags 16:addr 1:eos	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999384991755929	WITHOUT_CLASSIFICATION	6.150082440718696E-5	DESIGN
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999755735219122	WITHOUT_CLASSIFICATION	2.442647808769271E-5	DESIGN
block	WITHOUT_CLASSIFICATION	0.9996605627181319	WITHOUT_CLASSIFICATION	3.3943728186814335E-4	DESIGN
Label for the start of the method Label for the end of the method	WITHOUT_CLASSIFICATION	0.999672280866563	WITHOUT_CLASSIFICATION	3.277191334369831E-4	DESIGN
comparisons & checks checks if the operand is non-null and non-false EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9936477053186568	WITHOUT_CLASSIFICATION	0.006352294681343262	DESIGN
FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.6061358643503265	WITHOUT_CLASSIFICATION	0.39386413564967343	DESIGN
invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9994202757767623	WITHOUT_CLASSIFICATION	5.797242232377682E-4	DESIGN
all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9889300966869727	WITHOUT_CLASSIFICATION	0.01106990331302725	DESIGN
allow proxy to be read without synchronization. if proxy is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.999993266324225	WITHOUT_CLASSIFICATION	6.733675775046628E-6	DESIGN
Create list of interface names to proxy (and make sure they really are interfaces) Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9832222107721524	WITHOUT_CLASSIFICATION	0.016777789227847614	DESIGN
Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9971858423089561	WITHOUT_CLASSIFICATION	0.002814157691043745	DESIGN
Value of "TZ" property is of a bit different format, which confuses the Java's TimeZone.getTimeZone(id) method, and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9526211496579627	WITHOUT_CLASSIFICATION	0.04737885034203725	DESIGN
file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9958971079683646	WITHOUT_CLASSIFICATION	0.004102892031635388	DESIGN
ensure the object is associated with the wrapper we found it in, so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999964739269592	WITHOUT_CLASSIFICATION	3.5260730408492467E-6	DESIGN
return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9996781466223703	WITHOUT_CLASSIFICATION	3.218533776296324E-4	DESIGN
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9781016106952097	WITHOUT_CLASSIFICATION	0.021898389304790267	DESIGN
arg	WITHOUT_CLASSIFICATION	0.9996792393728056	WITHOUT_CLASSIFICATION	3.2076062719453487E-4	DESIGN
Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999970345997793	WITHOUT_CLASSIFICATION	2.9654002207113645E-6	DESIGN
normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999757009541852	WITHOUT_CLASSIFICATION	2.4299045814845365E-5	DESIGN
coerce arguments	WITHOUT_CLASSIFICATION	0.9996424312959951	WITHOUT_CLASSIFICATION	3.57568704004899E-4	DESIGN
0.0 is ok float range inverted float range? NaN +infinity -infinity	WITHOUT_CLASSIFICATION	0.9995001910836265	WITHOUT_CLASSIFICATION	4.998089163735312E-4	DESIGN
expected	WITHOUT_CLASSIFICATION	0.9999213328659189	WITHOUT_CLASSIFICATION	7.866713408111116E-5	DESIGN
set this class's method names in var @__java_ovrd_methods if this is the new class; otherwise, get method names from there if this is a proxy superclass.	WITHOUT_CLASSIFICATION	0.9997160828670314	WITHOUT_CLASSIFICATION	2.8391713296858456E-4	DESIGN
ignore backslashed spaces in %w	WITHOUT_CLASSIFICATION	0.9993164375247423	WITHOUT_CLASSIFICATION	6.835624752576394E-4	DESIGN
Invert the sign, since TZ format and Java format use opposite signs, sigh... Also, Java API requires the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9986745620049168	WITHOUT_CLASSIFICATION	0.001325437995083159	DESIGN
no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9994342208233866	WITHOUT_CLASSIFICATION	5.657791766132572E-4	DESIGN
<=> may return nil in many circumstances, e.g. 3 <=> NaN	WITHOUT_CLASSIFICATION	0.998557872709478	WITHOUT_CLASSIFICATION	0.0014421272905219774	DESIGN
use numbered access method	WITHOUT_CLASSIFICATION	0.9906523993626389	WITHOUT_CLASSIFICATION	0.009347600637361017	DESIGN
Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999572015489849	WITHOUT_CLASSIFICATION	4.27984510150892E-5	DESIGN
ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9998991833609983	WITHOUT_CLASSIFICATION	1.0081663900169443E-4	DESIGN
The dataStruct is a place where custom information can be contained for core implementations that doesn't necessarily want to go to the trouble of creating a subclass of RubyObject. The OpenSSL implementation uses this heavily to save holder objects containing Java cryptography objects. Java integration uses this to store the Java object ref. protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9996522700998841	WITHOUT_CLASSIFICATION	3.4772990011593173E-4	DESIGN
Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.999298644538746	WITHOUT_CLASSIFICATION	7.01355461254031E-4	DESIGN
arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9986261495822787	WITHOUT_CLASSIFICATION	0.0013738504177213443	DESIGN
build scope names string	WITHOUT_CLASSIFICATION	0.999815109990184	WITHOUT_CLASSIFICATION	1.848900098160976E-4	DESIGN
Tries to load at compile-time the constant referred to by 'constRef'. This might be possible if the constant is defined and is not a forward reference to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9475023561463692	WITHOUT_CLASSIFICATION	0.05249764385363068	DESIGN
Here we create an "anonymous" exception type used for unrolling the stack. MRI creates a new one for every call to timeout, which can be costly. We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.7006428676289372	WITHOUT_CLASSIFICATION	0.2993571323710628	DESIGN
finally	WITHOUT_CLASSIFICATION	0.9994991050796569	WITHOUT_CLASSIFICATION	5.008949203431151E-4	DESIGN
MRI behavior: With TZ equal to "GMT" or "UTC", Time.now is NOT considered as a proper GMT/UTC time: ENV['TZ']="GMT" Time.now.gmt? ==> false ENV['TZ']="UTC" Time.now.utc? ==> false Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9995372092373599	WITHOUT_CLASSIFICATION	4.627907626400803E-4	DESIGN
?l | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.999991643362005	WITHOUT_CLASSIFICATION	8.356637994972513E-6	DESIGN
This try/catch is to allow failing over to the "commands" logic when running from within a jruby-complete jar file, which has jruby.home = a jar file URL that does not resolve correctly with JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9972342026429153	WITHOUT_CLASSIFICATION	0.0027657973570848534	DESIGN
Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9988515336203537	WITHOUT_CLASSIFICATION	0.001148466379646245	DESIGN
specific arity	WITHOUT_CLASSIFICATION	0.9993726885143823	WITHOUT_CLASSIFICATION	6.273114856177146E-4	DESIGN
In the case of two arguments, MRI will discard the portion of the first argument after a decimal point (i.e., "floor"). However in the case of a single argument, any portion after the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999971977485415	WITHOUT_CLASSIFICATION	2.802251458643254E-6	DESIGN
?w | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999944179488937	WITHOUT_CLASSIFICATION	5.582051106371878E-6	DESIGN
COMMON VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9987518475598202	WITHOUT_CLASSIFICATION	0.0012481524401798474	DESIGN
@JRubyMethod public IRubyObject to_proc() { return RubyProc.newProc(getRuntime(), CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()), Block.Type.PROC); }	WITHOUT_CLASSIFICATION	0.9991663013911247	WITHOUT_CLASSIFICATION	8.336986088752761E-4	DESIGN
let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9984469827497942	WITHOUT_CLASSIFICATION	0.0015530172502058752	DESIGN
let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9984469827497942	WITHOUT_CLASSIFICATION	0.0015530172502058752	DESIGN
do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9998758561482526	WITHOUT_CLASSIFICATION	1.2414385174735164E-4	DESIGN
do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9998758561482526	WITHOUT_CLASSIFICATION	1.2414385174735164E-4	DESIGN
Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9719919962193218	WITHOUT_CLASSIFICATION	0.02800800378067827	DESIGN
Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9719919962193218	WITHOUT_CLASSIFICATION	0.02800800378067827	DESIGN
================ Utility Methods ================	WITHOUT_CLASSIFICATION	0.9989909546251667	WITHOUT_CLASSIFICATION	0.0010090453748332908	DESIGN
================ Utility Methods ================	WITHOUT_CLASSIFICATION	0.9989909546251667	WITHOUT_CLASSIFICATION	0.0010090453748332908	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9981059819393658	WITHOUT_CLASSIFICATION	0.0018940180606341452	DESIGN
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9981059819393658	WITHOUT_CLASSIFICATION	0.0018940180606341452	DESIGN
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9981059819393658	WITHOUT_CLASSIFICATION	0.0018940180606341452	DESIGN
Add property name aliases	WITHOUT_CLASSIFICATION	0.9990070672654553	WITHOUT_CLASSIFICATION	9.929327345447635E-4	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999872388273321	WITHOUT_CLASSIFICATION	1.2761172668034517E-5	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999872388273321	WITHOUT_CLASSIFICATION	1.2761172668034517E-5	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999872388273321	WITHOUT_CLASSIFICATION	1.2761172668034517E-5	DESIGN
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.7170826429771638	WITHOUT_CLASSIFICATION	0.2829173570228361	DESIGN
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.7170826429771638	WITHOUT_CLASSIFICATION	0.2829173570228361	DESIGN
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.7170826429771638	WITHOUT_CLASSIFICATION	0.2829173570228361	DESIGN
INTERNAL VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9988767841840338	WITHOUT_CLASSIFICATION	0.0011232158159661656	DESIGN
backspace	WITHOUT_CLASSIFICATION	0.9994633940889956	WITHOUT_CLASSIFICATION	5.366059110044631E-4	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
package-private	WITHOUT_CLASSIFICATION	0.9996004921787116	WITHOUT_CLASSIFICATION	3.995078212884722E-4	DESIGN
fall through	WITHOUT_CLASSIFICATION	0.9997418473723262	WITHOUT_CLASSIFICATION	2.581526276738267E-4	DESIGN
fall through	WITHOUT_CLASSIFICATION	0.9997418473723262	WITHOUT_CLASSIFICATION	2.581526276738267E-4	DESIGN
MRI issuses warning here on (RBIGNUM(x)->len SIZEOF_BDIGITS yy > 10241024)	WITHOUT_CLASSIFICATION	0.9904907797719574	WITHOUT_CLASSIFICATION	0.009509220228042606	DESIGN
interrupt the target thread in case it's blocking or waiting WARNING: We no longer interrupt the target thread, since this usually means interrupting IO and with NIO that means the channel is no longer usable. We either need a new way to handle waking a target thread that's waiting on IO, or we need to accept that we can't wake such threads and must wait for them to complete their operation. threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999999136515721	WITHOUT_CLASSIFICATION	8.63484278122709E-8	DESIGN
interrupt the target thread in case it's blocking or waiting WARNING: We no longer interrupt the target thread, since this usually means interrupting IO and with NIO that means the channel is no longer usable. We either need a new way to handle waking a target thread that's waiting on IO, or we need to accept that we can't wake such threads and must wait for them to complete their operation. threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999999136515721	WITHOUT_CLASSIFICATION	8.63484278122709E-8	DESIGN
Nested class whose instances act as thunks reacting to to_str method called from (Exception#to_str, Exception#message) MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!", to_str implementation: "name_err_mesg_to_str" TODO: this class should not be lookupable	WITHOUT_CLASSIFICATION	0.5639607416812362	WITHOUT_CLASSIFICATION	0.43603925831876383	DESIGN
We need to guarantee that any existing reads of old Map can proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999802071278936	WITHOUT_CLASSIFICATION	1.9792872106364724E-5	DESIGN
The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9996841357306211	WITHOUT_CLASSIFICATION	3.158642693789748E-4	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9996440562015405	WITHOUT_CLASSIFICATION	3.559437984595559E-4	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9996440562015405	WITHOUT_CLASSIFICATION	3.559437984595559E-4	DESIGN
This should only be called by this and RubyFile. It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9145815375229068	WITHOUT_CLASSIFICATION	0.08541846247709318	DESIGN
We yield here to hopefully permit the target thread to schedule MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.999918813351597	WITHOUT_CLASSIFICATION	8.118664840291547E-5	DESIGN
note that addMethod now does its own put, so any change made to functionality here should be made there as well	WITHOUT_CLASSIFICATION	0.9937211725354402	WITHOUT_CLASSIFICATION	0.00627882746455981	DESIGN
Currently dead code, but useful when we figure out how to actually perform translit. private static boolean isTranslit(String encoding) { return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false; }	WITHOUT_CLASSIFICATION	0.7573664544671633	DESIGN	0.24263354553283673	WITHOUT_CLASSIFICATION
empirically it appears that to_ary coersions always return array or nil, so this should always be an array by now.	WITHOUT_CLASSIFICATION	0.998738041344142	WITHOUT_CLASSIFICATION	0.0012619586558579822	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9996440562015405	WITHOUT_CLASSIFICATION	3.559437984595559E-4	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9996440562015405	WITHOUT_CLASSIFICATION	3.559437984595559E-4	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9996440562015405	WITHOUT_CLASSIFICATION	3.559437984595559E-4	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9996440562015405	WITHOUT_CLASSIFICATION	3.559437984595559E-4	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9996440562015405	WITHOUT_CLASSIFICATION	3.559437984595559E-4	DESIGN
No seconds, just yield	WITHOUT_CLASSIFICATION	0.9997132473830942	WITHOUT_CLASSIFICATION	2.867526169058477E-4	DESIGN
finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.999616408717732	WITHOUT_CLASSIFICATION	3.8359128226789804E-4	DESIGN
if it's an inner class and it's not public, we can't access it; skip population of declared elements	WITHOUT_CLASSIFICATION	0.991459842008961	WITHOUT_CLASSIFICATION	0.008540157991039082	DESIGN
getFoo => foo getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9998471290180501	WITHOUT_CLASSIFICATION	1.5287098195003245E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992910217047843	WITHOUT_CLASSIFICATION	7.089782952156967E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992910217047843	WITHOUT_CLASSIFICATION	7.089782952156967E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992910217047843	WITHOUT_CLASSIFICATION	7.089782952156967E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992910217047843	WITHOUT_CLASSIFICATION	7.089782952156967E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992910217047843	WITHOUT_CLASSIFICATION	7.089782952156967E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992910217047843	WITHOUT_CLASSIFICATION	7.089782952156967E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992910217047843	WITHOUT_CLASSIFICATION	7.089782952156967E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992910217047843	WITHOUT_CLASSIFICATION	7.089782952156967E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992910217047843	WITHOUT_CLASSIFICATION	7.089782952156967E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992910217047843	WITHOUT_CLASSIFICATION	7.089782952156967E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992910217047843	WITHOUT_CLASSIFICATION	7.089782952156967E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992910217047843	WITHOUT_CLASSIFICATION	7.089782952156967E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992910217047843	WITHOUT_CLASSIFICATION	7.089782952156967E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992910217047843	WITHOUT_CLASSIFICATION	7.089782952156967E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992910217047843	WITHOUT_CLASSIFICATION	7.089782952156967E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992910217047843	WITHOUT_CLASSIFICATION	7.089782952156967E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992910217047843	WITHOUT_CLASSIFICATION	7.089782952156967E-4	DESIGN
MRI behavior on Windows: it treats '/' as a root of a current drive (but only if SINGLE slash is present!): E.g., if current work directory is 'D:/home/directory', then '/' means 'D:/'. Basically, '/path' is treated as a RELATIVE path, relative to the current drive. 'path' is treated as absolute one.	WITHOUT_CLASSIFICATION	0.9999762969938294	WITHOUT_CLASSIFICATION	2.3703006170593435E-5	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992910217047843	WITHOUT_CLASSIFICATION	7.089782952156967E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992910217047843	WITHOUT_CLASSIFICATION	7.089782952156967E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992910217047843	WITHOUT_CLASSIFICATION	7.089782952156967E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992910217047843	WITHOUT_CLASSIFICATION	7.089782952156967E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992910217047843	WITHOUT_CLASSIFICATION	7.089782952156967E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992910217047843	WITHOUT_CLASSIFICATION	7.089782952156967E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992910217047843	WITHOUT_CLASSIFICATION	7.089782952156967E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992910217047843	WITHOUT_CLASSIFICATION	7.089782952156967E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992910217047843	WITHOUT_CLASSIFICATION	7.089782952156967E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992910217047843	WITHOUT_CLASSIFICATION	7.089782952156967E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992910217047843	WITHOUT_CLASSIFICATION	7.089782952156967E-4	DESIGN
This is needed when the enclosing class or module is a singleton. In that case, we generated a name such as null::Foo, which broke Marshalling, among others. The correct thing to do in this situation is to insert the generate the name of form #<Class:01xasdfasd> if it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.6359407813855844	DESIGN	0.36405921861441554	WITHOUT_CLASSIFICATION
this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9981255259928943	WITHOUT_CLASSIFICATION	0.0018744740071057063	DESIGN
EQ == 0 (i.e. false) pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9962103619788849	WITHOUT_CLASSIFICATION	0.003789638021115144	DESIGN
get "self"	WITHOUT_CLASSIFICATION	0.999590928963598	WITHOUT_CLASSIFICATION	4.090710364018709E-4	DESIGN
No timeout in critical section	WITHOUT_CLASSIFICATION	0.9991246479914665	WITHOUT_CLASSIFICATION	8.75352008533399E-4	DESIGN
rethrow exception rethrow it	WITHOUT_CLASSIFICATION	0.9988473991680813	WITHOUT_CLASSIFICATION	0.0011526008319187621	DESIGN
only public methods	WITHOUT_CLASSIFICATION	0.9996584621813012	WITHOUT_CLASSIFICATION	3.4153781869888006E-4	DESIGN
If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9997319218980754	WITHOUT_CLASSIFICATION	2.6807810192461576E-4	DESIGN
First try to use drive letter from supplied dir value, then try current work dir.	WITHOUT_CLASSIFICATION	0.9999144098277688	WITHOUT_CLASSIFICATION	8.559017223118977E-5	DESIGN
JRUBY-2435: Aliasing eval and other "special" methods should display a warning We warn because we treat certain method names as "special" for purposes of optimization. Hopefully this will be enough to convince people not to alias them.	WITHOUT_CLASSIFICATION	0.8757300916704355	WITHOUT_CLASSIFICATION	0.12426990832956454	DESIGN
generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9988681554660995	WITHOUT_CLASSIFICATION	0.0011318445339004609	DESIGN
block argument to the method closure present class present method table mutations, def, defs, undef, alias likely call to eval makes calls that are aware of the frame makes calls that are aware of the frame's self makes calls that are aware of the frame's visibility makes calls that are aware of the frame's block makes calls that are aware of the frame's name makes calls that set or get backref makes calls that set or get lastline makes calls that are aware of the frame's class optional arguments to the method rest arg to the method makes calls that are aware of the scope makes a zero-argument super call accesses or sets constants accesses or sets class variables makes normal super call contains a retry	WITHOUT_CLASSIFICATION	0.9995006006223199	WITHOUT_CLASSIFICATION	4.993993776799709E-4	DESIGN
Add aliases in Type::, NativeType:: and FFI::TYPE_	WITHOUT_CLASSIFICATION	0.9996873517023163	WITHOUT_CLASSIFICATION	3.1264829768380215E-4	DESIGN
Create constants for flock	WITHOUT_CLASSIFICATION	0.9997545628260148	WITHOUT_CLASSIFICATION	2.4543717398510366E-4	DESIGN
double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9993774640296821	WITHOUT_CLASSIFICATION	6.225359703178612E-4	DESIGN
indices for temp values	WITHOUT_CLASSIFICATION	0.9997681654973007	WITHOUT_CLASSIFICATION	2.3183450269927716E-4	DESIGN
a while node could receive non-local flow control from any of these: a closure within the loop an eval within the loop a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999988799326431	WITHOUT_CLASSIFICATION	1.120067356886766E-6	DESIGN
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9981567457384638	WITHOUT_CLASSIFICATION	0.00184325426153622	DESIGN
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9981567457384638	WITHOUT_CLASSIFICATION	0.00184325426153622	DESIGN
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9981567457384638	WITHOUT_CLASSIFICATION	0.00184325426153622	DESIGN
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9981567457384638	WITHOUT_CLASSIFICATION	0.00184325426153622	DESIGN
snapshot of contents of directory current position in directory	WITHOUT_CLASSIFICATION	0.9999980381498993	WITHOUT_CLASSIFICATION	1.961850100687801E-6	DESIGN
Exclusive locks in Java require the channel to be writable, otherwise an exception is thrown (terminating JRuby execution). But flock behavior of MRI is that it allows exclusive locks even on non-writable file. So we convert exclusive lock to shared lock if the channel is not writable, to better match the MRI behavior.	WITHOUT_CLASSIFICATION	0.9995862646847756	WITHOUT_CLASSIFICATION	4.137353152243737E-4	DESIGN
explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9998272304040604	WITHOUT_CLASSIFICATION	1.7276959593963856E-4	DESIGN
explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9998272304040604	WITHOUT_CLASSIFICATION	1.7276959593963856E-4	DESIGN
set self to the class	WITHOUT_CLASSIFICATION	0.9962148515012433	WITHOUT_CLASSIFICATION	0.003785148498756702	DESIGN
---------- Public fields, methods ---------	WITHOUT_CLASSIFICATION	0.999435713416918	WITHOUT_CLASSIFICATION	5.642865830820846E-4	DESIGN
A specific version was requested - use as is for search	WITHOUT_CLASSIFICATION	0.999805800744715	WITHOUT_CLASSIFICATION	1.9419925528493776E-4	DESIGN
zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999554489112377	WITHOUT_CLASSIFICATION	4.455108876223337E-5	DESIGN
we need to collect all methods, though we'll only install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9857961566652428	WITHOUT_CLASSIFICATION	0.014203843334757296	DESIGN
Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9994621302827458	WITHOUT_CLASSIFICATION	5.378697172541761E-4	DESIGN
Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.999902265875666	WITHOUT_CLASSIFICATION	9.773412433407833E-5	DESIGN
do nothing	WITHOUT_CLASSIFICATION	0.9996711843210615	WITHOUT_CLASSIFICATION	3.288156789385415E-4	DESIGN
do nothing	WITHOUT_CLASSIFICATION	0.9996711843210615	WITHOUT_CLASSIFICATION	3.288156789385415E-4	DESIGN
do nothing	WITHOUT_CLASSIFICATION	0.9996711843210615	WITHOUT_CLASSIFICATION	3.288156789385415E-4	DESIGN
do nothing	WITHOUT_CLASSIFICATION	0.9996711843210615	WITHOUT_CLASSIFICATION	3.288156789385415E-4	DESIGN
If an IO exception occurs (something odd, but possible) A directory may return null.	WITHOUT_CLASSIFICATION	0.9999874483745871	WITHOUT_CLASSIFICATION	1.255162541291611E-5	DESIGN
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.8080800744937202	WITHOUT_CLASSIFICATION	0.1919199255062798	DESIGN
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.8080800744937202	WITHOUT_CLASSIFICATION	0.1919199255062798	DESIGN
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.8080800744937202	WITHOUT_CLASSIFICATION	0.1919199255062798	DESIGN
use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9951745952688862	WITHOUT_CLASSIFICATION	0.004825404731113802	DESIGN
finally with no exception	WITHOUT_CLASSIFICATION	0.9986167208425752	WITHOUT_CLASSIFICATION	0.0013832791574247222	DESIGN
Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.985353038032019	WITHOUT_CLASSIFICATION	0.014646961967981062	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.5213904819097744	WITHOUT_CLASSIFICATION	0.4786095180902256	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.5213904819097744	WITHOUT_CLASSIFICATION	0.4786095180902256	DESIGN
The counting of slashes that follows is simply a way to adhere to Ruby's UNC (or something) compatibility. When Ruby's expand_path is called with "foobar" it will return "foo/bar". JRuby uses java.io.File, and hence returns "/foo/bar". In order to retain java.io.File in the lower layers and provide full Ruby compatibility, the number of extra slashes must be counted and prepended to the result.	WITHOUT_CLASSIFICATION	0.9164171434022598	WITHOUT_CLASSIFICATION	0.08358285659774019	DESIGN
This is almost always already interned, since it will be called with a symbol in most cases but when created from Java code, we might get an argument that needs to be interned. addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9995579374696041	WITHOUT_CLASSIFICATION	4.4206253039587713E-4	DESIGN
not a class	WITHOUT_CLASSIFICATION	0.9919608373582877	WITHOUT_CLASSIFICATION	0.008039162641712283	DESIGN
not a class	WITHOUT_CLASSIFICATION	0.9919608373582877	WITHOUT_CLASSIFICATION	0.008039162641712283	DESIGN
Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.92663379526222	WITHOUT_CLASSIFICATION	0.07336620473778	DESIGN
Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.92663379526222	WITHOUT_CLASSIFICATION	0.07336620473778	DESIGN
io.available() only returns 0 after EOF is encountered so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9994913243375119	WITHOUT_CLASSIFICATION	5.086756624881657E-4	DESIGN
In the current logic, if we get here we know that module is not an IncludedModuleWrapper, so there's no need to fish out the delegate. But just in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9163731300106687	WITHOUT_CLASSIFICATION	0.08362686998933136	DESIGN
rb_iterate((VALUE()_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9992535500365699	WITHOUT_CLASSIFICATION	7.464499634301213E-4	DESIGN
Broken symlinks considered by exists() as non-existing, so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999828410518098	WITHOUT_CLASSIFICATION	1.715894819020507E-5	DESIGN
CONSTANT API METHODS	WITHOUT_CLASSIFICATION	0.998404261448802	WITHOUT_CLASSIFICATION	0.0015957385511979445	DESIGN
create the default thread group	WITHOUT_CLASSIFICATION	0.9998979680014022	WITHOUT_CLASSIFICATION	1.020319985977449E-4	DESIGN
range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9993652702347313	WITHOUT_CLASSIFICATION	6.347297652686717E-4	DESIGN
============================ Here are hash internals (This could be extracted to a separate class but it's not too large though) ============================	WITHOUT_CLASSIFICATION	0.9964532654257398	WITHOUT_CLASSIFICATION	0.003546734574260248	DESIGN
LOW-LEVEL CLASS VARIABLE INTERFACE fetch/store/list class variables for this module	WITHOUT_CLASSIFICATION	0.9808883867283705	WITHOUT_CLASSIFICATION	0.019111613271629538	DESIGN
used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9916709257374583	WITHOUT_CLASSIFICATION	0.00832907426254171	DESIGN
used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9916709257374583	WITHOUT_CLASSIFICATION	0.00832907426254171	DESIGN
Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999085878792716	WITHOUT_CLASSIFICATION	9.141212072836825E-5	DESIGN
Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999085878792716	WITHOUT_CLASSIFICATION	9.141212072836825E-5	DESIGN
retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.998347052665647	WITHOUT_CLASSIFICATION	0.001652947334352974	DESIGN
returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9998921992146349	WITHOUT_CLASSIFICATION	1.078007853651184E-4	DESIGN
\cX, \c\M-X	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9994400626287616	WITHOUT_CLASSIFICATION	5.599373712384096E-4	DESIGN
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9994400626287616	WITHOUT_CLASSIFICATION	5.599373712384096E-4	DESIGN
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9994400626287616	WITHOUT_CLASSIFICATION	5.599373712384096E-4	DESIGN
line 286	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 476	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 513	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 530	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 533	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 537	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 551	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
end loop	WITHOUT_CLASSIFICATION	0.9999401053481698	WITHOUT_CLASSIFICATION	5.989465183026457E-5	DESIGN
MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9999215355096966	WITHOUT_CLASSIFICATION	7.846449030335816E-5	DESIGN
prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9905988544762493	WITHOUT_CLASSIFICATION	0.00940114552375074	DESIGN
Traverse the instructions in this basic block in reverse order! Mark as dead all instructions whose results are not used!	WITHOUT_CLASSIFICATION	0.9920137395577504	WITHOUT_CLASSIFICATION	0.007986260442249626	DESIGN
fields should really be an immutable map as it is never modified after construction	WITHOUT_CLASSIFICATION	0.9994643102029394	WITHOUT_CLASSIFICATION	5.35689797060722E-4	DESIGN
load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9997770562135061	WITHOUT_CLASSIFICATION	2.229437864939529E-4	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.5213904819097744	WITHOUT_CLASSIFICATION	0.4786095180902256	DESIGN
If we define a class in Ruby, but later want to allow it to be defined in Java, the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9414891187312675	WITHOUT_CLASSIFICATION	0.058510881268732495	DESIGN
We only want IO objects with valid streams (better to error now).	WITHOUT_CLASSIFICATION	0.998926371451961	WITHOUT_CLASSIFICATION	0.0010736285480390264	DESIGN
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.6393209701483026	WITHOUT_CLASSIFICATION	0.3606790298516975	DESIGN
value	WITHOUT_CLASSIFICATION	0.9996980192505203	WITHOUT_CLASSIFICATION	3.0198074947979944E-4	DESIGN
value	WITHOUT_CLASSIFICATION	0.9996980192505203	WITHOUT_CLASSIFICATION	3.0198074947979944E-4	DESIGN
value	WITHOUT_CLASSIFICATION	0.9996980192505203	WITHOUT_CLASSIFICATION	3.0198074947979944E-4	DESIGN
value	WITHOUT_CLASSIFICATION	0.9996980192505203	WITHOUT_CLASSIFICATION	3.0198074947979944E-4	DESIGN
value	WITHOUT_CLASSIFICATION	0.9996980192505203	WITHOUT_CLASSIFICATION	3.0198074947979944E-4	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9994424370857242	WITHOUT_CLASSIFICATION	5.575629142757091E-4	DESIGN
value	WITHOUT_CLASSIFICATION	0.9996980192505203	WITHOUT_CLASSIFICATION	3.0198074947979944E-4	DESIGN
value	WITHOUT_CLASSIFICATION	0.9996980192505203	WITHOUT_CLASSIFICATION	3.0198074947979944E-4	DESIGN
value	WITHOUT_CLASSIFICATION	0.9996980192505203	WITHOUT_CLASSIFICATION	3.0198074947979944E-4	DESIGN
MRI has extra pointer which makes our code look a little bit more strange in comparison	WITHOUT_CLASSIFICATION	0.9932829559130715	WITHOUT_CLASSIFICATION	0.0067170440869285366	DESIGN
Tempory buffer to build up a potential token. Consumer takes responsibility to reset this before use.	WITHOUT_CLASSIFICATION	0.9982406636631557	WITHOUT_CLASSIFICATION	0.0017593363368444185	DESIGN
tmpPosition is required because getPosition()'s side effects. if the warning is generated, the getPosition() on line 954 (this line + 18) will create a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9986229372882842	WITHOUT_CLASSIFICATION	0.0013770627117158302	DESIGN
What is \v in C? case '\v': c2 = 'v'; break;	WITHOUT_CLASSIFICATION	0.9997868283222513	WITHOUT_CLASSIFICATION	2.131716777486844E-4	DESIGN
Consider Thread aspects of this	WITHOUT_CLASSIFICATION	0.9948114221601955	WITHOUT_CLASSIFICATION	0.005188577839804555	DESIGN
Position within source must reflect the actual offset and column. Since we ate an extra character here (this accounting is normally done in read ), we should update position info.	WITHOUT_CLASSIFICATION	0.999964250947042	WITHOUT_CLASSIFICATION	3.5749052957986384E-5	DESIGN
An interrupt or timeout may have caused us to miss a notify that we consumed, so do another notify in case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999364270561885	WITHOUT_CLASSIFICATION	6.357294381147591E-5	DESIGN
line 572	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 601	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 601	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 625	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 649	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 691	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 723	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 732	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 745	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 766	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 785	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 794	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 800	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 812	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 827	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 839	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 845	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 864	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 886	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 896	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 911	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 929	WITHOUT_CLASSIFICATION	0.9998220920627159	WITHOUT_CLASSIFICATION	1.7790793728413324E-4	DESIGN
line 952	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 970	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 972	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 991	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1011	WITHOUT_CLASSIFICATION	0.997259010351296	WITHOUT_CLASSIFICATION	0.0027409896487038884	DESIGN
line 1026	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1038	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1067	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1085	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1097	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1105	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1122	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1133	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1145	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1169	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1201	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1210	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1229	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1261	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1287	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1293	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1307	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1320	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1325	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1363	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1398	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1448	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1456	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1473	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1492	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1513	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1523	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1562	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1582	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1603	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1603	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1615	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1620	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1635	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1652	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1681	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1708	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1716	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1755	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1772	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1789	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
ACTIONS_END	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
ACTIONS_END	WITHOUT_CLASSIFICATION	0.9994831232556554	WITHOUT_CLASSIFICATION	5.168767443446678E-4	DESIGN
force for args	WITHOUT_CLASSIFICATION	0.9995201209317283	WITHOUT_CLASSIFICATION	4.79879068271762E-4	DESIGN
last expression should not be void	WITHOUT_CLASSIFICATION	0.9874354153992031	WITHOUT_CLASSIFICATION	0.012564584600796996	DESIGN
compstmt position includes both parens around it	WITHOUT_CLASSIFICATION	0.9142169622637867	WITHOUT_CLASSIFICATION	0.0857830377362134	DESIGN
We can assign if we already have variable of that name here or we are the only scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.999911359515516	WITHOUT_CLASSIFICATION	8.864048448392956E-5	DESIGN
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9980707330657422	WITHOUT_CLASSIFICATION	0.001929266934257701	DESIGN
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9980707330657422	WITHOUT_CLASSIFICATION	0.001929266934257701	DESIGN
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9980707330657422	WITHOUT_CLASSIFICATION	0.001929266934257701	DESIGN
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9980707330657422	WITHOUT_CLASSIFICATION	0.001929266934257701	DESIGN
FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9792716401790542	DESIGN	0.02072835982094573	WITHOUT_CLASSIFICATION
This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:) into individual whenNodes. The primary reason for this is to ensure lazy evaluation of the arguments (when foo,bar,gar:) to prevent side-effects. In the old code this was done using nested when statements, which was awful for interpreter and compilation. Notes: This has semantic equivalence but will not be lexically equivalent. Compiler needs to detect same bodies to simplify bytecode generated.	WITHOUT_CLASSIFICATION	0.9879808712208268	WITHOUT_CLASSIFICATION	0.012019128779173174	DESIGN
line 313	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 339	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 361	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 413	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 451	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 472	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 500	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 515	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 555	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 582	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 619	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 636	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 669	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 703	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 776	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 814	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 823	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 854	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 872	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 905	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 925	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 958	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 992	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1047	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1072	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1081	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1108	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1136	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1168	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1192	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1241	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1267	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1286	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1301	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1314	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1333	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1362	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1395	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1420	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1439	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1476	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1535	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1588	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1618	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1643	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1669	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1728	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1753	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1779	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1794	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1812	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1837	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1895	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1925	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1950	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 1992	WITHOUT_CLASSIFICATION	0.9998142508074431	WITHOUT_CLASSIFICATION	1.8574919255685563E-4	DESIGN
line 2014	WITHOUT_CLASSIFICATION	0.999815660144679	WITHOUT_CLASSIFICATION	1.8433985532095366E-4	DESIGN
Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9841261546814728	WITHOUT_CLASSIFICATION	0.015873845318527157	DESIGN
If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.998422262200312	WITHOUT_CLASSIFICATION	0.0015777377996879015	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999729143981631	WITHOUT_CLASSIFICATION	2.7085601836896524E-4	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999729143981631	WITHOUT_CLASSIFICATION	2.7085601836896524E-4	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999729143981631	WITHOUT_CLASSIFICATION	2.7085601836896524E-4	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999729143981631	WITHOUT_CLASSIFICATION	2.7085601836896524E-4	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999729143981631	WITHOUT_CLASSIFICATION	2.7085601836896524E-4	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999729143981631	WITHOUT_CLASSIFICATION	2.7085601836896524E-4	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999729143981631	WITHOUT_CLASSIFICATION	2.7085601836896524E-4	DESIGN
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9919935714209827	WITHOUT_CLASSIFICATION	0.00800642857901732	DESIGN
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9919935714209827	WITHOUT_CLASSIFICATION	0.00800642857901732	DESIGN
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9919935714209827	WITHOUT_CLASSIFICATION	0.00800642857901732	DESIGN
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9919935714209827	WITHOUT_CLASSIFICATION	0.00800642857901732	DESIGN
happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9896013302035661	WITHOUT_CLASSIFICATION	0.010398669796433974	DESIGN
happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9896013302035661	WITHOUT_CLASSIFICATION	0.010398669796433974	DESIGN
We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the 'b' will get put into this new dynamic scope. The original scope does not see the new 'b' and successive evals with this binding will. I take it having the ability to have succesive binding evals be able to share same scope makes sense from a programmers perspective. One crappy outcome of this design is it requires Dynamic and Static scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9630084133544955	WITHOUT_CLASSIFICATION	0.03699158664550441	DESIGN
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999806547398855	WITHOUT_CLASSIFICATION	1.9345260114463262E-5	DESIGN
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999806547398855	WITHOUT_CLASSIFICATION	1.9345260114463262E-5	DESIGN
tc under method self under method name args	WITHOUT_CLASSIFICATION	0.9997377539606239	WITHOUT_CLASSIFICATION	2.6224603937602864E-4	DESIGN
allow it to bubble up	WITHOUT_CLASSIFICATION	0.9955380843232764	WITHOUT_CLASSIFICATION	0.004461915676723618	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997110801454634	WITHOUT_CLASSIFICATION	2.8891985453658104E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997110801454634	WITHOUT_CLASSIFICATION	2.8891985453658104E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997110801454634	WITHOUT_CLASSIFICATION	2.8891985453658104E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997110801454634	WITHOUT_CLASSIFICATION	2.8891985453658104E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997110801454634	WITHOUT_CLASSIFICATION	2.8891985453658104E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997110801454634	WITHOUT_CLASSIFICATION	2.8891985453658104E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997110801454634	WITHOUT_CLASSIFICATION	2.8891985453658104E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997110801454634	WITHOUT_CLASSIFICATION	2.8891985453658104E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997110801454634	WITHOUT_CLASSIFICATION	2.8891985453658104E-4	DESIGN
trim extension to try other options	WITHOUT_CLASSIFICATION	0.9994046567930341	WITHOUT_CLASSIFICATION	5.953432069659386E-4	DESIGN
trim extension to try other options	WITHOUT_CLASSIFICATION	0.9994046567930341	WITHOUT_CLASSIFICATION	5.953432069659386E-4	DESIGN
Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9997664011791582	WITHOUT_CLASSIFICATION	2.3359882084173113E-4	DESIGN
end suffix iteration	WITHOUT_CLASSIFICATION	0.9998621614735765	WITHOUT_CLASSIFICATION	1.3783852642352052E-4	DESIGN
end suffix iteration	WITHOUT_CLASSIFICATION	0.9998621614735765	WITHOUT_CLASSIFICATION	1.3783852642352052E-4	DESIGN
Unfortunately, the number of digits in the exponent is not clearly defined in Ruby documentation. This is a platform/version-dependent behavior. On Linux/Mac/Cygwinnix, two digits are used. On Windows, 3 digits are used. It is desirable for JRuby to have consistent behavior, and the two digits behavior was selected. This is also in sync with "Java-native" sprintf behavior (java.util.Formatter). E or e	WITHOUT_CLASSIFICATION	0.987525148907331	WITHOUT_CLASSIFICATION	0.012474851092669001	DESIGN
Represents the the dynamic portion of scoping information. The variableValues are the values of assigned local or block variables. The staticScope identifies which sort of scope this is (block or local). Properties of Dynamic Scopes: 1. static and dynamic scopes have the same number of names to values 2. size of variables (and thus names) is determined during parsing. So those structured do not need to change FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents. This is harmless (other than wasting memory), but we should not do that. We can fix this in two ways: 1. Fix all callers 2. Check parent that is passed in and make if new instance is local, then its parent is not local	WITHOUT_CLASSIFICATION	0.9999940792833968	DESIGN	5.920716603214001E-6	WITHOUT_CLASSIFICATION
This method handles '' patterns and delegates to fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9975519133630034	WITHOUT_CLASSIFICATION	0.002448086636996641	DESIGN
Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999074508392914	WITHOUT_CLASSIFICATION	9.254916070856645E-5	DESIGN
double precision, native double precision, native	WITHOUT_CLASSIFICATION	0.9999418980394441	WITHOUT_CLASSIFICATION	5.8101960555922676E-5	DESIGN
64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9996932768948608	WITHOUT_CLASSIFICATION	3.0672310513923397E-4	DESIGN
Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999934756570967	WITHOUT_CLASSIFICATION	6.524342903200169E-6	DESIGN
calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9998015164119629	WITHOUT_CLASSIFICATION	1.9848358803709152E-4	DESIGN
processes seem to have some peculiar locking sequences, so we need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9998467747789871	WITHOUT_CLASSIFICATION	1.5322522101280194E-4	DESIGN
MRI behavior: for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9938106858987158	WITHOUT_CLASSIFICATION	0.006189314101284173	DESIGN
this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9965260555754557	WITHOUT_CLASSIFICATION	0.003473944424544205	DESIGN
exec needs to behave differently in-process, because it's technically supposed to replace the calling process. So if we're supposed to run in-process, we allow it to use the default streams and not use pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.5467659073210669	WITHOUT_CLASSIFICATION	0.4532340926789333	DESIGN
snip off ruby or jruby command from list of arguments leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999594291832272	WITHOUT_CLASSIFICATION	4.057081677280365E-5	DESIGN
The problem we trying to solve below: STDIN in Java is blocked and non-interruptible, so if we invoke read on it, we might never be able to interrupt such thread. So, we use in.available() to see if there is any input ready, and only then read it. But this approach can't tell whether the end of stream reached or not, so we might end up looping right at the end of the stream. Well, at least, we can improve the situation by checking if some input was ever available, and if so, not checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.6833895992811838	WITHOUT_CLASSIFICATION	0.3166104007188162	DESIGN
first digit is always printed	WITHOUT_CLASSIFICATION	0.9992151728320289	WITHOUT_CLASSIFICATION	7.848271679710787E-4	DESIGN
an empirically derived rule: precision applies to significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.999586636662714	WITHOUT_CLASSIFICATION	4.133633372860061E-4	DESIGN
an official rule, clarified: if the exponent <clarif>after adjusting for exponent form</clarif> is < -4, or the exponent <clarif>after adjusting for exponent form</clarif> is greater than the precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999150074279757	WITHOUT_CLASSIFICATION	8.499257202442186E-5	DESIGN
in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9917690583928978	WITHOUT_CLASSIFICATION	0.008230941607102244	DESIGN
now some data...	WITHOUT_CLASSIFICATION	0.9994271777921817	WITHOUT_CLASSIFICATION	5.728222078182323E-4	DESIGN
now some data...	WITHOUT_CLASSIFICATION	0.9994271777921817	WITHOUT_CLASSIFICATION	5.728222078182323E-4	DESIGN
MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9998098139054659	WITHOUT_CLASSIFICATION	1.9018609453413544E-4	DESIGN
else catch oversize below	WITHOUT_CLASSIFICATION	0.9998999734451911	WITHOUT_CLASSIFICATION	1.0002655480891458E-4	DESIGN
calculation for simple (and typical) case, adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.997685545004498	WITHOUT_CLASSIFICATION	0.002314454995502055	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995523747177635	WITHOUT_CLASSIFICATION	4.476252822365963E-4	DESIGN
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9980448953344591	WITHOUT_CLASSIFICATION	0.0019551046655409887	DESIGN
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9980448953344591	WITHOUT_CLASSIFICATION	0.0019551046655409887	DESIGN
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9980448953344591	WITHOUT_CLASSIFICATION	0.0019551046655409887	DESIGN
could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.920627777443739	WITHOUT_CLASSIFICATION	0.079372222556261	DESIGN
We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9997936380997998	WITHOUT_CLASSIFICATION	2.0636190020017039E-4	DESIGN
call chmod after we created the RandomAccesFile because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9926969013112238	WITHOUT_CLASSIFICATION	0.007303098688776151	DESIGN
attempt to set the permissions, if we have been passed a POSIX instance, and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9998774026191265	WITHOUT_CLASSIFICATION	1.2259738087349142E-4	DESIGN
When reading into a heap buffer, the jvm allocates a temporary direct ByteBuffer of the requested size. To avoid allocating a huge direct buffer when doing ludicrous reads (e.g. 1G or more) we split the read up into chunks of no more than 1M	WITHOUT_CLASSIFICATION	0.942351906547722	WITHOUT_CLASSIFICATION	0.05764809345227793	DESIGN
If it is a file channel, then we can pre-allocate the output buffer to the total size of buffered + remaining bytes in file	WITHOUT_CLASSIFICATION	0.9999868456637403	WITHOUT_CLASSIFICATION	1.3154336259605252E-5	DESIGN
Cannot discern the total read length - allocate at least enough for the buffered data	WITHOUT_CLASSIFICATION	0.9996060303347103	WITHOUT_CLASSIFICATION	3.939696652896492E-4	DESIGN
Copy what is in the buffer, if there is some buffered data	WITHOUT_CLASSIFICATION	0.999791676457563	WITHOUT_CLASSIFICATION	2.083235424369948E-4	DESIGN
append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9830328748146849	WITHOUT_CLASSIFICATION	0.016967125185315027	DESIGN
already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999419505236526	WITHOUT_CLASSIFICATION	5.804947634742135E-5	DESIGN
reset buffer	WITHOUT_CLASSIFICATION	0.9995832641117794	WITHOUT_CLASSIFICATION	4.1673588822056405E-4	DESIGN
Synchronize and re-check to avoid creating more than one Selector per provider	WITHOUT_CLASSIFICATION	0.9922995045537485	WITHOUT_CLASSIFICATION	0.007700495446251443	DESIGN
TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.8128091286203658	DESIGN	0.18719087137963422	WITHOUT_CLASSIFICATION
Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.5665610255395513	DESIGN	0.43343897446044877	WITHOUT_CLASSIFICATION
Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999860256670542	WITHOUT_CLASSIFICATION	1.3974332945862273E-5	DESIGN
value equality result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999797430075514	WITHOUT_CLASSIFICATION	2.0256992448594382E-5	DESIGN
Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9979830388266037	WITHOUT_CLASSIFICATION	0.002016961173396394	DESIGN
Since we don't have any other error reporting mechanism, we add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999977871627739	WITHOUT_CLASSIFICATION	2.2128372261289853E-6	DESIGN
change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9994503118916586	WITHOUT_CLASSIFICATION	5.496881083414316E-4	DESIGN
Fixme: Do we need the check or does Main.java not call this...they should consolidate	DESIGN	0.9694787387223348	WITHOUT_CLASSIFICATION	0.030521261277665288	DESIGN
FIXME: move out of this class!	DESIGN	0.9733742189003105	DESIGN	0.0266257810996895	WITHOUT_CLASSIFICATION
this is a rather ugly hack, but similar to MRI. See hash.c:ruby_setenv and similar in MRI we search all keys for a case-insensitive match, and use that	DESIGN	0.9744093791124716	DESIGN	0.025590620887528327	WITHOUT_CLASSIFICATION
FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9947182080296434	DESIGN	0.00528179197035659	WITHOUT_CLASSIFICATION
FIXME: Don't allow multiple threads to do this at once	DESIGN	0.9873806321596522	DESIGN	0.01261936784034777	WITHOUT_CLASSIFICATION
TODO: eliminate?	DESIGN	0.5213904819097744	WITHOUT_CLASSIFICATION	0.4786095180902256	DESIGN
TODO: People extending GzipWriter/reader will break. Find better way here.	DESIGN	0.998112913545889	DESIGN	0.0018870864541109247	WITHOUT_CLASSIFICATION
For JRUBY-2759, when MET choose CET timezone to work around Joda	DESIGN	0.765770584144342	DESIGN	0.23422941585565804	WITHOUT_CLASSIFICATION
we might need to perform a DST correction	DESIGN	0.9972715259916527	WITHOUT_CLASSIFICATION	0.002728474008347316	DESIGN
rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.996215896143391	WITHOUT_CLASSIFICATION	0.0037841038566089535	DESIGN
rb_ary_push_m FIXME: Whis is this named "push_m"?	DESIGN	0.7558966898115731	DESIGN	0.244103310188427	WITHOUT_CLASSIFICATION
from DUP_SETUP rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.996215896143391	WITHOUT_CLASSIFICATION	0.0037841038566089535	DESIGN
TODO: ary_sort_check should be done here	DESIGN	0.9919937073989724	DESIGN	0.00800629260102756	WITHOUT_CLASSIFICATION
TODO: ary_sort_check should be done here	DESIGN	0.9919937073989724	DESIGN	0.00800629260102756	WITHOUT_CLASSIFICATION
TODO: is this correct ?	DESIGN	0.9934318092421014	DESIGN	0.006568190757898635	WITHOUT_CLASSIFICATION
TODO: make more efficient by not creating IRubyArray[]	DESIGN	0.9600277114776965	DESIGN	0.03997228852230346	WITHOUT_CLASSIFICATION
TODO: list.subList(from, to).clear() is supposed to clear the sublist from the list. How can we support this operation?	DESIGN	0.9999456580257299	DESIGN	5.434197427020558E-5	WITHOUT_CLASSIFICATION
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9920293903595191	DESIGN	0.007970609640480818	WITHOUT_CLASSIFICATION
FIXME: This table will get moved into POSIX library so we can get all actual supported signals. This is a quick fix to support basic signals until that happens.	DESIGN	0.9987191432761604	DESIGN	0.001280856723839569	WITHOUT_CLASSIFICATION
The implementations of these are all bonus (see TODO above) I was going to throw an error from these, but it appears to be the wrong place to do it.	DESIGN	0.5904910636483993	DESIGN	0.40950893635160074	WITHOUT_CLASSIFICATION
TODO: number formatting here, MRI uses "%-.10g", 1.4 API is a must?	DESIGN	0.9987699168619211	DESIGN	0.0012300831380789561	WITHOUT_CLASSIFICATION
TODO: remove	DESIGN	0.8325209032043768	DESIGN	0.16747909679562326	WITHOUT_CLASSIFICATION
FIXME moved this here to get what's obviously a utility method out of IRubyObject. perhaps security methods should find their own centralized home at some point.	DESIGN	0.9999999535684928	DESIGN	4.643150707592985E-8	WITHOUT_CLASSIFICATION
FIXME: Get rid of laziness and handle restricted access elsewhere	DESIGN	0.7657405910624601	DESIGN	0.23425940893753996	WITHOUT_CLASSIFICATION
TODO: Should frozen error have its own distinct class? If not should more share?	DESIGN	0.9990406571139171	DESIGN	9.593428860829836E-4	WITHOUT_CLASSIFICATION
TODO: this is kinda gross	DESIGN	0.998083350670791	DESIGN	0.001916649329208913	WITHOUT_CLASSIFICATION
Not sure how well this works, but it works much better than just currentTimeMillis by itself.	DESIGN	0.7821241080978847	DESIGN	0.21787589190211543	WITHOUT_CLASSIFICATION
TODO: exec should replace the current process. This could be possible with JNA.	DESIGN	0.9996759509689298	DESIGN	3.240490310702478E-4	WITHOUT_CLASSIFICATION
FIXME: In order for Thread to play well with the standard 'new' behavior, it must provide an allocator that can create empty object instances which initialize then fills with appropriate data.	DESIGN	0.9836415019899674	WITHOUT_CLASSIFICATION	0.01635849801003271	DESIGN
TODO: not sure that we should skip calling join() altogether. Thread.join() has some implications for Java Memory Model, etc.	DESIGN	0.9406501798954316	DESIGN	0.05934982010456836	WITHOUT_CLASSIFICATION
FIXME: There's some code duplication here with RubyObject#inspect	DESIGN	0.9849819213889786	DESIGN	0.015018078611021475	WITHOUT_CLASSIFICATION
FIXME: This should probably do some translation from Ruby priority levels to Java priority levels (until we have green threads)	DESIGN	0.9990531512451548	DESIGN	9.468487548452275E-4	WITHOUT_CLASSIFICATION
TODO: no java stringity	DESIGN	0.8755533450122961	DESIGN	0.12444665498770378	WITHOUT_CLASSIFICATION
need to reexamine this	DESIGN	0.9740796494856317	WITHOUT_CLASSIFICATION	0.02592035051436831	DESIGN
TODO: These were missing, so we're not handling them elsewhere?	DESIGN	0.8991628164449275	DESIGN	0.10083718355507261	WITHOUT_CLASSIFICATION
TODO: why are we duplicating the constants here, and then in File::Constants below? File::Constants is included in IO.	DESIGN	0.7485253923646237	DESIGN	0.2514746076353763	WITHOUT_CLASSIFICATION
TODO: this method is not present in MRI!	DESIGN	0.9889308260297623	DESIGN	0.011069173970237576	WITHOUT_CLASSIFICATION
TODO: This is also defined in the MetaClass too...Consolidate somewhere.	DESIGN	0.5928968791151695	DESIGN	0.40710312088483047	WITHOUT_CLASSIFICATION
Something wrong we don't know the cwd... TODO: Is this behavior really desirable? /mov	DESIGN	0.9998588291525342	DESIGN	1.4117084746566628E-4	WITHOUT_CLASSIFICATION
Fixme: This does not have exact same semantics as RubyArray.join, but they probably could be consolidated (perhaps as join(args[], sep, doChomp)).	DESIGN	0.9530608544050266	DESIGN	0.04693914559497344	WITHOUT_CLASSIFICATION
TODO should this be deprecated ? (to be efficient, internals should deal with RubyHash directly)	DESIGN	0.9997989292019821	DESIGN	2.0107079801798475E-4	WITHOUT_CLASSIFICATION
TODO: Implement tty? and isatty. We have no real capability to determine this from java, but if we could set tty status, then we could invoke jruby differently to allow stdin to return true on this. This would allow things like cgi.rb to work properly.	DESIGN	0.9988663851082564	DESIGN	0.0011336148917435354	WITHOUT_CLASSIFICATION
TODO: better error handling	DESIGN	0.9960744154242229	DESIGN	0.0039255845757771475	WITHOUT_CLASSIFICATION
this seems unlikely to happen unless it's a totally bogus fileno ...so do we even need to bother trying to create one?	DESIGN	0.9996853341940326	WITHOUT_CLASSIFICATION	3.1466580596738023E-4	DESIGN
IN FACT, we should probably raise an error, yes?	DESIGN	0.8739962272681469	WITHOUT_CLASSIFICATION	0.12600377273185318	DESIGN
TODO: Ruby reuses this logic for other "write" behavior by checking if it's an IO and calling write again	DESIGN	0.8908950016842888	DESIGN	0.10910499831571129	WITHOUT_CLASSIFICATION
FIXME we should probably still be dyncalling 'write' here	DESIGN	0.9855298680608905	DESIGN	0.01447013193910945	WITHOUT_CLASSIFICATION
TODO: This version differs from ioctl by checking whether fcntl exists and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9997258852226281	DESIGN	2.7411477737190225E-4	WITHOUT_CLASSIFICATION
FIXME: I don't like the null checks here	DESIGN	0.9527292522702154	DESIGN	0.047270747729784596	WITHOUT_CLASSIFICATION
TODO: handle writing into original buffer better	DESIGN	0.996945793664306	DESIGN	0.0030542063356939846	WITHOUT_CLASSIFICATION
TODO: is this the right thing to do?	DESIGN	0.9992760907492866	DESIGN	7.239092507134365E-4	WITHOUT_CLASSIFICATION
TODO: This isn't an exact port of MRI's pipe behavior, so revisit	DESIGN	0.9935135811926437	DESIGN	0.006486418807356298	WITHOUT_CLASSIFICATION
FIXME: If NativeException is expected to be used from Ruby code, it should provide a real allocator to be used. Otherwise Class.new will fail, as will marshalling. JRUBY-415	DESIGN	0.9806569416709451	DESIGN	0.019343058329054905	WITHOUT_CLASSIFICATION
FIXME: finalizer should be dupped here	DESIGN	0.987295369007919	DESIGN	0.012704630992080981	WITHOUT_CLASSIFICATION
rb_obj_id Return the internal id of an object. FIXME: Should this be renamed to match its ruby name?	DESIGN	0.9965040476377578	DESIGN	0.0034959523622421175	WITHOUT_CLASSIFICATION
FIXME: Obvious issue that not all platforms can display all attributes. Ugly hacks. Using generic posix library makes pushing inspect behavior into specific system impls rather painful.	DESIGN	0.9991892843769531	DESIGN	8.107156230469114E-4	WITHOUT_CLASSIFICATION
Workaround for JRUBY-4149	DESIGN	0.9860074234692983	WITHOUT_CLASSIFICATION	0.013992576530701701	DESIGN
TODO: NOT_ALLOCATABLE_ALLOCATOR may be ok here, but it's unclear how Structs work with marshalling. Confirm behavior and ensure we're doing this correctly. JRUBY-415	DESIGN	0.9799992768572349	DESIGN	0.0200007231427651	WITHOUT_CLASSIFICATION
FIXME: This is copied code from RubyArray. Both RE, Struct, and Array should share one impl This is also hacky since I construct ruby objects to access ruby arrays through aref instead of something lower.	DESIGN	0.9990299257679424	DESIGN	9.700742320576476E-4	WITHOUT_CLASSIFICATION
FIXME: We should not be regenerating this over and over	DESIGN	0.9975895524637969	DESIGN	0.002410447536203187	WITHOUT_CLASSIFICATION
FIXME: This is probably not very efficient, since it loads all methods for each call	DESIGN	0.999007889154811	DESIGN	9.92110845189035E-4	WITHOUT_CLASSIFICATION
TODO: Consider a better way of synchronizing	DESIGN	0.9994643318405003	DESIGN	5.356681594996442E-4	WITHOUT_CLASSIFICATION
FIXME: Why was this using a FullFunctionCallbackMethod before that did callSuper?	DESIGN	0.9482675696891723	DESIGN	0.05173243031082774	WITHOUT_CLASSIFICATION
A cloned method now belongs to a new class. Set it. TODO: Make DynamicMethod immutable	DESIGN	0.784526525594988	WITHOUT_CLASSIFICATION	0.21547347440501188	DESIGN
FIXME: figure out why we get null sometimes	DESIGN	0.9859467519164471	DESIGN	0.014053248083552844	WITHOUT_CLASSIFICATION
FIXME: Can get optimized for IEqlNode	DESIGN	0.8344959956393764	DESIGN	0.16550400436062368	WITHOUT_CLASSIFICATION
rb_mod_remove_cvar FIXME: any good reason to have two identical methods? (same as remove_class_variable)	DESIGN	0.8163411231242621	DESIGN	0.18365887687573781	WITHOUT_CLASSIFICATION
FIXME: these descriptions should probably be moved out, to Constantine project which deals with all platform-dependent constants.	DESIGN	0.9998244314132145	DESIGN	1.755685867855216E-4	WITHOUT_CLASSIFICATION
TODO: what about n arg?	DESIGN	0.9629567547906968	DESIGN	0.03704324520930314	WITHOUT_CLASSIFICATION
TODO: rounding mode should not be hard-coded. See #mode.	DESIGN	0.9909300049451918	DESIGN	0.009069995054808285	WITHOUT_CLASSIFICATION
regular division with some default precision TODO: proper algorithm to set the precision	DESIGN	0.9706024576345119	DESIGN	0.029397542365488076	WITHOUT_CLASSIFICATION
TODO: better algorithm to set precision needed	DESIGN	0.9909474198591747	DESIGN	0.009052580140825361	WITHOUT_CLASSIFICATION
FIXME: what should these really be? Numeric? assert x instanceof RubyComplex && y instanceof RubyComplex;	DESIGN	0.9999955273190928	DESIGN	4.472680907164202E-6	WITHOUT_CLASSIFICATION
FIXME: what should this really be? assert x instanceof RubyComplex;	DESIGN	0.9999966519356013	DESIGN	3.348064398862646E-6	WITHOUT_CLASSIFICATION
FIXME: the code below is a copy of RubyIO.puts, and we should avoid copy-paste.	DESIGN	0.9781843980548073	DESIGN	0.021815601945192727	WITHOUT_CLASSIFICATION
Yow...this is still ugly	DESIGN	0.9840787011361969	WITHOUT_CLASSIFICATION	0.015921298863803113	DESIGN
end hack	DESIGN	0.8676655904449361	DESIGN	0.13233440955506393	WITHOUT_CLASSIFICATION
TODO: Should next and return also catch here?	DESIGN	0.9664732056469497	DESIGN	0.033526794353050234	WITHOUT_CLASSIFICATION
TODO: Generalize this type-checking code into IRubyObject helper.	DESIGN	0.996656908509674	DESIGN	0.0033430914903260184	WITHOUT_CLASSIFICATION
TODO: newTypeError does not offer enough for ruby error string...	DESIGN	0.8749669563273048	DESIGN	0.12503304367269513	WITHOUT_CLASSIFICATION
FIXME: If true array is common enough we should pre-allocate and stick somewhere	DESIGN	0.6211626571123483	WITHOUT_CLASSIFICATION	0.3788373428876517	DESIGN
TODO: This is almost RubyModule#instance_methods on the metaClass. Perhaps refactor.	DESIGN	0.9961961191920258	DESIGN	0.003803880807974096	WITHOUT_CLASSIFICATION
The following three methods must be defined fast, since they expect to modify the current frame (i.e. they expect no frame will be allocated for them). JRUBY-1185.	DESIGN	0.9999971510195882	WITHOUT_CLASSIFICATION	2.848980411754022E-6	DESIGN
FIXME: I think this chunk is equivalent to MRI id2name (and not our public method id2name). Make into method if used more than once.	DESIGN	0.9999975543070415	DESIGN	2.4456929584647625E-6	WITHOUT_CLASSIFICATION
TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9537109658619924	WITHOUT_CLASSIFICATION	0.04628903413800762	DESIGN
TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9537109658619924	WITHOUT_CLASSIFICATION	0.04628903413800762	DESIGN
TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9537109658619924	WITHOUT_CLASSIFICATION	0.04628903413800762	DESIGN
optional args, so we have IRubyObject[] TODO: confirm	DESIGN	0.5425587161177697	WITHOUT_CLASSIFICATION	0.45744128388223027	DESIGN
TODO: Split this into two sub-classes so that name and constNode can be specified seperately.	DESIGN	0.9995153841175873	DESIGN	4.84615882412716E-4	WITHOUT_CLASSIFICATION
TODO: wire into new exception handling mechanism	DESIGN	0.9249745273751153	DESIGN	0.07502547262488468	WITHOUT_CLASSIFICATION
FIXME: ConstDecl could be two seperate classes (or done differently since constNode and name never exist at the same time.	DESIGN	0.6862174575945666	DESIGN	0.3137825424054334	WITHOUT_CLASSIFICATION
TODO: do above but not below for additional newline nodes	DESIGN	0.5189758702037163	DESIGN	0.4810241297962838	WITHOUT_CLASSIFICATION
TODO: Figure out how this can happen and possibly remove	DESIGN	0.9969722387800143	DESIGN	0.00302776121998562	WITHOUT_CLASSIFICATION
TODO: At least ParserSupport.attrset passes argsNode as null. ImplicitNil is wrong magic for setupArgs since it will IRubyObject[] { nil }. So we need to figure out a nice fast null pattern for setupArgs. assert argsNode != null : "receiverNode is not null";	DESIGN	0.9999899860397303	DESIGN	1.0013960269749656E-5	WITHOUT_CLASSIFICATION
FIXME: JRUBY-3188 ends up with condition returning null...quick fix until I can dig into it	DESIGN	0.9989814285633749	DESIGN	0.0010185714366250306	WITHOUT_CLASSIFICATION
FIXME: I use a for block to implement END node because we need a proc which captures its enclosing scope. ForBlock now represents these node and should be renamed.	DESIGN	0.9997405302673563	DESIGN	2.5946973264372945E-4	WITHOUT_CLASSIFICATION
method has more than 500 lines; we'll need to split it and therefore need to use a heap-based scope	DESIGN	0.9074713623634119	WITHOUT_CLASSIFICATION	0.09252863763658814	DESIGN
TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.8259025886723591	WITHOUT_CLASSIFICATION	0.174097411327641	DESIGN
If it's a single-arg when but contains an array, we know it's a real literal array FIXME: This is a gross way to figure it out; parser help similar to yield argument passing (expandArguments) would be better	DESIGN	0.9999966607948814	DESIGN	3.339205118616697E-6	WITHOUT_CLASSIFICATION
TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.8259025886723591	WITHOUT_CLASSIFICATION	0.174097411327641	DESIGN
XXX: const lookup can trigger const_missing; is that enough to warrant it always being executed?	DESIGN	0.8254994087919206	WITHOUT_CLASSIFICATION	0.17450059120807937	DESIGN
if body is a rescue node, inspect its pieces separately to avoid it disabling all optz TODO: this is gross.	DESIGN	0.5141585835032939	WITHOUT_CLASSIFICATION	0.48584141649670615	DESIGN
if body is a rescue node, inspect its pieces separately to avoid it disabling all optz TODO: this is gross.	DESIGN	0.5141585835032939	WITHOUT_CLASSIFICATION	0.48584141649670615	DESIGN
FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.9998971554704408	DESIGN	1.0284452955920503E-4	WITHOUT_CLASSIFICATION
TODO: This filtering is kind of gross...it would be nice to get some parser help here	DESIGN	0.9999201478997225	DESIGN	7.98521002776032E-5	WITHOUT_CLASSIFICATION
FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.9998971554704408	DESIGN	1.0284452955920503E-4	WITHOUT_CLASSIFICATION
arguments compilers always create IRubyObject[], but we want to use RubyArray.concat here; FIXME: as a result, this is NOT efficient, since it creates and then later unwraps an array	DESIGN	0.9994911081246978	DESIGN	5.088918753022813E-4	WITHOUT_CLASSIFICATION
FIXME: This is temporary since the variable compilers assume we want args already on stack for assignment. We just pop and continue with 1.9 args logic.	DESIGN	0.9728224190721603	DESIGN	0.027177580927839645	WITHOUT_CLASSIFICATION
TODO: reads/writes from frame TODO: information on scoping TODO: visibility?	DESIGN	0.5974352447316326	WITHOUT_CLASSIFICATION	0.4025647552683675	DESIGN
for visibility checking without requiring frame self TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9987223321531867	DESIGN	0.0012776678468132663	WITHOUT_CLASSIFICATION
TODO: cache?	DESIGN	0.8393310576406344	DESIGN	0.16066894235936555	WITHOUT_CLASSIFICATION
TODO: cache?	DESIGN	0.8393310576406344	DESIGN	0.16066894235936555	WITHOUT_CLASSIFICATION
index for the item this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.7253462348428165	WITHOUT_CLASSIFICATION	0.2746537651571834	DESIGN
if we don't have opt args, start after args (they will be assigned later) this is for crap like def foo(a = (b = true; 1)) which numbers b before a FIXME: only starting after required args, since opt args may access others and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.9604890567142583	WITHOUT_CLASSIFICATION	0.039510943285741645	DESIGN
FIXME: this really ought to be in clinit, but it doesn't matter much	DESIGN	0.9870137134631272	DESIGN	0.012986286536872855	WITHOUT_CLASSIFICATION
install invokedynamic bootstrapper TODO need to abstract this setup behind another compiler interface	DESIGN	0.9385375536945273	DESIGN	0.06146244630547267	WITHOUT_CLASSIFICATION
FIXME: This isn't right for within ensured/rescued code	DESIGN	0.963333199486489	DESIGN	0.036666800513510955	WITHOUT_CLASSIFICATION
SSS FIXME: Deprecated! Going forward, all instructions should come from the CFG	DESIGN	0.7428918203779368	DESIGN	0.2571081796220631	WITHOUT_CLASSIFICATION
SSS FIXME: Do we need to check if l is same as whatever popped?	DESIGN	0.5774110523857905	WITHOUT_CLASSIFICATION	0.4225889476142095	DESIGN
SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.7068310366772463	DESIGN	0.2931689633227536	WITHOUT_CLASSIFICATION
SSS FIXME: I added this in. Is this correct?	DESIGN	0.9994262667896139	DESIGN	5.737332103861908E-4	WITHOUT_CLASSIFICATION
SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.7068310366772463	DESIGN	0.2931689633227536	WITHOUT_CLASSIFICATION
SSS FIXME: Are we guaranteed that we splats dont head to multiple-assignment nodes! i.e. |(a,b)|?	DESIGN	0.9524848149292275	DESIGN	0.04751518507077253	WITHOUT_CLASSIFICATION
SSS FIXME: Can this return anything other than nil?	DESIGN	0.8624784087902309	DESIGN	0.1375215912097691	WITHOUT_CLASSIFICATION
SSS FIXME: What happens to the add class in this case??	DESIGN	0.9660321484774793	DESIGN	0.03396785152252072	WITHOUT_CLASSIFICATION
CON FIXME: I don't know how to make case be an expression...does that logic need to go here?	DESIGN	0.9981806057928614	DESIGN	0.0018193942071386387	WITHOUT_CLASSIFICATION
SSS FIXME: Where is this set up? How is this diff from ClassVarDeclNode??	DESIGN	0.9910239555556836	DESIGN	0.008976044444316397	WITHOUT_CLASSIFICATION
SSS FIXME: Is this correct?	DESIGN	0.9994800588682796	DESIGN	5.199411317203182E-4	WITHOUT_CLASSIFICATION
SSS FIXME: Used anywhere? I don't see calls to this anywhere public Operand buildDAsgnAssignment(Node node, IR_Scope s) { DAsgnNode dasgnNode = (DAsgnNode) node; s.getVariableCompiler().assignLocalVariable(dasgnNode.getIndex(), dasgnNode.getDepth()); }	DESIGN	0.5928786851776221	DESIGN	0.4071213148223779	WITHOUT_CLASSIFICATION
SSS FIXME: Receiver -- this is the class meta object basically? Operand receiver = build(defsNode.getReceiverNode(), s);	DESIGN	0.7671905229679453	DESIGN	0.2328094770320546	WITHOUT_CLASSIFICATION
self = args[0] SSS FIXME: Verify that this is correct	DESIGN	0.8723775638783665	DESIGN	0.12762243612163357	WITHOUT_CLASSIFICATION
SSS FIXME: Is this correct?	DESIGN	0.9994800588682796	DESIGN	5.199411317203182E-4	WITHOUT_CLASSIFICATION
SSS FIXME: 1. Is the ordering correct? (poll before next)	DESIGN	0.9928218844193376	DESIGN	0.007178115580662411	WITHOUT_CLASSIFICATION
add a "self" recv here TODO: is this right?	DESIGN	0.9999521997099535	DESIGN	4.780029004653796E-5	WITHOUT_CLASSIFICATION
SSS FIXME: Is this correctly placed ... at the end of the loop iteration?	DESIGN	0.8398022688283129	DESIGN	0.16019773117168704	WITHOUT_CLASSIFICATION
SSS FIXME: Where does this go? m.setLinePosition(arrayNode.getPosition());	DESIGN	0.8002468571826237	DESIGN	0.19975314281737622	WITHOUT_CLASSIFICATION
SSS FIXME: I could make IR_Loop a scope too ... semantically, it is a scope, but, functionally, not sure if this is required yet ...	DESIGN	0.9995425876074833	DESIGN	4.5741239251673654E-4	WITHOUT_CLASSIFICATION
SSS FIXME: Should this be a string literal or a string? Dummy class for the script	DESIGN	0.9907760064498621	DESIGN	0.009223993550137853	WITHOUT_CLASSIFICATION
SSS FIXME: Does int suffice, or do we need long?	DESIGN	0.94579827411004	DESIGN	0.05420172588995997	WITHOUT_CLASSIFICATION
SSS FIXME: Correct? Where does closure arg come from?	DESIGN	0.9256909277231228	WITHOUT_CLASSIFICATION	0.07430907227687719	DESIGN
SSS FIXME: Should I have a reference to the IR_loop that is being retried?	DESIGN	0.9675408574200037	DESIGN	0.03245914257999622	WITHOUT_CLASSIFICATION
Simplify the variables too -- to keep these variables in sync with what is actually used in the when clauses This is not required for correctness reasons, but only for performance reasons.	DESIGN	0.9638252821480939	DESIGN	0.03617471785190604	WITHOUT_CLASSIFICATION
SSS FIXME: This should never get called for constant svalues	DESIGN	0.8658776693168563	DESIGN	0.13412233068314364	WITHOUT_CLASSIFICATION
SSS FIXME: Should this be Operand or CompoundString? Can it happen that symbols are built out of other than compound strings? Or can it happen during optimizations that this becomes a generic operand?	DESIGN	0.9975970484569543	DESIGN	0.0024029515430457277	WITHOUT_CLASSIFICATION
TODO: need to get this back into the method signature...now is too late...	DESIGN	0.9979648913253842	DESIGN	0.0020351086746157854	WITHOUT_CLASSIFICATION
Hack in to replace usual readline with this	DESIGN	0.9881337915117193	DESIGN	0.01186620848828062	WITHOUT_CLASSIFICATION
bit risky if someone changes completor, but useful for method calls	DESIGN	0.9988078585383333	WITHOUT_CLASSIFICATION	0.0011921414616666798	DESIGN
FIXME: This determine module is in a strange location and should somehow be in block	DESIGN	0.9792179510678017	DESIGN	0.020782048932198146	WITHOUT_CLASSIFICATION
Create block for this iter node FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.7388849273099619	WITHOUT_CLASSIFICATION	0.26111507269003814	DESIGN
we basically ignore protocol. let someone report it...	DESIGN	0.9790629541122499	WITHOUT_CLASSIFICATION	0.020937045887750114	DESIGN
Workaround for a bug in Sun's JDK 1.5.x, see http:bugs.sun.com/bugdatabase/view_bug.do?bug_id=6303753	DESIGN	0.9593968287415422	WITHOUT_CLASSIFICATION	0.04060317125845778	DESIGN
context is null, wipe out the SoftReference (this could be done with a reference queue)	DESIGN	0.9760553729841751	WITHOUT_CLASSIFICATION	0.023944627015824893	DESIGN
FIXME we want to eliminate these type casts when possible	DESIGN	0.9976552007557741	DESIGN	0.0023447992442260077	WITHOUT_CLASSIFICATION
TODO: Determine whether we should perhaps store non-singleton class in the implementationClass	DESIGN	0.9962946871651792	DESIGN	0.003705312834820728	WITHOUT_CLASSIFICATION
FIXME: set up a CallConfiguration for this	DESIGN	0.9265701675409007	DESIGN	0.07342983245909931	WITHOUT_CLASSIFICATION
FIXME: set up a call configuration for this	DESIGN	0.9864882670620436	DESIGN	0.013511732937956418	WITHOUT_CLASSIFICATION
TODO: make this do specific-arity calling	DESIGN	0.9353081365872885	DESIGN	0.06469186341271142	WITHOUT_CLASSIFICATION
add 'new' with full signature, so it's guaranteed to be directly accessible TODO: no need for this to be a full, formal JVM signature	DESIGN	0.9980186758052308	DESIGN	0.001981324194769178	WITHOUT_CLASSIFICATION
add method with full signature, so it's guaranteed to be directly accessible TODO: no need for this to be a full, formal JVM signature	DESIGN	0.998794539708435	DESIGN	0.0012054602915649688	WITHOUT_CLASSIFICATION
FIXME This whole thing could probably be implemented as a module and mixed into appropriate classes, especially if it uses either IOInput/OutputStream or is smart about the kind of IO-like object it's being used against.	DESIGN	0.9999999823435799	DESIGN	1.7656420088244605E-8	WITHOUT_CLASSIFICATION
using IOInputStream may not be the most performance way, but it's easy.	DESIGN	0.9990437374934683	WITHOUT_CLASSIFICATION	9.562625065317127E-4	DESIGN
using IOOutputStream may not be the most performance way, but it's easy.	DESIGN	0.9990437374934683	WITHOUT_CLASSIFICATION	9.562625065317127E-4	DESIGN
using IOChannel may not be the most performant way, but it's easy.	DESIGN	0.998210817965026	WITHOUT_CLASSIFICATION	0.00178918203497407	DESIGN
these extra arrays are really unfortunate; split some of these paths out to eliminate?	DESIGN	0.966802451395264	WITHOUT_CLASSIFICATION	0.03319754860473592	DESIGN
TODO: WRONG - get interfaces from class	DESIGN	0.8623766678023091	DESIGN	0.1376233321976909	WITHOUT_CLASSIFICATION
TODO: catch exception if constant is already set by other thread	DESIGN	0.879145384933794	WITHOUT_CLASSIFICATION	0.12085461506620597	DESIGN
TODO: public only?	DESIGN	0.6372135112042095	DESIGN	0.3627864887957904	WITHOUT_CLASSIFICATION
see note below re: 2-field kludge	DESIGN	0.7937269393685432	WITHOUT_CLASSIFICATION	0.20627306063145676	DESIGN
TODO: protected methods. this is going to require a rework of some of the mechanism.	DESIGN	0.9704724233134858	DESIGN	0.029527576686514217	WITHOUT_CLASSIFICATION
TODO: protected methods. this is going to require a rework of some of the mechanism.	DESIGN	0.9704724233134858	DESIGN	0.029527576686514217	WITHOUT_CLASSIFICATION
FIXME: do we really want 'declared' methods? includes private/protected, and does _not_ include superclass methods	DESIGN	0.957115811275935	DESIGN	0.042884188724065	WITHOUT_CLASSIFICATION
FIXME: This doesn't actually support anything but String	DESIGN	0.6002548310145832	DESIGN	0.3997451689854167	WITHOUT_CLASSIFICATION
again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.7070141387927585	DESIGN	0.2929858612072414	WITHOUT_CLASSIFICATION
again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.7070141387927585	DESIGN	0.2929858612072414	WITHOUT_CLASSIFICATION
this needs to be split, since conditional calling #inherited doesn't fit standard ruby semantics	DESIGN	0.9929160697202986	WITHOUT_CLASSIFICATION	0.0070839302797014786	DESIGN
TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.5617869504124614	DESIGN	0.4382130495875386	WITHOUT_CLASSIFICATION
TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.5617869504124614	DESIGN	0.4382130495875386	WITHOUT_CLASSIFICATION
this covers the rare case of lower-case class names (and thus will fail 99.999% of the time). fortunately, we'll only do this once per package name. (and seriously, folks, look into best practices...)	DESIGN	0.9434365282796628	WITHOUT_CLASSIFICATION	0.05656347172033709	DESIGN
FIXME: we should also support orgs that use capitalized package names (including, embarrassingly, the one I work for), but this should be enabled by a system property, as the expected default behavior for an upper-case value should be (and is) to treat it as a class name, and raise an exception if it's not found	DESIGN	0.9921855543158233	DESIGN	0.007814445684176666	WITHOUT_CLASSIFICATION
TODO: check for Java reserved names and raise exception if encountered	DESIGN	0.9612566405517274	WITHOUT_CLASSIFICATION	0.03874335944827257	DESIGN
upper-case package name TODO: top-level upper-case package was supported in the previous (Ruby-based) implementation, so leaving as is. see note at #getProxyOrPackageUnderPackage re: future approach below the top-level.	DESIGN	0.9673234059957548	DESIGN	0.032676594004245205	WITHOUT_CLASSIFICATION
FIXME: wtf is this? Why would these use the class?	DESIGN	0.9999213721224987	DESIGN	7.862787750129006E-5	WITHOUT_CLASSIFICATION
FIXME: needs to be rethought	DESIGN	0.949567639640432	DESIGN	0.05043236035956799	WITHOUT_CLASSIFICATION
TODO: specifying soft refs, may want to compare memory consumption, behavior with weak refs (specify WEAK in place of SOFT below)	DESIGN	0.5057743599174824	WITHOUT_CLASSIFICATION	0.4942256400825177	DESIGN
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9976956566842566	DESIGN	0.0023043433157433468	WITHOUT_CLASSIFICATION
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9976956566842566	DESIGN	0.0023043433157433468	WITHOUT_CLASSIFICATION
if we get here, we found a matching method, use it TODO: choose narrowest method by continuing to search	DESIGN	0.6756003115988582	WITHOUT_CLASSIFICATION	0.3243996884011417	DESIGN
TODO: Only setAccessible to account for pattern found by accessing constants included from a non-public interface. (aka java.util.zip.ZipConstants being implemented by many classes)	DESIGN	0.5177421851543573	WITHOUT_CLASSIFICATION	0.4822578148456426	DESIGN
TODO: Only setAccessible to account for pattern found by accessing constants included from a non-public interface. (aka java.util.zip.ZipConstants being implemented by many classes) TODO: not sure we need this at all, since we only expose public fields. field.setAccessible(true);	DESIGN	0.9831273628744177	DESIGN	0.016872637125582266	WITHOUT_CLASSIFICATION
FIXME: NOT_ALLOCATABLE_ALLOCATOR is probably not right here, since we might eventually want JavaArray to be marshallable. JRUBY-414	DESIGN	0.9952198138017943	DESIGN	0.004780186198205688	WITHOUT_CLASSIFICATION
FIXME: do we really want 'declared' methods? includes private/protected, and does _not_ include superclass methods. also, the getDeclared calls may throw SecurityException if we're running under a restrictive security policy.	DESIGN	0.9527654427875573	DESIGN	0.04723455721244265	WITHOUT_CLASSIFICATION
don't bother to check if final method, it won't be there (not generated, can't be!)	DESIGN	0.9999931876966035	WITHOUT_CLASSIFICATION	6.812303396447636E-6	DESIGN
super calls from proxies must use reflected method FIXME: possible to make handles do the superclass call?	DESIGN	0.9759989519081782	DESIGN	0.024001048091821856	WITHOUT_CLASSIFICATION
actual type does not exactly match method return type, re-get converter FIXME: when the only autoconversions are primitives, this won't be needed	DESIGN	0.9292038864745152	WITHOUT_CLASSIFICATION	0.07079611352548476	DESIGN
FIXME: Ideally JavaObject instances should be marshallable, which means that the JavaObject metaclass should have an appropriate allocator. JRUBY-414	DESIGN	0.8485187133605756	DESIGN	0.15148128663942445	WITHOUT_CLASSIFICATION
FIXME: shouldn't need @__java_ovrd_methods, just query locally defined methods.	DESIGN	0.5863542351433538	WITHOUT_CLASSIFICATION	0.4136457648566461	DESIGN
We always prepend an org.jruby.proxy package to the beginning because java and javax packages are protected and signed jars prevent us generating new classes with those package names. See JRUBY-2439.	DESIGN	0.9997635178363007	WITHOUT_CLASSIFICATION	2.364821636992715E-4	DESIGN
TODO: Only used by interface implementation; eliminate it	DESIGN	0.9976777249493373	DESIGN	0.002322275050662768	WITHOUT_CLASSIFICATION
Create block for this iter node FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.7388849273099619	WITHOUT_CLASSIFICATION	0.26111507269003814	DESIGN
modules are included with a shim class; we must find that shim to handle super() appropriately	DESIGN	0.9988425523406818	WITHOUT_CLASSIFICATION	0.0011574476593182097	DESIGN
lame generics issues: making Segment class static and manually inserting cache reference to work around various problems generically referencing methods/vars across classes.	DESIGN	0.8350110140634251	DESIGN	0.16498898593657493	WITHOUT_CLASSIFICATION
entry exists, proxy doesn't match. replace. this could happen if old proxy was gc'ed TODO: raise exception if stored proxy is non-null? (not gc'ed)	DESIGN	0.8940468110919846	DESIGN	0.10595318890801536	WITHOUT_CLASSIFICATION
FIXME: How much more obtuse can this be? Heredoc already parsed this and saved string...Do not parse..just return	DESIGN	0.999972716064083	DESIGN	2.728393591706309E-5	WITHOUT_CLASSIFICATION
ruby constants for strings (should this be moved somewhere else?)	DESIGN	0.8342176905624934	WITHOUT_CLASSIFICATION	0.16578230943750671	DESIGN
Hacky: Advance position to eat newline here....	DESIGN	0.9997814774311126	WITHOUT_CLASSIFICATION	2.1852256888734716E-4	DESIGN
FIXME: Not sure what the semantics of transfer are cFiber.defineFastMethod("transfer", cb.getFastOptMethod("transfer"));	DESIGN	0.9968688618471865	DESIGN	0.0031311381528134107	WITHOUT_CLASSIFICATION
ignore...bean doesn't get registered TODO: Why does that bother me?	DESIGN	0.7548810777391847	DESIGN	0.24511892226081533	WITHOUT_CLASSIFICATION
ignore...bean doesn't get registered TODO: Why does that bother me?	DESIGN	0.7548810777391847	DESIGN	0.24511892226081533	WITHOUT_CLASSIFICATION
ENEBO: Totally weird naming (in MRI is not allocated and is a local var name)	DESIGN	0.9535584700238623	WITHOUT_CLASSIFICATION	0.04644152997613781	DESIGN
FIXME: Remove this from grammars.	DESIGN	0.9546144665810845	DESIGN	0.04538553341891556	WITHOUT_CLASSIFICATION
FIXME: Consider fixing node_assign itself rather than single case	DESIGN	0.8795662427421648	DESIGN	0.1204337572578353	WITHOUT_CLASSIFICATION
Workaround for JRUBY-2326 (MRI does not enter this production for some reason)	DESIGN	0.8940043978879927	WITHOUT_CLASSIFICATION	0.1059956021120072	DESIGN
FIXME: lose syntactical elements here (and others like this)	DESIGN	0.9843461043613766	DESIGN	0.01565389563862333	WITHOUT_CLASSIFICATION
ENEBO: Lots of optz in 1.9 parser here	DESIGN	0.9956087742823585	WITHOUT_CLASSIFICATION	0.004391225717641494	DESIGN
This is perhaps innefficient timewise? Optimal spacewise	DESIGN	0.7830861200663064	WITHOUT_CLASSIFICATION	0.21691387993369365	DESIGN
This is a dummy scope; we should find a way to make that more explicit	DESIGN	0.8984796844437616	DESIGN	0.10152031555623843	WITHOUT_CLASSIFICATION
We clone dynamic scope because this will be a new instance of a block. Any previously captured instances of this block may still be around and we do not want to start overwriting those values when we create a new one. ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.9993069711403166	DESIGN	6.930288596833448E-4	WITHOUT_CLASSIFICATION
TODO: This probably isn't the best hack, but it works until we can have different root frame setup for 1.9 easily.	DESIGN	0.9997880663429533	DESIGN	2.1193365704660284E-4	WITHOUT_CLASSIFICATION
FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9919976624077435	DESIGN	0.008002337592256525	WITHOUT_CLASSIFICATION
FIXME: I think we need these pushed somewhere?	DESIGN	0.9996111198455278	DESIGN	3.8888015447226124E-4	WITHOUT_CLASSIFICATION
FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9919976624077435	DESIGN	0.008002337592256525	WITHOUT_CLASSIFICATION
FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9919976624077435	DESIGN	0.008002337592256525	WITHOUT_CLASSIFICATION
XXX: Again, screwy evaling under previous frame's scope	DESIGN	0.999046884375132	WITHOUT_CLASSIFICATION	9.531156248679451E-4	DESIGN
FIXME: This version is faster than the previous, but both suffer from a crucial flaw: It is impossible to create an ObjectSpace with an iterator that doesn't either: a. hold on to objects that might otherwise be collected or b. have no way to guarantee that a call to hasNext() will be correct or that a subsequent call to next() will produce an object. For our purposes, for now, this may be acceptable.	DESIGN	0.9899705015447335	DESIGN	0.010029498455266508	WITHOUT_CLASSIFICATION
FIXME: Maybe not best place, but move it to a good home	DESIGN	0.9999999488705489	DESIGN	5.1129451164428917E-8	WITHOUT_CLASSIFICATION
FIXME: This is gross. Don't do this.	DESIGN	0.7853375133678989	DESIGN	0.21466248663210116	WITHOUT_CLASSIFICATION
@author headius FIXME convert to enum ?	DESIGN	0.8663908181766512	DESIGN	0.13360918182334877	WITHOUT_CLASSIFICATION
FIXME: No, I don't like it.	DESIGN	0.6493011089720614	WITHOUT_CLASSIFICATION	0.3506988910279385	DESIGN
TODO: This is probably BAD...	DESIGN	0.9934688408994422	DESIGN	0.006531159100557702	WITHOUT_CLASSIFICATION
FIXME: not very efficient	DESIGN	0.9981792842852949	DESIGN	0.0018207157147051513	WITHOUT_CLASSIFICATION
invoke callMethodMissing method directly TODO: this could be further optimized, since some DSLs hit method_missing pretty hard...	DESIGN	0.9944623258923596	DESIGN	0.005537674107640359	WITHOUT_CLASSIFICATION
TODO this is really ineffient, and potentially a problem everytime anyone require's something. we should try to make LoadPath a special array object.	DESIGN	0.9998764154837458	DESIGN	1.235845162540845E-4	WITHOUT_CLASSIFICATION
FIXME: inefficient; constructing a bignum just for dumping?	DESIGN	0.6146929295053202	WITHOUT_CLASSIFICATION	0.38530707049467966	DESIGN
FIXME: not very efficient	DESIGN	0.9981792842852949	DESIGN	0.0018207157147051513	WITHOUT_CLASSIFICATION
FIXME: not very efficient	DESIGN	0.9981792842852949	DESIGN	0.0018207157147051513	WITHOUT_CLASSIFICATION
FIXME: not very efficient	DESIGN	0.9981792842852949	DESIGN	0.0018207157147051513	WITHOUT_CLASSIFICATION
FIXME: not very efficient	DESIGN	0.9981792842852949	DESIGN	0.0018207157147051513	WITHOUT_CLASSIFICATION
FIXME: this should go somewhere more generic -- maybe IdUtil	DESIGN	0.9988528643908846	DESIGN	0.001147135609115427	WITHOUT_CLASSIFICATION
FIXME: potentially could just use ByteList here?	DESIGN	0.9973503684587386	DESIGN	0.0026496315412614002	WITHOUT_CLASSIFICATION
FIXME: This is almost entirely duplicated from Main.java	DESIGN	0.8267161694493756	DESIGN	0.1732838305506244	WITHOUT_CLASSIFICATION
TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.5757061677738115	DESIGN	0.42429383222618855	WITHOUT_CLASSIFICATION
TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.5757061677738115	DESIGN	0.42429383222618855	WITHOUT_CLASSIFICATION
grrr, arghh, want to subclass sun.misc.FloatingDecimal, but can't, so we must do all this (the next 70 lines of code), which has already been done by FloatingDecimal.	DESIGN	0.9569922940099473	WITHOUT_CLASSIFICATION	0.04300770599005276	DESIGN
it would be nice (and logical!) if exponent form behaved like E/e, and decimal form behaved like f, but no such luck. hence:	DESIGN	0.9928774662032726	WITHOUT_CLASSIFICATION	0.007122533796727443	DESIGN
This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.9956943139124571	WITHOUT_CLASSIFICATION	0.004305686087542845	DESIGN
This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.9956943139124571	WITHOUT_CLASSIFICATION	0.004305686087542845	DESIGN
TODO: get rid of this (lax returns 0.0, strict will throw)	DESIGN	0.9838077554998867	DESIGN	0.016192244500113355	WITHOUT_CLASSIFICATION
TODO: turn off the negative? will return -0.0 in lax mode	DESIGN	0.7563613258728962	DESIGN	0.24363867412710377	WITHOUT_CLASSIFICATION
FIXME: this probably belongs in a different package.	DESIGN	0.999123078552127	DESIGN	8.769214478729643E-4	WITHOUT_CLASSIFICATION
TODO: It would be nice to throw a better error for this	DESIGN	0.9999284524309301	DESIGN	7.154756906990942E-5	WITHOUT_CLASSIFICATION
TODO: It would be nice to throw a better error for this	DESIGN	0.9999284524309301	DESIGN	7.154756906990942E-5	WITHOUT_CLASSIFICATION
FIXME: I don't like this	DESIGN	0.9912796192144189	DESIGN	0.00872038078558115	WITHOUT_CLASSIFICATION
TODO: It's perhaps just a coincidence that all the channels for which we should raise are instanceof SelectableChannel, since stdio is not...so this bothers me slightly. -CON	DESIGN	0.9999307722973231	DESIGN	6.922770267686715E-5	WITHOUT_CLASSIFICATION
FIXME: Clearing read buffer here...is this appropriate?	DESIGN	0.8985311831085079	DESIGN	0.10146881689149213	WITHOUT_CLASSIFICATION
TODO this should entry into error handling somewhere	DESIGN	0.9941181035730676	DESIGN	0.005881896426932284	WITHOUT_CLASSIFICATION
FIXME: This worries me a bit, since it could allocate a lot with a large newLength	DESIGN	0.9943511858864378	DESIGN	0.005648814113562219	WITHOUT_CLASSIFICATION
We use a highly uncommon string to represent the paragraph delimiter (100% soln not worth it)	DESIGN	0.9996964342870103	WITHOUT_CLASSIFICATION	3.035657129897771E-4	DESIGN
TODO: Ruby does not seem to care about invalid numeric mode values I am not sure if ruby overflows here also...	DESIGN	0.9861609895279926	DESIGN	0.013839010472007366	WITHOUT_CLASSIFICATION
TODO: Make this more intelligible value	DESIGN	0.9582718738918409	DESIGN	0.04172812610815916	WITHOUT_CLASSIFICATION
XXX: do something?	DESIGN	0.9801675286607546	WITHOUT_CLASSIFICATION	0.019832471339245428	DESIGN
for visibility checking without requiring frame self TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9987223321531867	DESIGN	0.0012776678468132663	WITHOUT_CLASSIFICATION
for visibility checking without requiring frame self TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9987223321531867	DESIGN	0.0012776678468132663	WITHOUT_CLASSIFICATION
up to ten, stuff into tmp locals, load in reverse order, and assign FIXME: There's probably a slightly smarter way, but is it important?	DESIGN	0.9540879044093835	DESIGN	0.045912095590616396	WITHOUT_CLASSIFICATION
index for the item this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.7253462348428165	WITHOUT_CLASSIFICATION	0.2746537651571834	DESIGN
if we don't have opt args, start after args (they will be assigned later) this is for crap like def foo(a = (b = true; 1)) which numbers b before a FIXME: only starting after required args, since opt args may access others and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.9604890567142583	WITHOUT_CLASSIFICATION	0.039510943285741645	DESIGN
SSS FIXME: These should get normally compiled or initialized some other way ... SSS FIXME: Parent/super-type info is incorrect! These are just placeholders for now .. this needs to be updated with real class objects later!	DESIGN	0.9999993744357166	DESIGN	6.255642833894444E-7	WITHOUT_CLASSIFICATION
SSS FIXME: Move this code to some utils area .. or probably there is already a method for this in some jruby utils class Holy cow! Just to append two darned arrays!	DESIGN	0.9999929691798355	DESIGN	7.030820164441256E-6	WITHOUT_CLASSIFICATION
SSS FIXME: This method (at least in the context of multiple assignment) is a little weird. It calls regular to_ary on the object. But, if it encounters a method_missing, the value is inserted into an 1-element array! try "a,b,c = 1" first; then define Fixnum.to_ary method and try it again. Ex: http:gist.github.com/163551	DESIGN	0.9993498563575564	DESIGN	6.501436424436396E-4	WITHOUT_CLASSIFICATION
This is for JRUBY-2988, since after a suspend the terminal seems to need to be reinitialized. Since we can't easily detect suspension, initialize after every readline. Probably not fast, but this is for interactive terminals anyway...so who cares?	DESIGN	0.9979113062021047	WITHOUT_CLASSIFICATION	0.0020886937978953353	DESIGN
set up a field for the CacheEntry TODO: make this an array so it's not as much class metadata; similar to AbstractScript stuff	DESIGN	0.9000743864609794	DESIGN	0.09992561353902069	WITHOUT_CLASSIFICATION
exit monitor before making call FIXME: this not being in a finally is a little worrisome	DESIGN	0.9890571951389256	DESIGN	0.01094280486107434	WITHOUT_CLASSIFICATION
FIXME: Added this because marshal_spec seemed to reconstitute objects without calling dataWrapStruct this resulted in object being null after unmarshalling...	DESIGN	0.8054863329048335	WITHOUT_CLASSIFICATION	0.19451366709516646	DESIGN
if we get here, we found a matching method, use it TODO: choose narrowest method by continuing to search	DESIGN	0.6756003115988582	WITHOUT_CLASSIFICATION	0.3243996884011417	DESIGN
We clone dynamic scope because this will be a new instance of a block. Any previously captured instances of this block may still be around and we do not want to start overwriting those values when we create a new one. ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.9993069711403166	DESIGN	6.930288596833448E-4	WITHOUT_CLASSIFICATION
TODO: This is actually now returning the scope of whoever called Method#to_proc which is obviously wrong; but there's no scope to provide for many methods. It fixes JRUBY-2237, but needs a better solution.	DESIGN	0.9989533117663643	DESIGN	0.0010466882336357803	WITHOUT_CLASSIFICATION
FIXME: We should be getting this from the runtime rather than assume none? return runtime.getEncodingService().getEncoding(runtime.getDefaultExternalEncoding());	DESIGN	0.8802222830313378	DESIGN	0.11977771696866218	WITHOUT_CLASSIFICATION
ignore...bean doesn't get registered TODO: Why does that bother me?	DESIGN	0.7548810777391847	DESIGN	0.24511892226081533	WITHOUT_CLASSIFICATION
This is a fairly specific hack for empty string, but it does the job	DESIGN	0.9978512411421818	DESIGN	0.0021487588578181886	WITHOUT_CLASSIFICATION
XXX This constructor is a hack to implement the __END__ syntax. Converting a reader back into an InputStream doesn't generally work.	DESIGN	0.9999999543639887	DESIGN	4.56360111984284E-8	WITHOUT_CLASSIFICATION
FIXME: Total hack to get flash in Rails marshalling/unmarshalling in session ok...We need to totally change marshalling to work with overridden core classes.	DESIGN	0.9999966259505423	DESIGN	3.3740494576441677E-6	WITHOUT_CLASSIFICATION
FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9999999952752415	DESIGN	4.724758470834113E-9	WITHOUT_CLASSIFICATION
We're not setting the provider or anything, but it seems that BouncyCastle does some internal things in its provider's constructor which require it to be executed in a secure context. Ideally this hack should be removed. See JRUBY-3919 and this BC bug: http:www.bouncycastle.org/jira/browse/BJA-227	DESIGN	0.9999333518479178	DESIGN	6.664815208226451E-5	WITHOUT_CLASSIFICATION
FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.9965106911974354	DESIGN	0.0034893088025646987	WITHOUT_CLASSIFICATION
FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.9965106911974354	DESIGN	0.0034893088025646987	WITHOUT_CLASSIFICATION
hack to get right style for input	DESIGN	0.9125547916293637	DESIGN	0.08744520837063637	WITHOUT_CLASSIFICATION
Object#to_a is obsolete. We match Ruby's hack until to_a goes away. Then we can remove this hack too.	DESIGN	0.9883959073239609	DESIGN	0.011604092676039138	WITHOUT_CLASSIFICATION
small hack to save a cast later on	DESIGN	0.9934446505616813	DESIGN	0.006555349438318618	WITHOUT_CLASSIFICATION
temporary hack to handle non-Ruby values will come up with better solution shortly	DESIGN	0.9999674226751788	DESIGN	3.2577324821210514E-5	WITHOUT_CLASSIFICATION
Object#to_a is obsolete. We match Ruby's hack until to_a goes away. Then we can remove this hack too.	DESIGN	0.9883959073239609	DESIGN	0.011604092676039138	WITHOUT_CLASSIFICATION
HACK: in order to have stdout/err act like ttys and flush always, we set anything assigned to stdout/stderr to sync	DESIGN	0.9898584835908568	WITHOUT_CLASSIFICATION	0.010141516409143172	DESIGN
HACK: force clinit to be created	DESIGN	0.713429100743083	WITHOUT_CLASSIFICATION	0.286570899256917	DESIGN
FIXME: This is pretty gross; we should have a cleaner initialization that doesn't depend on package-visible fields and ideally is atomic, probably using an immutable structure we replace all at once. lazy, null when no groups defined	DESIGN	0.9999084187929548	DESIGN	9.158120704524727E-5	WITHOUT_CLASSIFICATION
TODO: should probably apply the null object pattern for a non-allowed class, rather than null	DESIGN	0.9994316806393662	DESIGN	5.683193606338018E-4	WITHOUT_CLASSIFICATION
TODO: set our metaclass to target's class (i.e. scary!)	DESIGN	0.8463872747010158	DESIGN	0.15361272529898415	WITHOUT_CLASSIFICATION
TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9537109658619924	WITHOUT_CLASSIFICATION	0.04628903413800762	DESIGN
ignore...bean doesn't get registered TODO: Why does that bother me?	DESIGN	0.7548810777391847	DESIGN	0.24511892226081533	WITHOUT_CLASSIFICATION
optional args, so we have IRubyObject[] TODO: confirm	DESIGN	0.5425587161177697	WITHOUT_CLASSIFICATION	0.45744128388223027	DESIGN
not intended to be called directly by users (private) OLD TODO from Ruby code: This should be implemented in JavaClass.java, where we can check for reserved Ruby names, conflicting methods, etc.	DESIGN	0.9991494202075067	DESIGN	8.505797924933121E-4	WITHOUT_CLASSIFICATION
TODO? I think this ends up propagating from normal Java exceptions sys_fail(openFile.getPath())	DESIGN	0.9828540489385885	WITHOUT_CLASSIFICATION	0.01714595106141153	DESIGN
TODO: Make callCoerced work in block context...then fix downto, step, and upto.	DESIGN	0.9896420207241626	DESIGN	0.01035797927583738	WITHOUT_CLASSIFICATION
TODO: the rest of this...seeking to same position is unnecessary since we share a channel but some of this may be needed?	DESIGN	0.999947050767372	DESIGN	5.29492326279652E-5	WITHOUT_CLASSIFICATION
TODO: This version differs from ioctl by checking whether fcntl exists and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9997258852226281	DESIGN	2.7411477737190225E-4	WITHOUT_CLASSIFICATION
FIXME this below is temporary, but its much safer for COW (it prevents not shared Strings with begin != 0) this allows now e.g.: ByteList#set not to be begin aware	DESIGN	0.7159860647863178	DESIGN	0.28401393521368223	WITHOUT_CLASSIFICATION
ignore; job was cancelled FIXME: Is this ok?	DESIGN	0.9999876497319362	DESIGN	1.235026806367915E-5	WITHOUT_CLASSIFICATION
TODO: MRI behavior: Call "+" or "add", depending on the call. But this leads to exceptions when Floats are added. See: http:blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/17374 return callCoerced(context, op, b, true); -- this is MRI behavior. We'll use ours for now, thus providing an ability to add Floats.	DESIGN	0.9298692165395572	DESIGN	0.07013078346044287	WITHOUT_CLASSIFICATION
Must be called from main thread (it is currently, but this bothers me)	DESIGN	0.9993367126509531	WITHOUT_CLASSIFICATION	6.632873490469077E-4	DESIGN
TODO: wire into new exception handling mechanism	DESIGN	0.9249745273751153	DESIGN	0.07502547262488468	WITHOUT_CLASSIFICATION
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9976956566842566	DESIGN	0.0023043433157433468	WITHOUT_CLASSIFICATION
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9920293903595191	DESIGN	0.007970609640480818	WITHOUT_CLASSIFICATION
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9920293903595191	DESIGN	0.007970609640480818	WITHOUT_CLASSIFICATION
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9920293903595191	DESIGN	0.007970609640480818	WITHOUT_CLASSIFICATION
FIXME: Determine if a real allocator is needed here. Do people want to extend JavaClass? Do we want them to do that? Can you Class.new(JavaClass)? Should you be able to? TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9999999997448369	DESIGN	2.5516312780983017E-10	WITHOUT_CLASSIFICATION
SSS FIXME: Token can be final for a method -- implying that the token is only for this particular implementation of the method But, if the mehod is modified, we create a new method object which in turn gets a new token. What makes sense?? Intuitively, it seems the first one ... but let us see ... Current code version token for this method -- can change during execution as methods get redefined!	DESIGN	0.877762249209822	DESIGN	0.12223775079017797	WITHOUT_CLASSIFICATION
FIXME weakref.rb also does caller(2) here for the backtrace	DESIGN	0.8472431180819306	WITHOUT_CLASSIFICATION	0.15275688191806935	DESIGN
FIXME: bit of a kludge here (non-interface classes assigned to both class and module fields). simplifies proxy extender code, will go away when JI is overhauled (and proxy extenders are deprecated).	DESIGN	0.9999374581719207	DESIGN	6.254182807930234E-5	WITHOUT_CLASSIFICATION
There's not a compelling reason to keep JavaClass instances in a weak map (any proxies created are [were] kept in a non-weak map, so in most cases they will stick around anyway), and some good reasons not to (JavaClass creation is expensive, for one; many lookups are performed when passing parameters to/from methods; etc.). TODO: faster custom concurrent map	DESIGN	0.9977153351604812	DESIGN	0.00228466483951889	WITHOUT_CLASSIFICATION
TODO: we should be able to optimize this quite a bit post-1.0. JavaClass already has all the methods organized by method name; the next version (supporting protected methods/fields) will have them organized even further. So collectMethods here can just lookup the overridden methods in the JavaClass map, should be much faster.	DESIGN	0.9994464212130639	DESIGN	5.535787869360889E-4	WITHOUT_CLASSIFICATION
FIXME: finalizer should be dupped here	DESIGN	0.987295369007919	DESIGN	0.012704630992080981	WITHOUT_CLASSIFICATION
FIXME: null check is removable once we figure out how to assign to unset named block args	DESIGN	0.8606315695027744	WITHOUT_CLASSIFICATION	0.13936843049722566	DESIGN
rb_obj_id Return the internal id of an object. FIXME: Should this be renamed to match its ruby name?	DESIGN	0.9965040476377578	DESIGN	0.0034959523622421175	WITHOUT_CLASSIFICATION
TODO: Bleeding runtime into parser. Arity may be should be in parser (to keep bleeding oneway)	DESIGN	0.9971529625316479	DESIGN	0.002847037468352053	WITHOUT_CLASSIFICATION
SSS FIXME: Maybe this is not really a concern after all ... Nesting level of this scope in the lexical nesting of scopes in the current file -- this is not to be confused with semantic nesting of scopes across files. Consider this code in a file f class M1::M2::M3::C ... end So, C is at lexical nesting level of 1 (the file script is at 0) in the file 'f' Semantically it is at level 3 (M1, M2, M3 are at 0,1,2). This is primarily used to ensure that variable names don't clash! i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! private int _lexicalNestingLevel;	DESIGN	0.999999959942807	DESIGN	4.0057192945127086E-8	WITHOUT_CLASSIFICATION
Sometimes the value can be retrieved at "compile time". If we succeed, nothing like it! We might not .. for the following reasons: 1. The constant is missing, 2. The reference is a forward-reference, 3. The constant's value is only known at run-time on first-access (but, this is runtime, isn't it??) 4. Our compiler isn't able to right away infer that this is a constant. SSS FIXME: 1. The operand can be a literal array, range, or hash -- hence Operand because Array, Range, and Hash derive from Operand and not Constant ... Is there a way to fix this impedance mismatch? 2. It should be possible to handle the forward-reference case by creating a new ForwardReference operand and then inform the scope of the forward reference which the scope can fix up when the reference gets defined. At code-gen time, if the reference is unresolved, when a value is retrieved for the forward-ref and we get a null, we can throw a ConstMissing exception! Not sure!	DESIGN	0.9974479929019539	DESIGN	0.002552007098046159	WITHOUT_CLASSIFICATION
Reset value map if this instruction is the start/end of a basic block Right now, calls are considered hard boundaries for optimization and information cannot be propagated across them! SSS FIXME: Rather than treat all calls with a broad brush, what we need is to capture different attributes about a call : - uses closures - known call target - can modify scope, - etc. This information is probably already present in the AST Inspector	DESIGN	0.9999938502123779	DESIGN	6.149787622200187E-6	WITHOUT_CLASSIFICATION
FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9947182080296434	DESIGN	0.00528179197035659	WITHOUT_CLASSIFICATION
XXX: This check previously used callMethod("==") to check for equality between classes when scanning the hierarchy. However the == check may be safe; we should only ever have one instance bound to a given type/constant. If it's found to be unsafe, examine ways to avoid the == call.	DESIGN	0.9445623532675465	DESIGN	0.055437646732453626	WITHOUT_CLASSIFICATION
end hack	DESIGN	0.8676655904449361	DESIGN	0.13233440955506393	WITHOUT_CLASSIFICATION
if not overloaded, we add a method that guesses at which signature to use TODO: just adding first one right now...add in signature-guessing logic	DESIGN	0.9685346740917864	DESIGN	0.03146532590821365	WITHOUT_CLASSIFICATION
FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9999999952752415	DESIGN	4.724758470834113E-9	WITHOUT_CLASSIFICATION
TODO: This version is better than the hackish previous one. Windows behavior needs to be defined though. I suppose this version could be improved more too. TODO: /etc/passwd is also inadequate for MacOSX since it does not use /etc/passwd for regular user accounts	DESIGN	0.9999999948486933	DESIGN	5.1513066978974445E-9	WITHOUT_CLASSIFICATION
TODO: Should next and return also catch here?	DESIGN	0.9664732056469497	DESIGN	0.033526794353050234	WITHOUT_CLASSIFICATION
Let's only generate methods for those the user may actually intend to override. That includes any defined in the current class, and any ancestors that are also JavaProxyClasses (but none from any other ancestor classes). Methods defined in mixins will be considered intentionally overridden, except those from Kernel, Java, and JavaProxyMethods, as well as Enumerable. TODO: may want to exclude other common mixins?	DESIGN	0.9996416033867851	WITHOUT_CLASSIFICATION	3.583966132149326E-4	DESIGN
FIXME: Consider fixing node_assign itself rather than single case	DESIGN	0.8795662427421648	DESIGN	0.1204337572578353	WITHOUT_CLASSIFICATION
Workaround for JRUBY-2326 (MRI does not enter this production for some reason)	DESIGN	0.8940043978879927	WITHOUT_CLASSIFICATION	0.1059956021120072	DESIGN
FIXME: We should really not be creating the dynamic scope for the root of the AST before parsing. This makes us end up needing to readjust this dynamic scope coming out of parse (and for local static scopes it will always happen because of $~ and $_). FIXME: Because we end up adjusting this after-the-fact, we can't use any of the specific-size scopes.	DESIGN	0.9999753973631911	DESIGN	2.4602636808885113E-5	WITHOUT_CLASSIFICATION
FIXME: Resolve what the hell is going on	DESIGN	0.9788133951152519	DESIGN	0.021186604884747995	WITHOUT_CLASSIFICATION
This is perhaps innefficient timewise? Optimal spacewise	DESIGN	0.7830861200663064	WITHOUT_CLASSIFICATION	0.21691387993369365	DESIGN
If variables were added then we may need to grow the dynamic scope to match the static one. FIXME: Make this so we only need to check this for blockScope != null. We cannot currently since we create the DynamicScope for a LocalStaticScope before parse begins. Refactoring should make this fixable.	DESIGN	0.8642382831762243	WITHOUT_CLASSIFICATION	0.13576171682377566	DESIGN
FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9919976624077435	DESIGN	0.008002337592256525	WITHOUT_CLASSIFICATION
FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9919976624077435	DESIGN	0.008002337592256525	WITHOUT_CLASSIFICATION
we're depending on the side effect of the load, which loads the class but does not turn it into a script I don't like it, but until we restructure the code a bit more, we'll need to quietly let it by here.	DESIGN	0.9960354691349054	DESIGN	0.0039645308650945585	WITHOUT_CLASSIFICATION
TODO: for now, we use a faithful reimplementation of MRI's algorithm, but should use UTF8Encoding facilities from Joni, once it starts prefroming UTF-8 content validation.	DESIGN	0.8753428423774685	DESIGN	0.12465715762253146	WITHOUT_CLASSIFICATION
Process streams get Channel.newChannel()ed into FileChannel but are not actually seekable. So instead of just the isSeekable check doing instanceof FileChannel, we must also add this boolean to check, which we set to false when it's known that the incoming channel is from a process. FIXME: This is gross, and it's NIO's fault for not providing a nice way to tell if a channel is "really" seekable.	DESIGN	0.9999957515175842	DESIGN	4.2484824156949045E-6	WITHOUT_CLASSIFICATION
