set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9987819628443233	WITHOUT_CLASSIFICATION	0.0012180371556766581	DESIGN
line 335	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
Figure end-char. '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9997797056157862	WITHOUT_CLASSIFICATION	2.2029438421391971E-4	DESIGN
line 362	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 372	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
line 391	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
^D	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
^Z	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
Do nothing	WITHOUT_CLASSIFICATION	0.9995891730764509	WITHOUT_CLASSIFICATION	4.1082692354910984E-4	DESIGN
Do nothing	WITHOUT_CLASSIFICATION	0.9995891730764509	WITHOUT_CLASSIFICATION	4.1082692354910984E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9993415902166725	WITHOUT_CLASSIFICATION	6.584097833276252E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9993415902166725	WITHOUT_CLASSIFICATION	6.584097833276252E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9993415902166725	WITHOUT_CLASSIFICATION	6.584097833276252E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9993415902166725	WITHOUT_CLASSIFICATION	6.584097833276252E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9993415902166725	WITHOUT_CLASSIFICATION	6.584097833276252E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9993415902166725	WITHOUT_CLASSIFICATION	6.584097833276252E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9993415902166725	WITHOUT_CLASSIFICATION	6.584097833276252E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9993415902166725	WITHOUT_CLASSIFICATION	6.584097833276252E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9993415902166725	WITHOUT_CLASSIFICATION	6.584097833276252E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9993415902166725	WITHOUT_CLASSIFICATION	6.584097833276252E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9993415902166725	WITHOUT_CLASSIFICATION	6.584097833276252E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9993415902166725	WITHOUT_CLASSIFICATION	6.584097833276252E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9993415902166725	WITHOUT_CLASSIFICATION	6.584097833276252E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9993415902166725	WITHOUT_CLASSIFICATION	6.584097833276252E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9993415902166725	WITHOUT_CLASSIFICATION	6.584097833276252E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9993415902166725	WITHOUT_CLASSIFICATION	6.584097833276252E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9993415902166725	WITHOUT_CLASSIFICATION	6.584097833276252E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9993415902166725	WITHOUT_CLASSIFICATION	6.584097833276252E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9993415902166725	WITHOUT_CLASSIFICATION	6.584097833276252E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9993415902166725	WITHOUT_CLASSIFICATION	6.584097833276252E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9993415902166725	WITHOUT_CLASSIFICATION	6.584097833276252E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9993415902166725	WITHOUT_CLASSIFICATION	6.584097833276252E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9993415902166725	WITHOUT_CLASSIFICATION	6.584097833276252E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9993415902166725	WITHOUT_CLASSIFICATION	6.584097833276252E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9993415902166725	WITHOUT_CLASSIFICATION	6.584097833276252E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9993415902166725	WITHOUT_CLASSIFICATION	6.584097833276252E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9993415902166725	WITHOUT_CLASSIFICATION	6.584097833276252E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9993415902166725	WITHOUT_CLASSIFICATION	6.584097833276252E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9993415902166725	WITHOUT_CLASSIFICATION	6.584097833276252E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9993415902166725	WITHOUT_CLASSIFICATION	6.584097833276252E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9993415902166725	WITHOUT_CLASSIFICATION	6.584097833276252E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9993415902166725	WITHOUT_CLASSIFICATION	6.584097833276252E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9993415902166725	WITHOUT_CLASSIFICATION	6.584097833276252E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9993415902166725	WITHOUT_CLASSIFICATION	6.584097833276252E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9993415902166725	WITHOUT_CLASSIFICATION	6.584097833276252E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9993415902166725	WITHOUT_CLASSIFICATION	6.584097833276252E-4	DESIGN
return result	WITHOUT_CLASSIFICATION	0.9999566172367889	WITHOUT_CLASSIFICATION	4.338276321119151E-5	DESIGN
name	WITHOUT_CLASSIFICATION	0.998873220542515	WITHOUT_CLASSIFICATION	0.001126779457484988	DESIGN
Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.999057421428522	WITHOUT_CLASSIFICATION	9.4257857147801E-4	DESIGN
Accessor methods.	WITHOUT_CLASSIFICATION	0.9996399855262055	WITHOUT_CLASSIFICATION	3.6001447379448674E-4	DESIGN
MRI behavior	WITHOUT_CLASSIFICATION	0.999564590253911	WITHOUT_CLASSIFICATION	4.3540974608902177E-4	DESIGN
MRI behavior	WITHOUT_CLASSIFICATION	0.999564590253911	WITHOUT_CLASSIFICATION	4.3540974608902177E-4	DESIGN
MRI behavior	WITHOUT_CLASSIFICATION	0.999564590253911	WITHOUT_CLASSIFICATION	4.3540974608902177E-4	DESIGN
MRI behavior	WITHOUT_CLASSIFICATION	0.999564590253911	WITHOUT_CLASSIFICATION	4.3540974608902177E-4	DESIGN
call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9993825858845796	WITHOUT_CLASSIFICATION	6.174141154203537E-4	DESIGN
fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9969844701067587	WITHOUT_CLASSIFICATION	0.0030155298932411988	DESIGN
try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999024582223802	WITHOUT_CLASSIFICATION	9.754177761975153E-5	DESIGN
define ARGV and $ for this runtime	WITHOUT_CLASSIFICATION	0.9987031317553888	WITHOUT_CLASSIFICATION	0.001296868244611199	DESIGN
Version information:	WITHOUT_CLASSIFICATION	0.9996791081333115	WITHOUT_CLASSIFICATION	3.208918666884978E-4	DESIGN
after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9996464331564183	WITHOUT_CLASSIFICATION	3.535668435817002E-4	DESIGN
ARGF, $< object	WITHOUT_CLASSIFICATION	0.9997417647446403	WITHOUT_CLASSIFICATION	2.5823525535974344E-4	DESIGN
if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9998111494349746	WITHOUT_CLASSIFICATION	1.8885056502548122E-4	DESIGN
On platforms without a c-library accessable through JNA, getpid will return hashCode as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.814475079590013	WITHOUT_CLASSIFICATION	0.18552492040998703	DESIGN
$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9965004544114296	WITHOUT_CLASSIFICATION	0.0034995455885702886	DESIGN
include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9740694981225734	WITHOUT_CLASSIFICATION	0.025930501877426515	DESIGN
MRI behavior: just plain '' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999122202010996	WITHOUT_CLASSIFICATION	8.777979890040198E-5	DESIGN
this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.992617080633819	WITHOUT_CLASSIFICATION	0.00738291936618096	DESIGN
What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9981154224392077	WITHOUT_CLASSIFICATION	0.0018845775607922513	DESIGN
----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.999911126149894	WITHOUT_CLASSIFICATION	8.887385010594282E-5	DESIGN
CONSTANT TABLE METHODS - pass to delegate	WITHOUT_CLASSIFICATION	0.9965218927551768	WITHOUT_CLASSIFICATION	0.0034781072448231425	DESIGN
We get canonical path to try and flatten the path out. a dir '/subdir/..' should return as '/' cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9877210595954939	WITHOUT_CLASSIFICATION	0.012278940404506195	DESIGN
MRI behavior	WITHOUT_CLASSIFICATION	0.999564590253911	WITHOUT_CLASSIFICATION	4.3540974608902177E-4	DESIGN
----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9997548900947103	WITHOUT_CLASSIFICATION	2.45109905289602E-4	DESIGN
Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999716644529845	WITHOUT_CLASSIFICATION	2.83355470155843E-5	DESIGN
----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999387214490097	WITHOUT_CLASSIFICATION	6.1278550990238E-5	DESIGN
try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9992681461995608	WITHOUT_CLASSIFICATION	7.318538004391698E-4	DESIGN
otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9930849303816244	WITHOUT_CLASSIFICATION	0.006915069618375566	DESIGN
Proc class	WITHOUT_CLASSIFICATION	0.9977197109074997	WITHOUT_CLASSIFICATION	0.002280289092500322	DESIGN
No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999915620838055	WITHOUT_CLASSIFICATION	8.43791619454434E-6	DESIGN
modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9903807288566523	WITHOUT_CLASSIFICATION	0.009619271143347681	DESIGN
for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9888998601858487	WITHOUT_CLASSIFICATION	0.01110013981415116	DESIGN
case RUBY_HYBRID: backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); break;	WITHOUT_CLASSIFICATION	0.9999565601915094	WITHOUT_CLASSIFICATION	4.343980849070332E-5	DESIGN
This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9997014932837154	WITHOUT_CLASSIFICATION	2.985067162846231E-4	DESIGN
rb_exc_new3	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9991528765752833	WITHOUT_CLASSIFICATION	8.471234247168013E-4	DESIGN
registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9991850795574373	WITHOUT_CLASSIFICATION	8.149204425626634E-4	DESIGN
IOT is also 6	WITHOUT_CLASSIFICATION	0.9999033227126867	WITHOUT_CLASSIFICATION	9.667728731339394E-5	DESIGN
CLD is also 20	WITHOUT_CLASSIFICATION	0.9998421115226671	WITHOUT_CLASSIFICATION	1.5788847733289287E-4	DESIGN
RubySignal	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
ZStream actually isn't allocatable	WITHOUT_CLASSIFICATION	0.9937746842269165	WITHOUT_CLASSIFICATION	0.006225315773083405	DESIGN
MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9990157445193126	WITHOUT_CLASSIFICATION	9.842554806872971E-4	DESIGN
it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9998356637412923	WITHOUT_CLASSIFICATION	1.6433625870776315E-4	DESIGN
MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9997692838567863	WITHOUT_CLASSIFICATION	2.3071614321362922E-4	DESIGN
SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9997580013998086	WITHOUT_CLASSIFICATION	2.4199860019145448E-4	DESIGN
io.finish();	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9925644587312011	WITHOUT_CLASSIFICATION	0.007435541268798831	DESIGN
hmm...	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
Called before any write to make sure the header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.992858242407742	WITHOUT_CLASSIFICATION	0.007141757592258042	DESIGN
For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9490125314486924	WITHOUT_CLASSIFICATION	0.0509874685513077	DESIGN
We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9989931524713731	WITHOUT_CLASSIFICATION	0.0010068475286269057	DESIGN
float number of seconds	WITHOUT_CLASSIFICATION	0.999720274450899	WITHOUT_CLASSIFICATION	2.797255491011199E-4	DESIGN
modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9995625785277251	WITHOUT_CLASSIFICATION	4.374214722748607E-4	DESIGN
dump usec, not msec	WITHOUT_CLASSIFICATION	0.9991421998563217	WITHOUT_CLASSIFICATION	8.578001436782343E-4	DESIGN
Time class methods	WITHOUT_CLASSIFICATION	0.9990318867345043	WITHOUT_CLASSIFICATION	9.681132654957104E-4	DESIGN
marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9978693659383903	WITHOUT_CLASSIFICATION	0.00213063406160964	DESIGN
MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999037886133534	WITHOUT_CLASSIFICATION	9.621138664665663E-5	DESIGN
set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9934664428181248	WITHOUT_CLASSIFICATION	0.006533557181875184	DESIGN
the instant at which we will ask dtz what the difference between DST and standard time is	WITHOUT_CLASSIFICATION	0.9993358813049302	WITHOUT_CLASSIFICATION	6.641186950697412E-4	DESIGN
if we might be moving this time from !DST -> DST, the offset is assumed to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9992505088155955	WITHOUT_CLASSIFICATION	7.49491184404394E-4	DESIGN
Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9981916441676623	WITHOUT_CLASSIFICATION	0.0018083558323377328	DESIGN
================ Utility Methods ================	WITHOUT_CLASSIFICATION	0.9997577143319017	WITHOUT_CLASSIFICATION	2.422856680981471E-4	DESIGN
If the value will fit in a Fixnum, return one of those.	WITHOUT_CLASSIFICATION	0.9998825488023694	WITHOUT_CLASSIFICATION	1.1745119763068978E-4	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9997538607312987	WITHOUT_CLASSIFICATION	2.461392687013869E-4	DESIGN
MRI issuses warning here on (RBIGNUM(x)->len SIZEOF_BDIGITS yy > 10241024)	WITHOUT_CLASSIFICATION	0.980213701512028	WITHOUT_CLASSIFICATION	0.019786298487971993	DESIGN
num2int is also implemented	WITHOUT_CLASSIFICATION	0.9997581998590774	WITHOUT_CLASSIFICATION	2.4180014092269118E-4	DESIGN
num2int is also implemented	WITHOUT_CLASSIFICATION	0.9997581998590774	WITHOUT_CLASSIFICATION	2.4180014092269118E-4	DESIGN
no bignorm here needed	WITHOUT_CLASSIFICATION	0.9893816642379906	WITHOUT_CLASSIFICATION	0.010618335762009351	DESIGN
wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9966560243482794	WITHOUT_CLASSIFICATION	0.003343975651720723	DESIGN
Pad with a 0	WITHOUT_CLASSIFICATION	0.9995849085944032	WITHOUT_CLASSIFICATION	4.150914055968575E-4	DESIGN
BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9985780409439474	WITHOUT_CLASSIFICATION	0.0014219590560525233	DESIGN
This should only be called by this and RubyFile. It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9447920366812083	WITHOUT_CLASSIFICATION	0.055207963318791686	DESIGN
We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9883851404686866	WITHOUT_CLASSIFICATION	0.01161485953131342	DESIGN
???	WITHOUT_CLASSIFICATION	0.9984686721102443	WITHOUT_CLASSIFICATION	0.0015313278897557965	DESIGN
PID	WITHOUT_CLASSIFICATION	0.9992611644619023	WITHOUT_CLASSIFICATION	7.388355380977655E-4	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9997538607312987	WITHOUT_CLASSIFICATION	2.461392687013869E-4	DESIGN
elements and trailing nils	WITHOUT_CLASSIFICATION	0.9997210584032137	WITHOUT_CLASSIFICATION	2.789415967864149E-4	DESIGN
Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999991636264889	WITHOUT_CLASSIFICATION	8.363735110461215E-7	DESIGN
Ruby arrays default to holding 16 elements, so we create an ArrayList of the same size if we're not told otherwise	WITHOUT_CLASSIFICATION	0.9999467421186731	WITHOUT_CLASSIFICATION	5.325788132679608E-5	DESIGN
rb_ary_new2 just allocates the internal array	WITHOUT_CLASSIFICATION	0.998819714732519	WITHOUT_CLASSIFICATION	0.001180285267481039	DESIGN
plain internal array assignment	WITHOUT_CLASSIFICATION	0.998933439433495	WITHOUT_CLASSIFICATION	0.001066560566504989	DESIGN
plain internal array assignment	WITHOUT_CLASSIFICATION	0.998933439433495	WITHOUT_CLASSIFICATION	0.001066560566504989	DESIGN
plain internal array assignment	WITHOUT_CLASSIFICATION	0.998933439433495	WITHOUT_CLASSIFICATION	0.001066560566504989	DESIGN
Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour	WITHOUT_CLASSIFICATION	0.9983168221265015	WITHOUT_CLASSIFICATION	0.001683177873498412	DESIGN
NEWOBJ and OBJSETUP equivalent fastest one, for shared arrays, optional objectspace	WITHOUT_CLASSIFICATION	0.9992734058309221	WITHOUT_CLASSIFICATION	7.265941690780092E-4	DESIGN
Create global constants and variables	WITHOUT_CLASSIFICATION	0.9997166305451859	WITHOUT_CLASSIFICATION	2.833694548140075E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991925957742998	WITHOUT_CLASSIFICATION	8.07404225700109E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991925957742998	WITHOUT_CLASSIFICATION	8.07404225700109E-4	DESIGN
Windows does not support these functions, so we won't even try This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9977988244610552	WITHOUT_CLASSIFICATION	0.0022011755389449313	DESIGN
There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and newer one (US/Pacific, America/Los_Angeles). This pattern is to detect the legacy TZ format in order to convert it to the newer format understood by Java API.	WITHOUT_CLASSIFICATION	0.999894541762868	WITHOUT_CLASSIFICATION	1.0545823713202856E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991925957742998	WITHOUT_CLASSIFICATION	8.07404225700109E-4	DESIGN
1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.993388916526625	WITHOUT_CLASSIFICATION	0.006611083473375029	DESIGN
possibly should not in object space	WITHOUT_CLASSIFICATION	0.978110806022705	WITHOUT_CLASSIFICATION	0.021889193977295097	DESIGN
only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999898402333742	WITHOUT_CLASSIFICATION	1.0159766625809606E-5	DESIGN
rb_ary_new4	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
rb_ary_new4	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9997053405588276	WITHOUT_CLASSIFICATION	2.946594411722921E-4	DESIGN
If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9997402481821156	WITHOUT_CLASSIFICATION	2.597518178844101E-4	DESIGN
See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9992288936525632	WITHOUT_CLASSIFICATION	7.711063474368023E-4	DESIGN
See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9992288936525632	WITHOUT_CLASSIFICATION	7.711063474368023E-4	DESIGN
Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9986824593570534	WITHOUT_CLASSIFICATION	0.001317540642946631	DESIGN
pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9996467384098582	WITHOUT_CLASSIFICATION	3.5326159014184604E-4	DESIGN
root fiber	WITHOUT_CLASSIFICATION	0.9986749363870961	WITHOUT_CLASSIFICATION	0.0013250636129038256	DESIGN
GMT+00:00 --> Etc/GMT, see "MRI behavior" comment below.	WITHOUT_CLASSIFICATION	0.9992219669191008	WITHOUT_CLASSIFICATION	7.78033080899121E-4	DESIGN
See http:www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9992066864375314	WITHOUT_CLASSIFICATION	7.933135624686692E-4	DESIGN
extras flag	WITHOUT_CLASSIFICATION	0.9997674531788199	WITHOUT_CLASSIFICATION	2.3254682118014713E-4	DESIGN
Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
...nothing	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
utility method	WITHOUT_CLASSIFICATION	0.9997422908839603	WITHOUT_CLASSIFICATION	2.5770911603973447E-4	DESIGN
Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9984821983427173	WITHOUT_CLASSIFICATION	0.0015178016572826513	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9997538607312987	WITHOUT_CLASSIFICATION	2.461392687013869E-4	DESIGN
flags 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999803710986803	WITHOUT_CLASSIFICATION	1.9628901319681128E-5	DESIGN
range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9989304158938679	WITHOUT_CLASSIFICATION	0.0010695841061321276	DESIGN
1.8 "include?"	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9987726304892142	WITHOUT_CLASSIFICATION	0.0012273695107858315	DESIGN
beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9906237342075377	WITHOUT_CLASSIFICATION	0.009376265792462275	DESIGN
MRI does it!	WITHOUT_CLASSIFICATION	0.9998653909453129	WITHOUT_CLASSIFICATION	1.346090546871068E-4	DESIGN
won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9998904377568122	WITHOUT_CLASSIFICATION	1.0956224318785862E-4	DESIGN
it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9997606460564398	WITHOUT_CLASSIFICATION	2.3935394356012303E-4	DESIGN
RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9992078911340695	WITHOUT_CLASSIFICATION	7.921088659305108E-4	DESIGN
not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9933097288033133	WITHOUT_CLASSIFICATION	0.006690271196686826	DESIGN
second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.999992148081654	WITHOUT_CLASSIFICATION	7.851918345985824E-6	DESIGN
we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9652396284520427	WITHOUT_CLASSIFICATION	0.0347603715479573	DESIGN
terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9987622907154408	WITHOUT_CLASSIFICATION	0.0012377092845591994	DESIGN
Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9998950347772105	WITHOUT_CLASSIFICATION	1.0496522278956941E-4	DESIGN
do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.995621664482191	WITHOUT_CLASSIFICATION	0.004378335517808991	DESIGN
recheck condition	WITHOUT_CLASSIFICATION	0.9997763460070249	WITHOUT_CLASSIFICATION	2.2365399297518142E-4	DESIGN
Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999344367023064	WITHOUT_CLASSIFICATION	6.556329769361407E-5	DESIGN
Construct key services	WITHOUT_CLASSIFICATION	0.9970608853014499	WITHOUT_CLASSIFICATION	0.0029391146985501253	DESIGN
initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9996312749388957	WITHOUT_CLASSIFICATION	3.6872506110428247E-4	DESIGN
Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999343711060347	WITHOUT_CLASSIFICATION	6.562889396526916E-5	DESIGN
Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9994549184677508	WITHOUT_CLASSIFICATION	5.450815322491405E-4	DESIGN
Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.6585892168921907	WITHOUT_CLASSIFICATION	0.34141078310780937	DESIGN
Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9920745673923164	WITHOUT_CLASSIFICATION	0.007925432607683594	DESIGN
Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9975398768628025	WITHOUT_CLASSIFICATION	0.0024601231371975288	DESIGN
Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999810492308666	WITHOUT_CLASSIFICATION	1.8950769133317294E-5	DESIGN
Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9976892022873238	WITHOUT_CLASSIFICATION	0.0023107977126762547	DESIGN
depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9926033942800128	WITHOUT_CLASSIFICATION	0.007396605719987163	DESIGN
initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9994279054044424	WITHOUT_CLASSIFICATION	5.720945955576682E-4	DESIGN
Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9991617414613551	WITHOUT_CLASSIFICATION	8.382585386448685E-4	DESIGN
Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.999871299081606	WITHOUT_CLASSIFICATION	1.287009183940716E-4	DESIGN
we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9998506948926348	WITHOUT_CLASSIFICATION	1.4930510736521705E-4	DESIGN
determine spacing	WITHOUT_CLASSIFICATION	0.9995043854531188	WITHOUT_CLASSIFICATION	4.956145468811185E-4	DESIGN
should alter global state	WITHOUT_CLASSIFICATION	0.9975812271514097	WITHOUT_CLASSIFICATION	0.0024187728485903946	DESIGN
For JSR 223 support: see http:scripting.java.net/	WITHOUT_CLASSIFICATION	0.9995989872374109	WITHOUT_CLASSIFICATION	4.0101276258910635E-4	DESIGN
use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9902740624564784	WITHOUT_CLASSIFICATION	0.009725937543521544	DESIGN
this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9997146467896104	WITHOUT_CLASSIFICATION	2.8535321038951485E-4	DESIGN
new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9954889441993368	WITHOUT_CLASSIFICATION	0.00451105580066328	DESIGN
assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9910761361353577	WITHOUT_CLASSIFICATION	0.008923863864642308	DESIGN
Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9994216267495174	WITHOUT_CLASSIFICATION	5.783732504826066E-4	DESIGN
default: don't retain	WITHOUT_CLASSIFICATION	0.9994959178477079	WITHOUT_CLASSIFICATION	5.040821522921561E-4	DESIGN
ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9995738047637966	WITHOUT_CLASSIFICATION	4.2619523620339726E-4	DESIGN
Default objects	WITHOUT_CLASSIFICATION	0.9997934791713186	WITHOUT_CLASSIFICATION	2.0652082868131123E-4	DESIGN
record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9994375350507202	WITHOUT_CLASSIFICATION	5.62464949279889E-4	DESIGN
former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9986732213547507	WITHOUT_CLASSIFICATION	0.001326778645249331	DESIGN
Java support	WITHOUT_CLASSIFICATION	0.9986427850799897	WITHOUT_CLASSIFICATION	0.0013572149200102603	DESIGN
Parser stats	WITHOUT_CLASSIFICATION	0.9995078601021554	WITHOUT_CLASSIFICATION	4.92139897844633E-4	DESIGN
Compilation	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999187791454178	WITHOUT_CLASSIFICATION	8.12208545822E-5	DESIGN
can't create custom classloaders	WITHOUT_CLASSIFICATION	0.999914327736718	WITHOUT_CLASSIFICATION	8.567226328200854E-5	DESIGN
mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9997932888428671	WITHOUT_CLASSIFICATION	2.0671115713290507E-4	DESIGN
mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.999455774203417	WITHOUT_CLASSIFICATION	5.442257965830227E-4	DESIGN
A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9989735404407207	WITHOUT_CLASSIFICATION	0.0010264595592793314	DESIGN
A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9998447415479672	WITHOUT_CLASSIFICATION	1.5525845203290007E-4	DESIGN
initial spaces spaces before "at"	WITHOUT_CLASSIFICATION	0.9998974436384003	WITHOUT_CLASSIFICATION	1.0255636159975984E-4	DESIGN
event name filename line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.996249668600961	WITHOUT_CLASSIFICATION	0.0037503313990390817	DESIGN
The method is intentionally not public, since it typically should not be used outside of the core.	WITHOUT_CLASSIFICATION	0.849717292006851	WITHOUT_CLASSIFICATION	0.15028270799314897	DESIGN
Note: this field and the following static initializer must be located be in this order!	WITHOUT_CLASSIFICATION	0.9955723475328637	WITHOUT_CLASSIFICATION	0.004427652467136228	DESIGN
Contains a list of all blocks (as Procs) that should be called when the runtime environment exits.	WITHOUT_CLASSIFICATION	0.999199512177755	WITHOUT_CLASSIFICATION	8.004878222449987E-4	DESIGN
quoted-printable	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
default options	WITHOUT_CLASSIFICATION	0.9998292417461714	WITHOUT_CLASSIFICATION	1.7075825382855157E-4	DESIGN
iso-2022-jp	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
iso-2022-jp	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
Shift_JIS	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
Shift_JIS	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
EUC-JP	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
EUC-JP	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
UTF-8	WITHOUT_CLASSIFICATION	0.9996983977840844	WITHOUT_CLASSIFICATION	3.0160221591561854E-4	DESIGN
UTF-8	WITHOUT_CLASSIFICATION	0.9996983977840844	WITHOUT_CLASSIFICATION	3.0160221591561854E-4	DESIGN
long name option	WITHOUT_CLASSIFICATION	0.9998265793636965	WITHOUT_CLASSIFICATION	1.7342063630359556E-4	DESIGN
conversion	WITHOUT_CLASSIFICATION	0.9997562399155994	WITHOUT_CLASSIFICATION	2.437600844006169E-4	DESIGN
================ Singleton Methods ================	WITHOUT_CLASSIFICATION	0.9997118289872164	WITHOUT_CLASSIFICATION	2.881710127835664E-4	DESIGN
string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9997495870792527	WITHOUT_CLASSIFICATION	2.5041292074730895E-4	DESIGN
string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9998141300624799	WITHOUT_CLASSIFICATION	1.8586993752022253E-4	DESIGN
string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9996911871405371	WITHOUT_CLASSIFICATION	3.0881285946285765E-4	DESIGN
ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9992078911340695	WITHOUT_CLASSIFICATION	7.921088659305108E-4	DESIGN
rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9992078911340695	WITHOUT_CLASSIFICATION	7.921088659305108E-4	DESIGN
rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9997776439255301	WITHOUT_CLASSIFICATION	2.2235607446993914E-4	DESIGN
String construction routines by NOT byte[] buffer and NOT making the target String shared	WITHOUT_CLASSIFICATION	0.9999865749686476	WITHOUT_CLASSIFICATION	1.3425031352254491E-5	DESIGN
rb_str_subseq	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9958367108451641	WITHOUT_CLASSIFICATION	0.0041632891548358435	DESIGN
if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999522592386452	WITHOUT_CLASSIFICATION	4.7740761354809696E-5	DESIGN
rb_str_cmp_m	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999300232379829	WITHOUT_CLASSIFICATION	6.997676201705735E-5	DESIGN
rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9996992811940372	WITHOUT_CLASSIFICATION	3.007188059628228E-4	DESIGN
this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.6432224045817416	WITHOUT_CLASSIFICATION	0.3567775954182584	DESIGN
must not reallocate	WITHOUT_CLASSIFICATION	0.9984535603065002	WITHOUT_CLASSIFICATION	0.0015464396934997068	DESIGN
Illegal combination	WITHOUT_CLASSIFICATION	0.9995676817437302	WITHOUT_CLASSIFICATION	4.3231825626988525E-4	DESIGN
use 1.8 impl	WITHOUT_CLASSIFICATION	0.9973086325504159	WITHOUT_CLASSIFICATION	0.0026913674495841347	DESIGN
RubyString aka rb_string_value	WITHOUT_CLASSIFICATION	0.9992078911340695	WITHOUT_CLASSIFICATION	7.921088659305108E-4	DESIGN
bang: true, no match, no substitution	WITHOUT_CLASSIFICATION	0.9978622648508122	WITHOUT_CLASSIFICATION	0.0021377351491878144	DESIGN
out of byte range there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999240641791807	WITHOUT_CLASSIFICATION	7.59358208193556E-5	DESIGN
len + margin	WITHOUT_CLASSIFICATION	0.999850253474695	WITHOUT_CLASSIFICATION	1.4974652530505897E-4	DESIGN
block given	WITHOUT_CLASSIFICATION	0.9996635324603296	WITHOUT_CLASSIFICATION	3.3646753967041937E-4	DESIGN
block given	WITHOUT_CLASSIFICATION	0.9996635324603296	WITHOUT_CLASSIFICATION	3.3646753967041937E-4	DESIGN
copy pre-match substr	WITHOUT_CLASSIFICATION	0.9996978237789882	WITHOUT_CLASSIFICATION	3.0217622101186097E-4	DESIGN
string given	WITHOUT_CLASSIFICATION	0.9999282228574382	WITHOUT_CLASSIFICATION	7.177714256172759E-5	DESIGN
hash given	WITHOUT_CLASSIFICATION	0.999476496875518	WITHOUT_CLASSIFICATION	5.235031244819914E-4	DESIGN
This represents left most digit in a set of incremented values? Therefore leftmost numeric must be '1' and not '0' 999 -> 1000, not 999 -> 0000. whereas chars should be zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.99629205343053	WITHOUT_CLASSIFICATION	0.003707946569470142	DESIGN
substring longer than string	WITHOUT_CLASSIFICATION	0.9993013480138045	WITHOUT_CLASSIFICATION	6.98651986195438E-4	DESIGN
rb_str_substr	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
nothing	WITHOUT_CLASSIFICATION	0.9998321282344649	WITHOUT_CLASSIFICATION	1.6787176553508635E-4	DESIGN
nothing	WITHOUT_CLASSIFICATION	0.9998321282344649	WITHOUT_CLASSIFICATION	1.6787176553508635E-4	DESIGN
rb_str_splice	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
TODO: keep cr TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.5498275822853245	WITHOUT_CLASSIFICATION	0.4501724177146756	DESIGN
keep cr ?	WITHOUT_CLASSIFICATION	0.9988536765183513	WITHOUT_CLASSIFICATION	0.0011463234816485612	DESIGN
keep cr ?	WITHOUT_CLASSIFICATION	0.9988536765183513	WITHOUT_CLASSIFICATION	0.0011463234816485612	DESIGN
wrapped to \0...\0. search next valid char.	WITHOUT_CLASSIFICATION	0.9916218178770837	WITHOUT_CLASSIFICATION	0.008378182122916382	DESIGN
only this case affects backrefs	WITHOUT_CLASSIFICATION	0.9995889601608678	WITHOUT_CLASSIFICATION	4.110398391320728E-4	DESIGN
only this case affects backrefs	WITHOUT_CLASSIFICATION	0.9995889601608678	WITHOUT_CLASSIFICATION	4.110398391320728E-4	DESIGN
modified	WITHOUT_CLASSIFICATION	0.9999055852157616	WITHOUT_CLASSIFICATION	9.441478423842112E-5	DESIGN
modified	WITHOUT_CLASSIFICATION	0.9999055852157616	WITHOUT_CLASSIFICATION	9.441478423842112E-5	DESIGN
1.8	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
1.8	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
QTRUE	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
retrieve last replacer	WITHOUT_CLASSIFICATION	0.9996783239873832	WITHOUT_CLASSIFICATION	3.216760126167294E-4	DESIGN
Check the length every iteration, since the block can modify this string.	WITHOUT_CLASSIFICATION	0.9825629078061563	WITHOUT_CLASSIFICATION	0.017437092193843703	DESIGN
long size bits in byte	WITHOUT_CLASSIFICATION	0.9998165921335066	WITHOUT_CLASSIFICATION	1.8340786649341162E-4	DESIGN
from encoding, special-casing ASCII to ASCII	WITHOUT_CLASSIFICATION	0.9993059108635988	WITHOUT_CLASSIFICATION	6.94089136401275E-4	DESIGN
to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9985413353626639	WITHOUT_CLASSIFICATION	0.0014586646373361543	DESIGN
create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9981922823158765	WITHOUT_CLASSIFICATION	0.0018077176841234635	DESIGN
decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9992319461918078	WITHOUT_CLASSIFICATION	7.680538081921343E-4	DESIGN
create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9981922823158765	WITHOUT_CLASSIFICATION	0.0018077176841234635	DESIGN
Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9991767458754072	WITHOUT_CLASSIFICATION	8.232541245929162E-4	DESIGN
no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9977097964972502	WITHOUT_CLASSIFICATION	0.0022902035027496503	DESIGN
interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.999960298981604	WITHOUT_CLASSIFICATION	3.970101839593871E-5	DESIGN
File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999596786675599	WITHOUT_CLASSIFICATION	4.032133244016617E-5	DESIGN
rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999249314653097	WITHOUT_CLASSIFICATION	7.506853469026996E-5	DESIGN
We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9991538550115793	WITHOUT_CLASSIFICATION	8.461449884207786E-4	DESIGN
exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9996218715147691	WITHOUT_CLASSIFICATION	3.781284852309228E-4	DESIGN
Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9997402633395717	WITHOUT_CLASSIFICATION	2.5973666042827744E-4	DESIGN
file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9943605741095776	WITHOUT_CLASSIFICATION	0.005639425890422429	DESIGN
Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.999703035363799	WITHOUT_CLASSIFICATION	2.969646362009761E-4	DESIGN
Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9980060597279983	WITHOUT_CLASSIFICATION	0.001993940272001816	DESIGN
file not given	WITHOUT_CLASSIFICATION	0.9995020938383409	WITHOUT_CLASSIFICATION	4.979061616590915E-4	DESIGN
string to eval	WITHOUT_CLASSIFICATION	0.9999229506686899	WITHOUT_CLASSIFICATION	7.704933131017913E-5	DESIGN
binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9991133893186593	WITHOUT_CLASSIFICATION	8.86610681340704E-4	DESIGN
?g | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9996504140485792	WITHOUT_CLASSIFICATION	3.4958595142076706E-4	DESIGN
bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9966990451418068	WITHOUT_CLASSIFICATION	0.0033009548581931568	DESIGN
Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9969202960093458	WITHOUT_CLASSIFICATION	0.0030797039906540528	DESIGN
Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9987336896290665	WITHOUT_CLASSIFICATION	0.001266310370933443	DESIGN
No catch active for this throw	WITHOUT_CLASSIFICATION	0.9997012507054541	WITHOUT_CLASSIFICATION	2.9874929454578E-4	DESIGN
without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9924794492349727	WITHOUT_CLASSIFICATION	0.007520550765027349	DESIGN
ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9995515901342565	WITHOUT_CLASSIFICATION	4.4840986574354856E-4	DESIGN
MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999793272917172	WITHOUT_CLASSIFICATION	2.0672708282802066E-5	DESIGN
MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9990968394504538	WITHOUT_CLASSIFICATION	9.031605495462541E-4	DESIGN
?A | Time | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999820744044721	WITHOUT_CLASSIFICATION	1.7925595527907192E-5	DESIGN
?b | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.999882642105777	WITHOUT_CLASSIFICATION	1.173578942229958E-4	DESIGN
?c | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999445235914399	WITHOUT_CLASSIFICATION	5.5476408560059206E-5	DESIGN
?C | Time | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999494202787869	WITHOUT_CLASSIFICATION	5.0579721213023586E-5	DESIGN
?d | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999950614665992	WITHOUT_CLASSIFICATION	4.938533400821913E-6	DESIGN
?e | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999747453117795	WITHOUT_CLASSIFICATION	2.5254688220447986E-5	DESIGN
?f | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999869613663677	WITHOUT_CLASSIFICATION	1.3038633632305693E-5	DESIGN
?G | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999297005620751	WITHOUT_CLASSIFICATION	7.029943792491638E-5	DESIGN
?k | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9997158345942537	WITHOUT_CLASSIFICATION	2.841654057463082E-4	DESIGN
?M | Time | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999847959034498	WITHOUT_CLASSIFICATION	1.5204096550305418E-5	DESIGN
?o | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999900660910948	WITHOUT_CLASSIFICATION	9.933908905146822E-6	DESIGN
?O | boolean | True if file1 exists and is owned by the caller's real uid	WITHOUT_CLASSIFICATION	0.9999887322035631	WITHOUT_CLASSIFICATION	1.1267796436920082E-5	DESIGN
?p | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999600596024258	WITHOUT_CLASSIFICATION	3.994039757423639E-5	DESIGN
?r | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999900021177982	WITHOUT_CLASSIFICATION	9.997882201707002E-6	DESIGN
?s | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.99999190695213	WITHOUT_CLASSIFICATION	8.093047869998017E-6	DESIGN
?S | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999640674753038	WITHOUT_CLASSIFICATION	3.593252469620642E-5	DESIGN
?u | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.999126968013919	WITHOUT_CLASSIFICATION	8.730319860810325E-4	DESIGN
?x | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999932133059268	WITHOUT_CLASSIFICATION	6.786694073111384E-6	DESIGN
?X | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999923020111879	WITHOUT_CLASSIFICATION	7.697988812094372E-6	DESIGN
?z | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999876723274613	WITHOUT_CLASSIFICATION	1.2327672538577333E-5	DESIGN
?= | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999910809519835	WITHOUT_CLASSIFICATION	8.919048016521696E-6	DESIGN
?< | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999974209476403	WITHOUT_CLASSIFICATION	2.5790523596385088E-6	DESIGN
?> | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.999997090665353	WITHOUT_CLASSIFICATION	2.9093346469440143E-6	DESIGN
?- | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999764145001547	WITHOUT_CLASSIFICATION	2.358549984533696E-5	DESIGN
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9973120664513059	WITHOUT_CLASSIFICATION	0.0026879335486940437	DESIGN
Error info is per-thread	WITHOUT_CLASSIFICATION	0.9994716177625352	WITHOUT_CLASSIFICATION	5.283822374648322E-4	DESIGN
init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9993371081134287	WITHOUT_CLASSIFICATION	6.628918865713121E-4	DESIGN
if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999514203794541	WITHOUT_CLASSIFICATION	4.8579620545956224E-5	DESIGN
If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9997654782849827	WITHOUT_CLASSIFICATION	2.345217150172115E-4	DESIGN
new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9849609430437286	WITHOUT_CLASSIFICATION	0.01503905695627149	DESIGN
set to default thread group	WITHOUT_CLASSIFICATION	0.9984254121789556	WITHOUT_CLASSIFICATION	0.0015745878210444134	DESIGN
set to default thread group	WITHOUT_CLASSIFICATION	0.9984254121789556	WITHOUT_CLASSIFICATION	0.0015745878210444134	DESIGN
JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9989293813685243	WITHOUT_CLASSIFICATION	0.0010706186314758102	DESIGN
JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9990337537714259	WITHOUT_CLASSIFICATION	9.662462285740282E-4	DESIGN
for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9988122647096653	WITHOUT_CLASSIFICATION	0.0011877352903347253	DESIGN
JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9993855727887474	WITHOUT_CLASSIFICATION	6.144272112526423E-4	DESIGN
MRI behavior: value given in seconds; converted to Float; less than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9993588989319504	WITHOUT_CLASSIFICATION	6.411010680496641E-4	DESIGN
If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999966074858431	WITHOUT_CLASSIFICATION	3.392514156898377E-6	DESIGN
We need this loop in order to be able to "unblock" the join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9971988992843751	WITHOUT_CLASSIFICATION	0.002801100715625001	DESIGN
attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9996275531655345	WITHOUT_CLASSIFICATION	3.724468344654718E-4	DESIGN
not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9984234268630636	WITHOUT_CLASSIFICATION	0.0015765731369363808	DESIGN
If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999652305070345	WITHOUT_CLASSIFICATION	3.4769492965517E-5	DESIGN
check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999858172183778	WITHOUT_CLASSIFICATION	1.4182781622262987E-5	DESIGN
check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999858172183778	WITHOUT_CLASSIFICATION	1.4182781622262987E-5	DESIGN
ignore; I don't like doing it, but it seems like we really just need to make all channels non-blocking by default and use select when implementing blocking ops, so if this remains set non-blocking, perhaps it's not such a big deal...	WITHOUT_CLASSIFICATION	0.9857087540579146	DESIGN	0.014291245942085508	WITHOUT_CLASSIFICATION
can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.995075555023712	WITHOUT_CLASSIFICATION	0.004924444976287922	DESIGN
compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9918781576554013	WITHOUT_CLASSIFICATION	0.008121842344598616	DESIGN
Create Constants class	WITHOUT_CLASSIFICATION	0.9986937515919616	WITHOUT_CLASSIFICATION	0.0013062484080384135	DESIGN
Create constants for open flags	WITHOUT_CLASSIFICATION	0.9998548885390213	WITHOUT_CLASSIFICATION	1.451114609787498E-4	DESIGN
Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.999596244290719	WITHOUT_CLASSIFICATION	4.037557092810254E-4	DESIGN
Create constants for flock	WITHOUT_CLASSIFICATION	0.9997726765585719	WITHOUT_CLASSIFICATION	2.2732344142814627E-4	DESIGN
File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9986810370485437	WITHOUT_CLASSIFICATION	0.0013189629514562277	DESIGN
Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999997629887453	WITHOUT_CLASSIFICATION	2.3701125470051655E-7	DESIGN
null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9988882366129627	WITHOUT_CLASSIFICATION	0.0011117633870373087	DESIGN
Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.999927261896942	WITHOUT_CLASSIFICATION	7.273810305787115E-5	DESIGN
Special case for handling ACCMODE, since constantine will generate an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999976323212253	WITHOUT_CLASSIFICATION	2.36767877474959E-6	DESIGN
Return false here	WITHOUT_CLASSIFICATION	0.9996370348644634	WITHOUT_CLASSIFICATION	3.6296513553668087E-4	DESIGN
Return false here	WITHOUT_CLASSIFICATION	0.9996370348644634	WITHOUT_CLASSIFICATION	3.6296513553668087E-4	DESIGN
We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9917115357154743	WITHOUT_CLASSIFICATION	0.008288464284525648	DESIGN
Should we do anything?	WITHOUT_CLASSIFICATION	0.9779888997862708	WITHOUT_CLASSIFICATION	0.022011100213729144	DESIGN
File class methods	WITHOUT_CLASSIFICATION	0.999532906394803	WITHOUT_CLASSIFICATION	4.6709360519703444E-4	DESIGN
MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9957895537046471	WITHOUT_CLASSIFICATION	0.00421044629535298	DESIGN
strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9995534194995949	WITHOUT_CLASSIFICATION	4.465805004050757E-4	DESIGN
C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9992633781446203	WITHOUT_CLASSIFICATION	7.366218553796639E-4	DESIGN
-1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9993691518680923	WITHOUT_CLASSIFICATION	6.308481319076804E-4	DESIGN
trim trailing slashes	WITHOUT_CLASSIFICATION	0.9986712343388159	WITHOUT_CLASSIFICATION	0.001328765661184157	DESIGN
Dot is not at beginning and not at end of filename.	WITHOUT_CLASSIFICATION	0.9993656233306196	WITHOUT_CLASSIFICATION	6.343766693803115E-4	DESIGN
Handle ~user paths	WITHOUT_CLASSIFICATION	0.9986623109075098	WITHOUT_CLASSIFICATION	0.0013376890924902557	DESIGN
compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9918781576554013	WITHOUT_CLASSIFICATION	0.008121842344598616	DESIGN
Include additional path separator (so that dirname of "C:\file.txt" is "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9957631655115563	WITHOUT_CLASSIFICATION	0.0042368344884437265	DESIGN
FNFException can be thrown in both cases, when the file is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9933475262509871	WITHOUT_CLASSIFICATION	0.006652473749012891	DESIGN
No directory delimeter. Rest of string is username	WITHOUT_CLASSIFICATION	0.999994192556786	WITHOUT_CLASSIFICATION	5.807443213884042E-6	DESIGN
If there's a second argument, it's the path to which the first argument is relative.	WITHOUT_CLASSIFICATION	0.9999990961170955	WITHOUT_CLASSIFICATION	9.038829046137583E-7	DESIGN
Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9990019012582858	WITHOUT_CLASSIFICATION	9.98098741714173E-4	DESIGN
If there's no second argument, simply use the working directory of the runtime.	WITHOUT_CLASSIFICATION	0.9999777083108751	WITHOUT_CLASSIFICATION	2.229168912494981E-5	DESIGN
Find out which string to check.	WITHOUT_CLASSIFICATION	0.999857800418924	WITHOUT_CLASSIFICATION	1.4219958107598366E-4	DESIGN
Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9991762316530949	WITHOUT_CLASSIFICATION	8.23768346905143E-4	DESIGN
Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9993789870755595	WITHOUT_CLASSIFICATION	6.210129244404462E-4	DESIGN
'~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9995423796785112	WITHOUT_CLASSIFICATION	4.576203214887523E-4	DESIGN
'~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9995423796785112	WITHOUT_CLASSIFICATION	4.576203214887523E-4	DESIGN
Prepare a string with the same number of redundant slashes so that we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9981378916427086	WITHOUT_CLASSIFICATION	0.0018621083572913505	DESIGN
If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9998930868967505	WITHOUT_CLASSIFICATION	1.0691310324951E-4	DESIGN
no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999351181597672	WITHOUT_CLASSIFICATION	6.488184023268192E-5	DESIGN
we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9990236147424321	WITHOUT_CLASSIFICATION	9.763852575679E-4	DESIGN
we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9992600269725285	WITHOUT_CLASSIFICATION	7.399730274714897E-4	DESIGN
do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9935514075480126	WITHOUT_CLASSIFICATION	0.00644859245198729	DESIGN
rb: check_modifiable	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
rb: readable	WITHOUT_CLASSIFICATION	0.9996690044405425	WITHOUT_CLASSIFICATION	3.309955594575553E-4	DESIGN
rename is successful	WITHOUT_CLASSIFICATION	0.9885359497958223	WITHOUT_CLASSIFICATION	0.011464050204177855	DESIGN
rename via Java API call wasn't successful, let's try some tricks, similar to MRI	WITHOUT_CLASSIFICATION	0.9997997250326339	WITHOUT_CLASSIFICATION	2.0027496736603958E-4	DESIGN
try to rename one more time	WITHOUT_CLASSIFICATION	0.994297098182601	WITHOUT_CLASSIFICATION	0.005702901817398909	DESIGN
Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.996376273495731	WITHOUT_CLASSIFICATION	0.0036237265042690673	DESIGN
Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9954027720552238	WITHOUT_CLASSIFICATION	0.004597227944776217	DESIGN
RubyContinuation	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq) it doesn't initialize ifNone field	WITHOUT_CLASSIFICATION	0.9998164678281444	WITHOUT_CLASSIFICATION	1.8353217185550897E-4	DESIGN
16 ?	WITHOUT_CLASSIFICATION	0.9984620046763774	WITHOUT_CLASSIFICATION	0.0015379953236225982	DESIGN
generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9996990953246842	WITHOUT_CLASSIFICATION	3.0090467531580415E-4	DESIGN
size + 1;	WITHOUT_CLASSIFICATION	0.9999326062524482	WITHOUT_CLASSIFICATION	6.739374755187867E-5	DESIGN
suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9989803580489423	WITHOUT_CLASSIFICATION	0.0010196419510576616	DESIGN
------------------------------	WITHOUT_CLASSIFICATION	0.9992128200470757	WITHOUT_CLASSIFICATION	7.871799529242747E-4	DESIGN
------------------------------	WITHOUT_CLASSIFICATION	0.9992128200470757	WITHOUT_CLASSIFICATION	7.871799529242747E-4	DESIGN
put implementation	WITHOUT_CLASSIFICATION	0.9996836592796133	WITHOUT_CLASSIFICATION	3.1634072038663096E-4	DESIGN
get implementation	WITHOUT_CLASSIFICATION	0.9994296302927598	WITHOUT_CLASSIFICATION	5.703697072402989E-4	DESIGN
specialized for value	WITHOUT_CLASSIFICATION	0.999745002983754	WITHOUT_CLASSIFICATION	2.5499701624597264E-4	DESIGN
delete implementation	WITHOUT_CLASSIFICATION	0.9998025617195894	WITHOUT_CLASSIFICATION	1.9743828041052732E-4	DESIGN
n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9998087995922368	WITHOUT_CLASSIFICATION	1.9120040776318038E-4	DESIGN
============================ End of hash internals ============================	WITHOUT_CLASSIFICATION	0.9996676734012856	WITHOUT_CLASSIFICATION	3.323265987143411E-4	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9997538607312987	WITHOUT_CLASSIFICATION	2.461392687013869E-4	DESIGN
update the hash value	WITHOUT_CLASSIFICATION	0.9999290858058059	WITHOUT_CLASSIFICATION	7.091419419420429E-5	DESIGN
other hash does not contain key	WITHOUT_CLASSIFICATION	0.9888290282256869	WITHOUT_CLASSIFICATION	0.011170971774313128	DESIGN
rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.999287008740544	WITHOUT_CLASSIFICATION	7.129912594560197E-4	DESIGN
Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9986824593570534	WITHOUT_CLASSIFICATION	0.001317540642946631	DESIGN
remain where we are	WITHOUT_CLASSIFICATION	0.9997793060707787	WITHOUT_CLASSIFICATION	2.206939292213568E-4	DESIGN
We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.999957397695615	WITHOUT_CLASSIFICATION	4.2602304384961134E-5	DESIGN
default: don't retain	WITHOUT_CLASSIFICATION	0.9994959178477079	WITHOUT_CLASSIFICATION	5.040821522921561E-4	DESIGN
once hasNext has been called, we commit to next() returning the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9976062238856886	WITHOUT_CLASSIFICATION	0.002393776114311344	DESIGN
Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9982208439585026	WITHOUT_CLASSIFICATION	0.0017791560414974303	DESIGN
We do both writable and writable_real through the same method because in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9997937162768479	WITHOUT_CLASSIFICATION	2.0628372315203267E-4	DESIGN
first try as directory	WITHOUT_CLASSIFICATION	0.999997224964459	WITHOUT_CLASSIFICATION	2.7750355411050916E-6	DESIGN
next as regular file	WITHOUT_CLASSIFICATION	0.9999205064477741	WITHOUT_CLASSIFICATION	7.949355222595082E-5	DESIGN
We only want IO objects with valid streams (better to error now).	WITHOUT_CLASSIFICATION	0.9997607237804317	WITHOUT_CLASSIFICATION	2.3927621956836587E-4	DESIGN
NIO-based	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
NIO-based	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
Stream-based	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9960183082199454	WITHOUT_CLASSIFICATION	0.003981691780054622	DESIGN
We use FILE versus IO to match T_FILE in MRI.	WITHOUT_CLASSIFICATION	0.9992671424343967	WITHOUT_CLASSIFICATION	7.328575656033008E-4	DESIGN
Constants for seek	WITHOUT_CLASSIFICATION	0.9997932181868409	WITHOUT_CLASSIFICATION	2.0678181315913794E-4	DESIGN
confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9940601997123961	WITHOUT_CLASSIFICATION	0.005939800287603848	DESIGN
check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.999885602493614	WITHOUT_CLASSIFICATION	1.1439750638600712E-4	DESIGN
dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9932058084310357	WITHOUT_CLASSIFICATION	0.006794191568964351	DESIGN
re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9996886054159249	WITHOUT_CLASSIFICATION	3.1139458407512615E-4	DESIGN
re-register the descriptor	WITHOUT_CLASSIFICATION	0.9994409074628942	WITHOUT_CLASSIFICATION	5.590925371058769E-4	DESIGN
since we're not actually duping the incoming channel into our handler, we need to copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.8858734397096926	WITHOUT_CLASSIFICATION	0.11412656029030746	DESIGN
re-register	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999794954020292	WITHOUT_CLASSIFICATION	2.0504597970795867E-5	DESIGN
Ensure that separator is valid otherwise give it the default paragraph separator.	WITHOUT_CLASSIFICATION	0.9999881405053724	WITHOUT_CLASSIFICATION	1.1859494627527524E-5	DESIGN
loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999778302338131	WITHOUT_CLASSIFICATION	2.216976618689182E-5	DESIGN
if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9996067500605249	WITHOUT_CLASSIFICATION	3.932499394750146E-4	DESIGN
this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9178149439992618	DESIGN	0.08218505600073825	WITHOUT_CLASSIFICATION
IO class methods.	WITHOUT_CLASSIFICATION	0.9989343865248436	WITHOUT_CLASSIFICATION	0.0010656134751563687	DESIGN
use original modes	WITHOUT_CLASSIFICATION	0.9988862210488608	WITHOUT_CLASSIFICATION	0.0011137789511391884	DESIGN
See if we already have this descriptor open. If so then we can mostly share the handler (keep open file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9996903627434942	WITHOUT_CLASSIFICATION	3.096372565057497E-4	DESIGN
redundant, done above as well	WITHOUT_CLASSIFICATION	0.9977055929750114	WITHOUT_CLASSIFICATION	0.0022944070249887255	DESIGN
MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9992683075064673	WITHOUT_CLASSIFICATION	7.316924935327087E-4	DESIGN
-1 == don't set permissions	WITHOUT_CLASSIFICATION	0.998584414870198	WITHOUT_CLASSIFICATION	0.001415585129801995	DESIGN
isRetained=true	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
This appears to be some windows-only mode. On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9701226586564144	WITHOUT_CLASSIFICATION	0.02987734134358558	DESIGN
if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9954857073687965	WITHOUT_CLASSIFICATION	0.004514292631203448	DESIGN
Throw bad file descriptor is we can not read on supplied descriptor.	WITHOUT_CLASSIFICATION	0.9952850430154356	WITHOUT_CLASSIFICATION	0.0047149569845644085	DESIGN
Everything written	WITHOUT_CLASSIFICATION	0.9997448045273095	WITHOUT_CLASSIFICATION	2.5519547269054545E-4	DESIGN
return len - n;	WITHOUT_CLASSIFICATION	0.9995041631559506	WITHOUT_CLASSIFICATION	4.958368440495202E-4	DESIGN
Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9998535651250037	WITHOUT_CLASSIFICATION	1.464348749963838E-4	DESIGN
Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9911121554088892	WITHOUT_CLASSIFICATION	0.00888784459111074	DESIGN
Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.997702491916046	WITHOUT_CLASSIFICATION	0.0022975080839540986	DESIGN
Register the new descriptor	WITHOUT_CLASSIFICATION	0.9988688251578133	WITHOUT_CLASSIFICATION	0.0011311748421867546	DESIGN
cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9997391863485584	WITHOUT_CLASSIFICATION	2.608136514415832E-4	DESIGN
hmmmm	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9950395664174451	WITHOUT_CLASSIFICATION	0.004960433582554883	DESIGN
Do nothing. FD_CLOEXEC has no meaning in JVM since we cannot really exec. And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9956581328443865	WITHOUT_CLASSIFICATION	0.004341867155613506	DESIGN
Do nothing. FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9998213520429718	WITHOUT_CLASSIFICATION	1.786479570281191E-4	DESIGN
Length to read	WITHOUT_CLASSIFICATION	0.9997711169565964	WITHOUT_CLASSIFICATION	2.288830434035732E-4	DESIGN
String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9971797109945997	WITHOUT_CLASSIFICATION	0.0028202890054004476	DESIGN
cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9995759645252537	WITHOUT_CLASSIFICATION	4.240354747463269E-4	DESIGN
select until read is ready	WITHOUT_CLASSIFICATION	0.9999123798681547	WITHOUT_CLASSIFICATION	8.762013184524962E-5	DESIGN
ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9990994336713405	WITHOUT_CLASSIFICATION	9.005663286594669E-4	DESIGN
buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9998094519787372	WITHOUT_CLASSIFICATION	1.9054802126278224E-4	DESIGN
READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9993105162277761	WITHOUT_CLASSIFICATION	6.894837722239332E-4	DESIGN
rb: writable	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9993105162277761	WITHOUT_CLASSIFICATION	6.894837722239332E-4	DESIGN
All errors to sysread should be SystemCallErrors, but on a closed stream Ruby returns an IOError. Java throws same exception for all errors so we resort to this hack...	WITHOUT_CLASSIFICATION	0.8985877994367923	WITHOUT_CLASSIFICATION	0.10141220056320756	DESIGN
TODO: read into buffer using all the fread logic int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9370923814988262	WITHOUT_CLASSIFICATION	0.06290761850117375	DESIGN
truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.999969323942374	WITHOUT_CLASSIFICATION	3.067605762601643E-5	DESIGN
TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.5146732807512958	WITHOUT_CLASSIFICATION	0.4853267192487042	DESIGN
class methods for IO	WITHOUT_CLASSIFICATION	0.9993111825039825	WITHOUT_CLASSIFICATION	6.888174960175239E-4	DESIGN
save blocking state	WITHOUT_CLASSIFICATION	0.9995249562676557	WITHOUT_CLASSIFICATION	4.7504373234426864E-4	DESIGN
write	WITHOUT_CLASSIFICATION	0.9992448608438385	WITHOUT_CLASSIFICATION	7.551391561614521E-4	DESIGN
Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9998301589833912	WITHOUT_CLASSIFICATION	1.6984101660877832E-4	DESIGN
make all sockets blocking as configured again close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999970672093718	WITHOUT_CLASSIFICATION	2.9327906282296086E-6	DESIGN
FIXME: process options	WITHOUT_CLASSIFICATION	0.9398631568929189	WITHOUT_CLASSIFICATION	0.060136843107081166	DESIGN
Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9799215278330116	WITHOUT_CLASSIFICATION	0.02007847216698852	DESIGN
NIO based pipe	WITHOUT_CLASSIFICATION	0.9995540680107167	WITHOUT_CLASSIFICATION	4.459319892834081E-4	DESIGN
not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9899001687347246	WITHOUT_CLASSIFICATION	0.01009983126527533	DESIGN
raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999404714207991	WITHOUT_CLASSIFICATION	5.9528579200887925E-5	DESIGN
may need to handle ENC_CODERANGE_BROKEN	WITHOUT_CLASSIFICATION	0.9813899407120487	WITHOUT_CLASSIFICATION	0.01861005928795128	DESIGN
TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.5200263802944265	DESIGN	0.4799736197055734	WITHOUT_CLASSIFICATION
If we know what method was being called, strip everything before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.999305852427286	WITHOUT_CLASSIFICATION	6.941475727138965E-4	DESIGN
The class of this object	WITHOUT_CLASSIFICATION	0.9987485789721879	WITHOUT_CLASSIFICATION	0.0012514210278120204	DESIGN
zeroed by jvm	WITHOUT_CLASSIFICATION	0.9998472387606065	WITHOUT_CLASSIFICATION	1.5276123939352875E-4	DESIGN
objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9991850795574373	WITHOUT_CLASSIFICATION	8.149204425626634E-4	DESIGN
JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.8130306066163492	WITHOUT_CLASSIFICATION	0.18696939338365076	DESIGN
rb_class_boot	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
6:tags 16:addr 1:eos	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9992078911340695	WITHOUT_CLASSIFICATION	7.921088659305108E-4	DESIGN
for interface impls	WITHOUT_CLASSIFICATION	0.9995328025049303	WITHOUT_CLASSIFICATION	4.6719749506966975E-4	DESIGN
We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9906907728468431	WITHOUT_CLASSIFICATION	0.009309227153156761	DESIGN
Methods of the Object class (rb_obj_):	WITHOUT_CLASSIFICATION	0.9994795705736851	WITHOUT_CLASSIFICATION	5.204294263149568E-4	DESIGN
can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9991797216630032	WITHOUT_CLASSIFICATION	8.20278336996791E-4	DESIGN
include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9740694981225734	WITHOUT_CLASSIFICATION	0.025930501877426515	DESIGN
Equivalent of Data_Get_Struct This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9995058146896967	WITHOUT_CLASSIFICATION	4.94185310303422E-4	DESIGN
COMMON VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9991398395067661	WITHOUT_CLASSIFICATION	8.601604932339281E-4	DESIGN
INTERNAL VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9992078911340695	WITHOUT_CLASSIFICATION	7.921088659305108E-4	DESIGN
INSTANCE VARIABLE API METHODS	WITHOUT_CLASSIFICATION	0.9988792909970566	WITHOUT_CLASSIFICATION	0.00112070900294347	DESIGN
Struct methods	WITHOUT_CLASSIFICATION	0.9996700556272852	WITHOUT_CLASSIFICATION	3.299443727147723E-4	DESIGN
runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.999885087389463	WITHOUT_CLASSIFICATION	1.1491261053705344E-4	DESIGN
define access methods.	WITHOUT_CLASSIFICATION	0.9995302551881943	WITHOUT_CLASSIFICATION	4.6974481180573214E-4	DESIGN
if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9440905128460249	WITHOUT_CLASSIFICATION	0.05590948715397517	DESIGN
Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9957751285741956	WITHOUT_CLASSIFICATION	0.004224871425804391	DESIGN
For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9997058025908374	WITHOUT_CLASSIFICATION	2.941974091625089E-4	DESIGN
OBJ_INFECT	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
These call assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9998654618365298	WITHOUT_CLASSIFICATION	1.345381634700989E-4	DESIGN
Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9989634093048368	WITHOUT_CLASSIFICATION	0.0010365906951631928	DESIGN
@param nv number of times to cycle or -1 to cycle indefinitely	WITHOUT_CLASSIFICATION	0.9817695387547906	WITHOUT_CLASSIFICATION	0.01823046124520942	DESIGN
Atomic ?	WITHOUT_CLASSIFICATION	0.9984400050565523	WITHOUT_CLASSIFICATION	0.0015599949434476747	DESIGN
Atomic ?	WITHOUT_CLASSIFICATION	0.9984400050565523	WITHOUT_CLASSIFICATION	0.0015599949434476747	DESIGN
MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9101368697855808	WITHOUT_CLASSIFICATION	0.08986313021441918	DESIGN
superClass may be null.	WITHOUT_CLASSIFICATION	0.998851381524187	WITHOUT_CLASSIFICATION	0.0011486184758130531	DESIGN
Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9842902041512611	WITHOUT_CLASSIFICATION	0.01570979584873888	DESIGN
ClassId is the name of the class/module sans where it is located. If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999747923996859	WITHOUT_CLASSIFICATION	2.5207600314115605E-5	DESIGN
ClassProviders return Java class/module (in #defineOrGetClassUnder and #defineOrGetModuleUnder) when class/module is opened using colon syntax.	WITHOUT_CLASSIFICATION	0.9999522223555023	WITHOUT_CLASSIFICATION	4.77776444977114E-5	DESIGN
update superclass reference	WITHOUT_CLASSIFICATION	0.999977031912923	WITHOUT_CLASSIFICATION	2.2968087077028304E-5	DESIGN
Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9888822728496462	WITHOUT_CLASSIFICATION	0.011117727150353786	DESIGN
MRI checks all types first:	WITHOUT_CLASSIFICATION	0.999132729642545	WITHOUT_CLASSIFICATION	8.672703574550282E-4	DESIGN
we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9823648051011282	WITHOUT_CLASSIFICATION	0.017635194898871786	DESIGN
module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999243328410093	WITHOUT_CLASSIFICATION	7.566715899060553E-5	DESIGN
See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999650719161137	WITHOUT_CLASSIFICATION	3.4928083886207674E-5	DESIGN
We can safely reference methods here instead of doing getMethods() since if we are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9997050692286703	WITHOUT_CLASSIFICATION	2.949307713296447E-4	DESIGN
we grab serial number first; the worst that will happen is we cache a later update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9986882368141309	WITHOUT_CLASSIFICATION	0.001311763185869123	DESIGN
update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9947002099317214	WITHOUT_CLASSIFICATION	0.005299790068278701	DESIGN
This method is intended only for defining new classes in Ruby code, so it uses the allocator of the specified superclass or default to the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.6123313262397838	WITHOUT_CLASSIFICATION	0.3876686737602162	DESIGN
need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9943040920937871	WITHOUT_CLASSIFICATION	0.005695907906212936	DESIGN
superClazz = null;	WITHOUT_CLASSIFICATION	0.9994795003996965	WITHOUT_CLASSIFICATION	5.204996003036341E-4	DESIGN
reopen a java class	WITHOUT_CLASSIFICATION	0.9988830972708305	WITHOUT_CLASSIFICATION	0.001116902729169512	DESIGN
This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9917769603775635	WITHOUT_CLASSIFICATION	0.008223039622436567	DESIGN
reopen a java module	WITHOUT_CLASSIFICATION	0.9989517804515311	WITHOUT_CLASSIFICATION	0.001048219548468874	DESIGN
FIXME warning	WITHOUT_CLASSIFICATION	0.9309839611644305	WITHOUT_CLASSIFICATION	0.06901603883556948	DESIGN
FIXME warning	WITHOUT_CLASSIFICATION	0.9309839611644305	WITHOUT_CLASSIFICATION	0.06901603883556948	DESIGN
a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9900871751750522	WITHOUT_CLASSIFICATION	0.00991282482494787	DESIGN
for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9995186059630878	WITHOUT_CLASSIFICATION	4.813940369122043E-4	DESIGN
just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9498493179720137	WITHOUT_CLASSIFICATION	0.05015068202798631	DESIGN
class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9964568988965553	WITHOUT_CLASSIFICATION	0.0035431011034447245	DESIGN
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9987312245804588	WITHOUT_CLASSIFICATION	0.0012687754195411817	DESIGN
MRI error message says Class, even though Module is ok	WITHOUT_CLASSIFICATION	0.9995639264557465	WITHOUT_CLASSIFICATION	4.3607354425342985E-4	DESIGN
scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9990544175407945	WITHOUT_CLASSIFICATION	9.455824592054795E-4	DESIGN
Module class methods	WITHOUT_CLASSIFICATION	0.9989926734269229	WITHOUT_CLASSIFICATION	0.0010073265730771183	DESIGN
Note: we change current frames visibility here because the methods which call this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.751754548407776	DESIGN	0.248245451592224	WITHOUT_CLASSIFICATION
next in hierarchy is an included version of the module we're attempting, so we skip including it	WITHOUT_CLASSIFICATION	0.9999257531979724	WITHOUT_CLASSIFICATION	7.424680202768338E-5	DESIGN
if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9985235851017205	WITHOUT_CLASSIFICATION	0.001476414898279558	DESIGN
build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9989997421769702	WITHOUT_CLASSIFICATION	0.0010002578230298292	DESIGN
if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999827131176834	WITHOUT_CLASSIFICATION	1.728688231651157E-5	DESIGN
if there's a non-null superclass, we're including into a normal class hierarchy; update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9997735941472589	WITHOUT_CLASSIFICATION	2.2640585274119414E-4	DESIGN
CLASS VARIABLE RUBY METHODS	WITHOUT_CLASSIFICATION	0.9991729717075722	WITHOUT_CLASSIFICATION	8.270282924276709E-4	DESIGN
CONSTANT RUBY METHODS	WITHOUT_CLASSIFICATION	0.9992078911340695	WITHOUT_CLASSIFICATION	7.921088659305108E-4	DESIGN
Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.8311499788887902	WITHOUT_CLASSIFICATION	0.16885002111120978	DESIGN
CLASS VARIABLE API METHODS	WITHOUT_CLASSIFICATION	0.9988299024844732	WITHOUT_CLASSIFICATION	0.0011700975155267822	DESIGN
Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.999369377164755	WITHOUT_CLASSIFICATION	6.306228352449911E-4	DESIGN
not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9874246708391238	WITHOUT_CLASSIFICATION	0.012575329160876308	DESIGN
Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.883860271082769	WITHOUT_CLASSIFICATION	0.11613972891723097	DESIGN
if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9993314159883643	WITHOUT_CLASSIFICATION	6.68584011635715E-4	DESIGN
Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9955970756172479	WITHOUT_CLASSIFICATION	0.004402924382752131	DESIGN
returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9994833143220653	WITHOUT_CLASSIFICATION	5.166856779347332E-4	DESIGN
removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9998082823822398	WITHOUT_CLASSIFICATION	1.917176177601862E-4	DESIGN
we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9957535514871838	WITHOUT_CLASSIFICATION	0.004246448512816224	DESIGN
reopen	WITHOUT_CLASSIFICATION	0.9992834117617693	WITHOUT_CLASSIFICATION	7.1658823823079E-4	DESIGN
ARGF methods	WITHOUT_CLASSIFICATION	0.9996700556272852	WITHOUT_CLASSIFICATION	3.299443727147723E-4	DESIGN
data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9991850795574373	WITHOUT_CLASSIFICATION	8.149204425626634E-4	DESIGN
one optional, one required args	WITHOUT_CLASSIFICATION	0.9995753859682719	WITHOUT_CLASSIFICATION	4.246140317281849E-4	DESIGN
one optional and no required args	WITHOUT_CLASSIFICATION	0.9998140680259499	WITHOUT_CLASSIFICATION	1.8593197405016007E-4	DESIGN
try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9997170345245993	WITHOUT_CLASSIFICATION	2.829654754007656E-4	DESIGN
we got a valid errno value	WITHOUT_CLASSIFICATION	0.9998237404183786	WITHOUT_CLASSIFICATION	1.7625958162134758E-4	DESIGN
Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9984993644622361	WITHOUT_CLASSIFICATION	0.0015006355377639336	DESIGN
print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9969999891843899	WITHOUT_CLASSIFICATION	0.0030000108156100656	DESIGN
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.8169201389079281	WITHOUT_CLASSIFICATION	0.18307986109207178	DESIGN
set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9998031632654434	WITHOUT_CLASSIFICATION	1.9683673455670375E-4	DESIGN
can't set TC classloader	WITHOUT_CLASSIFICATION	0.9992086194607311	WITHOUT_CLASSIFICATION	7.913805392688309E-4	DESIGN
no script to run, return success below	WITHOUT_CLASSIFICATION	0.9996926057108323	WITHOUT_CLASSIFICATION	3.0739428916772466E-4	DESIGN
Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999116470165319	WITHOUT_CLASSIFICATION	8.835298346813233E-5	DESIGN
Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9995204981008492	WITHOUT_CLASSIFICATION	4.795018991507912E-4	DESIGN
Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9994621527056724	WITHOUT_CLASSIFICATION	5.378472943276208E-4	DESIGN
ignore error	WITHOUT_CLASSIFICATION	0.9996695144164934	WITHOUT_CLASSIFICATION	3.304855835065342E-4	DESIGN
COMMON CONSTANT / CVAR METHODS	WITHOUT_CLASSIFICATION	0.9998039043779595	WITHOUT_CLASSIFICATION	1.9609562204055987E-4	DESIGN
INTERNAL MODULE VARIABLE API METHODS	WITHOUT_CLASSIFICATION	0.9988470271366247	WITHOUT_CLASSIFICATION	0.0011529728633752796	DESIGN
LOW-LEVEL CONSTANT INTERFACE fetch/store/list constants for this module	WITHOUT_CLASSIFICATION	0.9940693593265039	WITHOUT_CLASSIFICATION	0.005930640673496192	DESIGN
odd	WITHOUT_CLASSIFICATION	0.9992616559130372	WITHOUT_CLASSIFICATION	7.383440869628266E-4	DESIGN
JRubyClient	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
x = mantissa 2 exponent Where mantissa is in the range of [.5, 1)	WITHOUT_CLASSIFICATION	0.9999651896346351	WITHOUT_CLASSIFICATION	3.481036536499576E-5	DESIGN
Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9995557784245707	WITHOUT_CLASSIFICATION	4.442215754293214E-4	DESIGN
Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9988432218855323	WITHOUT_CLASSIFICATION	0.0011567781144676643	DESIGN
r = x 2 y	WITHOUT_CLASSIFICATION	0.999917966623864	WITHOUT_CLASSIFICATION	8.20333761359443E-5	DESIGN
0!	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
1!	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
2!	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
3!	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
4!	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
5!	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
6!	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
7!	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
8!	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
9!	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
11!	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
12!	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
13!	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
15!	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
16!	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
17!	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
19!	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
20!	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
21!	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
Static constants	WITHOUT_CLASSIFICATION	0.999766842498103	WITHOUT_CLASSIFICATION	2.3315750189714367E-4	DESIGN
Clean-up string representation so that it could be understood by Java's BigDecimal. Not terribly efficient for now. 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9992401534478441	WITHOUT_CLASSIFICATION	7.598465521559286E-4	DESIGN
2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9996281982840409	WITHOUT_CLASSIFICATION	3.7180171595911665E-4	DESIGN
3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9986778683383694	WITHOUT_CLASSIFICATION	0.0013221316616306873	DESIGN
MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9991802349864021	WITHOUT_CLASSIFICATION	8.197650135978947E-4	DESIGN
Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9998410114504722	WITHOUT_CLASSIFICATION	1.5898854952773632E-4	DESIGN
Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999337473163736	WITHOUT_CLASSIFICATION	6.625268362640157E-5	DESIGN
Note: MRI has a very non-trivial way of calculating the precision, so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.5938759007221522	WITHOUT_CLASSIFICATION	0.40612409927784787	DESIGN
Iteration variables, for the square root x and the reciprocal v initial x: x0 ~ sqrt() initial v: v0 = 1/(2x)	WITHOUT_CLASSIFICATION	0.999990723159135	WITHOUT_CLASSIFICATION	9.276840865030461E-6	DESIGN
it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9963451959806763	WITHOUT_CLASSIFICATION	0.0036548040193236236	DESIGN
TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9755006444900964	DESIGN	0.024499355509903557	WITHOUT_CLASSIFICATION
integer division	WITHOUT_CLASSIFICATION	0.9996658393207188	WITHOUT_CLASSIFICATION	3.341606792811306E-4	DESIGN
MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999931346467957	WITHOUT_CLASSIFICATION	6.86535320433902E-6	DESIGN
rounding neccessary	WITHOUT_CLASSIFICATION	0.9996624934084658	WITHOUT_CLASSIFICATION	3.3750659153421517E-4	DESIGN
rounding neccessary	WITHOUT_CLASSIFICATION	0.9996624934084658	WITHOUT_CLASSIFICATION	3.3750659153421517E-4	DESIGN
Java and MRI definitions of divmod are different.	WITHOUT_CLASSIFICATION	0.9998410114504722	WITHOUT_CLASSIFICATION	1.5898854952773632E-4	DESIGN
JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9713434303898631	WITHOUT_CLASSIFICATION	0.028656569610136837	DESIGN
shift the decimal point just to the right of the digit to be rounded to (divide by 10(abs(scale))) -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9996637967409493	WITHOUT_CLASSIFICATION	3.362032590506208E-4	DESIGN
...round to that digit	WITHOUT_CLASSIFICATION	0.9992841069007538	WITHOUT_CLASSIFICATION	7.158930992463001E-4	DESIGN
...and shift the result back to the left (multiply by 10(abs(scale)))	WITHOUT_CLASSIFICATION	0.9998814478679745	WITHOUT_CLASSIFICATION	1.1855213202549974E-4	DESIGN
this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9989280342668595	WITHOUT_CLASSIFICATION	0.0010719657331405244	DESIGN
sign	WITHOUT_CLASSIFICATION	0.9992968235710529	WITHOUT_CLASSIFICATION	7.031764289471063E-4	DESIGN
significant digits and exponent	WITHOUT_CLASSIFICATION	0.9997378726077475	WITHOUT_CLASSIFICATION	2.621273922525087E-4	DESIGN
normalize the value	WITHOUT_CLASSIFICATION	0.9998984743726469	WITHOUT_CLASSIFICATION	1.0152562735313355E-4	DESIGN
base	WITHOUT_CLASSIFICATION	0.9996196971660615	WITHOUT_CLASSIFICATION	3.803028339386301E-4	DESIGN
NOTE: MRI's sqrt precision is limited by 100, but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9990139721256037	WITHOUT_CLASSIFICATION	9.860278743963307E-4	DESIGN
just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9698368616788962	WITHOUT_CLASSIFICATION	0.030163138321103882	DESIGN
eh?!	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.998717478302428	WITHOUT_CLASSIFICATION	0.0012825216975720416	DESIGN
General number and precision checking	WITHOUT_CLASSIFICATION	0.9996942658214027	WITHOUT_CLASSIFICATION	3.057341785972331E-4	DESIGN
the requested precision	WITHOUT_CLASSIFICATION	0.9998304424605816	WITHOUT_CLASSIFICATION	1.6955753941827055E-4	DESIGN
Proc class	WITHOUT_CLASSIFICATION	0.9977197109074997	WITHOUT_CLASSIFICATION	0.002280289092500322	DESIGN
.append(" -x[directory] strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9948905587258902	WITHOUT_CLASSIFICATION	0.005109441274109842	DESIGN
even shift.. ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.988595539846599	WITHOUT_CLASSIFICATION	0.011404460153401087	DESIGN
5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9995912356535537	WITHOUT_CLASSIFICATION	4.087643464463169E-4	DESIGN
..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9998862180561043	WITHOUT_CLASSIFICATION	1.1378194389567748E-4	DESIGN
Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9987049493650396	WITHOUT_CLASSIFICATION	0.0012950506349603194	DESIGN
x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9996628801250362	WITHOUT_CLASSIFICATION	3.371198749637981E-4	DESIGN
for prec 15 root x0 must surely be OK return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999806108665171	WITHOUT_CLASSIFICATION	1.9389133482803465E-5	DESIGN
Initial v - the reciprocal v0 = 1/(2x)	WITHOUT_CLASSIFICATION	0.9993024662430096	WITHOUT_CLASSIFICATION	6.975337569904555E-4	DESIGN
Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9993431835715118	WITHOUT_CLASSIFICATION	6.568164284882214E-4	DESIGN
assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9998834044963616	WITHOUT_CLASSIFICATION	1.1659550363831504E-4	DESIGN
The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999804950805279	WITHOUT_CLASSIFICATION	1.9504919472073432E-5	DESIGN
Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.998789055389774	WITHOUT_CLASSIFICATION	0.0012109446102259855	DESIGN
Next x e = d - x^2	WITHOUT_CLASSIFICATION	0.9998649935921575	WITHOUT_CLASSIFICATION	1.3500640784252114E-4	DESIGN
x += ev ~ sqrt()	WITHOUT_CLASSIFICATION	0.9998498717662714	WITHOUT_CLASSIFICATION	1.501282337287339E-4	DESIGN
root x is ready!	WITHOUT_CLASSIFICATION	0.9996386448163034	WITHOUT_CLASSIFICATION	3.6135518369661125E-4	DESIGN
Next v g = 1 - 2xv	WITHOUT_CLASSIFICATION	0.9997536977116455	WITHOUT_CLASSIFICATION	2.463022883544777E-4	DESIGN
v += gv ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9997242903077879	WITHOUT_CLASSIFICATION	2.7570969221214607E-4	DESIGN
RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
c: bind_eval	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
================ Module Methods ================	WITHOUT_CLASSIFICATION	0.9997109669299813	WITHOUT_CLASSIFICATION	2.8903307001874434E-4	DESIGN
from CommandlineParser	WITHOUT_CLASSIFICATION	0.9993105162277761	WITHOUT_CLASSIFICATION	6.894837722239332E-4	DESIGN
This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.998182929291957	WITHOUT_CLASSIFICATION	0.0018170707080431261	DESIGN
default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9996454652205555	WITHOUT_CLASSIFICATION	3.5453477944452926E-4	DESIGN
Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.8741952426743957	WITHOUT_CLASSIFICATION	0.12580475732560428	DESIGN
Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.990738414146088	WITHOUT_CLASSIFICATION	0.009261585853911928	DESIGN
try the normal property first	WITHOUT_CLASSIFICATION	0.9999823510532783	WITHOUT_CLASSIFICATION	1.7648946721753504E-5	DESIGN
verify it if it's there	WITHOUT_CLASSIFICATION	0.9998241073946276	WITHOUT_CLASSIFICATION	1.7589260537235286E-4	DESIGN
verify it if it's there	WITHOUT_CLASSIFICATION	0.9998241073946276	WITHOUT_CLASSIFICATION	1.7589260537235286E-4	DESIGN
try loading from classloader resources	WITHOUT_CLASSIFICATION	0.999786428535272	WITHOUT_CLASSIFICATION	2.1357146472812577E-4	DESIGN
otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9998599777431356	WITHOUT_CLASSIFICATION	1.4002225686436274E-4	DESIGN
We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9998838987947712	WITHOUT_CLASSIFICATION	1.1610120522874112E-4	DESIGN
consume the file name	WITHOUT_CLASSIFICATION	0.9996885682893846	WITHOUT_CLASSIFICATION	3.114317106153543E-4	DESIGN
Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9998459797779942	WITHOUT_CLASSIFICATION	1.5402022200579108E-4	DESIGN
try cwd first	WITHOUT_CLASSIFICATION	0.9999790598706747	WITHOUT_CLASSIFICATION	2.0940129325360485E-5	DESIGN
ruby interpreter compatibilty Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9995391999633793	WITHOUT_CLASSIFICATION	4.608000366206969E-4	DESIGN
KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.8218386155618331	DESIGN	0.17816138443816684	WITHOUT_CLASSIFICATION
@JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9997348894160303	WITHOUT_CLASSIFICATION	2.6511058396978533E-4	DESIGN
@JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9997423144659144	WITHOUT_CLASSIFICATION	2.576855340855163E-4	DESIGN
@JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9997348894160303	WITHOUT_CLASSIFICATION	2.6511058396978533E-4	DESIGN
symbol string must be interned	WITHOUT_CLASSIFICATION	0.9997363614910234	WITHOUT_CLASSIFICATION	2.63638508976523E-4	DESIGN
assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9910761361353577	WITHOUT_CLASSIFICATION	0.008923863864642308	DESIGN
Symbol class methods.	WITHOUT_CLASSIFICATION	0.9974859719229034	WITHOUT_CLASSIFICATION	0.0025140280770965077	DESIGN
TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.5200263802944265	DESIGN	0.4799736197055734	WITHOUT_CLASSIFICATION
This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9930815527846169	WITHOUT_CLASSIFICATION	0.006918447215383127	DESIGN
we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9948796068991235	WITHOUT_CLASSIFICATION	0.005120393100876523	DESIGN
must be power of 2!	WITHOUT_CLASSIFICATION	0.9996303238086232	WITHOUT_CLASSIFICATION	3.6967619137688346E-4	DESIGN
note all fields are final -- rehash creates new entries when necessary. as documented in java.util.concurrent.ConcurrentHashMap.java, that will statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999823005219348	WITHOUT_CLASSIFICATION	1.7699478065174745E-5	DESIGN
assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9910761361353577	WITHOUT_CLASSIFICATION	0.008923863864642308	DESIGN
try lookup again under lock	WITHOUT_CLASSIFICATION	0.999990154378827	WITHOUT_CLASSIFICATION	9.845621173030212E-6	DESIGN
try lookup again under lock	WITHOUT_CLASSIFICATION	0.999990154378827	WITHOUT_CLASSIFICATION	9.845621173030212E-6	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9991785021398552	WITHOUT_CLASSIFICATION	8.214978601448513E-4	DESIGN
Single node on list	WITHOUT_CLASSIFICATION	0.9997723103295165	WITHOUT_CLASSIFICATION	2.2768967048340992E-4	DESIGN
Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9985438766277344	WITHOUT_CLASSIFICATION	0.0014561233722656176	DESIGN
Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999610278610712	WITHOUT_CLASSIFICATION	3.8972138928745345E-5	DESIGN
Check the length every iteration, since the block can modify this string.	WITHOUT_CLASSIFICATION	0.9825629078061563	WITHOUT_CLASSIFICATION	0.017437092193843703	DESIGN
we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9954005159867227	WITHOUT_CLASSIFICATION	0.004599484013277216	DESIGN
not so backwards-compatible here, but no one should have been calling this anyway.	WITHOUT_CLASSIFICATION	0.9850779979635068	WITHOUT_CLASSIFICATION	0.014922002036493211	DESIGN
Profile	WITHOUT_CLASSIFICATION	0.9995257760841513	WITHOUT_CLASSIFICATION	4.7422391584874896E-4	DESIGN
static private final String TRANSLIT = "translit";	WITHOUT_CLASSIFICATION	0.999773226715356	WITHOUT_CLASSIFICATION	2.2677328464396773E-4	DESIGN
treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999945151955546	WITHOUT_CLASSIFICATION	5.484804445340801E-6	DESIGN
invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9998967075187806	WITHOUT_CLASSIFICATION	1.0329248121940134E-4	DESIGN
Methods of the Nil Class (nil_):	WITHOUT_CLASSIFICATION	0.9999514801174585	WITHOUT_CLASSIFICATION	4.851988254138234E-5	DESIGN
Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999628336722013	WITHOUT_CLASSIFICATION	3.716632779860236E-5	DESIGN
Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9986192373358294	WITHOUT_CLASSIFICATION	0.0013807626641706345	DESIGN
must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9998115175785266	WITHOUT_CLASSIFICATION	1.8848242147348625E-4	DESIGN
reset the state	WITHOUT_CLASSIFICATION	0.9999077352126924	WITHOUT_CLASSIFICATION	9.226478730759859E-5	DESIGN
Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9989657842569574	WITHOUT_CLASSIFICATION	0.0010342157430426734	DESIGN
rb_match_busy	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
str is frozen	WITHOUT_CLASSIFICATION	0.9996296770205678	WITHOUT_CLASSIFICATION	3.7032297943220073E-4	DESIGN
MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9971182369773208	WITHOUT_CLASSIFICATION	0.00288176302267918	DESIGN
JRubyServer	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.999043041381612	WITHOUT_CLASSIFICATION	9.56958618387925E-4	DESIGN
boot the Object class	WITHOUT_CLASSIFICATION	0.9980579806236711	WITHOUT_CLASSIFICATION	0.0019420193763288267	DESIGN
Methods of the Object class (rb_obj_):	WITHOUT_CLASSIFICATION	0.9994795705736851	WITHOUT_CLASSIFICATION	5.204294263149568E-4	DESIGN
update superclass reference	WITHOUT_CLASSIFICATION	0.999977031912923	WITHOUT_CLASSIFICATION	2.2968087077028304E-5	DESIGN
undo check	WITHOUT_CLASSIFICATION	0.9998462496510016	WITHOUT_CLASSIFICATION	1.5375034899855447E-4	DESIGN
This is a non-standard method; have we decided to start extending Ruby? classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9963930943213039	WITHOUT_CLASSIFICATION	0.003606905678696152	DESIGN
boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999166809566051	WITHOUT_CLASSIFICATION	8.331904339480593E-5	DESIGN
this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9939652042240708	WITHOUT_CLASSIFICATION	0.006034795775929271	DESIGN
use parent's marshal	WITHOUT_CLASSIFICATION	0.998834210536753	WITHOUT_CLASSIFICATION	0.0011657894632470748	DESIGN
use parent's marshal	WITHOUT_CLASSIFICATION	0.998834210536753	WITHOUT_CLASSIFICATION	0.0011657894632470748	DESIGN
could be pulled down to RubyClass in future rb_class_boot	WITHOUT_CLASSIFICATION	0.9984171312417758	WITHOUT_CLASSIFICATION	0.001582868758224133	DESIGN
remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9996243839575263	WITHOUT_CLASSIFICATION	3.756160424737528E-4	DESIGN
add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9996580233215632	WITHOUT_CLASSIFICATION	3.41976678436892E-4	DESIGN
update all subclasses	WITHOUT_CLASSIFICATION	0.999833719325319	WITHOUT_CLASSIFICATION	1.6628067468111305E-4	DESIGN
fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9998728330058266	WITHOUT_CLASSIFICATION	1.2716699417333893E-4	DESIGN
static initializing method	WITHOUT_CLASSIFICATION	0.999432372349617	WITHOUT_CLASSIFICATION	5.676276503829184E-4	DESIGN
standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9994082598764473	WITHOUT_CLASSIFICATION	5.917401235527338E-4	DESIGN
no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999600720022822	WITHOUT_CLASSIFICATION	3.992799771782492E-5	DESIGN
non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9989063287287487	WITHOUT_CLASSIFICATION	0.0010936712712513311	DESIGN
indices for temp values	WITHOUT_CLASSIFICATION	0.9998936398597823	WITHOUT_CLASSIFICATION	1.0636014021771903E-4	DESIGN
self method name	WITHOUT_CLASSIFICATION	0.9980723920395929	WITHOUT_CLASSIFICATION	0.0019276079604071605	DESIGN
the default allocator	WITHOUT_CLASSIFICATION	0.9996618522738377	WITHOUT_CLASSIFICATION	3.381477261622226E-4	DESIGN
Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.999752840754928	WITHOUT_CLASSIFICATION	2.471592450720873E-4	DESIGN
do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9990864774241158	WITHOUT_CLASSIFICATION	9.135225758842414E-4	DESIGN
Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9998406639380618	WITHOUT_CLASSIFICATION	1.593360619382639E-4	DESIGN
================ Singleton Methods ================	WITHOUT_CLASSIFICATION	0.9997118289872164	WITHOUT_CLASSIFICATION	2.881710127835664E-4	DESIGN
Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.8956299501314511	WITHOUT_CLASSIFICATION	0.10437004986854893	DESIGN
Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9998128730514776	WITHOUT_CLASSIFICATION	1.8712694852249573E-4	DESIGN
MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999274997801505	WITHOUT_CLASSIFICATION	7.250021984948778E-5	DESIGN
NOTE: Serialization is primarily supported for testing purposes, and there is no general guarantee that serialization will work correctly. Specifically, instance variables pointing at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999847269314868	WITHOUT_CLASSIFICATION	1.5273068513153932E-5	DESIGN
write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9991762925022416	WITHOUT_CLASSIFICATION	8.237074977583784E-4	DESIGN
rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9993882542945619	WITHOUT_CLASSIFICATION	6.117457054381409E-4	DESIGN
0x3fff_ffff -0x4000_0000	WITHOUT_CLASSIFICATION	0.9992078911340695	WITHOUT_CLASSIFICATION	7.921088659305108E-4	DESIGN
a gotcha	WITHOUT_CLASSIFICATION	0.9984948237215464	WITHOUT_CLASSIFICATION	0.0015051762784535846	DESIGN
Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.999824552169811	WITHOUT_CLASSIFICATION	1.7544783018897685E-4	DESIGN
A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999211668384609	WITHOUT_CLASSIFICATION	7.883316153906862E-5	DESIGN
Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9994216267495174	WITHOUT_CLASSIFICATION	5.783732504826066E-4	DESIGN
Java Doubles are 64 bit long:	WITHOUT_CLASSIFICATION	0.9963421246622176	WITHOUT_CLASSIFICATION	0.003657875337782455	DESIGN
Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9998406639380618	WITHOUT_CLASSIFICATION	1.593360619382639E-4	DESIGN
don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9998389888591062	WITHOUT_CLASSIFICATION	1.6101114089387653E-4	DESIGN
Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9967667883937128	WITHOUT_CLASSIFICATION	0.0032332116062872606	DESIGN
MRI behavior:	WITHOUT_CLASSIFICATION	0.9996685144079039	WITHOUT_CLASSIFICATION	3.3148559209605915E-4	DESIGN
Numeric.equal	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
provider is not available	WITHOUT_CLASSIFICATION	0.993349057214451	WITHOUT_CLASSIFICATION	0.006650942785548937	DESIGN
bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9965592624323367	WITHOUT_CLASSIFICATION	0.0034407375676632455	DESIGN
fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9984602224183959	WITHOUT_CLASSIFICATION	0.0015397775816039735	DESIGN
RubyDigest	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9800936171428417	WITHOUT_CLASSIFICATION	0.01990638285715827	DESIGN
synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9997459406140583	WITHOUT_CLASSIFICATION	2.5405938594171587E-4	DESIGN
we only add live threads	WITHOUT_CLASSIFICATION	0.999735312538758	WITHOUT_CLASSIFICATION	2.646874612419909E-4	DESIGN
use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9996975388876347	WITHOUT_CLASSIFICATION	3.0246111236523486E-4	DESIGN
handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9996031606359048	WITHOUT_CLASSIFICATION	3.968393640951192E-4	DESIGN
JRubyService	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
while	WITHOUT_CLASSIFICATION	0.9997976447472688	WITHOUT_CLASSIFICATION	2.0235525273107815E-4	DESIGN
\OOO	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
CRuby uses sprintf(buf, "%.g", FLOAT_DIG, d); This pattern adjusts the output of String.pattern("%g") to mimic the C version.	WITHOUT_CLASSIFICATION	0.9965599016285867	WITHOUT_CLASSIFICATION	0.003440098371413256	DESIGN
mask off "once" flag	WITHOUT_CLASSIFICATION	0.9998872719878938	WITHOUT_CLASSIFICATION	1.1272801210618987E-4	DESIGN
used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9674761610859928	WITHOUT_CLASSIFICATION	0.032523838914007175	DESIGN
internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9991304614117619	WITHOUT_CLASSIFICATION	8.695385882381597E-4	DESIGN
silent ?	WITHOUT_CLASSIFICATION	0.9980364492068469	WITHOUT_CLASSIFICATION	0.001963550793153155	DESIGN
\xHH	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
\M-X, \M-\C-X, \M-\cX	WITHOUT_CLASSIFICATION	0.9992078911340695	WITHOUT_CLASSIFICATION	7.921088659305108E-4	DESIGN
\C-X, \C-\M-X	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
\cX, \c\M-X	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
\O, \OO, \OOO or backref	WITHOUT_CLASSIFICATION	0.9994274671715588	WITHOUT_CLASSIFICATION	5.72532828441148E-4	DESIGN
MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9995685705332695	WITHOUT_CLASSIFICATION	4.3142946673050764E-4	DESIGN
Surrogates	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
do not load the class if not used	WITHOUT_CLASSIFICATION	0.6639812078686067	DESIGN	0.33601879213139335	WITHOUT_CLASSIFICATION
\0, \0O, \0OO	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
\xHH	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
\C-X, \C-\M-X	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
\M-X, \M-\C-X, \M-\cX	WITHOUT_CLASSIFICATION	0.9992078911340695	WITHOUT_CLASSIFICATION	7.921088659305108E-4	DESIGN
\\u{H HH HHH HHHH HHHHH HHHHHH ...}	WITHOUT_CLASSIFICATION	0.9991850795574373	WITHOUT_CLASSIFICATION	8.149204425626634E-4	DESIGN
\\uHHHH	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
\p{Hiragana}	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
inner switch	WITHOUT_CLASSIFICATION	0.9997453158894772	WITHOUT_CLASSIFICATION	2.5468411052270435E-4	DESIGN
newInstance here	WITHOUT_CLASSIFICATION	0.9984188215004822	WITHOUT_CLASSIFICATION	0.0015811784995178645	DESIGN
rb_reg_raise	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
rb_reg_desc	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9992078911340695	WITHOUT_CLASSIFICATION	7.921088659305108E-4	DESIGN
rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9992078911340695	WITHOUT_CLASSIFICATION	7.921088659305108E-4	DESIGN
rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999848821976958	WITHOUT_CLASSIFICATION	1.5117802304255803E-5	DESIGN
rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
option_to_str	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
Don't initialize with class Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9998894854026871	WITHOUT_CLASSIFICATION	1.1051459731295662E-4	DESIGN
args should be before block	WITHOUT_CLASSIFICATION	0.9918011327593768	WITHOUT_CLASSIFICATION	0.008198867240623325	DESIGN
args should be at end	WITHOUT_CLASSIFICATION	0.994639463718944	WITHOUT_CLASSIFICATION	0.005360536281056028	DESIGN
minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9975278514805797	WITHOUT_CLASSIFICATION	0.002472148519420306	DESIGN
minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9975278514805797	WITHOUT_CLASSIFICATION	0.002472148519420306	DESIGN
skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9996377307422644	WITHOUT_CLASSIFICATION	3.622692577355934E-4	DESIGN
start a new populator	WITHOUT_CLASSIFICATION	0.998580166984474	WITHOUT_CLASSIFICATION	0.0014198330155258878	DESIGN
check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.999797861478248	WITHOUT_CLASSIFICATION	2.021385217521118E-4	DESIGN
add all names for this annotation	WITHOUT_CLASSIFICATION	0.996804605319538	WITHOUT_CLASSIFICATION	0.0031953946804621097	DESIGN
no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.999079126277155	WITHOUT_CLASSIFICATION	9.208737228450582E-4	DESIGN
write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999448430540544	WITHOUT_CLASSIFICATION	5.515694594554988E-5	DESIGN
single method, use normal logic	WITHOUT_CLASSIFICATION	0.999906543454989	WITHOUT_CLASSIFICATION	9.34565450110088E-5	DESIGN
multimethod, new logic	WITHOUT_CLASSIFICATION	0.9982466248959129	WITHOUT_CLASSIFICATION	0.0017533751040871685	DESIGN
declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.995628994061309	WITHOUT_CLASSIFICATION	0.004371005938690985	DESIGN
inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9997526983099503	WITHOUT_CLASSIFICATION	2.4730169004969047E-4	DESIGN
RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9997348894160303	WITHOUT_CLASSIFICATION	2.6511058396978533E-4	DESIGN
}	WITHOUT_CLASSIFICATION	0.9991423480315459	WITHOUT_CLASSIFICATION	8.576519684540355E-4	DESIGN
fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9986942570735798	WITHOUT_CLASSIFICATION	0.0013057429264201818	DESIGN
refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9987121207740141	WITHOUT_CLASSIFICATION	0.0012878792259859869	DESIGN
If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9934344312598016	WITHOUT_CLASSIFICATION	0.006565568740198492	DESIGN
attribute set.	WITHOUT_CLASSIFICATION	0.9997893736095368	WITHOUT_CLASSIFICATION	2.1062639046331243E-4	DESIGN
element set	WITHOUT_CLASSIFICATION	0.9989232033397866	WITHOUT_CLASSIFICATION	0.001076796660213479	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9912773895974931	WITHOUT_CLASSIFICATION	0.008722610402506766	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9912773895974931	WITHOUT_CLASSIFICATION	0.008722610402506766	DESIGN
colon3	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
Colon3	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9959669210691479	WITHOUT_CLASSIFICATION	0.004033078930852147	DESIGN
For b.foo	WITHOUT_CLASSIFICATION	0.9996156667327142	WITHOUT_CLASSIFICATION	3.843332672858834E-4	DESIGN
instance config for the script run	WITHOUT_CLASSIFICATION	0.9960958848360064	WITHOUT_CLASSIFICATION	0.003904115163993579	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9912773895974931	WITHOUT_CLASSIFICATION	0.008722610402506766	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9912773895974931	WITHOUT_CLASSIFICATION	0.008722610402506766	DESIGN
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9997401512679934	WITHOUT_CLASSIFICATION	2.598487320066424E-4	DESIGN
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9997401512679934	WITHOUT_CLASSIFICATION	2.598487320066424E-4	DESIGN
RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9992402982188301	WITHOUT_CLASSIFICATION	7.597017811698342E-4	DESIGN
For 'b.foo'	WITHOUT_CLASSIFICATION	0.9998259813857481	WITHOUT_CLASSIFICATION	1.7401861425187038E-4	DESIGN
We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9890617804219222	WITHOUT_CLASSIFICATION	0.010938219578077784	DESIGN
something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.6486086247256063	WITHOUT_CLASSIFICATION	0.3513913752743936	DESIGN
Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9997265037388788	WITHOUT_CLASSIFICATION	2.7349626112119316E-4	DESIGN
Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9997265037388788	WITHOUT_CLASSIFICATION	2.7349626112119316E-4	DESIGN
do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9974018740248727	WITHOUT_CLASSIFICATION	0.0025981259751272604	DESIGN
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9988954546617003	WITHOUT_CLASSIFICATION	0.001104545338299798	DESIGN
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9996573706181798	WITHOUT_CLASSIFICATION	3.426293818201498E-4	DESIGN
never visited, should be fine	WITHOUT_CLASSIFICATION	0.994369023106479	WITHOUT_CLASSIFICATION	0.005630976893520951	DESIGN
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9997401512679934	WITHOUT_CLASSIFICATION	2.598487320066424E-4	DESIGN
The name of the variable	WITHOUT_CLASSIFICATION	0.9998157304514736	WITHOUT_CLASSIFICATION	1.8426954852620686E-4	DESIGN
If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9826135563001026	WITHOUT_CLASSIFICATION	0.017386443699897395	DESIGN
Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.999547470364239	WITHOUT_CLASSIFICATION	4.5252963576101216E-4	DESIGN
Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.994944640205452	WITHOUT_CLASSIFICATION	0.00505535979454799	DESIGN
no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.99721169081151	WITHOUT_CLASSIFICATION	0.0027883091884899837	DESIGN
optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9873552169150511	WITHOUT_CLASSIFICATION	0.01264478308494886	DESIGN
arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9991850795574373	WITHOUT_CLASSIFICATION	8.149204425626634E-4	DESIGN
no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9969592365944957	WITHOUT_CLASSIFICATION	0.0030407634055041846	DESIGN
set argv from main's args	WITHOUT_CLASSIFICATION	0.9981233653419077	WITHOUT_CLASSIFICATION	0.0018766346580923196	DESIGN
attribute set.	WITHOUT_CLASSIFICATION	0.9997893736095368	WITHOUT_CLASSIFICATION	2.1062639046331243E-4	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9912773895974931	WITHOUT_CLASSIFICATION	0.008722610402506766	DESIGN
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9997401512679934	WITHOUT_CLASSIFICATION	2.598487320066424E-4	DESIGN
The name of the variable	WITHOUT_CLASSIFICATION	0.9998157304514736	WITHOUT_CLASSIFICATION	1.8426954852620686E-4	DESIGN
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.8346380673071323	WITHOUT_CLASSIFICATION	0.16536193269286772	DESIGN
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.8346380673071323	WITHOUT_CLASSIFICATION	0.16536193269286772	DESIGN
block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.6144458114787785	DESIGN	0.38555418852122136	WITHOUT_CLASSIFICATION
assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9985996161373387	WITHOUT_CLASSIFICATION	0.0014003838626613478	DESIGN
in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9867359700443248	WITHOUT_CLASSIFICATION	0.01326402995567528	DESIGN
assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999204689858534	WITHOUT_CLASSIFICATION	7.953101414651798E-5	DESIGN
Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9539214361390523	WITHOUT_CLASSIFICATION	0.0460785638609477	DESIGN
Experimental class reification support, to create real Java classes for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9997235174872727	WITHOUT_CLASSIFICATION	2.7648251272727935E-4	DESIGN
This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9972724281372496	WITHOUT_CLASSIFICATION	0.002727571862750395	DESIGN
Make a nil node if no body. Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9942618739614989	WITHOUT_CLASSIFICATION	0.0057381260385011915	DESIGN
'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9992729207896933	WITHOUT_CLASSIFICATION	7.27079210306565E-4	DESIGN
now used as an interpreter event	WITHOUT_CLASSIFICATION	0.955978254692535	WITHOUT_CLASSIFICATION	0.04402174530746503	DESIGN
never visited, should be ok	WITHOUT_CLASSIFICATION	0.9873683616396085	WITHOUT_CLASSIFICATION	0.012631638360391544	DESIGN
If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.999897561264894	WITHOUT_CLASSIFICATION	1.024387351060516E-4	DESIGN
JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.999983094347686	WITHOUT_CLASSIFICATION	1.690565231411292E-5	DESIGN
element set	WITHOUT_CLASSIFICATION	0.9989232033397866	WITHOUT_CLASSIFICATION	0.001076796660213479	DESIGN
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9997401512679934	WITHOUT_CLASSIFICATION	2.598487320066424E-4	DESIGN
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9988954546617003	WITHOUT_CLASSIFICATION	0.001104545338299798	DESIGN
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9996573706181798	WITHOUT_CLASSIFICATION	3.426293818201498E-4	DESIGN
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9996573706181798	WITHOUT_CLASSIFICATION	3.426293818201498E-4	DESIGN
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9997401512679934	WITHOUT_CLASSIFICATION	2.598487320066424E-4	DESIGN
The name of the variable	WITHOUT_CLASSIFICATION	0.9998157304514736	WITHOUT_CLASSIFICATION	1.8426954852620686E-4	DESIGN
The name of the variable	WITHOUT_CLASSIFICATION	0.9998157304514736	WITHOUT_CLASSIFICATION	1.8426954852620686E-4	DESIGN
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.8346380673071323	WITHOUT_CLASSIFICATION	0.16536193269286772	DESIGN
Empirical Observations: null -> Some arity argsNode == this.argsNode then check for arity changes newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9995206833446821	WITHOUT_CLASSIFICATION	4.7931665531789584E-4	DESIGN
assert !(value instanceof RubyArray) : "Not an array";	WITHOUT_CLASSIFICATION	0.962475028335681	WITHOUT_CLASSIFICATION	0.03752497166431912	DESIGN
Serialization killed our dynamic scope. We can just create an empty one since serialization cannot serialize an eval (which is the only thing which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999534890350724	WITHOUT_CLASSIFICATION	4.651096492749427E-5	DESIGN
Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9842306758664794	WITHOUT_CLASSIFICATION	0.015769324133520727	DESIGN
We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9987886165735546	WITHOUT_CLASSIFICATION	0.0012113834264454607	DESIGN
assert thenBody != null : "thenBody is not null"; assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9530065752067386	WITHOUT_CLASSIFICATION	0.04699342479326144	DESIGN
add in reverse order	WITHOUT_CLASSIFICATION	0.9997143019234881	WITHOUT_CLASSIFICATION	2.856980765119483E-4	DESIGN
in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9988054412709374	WITHOUT_CLASSIFICATION	0.0011945587290625899	DESIGN
ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9992225902041809	WITHOUT_CLASSIFICATION	7.774097958190954E-4	DESIGN
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9988954546617003	WITHOUT_CLASSIFICATION	0.001104545338299798	DESIGN
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9996573706181798	WITHOUT_CLASSIFICATION	3.426293818201498E-4	DESIGN
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9996573706181798	WITHOUT_CLASSIFICATION	3.426293818201498E-4	DESIGN
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9997401512679934	WITHOUT_CLASSIFICATION	2.598487320066424E-4	DESIGN
Make a nil node if no body. Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9942618739614989	WITHOUT_CLASSIFICATION	0.0057381260385011915	DESIGN
now used as an interpreter event	WITHOUT_CLASSIFICATION	0.955978254692535	WITHOUT_CLASSIFICATION	0.04402174530746503	DESIGN
No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9999893592102618	WITHOUT_CLASSIFICATION	1.0640789738139711E-5	DESIGN
save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999995591906174	WITHOUT_CLASSIFICATION	4.408093824609703E-7	DESIGN
For 'foo'	WITHOUT_CLASSIFICATION	0.9996179266916304	WITHOUT_CLASSIFICATION	3.820733083695416E-4	DESIGN
For 'foo'	WITHOUT_CLASSIFICATION	0.9996179266916304	WITHOUT_CLASSIFICATION	3.820733083695416E-4	DESIGN
admittedly inefficient	WITHOUT_CLASSIFICATION	0.9864376682992757	WITHOUT_CLASSIFICATION	0.013562331700724378	DESIGN
JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999524566153262	WITHOUT_CLASSIFICATION	4.7543384673853035E-5	DESIGN
What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9987793650747168	WITHOUT_CLASSIFICATION	0.0012206349252832595	DESIGN
let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9989429226158513	WITHOUT_CLASSIFICATION	0.001057077384148662	DESIGN
just rethrow	WITHOUT_CLASSIFICATION	0.9994528841730712	WITHOUT_CLASSIFICATION	5.471158269288012E-4	DESIGN
just rethrow	WITHOUT_CLASSIFICATION	0.9994528841730712	WITHOUT_CLASSIFICATION	5.471158269288012E-4	DESIGN
clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9992772436485283	WITHOUT_CLASSIFICATION	7.227563514717786E-4	DESIGN
clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9992772436485283	WITHOUT_CLASSIFICATION	7.227563514717786E-4	DESIGN
no takers; bubble up	WITHOUT_CLASSIFICATION	0.9995465998184059	WITHOUT_CLASSIFICATION	4.5340018159408863E-4	DESIGN
no takers; bubble up	WITHOUT_CLASSIFICATION	0.9995465998184059	WITHOUT_CLASSIFICATION	4.5340018159408863E-4	DESIGN
Execute rescue block	WITHOUT_CLASSIFICATION	0.9996598780205929	WITHOUT_CLASSIFICATION	3.40121979407122E-4	DESIGN
If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9990725665651798	WITHOUT_CLASSIFICATION	9.274334348201091E-4	DESIGN
index of variable for this arg	WITHOUT_CLASSIFICATION	0.9824490575910609	WITHOUT_CLASSIFICATION	0.017550942408939042	DESIGN
only a marker interface	WITHOUT_CLASSIFICATION	0.9983080997826085	WITHOUT_CLASSIFICATION	0.0016919002173914652	DESIGN
don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9991034577196506	WITHOUT_CLASSIFICATION	8.965422803494785E-4	DESIGN
pragmas	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9982007429451577	WITHOUT_CLASSIFICATION	0.0017992570548422465	DESIGN
We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9925110481901415	WITHOUT_CLASSIFICATION	0.0074889518098586435	DESIGN
The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9998965104615603	WITHOUT_CLASSIFICATION	1.0348953843969967E-4	DESIGN
The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9990352115382919	WITHOUT_CLASSIFICATION	9.647884617079874E-4	DESIGN
Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9957588519490947	WITHOUT_CLASSIFICATION	0.004241148050905253	DESIGN
check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9967978965299574	WITHOUT_CLASSIFICATION	0.0032021034700426706	DESIGN
long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9935724632934886	WITHOUT_CLASSIFICATION	0.006427536706511363	DESIGN
ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9989821008444558	WITHOUT_CLASSIFICATION	0.0010178991555441458	DESIGN
ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9989821008444558	WITHOUT_CLASSIFICATION	0.0010178991555441458	DESIGN
long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.998321091863229	WITHOUT_CLASSIFICATION	0.0016789081367709203	DESIGN
we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9954005159867227	WITHOUT_CLASSIFICATION	0.004599484013277216	DESIGN
Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.953244163718651	WITHOUT_CLASSIFICATION	0.046755836281349106	DESIGN
encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9956237957017245	WITHOUT_CLASSIFICATION	0.004376204298275519	DESIGN
only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9655018193192149	WITHOUT_CLASSIFICATION	0.034498180680785175	DESIGN
otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9982781628310194	WITHOUT_CLASSIFICATION	0.001721837168980552	DESIGN
use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9932130152112018	WITHOUT_CLASSIFICATION	0.006786984788798243	DESIGN
unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.999944106365057	WITHOUT_CLASSIFICATION	5.589363494294073E-5	DESIGN
compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9998650560682891	WITHOUT_CLASSIFICATION	1.3494393171094093E-4	DESIGN
last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999586071618509	WITHOUT_CLASSIFICATION	4.1392838149101616E-5	DESIGN
compile first node only	WITHOUT_CLASSIFICATION	0.9996785326304557	WITHOUT_CLASSIFICATION	3.2146736954432703E-4	DESIGN
splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.99973206758002	WITHOUT_CLASSIFICATION	2.6793241997992163E-4	DESIGN
if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9956769935860433	WITHOUT_CLASSIFICATION	0.004323006413956674	DESIGN
NOTE: Currently this optimization is limited to the following situations: All expressions must be int-ranged literal fixnums It also still emits the code for the "safe" when logic, which is rather wasteful (since it essentially doubles each code body). As such it is normally disabled, but it serves as an example of how this optimization could be done. Ideally, it should be combined with the when processing to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.6636920773711964	WITHOUT_CLASSIFICATION	0.33630792262880366	DESIGN
aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9890775776777664	WITHOUT_CLASSIFICATION	0.010922422322233649	DESIGN
one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9984928353536627	WITHOUT_CLASSIFICATION	0.0015071646463372306	DESIGN
can't do it	WITHOUT_CLASSIFICATION	0.9997237958429618	WITHOUT_CLASSIFICATION	2.762041570381892E-4	DESIGN
otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9993421032551335	WITHOUT_CLASSIFICATION	6.578967448665102E-4	DESIGN
colon3, assign in Object	WITHOUT_CLASSIFICATION	0.999310132720813	WITHOUT_CLASSIFICATION	6.898672791870358E-4	DESIGN
colon3, assign in Object	WITHOUT_CLASSIFICATION	0.999310132720813	WITHOUT_CLASSIFICATION	6.898672791870358E-4	DESIGN
these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9987383859813845	WITHOUT_CLASSIFICATION	0.0012616140186154498	DESIGN
[IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass] [IRubyObject]	WITHOUT_CLASSIFICATION	0.9991850795574373	WITHOUT_CLASSIFICATION	8.149204425626634E-4	DESIGN
[]	WITHOUT_CLASSIFICATION	0.9992536958601167	WITHOUT_CLASSIFICATION	7.463041398833174E-4	DESIGN
[]	WITHOUT_CLASSIFICATION	0.9992536958601167	WITHOUT_CLASSIFICATION	7.463041398833174E-4	DESIGN
context.swapValues(); context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9991850795574373	WITHOUT_CLASSIFICATION	8.149204425626634E-4	DESIGN
[RubyClass] [RubyClass, RubyClass] [RubyClass] [] [self] [RubyClass] [RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9991864233578774	WITHOUT_CLASSIFICATION	8.135766421225005E-4	DESIGN
[RubyClass]	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
[RubyClass] [RubyClass, RubyClass] [RubyClass] []	WITHOUT_CLASSIFICATION	0.9991864233578774	WITHOUT_CLASSIFICATION	8.135766421225005E-4	DESIGN
if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9979883425186262	WITHOUT_CLASSIFICATION	0.0020116574813738818	DESIGN
inspect body and args	WITHOUT_CLASSIFICATION	0.9997876072243784	WITHOUT_CLASSIFICATION	2.12392775621623E-4	DESIGN
inspect body and args	WITHOUT_CLASSIFICATION	0.9997876072243784	WITHOUT_CLASSIFICATION	2.12392775621623E-4	DESIGN
check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9990856511101677	WITHOUT_CLASSIFICATION	9.143488898324284E-4	DESIGN
if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9990006670397267	WITHOUT_CLASSIFICATION	9.993329602732595E-4	DESIGN
invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9991912157924787	WITHOUT_CLASSIFICATION	8.08784207521252E-4	DESIGN
[IRubyObject] [IRubyObject, IRubyObject] [IRubyObject, RubyClass] [IRubyObject, RubyClass, RubyClass] [IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9991850795574373	WITHOUT_CLASSIFICATION	8.149204425626634E-4	DESIGN
[IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass] [IRubyObject]	WITHOUT_CLASSIFICATION	0.9991850795574373	WITHOUT_CLASSIFICATION	8.149204425626634E-4	DESIGN
[RubyClass] []	WITHOUT_CLASSIFICATION	0.9996620210562855	WITHOUT_CLASSIFICATION	3.3797894371449734E-4	DESIGN
[String] [String, String] [String] [String, RubyClass] [String, RubyClass, RubyClass] [String, RubyClass]	WITHOUT_CLASSIFICATION	0.9991850795574373	WITHOUT_CLASSIFICATION	8.149204425626634E-4	DESIGN
[String] [String, String] [String] [String, RubyClass] [String, RubyClass, RubyClass] [String, RubyClass]	WITHOUT_CLASSIFICATION	0.9991850795574373	WITHOUT_CLASSIFICATION	8.149204425626634E-4	DESIGN
no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9876537119646009	WITHOUT_CLASSIFICATION	0.01234628803539893	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998122735959382	WITHOUT_CLASSIFICATION	1.8772640406173496E-4	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998122735959382	WITHOUT_CLASSIFICATION	1.8772640406173496E-4	DESIGN
not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9988002343167555	WITHOUT_CLASSIFICATION	0.001199765683244467	DESIGN
not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9988002343167555	WITHOUT_CLASSIFICATION	0.001199765683244467	DESIGN
not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9988002343167555	WITHOUT_CLASSIFICATION	0.001199765683244467	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998122735959382	WITHOUT_CLASSIFICATION	1.8772640406173496E-4	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998122735959382	WITHOUT_CLASSIFICATION	1.8772640406173496E-4	DESIGN
no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9876537119646009	WITHOUT_CLASSIFICATION	0.01234628803539893	DESIGN
force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.998987314624379	WITHOUT_CLASSIFICATION	0.0010126853756209856	DESIGN
always false or nil	WITHOUT_CLASSIFICATION	0.9997092802945119	WITHOUT_CLASSIFICATION	2.907197054881181E-4	DESIGN
optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999742342386071	WITHOUT_CLASSIFICATION	2.576576139287803E-5	DESIGN
normal	WITHOUT_CLASSIFICATION	0.9997393181301786	WITHOUT_CLASSIFICATION	2.606818698214861E-4	DESIGN
compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9996332021617901	WITHOUT_CLASSIFICATION	3.66797838209919E-4	DESIGN
need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9968005749124558	WITHOUT_CLASSIFICATION	0.0031994250875441543	DESIGN
just push nil for pragmas	WITHOUT_CLASSIFICATION	0.999277389751928	WITHOUT_CLASSIFICATION	7.22610248071909E-4	DESIGN
"assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9998809810786943	WITHOUT_CLASSIFICATION	1.1901892130560985E-4	DESIGN
compile first node only	WITHOUT_CLASSIFICATION	0.9996785326304557	WITHOUT_CLASSIFICATION	3.2146736954432703E-4	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998122735959382	WITHOUT_CLASSIFICATION	1.8772640406173496E-4	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998122735959382	WITHOUT_CLASSIFICATION	1.8772640406173496E-4	DESIGN
eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9995215439080998	WITHOUT_CLASSIFICATION	4.7845609190021486E-4	DESIGN
try optz version	WITHOUT_CLASSIFICATION	0.9999740527219798	WITHOUT_CLASSIFICATION	2.59472780201777E-5	DESIGN
sizes must match	WITHOUT_CLASSIFICATION	0.9998712228967418	WITHOUT_CLASSIFICATION	1.2877710325815192E-4	DESIGN
expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999735807076727	WITHOUT_CLASSIFICATION	2.6419292327270296E-5	DESIGN
normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9997200035320042	WITHOUT_CLASSIFICATION	2.7999646799579757E-4	DESIGN
head must not be null and there must be no "args" (like arg)	WITHOUT_CLASSIFICATION	0.9968950036573139	WITHOUT_CLASSIFICATION	0.0031049963426860515	DESIGN
"head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9991919559472745	WITHOUT_CLASSIFICATION	8.080440527255983E-4	DESIGN
only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999012869819461	WITHOUT_CLASSIFICATION	9.871301805376949E-5	DESIGN
perform assignment for the next node	WITHOUT_CLASSIFICATION	0.999746420074595	WITHOUT_CLASSIFICATION	2.5357992540497057E-4	DESIGN
if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9976948960442156	WITHOUT_CLASSIFICATION	0.002305103955784424	DESIGN
RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9997348894160303	WITHOUT_CLASSIFICATION	2.6511058396978533E-4	DESIGN
done processing args	WITHOUT_CLASSIFICATION	0.998476382322074	WITHOUT_CLASSIFICATION	0.0015236176779258922	DESIGN
all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9998641845533612	WITHOUT_CLASSIFICATION	1.358154466386872E-4	DESIGN
assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9971585311848817	WITHOUT_CLASSIFICATION	0.0028414688151181876	DESIGN
if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9989760805402698	WITHOUT_CLASSIFICATION	0.0010239194597302628	DESIGN
[recv]	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
[recv]	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
[recv]	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
compile into array	WITHOUT_CLASSIFICATION	0.9938500298836328	WITHOUT_CLASSIFICATION	0.006149970116367183	DESIGN
compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9998111333998271	WITHOUT_CLASSIFICATION	1.8886660017287916E-4	DESIGN
check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999650586656321	WITHOUT_CLASSIFICATION	3.4941334367914985E-5	DESIGN
condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9707211492695524	WITHOUT_CLASSIFICATION	0.029278850730447507	DESIGN
force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999623469971833	WITHOUT_CLASSIFICATION	3.7653002816626307E-5	DESIGN
create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9986648973210648	WITHOUT_CLASSIFICATION	0.0013351026789351834	DESIGN
it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.996920610864956	WITHOUT_CLASSIFICATION	0.0030793891350439765	DESIGN
send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9993213433227714	WITHOUT_CLASSIFICATION	6.786566772284944E-4	DESIGN
single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.998124917382062	WITHOUT_CLASSIFICATION	0.0018750826179379273	DESIGN
leave as a normal array	WITHOUT_CLASSIFICATION	0.9998308691711161	WITHOUT_CLASSIFICATION	1.6913082888383502E-4	DESIGN
This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9830668240149931	WITHOUT_CLASSIFICATION	0.01693317598500687	DESIGN
The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9510488882547448	WITHOUT_CLASSIFICATION	0.04895111174525527	DESIGN
check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9990856511101677	WITHOUT_CLASSIFICATION	9.143488898324284E-4	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998122735959382	WITHOUT_CLASSIFICATION	1.8772640406173496E-4	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998122735959382	WITHOUT_CLASSIFICATION	1.8772640406173496E-4	DESIGN
no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9876537119646009	WITHOUT_CLASSIFICATION	0.01234628803539893	DESIGN
need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9968005749124558	WITHOUT_CLASSIFICATION	0.0031994250875441543	DESIGN
try optz version	WITHOUT_CLASSIFICATION	0.9999740527219798	WITHOUT_CLASSIFICATION	2.59472780201777E-5	DESIGN
expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999735807076727	WITHOUT_CLASSIFICATION	2.6419292327270296E-5	DESIGN
head must not be null and there must be no "args" (like arg)	WITHOUT_CLASSIFICATION	0.9968950036573139	WITHOUT_CLASSIFICATION	0.0031049963426860515	DESIGN
sizes must match	WITHOUT_CLASSIFICATION	0.9998712228967418	WITHOUT_CLASSIFICATION	1.2877710325815192E-4	DESIGN
"head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9991919559472745	WITHOUT_CLASSIFICATION	8.080440527255983E-4	DESIGN
if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9976948960442156	WITHOUT_CLASSIFICATION	0.002305103955784424	DESIGN
perform assignment for the next node	WITHOUT_CLASSIFICATION	0.999746420074595	WITHOUT_CLASSIFICATION	2.5357992540497057E-4	DESIGN
done processing args	WITHOUT_CLASSIFICATION	0.998476382322074	WITHOUT_CLASSIFICATION	0.0015236176779258922	DESIGN
Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9995998848172317	WITHOUT_CLASSIFICATION	4.001151827682481E-4	DESIGN
class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.7286357207771457	WITHOUT_CLASSIFICATION	0.2713642792228542	DESIGN
successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9984232061911984	WITHOUT_CLASSIFICATION	0.0015767938088015862	DESIGN
finally, grab the script	WITHOUT_CLASSIFICATION	0.9990849699266215	WITHOUT_CLASSIFICATION	9.150300733784042E-4	DESIGN
logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9974083053565993	WITHOUT_CLASSIFICATION	0.0025916946434006954	DESIGN
Time the compilation	WITHOUT_CLASSIFICATION	0.9989326068589034	WITHOUT_CLASSIFICATION	0.0010673931410966533	DESIGN
we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9964147551632991	WITHOUT_CLASSIFICATION	0.0035852448367009225	DESIGN
If we don't have a body, check for required or opt args if opt args, they could have side effects if required args, need to raise errors if too few args passed otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9985502824787508	WITHOUT_CLASSIFICATION	0.0014497175212492323	DESIGN
if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9989481525473528	WITHOUT_CLASSIFICATION	0.0010518474526472416	DESIGN
only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9995271394096822	WITHOUT_CLASSIFICATION	4.728605903177449E-4	DESIGN
normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9996998628269949	WITHOUT_CLASSIFICATION	3.001371730051536E-4	DESIGN
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9825788485415001	WITHOUT_CLASSIFICATION	0.017421151458499807	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9974832154153163	WITHOUT_CLASSIFICATION	0.0025167845846838428	DESIGN
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9943606493789322	WITHOUT_CLASSIFICATION	0.005639350621067766	DESIGN
return last value from execution	WITHOUT_CLASSIFICATION	0.9998981314800868	WITHOUT_CLASSIFICATION	1.0186851991329965E-4	DESIGN
end of variable scope	WITHOUT_CLASSIFICATION	0.9997891787095765	WITHOUT_CLASSIFICATION	2.1082129042343246E-4	DESIGN
method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9975086373631844	WITHOUT_CLASSIFICATION	0.0024913626368156536	DESIGN
Define the annotation for the method	WITHOUT_CLASSIFICATION	0.999322926554375	WITHOUT_CLASSIFICATION	6.770734456248822E-4	DESIGN
check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.999897182770025	WITHOUT_CLASSIFICATION	1.0281722997496218E-4	DESIGN
load block from [] version of method	WITHOUT_CLASSIFICATION	0.9991005550635002	WITHOUT_CLASSIFICATION	8.994449364998346E-4	DESIGN
normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9998294286736863	WITHOUT_CLASSIFICATION	1.705713263137144E-4	DESIGN
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9900222061813765	WITHOUT_CLASSIFICATION	0.00997779381862353	DESIGN
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9900222061813765	WITHOUT_CLASSIFICATION	0.00997779381862353	DESIGN
value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9985631558488223	WITHOUT_CLASSIFICATION	0.001436844151177726	DESIGN
receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9989178113854983	WITHOUT_CLASSIFICATION	0.0010821886145017086	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9992554474196457	WITHOUT_CLASSIFICATION	7.445525803543375E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9992554474196457	WITHOUT_CLASSIFICATION	7.445525803543375E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9992554474196457	WITHOUT_CLASSIFICATION	7.445525803543375E-4	DESIGN
self	WITHOUT_CLASSIFICATION	0.9983406011165444	WITHOUT_CLASSIFICATION	0.001659398883455559	DESIGN
self	WITHOUT_CLASSIFICATION	0.9983406011165444	WITHOUT_CLASSIFICATION	0.001659398883455559	DESIGN
self	WITHOUT_CLASSIFICATION	0.9983406011165444	WITHOUT_CLASSIFICATION	0.001659398883455559	DESIGN
self	WITHOUT_CLASSIFICATION	0.9983406011165444	WITHOUT_CLASSIFICATION	0.001659398883455559	DESIGN
arg0	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
arg0	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
arg0	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
arg1	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
arg1	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
arg2	WITHOUT_CLASSIFICATION	0.9992571620950894	WITHOUT_CLASSIFICATION	7.428379049105781E-4	DESIGN
args	WITHOUT_CLASSIFICATION	0.9991847862585164	WITHOUT_CLASSIFICATION	8.1521374148369E-4	DESIGN
receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9989178113854983	WITHOUT_CLASSIFICATION	0.0010821886145017086	DESIGN
select appropriate call site dup receiver load self	WITHOUT_CLASSIFICATION	0.9760375187399319	WITHOUT_CLASSIFICATION	0.02396248126006802	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9992554474196457	WITHOUT_CLASSIFICATION	7.445525803543375E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9992554474196457	WITHOUT_CLASSIFICATION	7.445525803543375E-4	DESIGN
self	WITHOUT_CLASSIFICATION	0.9983406011165444	WITHOUT_CLASSIFICATION	0.001659398883455559	DESIGN
self	WITHOUT_CLASSIFICATION	0.9983406011165444	WITHOUT_CLASSIFICATION	0.001659398883455559	DESIGN
self	WITHOUT_CLASSIFICATION	0.9983406011165444	WITHOUT_CLASSIFICATION	0.001659398883455559	DESIGN
arg0	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
arg0	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
arg1	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
args	WITHOUT_CLASSIFICATION	0.9991847862585164	WITHOUT_CLASSIFICATION	8.1521374148369E-4	DESIGN
get call site and thread context	WITHOUT_CLASSIFICATION	0.99930327685432	WITHOUT_CLASSIFICATION	6.967231456800859E-4	DESIGN
get call site and thread context	WITHOUT_CLASSIFICATION	0.99930327685432	WITHOUT_CLASSIFICATION	6.967231456800859E-4	DESIGN
evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9992827818049096	WITHOUT_CLASSIFICATION	7.172181950904239E-4	DESIGN
evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9992827818049096	WITHOUT_CLASSIFICATION	7.172181950904239E-4	DESIGN
invoke	WITHOUT_CLASSIFICATION	0.9994062985430757	WITHOUT_CLASSIFICATION	5.937014569242319E-4	DESIGN
invoke	WITHOUT_CLASSIFICATION	0.9994062985430757	WITHOUT_CLASSIFICATION	5.937014569242319E-4	DESIGN
check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999123426524373	WITHOUT_CLASSIFICATION	8.765734756267107E-5	DESIGN
not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9981565891140226	WITHOUT_CLASSIFICATION	0.0018434108859773674	DESIGN
not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9981565891140226	WITHOUT_CLASSIFICATION	0.0018434108859773674	DESIGN
thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9997579392510058	WITHOUT_CLASSIFICATION	2.4206074899422336E-4	DESIGN
thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9997579392510058	WITHOUT_CLASSIFICATION	2.4206074899422336E-4	DESIGN
eval value for assignment	WITHOUT_CLASSIFICATION	0.9997982927961715	WITHOUT_CLASSIFICATION	2.0170720382849664E-4	DESIGN
call site	WITHOUT_CLASSIFICATION	0.9982107958021402	WITHOUT_CLASSIFICATION	0.0017892041978598196	DESIGN
call site	WITHOUT_CLASSIFICATION	0.9982107958021402	WITHOUT_CLASSIFICATION	0.0017892041978598196	DESIGN
depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.99956492083391	WITHOUT_CLASSIFICATION	4.350791660899001E-4	DESIGN
check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9990111341389007	WITHOUT_CLASSIFICATION	9.888658610992655E-4	DESIGN
eval value and save it	WITHOUT_CLASSIFICATION	0.9997505816699086	WITHOUT_CLASSIFICATION	2.4941833009140045E-4	DESIGN
self	WITHOUT_CLASSIFICATION	0.9983406011165444	WITHOUT_CLASSIFICATION	0.001659398883455559	DESIGN
self	WITHOUT_CLASSIFICATION	0.9983406011165444	WITHOUT_CLASSIFICATION	0.001659398883455559	DESIGN
depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.99956492083391	WITHOUT_CLASSIFICATION	4.350791660899001E-4	DESIGN
receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9996059878637302	WITHOUT_CLASSIFICATION	3.9401213626976463E-4	DESIGN
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
super uses current block if none given	WITHOUT_CLASSIFICATION	0.9990713651312648	WITHOUT_CLASSIFICATION	9.286348687351966E-4	DESIGN
args	WITHOUT_CLASSIFICATION	0.9991847862585164	WITHOUT_CLASSIFICATION	8.1521374148369E-4	DESIGN
block	WITHOUT_CLASSIFICATION	0.9992080616725169	WITHOUT_CLASSIFICATION	7.919383274832641E-4	DESIGN
block	WITHOUT_CLASSIFICATION	0.9992080616725169	WITHOUT_CLASSIFICATION	7.919383274832641E-4	DESIGN
no args, no block	WITHOUT_CLASSIFICATION	0.9996499079482807	WITHOUT_CLASSIFICATION	3.500920517193815E-4	DESIGN
no args, with block	WITHOUT_CLASSIFICATION	0.9995759361696817	WITHOUT_CLASSIFICATION	4.240638303183517E-4	DESIGN
with args, no block	WITHOUT_CLASSIFICATION	0.9995759361696817	WITHOUT_CLASSIFICATION	4.240638303183517E-4	DESIGN
with args, with block	WITHOUT_CLASSIFICATION	0.9989982597432355	WITHOUT_CLASSIFICATION	0.001001740256764511	DESIGN
adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9991850795574373	WITHOUT_CLASSIFICATION	8.149204425626634E-4	DESIGN
pop extra attr value	WITHOUT_CLASSIFICATION	0.9995394981474258	WITHOUT_CLASSIFICATION	4.6050185257426204E-4	DESIGN
pop extra attr value	WITHOUT_CLASSIFICATION	0.9995394981474258	WITHOUT_CLASSIFICATION	4.6050185257426204E-4	DESIGN
arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9998238795100445	WITHOUT_CLASSIFICATION	1.7612048995543957E-4	DESIGN
arg	WITHOUT_CLASSIFICATION	0.9992926343684388	WITHOUT_CLASSIFICATION	7.07365631561191E-4	DESIGN
arg	WITHOUT_CLASSIFICATION	0.9992926343684388	WITHOUT_CLASSIFICATION	7.07365631561191E-4	DESIGN
self	WITHOUT_CLASSIFICATION	0.9983406011165444	WITHOUT_CLASSIFICATION	0.001659398883455559	DESIGN
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
args	WITHOUT_CLASSIFICATION	0.9991847862585164	WITHOUT_CLASSIFICATION	8.1521374148369E-4	DESIGN
block	WITHOUT_CLASSIFICATION	0.9992080616725169	WITHOUT_CLASSIFICATION	7.919383274832641E-4	DESIGN
no args, no block	WITHOUT_CLASSIFICATION	0.9996499079482807	WITHOUT_CLASSIFICATION	3.500920517193815E-4	DESIGN
no args, with block	WITHOUT_CLASSIFICATION	0.9995759361696817	WITHOUT_CLASSIFICATION	4.240638303183517E-4	DESIGN
with args, no block	WITHOUT_CLASSIFICATION	0.9995759361696817	WITHOUT_CLASSIFICATION	4.240638303183517E-4	DESIGN
with args, with block	WITHOUT_CLASSIFICATION	0.9989982597432355	WITHOUT_CLASSIFICATION	0.001001740256764511	DESIGN
arg	WITHOUT_CLASSIFICATION	0.9992926343684388	WITHOUT_CLASSIFICATION	7.07365631561191E-4	DESIGN
retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9997643885441257	WITHOUT_CLASSIFICATION	2.3561145587427E-4	DESIGN
use numbered access method	WITHOUT_CLASSIFICATION	0.9965465518497245	WITHOUT_CLASSIFICATION	0.0034534481502756027	DESIGN
retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9991668638013151	WITHOUT_CLASSIFICATION	8.331361986848344E-4	DESIGN
add name to call site list	WITHOUT_CLASSIFICATION	0.9970323017827946	WITHOUT_CLASSIFICATION	0.002967698217205469	DESIGN
module is on top of stack	WITHOUT_CLASSIFICATION	0.9983624056396242	WITHOUT_CLASSIFICATION	0.0016375943603758876	DESIGN
build scope names string	WITHOUT_CLASSIFICATION	0.9998015828334712	WITHOUT_CLASSIFICATION	1.984171665288899E-4	DESIGN
build descriptor string	WITHOUT_CLASSIFICATION	0.9997314735168427	WITHOUT_CLASSIFICATION	2.685264831573283E-4	DESIGN
build descriptor string	WITHOUT_CLASSIFICATION	0.9997314735168427	WITHOUT_CLASSIFICATION	2.685264831573283E-4	DESIGN
generate call sites initialization code	WITHOUT_CLASSIFICATION	0.998218431373486	WITHOUT_CLASSIFICATION	0.001781568626513982	DESIGN
generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9992556565799505	WITHOUT_CLASSIFICATION	7.443434200494968E-4	DESIGN
generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9992556565799505	WITHOUT_CLASSIFICATION	7.443434200494968E-4	DESIGN
generate constants initialization code	WITHOUT_CLASSIFICATION	0.999456360029962	WITHOUT_CLASSIFICATION	5.43639970038102E-4	DESIGN
generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9992556565799505	WITHOUT_CLASSIFICATION	7.443434200494968E-4	DESIGN
generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9992556565799505	WITHOUT_CLASSIFICATION	7.443434200494968E-4	DESIGN
generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9988956508170824	WITHOUT_CLASSIFICATION	0.0011043491829176358	DESIGN
generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9988956508170824	WITHOUT_CLASSIFICATION	0.0011043491829176358	DESIGN
generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9992169938352613	WITHOUT_CLASSIFICATION	7.830061647387839E-4	DESIGN
generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9992169938352613	WITHOUT_CLASSIFICATION	7.830061647387839E-4	DESIGN
generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9992556565799505	WITHOUT_CLASSIFICATION	7.443434200494968E-4	DESIGN
generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9986020235012352	WITHOUT_CLASSIFICATION	0.001397976498764786	DESIGN
adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9991850795574373	WITHOUT_CLASSIFICATION	8.149204425626634E-4	DESIGN
use IRubyObject[]	WITHOUT_CLASSIFICATION	0.998834210536753	WITHOUT_CLASSIFICATION	0.0011657894632470748	DESIGN
do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9994955863473555	WITHOUT_CLASSIFICATION	5.044136526444938E-4	DESIGN
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9645227726330605	WITHOUT_CLASSIFICATION	0.03547722736693949	DESIGN
No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999959494403751	WITHOUT_CLASSIFICATION	4.0505596249589835E-6	DESIGN
load Object under value	WITHOUT_CLASSIFICATION	0.9995314556728937	WITHOUT_CLASSIFICATION	4.685443271062895E-4	DESIGN
put under object array already present	WITHOUT_CLASSIFICATION	0.9999132949726895	WITHOUT_CLASSIFICATION	8.6705027310478E-5	DESIGN
if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9978731817308213	WITHOUT_CLASSIFICATION	0.002126818269178671	DESIGN
This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9997619868315084	WITHOUT_CLASSIFICATION	2.3801316849162563E-4	DESIGN
if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9993367884210411	WITHOUT_CLASSIFICATION	6.632115789589119E-4	DESIGN
if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9993367884210411	WITHOUT_CLASSIFICATION	6.632115789589119E-4	DESIGN
brute force construction inline	WITHOUT_CLASSIFICATION	0.9995740799720976	WITHOUT_CLASSIFICATION	4.2592002790253867E-4	DESIGN
brute force construction inline	WITHOUT_CLASSIFICATION	0.9995740799720976	WITHOUT_CLASSIFICATION	4.2592002790253867E-4	DESIGN
use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9987074533784995	WITHOUT_CLASSIFICATION	0.0012925466215004911	DESIGN
call isTrue on the result	WITHOUT_CLASSIFICATION	0.9993829238653373	WITHOUT_CLASSIFICATION	6.170761346626627E-4	DESIGN
call isTrue on the result	WITHOUT_CLASSIFICATION	0.9993829238653373	WITHOUT_CLASSIFICATION	6.170761346626627E-4	DESIGN
call isTrue on the result	WITHOUT_CLASSIFICATION	0.9993829238653373	WITHOUT_CLASSIFICATION	6.170761346626627E-4	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999117805226783	WITHOUT_CLASSIFICATION	8.821947732181867E-5	DESIGN
dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999433679633916	WITHOUT_CLASSIFICATION	5.663203660849279E-5	DESIGN
dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999433679633916	WITHOUT_CLASSIFICATION	5.663203660849279E-5	DESIGN
clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999719608808048	WITHOUT_CLASSIFICATION	2.8039119195216828E-5	DESIGN
check the condition	WITHOUT_CLASSIFICATION	0.9999376097187039	WITHOUT_CLASSIFICATION	6.239028129600551E-5	DESIGN
NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9995887917273768	WITHOUT_CLASSIFICATION	4.1120827262320595E-4	DESIGN
skip catch block	WITHOUT_CLASSIFICATION	0.9998760045334861	WITHOUT_CLASSIFICATION	1.239954665139032E-4	DESIGN
catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9996774045254432	WITHOUT_CLASSIFICATION	3.225954745567569E-4	DESIGN
next jump	WITHOUT_CLASSIFICATION	0.9987906840880769	WITHOUT_CLASSIFICATION	0.001209315911923107	DESIGN
exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9989915192234706	WITHOUT_CLASSIFICATION	0.0010084807765294202	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9974832154153163	WITHOUT_CLASSIFICATION	0.0025167845846838428	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9974832154153163	WITHOUT_CLASSIFICATION	0.0025167845846838428	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999117805226783	WITHOUT_CLASSIFICATION	8.821947732181867E-5	DESIGN
clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999719608808048	WITHOUT_CLASSIFICATION	2.8039119195216828E-5	DESIGN
EQ == 0 (i.e. false) pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9998571815295961	WITHOUT_CLASSIFICATION	1.4281847040389266E-4	DESIGN
check the condition	WITHOUT_CLASSIFICATION	0.9999376097187039	WITHOUT_CLASSIFICATION	6.239028129600551E-5	DESIGN
NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9995887917273768	WITHOUT_CLASSIFICATION	4.1120827262320595E-4	DESIGN
synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999314415351577	WITHOUT_CLASSIFICATION	6.855846484227264E-5	DESIGN
break jump	WITHOUT_CLASSIFICATION	0.9988681088704424	WITHOUT_CLASSIFICATION	0.0011318911295575586	DESIGN
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9991385994419963	WITHOUT_CLASSIFICATION	8.614005580037184E-4	DESIGN
[reg]	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9992834731312604	WITHOUT_CLASSIFICATION	7.165268687396332E-4	DESIGN
inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9992933059987448	WITHOUT_CLASSIFICATION	7.066940012552164E-4	DESIGN
inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9957198252992426	WITHOUT_CLASSIFICATION	0.004280174700757341	DESIGN
synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999314415351577	WITHOUT_CLASSIFICATION	6.855846484227264E-5	DESIGN
store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999500921428995	WITHOUT_CLASSIFICATION	4.990785710051361E-5	DESIGN
store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999500921428995	WITHOUT_CLASSIFICATION	4.990785710051361E-5	DESIGN
if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.975450963112549	WITHOUT_CLASSIFICATION	0.024549036887451067	DESIGN
retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9957829130471941	WITHOUT_CLASSIFICATION	0.004217086952805905	DESIGN
any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9991256547613094	WITHOUT_CLASSIFICATION	8.743452386906827E-4	DESIGN
and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9984153358088923	WITHOUT_CLASSIFICATION	0.001584664191107786	DESIGN
restore the original exception	WITHOUT_CLASSIFICATION	0.9993026312022854	WITHOUT_CLASSIFICATION	6.973687977146103E-4	DESIGN
Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9984775898583383	WITHOUT_CLASSIFICATION	0.0015224101416616948	DESIGN
rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9998210157133448	WITHOUT_CLASSIFICATION	1.789842866551854E-4	DESIGN
Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.997894979501135	WITHOUT_CLASSIFICATION	0.0021050204988650543	DESIGN
inside a loop, break out of it go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9997532553375105	WITHOUT_CLASSIFICATION	2.46744662489601E-4	DESIGN
false zero	WITHOUT_CLASSIFICATION	0.9999277351704123	WITHOUT_CLASSIFICATION	7.226482958768153E-5	DESIGN
load all arguments straight through	WITHOUT_CLASSIFICATION	0.9976608836828876	WITHOUT_CLASSIFICATION	0.002339116317112296	DESIGN
and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9984153358088923	WITHOUT_CLASSIFICATION	0.001584664191107786	DESIGN
restore the original exception	WITHOUT_CLASSIFICATION	0.9993026312022854	WITHOUT_CLASSIFICATION	6.973687977146103E-4	DESIGN
retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9963313414429991	WITHOUT_CLASSIFICATION	0.003668658557000889	DESIGN
push false	WITHOUT_CLASSIFICATION	0.9996979377529429	WITHOUT_CLASSIFICATION	3.0206224705705973E-4	DESIGN
method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9991850795574373	WITHOUT_CLASSIFICATION	8.149204425626634E-4	DESIGN
method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9992078911340695	WITHOUT_CLASSIFICATION	7.921088659305108E-4	DESIGN
EQ == 0 (i.e. false) [C]	WITHOUT_CLASSIFICATION	0.9997935150735358	WITHOUT_CLASSIFICATION	2.0648492646431447E-4	DESIGN
[C, C] [C, C, String] [C, null|C]	WITHOUT_CLASSIFICATION	0.9991850795574373	WITHOUT_CLASSIFICATION	8.149204425626634E-4	DESIGN
[C]	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
push true	WITHOUT_CLASSIFICATION	0.9994223353636205	WITHOUT_CLASSIFICATION	5.776646363796163E-4	DESIGN
EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999062889229452	WITHOUT_CLASSIFICATION	9.37110770548419E-5	DESIGN
[?, ?] [?, boolean]	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
[RubyModule] [RubyModule, String]	WITHOUT_CLASSIFICATION	0.9991850795574373	WITHOUT_CLASSIFICATION	8.149204425626634E-4	DESIGN
[boolean]	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9991323212741603	WITHOUT_CLASSIFICATION	8.676787258395927E-4	DESIGN
but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999204465643989	WITHOUT_CLASSIFICATION	7.955343560117425E-5	DESIGN
we re-set self to the class, but store the old self in a temporary local variable this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9984310213655597	WITHOUT_CLASSIFICATION	0.0015689786344402217	DESIGN
set self to the class	WITHOUT_CLASSIFICATION	0.9878433124682553	WITHOUT_CLASSIFICATION	0.012156687531744644	DESIGN
CLASS BODY	WITHOUT_CLASSIFICATION	0.9992195070463088	WITHOUT_CLASSIFICATION	7.804929536912166E-4	DESIGN
static scope	WITHOUT_CLASSIFICATION	0.9999343040701972	WITHOUT_CLASSIFICATION	6.569592980276819E-5	DESIGN
Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999248022577178	WITHOUT_CLASSIFICATION	7.519774228209501E-5	DESIGN
new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9991986829086098	WITHOUT_CLASSIFICATION	8.013170913902208E-4	DESIGN
CLASS BODY	WITHOUT_CLASSIFICATION	0.9992195070463088	WITHOUT_CLASSIFICATION	7.804929536912166E-4	DESIGN
static scope	WITHOUT_CLASSIFICATION	0.9999343040701972	WITHOUT_CLASSIFICATION	6.569592980276819E-5	DESIGN
Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999248022577178	WITHOUT_CLASSIFICATION	7.519774228209501E-5	DESIGN
finally with exception	WITHOUT_CLASSIFICATION	0.9984057319396994	WITHOUT_CLASSIFICATION	0.0015942680603005448	DESIGN
prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9855521902989695	WITHOUT_CLASSIFICATION	0.014447809701030575	DESIGN
otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9993831409225258	WITHOUT_CLASSIFICATION	6.16859077474315E-4	DESIGN
original exception is on stack	WITHOUT_CLASSIFICATION	0.9989121461918401	WITHOUT_CLASSIFICATION	0.0010878538081598736	DESIGN
RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9974937401526922	WITHOUT_CLASSIFICATION	0.002506259847307782	DESIGN
updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9998160982305168	WITHOUT_CLASSIFICATION	1.8390176948320904E-4	DESIGN
callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9996792744225164	WITHOUT_CLASSIFICATION	3.207255774836907E-4	DESIGN
prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9834297696817147	WITHOUT_CLASSIFICATION	0.016570230318285358	DESIGN
script object	WITHOUT_CLASSIFICATION	0.999487379477723	WITHOUT_CLASSIFICATION	5.126205222768736E-4	DESIGN
arities	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9127226123237467	WITHOUT_CLASSIFICATION	0.08727738767625332	DESIGN
we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9982010064397975	WITHOUT_CLASSIFICATION	0.0017989935602025174	DESIGN
we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9950854472587736	WITHOUT_CLASSIFICATION	0.004914552741226459	DESIGN
checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999405967581326	WITHOUT_CLASSIFICATION	5.940324186730347E-5	DESIGN
expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9995677308772579	WITHOUT_CLASSIFICATION	4.322691227421202E-4	DESIGN
normal case, create a new label	WITHOUT_CLASSIFICATION	0.9995904818757184	WITHOUT_CLASSIFICATION	4.09518124281577E-4	DESIGN
last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9947469328577792	WITHOUT_CLASSIFICATION	0.005253067142220863	DESIGN
do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9963221894663056	WITHOUT_CLASSIFICATION	0.0036778105336943896	DESIGN
just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.99962409786949	WITHOUT_CLASSIFICATION	3.7590213050993625E-4	DESIGN
just confirm args length == required	WITHOUT_CLASSIFICATION	0.9995031616182227	WITHOUT_CLASSIFICATION	4.968383817773027E-4	DESIGN
extract item from array	WITHOUT_CLASSIFICATION	0.9999855770688854	WITHOUT_CLASSIFICATION	1.4422931114603417E-5	DESIGN
index for the item	WITHOUT_CLASSIFICATION	0.9999541433092745	WITHOUT_CLASSIFICATION	4.5856690725583815E-5	DESIGN
index for the item	WITHOUT_CLASSIFICATION	0.9999541433092745	WITHOUT_CLASSIFICATION	4.5856690725583815E-5	DESIGN
prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9982135568046802	WITHOUT_CLASSIFICATION	0.0017864431953198354	DESIGN
prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9982135568046802	WITHOUT_CLASSIFICATION	0.0017864431953198354	DESIGN
next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9970274073464733	WITHOUT_CLASSIFICATION	0.0029725926535266564	DESIGN
next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9970274073464733	WITHOUT_CLASSIFICATION	0.0029725926535266564	DESIGN
now logic for each optional value	WITHOUT_CLASSIFICATION	0.9995206093066878	WITHOUT_CLASSIFICATION	4.793906933121953E-4	DESIGN
otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9983315488234974	WITHOUT_CLASSIFICATION	0.0016684511765025175	DESIGN
pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9972028295368506	WITHOUT_CLASSIFICATION	0.0027971704631493503	DESIGN
if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.999835829791892	WITHOUT_CLASSIFICATION	1.6417020810798367E-4	DESIGN
assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999808121031457	WITHOUT_CLASSIFICATION	1.9187896854309247E-5	DESIGN
block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999915767546637	WITHOUT_CLASSIFICATION	8.423245336259606E-6	DESIGN
first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9990522587949184	WITHOUT_CLASSIFICATION	9.477412050814706E-4	DESIGN
then optional args	WITHOUT_CLASSIFICATION	0.9998086510875198	WITHOUT_CLASSIFICATION	1.9134891248010627E-4	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9974832154153163	WITHOUT_CLASSIFICATION	0.0025167845846838428	DESIGN
now logic for each optional value	WITHOUT_CLASSIFICATION	0.9995206093066878	WITHOUT_CLASSIFICATION	4.793906933121953E-4	DESIGN
otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9983315488234974	WITHOUT_CLASSIFICATION	0.0016684511765025175	DESIGN
pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9972028295368506	WITHOUT_CLASSIFICATION	0.0027971704631493503	DESIGN
assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999808121031457	WITHOUT_CLASSIFICATION	1.9187896854309247E-5	DESIGN
block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999915767546637	WITHOUT_CLASSIFICATION	8.423245336259606E-6	DESIGN
if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9994018146152029	WITHOUT_CLASSIFICATION	5.981853847970231E-4	DESIGN
finally, post args	WITHOUT_CLASSIFICATION	0.9992081458973676	WITHOUT_CLASSIFICATION	7.918541026323266E-4	DESIGN
not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.995475578383732	WITHOUT_CLASSIFICATION	0.004524421616267993	DESIGN
not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.995475578383732	WITHOUT_CLASSIFICATION	0.004524421616267993	DESIGN
unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9987826573252789	WITHOUT_CLASSIFICATION	0.0012173426747210743	DESIGN
fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9997943624064667	WITHOUT_CLASSIFICATION	2.0563759353317885E-4	DESIGN
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9950007201188052	WITHOUT_CLASSIFICATION	0.004999279881194783	DESIGN
temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9995443034714868	WITHOUT_CLASSIFICATION	4.5569652851312764E-4	DESIGN
temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9995443034714868	WITHOUT_CLASSIFICATION	4.5569652851312764E-4	DESIGN
declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9997456065222851	WITHOUT_CLASSIFICATION	2.5439347771499126E-4	DESIGN
class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9894047945089275	WITHOUT_CLASSIFICATION	0.010595205491072643	DESIGN
store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9985308576668324	WITHOUT_CLASSIFICATION	0.0014691423331677003	DESIGN
load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.999399853061665	WITHOUT_CLASSIFICATION	6.00146938334895E-4	DESIGN
return in a class body raises error	WITHOUT_CLASSIFICATION	0.9991853043276554	WITHOUT_CLASSIFICATION	8.146956723446902E-4	DESIGN
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9943606493789322	WITHOUT_CLASSIFICATION	0.005639350621067766	DESIGN
return last value from execution	WITHOUT_CLASSIFICATION	0.9998981314800868	WITHOUT_CLASSIFICATION	1.0186851991329965E-4	DESIGN
end of variable scope	WITHOUT_CLASSIFICATION	0.9997891787095765	WITHOUT_CLASSIFICATION	2.1082129042343246E-4	DESIGN
method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9975086373631844	WITHOUT_CLASSIFICATION	0.0024913626368156536	DESIGN
load block from [] version of method	WITHOUT_CLASSIFICATION	0.9991005550635002	WITHOUT_CLASSIFICATION	8.994449364998346E-4	DESIGN
normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9998294286736863	WITHOUT_CLASSIFICATION	1.705713263137144E-4	DESIGN
declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9997456065222851	WITHOUT_CLASSIFICATION	2.5439347771499126E-4	DESIGN
class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9894047945089275	WITHOUT_CLASSIFICATION	0.010595205491072643	DESIGN
load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.999399853061665	WITHOUT_CLASSIFICATION	6.00146938334895E-4	DESIGN
we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9981926663949746	WITHOUT_CLASSIFICATION	0.001807333605025442	DESIGN
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9950007201188052	WITHOUT_CLASSIFICATION	0.004999279881194783	DESIGN
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9950007201188052	WITHOUT_CLASSIFICATION	0.004999279881194783	DESIGN
load all arguments straight through	WITHOUT_CLASSIFICATION	0.9976608836828876	WITHOUT_CLASSIFICATION	0.002339116317112296	DESIGN
load all arguments straight through	WITHOUT_CLASSIFICATION	0.9976608836828876	WITHOUT_CLASSIFICATION	0.002339116317112296	DESIGN
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9937524762952087	WITHOUT_CLASSIFICATION	0.0062475237047913915	DESIGN
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9937524762952087	WITHOUT_CLASSIFICATION	0.0062475237047913915	DESIGN
store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9998480966298744	WITHOUT_CLASSIFICATION	1.519033701254941E-4	DESIGN
if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9535550409513829	WITHOUT_CLASSIFICATION	0.04644495904861712	DESIGN
fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9975502501526763	WITHOUT_CLASSIFICATION	0.002449749847323674	DESIGN
default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9995832274143402	WITHOUT_CLASSIFICATION	4.167725856597526E-4	DESIGN
store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9979342476334822	WITHOUT_CLASSIFICATION	0.002065752366517897	DESIGN
store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9977039092685829	WITHOUT_CLASSIFICATION	0.002296090731417092	DESIGN
in 1.8 mode, this will be a RubyArray containing the arguments in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.986118889873022	WITHOUT_CLASSIFICATION	0.013881110126977986	DESIGN
no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9995004878158511	WITHOUT_CLASSIFICATION	4.995121841488582E-4	DESIGN
for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9990633607811649	WITHOUT_CLASSIFICATION	9.366392188351661E-4	DESIGN
set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9825788485415001	WITHOUT_CLASSIFICATION	0.017421151458499807	DESIGN
if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9969944210310702	WITHOUT_CLASSIFICATION	0.003005578968929794	DESIGN
verify the class	WITHOUT_CLASSIFICATION	0.9983010404482575	WITHOUT_CLASSIFICATION	0.0016989595517424932	DESIGN
create dir if necessary	WITHOUT_CLASSIFICATION	0.9935154194585548	WITHOUT_CLASSIFICATION	0.00648458054144517	DESIGN
Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9993843015029373	WITHOUT_CLASSIFICATION	6.156984970626667E-4	DESIGN
add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999858160817822	WITHOUT_CLASSIFICATION	1.4183918217747602E-5	DESIGN
thread context	WITHOUT_CLASSIFICATION	0.9998660754952481	WITHOUT_CLASSIFICATION	1.3392450475190463E-4	DESIGN
line number	WITHOUT_CLASSIFICATION	0.9998890393089718	WITHOUT_CLASSIFICATION	1.1096069102821285E-4	DESIGN
invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9993831333829389	WITHOUT_CLASSIFICATION	6.168666170611007E-4	DESIGN
load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9968662778254742	WITHOUT_CLASSIFICATION	0.0031337221745257513	DESIGN
return last value from execution	WITHOUT_CLASSIFICATION	0.9998981314800868	WITHOUT_CLASSIFICATION	1.0186851991329965E-4	DESIGN
method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9975086373631844	WITHOUT_CLASSIFICATION	0.0024913626368156536	DESIGN
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9900222061813765	WITHOUT_CLASSIFICATION	0.00997779381862353	DESIGN
block	WITHOUT_CLASSIFICATION	0.9992080616725169	WITHOUT_CLASSIFICATION	7.919383274832641E-4	DESIGN
block	WITHOUT_CLASSIFICATION	0.9992080616725169	WITHOUT_CLASSIFICATION	7.919383274832641E-4	DESIGN
we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9981926663949746	WITHOUT_CLASSIFICATION	0.001807333605025442	DESIGN
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9950007201188052	WITHOUT_CLASSIFICATION	0.004999279881194783	DESIGN
load all arguments straight through	WITHOUT_CLASSIFICATION	0.9976608836828876	WITHOUT_CLASSIFICATION	0.002339116317112296	DESIGN
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9937524762952087	WITHOUT_CLASSIFICATION	0.0062475237047913915	DESIGN
add Script#run impl, used for running this script with a specified threadcontext and self root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9906916782186351	DESIGN	0.009308321781364894	WITHOUT_CLASSIFICATION
add main impl, used for detached or command-line execution of this script with a new runtime root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9186408410466419	DESIGN	0.08135915895335803	WITHOUT_CLASSIFICATION
construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999288943424751	WITHOUT_CLASSIFICATION	7.110565752488128E-5	DESIGN
JRUBY-3014: make __FILE__ dynamically determined at load time, but we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9938242478963091	WITHOUT_CLASSIFICATION	0.006175752103691003	DESIGN
ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.998242513350214	WITHOUT_CLASSIFICATION	0.0017574866497860773	DESIGN
ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.998242513350214	WITHOUT_CLASSIFICATION	0.0017574866497860773	DESIGN
lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.994254798772249	WITHOUT_CLASSIFICATION	0.0057452012277510135	DESIGN
boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9995526768713701	WITHOUT_CLASSIFICATION	4.4732312862987543E-4	DESIGN
invoke static __file__	WITHOUT_CLASSIFICATION	0.9998196851269957	WITHOUT_CLASSIFICATION	1.8031487300431998E-4	DESIGN
exact arg list __file__	WITHOUT_CLASSIFICATION	0.9996154381033802	WITHOUT_CLASSIFICATION	3.845618966198166E-4	DESIGN
declare the field	WITHOUT_CLASSIFICATION	0.9997570438826905	WITHOUT_CLASSIFICATION	2.4295611730950638E-4	DESIGN
declare the field	WITHOUT_CLASSIFICATION	0.9997570438826905	WITHOUT_CLASSIFICATION	2.4295611730950638E-4	DESIGN
not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9972390925393254	WITHOUT_CLASSIFICATION	0.002760907460674636	DESIGN
normal closure	WITHOUT_CLASSIFICATION	0.9999726001034352	WITHOUT_CLASSIFICATION	2.7399896564696406E-5	DESIGN
end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9998723049213496	WITHOUT_CLASSIFICATION	1.2769507865046135E-4	DESIGN
we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9996328862090642	WITHOUT_CLASSIFICATION	3.671137909358546E-4	DESIGN
handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9987438382968112	WITHOUT_CLASSIFICATION	0.0012561617031887572	DESIGN
jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9996771244740141	WITHOUT_CLASSIFICATION	3.2287552598581044E-4	DESIGN
Ruby name	WITHOUT_CLASSIFICATION	0.998873220542515	WITHOUT_CLASSIFICATION	0.001126779457484988	DESIGN
Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9972508808008703	WITHOUT_CLASSIFICATION	0.0027491191991295665	DESIGN
Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9967047173779934	WITHOUT_CLASSIFICATION	0.003295282622006712	DESIGN
We need to ensure that the variable names generated here cannot conflict with ruby variable names! Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9991125322462662	WITHOUT_CLASSIFICATION	8.874677537338418E-4	DESIGN
Does this method define code? Default is yes -- which basically leads to pessimistic but safe optimizations But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9995499654476212	WITHOUT_CLASSIFICATION	4.500345523787754E-4	DESIGN
Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9964816951250042	WITHOUT_CLASSIFICATION	0.00351830487499571	DESIGN
NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner with outer loops encountered before inner loops, and inner loops finished before outer ones. So, we can keep track of loops in a loop stack which keeps track of loops as they are encountered. This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9997670948713532	WITHOUT_CLASSIFICATION	2.3290512864675313E-4	DESIGN
Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9981318182365597	WITHOUT_CLASSIFICATION	0.001868181763440275	DESIGN
Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9988250967781143	WITHOUT_CLASSIFICATION	0.0011749032218857263	DESIGN
_lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9967818432879876	WITHOUT_CLASSIFICATION	0.003218156712012342	DESIGN
List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9997013664036918	WITHOUT_CLASSIFICATION	2.9863359630820217E-4	DESIGN
Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9992936608105624	WITHOUT_CLASSIFICATION	7.063391894376475E-4	DESIGN
Insert nesting level to ensure variable names don't conflict across nested scopes! i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9993748231757955	WITHOUT_CLASSIFICATION	6.251768242045449E-4	DESIGN
get "self"	WITHOUT_CLASSIFICATION	0.9990504284170185	WITHOUT_CLASSIFICATION	9.495715829813759E-4	DESIGN
variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9986729696510434	WITHOUT_CLASSIFICATION	0.0013270303489566657	DESIGN
inline script	WITHOUT_CLASSIFICATION	0.9993253542802442	WITHOUT_CLASSIFICATION	6.746457197559135E-4	DESIGN
inline script	WITHOUT_CLASSIFICATION	0.9993253542802442	WITHOUT_CLASSIFICATION	6.746457197559135E-4	DESIGN
This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9897984242274989	WITHOUT_CLASSIFICATION	0.010201575772501156	DESIGN
Build the class body!	WITHOUT_CLASSIFICATION	0.9984193512644699	WITHOUT_CLASSIFICATION	0.0015806487355301642	DESIGN
unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.999944106365057	WITHOUT_CLASSIFICATION	5.589363494294073E-5	DESIGN
unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.999944106365057	WITHOUT_CLASSIFICATION	5.589363494294073E-5	DESIGN
SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9436101479396994	DESIGN	0.056389852060300616	WITHOUT_CLASSIFICATION
Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9991949118128093	WITHOUT_CLASSIFICATION	8.050881871907046E-4	DESIGN
done done done done	WITHOUT_CLASSIFICATION	0.9989394204508719	WITHOUT_CLASSIFICATION	0.0010605795491281263	DESIGN
NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9992478751472559	WITHOUT_CLASSIFICATION	7.521248527441326E-4	DESIGN
NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9992478751472559	WITHOUT_CLASSIFICATION	7.521248527441326E-4	DESIGN
This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9846191338469102	WITHOUT_CLASSIFICATION	0.01538086615308982	DESIGN
build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9988551394061216	WITHOUT_CLASSIFICATION	0.0011448605938784418	DESIGN
build first node only and return false	WITHOUT_CLASSIFICATION	0.9999820090926094	WITHOUT_CLASSIFICATION	1.7990907390578574E-5	DESIGN
Value of the last expression in the block	WITHOUT_CLASSIFICATION	0.9998981666324247	WITHOUT_CLASSIFICATION	1.0183336757522708E-4	DESIGN
If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9996146864706462	WITHOUT_CLASSIFICATION	3.853135293537615E-4	DESIGN
get the incoming case value	WITHOUT_CLASSIFICATION	0.9999160909083967	WITHOUT_CLASSIFICATION	8.390909160329983E-5	DESIGN
the CASE instruction	WITHOUT_CLASSIFICATION	0.9997490640043523	WITHOUT_CLASSIFICATION	2.5093599564769237E-4	DESIGN
lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9993519517240145	WITHOUT_CLASSIFICATION	6.480482759855315E-4	DESIGN
build each "when"	WITHOUT_CLASSIFICATION	0.9995849804450475	WITHOUT_CLASSIFICATION	4.1501955495250895E-4	DESIGN
multiple conditions for when	WITHOUT_CLASSIFICATION	0.9959039221198712	WITHOUT_CLASSIFICATION	0.004096077880128785	DESIGN
build "else" if it exists	WITHOUT_CLASSIFICATION	0.9998155101935494	WITHOUT_CLASSIFICATION	1.8448980645066276E-4	DESIGN
now emit bodies	WITHOUT_CLASSIFICATION	0.9990704237850115	WITHOUT_CLASSIFICATION	9.295762149883532E-4	DESIGN
close it out	WITHOUT_CLASSIFICATION	0.999988396947599	WITHOUT_CLASSIFICATION	1.1603052400921778E-5	DESIGN
By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9977742437029179	WITHOUT_CLASSIFICATION	0.002225756297082207	DESIGN
Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9884172514247667	WITHOUT_CLASSIFICATION	0.011582748575233231	DESIGN
Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9977466288993146	WITHOUT_CLASSIFICATION	0.0022533711006853872	DESIGN
1. Load the module first (lhs of node) 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9996867883063839	WITHOUT_CLASSIFICATION	3.132116936161513E-4	DESIGN
Build IR for args	WITHOUT_CLASSIFICATION	0.9997757653840198	WITHOUT_CLASSIFICATION	2.242346159800816E-4	DESIGN
Build IR for body	WITHOUT_CLASSIFICATION	0.9999148853792551	WITHOUT_CLASSIFICATION	8.511462074489337E-5	DESIGN
if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9991669480844106	WITHOUT_CLASSIFICATION	8.330519155893481E-4	DESIGN
Instance method	WITHOUT_CLASSIFICATION	0.9995093492350359	WITHOUT_CLASSIFICATION	4.90650764964075E-4	DESIGN
Class method	WITHOUT_CLASSIFICATION	0.9998195912487134	WITHOUT_CLASSIFICATION	1.8040875128650944E-4	DESIGN
Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9951810496108952	WITHOUT_CLASSIFICATION	0.004818950389104848	DESIGN
Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9992618746406725	WITHOUT_CLASSIFICATION	7.381253593275439E-4	DESIGN
Now for the rest	WITHOUT_CLASSIFICATION	0.9999482293133203	WITHOUT_CLASSIFICATION	5.1770686679710923E-5	DESIGN
Jump to 'l' if this arg is not null. If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9998708256999029	WITHOUT_CLASSIFICATION	1.2917430009706427E-4	DESIGN
This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9997639991002062	WITHOUT_CLASSIFICATION	2.3600089979393092E-4	DESIGN
Create a new closure context	WITHOUT_CLASSIFICATION	0.9997353488783675	WITHOUT_CLASSIFICATION	2.646511216325583E-4	DESIGN
Build args	WITHOUT_CLASSIFICATION	0.9992977922234575	WITHOUT_CLASSIFICATION	7.022077765424213E-4	DESIGN
Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999965985368534	WITHOUT_CLASSIFICATION	3.4014631466220406E-6	DESIGN
Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999515442130766	WITHOUT_CLASSIFICATION	4.845578692333917E-5	DESIGN
By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9977742437029179	WITHOUT_CLASSIFICATION	0.002225756297082207	DESIGN
Create a new closure context	WITHOUT_CLASSIFICATION	0.9997353488783675	WITHOUT_CLASSIFICATION	2.646511216325583E-4	DESIGN
Build args	WITHOUT_CLASSIFICATION	0.9992977922234575	WITHOUT_CLASSIFICATION	7.022077765424213E-4	DESIGN
Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999515442130766	WITHOUT_CLASSIFICATION	4.845578692333917E-5	DESIGN
Get the container for this new module	WITHOUT_CLASSIFICATION	0.9986400275812803	WITHOUT_CLASSIFICATION	0.0013599724187195478	DESIGN
Build the new module	WITHOUT_CLASSIFICATION	0.9990082362394203	WITHOUT_CLASSIFICATION	9.917637605796744E-4	DESIGN
Build the module body	WITHOUT_CLASSIFICATION	0.9993854293974297	WITHOUT_CLASSIFICATION	6.145706025703642E-4	DESIGN
First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9997767362970326	WITHOUT_CLASSIFICATION	2.2326370296754574E-4	DESIGN
rest of the argument array!	WITHOUT_CLASSIFICATION	0.999853504871285	WITHOUT_CLASSIFICATION	1.4649512871497253E-4	DESIGN
If a closure, the next is simply a return from the closure! If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999333501954365	WITHOUT_CLASSIFICATION	6.664980456347587E-5	DESIGN
get attr	WITHOUT_CLASSIFICATION	0.9986803025337474	WITHOUT_CLASSIFICATION	0.0013196974662525846	DESIGN
call operator	WITHOUT_CLASSIFICATION	0.9993721927866697	WITHOUT_CLASSIFICATION	6.278072133303576E-4	DESIGN
set attr	WITHOUT_CLASSIFICATION	0.9974079612162303	WITHOUT_CLASSIFICATION	0.0025920387837696486	DESIGN
Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> x = -- build(x) should return a variable! -- f = is_true(x) beq(f, false, L) x = -- build(y) -- L:	WITHOUT_CLASSIFICATION	0.9803096661647326	WITHOUT_CLASSIFICATION	0.019690333835267426	DESIGN
This does the assignment!	WITHOUT_CLASSIFICATION	0.9979762702954025	WITHOUT_CLASSIFICATION	0.0020237297045975246	DESIGN
This does the assignment!	WITHOUT_CLASSIFICATION	0.9979762702954025	WITHOUT_CLASSIFICATION	0.0020237297045975246	DESIGN
if v1 is defined and true, we are done!	WITHOUT_CLASSIFICATION	0.999777779653494	WITHOUT_CLASSIFICATION	2.2222034650598774E-4	DESIGN
build first node only and return true	WITHOUT_CLASSIFICATION	0.9999655852187753	WITHOUT_CLASSIFICATION	3.4414781224717207E-5	DESIGN
build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.999921871641165	WITHOUT_CLASSIFICATION	7.812835883508725E-5	DESIGN
Top-level script!	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999383448128534	WITHOUT_CLASSIFICATION	6.16551871467206E-5	DESIGN
----------- Private Interface ------------	WITHOUT_CLASSIFICATION	0.9997057379135103	WITHOUT_CLASSIFICATION	2.9426208648973865E-4	DESIGN
What handles warnings	WITHOUT_CLASSIFICATION	0.9995804010839328	WITHOUT_CLASSIFICATION	4.1959891606727556E-4	DESIGN
Tries to load at compile-time the constant referred to by 'constRef'. This might be possible if the constant is defined and is not a forward reference to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9910795627285867	WITHOUT_CLASSIFICATION	0.008920437271413372	DESIGN
For closures, a redo is a jump to the beginning of the closure For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999573487695047	WITHOUT_CLASSIFICATION	4.265123049519194E-5	DESIGN
The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9997464279624738	WITHOUT_CLASSIFICATION	2.535720375261964E-4	DESIGN
Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9963689623059062	WITHOUT_CLASSIFICATION	0.003631037694093839	DESIGN
Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.999562414418679	WITHOUT_CLASSIFICATION	4.3758558132099025E-4	DESIGN
------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9998509459949038	WITHOUT_CLASSIFICATION	1.4905400509624824E-4	DESIGN
value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999415703981996	WITHOUT_CLASSIFICATION	5.842960180027327E-5	DESIGN
alu operations	WITHOUT_CLASSIFICATION	0.9997740130430324	WITHOUT_CLASSIFICATION	2.2598695696773378E-4	DESIGN
method handle, arg receive, return value, and call instructions	WITHOUT_CLASSIFICATION	0.9987670863246833	WITHOUT_CLASSIFICATION	0.0012329136753166817	DESIGN
closure instructions	WITHOUT_CLASSIFICATION	0.9999213932137658	WITHOUT_CLASSIFICATION	7.860678623420155E-5	DESIGN
eval instructions	WITHOUT_CLASSIFICATION	0.9997172894826735	WITHOUT_CLASSIFICATION	2.8271051732654226E-4	DESIGN
def instructions	WITHOUT_CLASSIFICATION	0.9994308322165448	WITHOUT_CLASSIFICATION	5.691677834551531E-4	DESIGN
exception instructions	WITHOUT_CLASSIFICATION	0.998855982592187	WITHOUT_CLASSIFICATION	0.0011440174078130017	DESIGN
Loads	WITHOUT_CLASSIFICATION	0.9991441155604318	WITHOUT_CLASSIFICATION	8.558844395682754E-4	DESIGN
Stores	WITHOUT_CLASSIFICATION	0.9991191034519953	WITHOUT_CLASSIFICATION	8.808965480048279E-4	DESIGN
jump and branch operations	WITHOUT_CLASSIFICATION	0.9997957558377194	WITHOUT_CLASSIFICATION	2.0424416228054064E-4	DESIGN
others	WITHOUT_CLASSIFICATION	0.9794757558013395	WITHOUT_CLASSIFICATION	0.020524244198660405	DESIGN
a case/when branch	WITHOUT_CLASSIFICATION	0.9996400367487931	WITHOUT_CLASSIFICATION	3.5996325120692693E-4	DESIGN
optimization guards	WITHOUT_CLASSIFICATION	0.9996695583272422	WITHOUT_CLASSIFICATION	3.3044167275784374E-4	DESIGN
By default, call instructions cannot be deleted even if their results aren't used by anyone unless we know more about what the call is, what it does, etc. Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.5987936799094885	DESIGN	0.40120632009051155	WITHOUT_CLASSIFICATION
Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9983023740081078	WITHOUT_CLASSIFICATION	0.0016976259918922362	DESIGN
scripts	WITHOUT_CLASSIFICATION	0.9993377496106753	WITHOUT_CLASSIFICATION	6.622503893246999E-4	DESIGN
scripts and modules	WITHOUT_CLASSIFICATION	0.9998816201984518	WITHOUT_CLASSIFICATION	1.1837980154813277E-4	DESIGN
scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9997390128934663	WITHOUT_CLASSIFICATION	2.609871065336214E-4	DESIGN
methods and closures	WITHOUT_CLASSIFICATION	0.99976571290004	WITHOUT_CLASSIFICATION	2.3428709996003966E-4	DESIGN
create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9996221909659548	WITHOUT_CLASSIFICATION	3.778090340452526E-4	DESIGN
create a new temporary variable	WITHOUT_CLASSIFICATION	0.9287085623646123	WITHOUT_CLASSIFICATION	0.07129143763538763	DESIGN
Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9998852327442996	WITHOUT_CLASSIFICATION	1.1476725570040503E-4	DESIGN
Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999784459021036	WITHOUT_CLASSIFICATION	2.1554097896351755E-5	DESIGN
Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999663199111963	WITHOUT_CLASSIFICATION	3.3680088803723783E-5	DESIGN
While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9585401502323101	WITHOUT_CLASSIFICATION	0.04145984976768991	DESIGN
Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999358145337645	WITHOUT_CLASSIFICATION	6.418546623550891E-5	DESIGN
Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9991871598760733	WITHOUT_CLASSIFICATION	8.128401239266609E-4	DESIGN
Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9971799609722284	WITHOUT_CLASSIFICATION	0.002820039027771571	DESIGN
Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9305805572480075	WITHOUT_CLASSIFICATION	0.06941944275199252	DESIGN
Readline	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9998876338324101	WITHOUT_CLASSIFICATION	1.123661675899446E-4	DESIGN
Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.997860347125319	WITHOUT_CLASSIFICATION	0.002139652874680979	DESIGN
If 'r' is not a constant, it could actually be a compound value! Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9998576125451352	WITHOUT_CLASSIFICATION	1.4238745486489567E-4	DESIGN
Check if we can optimize this call based on the receiving method and receiver type Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.6677462378374779	WITHOUT_CLASSIFICATION	0.3322537621625223	DESIGN
If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999645557696268	WITHOUT_CLASSIFICATION	3.544423037318834E-5	DESIGN
If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9993910330662671	WITHOUT_CLASSIFICATION	6.089669337329658E-4	DESIGN
----------- Public abstract methods ----------	WITHOUT_CLASSIFICATION	0.9974532391820148	WITHOUT_CLASSIFICATION	0.002546760817985171	DESIGN
----------- Public methods with a default implementation ----------	WITHOUT_CLASSIFICATION	0.9986569498310884	WITHOUT_CLASSIFICATION	0.0013430501689115618	DESIGN
Compute meet over all "sources" and compute "destination" basic blocks that should then be processed. sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9858317500488573	WITHOUT_CLASSIFICATION	0.014168249951142872	DESIGN
If the solution has changed, add "dsts" to the work list. No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9976055885920782	WITHOUT_CLASSIFICATION	0.00239441140792187	DESIGN
--------- Protected fields/methods below ---------	WITHOUT_CLASSIFICATION	0.9996733385503601	WITHOUT_CLASSIFICATION	3.2666144963993386E-4	DESIGN
Dataflow problem with which this node is associated CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9957016413630084	WITHOUT_CLASSIFICATION	0.004298358636991495	DESIGN
-------------- Public fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9998954503400767	WITHOUT_CLASSIFICATION	1.0454965992335166E-4	DESIGN
------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9985222993736794	WITHOUT_CLASSIFICATION	0.0014777006263205416	DESIGN
------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.999726671475609	WITHOUT_CLASSIFICATION	2.7332852439100066E-4	DESIGN
Compute Meet Over All Paths solution for this dataflow problem on the input CFG. This implements a standard worklist algorithm.	WITHOUT_CLASSIFICATION	0.5493888602173128	WITHOUT_CLASSIFICATION	0.45061113978268735	DESIGN
Individual analyses should override this	WITHOUT_CLASSIFICATION	0.9866256072877817	WITHOUT_CLASSIFICATION	0.013374392712218224	DESIGN
Individual analyses should override this	WITHOUT_CLASSIFICATION	0.9866256072877817	WITHOUT_CLASSIFICATION	0.013374392712218224	DESIGN
-------------- Packaged/protected fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9998945263472822	WITHOUT_CLASSIFICATION	1.0547365271787543E-4	DESIGN
We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9989639285462101	WITHOUT_CLASSIFICATION	0.001036071453789926	DESIGN
-------------- Protected fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9998984960826227	WITHOUT_CLASSIFICATION	1.0150391737728309E-4	DESIGN
-------------- Private fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9999490103491472	WITHOUT_CLASSIFICATION	5.0989650852929144E-5	DESIGN
Initialize all flow graph nodes	WITHOUT_CLASSIFICATION	0.9998709806393997	WITHOUT_CLASSIFICATION	1.2901936060025394E-4	DESIGN
Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses	WITHOUT_CLASSIFICATION	0.9099984313524756	WITHOUT_CLASSIFICATION	0.09000156864752436	DESIGN
PUBLIC INTERFACE	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9972741265243235	WITHOUT_CLASSIFICATION	0.002725873475676534	DESIGN
start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9990914020898372	WITHOUT_CLASSIFICATION	9.085979101627784E-4	DESIGN
switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.998214955011211	WITHOUT_CLASSIFICATION	0.0017850449887890276	DESIGN
----------- Public Interface ------------	WITHOUT_CLASSIFICATION	0.9993967963967324	WITHOUT_CLASSIFICATION	6.032036032675421E-4	DESIGN
class or module	WITHOUT_CLASSIFICATION	0.9978610586484631	WITHOUT_CLASSIFICATION	0.0021389413515370092	DESIGN
OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9997423144659144	WITHOUT_CLASSIFICATION	2.576855340855163E-4	DESIGN
Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9962551539253123	WITHOUT_CLASSIFICATION	0.003744846074687699	DESIGN
v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9997483798870206	WITHOUT_CLASSIFICATION	2.5162011297939904E-4	DESIGN
IN is the same!	WITHOUT_CLASSIFICATION	0.9991968004630735	WITHOUT_CLASSIFICATION	8.031995369266523E-4	DESIGN
IN changed!	WITHOUT_CLASSIFICATION	0.9990452908790752	WITHOUT_CLASSIFICATION	9.54709120924692E-4	DESIGN
---------- Protected / package fields, methods ---------	WITHOUT_CLASSIFICATION	0.9996164050691263	WITHOUT_CLASSIFICATION	3.8359493087374946E-4	DESIGN
If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9988378989023909	WITHOUT_CLASSIFICATION	0.0011621010976090858	DESIGN
Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9668250481556998	WITHOUT_CLASSIFICATION	0.03317495184430031	DESIGN
---------- Private fields, methods ---------	WITHOUT_CLASSIFICATION	0.9996716316104118	WITHOUT_CLASSIFICATION	3.2836838958815714E-4	DESIGN
Variables live at entry of this node Variables live at exit of node Temporary set of live variables Size of the "_in" and "_out" bit sets	WITHOUT_CLASSIFICATION	0.6561808165826516	DESIGN	0.3438191834173484	WITHOUT_CLASSIFICATION
Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9995770496752099	WITHOUT_CLASSIFICATION	4.229503247901474E-4	DESIGN
Does this instruction have side effects as a result of its operation This information is used in optimization phases to impact dead code elimination and other optimization passes	WITHOUT_CLASSIFICATION	0.9705694283545074	DESIGN	0.029430571645492554	WITHOUT_CLASSIFICATION
--------- "Abstract"/"please-override" methods ---------	WITHOUT_CLASSIFICATION	0.999209227883142	WITHOUT_CLASSIFICATION	7.907721168578865E-4	DESIGN
Array of all operands for this instruction	WITHOUT_CLASSIFICATION	0.9983506351115906	WITHOUT_CLASSIFICATION	0.0016493648884093773	DESIGN
List of all variables used by all operands of this instruction	WITHOUT_CLASSIFICATION	0.8712261755380755	WITHOUT_CLASSIFICATION	0.12877382446192456	DESIGN
This method takes as input a map of operands to their values, and outputs If the value map provides a value for any of the instruction's operands this method is expected to replace the original operands with the simplified values. It is not required that it do so -- code correctness is not compromised by failure to simplify	WITHOUT_CLASSIFICATION	0.9999339691088543	WITHOUT_CLASSIFICATION	6.603089114562191E-5	DESIGN
By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9994229903412182	WITHOUT_CLASSIFICATION	5.770096587818559E-4	DESIGN
Can this call lead to ruby code getting modified? If we don't know what method we are calling, we assume it can (pessimistic, but safe!) If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9451778400655443	WITHOUT_CLASSIFICATION	0.0548221599344557	DESIGN
By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9996673929987013	WITHOUT_CLASSIFICATION	3.326070012987001E-4	DESIGN
If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9969862868938718	WITHOUT_CLASSIFICATION	0.0030137131061281964	DESIGN
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.9781502577904079	WITHOUT_CLASSIFICATION	0.021849742209592137	DESIGN
Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9998352301634456	WITHOUT_CLASSIFICATION	1.6476983655442412E-4	DESIGN
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.9781502577904079	WITHOUT_CLASSIFICATION	0.021849742209592137	DESIGN
You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9990040926143058	WITHOUT_CLASSIFICATION	9.95907385694151E-4	DESIGN
If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9998844067815645	WITHOUT_CLASSIFICATION	1.1559321843554117E-4	DESIGN
If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9998844067815645	WITHOUT_CLASSIFICATION	1.1559321843554117E-4	DESIGN
If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9998844067815645	WITHOUT_CLASSIFICATION	1.1559321843554117E-4	DESIGN
For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999864476323655	WITHOUT_CLASSIFICATION	1.355236763448611E-5	DESIGN
For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999864476323655	WITHOUT_CLASSIFICATION	1.355236763448611E-5	DESIGN
The operand that this attribute targets DEFERRED AttributeValue _val; Attribute value	WITHOUT_CLASSIFICATION	0.9999903022816875	WITHOUT_CLASSIFICATION	9.69771831254464E-6	DESIGN
Arrays, Ranges, etc. are compound values Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9997627988016297	WITHOUT_CLASSIFICATION	2.3720119837040922E-4	DESIGN
Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999578556148789	WITHOUT_CLASSIFICATION	4.2144385121080536E-5	DESIGN
The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9083519448600744	WITHOUT_CLASSIFICATION	0.09164805513992554	DESIGN
Nothing to do by default	WITHOUT_CLASSIFICATION	0.9998452360470158	WITHOUT_CLASSIFICATION	1.5476395298431145E-4	DESIGN
Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999072787531518	WITHOUT_CLASSIFICATION	9.27212468482283E-5	DESIGN
Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.999487366000228	WITHOUT_CLASSIFICATION	5.126339997720814E-4	DESIGN
ignore	WITHOUT_CLASSIFICATION	0.9989644317505738	WITHOUT_CLASSIFICATION	0.0010355682494262723	DESIGN
Scope (method/closure) to which this cfg belongs Entry BB -- dummy Exit BB -- dummy The actual graph Next available basic block id	WITHOUT_CLASSIFICATION	0.9998365147337792	WITHOUT_CLASSIFICATION	1.6348526622077437E-4	DESIGN
Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9997908022026573	WITHOUT_CLASSIFICATION	2.091977973427127E-4	DESIGN
Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9993394129607379	WITHOUT_CLASSIFICATION	6.605870392621759E-4	DESIGN
currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9997334198290926	WITHOUT_CLASSIFICATION	2.6658017090751263E-4	DESIGN
Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.999480593584989	WITHOUT_CLASSIFICATION	5.194064150110673E-4	DESIGN
root-level logic	WITHOUT_CLASSIFICATION	0.9995205222383584	WITHOUT_CLASSIFICATION	4.794777616415633E-4	DESIGN
root-level methods	WITHOUT_CLASSIFICATION	0.9996700556272852	WITHOUT_CLASSIFICATION	3.299443727147723E-4	DESIGN
root-level classes	WITHOUT_CLASSIFICATION	0.9997949214041264	WITHOUT_CLASSIFICATION	2.0507859587361513E-4	DESIGN
case 4: signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); break; case 5: signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); break;	WITHOUT_CLASSIFICATION	0.999962864096147	WITHOUT_CLASSIFICATION	3.7135903853049544E-5	DESIGN
load receiver	WITHOUT_CLASSIFICATION	0.9991292509545304	WITHOUT_CLASSIFICATION	8.707490454696045E-4	DESIGN
load receiver	WITHOUT_CLASSIFICATION	0.9991292509545304	WITHOUT_CLASSIFICATION	8.707490454696045E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9992554474196457	WITHOUT_CLASSIFICATION	7.445525803543375E-4	DESIGN
load arguments	WITHOUT_CLASSIFICATION	0.998690785356202	WITHOUT_CLASSIFICATION	0.0013092146437980424	DESIGN
load arguments	WITHOUT_CLASSIFICATION	0.998690785356202	WITHOUT_CLASSIFICATION	0.0013092146437980424	DESIGN
case 4: case 5:	WITHOUT_CLASSIFICATION	0.9999249314653097	WITHOUT_CLASSIFICATION	7.506853469026996E-5	DESIGN
Object[] args	WITHOUT_CLASSIFICATION	0.9995138001509121	WITHOUT_CLASSIFICATION	4.861998490880295E-4	DESIGN
load handle	WITHOUT_CLASSIFICATION	0.9963110580112498	WITHOUT_CLASSIFICATION	0.0036889419887501033	DESIGN
args array	WITHOUT_CLASSIFICATION	0.9993013102694621	WITHOUT_CLASSIFICATION	6.986897305379521E-4	DESIGN
i'th argument	WITHOUT_CLASSIFICATION	0.9999740139633227	WITHOUT_CLASSIFICATION	2.598603667731776E-5	DESIGN
invoke specific arity version	WITHOUT_CLASSIFICATION	0.999616574644454	WITHOUT_CLASSIFICATION	3.8342535554593824E-4	DESIGN
Object arg0	WITHOUT_CLASSIFICATION	0.999641640805439	WITHOUT_CLASSIFICATION	3.583591945609581E-4	DESIGN
useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9990491058491647	WITHOUT_CLASSIFICATION	9.508941508351783E-4	DESIGN
No editing before startPos	WITHOUT_CLASSIFICATION	0.999974409064944	WITHOUT_CLASSIFICATION	2.5590935056073942E-5	DESIGN
no silly ticks!	WITHOUT_CLASSIFICATION	0.9996661023026322	WITHOUT_CLASSIFICATION	3.338976973677727E-4	DESIGN
no candidates? Fail.	WITHOUT_CLASSIFICATION	0.999664719397518	WITHOUT_CLASSIFICATION	3.352806024820381E-4	DESIGN
at end	WITHOUT_CLASSIFICATION	0.9996098309525673	WITHOUT_CLASSIFICATION	3.9016904743276225E-4	DESIGN
undo check	WITHOUT_CLASSIFICATION	0.9998462496510016	WITHOUT_CLASSIFICATION	1.5375034899855447E-4	DESIGN
Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.999689429997868	WITHOUT_CLASSIFICATION	3.1057000213196266E-4	DESIGN
ignore	WITHOUT_CLASSIFICATION	0.9989644317505738	WITHOUT_CLASSIFICATION	0.0010355682494262723	DESIGN
\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
Assign the values.	WITHOUT_CLASSIFICATION	0.9994449743684868	WITHOUT_CLASSIFICATION	5.550256315131908E-4	DESIGN
no check for ''	WITHOUT_CLASSIFICATION	0.9999665898012068	WITHOUT_CLASSIFICATION	3.3410198793188325E-5	DESIGN
no check for ''	WITHOUT_CLASSIFICATION	0.9999665898012068	WITHOUT_CLASSIFICATION	3.3410198793188325E-5	DESIGN
Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9991246104769604	WITHOUT_CLASSIFICATION	8.753895230395958E-4	DESIGN
this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9964712950495682	WITHOUT_CLASSIFICATION	0.003528704950431723	DESIGN
no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9993073143457656	WITHOUT_CLASSIFICATION	6.92685654234497E-4	DESIGN
restore position	WITHOUT_CLASSIFICATION	0.9998599536214392	WITHOUT_CLASSIFICATION	1.40046378560804E-4	DESIGN
Something like cvar_cbase() from eval.c, factored out for the benefit of all the classvar-related node evaluations	WITHOUT_CLASSIFICATION	0.9994209445705637	WITHOUT_CLASSIFICATION	5.790554294361917E-4	DESIGN
Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9998565879513063	WITHOUT_CLASSIFICATION	1.4341204869376415E-4	DESIGN
JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999501818534992	WITHOUT_CLASSIFICATION	4.9818146500787064E-5	DESIGN
MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9948164335983852	WITHOUT_CLASSIFICATION	0.005183566401614723	DESIGN
We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.99947852270456	WITHOUT_CLASSIFICATION	5.214772954400086E-4	DESIGN
JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9946392434055349	WITHOUT_CLASSIFICATION	0.0053607565944651225	DESIGN
not overridden, let's go	WITHOUT_CLASSIFICATION	0.9998435714850964	WITHOUT_CLASSIFICATION	1.5642851490365946E-4	DESIGN
Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8()	WITHOUT_CLASSIFICATION	0.9996668730186251	WITHOUT_CLASSIFICATION	3.331269813748986E-4	DESIGN
FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9264683735021062	WITHOUT_CLASSIFICATION	0.07353162649789372	DESIGN
Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9996069638075892	WITHOUT_CLASSIFICATION	3.930361924107968E-4	DESIGN
clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9998992840156091	WITHOUT_CLASSIFICATION	1.0071598439094067E-4	DESIGN
These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.8353221890022289	WITHOUT_CLASSIFICATION	0.16467781099777104	DESIGN
Timeout module methods	WITHOUT_CLASSIFICATION	0.9978034551850424	WITHOUT_CLASSIFICATION	0.002196544814957501	DESIGN
Toplevel defines	WITHOUT_CLASSIFICATION	0.9996849644864935	WITHOUT_CLASSIFICATION	3.1503551350657414E-4	DESIGN
No seconds, just yield	WITHOUT_CLASSIFICATION	0.9996742335283921	WITHOUT_CLASSIFICATION	3.257664716078512E-4	DESIGN
No timeout in critical section	WITHOUT_CLASSIFICATION	0.9994946120100145	WITHOUT_CLASSIFICATION	5.053879899854216E-4	DESIGN
if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9998072268866564	WITHOUT_CLASSIFICATION	1.9277311334359344E-4	DESIGN
and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9978293933091223	WITHOUT_CLASSIFICATION	0.002170606690877668	DESIGN
otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9996327784786277	WITHOUT_CLASSIFICATION	3.672215213722273E-4	DESIGN
Remove the Executor task now, to avoid cancelled tasks accumulating until an Executor thread can schedule and remove them	WITHOUT_CLASSIFICATION	0.9671884364059622	WITHOUT_CLASSIFICATION	0.03281156359403777	DESIGN
If the task was scheduled, wait for it to finish before polling for the exception it would have thrown.	WITHOUT_CLASSIFICATION	0.9999306017423155	WITHOUT_CLASSIFICATION	6.939825768448489E-5	DESIGN
NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9992078911340695	WITHOUT_CLASSIFICATION	7.921088659305108E-4	DESIGN
When a length is given, read_string acts like get_bytes	WITHOUT_CLASSIFICATION	0.9610331796069131	WITHOUT_CLASSIFICATION	0.03896682039308681	DESIGN
Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9995239099181119	WITHOUT_CLASSIFICATION	4.7609008188814837E-4	DESIGN
ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9813965144310036	WITHOUT_CLASSIFICATION	0.01860348556899636	DESIGN
If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9989999535929796	WITHOUT_CLASSIFICATION	0.00100004640702045	DESIGN
This variant of newStruct is called from StructLayoutBuilder	WITHOUT_CLASSIFICATION	0.9986208005224363	WITHOUT_CLASSIFICATION	0.0013791994775637668	DESIGN
This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999907362899272	WITHOUT_CLASSIFICATION	9.26371007288878E-6	DESIGN
Windows is LLP64	WITHOUT_CLASSIFICATION	0.9996009823757056	WITHOUT_CLASSIFICATION	3.9901762429434657E-4	DESIGN
Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9994559139022909	WITHOUT_CLASSIFICATION	5.440860977089785E-4	DESIGN
Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.99990613559915	WITHOUT_CLASSIFICATION	9.386440085001886E-5	DESIGN
$blah	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9995239099181119	WITHOUT_CLASSIFICATION	4.7609008188814837E-4	DESIGN
A specific version was requested - use as is for search	WITHOUT_CLASSIFICATION	0.9993638762748585	WITHOUT_CLASSIFICATION	6.361237251415749E-4	DESIGN
Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.99990613559915	WITHOUT_CLASSIFICATION	9.386440085001886E-5	DESIGN
Keep a reference to the temporary memory in the cache so it does not get freed by the GC until the struct is freed	WITHOUT_CLASSIFICATION	0.9989786851804519	WITHOUT_CLASSIFICATION	0.0010213148195482229	DESIGN
Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9994045164001455	WITHOUT_CLASSIFICATION	5.954835998544918E-4	DESIGN
Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.999865129729381	WITHOUT_CLASSIFICATION	1.348702706190078E-4	DESIGN
Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9991275019052417	WITHOUT_CLASSIFICATION	8.72498094758345E-4	DESIGN
case FLOAT:	WITHOUT_CLASSIFICATION	0.9999249314653097	WITHOUT_CLASSIFICATION	7.506853469026996E-5	DESIGN
keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9998369556558454	WITHOUT_CLASSIFICATION	1.63044344154551E-4	DESIGN
keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9998369556558454	WITHOUT_CLASSIFICATION	1.63044344154551E-4	DESIGN
No auto cleanup needed	WITHOUT_CLASSIFICATION	0.999893777338375	WITHOUT_CLASSIFICATION	1.0622266162498391E-4	DESIGN
Wire up Function#call(args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9969632296015066	WITHOUT_CLASSIFICATION	0.0030367703984932916	DESIGN
Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9998928385799469	WITHOUT_CLASSIFICATION	1.0716142005306251E-4	DESIGN
Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9998928385799469	WITHOUT_CLASSIFICATION	1.0716142005306251E-4	DESIGN
If there is exactly _one_ callback argument to the function, then a block can be given and automatically subsituted for the callback parameter.	WITHOUT_CLASSIFICATION	0.9999962120084716	WITHOUT_CLASSIFICATION	3.7879915283926008E-6	DESIGN
------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9995080245907683	WITHOUT_CLASSIFICATION	4.919754092316859E-4	DESIGN
AF_INET	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
AF_INET	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
line 321	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
Set up for potentially fast-int operations	WITHOUT_CLASSIFICATION	0.9996437221000929	WITHOUT_CLASSIFICATION	3.5627789990713465E-4	DESIGN
Hook up the MemoryPointer class if its not already there	WITHOUT_CLASSIFICATION	0.9990841270199438	WITHOUT_CLASSIFICATION	9.158729800562612E-4	DESIGN
This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9823183668411721	WITHOUT_CLASSIFICATION	0.01768163315882786	DESIGN
no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9987155487782141	WITHOUT_CLASSIFICATION	0.0012844512217859132	DESIGN
Sockaddr_un has different structure on different platforms. See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9139500802267788	WITHOUT_CLASSIFICATION	0.08604991977322114	DESIGN
There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999608024635628	WITHOUT_CLASSIFICATION	3.919753643724511E-5	DESIGN
RubyIPSocket	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9997331373829699	WITHOUT_CLASSIFICATION	2.6686261703013134E-4	DESIGN
host and port given	WITHOUT_CLASSIFICATION	0.9999130941770151	WITHOUT_CLASSIFICATION	8.690582298493897E-5	DESIGN
RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9991080282278989	WITHOUT_CLASSIFICATION	8.919717721012135E-4	DESIGN
make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9988649714217712	WITHOUT_CLASSIFICATION	0.0011350285782288007	DESIGN
continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999153500307831	WITHOUT_CLASSIFICATION	8.464996921689825E-5	DESIGN
recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9910256127201514	WITHOUT_CLASSIFICATION	0.008974387279848513	DESIGN
Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9945516770766903	WITHOUT_CLASSIFICATION	0.00544832292330968	DESIGN
RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9994483001046098	WITHOUT_CLASSIFICATION	5.516998953901573E-4	DESIGN
mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.999423967722795	WITHOUT_CLASSIFICATION	5.760322772050308E-4	DESIGN
constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9992350066764946	WITHOUT_CLASSIFICATION	7.649933235054318E-4	DESIGN
More constants needed by specs	WITHOUT_CLASSIFICATION	0.998653439337301	WITHOUT_CLASSIFICATION	0.001346560662699008	DESIGN
normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9999159652098542	WITHOUT_CLASSIFICATION	8.403479014588663E-5	DESIGN
AF_INET	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
255.255.255.255	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
0.0.0.0	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9971305879933076	WITHOUT_CLASSIFICATION	0.002869412006692418	DESIGN
line 323	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
can't set TC classloader	WITHOUT_CLASSIFICATION	0.9992086194607311	WITHOUT_CLASSIFICATION	7.913805392688309E-4	DESIGN
can't set TC classloader	WITHOUT_CLASSIFICATION	0.9992086194607311	WITHOUT_CLASSIFICATION	7.913805392688309E-4	DESIGN
ok, it's a socket...set values accordingly just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999139370019557	WITHOUT_CLASSIFICATION	8.606299804424609E-5	DESIGN
datagram, set accordingly again, AF_INET	WITHOUT_CLASSIFICATION	0.9991194214539225	WITHOUT_CLASSIFICATION	8.805785460773676E-4	DESIGN
IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9997151470558611	WITHOUT_CLASSIFICATION	2.848529441388767E-4	DESIGN
When Socket::AI_PASSIVE and host is nil, return 'any' address.	WITHOUT_CLASSIFICATION	0.9988765960439324	WITHOUT_CLASSIFICATION	0.0011234039560675244	DESIGN
The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999624119073165	WITHOUT_CLASSIFICATION	3.7588092683424886E-5	DESIGN
RubySocket	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9996973104881128	WITHOUT_CLASSIFICATION	3.0268951188714625E-4	DESIGN
e.printStackTrace();	WITHOUT_CLASSIFICATION	0.999663435090778	WITHOUT_CLASSIFICATION	3.365649092219208E-4	DESIGN
we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9991173249273195	WITHOUT_CLASSIFICATION	8.826750726805183E-4	DESIGN
otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999823122519196	WITHOUT_CLASSIFICATION	1.768774808036087E-5	DESIGN
no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999746156613625	WITHOUT_CLASSIFICATION	2.5384338637607118E-5	DESIGN
do nothing, just exit	WITHOUT_CLASSIFICATION	0.9993411038323455	WITHOUT_CLASSIFICATION	6.588961676545975E-4	DESIGN
nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9991850795574373	WITHOUT_CLASSIFICATION	8.149204425626634E-4	DESIGN
set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9995290388459334	WITHOUT_CLASSIFICATION	4.709611540665686E-4	DESIGN
uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9961088755608684	WITHOUT_CLASSIFICATION	0.0038911244391317042	DESIGN
Call the thread's code	WITHOUT_CLASSIFICATION	0.9974767067894713	WITHOUT_CLASSIFICATION	0.0025232932105286746	DESIGN
Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9996962026634308	WITHOUT_CLASSIFICATION	3.037973365691394E-4	DESIGN
restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999500730954854	WITHOUT_CLASSIFICATION	4.9926904514605945E-5	DESIGN
be dead	WITHOUT_CLASSIFICATION	0.999012910600022	WITHOUT_CLASSIFICATION	9.870893999779883E-4	DESIGN
loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9997706274749582	WITHOUT_CLASSIFICATION	2.293725250417277E-4	DESIGN
all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999059642225402	WITHOUT_CLASSIFICATION	9.40357774598041E-5	DESIGN
thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9978707135110142	WITHOUT_CLASSIFICATION	0.0021292864889858537	DESIGN
future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9986936756148467	WITHOUT_CLASSIFICATION	0.0013063243851533083	DESIGN
first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999678078458868	WITHOUT_CLASSIFICATION	3.219215411317247E-5	DESIGN
then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999444691001892	WITHOUT_CLASSIFICATION	5.553089981079486E-5	DESIGN
UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9915983167472349	WITHOUT_CLASSIFICATION	0.008401683252765147	DESIGN
Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9991578936470396	WITHOUT_CLASSIFICATION	8.421063529605784E-4	DESIGN
invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9993429652960792	WITHOUT_CLASSIFICATION	6.570347039208737E-4	DESIGN
main body	WITHOUT_CLASSIFICATION	0.9998295604721875	WITHOUT_CLASSIFICATION	1.7043952781245893E-4	DESIGN
return jump handling	WITHOUT_CLASSIFICATION	0.9995762019936142	WITHOUT_CLASSIFICATION	4.2379800638584083E-4	DESIGN
finally	WITHOUT_CLASSIFICATION	0.9991397453058767	WITHOUT_CLASSIFICATION	8.602546941232901E-4	DESIGN
return result if we're still good	WITHOUT_CLASSIFICATION	0.9998672090003752	WITHOUT_CLASSIFICATION	1.327909996248604E-4	DESIGN
redo jump handling	WITHOUT_CLASSIFICATION	0.9990781251378553	WITHOUT_CLASSIFICATION	9.218748621446352E-4	DESIGN
clear the redo	WITHOUT_CLASSIFICATION	0.9998173529106811	WITHOUT_CLASSIFICATION	1.8264708931887527E-4	DESIGN
get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9987919356692658	WITHOUT_CLASSIFICATION	0.001208064330734167	DESIGN
throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.998866875591378	WITHOUT_CLASSIFICATION	0.0011331244086219981	DESIGN
finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9990483994467539	WITHOUT_CLASSIFICATION	9.516005532461651E-4	DESIGN
call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9947360686968748	WITHOUT_CLASSIFICATION	0.005263931303125182	DESIGN
No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999931525495497	WITHOUT_CLASSIFICATION	6.847450450303114E-6	DESIGN
actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9993542412384719	WITHOUT_CLASSIFICATION	6.457587615281308E-4	DESIGN
actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9995170380374604	WITHOUT_CLASSIFICATION	4.8296196253961595E-4	DESIGN
simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9983737967597632	WITHOUT_CLASSIFICATION	0.0016262032402368366	DESIGN
in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.8587678628785699	WITHOUT_CLASSIFICATION	0.14123213712143007	DESIGN
in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.8587678628785699	WITHOUT_CLASSIFICATION	0.14123213712143007	DESIGN
normal all-rest method	WITHOUT_CLASSIFICATION	0.9995298801926803	WITHOUT_CLASSIFICATION	4.7011980731971316E-4	DESIGN
for zero, one, two, three arities, JavaMethod.JavaMethod.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999281394621428	WITHOUT_CLASSIFICATION	7.186053785726154E-5	DESIGN
promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9974390044296794	WITHOUT_CLASSIFICATION	0.0025609955703205472	DESIGN
return	WITHOUT_CLASSIFICATION	0.9996563798417349	WITHOUT_CLASSIFICATION	3.4362015826513054E-4	DESIGN
just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.99962409786949	WITHOUT_CLASSIFICATION	3.7590213050993625E-4	DESIGN
just confirm args length == required	WITHOUT_CLASSIFICATION	0.9995031616182227	WITHOUT_CLASSIFICATION	4.968383817773027E-4	DESIGN
confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9997181181646977	WITHOUT_CLASSIFICATION	2.8188183530232426E-4	DESIGN
confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.993150047043889	WITHOUT_CLASSIFICATION	0.006849952956110959	DESIGN
Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9997252087154944	WITHOUT_CLASSIFICATION	2.7479128450555044E-4	DESIGN
tc	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
self name	WITHOUT_CLASSIFICATION	0.9974999075866496	WITHOUT_CLASSIFICATION	0.002500092413350372	DESIGN
no args	WITHOUT_CLASSIFICATION	0.9991926252083554	WITHOUT_CLASSIFICATION	8.073747916445787E-4	DESIGN
variable args with block	WITHOUT_CLASSIFICATION	0.9983558881407246	WITHOUT_CLASSIFICATION	0.0016441118592753871	DESIGN
variable args no block, load null block	WITHOUT_CLASSIFICATION	0.994023417318182	WITHOUT_CLASSIFICATION	0.005976582681817958	DESIGN
zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9995071523444591	WITHOUT_CLASSIFICATION	4.928476555409559E-4	DESIGN
one arg with block	WITHOUT_CLASSIFICATION	0.9997148534760714	WITHOUT_CLASSIFICATION	2.851465239286172E-4	DESIGN
one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9985546179102684	WITHOUT_CLASSIFICATION	0.0014453820897315508	DESIGN
two args with block	WITHOUT_CLASSIFICATION	0.9995557431523652	WITHOUT_CLASSIFICATION	4.442568476348442E-4	DESIGN
two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9980749721730895	WITHOUT_CLASSIFICATION	0.0019250278269105348	DESIGN
three args with block	WITHOUT_CLASSIFICATION	0.9992410948393361	WITHOUT_CLASSIFICATION	7.589051606639699E-4	DESIGN
three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9985940247532314	WITHOUT_CLASSIFICATION	0.001405975246768599	DESIGN
load block if it accepts block	WITHOUT_CLASSIFICATION	0.9986302081589954	WITHOUT_CLASSIFICATION	0.0013697918410045563	DESIGN
all other arg cases with block	WITHOUT_CLASSIFICATION	0.9972753162850813	WITHOUT_CLASSIFICATION	0.002724683714918755	DESIGN
all other arg cases without block	WITHOUT_CLASSIFICATION	0.9969943919870765	WITHOUT_CLASSIFICATION	0.003005608012923354	DESIGN
one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9997476611919156	WITHOUT_CLASSIFICATION	2.5233880808440826E-4	DESIGN
two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.999663790009935	WITHOUT_CLASSIFICATION	3.3620999006496916E-4	DESIGN
three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9997474763330493	WITHOUT_CLASSIFICATION	2.5252366695069475E-4	DESIGN
load target for invocations	WITHOUT_CLASSIFICATION	0.9998968914401617	WITHOUT_CLASSIFICATION	1.031085598383007E-4	DESIGN
load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.997641568665731	WITHOUT_CLASSIFICATION	0.002358431334268959	DESIGN
static invocation	WITHOUT_CLASSIFICATION	0.999859283611244	WITHOUT_CLASSIFICATION	1.407163887560951E-4	DESIGN
virtual invocation	WITHOUT_CLASSIFICATION	0.9995505743673689	WITHOUT_CLASSIFICATION	4.4942563263115454E-4	DESIGN
void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9970732396296289	WITHOUT_CLASSIFICATION	0.0029267603703711036	DESIGN
normal finally and exit	WITHOUT_CLASSIFICATION	0.999876095329581	WITHOUT_CLASSIFICATION	1.239046704189519E-4	DESIGN
promise to implement one to N	WITHOUT_CLASSIFICATION	0.992626146859171	WITHOUT_CLASSIFICATION	0.007373853140828949	DESIGN
call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9947360686968748	WITHOUT_CLASSIFICATION	0.005263931303125182	DESIGN
these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9960401581383902	WITHOUT_CLASSIFICATION	0.003959841861609728	DESIGN
method itself ThreadContext invoked name	WITHOUT_CLASSIFICATION	0.9917261762794386	WITHOUT_CLASSIFICATION	0.008273823720561381	DESIGN
method itself ThreadContext invoked name	WITHOUT_CLASSIFICATION	0.9917261762794386	WITHOUT_CLASSIFICATION	0.008273823720561381	DESIGN
singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9982821941592652	WITHOUT_CLASSIFICATION	0.0017178058407346527	DESIGN
For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9085349134513673	WITHOUT_CLASSIFICATION	0.0914650865486327	DESIGN
SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9992078911340695	WITHOUT_CLASSIFICATION	7.921088659305108E-4	DESIGN
never reached	WITHOUT_CLASSIFICATION	0.9998909953475588	WITHOUT_CLASSIFICATION	1.0900465244125803E-4	DESIGN
promise to implement N with block	WITHOUT_CLASSIFICATION	0.9860548220253748	WITHOUT_CLASSIFICATION	0.013945177974625318	DESIGN
promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9966212813516029	WITHOUT_CLASSIFICATION	0.0033787186483971924	DESIGN
promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9902866488575149	WITHOUT_CLASSIFICATION	0.00971335114248502	DESIGN
promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9869127710868153	WITHOUT_CLASSIFICATION	0.01308722891318474	DESIGN
promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9976848664331304	WITHOUT_CLASSIFICATION	0.002315133566869617	DESIGN
promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9933309659558452	WITHOUT_CLASSIFICATION	0.006669034044154704	DESIGN
promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9910049096280946	WITHOUT_CLASSIFICATION	0.008995090371905375	DESIGN
promise to implement three with block	WITHOUT_CLASSIFICATION	0.9904126195742453	WITHOUT_CLASSIFICATION	0.00958738042575472	DESIGN
promise to implement N	WITHOUT_CLASSIFICATION	0.989402664505029	WITHOUT_CLASSIFICATION	0.01059733549497087	DESIGN
DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9992078911340695	WITHOUT_CLASSIFICATION	7.921088659305108E-4	DESIGN
We promote our box to being its own box since we're changing visibilities, and need it to be reflected on this method object independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9525177823200909	WITHOUT_CLASSIFICATION	0.047482217679909205	DESIGN
Normally we could leave these to fall back on the superclass, but since it dispatches through the [] version below, which may dispatch through the []+block version, we can save it a couple hops by overriding these here.	WITHOUT_CLASSIFICATION	0.9975080377258603	WITHOUT_CLASSIFICATION	0.0024919622741397694	DESIGN
promise to implement two to N	WITHOUT_CLASSIFICATION	0.9900567212569104	WITHOUT_CLASSIFICATION	0.00994327874308968	DESIGN
promise to implement three to N	WITHOUT_CLASSIFICATION	0.9925138036869924	WITHOUT_CLASSIFICATION	0.007486196313007636	DESIGN
promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9981951588368778	WITHOUT_CLASSIFICATION	0.001804841163122155	DESIGN
promise to implement one to three	WITHOUT_CLASSIFICATION	0.9947959217607031	WITHOUT_CLASSIFICATION	0.005204078239296885	DESIGN
promise to implement two to three	WITHOUT_CLASSIFICATION	0.9929772070321777	WITHOUT_CLASSIFICATION	0.007022792967822277	DESIGN
promise to implement three	WITHOUT_CLASSIFICATION	0.9927220000283306	WITHOUT_CLASSIFICATION	0.007277999971669408	DESIGN
all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9960488052274273	WITHOUT_CLASSIFICATION	0.003951194772572725	DESIGN
load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9972623386926827	WITHOUT_CLASSIFICATION	0.0027376613073173033	DESIGN
open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999273971611524	WITHOUT_CLASSIFICATION	7.26028388476262E-5	DESIGN
construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999177030360422	WITHOUT_CLASSIFICATION	8.229696395786295E-5	DESIGN
fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9996751710235808	WITHOUT_CLASSIFICATION	3.2482897641920085E-4	DESIGN
create constructor	WITHOUT_CLASSIFICATION	0.9995905167120429	WITHOUT_CLASSIFICATION	4.094832879571473E-4	DESIGN
wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999345097283081	WITHOUT_CLASSIFICATION	6.549027169185194E-5	DESIGN
end constructor	WITHOUT_CLASSIFICATION	0.9998690185011043	WITHOUT_CLASSIFICATION	1.3098149889568405E-4	DESIGN
start setup method	WITHOUT_CLASSIFICATION	0.9998054256633946	WITHOUT_CLASSIFICATION	1.9457433660528673E-4	DESIGN
set RubyClass	WITHOUT_CLASSIFICATION	0.9991545457766525	WITHOUT_CLASSIFICATION	8.454542233475164E-4	DESIGN
set Ruby	WITHOUT_CLASSIFICATION	0.9981342646938567	WITHOUT_CLASSIFICATION	0.0018657353061432831	DESIGN
all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.99996384911679	WITHOUT_CLASSIFICATION	3.615088320994371E-5	DESIGN
try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.999547665208618	WITHOUT_CLASSIFICATION	4.5233479138198895E-4	DESIGN
get current context	WITHOUT_CLASSIFICATION	0.9999460297678778	WITHOUT_CLASSIFICATION	5.3970232122077785E-5	DESIGN
load self, class, and name	WITHOUT_CLASSIFICATION	0.9996697295903872	WITHOUT_CLASSIFICATION	3.302704096128144E-4	DESIGN
construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999177030360422	WITHOUT_CLASSIFICATION	8.229696395786295E-5	DESIGN
fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9996751710235808	WITHOUT_CLASSIFICATION	3.2482897641920085E-4	DESIGN
create constructor	WITHOUT_CLASSIFICATION	0.9995905167120429	WITHOUT_CLASSIFICATION	4.094832879571473E-4	DESIGN
end constructor	WITHOUT_CLASSIFICATION	0.9998690185011043	WITHOUT_CLASSIFICATION	1.3098149889568405E-4	DESIGN
for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9971228629333756	WITHOUT_CLASSIFICATION	0.00287713706662446	DESIGN
load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9895400991724385	WITHOUT_CLASSIFICATION	0.010459900827561463	DESIGN
convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9994100399450783	WITHOUT_CLASSIFICATION	5.89960054921731E-4	DESIGN
load null block	WITHOUT_CLASSIFICATION	0.9984436050726714	WITHOUT_CLASSIFICATION	0.0015563949273285803	DESIGN
invoke method	WITHOUT_CLASSIFICATION	0.999542447697644	WITHOUT_CLASSIFICATION	4.5755230235603866E-4	DESIGN
if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999563146035145	WITHOUT_CLASSIFICATION	4.368539648556256E-5	DESIGN
end setup method	WITHOUT_CLASSIFICATION	0.9998760301517848	WITHOUT_CLASSIFICATION	1.2396984821507682E-4	DESIGN
end class	WITHOUT_CLASSIFICATION	0.9991721003652664	WITHOUT_CLASSIFICATION	8.278996347336026E-4	DESIGN
create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9997641824284418	WITHOUT_CLASSIFICATION	2.3581757155811446E-4	DESIGN
store the wrapper	WITHOUT_CLASSIFICATION	0.9999885589180642	WITHOUT_CLASSIFICATION	1.1441081935909573E-5	DESIGN
prepare temp locals	WITHOUT_CLASSIFICATION	0.9998841395740466	WITHOUT_CLASSIFICATION	1.1586042595336025E-4	DESIGN
Try to look up field for simple name get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9998582346391011	WITHOUT_CLASSIFICATION	1.4176536089889104E-4	DESIGN
field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9998063563858153	WITHOUT_CLASSIFICATION	1.936436141846682E-4	DESIGN
try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9998345127380924	WITHOUT_CLASSIFICATION	1.6548726190755773E-4	DESIGN
store it	WITHOUT_CLASSIFICATION	0.9997567954201313	WITHOUT_CLASSIFICATION	2.4320457986857022E-4	DESIGN
end of try block	WITHOUT_CLASSIFICATION	0.9999805185208925	WITHOUT_CLASSIFICATION	1.9481479107469835E-5	DESIGN
finally block to release monitor	WITHOUT_CLASSIFICATION	0.9880418462295493	WITHOUT_CLASSIFICATION	0.011958153770450685	DESIGN
exception handling for monitor release	WITHOUT_CLASSIFICATION	0.978311643752167	WITHOUT_CLASSIFICATION	0.021688356247833114	DESIGN
re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9967305170659344	WITHOUT_CLASSIFICATION	0.0032694829340654645	DESIGN
load self, class, and name	WITHOUT_CLASSIFICATION	0.9996697295903872	WITHOUT_CLASSIFICATION	3.302704096128144E-4	DESIGN
load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9895400991724385	WITHOUT_CLASSIFICATION	0.010459900827561463	DESIGN
convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9994100399450783	WITHOUT_CLASSIFICATION	5.89960054921731E-4	DESIGN
invoke method	WITHOUT_CLASSIFICATION	0.999542447697644	WITHOUT_CLASSIFICATION	4.5755230235603866E-4	DESIGN
if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999563146035145	WITHOUT_CLASSIFICATION	4.368539648556256E-5	DESIGN
end setup method	WITHOUT_CLASSIFICATION	0.9998760301517848	WITHOUT_CLASSIFICATION	1.2396984821507682E-4	DESIGN
end class	WITHOUT_CLASSIFICATION	0.9991721003652664	WITHOUT_CLASSIFICATION	8.278996347336026E-4	DESIGN
create the class	WITHOUT_CLASSIFICATION	0.9991105554059657	WITHOUT_CLASSIFICATION	8.894445940342731E-4	DESIGN
method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9953917626422288	WITHOUT_CLASSIFICATION	0.004608237357771241	DESIGN
perform the dispatch	WITHOUT_CLASSIFICATION	0.9998810645432898	WITHOUT_CLASSIFICATION	1.1893545671014228E-4	DESIGN
try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999047644528116	WITHOUT_CLASSIFICATION	9.523554718830964E-5	DESIGN
up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9992712875787321	WITHOUT_CLASSIFICATION	7.287124212678909E-4	DESIGN
up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9992712875787321	WITHOUT_CLASSIFICATION	7.287124212678909E-4	DESIGN
setup the class	WITHOUT_CLASSIFICATION	0.9995343679838137	WITHOUT_CLASSIFICATION	4.656320161863048E-4	DESIGN
now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9960799112006072	WITHOUT_CLASSIFICATION	0.003920088799392842	DESIGN
do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9974280057599707	WITHOUT_CLASSIFICATION	0.0025719942400293477	DESIGN
probably a primitive	WITHOUT_CLASSIFICATION	0.9977904001518048	WITHOUT_CLASSIFICATION	0.0022095998481952072	DESIGN
interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9997072474132115	WITHOUT_CLASSIFICATION	2.9275258678859365E-4	DESIGN
construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9994341692629712	WITHOUT_CLASSIFICATION	5.658307370288626E-4	DESIGN
set the full name	WITHOUT_CLASSIFICATION	0.998012180397564	WITHOUT_CLASSIFICATION	0.0019878196024361032	DESIGN
include all interfaces	WITHOUT_CLASSIFICATION	0.9991241721330132	WITHOUT_CLASSIFICATION	8.758278669869189E-4	DESIGN
if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999424096078618	WITHOUT_CLASSIFICATION	5.7590392138221386E-5	DESIGN
add array construction methods	WITHOUT_CLASSIFICATION	0.9995106590088875	WITHOUT_CLASSIFICATION	4.893409911125027E-4	DESIGN
add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9991890570336462	WITHOUT_CLASSIFICATION	8.109429663536668E-4	DESIGN
add all instance and static methods	WITHOUT_CLASSIFICATION	0.999325500442917	WITHOUT_CLASSIFICATION	6.744995570830819E-4	DESIGN
proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9998551368163323	WITHOUT_CLASSIFICATION	1.4486318366760983E-4	DESIGN
too much array creation!	WITHOUT_CLASSIFICATION	0.9941977864385364	WITHOUT_CLASSIFICATION	0.005802213561463585	DESIGN
only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999597690273803	WITHOUT_CLASSIFICATION	4.02309726197068E-5	DESIGN
add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9988945720308152	WITHOUT_CLASSIFICATION	0.0011054279691848717	DESIGN
add all static variables	WITHOUT_CLASSIFICATION	0.9994099027387202	WITHOUT_CLASSIFICATION	5.900972612798126E-4	DESIGN
only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999946410393554	WITHOUT_CLASSIFICATION	5.3589606446314E-6	DESIGN
looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9998962056147127	WITHOUT_CLASSIFICATION	1.0379438528731555E-4	DESIGN
NOTE: The five match methods are arity-split to avoid the cost of boxing arguments when there's already a cached match. Do not condense them into a single method.	WITHOUT_CLASSIFICATION	0.9999615092163553	WITHOUT_CLASSIFICATION	3.849078364469369E-5	DESIGN
TODO: This is where we would want to do precision checks to see if it's non-destructive to coerce a given type into the target integral primitive	WITHOUT_CLASSIFICATION	0.9331053717245168	DESIGN	0.06689462827548306	WITHOUT_CLASSIFICATION
long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9993032429221771	WITHOUT_CLASSIFICATION	6.96757077822803E-4	DESIGN
double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9998882046947232	WITHOUT_CLASSIFICATION	1.1179530527689206E-4	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.6836008248927323	WITHOUT_CLASSIFICATION	0.3163991751072678	DESIGN
read-volatile	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9970703025445264	WITHOUT_CLASSIFICATION	0.0029296974554734938	DESIGN
we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9994415734639386	WITHOUT_CLASSIFICATION	5.584265360613728E-4	DESIGN
If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9993387714113606	WITHOUT_CLASSIFICATION	6.612285886394374E-4	DESIGN
line 326	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
read-volatile	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9970703025445264	WITHOUT_CLASSIFICATION	0.0029296974554734938	DESIGN
too much array creation!	WITHOUT_CLASSIFICATION	0.9941977864385364	WITHOUT_CLASSIFICATION	0.005802213561463585	DESIGN
construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9995707785008371	WITHOUT_CLASSIFICATION	4.29221499162888E-4	DESIGN
Get map of all fields we want to define.	WITHOUT_CLASSIFICATION	0.9998366597232241	WITHOUT_CLASSIFICATION	1.6334027677598572E-4	DESIGN
Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9989556879613845	WITHOUT_CLASSIFICATION	0.0010443120386155625	DESIGN
Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9950205049251494	WITHOUT_CLASSIFICATION	0.004979495074850641	DESIGN
We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9996284628887174	WITHOUT_CLASSIFICATION	3.7153711128249837E-4	DESIGN
dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9996396697592342	WITHOUT_CLASSIFICATION	3.6033024076579366E-4	DESIGN
initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9971709250145109	WITHOUT_CLASSIFICATION	0.0028290749854891365	DESIGN
initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9992597291414441	WITHOUT_CLASSIFICATION	7.402708585559241E-4	DESIGN
not allowed for original (non-generated) Java classes note: not allowing for any previously created class right now; this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.7150855412681462	WITHOUT_CLASSIFICATION	0.28491445873185384	DESIGN
setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9766234390877285	WITHOUT_CLASSIFICATION	0.02337656091227149	DESIGN
First we make modifications to the class, to adapt it to being both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9993732395452172	WITHOUT_CLASSIFICATION	6.26760454782841E-4	DESIGN
list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9937259015214556	WITHOUT_CLASSIFICATION	0.006274098478544445	DESIGN
We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.994028716009365	WITHOUT_CLASSIFICATION	0.005971283990634982	DESIGN
The replacement "new" allocates and inits the Ruby object as before, but also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.999999427264205	WITHOUT_CLASSIFICATION	5.727357949769133E-7	DESIGN
Next, we define a few private methods that we'll use to manipulate the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.95490573369764	WITHOUT_CLASSIFICATION	0.045094266302360006	DESIGN
jcreate instantiates the proxy object which implements all interfaces and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9961813674909165	WITHOUT_CLASSIFICATION	0.003818632509083472	DESIGN
Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9991405727421763	WITHOUT_CLASSIFICATION	8.59427257823788E-4	DESIGN
implement all forces implementation of all interfaces we intend for this class to implement	WITHOUT_CLASSIFICATION	0.9093457877383158	WITHOUT_CLASSIFICATION	0.09065421226168431	DESIGN
we've already done the above priming logic, just add another interface to the list of intentions unless we're past the point of no return or already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9691610754534515	WITHOUT_CLASSIFICATION	0.030838924546548442	DESIGN
walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.99956040954394	WITHOUT_CLASSIFICATION	4.3959045606000986E-4	DESIGN
construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9650758621965957	WITHOUT_CLASSIFICATION	0.03492413780340429	DESIGN
assuming the user wants a collection of interfaces that can be included together. make it so.	WITHOUT_CLASSIFICATION	0.9960729411414524	WITHOUT_CLASSIFICATION	0.003927058858547545	DESIGN
not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9996246611999153	WITHOUT_CLASSIFICATION	3.7533880008471866E-4	DESIGN
To turn a module into an "interface collection" we add a class instance variable to hold the list of interfaces, and modify append_features for this module to call append_features on each of those interfaces as well	WITHOUT_CLASSIFICATION	0.6904249936602821	DESIGN	0.3095750063397179	WITHOUT_CLASSIFICATION
already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9979879927337928	WITHOUT_CLASSIFICATION	0.002012007266207262	DESIGN
array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9991850795574373	WITHOUT_CLASSIFICATION	8.149204425626634E-4	DESIGN
keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9994596473175746	WITHOUT_CLASSIFICATION	5.403526824253606E-4	DESIGN
array creation should use this variant	WITHOUT_CLASSIFICATION	0.8570905514633848	WITHOUT_CLASSIFICATION	0.14290944853661522	DESIGN
parent.setConstant(name, proxyClass); where the name should come from ?	WITHOUT_CLASSIFICATION	0.9888343434203369	WITHOUT_CLASSIFICATION	0.011165656579663083	DESIGN
including interface module so old-style interface "subclasses" will respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9994347686495555	WITHOUT_CLASSIFICATION	5.652313504444921E-4	DESIGN
add reference to interface module	WITHOUT_CLASSIFICATION	0.9973452563482542	WITHOUT_CLASSIFICATION	0.002654743651745745	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9987831478533725	WITHOUT_CLASSIFICATION	0.0012168521466274776	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9987831478533725	WITHOUT_CLASSIFICATION	0.0012168521466274776	DESIGN
proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9998551368163323	WITHOUT_CLASSIFICATION	1.4486318366760983E-4	DESIGN
same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9998492921148092	WITHOUT_CLASSIFICATION	1.5070788519078531E-4	DESIGN
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999445937621911	WITHOUT_CLASSIFICATION	5.5406237808798035E-5	DESIGN
weakly reserved names	WITHOUT_CLASSIFICATION	0.9991886140097798	WITHOUT_CLASSIFICATION	8.113859902203884E-4	DESIGN
called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999242058857013	WITHOUT_CLASSIFICATION	7.579411429879725E-5	DESIGN
called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999242058857013	WITHOUT_CLASSIFICATION	7.579411429879725E-5	DESIGN
modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999903907230663	WITHOUT_CLASSIFICATION	9.609276933719755E-6	DESIGN
if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999651048475234	WITHOUT_CLASSIFICATION	3.489515247658413E-5	DESIGN
caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9985884719962081	WITHOUT_CLASSIFICATION	0.0014115280037917764	DESIGN
proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9992906441293985	WITHOUT_CLASSIFICATION	7.093558706015899E-4	DESIGN
proxy class for concrete classes. also used for "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.7396996244316533	WITHOUT_CLASSIFICATION	0.26030037556834673	DESIGN
readable only by thread building proxy, so don't need to be volatile. used to handle recursive calls to getProxyClass/Module while proxy is being constructed (usually when a constant defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9610285996643494	WITHOUT_CLASSIFICATION	0.03897140033565063	DESIGN
allow proxy to be read without synchronization. if proxy is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999815364333843	WITHOUT_CLASSIFICATION	1.8463566615697747E-5	DESIGN
Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999554857517846	WITHOUT_CLASSIFICATION	4.4514248215351506E-5	DESIGN
proxy is under construction, building thread can safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999242061020119	WITHOUT_CLASSIFICATION	7.579389798809435E-5	DESIGN
Add property name aliases	WITHOUT_CLASSIFICATION	0.9991452510595414	WITHOUT_CLASSIFICATION	8.547489404586214E-4	DESIGN
getFoo => foo getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9997098152074625	WITHOUT_CLASSIFICATION	2.901847925375684E-4	DESIGN
setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9997146691278073	WITHOUT_CLASSIFICATION	2.8533087219276916E-4	DESIGN
isFoo() => foo, isFoo() => foo()	WITHOUT_CLASSIFICATION	0.9995625157169824	WITHOUT_CLASSIFICATION	4.3748428301758395E-4	DESIGN
Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9997044080862093	WITHOUT_CLASSIFICATION	2.955919137906966E-4	DESIGN
is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9992078911340695	WITHOUT_CLASSIFICATION	7.921088659305108E-4	DESIGN
something?	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999458511699344	WITHOUT_CLASSIFICATION	5.414883006560407E-5	DESIGN
setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999458511699344	WITHOUT_CLASSIFICATION	5.414883006560407E-5	DESIGN
Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.999947575577867	WITHOUT_CLASSIFICATION	5.2424422133079345E-5	DESIGN
Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.999947575577867	WITHOUT_CLASSIFICATION	5.2424422133079345E-5	DESIGN
create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999436354430794	WITHOUT_CLASSIFICATION	5.636455692067169E-5	DESIGN
we need to collect all methods, though we'll only install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9975698412778086	WITHOUT_CLASSIFICATION	0.0024301587221913857	DESIGN
Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9974738017663116	WITHOUT_CLASSIFICATION	0.0025261982336883433	DESIGN
now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9858029298891817	WITHOUT_CLASSIFICATION	0.01419707011081826	DESIGN
old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9970209883371198	WITHOUT_CLASSIFICATION	0.002979011662880127	DESIGN
1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9969165068512933	WITHOUT_CLASSIFICATION	0.0030834931487066326	DESIGN
double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9995031069312117	WITHOUT_CLASSIFICATION	4.968930687883382E-4	DESIGN
setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9997146691278073	WITHOUT_CLASSIFICATION	2.8533087219276916E-4	DESIGN
isFoo() => foo, isFoo() => foo()	WITHOUT_CLASSIFICATION	0.9995625157169824	WITHOUT_CLASSIFICATION	4.3748428301758395E-4	DESIGN
is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9992078911340695	WITHOUT_CLASSIFICATION	7.921088659305108E-4	DESIGN
one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9968601534028662	WITHOUT_CLASSIFICATION	0.0031398465971338276	DESIGN
Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.95460304404019	WITHOUT_CLASSIFICATION	0.04539695595980993	DESIGN
note: intentionally returning the actual array returned from Java, rather than wrapping it in a RubyArray. wave of the future, when java_class will return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999738073516709	WITHOUT_CLASSIFICATION	2.6192648329120224E-5	DESIGN
see note above re: return type	WITHOUT_CLASSIFICATION	0.9433423588335658	WITHOUT_CLASSIFICATION	0.05665764116643433	DESIGN
restrictive security policy; no matter, we only want public classes anyway	WITHOUT_CLASSIFICATION	0.9919645235898608	WITHOUT_CLASSIFICATION	0.008035476410139268	DESIGN
very restrictive policy (disallows Member.PUBLIC) we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9966409913711515	WITHOUT_CLASSIFICATION	0.003359008628848623	DESIGN
one-dimensional array	WITHOUT_CLASSIFICATION	0.9993211148528345	WITHOUT_CLASSIFICATION	6.788851471655051E-4	DESIGN
n-dimensional array	WITHOUT_CLASSIFICATION	0.9997098717747454	WITHOUT_CLASSIFICATION	2.9012822525458106E-4	DESIGN
if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9998230240873548	WITHOUT_CLASSIFICATION	1.7697591264509115E-4	DESIGN
we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9996515088801572	WITHOUT_CLASSIFICATION	3.48491119842776E-4	DESIGN
Proc implementing an interface, pull in the catch-all code that lets the proc get invoked no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.8479470316227277	WITHOUT_CLASSIFICATION	0.1520529683772723	DESIGN
can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.999782155692305	WITHOUT_CLASSIFICATION	2.1784430769491859E-4	DESIGN
getFooBar() => fooBar?, foo_bar?()	WITHOUT_CLASSIFICATION	0.9997064477284391	WITHOUT_CLASSIFICATION	2.935522715609886E-4	DESIGN
If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9994190869840358	WITHOUT_CLASSIFICATION	5.809130159643009E-4	DESIGN
many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9994525200709725	WITHOUT_CLASSIFICATION	5.474799290274609E-4	DESIGN
for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9998746207290284	WITHOUT_CLASSIFICATION	1.2537927097159494E-4	DESIGN
rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9995710370826976	WITHOUT_CLASSIFICATION	4.2896291730238825E-4	DESIGN
the converters handle not only primitive types but also their boxed versions, so we should check if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9996369368094843	WITHOUT_CLASSIFICATION	3.6306319051573156E-4	DESIGN
it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9983473980228327	WITHOUT_CLASSIFICATION	0.0016526019771672983	DESIGN
we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9997187323179627	WITHOUT_CLASSIFICATION	2.812676820372198E-4	DESIGN
set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9998269177829306	WITHOUT_CLASSIFICATION	1.7308221706928312E-4	DESIGN
the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9998232703069919	WITHOUT_CLASSIFICATION	1.7672969300813022E-4	DESIGN
InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9991850795574373	WITHOUT_CLASSIFICATION	8.149204425626634E-4	DESIGN
also create the JavaProxy classes	WITHOUT_CLASSIFICATION	0.9998295931646892	WITHOUT_CLASSIFICATION	1.7040683531083058E-4	DESIGN
The template for interface modules	WITHOUT_CLASSIFICATION	0.9998258664177013	WITHOUT_CLASSIFICATION	1.741335822986954E-4	DESIGN
Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9997328836333924	WITHOUT_CLASSIFICATION	2.671163666075504E-4	DESIGN
add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9986347796485224	WITHOUT_CLASSIFICATION	0.001365220351477593	DESIGN
add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9963012891551782	WITHOUT_CLASSIFICATION	0.0036987108448217386	DESIGN
finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9984140289298699	WITHOUT_CLASSIFICATION	0.0015859710701300858	DESIGN
shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9995760209322292	WITHOUT_CLASSIFICATION	4.2397906777082097E-4	DESIGN
include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9889851637701654	WITHOUT_CLASSIFICATION	0.011014836229834592	DESIGN
java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999273856894749	WITHOUT_CLASSIFICATION	7.261431052502451E-5	DESIGN
other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999717070589614	WITHOUT_CLASSIFICATION	2.8292941038508842E-5	DESIGN
include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9939092531998318	WITHOUT_CLASSIFICATION	0.006090746800168281	DESIGN
JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9991655154689362	WITHOUT_CLASSIFICATION	8.34484531063859E-4	DESIGN
add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9971454379634908	WITHOUT_CLASSIFICATION	0.0028545620365092368	DESIGN
add alias to meta	WITHOUT_CLASSIFICATION	0.9998117580297339	WITHOUT_CLASSIFICATION	1.8824197026607432E-4	DESIGN
we'll only map conventional class names to modules	WITHOUT_CLASSIFICATION	0.9995447143862701	WITHOUT_CLASSIFICATION	4.5528561372995476E-4	DESIGN
expected	WITHOUT_CLASSIFICATION	0.9998339227599332	WITHOUT_CLASSIFICATION	1.6607724006686598E-4	DESIGN
Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999577666758981	WITHOUT_CLASSIFICATION	4.2233324101833594E-5	DESIGN
upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9998095205742558	WITHOUT_CLASSIFICATION	1.904794257441803E-4	DESIGN
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999445937621911	WITHOUT_CLASSIFICATION	5.5406237808798035E-5	DESIGN
add alias to meta	WITHOUT_CLASSIFICATION	0.9998117580297339	WITHOUT_CLASSIFICATION	1.8824197026607432E-4	DESIGN
this is where we'll get connected when classes are opened using package module syntax.	WITHOUT_CLASSIFICATION	0.9951641186851953	WITHOUT_CLASSIFICATION	0.004835881314804723	DESIGN
save package module as ivar in parent, and add method to parent so we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9979589238601368	WITHOUT_CLASSIFICATION	0.002041076139863133	DESIGN
this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9924326753667105	WITHOUT_CLASSIFICATION	0.0075673246332894325	DESIGN
not primitive or lc class	WITHOUT_CLASSIFICATION	0.9933656586024763	WITHOUT_CLASSIFICATION	0.0066343413975236375	DESIGN
not primitive or lc class	WITHOUT_CLASSIFICATION	0.9933656586024763	WITHOUT_CLASSIFICATION	0.0066343413975236375	DESIGN
Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9996369257845209	WITHOUT_CLASSIFICATION	3.6307421547908424E-4	DESIGN
Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.990265527224862	WITHOUT_CLASSIFICATION	0.009734472775137967	DESIGN
hashcode is a combination of the interfaces and the Ruby class we're using to implement them	WITHOUT_CLASSIFICATION	0.9888483942537138	WITHOUT_CLASSIFICATION	0.011151605746286125	DESIGN
if it's a singleton class and the real class is proc, we're doing closure conversion so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999722916595031	WITHOUT_CLASSIFICATION	2.7708340496976714E-5	DESIGN
normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.99832125194106	WITHOUT_CLASSIFICATION	0.0016787480589399407	DESIGN
Initialize some components.	WITHOUT_CLASSIFICATION	0.9983161236212493	WITHOUT_CLASSIFICATION	0.001683876378750718	DESIGN
not synchronizing these methods, no harm if these values get set more than once. (also note that there's no chance of getting a partially initialized class/module, as happens-before is guaranteed by volatile write/read of constants table.)	WITHOUT_CLASSIFICATION	0.9985116829777856	WITHOUT_CLASSIFICATION	0.0014883170222144092	DESIGN
Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9716836050005682	WITHOUT_CLASSIFICATION	0.02831639499943178	DESIGN
for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9998923564266807	WITHOUT_CLASSIFICATION	1.0764357331930384E-4	DESIGN
for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9998923564266807	WITHOUT_CLASSIFICATION	1.0764357331930384E-4	DESIGN
no matching ctor found	WITHOUT_CLASSIFICATION	0.9991177518739041	WITHOUT_CLASSIFICATION	8.822481260959854E-4	DESIGN
Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9932354916185979	WITHOUT_CLASSIFICATION	0.006764508381402094	DESIGN
prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9996751913070575	WITHOUT_CLASSIFICATION	3.2480869294239406E-4	DESIGN
must be a public method	WITHOUT_CLASSIFICATION	0.9982938640984518	WITHOUT_CLASSIFICATION	0.0017061359015482995	DESIGN
must be a public class	WITHOUT_CLASSIFICATION	0.9969420388167577	WITHOUT_CLASSIFICATION	0.0030579611832424348	DESIGN
must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999201927376166	WITHOUT_CLASSIFICATION	7.980726238347015E-5	DESIGN
Special classes like Collections.EMPTY_LIST are inner classes that are private but implement public interfaces. Their methods are all public methods for the public interface. Let these public methods execute via setAccessible(true).	WITHOUT_CLASSIFICATION	0.9373374497603594	WITHOUT_CLASSIFICATION	0.06266255023964062	DESIGN
search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.999057825108013	WITHOUT_CLASSIFICATION	9.421748919869025E-4	DESIGN
no matching method found	WITHOUT_CLASSIFICATION	0.9982750312713704	WITHOUT_CLASSIFICATION	0.0017249687286296344	DESIGN
this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9901830874766855	WITHOUT_CLASSIFICATION	0.009816912523314618	DESIGN
First we need to register the JRuby engine.	WITHOUT_CLASSIFICATION	0.9948266750517081	WITHOUT_CLASSIFICATION	0.005173324948291894	DESIGN
Now we create a new BSFManager.	WITHOUT_CLASSIFICATION	0.9986985754511212	WITHOUT_CLASSIFICATION	0.001301424548878756	DESIGN
Initialize a simple Frame.	WITHOUT_CLASSIFICATION	0.9976200328732981	WITHOUT_CLASSIFICATION	0.0023799671267018753	DESIGN
e.printStackTrace();	WITHOUT_CLASSIFICATION	0.999663435090778	WITHOUT_CLASSIFICATION	3.365649092219208E-4	DESIGN
e.printStackTrace();	WITHOUT_CLASSIFICATION	0.999663435090778	WITHOUT_CLASSIFICATION	3.365649092219208E-4	DESIGN
JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999524566153262	WITHOUT_CLASSIFICATION	4.7543384673853035E-5	DESIGN
end class	WITHOUT_CLASSIFICATION	0.9991721003652664	WITHOUT_CLASSIFICATION	8.278996347336026E-4	DESIGN
this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9901830874766855	WITHOUT_CLASSIFICATION	0.009816912523314618	DESIGN
for our purposes, Accessibles are also Members, and vice-versa, so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999799905138321	WITHOUT_CLASSIFICATION	2.0009486167891956E-5	DESIGN
Declare those components as beans in BSF. Then it will be possible to access those components in Ruby as global variables ($frame, $menubar, ...)	WITHOUT_CLASSIFICATION	0.9998157236417472	WITHOUT_CLASSIFICATION	1.8427635825283228E-4	DESIGN
Execute a Ruby script (add the menubar to the frame).	WITHOUT_CLASSIFICATION	0.9982644214763491	WITHOUT_CLASSIFICATION	0.0017355785236509449	DESIGN
Execute Ruby statements.	WITHOUT_CLASSIFICATION	0.9992824721736291	WITHOUT_CLASSIFICATION	7.175278263708557E-4	DESIGN
Evaluates a Ruby expression and display the result.	WITHOUT_CLASSIFICATION	0.9990443633966865	WITHOUT_CLASSIFICATION	9.556366033135664E-4	DESIGN
Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9991464166934397	WITHOUT_CLASSIFICATION	8.535833065603915E-4	DESIGN
package scope	WITHOUT_CLASSIFICATION	0.9994096477049725	WITHOUT_CLASSIFICATION	5.903522950274607E-4	DESIGN
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999445937621911	WITHOUT_CLASSIFICATION	5.5406237808798035E-5	DESIGN
Ruby-level methods	WITHOUT_CLASSIFICATION	0.9996700556272852	WITHOUT_CLASSIFICATION	3.299443727147723E-4	DESIGN
need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9623321684659866	WITHOUT_CLASSIFICATION	0.037667831534013416	DESIGN
we only collect methods and interfaces for user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9998316435405686	WITHOUT_CLASSIFICATION	1.683564594314069E-4	DESIGN
get JavaClass if this is the new proxy class; verify it matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.999695171696457	WITHOUT_CLASSIFICATION	3.048283035429313E-4	DESIGN
get any included interfaces	WITHOUT_CLASSIFICATION	0.9995276327660516	WITHOUT_CLASSIFICATION	4.723672339483388E-4	DESIGN
lock in the overridden methods for the new class, and any as-yet uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.999834604729461	WITHOUT_CLASSIFICATION	1.6539527053902956E-4	DESIGN
statically initialized below	WITHOUT_CLASSIFICATION	0.9998456958896232	WITHOUT_CLASSIFICATION	1.5430411037682958E-4	DESIGN
finish class initializer	WITHOUT_CLASSIFICATION	0.998128792613744	WITHOUT_CLASSIFICATION	0.0018712073862558964	DESIGN
trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.999778908993981	WITHOUT_CLASSIFICATION	2.2109100601893606E-4	DESIGN
should not happen!	WITHOUT_CLASSIFICATION	0.987780648109989	WITHOUT_CLASSIFICATION	0.01221935189001109	DESIGN
start class	WITHOUT_CLASSIFICATION	0.9994115923699333	WITHOUT_CLASSIFICATION	5.88407630066736E-4	DESIGN
make getter for handler	WITHOUT_CLASSIFICATION	0.9974789616555976	WITHOUT_CLASSIFICATION	0.0025210383444024364	DESIGN
make getter for proxy class	WITHOUT_CLASSIFICATION	0.9977490217394043	WITHOUT_CLASSIFICATION	0.0022509782605956733	DESIGN
add (potentially) overridden names to the key. TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9985789029607851	DESIGN	0.001421097039214938	WITHOUT_CLASSIFICATION
We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9953294315000418	WITHOUT_CLASSIFICATION	0.004670568499958144	DESIGN
create static private method field	WITHOUT_CLASSIFICATION	0.9958188643185567	WITHOUT_CLASSIFICATION	0.0041811356814432515	DESIGN
load static empty array	WITHOUT_CLASSIFICATION	0.9993596455578088	WITHOUT_CLASSIFICATION	6.403544421913187E-4	DESIGN
box arguments	WITHOUT_CLASSIFICATION	0.9998172586437629	WITHOUT_CLASSIFICATION	1.8274135623719032E-4	DESIGN
this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9889318676367528	WITHOUT_CLASSIFICATION	0.011068132363247161	DESIGN
construct the super-proxy method	WITHOUT_CLASSIFICATION	0.9989293660214242	WITHOUT_CLASSIFICATION	0.0010706339785757748	DESIGN
do a void return	WITHOUT_CLASSIFICATION	0.9992784443624135	WITHOUT_CLASSIFICATION	7.215556375864161E-4	DESIGN
utility methods	WITHOUT_CLASSIFICATION	0.9998524324780605	WITHOUT_CLASSIFICATION	1.4756752193947052E-4	DESIGN
Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9996369257845209	WITHOUT_CLASSIFICATION	3.6307421547908424E-4	DESIGN
store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9959884507749346	WITHOUT_CLASSIFICATION	0.004011549225065424	DESIGN
use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9974297810076195	WITHOUT_CLASSIFICATION	0.0025702189923804556	DESIGN
no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9996938138658863	WITHOUT_CLASSIFICATION	3.0618613411368285E-4	DESIGN
only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9992315262576138	WITHOUT_CLASSIFICATION	7.684737423862052E-4	DESIGN
opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9973325891635366	WITHOUT_CLASSIFICATION	0.0026674108364635064	DESIGN
opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9988457326270117	WITHOUT_CLASSIFICATION	0.0011542673729883746	DESIGN
No block from a nil proc	WITHOUT_CLASSIFICATION	0.999536166817597	WITHOUT_CLASSIFICATION	4.638331824028595E-4	DESIGN
If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9979342473553695	WITHOUT_CLASSIFICATION	0.002065752644630433	DESIGN
The current block is already associated with proc. No need to create a new one	WITHOUT_CLASSIFICATION	0.9999668693890487	WITHOUT_CLASSIFICATION	3.3130610951262274E-5	DESIGN
Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9995607784543344	WITHOUT_CLASSIFICATION	4.3922154566561767E-4	DESIGN
NUL	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9985438766277344	WITHOUT_CLASSIFICATION	0.0014561233722656176	DESIGN
Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999610278610712	WITHOUT_CLASSIFICATION	3.8972138928745345E-5	DESIGN
'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9992729207896933	WITHOUT_CLASSIFICATION	7.27079210306565E-4	DESIGN
Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9842306758664794	WITHOUT_CLASSIFICATION	0.015769324133520727	DESIGN
read-volatile	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
read-volatile	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.99196066054122	WITHOUT_CLASSIFICATION	0.00803933945878005	DESIGN
must be power of 2 must be power of 2	WITHOUT_CLASSIFICATION	0.9992210858618321	WITHOUT_CLASSIFICATION	7.78914138167894E-4	DESIGN
Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9910273802744702	WITHOUT_CLASSIFICATION	0.008972619725529856	DESIGN
note segmentShift differs from ConcurrentHashMap's calculation due to issues with System.identityHashCode (upper n bits always 0, at least under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.999054585886523	WITHOUT_CLASSIFICATION	9.454141134769677E-4	DESIGN
System.err.println("ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9994563498143623	WITHOUT_CLASSIFICATION	5.436501856378271E-4	DESIGN
protected void finalize() throws Throwable { System.err.println("ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); }	WITHOUT_CLASSIFICATION	0.977343243677971	WITHOUT_CLASSIFICATION	0.022656756322029032	DESIGN
EntryRefs include hash with key to facilitate lookup by Segment#expunge after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9985913824505759	WITHOUT_CLASSIFICATION	0.0014086175494241577	DESIGN
Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather makes it a final field. The theory is that doing so should force a happens-before relationship WRT the WeakReference constructor, guaranteeing that the key will be visibile to other threads (unless it's been GC'ed). See JLS 17.5 (final fields) and 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9998172726720028	WITHOUT_CLASSIFICATION	1.8272732799718433E-4	DESIGN
references to the Java object and its proxy will either both be weak or both be soft, since the proxy contains a strong reference to the object, so it wouldn't make sense for the reference types to differ.	WITHOUT_CLASSIFICATION	0.999987162479364	WITHOUT_CLASSIFICATION	1.2837520636038648E-5	DESIGN
ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.954472383306692	WITHOUT_CLASSIFICATION	0.04552761669330802	DESIGN
must be called under lock	WITHOUT_CLASSIFICATION	0.9996799142451874	WITHOUT_CLASSIFICATION	3.2008575481257405E-4	DESIGN
must be called under lock	WITHOUT_CLASSIFICATION	0.9996799142451874	WITHOUT_CLASSIFICATION	3.2008575481257405E-4	DESIGN
must be called under lock	WITHOUT_CLASSIFICATION	0.9996799142451874	WITHOUT_CLASSIFICATION	3.2008575481257405E-4	DESIGN
note that we'll potentially see the refs for both the java object and proxy -- whichever we see first will cause the entry to be removed; the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999134598888674	WITHOUT_CLASSIFICATION	8.654011113262682E-5	DESIGN
temp method to verify tableSize value must be called under lock	WITHOUT_CLASSIFICATION	0.9997542564801586	WITHOUT_CLASSIFICATION	2.457435198414653E-4	DESIGN
Single node in list	WITHOUT_CLASSIFICATION	0.9998203513364374	WITHOUT_CLASSIFICATION	1.7964866356251808E-4	DESIGN
indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9991713147146873	WITHOUT_CLASSIFICATION	8.286852853126709E-4	DESIGN
indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9991713147146873	WITHOUT_CLASSIFICATION	8.286852853126709E-4	DESIGN
entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.998136205048551	WITHOUT_CLASSIFICATION	0.001863794951449013	DESIGN
Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9936033084563866	WITHOUT_CLASSIFICATION	0.0063966915436134185	DESIGN
Start of string ([, (, {, <, ', ", \n)	WITHOUT_CLASSIFICATION	0.9999646513453578	WITHOUT_CLASSIFICATION	3.5348654642134386E-5	DESIGN
Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9998028042224992	WITHOUT_CLASSIFICATION	1.9719577750073784E-4	DESIGN
How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9977072052733239	WITHOUT_CLASSIFICATION	0.002292794726676115	DESIGN
For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9998281379641564	WITHOUT_CLASSIFICATION	1.7186203584356052E-4	DESIGN
Last full line read.	WITHOUT_CLASSIFICATION	0.9996831032737303	WITHOUT_CLASSIFICATION	3.1689672626966246E-4	DESIGN
Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9997236128112842	WITHOUT_CLASSIFICATION	2.763871887157926E-4	DESIGN
Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999467012753819	WITHOUT_CLASSIFICATION	5.329872461816398E-5	DESIGN
Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999060460389163	WITHOUT_CLASSIFICATION	9.395396108376708E-5	DESIGN
Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999060460389163	WITHOUT_CLASSIFICATION	9.395396108376708E-5	DESIGN
End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999430823542141	WITHOUT_CLASSIFICATION	5.691764578587437E-5	DESIGN
How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9997316123647827	WITHOUT_CLASSIFICATION	2.6838763521725025E-4	DESIGN
Single-quote fast path	WITHOUT_CLASSIFICATION	0.9993478285231179	WITHOUT_CLASSIFICATION	6.521714768820548E-4	DESIGN
Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9995145579201938	WITHOUT_CLASSIFICATION	4.854420798061895E-4	DESIGN
Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9982304729607638	WITHOUT_CLASSIFICATION	0.001769527039236173	DESIGN
just ignore	WITHOUT_CLASSIFICATION	0.999392048066115	WITHOUT_CLASSIFICATION	6.079519338849147E-4	DESIGN
octal constant	WITHOUT_CLASSIFICATION	0.9996359809664115	WITHOUT_CLASSIFICATION	3.640190335885568E-4	DESIGN
hex constant	WITHOUT_CLASSIFICATION	0.9997050860999437	WITHOUT_CLASSIFICATION	2.9491390005628113E-4	DESIGN
PUSH(1)	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
POP	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
PUSH(0). If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999944248603931	WITHOUT_CLASSIFICATION	5.575139606854279E-6	DESIGN
LEXPOP	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
SET_P	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9993613152472517	WITHOUT_CLASSIFICATION	6.386847527482082E-4	DESIGN
Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9990020855833485	WITHOUT_CLASSIFICATION	9.979144166514893E-4	DESIGN
Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9994097571634784	WITHOUT_CLASSIFICATION	5.902428365215428E-4	DESIGN
Last token read via yylex().	WITHOUT_CLASSIFICATION	0.99995682649008	WITHOUT_CLASSIFICATION	4.3173509920024996E-5	DESIGN
Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999833659954398	WITHOUT_CLASSIFICATION	1.663400456028482E-5	DESIGN
Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9998490837538878	WITHOUT_CLASSIFICATION	1.509162461121438E-4	DESIGN
Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9998518926076165	WITHOUT_CLASSIFICATION	1.4810739238347228E-4	DESIGN
Give a name to a value. Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9082225723942611	DESIGN	0.09177742760573887	WITHOUT_CLASSIFICATION
When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9961928844227481	WITHOUT_CLASSIFICATION	0.003807115577251782	DESIGN
Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9989637134139243	WITHOUT_CLASSIFICATION	0.0010362865860755975	DESIGN
Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9945912902981632	WITHOUT_CLASSIFICATION	0.005408709701836913	DESIGN
1.9 only	WITHOUT_CLASSIFICATION	0.9996481924215188	WITHOUT_CLASSIFICATION	3.5180757848115744E-4	DESIGN
Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.999182650436985	WITHOUT_CLASSIFICATION	8.173495630151404E-4	DESIGN
Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9992055299564557	WITHOUT_CLASSIFICATION	7.94470043544244E-4	DESIGN
no mb || ismbchar(term)	WITHOUT_CLASSIFICATION	0.9993881807057146	WITHOUT_CLASSIFICATION	6.118192942855522E-4	DESIGN
Not normally used, but is left in here since it can be useful in debugging grammar and lexing problems.	WITHOUT_CLASSIFICATION	0.7825093945564143	WITHOUT_CLASSIFICATION	0.2174906054435857	DESIGN
DEBUGGING HELP	WITHOUT_CLASSIFICATION	0.9996656693598465	WITHOUT_CLASSIFICATION	3.343306401534717E-4	DESIGN
'\v'	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
end of script.	WITHOUT_CLASSIFICATION	0.9999187898535482	WITHOUT_CLASSIFICATION	8.121014645169492E-5	DESIGN
white spaces	WITHOUT_CLASSIFICATION	0.9997857736066241	WITHOUT_CLASSIFICATION	2.1422639337591757E-4	DESIGN
'\v'	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
it's a comment	WITHOUT_CLASSIFICATION	0.9986570465977339	WITHOUT_CLASSIFICATION	0.001342953402266039	DESIGN
Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999548837487455	WITHOUT_CLASSIFICATION	4.5116251254444164E-5	DESIGN
$\: output record separator	WITHOUT_CLASSIFICATION	0.9998326612624581	WITHOUT_CLASSIFICATION	1.6733873754194668E-4	DESIGN
EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9982937419397827	WITHOUT_CLASSIFICATION	0.0017062580602172522	DESIGN
documentation nodes	WITHOUT_CLASSIFICATION	0.9999565992762425	WITHOUT_CLASSIFICATION	4.3400723757615584E-5	DESIGN
In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999171975477859	WITHOUT_CLASSIFICATION	8.280245221410001E-5	DESIGN
Just a plain bang	WITHOUT_CLASSIFICATION	0.9995961319196286	WITHOUT_CLASSIFICATION	4.0386808037138516E-4	DESIGN
$_: last read line string	WITHOUT_CLASSIFICATION	0.9999587782781212	WITHOUT_CLASSIFICATION	4.122172187880612E-5	DESIGN
$~: match-data	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
$: argv	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
$$: pid	WITHOUT_CLASSIFICATION	0.999256820023099	WITHOUT_CLASSIFICATION	7.431799769009471E-4	DESIGN
$?: last status	WITHOUT_CLASSIFICATION	0.9995274781614738	WITHOUT_CLASSIFICATION	4.7252183852623916E-4	DESIGN
$!: error string	WITHOUT_CLASSIFICATION	0.9999460976861653	WITHOUT_CLASSIFICATION	5.390231383466524E-5	DESIGN
$@: error position	WITHOUT_CLASSIFICATION	0.9998787398830037	WITHOUT_CLASSIFICATION	1.2126011699634659E-4	DESIGN
$/: input record separator	WITHOUT_CLASSIFICATION	0.9995943315205256	WITHOUT_CLASSIFICATION	4.0566847947436834E-4	DESIGN
$;: field separator	WITHOUT_CLASSIFICATION	0.9997911039317682	WITHOUT_CLASSIFICATION	2.0889606823175144E-4	DESIGN
$,: output field separator	WITHOUT_CLASSIFICATION	0.9997051886696761	WITHOUT_CLASSIFICATION	2.948113303239296E-4	DESIGN
$.: last read line number	WITHOUT_CLASSIFICATION	0.9998912568158974	WITHOUT_CLASSIFICATION	1.0874318410256762E-4	DESIGN
$=: ignorecase	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
$:: load path	WITHOUT_CLASSIFICATION	0.9990407062615231	WITHOUT_CLASSIFICATION	9.592937384768311E-4	DESIGN
$<: reading filename	WITHOUT_CLASSIFICATION	0.9999338836761973	WITHOUT_CLASSIFICATION	6.611632380268494E-5	DESIGN
$": already loaded files	WITHOUT_CLASSIFICATION	0.9999211585637141	WITHOUT_CLASSIFICATION	7.884143628595513E-5	DESIGN
$&: last match	WITHOUT_CLASSIFICATION	0.9998845308602259	WITHOUT_CLASSIFICATION	1.1546913977422377E-4	DESIGN
$`: string before last match	WITHOUT_CLASSIFICATION	0.999953862837144	WITHOUT_CLASSIFICATION	4.6137162855892883E-5	DESIGN
$': string after last match	WITHOUT_CLASSIFICATION	0.9999169707242794	WITHOUT_CLASSIFICATION	8.302927572068459E-5	DESIGN
methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999721851072032	WITHOUT_CLASSIFICATION	2.781489279671185E-5	DESIGN
See if it is a reserved word.	WITHOUT_CLASSIFICATION	0.9995069255488465	WITHOUT_CLASSIFICATION	4.930744511535616E-4	DESIGN
enum lex_state	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
block (primary)	WITHOUT_CLASSIFICATION	0.9996413457287546	WITHOUT_CLASSIFICATION	3.586542712453625E-4	DESIGN
block (expr)	WITHOUT_CLASSIFICATION	0.9996413457287546	WITHOUT_CLASSIFICATION	3.586542712453625E-4	DESIGN
hash	WITHOUT_CLASSIFICATION	0.9994419838674301	WITHOUT_CLASSIFICATION	5.580161325698667E-4	DESIGN
ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9969512944934463	WITHOUT_CLASSIFICATION	0.0030487055065536346	DESIGN
FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9350618000963694	WITHOUT_CLASSIFICATION	0.06493819990363066	DESIGN
We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9996552762164521	WITHOUT_CLASSIFICATION	3.447237835479105E-4	DESIGN
hexadecimal	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
binary	WITHOUT_CLASSIFICATION	0.9996794267831153	WITHOUT_CLASSIFICATION	3.205732168847419E-4	DESIGN
decimal	WITHOUT_CLASSIFICATION	0.9996502964737102	WITHOUT_CLASSIFICATION	3.497035262898055E-4	DESIGN
Octal	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
'_' in number just ignored	WITHOUT_CLASSIFICATION	0.9997675024728703	WITHOUT_CLASSIFICATION	2.3249752712961922E-4	DESIGN
backslash	WITHOUT_CLASSIFICATION	0.9993094650534103	WITHOUT_CLASSIFICATION	6.905349465896534E-4	DESIGN
newline	WITHOUT_CLASSIFICATION	0.9993086817100222	WITHOUT_CLASSIFICATION	6.91318289977836E-4	DESIGN
horizontal tab	WITHOUT_CLASSIFICATION	0.9998004832834166	WITHOUT_CLASSIFICATION	1.995167165833627E-4	DESIGN
form feed	WITHOUT_CLASSIFICATION	0.9996447345476644	WITHOUT_CLASSIFICATION	3.552654523356339E-4	DESIGN
vertical tab	WITHOUT_CLASSIFICATION	0.9997962855170358	WITHOUT_CLASSIFICATION	2.037144829641108E-4	DESIGN
alarm(bell)	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
escape	WITHOUT_CLASSIFICATION	0.9994292091650722	WITHOUT_CLASSIFICATION	5.707908349278829E-4	DESIGN
hex constant	WITHOUT_CLASSIFICATION	0.9997050860999437	WITHOUT_CLASSIFICATION	2.9491390005628113E-4	DESIGN
char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9998784508487938	WITHOUT_CLASSIFICATION	1.2154915120618359E-4	DESIGN
If \r\n then just pass along \n (windows). If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999359899805091	WITHOUT_CLASSIFICATION	6.401001949089487E-5	DESIGN
space	WITHOUT_CLASSIFICATION	0.9999102549088564	WITHOUT_CLASSIFICATION	8.974509114365626E-5	DESIGN
Where we started this marker match	WITHOUT_CLASSIFICATION	0.9965108537165817	WITHOUT_CLASSIFICATION	0.003489146283418305	DESIGN
Position within source must reflect the actual offset and column. Since we ate an extra character here (this accounting is normally done in read ), we should update position info.	WITHOUT_CLASSIFICATION	0.9997551018773825	WITHOUT_CLASSIFICATION	2.448981226175262E-4	DESIGN
We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9976105214473561	WITHOUT_CLASSIFICATION	0.0023894785526438994	DESIGN
If \r\n then just pass along \n (windows). If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999359899805091	WITHOUT_CLASSIFICATION	6.401001949089487E-5	DESIGN
FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.807428023139869	WITHOUT_CLASSIFICATION	0.19257197686013086	DESIGN
FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.807428023139869	WITHOUT_CLASSIFICATION	0.19257197686013086	DESIGN
Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9992101148743379	WITHOUT_CLASSIFICATION	7.898851256621691E-4	DESIGN
Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9988650140645836	WITHOUT_CLASSIFICATION	0.0011349859354164208	DESIGN
index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9987873263808467	WITHOUT_CLASSIFICATION	0.0012126736191533395	DESIGN
Character read before previous read	WITHOUT_CLASSIFICATION	0.9996858662708838	WITHOUT_CLASSIFICATION	3.1413372911610177E-4	DESIGN
keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9943620719757511	WITHOUT_CLASSIFICATION	0.005637928024248915	DESIGN
NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9992078911340695	WITHOUT_CLASSIFICATION	7.921088659305108E-4	DESIGN
BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. We did it here for now	WITHOUT_CLASSIFICATION	0.9940063666381254	DESIGN	0.005993633361874703	WITHOUT_CLASSIFICATION
Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9969164392564169	WITHOUT_CLASSIFICATION	0.0030835607435831633	DESIGN
that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9903118940727651	WITHOUT_CLASSIFICATION	0.009688105927234864	DESIGN
Rubygems is too specific on host cpu so until we have real need lets default to universal setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9985526176527386	WITHOUT_CLASSIFICATION	0.0014473823472613695	DESIGN
Our shell scripts pass in non-canonicalized paths, but even if we didn't anyone who did would become unhappy because Ruby apps expect no relative operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9996516986903837	WITHOUT_CLASSIFICATION	3.483013096162691E-4	DESIGN
this set is only for darwin	WITHOUT_CLASSIFICATION	0.9964138092809878	WITHOUT_CLASSIFICATION	0.0035861907190121818	DESIGN
DigestLibrary	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
all errors, just info; do not prevent loading IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.983756315378515	WITHOUT_CLASSIFICATION	0.016243684621484962	DESIGN
all errors, just info; do not prevent unloading IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9824034525451161	WITHOUT_CLASSIFICATION	0.0175965474548839	DESIGN
do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999071086932785	WITHOUT_CLASSIFICATION	9.289130672154468E-5	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
line 329	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9987259086201415	WITHOUT_CLASSIFICATION	0.0012740913798584602	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
dynamically increase	WITHOUT_CLASSIFICATION	0.9997522954118101	WITHOUT_CLASSIFICATION	2.4770458818990326E-4	DESIGN
discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9943379195289413	WITHOUT_CLASSIFICATION	0.005662080471058716	DESIGN
else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9995569614040316	WITHOUT_CLASSIFICATION	4.4303859596833635E-4	DESIGN
shift to yyN	WITHOUT_CLASSIFICATION	0.9995852451458258	WITHOUT_CLASSIFICATION	4.1475485417418194E-4	DESIGN
reduce (yyN)	WITHOUT_CLASSIFICATION	0.9994201298513651	WITHOUT_CLASSIFICATION	5.798701486350418E-4	DESIGN
leave stack alone	WITHOUT_CLASSIFICATION	0.9998513114273558	WITHOUT_CLASSIFICATION	1.4868857264424638E-4	DESIGN
line 271	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 274	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 303	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 311	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 314	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 317	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 332	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 338	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 341	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 344	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 351	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 358	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 367	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 372	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 378	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 382	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 407	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 411	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 414	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 417	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 420	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 426	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 434	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 443	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 446	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 452	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 457	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 464	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 467	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 470	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 479	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 484	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 486	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 492	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 498	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 501	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 504	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 507	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 510	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 519	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 525	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
line 537	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 540	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 543	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 546	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 556	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 559	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 563	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 566	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 569	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 575	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 578	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 587	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 596	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 604	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 607	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 610	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 613	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 616	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 634	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 638	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 643	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 646	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 655	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 660	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 667	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 670	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 672	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 696	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 701	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 717	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 720	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 726	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 729	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 732	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 735	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 738	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 751	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 754	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 757	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 760	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 763	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 769	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 772	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 775	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 782	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 788	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 791	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 794	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 797	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 803	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 806	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 809	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 815	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 818	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 821	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 824	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 830	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 833	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 836	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 839	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 842	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 848	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 852	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 858	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 861	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 868	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 871	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 876	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 879	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 883	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 893	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 896	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 899	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 903	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 907	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 915	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 920	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 923	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 926	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 932	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 936	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 940	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 944	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 948	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 956	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 960	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 964	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 967	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 972	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 978	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 980	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 984	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 986	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 996	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1001	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1004	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1008	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1014	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1029	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1032	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1034	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1045	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1048	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1051	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1058	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1070	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1073	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1076	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1079	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1082	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1089	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1097	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1100	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1103	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1107	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1111	WITHOUT_CLASSIFICATION	0.9995928554418296	WITHOUT_CLASSIFICATION	4.071445581703772E-4	DESIGN
line 1113	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1115	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1119	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1130	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1133	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1135	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1137	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1140	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1151	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1154	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1158	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1164	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1175	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1178	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1187	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1189	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1193	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1204	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1207	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1210	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1214	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1234	WITHOUT_CLASSIFICATION	0.9995898080631267	WITHOUT_CLASSIFICATION	4.1019193687324746E-4	DESIGN
line 1239	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1243	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1247	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1251	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1263	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1269	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1280	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1283	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1290	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1296	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1299	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1302	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1309	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1313	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1315	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1320	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1328	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1335	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1348	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1352	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1358	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1374	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1381	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1387	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1392	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1415	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1431	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1434	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1440	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1443	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1453	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1456	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1462	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1465	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1470	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1477	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1480	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1485	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1488	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1496	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1502	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1510	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1513	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1516	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1533	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1550	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1553	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1556	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1565	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1568	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1571	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1574	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1577	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1587	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1595	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1598	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1600	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1609	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1623	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1626	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1629	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1632	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1638	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1641	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1644	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1649	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1655	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1658	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1661	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1672	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1677	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1687	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1694	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1705	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1708	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1725	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1733	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1742	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1745	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1749	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1757	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1769	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1772	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1775	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1784	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1808	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1814	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1818	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1822	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
force for args	WITHOUT_CLASSIFICATION	0.9995409547702847	WITHOUT_CLASSIFICATION	4.5904522971525777E-4	DESIGN
XXX 0;	WITHOUT_CLASSIFICATION	0.9994985105712179	WITHOUT_CLASSIFICATION	5.014894287822218E-4	DESIGN
$$ = $3;	WITHOUT_CLASSIFICATION	0.999756821746934	WITHOUT_CLASSIFICATION	2.4317825306594643E-4	DESIGN
}	WITHOUT_CLASSIFICATION	0.9991423480315459	WITHOUT_CLASSIFICATION	8.576519684540355E-4	DESIGN
last expression should not be void	WITHOUT_CLASSIFICATION	0.9913873184055925	WITHOUT_CLASSIFICATION	0.008612681594407557	DESIGN
compstmt position includes both parens around it	WITHOUT_CLASSIFICATION	0.9925894621181516	WITHOUT_CLASSIFICATION	0.007410537881848408	DESIGN
$8 == null ? NilImplicitNode.NIL : $8;	WITHOUT_CLASSIFICATION	0.9567487321882087	WITHOUT_CLASSIFICATION	0.043251267811791345	DESIGN
$5 == null ? NilImplicitNode.NIL : $5;	WITHOUT_CLASSIFICATION	0.9567487321882087	WITHOUT_CLASSIFICATION	0.043251267811791345	DESIGN
NOEX_PRIVATE for toplevel	WITHOUT_CLASSIFICATION	0.9995356866505043	WITHOUT_CLASSIFICATION	4.643133494957723E-4	DESIGN
mirko: check	WITHOUT_CLASSIFICATION	0.9998757322777974	WITHOUT_CLASSIFICATION	1.2426772220274046E-4	DESIGN
Include pipes on multiple arg type	WITHOUT_CLASSIFICATION	0.9838065540592231	WITHOUT_CLASSIFICATION	0.016193445940776895	DESIGN
line 529	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
.setPosFrom($2);	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
XXX	WITHOUT_CLASSIFICATION	0.9994778794130351	WITHOUT_CLASSIFICATION	5.221205869648205E-4	DESIGN
zero length array	WITHOUT_CLASSIFICATION	0.9999175649645656	WITHOUT_CLASSIFICATION	8.243503543440088E-5	DESIGN
DStrNode: :"some text #{some expression}"	WITHOUT_CLASSIFICATION	0.9996522514456381	WITHOUT_CLASSIFICATION	3.477485543619004E-4	DESIGN
StrNode: :"some text"	WITHOUT_CLASSIFICATION	0.9992113236220885	WITHOUT_CLASSIFICATION	7.886763779114923E-4	DESIGN
EvStrNode :"#{some expression}"	WITHOUT_CLASSIFICATION	0.9991850795574373	WITHOUT_CLASSIFICATION	8.149204425626634E-4	DESIGN
line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9995518464019892	WITHOUT_CLASSIFICATION	4.481535980107317E-4	DESIGN
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9974045573542866	WITHOUT_CLASSIFICATION	0.00259544264571343	DESIGN
yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9987259086201415	WITHOUT_CLASSIFICATION	0.0012740913798584602	DESIGN
line 7713 "-"	WITHOUT_CLASSIFICATION	0.9998197647212081	WITHOUT_CLASSIFICATION	1.8023527879185717E-4	DESIGN
local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999730058843646	WITHOUT_CLASSIFICATION	2.6994115635397893E-5	DESIGN
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9997990666140696	WITHOUT_CLASSIFICATION	2.0093338593037512E-4	DESIGN
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9997990666140696	WITHOUT_CLASSIFICATION	2.0093338593037512E-4	DESIGN
We know this is a block scope because a local scope cannot be within a local scope If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999813088969756	WITHOUT_CLASSIFICATION	1.869110302450816E-5	DESIGN
ENEBO: 1.9 has CURR nodes for local/block variables. We don't. I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9831511338700908	WITHOUT_CLASSIFICATION	0.01684886612990918	DESIGN
odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9996194731101329	WITHOUT_CLASSIFICATION	3.8052688986703163E-4	DESIGN
What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9985208089524452	WITHOUT_CLASSIFICATION	0.0014791910475548586	DESIGN
Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9720680845633447	WITHOUT_CLASSIFICATION	0.027931915436655293	DESIGN
We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9997839404860184	WITHOUT_CLASSIFICATION	2.160595139816972E-4	DESIGN
Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9992180722859523	WITHOUT_CLASSIFICATION	7.81927714047664E-4	DESIGN
Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9991705187987608	WITHOUT_CLASSIFICATION	8.294812012391672E-4	DESIGN
Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9857167026548572	WITHOUT_CLASSIFICATION	0.014283297345142916	DESIGN
__END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9979569281522362	WITHOUT_CLASSIFICATION	0.002043071847763753	DESIGN
Parser states:	WITHOUT_CLASSIFICATION	0.9994540748311052	WITHOUT_CLASSIFICATION	5.459251688948072E-4	DESIGN
Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9994407833136306	WITHOUT_CLASSIFICATION	5.592166863693307E-4	DESIGN
Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9055769896797596	WITHOUT_CLASSIFICATION	0.09442301032024034	DESIGN
LOCALVAR	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
CONSTANT	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9987915027788589	WITHOUT_CLASSIFICATION	0.00120849722114111	DESIGN
MRI: block_append	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
Reduces overhead in interp by not set position every single line we encounter.	WITHOUT_CLASSIFICATION	0.9997712989933298	WITHOUT_CLASSIFICATION	2.2870100667016945E-4	DESIGN
Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9995481384596954	WITHOUT_CLASSIFICATION	4.518615403046517E-4	DESIGN
return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9994141718403402	WITHOUT_CLASSIFICATION	5.85828159659824E-4	DESIGN
Node	WITHOUT_CLASSIFICATION	0.9991961249757118	WITHOUT_CLASSIFICATION	8.038750242881907E-4	DESIGN
FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9910526498224681	DESIGN	0.008947350177531925	WITHOUT_CLASSIFICATION
case CONSTNODE: handleUselessWarn(node, "a constant"); return;	WITHOUT_CLASSIFICATION	0.9998259287937115	WITHOUT_CLASSIFICATION	1.740712062885526E-4	DESIGN
FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9910526498224681	DESIGN	0.008947350177531925	WITHOUT_CLASSIFICATION
case CLASSNODE: case COLON2NODE: handleUselessWarn(node, "::"); return;	WITHOUT_CLASSIFICATION	0.9998259287937115	WITHOUT_CLASSIFICATION	1.740712062885526E-4	DESIGN
case SELFNODE: handleUselessWarn(node, "self"); return;	WITHOUT_CLASSIFICATION	0.9998259287937115	WITHOUT_CLASSIFICATION	1.740712062885526E-4	DESIGN
FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.524776523257621	WITHOUT_CLASSIFICATION	0.475223476742379	DESIGN
MRI: range_op	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.998534266574936	WITHOUT_CLASSIFICATION	0.0014657334250640106	DESIGN
foo()	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
foo()	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
foo()	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
tail must be EvStrNode at this point	WITHOUT_CLASSIFICATION	0.9953038285995158	WITHOUT_CLASSIFICATION	0.004696171400484209	DESIGN
Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9978386062040396	WITHOUT_CLASSIFICATION	0.0021613937959603768	DESIGN
Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9996753038790921	WITHOUT_CLASSIFICATION	3.2469612090791776E-4	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
dynamically increase	WITHOUT_CLASSIFICATION	0.9997522954118101	WITHOUT_CLASSIFICATION	2.4770458818990326E-4	DESIGN
else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9995569614040316	WITHOUT_CLASSIFICATION	4.4303859596833635E-4	DESIGN
shift to yyN	WITHOUT_CLASSIFICATION	0.9995852451458258	WITHOUT_CLASSIFICATION	4.1475485417418194E-4	DESIGN
reduce (yyN)	WITHOUT_CLASSIFICATION	0.9994201298513651	WITHOUT_CLASSIFICATION	5.798701486350418E-4	DESIGN
leave stack alone	WITHOUT_CLASSIFICATION	0.9998513114273558	WITHOUT_CLASSIFICATION	1.4868857264424638E-4	DESIGN
line 321	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 351	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 382	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 417	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 420	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 423	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 426	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 280	WITHOUT_CLASSIFICATION	0.9995932949131413	WITHOUT_CLASSIFICATION	4.0670508685873813E-4	DESIGN
line 283	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 296	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 324	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 327	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 331	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 333	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 336	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 342	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 345	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 348	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 354	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 368	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 377	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 388	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 392	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 397	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 429	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 432	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 436	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 445	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 448	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 454	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 459	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 466	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 469	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 478	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 481	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 488	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 494	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 497	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 503	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 506	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 509	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 512	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 521	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 526	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 540	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 543	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 546	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 566	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 610	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 672	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 691	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 696	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 772	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 782	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 785	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 788	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 791	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 534	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 549	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 552	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 558	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 561	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 571	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 574	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 579	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 586	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 589	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 592	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 595	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 598	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 623	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 627	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 630	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 633	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 639	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 648	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 657	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 661	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 666	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 678	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 682	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 688	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 699	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 706	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 708	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 727	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 737	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 753	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 779	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 801	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 808	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 811	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 817	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 842	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 845	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 848	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 893	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 899	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 932	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 944	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 960	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 980	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1004	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1038	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 820	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 826	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 829	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 832	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 851	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 857	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 860	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 863	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 866	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 869	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 875	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 884	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 887	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 890	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 902	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 909	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 912	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 916	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 922	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 928	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 941	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 947	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 951	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 955	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 965	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 969	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 977	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 983	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1013	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1023	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1035	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1041	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1043	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1054	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1057	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1060	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1069	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1075	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1105	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1111	WITHOUT_CLASSIFICATION	0.9995928554418296	WITHOUT_CLASSIFICATION	4.071445581703772E-4	DESIGN
line 1122	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1130	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1140	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1158	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1204	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1207	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1247	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1251	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1261	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1078	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1084	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1087	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1090	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1093	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1114	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1116	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1118	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1124	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1126	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1138	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1144	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1149	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1155	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1162	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1173	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1179	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1182	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1190	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1196	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1213	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1217	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1231	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1236	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1244	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1254	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1258	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1264	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1270	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1273	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1276	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1279	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1282	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1289	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1292	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1295	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1298	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1305	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1348	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1387	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1392	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1448	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1462	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1470	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1496	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1502	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1595	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1598	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1308	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1311	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1317	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1323	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1326	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1329	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1337	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1342	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1345	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1354	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1359	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1366	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1369	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1373	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1377	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1383	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1399	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1401	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1406	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1417	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1424	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1427	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1430	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1433	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1436	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1442	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1445	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1458	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1464	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1489	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1493	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1507	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1519	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1532	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1538	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1542	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1557	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1573	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1591	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1615	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1629	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1632	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1705	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1716	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1725	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1742	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1749	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1818	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1822	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1607	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1610	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1622	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1625	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1636	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1639	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1647	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1651	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1657	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1660	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1663	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1678	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1702	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1711	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1719	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1722	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1731	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1734	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1738	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1746	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1756	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1758	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1761	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1767	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1776	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1782	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1785	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1788	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1791	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1797	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1800	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1803	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1806	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1809	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1815	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1825	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1828	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1831	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1847	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
$8 == null ? NilImplicitNode.NIL : $8;	WITHOUT_CLASSIFICATION	0.9567487321882087	WITHOUT_CLASSIFICATION	0.043251267811791345	DESIGN
$5 == null ? NilImplicitNode.NIL : $5;	WITHOUT_CLASSIFICATION	0.9567487321882087	WITHOUT_CLASSIFICATION	0.043251267811791345	DESIGN
.setPosFrom($2);	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
zero length array	WITHOUT_CLASSIFICATION	0.9999175649645656	WITHOUT_CLASSIFICATION	8.243503543440088E-5	DESIGN
DStrNode: :"some text #{some expression}"	WITHOUT_CLASSIFICATION	0.9996522514456381	WITHOUT_CLASSIFICATION	3.477485543619004E-4	DESIGN
StrNode: :"some text"	WITHOUT_CLASSIFICATION	0.9992113236220885	WITHOUT_CLASSIFICATION	7.886763779114923E-4	DESIGN
EvStrNode :"#{some expression}"	WITHOUT_CLASSIFICATION	0.9991850795574373	WITHOUT_CLASSIFICATION	8.149204425626634E-4	DESIGN
INSTANCE VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9992078911340695	WITHOUT_CLASSIFICATION	7.921088659305108E-4	DESIGN
line 1854	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1869	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1872	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1877	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1886	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1898	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1902	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1905	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1911	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1918	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1935	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1938	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1942	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1948	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1960	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1963	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1968	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1972	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1982	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1995	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 2000	WITHOUT_CLASSIFICATION	0.9994796849257935	WITHOUT_CLASSIFICATION	5.203150742064136E-4	DESIGN
line 2006	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 2010	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
We may need to subtract addition offset off of first	WITHOUT_CLASSIFICATION	0.9997745200726984	WITHOUT_CLASSIFICATION	2.2547992730156531E-4	DESIGN
string fragment (we optimistically take one off in	WITHOUT_CLASSIFICATION	0.9995703780899534	WITHOUT_CLASSIFICATION	4.296219100465808E-4	DESIGN
ParserSupport.literal_concat). Check token length	WITHOUT_CLASSIFICATION	0.9993302978217408	WITHOUT_CLASSIFICATION	6.697021782591313E-4	DESIGN
and subtract as neeeded.	WITHOUT_CLASSIFICATION	0.9997730627245901	WITHOUT_CLASSIFICATION	2.2693727540993542E-4	DESIGN
$$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);	WITHOUT_CLASSIFICATION	0.999597130122852	WITHOUT_CLASSIFICATION	4.0286987714800444E-4	DESIGN
ENEBO: arg surrounded by in_defined set/unset	WITHOUT_CLASSIFICATION	0.9996503495994643	WITHOUT_CLASSIFICATION	3.496504005356719E-4	DESIGN
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9974045573542866	WITHOUT_CLASSIFICATION	0.00259544264571343	DESIGN
yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9987259086201415	WITHOUT_CLASSIFICATION	0.0012740913798584602	DESIGN
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9997990666140696	WITHOUT_CLASSIFICATION	2.0093338593037512E-4	DESIGN
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9997990666140696	WITHOUT_CLASSIFICATION	2.0093338593037512E-4	DESIGN
ENEBO: Removed !compile_for_eval which probably is to reduce warnings	WITHOUT_CLASSIFICATION	0.9994028427515899	WITHOUT_CLASSIFICATION	5.971572484101458E-4	DESIGN
was $$ = null;	WITHOUT_CLASSIFICATION	0.9997199908931057	WITHOUT_CLASSIFICATION	2.800091068943519E-4	DESIGN
line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.999564395771324	WITHOUT_CLASSIFICATION	4.3560422867588934E-4	DESIGN
line 8143 "-"	WITHOUT_CLASSIFICATION	0.9998197647212081	WITHOUT_CLASSIFICATION	1.8023527879185717E-4	DESIGN
we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9996838858283232	WITHOUT_CLASSIFICATION	3.161141716767674E-4	DESIGN
No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.999947859441342	WITHOUT_CLASSIFICATION	5.214055865805589E-5	DESIGN
Next immediate scope. Variable and constant scoping rules make use of this variable in different ways.	WITHOUT_CLASSIFICATION	0.9279897832895256	WITHOUT_CLASSIFICATION	0.07201021671047435	DESIGN
Live reference to module	WITHOUT_CLASSIFICATION	0.999222195924025	WITHOUT_CLASSIFICATION	7.778040759749914E-4	DESIGN
Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9998026796632064	WITHOUT_CLASSIFICATION	1.973203367935989E-4	DESIGN
Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999191228001835	WITHOUT_CLASSIFICATION	8.087719981654396E-5	DESIGN
number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9980816855519211	WITHOUT_CLASSIFICATION	0.0019183144480788216	DESIGN
number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9976470674867353	WITHOUT_CLASSIFICATION	0.002352932513264816	DESIGN
index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9971255740116911	WITHOUT_CLASSIFICATION	0.002874425988308942	DESIGN
Note that this object equality check is intentional, to ensure the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999960425789219	WITHOUT_CLASSIFICATION	3.957421077992349E-6	DESIGN
Returns slot of variable	WITHOUT_CLASSIFICATION	0.9992174403704032	WITHOUT_CLASSIFICATION	7.825596295967727E-4	DESIGN
Returns slot of variable	WITHOUT_CLASSIFICATION	0.9992174403704032	WITHOUT_CLASSIFICATION	7.825596295967727E-4	DESIGN
Note: Only used by compiler until it can use getConstant again or use some other refactoring	WITHOUT_CLASSIFICATION	0.7803367862911051	WITHOUT_CLASSIFICATION	0.21966321370889474	DESIGN
If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9998674733841457	WITHOUT_CLASSIFICATION	1.3252661585422704E-4	DESIGN
Try and unload the autoload specified from internedName	WITHOUT_CLASSIFICATION	0.9995159271813772	WITHOUT_CLASSIFICATION	4.840728186227598E-4	DESIGN
We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9993742875843803	WITHOUT_CLASSIFICATION	6.257124156196249E-4	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9997465793700224	WITHOUT_CLASSIFICATION	2.5342062997753934E-4	DESIGN
do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9987450418329107	WITHOUT_CLASSIFICATION	0.0012549581670892374	DESIGN
source extensions	WITHOUT_CLASSIFICATION	0.9998653044339569	WITHOUT_CLASSIFICATION	1.346955660430735E-4	DESIGN
do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9987450418329107	WITHOUT_CLASSIFICATION	0.0012549581670892374	DESIGN
. Array given to rest should pass itself . Array with rest + other args should extract array . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9983625420562856	WITHOUT_CLASSIFICATION	0.0016374579437143156	DESIGN
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9752583598125925	WITHOUT_CLASSIFICATION	0.024741640187407567	DESIGN
Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.7335286033292027	WITHOUT_CLASSIFICATION	0.26647139667079733	DESIGN
Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.5375631148533209	WITHOUT_CLASSIFICATION	0.46243688514667913	DESIGN
private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9920467864043122	WITHOUT_CLASSIFICATION	0.007953213595687843	DESIGN
private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9920467864043122	WITHOUT_CLASSIFICATION	0.007953213595687843	DESIGN
List of active dynamic scopes. Each of these may have captured other dynamic scopes to implement closures.	WITHOUT_CLASSIFICATION	0.9507921525279309	WITHOUT_CLASSIFICATION	0.049207847472068994	DESIGN
File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.999905862872852	WITHOUT_CLASSIFICATION	9.413712714800993E-5	DESIGN
Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.999797928838894	WITHOUT_CLASSIFICATION	2.0207116110613723E-4	DESIGN
In certain places, like grep, we don't use real frames for the call blocks. This has the effect of not setting the backref in the correct frame - this delta is activated to the place where the grep is running in so that the backref will be set in an appropriate place.	WITHOUT_CLASSIFICATION	0.9964352325288762	DESIGN	0.0035647674711237493	WITHOUT_CLASSIFICATION
TOPLEVEL self and a few others want a top-level scope. We create this one right away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.6023021551922868	DESIGN	0.3976978448077132	WITHOUT_CLASSIFICATION
CATCH MANAGEMENT	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
FRAME MANAGEMENT	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9908075346713794	WITHOUT_CLASSIFICATION	0.009192465328620588	DESIGN
assert level == 0;	WITHOUT_CLASSIFICATION	0.9999444320438007	WITHOUT_CLASSIFICATION	5.55679561993083E-5	DESIGN
assert level == 0;	WITHOUT_CLASSIFICATION	0.9999444320438007	WITHOUT_CLASSIFICATION	5.55679561993083E-5	DESIGN
look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9994267201485464	WITHOUT_CLASSIFICATION	5.73279851453529E-4	DESIGN
if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999386349189002	WITHOUT_CLASSIFICATION	6.136508109973144E-5	DESIGN
look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9995028425478768	WITHOUT_CLASSIFICATION	4.971574521231948E-4	DESIGN
All entries following removed node can stay in list, but all preceding ones need to be cloned.	WITHOUT_CLASSIFICATION	0.9974518278386093	WITHOUT_CLASSIFICATION	0.002548172161390762	DESIGN
required and optional only	WITHOUT_CLASSIFICATION	0.9998865009662596	WITHOUT_CLASSIFICATION	1.134990337403223E-4	DESIGN
do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9987450418329107	WITHOUT_CLASSIFICATION	0.0012549581670892374	DESIGN
look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9988406123207488	WITHOUT_CLASSIFICATION	0.0011593876792512735	DESIGN
set the binding's frame's "previous" file and line to current, so trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999718157082101	WITHOUT_CLASSIFICATION	2.818429178989312E-5	DESIGN
framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9995974889356231	WITHOUT_CLASSIFICATION	4.025110643768957E-4	DESIGN
look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9988406123207488	WITHOUT_CLASSIFICATION	0.0011593876792512735	DESIGN
unframed invokers have no Ruby frames, so pull from class name but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999760401383128	WITHOUT_CLASSIFICATION	2.395986168726194E-5	DESIGN
try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999795631523349	WITHOUT_CLASSIFICATION	2.0436847665099617E-5	DESIGN
Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999715296506657	WITHOUT_CLASSIFICATION	2.847034933430689E-5	DESIGN
Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9992035287653855	WITHOUT_CLASSIFICATION	7.96471234614338E-4	DESIGN
Determine what sort of assigner should be used for the provided 'iter' (e.g. block). Assigner provides just the right logic for assigning values to local parameters of the block. This method also has a second optimization which is to set 'noargblock' in the case that the block is a block which accepts no arguments. The primary reason for this second optimization is that in the case of a yield with a RubyArray we will bypass some logic processing the RubyArray into a proper form (only to then not do anythign with it). A secondary benefit is that a simple boolean seems to optimize by hotspot much faster than the zero arg assigner.	WITHOUT_CLASSIFICATION	0.999298830777235	DESIGN	7.011692227650182E-4	WITHOUT_CLASSIFICATION
new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.996521909005771	WITHOUT_CLASSIFICATION	0.003478090994228975	DESIGN
No argument blocks	WITHOUT_CLASSIFICATION	0.9999923994964813	WITHOUT_CLASSIFICATION	7.600503518751192E-6	DESIGN
just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9994148029325697	WITHOUT_CLASSIFICATION	5.851970674302827E-4	DESIGN
Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.815850997608949	WITHOUT_CLASSIFICATION	0.18414900239105095	DESIGN
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9990095137451315	WITHOUT_CLASSIFICATION	9.904862548685022E-4	DESIGN
This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9111107908634529	WITHOUT_CLASSIFICATION	0.08888920913654705	DESIGN
Highest reserved id	WITHOUT_CLASSIFICATION	0.9997755121362252	WITHOUT_CLASSIFICATION	2.2448786377482203E-4	DESIGN
binary typed calls	WITHOUT_CLASSIFICATION	0.9999279008805146	WITHOUT_CLASSIFICATION	7.209911948533709E-5	DESIGN
id must always be even	WITHOUT_CLASSIFICATION	0.9951719743841946	WITHOUT_CLASSIFICATION	0.004828025615805431	DESIGN
with block pass	WITHOUT_CLASSIFICATION	0.9992808649305632	WITHOUT_CLASSIFICATION	7.191350694366967E-4	DESIGN
no block	WITHOUT_CLASSIFICATION	0.9992156769858133	WITHOUT_CLASSIFICATION	7.843230141866946E-4	DESIGN
with block literal (iter)	WITHOUT_CLASSIFICATION	0.9981867506412964	WITHOUT_CLASSIFICATION	0.0018132493587036203	DESIGN
assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.975142578839722	WITHOUT_CLASSIFICATION	0.02485742116027807	DESIGN
if we have multiple asgn with just args, need a special type for that	WITHOUT_CLASSIFICATION	0.977150344966687	WITHOUT_CLASSIFICATION	0.022849655033312957	DESIGN
&& args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9994227529266972	WITHOUT_CLASSIFICATION	5.772470733027481E-4	DESIGN
return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9996253920149566	WITHOUT_CLASSIFICATION	3.7460798504335694E-4	DESIGN
ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9998947731311835	WITHOUT_CLASSIFICATION	1.0522686881656784E-4	DESIGN
predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.974363302406077	WITHOUT_CLASSIFICATION	0.025636697593922928	DESIGN
fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9995300708681967	WITHOUT_CLASSIFICATION	4.699291318032829E-4	DESIGN
Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9985891720932923	WITHOUT_CLASSIFICATION	0.001410827906707692	DESIGN
Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9981929940998666	WITHOUT_CLASSIFICATION	0.0018070059001333977	DESIGN
Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9984490289271023	WITHOUT_CLASSIFICATION	0.001550971072897793	DESIGN
Lastline	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9994730592323201	WITHOUT_CLASSIFICATION	5.269407676799187E-4	DESIGN
bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9984891102567657	WITHOUT_CLASSIFICATION	0.0015108897432342938	DESIGN
Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9991980100591753	WITHOUT_CLASSIFICATION	8.019899408247205E-4	DESIGN
try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9995665286285644	WITHOUT_CLASSIFICATION	4.334713714355649E-4	DESIGN
Some helper functions:	WITHOUT_CLASSIFICATION	0.9991570856326819	WITHOUT_CLASSIFICATION	8.429143673179814E-4	DESIGN
silently ignore	WITHOUT_CLASSIFICATION	0.9996287923369352	WITHOUT_CLASSIFICATION	3.7120766306469486E-4	DESIGN
used by compiler	WITHOUT_CLASSIFICATION	0.9836801000758766	WITHOUT_CLASSIFICATION	0.016319899924123395	DESIGN
initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9996302174821464	WITHOUT_CLASSIFICATION	3.697825178536704E-4	DESIGN
INSTANCE VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9992078911340695	WITHOUT_CLASSIFICATION	7.921088659305108E-4	DESIGN
We need to guarantee that any existing reads of old Map can proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999346731159349	WITHOUT_CLASSIFICATION	6.532688406513629E-5	DESIGN
Single node on list	WITHOUT_CLASSIFICATION	0.9997723103295165	WITHOUT_CLASSIFICATION	2.2768967048340992E-4	DESIGN
Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9985438766277344	WITHOUT_CLASSIFICATION	0.0014561233722656176	DESIGN
Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999610278610712	WITHOUT_CLASSIFICATION	3.8972138928745345E-5	DESIGN
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9752583598125925	WITHOUT_CLASSIFICATION	0.024741640187407567	DESIGN
Note: In Ruby 1.9 all of this logic can go away since they will require explicit bindings for evals.	WITHOUT_CLASSIFICATION	0.9946915211523397	WITHOUT_CLASSIFICATION	0.005308478847660288	DESIGN
We only define one special dynamic scope per 'logical' binding. So all bindings for the same scope should share the same dynamic scope. This allows multiple evals with different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9905108806129914	WITHOUT_CLASSIFICATION	0.009489119387008601	DESIGN
If the next scope out has the same binding scope as this scope it means we are evaling within an eval and in that case we should be sharing the same binding scope.	WITHOUT_CLASSIFICATION	0.9997863848909911	WITHOUT_CLASSIFICATION	2.136151090088262E-4	DESIGN
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9996811932954367	WITHOUT_CLASSIFICATION	3.1880670456329994E-4	DESIGN
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9996811932954367	WITHOUT_CLASSIFICATION	3.1880670456329994E-4	DESIGN
nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9998601763854188	WITHOUT_CLASSIFICATION	1.398236145811752E-4	DESIGN
nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9998601763854188	WITHOUT_CLASSIFICATION	1.398236145811752E-4	DESIGN
nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9998601763854188	WITHOUT_CLASSIFICATION	1.398236145811752E-4	DESIGN
no extra args for rest	WITHOUT_CLASSIFICATION	0.9987555846185414	WITHOUT_CLASSIFICATION	0.0012444153814585193	DESIGN
no extra args for rest	WITHOUT_CLASSIFICATION	0.9987555846185414	WITHOUT_CLASSIFICATION	0.0012444153814585193	DESIGN
extra args for rest	WITHOUT_CLASSIFICATION	0.9994628479027983	WITHOUT_CLASSIFICATION	5.3715209720165E-4	DESIGN
extra args for rest	WITHOUT_CLASSIFICATION	0.9994628479027983	WITHOUT_CLASSIFICATION	5.3715209720165E-4	DESIGN
This is the proper behavior for all non-expanded assigners which have a pre > 0. The rest override this.	WITHOUT_CLASSIFICATION	0.994325956227531	WITHOUT_CLASSIFICATION	0.0056740437724691365	DESIGN
This is the proper behavior for all non-expanded assigners.	WITHOUT_CLASSIFICATION	0.9619984172892782	WITHOUT_CLASSIFICATION	0.038001582710721855	DESIGN
prefill ?	WITHOUT_CLASSIFICATION	0.9984400050565523	WITHOUT_CLASSIFICATION	0.0015599949434476747	DESIGN
prefill ?	WITHOUT_CLASSIFICATION	0.9984400050565523	WITHOUT_CLASSIFICATION	0.0015599949434476747	DESIGN
MUST be called from synchronized/locked block! should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9990682594102418	WITHOUT_CLASSIFICATION	9.317405897582059E-4	DESIGN
retrieve method module name	WITHOUT_CLASSIFICATION	0.9966736121158581	WITHOUT_CLASSIFICATION	0.0033263878841418887	DESIGN
call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9991007067754907	WITHOUT_CLASSIFICATION	8.992932245092493E-4	DESIGN
if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9998957127922785	WITHOUT_CLASSIFICATION	1.0428720772146439E-4	DESIGN
if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9992837408891551	WITHOUT_CLASSIFICATION	7.162591108448922E-4	DESIGN
method object already present, push various args tc self klazz name	WITHOUT_CLASSIFICATION	0.9985497349456536	WITHOUT_CLASSIFICATION	0.0014502650543464248	DESIGN
if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9998118941140822	WITHOUT_CLASSIFICATION	1.8810588591772217E-4	DESIGN
invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9993708932636329	WITHOUT_CLASSIFICATION	6.2910673636709E-4	DESIGN
caller	WITHOUT_CLASSIFICATION	0.9994462186716836	WITHOUT_CLASSIFICATION	5.53781328316497E-4	DESIGN
calltype block	WITHOUT_CLASSIFICATION	0.9996413457287546	WITHOUT_CLASSIFICATION	3.586542712453625E-4	DESIGN
if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999902383372287	WITHOUT_CLASSIFICATION	9.761662771303148E-6	DESIGN
load arity for check	WITHOUT_CLASSIFICATION	0.9997736382237965	WITHOUT_CLASSIFICATION	2.2636177620350984E-4	DESIGN
throw	WITHOUT_CLASSIFICATION	0.9988393320660495	WITHOUT_CLASSIFICATION	0.001160667933950531	DESIGN
load arity for error	WITHOUT_CLASSIFICATION	0.9995655646360013	WITHOUT_CLASSIFICATION	4.344353639987476E-4	DESIGN
arity ok, continue	WITHOUT_CLASSIFICATION	0.9996970494659086	WITHOUT_CLASSIFICATION	3.029505340914174E-4	DESIGN
InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9992078911340695	WITHOUT_CLASSIFICATION	7.921088659305108E-4	DESIGN
ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9979551590111714	WITHOUT_CLASSIFICATION	0.002044840988828742	DESIGN
FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9992078911340695	WITHOUT_CLASSIFICATION	7.921088659305108E-4	DESIGN
InvocationCallback	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9991850795574373	WITHOUT_CLASSIFICATION	8.149204425626634E-4	DESIGN
for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999264508384453	WITHOUT_CLASSIFICATION	7.35491615546684E-5	DESIGN
for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.99984471265393	WITHOUT_CLASSIFICATION	1.552873460699231E-4	DESIGN
load the encoding	WITHOUT_CLASSIFICATION	0.9998113309987375	WITHOUT_CLASSIFICATION	1.8866900126241918E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9991196168770899	WITHOUT_CLASSIFICATION	8.803831229101769E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9991196168770899	WITHOUT_CLASSIFICATION	8.803831229101769E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9991196168770899	WITHOUT_CLASSIFICATION	8.803831229101769E-4	DESIGN
IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9992465071614368	WITHOUT_CLASSIFICATION	7.534928385631599E-4	DESIGN
IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9992465071614368	WITHOUT_CLASSIFICATION	7.534928385631599E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9992465071614368	WITHOUT_CLASSIFICATION	7.534928385631599E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9992465071614368	WITHOUT_CLASSIFICATION	7.534928385631599E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9992465071614368	WITHOUT_CLASSIFICATION	7.534928385631599E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999178291562663	WITHOUT_CLASSIFICATION	8.217084373371085E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999178291562663	WITHOUT_CLASSIFICATION	8.217084373371085E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999178291562663	WITHOUT_CLASSIFICATION	8.217084373371085E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999178291562663	WITHOUT_CLASSIFICATION	8.217084373371085E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999178291562663	WITHOUT_CLASSIFICATION	8.217084373371085E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999178291562663	WITHOUT_CLASSIFICATION	8.217084373371085E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999178291562663	WITHOUT_CLASSIFICATION	8.217084373371085E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999178291562663	WITHOUT_CLASSIFICATION	8.217084373371085E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999178291562663	WITHOUT_CLASSIFICATION	8.217084373371085E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999178291562663	WITHOUT_CLASSIFICATION	8.217084373371085E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999178291562663	WITHOUT_CLASSIFICATION	8.217084373371085E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999178291562663	WITHOUT_CLASSIFICATION	8.217084373371085E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999178291562663	WITHOUT_CLASSIFICATION	8.217084373371085E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999178291562663	WITHOUT_CLASSIFICATION	8.217084373371085E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999178291562663	WITHOUT_CLASSIFICATION	8.217084373371085E-4	DESIGN
If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9993079573983429	WITHOUT_CLASSIFICATION	6.920426016570648E-4	DESIGN
BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9992078911340695	WITHOUT_CLASSIFICATION	7.921088659305108E-4	DESIGN
ThreadContext	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9991850795574373	WITHOUT_CLASSIFICATION	8.149204425626634E-4	DESIGN
Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9992992400913033	WITHOUT_CLASSIFICATION	7.007599086965871E-4	DESIGN
RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9991850795574373	WITHOUT_CLASSIFICATION	8.149204425626634E-4	DESIGN
add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999239760336871	WITHOUT_CLASSIFICATION	7.60239663128926E-5	DESIGN
if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9998175048658979	WITHOUT_CLASSIFICATION	1.8249513410205446E-4	DESIGN
wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9992788992081049	WITHOUT_CLASSIFICATION	7.211007918952374E-4	DESIGN
add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.999344603427489	WITHOUT_CLASSIFICATION	6.553965725109565E-4	DESIGN
Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9841398778677448	WITHOUT_CLASSIFICATION	0.015860122132255225	DESIGN
"." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.5321474804087749	WITHOUT_CLASSIFICATION	0.46785251959122515	DESIGN
Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9997522750656068	WITHOUT_CLASSIFICATION	2.4772493439316695E-4	DESIGN
Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999942819006128	WITHOUT_CLASSIFICATION	5.718099387139311E-6	DESIGN
Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9947781214828622	WITHOUT_CLASSIFICATION	0.005221878517137868	DESIGN
We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9895388982866361	WITHOUT_CLASSIFICATION	0.010461101713363908	DESIGN
If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9996083663242331	WITHOUT_CLASSIFICATION	3.9163367576689433E-4	DESIGN
quietly try to load the class	WITHOUT_CLASSIFICATION	0.9988262730197172	WITHOUT_CLASSIFICATION	0.001173726980282809	DESIGN
If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9985467886978533	WITHOUT_CLASSIFICATION	0.0014532113021466673	DESIGN
no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9930055116519355	WITHOUT_CLASSIFICATION	0.006994488348064406	DESIGN
if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9992808907580754	WITHOUT_CLASSIFICATION	7.19109241924559E-4	DESIGN
signed short, big-endian	WITHOUT_CLASSIFICATION	0.9993751853266422	WITHOUT_CLASSIFICATION	6.248146733579769E-4	DESIGN
source extensions	WITHOUT_CLASSIFICATION	0.9998653044339569	WITHOUT_CLASSIFICATION	1.346955660430735E-4	DESIGN
We don't support .so, but some stdlib require .so directly replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.8442308544846754	WITHOUT_CLASSIFICATION	0.15576914551532456	DESIGN
This code exploits the fact that all .jar files will be found for the JarredScript feature. This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.8033591323266417	WITHOUT_CLASSIFICATION	0.19664086767335828	DESIGN
Make the class name look nice, by splitting on _ and capitalize each segment, then joining the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9994766398055686	WITHOUT_CLASSIFICATION	5.2336019443141E-4	DESIGN
It's _really_ expensive to check that the class actually exists in the Jar, so we don't do that now.	WITHOUT_CLASSIFICATION	0.999350380078603	WITHOUT_CLASSIFICATION	6.496199213969695E-4	DESIGN
trim extension to try other options	WITHOUT_CLASSIFICATION	0.9993270581176411	WITHOUT_CLASSIFICATION	6.729418823588924E-4	DESIGN
extension extensions	WITHOUT_CLASSIFICATION	0.9994005496535443	WITHOUT_CLASSIFICATION	5.99450346455704E-4	DESIGN
unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9975035620953911	WITHOUT_CLASSIFICATION	0.0024964379046087874	DESIGN
try all extensions	WITHOUT_CLASSIFICATION	0.9999457755160913	WITHOUT_CLASSIFICATION	5.4224483908631097E-5	DESIGN
if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999360989772915	WITHOUT_CLASSIFICATION	6.390102270841671E-5	DESIGN
unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9981751856166848	WITHOUT_CLASSIFICATION	0.0018248143833152382	DESIGN
try only literal search	WITHOUT_CLASSIFICATION	0.9998113138991792	WITHOUT_CLASSIFICATION	1.8868610082076277E-4	DESIGN
attempt to load the found library	WITHOUT_CLASSIFICATION	0.9969719989178075	WITHOUT_CLASSIFICATION	0.003028001082192447	DESIGN
otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9997608723169134	WITHOUT_CLASSIFICATION	2.391276830865685E-4	DESIGN
allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9991326895331442	WITHOUT_CLASSIFICATION	8.673104668558063E-4	DESIGN
Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9913374034630287	WITHOUT_CLASSIFICATION	0.008662596536971304	DESIGN
check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.999999422297681	WITHOUT_CLASSIFICATION	5.777023190513967E-7	DESIGN
if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9998002041067645	WITHOUT_CLASSIFICATION	1.9979589323554004E-4	DESIGN
end suffix iteration	WITHOUT_CLASSIFICATION	0.9999142948166371	WITHOUT_CLASSIFICATION	8.570518336286415E-5	DESIGN
if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9980773924624292	WITHOUT_CLASSIFICATION	0.0019226075375706933	DESIGN
if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9998764451651582	WITHOUT_CLASSIFICATION	1.2355483484188904E-4	DESIGN
we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9983626587738147	WITHOUT_CLASSIFICATION	0.0016373412261853318	DESIGN
we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9983626587738147	WITHOUT_CLASSIFICATION	0.0016373412261853318	DESIGN
it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9960933290117234	WITHOUT_CLASSIFICATION	0.003906670988276518	DESIGN
it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9960933290117234	WITHOUT_CLASSIFICATION	0.003906670988276518	DESIGN
prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9996387285000781	WITHOUT_CLASSIFICATION	3.6127149992193634E-4	DESIGN
prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9996387285000781	WITHOUT_CLASSIFICATION	3.6127149992193634E-4	DESIGN
actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.999585383001444	WITHOUT_CLASSIFICATION	4.146169985560925E-4	DESIGN
handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9992569125551876	WITHOUT_CLASSIFICATION	7.430874448123519E-4	DESIGN
if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9995331762819667	WITHOUT_CLASSIFICATION	4.668237180332795E-4	DESIGN
if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.999973652797484	WITHOUT_CLASSIFICATION	2.6347202516019058E-5	DESIGN
otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9979426922646288	WITHOUT_CLASSIFICATION	0.002057307735371185	DESIGN
Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9257608294574143	WITHOUT_CLASSIFICATION	0.0742391705425856	DESIGN
signed short, native	WITHOUT_CLASSIFICATION	0.999766247650447	WITHOUT_CLASSIFICATION	2.3375234955295084E-4	DESIGN
If we fail to find as a normal Ruby script, we try to find as an extension, checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999982908418292	WITHOUT_CLASSIFICATION	1.7091581708466085E-6	DESIGN
write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9616853650092805	WITHOUT_CLASSIFICATION	0.038314634990719514	DESIGN
if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9998113182065872	WITHOUT_CLASSIFICATION	1.8868179341274282E-4	DESIGN
Look in classpath next (we do not use File as a test since UNC names will match) Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.999625347987466	WITHOUT_CLASSIFICATION	3.746520125338952E-4	DESIGN
Directories and unavailable resources are not able to open a stream.	WITHOUT_CLASSIFICATION	0.9985300740012683	WITHOUT_CLASSIFICATION	0.0014699259987317685	DESIGN
Try to load from classpath without prefix. "A/b.rb" will not load as "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9958103056755973	WITHOUT_CLASSIFICATION	0.004189694324402799	DESIGN
object has instance vars and isn't a class, get a snapshot to be marshalled and output the ivar header here	WITHOUT_CLASSIFICATION	0.9557854140204857	WITHOUT_CLASSIFICATION	0.04421458597951439	DESIGN
flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9992128818949234	WITHOUT_CLASSIFICATION	7.871181050765221E-4	DESIGN
write('S');	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
switch on the object's native type. This allows use-defined classes that have extended core native types to piggyback on their marshalling logic.	WITHOUT_CLASSIFICATION	0.9985162486692493	WITHOUT_CLASSIFICATION	0.0014837513307508	DESIGN
object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.999009906608695	WITHOUT_CLASSIFICATION	9.90093391304909E-4	DESIGN
We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9948394787258771	WITHOUT_CLASSIFICATION	0.005160521274122889	DESIGN
w_symbol	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
w_unique	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.99810387947376	WITHOUT_CLASSIFICATION	0.001896120526239976	DESIGN
Major Minor	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9995227306611152	WITHOUT_CLASSIFICATION	4.772693388849154E-4	DESIGN
"hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.999381878435524	WITHOUT_CLASSIFICATION	6.181215644760548E-4	DESIGN
All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999194778217281	WITHOUT_CLASSIFICATION	8.052217827183837E-5	DESIGN
sic	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999937485921727	WITHOUT_CLASSIFICATION	6.251407827292652E-5	DESIGN
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999937485921727	WITHOUT_CLASSIFICATION	6.251407827292652E-5	DESIGN
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999937485921727	WITHOUT_CLASSIFICATION	6.251407827292652E-5	DESIGN
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9987572690577985	WITHOUT_CLASSIFICATION	0.0012427309422014029	DESIGN
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9987572690577985	WITHOUT_CLASSIFICATION	0.0012427309422014029	DESIGN
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9990095137451315	WITHOUT_CLASSIFICATION	9.904862548685022E-4	DESIGN
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9990095137451315	WITHOUT_CLASSIFICATION	9.904862548685022E-4	DESIGN
If we are setting post arguments we can assume there are no pre or others	WITHOUT_CLASSIFICATION	0.9987917156833652	WITHOUT_CLASSIFICATION	0.0012082843166348616	DESIGN
XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9987866218362359	WITHOUT_CLASSIFICATION	0.0012133781637640897	DESIGN
unsigned short, native	WITHOUT_CLASSIFICATION	0.999430306627113	WITHOUT_CLASSIFICATION	5.696933728871315E-4	DESIGN
int, native long, native	WITHOUT_CLASSIFICATION	0.9996087034126919	WITHOUT_CLASSIFICATION	3.912965873080972E-4	DESIGN
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999937485921727	WITHOUT_CLASSIFICATION	6.251407827292652E-5	DESIGN
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999937485921727	WITHOUT_CLASSIFICATION	6.251407827292652E-5	DESIGN
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999937485921727	WITHOUT_CLASSIFICATION	6.251407827292652E-5	DESIGN
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9987572690577985	WITHOUT_CLASSIFICATION	0.0012427309422014029	DESIGN
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9987572690577985	WITHOUT_CLASSIFICATION	0.0012427309422014029	DESIGN
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9987572690577985	WITHOUT_CLASSIFICATION	0.0012427309422014029	DESIGN
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9990095137451315	WITHOUT_CLASSIFICATION	9.904862548685022E-4	DESIGN
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9990095137451315	WITHOUT_CLASSIFICATION	9.904862548685022E-4	DESIGN
Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999909016854976	WITHOUT_CLASSIFICATION	9.098314502427875E-6	DESIGN
Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9996139511542713	WITHOUT_CLASSIFICATION	3.8604884572867036E-4	DESIGN
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9852496193153641	WITHOUT_CLASSIFICATION	0.014750380684635831	DESIGN
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9852496193153641	WITHOUT_CLASSIFICATION	0.014750380684635831	DESIGN
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9852496193153641	WITHOUT_CLASSIFICATION	0.014750380684635831	DESIGN
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9852496193153641	WITHOUT_CLASSIFICATION	0.014750380684635831	DESIGN
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9852496193153641	WITHOUT_CLASSIFICATION	0.014750380684635831	DESIGN
SunSignalFacade	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
All braces pushed..	WITHOUT_CLASSIFICATION	0.9998364938612194	WITHOUT_CLASSIFICATION	1.635061387806184E-4	DESIGN
failed : try next recursion	WITHOUT_CLASSIFICATION	0.9805078560290441	WITHOUT_CLASSIFICATION	0.01949214397095587	DESIGN
leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.999875195162496	WITHOUT_CLASSIFICATION	1.2480483750390944E-4	DESIGN
are we at ''	WITHOUT_CLASSIFICATION	0.9998015537222358	WITHOUT_CLASSIFICATION	1.9844627776416672E-4	DESIGN
No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9991131512595007	WITHOUT_CLASSIFICATION	8.868487404991897E-4	DESIGN
not enough bytes	WITHOUT_CLASSIFICATION	0.9990147750777719	WITHOUT_CLASSIFICATION	9.852249222280303E-4	DESIGN
Get index of last read byte	WITHOUT_CLASSIFICATION	0.9993072775024462	WITHOUT_CLASSIFICATION	6.927224975538437E-4	DESIGN
skip inner braces	WITHOUT_CLASSIFICATION	0.9996296101834453	WITHOUT_CLASSIFICATION	3.7038981655465776E-4	DESIGN
Process {}'s (example: Dir.glob("{jruby,jython}/README")	WITHOUT_CLASSIFICATION	0.999434274108078	WITHOUT_CLASSIFICATION	5.657258919221235E-4	DESIGN
complete, according to Posix.2	WITHOUT_CLASSIFICATION	0.9995129673775897	WITHOUT_CLASSIFICATION	4.8703262241031137E-4	DESIGN
Only accept an open brace if there is a close	WITHOUT_CLASSIFICATION	0.9999984518589504	WITHOUT_CLASSIFICATION	1.5481410496286168E-6	DESIGN
brace to match it. Bracket expressions must be	WITHOUT_CLASSIFICATION	0.9996880521936089	WITHOUT_CLASSIFICATION	3.119478063911567E-4	DESIGN
index of left-most brace index of right-most brace	WITHOUT_CLASSIFICATION	0.9962802383004461	WITHOUT_CLASSIFICATION	0.0037197616995539315	DESIGN
Length check is a hack. We should not be reeiving "" as a filename ever.	WITHOUT_CLASSIFICATION	0.9962552095893584	WITHOUT_CLASSIFICATION	0.0037447904106416028	DESIGN
NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9986040781434237	WITHOUT_CLASSIFICATION	0.0013959218565762796	DESIGN
NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9986040781434237	WITHOUT_CLASSIFICATION	0.0013959218565762796	DESIGN
NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9986040781434237	WITHOUT_CLASSIFICATION	0.0013959218565762796	DESIGN
Pickaxe says @ must be followed by a name character, but MRI does not require this.	WITHOUT_CLASSIFICATION	0.9902152159170668	WITHOUT_CLASSIFICATION	0.009784784082933071	DESIGN
Pickaxe says @@ must be followed by a name character, but MRI does not require this.	WITHOUT_CLASSIFICATION	0.9919521193427114	WITHOUT_CLASSIFICATION	0.00804788065728857	DESIGN
SimpleSampler	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
convert into longs, returning unsigned 64-bit values as signed longs ( num2long raises a RangeError on values > Long.MAX_VALUE )	WITHOUT_CLASSIFICATION	0.9976969498173703	WITHOUT_CLASSIFICATION	0.002303050182629587	DESIGN
b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9994691177313755	WITHOUT_CLASSIFICATION	5.308822686246256E-4	DESIGN
single precision, little-endian	WITHOUT_CLASSIFICATION	0.9998524485154289	WITHOUT_CLASSIFICATION	1.4755148457118656E-4	DESIGN
single precision, big-endian	WITHOUT_CLASSIFICATION	0.9998565815166001	WITHOUT_CLASSIFICATION	1.4341848339987444E-4	DESIGN
single precision, native	WITHOUT_CLASSIFICATION	0.9998744481881826	WITHOUT_CLASSIFICATION	1.255518118173248E-4	DESIGN
single precision, native single precision, native	WITHOUT_CLASSIFICATION	0.9998708299981651	WITHOUT_CLASSIFICATION	1.2917000183485468E-4	DESIGN
double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999056879747246	WITHOUT_CLASSIFICATION	9.431202527547072E-5	DESIGN
double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999083298450251	WITHOUT_CLASSIFICATION	9.167015497489055E-5	DESIGN
double precision, native	WITHOUT_CLASSIFICATION	0.9999197503727081	WITHOUT_CLASSIFICATION	8.024962729183868E-5	DESIGN
signed short, little-endian	WITHOUT_CLASSIFICATION	0.9993751853266422	WITHOUT_CLASSIFICATION	6.248146733579769E-4	DESIGN
signed char	WITHOUT_CLASSIFICATION	0.9998658356896476	WITHOUT_CLASSIFICATION	1.3416431035237025E-4	DESIGN
unsigned char	WITHOUT_CLASSIFICATION	0.9998602697355699	WITHOUT_CLASSIFICATION	1.3973026443008757E-4	DESIGN
long, little-endian	WITHOUT_CLASSIFICATION	0.9997176961757843	WITHOUT_CLASSIFICATION	2.823038242157046E-4	DESIGN
long, big-endian	WITHOUT_CLASSIFICATION	0.9997176961757843	WITHOUT_CLASSIFICATION	2.823038242157046E-4	DESIGN
unsigned int, native	WITHOUT_CLASSIFICATION	0.999824557979963	WITHOUT_CLASSIFICATION	1.7544202003699446E-4	DESIGN
int, native	WITHOUT_CLASSIFICATION	0.9997994936661699	WITHOUT_CLASSIFICATION	2.0050633383002282E-4	DESIGN
64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9995934842045548	WITHOUT_CLASSIFICATION	4.0651579544505E-4	DESIGN
How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9908682409144597	WITHOUT_CLASSIFICATION	0.009131759085540236	DESIGN
See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9997794537734735	WITHOUT_CLASSIFICATION	2.205462265263938E-4	DESIGN
Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9829804852515892	WITHOUT_CLASSIFICATION	0.017019514748410746	DESIGN
Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9989288675366419	WITHOUT_CLASSIFICATION	0.001071132463358128	DESIGN
obtain a	WITHOUT_CLASSIFICATION	0.998570613212695	WITHOUT_CLASSIFICATION	0.001429386787304918	DESIGN
obtain b	WITHOUT_CLASSIFICATION	0.9996626827069853	WITHOUT_CLASSIFICATION	3.373172930147478E-4	DESIGN
obtain c	WITHOUT_CLASSIFICATION	0.9994717129274634	WITHOUT_CLASSIFICATION	5.282870725366706E-4	DESIGN
obtain d	WITHOUT_CLASSIFICATION	0.999318071823504	WITHOUT_CLASSIFICATION	6.819281764959918E-4	DESIGN
encode.limit() -	WITHOUT_CLASSIFICATION	0.9989137489658959	WITHOUT_CLASSIFICATION	0.0010862510341040918	DESIGN
1	WITHOUT_CLASSIFICATION	0.9992929296367763	WITHOUT_CLASSIFICATION	7.070703632238399E-4	DESIGN
2	WITHOUT_CLASSIFICATION	0.9993456598259702	WITHOUT_CLASSIFICATION	6.543401740296702E-4	DESIGN
3	WITHOUT_CLASSIFICATION	0.9983107183357282	WITHOUT_CLASSIFICATION	0.0016892816642717764	DESIGN
4	WITHOUT_CLASSIFICATION	0.9982495885776953	WITHOUT_CLASSIFICATION	0.001750411422304727	DESIGN
5	WITHOUT_CLASSIFICATION	0.9997823268366427	WITHOUT_CLASSIFICATION	2.176731633573073E-4	DESIGN
6	WITHOUT_CLASSIFICATION	0.999518356341707	WITHOUT_CLASSIFICATION	4.8164365829298113E-4	DESIGN
7	WITHOUT_CLASSIFICATION	0.999287070940074	WITHOUT_CLASSIFICATION	7.129290599259318E-4	DESIGN
Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9998869109975282	WITHOUT_CLASSIFICATION	1.1308900247176372E-4	DESIGN
Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9995278512449051	WITHOUT_CLASSIFICATION	4.721487550949152E-4	DESIGN
In case when the number of occurences is explicitly specified, we have to read up the remaining garbage after the '\0' to satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999904157076211	WITHOUT_CLASSIFICATION	9.584292378801088E-6	DESIGN
normal exit, this should be faster than a test at each iterations for string with more than about 40 char	WITHOUT_CLASSIFICATION	0.9913489701790443	WITHOUT_CLASSIFICATION	0.008651029820955591	DESIGN
We encountered '\0' when were reading the buffer above, increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999622345984382	WITHOUT_CLASSIFICATION	3.776540156183325E-5	DESIGN
MRI behavior: Contrary to what seems to be logical, when '' is given, MRI calculates the distance to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.999257903519339	WITHOUT_CLASSIFICATION	7.420964806611078E-4	DESIGN
Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9883739563444539	WITHOUT_CLASSIFICATION	0.011626043655546028	DESIGN
'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9976794368355691	WITHOUT_CLASSIFICATION	0.0023205631644309683	DESIGN
if the low bit is set set the high bit of the result	WITHOUT_CLASSIFICATION	0.9992570595667069	WITHOUT_CLASSIFICATION	7.429404332932166E-4	DESIGN
if the index is not a multiple of 8, we are not on a byte boundary shift the byte	WITHOUT_CLASSIFICATION	0.9327901622681969	WITHOUT_CLASSIFICATION	0.06720983773180321	DESIGN
if the length is not a multiple of 8 we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9457427292953346	WITHOUT_CLASSIFICATION	0.05425727070466522	DESIGN
if the length is not a multiple of 8 we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9457427292953346	WITHOUT_CLASSIFICATION	0.05425727070466522	DESIGN
do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.7938569868228568	WITHOUT_CLASSIFICATION	0.20614301317714312	DESIGN
we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.999868743789248	WITHOUT_CLASSIFICATION	1.312562107521118E-4	DESIGN
if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9337774433457432	WITHOUT_CLASSIFICATION	0.06622255665425679	DESIGN
this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9986600222281842	WITHOUT_CLASSIFICATION	0.0013399777718159337	DESIGN
we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9960548739680953	WITHOUT_CLASSIFICATION	0.003945126031904685	DESIGN
populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9988232022598773	WITHOUT_CLASSIFICATION	0.0011767977401227062	DESIGN
are we recursing?	WITHOUT_CLASSIFICATION	0.99964188974557	WITHOUT_CLASSIFICATION	3.581102544299935E-4	DESIGN
snip off ruby or jruby command from list of arguments leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9998203940037227	WITHOUT_CLASSIFICATION	1.7960599627738787E-4	DESIGN
default PidGetter	WITHOUT_CLASSIFICATION	0.9998096420391667	WITHOUT_CLASSIFICATION	1.9035796083322984E-4	DESIGN
ignore and try windows version	WITHOUT_CLASSIFICATION	0.9998688957673294	WITHOUT_CLASSIFICATION	1.311042326706268E-4	DESIGN
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9973698920292359	WITHOUT_CLASSIFICATION	0.00263010797076419	DESIGN
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9973698920292359	WITHOUT_CLASSIFICATION	0.00263010797076419	DESIGN
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9973698920292359	WITHOUT_CLASSIFICATION	0.00263010797076419	DESIGN
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9973698920292359	WITHOUT_CLASSIFICATION	0.00263010797076419	DESIGN
try both	WITHOUT_CLASSIFICATION	0.9998645426246866	WITHOUT_CLASSIFICATION	1.354573753133466E-4	DESIGN
just unix	WITHOUT_CLASSIFICATION	0.9990311763241495	WITHOUT_CLASSIFICATION	9.68823675850413E-4	DESIGN
just windows	WITHOUT_CLASSIFICATION	0.9990377190125349	WITHOUT_CLASSIFICATION	9.622809874651851E-4	DESIGN
neither	WITHOUT_CLASSIFICATION	0.9993395157846646	WITHOUT_CLASSIFICATION	6.604842153353466E-4	DESIGN
CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.8578989007333351	DESIGN	0.1421010992666649	WITHOUT_CLASSIFICATION
single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999378049849994	WITHOUT_CLASSIFICATION	6.219501500058652E-5	DESIGN
direct invocation of the command	WITHOUT_CLASSIFICATION	0.9985475714634258	WITHOUT_CLASSIFICATION	0.0014524285365741729	DESIGN
break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9997353885955114	WITHOUT_CLASSIFICATION	2.646114044886484E-4	DESIGN
break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9997353885955114	WITHOUT_CLASSIFICATION	2.646114044886484E-4	DESIGN
close process output See JRUBY-3405; hooking up to parent process stdin caused problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999961190309044	WITHOUT_CLASSIFICATION	3.880969095570145E-6	DESIGN
ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9394675825701688	WITHOUT_CLASSIFICATION	0.060532417429831176	DESIGN
processes seem to have some peculiar locking sequences, so we need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.999929194173968	WITHOUT_CLASSIFICATION	7.080582603200953E-5	DESIGN
popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9987758858940665	WITHOUT_CLASSIFICATION	0.0012241141059334284	DESIGN
popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9987758858940665	WITHOUT_CLASSIFICATION	0.0012241141059334284	DESIGN
popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9995425062995574	WITHOUT_CLASSIFICATION	4.57493700442576E-4	DESIGN
no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9994261827310162	WITHOUT_CLASSIFICATION	5.738172689837762E-4	DESIGN
no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9994261827310162	WITHOUT_CLASSIFICATION	5.738172689837762E-4	DESIGN
execute command with sh -c this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9806725657155548	WITHOUT_CLASSIFICATION	0.019327434284445243	DESIGN
We need to close the out, since some processes would just wait for the stream to be closed before they process its content, and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999984355955672	WITHOUT_CLASSIFICATION	1.5644044326724052E-6	DESIGN
we only close out if it's the slave stream, to avoid closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999967044700904	WITHOUT_CLASSIFICATION	3.295529909526771E-6	DESIGN
The assumption here is that the 'in' stream provides proper available() support. If available() always returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9939714768438473	WITHOUT_CLASSIFICATION	0.0060285231561526525	DESIGN
Force t3 to quit, just in case if it's stuck. Note: On some platforms, even interrupt might not have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9996893436827177	WITHOUT_CLASSIFICATION	3.106563172823365E-4	DESIGN
Check for special shell characters [<>|] at the beginning and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999919258037835	WITHOUT_CLASSIFICATION	8.074196216420612E-6	DESIGN
Note: this method produces meaningful results only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9844774288458465	WITHOUT_CLASSIFICATION	0.015522571154153508	DESIGN
sequential	WITHOUT_CLASSIFICATION	0.9997227717248238	WITHOUT_CLASSIFICATION	2.772282751761233E-4	DESIGN
reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999871177072354	WITHOUT_CLASSIFICATION	1.2882292764677716E-5	DESIGN
do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9998675802289863	WITHOUT_CLASSIFICATION	1.3241977101378314E-4	DESIGN
if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9990672789839823	WITHOUT_CLASSIFICATION	9.32721016017769E-4	DESIGN
SignalFacade	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9971494059120335	WITHOUT_CLASSIFICATION	0.002850594087966447	DESIGN
this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9969604649771477	WITHOUT_CLASSIFICATION	0.0030395350228523267	DESIGN
basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9985455167848221	WITHOUT_CLASSIFICATION	0.0014544832151778611	DESIGN
not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.8589291299211917	WITHOUT_CLASSIFICATION	0.14107087007880814	DESIGN
Args	WITHOUT_CLASSIFICATION	0.9992765709588535	WITHOUT_CLASSIFICATION	7.234290411465963E-4	DESIGN
static methods only	WITHOUT_CLASSIFICATION	0.9999555186924466	WITHOUT_CLASSIFICATION	4.4481307553432635E-5	DESIGN
System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.999631409043974	WITHOUT_CLASSIFICATION	3.685909560261222E-4	DESIGN
MRI 1.8.6 behavior: null byte after '%' leads to "%" string. Null byte in other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9920152255980821	WITHOUT_CLASSIFICATION	0.007984774401917995	DESIGN
last index (+1) accessed by next() last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9979700319071201	WITHOUT_CLASSIFICATION	0.0020299680928799408	DESIGN
Special form of sprintf that returns a RubyString and handles tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9995992698971222	WITHOUT_CLASSIFICATION	4.0073010287780455E-4	DESIGN
Special form of sprintf that returns a RubyString and handles tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9997321528709373	WITHOUT_CLASSIFICATION	2.6784712906274203E-4	DESIGN
MRI doesn't flag it as an error if width is given multiple times as a number (but it does for )	WITHOUT_CLASSIFICATION	0.999970891717059	WITHOUT_CLASSIFICATION	2.910828294094021E-5	DESIGN
let the width (if any), get processed in the next loop, so any leading 0 gets treated correctly	WITHOUT_CLASSIFICATION	0.999507696686538	WITHOUT_CLASSIFICATION	4.923033134619625E-4	DESIGN
MRI 1.8.5-p12 doesn't support 1-char strings, but YARV 0.4.1 does. I don't think it hurts to include this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9192067332875403	WITHOUT_CLASSIFICATION	0.0807932667124596	DESIGN
'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9994981711078226	WITHOUT_CLASSIFICATION	5.018288921774598E-4	DESIGN
'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999390971438339	WITHOUT_CLASSIFICATION	6.090285616619717E-5	DESIGN
We depart here from strict adherence to MRI code, as MRI uses C-sprintf, in part, to format numeric output, while we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9897559640220648	WITHOUT_CLASSIFICATION	0.010244035977935217	DESIGN
skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9954416963158099	WITHOUT_CLASSIFICATION	0.004558303684189987	DESIGN
..	WITHOUT_CLASSIFICATION	0.9963704456886116	WITHOUT_CLASSIFICATION	0.003629554311388477	DESIGN
the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9998603589877242	WITHOUT_CLASSIFICATION	1.3964101227578602E-4	DESIGN
FIXME: what is correct 'recv' argument? (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.8998862479768527	DESIGN	0.10011375202314732	WITHOUT_CLASSIFICATION
gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9965369050770347	WITHOUT_CLASSIFICATION	0.00346309492296522	DESIGN
OK, we now have the significand in digits[0...nDigits] and the exponent in exponent. We're ready to format.	WITHOUT_CLASSIFICATION	0.9984952505785256	WITHOUT_CLASSIFICATION	0.0015047494214743518	DESIGN
intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9515470181227829	WITHOUT_CLASSIFICATION	0.048452981877217055	DESIGN
intDigits = 1;	WITHOUT_CLASSIFICATION	0.9998935187542908	WITHOUT_CLASSIFICATION	1.0648124570916905E-4	DESIGN
System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.999631409043974	WITHOUT_CLASSIFICATION	3.685909560261222E-4	DESIGN
System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9996499855179385	WITHOUT_CLASSIFICATION	3.500144820614225E-4	DESIGN
intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9515470181227829	WITHOUT_CLASSIFICATION	0.048452981877217055	DESIGN
intDigits = 1;	WITHOUT_CLASSIFICATION	0.9998935187542908	WITHOUT_CLASSIFICATION	1.0648124570916905E-4	DESIGN
precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.999787247431914	WITHOUT_CLASSIFICATION	2.1275256808597317E-4	DESIGN
deal with length/width	WITHOUT_CLASSIFICATION	0.9964884816171733	WITHOUT_CLASSIFICATION	0.0035115183828265738	DESIGN
deal with length/width	WITHOUT_CLASSIFICATION	0.9964884816171733	WITHOUT_CLASSIFICATION	0.0035115183828265738	DESIGN
first digit is always printed	WITHOUT_CLASSIFICATION	0.9992422765350715	WITHOUT_CLASSIFICATION	7.57723464928485E-4	DESIGN
MRI behavior: Be default, 2 digits in the exponent. Use 3 digits only when necessary. See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.958713179469874	WITHOUT_CLASSIFICATION	0.04128682053012594	DESIGN
5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999843272608931	WITHOUT_CLASSIFICATION	1.567273910688356E-5	DESIGN
4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9998737886360778	WITHOUT_CLASSIFICATION	1.2621136392222638E-4	DESIGN
in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9879784742464981	WITHOUT_CLASSIFICATION	0.012021525753501888	DESIGN
MRI behavior: In this mode trailing zeroes are removed: 1.500E+05 -> 1.5E+05	WITHOUT_CLASSIFICATION	0.9904922919206075	WITHOUT_CLASSIFICATION	0.009507708079392486	DESIGN
'.' is printed	WITHOUT_CLASSIFICATION	0.9996933663084913	WITHOUT_CLASSIFICATION	3.066336915086766E-4	DESIGN
all precision numebers printed	WITHOUT_CLASSIFICATION	0.9996205337154791	WITHOUT_CLASSIFICATION	3.794662845209237E-4	DESIGN
now some data...	WITHOUT_CLASSIFICATION	0.9986909730861278	WITHOUT_CLASSIFICATION	0.001309026913872339	DESIGN
'.'	WITHOUT_CLASSIFICATION	0.9993874182488058	WITHOUT_CLASSIFICATION	6.125817511941791E-4	DESIGN
decimal form, like (but not just like!) 'f'	WITHOUT_CLASSIFICATION	0.99765588480328	WITHOUT_CLASSIFICATION	0.0023441151967199397	DESIGN
digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999057566919115	WITHOUT_CLASSIFICATION	9.424330808840032E-5	DESIGN
will have a trailing '.' g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9996035071086034	WITHOUT_CLASSIFICATION	3.964928913967025E-4	DESIGN
s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9995440972839009	WITHOUT_CLASSIFICATION	4.559027160990323E-4	DESIGN
s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9995440972839009	WITHOUT_CLASSIFICATION	4.559027160990323E-4	DESIGN
always need at least a 0	WITHOUT_CLASSIFICATION	0.9751809526392556	WITHOUT_CLASSIFICATION	0.024819047360744445	DESIGN
always need at least a 0	WITHOUT_CLASSIFICATION	0.9751809526392556	WITHOUT_CLASSIFICATION	0.024819047360744445	DESIGN
digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9998931086526356	WITHOUT_CLASSIFICATION	1.0689134736443864E-4	DESIGN
(1|intlen).prec	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
(1|intlen)	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
will have a trailing '.'	WITHOUT_CLASSIFICATION	0.998720484261077	WITHOUT_CLASSIFICATION	0.0012795157389231162	DESIGN
fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9995272322461807	WITHOUT_CLASSIFICATION	4.7276775381927086E-4	DESIGN
System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.999631409043974	WITHOUT_CLASSIFICATION	3.685909560261222E-4	DESIGN
5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999843272608931	WITHOUT_CLASSIFICATION	1.567273910688356E-5	DESIGN
4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9998737886360778	WITHOUT_CLASSIFICATION	1.2621136392222638E-4	DESIGN
now some data...	WITHOUT_CLASSIFICATION	0.9986909730861278	WITHOUT_CLASSIFICATION	0.001309026913872339	DESIGN
'.'	WITHOUT_CLASSIFICATION	0.9993874182488058	WITHOUT_CLASSIFICATION	6.125817511941791E-4	DESIGN
equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.999814629123703	WITHOUT_CLASSIFICATION	1.8537087629708556E-4	DESIGN
'.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9998897105110441	WITHOUT_CLASSIFICATION	1.102894889557928E-4	DESIGN
\v	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
dangling '%' char	WITHOUT_CLASSIFICATION	0.9998411557364193	WITHOUT_CLASSIFICATION	1.588442635806348E-4	DESIGN
main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999608430348667	WITHOUT_CLASSIFICATION	3.915696513333555E-5	DESIGN
debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9997500967064625	WITHOUT_CLASSIFICATION	2.4990329353746614E-4	DESIGN
MRI rounds up on nnn5nnn, but not nnn5 -- except for when they do	WITHOUT_CLASSIFICATION	0.9958749380477968	WITHOUT_CLASSIFICATION	0.004125061952203178	DESIGN
"%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9996666378715425	WITHOUT_CLASSIFICATION	3.333621284575522E-4	DESIGN
limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999487723529468	WITHOUT_CLASSIFICATION	5.1227647053250894E-5	DESIGN
negative values	WITHOUT_CLASSIFICATION	0.999835279593033	WITHOUT_CLASSIFICATION	1.6472040696703842E-4	DESIGN
calculation for negatives when %u specified for values >= Integer.MIN_VALUE 2, MRI uses (the equivalent of) long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val for smaller values, BigInteger math is required to conform to MRI's result.	WITHOUT_CLASSIFICATION	0.9999681044132771	WITHOUT_CLASSIFICATION	3.189558672285243E-5	DESIGN
relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999609562066211	WITHOUT_CLASSIFICATION	3.904379337901963E-5	DESIGN
no such luck...	WITHOUT_CLASSIFICATION	0.9997680268538591	WITHOUT_CLASSIFICATION	2.3197314614083325E-4	DESIGN
ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9849655419177199	WITHOUT_CLASSIFICATION	0.015034458082280058	DESIGN
go through negated powers of 32 until we find one small enough	WITHOUT_CLASSIFICATION	0.999875525864389	WITHOUT_CLASSIFICATION	1.2447413561092336E-4	DESIGN
add to the corresponding positive power of 32 for the result. meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9888925198055414	WITHOUT_CLASSIFICATION	0.011107480194458558	DESIGN
constant vector a	WITHOUT_CLASSIFICATION	0.9957658159749387	WITHOUT_CLASSIFICATION	0.004234184025061194	DESIGN
most significant w-r bits	WITHOUT_CLASSIFICATION	0.999237853342317	WITHOUT_CLASSIFICATION	7.621466576830026E-4	DESIGN
least significant r bits	WITHOUT_CLASSIFICATION	0.9988193304610995	WITHOUT_CLASSIFICATION	0.001180669538900454	DESIGN
state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9992112064877349	WITHOUT_CLASSIFICATION	7.887935122650966E-4	DESIGN
state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9992112064877349	WITHOUT_CLASSIFICATION	7.887935122650966E-4	DESIGN
state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9992112064877349	WITHOUT_CLASSIFICATION	7.887935122650966E-4	DESIGN
MSB is 1; assuring non-zero initial array	WITHOUT_CLASSIFICATION	0.9998689210306059	WITHOUT_CLASSIFICATION	1.3107896939408686E-4	DESIGN
Tempering	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
MRI behavior: Week values are monotonous. So, weeks that effectively belong to previous year, will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999041031257544	WITHOUT_CLASSIFICATION	9.589687424550668E-5	DESIGN
System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9996352397003574	WITHOUT_CLASSIFICATION	3.6476029964253805E-4	DESIGN
System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9996352397003574	WITHOUT_CLASSIFICATION	3.6476029964253805E-4	DESIGN
\v	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9991850795574373	WITHOUT_CLASSIFICATION	8.149204425626634E-4	DESIGN
System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.999631409043974	WITHOUT_CLASSIFICATION	3.685909560261222E-4	DESIGN
System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9995403149791633	WITHOUT_CLASSIFICATION	4.596850208367543E-4	DESIGN
System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9995403149791633	WITHOUT_CLASSIFICATION	4.596850208367543E-4	DESIGN
System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.999631409043974	WITHOUT_CLASSIFICATION	3.685909560261222E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9993415902166725	WITHOUT_CLASSIFICATION	6.584097833276252E-4	DESIGN
System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.999631409043974	WITHOUT_CLASSIFICATION	3.685909560261222E-4	DESIGN
no number	WITHOUT_CLASSIFICATION	0.9995585543737839	WITHOUT_CLASSIFICATION	4.4144562621614936E-4	DESIGN
trailing garbage	WITHOUT_CLASSIFICATION	0.9996367512239968	WITHOUT_CLASSIFICATION	3.6324877600329075E-4	DESIGN
System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9996780525409354	WITHOUT_CLASSIFICATION	3.219474590644674E-4	DESIGN
it was not found at all!	WITHOUT_CLASSIFICATION	0.9984414952772059	WITHOUT_CLASSIFICATION	0.0015585047227940432	DESIGN
can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.992635512296683	WITHOUT_CLASSIFICATION	0.007364487703316986	DESIGN
we reached the end of a list	WITHOUT_CLASSIFICATION	0.9998501000862172	WITHOUT_CLASSIFICATION	1.4989991378281002E-4	DESIGN
goto next bucket	WITHOUT_CLASSIFICATION	0.9994683916059273	WITHOUT_CLASSIFICATION	5.316083940727228E-4	DESIGN
we reached the end	WITHOUT_CLASSIFICATION	0.9999270286819982	WITHOUT_CLASSIFICATION	7.297131800178623E-5	DESIGN
entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9984184287858602	WITHOUT_CLASSIFICATION	0.0015815712141398267	DESIGN
states	WITHOUT_CLASSIFICATION	0.9992273742941814	WITHOUT_CLASSIFICATION	7.726257058186536E-4	DESIGN
remove leading whitespace (includes _ for lax) get sign, if any	WITHOUT_CLASSIFICATION	0.9990971668401697	WITHOUT_CLASSIFICATION	9.028331598302443E-4	DESIGN
optimistic pass - calculate value as digits are processed digits - lax rules decimal digits - lax rules exponent sign/digits - lax rules digits - strict rules decimal digits - strict rules exponent sign/digits - strict rules complete calculation if possible	WITHOUT_CLASSIFICATION	0.99998282310694	WITHOUT_CLASSIFICATION	1.7176893060025236E-5	DESIGN
fields used for direct (optimistic) calculation number of significant digits, updated as parsed zeroes that may go to significand or exponent offset of decimal pt from start (-1 -> no decimal) significand, updated as parsed exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9993590613533461	WITHOUT_CLASSIFICATION	6.409386466539788E-4	DESIGN
drop through for sign	WITHOUT_CLASSIFICATION	0.997156082511552	WITHOUT_CLASSIFICATION	0.0028439174884480525	DESIGN
switch will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9688768131676114	WITHOUT_CLASSIFICATION	0.031123186832388596	DESIGN
drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9984878690757046	WITHOUT_CLASSIFICATION	0.0015121309242953327	DESIGN
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.999969187870002	WITHOUT_CLASSIFICATION	3.081212999792744E-5	DESIGN
ignore leading zeroes switch	WITHOUT_CLASSIFICATION	0.9991084981785144	WITHOUT_CLASSIFICATION	8.91501821485626E-4	DESIGN
no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9998316398993193	WITHOUT_CLASSIFICATION	1.6836010068070777E-4	DESIGN
ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9989878499818433	WITHOUT_CLASSIFICATION	0.001012150018156756	DESIGN
just save a count of zeroes for now; if no digit ends up following them, they'll be applied to the exponent rather than the significand (and our max length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9790204051677519	WITHOUT_CLASSIFICATION	0.02097959483224807	DESIGN
ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9988720281620858	WITHOUT_CLASSIFICATION	0.0011279718379142369	DESIGN
else catch oversize below	WITHOUT_CLASSIFICATION	0.9999708456437029	WITHOUT_CLASSIFICATION	2.915435629707688E-5	DESIGN
else catch oversize below	WITHOUT_CLASSIFICATION	0.9999708456437029	WITHOUT_CLASSIFICATION	2.915435629707688E-5	DESIGN
oh, well, it was worth a try. go let Double/FloatingDecimal handle it	WITHOUT_CLASSIFICATION	0.992725351604659	WITHOUT_CLASSIFICATION	0.0072746483953409526	DESIGN
ignore switch	WITHOUT_CLASSIFICATION	0.9995868854269032	WITHOUT_CLASSIFICATION	4.1311457309678657E-4	DESIGN
ignore switch	WITHOUT_CLASSIFICATION	0.9995868854269032	WITHOUT_CLASSIFICATION	4.1311457309678657E-4	DESIGN
end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9995243164429808	WITHOUT_CLASSIFICATION	4.756835570193265E-4	DESIGN
end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9995243164429808	WITHOUT_CLASSIFICATION	4.756835570193265E-4	DESIGN
switch for	WITHOUT_CLASSIFICATION	0.999535684055148	WITHOUT_CLASSIFICATION	4.6431594485197046E-4	DESIGN
first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9998318735407793	WITHOUT_CLASSIFICATION	1.681264592208113E-4	DESIGN
no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9995288920705222	WITHOUT_CLASSIFICATION	4.71107929477705E-4	DESIGN
switch if	WITHOUT_CLASSIFICATION	0.9997994216920786	WITHOUT_CLASSIFICATION	2.005783079213652E-4	DESIGN
difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9993562004364827	WITHOUT_CLASSIFICATION	6.43799563517401E-4	DESIGN
block	WITHOUT_CLASSIFICATION	0.9992080616725169	WITHOUT_CLASSIFICATION	7.919383274832641E-4	DESIGN
block	WITHOUT_CLASSIFICATION	0.9992080616725169	WITHOUT_CLASSIFICATION	7.919383274832641E-4	DESIGN
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.999969187870002	WITHOUT_CLASSIFICATION	3.081212999792744E-5	DESIGN
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.999969187870002	WITHOUT_CLASSIFICATION	3.081212999792744E-5	DESIGN
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.999969187870002	WITHOUT_CLASSIFICATION	3.081212999792744E-5	DESIGN
ignore leading zeroes switch	WITHOUT_CLASSIFICATION	0.9991084981785144	WITHOUT_CLASSIFICATION	8.91501821485626E-4	DESIGN
else catch oversize below	WITHOUT_CLASSIFICATION	0.9999708456437029	WITHOUT_CLASSIFICATION	2.915435629707688E-5	DESIGN
else catch oversize below	WITHOUT_CLASSIFICATION	0.9999708456437029	WITHOUT_CLASSIFICATION	2.915435629707688E-5	DESIGN
else catch oversize below	WITHOUT_CLASSIFICATION	0.9999708456437029	WITHOUT_CLASSIFICATION	2.915435629707688E-5	DESIGN
switch for	WITHOUT_CLASSIFICATION	0.999535684055148	WITHOUT_CLASSIFICATION	4.6431594485197046E-4	DESIGN
switch for	WITHOUT_CLASSIFICATION	0.999535684055148	WITHOUT_CLASSIFICATION	4.6431594485197046E-4	DESIGN
switch for	WITHOUT_CLASSIFICATION	0.999535684055148	WITHOUT_CLASSIFICATION	4.6431594485197046E-4	DESIGN
switch if	WITHOUT_CLASSIFICATION	0.9997994216920786	WITHOUT_CLASSIFICATION	2.005783079213652E-4	DESIGN
switch if	WITHOUT_CLASSIFICATION	0.9997994216920786	WITHOUT_CLASSIFICATION	2.005783079213652E-4	DESIGN
lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9984861947000099	WITHOUT_CLASSIFICATION	0.0015138052999901657	DESIGN
switch for no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9990098418842099	WITHOUT_CLASSIFICATION	9.90158115790074E-4	DESIGN
switch for no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.999510335302806	WITHOUT_CLASSIFICATION	4.896646971939938E-4	DESIGN
TODO: it's not clear to me why, in FloatingDecimal, the "slop" calculation performed above for positive exponents isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9996199713971807	DESIGN	3.800286028192533E-4	WITHOUT_CLASSIFICATION
no digits, error	WITHOUT_CLASSIFICATION	0.9997637768444331	WITHOUT_CLASSIFICATION	2.3622315556693607E-4	DESIGN
too big for us	WITHOUT_CLASSIFICATION	0.9994101452516263	WITHOUT_CLASSIFICATION	5.898547483735892E-4	DESIGN
too big for us	WITHOUT_CLASSIFICATION	0.9994101452516263	WITHOUT_CLASSIFICATION	5.898547483735892E-4	DESIGN
must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9986537250340285	WITHOUT_CLASSIFICATION	0.00134627496597157	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9993415902166725	WITHOUT_CLASSIFICATION	6.584097833276252E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9993415902166725	WITHOUT_CLASSIFICATION	6.584097833276252E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9993415902166725	WITHOUT_CLASSIFICATION	6.584097833276252E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9993415902166725	WITHOUT_CLASSIFICATION	6.584097833276252E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9993415902166725	WITHOUT_CLASSIFICATION	6.584097833276252E-4	DESIGN
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999590632699108	WITHOUT_CLASSIFICATION	4.0936730089139104E-5	DESIGN
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999590632699108	WITHOUT_CLASSIFICATION	4.0936730089139104E-5	DESIGN
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999590632699108	WITHOUT_CLASSIFICATION	4.0936730089139104E-5	DESIGN
first char must be digit	WITHOUT_CLASSIFICATION	0.999836582764522	WITHOUT_CLASSIFICATION	1.6341723547803208E-4	DESIGN
no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9997384449164476	WITHOUT_CLASSIFICATION	2.6155508355246254E-4	DESIGN
ignore leading zeroes switch	WITHOUT_CLASSIFICATION	0.9991084981785144	WITHOUT_CLASSIFICATION	8.91501821485626E-4	DESIGN
switch for	WITHOUT_CLASSIFICATION	0.999535684055148	WITHOUT_CLASSIFICATION	4.6431594485197046E-4	DESIGN
switch for	WITHOUT_CLASSIFICATION	0.999535684055148	WITHOUT_CLASSIFICATION	4.6431594485197046E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9993415902166725	WITHOUT_CLASSIFICATION	6.584097833276252E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9993415902166725	WITHOUT_CLASSIFICATION	6.584097833276252E-4	DESIGN
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999590632699108	WITHOUT_CLASSIFICATION	4.0936730089139104E-5	DESIGN
must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9986537250340285	WITHOUT_CLASSIFICATION	0.00134627496597157	DESIGN
Copy out any buffered bytes	WITHOUT_CLASSIFICATION	0.9995244695382227	WITHOUT_CLASSIFICATION	4.755304617773656E-4	DESIGN
switch while	WITHOUT_CLASSIFICATION	0.999919315781714	WITHOUT_CLASSIFICATION	8.068421828603808E-5	DESIGN
All the positive powers of 10 that can be represented exactly in double/float. (From sun.misc.FloatingDecimal.java)	WITHOUT_CLASSIFICATION	0.9999062897432377	WITHOUT_CLASSIFICATION	9.371025676227615E-5	DESIGN
Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9960562883634309	WITHOUT_CLASSIFICATION	0.003943711636569153	DESIGN
rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9992078911340695	WITHOUT_CLASSIFICATION	7.921088659305108E-4	DESIGN
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9985187289618729	WITHOUT_CLASSIFICATION	0.0014812710381271528	DESIGN
arg cannot be negative	WITHOUT_CLASSIFICATION	0.9997609526216968	WITHOUT_CLASSIFICATION	2.3904737830318304E-4	DESIGN
NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9992078911340695	WITHOUT_CLASSIFICATION	7.921088659305108E-4	DESIGN
Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9441091254892782	WITHOUT_CLASSIFICATION	0.05589087451072176	DESIGN
could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.7868822656374358	WITHOUT_CLASSIFICATION	0.21311773436256418	DESIGN
strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9998615429344726	WITHOUT_CLASSIFICATION	1.3845706552744933E-4	DESIGN
Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9932251097201859	WITHOUT_CLASSIFICATION	0.006774890279814196	DESIGN
Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9998169772637081	WITHOUT_CLASSIFICATION	1.8302273629188697E-4	DESIGN
Creates the new entry.	WITHOUT_CLASSIFICATION	0.9989698186965048	WITHOUT_CLASSIFICATION	0.0010301813034951383	DESIGN
next entry to return current slot current entry	WITHOUT_CLASSIFICATION	0.999818890749701	WITHOUT_CLASSIFICATION	1.8110925029908654E-4	DESIGN
advance to first entry	WITHOUT_CLASSIFICATION	0.9995200095996033	WITHOUT_CLASSIFICATION	4.799904003967398E-4	DESIGN
The reason why we need the stream is to be able to invoke available() on it. STDIN in Java is non-interruptible, non-selectable, and attempt to read on such stream might lead to thread being blocked without any way to unblock it. That's where available() comes it, so at least we could check whether anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9809643123525323	WITHOUT_CLASSIFICATION	0.0190356876474676	DESIGN
package-protected	WITHOUT_CLASSIFICATION	0.999711256936655	WITHOUT_CLASSIFICATION	2.887430633450835E-4	DESIGN
raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9993013653631242	WITHOUT_CLASSIFICATION	6.986346368757289E-4	DESIGN
We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9989969587249227	WITHOUT_CLASSIFICATION	0.0010030412750773419	DESIGN
if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9998111862284307	WITHOUT_CLASSIFICATION	1.8881377156927952E-4	DESIGN
if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9997801822432743	WITHOUT_CLASSIFICATION	2.1981775672585898E-4	DESIGN
otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999914087522915	WITHOUT_CLASSIFICATION	8.591247708426975E-6	DESIGN
r/w buffer are we reading or writing?	WITHOUT_CLASSIFICATION	0.9994767009663587	WITHOUT_CLASSIFICATION	5.2329903364127E-4	DESIGN
this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.8655145220836874	WITHOUT_CLASSIFICATION	0.13448547791631255	DESIGN
unread back	WITHOUT_CLASSIFICATION	0.9992762317782607	WITHOUT_CLASSIFICATION	7.237682217391577E-4	DESIGN
iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9997728322677613	WITHOUT_CLASSIFICATION	2.271677322386622E-4	DESIGN
terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9997442771987983	WITHOUT_CLASSIFICATION	2.557228012017197E-4	DESIGN
no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9996957491425711	WITHOUT_CLASSIFICATION	3.042508574288908E-4	DESIGN
found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.999988921026041	WITHOUT_CLASSIFICATION	1.1078973958967419E-5	DESIGN
Check file size - special files in /proc have zero size and need to be handled by the generic read path.	WITHOUT_CLASSIFICATION	0.9999450508356319	WITHOUT_CLASSIFICATION	5.494916436810329E-5	DESIGN
Copy any buffered data (including ungetc byte)	WITHOUT_CLASSIFICATION	0.9998001361277011	WITHOUT_CLASSIFICATION	1.9986387229899982E-4	DESIGN
Now read unbuffered directly from the file	WITHOUT_CLASSIFICATION	0.9998778254318985	WITHOUT_CLASSIFICATION	1.221745681013756E-4	DESIGN
Copy out any buffered bytes	WITHOUT_CLASSIFICATION	0.9995244695382227	WITHOUT_CLASSIFICATION	4.755304617773656E-4	DESIGN
Need to clamp source (buffer) size to avoid overrun	WITHOUT_CLASSIFICATION	0.9993743240153145	WITHOUT_CLASSIFICATION	6.256759846854977E-4	DESIGN
not closing from finalize	WITHOUT_CLASSIFICATION	0.9974868718918146	WITHOUT_CLASSIFICATION	0.0025131281081853005	DESIGN
clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999231553552577	WITHOUT_CLASSIFICATION	7.684464474235771E-5	DESIGN
silence	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
silence	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
Don't bother	WITHOUT_CLASSIFICATION	0.99966163708444	WITHOUT_CLASSIFICATION	3.383629155599056E-4	DESIGN
Don't bother	WITHOUT_CLASSIFICATION	0.99966163708444	WITHOUT_CLASSIFICATION	3.383629155599056E-4	DESIGN
For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999187390902117	WITHOUT_CLASSIFICATION	8.126090978831641E-5	DESIGN
Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999580514597219	WITHOUT_CLASSIFICATION	4.1948540277942867E-5	DESIGN
Adjust for buffered data	WITHOUT_CLASSIFICATION	0.999815468760347	WITHOUT_CLASSIFICATION	1.8453123965297638E-4	DESIGN
for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9987708779058158	WITHOUT_CLASSIFICATION	0.0012291220941842242	DESIGN
libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9998678775946098	WITHOUT_CLASSIFICATION	1.32122405390057E-4	DESIGN
we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9932629193980171	WITHOUT_CLASSIFICATION	0.006737080601982948	DESIGN
128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9978902359835916	WITHOUT_CLASSIFICATION	0.0021097640164084337	DESIGN
limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations	WITHOUT_CLASSIFICATION	0.9994554072737306	WITHOUT_CLASSIFICATION	5.445927262693298E-4	DESIGN
append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9933465120583344	WITHOUT_CLASSIFICATION	0.006653487941665655	DESIGN
Copy what is in the buffer, if there is some buffered data	WITHOUT_CLASSIFICATION	0.9997326353714582	WITHOUT_CLASSIFICATION	2.6736462854181134E-4	DESIGN
Avoid double-copying for reads that are larger than the buffer size	WITHOUT_CLASSIFICATION	0.999901129007666	WITHOUT_CLASSIFICATION	9.887099233391545E-5	DESIGN
Complete the request by filling the read buffer first	WITHOUT_CLASSIFICATION	0.9999871202802705	WITHOUT_CLASSIFICATION	1.2879719729545463E-5	DESIGN
Complete the request by filling the read buffer first	WITHOUT_CLASSIFICATION	0.9999871202802705	WITHOUT_CLASSIFICATION	1.2879719729545463E-5	DESIGN
Avoid double-copying for reads that are larger than the buffer size, or the destination is a direct buffer.	WITHOUT_CLASSIFICATION	0.9990680988172792	WITHOUT_CLASSIFICATION	9.319011827208388E-4	DESIGN
We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating a huge temporary native buffer, when doing reads into a heap buffer If the dst buffer is direct, then no need to limit.	WITHOUT_CLASSIFICATION	0.9939154714474242	WITHOUT_CLASSIFICATION	0.00608452855257581	DESIGN
Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9986758789159134	WITHOUT_CLASSIFICATION	0.0013241210840867401	DESIGN
Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9986758789159134	WITHOUT_CLASSIFICATION	0.0013241210840867401	DESIGN
Doesn't fit in buffer. Write immediately. ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999852267056313	WITHOUT_CLASSIFICATION	1.4773294368707458E-5	DESIGN
truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.999570422317973	WITHOUT_CLASSIFICATION	4.295776820270405E-4	DESIGN
how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9982529136177306	WITHOUT_CLASSIFICATION	0.0017470863822693443	DESIGN
if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9997417623621815	WITHOUT_CLASSIFICATION	2.582376378185288E-4	DESIGN
close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999715976924657	WITHOUT_CLASSIFICATION	2.840230753429617E-5	DESIGN
putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9470878713632915	WITHOUT_CLASSIFICATION	0.05291212863670857	DESIGN
save the ungot	WITHOUT_CLASSIFICATION	0.9996801082181237	WITHOUT_CLASSIFICATION	3.1989178187633065E-4	DESIGN
otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9996812907488248	WITHOUT_CLASSIFICATION	3.1870925117513774E-4	DESIGN
ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9820865987371004	WITHOUT_CLASSIFICATION	0.0179134012628996	DESIGN
flush first	WITHOUT_CLASSIFICATION	0.9999526378615203	WITHOUT_CLASSIFICATION	4.7362138479717424E-5	DESIGN
Wake up any channels that became unblocked	WITHOUT_CLASSIFICATION	0.9991739032134126	WITHOUT_CLASSIFICATION	8.260967865873722E-4	DESIGN
Register any new blocking I/O requests	WITHOUT_CLASSIFICATION	0.9941532577286029	WITHOUT_CLASSIFICATION	0.005846742271397214	DESIGN
Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999896041481146	WITHOUT_CLASSIFICATION	1.0395851885543203E-5	DESIGN
Wait for I/O on any channel	WITHOUT_CLASSIFICATION	0.9993353458207147	WITHOUT_CLASSIFICATION	6.646541792852755E-4	DESIGN
Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9998439186669466	WITHOUT_CLASSIFICATION	1.560813330535284E-4	DESIGN
Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9943788865714805	WITHOUT_CLASSIFICATION	0.005621113428519563	DESIGN
seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9989549386653394	WITHOUT_CLASSIFICATION	0.0010450613346606754	DESIGN
seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9993361723269784	WITHOUT_CLASSIFICATION	6.638276730215881E-4	DESIGN
result = eval("arr = Array::['c', 200]; p arr"); assertEquals("[\"c\", 200]", result); result = eval("arr = Array.['d', 200]; p arr"); assertEquals("[\"d\", 200]", result);	WITHOUT_CLASSIFICATION	0.9999292740588773	WITHOUT_CLASSIFICATION	7.07259411226198E-5	DESIGN
MRI ignores seek errors, presumably for unseekable files like serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9976755698932166	WITHOUT_CLASSIFICATION	0.0023244301067834633	DESIGN
TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9581884659199147	DESIGN	0.04181153408008533	WITHOUT_CLASSIFICATION
make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.983983564992053	WITHOUT_CLASSIFICATION	0.016016435007947014	DESIGN
make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9911186041488921	WITHOUT_CLASSIFICATION	0.008881395851107907	DESIGN
first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999707348959243	WITHOUT_CLASSIFICATION	2.9265104075835666E-5	DESIGN
then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9998838108831357	WITHOUT_CLASSIFICATION	1.1618911686417008E-4	DESIGN
if we get here, the class and field exist; construct our Unsafe impl that calls it directly	WITHOUT_CLASSIFICATION	0.9990138883553602	WITHOUT_CLASSIFICATION	9.861116446397231E-4	DESIGN
else leave it null	WITHOUT_CLASSIFICATION	0.9998657051728819	WITHOUT_CLASSIFICATION	1.3429482711819213E-4	DESIGN
TypeMatcher	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
This is now needed, since module Java isn't in by default	WITHOUT_CLASSIFICATION	0.9961552718029231	WITHOUT_CLASSIFICATION	0.003844728197077045	DESIGN
Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9994255994995355	WITHOUT_CLASSIFICATION	5.744005004644515E-4	DESIGN
Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999755401267165	WITHOUT_CLASSIFICATION	2.44598732835901E-5	DESIGN
Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999988152175409	WITHOUT_CLASSIFICATION	1.184782459105565E-6	DESIGN
Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9997080184775945	WITHOUT_CLASSIFICATION	2.919815224054854E-4	DESIGN
Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9995532790607731	WITHOUT_CLASSIFICATION	4.4672093922694525E-4	DESIGN
Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9995532790607731	WITHOUT_CLASSIFICATION	4.4672093922694525E-4	DESIGN
Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9987482357107005	WITHOUT_CLASSIFICATION	0.0012517642892994798	DESIGN
If we're running from within an IDE we may not have the .rb files in our classpath. Try to find them in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9996371778399927	WITHOUT_CLASSIFICATION	3.6282216000719624E-4	DESIGN
assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.999220374579521	WITHOUT_CLASSIFICATION	7.796254204790361E-4	DESIGN
Init	WITHOUT_CLASSIFICATION	0.9993385894466738	WITHOUT_CLASSIFICATION	6.61410553326321E-4	DESIGN
Block	WITHOUT_CLASSIFICATION	0.9992530976663605	WITHOUT_CLASSIFICATION	7.469023336396181E-4	DESIGN
Copy constructor	WITHOUT_CLASSIFICATION	0.9997285446016437	WITHOUT_CLASSIFICATION	2.7145539835625665E-4	DESIGN
presumably this require should fail	WITHOUT_CLASSIFICATION	0.9105269092124938	WITHOUT_CLASSIFICATION	0.08947309078750619	DESIGN
JRUBY-646 presumably this require should fail	WITHOUT_CLASSIFICATION	0.9105269092124938	WITHOUT_CLASSIFICATION	0.08947309078750619	DESIGN
Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999374548906397	WITHOUT_CLASSIFICATION	6.254510936037485E-5	DESIGN
ok	WITHOUT_CLASSIFICATION	0.9982255552238946	WITHOUT_CLASSIFICATION	0.001774444776105444	DESIGN
Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.6416908004464218	WITHOUT_CLASSIFICATION	0.3583091995535783	DESIGN
load should work several times in a row	WITHOUT_CLASSIFICATION	0.9652068666809311	WITHOUT_CLASSIFICATION	0.03479313331906886	DESIGN
reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9998089579977067	WITHOUT_CLASSIFICATION	1.9104200229329873E-4	DESIGN
call throwException via JRuby	WITHOUT_CLASSIFICATION	0.99975092460048	WITHOUT_CLASSIFICATION	2.490753995200541E-4	DESIGN
Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999594563502411	WITHOUT_CLASSIFICATION	4.054364975880588E-5	DESIGN
wait for the go signal	WITHOUT_CLASSIFICATION	0.9999167275539114	WITHOUT_CLASSIFICATION	8.32724460885764E-5	DESIGN
run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9956819578609688	WITHOUT_CLASSIFICATION	0.004318042139031103	DESIGN
wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999854109854803	WITHOUT_CLASSIFICATION	1.4589014519568699E-5	DESIGN
notify thread to proceed	WITHOUT_CLASSIFICATION	0.9996422857710896	WITHOUT_CLASSIFICATION	3.577142289104135E-4	DESIGN
wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999765558362839	WITHOUT_CLASSIFICATION	2.3444163716148363E-5	DESIGN
we do preand post load outside the "body" versions to pre-prepare and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9478039381824492	WITHOUT_CLASSIFICATION	0.052196061817550675	DESIGN
out of byte range there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999240641791807	WITHOUT_CLASSIFICATION	7.59358208193556E-5	DESIGN
MRI behavior: raise ArgumentError for 'unknown command' before checking number of args.	WITHOUT_CLASSIFICATION	0.9997987345978409	WITHOUT_CLASSIFICATION	2.0126540215922772E-4	DESIGN
if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9997963451628354	WITHOUT_CLASSIFICATION	2.036548371645978E-4	DESIGN
there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9653955781424645	WITHOUT_CLASSIFICATION	0.03460442185753552	DESIGN
construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.999176990255317	WITHOUT_CLASSIFICATION	8.230097446828875E-4	DESIGN
Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9997348894160303	WITHOUT_CLASSIFICATION	2.6511058396978533E-4	DESIGN
assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9992078911340695	WITHOUT_CLASSIFICATION	7.921088659305108E-4	DESIGN
void methods should work	WITHOUT_CLASSIFICATION	0.995667583761478	WITHOUT_CLASSIFICATION	0.004332416238521982	DESIGN
methods with required = 4 or higher should bind and be callable using reflection JRUBY-3649	WITHOUT_CLASSIFICATION	0.9971298845181552	WITHOUT_CLASSIFICATION	0.0028701154818448014	DESIGN
Since we don't have any other error reporting mechanism, we add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999948265660777	WITHOUT_CLASSIFICATION	5.173433922273149E-6	DESIGN
Ensure we have a new interpreter for each test. Previous we were using the same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999981722736234	WITHOUT_CLASSIFICATION	1.8277263765369584E-6	DESIGN
Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9996493148775908	WITHOUT_CLASSIFICATION	3.5068512240913783E-4	DESIGN
assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9991850795574373	WITHOUT_CLASSIFICATION	8.149204425626634E-4	DESIGN
int n = 10;	WITHOUT_CLASSIFICATION	0.9999610314831597	WITHOUT_CLASSIFICATION	3.896851684031356E-5	DESIGN
there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.999896301602539	WITHOUT_CLASSIFICATION	1.0369839746101978E-4	DESIGN
No ClassCastException!	WITHOUT_CLASSIFICATION	0.9997483595715532	WITHOUT_CLASSIFICATION	2.516404284467853E-4	DESIGN
value equality	WITHOUT_CLASSIFICATION	0.999862240715286	WITHOUT_CLASSIFICATION	1.377592847140652E-4	DESIGN
identity equality	WITHOUT_CLASSIFICATION	0.9998019897914293	WITHOUT_CLASSIFICATION	1.9801020857068737E-4	DESIGN
bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.999195610289734	WITHOUT_CLASSIFICATION	8.043897102660536E-4	DESIGN
bench Integer fib	WITHOUT_CLASSIFICATION	0.999664114297313	WITHOUT_CLASSIFICATION	3.358857026870252E-4	DESIGN
bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9992078911340695	WITHOUT_CLASSIFICATION	7.921088659305108E-4	DESIGN
bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9992078911340695	WITHOUT_CLASSIFICATION	7.921088659305108E-4	DESIGN
bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9992078911340695	WITHOUT_CLASSIFICATION	7.921088659305108E-4	DESIGN
bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9994579177766604	WITHOUT_CLASSIFICATION	5.420822233395428E-4	DESIGN
bench Long fib	WITHOUT_CLASSIFICATION	0.9996232622022354	WITHOUT_CLASSIFICATION	3.7673779776448726E-4	DESIGN
skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9830998399191678	WITHOUT_CLASSIFICATION	0.016900160080832168	DESIGN
start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9996066615262582	WITHOUT_CLASSIFICATION	3.933384737418677E-4	DESIGN
public class Hello { public static String getMessage() { return "....."; } }	WITHOUT_CLASSIFICATION	0.9996591969593236	WITHOUT_CLASSIFICATION	3.4080304067632E-4	DESIGN
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9900222061813765	WITHOUT_CLASSIFICATION	0.00997779381862353	DESIGN
Note: We can't use file.exists() to check whether the symlink exists or not, because that method returns false for existing but broken symlink. So, we try without the existence check, but in the try-catch block. MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.8769104996382837	WITHOUT_CLASSIFICATION	0.12308950036171623	DESIGN
We are creating a new IO object that shares the same IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9989154608605109	WITHOUT_CLASSIFICATION	0.0010845391394891596	DESIGN
a while node could receive non-local flow control from any of these: a closure within the loop an eval within the loop a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999978662575166	WITHOUT_CLASSIFICATION	2.133742483397486E-6	DESIGN
[IRubyObject] [IRubyObject, IRubyObject] [IRubyObject, RubyClass] [IRubyObject, RubyClass, RubyClass] [IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9991850795574373	WITHOUT_CLASSIFICATION	8.149204425626634E-4	DESIGN
select appropriate call site dup receiver load self	WITHOUT_CLASSIFICATION	0.9760375187399319	WITHOUT_CLASSIFICATION	0.02396248126006802	DESIGN
Translate "x || y" --> "x = (is_true(x) ? x : y)" --> x = -- build(x) should return a variable! -- f = is_true(x) beq(f, true, L) x = -- build(y) -- L:	WITHOUT_CLASSIFICATION	0.9533278239509146	WITHOUT_CLASSIFICATION	0.04667217604908535	DESIGN
Force the client socket to be blocking	WITHOUT_CLASSIFICATION	0.993716539694791	WITHOUT_CLASSIFICATION	0.006283460305209004	DESIGN
Additional context surrounding tokens that both the lexer and grammar use.	WITHOUT_CLASSIFICATION	0.9999336405441274	WITHOUT_CLASSIFICATION	6.635945587258113E-5	DESIGN
Enebo: c can never be antrhign but '.' Why did I put this here?	WITHOUT_CLASSIFICATION	0.8538200671650125	WITHOUT_CLASSIFICATION	0.14617993283498754	DESIGN
save package module as ivar in parent, and add method to parent so we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9979589238601368	WITHOUT_CLASSIFICATION	0.002041076139863133	DESIGN
[C,C] [C, boolean]	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
Label for the start of the closure (used to implement redo) Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9998159717171616	WITHOUT_CLASSIFICATION	1.8402828283829275E-4	DESIGN
ignore; job was cancelled FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.997162234328805	DESIGN	0.0028377656711950933	WITHOUT_CLASSIFICATION
check arity checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.999700775028408	WITHOUT_CLASSIFICATION	2.9922497159203654E-4	DESIGN
rethrow exception rethrow it	WITHOUT_CLASSIFICATION	0.9986687276817191	WITHOUT_CLASSIFICATION	0.001331272318280951	DESIGN
we take the first method found as our "n" method, since for any non-specific arity they'll all error the same. If an actual "n" method is created, we use that.	WITHOUT_CLASSIFICATION	0.9999997511405959	WITHOUT_CLASSIFICATION	2.488594041037311E-7	DESIGN
Used by our duck-typification of Proc into interface types, to allow coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9975709094114509	WITHOUT_CLASSIFICATION	0.0024290905885490373	DESIGN
proxy is under construction, building thread can safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999242061020119	WITHOUT_CLASSIFICATION	7.579389798809435E-5	DESIGN
it's either as converted as we can make it via above logic or it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9809841650313686	WITHOUT_CLASSIFICATION	0.019015834968631306	DESIGN
package scheme 2: separate module for each full package name, constructed from the camel-cased package segments: Java::JavaLang::Object,	WITHOUT_CLASSIFICATION	0.9986347228040834	WITHOUT_CLASSIFICATION	0.0013652771959165274	DESIGN
construct the proxy method	WITHOUT_CLASSIFICATION	0.9995978877795239	WITHOUT_CLASSIFICATION	4.021122204761288E-4	DESIGN
line 159 "-" %token constants	WITHOUT_CLASSIFICATION	0.9996919577183417	WITHOUT_CLASSIFICATION	3.080422816582524E-4	DESIGN
+++ Helper Methods	WITHOUT_CLASSIFICATION	0.9999739594893785	WITHOUT_CLASSIFICATION	2.6040510621512773E-5	DESIGN
line 152 "-" %token constants	WITHOUT_CLASSIFICATION	0.9996919577183417	WITHOUT_CLASSIFICATION	3.080422816582524E-4	DESIGN
initial size state stack value stack current input #tokens to shift	WITHOUT_CLASSIFICATION	0.9999976132269602	WITHOUT_CLASSIFICATION	2.38677303972842E-6	DESIGN
+++ Helper Methods	WITHOUT_CLASSIFICATION	0.9999739594893785	WITHOUT_CLASSIFICATION	2.6040510621512773E-5	DESIGN
We only need to pass in current scope if we are evaluating as a block (which is only done for evals). We need to pass this in so that we can appropriately scope down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9997809754367881	WITHOUT_CLASSIFICATION	2.1902456321188662E-4	DESIGN
let the width (if any), get processed in the next loop, so any leading 0 gets treated correctly	WITHOUT_CLASSIFICATION	0.999507696686538	WITHOUT_CLASSIFICATION	4.923033134619625E-4	DESIGN
A place to store that special hiding space that bindings need to implement things like: eval("a = 1", binding); eval("p a"). All binding instances must get access to this hidden shared scope. We store it here. This will be null if no binding has yet been called.	WITHOUT_CLASSIFICATION	0.9999557848993875	WITHOUT_CLASSIFICATION	4.421510061245121E-5	DESIGN
TODO: make it 16 now ? MUST be power of 2!	WITHOUT_CLASSIFICATION	0.9297207929891094	DESIGN	0.07027920701089065	WITHOUT_CLASSIFICATION
check visibility dup method	WITHOUT_CLASSIFICATION	0.9990385712013423	WITHOUT_CLASSIFICATION	9.614287986577563E-4	DESIGN
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9852496193153641	WITHOUT_CLASSIFICATION	0.014750380684635831	DESIGN
unsigned int, native unsigned long, native	WITHOUT_CLASSIFICATION	0.9996477443964489	WITHOUT_CLASSIFICATION	3.522556035510864E-4	DESIGN
need padding I'm fairly sure there is a library call to create a string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9903752020263479	WITHOUT_CLASSIFICATION	0.009624797973652075	DESIGN
MRI behavior: Be default, 2 digits in the exponent. Use 3 digits only when necessary. See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.958713179469874	WITHOUT_CLASSIFICATION	0.04128682053012594	DESIGN
MRI ignores seek errors, presumably for unseekable files like serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9976755698932166	WITHOUT_CLASSIFICATION	0.0023244301067834633	DESIGN
switch for no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.999510335302806	WITHOUT_CLASSIFICATION	4.896646971939938E-4	DESIGN
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.8346380673071323	WITHOUT_CLASSIFICATION	0.16536193269286772	DESIGN
Estimate the square root with the foremost 62 bits of squarD bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9994313378863219	WITHOUT_CLASSIFICATION	5.686621136781161E-4	DESIGN
captures begin and end are used when not groups defined source string	WITHOUT_CLASSIFICATION	0.998718170519001	WITHOUT_CLASSIFICATION	0.0012818294809990442	DESIGN
INSTANCE VARIABLE RUBY METHODS	WITHOUT_CLASSIFICATION	0.9992078911340695	WITHOUT_CLASSIFICATION	7.921088659305108E-4	DESIGN
switch while	WITHOUT_CLASSIFICATION	0.999919315781714	WITHOUT_CLASSIFICATION	8.068421828603808E-5	DESIGN
For nodes do not have their own scope so we pass null to indicate this. 'For's are implemented as blocks in evaluation, but they have no scope so we just deal with this lack of scope throughout its lifespan. We should probably change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.8467733246674266	DESIGN	0.1532266753325735	WITHOUT_CLASSIFICATION
This field is used during argument processing to avoid putting RubyArray instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.978133911483596	WITHOUT_CLASSIFICATION	0.021866088516404064	DESIGN
Parent container for this context (can be dynamic!!) If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9993053121421204	WITHOUT_CLASSIFICATION	6.946878578795729E-4	DESIGN
Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> v1 = -- build(a) -- OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. while this info can be inferred by using attributes, why bother if we can do this? ret = false beq(v1, false, L) v2 = -- build(b) -- ret = v2 L:	WITHOUT_CLASSIFICATION	0.5963066669855016	WITHOUT_CLASSIFICATION	0.4036933330144984	DESIGN
expected	WITHOUT_CLASSIFICATION	0.9998339227599332	WITHOUT_CLASSIFICATION	1.6607724006686598E-4	DESIGN
Do nothing	WITHOUT_CLASSIFICATION	0.9995891730764509	WITHOUT_CLASSIFICATION	4.1082692354910984E-4	DESIGN
constructor	WITHOUT_CLASSIFICATION	0.9996387948680799	WITHOUT_CLASSIFICATION	3.6120513191998044E-4	DESIGN
If a line is followed by a blank line put it back.	WITHOUT_CLASSIFICATION	0.9999777893513092	WITHOUT_CLASSIFICATION	2.2210648690767564E-5	DESIGN
$>: default output handle	WITHOUT_CLASSIFICATION	0.9988641829905625	WITHOUT_CLASSIFICATION	0.001135817009437507	DESIGN
line 423	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 486	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
Signal uses sun.misc. classes, this is not allowed in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9994807201136278	WITHOUT_CLASSIFICATION	5.192798863722856E-4	DESIGN
re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9996886054159249	WITHOUT_CLASSIFICATION	3.1139458407512615E-4	DESIGN
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.8169201389079281	WITHOUT_CLASSIFICATION	0.18307986109207178	DESIGN
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.8169201389079281	WITHOUT_CLASSIFICATION	0.18307986109207178	DESIGN
colon3, assign in Object	WITHOUT_CLASSIFICATION	0.999310132720813	WITHOUT_CLASSIFICATION	6.898672791870358E-4	DESIGN
if there's no receiver, evaluate and pass in the superclass, or pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999766133003881	WITHOUT_CLASSIFICATION	2.3386699611825354E-5	DESIGN
Wire up Function#call(args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9969632296015066	WITHOUT_CLASSIFICATION	0.0030367703984932916	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.6836008248927323	WITHOUT_CLASSIFICATION	0.3163991751072678	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.6836008248927323	WITHOUT_CLASSIFICATION	0.3163991751072678	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.6836008248927323	WITHOUT_CLASSIFICATION	0.3163991751072678	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.6836008248927323	WITHOUT_CLASSIFICATION	0.3163991751072678	DESIGN
Decrease value to hit upper range.	WITHOUT_CLASSIFICATION	0.998307007808658	WITHOUT_CLASSIFICATION	0.0016929921913419472	DESIGN
assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9971585311848817	WITHOUT_CLASSIFICATION	0.0028414688151181876	DESIGN
"else" body	WITHOUT_CLASSIFICATION	0.999859847046667	WITHOUT_CLASSIFICATION	1.401529533331169E-4	DESIGN
done done done Nothing to do for 1.8 done done done done done done done? done done done done done done done done done done done case DEFINEDNODE: return buildDefined(node, m); Incomplete done done done done done done done done case ENSURENODE: return buildEnsureNode(node, m); DEFERRED done done done done case FLIPNODE: return buildFlip(node, m); SSS FIXME: What code generates this AST? done done done done done done done done done done done done done done done done done done? done done done done done done -- partially case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); DEFERRED SSS FIXME: What code generates this AST? done case POSTEXENODE: return buildPostExe(node, m); DEFERRED case PREEXENODE: return buildPreExe(node, m); DEFERRED done?? done	WITHOUT_CLASSIFICATION	0.5528399059321862	WITHOUT_CLASSIFICATION	0.44716009406781376	DESIGN
read-volatile	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
$+: string matches last paren.	WITHOUT_CLASSIFICATION	0.9999568735369898	WITHOUT_CLASSIFICATION	4.312646301016112E-5	DESIGN
should alter global state	WITHOUT_CLASSIFICATION	0.9975812271514097	WITHOUT_CLASSIFICATION	0.0024187728485903946	DESIGN
should alter global state	WITHOUT_CLASSIFICATION	0.9975812271514097	WITHOUT_CLASSIFICATION	0.0024187728485903946	DESIGN
Ruby code frequently uses a platform check to choose "NUL:" on windows but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9957840986538129	WITHOUT_CLASSIFICATION	0.004215901346187168	DESIGN
10!	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
case RESCUENODE: return buildRescue(node, m); DEFERRED case RETRYNODE: return buildRetry(node, m); DEFERRED done	WITHOUT_CLASSIFICATION	0.9997430038125183	WITHOUT_CLASSIFICATION	2.569961874816673E-4	DESIGN
Is this instruction live or dead? During optimization passes, if this instruction causes no side-effects and the result of the instruction is not needed by anyone else, we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.5871688175539014	WITHOUT_CLASSIFICATION	0.41283118244609873	DESIGN
all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9998641845533612	WITHOUT_CLASSIFICATION	1.358154466386872E-4	DESIGN
first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9994322241771739	WITHOUT_CLASSIFICATION	5.677758228260712E-4	DESIGN
Determine if the parameter might be passed as a 32bit int parameter. This just applies to buffer/pointer types.	WITHOUT_CLASSIFICATION	0.9995527955382199	WITHOUT_CLASSIFICATION	4.472044617802062E-4	DESIGN
Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.999924365309964	WITHOUT_CLASSIFICATION	7.563469003605189E-5	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
initial size state stack value stack current input #tokens to shift	WITHOUT_CLASSIFICATION	0.9999976132269602	WITHOUT_CLASSIFICATION	2.38677303972842E-6	DESIGN
line 449	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 495	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
Management/monitoring	WITHOUT_CLASSIFICATION	0.9992078911340695	WITHOUT_CLASSIFICATION	7.921088659305108E-4	DESIGN
if we've found the last char of the separator, and we've found at least as many characters as separator length, and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999976074738737	WITHOUT_CLASSIFICATION	2.392526126308766E-6	DESIGN
14!	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
Process any set of annotations No supported options	WITHOUT_CLASSIFICATION	0.9999464824502813	WITHOUT_CLASSIFICATION	5.351754971875628E-5	DESIGN
add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9974542390003707	WITHOUT_CLASSIFICATION	0.002545760999629369	DESIGN
extract item from array	WITHOUT_CLASSIFICATION	0.9999855770688854	WITHOUT_CLASSIFICATION	1.4422931114603417E-5	DESIGN
extract item from array	WITHOUT_CLASSIFICATION	0.9999855770688854	WITHOUT_CLASSIFICATION	1.4422931114603417E-5	DESIGN
case SCLASSNODE: return buildSClass(node, m); DEFERRED done done done done done done done done case UNDEFNODE: return buildUndef(node, m); DEFERRED done case VALIASNODE: return buildVAlias(node, m); DEFERRED done done	WITHOUT_CLASSIFICATION	0.9997430038125183	WITHOUT_CLASSIFICATION	2.569961874816673E-4	DESIGN
Adding a post-invoke for the cb result serves to both keep it alive until after the function returns, and allows us to clean up the native trampoline early, instead of letting them accumulate until a GC run	WITHOUT_CLASSIFICATION	0.9999486259592677	WITHOUT_CLASSIFICATION	5.1374040732411774E-5	DESIGN
The Java method doesn't care what class it is, but we need to know what to convert it to, so we use the object's own class. If that doesn't help, we use String to force a call to the object's "to_s" method.	WITHOUT_CLASSIFICATION	0.9848916908990201	WITHOUT_CLASSIFICATION	0.015108309100979971	DESIGN
index for the item	WITHOUT_CLASSIFICATION	0.9999541433092745	WITHOUT_CLASSIFICATION	4.5856690725583815E-5	DESIGN
Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9996255854456191	WITHOUT_CLASSIFICATION	3.7441455438092983E-4	DESIGN
18!	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9934344312598016	WITHOUT_CLASSIFICATION	0.006565568740198492	DESIGN
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9825788485415001	WITHOUT_CLASSIFICATION	0.017421151458499807	DESIGN
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9825788485415001	WITHOUT_CLASSIFICATION	0.017421151458499807	DESIGN
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9825788485415001	WITHOUT_CLASSIFICATION	0.017421151458499807	DESIGN
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9825788485415001	WITHOUT_CLASSIFICATION	0.017421151458499807	DESIGN
NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9992478751472559	WITHOUT_CLASSIFICATION	7.521248527441326E-4	DESIGN
This method takes as input a map of operands to their values, and outputs the result of this instruction. If the value map provides a value for any of the instruction's operands the expectation is that the operand will be replaced with the simplified value. It is not required that it do so -- code correctness is not compromised by failure to simplify. @param valueMap Mapping from operands to their simplified values @returns simplified result / output of this instruction	WITHOUT_CLASSIFICATION	0.999971571614036	WITHOUT_CLASSIFICATION	2.842838596393168E-5	DESIGN
Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9945516770766903	WITHOUT_CLASSIFICATION	0.00544832292330968	DESIGN
An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9986438558794931	WITHOUT_CLASSIFICATION	0.001356144120506901	DESIGN
MRI behavior: always check whether the file is writable or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9998657206552958	WITHOUT_CLASSIFICATION	1.342793447042553E-4	DESIGN
22!	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
attribute set.	WITHOUT_CLASSIFICATION	0.9997893736095368	WITHOUT_CLASSIFICATION	2.1062639046331243E-4	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9974832154153163	WITHOUT_CLASSIFICATION	0.0025167845846838428	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9974832154153163	WITHOUT_CLASSIFICATION	0.0025167845846838428	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9974832154153163	WITHOUT_CLASSIFICATION	0.0025167845846838428	DESIGN
fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9997943624064667	WITHOUT_CLASSIFICATION	2.0563759353317885E-4	DESIGN
Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9989285745363058	WITHOUT_CLASSIFICATION	0.0010714254636942323	DESIGN
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.9781502577904079	WITHOUT_CLASSIFICATION	0.021849742209592137	DESIGN
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.9781502577904079	WITHOUT_CLASSIFICATION	0.021849742209592137	DESIGN
AF_INET	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
Now we provide default impls of a number of signatures. For each arity, we first generate a non-block version of the method, which just adds NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can potentially take a block, to only generate the block-receiving signature and still avoid arg boxing. We then provide default implementations of each block-accepting method that in turn call the IRubyObject[]+Block version of call. This then finally falls back on the minimum implementation requirement for dynamic method handles.	WITHOUT_CLASSIFICATION	0.9999942296832757	WITHOUT_CLASSIFICATION	5.770316724410702E-6	DESIGN
Because we implement Java interfaces now, we need a new === that's aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.7946252939703536	WITHOUT_CLASSIFICATION	0.20537470602964628	DESIGN
BASE64	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY when value is an integer less than 1. We treat 0 as a special case to avoid Domain error.	WITHOUT_CLASSIFICATION	0.9999625700825634	WITHOUT_CLASSIFICATION	3.7429917436534346E-5	DESIGN
element set	WITHOUT_CLASSIFICATION	0.9989232033397866	WITHOUT_CLASSIFICATION	0.001076796660213479	DESIGN
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9943606493789322	WITHOUT_CLASSIFICATION	0.005639350621067766	DESIGN
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9943606493789322	WITHOUT_CLASSIFICATION	0.005639350621067766	DESIGN
temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9995443034714868	WITHOUT_CLASSIFICATION	4.5569652851312764E-4	DESIGN
SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode We won't get here for argument receives! So, buildDasgn is called for assignments to block variables within a block. As far as the IR is concerned, this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999994440897813	WITHOUT_CLASSIFICATION	5.559102187312227E-7	DESIGN
getSimplifiedOperand returns the value of this operand, fully simplified getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away The value is used during optimizations and propagated through the IR. But, it is thrown away after that. But, the operand form is used for constructing the compound objects represented by the operand. Example: a = [1], b = [3,4], c = [a,b], d = [2,c] -- getValue(c) = [1,[3,4]]; getSimplifiedOperand(c) = [1, b] -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. So, if contents of a or b is modified, the "simplified value"s of c and d also change! This difference is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9997416803055733	WITHOUT_CLASSIFICATION	2.5831969442666945E-4	DESIGN
IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9981453841931788	WITHOUT_CLASSIFICATION	0.0018546158068212537	DESIGN
promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9904126195742453	WITHOUT_CLASSIFICATION	0.00958738042575472	DESIGN
Ruby's OMG capture all source in a Hash feature Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999559981152212	WITHOUT_CLASSIFICATION	4.400188477884002E-5	DESIGN
carriage return	WITHOUT_CLASSIFICATION	0.9998444189556948	WITHOUT_CLASSIFICATION	1.5558104430517044E-4	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9943379195289413	WITHOUT_CLASSIFICATION	0.005662080471058716	DESIGN
String construction routines by NOT byte[] buffer and making the target String shared	WITHOUT_CLASSIFICATION	0.9999865749686476	WITHOUT_CLASSIFICATION	1.3425031352254491E-5	DESIGN
insert all nodes in sequence, hash them in the final instruction KEY	WITHOUT_CLASSIFICATION	0.9999921705084007	WITHOUT_CLASSIFICATION	7.829491599169318E-6	DESIGN
return last value from execution	WITHOUT_CLASSIFICATION	0.9998981314800868	WITHOUT_CLASSIFICATION	1.0186851991329965E-4	DESIGN
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9937524762952087	WITHOUT_CLASSIFICATION	0.0062475237047913915	DESIGN
Basic Block id CFG that this basic block belongs to All basic blocks have a starting label List of non-label instructions	WITHOUT_CLASSIFICATION	0.9996995287183124	WITHOUT_CLASSIFICATION	3.0047128168758506E-4	DESIGN
otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999823122519196	WITHOUT_CLASSIFICATION	1.768774808036087E-5	DESIGN
For all uninitialized specific arities, we defer to the "n" method which should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9927871317363167	WITHOUT_CLASSIFICATION	0.007212868263683327	DESIGN
implement is called to force this class to create stubs for all methods in the given interface, so they'll show up in the list of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9919146587923523	WITHOUT_CLASSIFICATION	0.008085341207647746	DESIGN
CASE IR instructions are dummy instructions -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9992985124483021	WITHOUT_CLASSIFICATION	7.014875516979268E-4	DESIGN
check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.999897182770025	WITHOUT_CLASSIFICATION	1.0281722997496218E-4	DESIGN
leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9990710563664049	WITHOUT_CLASSIFICATION	9.289436335951813E-4	DESIGN
Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999965985368534	WITHOUT_CLASSIFICATION	3.4014631466220406E-6	DESIGN
for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9971228629333756	WITHOUT_CLASSIFICATION	0.00287713706662446	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9987831478533725	WITHOUT_CLASSIFICATION	0.0012168521466274776	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9987831478533725	WITHOUT_CLASSIFICATION	0.0012168521466274776	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9987831478533725	WITHOUT_CLASSIFICATION	0.0012168521466274776	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9987831478533725	WITHOUT_CLASSIFICATION	0.0012168521466274776	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9987831478533725	WITHOUT_CLASSIFICATION	0.0012168521466274776	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9987831478533725	WITHOUT_CLASSIFICATION	0.0012168521466274776	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9987831478533725	WITHOUT_CLASSIFICATION	0.0012168521466274776	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9987831478533725	WITHOUT_CLASSIFICATION	0.0012168521466274776	DESIGN
Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9974738017663116	WITHOUT_CLASSIFICATION	0.0025261982336883433	DESIGN
fall through	WITHOUT_CLASSIFICATION	0.9996934614801177	WITHOUT_CLASSIFICATION	3.065385198823053E-4	DESIGN
deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9987347324819016	WITHOUT_CLASSIFICATION	0.0012652675180984394	DESIGN
All errors to sysread should be SystemCallErrors, but on a closed stream Ruby returns an IOError. Java throws same exception for all errors so we resort to this hack...	WITHOUT_CLASSIFICATION	0.8985877994367923	WITHOUT_CLASSIFICATION	0.10141220056320756	DESIGN
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9900222061813765	WITHOUT_CLASSIFICATION	0.00997779381862353	DESIGN
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9900222061813765	WITHOUT_CLASSIFICATION	0.00997779381862353	DESIGN
store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999114409770579	WITHOUT_CLASSIFICATION	8.85590229421258E-5	DESIGN
the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9870473400289866	DESIGN	0.012952659971013443	WITHOUT_CLASSIFICATION
First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9989624891193866	WITHOUT_CLASSIFICATION	0.001037510880613427	DESIGN
public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9987115269777807	WITHOUT_CLASSIFICATION	0.0012884730222192762	DESIGN
get current context	WITHOUT_CLASSIFICATION	0.9999460297678778	WITHOUT_CLASSIFICATION	5.3970232122077785E-5	DESIGN
octal constant	WITHOUT_CLASSIFICATION	0.9996359809664115	WITHOUT_CLASSIFICATION	3.640190335885568E-4	DESIGN
read	WITHOUT_CLASSIFICATION	0.9995665670775123	WITHOUT_CLASSIFICATION	4.334329224876836E-4	DESIGN
this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.6432224045817416	WITHOUT_CLASSIFICATION	0.3567775954182584	DESIGN
it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9963451959806763	WITHOUT_CLASSIFICATION	0.0036548040193236236	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9912773895974931	WITHOUT_CLASSIFICATION	0.008722610402506766	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9912773895974931	WITHOUT_CLASSIFICATION	0.008722610402506766	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9912773895974931	WITHOUT_CLASSIFICATION	0.008722610402506766	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9992554474196457	WITHOUT_CLASSIFICATION	7.445525803543375E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9992554474196457	WITHOUT_CLASSIFICATION	7.445525803543375E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9992554474196457	WITHOUT_CLASSIFICATION	7.445525803543375E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9992554474196457	WITHOUT_CLASSIFICATION	7.445525803543375E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9992554474196457	WITHOUT_CLASSIFICATION	7.445525803543375E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9992554474196457	WITHOUT_CLASSIFICATION	7.445525803543375E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9992554474196457	WITHOUT_CLASSIFICATION	7.445525803543375E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9992554474196457	WITHOUT_CLASSIFICATION	7.445525803543375E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9992554474196457	WITHOUT_CLASSIFICATION	7.445525803543375E-4	DESIGN
ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.998242513350214	WITHOUT_CLASSIFICATION	0.0017574866497860773	DESIGN
at end	WITHOUT_CLASSIFICATION	0.9996098309525673	WITHOUT_CLASSIFICATION	3.9016904743276225E-4	DESIGN
bang: true, no match, no substitution	WITHOUT_CLASSIFICATION	0.9978622648508122	WITHOUT_CLASSIFICATION	0.0021377351491878144	DESIGN
save blocking state	WITHOUT_CLASSIFICATION	0.9995249562676557	WITHOUT_CLASSIFICATION	4.7504373234426864E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9992554474196457	WITHOUT_CLASSIFICATION	7.445525803543375E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9992554474196457	WITHOUT_CLASSIFICATION	7.445525803543375E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9992554474196457	WITHOUT_CLASSIFICATION	7.445525803543375E-4	DESIGN
invoke static __file__	WITHOUT_CLASSIFICATION	0.9998196851269957	WITHOUT_CLASSIFICATION	1.8031487300431998E-4	DESIGN
rest of the argument array!	WITHOUT_CLASSIFICATION	0.999853504871285	WITHOUT_CLASSIFICATION	1.4649512871497253E-4	DESIGN
fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9991566497278139	WITHOUT_CLASSIFICATION	8.433502721860183E-4	DESIGN
UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9915983167472349	WITHOUT_CLASSIFICATION	0.008401683252765147	DESIGN
UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9915983167472349	WITHOUT_CLASSIFICATION	0.008401683252765147	DESIGN
load null block	WITHOUT_CLASSIFICATION	0.9984436050726714	WITHOUT_CLASSIFICATION	0.0015563949273285803	DESIGN
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999445937621911	WITHOUT_CLASSIFICATION	5.5406237808798035E-5	DESIGN
nothing else to here - the module version will be included in the class.	WITHOUT_CLASSIFICATION	0.9994560086957875	WITHOUT_CLASSIFICATION	5.439913042124856E-4	DESIGN
JRUBY-1000, fail early when attempting to subclass a final Java class; solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9987984766963671	WITHOUT_CLASSIFICATION	0.0012015233036328113	DESIGN
block given	WITHOUT_CLASSIFICATION	0.9996635324603296	WITHOUT_CLASSIFICATION	3.3646753967041937E-4	DESIGN
block given	WITHOUT_CLASSIFICATION	0.9996635324603296	WITHOUT_CLASSIFICATION	3.3646753967041937E-4	DESIGN
Translate ret = (a || b) to ret = (a ? true : b) as follows v1 = -- build(a) -- OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. while this info can be inferred by using attributes, why bother if we can do this? ret = true beq(v1, true, L) v2 = -- build(b) -- ret = v2 L:	WITHOUT_CLASSIFICATION	0.7961424879254876	DESIGN	0.20385751207451247	WITHOUT_CLASSIFICATION
Initial precision is that of double numbers 2^63/2 ~ 4E18 63-1 an even number of number bits precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9998432845159639	WITHOUT_CLASSIFICATION	1.567154840360631E-4	DESIGN
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9988954546617003	WITHOUT_CLASSIFICATION	0.001104545338299798	DESIGN
self	WITHOUT_CLASSIFICATION	0.9983406011165444	WITHOUT_CLASSIFICATION	0.001659398883455559	DESIGN
self	WITHOUT_CLASSIFICATION	0.9983406011165444	WITHOUT_CLASSIFICATION	0.001659398883455559	DESIGN
self	WITHOUT_CLASSIFICATION	0.9983406011165444	WITHOUT_CLASSIFICATION	0.001659398883455559	DESIGN
declare the field	WITHOUT_CLASSIFICATION	0.9997570438826905	WITHOUT_CLASSIFICATION	2.4295611730950638E-4	DESIGN
Assign the values.	WITHOUT_CLASSIFICATION	0.9994449743684868	WITHOUT_CLASSIFICATION	5.550256315131908E-4	DESIGN
Assign the values.	WITHOUT_CLASSIFICATION	0.9994449743684868	WITHOUT_CLASSIFICATION	5.550256315131908E-4	DESIGN
check arity	WITHOUT_CLASSIFICATION	0.9998757322777974	WITHOUT_CLASSIFICATION	1.2426772220274046E-4	DESIGN
check arity	WITHOUT_CLASSIFICATION	0.9998757322777974	WITHOUT_CLASSIFICATION	1.2426772220274046E-4	DESIGN
create the class	WITHOUT_CLASSIFICATION	0.9991105554059657	WITHOUT_CLASSIFICATION	8.894445940342731E-4	DESIGN
called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999242058857013	WITHOUT_CLASSIFICATION	7.579411429879725E-5	DESIGN
No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999045222499404	WITHOUT_CLASSIFICATION	9.54777500596864E-5	DESIGN
1.8	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
6:tags 16:addr 1:eos	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999290100276634	WITHOUT_CLASSIFICATION	7.098997233662056E-5	DESIGN
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9997401512679934	WITHOUT_CLASSIFICATION	2.598487320066424E-4	DESIGN
block	WITHOUT_CLASSIFICATION	0.9992080616725169	WITHOUT_CLASSIFICATION	7.919383274832641E-4	DESIGN
Label for the start of the method Label for the end of the method	WITHOUT_CLASSIFICATION	0.9998956072539641	WITHOUT_CLASSIFICATION	1.0439274603590498E-4	DESIGN
comparisons & checks checks if the operand is non-null and non-false EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9675862975360081	WITHOUT_CLASSIFICATION	0.03241370246399183	DESIGN
FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9264683735021062	WITHOUT_CLASSIFICATION	0.07353162649789372	DESIGN
invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9993429652960792	WITHOUT_CLASSIFICATION	6.570347039208737E-4	DESIGN
all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9858014474709513	WITHOUT_CLASSIFICATION	0.014198552529048723	DESIGN
allow proxy to be read without synchronization. if proxy is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999815364333843	WITHOUT_CLASSIFICATION	1.8463566615697747E-5	DESIGN
Create list of interface names to proxy (and make sure they really are interfaces) Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9273655019244008	WITHOUT_CLASSIFICATION	0.07263449807559914	DESIGN
Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9813329660308157	WITHOUT_CLASSIFICATION	0.018667033969184326	DESIGN
Value of "TZ" property is of a bit different format, which confuses the Java's TimeZone.getTimeZone(id) method, and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9913754962278355	WITHOUT_CLASSIFICATION	0.008624503772164496	DESIGN
file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9943605741095776	WITHOUT_CLASSIFICATION	0.005639425890422429	DESIGN
ensure the object is associated with the wrapper we found it in, so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999993537275843	WITHOUT_CLASSIFICATION	6.46272415750752E-7	DESIGN
return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9998025067070407	WITHOUT_CLASSIFICATION	1.9749329295940427E-4	DESIGN
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.8346380673071323	WITHOUT_CLASSIFICATION	0.16536193269286772	DESIGN
arg	WITHOUT_CLASSIFICATION	0.9992926343684388	WITHOUT_CLASSIFICATION	7.07365631561191E-4	DESIGN
Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999867134847427	WITHOUT_CLASSIFICATION	1.3286515257266442E-5	DESIGN
normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999431204436862	WITHOUT_CLASSIFICATION	5.687955631384615E-5	DESIGN
coerce arguments	WITHOUT_CLASSIFICATION	0.9994928885701273	WITHOUT_CLASSIFICATION	5.071114298726711E-4	DESIGN
0.0 is ok float range inverted float range? NaN +infinity -infinity	WITHOUT_CLASSIFICATION	0.9990199286615286	WITHOUT_CLASSIFICATION	9.800713384714042E-4	DESIGN
expected	WITHOUT_CLASSIFICATION	0.9998339227599332	WITHOUT_CLASSIFICATION	1.6607724006686598E-4	DESIGN
set this class's method names in var @__java_ovrd_methods if this is the new class; otherwise, get method names from there if this is a proxy superclass.	WITHOUT_CLASSIFICATION	0.999260382483868	WITHOUT_CLASSIFICATION	7.39617516132019E-4	DESIGN
ignore backslashed spaces in %w	WITHOUT_CLASSIFICATION	0.9987112391527446	WITHOUT_CLASSIFICATION	0.001288760847255463	DESIGN
Invert the sign, since TZ format and Java format use opposite signs, sigh... Also, Java API requires the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9964093035755593	WITHOUT_CLASSIFICATION	0.00359069642444065	DESIGN
no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9992622324959222	WITHOUT_CLASSIFICATION	7.377675040777518E-4	DESIGN
<=> may return nil in many circumstances, e.g. 3 <=> NaN	WITHOUT_CLASSIFICATION	0.9994246307684782	WITHOUT_CLASSIFICATION	5.753692315218784E-4	DESIGN
use numbered access method	WITHOUT_CLASSIFICATION	0.9965465518497245	WITHOUT_CLASSIFICATION	0.0034534481502756027	DESIGN
Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9998418252775646	WITHOUT_CLASSIFICATION	1.5817472243545214E-4	DESIGN
ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9995515901342565	WITHOUT_CLASSIFICATION	4.4840986574354856E-4	DESIGN
The dataStruct is a place where custom information can be contained for core implementations that doesn't necessarily want to go to the trouble of creating a subclass of RubyObject. The OpenSSL implementation uses this heavily to save holder objects containing Java cryptography objects. Java integration uses this to store the Java object ref. protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9966383659464647	WITHOUT_CLASSIFICATION	0.003361634053535245	DESIGN
Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9984172470445183	WITHOUT_CLASSIFICATION	0.0015827529554817402	DESIGN
arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9969999857709371	WITHOUT_CLASSIFICATION	0.003000014229062906	DESIGN
build scope names string	WITHOUT_CLASSIFICATION	0.9998015828334712	WITHOUT_CLASSIFICATION	1.984171665288899E-4	DESIGN
Tries to load at compile-time the constant referred to by 'constRef'. This might be possible if the constant is defined and is not a forward reference to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9910795627285867	WITHOUT_CLASSIFICATION	0.008920437271413372	DESIGN
Here we create an "anonymous" exception type used for unrolling the stack. MRI creates a new one for every call to timeout, which can be costly. We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.7550957281471034	WITHOUT_CLASSIFICATION	0.24490427185289662	DESIGN
finally	WITHOUT_CLASSIFICATION	0.9991397453058767	WITHOUT_CLASSIFICATION	8.602546941232901E-4	DESIGN
MRI behavior: With TZ equal to "GMT" or "UTC", Time.now is NOT considered as a proper GMT/UTC time: ENV['TZ']="GMT" Time.now.gmt? ==> false ENV['TZ']="UTC" Time.now.utc? ==> false Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9965083045497608	WITHOUT_CLASSIFICATION	0.0034916954502393015	DESIGN
?l | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999743139630098	WITHOUT_CLASSIFICATION	2.5686036990149866E-5	DESIGN
This try/catch is to allow failing over to the "commands" logic when running from within a jruby-complete jar file, which has jruby.home = a jar file URL that does not resolve correctly with JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9968484599573864	WITHOUT_CLASSIFICATION	0.003151540042613708	DESIGN
Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9842306758664794	WITHOUT_CLASSIFICATION	0.015769324133520727	DESIGN
specific arity	WITHOUT_CLASSIFICATION	0.9994477618062898	WITHOUT_CLASSIFICATION	5.522381937102207E-4	DESIGN
In the case of two arguments, MRI will discard the portion of the first argument after a decimal point (i.e., "floor"). However in the case of a single argument, any portion after the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999998920956222	WITHOUT_CLASSIFICATION	1.0790437780145493E-7	DESIGN
?w | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999910161090283	WITHOUT_CLASSIFICATION	8.98389097169666E-6	DESIGN
COMMON VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9991398395067661	WITHOUT_CLASSIFICATION	8.601604932339281E-4	DESIGN
@JRubyMethod public IRubyObject to_proc() { return RubyProc.newProc(getRuntime(), CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()), Block.Type.PROC); }	WITHOUT_CLASSIFICATION	0.9994364005982909	WITHOUT_CLASSIFICATION	5.635994017091587E-4	DESIGN
let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9989429226158513	WITHOUT_CLASSIFICATION	0.001057077384148662	DESIGN
let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9989429226158513	WITHOUT_CLASSIFICATION	0.001057077384148662	DESIGN
do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9994955863473555	WITHOUT_CLASSIFICATION	5.044136526444938E-4	DESIGN
do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9994955863473555	WITHOUT_CLASSIFICATION	5.044136526444938E-4	DESIGN
Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9305805572480075	WITHOUT_CLASSIFICATION	0.06941944275199252	DESIGN
Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9305805572480075	WITHOUT_CLASSIFICATION	0.06941944275199252	DESIGN
================ Utility Methods ================	WITHOUT_CLASSIFICATION	0.9997577143319017	WITHOUT_CLASSIFICATION	2.422856680981471E-4	DESIGN
================ Utility Methods ================	WITHOUT_CLASSIFICATION	0.9997577143319017	WITHOUT_CLASSIFICATION	2.422856680981471E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9645227726330605	WITHOUT_CLASSIFICATION	0.03547722736693949	DESIGN
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9645227726330605	WITHOUT_CLASSIFICATION	0.03547722736693949	DESIGN
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9645227726330605	WITHOUT_CLASSIFICATION	0.03547722736693949	DESIGN
Add property name aliases	WITHOUT_CLASSIFICATION	0.9991452510595414	WITHOUT_CLASSIFICATION	8.547489404586214E-4	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9997538607312987	WITHOUT_CLASSIFICATION	2.461392687013869E-4	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9997538607312987	WITHOUT_CLASSIFICATION	2.461392687013869E-4	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9997538607312987	WITHOUT_CLASSIFICATION	2.461392687013869E-4	DESIGN
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9973120664513059	WITHOUT_CLASSIFICATION	0.0026879335486940437	DESIGN
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9973120664513059	WITHOUT_CLASSIFICATION	0.0026879335486940437	DESIGN
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9973120664513059	WITHOUT_CLASSIFICATION	0.0026879335486940437	DESIGN
INTERNAL VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9992078911340695	WITHOUT_CLASSIFICATION	7.921088659305108E-4	DESIGN
backspace	WITHOUT_CLASSIFICATION	0.9992574453191816	WITHOUT_CLASSIFICATION	7.425546808183412E-4	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
package-private	WITHOUT_CLASSIFICATION	0.9996672871231852	WITHOUT_CLASSIFICATION	3.3271287681481876E-4	DESIGN
fall through	WITHOUT_CLASSIFICATION	0.9996934614801177	WITHOUT_CLASSIFICATION	3.065385198823053E-4	DESIGN
fall through	WITHOUT_CLASSIFICATION	0.9996934614801177	WITHOUT_CLASSIFICATION	3.065385198823053E-4	DESIGN
MRI issuses warning here on (RBIGNUM(x)->len SIZEOF_BDIGITS yy > 10241024)	WITHOUT_CLASSIFICATION	0.980213701512028	WITHOUT_CLASSIFICATION	0.019786298487971993	DESIGN
interrupt the target thread in case it's blocking or waiting WARNING: We no longer interrupt the target thread, since this usually means interrupting IO and with NIO that means the channel is no longer usable. We either need a new way to handle waking a target thread that's waiting on IO, or we need to accept that we can't wake such threads and must wait for them to complete their operation. threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.999998631686464	WITHOUT_CLASSIFICATION	1.368313536060457E-6	DESIGN
interrupt the target thread in case it's blocking or waiting WARNING: We no longer interrupt the target thread, since this usually means interrupting IO and with NIO that means the channel is no longer usable. We either need a new way to handle waking a target thread that's waiting on IO, or we need to accept that we can't wake such threads and must wait for them to complete their operation. threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.999998631686464	WITHOUT_CLASSIFICATION	1.368313536060457E-6	DESIGN
Nested class whose instances act as thunks reacting to to_str method called from (Exception#to_str, Exception#message) MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!", to_str implementation: "name_err_mesg_to_str" TODO: this class should not be lookupable	WITHOUT_CLASSIFICATION	0.7517748717257496	DESIGN	0.24822512827425028	WITHOUT_CLASSIFICATION
We need to guarantee that any existing reads of old Map can proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999346731159349	WITHOUT_CLASSIFICATION	6.532688406513629E-5	DESIGN
The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9993101319534389	WITHOUT_CLASSIFICATION	6.898680465610057E-4	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999117805226783	WITHOUT_CLASSIFICATION	8.821947732181867E-5	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999117805226783	WITHOUT_CLASSIFICATION	8.821947732181867E-5	DESIGN
This should only be called by this and RubyFile. It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9447920366812083	WITHOUT_CLASSIFICATION	0.055207963318791686	DESIGN
We yield here to hopefully permit the target thread to schedule MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999800248149903	WITHOUT_CLASSIFICATION	1.9975185009651453E-5	DESIGN
note that addMethod now does its own put, so any change made to functionality here should be made there as well	WITHOUT_CLASSIFICATION	0.9691654724595496	WITHOUT_CLASSIFICATION	0.03083452754045044	DESIGN
Currently dead code, but useful when we figure out how to actually perform translit. private static boolean isTranslit(String encoding) { return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false; }	WITHOUT_CLASSIFICATION	0.8415507177419643	WITHOUT_CLASSIFICATION	0.15844928225803556	DESIGN
empirically it appears that to_ary coersions always return array or nil, so this should always be an array by now.	WITHOUT_CLASSIFICATION	0.994344387180641	WITHOUT_CLASSIFICATION	0.005655612819359032	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999117805226783	WITHOUT_CLASSIFICATION	8.821947732181867E-5	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999117805226783	WITHOUT_CLASSIFICATION	8.821947732181867E-5	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999117805226783	WITHOUT_CLASSIFICATION	8.821947732181867E-5	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999117805226783	WITHOUT_CLASSIFICATION	8.821947732181867E-5	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999117805226783	WITHOUT_CLASSIFICATION	8.821947732181867E-5	DESIGN
No seconds, just yield	WITHOUT_CLASSIFICATION	0.9996742335283921	WITHOUT_CLASSIFICATION	3.257664716078512E-4	DESIGN
finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9990483994467539	WITHOUT_CLASSIFICATION	9.516005532461651E-4	DESIGN
if it's an inner class and it's not public, we can't access it; skip population of declared elements	WITHOUT_CLASSIFICATION	0.9998981940586393	WITHOUT_CLASSIFICATION	1.01805941360627E-4	DESIGN
getFoo => foo getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9997098152074625	WITHOUT_CLASSIFICATION	2.901847925375684E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991925957742998	WITHOUT_CLASSIFICATION	8.07404225700109E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991925957742998	WITHOUT_CLASSIFICATION	8.07404225700109E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991925957742998	WITHOUT_CLASSIFICATION	8.07404225700109E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991925957742998	WITHOUT_CLASSIFICATION	8.07404225700109E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991925957742998	WITHOUT_CLASSIFICATION	8.07404225700109E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991925957742998	WITHOUT_CLASSIFICATION	8.07404225700109E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991925957742998	WITHOUT_CLASSIFICATION	8.07404225700109E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991925957742998	WITHOUT_CLASSIFICATION	8.07404225700109E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991925957742998	WITHOUT_CLASSIFICATION	8.07404225700109E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991925957742998	WITHOUT_CLASSIFICATION	8.07404225700109E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991925957742998	WITHOUT_CLASSIFICATION	8.07404225700109E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991925957742998	WITHOUT_CLASSIFICATION	8.07404225700109E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991925957742998	WITHOUT_CLASSIFICATION	8.07404225700109E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991925957742998	WITHOUT_CLASSIFICATION	8.07404225700109E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991925957742998	WITHOUT_CLASSIFICATION	8.07404225700109E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991925957742998	WITHOUT_CLASSIFICATION	8.07404225700109E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991925957742998	WITHOUT_CLASSIFICATION	8.07404225700109E-4	DESIGN
MRI behavior on Windows: it treats '/' as a root of a current drive (but only if SINGLE slash is present!): E.g., if current work directory is 'D:/home/directory', then '/' means 'D:/'. Basically, '/path' is treated as a RELATIVE path, relative to the current drive. 'path' is treated as absolute one.	WITHOUT_CLASSIFICATION	0.9999891951600738	WITHOUT_CLASSIFICATION	1.0804839926281125E-5	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991925957742998	WITHOUT_CLASSIFICATION	8.07404225700109E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991925957742998	WITHOUT_CLASSIFICATION	8.07404225700109E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991925957742998	WITHOUT_CLASSIFICATION	8.07404225700109E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991925957742998	WITHOUT_CLASSIFICATION	8.07404225700109E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991925957742998	WITHOUT_CLASSIFICATION	8.07404225700109E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991925957742998	WITHOUT_CLASSIFICATION	8.07404225700109E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991925957742998	WITHOUT_CLASSIFICATION	8.07404225700109E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991925957742998	WITHOUT_CLASSIFICATION	8.07404225700109E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991925957742998	WITHOUT_CLASSIFICATION	8.07404225700109E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991925957742998	WITHOUT_CLASSIFICATION	8.07404225700109E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9991925957742998	WITHOUT_CLASSIFICATION	8.07404225700109E-4	DESIGN
This is needed when the enclosing class or module is a singleton. In that case, we generated a name such as null::Foo, which broke Marshalling, among others. The correct thing to do in this situation is to insert the generate the name of form #<Class:01xasdfasd> if it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.7968335500570125	DESIGN	0.20316644994298758	WITHOUT_CLASSIFICATION
this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9939652042240708	WITHOUT_CLASSIFICATION	0.006034795775929271	DESIGN
EQ == 0 (i.e. false) pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9998571815295961	WITHOUT_CLASSIFICATION	1.4281847040389266E-4	DESIGN
get "self"	WITHOUT_CLASSIFICATION	0.9990504284170185	WITHOUT_CLASSIFICATION	9.495715829813759E-4	DESIGN
No timeout in critical section	WITHOUT_CLASSIFICATION	0.9994946120100145	WITHOUT_CLASSIFICATION	5.053879899854216E-4	DESIGN
rethrow exception rethrow it	WITHOUT_CLASSIFICATION	0.9986687276817191	WITHOUT_CLASSIFICATION	0.001331272318280951	DESIGN
only public methods	WITHOUT_CLASSIFICATION	0.9999347645869268	WITHOUT_CLASSIFICATION	6.52354130732759E-5	DESIGN
If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9997402481821156	WITHOUT_CLASSIFICATION	2.597518178844101E-4	DESIGN
First try to use drive letter from supplied dir value, then try current work dir.	WITHOUT_CLASSIFICATION	0.9999907951602195	WITHOUT_CLASSIFICATION	9.20483978050624E-6	DESIGN
JRUBY-2435: Aliasing eval and other "special" methods should display a warning We warn because we treat certain method names as "special" for purposes of optimization. Hopefully this will be enough to convince people not to alias them.	WITHOUT_CLASSIFICATION	0.8135186764221671	WITHOUT_CLASSIFICATION	0.1864813235778328	DESIGN
generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9993966872058216	WITHOUT_CLASSIFICATION	6.033127941783022E-4	DESIGN
block argument to the method closure present class present method table mutations, def, defs, undef, alias likely call to eval makes calls that are aware of the frame makes calls that are aware of the frame's self makes calls that are aware of the frame's visibility makes calls that are aware of the frame's block makes calls that are aware of the frame's name makes calls that set or get backref makes calls that set or get lastline makes calls that are aware of the frame's class optional arguments to the method rest arg to the method makes calls that are aware of the scope makes a zero-argument super call accesses or sets constants accesses or sets class variables makes normal super call contains a retry	WITHOUT_CLASSIFICATION	0.9996819150633501	WITHOUT_CLASSIFICATION	3.180849366499646E-4	DESIGN
Add aliases in Type::, NativeType:: and FFI::TYPE_	WITHOUT_CLASSIFICATION	0.9996310781686074	WITHOUT_CLASSIFICATION	3.6892183139258707E-4	DESIGN
Create constants for flock	WITHOUT_CLASSIFICATION	0.9997726765585719	WITHOUT_CLASSIFICATION	2.2732344142814627E-4	DESIGN
double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9996725444310052	WITHOUT_CLASSIFICATION	3.274555689947486E-4	DESIGN
indices for temp values	WITHOUT_CLASSIFICATION	0.9998936398597823	WITHOUT_CLASSIFICATION	1.0636014021771903E-4	DESIGN
a while node could receive non-local flow control from any of these: a closure within the loop an eval within the loop a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999978662575166	WITHOUT_CLASSIFICATION	2.133742483397486E-6	DESIGN
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9991385994419963	WITHOUT_CLASSIFICATION	8.614005580037184E-4	DESIGN
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9991385994419963	WITHOUT_CLASSIFICATION	8.614005580037184E-4	DESIGN
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9991385994419963	WITHOUT_CLASSIFICATION	8.614005580037184E-4	DESIGN
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9991385994419963	WITHOUT_CLASSIFICATION	8.614005580037184E-4	DESIGN
snapshot of contents of directory current position in directory	WITHOUT_CLASSIFICATION	0.999996244466133	WITHOUT_CLASSIFICATION	3.7555338669708646E-6	DESIGN
Exclusive locks in Java require the channel to be writable, otherwise an exception is thrown (terminating JRuby execution). But flock behavior of MRI is that it allows exclusive locks even on non-writable file. So we convert exclusive lock to shared lock if the channel is not writable, to better match the MRI behavior.	WITHOUT_CLASSIFICATION	0.97667883680589	WITHOUT_CLASSIFICATION	0.02332116319410999	DESIGN
explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9992915520508316	WITHOUT_CLASSIFICATION	7.084479491684039E-4	DESIGN
explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9992915520508316	WITHOUT_CLASSIFICATION	7.084479491684039E-4	DESIGN
set self to the class	WITHOUT_CLASSIFICATION	0.9878433124682553	WITHOUT_CLASSIFICATION	0.012156687531744644	DESIGN
---------- Public fields, methods ---------	WITHOUT_CLASSIFICATION	0.9993269064873886	WITHOUT_CLASSIFICATION	6.730935126113603E-4	DESIGN
A specific version was requested - use as is for search	WITHOUT_CLASSIFICATION	0.9993638762748585	WITHOUT_CLASSIFICATION	6.361237251415749E-4	DESIGN
zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999115472312906	WITHOUT_CLASSIFICATION	8.845276870946934E-5	DESIGN
we need to collect all methods, though we'll only install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9975698412778086	WITHOUT_CLASSIFICATION	0.0024301587221913857	DESIGN
Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9939016260935907	WITHOUT_CLASSIFICATION	0.006098373906409252	DESIGN
Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9991112513736354	WITHOUT_CLASSIFICATION	8.887486263644896E-4	DESIGN
do nothing	WITHOUT_CLASSIFICATION	0.9996533541384108	WITHOUT_CLASSIFICATION	3.46645861589083E-4	DESIGN
do nothing	WITHOUT_CLASSIFICATION	0.9996533541384108	WITHOUT_CLASSIFICATION	3.46645861589083E-4	DESIGN
do nothing	WITHOUT_CLASSIFICATION	0.9996533541384108	WITHOUT_CLASSIFICATION	3.46645861589083E-4	DESIGN
do nothing	WITHOUT_CLASSIFICATION	0.9996533541384108	WITHOUT_CLASSIFICATION	3.46645861589083E-4	DESIGN
If an IO exception occurs (something odd, but possible) A directory may return null.	WITHOUT_CLASSIFICATION	0.9999963495803115	WITHOUT_CLASSIFICATION	3.6504196884276137E-6	DESIGN
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9987312245804588	WITHOUT_CLASSIFICATION	0.0012687754195411817	DESIGN
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9987312245804588	WITHOUT_CLASSIFICATION	0.0012687754195411817	DESIGN
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9987312245804588	WITHOUT_CLASSIFICATION	0.0012687754195411817	DESIGN
use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9932130152112018	WITHOUT_CLASSIFICATION	0.006786984788798243	DESIGN
finally with no exception	WITHOUT_CLASSIFICATION	0.9984210502988698	WITHOUT_CLASSIFICATION	0.001578949701130091	DESIGN
Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9667465720511569	WITHOUT_CLASSIFICATION	0.03325342794884318	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.6836008248927323	WITHOUT_CLASSIFICATION	0.3163991751072678	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.6836008248927323	WITHOUT_CLASSIFICATION	0.3163991751072678	DESIGN
The counting of slashes that follows is simply a way to adhere to Ruby's UNC (or something) compatibility. When Ruby's expand_path is called with "foobar" it will return "foo/bar". JRuby uses java.io.File, and hence returns "/foo/bar". In order to retain java.io.File in the lower layers and provide full Ruby compatibility, the number of extra slashes must be counted and prepended to the result.	WITHOUT_CLASSIFICATION	0.9055073552881231	WITHOUT_CLASSIFICATION	0.09449264471187682	DESIGN
This is almost always already interned, since it will be called with a symbol in most cases but when created from Java code, we might get an argument that needs to be interned. addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999898496512947	WITHOUT_CLASSIFICATION	1.0150348705227216E-5	DESIGN
not a class	WITHOUT_CLASSIFICATION	0.9912922156253955	WITHOUT_CLASSIFICATION	0.008707784374604533	DESIGN
not a class	WITHOUT_CLASSIFICATION	0.9912922156253955	WITHOUT_CLASSIFICATION	0.008707784374604533	DESIGN
Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.8956299501314511	WITHOUT_CLASSIFICATION	0.10437004986854893	DESIGN
Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.8956299501314511	WITHOUT_CLASSIFICATION	0.10437004986854893	DESIGN
io.available() only returns 0 after EOF is encountered so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9985444020476063	WITHOUT_CLASSIFICATION	0.0014555979523935927	DESIGN
In the current logic, if we get here we know that module is not an IncludedModuleWrapper, so there's no need to fish out the delegate. But just in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9497609599696799	WITHOUT_CLASSIFICATION	0.050239040030320155	DESIGN
rb_iterate((VALUE()_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9991850795574373	WITHOUT_CLASSIFICATION	8.149204425626634E-4	DESIGN
Broken symlinks considered by exists() as non-existing, so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999632462590456	WITHOUT_CLASSIFICATION	3.675374095427412E-5	DESIGN
CONSTANT API METHODS	WITHOUT_CLASSIFICATION	0.9995209327278681	WITHOUT_CLASSIFICATION	4.7906727213185444E-4	DESIGN
create the default thread group	WITHOUT_CLASSIFICATION	0.9995368914687044	WITHOUT_CLASSIFICATION	4.631085312955614E-4	DESIGN
range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9989304158938679	WITHOUT_CLASSIFICATION	0.0010695841061321276	DESIGN
============================ Here are hash internals (This could be extracted to a separate class but it's not too large though) ============================	WITHOUT_CLASSIFICATION	0.9931059111917221	WITHOUT_CLASSIFICATION	0.006894088808277814	DESIGN
LOW-LEVEL CLASS VARIABLE INTERFACE fetch/store/list class variables for this module	WITHOUT_CLASSIFICATION	0.94483358161416	WITHOUT_CLASSIFICATION	0.055166418385840035	DESIGN
used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9674761610859928	WITHOUT_CLASSIFICATION	0.032523838914007175	DESIGN
used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9674761610859928	WITHOUT_CLASSIFICATION	0.032523838914007175	DESIGN
Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9998950347772105	WITHOUT_CLASSIFICATION	1.0496522278956941E-4	DESIGN
Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9998950347772105	WITHOUT_CLASSIFICATION	1.0496522278956941E-4	DESIGN
retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9957360353918948	WITHOUT_CLASSIFICATION	0.004263964608105181	DESIGN
returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9994833143220653	WITHOUT_CLASSIFICATION	5.166856779347332E-4	DESIGN
\cX, \c\M-X	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9987259086201415	WITHOUT_CLASSIFICATION	0.0012740913798584602	DESIGN
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9987259086201415	WITHOUT_CLASSIFICATION	0.0012740913798584602	DESIGN
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9987259086201415	WITHOUT_CLASSIFICATION	0.0012740913798584602	DESIGN
line 286	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 476	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 513	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 530	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 533	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 537	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 551	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
end loop	WITHOUT_CLASSIFICATION	0.9998943715340748	WITHOUT_CLASSIFICATION	1.056284659251196E-4	DESIGN
MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9998620037047894	WITHOUT_CLASSIFICATION	1.3799629521059188E-4	DESIGN
prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9855521902989695	WITHOUT_CLASSIFICATION	0.014447809701030575	DESIGN
Traverse the instructions in this basic block in reverse order! Mark as dead all instructions whose results are not used!	WITHOUT_CLASSIFICATION	0.997572650135819	WITHOUT_CLASSIFICATION	0.00242734986418106	DESIGN
fields should really be an immutable map as it is never modified after construction	WITHOUT_CLASSIFICATION	0.9998327314079567	WITHOUT_CLASSIFICATION	1.6726859204328493E-4	DESIGN
load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9995182473742233	WITHOUT_CLASSIFICATION	4.817526257767215E-4	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.6836008248927323	WITHOUT_CLASSIFICATION	0.3163991751072678	DESIGN
If we define a class in Ruby, but later want to allow it to be defined in Java, the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.970276886009921	WITHOUT_CLASSIFICATION	0.029723113990079028	DESIGN
We only want IO objects with valid streams (better to error now).	WITHOUT_CLASSIFICATION	0.9997607237804317	WITHOUT_CLASSIFICATION	2.3927621956836587E-4	DESIGN
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.8169201389079281	WITHOUT_CLASSIFICATION	0.18307986109207178	DESIGN
value	WITHOUT_CLASSIFICATION	0.9996584022845018	WITHOUT_CLASSIFICATION	3.415977154981636E-4	DESIGN
value	WITHOUT_CLASSIFICATION	0.9996584022845018	WITHOUT_CLASSIFICATION	3.415977154981636E-4	DESIGN
value	WITHOUT_CLASSIFICATION	0.9996584022845018	WITHOUT_CLASSIFICATION	3.415977154981636E-4	DESIGN
value	WITHOUT_CLASSIFICATION	0.9996584022845018	WITHOUT_CLASSIFICATION	3.415977154981636E-4	DESIGN
value	WITHOUT_CLASSIFICATION	0.9996584022845018	WITHOUT_CLASSIFICATION	3.415977154981636E-4	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9992524630918528	WITHOUT_CLASSIFICATION	7.475369081471981E-4	DESIGN
value	WITHOUT_CLASSIFICATION	0.9996584022845018	WITHOUT_CLASSIFICATION	3.415977154981636E-4	DESIGN
value	WITHOUT_CLASSIFICATION	0.9996584022845018	WITHOUT_CLASSIFICATION	3.415977154981636E-4	DESIGN
value	WITHOUT_CLASSIFICATION	0.9996584022845018	WITHOUT_CLASSIFICATION	3.415977154981636E-4	DESIGN
MRI has extra pointer which makes our code look a little bit more strange in comparison	WITHOUT_CLASSIFICATION	0.9469637497168508	WITHOUT_CLASSIFICATION	0.05303625028314908	DESIGN
Tempory buffer to build up a potential token. Consumer takes responsibility to reset this before use.	WITHOUT_CLASSIFICATION	0.9988430923763693	WITHOUT_CLASSIFICATION	0.0011569076236306506	DESIGN
tmpPosition is required because getPosition()'s side effects. if the warning is generated, the getPosition() on line 954 (this line + 18) will create a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9988022825082291	WITHOUT_CLASSIFICATION	0.001197717491770839	DESIGN
What is \v in C? case '\v': c2 = 'v'; break;	WITHOUT_CLASSIFICATION	0.9997147452668147	WITHOUT_CLASSIFICATION	2.852547331852778E-4	DESIGN
Consider Thread aspects of this	WITHOUT_CLASSIFICATION	0.997276545056125	WITHOUT_CLASSIFICATION	0.002723454943875125	DESIGN
Position within source must reflect the actual offset and column. Since we ate an extra character here (this accounting is normally done in read ), we should update position info.	WITHOUT_CLASSIFICATION	0.9997551018773825	WITHOUT_CLASSIFICATION	2.448981226175262E-4	DESIGN
An interrupt or timeout may have caused us to miss a notify that we consumed, so do another notify in case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999179511963192	WITHOUT_CLASSIFICATION	8.20488036807534E-5	DESIGN
line 572	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 601	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 601	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 625	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 649	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 691	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 723	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 732	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 745	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 766	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 785	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 794	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 800	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 812	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 827	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 839	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 845	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 864	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 886	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 896	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 911	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 929	WITHOUT_CLASSIFICATION	0.9996120678665645	WITHOUT_CLASSIFICATION	3.8793213343547064E-4	DESIGN
line 952	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 970	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 972	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 991	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1011	WITHOUT_CLASSIFICATION	0.9967219917532334	WITHOUT_CLASSIFICATION	0.003278008246766715	DESIGN
line 1026	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1038	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1067	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1085	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1097	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1105	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1122	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1133	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1145	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1169	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1201	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1210	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1229	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1261	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1287	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1293	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1307	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1320	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1325	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1363	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1398	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1448	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1456	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1473	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1492	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1513	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1523	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1562	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1582	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1603	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1603	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1615	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1620	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1635	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1652	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1681	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1708	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1716	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1755	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1772	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1789	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
ACTIONS_END	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
ACTIONS_END	WITHOUT_CLASSIFICATION	0.9996614625437028	WITHOUT_CLASSIFICATION	3.385374562972151E-4	DESIGN
force for args	WITHOUT_CLASSIFICATION	0.9995409547702847	WITHOUT_CLASSIFICATION	4.5904522971525777E-4	DESIGN
last expression should not be void	WITHOUT_CLASSIFICATION	0.9913873184055925	WITHOUT_CLASSIFICATION	0.008612681594407557	DESIGN
compstmt position includes both parens around it	WITHOUT_CLASSIFICATION	0.9925894621181516	WITHOUT_CLASSIFICATION	0.007410537881848408	DESIGN
We can assign if we already have variable of that name here or we are the only scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9997678968176452	WITHOUT_CLASSIFICATION	2.321031823546987E-4	DESIGN
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9974045573542866	WITHOUT_CLASSIFICATION	0.00259544264571343	DESIGN
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9974045573542866	WITHOUT_CLASSIFICATION	0.00259544264571343	DESIGN
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9974045573542866	WITHOUT_CLASSIFICATION	0.00259544264571343	DESIGN
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9974045573542866	WITHOUT_CLASSIFICATION	0.00259544264571343	DESIGN
FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9910526498224681	DESIGN	0.008947350177531925	WITHOUT_CLASSIFICATION
This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:) into individual whenNodes. The primary reason for this is to ensure lazy evaluation of the arguments (when foo,bar,gar:) to prevent side-effects. In the old code this was done using nested when statements, which was awful for interpreter and compilation. Notes: This has semantic equivalence but will not be lexically equivalent. Compiler needs to detect same bodies to simplify bytecode generated.	WITHOUT_CLASSIFICATION	0.9976883919627456	WITHOUT_CLASSIFICATION	0.002311608037254377	DESIGN
line 313	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 339	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 361	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 413	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 451	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 472	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 500	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 515	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 555	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 582	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 619	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 636	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 669	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 703	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 776	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 814	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 823	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 854	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 872	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 905	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 925	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 958	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 992	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1047	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1072	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1081	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1108	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1136	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1168	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1192	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1241	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1267	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1286	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1301	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1314	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1333	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1362	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1395	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1420	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1439	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1476	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1535	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1588	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1618	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1643	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1669	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1728	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1753	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1779	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1794	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1812	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1837	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1895	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1925	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1950	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 1992	WITHOUT_CLASSIFICATION	0.9995889154699193	WITHOUT_CLASSIFICATION	4.1108453008053116E-4	DESIGN
line 2014	WITHOUT_CLASSIFICATION	0.9995916479166912	WITHOUT_CLASSIFICATION	4.0835208330888394E-4	DESIGN
Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9268943506403181	WITHOUT_CLASSIFICATION	0.07310564935968183	DESIGN
If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9998674733841457	WITHOUT_CLASSIFICATION	1.3252661585422704E-4	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9997465793700224	WITHOUT_CLASSIFICATION	2.5342062997753934E-4	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9997465793700224	WITHOUT_CLASSIFICATION	2.5342062997753934E-4	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9997465793700224	WITHOUT_CLASSIFICATION	2.5342062997753934E-4	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9997465793700224	WITHOUT_CLASSIFICATION	2.5342062997753934E-4	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9997465793700224	WITHOUT_CLASSIFICATION	2.5342062997753934E-4	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9997465793700224	WITHOUT_CLASSIFICATION	2.5342062997753934E-4	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9997465793700224	WITHOUT_CLASSIFICATION	2.5342062997753934E-4	DESIGN
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9752583598125925	WITHOUT_CLASSIFICATION	0.024741640187407567	DESIGN
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9752583598125925	WITHOUT_CLASSIFICATION	0.024741640187407567	DESIGN
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9752583598125925	WITHOUT_CLASSIFICATION	0.024741640187407567	DESIGN
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9752583598125925	WITHOUT_CLASSIFICATION	0.024741640187407567	DESIGN
happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9908075346713794	WITHOUT_CLASSIFICATION	0.009192465328620588	DESIGN
happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9908075346713794	WITHOUT_CLASSIFICATION	0.009192465328620588	DESIGN
We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the 'b' will get put into this new dynamic scope. The original scope does not see the new 'b' and successive evals with this binding will. I take it having the ability to have succesive binding evals be able to share same scope makes sense from a programmers perspective. One crappy outcome of this design is it requires Dynamic and Static scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.6097226141639869	DESIGN	0.39027738583601307	WITHOUT_CLASSIFICATION
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9996811932954367	WITHOUT_CLASSIFICATION	3.1880670456329994E-4	DESIGN
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9996811932954367	WITHOUT_CLASSIFICATION	3.1880670456329994E-4	DESIGN
tc under method self under method name args	WITHOUT_CLASSIFICATION	0.9976048005796643	WITHOUT_CLASSIFICATION	0.002395199420335733	DESIGN
allow it to bubble up	WITHOUT_CLASSIFICATION	0.996528583150317	WITHOUT_CLASSIFICATION	0.0034714168496829934	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999178291562663	WITHOUT_CLASSIFICATION	8.217084373371085E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999178291562663	WITHOUT_CLASSIFICATION	8.217084373371085E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999178291562663	WITHOUT_CLASSIFICATION	8.217084373371085E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999178291562663	WITHOUT_CLASSIFICATION	8.217084373371085E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999178291562663	WITHOUT_CLASSIFICATION	8.217084373371085E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999178291562663	WITHOUT_CLASSIFICATION	8.217084373371085E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999178291562663	WITHOUT_CLASSIFICATION	8.217084373371085E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999178291562663	WITHOUT_CLASSIFICATION	8.217084373371085E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999178291562663	WITHOUT_CLASSIFICATION	8.217084373371085E-4	DESIGN
trim extension to try other options	WITHOUT_CLASSIFICATION	0.9993270581176411	WITHOUT_CLASSIFICATION	6.729418823588924E-4	DESIGN
trim extension to try other options	WITHOUT_CLASSIFICATION	0.9993270581176411	WITHOUT_CLASSIFICATION	6.729418823588924E-4	DESIGN
Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9998695647282738	WITHOUT_CLASSIFICATION	1.3043527172610763E-4	DESIGN
end suffix iteration	WITHOUT_CLASSIFICATION	0.9999142948166371	WITHOUT_CLASSIFICATION	8.570518336286415E-5	DESIGN
end suffix iteration	WITHOUT_CLASSIFICATION	0.9999142948166371	WITHOUT_CLASSIFICATION	8.570518336286415E-5	DESIGN
Unfortunately, the number of digits in the exponent is not clearly defined in Ruby documentation. This is a platform/version-dependent behavior. On Linux/Mac/Cygwinnix, two digits are used. On Windows, 3 digits are used. It is desirable for JRuby to have consistent behavior, and the two digits behavior was selected. This is also in sync with "Java-native" sprintf behavior (java.util.Formatter). E or e	WITHOUT_CLASSIFICATION	0.9966096222049747	WITHOUT_CLASSIFICATION	0.0033903777950253216	DESIGN
Represents the the dynamic portion of scoping information. The variableValues are the values of assigned local or block variables. The staticScope identifies which sort of scope this is (block or local). Properties of Dynamic Scopes: 1. static and dynamic scopes have the same number of names to values 2. size of variables (and thus names) is determined during parsing. So those structured do not need to change FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents. This is harmless (other than wasting memory), but we should not do that. We can fix this in two ways: 1. Fix all callers 2. Check parent that is passed in and make if new instance is local, then its parent is not local	WITHOUT_CLASSIFICATION	0.999970535683435	DESIGN	2.9464316565135973E-5	WITHOUT_CLASSIFICATION
This method handles '' patterns and delegates to fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9998745713533326	WITHOUT_CLASSIFICATION	1.2542864666739096E-4	DESIGN
Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9998523517714618	WITHOUT_CLASSIFICATION	1.4764822853822354E-4	DESIGN
double precision, native double precision, native	WITHOUT_CLASSIFICATION	0.9999174376069199	WITHOUT_CLASSIFICATION	8.256239308019142E-5	DESIGN
64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9995934842045548	WITHOUT_CLASSIFICATION	4.0651579544505E-4	DESIGN
Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999925891820945	WITHOUT_CLASSIFICATION	7.410817905400027E-6	DESIGN
calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9993769941380088	WITHOUT_CLASSIFICATION	6.230058619910953E-4	DESIGN
processes seem to have some peculiar locking sequences, so we need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.999929194173968	WITHOUT_CLASSIFICATION	7.080582603200953E-5	DESIGN
MRI behavior: for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9887738546074099	WITHOUT_CLASSIFICATION	0.011226145392590087	DESIGN
this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9986600222281842	WITHOUT_CLASSIFICATION	0.0013399777718159337	DESIGN
exec needs to behave differently in-process, because it's technically supposed to replace the calling process. So if we're supposed to run in-process, we allow it to use the default streams and not use pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9486363181095117	WITHOUT_CLASSIFICATION	0.05136368189048833	DESIGN
snip off ruby or jruby command from list of arguments leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9998203940037227	WITHOUT_CLASSIFICATION	1.7960599627738787E-4	DESIGN
The problem we trying to solve below: STDIN in Java is blocked and non-interruptible, so if we invoke read on it, we might never be able to interrupt such thread. So, we use in.available() to see if there is any input ready, and only then read it. But this approach can't tell whether the end of stream reached or not, so we might end up looping right at the end of the stream. Well, at least, we can improve the situation by checking if some input was ever available, and if so, not checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9865800396793131	WITHOUT_CLASSIFICATION	0.013419960320686883	DESIGN
first digit is always printed	WITHOUT_CLASSIFICATION	0.9992422765350715	WITHOUT_CLASSIFICATION	7.57723464928485E-4	DESIGN
an empirically derived rule: precision applies to significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9996780177578418	WITHOUT_CLASSIFICATION	3.219822421581426E-4	DESIGN
an official rule, clarified: if the exponent <clarif>after adjusting for exponent form</clarif> is < -4, or the exponent <clarif>after adjusting for exponent form</clarif> is greater than the precision, use exponent form	WITHOUT_CLASSIFICATION	0.9991105845985915	WITHOUT_CLASSIFICATION	8.89415401408474E-4	DESIGN
in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9879784742464981	WITHOUT_CLASSIFICATION	0.012021525753501888	DESIGN
now some data...	WITHOUT_CLASSIFICATION	0.9986909730861278	WITHOUT_CLASSIFICATION	0.001309026913872339	DESIGN
now some data...	WITHOUT_CLASSIFICATION	0.9986909730861278	WITHOUT_CLASSIFICATION	0.001309026913872339	DESIGN
MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9991867474374685	WITHOUT_CLASSIFICATION	8.132525625314585E-4	DESIGN
else catch oversize below	WITHOUT_CLASSIFICATION	0.9999708456437029	WITHOUT_CLASSIFICATION	2.915435629707688E-5	DESIGN
calculation for simple (and typical) case, adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.997024320134286	WITHOUT_CLASSIFICATION	0.0029756798657140033	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9993415902166725	WITHOUT_CLASSIFICATION	6.584097833276252E-4	DESIGN
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9985187289618729	WITHOUT_CLASSIFICATION	0.0014812710381271528	DESIGN
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9985187289618729	WITHOUT_CLASSIFICATION	0.0014812710381271528	DESIGN
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9985187289618729	WITHOUT_CLASSIFICATION	0.0014812710381271528	DESIGN
could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.7868822656374358	WITHOUT_CLASSIFICATION	0.21311773436256418	DESIGN
We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9989969587249227	WITHOUT_CLASSIFICATION	0.0010030412750773419	DESIGN
call chmod after we created the RandomAccesFile because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.996497043396766	WITHOUT_CLASSIFICATION	0.003502956603233965	DESIGN
attempt to set the permissions, if we have been passed a POSIX instance, and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.999479786992065	WITHOUT_CLASSIFICATION	5.202130079349828E-4	DESIGN
When reading into a heap buffer, the jvm allocates a temporary direct ByteBuffer of the requested size. To avoid allocating a huge direct buffer when doing ludicrous reads (e.g. 1G or more) we split the read up into chunks of no more than 1M	WITHOUT_CLASSIFICATION	0.8349840841954038	DESIGN	0.16501591580459612	WITHOUT_CLASSIFICATION
If it is a file channel, then we can pre-allocate the output buffer to the total size of buffered + remaining bytes in file	WITHOUT_CLASSIFICATION	0.9999979724774632	WITHOUT_CLASSIFICATION	2.0275225367071256E-6	DESIGN
Cannot discern the total read length - allocate at least enough for the buffered data	WITHOUT_CLASSIFICATION	0.9995291893355763	WITHOUT_CLASSIFICATION	4.708106644237177E-4	DESIGN
Copy what is in the buffer, if there is some buffered data	WITHOUT_CLASSIFICATION	0.9997326353714582	WITHOUT_CLASSIFICATION	2.6736462854181134E-4	DESIGN
append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9933465120583344	WITHOUT_CLASSIFICATION	0.006653487941665655	DESIGN
already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9997533699537581	WITHOUT_CLASSIFICATION	2.466300462419583E-4	DESIGN
reset buffer	WITHOUT_CLASSIFICATION	0.9999204824640553	WITHOUT_CLASSIFICATION	7.951753594472522E-5	DESIGN
Synchronize and re-check to avoid creating more than one Selector per provider	WITHOUT_CLASSIFICATION	0.9991473078464381	WITHOUT_CLASSIFICATION	8.526921535618156E-4	DESIGN
TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9581884659199147	DESIGN	0.04181153408008533	WITHOUT_CLASSIFICATION
Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.7281038172322171	WITHOUT_CLASSIFICATION	0.27189618276778293	DESIGN
Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999913483955092	WITHOUT_CLASSIFICATION	8.651604490816178E-6	DESIGN
value equality result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999850748195548	WITHOUT_CLASSIFICATION	1.492518044510143E-5	DESIGN
Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9982774704092304	WITHOUT_CLASSIFICATION	0.0017225295907694702	DESIGN
Since we don't have any other error reporting mechanism, we add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999948265660777	WITHOUT_CLASSIFICATION	5.173433922273149E-6	DESIGN
change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9977295893161935	WITHOUT_CLASSIFICATION	0.002270410683806436	DESIGN
Fixme: Do we need the check or does Main.java not call this...they should consolidate	DESIGN	0.8297285944615934	WITHOUT_CLASSIFICATION	0.17027140553840658	DESIGN
FIXME: move out of this class!	DESIGN	0.724350777744408	DESIGN	0.2756492222555921	WITHOUT_CLASSIFICATION
this is a rather ugly hack, but similar to MRI. See hash.c:ruby_setenv and similar in MRI we search all keys for a case-insensitive match, and use that	DESIGN	0.9600262122697362	DESIGN	0.03997378773026379	WITHOUT_CLASSIFICATION
FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.7756138303540823	DESIGN	0.22438616964591782	WITHOUT_CLASSIFICATION
FIXME: Don't allow multiple threads to do this at once	DESIGN	0.9438933840374477	DESIGN	0.056106615962552286	WITHOUT_CLASSIFICATION
TODO: eliminate?	DESIGN	0.6836008248927323	WITHOUT_CLASSIFICATION	0.3163991751072678	DESIGN
TODO: People extending GzipWriter/reader will break. Find better way here.	DESIGN	0.9862956616648823	DESIGN	0.013704338335117663	WITHOUT_CLASSIFICATION
For JRUBY-2759, when MET choose CET timezone to work around Joda	DESIGN	0.993500407662507	WITHOUT_CLASSIFICATION	0.006499592337492993	DESIGN
we might need to perform a DST correction	DESIGN	0.9891715409975054	WITHOUT_CLASSIFICATION	0.010828459002494644	DESIGN
rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9966914405915432	WITHOUT_CLASSIFICATION	0.003308559408456715	DESIGN
rb_ary_push_m FIXME: Whis is this named "push_m"?	DESIGN	0.6339727696821693	WITHOUT_CLASSIFICATION	0.36602723031783063	DESIGN
from DUP_SETUP rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9966914405915432	WITHOUT_CLASSIFICATION	0.003308559408456715	DESIGN
TODO: ary_sort_check should be done here	DESIGN	0.9949044853028767	DESIGN	0.005095514697123412	WITHOUT_CLASSIFICATION
TODO: ary_sort_check should be done here	DESIGN	0.9949044853028767	DESIGN	0.005095514697123412	WITHOUT_CLASSIFICATION
TODO: is this correct ?	DESIGN	0.9913972512059378	DESIGN	0.008602748794062228	WITHOUT_CLASSIFICATION
TODO: make more efficient by not creating IRubyArray[]	DESIGN	0.960706984845455	DESIGN	0.03929301515454491	WITHOUT_CLASSIFICATION
TODO: list.subList(from, to).clear() is supposed to clear the sublist from the list. How can we support this operation?	DESIGN	0.9982420427185268	DESIGN	0.001757957281473265	WITHOUT_CLASSIFICATION
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9072892762441287	DESIGN	0.09271072375587122	WITHOUT_CLASSIFICATION
FIXME: This table will get moved into POSIX library so we can get all actual supported signals. This is a quick fix to support basic signals until that happens.	DESIGN	0.9895614518436903	DESIGN	0.010438548156309808	WITHOUT_CLASSIFICATION
The implementations of these are all bonus (see TODO above) I was going to throw an error from these, but it appears to be the wrong place to do it.	DESIGN	0.5376733221313503	WITHOUT_CLASSIFICATION	0.4623266778686498	DESIGN
TODO: number formatting here, MRI uses "%-.10g", 1.4 API is a must?	DESIGN	0.9789839978281158	DESIGN	0.021016002171884172	WITHOUT_CLASSIFICATION
TODO: remove	DESIGN	0.7533308698557358	DESIGN	0.24666913014426417	WITHOUT_CLASSIFICATION
FIXME moved this here to get what's obviously a utility method out of IRubyObject. perhaps security methods should find their own centralized home at some point.	DESIGN	0.9999687774426539	DESIGN	3.122255734620963E-5	WITHOUT_CLASSIFICATION
FIXME: Get rid of laziness and handle restricted access elsewhere	DESIGN	0.6411251290458356	WITHOUT_CLASSIFICATION	0.35887487095416437	DESIGN
TODO: Should frozen error have its own distinct class? If not should more share?	DESIGN	0.9993516851652473	DESIGN	6.483148347527875E-4	WITHOUT_CLASSIFICATION
TODO: this is kinda gross	DESIGN	0.9918774103252591	DESIGN	0.00812258967474094	WITHOUT_CLASSIFICATION
Not sure how well this works, but it works much better than just currentTimeMillis by itself.	DESIGN	0.7598832824067004	DESIGN	0.24011671759329953	WITHOUT_CLASSIFICATION
TODO: exec should replace the current process. This could be possible with JNA.	DESIGN	0.9942132362115452	DESIGN	0.005786763788454799	WITHOUT_CLASSIFICATION
FIXME: In order for Thread to play well with the standard 'new' behavior, it must provide an allocator that can create empty object instances which initialize then fills with appropriate data.	DESIGN	0.999664877928263	WITHOUT_CLASSIFICATION	3.3512207173707937E-4	DESIGN
TODO: not sure that we should skip calling join() altogether. Thread.join() has some implications for Java Memory Model, etc.	DESIGN	0.9839475973088669	DESIGN	0.01605240269113307	WITHOUT_CLASSIFICATION
FIXME: There's some code duplication here with RubyObject#inspect	DESIGN	0.9557783253681876	DESIGN	0.044221674631812445	WITHOUT_CLASSIFICATION
FIXME: This should probably do some translation from Ruby priority levels to Java priority levels (until we have green threads)	DESIGN	0.9893205189984899	DESIGN	0.010679481001510067	WITHOUT_CLASSIFICATION
TODO: no java stringity	DESIGN	0.6248530423327217	WITHOUT_CLASSIFICATION	0.3751469576672783	DESIGN
need to reexamine this	DESIGN	0.9789377615416733	WITHOUT_CLASSIFICATION	0.02106223845832657	DESIGN
TODO: These were missing, so we're not handling them elsewhere?	DESIGN	0.7618603640983763	DESIGN	0.23813963590162368	WITHOUT_CLASSIFICATION
TODO: why are we duplicating the constants here, and then in File::Constants below? File::Constants is included in IO.	DESIGN	0.6780071276531775	DESIGN	0.3219928723468226	WITHOUT_CLASSIFICATION
TODO: this method is not present in MRI!	DESIGN	0.9802220649463687	DESIGN	0.01977793505363133	WITHOUT_CLASSIFICATION
TODO: This is also defined in the MetaClass too...Consolidate somewhere.	DESIGN	0.62192079860314	WITHOUT_CLASSIFICATION	0.37807920139686	DESIGN
Something wrong we don't know the cwd... TODO: Is this behavior really desirable? /mov	DESIGN	0.9994819104555914	DESIGN	5.180895444085446E-4	WITHOUT_CLASSIFICATION
Fixme: This does not have exact same semantics as RubyArray.join, but they probably could be consolidated (perhaps as join(args[], sep, doChomp)).	DESIGN	0.5944912430818833	DESIGN	0.4055087569181167	WITHOUT_CLASSIFICATION
TODO should this be deprecated ? (to be efficient, internals should deal with RubyHash directly)	DESIGN	0.9993701013877679	DESIGN	6.298986122320932E-4	WITHOUT_CLASSIFICATION
TODO: Implement tty? and isatty. We have no real capability to determine this from java, but if we could set tty status, then we could invoke jruby differently to allow stdin to return true on this. This would allow things like cgi.rb to work properly.	DESIGN	0.9798883436071523	DESIGN	0.020111656392847725	WITHOUT_CLASSIFICATION
TODO: better error handling	DESIGN	0.968437363062408	DESIGN	0.031562636937591974	WITHOUT_CLASSIFICATION
this seems unlikely to happen unless it's a totally bogus fileno ...so do we even need to bother trying to create one?	DESIGN	0.9853869978668741	WITHOUT_CLASSIFICATION	0.014613002133125835	DESIGN
IN FACT, we should probably raise an error, yes?	DESIGN	0.9429603997982514	WITHOUT_CLASSIFICATION	0.05703960020174856	DESIGN
TODO: Ruby reuses this logic for other "write" behavior by checking if it's an IO and calling write again	DESIGN	0.7503150540767712	WITHOUT_CLASSIFICATION	0.24968494592322876	DESIGN
FIXME we should probably still be dyncalling 'write' here	DESIGN	0.8820611204824065	DESIGN	0.11793887951759362	WITHOUT_CLASSIFICATION
TODO: This version differs from ioctl by checking whether fcntl exists and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9759923616912627	DESIGN	0.02400763830873726	WITHOUT_CLASSIFICATION
FIXME: I don't like the null checks here	DESIGN	0.9721618122212242	DESIGN	0.02783818777877581	WITHOUT_CLASSIFICATION
TODO: handle writing into original buffer better	DESIGN	0.9955364495897435	DESIGN	0.004463550410256507	WITHOUT_CLASSIFICATION
TODO: is this the right thing to do?	DESIGN	0.9992404943307593	DESIGN	7.595056692407677E-4	WITHOUT_CLASSIFICATION
TODO: This isn't an exact port of MRI's pipe behavior, so revisit	DESIGN	0.7260804454752745	DESIGN	0.27391955452472544	WITHOUT_CLASSIFICATION
FIXME: If NativeException is expected to be used from Ruby code, it should provide a real allocator to be used. Otherwise Class.new will fail, as will marshalling. JRUBY-415	DESIGN	0.5131851543701504	WITHOUT_CLASSIFICATION	0.4868148456298496	DESIGN
FIXME: finalizer should be dupped here	DESIGN	0.9143804190716935	DESIGN	0.0856195809283064	WITHOUT_CLASSIFICATION
rb_obj_id Return the internal id of an object. FIXME: Should this be renamed to match its ruby name?	DESIGN	0.9527537657204518	DESIGN	0.04724623427954819	WITHOUT_CLASSIFICATION
FIXME: Obvious issue that not all platforms can display all attributes. Ugly hacks. Using generic posix library makes pushing inspect behavior into specific system impls rather painful.	DESIGN	0.9988212465746166	DESIGN	0.0011787534253834744	WITHOUT_CLASSIFICATION
Workaround for JRUBY-4149	DESIGN	0.9992039878214276	WITHOUT_CLASSIFICATION	7.96012178572276E-4	DESIGN
TODO: NOT_ALLOCATABLE_ALLOCATOR may be ok here, but it's unclear how Structs work with marshalling. Confirm behavior and ensure we're doing this correctly. JRUBY-415	DESIGN	0.5835000098661476	DESIGN	0.4164999901338524	WITHOUT_CLASSIFICATION
FIXME: This is copied code from RubyArray. Both RE, Struct, and Array should share one impl This is also hacky since I construct ruby objects to access ruby arrays through aref instead of something lower.	DESIGN	0.9940236289172705	DESIGN	0.0059763710827295076	WITHOUT_CLASSIFICATION
FIXME: We should not be regenerating this over and over	DESIGN	0.9777488782789284	DESIGN	0.022251121721071573	WITHOUT_CLASSIFICATION
FIXME: This is probably not very efficient, since it loads all methods for each call	DESIGN	0.9518542516643971	DESIGN	0.048145748335602985	WITHOUT_CLASSIFICATION
TODO: Consider a better way of synchronizing	DESIGN	0.9976094667671409	DESIGN	0.0023905332328591346	WITHOUT_CLASSIFICATION
FIXME: Why was this using a FullFunctionCallbackMethod before that did callSuper?	DESIGN	0.7172402192712892	WITHOUT_CLASSIFICATION	0.2827597807287107	DESIGN
A cloned method now belongs to a new class. Set it. TODO: Make DynamicMethod immutable	DESIGN	0.8657989290302348	DESIGN	0.13420107096976513	WITHOUT_CLASSIFICATION
FIXME: figure out why we get null sometimes	DESIGN	0.923492388095851	DESIGN	0.07650761190414901	WITHOUT_CLASSIFICATION
FIXME: Can get optimized for IEqlNode	DESIGN	0.5270949622556553	DESIGN	0.4729050377443446	WITHOUT_CLASSIFICATION
rb_mod_remove_cvar FIXME: any good reason to have two identical methods? (same as remove_class_variable)	DESIGN	0.5492770580762095	DESIGN	0.4507229419237905	WITHOUT_CLASSIFICATION
FIXME: these descriptions should probably be moved out, to Constantine project which deals with all platform-dependent constants.	DESIGN	0.9793155402637104	DESIGN	0.020684459736289643	WITHOUT_CLASSIFICATION
TODO: what about n arg?	DESIGN	0.9514226772591254	DESIGN	0.048577322740874555	WITHOUT_CLASSIFICATION
TODO: rounding mode should not be hard-coded. See #mode.	DESIGN	0.9937710747532637	DESIGN	0.006228925246736301	WITHOUT_CLASSIFICATION
regular division with some default precision TODO: proper algorithm to set the precision	DESIGN	0.9691797244356257	DESIGN	0.030820275564374295	WITHOUT_CLASSIFICATION
TODO: better algorithm to set precision needed	DESIGN	0.988404993084362	DESIGN	0.011595006915638011	WITHOUT_CLASSIFICATION
FIXME: what should these really be? Numeric? assert x instanceof RubyComplex && y instanceof RubyComplex;	DESIGN	0.9838971825838995	DESIGN	0.016102817416100573	WITHOUT_CLASSIFICATION
FIXME: what should this really be? assert x instanceof RubyComplex;	DESIGN	0.993875313997172	DESIGN	0.006124686002828023	WITHOUT_CLASSIFICATION
FIXME: the code below is a copy of RubyIO.puts, and we should avoid copy-paste.	DESIGN	0.6558653177008817	DESIGN	0.3441346822991183	WITHOUT_CLASSIFICATION
Yow...this is still ugly	DESIGN	0.9806995349388574	WITHOUT_CLASSIFICATION	0.019300465061142674	DESIGN
end hack	DESIGN	0.6765256951360439	DESIGN	0.32347430486395623	WITHOUT_CLASSIFICATION
TODO: Should next and return also catch here?	DESIGN	0.7206732867498871	DESIGN	0.279326713250113	WITHOUT_CLASSIFICATION
TODO: Generalize this type-checking code into IRubyObject helper.	DESIGN	0.9984540771305882	DESIGN	0.0015459228694118636	WITHOUT_CLASSIFICATION
TODO: newTypeError does not offer enough for ruby error string...	DESIGN	0.7214974208394578	DESIGN	0.2785025791605422	WITHOUT_CLASSIFICATION
FIXME: If true array is common enough we should pre-allocate and stick somewhere	DESIGN	0.8033475152896822	WITHOUT_CLASSIFICATION	0.19665248471031788	DESIGN
TODO: This is almost RubyModule#instance_methods on the metaClass. Perhaps refactor.	DESIGN	0.9642950859861005	DESIGN	0.03570491401389963	WITHOUT_CLASSIFICATION
The following three methods must be defined fast, since they expect to modify the current frame (i.e. they expect no frame will be allocated for them). JRUBY-1185.	DESIGN	0.9999945830783175	WITHOUT_CLASSIFICATION	5.416921682569405E-6	DESIGN
FIXME: I think this chunk is equivalent to MRI id2name (and not our public method id2name). Make into method if used more than once.	DESIGN	0.9999987369794066	DESIGN	1.2630205934194072E-6	WITHOUT_CLASSIFICATION
TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.8006115665377883	WITHOUT_CLASSIFICATION	0.19938843346221174	DESIGN
TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.8006115665377883	WITHOUT_CLASSIFICATION	0.19938843346221174	DESIGN
TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.8006115665377883	WITHOUT_CLASSIFICATION	0.19938843346221174	DESIGN
optional args, so we have IRubyObject[] TODO: confirm	DESIGN	0.6655838811645163	WITHOUT_CLASSIFICATION	0.3344161188354836	DESIGN
TODO: Split this into two sub-classes so that name and constNode can be specified seperately.	DESIGN	0.9940797265460333	DESIGN	0.005920273453966781	WITHOUT_CLASSIFICATION
TODO: wire into new exception handling mechanism	DESIGN	0.9870066122355199	DESIGN	0.012993387764480089	WITHOUT_CLASSIFICATION
FIXME: ConstDecl could be two seperate classes (or done differently since constNode and name never exist at the same time.	DESIGN	0.6603021248159773	WITHOUT_CLASSIFICATION	0.3396978751840226	DESIGN
TODO: do above but not below for additional newline nodes	DESIGN	0.5404031347661448	DESIGN	0.45959686523385523	WITHOUT_CLASSIFICATION
TODO: Figure out how this can happen and possibly remove	DESIGN	0.9996451320706702	DESIGN	3.5486792932983377E-4	WITHOUT_CLASSIFICATION
TODO: At least ParserSupport.attrset passes argsNode as null. ImplicitNil is wrong magic for setupArgs since it will IRubyObject[] { nil }. So we need to figure out a nice fast null pattern for setupArgs. assert argsNode != null : "receiverNode is not null";	DESIGN	0.9998984393941818	DESIGN	1.015606058181948E-4	WITHOUT_CLASSIFICATION
FIXME: JRUBY-3188 ends up with condition returning null...quick fix until I can dig into it	DESIGN	0.9993704356679526	DESIGN	6.295643320474862E-4	WITHOUT_CLASSIFICATION
FIXME: I use a for block to implement END node because we need a proc which captures its enclosing scope. ForBlock now represents these node and should be renamed.	DESIGN	0.9997875912567493	DESIGN	2.124087432507687E-4	WITHOUT_CLASSIFICATION
method has more than 500 lines; we'll need to split it and therefore need to use a heap-based scope	DESIGN	0.8321879477574055	WITHOUT_CLASSIFICATION	0.1678120522425946	DESIGN
TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.671995247871567	WITHOUT_CLASSIFICATION	0.3280047521284331	DESIGN
If it's a single-arg when but contains an array, we know it's a real literal array FIXME: This is a gross way to figure it out; parser help similar to yield argument passing (expandArguments) would be better	DESIGN	0.9854082505762622	DESIGN	0.014591749423737739	WITHOUT_CLASSIFICATION
TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.671995247871567	WITHOUT_CLASSIFICATION	0.3280047521284331	DESIGN
XXX: const lookup can trigger const_missing; is that enough to warrant it always being executed?	DESIGN	0.9970349665878626	WITHOUT_CLASSIFICATION	0.002965033412137403	DESIGN
if body is a rescue node, inspect its pieces separately to avoid it disabling all optz TODO: this is gross.	DESIGN	0.6740095589382029	DESIGN	0.3259904410617971	WITHOUT_CLASSIFICATION
if body is a rescue node, inspect its pieces separately to avoid it disabling all optz TODO: this is gross.	DESIGN	0.6740095589382029	DESIGN	0.3259904410617971	WITHOUT_CLASSIFICATION
FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.9906109986816155	DESIGN	0.009389001318384606	WITHOUT_CLASSIFICATION
TODO: This filtering is kind of gross...it would be nice to get some parser help here	DESIGN	0.9999567566286711	DESIGN	4.324337132898889E-5	WITHOUT_CLASSIFICATION
FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.9906109986816155	DESIGN	0.009389001318384606	WITHOUT_CLASSIFICATION
arguments compilers always create IRubyObject[], but we want to use RubyArray.concat here; FIXME: as a result, this is NOT efficient, since it creates and then later unwraps an array	DESIGN	0.9903453774045472	DESIGN	0.009654622595452772	WITHOUT_CLASSIFICATION
FIXME: This is temporary since the variable compilers assume we want args already on stack for assignment. We just pop and continue with 1.9 args logic.	DESIGN	0.6972905334909844	WITHOUT_CLASSIFICATION	0.30270946650901565	DESIGN
TODO: reads/writes from frame TODO: information on scoping TODO: visibility?	DESIGN	0.7211728638328536	WITHOUT_CLASSIFICATION	0.2788271361671464	DESIGN
for visibility checking without requiring frame self TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.6765603145465852	DESIGN	0.3234396854534147	WITHOUT_CLASSIFICATION
TODO: cache?	DESIGN	0.5184061425303808	DESIGN	0.48159385746961936	WITHOUT_CLASSIFICATION
TODO: cache?	DESIGN	0.5184061425303808	DESIGN	0.48159385746961936	WITHOUT_CLASSIFICATION
index for the item this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.8484559856184413	WITHOUT_CLASSIFICATION	0.15154401438155876	DESIGN
if we don't have opt args, start after args (they will be assigned later) this is for crap like def foo(a = (b = true; 1)) which numbers b before a FIXME: only starting after required args, since opt args may access others and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.9960910738295576	WITHOUT_CLASSIFICATION	0.0039089261704423565	DESIGN
FIXME: this really ought to be in clinit, but it doesn't matter much	DESIGN	0.928650095962602	DESIGN	0.0713499040373981	WITHOUT_CLASSIFICATION
install invokedynamic bootstrapper TODO need to abstract this setup behind another compiler interface	DESIGN	0.9923460316222711	DESIGN	0.0076539683777289225	WITHOUT_CLASSIFICATION
FIXME: This isn't right for within ensured/rescued code	DESIGN	0.8718598235614105	DESIGN	0.12814017643858955	WITHOUT_CLASSIFICATION
SSS FIXME: Deprecated! Going forward, all instructions should come from the CFG	DESIGN	0.66420668929148	WITHOUT_CLASSIFICATION	0.33579331070852014	DESIGN
SSS FIXME: Do we need to check if l is same as whatever popped?	DESIGN	0.7669549109648323	WITHOUT_CLASSIFICATION	0.23304508903516766	DESIGN
SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.6138309644381216	DESIGN	0.3861690355618784	WITHOUT_CLASSIFICATION
SSS FIXME: I added this in. Is this correct?	DESIGN	0.9987742623275463	DESIGN	0.0012257376724538016	WITHOUT_CLASSIFICATION
SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.6138309644381216	DESIGN	0.3861690355618784	WITHOUT_CLASSIFICATION
SSS FIXME: Are we guaranteed that we splats dont head to multiple-assignment nodes! i.e. |(a,b)|?	DESIGN	0.8102808675428166	WITHOUT_CLASSIFICATION	0.1897191324571834	DESIGN
SSS FIXME: Can this return anything other than nil?	DESIGN	0.5270901662335542	DESIGN	0.47290983376644585	WITHOUT_CLASSIFICATION
SSS FIXME: What happens to the add class in this case??	DESIGN	0.7575293308725234	DESIGN	0.24247066912747658	WITHOUT_CLASSIFICATION
CON FIXME: I don't know how to make case be an expression...does that logic need to go here?	DESIGN	0.9965235428163145	DESIGN	0.003476457183685444	WITHOUT_CLASSIFICATION
SSS FIXME: Where is this set up? How is this diff from ClassVarDeclNode??	DESIGN	0.948549499314193	DESIGN	0.05145050068580704	WITHOUT_CLASSIFICATION
SSS FIXME: Is this correct?	DESIGN	0.9968458203796082	DESIGN	0.003154179620391835	WITHOUT_CLASSIFICATION
SSS FIXME: Used anywhere? I don't see calls to this anywhere public Operand buildDAsgnAssignment(Node node, IR_Scope s) { DAsgnNode dasgnNode = (DAsgnNode) node; s.getVariableCompiler().assignLocalVariable(dasgnNode.getIndex(), dasgnNode.getDepth()); }	DESIGN	0.8803652336667979	WITHOUT_CLASSIFICATION	0.11963476633320205	DESIGN
SSS FIXME: Receiver -- this is the class meta object basically? Operand receiver = build(defsNode.getReceiverNode(), s);	DESIGN	0.7001391636684049	WITHOUT_CLASSIFICATION	0.29986083633159505	DESIGN
self = args[0] SSS FIXME: Verify that this is correct	DESIGN	0.7557873696669347	DESIGN	0.24421263033306528	WITHOUT_CLASSIFICATION
SSS FIXME: Is this correct?	DESIGN	0.9968458203796082	DESIGN	0.003154179620391835	WITHOUT_CLASSIFICATION
SSS FIXME: 1. Is the ordering correct? (poll before next)	DESIGN	0.9709166478981518	DESIGN	0.029083352101848172	WITHOUT_CLASSIFICATION
add a "self" recv here TODO: is this right?	DESIGN	0.9883087455400915	DESIGN	0.011691254459908384	WITHOUT_CLASSIFICATION
SSS FIXME: Is this correctly placed ... at the end of the loop iteration?	DESIGN	0.7770143671926407	DESIGN	0.22298563280735934	WITHOUT_CLASSIFICATION
SSS FIXME: Where does this go? m.setLinePosition(arrayNode.getPosition());	DESIGN	0.5374450502999566	WITHOUT_CLASSIFICATION	0.46255494970004324	DESIGN
SSS FIXME: I could make IR_Loop a scope too ... semantically, it is a scope, but, functionally, not sure if this is required yet ...	DESIGN	0.9989327732197354	DESIGN	0.001067226780264516	WITHOUT_CLASSIFICATION
SSS FIXME: Should this be a string literal or a string? Dummy class for the script	DESIGN	0.9582425595266924	DESIGN	0.04175744047330766	WITHOUT_CLASSIFICATION
SSS FIXME: Does int suffice, or do we need long?	DESIGN	0.8606507029353903	DESIGN	0.1393492970646097	WITHOUT_CLASSIFICATION
SSS FIXME: Correct? Where does closure arg come from?	DESIGN	0.9677709852787459	WITHOUT_CLASSIFICATION	0.03222901472125405	DESIGN
SSS FIXME: Should I have a reference to the IR_loop that is being retried?	DESIGN	0.9170358700950972	DESIGN	0.08296412990490272	WITHOUT_CLASSIFICATION
Simplify the variables too -- to keep these variables in sync with what is actually used in the when clauses This is not required for correctness reasons, but only for performance reasons.	DESIGN	0.9521340569006211	DESIGN	0.047865943099378784	WITHOUT_CLASSIFICATION
SSS FIXME: This should never get called for constant svalues	DESIGN	0.691855413602405	DESIGN	0.308144586397595	WITHOUT_CLASSIFICATION
SSS FIXME: Should this be Operand or CompoundString? Can it happen that symbols are built out of other than compound strings? Or can it happen during optimizations that this becomes a generic operand?	DESIGN	0.9981565650201873	DESIGN	0.0018434349798125815	WITHOUT_CLASSIFICATION
TODO: need to get this back into the method signature...now is too late...	DESIGN	0.9997558431181336	DESIGN	2.441568818664403E-4	WITHOUT_CLASSIFICATION
Hack in to replace usual readline with this	DESIGN	0.9774361996577726	DESIGN	0.022563800342227453	WITHOUT_CLASSIFICATION
bit risky if someone changes completor, but useful for method calls	DESIGN	0.9991780481729567	WITHOUT_CLASSIFICATION	8.219518270432036E-4	DESIGN
FIXME: This determine module is in a strange location and should somehow be in block	DESIGN	0.9236864707017075	DESIGN	0.0763135292982924	WITHOUT_CLASSIFICATION
Create block for this iter node FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.9896404146574661	WITHOUT_CLASSIFICATION	0.01035958534253384	DESIGN
we basically ignore protocol. let someone report it...	DESIGN	0.9995278131670469	WITHOUT_CLASSIFICATION	4.721868329530306E-4	DESIGN
Workaround for a bug in Sun's JDK 1.5.x, see http:bugs.sun.com/bugdatabase/view_bug.do?bug_id=6303753	DESIGN	0.9334225444581611	WITHOUT_CLASSIFICATION	0.0665774555418389	DESIGN
context is null, wipe out the SoftReference (this could be done with a reference queue)	DESIGN	0.9958038879626386	WITHOUT_CLASSIFICATION	0.004196112037361399	DESIGN
FIXME we want to eliminate these type casts when possible	DESIGN	0.9017852117949928	DESIGN	0.09821478820500712	WITHOUT_CLASSIFICATION
TODO: Determine whether we should perhaps store non-singleton class in the implementationClass	DESIGN	0.9991098755552684	DESIGN	8.901244447316818E-4	WITHOUT_CLASSIFICATION
FIXME: set up a CallConfiguration for this	DESIGN	0.8197497092822751	DESIGN	0.18025029071772483	WITHOUT_CLASSIFICATION
FIXME: set up a call configuration for this	DESIGN	0.9333462750950584	DESIGN	0.06665372490494173	WITHOUT_CLASSIFICATION
TODO: make this do specific-arity calling	DESIGN	0.9759266050152946	DESIGN	0.02407339498470539	WITHOUT_CLASSIFICATION
add 'new' with full signature, so it's guaranteed to be directly accessible TODO: no need for this to be a full, formal JVM signature	DESIGN	0.9852522043199664	DESIGN	0.014747795680033692	WITHOUT_CLASSIFICATION
add method with full signature, so it's guaranteed to be directly accessible TODO: no need for this to be a full, formal JVM signature	DESIGN	0.9912831352393369	DESIGN	0.00871686476066319	WITHOUT_CLASSIFICATION
FIXME This whole thing could probably be implemented as a module and mixed into appropriate classes, especially if it uses either IOInput/OutputStream or is smart about the kind of IO-like object it's being used against.	DESIGN	0.9999974256010683	DESIGN	2.574398931583388E-6	WITHOUT_CLASSIFICATION
using IOInputStream may not be the most performance way, but it's easy.	DESIGN	0.9996707298558625	WITHOUT_CLASSIFICATION	3.2927014413752765E-4	DESIGN
using IOOutputStream may not be the most performance way, but it's easy.	DESIGN	0.9996707298558625	WITHOUT_CLASSIFICATION	3.2927014413752765E-4	DESIGN
using IOChannel may not be the most performant way, but it's easy.	DESIGN	0.9995299014313161	WITHOUT_CLASSIFICATION	4.7009856868390065E-4	DESIGN
these extra arrays are really unfortunate; split some of these paths out to eliminate?	DESIGN	0.8297451273305159	WITHOUT_CLASSIFICATION	0.17025487266948416	DESIGN
TODO: WRONG - get interfaces from class	DESIGN	0.9327570100225054	DESIGN	0.06724298997749453	WITHOUT_CLASSIFICATION
TODO: catch exception if constant is already set by other thread	DESIGN	0.9231443377453765	WITHOUT_CLASSIFICATION	0.07685566225462345	DESIGN
TODO: public only?	DESIGN	0.7500637774330949	WITHOUT_CLASSIFICATION	0.24993622256690518	DESIGN
see note below re: 2-field kludge	DESIGN	0.9981520649387335	WITHOUT_CLASSIFICATION	0.001847935061266411	DESIGN
TODO: protected methods. this is going to require a rework of some of the mechanism.	DESIGN	0.998364021202726	DESIGN	0.001635978797273896	WITHOUT_CLASSIFICATION
TODO: protected methods. this is going to require a rework of some of the mechanism.	DESIGN	0.998364021202726	DESIGN	0.001635978797273896	WITHOUT_CLASSIFICATION
FIXME: do we really want 'declared' methods? includes private/protected, and does _not_ include superclass methods	DESIGN	0.5724026866895255	DESIGN	0.4275973133104745	WITHOUT_CLASSIFICATION
FIXME: This doesn't actually support anything but String	DESIGN	0.6752458191118993	WITHOUT_CLASSIFICATION	0.32475418088810076	DESIGN
again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.7491404149290812	DESIGN	0.2508595850709188	WITHOUT_CLASSIFICATION
again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.7491404149290812	DESIGN	0.2508595850709188	WITHOUT_CLASSIFICATION
this needs to be split, since conditional calling #inherited doesn't fit standard ruby semantics	DESIGN	0.9303490256639959	WITHOUT_CLASSIFICATION	0.06965097433600408	DESIGN
TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.5648248384405551	WITHOUT_CLASSIFICATION	0.4351751615594449	DESIGN
TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.5648248384405551	WITHOUT_CLASSIFICATION	0.4351751615594449	DESIGN
this covers the rare case of lower-case class names (and thus will fail 99.999% of the time). fortunately, we'll only do this once per package name. (and seriously, folks, look into best practices...)	DESIGN	0.9769773935242126	WITHOUT_CLASSIFICATION	0.023022606475787362	DESIGN
FIXME: we should also support orgs that use capitalized package names (including, embarrassingly, the one I work for), but this should be enabled by a system property, as the expected default behavior for an upper-case value should be (and is) to treat it as a class name, and raise an exception if it's not found	DESIGN	0.8886118105414514	DESIGN	0.11138818945854861	WITHOUT_CLASSIFICATION
TODO: check for Java reserved names and raise exception if encountered	DESIGN	0.9495701066557324	WITHOUT_CLASSIFICATION	0.05042989334426767	DESIGN
upper-case package name TODO: top-level upper-case package was supported in the previous (Ruby-based) implementation, so leaving as is. see note at #getProxyOrPackageUnderPackage re: future approach below the top-level.	DESIGN	0.5626539243262031	WITHOUT_CLASSIFICATION	0.4373460756737969	DESIGN
FIXME: wtf is this? Why would these use the class?	DESIGN	0.9966169822099614	DESIGN	0.003383017790038574	WITHOUT_CLASSIFICATION
FIXME: needs to be rethought	DESIGN	0.5926479535531725	DESIGN	0.4073520464468275	WITHOUT_CLASSIFICATION
TODO: specifying soft refs, may want to compare memory consumption, behavior with weak refs (specify WEAK in place of SOFT below)	DESIGN	0.5520714750590091	DESIGN	0.4479285249409909	WITHOUT_CLASSIFICATION
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9195044193585054	DESIGN	0.0804955806414947	WITHOUT_CLASSIFICATION
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9195044193585054	DESIGN	0.0804955806414947	WITHOUT_CLASSIFICATION
if we get here, we found a matching method, use it TODO: choose narrowest method by continuing to search	DESIGN	0.7116715264553708	DESIGN	0.28832847354462915	WITHOUT_CLASSIFICATION
TODO: Only setAccessible to account for pattern found by accessing constants included from a non-public interface. (aka java.util.zip.ZipConstants being implemented by many classes)	DESIGN	0.5949065568048179	WITHOUT_CLASSIFICATION	0.40509344319518215	DESIGN
TODO: Only setAccessible to account for pattern found by accessing constants included from a non-public interface. (aka java.util.zip.ZipConstants being implemented by many classes) TODO: not sure we need this at all, since we only expose public fields. field.setAccessible(true);	DESIGN	0.9127010287688901	DESIGN	0.08729897123110986	WITHOUT_CLASSIFICATION
FIXME: NOT_ALLOCATABLE_ALLOCATOR is probably not right here, since we might eventually want JavaArray to be marshallable. JRUBY-414	DESIGN	0.9110576514247699	DESIGN	0.0889423485752301	WITHOUT_CLASSIFICATION
FIXME: do we really want 'declared' methods? includes private/protected, and does _not_ include superclass methods. also, the getDeclared calls may throw SecurityException if we're running under a restrictive security policy.	DESIGN	0.5796887692632341	WITHOUT_CLASSIFICATION	0.42031123073676585	DESIGN
don't bother to check if final method, it won't be there (not generated, can't be!)	DESIGN	0.999992248713196	WITHOUT_CLASSIFICATION	7.75128680398696E-6	DESIGN
super calls from proxies must use reflected method FIXME: possible to make handles do the superclass call?	DESIGN	0.8540183829184552	DESIGN	0.14598161708154486	WITHOUT_CLASSIFICATION
actual type does not exactly match method return type, re-get converter FIXME: when the only autoconversions are primitives, this won't be needed	DESIGN	0.9159352716805159	WITHOUT_CLASSIFICATION	0.08406472831948407	DESIGN
FIXME: Ideally JavaObject instances should be marshallable, which means that the JavaObject metaclass should have an appropriate allocator. JRUBY-414	DESIGN	0.5199353996699595	DESIGN	0.48006460033004056	WITHOUT_CLASSIFICATION
FIXME: shouldn't need @__java_ovrd_methods, just query locally defined methods.	DESIGN	0.8531457817904889	WITHOUT_CLASSIFICATION	0.146854218209511	DESIGN
We always prepend an org.jruby.proxy package to the beginning because java and javax packages are protected and signed jars prevent us generating new classes with those package names. See JRUBY-2439.	DESIGN	0.9952787507776213	WITHOUT_CLASSIFICATION	0.004721249222378651	DESIGN
TODO: Only used by interface implementation; eliminate it	DESIGN	0.9973984429314933	DESIGN	0.002601557068506674	WITHOUT_CLASSIFICATION
Create block for this iter node FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.9896404146574661	WITHOUT_CLASSIFICATION	0.01035958534253384	DESIGN
modules are included with a shim class; we must find that shim to handle super() appropriately	DESIGN	0.998131993622837	WITHOUT_CLASSIFICATION	0.0018680063771630028	DESIGN
lame generics issues: making Segment class static and manually inserting cache reference to work around various problems generically referencing methods/vars across classes.	DESIGN	0.9980635380086779	WITHOUT_CLASSIFICATION	0.0019364619913221353	DESIGN
entry exists, proxy doesn't match. replace. this could happen if old proxy was gc'ed TODO: raise exception if stored proxy is non-null? (not gc'ed)	DESIGN	0.633987468341537	DESIGN	0.366012531658463	WITHOUT_CLASSIFICATION
FIXME: How much more obtuse can this be? Heredoc already parsed this and saved string...Do not parse..just return	DESIGN	0.9924534934716346	DESIGN	0.007546506528365469	WITHOUT_CLASSIFICATION
ruby constants for strings (should this be moved somewhere else?)	DESIGN	0.9904429566292737	WITHOUT_CLASSIFICATION	0.00955704337072618	DESIGN
Hacky: Advance position to eat newline here....	DESIGN	0.9995470129439059	WITHOUT_CLASSIFICATION	4.529870560940667E-4	DESIGN
FIXME: Not sure what the semantics of transfer are cFiber.defineFastMethod("transfer", cb.getFastOptMethod("transfer"));	DESIGN	0.9702770903473065	DESIGN	0.02972290965269353	WITHOUT_CLASSIFICATION
ignore...bean doesn't get registered TODO: Why does that bother me?	DESIGN	0.6766421383046893	DESIGN	0.3233578616953107	WITHOUT_CLASSIFICATION
ignore...bean doesn't get registered TODO: Why does that bother me?	DESIGN	0.6766421383046893	DESIGN	0.3233578616953107	WITHOUT_CLASSIFICATION
ENEBO: Totally weird naming (in MRI is not allocated and is a local var name)	DESIGN	0.9702819552305446	WITHOUT_CLASSIFICATION	0.029718044769455377	DESIGN
FIXME: Remove this from grammars.	DESIGN	0.7398137887401793	DESIGN	0.26018621125982067	WITHOUT_CLASSIFICATION
FIXME: Consider fixing node_assign itself rather than single case	DESIGN	0.8940588343253115	WITHOUT_CLASSIFICATION	0.10594116567468853	DESIGN
Workaround for JRUBY-2326 (MRI does not enter this production for some reason)	DESIGN	0.9771415450733929	WITHOUT_CLASSIFICATION	0.022858454926607156	DESIGN
FIXME: lose syntactical elements here (and others like this)	DESIGN	0.9904110941550314	DESIGN	0.009588905844968689	WITHOUT_CLASSIFICATION
ENEBO: Lots of optz in 1.9 parser here	DESIGN	0.9956418269718715	WITHOUT_CLASSIFICATION	0.004358173028128471	DESIGN
This is perhaps innefficient timewise? Optimal spacewise	DESIGN	0.7512441813143151	WITHOUT_CLASSIFICATION	0.24875581868568478	DESIGN
This is a dummy scope; we should find a way to make that more explicit	DESIGN	0.9587028208331317	DESIGN	0.041297179166868335	WITHOUT_CLASSIFICATION
We clone dynamic scope because this will be a new instance of a block. Any previously captured instances of this block may still be around and we do not want to start overwriting those values when we create a new one. ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.9974419872353621	DESIGN	0.0025580127646378003	WITHOUT_CLASSIFICATION
TODO: This probably isn't the best hack, but it works until we can have different root frame setup for 1.9 easily.	DESIGN	0.997750347645487	DESIGN	0.0022496523545130456	WITHOUT_CLASSIFICATION
FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9972771284424097	DESIGN	0.0027228715575904174	WITHOUT_CLASSIFICATION
FIXME: I think we need these pushed somewhere?	DESIGN	0.9920722813205389	DESIGN	0.007927718679460991	WITHOUT_CLASSIFICATION
FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9972771284424097	DESIGN	0.0027228715575904174	WITHOUT_CLASSIFICATION
FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9972771284424097	DESIGN	0.0027228715575904174	WITHOUT_CLASSIFICATION
XXX: Again, screwy evaling under previous frame's scope	DESIGN	0.9997983045063092	WITHOUT_CLASSIFICATION	2.016954936906839E-4	DESIGN
FIXME: This version is faster than the previous, but both suffer from a crucial flaw: It is impossible to create an ObjectSpace with an iterator that doesn't either: a. hold on to objects that might otherwise be collected or b. have no way to guarantee that a call to hasNext() will be correct or that a subsequent call to next() will produce an object. For our purposes, for now, this may be acceptable.	DESIGN	0.8517358234210354	DESIGN	0.14826417657896454	WITHOUT_CLASSIFICATION
FIXME: Maybe not best place, but move it to a good home	DESIGN	0.9999864784348499	DESIGN	1.3521565150158122E-5	WITHOUT_CLASSIFICATION
FIXME: This is gross. Don't do this.	DESIGN	0.6208238863908665	DESIGN	0.37917611360913345	WITHOUT_CLASSIFICATION
@author headius FIXME convert to enum ?	DESIGN	0.715335275648717	WITHOUT_CLASSIFICATION	0.28466472435128304	DESIGN
FIXME: No, I don't like it.	DESIGN	0.893755418181248	WITHOUT_CLASSIFICATION	0.10624458181875199	DESIGN
TODO: This is probably BAD...	DESIGN	0.9396435700197792	DESIGN	0.06035642998022079	WITHOUT_CLASSIFICATION
FIXME: not very efficient	DESIGN	0.9237616991215614	DESIGN	0.07623830087843865	WITHOUT_CLASSIFICATION
invoke callMethodMissing method directly TODO: this could be further optimized, since some DSLs hit method_missing pretty hard...	DESIGN	0.9811260481034747	DESIGN	0.01887395189652533	WITHOUT_CLASSIFICATION
TODO this is really ineffient, and potentially a problem everytime anyone require's something. we should try to make LoadPath a special array object.	DESIGN	0.995952710758565	DESIGN	0.004047289241434975	WITHOUT_CLASSIFICATION
FIXME: inefficient; constructing a bignum just for dumping?	DESIGN	0.8247339342099477	WITHOUT_CLASSIFICATION	0.17526606579005224	DESIGN
FIXME: not very efficient	DESIGN	0.9237616991215614	DESIGN	0.07623830087843865	WITHOUT_CLASSIFICATION
FIXME: not very efficient	DESIGN	0.9237616991215614	DESIGN	0.07623830087843865	WITHOUT_CLASSIFICATION
FIXME: not very efficient	DESIGN	0.9237616991215614	DESIGN	0.07623830087843865	WITHOUT_CLASSIFICATION
FIXME: not very efficient	DESIGN	0.9237616991215614	DESIGN	0.07623830087843865	WITHOUT_CLASSIFICATION
FIXME: this should go somewhere more generic -- maybe IdUtil	DESIGN	0.9946940748628943	DESIGN	0.005305925137105693	WITHOUT_CLASSIFICATION
FIXME: potentially could just use ByteList here?	DESIGN	0.9478058905147615	DESIGN	0.05219410948523855	WITHOUT_CLASSIFICATION
FIXME: This is almost entirely duplicated from Main.java	DESIGN	0.7006040341645238	WITHOUT_CLASSIFICATION	0.29939596583547634	DESIGN
TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.5755994710887519	WITHOUT_CLASSIFICATION	0.4244005289112481	DESIGN
TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.5755994710887519	WITHOUT_CLASSIFICATION	0.4244005289112481	DESIGN
grrr, arghh, want to subclass sun.misc.FloatingDecimal, but can't, so we must do all this (the next 70 lines of code), which has already been done by FloatingDecimal.	DESIGN	0.9951118178622168	WITHOUT_CLASSIFICATION	0.004888182137783236	DESIGN
it would be nice (and logical!) if exponent form behaved like E/e, and decimal form behaved like f, but no such luck. hence:	DESIGN	0.9976917498558828	WITHOUT_CLASSIFICATION	0.002308250144117194	DESIGN
This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.9984562390319226	WITHOUT_CLASSIFICATION	0.0015437609680773402	DESIGN
This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.9984562390319226	WITHOUT_CLASSIFICATION	0.0015437609680773402	DESIGN
TODO: get rid of this (lax returns 0.0, strict will throw)	DESIGN	0.9562213032783337	DESIGN	0.04377869672166629	WITHOUT_CLASSIFICATION
TODO: turn off the negative? will return -0.0 in lax mode	DESIGN	0.7283728909833711	DESIGN	0.27162710901662895	WITHOUT_CLASSIFICATION
FIXME: this probably belongs in a different package.	DESIGN	0.9798500368540907	DESIGN	0.02014996314590938	WITHOUT_CLASSIFICATION
TODO: It would be nice to throw a better error for this	DESIGN	0.9986312621308223	DESIGN	0.0013687378691776882	WITHOUT_CLASSIFICATION
TODO: It would be nice to throw a better error for this	DESIGN	0.9986312621308223	DESIGN	0.0013687378691776882	WITHOUT_CLASSIFICATION
FIXME: I don't like this	DESIGN	0.9567614470579052	DESIGN	0.04323855294209467	WITHOUT_CLASSIFICATION
TODO: It's perhaps just a coincidence that all the channels for which we should raise are instanceof SelectableChannel, since stdio is not...so this bothers me slightly. -CON	DESIGN	0.9997751968961214	DESIGN	2.2480310387876237E-4	WITHOUT_CLASSIFICATION
FIXME: Clearing read buffer here...is this appropriate?	DESIGN	0.5567732290776221	WITHOUT_CLASSIFICATION	0.4432267709223781	DESIGN
TODO this should entry into error handling somewhere	DESIGN	0.9961457527440938	DESIGN	0.003854247255906178	WITHOUT_CLASSIFICATION
FIXME: This worries me a bit, since it could allocate a lot with a large newLength	DESIGN	0.5021070820218947	DESIGN	0.49789291797810525	WITHOUT_CLASSIFICATION
We use a highly uncommon string to represent the paragraph delimiter (100% soln not worth it)	DESIGN	0.9993901322843208	WITHOUT_CLASSIFICATION	6.098677156790819E-4	DESIGN
TODO: Ruby does not seem to care about invalid numeric mode values I am not sure if ruby overflows here also...	DESIGN	0.9871284106262452	DESIGN	0.012871589373754698	WITHOUT_CLASSIFICATION
TODO: Make this more intelligible value	DESIGN	0.9464410602651093	DESIGN	0.05355893973489062	WITHOUT_CLASSIFICATION
XXX: do something?	DESIGN	0.9993027798295805	WITHOUT_CLASSIFICATION	6.9722017041964E-4	DESIGN
for visibility checking without requiring frame self TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.6765603145465852	DESIGN	0.3234396854534147	WITHOUT_CLASSIFICATION
for visibility checking without requiring frame self TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.6765603145465852	DESIGN	0.3234396854534147	WITHOUT_CLASSIFICATION
up to ten, stuff into tmp locals, load in reverse order, and assign FIXME: There's probably a slightly smarter way, but is it important?	DESIGN	0.6911263708963775	DESIGN	0.3088736291036225	WITHOUT_CLASSIFICATION
index for the item this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.8484559856184413	WITHOUT_CLASSIFICATION	0.15154401438155876	DESIGN
if we don't have opt args, start after args (they will be assigned later) this is for crap like def foo(a = (b = true; 1)) which numbers b before a FIXME: only starting after required args, since opt args may access others and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.9960910738295576	WITHOUT_CLASSIFICATION	0.0039089261704423565	DESIGN
SSS FIXME: These should get normally compiled or initialized some other way ... SSS FIXME: Parent/super-type info is incorrect! These are just placeholders for now .. this needs to be updated with real class objects later!	DESIGN	0.9999855173148411	DESIGN	1.4482685159005476E-5	WITHOUT_CLASSIFICATION
SSS FIXME: Move this code to some utils area .. or probably there is already a method for this in some jruby utils class Holy cow! Just to append two darned arrays!	DESIGN	0.9995954287744683	DESIGN	4.04571225531808E-4	WITHOUT_CLASSIFICATION
SSS FIXME: This method (at least in the context of multiple assignment) is a little weird. It calls regular to_ary on the object. But, if it encounters a method_missing, the value is inserted into an 1-element array! try "a,b,c = 1" first; then define Fixnum.to_ary method and try it again. Ex: http:gist.github.com/163551	DESIGN	0.6236603257259086	WITHOUT_CLASSIFICATION	0.37633967427409143	DESIGN
This is for JRUBY-2988, since after a suspend the terminal seems to need to be reinitialized. Since we can't easily detect suspension, initialize after every readline. Probably not fast, but this is for interactive terminals anyway...so who cares?	DESIGN	0.9950237843980841	WITHOUT_CLASSIFICATION	0.004976215601915759	DESIGN
set up a field for the CacheEntry TODO: make this an array so it's not as much class metadata; similar to AbstractScript stuff	DESIGN	0.9848491840408313	DESIGN	0.015150815959168716	WITHOUT_CLASSIFICATION
exit monitor before making call FIXME: this not being in a finally is a little worrisome	DESIGN	0.8822135313523674	DESIGN	0.11778646864763259	WITHOUT_CLASSIFICATION
FIXME: Added this because marshal_spec seemed to reconstitute objects without calling dataWrapStruct this resulted in object being null after unmarshalling...	DESIGN	0.5030837837265741	WITHOUT_CLASSIFICATION	0.49691621627342575	DESIGN
if we get here, we found a matching method, use it TODO: choose narrowest method by continuing to search	DESIGN	0.7116715264553708	DESIGN	0.28832847354462915	WITHOUT_CLASSIFICATION
We clone dynamic scope because this will be a new instance of a block. Any previously captured instances of this block may still be around and we do not want to start overwriting those values when we create a new one. ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.9974419872353621	DESIGN	0.0025580127646378003	WITHOUT_CLASSIFICATION
TODO: This is actually now returning the scope of whoever called Method#to_proc which is obviously wrong; but there's no scope to provide for many methods. It fixes JRUBY-2237, but needs a better solution.	DESIGN	0.9434851589044004	DESIGN	0.05651484109559959	WITHOUT_CLASSIFICATION
FIXME: We should be getting this from the runtime rather than assume none? return runtime.getEncodingService().getEncoding(runtime.getDefaultExternalEncoding());	DESIGN	0.6248872103794991	DESIGN	0.37511278962050093	WITHOUT_CLASSIFICATION
ignore...bean doesn't get registered TODO: Why does that bother me?	DESIGN	0.6766421383046893	DESIGN	0.3233578616953107	WITHOUT_CLASSIFICATION
This is a fairly specific hack for empty string, but it does the job	DESIGN	0.9281979884403206	DESIGN	0.0718020115596793	WITHOUT_CLASSIFICATION
XXX This constructor is a hack to implement the __END__ syntax. Converting a reader back into an InputStream doesn't generally work.	DESIGN	0.9998890537125338	DESIGN	1.1094628746626858E-4	WITHOUT_CLASSIFICATION
FIXME: Total hack to get flash in Rails marshalling/unmarshalling in session ok...We need to totally change marshalling to work with overridden core classes.	DESIGN	0.9999935167245565	DESIGN	6.483275443544973E-6	WITHOUT_CLASSIFICATION
FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9999995370639508	DESIGN	4.629360492678493E-7	WITHOUT_CLASSIFICATION
We're not setting the provider or anything, but it seems that BouncyCastle does some internal things in its provider's constructor which require it to be executed in a secure context. Ideally this hack should be removed. See JRUBY-3919 and this BC bug: http:www.bouncycastle.org/jira/browse/BJA-227	DESIGN	0.9999712907849262	DESIGN	2.8709215073837184E-5	WITHOUT_CLASSIFICATION
FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.9870294376943028	DESIGN	0.012970562305697082	WITHOUT_CLASSIFICATION
FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.9870294376943028	DESIGN	0.012970562305697082	WITHOUT_CLASSIFICATION
hack to get right style for input	DESIGN	0.9435089321415882	DESIGN	0.056491067858411924	WITHOUT_CLASSIFICATION
Object#to_a is obsolete. We match Ruby's hack until to_a goes away. Then we can remove this hack too.	DESIGN	0.9647641872806675	DESIGN	0.03523581271933253	WITHOUT_CLASSIFICATION
small hack to save a cast later on	DESIGN	0.9921581217291233	DESIGN	0.0078418782708767	WITHOUT_CLASSIFICATION
temporary hack to handle non-Ruby values will come up with better solution shortly	DESIGN	0.999930317955847	DESIGN	6.968204415299836E-5	WITHOUT_CLASSIFICATION
Object#to_a is obsolete. We match Ruby's hack until to_a goes away. Then we can remove this hack too.	DESIGN	0.9647641872806675	DESIGN	0.03523581271933253	WITHOUT_CLASSIFICATION
HACK: in order to have stdout/err act like ttys and flush always, we set anything assigned to stdout/stderr to sync	DESIGN	0.9988833712251682	WITHOUT_CLASSIFICATION	0.0011166287748318087	DESIGN
HACK: force clinit to be created	DESIGN	0.9513326988859925	WITHOUT_CLASSIFICATION	0.048667301114007376	DESIGN
FIXME: This is pretty gross; we should have a cleaner initialization that doesn't depend on package-visible fields and ideally is atomic, probably using an immutable structure we replace all at once. lazy, null when no groups defined	DESIGN	0.901768494694978	DESIGN	0.09823150530502198	WITHOUT_CLASSIFICATION
TODO: should probably apply the null object pattern for a non-allowed class, rather than null	DESIGN	0.9931707455388208	DESIGN	0.006829254461179266	WITHOUT_CLASSIFICATION
TODO: set our metaclass to target's class (i.e. scary!)	DESIGN	0.9262881125442762	DESIGN	0.07371188745572387	WITHOUT_CLASSIFICATION
TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.8006115665377883	WITHOUT_CLASSIFICATION	0.19938843346221174	DESIGN
ignore...bean doesn't get registered TODO: Why does that bother me?	DESIGN	0.6766421383046893	DESIGN	0.3233578616953107	WITHOUT_CLASSIFICATION
optional args, so we have IRubyObject[] TODO: confirm	DESIGN	0.6655838811645163	WITHOUT_CLASSIFICATION	0.3344161188354836	DESIGN
not intended to be called directly by users (private) OLD TODO from Ruby code: This should be implemented in JavaClass.java, where we can check for reserved Ruby names, conflicting methods, etc.	DESIGN	0.9893527582206225	DESIGN	0.010647241779377462	WITHOUT_CLASSIFICATION
TODO? I think this ends up propagating from normal Java exceptions sys_fail(openFile.getPath())	DESIGN	0.9685296842723159	WITHOUT_CLASSIFICATION	0.03147031572768408	DESIGN
TODO: Make callCoerced work in block context...then fix downto, step, and upto.	DESIGN	0.9845425750504713	DESIGN	0.015457424949528637	WITHOUT_CLASSIFICATION
TODO: the rest of this...seeking to same position is unnecessary since we share a channel but some of this may be needed?	DESIGN	0.9996768592017311	DESIGN	3.231407982689505E-4	WITHOUT_CLASSIFICATION
TODO: This version differs from ioctl by checking whether fcntl exists and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9759923616912627	DESIGN	0.02400763830873726	WITHOUT_CLASSIFICATION
FIXME this below is temporary, but its much safer for COW (it prevents not shared Strings with begin != 0) this allows now e.g.: ByteList#set not to be begin aware	DESIGN	0.5081147100400663	DESIGN	0.4918852899599338	WITHOUT_CLASSIFICATION
ignore; job was cancelled FIXME: Is this ok?	DESIGN	0.9998181239186064	DESIGN	1.8187608139366777E-4	WITHOUT_CLASSIFICATION
TODO: MRI behavior: Call "+" or "add", depending on the call. But this leads to exceptions when Floats are added. See: http:blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/17374 return callCoerced(context, op, b, true); -- this is MRI behavior. We'll use ours for now, thus providing an ability to add Floats.	DESIGN	0.9170311380189419	DESIGN	0.08296886198105806	WITHOUT_CLASSIFICATION
Must be called from main thread (it is currently, but this bothers me)	DESIGN	0.9988721522104795	WITHOUT_CLASSIFICATION	0.0011278477895204312	DESIGN
TODO: wire into new exception handling mechanism	DESIGN	0.9870066122355199	DESIGN	0.012993387764480089	WITHOUT_CLASSIFICATION
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9195044193585054	DESIGN	0.0804955806414947	WITHOUT_CLASSIFICATION
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9072892762441287	DESIGN	0.09271072375587122	WITHOUT_CLASSIFICATION
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9072892762441287	DESIGN	0.09271072375587122	WITHOUT_CLASSIFICATION
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9072892762441287	DESIGN	0.09271072375587122	WITHOUT_CLASSIFICATION
FIXME: Determine if a real allocator is needed here. Do people want to extend JavaClass? Do we want them to do that? Can you Class.new(JavaClass)? Should you be able to? TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9999996631906374	DESIGN	3.3680936253656337E-7	WITHOUT_CLASSIFICATION
SSS FIXME: Token can be final for a method -- implying that the token is only for this particular implementation of the method But, if the mehod is modified, we create a new method object which in turn gets a new token. What makes sense?? Intuitively, it seems the first one ... but let us see ... Current code version token for this method -- can change during execution as methods get redefined!	DESIGN	0.9275531326756784	DESIGN	0.07244686732432161	WITHOUT_CLASSIFICATION
FIXME weakref.rb also does caller(2) here for the backtrace	DESIGN	0.9293464124652563	WITHOUT_CLASSIFICATION	0.07065358753474368	DESIGN
FIXME: bit of a kludge here (non-interface classes assigned to both class and module fields). simplifies proxy extender code, will go away when JI is overhauled (and proxy extenders are deprecated).	DESIGN	0.618528633969214	DESIGN	0.3814713660307861	WITHOUT_CLASSIFICATION
There's not a compelling reason to keep JavaClass instances in a weak map (any proxies created are [were] kept in a non-weak map, so in most cases they will stick around anyway), and some good reasons not to (JavaClass creation is expensive, for one; many lookups are performed when passing parameters to/from methods; etc.). TODO: faster custom concurrent map	DESIGN	0.9771294669255083	DESIGN	0.022870533074491654	WITHOUT_CLASSIFICATION
TODO: we should be able to optimize this quite a bit post-1.0. JavaClass already has all the methods organized by method name; the next version (supporting protected methods/fields) will have them organized even further. So collectMethods here can just lookup the overridden methods in the JavaClass map, should be much faster.	DESIGN	0.9999603739322261	DESIGN	3.962606777390545E-5	WITHOUT_CLASSIFICATION
FIXME: finalizer should be dupped here	DESIGN	0.9143804190716935	DESIGN	0.0856195809283064	WITHOUT_CLASSIFICATION
FIXME: null check is removable once we figure out how to assign to unset named block args	DESIGN	0.6174482553594118	WITHOUT_CLASSIFICATION	0.38255174464058816	DESIGN
rb_obj_id Return the internal id of an object. FIXME: Should this be renamed to match its ruby name?	DESIGN	0.9527537657204518	DESIGN	0.04724623427954819	WITHOUT_CLASSIFICATION
TODO: Bleeding runtime into parser. Arity may be should be in parser (to keep bleeding oneway)	DESIGN	0.9859412956765092	DESIGN	0.014058704323490805	WITHOUT_CLASSIFICATION
SSS FIXME: Maybe this is not really a concern after all ... Nesting level of this scope in the lexical nesting of scopes in the current file -- this is not to be confused with semantic nesting of scopes across files. Consider this code in a file f class M1::M2::M3::C ... end So, C is at lexical nesting level of 1 (the file script is at 0) in the file 'f' Semantically it is at level 3 (M1, M2, M3 are at 0,1,2). This is primarily used to ensure that variable names don't clash! i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! private int _lexicalNestingLevel;	DESIGN	0.9999992151815589	DESIGN	7.848184410224145E-7	WITHOUT_CLASSIFICATION
Sometimes the value can be retrieved at "compile time". If we succeed, nothing like it! We might not .. for the following reasons: 1. The constant is missing, 2. The reference is a forward-reference, 3. The constant's value is only known at run-time on first-access (but, this is runtime, isn't it??) 4. Our compiler isn't able to right away infer that this is a constant. SSS FIXME: 1. The operand can be a literal array, range, or hash -- hence Operand because Array, Range, and Hash derive from Operand and not Constant ... Is there a way to fix this impedance mismatch? 2. It should be possible to handle the forward-reference case by creating a new ForwardReference operand and then inform the scope of the forward reference which the scope can fix up when the reference gets defined. At code-gen time, if the reference is unresolved, when a value is retrieved for the forward-ref and we get a null, we can throw a ConstMissing exception! Not sure!	DESIGN	0.9997966922894037	DESIGN	2.0330771059624272E-4	WITHOUT_CLASSIFICATION
Reset value map if this instruction is the start/end of a basic block Right now, calls are considered hard boundaries for optimization and information cannot be propagated across them! SSS FIXME: Rather than treat all calls with a broad brush, what we need is to capture different attributes about a call : - uses closures - known call target - can modify scope, - etc. This information is probably already present in the AST Inspector	DESIGN	0.9996840573669817	DESIGN	3.1594263301819097E-4	WITHOUT_CLASSIFICATION
FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.7756138303540823	DESIGN	0.22438616964591782	WITHOUT_CLASSIFICATION
XXX: This check previously used callMethod("==") to check for equality between classes when scanning the hierarchy. However the == check may be safe; we should only ever have one instance bound to a given type/constant. If it's found to be unsafe, examine ways to avoid the == call.	DESIGN	0.5272347637811364	DESIGN	0.47276523621886357	WITHOUT_CLASSIFICATION
end hack	DESIGN	0.6765256951360439	DESIGN	0.32347430486395623	WITHOUT_CLASSIFICATION
if not overloaded, we add a method that guesses at which signature to use TODO: just adding first one right now...add in signature-guessing logic	DESIGN	0.9688722135436524	DESIGN	0.0311277864563476	WITHOUT_CLASSIFICATION
FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9999995370639508	DESIGN	4.629360492678493E-7	WITHOUT_CLASSIFICATION
TODO: This version is better than the hackish previous one. Windows behavior needs to be defined though. I suppose this version could be improved more too. TODO: /etc/passwd is also inadequate for MacOSX since it does not use /etc/passwd for regular user accounts	DESIGN	0.9999239488484587	DESIGN	7.60511515412437E-5	WITHOUT_CLASSIFICATION
TODO: Should next and return also catch here?	DESIGN	0.7206732867498871	DESIGN	0.279326713250113	WITHOUT_CLASSIFICATION
Let's only generate methods for those the user may actually intend to override. That includes any defined in the current class, and any ancestors that are also JavaProxyClasses (but none from any other ancestor classes). Methods defined in mixins will be considered intentionally overridden, except those from Kernel, Java, and JavaProxyMethods, as well as Enumerable. TODO: may want to exclude other common mixins?	DESIGN	0.9999890030185361	WITHOUT_CLASSIFICATION	1.0996981463971045E-5	DESIGN
FIXME: Consider fixing node_assign itself rather than single case	DESIGN	0.8940588343253115	WITHOUT_CLASSIFICATION	0.10594116567468853	DESIGN
Workaround for JRUBY-2326 (MRI does not enter this production for some reason)	DESIGN	0.9771415450733929	WITHOUT_CLASSIFICATION	0.022858454926607156	DESIGN
FIXME: We should really not be creating the dynamic scope for the root of the AST before parsing. This makes us end up needing to readjust this dynamic scope coming out of parse (and for local static scopes it will always happen because of $~ and $_). FIXME: Because we end up adjusting this after-the-fact, we can't use any of the specific-size scopes.	DESIGN	0.9910340036526339	DESIGN	0.0089659963473661	WITHOUT_CLASSIFICATION
FIXME: Resolve what the hell is going on	DESIGN	0.5259723039931749	DESIGN	0.4740276960068252	WITHOUT_CLASSIFICATION
This is perhaps innefficient timewise? Optimal spacewise	DESIGN	0.7512441813143151	WITHOUT_CLASSIFICATION	0.24875581868568478	DESIGN
If variables were added then we may need to grow the dynamic scope to match the static one. FIXME: Make this so we only need to check this for blockScope != null. We cannot currently since we create the DynamicScope for a LocalStaticScope before parse begins. Refactoring should make this fixable.	DESIGN	0.9843703981136462	WITHOUT_CLASSIFICATION	0.015629601886353817	DESIGN
FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9972771284424097	DESIGN	0.0027228715575904174	WITHOUT_CLASSIFICATION
FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9972771284424097	DESIGN	0.0027228715575904174	WITHOUT_CLASSIFICATION
we're depending on the side effect of the load, which loads the class but does not turn it into a script I don't like it, but until we restructure the code a bit more, we'll need to quietly let it by here.	DESIGN	0.9923554152172138	DESIGN	0.007644584782786104	WITHOUT_CLASSIFICATION
TODO: for now, we use a faithful reimplementation of MRI's algorithm, but should use UTF8Encoding facilities from Joni, once it starts prefroming UTF-8 content validation.	DESIGN	0.784153162133588	DESIGN	0.21584683786641207	WITHOUT_CLASSIFICATION
Process streams get Channel.newChannel()ed into FileChannel but are not actually seekable. So instead of just the isSeekable check doing instanceof FileChannel, we must also add this boolean to check, which we set to false when it's known that the incoming channel is from a process. FIXME: This is gross, and it's NIO's fault for not providing a nice way to tell if a channel is "really" seekable.	DESIGN	0.9999784190689393	DESIGN	2.1580931060750585E-5	WITHOUT_CLASSIFICATION
