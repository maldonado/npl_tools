set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9993940984370708	WITHOUT_CLASSIFICATION	6.059015629292269E-4	DESIGN
line 335	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
Figure end-char. '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999322179239947	WITHOUT_CLASSIFICATION	6.778207600525887E-5	DESIGN
line 362	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 372	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
line 391	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
^D	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
^Z	WITHOUT_CLASSIFICATION	0.9994711704121483	WITHOUT_CLASSIFICATION	5.288295878516712E-4	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
Do nothing	WITHOUT_CLASSIFICATION	0.9995793786495538	WITHOUT_CLASSIFICATION	4.206213504461525E-4	DESIGN
Do nothing	WITHOUT_CLASSIFICATION	0.9995793786495538	WITHOUT_CLASSIFICATION	4.206213504461525E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995210829193439	WITHOUT_CLASSIFICATION	4.7891708065602974E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995210829193439	WITHOUT_CLASSIFICATION	4.7891708065602974E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995210829193439	WITHOUT_CLASSIFICATION	4.7891708065602974E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995210829193439	WITHOUT_CLASSIFICATION	4.7891708065602974E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995210829193439	WITHOUT_CLASSIFICATION	4.7891708065602974E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995210829193439	WITHOUT_CLASSIFICATION	4.7891708065602974E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995210829193439	WITHOUT_CLASSIFICATION	4.7891708065602974E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995210829193439	WITHOUT_CLASSIFICATION	4.7891708065602974E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995210829193439	WITHOUT_CLASSIFICATION	4.7891708065602974E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995210829193439	WITHOUT_CLASSIFICATION	4.7891708065602974E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995210829193439	WITHOUT_CLASSIFICATION	4.7891708065602974E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995210829193439	WITHOUT_CLASSIFICATION	4.7891708065602974E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995210829193439	WITHOUT_CLASSIFICATION	4.7891708065602974E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995210829193439	WITHOUT_CLASSIFICATION	4.7891708065602974E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995210829193439	WITHOUT_CLASSIFICATION	4.7891708065602974E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995210829193439	WITHOUT_CLASSIFICATION	4.7891708065602974E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995210829193439	WITHOUT_CLASSIFICATION	4.7891708065602974E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995210829193439	WITHOUT_CLASSIFICATION	4.7891708065602974E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995210829193439	WITHOUT_CLASSIFICATION	4.7891708065602974E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995210829193439	WITHOUT_CLASSIFICATION	4.7891708065602974E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995210829193439	WITHOUT_CLASSIFICATION	4.7891708065602974E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995210829193439	WITHOUT_CLASSIFICATION	4.7891708065602974E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995210829193439	WITHOUT_CLASSIFICATION	4.7891708065602974E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995210829193439	WITHOUT_CLASSIFICATION	4.7891708065602974E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995210829193439	WITHOUT_CLASSIFICATION	4.7891708065602974E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995210829193439	WITHOUT_CLASSIFICATION	4.7891708065602974E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995210829193439	WITHOUT_CLASSIFICATION	4.7891708065602974E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995210829193439	WITHOUT_CLASSIFICATION	4.7891708065602974E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995210829193439	WITHOUT_CLASSIFICATION	4.7891708065602974E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995210829193439	WITHOUT_CLASSIFICATION	4.7891708065602974E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995210829193439	WITHOUT_CLASSIFICATION	4.7891708065602974E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995210829193439	WITHOUT_CLASSIFICATION	4.7891708065602974E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995210829193439	WITHOUT_CLASSIFICATION	4.7891708065602974E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995210829193439	WITHOUT_CLASSIFICATION	4.7891708065602974E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995210829193439	WITHOUT_CLASSIFICATION	4.7891708065602974E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995210829193439	WITHOUT_CLASSIFICATION	4.7891708065602974E-4	DESIGN
return result	WITHOUT_CLASSIFICATION	0.9999092394791633	WITHOUT_CLASSIFICATION	9.076052083669245E-5	DESIGN
name	WITHOUT_CLASSIFICATION	0.9993438548303177	WITHOUT_CLASSIFICATION	6.561451696822019E-4	DESIGN
Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9990572247960052	WITHOUT_CLASSIFICATION	9.42775203994706E-4	DESIGN
Accessor methods.	WITHOUT_CLASSIFICATION	0.9996572839174319	WITHOUT_CLASSIFICATION	3.4271608256811995E-4	DESIGN
MRI behavior	WITHOUT_CLASSIFICATION	0.9996033424932701	WITHOUT_CLASSIFICATION	3.9665750672989163E-4	DESIGN
MRI behavior	WITHOUT_CLASSIFICATION	0.9996033424932701	WITHOUT_CLASSIFICATION	3.9665750672989163E-4	DESIGN
MRI behavior	WITHOUT_CLASSIFICATION	0.9996033424932701	WITHOUT_CLASSIFICATION	3.9665750672989163E-4	DESIGN
MRI behavior	WITHOUT_CLASSIFICATION	0.9996033424932701	WITHOUT_CLASSIFICATION	3.9665750672989163E-4	DESIGN
call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9998139521238415	WITHOUT_CLASSIFICATION	1.8604787615847455E-4	DESIGN
fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9990803866575472	WITHOUT_CLASSIFICATION	9.196133424528633E-4	DESIGN
try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999067371091481	WITHOUT_CLASSIFICATION	9.326289085194145E-5	DESIGN
define ARGV and $ for this runtime	WITHOUT_CLASSIFICATION	0.9995098172379658	WITHOUT_CLASSIFICATION	4.901827620341806E-4	DESIGN
Version information:	WITHOUT_CLASSIFICATION	0.9995603526525854	WITHOUT_CLASSIFICATION	4.3964734741457225E-4	DESIGN
after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9997218743188051	WITHOUT_CLASSIFICATION	2.781256811948489E-4	DESIGN
ARGF, $< object	WITHOUT_CLASSIFICATION	0.9995032088413859	WITHOUT_CLASSIFICATION	4.967911586141405E-4	DESIGN
if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999526146384367	WITHOUT_CLASSIFICATION	4.7385361563294795E-5	DESIGN
On platforms without a c-library accessable through JNA, getpid will return hashCode as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.5716248650650775	WITHOUT_CLASSIFICATION	0.4283751349349224	DESIGN
$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9973021374147207	WITHOUT_CLASSIFICATION	0.0026978625852793103	DESIGN
include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9665922845039787	WITHOUT_CLASSIFICATION	0.03340771549602137	DESIGN
MRI behavior: just plain '' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9996173212842262	WITHOUT_CLASSIFICATION	3.826787157738081E-4	DESIGN
this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9940207142257351	WITHOUT_CLASSIFICATION	0.00597928577426484	DESIGN
What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9982903128409225	WITHOUT_CLASSIFICATION	0.0017096871590774792	DESIGN
----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9995745623627627	WITHOUT_CLASSIFICATION	4.254376372373733E-4	DESIGN
CONSTANT TABLE METHODS - pass to delegate	WITHOUT_CLASSIFICATION	0.9996622008789847	WITHOUT_CLASSIFICATION	3.377991210153239E-4	DESIGN
We get canonical path to try and flatten the path out. a dir '/subdir/..' should return as '/' cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9659177637868174	WITHOUT_CLASSIFICATION	0.03408223621318258	DESIGN
MRI behavior	WITHOUT_CLASSIFICATION	0.9996033424932701	WITHOUT_CLASSIFICATION	3.9665750672989163E-4	DESIGN
----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999937575106548	WITHOUT_CLASSIFICATION	6.242489345152634E-6	DESIGN
Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999982443824524	WITHOUT_CLASSIFICATION	1.755617547435943E-6	DESIGN
----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998421551685072	WITHOUT_CLASSIFICATION	1.5784483149279443E-4	DESIGN
try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9980360720377099	WITHOUT_CLASSIFICATION	0.001963927962289965	DESIGN
otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9986564957601302	WITHOUT_CLASSIFICATION	0.0013435042398697709	DESIGN
Proc class	WITHOUT_CLASSIFICATION	0.9986168051136257	WITHOUT_CLASSIFICATION	0.001383194886374265	DESIGN
No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999960472057875	WITHOUT_CLASSIFICATION	3.952794212524691E-6	DESIGN
modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9926238536421815	WITHOUT_CLASSIFICATION	0.007376146357818501	DESIGN
for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.8074662737308641	WITHOUT_CLASSIFICATION	0.19253372626913584	DESIGN
case RUBY_HYBRID: backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); break;	WITHOUT_CLASSIFICATION	0.9999704983219778	WITHOUT_CLASSIFICATION	2.9501678022235505E-5	DESIGN
This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9997271153294147	WITHOUT_CLASSIFICATION	2.728846705852725E-4	DESIGN
rb_exc_new3	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.999654169784143	WITHOUT_CLASSIFICATION	3.458302158569201E-4	DESIGN
registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9992896603773488	WITHOUT_CLASSIFICATION	7.103396226513182E-4	DESIGN
IOT is also 6	WITHOUT_CLASSIFICATION	0.9998441149049898	WITHOUT_CLASSIFICATION	1.5588509501025655E-4	DESIGN
CLD is also 20	WITHOUT_CLASSIFICATION	0.9998491701018629	WITHOUT_CLASSIFICATION	1.508298981370815E-4	DESIGN
RubySignal	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
ZStream actually isn't allocatable	WITHOUT_CLASSIFICATION	0.9956684954147377	WITHOUT_CLASSIFICATION	0.004331504585262288	DESIGN
MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9973075279814964	WITHOUT_CLASSIFICATION	0.0026924720185036487	DESIGN
it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999645597976567	WITHOUT_CLASSIFICATION	3.544020234331059E-5	DESIGN
MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9993982308947031	WITHOUT_CLASSIFICATION	6.017691052968154E-4	DESIGN
SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9998772895351828	WITHOUT_CLASSIFICATION	1.22710464817146E-4	DESIGN
io.finish();	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9926856913711478	WITHOUT_CLASSIFICATION	0.007314308628852188	DESIGN
hmm...	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
Called before any write to make sure the header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9994288748927411	WITHOUT_CLASSIFICATION	5.711251072588562E-4	DESIGN
For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9752448753304858	WITHOUT_CLASSIFICATION	0.024755124669514163	DESIGN
We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9997730357349924	WITHOUT_CLASSIFICATION	2.2696426500768134E-4	DESIGN
float number of seconds	WITHOUT_CLASSIFICATION	0.9979743821759572	WITHOUT_CLASSIFICATION	0.0020256178240426774	DESIGN
modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9998449252675946	WITHOUT_CLASSIFICATION	1.5507473240537582E-4	DESIGN
dump usec, not msec	WITHOUT_CLASSIFICATION	0.9992254573845498	WITHOUT_CLASSIFICATION	7.745426154500438E-4	DESIGN
Time class methods	WITHOUT_CLASSIFICATION	0.9988566047644034	WITHOUT_CLASSIFICATION	0.0011433952355965665	DESIGN
marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9979417757378207	WITHOUT_CLASSIFICATION	0.002058224262179392	DESIGN
MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9991648993039932	WITHOUT_CLASSIFICATION	8.351006960067298E-4	DESIGN
set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9952961682986575	WITHOUT_CLASSIFICATION	0.0047038317013425235	DESIGN
the instant at which we will ask dtz what the difference between DST and standard time is	WITHOUT_CLASSIFICATION	0.9992786321971824	WITHOUT_CLASSIFICATION	7.213678028177104E-4	DESIGN
if we might be moving this time from !DST -> DST, the offset is assumed to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9980237071209566	WITHOUT_CLASSIFICATION	0.001976292879043328	DESIGN
Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9996531123102278	WITHOUT_CLASSIFICATION	3.468876897722346E-4	DESIGN
================ Utility Methods ================	WITHOUT_CLASSIFICATION	0.9988709776826618	WITHOUT_CLASSIFICATION	0.0011290223173382294	DESIGN
If the value will fit in a Fixnum, return one of those.	WITHOUT_CLASSIFICATION	0.9999399185112587	WITHOUT_CLASSIFICATION	6.008148874136788E-5	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.999990021506658	WITHOUT_CLASSIFICATION	9.97849334193417E-6	DESIGN
MRI issuses warning here on (RBIGNUM(x)->len SIZEOF_BDIGITS yy > 10241024)	WITHOUT_CLASSIFICATION	0.9917442454695922	WITHOUT_CLASSIFICATION	0.008255754530407894	DESIGN
num2int is also implemented	WITHOUT_CLASSIFICATION	0.9979131202483188	WITHOUT_CLASSIFICATION	0.0020868797516810896	DESIGN
num2int is also implemented	WITHOUT_CLASSIFICATION	0.9979131202483188	WITHOUT_CLASSIFICATION	0.0020868797516810896	DESIGN
no bignorm here needed	WITHOUT_CLASSIFICATION	0.993805560818931	WITHOUT_CLASSIFICATION	0.006194439181069005	DESIGN
wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9823051327405353	WITHOUT_CLASSIFICATION	0.017694867259464692	DESIGN
Pad with a 0	WITHOUT_CLASSIFICATION	0.9995682181768193	WITHOUT_CLASSIFICATION	4.317818231807427E-4	DESIGN
BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9993225268850677	WITHOUT_CLASSIFICATION	6.774731149323255E-4	DESIGN
This should only be called by this and RubyFile. It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9162009901688308	WITHOUT_CLASSIFICATION	0.08379900983116911	DESIGN
We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9940333748237973	WITHOUT_CLASSIFICATION	0.005966625176202709	DESIGN
???	WITHOUT_CLASSIFICATION	0.9952989094058768	WITHOUT_CLASSIFICATION	0.0047010905941230665	DESIGN
PID	WITHOUT_CLASSIFICATION	0.999459708570209	WITHOUT_CLASSIFICATION	5.402914297909232E-4	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.999990021506658	WITHOUT_CLASSIFICATION	9.97849334193417E-6	DESIGN
elements and trailing nils	WITHOUT_CLASSIFICATION	0.999484528267837	WITHOUT_CLASSIFICATION	5.154717321630895E-4	DESIGN
Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999995306838149	WITHOUT_CLASSIFICATION	4.6931618506744855E-7	DESIGN
Ruby arrays default to holding 16 elements, so we create an ArrayList of the same size if we're not told otherwise	WITHOUT_CLASSIFICATION	0.999983735214737	WITHOUT_CLASSIFICATION	1.6264785262883844E-5	DESIGN
rb_ary_new2 just allocates the internal array	WITHOUT_CLASSIFICATION	0.9997407184704783	WITHOUT_CLASSIFICATION	2.5928152952169476E-4	DESIGN
plain internal array assignment	WITHOUT_CLASSIFICATION	0.9995783917240313	WITHOUT_CLASSIFICATION	4.2160827596876305E-4	DESIGN
plain internal array assignment	WITHOUT_CLASSIFICATION	0.9995783917240313	WITHOUT_CLASSIFICATION	4.2160827596876305E-4	DESIGN
plain internal array assignment	WITHOUT_CLASSIFICATION	0.9995783917240313	WITHOUT_CLASSIFICATION	4.2160827596876305E-4	DESIGN
Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour	WITHOUT_CLASSIFICATION	0.9860340687255728	WITHOUT_CLASSIFICATION	0.013965931274427303	DESIGN
NEWOBJ and OBJSETUP equivalent fastest one, for shared arrays, optional objectspace	WITHOUT_CLASSIFICATION	0.9995045512423416	WITHOUT_CLASSIFICATION	4.954487576583623E-4	DESIGN
Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999469180989535	WITHOUT_CLASSIFICATION	5.308190104639253E-5	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992743756572146	WITHOUT_CLASSIFICATION	7.256243427854744E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992743756572146	WITHOUT_CLASSIFICATION	7.256243427854744E-4	DESIGN
Windows does not support these functions, so we won't even try This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9841836484155986	WITHOUT_CLASSIFICATION	0.015816351584401388	DESIGN
There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and newer one (US/Pacific, America/Los_Angeles). This pattern is to detect the legacy TZ format in order to convert it to the newer format understood by Java API.	WITHOUT_CLASSIFICATION	0.9994436102612966	WITHOUT_CLASSIFICATION	5.56389738703394E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992743756572146	WITHOUT_CLASSIFICATION	7.256243427854744E-4	DESIGN
1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9985288060084864	WITHOUT_CLASSIFICATION	0.0014711939915135863	DESIGN
possibly should not in object space	WITHOUT_CLASSIFICATION	0.9913805425226169	WITHOUT_CLASSIFICATION	0.008619457477383142	DESIGN
only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999880355973291	WITHOUT_CLASSIFICATION	1.196440267086771E-5	DESIGN
rb_ary_new4	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
rb_ary_new4	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9994396294223006	WITHOUT_CLASSIFICATION	5.60370577699489E-4	DESIGN
If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9998609965211804	WITHOUT_CLASSIFICATION	1.3900347881962258E-4	DESIGN
See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9991717517286222	WITHOUT_CLASSIFICATION	8.282482713779178E-4	DESIGN
See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9991717517286222	WITHOUT_CLASSIFICATION	8.282482713779178E-4	DESIGN
Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9997810673137888	WITHOUT_CLASSIFICATION	2.1893268621126142E-4	DESIGN
pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9993290524310579	WITHOUT_CLASSIFICATION	6.709475689421194E-4	DESIGN
root fiber	WITHOUT_CLASSIFICATION	0.999421907231752	WITHOUT_CLASSIFICATION	5.780927682479753E-4	DESIGN
GMT+00:00 --> Etc/GMT, see "MRI behavior" comment below.	WITHOUT_CLASSIFICATION	0.9998924105858569	WITHOUT_CLASSIFICATION	1.0758941414315319E-4	DESIGN
See http:www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9995032779592052	WITHOUT_CLASSIFICATION	4.967220407947489E-4	DESIGN
extras flag	WITHOUT_CLASSIFICATION	0.9995053166538448	WITHOUT_CLASSIFICATION	4.946833461551412E-4	DESIGN
Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
...nothing	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
utility method	WITHOUT_CLASSIFICATION	0.9996940048132078	WITHOUT_CLASSIFICATION	3.05995186792151E-4	DESIGN
Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9997281855535848	WITHOUT_CLASSIFICATION	2.7181444641522455E-4	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.999990021506658	WITHOUT_CLASSIFICATION	9.97849334193417E-6	DESIGN
flags 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999776847807658	WITHOUT_CLASSIFICATION	2.231521923424921E-5	DESIGN
range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9993794567889355	WITHOUT_CLASSIFICATION	6.205432110645722E-4	DESIGN
1.8 "include?"	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9995103419335083	WITHOUT_CLASSIFICATION	4.896580664917758E-4	DESIGN
beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9870059067886101	WITHOUT_CLASSIFICATION	0.012994093211389847	DESIGN
MRI does it!	WITHOUT_CLASSIFICATION	0.9999252338554661	WITHOUT_CLASSIFICATION	7.476614453404101E-5	DESIGN
won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9998165838713802	WITHOUT_CLASSIFICATION	1.8341612861972318E-4	DESIGN
it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9995336880010934	WITHOUT_CLASSIFICATION	4.6631199890657157E-4	DESIGN
RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9988157287080784	WITHOUT_CLASSIFICATION	0.0011842712919215147	DESIGN
not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9961658942757269	WITHOUT_CLASSIFICATION	0.003834105724273185	DESIGN
second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.999978665131477	WITHOUT_CLASSIFICATION	2.1334868523027358E-5	DESIGN
we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9912241664790102	WITHOUT_CLASSIFICATION	0.008775833520989755	DESIGN
terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9995864473741309	WITHOUT_CLASSIFICATION	4.13552625869015E-4	DESIGN
Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999443096906949	WITHOUT_CLASSIFICATION	5.569030930503782E-5	DESIGN
do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9961018378828403	WITHOUT_CLASSIFICATION	0.0038981621171597434	DESIGN
recheck condition	WITHOUT_CLASSIFICATION	0.9991921391031734	WITHOUT_CLASSIFICATION	8.078608968267107E-4	DESIGN
Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999651812814068	WITHOUT_CLASSIFICATION	3.4818718593256884E-5	DESIGN
Construct key services	WITHOUT_CLASSIFICATION	0.9994354266161045	WITHOUT_CLASSIFICATION	5.645733838955264E-4	DESIGN
initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9998613614793103	WITHOUT_CLASSIFICATION	1.3863852068983634E-4	DESIGN
Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9998623661562568	WITHOUT_CLASSIFICATION	1.376338437430802E-4	DESIGN
Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9998992903470492	WITHOUT_CLASSIFICATION	1.0070965295090449E-4	DESIGN
Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9580705946266708	WITHOUT_CLASSIFICATION	0.04192940537332924	DESIGN
Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9991152879814079	WITHOUT_CLASSIFICATION	8.847120185920909E-4	DESIGN
Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9995823150142769	WITHOUT_CLASSIFICATION	4.17684985723192E-4	DESIGN
Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999854408240424	WITHOUT_CLASSIFICATION	1.4559175957492187E-5	DESIGN
Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9985549536607107	WITHOUT_CLASSIFICATION	0.0014450463392894116	DESIGN
depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9892531132294233	WITHOUT_CLASSIFICATION	0.010746886770576634	DESIGN
initialize builtin libraries	WITHOUT_CLASSIFICATION	0.999530484135435	WITHOUT_CLASSIFICATION	4.6951586456498785E-4	DESIGN
Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9998428718882525	WITHOUT_CLASSIFICATION	1.571281117474449E-4	DESIGN
Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999043898925951	WITHOUT_CLASSIFICATION	9.561010740489859E-5	DESIGN
we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9970291057131692	WITHOUT_CLASSIFICATION	0.002970894286830903	DESIGN
determine spacing	WITHOUT_CLASSIFICATION	0.9992303218164688	WITHOUT_CLASSIFICATION	7.69678183531162E-4	DESIGN
should alter global state	WITHOUT_CLASSIFICATION	0.9975977608984555	WITHOUT_CLASSIFICATION	0.0024022391015445133	DESIGN
For JSR 223 support: see http:scripting.java.net/	WITHOUT_CLASSIFICATION	0.9998942871943289	WITHOUT_CLASSIFICATION	1.0571280567112559E-4	DESIGN
use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9880579622190276	WITHOUT_CLASSIFICATION	0.01194203778097239	DESIGN
this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9997820252570858	WITHOUT_CLASSIFICATION	2.1797474291412072E-4	DESIGN
new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9987272475738409	WITHOUT_CLASSIFICATION	0.0012727524261591523	DESIGN
assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9262990366685324	WITHOUT_CLASSIFICATION	0.07370096333146757	DESIGN
Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9988952064703017	WITHOUT_CLASSIFICATION	0.0011047935296982958	DESIGN
default: don't retain	WITHOUT_CLASSIFICATION	0.9994361596266836	WITHOUT_CLASSIFICATION	5.638403733163357E-4	DESIGN
ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9996692625293732	WITHOUT_CLASSIFICATION	3.307374706268215E-4	DESIGN
Default objects	WITHOUT_CLASSIFICATION	0.999915778365077	WITHOUT_CLASSIFICATION	8.422163492310582E-5	DESIGN
record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999638103104102	WITHOUT_CLASSIFICATION	3.618968958991263E-5	DESIGN
former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9995084530634378	WITHOUT_CLASSIFICATION	4.915469365621653E-4	DESIGN
Java support	WITHOUT_CLASSIFICATION	0.9995041328537946	WITHOUT_CLASSIFICATION	4.958671462053405E-4	DESIGN
Parser stats	WITHOUT_CLASSIFICATION	0.999457181852543	WITHOUT_CLASSIFICATION	5.428181474570552E-4	DESIGN
Compilation	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999655545634645	WITHOUT_CLASSIFICATION	3.444543653549801E-5	DESIGN
can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9998226351723193	WITHOUT_CLASSIFICATION	1.773648276806818E-4	DESIGN
mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999078676683297	WITHOUT_CLASSIFICATION	9.213233167016954E-5	DESIGN
mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9998473768544689	WITHOUT_CLASSIFICATION	1.5262314553114142E-4	DESIGN
A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9996015951894697	WITHOUT_CLASSIFICATION	3.984048105302944E-4	DESIGN
A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9998827130481536	WITHOUT_CLASSIFICATION	1.1728695184647126E-4	DESIGN
initial spaces spaces before "at"	WITHOUT_CLASSIFICATION	0.9997483911771379	WITHOUT_CLASSIFICATION	2.516088228622121E-4	DESIGN
event name filename line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9989092734000928	WITHOUT_CLASSIFICATION	0.0010907265999071983	DESIGN
The method is intentionally not public, since it typically should not be used outside of the core.	WITHOUT_CLASSIFICATION	0.5308256840821266	DESIGN	0.4691743159178733	WITHOUT_CLASSIFICATION
Note: this field and the following static initializer must be located be in this order!	WITHOUT_CLASSIFICATION	0.8796252699290612	WITHOUT_CLASSIFICATION	0.12037473007093875	DESIGN
Contains a list of all blocks (as Procs) that should be called when the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9998922303584236	WITHOUT_CLASSIFICATION	1.0776964157645827E-4	DESIGN
quoted-printable	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
default options	WITHOUT_CLASSIFICATION	0.9998934040389458	WITHOUT_CLASSIFICATION	1.0659596105423278E-4	DESIGN
iso-2022-jp	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
iso-2022-jp	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
Shift_JIS	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
Shift_JIS	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
EUC-JP	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
EUC-JP	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
UTF-8	WITHOUT_CLASSIFICATION	0.9998664649901486	WITHOUT_CLASSIFICATION	1.3353500985137598E-4	DESIGN
UTF-8	WITHOUT_CLASSIFICATION	0.9998664649901486	WITHOUT_CLASSIFICATION	1.3353500985137598E-4	DESIGN
long name option	WITHOUT_CLASSIFICATION	0.9997542026947671	WITHOUT_CLASSIFICATION	2.45797305232814E-4	DESIGN
conversion	WITHOUT_CLASSIFICATION	0.9998825061830321	WITHOUT_CLASSIFICATION	1.1749381696781987E-4	DESIGN
================ Singleton Methods ================	WITHOUT_CLASSIFICATION	0.9888046557301753	WITHOUT_CLASSIFICATION	0.01119534426982466	DESIGN
string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9993334393177852	WITHOUT_CLASSIFICATION	6.665606822147996E-4	DESIGN
string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9985439535750187	WITHOUT_CLASSIFICATION	0.0014560464249812842	DESIGN
string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9984881545135688	WITHOUT_CLASSIFICATION	0.0015118454864311438	DESIGN
ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9988157287080784	WITHOUT_CLASSIFICATION	0.0011842712919215147	DESIGN
rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9988157287080784	WITHOUT_CLASSIFICATION	0.0011842712919215147	DESIGN
rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9998186438726074	WITHOUT_CLASSIFICATION	1.8135612739258956E-4	DESIGN
String construction routines by NOT byte[] buffer and NOT making the target String shared	WITHOUT_CLASSIFICATION	0.9999489758441407	WITHOUT_CLASSIFICATION	5.10241558593135E-5	DESIGN
rb_str_subseq	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.99772091462687	WITHOUT_CLASSIFICATION	0.002279085373130049	DESIGN
if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9997691009112735	WITHOUT_CLASSIFICATION	2.3089908872658563E-4	DESIGN
rb_str_cmp_m	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.999923380459894	WITHOUT_CLASSIFICATION	7.661954010599791E-5	DESIGN
rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9986666785335457	WITHOUT_CLASSIFICATION	0.0013333214664543163	DESIGN
this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.6038107165464055	DESIGN	0.39618928345359444	WITHOUT_CLASSIFICATION
must not reallocate	WITHOUT_CLASSIFICATION	0.997827994377507	WITHOUT_CLASSIFICATION	0.0021720056224929633	DESIGN
Illegal combination	WITHOUT_CLASSIFICATION	0.9993630757932268	WITHOUT_CLASSIFICATION	6.369242067731579E-4	DESIGN
use 1.8 impl	WITHOUT_CLASSIFICATION	0.9950379253745971	WITHOUT_CLASSIFICATION	0.004962074625402906	DESIGN
RubyString aka rb_string_value	WITHOUT_CLASSIFICATION	0.9988157287080784	WITHOUT_CLASSIFICATION	0.0011842712919215147	DESIGN
bang: true, no match, no substitution	WITHOUT_CLASSIFICATION	0.9991010335261952	WITHOUT_CLASSIFICATION	8.989664738047955E-4	DESIGN
out of byte range there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999902420562223	WITHOUT_CLASSIFICATION	9.757943777665727E-6	DESIGN
len + margin	WITHOUT_CLASSIFICATION	0.9994255783239603	WITHOUT_CLASSIFICATION	5.744216760397609E-4	DESIGN
block given	WITHOUT_CLASSIFICATION	0.99966047990375	WITHOUT_CLASSIFICATION	3.395200962500268E-4	DESIGN
block given	WITHOUT_CLASSIFICATION	0.99966047990375	WITHOUT_CLASSIFICATION	3.395200962500268E-4	DESIGN
copy pre-match substr	WITHOUT_CLASSIFICATION	0.9982011302446552	WITHOUT_CLASSIFICATION	0.0017988697553447384	DESIGN
string given	WITHOUT_CLASSIFICATION	0.9997910188416259	WITHOUT_CLASSIFICATION	2.089811583742257E-4	DESIGN
hash given	WITHOUT_CLASSIFICATION	0.9998192522315079	WITHOUT_CLASSIFICATION	1.8074776849215626E-4	DESIGN
This represents left most digit in a set of incremented values? Therefore leftmost numeric must be '1' and not '0' 999 -> 1000, not 999 -> 0000. whereas chars should be zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9133268697257686	WITHOUT_CLASSIFICATION	0.08667313027423139	DESIGN
substring longer than string	WITHOUT_CLASSIFICATION	0.9993238528300072	WITHOUT_CLASSIFICATION	6.761471699928578E-4	DESIGN
rb_str_substr	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
nothing	WITHOUT_CLASSIFICATION	0.9997781617197401	WITHOUT_CLASSIFICATION	2.218382802597891E-4	DESIGN
nothing	WITHOUT_CLASSIFICATION	0.9997781617197401	WITHOUT_CLASSIFICATION	2.218382802597891E-4	DESIGN
rb_str_splice	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
TODO: keep cr TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.6609701801636846	DESIGN	0.3390298198363153	WITHOUT_CLASSIFICATION
keep cr ?	WITHOUT_CLASSIFICATION	0.998504298183274	WITHOUT_CLASSIFICATION	0.0014957018167259422	DESIGN
keep cr ?	WITHOUT_CLASSIFICATION	0.998504298183274	WITHOUT_CLASSIFICATION	0.0014957018167259422	DESIGN
wrapped to \0...\0. search next valid char.	WITHOUT_CLASSIFICATION	0.9964599642497138	WITHOUT_CLASSIFICATION	0.003540035750286189	DESIGN
only this case affects backrefs	WITHOUT_CLASSIFICATION	0.9997225556387478	WITHOUT_CLASSIFICATION	2.7744436125220497E-4	DESIGN
only this case affects backrefs	WITHOUT_CLASSIFICATION	0.9997225556387478	WITHOUT_CLASSIFICATION	2.7744436125220497E-4	DESIGN
modified	WITHOUT_CLASSIFICATION	0.9998638402745984	WITHOUT_CLASSIFICATION	1.3615972540154816E-4	DESIGN
modified	WITHOUT_CLASSIFICATION	0.9998638402745984	WITHOUT_CLASSIFICATION	1.3615972540154816E-4	DESIGN
1.8	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
1.8	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
QTRUE	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
retrieve last replacer	WITHOUT_CLASSIFICATION	0.9996376410205271	WITHOUT_CLASSIFICATION	3.623589794728984E-4	DESIGN
Check the length every iteration, since the block can modify this string.	WITHOUT_CLASSIFICATION	0.9967583424256756	WITHOUT_CLASSIFICATION	0.0032416575743243682	DESIGN
long size bits in byte	WITHOUT_CLASSIFICATION	0.9989956969811741	WITHOUT_CLASSIFICATION	0.0010043030188259079	DESIGN
from encoding, special-casing ASCII to ASCII	WITHOUT_CLASSIFICATION	0.9980989726962672	WITHOUT_CLASSIFICATION	0.001901027303732707	DESIGN
to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9980591870650198	WITHOUT_CLASSIFICATION	0.0019408129349800852	DESIGN
create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9974226576858342	WITHOUT_CLASSIFICATION	0.002577342314165815	DESIGN
decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9991881195316673	WITHOUT_CLASSIFICATION	8.118804683326585E-4	DESIGN
create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9974226576858342	WITHOUT_CLASSIFICATION	0.002577342314165815	DESIGN
Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9994576165951854	WITHOUT_CLASSIFICATION	5.423834048146775E-4	DESIGN
no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9979130460381094	WITHOUT_CLASSIFICATION	0.002086953961890657	DESIGN
interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999724984124331	WITHOUT_CLASSIFICATION	2.750158756695102E-5	DESIGN
File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999584178582753	WITHOUT_CLASSIFICATION	4.158214172464593E-5	DESIGN
rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999090816605719	WITHOUT_CLASSIFICATION	9.09183394281819E-5	DESIGN
We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9906142346405235	WITHOUT_CLASSIFICATION	0.009385765359476649	DESIGN
exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9998024277536686	WITHOUT_CLASSIFICATION	1.9757224633145046E-4	DESIGN
Zero sleeps forever	WITHOUT_CLASSIFICATION	0.999659230614766	WITHOUT_CLASSIFICATION	3.4076938523397313E-4	DESIGN
file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9966886851764254	WITHOUT_CLASSIFICATION	0.0033113148235746695	DESIGN
Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9995202223828615	WITHOUT_CLASSIFICATION	4.7977761713840995E-4	DESIGN
Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9995665673508893	WITHOUT_CLASSIFICATION	4.3343264911070446E-4	DESIGN
file not given	WITHOUT_CLASSIFICATION	0.9993133712715064	WITHOUT_CLASSIFICATION	6.866287284936822E-4	DESIGN
string to eval	WITHOUT_CLASSIFICATION	0.9997088317920154	WITHOUT_CLASSIFICATION	2.9116820798456795E-4	DESIGN
binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9991292413377807	WITHOUT_CLASSIFICATION	8.707586622192456E-4	DESIGN
?g | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999161635825031	WITHOUT_CLASSIFICATION	8.383641749693339E-5	DESIGN
bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9986297860844918	WITHOUT_CLASSIFICATION	0.0013702139155081909	DESIGN
Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9977767436297393	WITHOUT_CLASSIFICATION	0.0022232563702607243	DESIGN
Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9946264665006981	WITHOUT_CLASSIFICATION	0.0053735334993018705	DESIGN
No catch active for this throw	WITHOUT_CLASSIFICATION	0.9989085886095552	WITHOUT_CLASSIFICATION	0.0010914113904447029	DESIGN
without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9941455834293647	WITHOUT_CLASSIFICATION	0.0058544165706353665	DESIGN
ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9998950328243242	WITHOUT_CLASSIFICATION	1.049671756756906E-4	DESIGN
MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999840158522532	WITHOUT_CLASSIFICATION	1.598414774684653E-5	DESIGN
MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9998853200170741	WITHOUT_CLASSIFICATION	1.1467998292589629E-4	DESIGN
?A | Time | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999814108406091	WITHOUT_CLASSIFICATION	1.858915939086709E-5	DESIGN
?b | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.999978517565479	WITHOUT_CLASSIFICATION	2.1482434521044897E-5	DESIGN
?c | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999940897880978	WITHOUT_CLASSIFICATION	5.9102119022685365E-6	DESIGN
?C | Time | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999716368996071	WITHOUT_CLASSIFICATION	2.8363100392841314E-5	DESIGN
?d | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999970190365622	WITHOUT_CLASSIFICATION	2.980963437792235E-6	DESIGN
?e | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999915171262695	WITHOUT_CLASSIFICATION	8.482873730506304E-6	DESIGN
?f | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999663884018647	WITHOUT_CLASSIFICATION	3.361159813529261E-5	DESIGN
?G | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999955467978472	WITHOUT_CLASSIFICATION	4.453202152782009E-6	DESIGN
?k | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999251206757663	WITHOUT_CLASSIFICATION	7.4879324233686E-5	DESIGN
?M | Time | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999897584781448	WITHOUT_CLASSIFICATION	1.0241521855197567E-5	DESIGN
?o | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.999996572397466	WITHOUT_CLASSIFICATION	3.4276025339412863E-6	DESIGN
?O | boolean | True if file1 exists and is owned by the caller's real uid	WITHOUT_CLASSIFICATION	0.9999929710942403	WITHOUT_CLASSIFICATION	7.0289057596158175E-6	DESIGN
?p | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999833840926636	WITHOUT_CLASSIFICATION	1.6615907336425814E-5	DESIGN
?r | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999972237846497	WITHOUT_CLASSIFICATION	2.776215350247772E-6	DESIGN
?s | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999977516428803	WITHOUT_CLASSIFICATION	2.2483571197066185E-6	DESIGN
?S | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999837128897535	WITHOUT_CLASSIFICATION	1.6287110246417286E-5	DESIGN
?u | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9998562008604442	WITHOUT_CLASSIFICATION	1.437991395557856E-4	DESIGN
?x | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999954753638909	WITHOUT_CLASSIFICATION	4.524636109058776E-6	DESIGN
?X | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999907214433894	WITHOUT_CLASSIFICATION	9.278556610579708E-6	DESIGN
?z | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999978476974897	WITHOUT_CLASSIFICATION	2.152302510198019E-6	DESIGN
?= | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999992933470908	WITHOUT_CLASSIFICATION	7.066529091089727E-7	DESIGN
?< | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999990813772863	WITHOUT_CLASSIFICATION	9.186227137526571E-7	DESIGN
?> | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999993612082316	WITHOUT_CLASSIFICATION	6.38791768392898E-7	DESIGN
?- | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999928051398087	WITHOUT_CLASSIFICATION	7.194860191341213E-6	DESIGN
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.7842154702812866	WITHOUT_CLASSIFICATION	0.21578452971871342	DESIGN
Error info is per-thread	WITHOUT_CLASSIFICATION	0.9990889405084	WITHOUT_CLASSIFICATION	9.110594916000048E-4	DESIGN
init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9991436817792648	WITHOUT_CLASSIFICATION	8.563182207351647E-4	DESIGN
if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999699930450001	WITHOUT_CLASSIFICATION	3.0006954999836563E-5	DESIGN
If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9997695800085221	WITHOUT_CLASSIFICATION	2.30419991477846E-4	DESIGN
new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9940908619217744	WITHOUT_CLASSIFICATION	0.00590913807822556	DESIGN
set to default thread group	WITHOUT_CLASSIFICATION	0.9991859386284647	WITHOUT_CLASSIFICATION	8.140613715352537E-4	DESIGN
set to default thread group	WITHOUT_CLASSIFICATION	0.9991859386284647	WITHOUT_CLASSIFICATION	8.140613715352537E-4	DESIGN
JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9958747813167935	WITHOUT_CLASSIFICATION	0.00412521868320648	DESIGN
JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9983765622689702	WITHOUT_CLASSIFICATION	0.0016234377310298932	DESIGN
for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9995487568743938	WITHOUT_CLASSIFICATION	4.5124312560609263E-4	DESIGN
JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9997369338744119	WITHOUT_CLASSIFICATION	2.6306612558819144E-4	DESIGN
MRI behavior: value given in seconds; converted to Float; less than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999861775960538	WITHOUT_CLASSIFICATION	1.3822403946227005E-5	DESIGN
If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999989588650259	WITHOUT_CLASSIFICATION	1.0411349741317677E-6	DESIGN
We need this loop in order to be able to "unblock" the join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999459005575677	WITHOUT_CLASSIFICATION	5.4099442432373423E-5	DESIGN
attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9998174942609682	WITHOUT_CLASSIFICATION	1.825057390318269E-4	DESIGN
not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9990532913671103	WITHOUT_CLASSIFICATION	9.46708632889833E-4	DESIGN
If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999887907529644	WITHOUT_CLASSIFICATION	1.1209247035508783E-5	DESIGN
check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999955436977803	WITHOUT_CLASSIFICATION	4.456302219701926E-6	DESIGN
check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999955436977803	WITHOUT_CLASSIFICATION	4.456302219701926E-6	DESIGN
ignore; I don't like doing it, but it seems like we really just need to make all channels non-blocking by default and use select when implementing blocking ops, so if this remains set non-blocking, perhaps it's not such a big deal...	WITHOUT_CLASSIFICATION	0.9980777389280584	DESIGN	0.0019222610719416308	WITHOUT_CLASSIFICATION
can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.997865248801314	WITHOUT_CLASSIFICATION	0.0021347511986859404	DESIGN
compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9988854242813543	WITHOUT_CLASSIFICATION	0.001114575718645644	DESIGN
Create Constants class	WITHOUT_CLASSIFICATION	0.9992634059631034	WITHOUT_CLASSIFICATION	7.365940368966121E-4	DESIGN
Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999722338570263	WITHOUT_CLASSIFICATION	2.776614297370278E-5	DESIGN
Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9957994362410059	WITHOUT_CLASSIFICATION	0.0042005637589941636	DESIGN
Create constants for flock	WITHOUT_CLASSIFICATION	0.9997978003244233	WITHOUT_CLASSIFICATION	2.0219967557667999E-4	DESIGN
File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9995891895377779	WITHOUT_CLASSIFICATION	4.1081046222213096E-4	DESIGN
Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999998151173766	WITHOUT_CLASSIFICATION	1.848826235013702E-7	DESIGN
null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999321272861262	WITHOUT_CLASSIFICATION	6.787271387381438E-5	DESIGN
Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9995910325107719	WITHOUT_CLASSIFICATION	4.089674892281241E-4	DESIGN
Special case for handling ACCMODE, since constantine will generate an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999941898331521	WITHOUT_CLASSIFICATION	5.810166847807634E-6	DESIGN
Return false here	WITHOUT_CLASSIFICATION	0.9988821605959928	WITHOUT_CLASSIFICATION	0.0011178394040071973	DESIGN
Return false here	WITHOUT_CLASSIFICATION	0.9988821605959928	WITHOUT_CLASSIFICATION	0.0011178394040071973	DESIGN
We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9504562189750969	WITHOUT_CLASSIFICATION	0.0495437810249031	DESIGN
Should we do anything?	WITHOUT_CLASSIFICATION	0.9666411874156858	WITHOUT_CLASSIFICATION	0.03335881258431407	DESIGN
File class methods	WITHOUT_CLASSIFICATION	0.9998147297074632	WITHOUT_CLASSIFICATION	1.8527029253679212E-4	DESIGN
MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.993682760583489	WITHOUT_CLASSIFICATION	0.0063172394165109304	DESIGN
strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9995859000217048	WITHOUT_CLASSIFICATION	4.140999782952967E-4	DESIGN
C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.997835301458967	WITHOUT_CLASSIFICATION	0.002164698541033005	DESIGN
-1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.999809753577635	WITHOUT_CLASSIFICATION	1.9024642236497194E-4	DESIGN
trim trailing slashes	WITHOUT_CLASSIFICATION	0.9983324099505781	WITHOUT_CLASSIFICATION	0.001667590049421907	DESIGN
Dot is not at beginning and not at end of filename.	WITHOUT_CLASSIFICATION	0.998086948347526	WITHOUT_CLASSIFICATION	0.0019130516524740362	DESIGN
Handle ~user paths	WITHOUT_CLASSIFICATION	0.9981312290979159	WITHOUT_CLASSIFICATION	0.0018687709020842108	DESIGN
compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9988854242813543	WITHOUT_CLASSIFICATION	0.001114575718645644	DESIGN
Include additional path separator (so that dirname of "C:\file.txt" is "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9975421561445648	WITHOUT_CLASSIFICATION	0.0024578438554351996	DESIGN
FNFException can be thrown in both cases, when the file is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9486842820030539	WITHOUT_CLASSIFICATION	0.0513157179969461	DESIGN
No directory delimeter. Rest of string is username	WITHOUT_CLASSIFICATION	0.9999839106091838	WITHOUT_CLASSIFICATION	1.6089390816147536E-5	DESIGN
If there's a second argument, it's the path to which the first argument is relative.	WITHOUT_CLASSIFICATION	0.9999918644924283	WITHOUT_CLASSIFICATION	8.13550757176513E-6	DESIGN
Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9994002596049759	WITHOUT_CLASSIFICATION	5.99740395024142E-4	DESIGN
If there's no second argument, simply use the working directory of the runtime.	WITHOUT_CLASSIFICATION	0.9998873704050456	WITHOUT_CLASSIFICATION	1.1262959495433883E-4	DESIGN
Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999429828516578	WITHOUT_CLASSIFICATION	5.7017148342081125E-5	DESIGN
Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.999771268163827	WITHOUT_CLASSIFICATION	2.2873183617295236E-4	DESIGN
Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999299408452488	WITHOUT_CLASSIFICATION	7.00591547513071E-5	DESIGN
'~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9997599389084023	WITHOUT_CLASSIFICATION	2.4006109159765697E-4	DESIGN
'~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9997599389084023	WITHOUT_CLASSIFICATION	2.4006109159765697E-4	DESIGN
Prepare a string with the same number of redundant slashes so that we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.7472618687791189	WITHOUT_CLASSIFICATION	0.2527381312208811	DESIGN
If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9997315521266167	WITHOUT_CLASSIFICATION	2.684478733833839E-4	DESIGN
no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999432361268514	WITHOUT_CLASSIFICATION	5.676387314848762E-5	DESIGN
we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.974516206644649	WITHOUT_CLASSIFICATION	0.025483793355351038	DESIGN
we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.999514196285226	WITHOUT_CLASSIFICATION	4.858037147739956E-4	DESIGN
do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9936793511804887	WITHOUT_CLASSIFICATION	0.006320648819511306	DESIGN
rb: check_modifiable	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
rb: readable	WITHOUT_CLASSIFICATION	0.9996099733947975	WITHOUT_CLASSIFICATION	3.900266052025327E-4	DESIGN
rename is successful	WITHOUT_CLASSIFICATION	0.981385078597782	WITHOUT_CLASSIFICATION	0.018614921402218064	DESIGN
rename via Java API call wasn't successful, let's try some tricks, similar to MRI	WITHOUT_CLASSIFICATION	0.9988313555227798	WITHOUT_CLASSIFICATION	0.0011686444772201685	DESIGN
try to rename one more time	WITHOUT_CLASSIFICATION	0.9655380057939891	WITHOUT_CLASSIFICATION	0.03446199420601088	DESIGN
Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9895341605735096	WITHOUT_CLASSIFICATION	0.010465839426490408	DESIGN
Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.999788293520478	WITHOUT_CLASSIFICATION	2.117064795219615E-4	DESIGN
RubyContinuation	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq) it doesn't initialize ifNone field	WITHOUT_CLASSIFICATION	0.9998326293478369	WITHOUT_CLASSIFICATION	1.673706521631589E-4	DESIGN
16 ?	WITHOUT_CLASSIFICATION	0.9994457357068056	WITHOUT_CLASSIFICATION	5.542642931942713E-4	DESIGN
generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.999628269046182	WITHOUT_CLASSIFICATION	3.7173095381804583E-4	DESIGN
size + 1;	WITHOUT_CLASSIFICATION	0.9993441159173748	WITHOUT_CLASSIFICATION	6.558840826251832E-4	DESIGN
suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9967420033690728	WITHOUT_CLASSIFICATION	0.00325799663092715	DESIGN
------------------------------	WITHOUT_CLASSIFICATION	0.9988213334470654	WITHOUT_CLASSIFICATION	0.0011786665529346762	DESIGN
------------------------------	WITHOUT_CLASSIFICATION	0.9988213334470654	WITHOUT_CLASSIFICATION	0.0011786665529346762	DESIGN
put implementation	WITHOUT_CLASSIFICATION	0.9994784735201603	WITHOUT_CLASSIFICATION	5.21526479839771E-4	DESIGN
get implementation	WITHOUT_CLASSIFICATION	0.9997771241323726	WITHOUT_CLASSIFICATION	2.2287586762733828E-4	DESIGN
specialized for value	WITHOUT_CLASSIFICATION	0.999558031505305	WITHOUT_CLASSIFICATION	4.4196849469500604E-4	DESIGN
delete implementation	WITHOUT_CLASSIFICATION	0.9997882257401072	WITHOUT_CLASSIFICATION	2.1177425989271932E-4	DESIGN
n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999695101934254	WITHOUT_CLASSIFICATION	3.0489806574673064E-5	DESIGN
============================ End of hash internals ============================	WITHOUT_CLASSIFICATION	0.9998747255564965	WITHOUT_CLASSIFICATION	1.2527444350356206E-4	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.999990021506658	WITHOUT_CLASSIFICATION	9.97849334193417E-6	DESIGN
update the hash value	WITHOUT_CLASSIFICATION	0.9999131989842834	WITHOUT_CLASSIFICATION	8.680101571655078E-5	DESIGN
other hash does not contain key	WITHOUT_CLASSIFICATION	0.9993624361578125	WITHOUT_CLASSIFICATION	6.375638421874418E-4	DESIGN
rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9994770761334543	WITHOUT_CLASSIFICATION	5.229238665457884E-4	DESIGN
Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9997810673137888	WITHOUT_CLASSIFICATION	2.1893268621126142E-4	DESIGN
remain where we are	WITHOUT_CLASSIFICATION	0.9972275939325178	WITHOUT_CLASSIFICATION	0.002772406067482279	DESIGN
We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999827025789855	WITHOUT_CLASSIFICATION	1.7297421014526048E-5	DESIGN
default: don't retain	WITHOUT_CLASSIFICATION	0.9994361596266836	WITHOUT_CLASSIFICATION	5.638403733163357E-4	DESIGN
once hasNext has been called, we commit to next() returning the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999231892673583	WITHOUT_CLASSIFICATION	7.681073264167128E-5	DESIGN
Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.992083594504987	WITHOUT_CLASSIFICATION	0.007916405495012983	DESIGN
We do both writable and writable_real through the same method because in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9981030041674875	WITHOUT_CLASSIFICATION	0.001896995832512498	DESIGN
first try as directory	WITHOUT_CLASSIFICATION	0.9999853437248039	WITHOUT_CLASSIFICATION	1.4656275196209506E-5	DESIGN
next as regular file	WITHOUT_CLASSIFICATION	0.9989392159170533	WITHOUT_CLASSIFICATION	0.0010607840829466992	DESIGN
We only want IO objects with valid streams (better to error now).	WITHOUT_CLASSIFICATION	0.99950766170245	WITHOUT_CLASSIFICATION	4.923382975500172E-4	DESIGN
NIO-based	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
NIO-based	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
Stream-based	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9967072894724063	WITHOUT_CLASSIFICATION	0.003292710527593844	DESIGN
We use FILE versus IO to match T_FILE in MRI.	WITHOUT_CLASSIFICATION	0.9992638067394609	WITHOUT_CLASSIFICATION	7.361932605390469E-4	DESIGN
Constants for seek	WITHOUT_CLASSIFICATION	0.9997529429880266	WITHOUT_CLASSIFICATION	2.470570119733637E-4	DESIGN
confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9962574885343636	WITHOUT_CLASSIFICATION	0.00374251146563641	DESIGN
check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999582285378639	WITHOUT_CLASSIFICATION	4.177146213612801E-5	DESIGN
dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9983740751815299	WITHOUT_CLASSIFICATION	0.0016259248184701143	DESIGN
re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9998434552086831	WITHOUT_CLASSIFICATION	1.5654479131689875E-4	DESIGN
re-register the descriptor	WITHOUT_CLASSIFICATION	0.9996446658533525	WITHOUT_CLASSIFICATION	3.5533414664743905E-4	DESIGN
since we're not actually duping the incoming channel into our handler, we need to copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9954424934768192	WITHOUT_CLASSIFICATION	0.0045575065231807715	DESIGN
re-register	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.999993937025009	WITHOUT_CLASSIFICATION	6.0629749910241276E-6	DESIGN
Ensure that separator is valid otherwise give it the default paragraph separator.	WITHOUT_CLASSIFICATION	0.9999958667951135	WITHOUT_CLASSIFICATION	4.133204886381001E-6	DESIGN
loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999963005634953	WITHOUT_CLASSIFICATION	3.699436504630061E-6	DESIGN
if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999200574243651	WITHOUT_CLASSIFICATION	7.994257563499486E-5	DESIGN
this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.7212905074987559	DESIGN	0.27870949250124394	WITHOUT_CLASSIFICATION
IO class methods.	WITHOUT_CLASSIFICATION	0.9987858879071846	WITHOUT_CLASSIFICATION	0.0012141120928154331	DESIGN
use original modes	WITHOUT_CLASSIFICATION	0.9987320847548465	WITHOUT_CLASSIFICATION	0.0012679152451534686	DESIGN
See if we already have this descriptor open. If so then we can mostly share the handler (keep open file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9998942464470274	WITHOUT_CLASSIFICATION	1.0575355297258759E-4	DESIGN
redundant, done above as well	WITHOUT_CLASSIFICATION	0.9988451308100006	WITHOUT_CLASSIFICATION	0.0011548691899994222	DESIGN
MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9994569527902863	WITHOUT_CLASSIFICATION	5.430472097136612E-4	DESIGN
-1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9807906579230201	WITHOUT_CLASSIFICATION	0.019209342076979816	DESIGN
isRetained=true	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
This appears to be some windows-only mode. On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.8476141215725476	WITHOUT_CLASSIFICATION	0.15238587842745233	DESIGN
if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9977662402079596	WITHOUT_CLASSIFICATION	0.0022337597920403978	DESIGN
Throw bad file descriptor is we can not read on supplied descriptor.	WITHOUT_CLASSIFICATION	0.9981341637237041	WITHOUT_CLASSIFICATION	0.0018658362762959998	DESIGN
Everything written	WITHOUT_CLASSIFICATION	0.9991867785793696	WITHOUT_CLASSIFICATION	8.132214206304437E-4	DESIGN
return len - n;	WITHOUT_CLASSIFICATION	0.9994733454933956	WITHOUT_CLASSIFICATION	5.266545066043567E-4	DESIGN
Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999623094670534	WITHOUT_CLASSIFICATION	3.7690532946569255E-5	DESIGN
Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.8956314294301757	WITHOUT_CLASSIFICATION	0.10436857056982428	DESIGN
Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9985354678929188	WITHOUT_CLASSIFICATION	0.0014645321070810946	DESIGN
Register the new descriptor	WITHOUT_CLASSIFICATION	0.9996090959268514	WITHOUT_CLASSIFICATION	3.9090407314863203E-4	DESIGN
cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9998085542534012	WITHOUT_CLASSIFICATION	1.9144574659883497E-4	DESIGN
hmmmm	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9982708888037001	WITHOUT_CLASSIFICATION	0.0017291111963000253	DESIGN
Do nothing. FD_CLOEXEC has no meaning in JVM since we cannot really exec. And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9994644606172373	WITHOUT_CLASSIFICATION	5.355393827626142E-4	DESIGN
Do nothing. FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999160281220066	WITHOUT_CLASSIFICATION	8.397187799336538E-5	DESIGN
Length to read	WITHOUT_CLASSIFICATION	0.9996777250780476	WITHOUT_CLASSIFICATION	3.222749219523823E-4	DESIGN
String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9973584885692298	WITHOUT_CLASSIFICATION	0.002641511430770235	DESIGN
cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9994602917194115	WITHOUT_CLASSIFICATION	5.397082805884844E-4	DESIGN
select until read is ready	WITHOUT_CLASSIFICATION	0.9998707951577033	WITHOUT_CLASSIFICATION	1.292048422967776E-4	DESIGN
ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9981037487410447	WITHOUT_CLASSIFICATION	0.0018962512589553238	DESIGN
buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9995494873865615	WITHOUT_CLASSIFICATION	4.5051261343852575E-4	DESIGN
READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9986371633408001	WITHOUT_CLASSIFICATION	0.0013628366591999256	DESIGN
rb: writable	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9986371633408001	WITHOUT_CLASSIFICATION	0.0013628366591999256	DESIGN
All errors to sysread should be SystemCallErrors, but on a closed stream Ruby returns an IOError. Java throws same exception for all errors so we resort to this hack...	WITHOUT_CLASSIFICATION	0.9841717147135086	DESIGN	0.01582828528649148	WITHOUT_CLASSIFICATION
TODO: read into buffer using all the fread logic int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9577051252083019	WITHOUT_CLASSIFICATION	0.04229487479169814	DESIGN
truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.999909980033805	WITHOUT_CLASSIFICATION	9.001996619496527E-5	DESIGN
TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.7139661061484416	DESIGN	0.2860338938515584	WITHOUT_CLASSIFICATION
class methods for IO	WITHOUT_CLASSIFICATION	0.998658399618488	WITHOUT_CLASSIFICATION	0.001341600381511918	DESIGN
save blocking state	WITHOUT_CLASSIFICATION	0.9996240672017338	WITHOUT_CLASSIFICATION	3.7593279826622113E-4	DESIGN
write	WITHOUT_CLASSIFICATION	0.9995051559726085	WITHOUT_CLASSIFICATION	4.948440273915238E-4	DESIGN
Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9924465510214566	WITHOUT_CLASSIFICATION	0.0075534489785433565	DESIGN
make all sockets blocking as configured again close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999997720058025	WITHOUT_CLASSIFICATION	2.2799419745873388E-7	DESIGN
FIXME: process options	WITHOUT_CLASSIFICATION	0.738026572641561	WITHOUT_CLASSIFICATION	0.261973427358439	DESIGN
Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.7995123460425958	WITHOUT_CLASSIFICATION	0.2004876539574042	DESIGN
NIO based pipe	WITHOUT_CLASSIFICATION	0.9992801272080818	WITHOUT_CLASSIFICATION	7.198727919181603E-4	DESIGN
not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9888191968786879	WITHOUT_CLASSIFICATION	0.011180803121312099	DESIGN
raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999817177990343	WITHOUT_CLASSIFICATION	1.8282200965718522E-5	DESIGN
may need to handle ENC_CODERANGE_BROKEN	WITHOUT_CLASSIFICATION	0.9738403649273998	WITHOUT_CLASSIFICATION	0.02615963507260017	DESIGN
TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.6844083733734688	DESIGN	0.3155916266265311	WITHOUT_CLASSIFICATION
If we know what method was being called, strip everything before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9942538514649479	WITHOUT_CLASSIFICATION	0.0057461485350520335	DESIGN
The class of this object	WITHOUT_CLASSIFICATION	0.9940886814740003	WITHOUT_CLASSIFICATION	0.005911318525999689	DESIGN
zeroed by jvm	WITHOUT_CLASSIFICATION	0.9997211436900791	WITHOUT_CLASSIFICATION	2.788563099208709E-4	DESIGN
objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9992896603773488	WITHOUT_CLASSIFICATION	7.103396226513182E-4	DESIGN
JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9241398158378342	WITHOUT_CLASSIFICATION	0.0758601841621657	DESIGN
rb_class_boot	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
6:tags 16:addr 1:eos	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9988157287080784	WITHOUT_CLASSIFICATION	0.0011842712919215147	DESIGN
for interface impls	WITHOUT_CLASSIFICATION	0.9996801571805896	WITHOUT_CLASSIFICATION	3.1984281941041846E-4	DESIGN
We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9509514783071631	WITHOUT_CLASSIFICATION	0.04904852169283694	DESIGN
Methods of the Object class (rb_obj_):	WITHOUT_CLASSIFICATION	0.9985025995420805	WITHOUT_CLASSIFICATION	0.001497400457919472	DESIGN
can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9977982523767871	WITHOUT_CLASSIFICATION	0.002201747623212824	DESIGN
include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9665922845039787	WITHOUT_CLASSIFICATION	0.03340771549602137	DESIGN
Equivalent of Data_Get_Struct This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9996381416759368	WITHOUT_CLASSIFICATION	3.618583240631909E-4	DESIGN
COMMON VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.998763856133498	WITHOUT_CLASSIFICATION	0.001236143866502003	DESIGN
INTERNAL VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9988682160405041	WITHOUT_CLASSIFICATION	0.0011317839594958557	DESIGN
INSTANCE VARIABLE API METHODS	WITHOUT_CLASSIFICATION	0.9965026451931835	WITHOUT_CLASSIFICATION	0.003497354806816387	DESIGN
Struct methods	WITHOUT_CLASSIFICATION	0.9995178451342488	WITHOUT_CLASSIFICATION	4.82154865751162E-4	DESIGN
runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9996770071010121	WITHOUT_CLASSIFICATION	3.2299289898789023E-4	DESIGN
define access methods.	WITHOUT_CLASSIFICATION	0.9993404427198233	WITHOUT_CLASSIFICATION	6.595572801767706E-4	DESIGN
if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9903338855622783	WITHOUT_CLASSIFICATION	0.009666114437721786	DESIGN
Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.6652954088062155	WITHOUT_CLASSIFICATION	0.3347045911937844	DESIGN
For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999388587872492	WITHOUT_CLASSIFICATION	6.114121275076543E-5	DESIGN
OBJ_INFECT	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
These call assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9996311314030165	WITHOUT_CLASSIFICATION	3.688685969834703E-4	DESIGN
Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9986051128075676	WITHOUT_CLASSIFICATION	0.0013948871924323405	DESIGN
@param nv number of times to cycle or -1 to cycle indefinitely	WITHOUT_CLASSIFICATION	0.9879421434743931	WITHOUT_CLASSIFICATION	0.012057856525606751	DESIGN
Atomic ?	WITHOUT_CLASSIFICATION	0.9990020330778671	WITHOUT_CLASSIFICATION	9.979669221329163E-4	DESIGN
Atomic ?	WITHOUT_CLASSIFICATION	0.9990020330778671	WITHOUT_CLASSIFICATION	9.979669221329163E-4	DESIGN
MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.893324219361771	WITHOUT_CLASSIFICATION	0.10667578063822905	DESIGN
superClass may be null.	WITHOUT_CLASSIFICATION	0.986313296351502	WITHOUT_CLASSIFICATION	0.013686703648498093	DESIGN
Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.8962414504893161	WITHOUT_CLASSIFICATION	0.10375854951068395	DESIGN
ClassId is the name of the class/module sans where it is located. If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999886076901054	WITHOUT_CLASSIFICATION	1.1392309894420799E-5	DESIGN
ClassProviders return Java class/module (in #defineOrGetClassUnder and #defineOrGetModuleUnder) when class/module is opened using colon syntax.	WITHOUT_CLASSIFICATION	0.999960779002866	WITHOUT_CLASSIFICATION	3.922099713405233E-5	DESIGN
update superclass reference	WITHOUT_CLASSIFICATION	0.9998497076183428	WITHOUT_CLASSIFICATION	1.5029238165730846E-4	DESIGN
Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9964892856657406	WITHOUT_CLASSIFICATION	0.0035107143342594043	DESIGN
MRI checks all types first:	WITHOUT_CLASSIFICATION	0.998796509105509	WITHOUT_CLASSIFICATION	0.0012034908944909834	DESIGN
we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9868921598177965	WITHOUT_CLASSIFICATION	0.013107840182203427	DESIGN
module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9998151016058868	WITHOUT_CLASSIFICATION	1.848983941130687E-4	DESIGN
See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999213815916074	WITHOUT_CLASSIFICATION	7.861840839264743E-5	DESIGN
We can safely reference methods here instead of doing getMethods() since if we are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9986668535015651	WITHOUT_CLASSIFICATION	0.0013331464984347539	DESIGN
we grab serial number first; the worst that will happen is we cache a later update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9798929840452788	WITHOUT_CLASSIFICATION	0.020107015954721207	DESIGN
update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9993758334198948	WITHOUT_CLASSIFICATION	6.241665801052736E-4	DESIGN
This method is intended only for defining new classes in Ruby code, so it uses the allocator of the specified superclass or default to the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.6030439359097712	WITHOUT_CLASSIFICATION	0.3969560640902287	DESIGN
need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9988052577940237	WITHOUT_CLASSIFICATION	0.0011947422059762828	DESIGN
superClazz = null;	WITHOUT_CLASSIFICATION	0.9994227490525005	WITHOUT_CLASSIFICATION	5.772509474994973E-4	DESIGN
reopen a java class	WITHOUT_CLASSIFICATION	0.9895693888622985	WITHOUT_CLASSIFICATION	0.01043061113770147	DESIGN
This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9976191066136842	WITHOUT_CLASSIFICATION	0.0023808933863157574	DESIGN
reopen a java module	WITHOUT_CLASSIFICATION	0.9879236127610135	WITHOUT_CLASSIFICATION	0.01207638723898646	DESIGN
FIXME warning	WITHOUT_CLASSIFICATION	0.7166346470013486	WITHOUT_CLASSIFICATION	0.28336535299865134	DESIGN
FIXME warning	WITHOUT_CLASSIFICATION	0.7166346470013486	WITHOUT_CLASSIFICATION	0.28336535299865134	DESIGN
a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9989338792278795	WITHOUT_CLASSIFICATION	0.001066120772120613	DESIGN
for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.999098776784066	WITHOUT_CLASSIFICATION	9.012232159340997E-4	DESIGN
just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9961455736396262	WITHOUT_CLASSIFICATION	0.003854426360373941	DESIGN
class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.6191010934158443	WITHOUT_CLASSIFICATION	0.38089890658415576	DESIGN
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.8860625225057566	WITHOUT_CLASSIFICATION	0.11393747749424345	DESIGN
MRI error message says Class, even though Module is ok	WITHOUT_CLASSIFICATION	0.9977534343664286	WITHOUT_CLASSIFICATION	0.0022465656335713185	DESIGN
scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9994570307637942	WITHOUT_CLASSIFICATION	5.429692362057017E-4	DESIGN
Module class methods	WITHOUT_CLASSIFICATION	0.9987769568520917	WITHOUT_CLASSIFICATION	0.0012230431479083668	DESIGN
Note: we change current frames visibility here because the methods which call this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9988945709790054	DESIGN	0.001105429020994693	WITHOUT_CLASSIFICATION
next in hierarchy is an included version of the module we're attempting, so we skip including it	WITHOUT_CLASSIFICATION	0.9999912459479756	WITHOUT_CLASSIFICATION	8.754052024375157E-6	DESIGN
if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9998077354027184	WITHOUT_CLASSIFICATION	1.9226459728158388E-4	DESIGN
build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9997212546205557	WITHOUT_CLASSIFICATION	2.787453794443668E-4	DESIGN
if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9995256437770428	WITHOUT_CLASSIFICATION	4.743562229571949E-4	DESIGN
if there's a non-null superclass, we're including into a normal class hierarchy; update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9998235296532798	WITHOUT_CLASSIFICATION	1.7647034672022924E-4	DESIGN
CLASS VARIABLE RUBY METHODS	WITHOUT_CLASSIFICATION	0.9987938566663578	WITHOUT_CLASSIFICATION	0.0012061433336421398	DESIGN
CONSTANT RUBY METHODS	WITHOUT_CLASSIFICATION	0.9988682160405041	WITHOUT_CLASSIFICATION	0.0011317839594958557	DESIGN
Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.8633649432333561	DESIGN	0.1366350567666439	WITHOUT_CLASSIFICATION
CLASS VARIABLE API METHODS	WITHOUT_CLASSIFICATION	0.9962734452121454	WITHOUT_CLASSIFICATION	0.003726554787854502	DESIGN
Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9992058938810263	WITHOUT_CLASSIFICATION	7.941061189736304E-4	DESIGN
not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9991876785120883	WITHOUT_CLASSIFICATION	8.123214879116652E-4	DESIGN
Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.7514994088711067	DESIGN	0.24850059112889342	WITHOUT_CLASSIFICATION
if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9998488676747143	WITHOUT_CLASSIFICATION	1.5113232528563575E-4	DESIGN
Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9949531536938025	WITHOUT_CLASSIFICATION	0.00504684630619739	DESIGN
returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9997992869839658	WITHOUT_CLASSIFICATION	2.0071301603418203E-4	DESIGN
removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999198939295056	WITHOUT_CLASSIFICATION	8.010607049438416E-5	DESIGN
we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.8240820065240563	WITHOUT_CLASSIFICATION	0.17591799347594367	DESIGN
reopen	WITHOUT_CLASSIFICATION	0.9995330595251506	WITHOUT_CLASSIFICATION	4.669404748494325E-4	DESIGN
ARGF methods	WITHOUT_CLASSIFICATION	0.9995178451342488	WITHOUT_CLASSIFICATION	4.82154865751162E-4	DESIGN
data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9992896603773488	WITHOUT_CLASSIFICATION	7.103396226513182E-4	DESIGN
one optional, one required args	WITHOUT_CLASSIFICATION	0.9998521775706253	WITHOUT_CLASSIFICATION	1.478224293747044E-4	DESIGN
one optional and no required args	WITHOUT_CLASSIFICATION	0.9999545548411382	WITHOUT_CLASSIFICATION	4.54451588617892E-5	DESIGN
try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9997133470703807	WITHOUT_CLASSIFICATION	2.8665292961923525E-4	DESIGN
we got a valid errno value	WITHOUT_CLASSIFICATION	0.9998992453749203	WITHOUT_CLASSIFICATION	1.007546250796979E-4	DESIGN
Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9963070044034364	WITHOUT_CLASSIFICATION	0.00369299559656351	DESIGN
print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9978694472520101	WITHOUT_CLASSIFICATION	0.0021305527479898944	DESIGN
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.8258473062108473	WITHOUT_CLASSIFICATION	0.17415269378915274	DESIGN
set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9987918075340476	WITHOUT_CLASSIFICATION	0.0012081924659524301	DESIGN
can't set TC classloader	WITHOUT_CLASSIFICATION	0.9919750359458478	WITHOUT_CLASSIFICATION	0.008024964054152166	DESIGN
no script to run, return success below	WITHOUT_CLASSIFICATION	0.9998795282500396	WITHOUT_CLASSIFICATION	1.2047174996045762E-4	DESIGN
Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9998963547228759	WITHOUT_CLASSIFICATION	1.0364527712419927E-4	DESIGN
Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9997812340757862	WITHOUT_CLASSIFICATION	2.1876592421364385E-4	DESIGN
Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999120102336478	WITHOUT_CLASSIFICATION	8.798976635212488E-5	DESIGN
ignore error	WITHOUT_CLASSIFICATION	0.9995772131907245	WITHOUT_CLASSIFICATION	4.227868092755438E-4	DESIGN
COMMON CONSTANT / CVAR METHODS	WITHOUT_CLASSIFICATION	0.9992781652466162	WITHOUT_CLASSIFICATION	7.218347533839188E-4	DESIGN
INTERNAL MODULE VARIABLE API METHODS	WITHOUT_CLASSIFICATION	0.9979003001911688	WITHOUT_CLASSIFICATION	0.0020996998088311306	DESIGN
LOW-LEVEL CONSTANT INTERFACE fetch/store/list constants for this module	WITHOUT_CLASSIFICATION	0.9935129324973149	WITHOUT_CLASSIFICATION	0.0064870675026850975	DESIGN
odd	WITHOUT_CLASSIFICATION	0.999465833055187	WITHOUT_CLASSIFICATION	5.341669448129789E-4	DESIGN
JRubyClient	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
x = mantissa 2 exponent Where mantissa is in the range of [.5, 1)	WITHOUT_CLASSIFICATION	0.9999920023009039	WITHOUT_CLASSIFICATION	7.997699096150144E-6	DESIGN
Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9998745397719676	WITHOUT_CLASSIFICATION	1.2546022803242428E-4	DESIGN
Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9993086927624175	WITHOUT_CLASSIFICATION	6.913072375825554E-4	DESIGN
r = x 2 y	WITHOUT_CLASSIFICATION	0.9999858944291561	WITHOUT_CLASSIFICATION	1.4105570843948764E-5	DESIGN
0!	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
1!	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
2!	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
3!	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
4!	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
5!	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
6!	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
7!	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
8!	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
9!	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
11!	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
12!	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
13!	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
15!	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
16!	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
17!	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
19!	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
20!	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
21!	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
Static constants	WITHOUT_CLASSIFICATION	0.9997080266858658	WITHOUT_CLASSIFICATION	2.9197331413424163E-4	DESIGN
Clean-up string representation so that it could be understood by Java's BigDecimal. Not terribly efficient for now. 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9919067728727283	WITHOUT_CLASSIFICATION	0.00809322712727178	DESIGN
2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9993466419401594	WITHOUT_CLASSIFICATION	6.533580598406037E-4	DESIGN
3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9992787662637335	WITHOUT_CLASSIFICATION	7.212337362666749E-4	DESIGN
MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9981840787643571	WITHOUT_CLASSIFICATION	0.0018159212356428378	DESIGN
Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.99985975561342	WITHOUT_CLASSIFICATION	1.402443865800455E-4	DESIGN
Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999706545387225	WITHOUT_CLASSIFICATION	2.9345461277495805E-5	DESIGN
Note: MRI has a very non-trivial way of calculating the precision, so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.8541393153445914	DESIGN	0.14586068465540866	WITHOUT_CLASSIFICATION
Iteration variables, for the square root x and the reciprocal v initial x: x0 ~ sqrt() initial v: v0 = 1/(2x)	WITHOUT_CLASSIFICATION	0.9999971872474687	WITHOUT_CLASSIFICATION	2.8127525314445685E-6	DESIGN
it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9928282610439544	WITHOUT_CLASSIFICATION	0.007171738956045623	DESIGN
TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9885227291715741	DESIGN	0.011477270828425909	WITHOUT_CLASSIFICATION
integer division	WITHOUT_CLASSIFICATION	0.9995858654320584	WITHOUT_CLASSIFICATION	4.14134567941611E-4	DESIGN
MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999853206401165	WITHOUT_CLASSIFICATION	1.4679359883450077E-5	DESIGN
rounding neccessary	WITHOUT_CLASSIFICATION	0.9994931867619486	WITHOUT_CLASSIFICATION	5.068132380513968E-4	DESIGN
rounding neccessary	WITHOUT_CLASSIFICATION	0.9994931867619486	WITHOUT_CLASSIFICATION	5.068132380513968E-4	DESIGN
Java and MRI definitions of divmod are different.	WITHOUT_CLASSIFICATION	0.99985975561342	WITHOUT_CLASSIFICATION	1.402443865800455E-4	DESIGN
JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.850818883654557	WITHOUT_CLASSIFICATION	0.14918111634544293	DESIGN
shift the decimal point just to the right of the digit to be rounded to (divide by 10(abs(scale))) -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9998090002017244	WITHOUT_CLASSIFICATION	1.9099979827561097E-4	DESIGN
...round to that digit	WITHOUT_CLASSIFICATION	0.9990251959836631	WITHOUT_CLASSIFICATION	9.748040163369527E-4	DESIGN
...and shift the result back to the left (multiply by 10(abs(scale)))	WITHOUT_CLASSIFICATION	0.9994152891217949	WITHOUT_CLASSIFICATION	5.847108782050652E-4	DESIGN
this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9953682750768564	WITHOUT_CLASSIFICATION	0.004631724923143622	DESIGN
sign	WITHOUT_CLASSIFICATION	0.9994769338099492	WITHOUT_CLASSIFICATION	5.230661900507782E-4	DESIGN
significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999342617946043	WITHOUT_CLASSIFICATION	6.573820539564296E-5	DESIGN
normalize the value	WITHOUT_CLASSIFICATION	0.9998567457666523	WITHOUT_CLASSIFICATION	1.432542333477402E-4	DESIGN
base	WITHOUT_CLASSIFICATION	0.9997921555906536	WITHOUT_CLASSIFICATION	2.0784440934645856E-4	DESIGN
NOTE: MRI's sqrt precision is limited by 100, but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9987580968848118	WITHOUT_CLASSIFICATION	0.0012419031151881545	DESIGN
just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9954704816293822	WITHOUT_CLASSIFICATION	0.0045295183706177975	DESIGN
eh?!	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9954202614291393	WITHOUT_CLASSIFICATION	0.004579738570860633	DESIGN
General number and precision checking	WITHOUT_CLASSIFICATION	0.9346965464716533	WITHOUT_CLASSIFICATION	0.06530345352834672	DESIGN
the requested precision	WITHOUT_CLASSIFICATION	0.999835192192745	WITHOUT_CLASSIFICATION	1.648078072550551E-4	DESIGN
Proc class	WITHOUT_CLASSIFICATION	0.9986168051136257	WITHOUT_CLASSIFICATION	0.001383194886374265	DESIGN
.append(" -x[directory] strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9964921621399324	WITHOUT_CLASSIFICATION	0.0035078378600675625	DESIGN
even shift.. ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9932966916134013	WITHOUT_CLASSIFICATION	0.0067033083865988075	DESIGN
5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9997050688818699	WITHOUT_CLASSIFICATION	2.949311181300788E-4	DESIGN
..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999791846512222	WITHOUT_CLASSIFICATION	2.08153487778341E-5	DESIGN
Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9997760328128192	WITHOUT_CLASSIFICATION	2.239671871806601E-4	DESIGN
x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9995274733690738	WITHOUT_CLASSIFICATION	4.725266309261758E-4	DESIGN
for prec 15 root x0 must surely be OK return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999979778876968	WITHOUT_CLASSIFICATION	2.022112303164915E-6	DESIGN
Initial v - the reciprocal v0 = 1/(2x)	WITHOUT_CLASSIFICATION	0.9996401527894083	WITHOUT_CLASSIFICATION	3.598472105916703E-4	DESIGN
Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9994512111369238	WITHOUT_CLASSIFICATION	5.487888630761202E-4	DESIGN
assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9998805935778902	WITHOUT_CLASSIFICATION	1.1940642210989473E-4	DESIGN
The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999729084130413	WITHOUT_CLASSIFICATION	2.7091586958763794E-5	DESIGN
Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9986307697979648	WITHOUT_CLASSIFICATION	0.0013692302020352504	DESIGN
Next x e = d - x^2	WITHOUT_CLASSIFICATION	0.9999382916754266	WITHOUT_CLASSIFICATION	6.170832457341984E-5	DESIGN
x += ev ~ sqrt()	WITHOUT_CLASSIFICATION	0.9997059902888905	WITHOUT_CLASSIFICATION	2.9400971110943476E-4	DESIGN
root x is ready!	WITHOUT_CLASSIFICATION	0.9996711734861532	WITHOUT_CLASSIFICATION	3.288265138468752E-4	DESIGN
Next v g = 1 - 2xv	WITHOUT_CLASSIFICATION	0.9999420138845863	WITHOUT_CLASSIFICATION	5.7986115413762264E-5	DESIGN
v += gv ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9995109642299286	WITHOUT_CLASSIFICATION	4.89035770071361E-4	DESIGN
RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
c: bind_eval	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
================ Module Methods ================	WITHOUT_CLASSIFICATION	0.9985714844945284	WITHOUT_CLASSIFICATION	0.0014285155054716279	DESIGN
from CommandlineParser	WITHOUT_CLASSIFICATION	0.9986371633408001	WITHOUT_CLASSIFICATION	0.0013628366591999256	DESIGN
This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9969475389063052	WITHOUT_CLASSIFICATION	0.003052461093694848	DESIGN
default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999324511358068	WITHOUT_CLASSIFICATION	6.754886419327574E-5	DESIGN
Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9520940032647809	WITHOUT_CLASSIFICATION	0.04790599673521903	DESIGN
Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9942141372386822	WITHOUT_CLASSIFICATION	0.0057858627613178015	DESIGN
try the normal property first	WITHOUT_CLASSIFICATION	0.9999345094956972	WITHOUT_CLASSIFICATION	6.549050430293075E-5	DESIGN
verify it if it's there	WITHOUT_CLASSIFICATION	0.9997997273195108	WITHOUT_CLASSIFICATION	2.0027268048926754E-4	DESIGN
verify it if it's there	WITHOUT_CLASSIFICATION	0.9997997273195108	WITHOUT_CLASSIFICATION	2.0027268048926754E-4	DESIGN
try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9939317227009514	WITHOUT_CLASSIFICATION	0.006068277299048497	DESIGN
otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999623760604741	WITHOUT_CLASSIFICATION	3.762393952582152E-5	DESIGN
We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9940359221265931	WITHOUT_CLASSIFICATION	0.005964077873406882	DESIGN
consume the file name	WITHOUT_CLASSIFICATION	0.9992471918969693	WITHOUT_CLASSIFICATION	7.528081030307056E-4	DESIGN
Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9986701775644895	WITHOUT_CLASSIFICATION	0.0013298224355104444	DESIGN
try cwd first	WITHOUT_CLASSIFICATION	0.9999444894242315	WITHOUT_CLASSIFICATION	5.551057576847915E-5	DESIGN
ruby interpreter compatibilty Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9986804499281551	WITHOUT_CLASSIFICATION	0.0013195500718448832	DESIGN
KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.7842647295948135	DESIGN	0.21573527040518645	WITHOUT_CLASSIFICATION
@JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9998000887679748	WITHOUT_CLASSIFICATION	1.9991123202519847E-4	DESIGN
@JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9996665963211444	WITHOUT_CLASSIFICATION	3.3340367885553105E-4	DESIGN
@JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9998000887679748	WITHOUT_CLASSIFICATION	1.9991123202519847E-4	DESIGN
symbol string must be interned	WITHOUT_CLASSIFICATION	0.9991025711842374	WITHOUT_CLASSIFICATION	8.97428815762744E-4	DESIGN
assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9262990366685324	WITHOUT_CLASSIFICATION	0.07370096333146757	DESIGN
Symbol class methods.	WITHOUT_CLASSIFICATION	0.9979201279416778	WITHOUT_CLASSIFICATION	0.0020798720583220867	DESIGN
TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.6844083733734688	DESIGN	0.3155916266265311	WITHOUT_CLASSIFICATION
This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9823022967140279	WITHOUT_CLASSIFICATION	0.017697703285972182	DESIGN
we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.998642602951345	WITHOUT_CLASSIFICATION	0.0013573970486551068	DESIGN
must be power of 2!	WITHOUT_CLASSIFICATION	0.9989917964629959	WITHOUT_CLASSIFICATION	0.0010082035370041396	DESIGN
note all fields are final -- rehash creates new entries when necessary. as documented in java.util.concurrent.ConcurrentHashMap.java, that will statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999748070830206	WITHOUT_CLASSIFICATION	2.5192916979492167E-5	DESIGN
assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9262990366685324	WITHOUT_CLASSIFICATION	0.07370096333146757	DESIGN
try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999837827822383	WITHOUT_CLASSIFICATION	1.6217217761616062E-5	DESIGN
try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999837827822383	WITHOUT_CLASSIFICATION	1.6217217761616062E-5	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9995848104558225	WITHOUT_CLASSIFICATION	4.151895441774949E-4	DESIGN
Single node on list	WITHOUT_CLASSIFICATION	0.9999170290089952	WITHOUT_CLASSIFICATION	8.297099100493243E-5	DESIGN
Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9984310793470159	WITHOUT_CLASSIFICATION	0.0015689206529841066	DESIGN
Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9998616084888753	WITHOUT_CLASSIFICATION	1.3839151112468348E-4	DESIGN
Check the length every iteration, since the block can modify this string.	WITHOUT_CLASSIFICATION	0.9967583424256756	WITHOUT_CLASSIFICATION	0.0032416575743243682	DESIGN
we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9971808387559034	WITHOUT_CLASSIFICATION	0.002819161244096666	DESIGN
not so backwards-compatible here, but no one should have been calling this anyway.	WITHOUT_CLASSIFICATION	0.9938998206175387	WITHOUT_CLASSIFICATION	0.006100179382461337	DESIGN
Profile	WITHOUT_CLASSIFICATION	0.9995258156057272	WITHOUT_CLASSIFICATION	4.741843942727558E-4	DESIGN
static private final String TRANSLIT = "translit";	WITHOUT_CLASSIFICATION	0.999261388848102	WITHOUT_CLASSIFICATION	7.386111518979081E-4	DESIGN
treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999853115860877	WITHOUT_CLASSIFICATION	1.4688413912238006E-5	DESIGN
invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9991611610105737	WITHOUT_CLASSIFICATION	8.388389894263857E-4	DESIGN
Methods of the Nil Class (nil_):	WITHOUT_CLASSIFICATION	0.9996216964426313	WITHOUT_CLASSIFICATION	3.7830355736872455E-4	DESIGN
Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999982635021145	WITHOUT_CLASSIFICATION	1.7364978855103724E-6	DESIGN
Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9940718832898484	WITHOUT_CLASSIFICATION	0.0059281167101515615	DESIGN
must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9997440435768589	WITHOUT_CLASSIFICATION	2.5595642314110473E-4	DESIGN
reset the state	WITHOUT_CLASSIFICATION	0.9998776068998272	WITHOUT_CLASSIFICATION	1.223931001727919E-4	DESIGN
Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9969903617162108	WITHOUT_CLASSIFICATION	0.003009638283789295	DESIGN
rb_match_busy	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
str is frozen	WITHOUT_CLASSIFICATION	0.9994102284563706	WITHOUT_CLASSIFICATION	5.897715436294051E-4	DESIGN
MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9988522474417914	WITHOUT_CLASSIFICATION	0.0011477525582086789	DESIGN
JRubyServer	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9893747650497012	WITHOUT_CLASSIFICATION	0.010625234950298802	DESIGN
boot the Object class	WITHOUT_CLASSIFICATION	0.9986887216699974	WITHOUT_CLASSIFICATION	0.0013112783300025972	DESIGN
Methods of the Object class (rb_obj_):	WITHOUT_CLASSIFICATION	0.9985025995420805	WITHOUT_CLASSIFICATION	0.001497400457919472	DESIGN
update superclass reference	WITHOUT_CLASSIFICATION	0.9998497076183428	WITHOUT_CLASSIFICATION	1.5029238165730846E-4	DESIGN
undo check	WITHOUT_CLASSIFICATION	0.9999262979553236	WITHOUT_CLASSIFICATION	7.370204467647341E-5	DESIGN
This is a non-standard method; have we decided to start extending Ruby? classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9867578354386453	WITHOUT_CLASSIFICATION	0.013242164561354774	DESIGN
boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999016628150478	WITHOUT_CLASSIFICATION	9.833718495230714E-5	DESIGN
this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9972911119927046	WITHOUT_CLASSIFICATION	0.002708888007295415	DESIGN
use parent's marshal	WITHOUT_CLASSIFICATION	0.9982489134140415	WITHOUT_CLASSIFICATION	0.0017510865859585428	DESIGN
use parent's marshal	WITHOUT_CLASSIFICATION	0.9982489134140415	WITHOUT_CLASSIFICATION	0.0017510865859585428	DESIGN
could be pulled down to RubyClass in future rb_class_boot	WITHOUT_CLASSIFICATION	0.9468806045487131	WITHOUT_CLASSIFICATION	0.05311939545128687	DESIGN
remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9996959992368467	WITHOUT_CLASSIFICATION	3.04000763153298E-4	DESIGN
add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999128645642106	WITHOUT_CLASSIFICATION	8.7135435789397E-5	DESIGN
update all subclasses	WITHOUT_CLASSIFICATION	0.9998168069969243	WITHOUT_CLASSIFICATION	1.8319300307581795E-4	DESIGN
fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9991049233344054	WITHOUT_CLASSIFICATION	8.95076665594655E-4	DESIGN
static initializing method	WITHOUT_CLASSIFICATION	0.9666767505007743	WITHOUT_CLASSIFICATION	0.03332324949922571	DESIGN
standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9995944716063796	WITHOUT_CLASSIFICATION	4.0552839362038856E-4	DESIGN
no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9975332609953764	WITHOUT_CLASSIFICATION	0.0024667390046235974	DESIGN
non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9988307958758605	WITHOUT_CLASSIFICATION	0.0011692041241394314	DESIGN
indices for temp values	WITHOUT_CLASSIFICATION	0.9998130013509101	WITHOUT_CLASSIFICATION	1.8699864908989437E-4	DESIGN
self method name	WITHOUT_CLASSIFICATION	0.9993097753512848	WITHOUT_CLASSIFICATION	6.902246487152609E-4	DESIGN
the default allocator	WITHOUT_CLASSIFICATION	0.9997598012238426	WITHOUT_CLASSIFICATION	2.4019877615728672E-4	DESIGN
Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9995458005884396	WITHOUT_CLASSIFICATION	4.5419941156050006E-4	DESIGN
do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9982042821623466	WITHOUT_CLASSIFICATION	0.0017957178376533918	DESIGN
Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999611376799754	WITHOUT_CLASSIFICATION	3.886232002445716E-5	DESIGN
================ Singleton Methods ================	WITHOUT_CLASSIFICATION	0.9888046557301753	WITHOUT_CLASSIFICATION	0.01119534426982466	DESIGN
Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.925181952379178	WITHOUT_CLASSIFICATION	0.074818047620822	DESIGN
Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999750595372319	WITHOUT_CLASSIFICATION	2.4940462768220034E-5	DESIGN
MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999468661212424	WITHOUT_CLASSIFICATION	5.3133878757602195E-5	DESIGN
NOTE: Serialization is primarily supported for testing purposes, and there is no general guarantee that serialization will work correctly. Specifically, instance variables pointing at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999959633035825	WITHOUT_CLASSIFICATION	4.03669641743753E-6	DESIGN
write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9995327901964489	WITHOUT_CLASSIFICATION	4.672098035509976E-4	DESIGN
rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9993122747424202	WITHOUT_CLASSIFICATION	6.877252575796482E-4	DESIGN
0x3fff_ffff -0x4000_0000	WITHOUT_CLASSIFICATION	0.9988157287080784	WITHOUT_CLASSIFICATION	0.0011842712919215147	DESIGN
a gotcha	WITHOUT_CLASSIFICATION	0.9989870085979459	WITHOUT_CLASSIFICATION	0.001012991402054067	DESIGN
Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9998008260121489	WITHOUT_CLASSIFICATION	1.9917398785107075E-4	DESIGN
A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999359193899614	WITHOUT_CLASSIFICATION	6.40806100385732E-5	DESIGN
Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9988952064703017	WITHOUT_CLASSIFICATION	0.0011047935296982958	DESIGN
Java Doubles are 64 bit long:	WITHOUT_CLASSIFICATION	0.9950850098781038	WITHOUT_CLASSIFICATION	0.004914990121896224	DESIGN
Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999611376799754	WITHOUT_CLASSIFICATION	3.886232002445716E-5	DESIGN
don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9997188491959089	WITHOUT_CLASSIFICATION	2.8115080409110623E-4	DESIGN
Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9996483197793564	WITHOUT_CLASSIFICATION	3.5168022064357486E-4	DESIGN
MRI behavior:	WITHOUT_CLASSIFICATION	0.9995215508725281	WITHOUT_CLASSIFICATION	4.7844912747183396E-4	DESIGN
Numeric.equal	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
provider is not available	WITHOUT_CLASSIFICATION	0.9878838840606436	WITHOUT_CLASSIFICATION	0.012116115939356298	DESIGN
bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9965192271673948	WITHOUT_CLASSIFICATION	0.003480772832605197	DESIGN
fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9992323569618834	WITHOUT_CLASSIFICATION	7.67643038116564E-4	DESIGN
RubyDigest	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.8892482920898044	WITHOUT_CLASSIFICATION	0.11075170791019566	DESIGN
synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9998276973835623	WITHOUT_CLASSIFICATION	1.7230261643786453E-4	DESIGN
we only add live threads	WITHOUT_CLASSIFICATION	0.9997865464770673	WITHOUT_CLASSIFICATION	2.1345352293260396E-4	DESIGN
use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.99995707482468	WITHOUT_CLASSIFICATION	4.2925175320044554E-5	DESIGN
handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9998937971084221	WITHOUT_CLASSIFICATION	1.0620289157790799E-4	DESIGN
JRubyService	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
while	WITHOUT_CLASSIFICATION	0.9994683562440143	WITHOUT_CLASSIFICATION	5.316437559856458E-4	DESIGN
\OOO	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
CRuby uses sprintf(buf, "%.g", FLOAT_DIG, d); This pattern adjusts the output of String.pattern("%g") to mimic the C version.	WITHOUT_CLASSIFICATION	0.9981876769638235	WITHOUT_CLASSIFICATION	0.0018123230361766012	DESIGN
mask off "once" flag	WITHOUT_CLASSIFICATION	0.9996081505848469	WITHOUT_CLASSIFICATION	3.9184941515307397E-4	DESIGN
used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9958031080606652	WITHOUT_CLASSIFICATION	0.004196891939334888	DESIGN
internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9994318259735012	WITHOUT_CLASSIFICATION	5.681740264988975E-4	DESIGN
silent ?	WITHOUT_CLASSIFICATION	0.9984953064977105	WITHOUT_CLASSIFICATION	0.0015046935022895488	DESIGN
\xHH	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
\M-X, \M-\C-X, \M-\cX	WITHOUT_CLASSIFICATION	0.9988157287080784	WITHOUT_CLASSIFICATION	0.0011842712919215147	DESIGN
\C-X, \C-\M-X	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
\cX, \c\M-X	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
\O, \OO, \OOO or backref	WITHOUT_CLASSIFICATION	0.9994198302612308	WITHOUT_CLASSIFICATION	5.801697387693014E-4	DESIGN
MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9993298504173537	WITHOUT_CLASSIFICATION	6.701495826463631E-4	DESIGN
Surrogates	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
do not load the class if not used	WITHOUT_CLASSIFICATION	0.8014027945410966	WITHOUT_CLASSIFICATION	0.1985972054589033	DESIGN
\0, \0O, \0OO	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
\xHH	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
\C-X, \C-\M-X	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
\M-X, \M-\C-X, \M-\cX	WITHOUT_CLASSIFICATION	0.9988157287080784	WITHOUT_CLASSIFICATION	0.0011842712919215147	DESIGN
\\u{H HH HHH HHHH HHHHH HHHHHH ...}	WITHOUT_CLASSIFICATION	0.9992896603773488	WITHOUT_CLASSIFICATION	7.103396226513182E-4	DESIGN
\\uHHHH	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
\p{Hiragana}	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
inner switch	WITHOUT_CLASSIFICATION	0.9988496824488137	WITHOUT_CLASSIFICATION	0.0011503175511864015	DESIGN
newInstance here	WITHOUT_CLASSIFICATION	0.9980865534462162	WITHOUT_CLASSIFICATION	0.0019134465537837483	DESIGN
rb_reg_raise	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
rb_reg_desc	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9988157287080784	WITHOUT_CLASSIFICATION	0.0011842712919215147	DESIGN
rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9988157287080784	WITHOUT_CLASSIFICATION	0.0011842712919215147	DESIGN
rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999432661621992	WITHOUT_CLASSIFICATION	5.673383780076376E-5	DESIGN
rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
option_to_str	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
Don't initialize with class Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9996889835836706	WITHOUT_CLASSIFICATION	3.110164163294235E-4	DESIGN
args should be before block	WITHOUT_CLASSIFICATION	0.990644472431539	WITHOUT_CLASSIFICATION	0.009355527568461053	DESIGN
args should be at end	WITHOUT_CLASSIFICATION	0.9799674740235579	WITHOUT_CLASSIFICATION	0.020032525976442086	DESIGN
minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9979909962924947	WITHOUT_CLASSIFICATION	0.0020090037075053404	DESIGN
minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9979909962924947	WITHOUT_CLASSIFICATION	0.0020090037075053404	DESIGN
skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999166971892273	WITHOUT_CLASSIFICATION	8.330281077277208E-5	DESIGN
start a new populator	WITHOUT_CLASSIFICATION	0.9982068363024332	WITHOUT_CLASSIFICATION	0.0017931636975667658	DESIGN
check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999375111407305	WITHOUT_CLASSIFICATION	6.248885926959935E-5	DESIGN
add all names for this annotation	WITHOUT_CLASSIFICATION	0.996675294977634	WITHOUT_CLASSIFICATION	0.003324705022366053	DESIGN
no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9998984886938329	WITHOUT_CLASSIFICATION	1.0151130616710737E-4	DESIGN
write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.999811020960701	WITHOUT_CLASSIFICATION	1.8897903929905303E-4	DESIGN
single method, use normal logic	WITHOUT_CLASSIFICATION	0.9997182854617779	WITHOUT_CLASSIFICATION	2.8171453822213474E-4	DESIGN
multimethod, new logic	WITHOUT_CLASSIFICATION	0.9990800358064893	WITHOUT_CLASSIFICATION	9.199641935105622E-4	DESIGN
declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9932850565173647	WITHOUT_CLASSIFICATION	0.006714943482635257	DESIGN
inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9932649010699547	WITHOUT_CLASSIFICATION	0.006735098930045344	DESIGN
RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9998000887679748	WITHOUT_CLASSIFICATION	1.9991123202519847E-4	DESIGN
}	WITHOUT_CLASSIFICATION	0.9992786852731409	WITHOUT_CLASSIFICATION	7.213147268590074E-4	DESIGN
fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9991105071059405	WITHOUT_CLASSIFICATION	8.894928940594828E-4	DESIGN
refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9993665760207668	WITHOUT_CLASSIFICATION	6.33423979233091E-4	DESIGN
If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9989104149808214	WITHOUT_CLASSIFICATION	0.0010895850191786033	DESIGN
attribute set.	WITHOUT_CLASSIFICATION	0.9999380314861183	WITHOUT_CLASSIFICATION	6.196851388164972E-5	DESIGN
element set	WITHOUT_CLASSIFICATION	0.9992496707082976	WITHOUT_CLASSIFICATION	7.503292917024302E-4	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.997159606032176	WITHOUT_CLASSIFICATION	0.0028403939678240293	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.997159606032176	WITHOUT_CLASSIFICATION	0.0028403939678240293	DESIGN
colon3	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
Colon3	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9965547206489301	WITHOUT_CLASSIFICATION	0.003445279351069919	DESIGN
For b.foo	WITHOUT_CLASSIFICATION	0.9997789577610803	WITHOUT_CLASSIFICATION	2.210422389196915E-4	DESIGN
instance config for the script run	WITHOUT_CLASSIFICATION	0.9950414437035444	WITHOUT_CLASSIFICATION	0.0049585562964556094	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.997159606032176	WITHOUT_CLASSIFICATION	0.0028403939678240293	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.997159606032176	WITHOUT_CLASSIFICATION	0.0028403939678240293	DESIGN
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999273348909012	WITHOUT_CLASSIFICATION	7.266510909880578E-5	DESIGN
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999273348909012	WITHOUT_CLASSIFICATION	7.266510909880578E-5	DESIGN
RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9994117040190394	WITHOUT_CLASSIFICATION	5.882959809605111E-4	DESIGN
For 'b.foo'	WITHOUT_CLASSIFICATION	0.9998026546819243	WITHOUT_CLASSIFICATION	1.9734531807564962E-4	DESIGN
We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9837942941436306	WITHOUT_CLASSIFICATION	0.016205705856369306	DESIGN
something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.7814888564525486	WITHOUT_CLASSIFICATION	0.2185111435474514	DESIGN
Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9996472145456813	WITHOUT_CLASSIFICATION	3.5278545431867853E-4	DESIGN
Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9996472145456813	WITHOUT_CLASSIFICATION	3.5278545431867853E-4	DESIGN
do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9986193728526226	WITHOUT_CLASSIFICATION	0.0013806271473774815	DESIGN
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.996209767084489	WITHOUT_CLASSIFICATION	0.0037902329155108543	DESIGN
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998639418697098	WITHOUT_CLASSIFICATION	1.3605813029011614E-4	DESIGN
never visited, should be fine	WITHOUT_CLASSIFICATION	0.9718447937040828	WITHOUT_CLASSIFICATION	0.028155206295917175	DESIGN
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999273348909012	WITHOUT_CLASSIFICATION	7.266510909880578E-5	DESIGN
The name of the variable	WITHOUT_CLASSIFICATION	0.999135708851863	WITHOUT_CLASSIFICATION	8.642911481369638E-4	DESIGN
If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9940665723818382	WITHOUT_CLASSIFICATION	0.005933427618161865	DESIGN
Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9992884273254073	WITHOUT_CLASSIFICATION	7.115726745926168E-4	DESIGN
Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9970029257500412	WITHOUT_CLASSIFICATION	0.002997074249958831	DESIGN
no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9997201375091677	WITHOUT_CLASSIFICATION	2.7986249083230706E-4	DESIGN
optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9890862727606557	WITHOUT_CLASSIFICATION	0.010913727239344242	DESIGN
arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9992896603773488	WITHOUT_CLASSIFICATION	7.103396226513182E-4	DESIGN
no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9987821049962747	WITHOUT_CLASSIFICATION	0.00121789500372533	DESIGN
set argv from main's args	WITHOUT_CLASSIFICATION	0.9987222117047154	WITHOUT_CLASSIFICATION	0.0012777882952845821	DESIGN
attribute set.	WITHOUT_CLASSIFICATION	0.9999380314861183	WITHOUT_CLASSIFICATION	6.196851388164972E-5	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.997159606032176	WITHOUT_CLASSIFICATION	0.0028403939678240293	DESIGN
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999273348909012	WITHOUT_CLASSIFICATION	7.266510909880578E-5	DESIGN
The name of the variable	WITHOUT_CLASSIFICATION	0.999135708851863	WITHOUT_CLASSIFICATION	8.642911481369638E-4	DESIGN
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9342769582110086	WITHOUT_CLASSIFICATION	0.06572304178899137	DESIGN
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9342769582110086	WITHOUT_CLASSIFICATION	0.06572304178899137	DESIGN
block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.7885144028072716	WITHOUT_CLASSIFICATION	0.2114855971927283	DESIGN
assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.999857021024536	WITHOUT_CLASSIFICATION	1.429789754639553E-4	DESIGN
in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9917663140878298	WITHOUT_CLASSIFICATION	0.008233685912170281	DESIGN
assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999589052153044	WITHOUT_CLASSIFICATION	4.1094784695683556E-5	DESIGN
Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9933393152496675	WITHOUT_CLASSIFICATION	0.006660684750332571	DESIGN
Experimental class reification support, to create real Java classes for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999211810577767	WITHOUT_CLASSIFICATION	7.881894222325508E-5	DESIGN
This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9981381708765824	WITHOUT_CLASSIFICATION	0.0018618291234174826	DESIGN
Make a nil node if no body. Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9875878220796841	WITHOUT_CLASSIFICATION	0.012412177920315917	DESIGN
'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9991774234513296	WITHOUT_CLASSIFICATION	8.22576548670421E-4	DESIGN
now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9545871756662178	WITHOUT_CLASSIFICATION	0.045412824333782145	DESIGN
never visited, should be ok	WITHOUT_CLASSIFICATION	0.9588709536824715	WITHOUT_CLASSIFICATION	0.04112904631752852	DESIGN
If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999899689395337	WITHOUT_CLASSIFICATION	1.003106046632234E-5	DESIGN
JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999773400472772	WITHOUT_CLASSIFICATION	2.265995272276746E-5	DESIGN
element set	WITHOUT_CLASSIFICATION	0.9992496707082976	WITHOUT_CLASSIFICATION	7.503292917024302E-4	DESIGN
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999273348909012	WITHOUT_CLASSIFICATION	7.266510909880578E-5	DESIGN
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.996209767084489	WITHOUT_CLASSIFICATION	0.0037902329155108543	DESIGN
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998639418697098	WITHOUT_CLASSIFICATION	1.3605813029011614E-4	DESIGN
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998639418697098	WITHOUT_CLASSIFICATION	1.3605813029011614E-4	DESIGN
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999273348909012	WITHOUT_CLASSIFICATION	7.266510909880578E-5	DESIGN
The name of the variable	WITHOUT_CLASSIFICATION	0.999135708851863	WITHOUT_CLASSIFICATION	8.642911481369638E-4	DESIGN
The name of the variable	WITHOUT_CLASSIFICATION	0.999135708851863	WITHOUT_CLASSIFICATION	8.642911481369638E-4	DESIGN
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9342769582110086	WITHOUT_CLASSIFICATION	0.06572304178899137	DESIGN
Empirical Observations: null -> Some arity argsNode == this.argsNode then check for arity changes newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9997880260066873	WITHOUT_CLASSIFICATION	2.1197399331281239E-4	DESIGN
assert !(value instanceof RubyArray) : "Not an array";	WITHOUT_CLASSIFICATION	0.9781835174676822	WITHOUT_CLASSIFICATION	0.021816482532317893	DESIGN
Serialization killed our dynamic scope. We can just create an empty one since serialization cannot serialize an eval (which is the only thing which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999970306851005	WITHOUT_CLASSIFICATION	2.9693148995016045E-6	DESIGN
Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9967933180747066	WITHOUT_CLASSIFICATION	0.003206681925293433	DESIGN
We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9477100044939317	WITHOUT_CLASSIFICATION	0.0522899955060682	DESIGN
assert thenBody != null : "thenBody is not null"; assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9884629011907277	WITHOUT_CLASSIFICATION	0.011537098809272317	DESIGN
add in reverse order	WITHOUT_CLASSIFICATION	0.9998517642833283	WITHOUT_CLASSIFICATION	1.4823571667163223E-4	DESIGN
in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9998567080809173	WITHOUT_CLASSIFICATION	1.4329191908262281E-4	DESIGN
ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9996036621806388	WITHOUT_CLASSIFICATION	3.963378193611834E-4	DESIGN
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.996209767084489	WITHOUT_CLASSIFICATION	0.0037902329155108543	DESIGN
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998639418697098	WITHOUT_CLASSIFICATION	1.3605813029011614E-4	DESIGN
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998639418697098	WITHOUT_CLASSIFICATION	1.3605813029011614E-4	DESIGN
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999273348909012	WITHOUT_CLASSIFICATION	7.266510909880578E-5	DESIGN
Make a nil node if no body. Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9875878220796841	WITHOUT_CLASSIFICATION	0.012412177920315917	DESIGN
now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9545871756662178	WITHOUT_CLASSIFICATION	0.045412824333782145	DESIGN
No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9999802538469172	WITHOUT_CLASSIFICATION	1.9746153082814884E-5	DESIGN
save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999972450732085	WITHOUT_CLASSIFICATION	2.7549267915079262E-6	DESIGN
For 'foo'	WITHOUT_CLASSIFICATION	0.9997802731217756	WITHOUT_CLASSIFICATION	2.1972687822441065E-4	DESIGN
For 'foo'	WITHOUT_CLASSIFICATION	0.9997802731217756	WITHOUT_CLASSIFICATION	2.1972687822441065E-4	DESIGN
admittedly inefficient	WITHOUT_CLASSIFICATION	0.9818597378095513	WITHOUT_CLASSIFICATION	0.018140262190448772	DESIGN
JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9997842955795561	WITHOUT_CLASSIFICATION	2.1570442044394284E-4	DESIGN
What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9923293092133794	WITHOUT_CLASSIFICATION	0.007670690786620585	DESIGN
let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9979942219368895	WITHOUT_CLASSIFICATION	0.0020057780631105777	DESIGN
just rethrow	WITHOUT_CLASSIFICATION	0.9996931695361417	WITHOUT_CLASSIFICATION	3.068304638582625E-4	DESIGN
just rethrow	WITHOUT_CLASSIFICATION	0.9996931695361417	WITHOUT_CLASSIFICATION	3.068304638582625E-4	DESIGN
clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9996365406296838	WITHOUT_CLASSIFICATION	3.6345937031627044E-4	DESIGN
clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9996365406296838	WITHOUT_CLASSIFICATION	3.6345937031627044E-4	DESIGN
no takers; bubble up	WITHOUT_CLASSIFICATION	0.9996854333236346	WITHOUT_CLASSIFICATION	3.145666763653936E-4	DESIGN
no takers; bubble up	WITHOUT_CLASSIFICATION	0.9996854333236346	WITHOUT_CLASSIFICATION	3.145666763653936E-4	DESIGN
Execute rescue block	WITHOUT_CLASSIFICATION	0.9996077461935686	WITHOUT_CLASSIFICATION	3.9225380643133654E-4	DESIGN
If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999069310860343	WITHOUT_CLASSIFICATION	9.306891396558527E-5	DESIGN
index of variable for this arg	WITHOUT_CLASSIFICATION	0.9885899790509501	WITHOUT_CLASSIFICATION	0.011410020949049903	DESIGN
only a marker interface	WITHOUT_CLASSIFICATION	0.9993847762616175	WITHOUT_CLASSIFICATION	6.152237383825601E-4	DESIGN
don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.99958663945999	WITHOUT_CLASSIFICATION	4.133605400099957E-4	DESIGN
pragmas	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9951168191305421	WITHOUT_CLASSIFICATION	0.004883180869457951	DESIGN
We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9897101905696871	WITHOUT_CLASSIFICATION	0.010289809430312897	DESIGN
The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9979009368684987	WITHOUT_CLASSIFICATION	0.002099063131501367	DESIGN
The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9561958099461042	WITHOUT_CLASSIFICATION	0.0438041900538958	DESIGN
Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9982710350029632	WITHOUT_CLASSIFICATION	0.0017289649970368339	DESIGN
check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9738363583421988	WITHOUT_CLASSIFICATION	0.02616364165780109	DESIGN
long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9960280417165612	WITHOUT_CLASSIFICATION	0.003971958283438772	DESIGN
ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9993763228647908	WITHOUT_CLASSIFICATION	6.236771352092338E-4	DESIGN
ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9993763228647908	WITHOUT_CLASSIFICATION	6.236771352092338E-4	DESIGN
long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9989746861918485	WITHOUT_CLASSIFICATION	0.0010253138081514766	DESIGN
we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9971808387559034	WITHOUT_CLASSIFICATION	0.002819161244096666	DESIGN
Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9676292142173198	WITHOUT_CLASSIFICATION	0.03237078578268005	DESIGN
encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9972074206388477	WITHOUT_CLASSIFICATION	0.0027925793611523427	DESIGN
only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9964514408995864	WITHOUT_CLASSIFICATION	0.003548559100413714	DESIGN
otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9988614976963031	WITHOUT_CLASSIFICATION	0.001138502303696948	DESIGN
use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9950393704585807	WITHOUT_CLASSIFICATION	0.004960629541419316	DESIGN
unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999889797587567	WITHOUT_CLASSIFICATION	1.1020241243406217E-5	DESIGN
compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999835686634815	WITHOUT_CLASSIFICATION	1.643133651860255E-5	DESIGN
last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999971818743402	WITHOUT_CLASSIFICATION	2.8181256596914624E-6	DESIGN
compile first node only	WITHOUT_CLASSIFICATION	0.9998689809418382	WITHOUT_CLASSIFICATION	1.3101905816185295E-4	DESIGN
splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9986802196470147	WITHOUT_CLASSIFICATION	0.001319780352985291	DESIGN
if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9980217675994937	WITHOUT_CLASSIFICATION	0.001978232400506395	DESIGN
NOTE: Currently this optimization is limited to the following situations: All expressions must be int-ranged literal fixnums It also still emits the code for the "safe" when logic, which is rather wasteful (since it essentially doubles each code body). As such it is normally disabled, but it serves as an example of how this optimization could be done. Ideally, it should be combined with the when processing to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.5293123059127315	DESIGN	0.47068769408726846	WITHOUT_CLASSIFICATION
aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9975049425186474	WITHOUT_CLASSIFICATION	0.00249505748135255	DESIGN
one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9992149638915295	WITHOUT_CLASSIFICATION	7.850361084704698E-4	DESIGN
can't do it	WITHOUT_CLASSIFICATION	0.9994601276421816	WITHOUT_CLASSIFICATION	5.398723578184774E-4	DESIGN
otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9997743399461219	WITHOUT_CLASSIFICATION	2.2566005387807708E-4	DESIGN
colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9990374471222886	WITHOUT_CLASSIFICATION	9.625528777114112E-4	DESIGN
colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9990374471222886	WITHOUT_CLASSIFICATION	9.625528777114112E-4	DESIGN
these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9994163404072307	WITHOUT_CLASSIFICATION	5.836595927692469E-4	DESIGN
[IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass] [IRubyObject]	WITHOUT_CLASSIFICATION	0.9992896603773488	WITHOUT_CLASSIFICATION	7.103396226513182E-4	DESIGN
[]	WITHOUT_CLASSIFICATION	0.9991317910938933	WITHOUT_CLASSIFICATION	8.682089061067564E-4	DESIGN
[]	WITHOUT_CLASSIFICATION	0.9991317910938933	WITHOUT_CLASSIFICATION	8.682089061067564E-4	DESIGN
context.swapValues(); context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9992896603773488	WITHOUT_CLASSIFICATION	7.103396226513182E-4	DESIGN
[RubyClass] [RubyClass, RubyClass] [RubyClass] [] [self] [RubyClass] [RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9988692216230424	WITHOUT_CLASSIFICATION	0.0011307783769576108	DESIGN
[RubyClass]	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
[RubyClass] [RubyClass, RubyClass] [RubyClass] []	WITHOUT_CLASSIFICATION	0.9988692216230424	WITHOUT_CLASSIFICATION	0.0011307783769576108	DESIGN
if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.999327106102905	WITHOUT_CLASSIFICATION	6.728938970950333E-4	DESIGN
inspect body and args	WITHOUT_CLASSIFICATION	0.9998427012143394	WITHOUT_CLASSIFICATION	1.572987856605136E-4	DESIGN
inspect body and args	WITHOUT_CLASSIFICATION	0.9998427012143394	WITHOUT_CLASSIFICATION	1.572987856605136E-4	DESIGN
check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.999787461369618	WITHOUT_CLASSIFICATION	2.125386303819544E-4	DESIGN
if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9996378046116442	WITHOUT_CLASSIFICATION	3.621953883557269E-4	DESIGN
invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9983612498758416	WITHOUT_CLASSIFICATION	0.0016387501241583332	DESIGN
[IRubyObject] [IRubyObject, IRubyObject] [IRubyObject, RubyClass] [IRubyObject, RubyClass, RubyClass] [IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9992896603773488	WITHOUT_CLASSIFICATION	7.103396226513182E-4	DESIGN
[IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass] [IRubyObject]	WITHOUT_CLASSIFICATION	0.9992896603773488	WITHOUT_CLASSIFICATION	7.103396226513182E-4	DESIGN
[RubyClass] []	WITHOUT_CLASSIFICATION	0.9992248139797183	WITHOUT_CLASSIFICATION	7.751860202815933E-4	DESIGN
[String] [String, String] [String] [String, RubyClass] [String, RubyClass, RubyClass] [String, RubyClass]	WITHOUT_CLASSIFICATION	0.9992896603773488	WITHOUT_CLASSIFICATION	7.103396226513182E-4	DESIGN
[String] [String, String] [String] [String, RubyClass] [String, RubyClass, RubyClass] [String, RubyClass]	WITHOUT_CLASSIFICATION	0.9992896603773488	WITHOUT_CLASSIFICATION	7.103396226513182E-4	DESIGN
no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9993728787793668	WITHOUT_CLASSIFICATION	6.271212206331799E-4	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998879316417331	WITHOUT_CLASSIFICATION	1.1206835826696503E-4	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998879316417331	WITHOUT_CLASSIFICATION	1.1206835826696503E-4	DESIGN
not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.999787691611599	WITHOUT_CLASSIFICATION	2.123083884009141E-4	DESIGN
not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.999787691611599	WITHOUT_CLASSIFICATION	2.123083884009141E-4	DESIGN
not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.999787691611599	WITHOUT_CLASSIFICATION	2.123083884009141E-4	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998879316417331	WITHOUT_CLASSIFICATION	1.1206835826696503E-4	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998879316417331	WITHOUT_CLASSIFICATION	1.1206835826696503E-4	DESIGN
no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9993728787793668	WITHOUT_CLASSIFICATION	6.271212206331799E-4	DESIGN
force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9987564744971065	WITHOUT_CLASSIFICATION	0.0012435255028934668	DESIGN
always false or nil	WITHOUT_CLASSIFICATION	0.9998664219100779	WITHOUT_CLASSIFICATION	1.335780899221027E-4	DESIGN
optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9998924287278627	WITHOUT_CLASSIFICATION	1.075712721373332E-4	DESIGN
normal	WITHOUT_CLASSIFICATION	0.9998386869131014	WITHOUT_CLASSIFICATION	1.6131308689873396E-4	DESIGN
compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9997625658149822	WITHOUT_CLASSIFICATION	2.3743418501782912E-4	DESIGN
need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9989988740652433	WITHOUT_CLASSIFICATION	0.0010011259347566083	DESIGN
just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9996733130616512	WITHOUT_CLASSIFICATION	3.2668693834881344E-4	DESIGN
"assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9998829038836445	WITHOUT_CLASSIFICATION	1.1709611635535995E-4	DESIGN
compile first node only	WITHOUT_CLASSIFICATION	0.9998689809418382	WITHOUT_CLASSIFICATION	1.3101905816185295E-4	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998879316417331	WITHOUT_CLASSIFICATION	1.1206835826696503E-4	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998879316417331	WITHOUT_CLASSIFICATION	1.1206835826696503E-4	DESIGN
eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9997509066651713	WITHOUT_CLASSIFICATION	2.490933348287459E-4	DESIGN
try optz version	WITHOUT_CLASSIFICATION	0.9999033508636832	WITHOUT_CLASSIFICATION	9.664913631681316E-5	DESIGN
sizes must match	WITHOUT_CLASSIFICATION	0.999891800683151	WITHOUT_CLASSIFICATION	1.0819931684897364E-4	DESIGN
expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999792597879726	WITHOUT_CLASSIFICATION	2.0740212027291047E-5	DESIGN
normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9997261864861886	WITHOUT_CLASSIFICATION	2.738135138113685E-4	DESIGN
head must not be null and there must be no "args" (like arg)	WITHOUT_CLASSIFICATION	0.998381714790826	WITHOUT_CLASSIFICATION	0.0016182852091740018	DESIGN
"head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9995934521029979	WITHOUT_CLASSIFICATION	4.065478970021961E-4	DESIGN
only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999243711828333	WITHOUT_CLASSIFICATION	7.56288171666815E-5	DESIGN
perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999628163470516	WITHOUT_CLASSIFICATION	3.718365294829573E-5	DESIGN
if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9987989490289695	WITHOUT_CLASSIFICATION	0.0012010509710304823	DESIGN
RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9998000887679748	WITHOUT_CLASSIFICATION	1.9991123202519847E-4	DESIGN
done processing args	WITHOUT_CLASSIFICATION	0.9995165309281278	WITHOUT_CLASSIFICATION	4.834690718722115E-4	DESIGN
all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9998545326438536	WITHOUT_CLASSIFICATION	1.4546735614642562E-4	DESIGN
assign to appropriate variable	WITHOUT_CLASSIFICATION	0.994186095795492	WITHOUT_CLASSIFICATION	0.005813904204507932	DESIGN
if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9998761441214716	WITHOUT_CLASSIFICATION	1.2385587852837085E-4	DESIGN
[recv]	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
[recv]	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
[recv]	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
compile into array	WITHOUT_CLASSIFICATION	0.9972053516670927	WITHOUT_CLASSIFICATION	0.002794648332907315	DESIGN
compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999818264347341	WITHOUT_CLASSIFICATION	1.8173565265935094E-5	DESIGN
check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999917012833437	WITHOUT_CLASSIFICATION	8.298716656205824E-6	DESIGN
condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9874157224947816	WITHOUT_CLASSIFICATION	0.012584277505218358	DESIGN
force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9970053356397581	WITHOUT_CLASSIFICATION	0.002994664360241831	DESIGN
create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9994257937630113	WITHOUT_CLASSIFICATION	5.742062369886012E-4	DESIGN
it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.999504643061472	WITHOUT_CLASSIFICATION	4.953569385280664E-4	DESIGN
send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9994084368064807	WITHOUT_CLASSIFICATION	5.91563193519319E-4	DESIGN
single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9996632909618781	WITHOUT_CLASSIFICATION	3.367090381218845E-4	DESIGN
leave as a normal array	WITHOUT_CLASSIFICATION	0.9996216811339607	WITHOUT_CLASSIFICATION	3.783188660392797E-4	DESIGN
This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.980502604601525	WITHOUT_CLASSIFICATION	0.01949739539847488	DESIGN
The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.7693200866948272	WITHOUT_CLASSIFICATION	0.23067991330517293	DESIGN
check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.999787461369618	WITHOUT_CLASSIFICATION	2.125386303819544E-4	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998879316417331	WITHOUT_CLASSIFICATION	1.1206835826696503E-4	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998879316417331	WITHOUT_CLASSIFICATION	1.1206835826696503E-4	DESIGN
no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9993728787793668	WITHOUT_CLASSIFICATION	6.271212206331799E-4	DESIGN
need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9989988740652433	WITHOUT_CLASSIFICATION	0.0010011259347566083	DESIGN
try optz version	WITHOUT_CLASSIFICATION	0.9999033508636832	WITHOUT_CLASSIFICATION	9.664913631681316E-5	DESIGN
expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999792597879726	WITHOUT_CLASSIFICATION	2.0740212027291047E-5	DESIGN
head must not be null and there must be no "args" (like arg)	WITHOUT_CLASSIFICATION	0.998381714790826	WITHOUT_CLASSIFICATION	0.0016182852091740018	DESIGN
sizes must match	WITHOUT_CLASSIFICATION	0.999891800683151	WITHOUT_CLASSIFICATION	1.0819931684897364E-4	DESIGN
"head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9995934521029979	WITHOUT_CLASSIFICATION	4.065478970021961E-4	DESIGN
if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9987989490289695	WITHOUT_CLASSIFICATION	0.0012010509710304823	DESIGN
perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999628163470516	WITHOUT_CLASSIFICATION	3.718365294829573E-5	DESIGN
done processing args	WITHOUT_CLASSIFICATION	0.9995165309281278	WITHOUT_CLASSIFICATION	4.834690718722115E-4	DESIGN
Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9996818609181279	WITHOUT_CLASSIFICATION	3.1813908187207845E-4	DESIGN
class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.7169837747637113	WITHOUT_CLASSIFICATION	0.28301622523628867	DESIGN
successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9997667483388912	WITHOUT_CLASSIFICATION	2.3325166110866116E-4	DESIGN
finally, grab the script	WITHOUT_CLASSIFICATION	0.9995357946536624	WITHOUT_CLASSIFICATION	4.6420534633759123E-4	DESIGN
logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9954809989801647	WITHOUT_CLASSIFICATION	0.004519001019835298	DESIGN
Time the compilation	WITHOUT_CLASSIFICATION	0.9990547550931569	WITHOUT_CLASSIFICATION	9.452449068430809E-4	DESIGN
we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9988211531668195	WITHOUT_CLASSIFICATION	0.0011788468331805021	DESIGN
If we don't have a body, check for required or opt args if opt args, they could have side effects if required args, need to raise errors if too few args passed otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9999558037552259	WITHOUT_CLASSIFICATION	4.419624477407013E-5	DESIGN
if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.998620233417016	WITHOUT_CLASSIFICATION	0.0013797665829839048	DESIGN
only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9997827044368754	WITHOUT_CLASSIFICATION	2.1729556312452346E-4	DESIGN
normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999118544333718	WITHOUT_CLASSIFICATION	8.814556662811397E-5	DESIGN
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.978019049440648	WITHOUT_CLASSIFICATION	0.021980950559352	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9985672529346583	WITHOUT_CLASSIFICATION	0.0014327470653416488	DESIGN
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9473283279401294	WITHOUT_CLASSIFICATION	0.052671672059870604	DESIGN
return last value from execution	WITHOUT_CLASSIFICATION	0.9998799542131165	WITHOUT_CLASSIFICATION	1.2004578688350464E-4	DESIGN
end of variable scope	WITHOUT_CLASSIFICATION	0.9963623510608313	WITHOUT_CLASSIFICATION	0.003637648939168808	DESIGN
method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9992822843419296	WITHOUT_CLASSIFICATION	7.177156580704026E-4	DESIGN
Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9995256688308272	WITHOUT_CLASSIFICATION	4.743311691728028E-4	DESIGN
check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999360249455683	WITHOUT_CLASSIFICATION	6.397505443174439E-5	DESIGN
load block from [] version of method	WITHOUT_CLASSIFICATION	0.9991866832717958	WITHOUT_CLASSIFICATION	8.133167282042005E-4	DESIGN
normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999062343541147	WITHOUT_CLASSIFICATION	9.376564588532108E-5	DESIGN
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9991804915666919	WITHOUT_CLASSIFICATION	8.195084333080674E-4	DESIGN
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9991804915666919	WITHOUT_CLASSIFICATION	8.195084333080674E-4	DESIGN
value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9979525010596623	WITHOUT_CLASSIFICATION	0.002047498940337754	DESIGN
receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9968887585802223	WITHOUT_CLASSIFICATION	0.003111241419777724	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9997191098486099	WITHOUT_CLASSIFICATION	2.808901513900452E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9997191098486099	WITHOUT_CLASSIFICATION	2.808901513900452E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9997191098486099	WITHOUT_CLASSIFICATION	2.808901513900452E-4	DESIGN
self	WITHOUT_CLASSIFICATION	0.999565863348071	WITHOUT_CLASSIFICATION	4.341366519291143E-4	DESIGN
self	WITHOUT_CLASSIFICATION	0.999565863348071	WITHOUT_CLASSIFICATION	4.341366519291143E-4	DESIGN
self	WITHOUT_CLASSIFICATION	0.999565863348071	WITHOUT_CLASSIFICATION	4.341366519291143E-4	DESIGN
self	WITHOUT_CLASSIFICATION	0.999565863348071	WITHOUT_CLASSIFICATION	4.341366519291143E-4	DESIGN
arg0	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
arg0	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
arg0	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
arg1	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
arg1	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
arg2	WITHOUT_CLASSIFICATION	0.9994616648309151	WITHOUT_CLASSIFICATION	5.383351690848452E-4	DESIGN
args	WITHOUT_CLASSIFICATION	0.999701869616358	WITHOUT_CLASSIFICATION	2.9813038364195156E-4	DESIGN
receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9968887585802223	WITHOUT_CLASSIFICATION	0.003111241419777724	DESIGN
select appropriate call site dup receiver load self	WITHOUT_CLASSIFICATION	0.9985970593904776	WITHOUT_CLASSIFICATION	0.0014029406095223801	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9997191098486099	WITHOUT_CLASSIFICATION	2.808901513900452E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9997191098486099	WITHOUT_CLASSIFICATION	2.808901513900452E-4	DESIGN
self	WITHOUT_CLASSIFICATION	0.999565863348071	WITHOUT_CLASSIFICATION	4.341366519291143E-4	DESIGN
self	WITHOUT_CLASSIFICATION	0.999565863348071	WITHOUT_CLASSIFICATION	4.341366519291143E-4	DESIGN
self	WITHOUT_CLASSIFICATION	0.999565863348071	WITHOUT_CLASSIFICATION	4.341366519291143E-4	DESIGN
arg0	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
arg0	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
arg1	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
args	WITHOUT_CLASSIFICATION	0.999701869616358	WITHOUT_CLASSIFICATION	2.9813038364195156E-4	DESIGN
get call site and thread context	WITHOUT_CLASSIFICATION	0.9992970066179419	WITHOUT_CLASSIFICATION	7.02993382058181E-4	DESIGN
get call site and thread context	WITHOUT_CLASSIFICATION	0.9992970066179419	WITHOUT_CLASSIFICATION	7.02993382058181E-4	DESIGN
evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9998571779092622	WITHOUT_CLASSIFICATION	1.4282209073778856E-4	DESIGN
evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9998571779092622	WITHOUT_CLASSIFICATION	1.4282209073778856E-4	DESIGN
invoke	WITHOUT_CLASSIFICATION	0.9997266395395565	WITHOUT_CLASSIFICATION	2.7336046044336665E-4	DESIGN
invoke	WITHOUT_CLASSIFICATION	0.9997266395395565	WITHOUT_CLASSIFICATION	2.7336046044336665E-4	DESIGN
check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.999909407157822	WITHOUT_CLASSIFICATION	9.059284217802418E-5	DESIGN
not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9977677169427508	WITHOUT_CLASSIFICATION	0.0022322830572491536	DESIGN
not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9977677169427508	WITHOUT_CLASSIFICATION	0.0022322830572491536	DESIGN
thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999379464448394	WITHOUT_CLASSIFICATION	6.205355516062099E-5	DESIGN
thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999379464448394	WITHOUT_CLASSIFICATION	6.205355516062099E-5	DESIGN
eval value for assignment	WITHOUT_CLASSIFICATION	0.9997589224287371	WITHOUT_CLASSIFICATION	2.4107757126282315E-4	DESIGN
call site	WITHOUT_CLASSIFICATION	0.9984695132126389	WITHOUT_CLASSIFICATION	0.0015304867873611	DESIGN
call site	WITHOUT_CLASSIFICATION	0.9984695132126389	WITHOUT_CLASSIFICATION	0.0015304867873611	DESIGN
depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9987337769301192	WITHOUT_CLASSIFICATION	0.0012662230698807229	DESIGN
check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9993938800077278	WITHOUT_CLASSIFICATION	6.061199922722317E-4	DESIGN
eval value and save it	WITHOUT_CLASSIFICATION	0.9993495596262879	WITHOUT_CLASSIFICATION	6.504403737121164E-4	DESIGN
self	WITHOUT_CLASSIFICATION	0.999565863348071	WITHOUT_CLASSIFICATION	4.341366519291143E-4	DESIGN
self	WITHOUT_CLASSIFICATION	0.999565863348071	WITHOUT_CLASSIFICATION	4.341366519291143E-4	DESIGN
depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9987337769301192	WITHOUT_CLASSIFICATION	0.0012662230698807229	DESIGN
receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9996942502686201	WITHOUT_CLASSIFICATION	3.057497313798872E-4	DESIGN
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
super uses current block if none given	WITHOUT_CLASSIFICATION	0.9991864637774504	WITHOUT_CLASSIFICATION	8.135362225495464E-4	DESIGN
args	WITHOUT_CLASSIFICATION	0.999701869616358	WITHOUT_CLASSIFICATION	2.9813038364195156E-4	DESIGN
block	WITHOUT_CLASSIFICATION	0.9995600452782349	WITHOUT_CLASSIFICATION	4.3995472176503917E-4	DESIGN
block	WITHOUT_CLASSIFICATION	0.9995600452782349	WITHOUT_CLASSIFICATION	4.3995472176503917E-4	DESIGN
no args, no block	WITHOUT_CLASSIFICATION	0.9997480707688499	WITHOUT_CLASSIFICATION	2.519292311501027E-4	DESIGN
no args, with block	WITHOUT_CLASSIFICATION	0.999563685822573	WITHOUT_CLASSIFICATION	4.363141774269951E-4	DESIGN
with args, no block	WITHOUT_CLASSIFICATION	0.999563685822573	WITHOUT_CLASSIFICATION	4.363141774269951E-4	DESIGN
with args, with block	WITHOUT_CLASSIFICATION	0.9983929237376059	WITHOUT_CLASSIFICATION	0.0016070762623940419	DESIGN
adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9992896603773488	WITHOUT_CLASSIFICATION	7.103396226513182E-4	DESIGN
pop extra attr value	WITHOUT_CLASSIFICATION	0.9995742762285267	WITHOUT_CLASSIFICATION	4.2572377147327836E-4	DESIGN
pop extra attr value	WITHOUT_CLASSIFICATION	0.9995742762285267	WITHOUT_CLASSIFICATION	4.2572377147327836E-4	DESIGN
arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.999937647928998	WITHOUT_CLASSIFICATION	6.235207100197943E-5	DESIGN
arg	WITHOUT_CLASSIFICATION	0.9996786493760054	WITHOUT_CLASSIFICATION	3.213506239946192E-4	DESIGN
arg	WITHOUT_CLASSIFICATION	0.9996786493760054	WITHOUT_CLASSIFICATION	3.213506239946192E-4	DESIGN
self	WITHOUT_CLASSIFICATION	0.999565863348071	WITHOUT_CLASSIFICATION	4.341366519291143E-4	DESIGN
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
args	WITHOUT_CLASSIFICATION	0.999701869616358	WITHOUT_CLASSIFICATION	2.9813038364195156E-4	DESIGN
block	WITHOUT_CLASSIFICATION	0.9995600452782349	WITHOUT_CLASSIFICATION	4.3995472176503917E-4	DESIGN
no args, no block	WITHOUT_CLASSIFICATION	0.9997480707688499	WITHOUT_CLASSIFICATION	2.519292311501027E-4	DESIGN
no args, with block	WITHOUT_CLASSIFICATION	0.999563685822573	WITHOUT_CLASSIFICATION	4.363141774269951E-4	DESIGN
with args, no block	WITHOUT_CLASSIFICATION	0.999563685822573	WITHOUT_CLASSIFICATION	4.363141774269951E-4	DESIGN
with args, with block	WITHOUT_CLASSIFICATION	0.9983929237376059	WITHOUT_CLASSIFICATION	0.0016070762623940419	DESIGN
arg	WITHOUT_CLASSIFICATION	0.9996786493760054	WITHOUT_CLASSIFICATION	3.213506239946192E-4	DESIGN
retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9992030566135985	WITHOUT_CLASSIFICATION	7.969433864014377E-4	DESIGN
use numbered access method	WITHOUT_CLASSIFICATION	0.9921124917850318	WITHOUT_CLASSIFICATION	0.007887508214968225	DESIGN
retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9986303350071754	WITHOUT_CLASSIFICATION	0.0013696649928246554	DESIGN
add name to call site list	WITHOUT_CLASSIFICATION	0.9985601127023376	WITHOUT_CLASSIFICATION	0.0014398872976625115	DESIGN
module is on top of stack	WITHOUT_CLASSIFICATION	0.9984835674780449	WITHOUT_CLASSIFICATION	0.001516432521955121	DESIGN
build scope names string	WITHOUT_CLASSIFICATION	0.9990510489476424	WITHOUT_CLASSIFICATION	9.489510523575498E-4	DESIGN
build descriptor string	WITHOUT_CLASSIFICATION	0.999782073965315	WITHOUT_CLASSIFICATION	2.179260346850724E-4	DESIGN
build descriptor string	WITHOUT_CLASSIFICATION	0.999782073965315	WITHOUT_CLASSIFICATION	2.179260346850724E-4	DESIGN
generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9994703580176737	WITHOUT_CLASSIFICATION	5.296419823262936E-4	DESIGN
generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9998129288047073	WITHOUT_CLASSIFICATION	1.870711952925714E-4	DESIGN
generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9998128372022785	WITHOUT_CLASSIFICATION	1.871627977214614E-4	DESIGN
generate constants initialization code	WITHOUT_CLASSIFICATION	0.9998717133807965	WITHOUT_CLASSIFICATION	1.2828661920358673E-4	DESIGN
generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9997068258934964	WITHOUT_CLASSIFICATION	2.931741065036445E-4	DESIGN
generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9997068258934964	WITHOUT_CLASSIFICATION	2.931741065036445E-4	DESIGN
generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.999481345305041	WITHOUT_CLASSIFICATION	5.186546949590439E-4	DESIGN
generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9994159820758622	WITHOUT_CLASSIFICATION	5.840179241377239E-4	DESIGN
generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9998503056205374	WITHOUT_CLASSIFICATION	1.496943794625171E-4	DESIGN
generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9998503056205374	WITHOUT_CLASSIFICATION	1.496943794625171E-4	DESIGN
generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9998128372022785	WITHOUT_CLASSIFICATION	1.871627977214614E-4	DESIGN
generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9993768097510197	WITHOUT_CLASSIFICATION	6.23190248980276E-4	DESIGN
adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9992896603773488	WITHOUT_CLASSIFICATION	7.103396226513182E-4	DESIGN
use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9981838828179886	WITHOUT_CLASSIFICATION	0.001816117182011268	DESIGN
do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999102270935358	WITHOUT_CLASSIFICATION	8.977290646419789E-5	DESIGN
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9984345830542541	WITHOUT_CLASSIFICATION	0.0015654169457458807	DESIGN
No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999934779005445	WITHOUT_CLASSIFICATION	6.522099455609495E-6	DESIGN
load Object under value	WITHOUT_CLASSIFICATION	0.9997736608172695	WITHOUT_CLASSIFICATION	2.2633918273050127E-4	DESIGN
put under object array already present	WITHOUT_CLASSIFICATION	0.999500268578853	WITHOUT_CLASSIFICATION	4.997314211469565E-4	DESIGN
if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9998441278502973	WITHOUT_CLASSIFICATION	1.558721497027954E-4	DESIGN
This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.999644616274381	WITHOUT_CLASSIFICATION	3.5538372561901834E-4	DESIGN
if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9996565640955789	WITHOUT_CLASSIFICATION	3.434359044211403E-4	DESIGN
if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9996565640955789	WITHOUT_CLASSIFICATION	3.434359044211403E-4	DESIGN
brute force construction inline	WITHOUT_CLASSIFICATION	0.9960175844423315	WITHOUT_CLASSIFICATION	0.003982415557668583	DESIGN
brute force construction inline	WITHOUT_CLASSIFICATION	0.9960175844423315	WITHOUT_CLASSIFICATION	0.003982415557668583	DESIGN
use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9982897749213869	WITHOUT_CLASSIFICATION	0.0017102250786130355	DESIGN
call isTrue on the result	WITHOUT_CLASSIFICATION	0.9989858849039575	WITHOUT_CLASSIFICATION	0.0010141150960426243	DESIGN
call isTrue on the result	WITHOUT_CLASSIFICATION	0.9989858849039575	WITHOUT_CLASSIFICATION	0.0010141150960426243	DESIGN
call isTrue on the result	WITHOUT_CLASSIFICATION	0.9989858849039575	WITHOUT_CLASSIFICATION	0.0010141150960426243	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999686923042446	WITHOUT_CLASSIFICATION	3.13076957554013E-4	DESIGN
dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.999964969417031	WITHOUT_CLASSIFICATION	3.503058296911994E-5	DESIGN
dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.999964969417031	WITHOUT_CLASSIFICATION	3.503058296911994E-5	DESIGN
clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999982732705944	WITHOUT_CLASSIFICATION	1.7267294056131426E-6	DESIGN
check the condition	WITHOUT_CLASSIFICATION	0.999874708687497	WITHOUT_CLASSIFICATION	1.2529131250301834E-4	DESIGN
NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.997242744767468	WITHOUT_CLASSIFICATION	0.0027572552325319235	DESIGN
skip catch block	WITHOUT_CLASSIFICATION	0.9999028841126087	WITHOUT_CLASSIFICATION	9.711588739127745E-5	DESIGN
catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9983650869337913	WITHOUT_CLASSIFICATION	0.0016349130662086635	DESIGN
next jump	WITHOUT_CLASSIFICATION	0.9990674900103618	WITHOUT_CLASSIFICATION	9.325099896381639E-4	DESIGN
exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9999030613952087	WITHOUT_CLASSIFICATION	9.693860479141955E-5	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9985672529346583	WITHOUT_CLASSIFICATION	0.0014327470653416488	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9985672529346583	WITHOUT_CLASSIFICATION	0.0014327470653416488	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999686923042446	WITHOUT_CLASSIFICATION	3.13076957554013E-4	DESIGN
clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999982732705944	WITHOUT_CLASSIFICATION	1.7267294056131426E-6	DESIGN
EQ == 0 (i.e. false) pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.997439194300935	WITHOUT_CLASSIFICATION	0.0025608056990650187	DESIGN
check the condition	WITHOUT_CLASSIFICATION	0.999874708687497	WITHOUT_CLASSIFICATION	1.2529131250301834E-4	DESIGN
NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.997242744767468	WITHOUT_CLASSIFICATION	0.0027572552325319235	DESIGN
synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999915864227822	WITHOUT_CLASSIFICATION	8.413577217787533E-6	DESIGN
break jump	WITHOUT_CLASSIFICATION	0.9988253541678654	WITHOUT_CLASSIFICATION	0.0011746458321345858	DESIGN
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9983114382878213	WITHOUT_CLASSIFICATION	0.0016885617121786597	DESIGN
[reg]	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9928518665244566	WITHOUT_CLASSIFICATION	0.007148133475543519	DESIGN
inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.999794983965518	WITHOUT_CLASSIFICATION	2.050160344819285E-4	DESIGN
inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.999181061191472	WITHOUT_CLASSIFICATION	8.189388085279153E-4	DESIGN
synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999915864227822	WITHOUT_CLASSIFICATION	8.413577217787533E-6	DESIGN
store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999346485367179	WITHOUT_CLASSIFICATION	6.535146328214589E-5	DESIGN
store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999346485367179	WITHOUT_CLASSIFICATION	6.535146328214589E-5	DESIGN
if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9984585229223105	WITHOUT_CLASSIFICATION	0.0015414770776895413	DESIGN
retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9976649264681308	WITHOUT_CLASSIFICATION	0.0023350735318692878	DESIGN
any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9940908111518452	WITHOUT_CLASSIFICATION	0.005909188848154769	DESIGN
and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9985360336049967	WITHOUT_CLASSIFICATION	0.0014639663950033513	DESIGN
restore the original exception	WITHOUT_CLASSIFICATION	0.9993823377270202	WITHOUT_CLASSIFICATION	6.176622729798139E-4	DESIGN
Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9956215789234658	WITHOUT_CLASSIFICATION	0.004378421076534216	DESIGN
rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9998352990526064	WITHOUT_CLASSIFICATION	1.6470094739374225E-4	DESIGN
Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9945398399932076	WITHOUT_CLASSIFICATION	0.005460160006792431	DESIGN
inside a loop, break out of it go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9997399493051286	WITHOUT_CLASSIFICATION	2.6005069487146484E-4	DESIGN
false zero	WITHOUT_CLASSIFICATION	0.9999745032270558	WITHOUT_CLASSIFICATION	2.549677294409081E-5	DESIGN
load all arguments straight through	WITHOUT_CLASSIFICATION	0.9996569230394913	WITHOUT_CLASSIFICATION	3.4307696050878887E-4	DESIGN
and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9985360336049967	WITHOUT_CLASSIFICATION	0.0014639663950033513	DESIGN
restore the original exception	WITHOUT_CLASSIFICATION	0.9993823377270202	WITHOUT_CLASSIFICATION	6.176622729798139E-4	DESIGN
retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9985098048779885	WITHOUT_CLASSIFICATION	0.0014901951220115547	DESIGN
push false	WITHOUT_CLASSIFICATION	0.9999113576076482	WITHOUT_CLASSIFICATION	8.864239235176715E-5	DESIGN
method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9992896603773488	WITHOUT_CLASSIFICATION	7.103396226513182E-4	DESIGN
method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9988157287080784	WITHOUT_CLASSIFICATION	0.0011842712919215147	DESIGN
EQ == 0 (i.e. false) [C]	WITHOUT_CLASSIFICATION	0.999238318340826	WITHOUT_CLASSIFICATION	7.616816591740269E-4	DESIGN
[C, C] [C, C, String] [C, null|C]	WITHOUT_CLASSIFICATION	0.9992896603773488	WITHOUT_CLASSIFICATION	7.103396226513182E-4	DESIGN
[C]	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
push true	WITHOUT_CLASSIFICATION	0.9998052274041234	WITHOUT_CLASSIFICATION	1.9477259587657514E-4	DESIGN
EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999525448031704	WITHOUT_CLASSIFICATION	4.745519682962936E-5	DESIGN
[?, ?] [?, boolean]	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
[RubyModule] [RubyModule, String]	WITHOUT_CLASSIFICATION	0.9992896603773488	WITHOUT_CLASSIFICATION	7.103396226513182E-4	DESIGN
[boolean]	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9996998286510107	WITHOUT_CLASSIFICATION	3.0017134898932817E-4	DESIGN
but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9997754771332316	WITHOUT_CLASSIFICATION	2.245228667683632E-4	DESIGN
we re-set self to the class, but store the old self in a temporary local variable this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.987460004179701	WITHOUT_CLASSIFICATION	0.012539995820298902	DESIGN
set self to the class	WITHOUT_CLASSIFICATION	0.9971535876070166	WITHOUT_CLASSIFICATION	0.0028464123929833715	DESIGN
CLASS BODY	WITHOUT_CLASSIFICATION	0.9994213330016367	WITHOUT_CLASSIFICATION	5.786669983632149E-4	DESIGN
static scope	WITHOUT_CLASSIFICATION	0.9972135565410221	WITHOUT_CLASSIFICATION	0.0027864434589779065	DESIGN
Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999944538722444	WITHOUT_CLASSIFICATION	5.546127755621948E-6	DESIGN
new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9998357967872936	WITHOUT_CLASSIFICATION	1.642032127063826E-4	DESIGN
CLASS BODY	WITHOUT_CLASSIFICATION	0.9994213330016367	WITHOUT_CLASSIFICATION	5.786669983632149E-4	DESIGN
static scope	WITHOUT_CLASSIFICATION	0.9972135565410221	WITHOUT_CLASSIFICATION	0.0027864434589779065	DESIGN
Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999944538722444	WITHOUT_CLASSIFICATION	5.546127755621948E-6	DESIGN
finally with exception	WITHOUT_CLASSIFICATION	0.9971867652335579	WITHOUT_CLASSIFICATION	0.0028132347664421814	DESIGN
prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9902364024006698	WITHOUT_CLASSIFICATION	0.009763597599330216	DESIGN
otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9997101089789244	WITHOUT_CLASSIFICATION	2.898910210755938E-4	DESIGN
original exception is on stack	WITHOUT_CLASSIFICATION	0.999120412451184	WITHOUT_CLASSIFICATION	8.795875488158618E-4	DESIGN
RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9987127428324855	WITHOUT_CLASSIFICATION	0.0012872571675145174	DESIGN
updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999132366562631	WITHOUT_CLASSIFICATION	8.676334373687898E-5	DESIGN
callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9998426611858879	WITHOUT_CLASSIFICATION	1.5733881411206517E-4	DESIGN
prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9939212943334247	WITHOUT_CLASSIFICATION	0.006078705666575332	DESIGN
script object	WITHOUT_CLASSIFICATION	0.9995248756771474	WITHOUT_CLASSIFICATION	4.7512432285259156E-4	DESIGN
arities	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9077433800158552	WITHOUT_CLASSIFICATION	0.09225661998414475	DESIGN
we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9984686497401003	WITHOUT_CLASSIFICATION	0.001531350259899796	DESIGN
we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9920667501745076	WITHOUT_CLASSIFICATION	0.00793324982549233	DESIGN
checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999892385644409	WITHOUT_CLASSIFICATION	1.0761435559147025E-5	DESIGN
expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9976206651316549	WITHOUT_CLASSIFICATION	0.0023793348683450056	DESIGN
normal case, create a new label	WITHOUT_CLASSIFICATION	0.9951908936329483	WITHOUT_CLASSIFICATION	0.004809106367051669	DESIGN
last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9950492382526213	WITHOUT_CLASSIFICATION	0.004950761747378743	DESIGN
do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9989089013151199	WITHOUT_CLASSIFICATION	0.0010910986848800268	DESIGN
just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999272367763509	WITHOUT_CLASSIFICATION	7.276322364919318E-5	DESIGN
just confirm args length == required	WITHOUT_CLASSIFICATION	0.9994615087596653	WITHOUT_CLASSIFICATION	5.38491240334703E-4	DESIGN
extract item from array	WITHOUT_CLASSIFICATION	0.9999350617242329	WITHOUT_CLASSIFICATION	6.493827576707993E-5	DESIGN
index for the item	WITHOUT_CLASSIFICATION	0.9999861739688732	WITHOUT_CLASSIFICATION	1.3826031126689746E-5	DESIGN
index for the item	WITHOUT_CLASSIFICATION	0.9999861739688732	WITHOUT_CLASSIFICATION	1.3826031126689746E-5	DESIGN
prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9977340556624053	WITHOUT_CLASSIFICATION	0.0022659443375947167	DESIGN
prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9977340556624053	WITHOUT_CLASSIFICATION	0.0022659443375947167	DESIGN
next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9992236111430252	WITHOUT_CLASSIFICATION	7.763888569747021E-4	DESIGN
next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9992236111430252	WITHOUT_CLASSIFICATION	7.763888569747021E-4	DESIGN
now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999234205518744	WITHOUT_CLASSIFICATION	7.657944812549575E-5	DESIGN
otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999148824735495	WITHOUT_CLASSIFICATION	8.511752645041949E-5	DESIGN
pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9991938279244971	WITHOUT_CLASSIFICATION	8.06172075503031E-4	DESIGN
if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9995557327656293	WITHOUT_CLASSIFICATION	4.442672343706639E-4	DESIGN
assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999986315107565	WITHOUT_CLASSIFICATION	1.3684892434768073E-6	DESIGN
block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999162881985105	WITHOUT_CLASSIFICATION	8.371180148949032E-5	DESIGN
first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9998259821648728	WITHOUT_CLASSIFICATION	1.7401783512721516E-4	DESIGN
then optional args	WITHOUT_CLASSIFICATION	0.9998334381704642	WITHOUT_CLASSIFICATION	1.6656182953576887E-4	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9985672529346583	WITHOUT_CLASSIFICATION	0.0014327470653416488	DESIGN
now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999234205518744	WITHOUT_CLASSIFICATION	7.657944812549575E-5	DESIGN
otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999148824735495	WITHOUT_CLASSIFICATION	8.511752645041949E-5	DESIGN
pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9991938279244971	WITHOUT_CLASSIFICATION	8.06172075503031E-4	DESIGN
assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999986315107565	WITHOUT_CLASSIFICATION	1.3684892434768073E-6	DESIGN
block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999162881985105	WITHOUT_CLASSIFICATION	8.371180148949032E-5	DESIGN
if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9997459047599535	WITHOUT_CLASSIFICATION	2.5409524004649047E-4	DESIGN
finally, post args	WITHOUT_CLASSIFICATION	0.9994676027426639	WITHOUT_CLASSIFICATION	5.323972573361425E-4	DESIGN
not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9711788633303324	WITHOUT_CLASSIFICATION	0.028821136669667537	DESIGN
not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9711788633303324	WITHOUT_CLASSIFICATION	0.028821136669667537	DESIGN
unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9993945579323968	WITHOUT_CLASSIFICATION	6.054420676030763E-4	DESIGN
fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9996009194585659	WITHOUT_CLASSIFICATION	3.990805414341188E-4	DESIGN
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9978777940119717	WITHOUT_CLASSIFICATION	0.0021222059880282684	DESIGN
temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9997164620536017	WITHOUT_CLASSIFICATION	2.8353794639843097E-4	DESIGN
temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9997164620536017	WITHOUT_CLASSIFICATION	2.8353794639843097E-4	DESIGN
declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999732980234739	WITHOUT_CLASSIFICATION	2.6701976526047844E-5	DESIGN
class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9827863620472795	WITHOUT_CLASSIFICATION	0.01721363795272047	DESIGN
store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9991109302542699	WITHOUT_CLASSIFICATION	8.890697457300166E-4	DESIGN
load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9998825550412527	WITHOUT_CLASSIFICATION	1.1744495874727764E-4	DESIGN
return in a class body raises error	WITHOUT_CLASSIFICATION	0.9983998949927463	WITHOUT_CLASSIFICATION	0.0016001050072537643	DESIGN
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9473283279401294	WITHOUT_CLASSIFICATION	0.052671672059870604	DESIGN
return last value from execution	WITHOUT_CLASSIFICATION	0.9998799542131165	WITHOUT_CLASSIFICATION	1.2004578688350464E-4	DESIGN
end of variable scope	WITHOUT_CLASSIFICATION	0.9963623510608313	WITHOUT_CLASSIFICATION	0.003637648939168808	DESIGN
method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9992822843419296	WITHOUT_CLASSIFICATION	7.177156580704026E-4	DESIGN
load block from [] version of method	WITHOUT_CLASSIFICATION	0.9991866832717958	WITHOUT_CLASSIFICATION	8.133167282042005E-4	DESIGN
normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999062343541147	WITHOUT_CLASSIFICATION	9.376564588532108E-5	DESIGN
declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999732980234739	WITHOUT_CLASSIFICATION	2.6701976526047844E-5	DESIGN
class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9827863620472795	WITHOUT_CLASSIFICATION	0.01721363795272047	DESIGN
load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9998825550412527	WITHOUT_CLASSIFICATION	1.1744495874727764E-4	DESIGN
we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9980789197074914	WITHOUT_CLASSIFICATION	0.0019210802925085841	DESIGN
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9978777940119717	WITHOUT_CLASSIFICATION	0.0021222059880282684	DESIGN
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9978777940119717	WITHOUT_CLASSIFICATION	0.0021222059880282684	DESIGN
load all arguments straight through	WITHOUT_CLASSIFICATION	0.9996569230394913	WITHOUT_CLASSIFICATION	3.4307696050878887E-4	DESIGN
load all arguments straight through	WITHOUT_CLASSIFICATION	0.9996569230394913	WITHOUT_CLASSIFICATION	3.4307696050878887E-4	DESIGN
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9908732640681063	WITHOUT_CLASSIFICATION	0.009126735931893646	DESIGN
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9908732640681063	WITHOUT_CLASSIFICATION	0.009126735931893646	DESIGN
store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999263948464259	WITHOUT_CLASSIFICATION	7.360515357410928E-5	DESIGN
if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9988008875124869	WITHOUT_CLASSIFICATION	0.0011991124875130497	DESIGN
fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.8929312946957971	WITHOUT_CLASSIFICATION	0.10706870530420283	DESIGN
default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9991995375909247	WITHOUT_CLASSIFICATION	8.00462409075294E-4	DESIGN
store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9994359867586239	WITHOUT_CLASSIFICATION	5.640132413761398E-4	DESIGN
store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9992407251163082	WITHOUT_CLASSIFICATION	7.592748836916404E-4	DESIGN
in 1.8 mode, this will be a RubyArray containing the arguments in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9941168784514592	WITHOUT_CLASSIFICATION	0.005883121548540758	DESIGN
no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9989055170624795	WITHOUT_CLASSIFICATION	0.001094482937520476	DESIGN
for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9664188538998029	WITHOUT_CLASSIFICATION	0.0335811461001971	DESIGN
set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.978019049440648	WITHOUT_CLASSIFICATION	0.021980950559352	DESIGN
if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.998665609054976	WITHOUT_CLASSIFICATION	0.0013343909450239397	DESIGN
verify the class	WITHOUT_CLASSIFICATION	0.9991290060482533	WITHOUT_CLASSIFICATION	8.709939517466833E-4	DESIGN
create dir if necessary	WITHOUT_CLASSIFICATION	0.99736704043737	WITHOUT_CLASSIFICATION	0.0026329595626300257	DESIGN
Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9998592708855487	WITHOUT_CLASSIFICATION	1.407291144513238E-4	DESIGN
add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999977060238497	WITHOUT_CLASSIFICATION	2.2939761502880396E-6	DESIGN
thread context	WITHOUT_CLASSIFICATION	0.999755302172517	WITHOUT_CLASSIFICATION	2.446978274830484E-4	DESIGN
line number	WITHOUT_CLASSIFICATION	0.9995825117238556	WITHOUT_CLASSIFICATION	4.1748827614437325E-4	DESIGN
invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9998172205041094	WITHOUT_CLASSIFICATION	1.8277949589069992E-4	DESIGN
load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.999649476604089	WITHOUT_CLASSIFICATION	3.5052339591098926E-4	DESIGN
return last value from execution	WITHOUT_CLASSIFICATION	0.9998799542131165	WITHOUT_CLASSIFICATION	1.2004578688350464E-4	DESIGN
method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9992822843419296	WITHOUT_CLASSIFICATION	7.177156580704026E-4	DESIGN
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9991804915666919	WITHOUT_CLASSIFICATION	8.195084333080674E-4	DESIGN
block	WITHOUT_CLASSIFICATION	0.9995600452782349	WITHOUT_CLASSIFICATION	4.3995472176503917E-4	DESIGN
block	WITHOUT_CLASSIFICATION	0.9995600452782349	WITHOUT_CLASSIFICATION	4.3995472176503917E-4	DESIGN
we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9980789197074914	WITHOUT_CLASSIFICATION	0.0019210802925085841	DESIGN
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9978777940119717	WITHOUT_CLASSIFICATION	0.0021222059880282684	DESIGN
load all arguments straight through	WITHOUT_CLASSIFICATION	0.9996569230394913	WITHOUT_CLASSIFICATION	3.4307696050878887E-4	DESIGN
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9908732640681063	WITHOUT_CLASSIFICATION	0.009126735931893646	DESIGN
add Script#run impl, used for running this script with a specified threadcontext and self root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.7866041212997753	DESIGN	0.2133958787002247	WITHOUT_CLASSIFICATION
add main impl, used for detached or command-line execution of this script with a new runtime root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.7557692490569344	WITHOUT_CLASSIFICATION	0.24423075094306565	DESIGN
construct static scope list of names	WITHOUT_CLASSIFICATION	0.9986465095508744	WITHOUT_CLASSIFICATION	0.0013534904491256017	DESIGN
JRUBY-3014: make __FILE__ dynamically determined at load time, but we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9869436669924383	WITHOUT_CLASSIFICATION	0.013056333007561734	DESIGN
ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.997882400830187	WITHOUT_CLASSIFICATION	0.0021175991698130525	DESIGN
ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.997882400830187	WITHOUT_CLASSIFICATION	0.0021175991698130525	DESIGN
lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9988968184732923	WITHOUT_CLASSIFICATION	0.0011031815267077754	DESIGN
boxed arg list __file__	WITHOUT_CLASSIFICATION	0.999771134387381	WITHOUT_CLASSIFICATION	2.2886561261898763E-4	DESIGN
invoke static __file__	WITHOUT_CLASSIFICATION	0.9979180523451532	WITHOUT_CLASSIFICATION	0.00208194765484685	DESIGN
exact arg list __file__	WITHOUT_CLASSIFICATION	0.9996260592910557	WITHOUT_CLASSIFICATION	3.7394070894434725E-4	DESIGN
declare the field	WITHOUT_CLASSIFICATION	0.9997483767411507	WITHOUT_CLASSIFICATION	2.51623258849342E-4	DESIGN
declare the field	WITHOUT_CLASSIFICATION	0.9997483767411507	WITHOUT_CLASSIFICATION	2.51623258849342E-4	DESIGN
not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9981839036004581	WITHOUT_CLASSIFICATION	0.0018160963995420428	DESIGN
normal closure	WITHOUT_CLASSIFICATION	0.9999629301109997	WITHOUT_CLASSIFICATION	3.706988900034587E-5	DESIGN
end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999179451281667	WITHOUT_CLASSIFICATION	8.205487183337372E-5	DESIGN
we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9988280028008767	WITHOUT_CLASSIFICATION	0.0011719971991233213	DESIGN
handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9992910100441131	WITHOUT_CLASSIFICATION	7.089899558868568E-4	DESIGN
jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999173113133145	WITHOUT_CLASSIFICATION	8.2688686685441E-5	DESIGN
Ruby name	WITHOUT_CLASSIFICATION	0.9993438548303177	WITHOUT_CLASSIFICATION	6.561451696822019E-4	DESIGN
Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9978538688246386	WITHOUT_CLASSIFICATION	0.002146131175361368	DESIGN
Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9742139415888066	WITHOUT_CLASSIFICATION	0.02578605841119339	DESIGN
We need to ensure that the variable names generated here cannot conflict with ruby variable names! Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9994039612559261	WITHOUT_CLASSIFICATION	5.960387440738347E-4	DESIGN
Does this method define code? Default is yes -- which basically leads to pessimistic but safe optimizations But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9992304855167188	WITHOUT_CLASSIFICATION	7.695144832813092E-4	DESIGN
Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9918310502979568	WITHOUT_CLASSIFICATION	0.008168949702043257	DESIGN
NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner with outer loops encountered before inner loops, and inner loops finished before outer ones. So, we can keep track of loops in a loop stack which keeps track of loops as they are encountered. This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9992479672564523	WITHOUT_CLASSIFICATION	7.520327435476643E-4	DESIGN
Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9980740858955066	WITHOUT_CLASSIFICATION	0.001925914104493376	DESIGN
Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9979413997063954	WITHOUT_CLASSIFICATION	0.0020586002936045997	DESIGN
_lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9969501164025825	WITHOUT_CLASSIFICATION	0.0030498835974174295	DESIGN
List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9996179173138614	WITHOUT_CLASSIFICATION	3.820826861385348E-4	DESIGN
Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9981054537450211	WITHOUT_CLASSIFICATION	0.0018945462549788171	DESIGN
Insert nesting level to ensure variable names don't conflict across nested scopes! i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.8270661424524584	WITHOUT_CLASSIFICATION	0.17293385754754168	DESIGN
get "self"	WITHOUT_CLASSIFICATION	0.9995359790189454	WITHOUT_CLASSIFICATION	4.6402098105457747E-4	DESIGN
variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9902881009506335	WITHOUT_CLASSIFICATION	0.00971189904936666	DESIGN
inline script	WITHOUT_CLASSIFICATION	0.9934288630615052	WITHOUT_CLASSIFICATION	0.006571136938494653	DESIGN
inline script	WITHOUT_CLASSIFICATION	0.9934288630615052	WITHOUT_CLASSIFICATION	0.006571136938494653	DESIGN
This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.996719588906626	WITHOUT_CLASSIFICATION	0.003280411093373962	DESIGN
Build the class body!	WITHOUT_CLASSIFICATION	0.9985751110193035	WITHOUT_CLASSIFICATION	0.0014248889806965292	DESIGN
unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999889797587567	WITHOUT_CLASSIFICATION	1.1020241243406217E-5	DESIGN
unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999889797587567	WITHOUT_CLASSIFICATION	1.1020241243406217E-5	DESIGN
SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9940191520409473	DESIGN	0.005980847959052755	WITHOUT_CLASSIFICATION
Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9998884403342417	WITHOUT_CLASSIFICATION	1.1155966575819574E-4	DESIGN
done done done done	WITHOUT_CLASSIFICATION	0.999452253293361	WITHOUT_CLASSIFICATION	5.477467066390793E-4	DESIGN
NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.996544319827941	WITHOUT_CLASSIFICATION	0.003455680172059073	DESIGN
NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.996544319827941	WITHOUT_CLASSIFICATION	0.003455680172059073	DESIGN
This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9971213365941708	WITHOUT_CLASSIFICATION	0.002878663405829256	DESIGN
build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999769555808755	WITHOUT_CLASSIFICATION	2.304441912438269E-5	DESIGN
build first node only and return false	WITHOUT_CLASSIFICATION	0.999995957385881	WITHOUT_CLASSIFICATION	4.042614119016379E-6	DESIGN
Value of the last expression in the block	WITHOUT_CLASSIFICATION	0.9999500877487542	WITHOUT_CLASSIFICATION	4.991225124592411E-5	DESIGN
If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.99263999303621	WITHOUT_CLASSIFICATION	0.007360006963789913	DESIGN
get the incoming case value	WITHOUT_CLASSIFICATION	0.999936723488391	WITHOUT_CLASSIFICATION	6.327651160895662E-5	DESIGN
the CASE instruction	WITHOUT_CLASSIFICATION	0.9999245773227077	WITHOUT_CLASSIFICATION	7.542267729231919E-5	DESIGN
lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9992031651262122	WITHOUT_CLASSIFICATION	7.968348737878041E-4	DESIGN
build each "when"	WITHOUT_CLASSIFICATION	0.9998465808457101	WITHOUT_CLASSIFICATION	1.534191542898471E-4	DESIGN
multiple conditions for when	WITHOUT_CLASSIFICATION	0.9929697901272406	WITHOUT_CLASSIFICATION	0.007030209872759323	DESIGN
build "else" if it exists	WITHOUT_CLASSIFICATION	0.99980058000415	WITHOUT_CLASSIFICATION	1.9941999585008213E-4	DESIGN
now emit bodies	WITHOUT_CLASSIFICATION	0.9995356757384326	WITHOUT_CLASSIFICATION	4.643242615674447E-4	DESIGN
close it out	WITHOUT_CLASSIFICATION	0.9999940001112394	WITHOUT_CLASSIFICATION	5.9998887605569934E-6	DESIGN
By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9996516265645573	WITHOUT_CLASSIFICATION	3.4837343544279225E-4	DESIGN
Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9906874864849192	WITHOUT_CLASSIFICATION	0.009312513515080707	DESIGN
Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9947402526177263	WITHOUT_CLASSIFICATION	0.005259747382273771	DESIGN
1. Load the module first (lhs of node) 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999124236770571	WITHOUT_CLASSIFICATION	8.757632294294455E-5	DESIGN
Build IR for args	WITHOUT_CLASSIFICATION	0.9998290588610536	WITHOUT_CLASSIFICATION	1.709411389464251E-4	DESIGN
Build IR for body	WITHOUT_CLASSIFICATION	0.9998928954638762	WITHOUT_CLASSIFICATION	1.0710453612383602E-4	DESIGN
if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9997749925184972	WITHOUT_CLASSIFICATION	2.2500748150270766E-4	DESIGN
Instance method	WITHOUT_CLASSIFICATION	0.999994970021753	WITHOUT_CLASSIFICATION	5.029978247031217E-6	DESIGN
Class method	WITHOUT_CLASSIFICATION	0.9996405574051744	WITHOUT_CLASSIFICATION	3.5944259482553813E-4	DESIGN
Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9994455733543336	WITHOUT_CLASSIFICATION	5.544266456663948E-4	DESIGN
Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9983955074790518	WITHOUT_CLASSIFICATION	0.0016044925209482168	DESIGN
Now for the rest	WITHOUT_CLASSIFICATION	0.9999609181669104	WITHOUT_CLASSIFICATION	3.908183308955398E-5	DESIGN
Jump to 'l' if this arg is not null. If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999872660033214	WITHOUT_CLASSIFICATION	1.2733996678518142E-5	DESIGN
This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9996776385271429	WITHOUT_CLASSIFICATION	3.22361472857181E-4	DESIGN
Create a new closure context	WITHOUT_CLASSIFICATION	0.9998621531866966	WITHOUT_CLASSIFICATION	1.378468133034915E-4	DESIGN
Build args	WITHOUT_CLASSIFICATION	0.9997562377091382	WITHOUT_CLASSIFICATION	2.437622908618149E-4	DESIGN
Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999957459128749	WITHOUT_CLASSIFICATION	4.254087125119794E-6	DESIGN
Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.998540021486759	WITHOUT_CLASSIFICATION	0.00145997851324103	DESIGN
By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9996516265645573	WITHOUT_CLASSIFICATION	3.4837343544279225E-4	DESIGN
Create a new closure context	WITHOUT_CLASSIFICATION	0.9998621531866966	WITHOUT_CLASSIFICATION	1.378468133034915E-4	DESIGN
Build args	WITHOUT_CLASSIFICATION	0.9997562377091382	WITHOUT_CLASSIFICATION	2.437622908618149E-4	DESIGN
Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.998540021486759	WITHOUT_CLASSIFICATION	0.00145997851324103	DESIGN
Get the container for this new module	WITHOUT_CLASSIFICATION	0.9997149248343103	WITHOUT_CLASSIFICATION	2.850751656897031E-4	DESIGN
Build the new module	WITHOUT_CLASSIFICATION	0.9994197864618213	WITHOUT_CLASSIFICATION	5.802135381787571E-4	DESIGN
Build the module body	WITHOUT_CLASSIFICATION	0.9994336740422401	WITHOUT_CLASSIFICATION	5.663259577598266E-4	DESIGN
First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999376097183442	WITHOUT_CLASSIFICATION	6.239028165582447E-5	DESIGN
rest of the argument array!	WITHOUT_CLASSIFICATION	0.9972356013913418	WITHOUT_CLASSIFICATION	0.0027643986086582162	DESIGN
If a closure, the next is simply a return from the closure! If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9994605657738495	WITHOUT_CLASSIFICATION	5.39434226150579E-4	DESIGN
get attr	WITHOUT_CLASSIFICATION	0.9992790604277081	WITHOUT_CLASSIFICATION	7.209395722919945E-4	DESIGN
call operator	WITHOUT_CLASSIFICATION	0.9988923393860547	WITHOUT_CLASSIFICATION	0.0011076606139452843	DESIGN
set attr	WITHOUT_CLASSIFICATION	0.998547558976958	WITHOUT_CLASSIFICATION	0.001452441023042063	DESIGN
Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> x = -- build(x) should return a variable! -- f = is_true(x) beq(f, false, L) x = -- build(y) -- L:	WITHOUT_CLASSIFICATION	0.9966178997571072	WITHOUT_CLASSIFICATION	0.0033821002428927917	DESIGN
This does the assignment!	WITHOUT_CLASSIFICATION	0.997837631792422	WITHOUT_CLASSIFICATION	0.0021623682075779167	DESIGN
This does the assignment!	WITHOUT_CLASSIFICATION	0.997837631792422	WITHOUT_CLASSIFICATION	0.0021623682075779167	DESIGN
if v1 is defined and true, we are done!	WITHOUT_CLASSIFICATION	0.9995810898848011	WITHOUT_CLASSIFICATION	4.189101151988682E-4	DESIGN
build first node only and return true	WITHOUT_CLASSIFICATION	0.9999911163248739	WITHOUT_CLASSIFICATION	8.883675126069723E-6	DESIGN
build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999939256311899	WITHOUT_CLASSIFICATION	6.0743688101028696E-6	DESIGN
Top-level script!	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999828598963612	WITHOUT_CLASSIFICATION	1.7140103638903278E-5	DESIGN
----------- Private Interface ------------	WITHOUT_CLASSIFICATION	0.9997975996066908	WITHOUT_CLASSIFICATION	2.0240039330917553E-4	DESIGN
What handles warnings	WITHOUT_CLASSIFICATION	0.9998435944929076	WITHOUT_CLASSIFICATION	1.5640550709248612E-4	DESIGN
Tries to load at compile-time the constant referred to by 'constRef'. This might be possible if the constant is defined and is not a forward reference to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9674175736330332	WITHOUT_CLASSIFICATION	0.03258242636696695	DESIGN
For closures, a redo is a jump to the beginning of the closure For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.999991516943728	WITHOUT_CLASSIFICATION	8.483056272001918E-6	DESIGN
The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9942223888285574	WITHOUT_CLASSIFICATION	0.0057776111714426025	DESIGN
Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9980368961015393	WITHOUT_CLASSIFICATION	0.0019631038984607137	DESIGN
Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9650821246991708	WITHOUT_CLASSIFICATION	0.03491787530082928	DESIGN
------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.999973339664514	WITHOUT_CLASSIFICATION	2.6660335486129825E-5	DESIGN
value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999315014197844	WITHOUT_CLASSIFICATION	6.849858021567059E-5	DESIGN
alu operations	WITHOUT_CLASSIFICATION	0.9998516226209345	WITHOUT_CLASSIFICATION	1.4837737906549128E-4	DESIGN
method handle, arg receive, return value, and call instructions	WITHOUT_CLASSIFICATION	0.9996303888891082	WITHOUT_CLASSIFICATION	3.6961111089180946E-4	DESIGN
closure instructions	WITHOUT_CLASSIFICATION	0.9998782234391637	WITHOUT_CLASSIFICATION	1.2177656083636442E-4	DESIGN
eval instructions	WITHOUT_CLASSIFICATION	0.9995244633778341	WITHOUT_CLASSIFICATION	4.755366221659208E-4	DESIGN
def instructions	WITHOUT_CLASSIFICATION	0.9994057771827319	WITHOUT_CLASSIFICATION	5.942228172680304E-4	DESIGN
exception instructions	WITHOUT_CLASSIFICATION	0.9983521693164822	WITHOUT_CLASSIFICATION	0.0016478306835178524	DESIGN
Loads	WITHOUT_CLASSIFICATION	0.9993266852517073	WITHOUT_CLASSIFICATION	6.733147482927333E-4	DESIGN
Stores	WITHOUT_CLASSIFICATION	0.9994356045698316	WITHOUT_CLASSIFICATION	5.643954301684907E-4	DESIGN
jump and branch operations	WITHOUT_CLASSIFICATION	0.9998804029075858	WITHOUT_CLASSIFICATION	1.1959709241418262E-4	DESIGN
others	WITHOUT_CLASSIFICATION	0.9944960131156434	WITHOUT_CLASSIFICATION	0.005503986884356694	DESIGN
a case/when branch	WITHOUT_CLASSIFICATION	0.9994560699885675	WITHOUT_CLASSIFICATION	5.439300114324805E-4	DESIGN
optimization guards	WITHOUT_CLASSIFICATION	0.9995510081602452	WITHOUT_CLASSIFICATION	4.4899183975475893E-4	DESIGN
By default, call instructions cannot be deleted even if their results aren't used by anyone unless we know more about what the call is, what it does, etc. Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.7926262348320363	WITHOUT_CLASSIFICATION	0.20737376516796358	DESIGN
Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9681164959488341	WITHOUT_CLASSIFICATION	0.03188350405116595	DESIGN
scripts	WITHOUT_CLASSIFICATION	0.9995710761198077	WITHOUT_CLASSIFICATION	4.289238801923167E-4	DESIGN
scripts and modules	WITHOUT_CLASSIFICATION	0.9998549413502863	WITHOUT_CLASSIFICATION	1.4505864971370118E-4	DESIGN
scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9994670082347351	WITHOUT_CLASSIFICATION	5.329917652649517E-4	DESIGN
methods and closures	WITHOUT_CLASSIFICATION	0.9996026273057024	WITHOUT_CLASSIFICATION	3.9737269429762975E-4	DESIGN
create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9996785615085075	WITHOUT_CLASSIFICATION	3.214384914924882E-4	DESIGN
create a new temporary variable	WITHOUT_CLASSIFICATION	0.9434516953560658	WITHOUT_CLASSIFICATION	0.056548304643934164	DESIGN
Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9997436994450574	WITHOUT_CLASSIFICATION	2.5630055494269135E-4	DESIGN
Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9997885445222828	WITHOUT_CLASSIFICATION	2.1145547771727862E-4	DESIGN
Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999803583481635	WITHOUT_CLASSIFICATION	1.9641651836553992E-5	DESIGN
While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9905638094346155	WITHOUT_CLASSIFICATION	0.0094361905653844	DESIGN
Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999750403356931	WITHOUT_CLASSIFICATION	2.4959664306993874E-5	DESIGN
Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9998054615387219	WITHOUT_CLASSIFICATION	1.9453846127804515E-4	DESIGN
Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.999601775962693	WITHOUT_CLASSIFICATION	3.982240373070648E-4	DESIGN
Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.8448246560423582	WITHOUT_CLASSIFICATION	0.15517534395764182	DESIGN
Readline	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999557077639116	WITHOUT_CLASSIFICATION	4.429223608835268E-5	DESIGN
Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.998871506136127	WITHOUT_CLASSIFICATION	0.0011284938638730728	DESIGN
If 'r' is not a constant, it could actually be a compound value! Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9918392073637947	WITHOUT_CLASSIFICATION	0.008160792636205264	DESIGN
Check if we can optimize this call based on the receiving method and receiver type Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.8779769388104243	DESIGN	0.12202306118957568	WITHOUT_CLASSIFICATION
If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9909504853560253	WITHOUT_CLASSIFICATION	0.0090495146439748	DESIGN
If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999447972778005	WITHOUT_CLASSIFICATION	5.520272219946694E-5	DESIGN
----------- Public abstract methods ----------	WITHOUT_CLASSIFICATION	0.9991670296935952	WITHOUT_CLASSIFICATION	8.329703064049263E-4	DESIGN
----------- Public methods with a default implementation ----------	WITHOUT_CLASSIFICATION	0.9996801969509393	WITHOUT_CLASSIFICATION	3.198030490606555E-4	DESIGN
Compute meet over all "sources" and compute "destination" basic blocks that should then be processed. sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.996780662781792	WITHOUT_CLASSIFICATION	0.0032193372182079774	DESIGN
If the solution has changed, add "dsts" to the work list. No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9977524784761415	WITHOUT_CLASSIFICATION	0.002247521523858577	DESIGN
--------- Protected fields/methods below ---------	WITHOUT_CLASSIFICATION	0.9996378083688421	WITHOUT_CLASSIFICATION	3.6219163115785427E-4	DESIGN
Dataflow problem with which this node is associated CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9960606216772316	WITHOUT_CLASSIFICATION	0.003939378322768309	DESIGN
-------------- Public fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9998465410269569	WITHOUT_CLASSIFICATION	1.5345897304311676E-4	DESIGN
------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9998825861507651	WITHOUT_CLASSIFICATION	1.1741384923501015E-4	DESIGN
------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9999312818290926	WITHOUT_CLASSIFICATION	6.871817090745105E-5	DESIGN
Compute Meet Over All Paths solution for this dataflow problem on the input CFG. This implements a standard worklist algorithm.	WITHOUT_CLASSIFICATION	0.887154503562736	WITHOUT_CLASSIFICATION	0.11284549643726408	DESIGN
Individual analyses should override this	WITHOUT_CLASSIFICATION	0.9897133098921751	WITHOUT_CLASSIFICATION	0.010286690107824936	DESIGN
Individual analyses should override this	WITHOUT_CLASSIFICATION	0.9897133098921751	WITHOUT_CLASSIFICATION	0.010286690107824936	DESIGN
-------------- Packaged/protected fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9998034341681201	WITHOUT_CLASSIFICATION	1.9656583187986997E-4	DESIGN
We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9993033988063438	WITHOUT_CLASSIFICATION	6.966011936561204E-4	DESIGN
-------------- Protected fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9998168929203707	WITHOUT_CLASSIFICATION	1.831070796293331E-4	DESIGN
-------------- Private fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9999258685027093	WITHOUT_CLASSIFICATION	7.41314972906777E-5	DESIGN
Initialize all flow graph nodes	WITHOUT_CLASSIFICATION	0.999975295288694	WITHOUT_CLASSIFICATION	2.470471130595E-5	DESIGN
Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses	WITHOUT_CLASSIFICATION	0.7288691101584621	WITHOUT_CLASSIFICATION	0.2711308898415378	DESIGN
PUBLIC INTERFACE	WITHOUT_CLASSIFICATION	0.9995326275261098	WITHOUT_CLASSIFICATION	4.673724738901347E-4	DESIGN
Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9910300848861671	WITHOUT_CLASSIFICATION	0.008969915113832806	DESIGN
start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9991238385392354	WITHOUT_CLASSIFICATION	8.761614607645797E-4	DESIGN
switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9978002486611139	WITHOUT_CLASSIFICATION	0.002199751338886042	DESIGN
----------- Public Interface ------------	WITHOUT_CLASSIFICATION	0.9995810701981585	WITHOUT_CLASSIFICATION	4.1892980184160745E-4	DESIGN
class or module	WITHOUT_CLASSIFICATION	0.9982208150512383	WITHOUT_CLASSIFICATION	0.0017791849487617949	DESIGN
OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9996665963211444	WITHOUT_CLASSIFICATION	3.3340367885553105E-4	DESIGN
Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9987464432180462	WITHOUT_CLASSIFICATION	0.001253556781953728	DESIGN
v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9998167206741866	WITHOUT_CLASSIFICATION	1.8327932581351E-4	DESIGN
IN is the same!	WITHOUT_CLASSIFICATION	0.9992379982488968	WITHOUT_CLASSIFICATION	7.620017511030774E-4	DESIGN
IN changed!	WITHOUT_CLASSIFICATION	0.9990286466788662	WITHOUT_CLASSIFICATION	9.713533211338497E-4	DESIGN
---------- Protected / package fields, methods ---------	WITHOUT_CLASSIFICATION	0.9990546098705358	WITHOUT_CLASSIFICATION	9.45390129464125E-4	DESIGN
If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9993378688681309	WITHOUT_CLASSIFICATION	6.621311318690992E-4	DESIGN
Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9787416703234503	WITHOUT_CLASSIFICATION	0.021258329676549725	DESIGN
---------- Private fields, methods ---------	WITHOUT_CLASSIFICATION	0.9998013068233262	WITHOUT_CLASSIFICATION	1.9869317667379384E-4	DESIGN
Variables live at entry of this node Variables live at exit of node Temporary set of live variables Size of the "_in" and "_out" bit sets	WITHOUT_CLASSIFICATION	0.6472130218807338	DESIGN	0.3527869781192661	WITHOUT_CLASSIFICATION
Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9941611395960593	WITHOUT_CLASSIFICATION	0.005838860403940652	DESIGN
Does this instruction have side effects as a result of its operation This information is used in optimization phases to impact dead code elimination and other optimization passes	WITHOUT_CLASSIFICATION	0.9973475230189107	DESIGN	0.0026524769810893135	WITHOUT_CLASSIFICATION
--------- "Abstract"/"please-override" methods ---------	WITHOUT_CLASSIFICATION	0.999298087132154	WITHOUT_CLASSIFICATION	7.019128678460938E-4	DESIGN
Array of all operands for this instruction	WITHOUT_CLASSIFICATION	0.9985847486714357	WITHOUT_CLASSIFICATION	0.0014152513285643374	DESIGN
List of all variables used by all operands of this instruction	WITHOUT_CLASSIFICATION	0.979599398046467	WITHOUT_CLASSIFICATION	0.02040060195353304	DESIGN
This method takes as input a map of operands to their values, and outputs If the value map provides a value for any of the instruction's operands this method is expected to replace the original operands with the simplified values. It is not required that it do so -- code correctness is not compromised by failure to simplify	WITHOUT_CLASSIFICATION	0.9991665580219867	WITHOUT_CLASSIFICATION	8.334419780131632E-4	DESIGN
By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9998818099558903	WITHOUT_CLASSIFICATION	1.181900441096722E-4	DESIGN
Can this call lead to ruby code getting modified? If we don't know what method we are calling, we assume it can (pessimistic, but safe!) If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.5234740525826495	DESIGN	0.4765259474173504	WITHOUT_CLASSIFICATION
By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999247746843634	WITHOUT_CLASSIFICATION	7.522531563670479E-5	DESIGN
If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.998209499840313	WITHOUT_CLASSIFICATION	0.0017905001596869004	DESIGN
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.9669219453037687	WITHOUT_CLASSIFICATION	0.033078054696231256	DESIGN
Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9985494392415968	WITHOUT_CLASSIFICATION	0.0014505607584032595	DESIGN
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.9669219453037687	WITHOUT_CLASSIFICATION	0.033078054696231256	DESIGN
You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9997238526815955	WITHOUT_CLASSIFICATION	2.7614731840443733E-4	DESIGN
If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9998189577984425	WITHOUT_CLASSIFICATION	1.8104220155748107E-4	DESIGN
If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9998189577984425	WITHOUT_CLASSIFICATION	1.8104220155748107E-4	DESIGN
If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9998189577984425	WITHOUT_CLASSIFICATION	1.8104220155748107E-4	DESIGN
For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999985673216373	WITHOUT_CLASSIFICATION	1.432678362760506E-6	DESIGN
For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999985673216373	WITHOUT_CLASSIFICATION	1.432678362760506E-6	DESIGN
The operand that this attribute targets DEFERRED AttributeValue _val; Attribute value	WITHOUT_CLASSIFICATION	0.9999708225638861	WITHOUT_CLASSIFICATION	2.9177436113840162E-5	DESIGN
Arrays, Ranges, etc. are compound values Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9996269997531272	WITHOUT_CLASSIFICATION	3.73000246872861E-4	DESIGN
Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999725804004789	WITHOUT_CLASSIFICATION	2.7419599521082294E-5	DESIGN
The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.7911760871362471	DESIGN	0.20882391286375296	WITHOUT_CLASSIFICATION
Nothing to do by default	WITHOUT_CLASSIFICATION	0.9999265008407991	WITHOUT_CLASSIFICATION	7.349915920085272E-5	DESIGN
Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9989189281560429	WITHOUT_CLASSIFICATION	0.0010810718439571245	DESIGN
Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9997539813406116	WITHOUT_CLASSIFICATION	2.4601865938852287E-4	DESIGN
ignore	WITHOUT_CLASSIFICATION	0.999703902276324	WITHOUT_CLASSIFICATION	2.960977236759998E-4	DESIGN
Scope (method/closure) to which this cfg belongs Entry BB -- dummy Exit BB -- dummy The actual graph Next available basic block id	WITHOUT_CLASSIFICATION	0.999805874561419	WITHOUT_CLASSIFICATION	1.941254385809194E-4	DESIGN
Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9996105474774847	WITHOUT_CLASSIFICATION	3.8945252251526335E-4	DESIGN
Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9995599129201382	WITHOUT_CLASSIFICATION	4.400870798618377E-4	DESIGN
currBB cannot be null!	WITHOUT_CLASSIFICATION	0.999522625439648	WITHOUT_CLASSIFICATION	4.773745603519925E-4	DESIGN
Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9997212775513383	WITHOUT_CLASSIFICATION	2.787224486616786E-4	DESIGN
root-level logic	WITHOUT_CLASSIFICATION	0.9995571525344341	WITHOUT_CLASSIFICATION	4.428474655659141E-4	DESIGN
root-level methods	WITHOUT_CLASSIFICATION	0.9995178451342488	WITHOUT_CLASSIFICATION	4.82154865751162E-4	DESIGN
root-level classes	WITHOUT_CLASSIFICATION	0.9997161345930714	WITHOUT_CLASSIFICATION	2.838654069286722E-4	DESIGN
case 4: signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); break; case 5: signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); break;	WITHOUT_CLASSIFICATION	0.9999631678944594	WITHOUT_CLASSIFICATION	3.68321055405461E-5	DESIGN
load receiver	WITHOUT_CLASSIFICATION	0.9996753964840438	WITHOUT_CLASSIFICATION	3.2460351595619327E-4	DESIGN
load receiver	WITHOUT_CLASSIFICATION	0.9996753964840438	WITHOUT_CLASSIFICATION	3.2460351595619327E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9997191098486099	WITHOUT_CLASSIFICATION	2.808901513900452E-4	DESIGN
load arguments	WITHOUT_CLASSIFICATION	0.9995879512311893	WITHOUT_CLASSIFICATION	4.120487688107445E-4	DESIGN
load arguments	WITHOUT_CLASSIFICATION	0.9995879512311893	WITHOUT_CLASSIFICATION	4.120487688107445E-4	DESIGN
case 4: case 5:	WITHOUT_CLASSIFICATION	0.9999094543407386	WITHOUT_CLASSIFICATION	9.054565926138449E-5	DESIGN
Object[] args	WITHOUT_CLASSIFICATION	0.9996807505100535	WITHOUT_CLASSIFICATION	3.192494899465984E-4	DESIGN
load handle	WITHOUT_CLASSIFICATION	0.9976797352630484	WITHOUT_CLASSIFICATION	0.0023202647369516684	DESIGN
args array	WITHOUT_CLASSIFICATION	0.9997487780122484	WITHOUT_CLASSIFICATION	2.512219877515901E-4	DESIGN
i'th argument	WITHOUT_CLASSIFICATION	0.9996787025277736	WITHOUT_CLASSIFICATION	3.212974722264026E-4	DESIGN
invoke specific arity version	WITHOUT_CLASSIFICATION	0.9997225167675438	WITHOUT_CLASSIFICATION	2.774832324562438E-4	DESIGN
Object arg0	WITHOUT_CLASSIFICATION	0.9996322375757871	WITHOUT_CLASSIFICATION	3.6776242421294775E-4	DESIGN
useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.999900729026382	WITHOUT_CLASSIFICATION	9.927097361801496E-5	DESIGN
No editing before startPos	WITHOUT_CLASSIFICATION	0.9999736788243014	WITHOUT_CLASSIFICATION	2.632117569860981E-5	DESIGN
no silly ticks!	WITHOUT_CLASSIFICATION	0.9974598801478026	WITHOUT_CLASSIFICATION	0.0025401198521973747	DESIGN
no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9996785746863798	WITHOUT_CLASSIFICATION	3.2142531362018746E-4	DESIGN
at end	WITHOUT_CLASSIFICATION	0.9990253201012865	WITHOUT_CLASSIFICATION	9.7467989871357E-4	DESIGN
undo check	WITHOUT_CLASSIFICATION	0.9999262979553236	WITHOUT_CLASSIFICATION	7.370204467647341E-5	DESIGN
Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9992890505687543	WITHOUT_CLASSIFICATION	7.109494312457481E-4	DESIGN
ignore	WITHOUT_CLASSIFICATION	0.999703902276324	WITHOUT_CLASSIFICATION	2.960977236759998E-4	DESIGN
\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
Assign the values.	WITHOUT_CLASSIFICATION	0.9995718177706888	WITHOUT_CLASSIFICATION	4.28182229311202E-4	DESIGN
no check for ''	WITHOUT_CLASSIFICATION	0.9999038749416407	WITHOUT_CLASSIFICATION	9.612505835934133E-5	DESIGN
no check for ''	WITHOUT_CLASSIFICATION	0.9999038749416407	WITHOUT_CLASSIFICATION	9.612505835934133E-5	DESIGN
Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9989387775906093	WITHOUT_CLASSIFICATION	0.0010612224093905628	DESIGN
this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9941477596585505	WITHOUT_CLASSIFICATION	0.005852240341449444	DESIGN
no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9996241261719047	WITHOUT_CLASSIFICATION	3.7587382809527447E-4	DESIGN
restore position	WITHOUT_CLASSIFICATION	0.9998272888522061	WITHOUT_CLASSIFICATION	1.727111477939458E-4	DESIGN
Something like cvar_cbase() from eval.c, factored out for the benefit of all the classvar-related node evaluations	WITHOUT_CLASSIFICATION	0.9999209281526563	WITHOUT_CLASSIFICATION	7.907184734362277E-5	DESIGN
Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999543724084261	WITHOUT_CLASSIFICATION	4.562759157400308E-5	DESIGN
JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.999982371661905	WITHOUT_CLASSIFICATION	1.7628338095105228E-5	DESIGN
MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.998197646481963	WITHOUT_CLASSIFICATION	0.0018023535180370165	DESIGN
We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999310077063011	WITHOUT_CLASSIFICATION	6.899229369896626E-5	DESIGN
JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999113288064893	WITHOUT_CLASSIFICATION	8.867119351078036E-5	DESIGN
not overridden, let's go	WITHOUT_CLASSIFICATION	0.9997159715131183	WITHOUT_CLASSIFICATION	2.840284868817624E-4	DESIGN
Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8()	WITHOUT_CLASSIFICATION	0.9994718049516987	WITHOUT_CLASSIFICATION	5.281950483013124E-4	DESIGN
FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.597658991233549	WITHOUT_CLASSIFICATION	0.40234100876645096	DESIGN
Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9992367952346168	WITHOUT_CLASSIFICATION	7.632047653830355E-4	DESIGN
clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9998720190493863	WITHOUT_CLASSIFICATION	1.279809506136321E-4	DESIGN
These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.6347420424472439	WITHOUT_CLASSIFICATION	0.36525795755275625	DESIGN
Timeout module methods	WITHOUT_CLASSIFICATION	0.9965846843246702	WITHOUT_CLASSIFICATION	0.003415315675329848	DESIGN
Toplevel defines	WITHOUT_CLASSIFICATION	0.9995527276847684	WITHOUT_CLASSIFICATION	4.4727231523159026E-4	DESIGN
No seconds, just yield	WITHOUT_CLASSIFICATION	0.9997269771628094	WITHOUT_CLASSIFICATION	2.730228371906128E-4	DESIGN
No timeout in critical section	WITHOUT_CLASSIFICATION	0.9992244873786998	WITHOUT_CLASSIFICATION	7.755126213001766E-4	DESIGN
if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9998539624027888	WITHOUT_CLASSIFICATION	1.4603759721123536E-4	DESIGN
and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9990287080408792	WITHOUT_CLASSIFICATION	9.712919591208488E-4	DESIGN
otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9996545042317029	WITHOUT_CLASSIFICATION	3.454957682971168E-4	DESIGN
Remove the Executor task now, to avoid cancelled tasks accumulating until an Executor thread can schedule and remove them	WITHOUT_CLASSIFICATION	0.9776441172968184	WITHOUT_CLASSIFICATION	0.02235588270318162	DESIGN
If the task was scheduled, wait for it to finish before polling for the exception it would have thrown.	WITHOUT_CLASSIFICATION	0.9999347824929723	WITHOUT_CLASSIFICATION	6.52175070278039E-5	DESIGN
NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9988157287080784	WITHOUT_CLASSIFICATION	0.0011842712919215147	DESIGN
When a length is given, read_string acts like get_bytes	WITHOUT_CLASSIFICATION	0.9972419429548199	WITHOUT_CLASSIFICATION	0.002758057045180106	DESIGN
Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9979170339647521	WITHOUT_CLASSIFICATION	0.0020829660352478683	DESIGN
ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9910307052262174	WITHOUT_CLASSIFICATION	0.008969294773782499	DESIGN
If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9998243571180911	WITHOUT_CLASSIFICATION	1.7564288190878078E-4	DESIGN
This variant of newStruct is called from StructLayoutBuilder	WITHOUT_CLASSIFICATION	0.9975066261876958	WITHOUT_CLASSIFICATION	0.0024933738123042505	DESIGN
This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999509701825312	WITHOUT_CLASSIFICATION	4.9029817468924374E-5	DESIGN
Windows is LLP64	WITHOUT_CLASSIFICATION	0.9906700925021551	WITHOUT_CLASSIFICATION	0.009329907497844925	DESIGN
Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9986926904532263	WITHOUT_CLASSIFICATION	0.0013073095467737907	DESIGN
Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999718187878739	WITHOUT_CLASSIFICATION	2.8181212126080512E-5	DESIGN
$blah	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9979170339647521	WITHOUT_CLASSIFICATION	0.0020829660352478683	DESIGN
A specific version was requested - use as is for search	WITHOUT_CLASSIFICATION	0.999778009257902	WITHOUT_CLASSIFICATION	2.219907420979168E-4	DESIGN
Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999718187878739	WITHOUT_CLASSIFICATION	2.8181212126080512E-5	DESIGN
Keep a reference to the temporary memory in the cache so it does not get freed by the GC until the struct is freed	WITHOUT_CLASSIFICATION	0.9986795798454886	WITHOUT_CLASSIFICATION	0.0013204201545114352	DESIGN
Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9997473290552469	WITHOUT_CLASSIFICATION	2.526709447531193E-4	DESIGN
Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999356826320962	WITHOUT_CLASSIFICATION	6.431736790386138E-5	DESIGN
Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9994857503136787	WITHOUT_CLASSIFICATION	5.142496863212757E-4	DESIGN
case FLOAT:	WITHOUT_CLASSIFICATION	0.9999090816605719	WITHOUT_CLASSIFICATION	9.09183394281819E-5	DESIGN
keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9996527169317956	WITHOUT_CLASSIFICATION	3.472830682044178E-4	DESIGN
keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9996527169317956	WITHOUT_CLASSIFICATION	3.472830682044178E-4	DESIGN
No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9999387704438796	WITHOUT_CLASSIFICATION	6.122955612035448E-5	DESIGN
Wire up Function#call(args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9988338373222396	WITHOUT_CLASSIFICATION	0.001166162677760345	DESIGN
Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999728806993273	WITHOUT_CLASSIFICATION	2.7119300672591438E-5	DESIGN
Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999728806993273	WITHOUT_CLASSIFICATION	2.7119300672591438E-5	DESIGN
If there is exactly _one_ callback argument to the function, then a block can be given and automatically subsituted for the callback parameter.	WITHOUT_CLASSIFICATION	0.9999027823272166	WITHOUT_CLASSIFICATION	9.721767278338681E-5	DESIGN
------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999559493251625	WITHOUT_CLASSIFICATION	4.4050674837504E-4	DESIGN
AF_INET	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
AF_INET	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
line 321	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
Set up for potentially fast-int operations	WITHOUT_CLASSIFICATION	0.9999461436460146	WITHOUT_CLASSIFICATION	5.3856353985427465E-5	DESIGN
Hook up the MemoryPointer class if its not already there	WITHOUT_CLASSIFICATION	0.9997313521936353	WITHOUT_CLASSIFICATION	2.6864780636463154E-4	DESIGN
This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.974428381165422	WITHOUT_CLASSIFICATION	0.025571618834578126	DESIGN
no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9832681987393811	WITHOUT_CLASSIFICATION	0.01673180126061887	DESIGN
Sockaddr_un has different structure on different platforms. See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9412415376533891	WITHOUT_CLASSIFICATION	0.05875846234661075	DESIGN
There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999501028137925	WITHOUT_CLASSIFICATION	4.989718620749558E-5	DESIGN
RubyIPSocket	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999268408618296	WITHOUT_CLASSIFICATION	7.315913817034063E-5	DESIGN
host and port given	WITHOUT_CLASSIFICATION	0.9990658474200714	WITHOUT_CLASSIFICATION	9.341525799284783E-4	DESIGN
RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999736109330014	WITHOUT_CLASSIFICATION	2.6389066998543382E-5	DESIGN
make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9997786768657634	WITHOUT_CLASSIFICATION	2.2132313423653264E-4	DESIGN
continue with normal initialization	WITHOUT_CLASSIFICATION	0.9998992152230527	WITHOUT_CLASSIFICATION	1.0078477694738549E-4	DESIGN
recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9906079180463555	WITHOUT_CLASSIFICATION	0.009392081953644398	DESIGN
Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9986125178936761	WITHOUT_CLASSIFICATION	0.0013874821063239351	DESIGN
RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9997421771375802	WITHOUT_CLASSIFICATION	2.578228624197972E-4	DESIGN
mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9983510482993608	WITHOUT_CLASSIFICATION	0.001648951700639095	DESIGN
constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9997533411366188	WITHOUT_CLASSIFICATION	2.466588633811459E-4	DESIGN
More constants needed by specs	WITHOUT_CLASSIFICATION	0.9983713032932037	WITHOUT_CLASSIFICATION	0.0016286967067962784	DESIGN
normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9996375428826612	WITHOUT_CLASSIFICATION	3.6245711733874257E-4	DESIGN
AF_INET	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
255.255.255.255	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
0.0.0.0	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9994925982393008	WITHOUT_CLASSIFICATION	5.074017606993223E-4	DESIGN
line 323	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
can't set TC classloader	WITHOUT_CLASSIFICATION	0.9919750359458478	WITHOUT_CLASSIFICATION	0.008024964054152166	DESIGN
can't set TC classloader	WITHOUT_CLASSIFICATION	0.9919750359458478	WITHOUT_CLASSIFICATION	0.008024964054152166	DESIGN
ok, it's a socket...set values accordingly just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999424097486065	WITHOUT_CLASSIFICATION	5.759025139343033E-5	DESIGN
datagram, set accordingly again, AF_INET	WITHOUT_CLASSIFICATION	0.9999406227666339	WITHOUT_CLASSIFICATION	5.937723336608772E-5	DESIGN
IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9996506815230611	WITHOUT_CLASSIFICATION	3.4931847693891695E-4	DESIGN
When Socket::AI_PASSIVE and host is nil, return 'any' address.	WITHOUT_CLASSIFICATION	0.9995006605783937	WITHOUT_CLASSIFICATION	4.993394216061647E-4	DESIGN
The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999326980061155	WITHOUT_CLASSIFICATION	6.730199388446183E-5	DESIGN
RubySocket	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9928072079802456	WITHOUT_CLASSIFICATION	0.0071927920197544844	DESIGN
e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998550901093817	WITHOUT_CLASSIFICATION	1.4490989061836818E-4	DESIGN
we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999260064445219	WITHOUT_CLASSIFICATION	7.399355547816479E-5	DESIGN
otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999960221227999	WITHOUT_CLASSIFICATION	3.977877200070199E-6	DESIGN
no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9998982942281096	WITHOUT_CLASSIFICATION	1.0170577189034864E-4	DESIGN
do nothing, just exit	WITHOUT_CLASSIFICATION	0.9997202659754902	WITHOUT_CLASSIFICATION	2.797340245097364E-4	DESIGN
nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9992896603773488	WITHOUT_CLASSIFICATION	7.103396226513182E-4	DESIGN
set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9965172900728034	WITHOUT_CLASSIFICATION	0.0034827099271966693	DESIGN
uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9993981581125783	WITHOUT_CLASSIFICATION	6.018418874216971E-4	DESIGN
Call the thread's code	WITHOUT_CLASSIFICATION	0.997004994863011	WITHOUT_CLASSIFICATION	0.002995005136988988	DESIGN
Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9998601300860044	WITHOUT_CLASSIFICATION	1.3986991399558206E-4	DESIGN
restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999691012912278	WITHOUT_CLASSIFICATION	3.089870877218424E-5	DESIGN
be dead	WITHOUT_CLASSIFICATION	0.9798644333179735	WITHOUT_CLASSIFICATION	0.02013556668202653	DESIGN
loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9997017203612112	WITHOUT_CLASSIFICATION	2.982796387888062E-4	DESIGN
all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999581040050933	WITHOUT_CLASSIFICATION	4.1895994906741374E-5	DESIGN
thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9984681451958615	WITHOUT_CLASSIFICATION	0.0015318548041385219	DESIGN
future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9996372851730556	WITHOUT_CLASSIFICATION	3.6271482694439944E-4	DESIGN
first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999688863426276	WITHOUT_CLASSIFICATION	3.111365737231883E-5	DESIGN
then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999616893519541	WITHOUT_CLASSIFICATION	3.831064804599536E-5	DESIGN
UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9923568892529262	WITHOUT_CLASSIFICATION	0.007643110747073781	DESIGN
Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9998640264199262	WITHOUT_CLASSIFICATION	1.3597358007379996E-4	DESIGN
invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9994516948766392	WITHOUT_CLASSIFICATION	5.483051233609044E-4	DESIGN
main body	WITHOUT_CLASSIFICATION	0.9998884861014636	WITHOUT_CLASSIFICATION	1.1151389853631145E-4	DESIGN
return jump handling	WITHOUT_CLASSIFICATION	0.9996451712012998	WITHOUT_CLASSIFICATION	3.5482879870012406E-4	DESIGN
finally	WITHOUT_CLASSIFICATION	0.9994772529736206	WITHOUT_CLASSIFICATION	5.227470263795442E-4	DESIGN
return result if we're still good	WITHOUT_CLASSIFICATION	0.9999405986829237	WITHOUT_CLASSIFICATION	5.940131707628312E-5	DESIGN
redo jump handling	WITHOUT_CLASSIFICATION	0.9993933441240688	WITHOUT_CLASSIFICATION	6.066558759312005E-4	DESIGN
clear the redo	WITHOUT_CLASSIFICATION	0.9998684287047178	WITHOUT_CLASSIFICATION	1.3157129528222738E-4	DESIGN
get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9994519138249282	WITHOUT_CLASSIFICATION	5.48086175071801E-4	DESIGN
throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.999285352932599	WITHOUT_CLASSIFICATION	7.146470674010317E-4	DESIGN
finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.999667565704457	WITHOUT_CLASSIFICATION	3.3243429554303844E-4	DESIGN
call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9933010073510904	WITHOUT_CLASSIFICATION	0.006698992648909638	DESIGN
No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999958757541895	WITHOUT_CLASSIFICATION	4.12424581047525E-6	DESIGN
actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9998940619263678	WITHOUT_CLASSIFICATION	1.0593807363231074E-4	DESIGN
actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9999185701903734	WITHOUT_CLASSIFICATION	8.142980962654848E-5	DESIGN
simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9995741515761953	WITHOUT_CLASSIFICATION	4.258484238045787E-4	DESIGN
in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9435548069595985	WITHOUT_CLASSIFICATION	0.0564451930404016	DESIGN
in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9435548069595985	WITHOUT_CLASSIFICATION	0.0564451930404016	DESIGN
normal all-rest method	WITHOUT_CLASSIFICATION	0.9994812845313312	WITHOUT_CLASSIFICATION	5.187154686688499E-4	DESIGN
for zero, one, two, three arities, JavaMethod.JavaMethod.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999596588116735	WITHOUT_CLASSIFICATION	4.034118832653265E-5	DESIGN
promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9958837715760154	WITHOUT_CLASSIFICATION	0.004116228423984693	DESIGN
return	WITHOUT_CLASSIFICATION	0.999708822120081	WITHOUT_CLASSIFICATION	2.911778799190036E-4	DESIGN
just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999272367763509	WITHOUT_CLASSIFICATION	7.276322364919318E-5	DESIGN
just confirm args length == required	WITHOUT_CLASSIFICATION	0.9994615087596653	WITHOUT_CLASSIFICATION	5.38491240334703E-4	DESIGN
confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9998399670753292	WITHOUT_CLASSIFICATION	1.600329246708528E-4	DESIGN
confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9987257727492064	WITHOUT_CLASSIFICATION	0.0012742272507937015	DESIGN
Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9998965702937793	WITHOUT_CLASSIFICATION	1.034297062206916E-4	DESIGN
tc	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
self name	WITHOUT_CLASSIFICATION	0.9994776448629235	WITHOUT_CLASSIFICATION	5.223551370766727E-4	DESIGN
no args	WITHOUT_CLASSIFICATION	0.9998032016532903	WITHOUT_CLASSIFICATION	1.9679834670980394E-4	DESIGN
variable args with block	WITHOUT_CLASSIFICATION	0.9971739239806506	WITHOUT_CLASSIFICATION	0.0028260760193494247	DESIGN
variable args no block, load null block	WITHOUT_CLASSIFICATION	0.999516274659943	WITHOUT_CLASSIFICATION	4.837253400569495E-4	DESIGN
zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999212200491089	WITHOUT_CLASSIFICATION	7.87799508910919E-5	DESIGN
one arg with block	WITHOUT_CLASSIFICATION	0.9996982488910902	WITHOUT_CLASSIFICATION	3.017511089098566E-4	DESIGN
one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9995434206564676	WITHOUT_CLASSIFICATION	4.5657934353236215E-4	DESIGN
two args with block	WITHOUT_CLASSIFICATION	0.999089733749515	WITHOUT_CLASSIFICATION	9.102662504850227E-4	DESIGN
two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9985569420579211	WITHOUT_CLASSIFICATION	0.0014430579420789235	DESIGN
three args with block	WITHOUT_CLASSIFICATION	0.9991851274303086	WITHOUT_CLASSIFICATION	8.148725696913994E-4	DESIGN
three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9994688188532299	WITHOUT_CLASSIFICATION	5.311811467702025E-4	DESIGN
load block if it accepts block	WITHOUT_CLASSIFICATION	0.9993105049267564	WITHOUT_CLASSIFICATION	6.89495073243496E-4	DESIGN
all other arg cases with block	WITHOUT_CLASSIFICATION	0.9955817106170753	WITHOUT_CLASSIFICATION	0.00441828938292457	DESIGN
all other arg cases without block	WITHOUT_CLASSIFICATION	0.999205833289705	WITHOUT_CLASSIFICATION	7.941667102948533E-4	DESIGN
one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9995888291643874	WITHOUT_CLASSIFICATION	4.1117083561258323E-4	DESIGN
two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9987003319513047	WITHOUT_CLASSIFICATION	0.0012996680486952845	DESIGN
three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9997131572074351	WITHOUT_CLASSIFICATION	2.8684279256492123E-4	DESIGN
load target for invocations	WITHOUT_CLASSIFICATION	0.9999075775653793	WITHOUT_CLASSIFICATION	9.242243462076492E-5	DESIGN
load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999501249780611	WITHOUT_CLASSIFICATION	4.9875021938938675E-5	DESIGN
static invocation	WITHOUT_CLASSIFICATION	0.9992874668326828	WITHOUT_CLASSIFICATION	7.125331673171387E-4	DESIGN
virtual invocation	WITHOUT_CLASSIFICATION	0.9999061208295846	WITHOUT_CLASSIFICATION	9.387917041528746E-5	DESIGN
void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9990505352162002	WITHOUT_CLASSIFICATION	9.494647837997098E-4	DESIGN
normal finally and exit	WITHOUT_CLASSIFICATION	0.9999148279814675	WITHOUT_CLASSIFICATION	8.517201853257E-5	DESIGN
promise to implement one to N	WITHOUT_CLASSIFICATION	0.9772290475950786	WITHOUT_CLASSIFICATION	0.022770952404921475	DESIGN
call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9933010073510904	WITHOUT_CLASSIFICATION	0.006698992648909638	DESIGN
these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9902684759029391	WITHOUT_CLASSIFICATION	0.009731524097060974	DESIGN
method itself ThreadContext invoked name	WITHOUT_CLASSIFICATION	0.9853902356239894	WITHOUT_CLASSIFICATION	0.014609764376010527	DESIGN
method itself ThreadContext invoked name	WITHOUT_CLASSIFICATION	0.9853902356239894	WITHOUT_CLASSIFICATION	0.014609764376010527	DESIGN
singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.8793987993265939	WITHOUT_CLASSIFICATION	0.12060120067340599	DESIGN
For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.8432155938376406	DESIGN	0.15678440616235953	WITHOUT_CLASSIFICATION
SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9988157287080784	WITHOUT_CLASSIFICATION	0.0011842712919215147	DESIGN
never reached	WITHOUT_CLASSIFICATION	0.9998586816292176	WITHOUT_CLASSIFICATION	1.4131837078237126E-4	DESIGN
promise to implement N with block	WITHOUT_CLASSIFICATION	0.9747221588679427	WITHOUT_CLASSIFICATION	0.025277841132057367	DESIGN
promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9965494271900859	WITHOUT_CLASSIFICATION	0.003450572809914048	DESIGN
promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9808534516555563	WITHOUT_CLASSIFICATION	0.019146548344443785	DESIGN
promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9402811940779688	WITHOUT_CLASSIFICATION	0.05971880592203123	DESIGN
promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.996862971027201	WITHOUT_CLASSIFICATION	0.0031370289727989365	DESIGN
promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.982568296565357	WITHOUT_CLASSIFICATION	0.017431703434642995	DESIGN
promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9454276829607017	WITHOUT_CLASSIFICATION	0.054572317039298296	DESIGN
promise to implement three with block	WITHOUT_CLASSIFICATION	0.9769732561536877	WITHOUT_CLASSIFICATION	0.023026743846312234	DESIGN
promise to implement N	WITHOUT_CLASSIFICATION	0.9699726444074902	WITHOUT_CLASSIFICATION	0.030027355592509894	DESIGN
DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9988157287080784	WITHOUT_CLASSIFICATION	0.0011842712919215147	DESIGN
We promote our box to being its own box since we're changing visibilities, and need it to be reflected on this method object independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9904408330081812	WITHOUT_CLASSIFICATION	0.009559166991818755	DESIGN
Normally we could leave these to fall back on the superclass, but since it dispatches through the [] version below, which may dispatch through the []+block version, we can save it a couple hops by overriding these here.	WITHOUT_CLASSIFICATION	0.8639925129523298	WITHOUT_CLASSIFICATION	0.13600748704767016	DESIGN
promise to implement two to N	WITHOUT_CLASSIFICATION	0.9295283462052302	WITHOUT_CLASSIFICATION	0.07047165379476981	DESIGN
promise to implement three to N	WITHOUT_CLASSIFICATION	0.9835591750537506	WITHOUT_CLASSIFICATION	0.016440824946249467	DESIGN
promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9977529467613442	WITHOUT_CLASSIFICATION	0.00224705323865591	DESIGN
promise to implement one to three	WITHOUT_CLASSIFICATION	0.9874626703328555	WITHOUT_CLASSIFICATION	0.012537329667144523	DESIGN
promise to implement two to three	WITHOUT_CLASSIFICATION	0.9603291533215754	WITHOUT_CLASSIFICATION	0.03967084667842455	DESIGN
promise to implement three	WITHOUT_CLASSIFICATION	0.9726348311354892	WITHOUT_CLASSIFICATION	0.027365168864510837	DESIGN
all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9991505083660525	WITHOUT_CLASSIFICATION	8.494916339474949E-4	DESIGN
load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9991247289312801	WITHOUT_CLASSIFICATION	8.752710687198515E-4	DESIGN
open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999760289570283	WITHOUT_CLASSIFICATION	2.3971042971666815E-5	DESIGN
construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9997764027846284	WITHOUT_CLASSIFICATION	2.235972153715125E-4	DESIGN
fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9989253018153327	WITHOUT_CLASSIFICATION	0.001074698184667304	DESIGN
create constructor	WITHOUT_CLASSIFICATION	0.9985042563945699	WITHOUT_CLASSIFICATION	0.0014957436054301551	DESIGN
wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999885413176314	WITHOUT_CLASSIFICATION	1.1458682368640775E-5	DESIGN
end constructor	WITHOUT_CLASSIFICATION	0.9991760030356203	WITHOUT_CLASSIFICATION	8.239969643797388E-4	DESIGN
start setup method	WITHOUT_CLASSIFICATION	0.9997663888476812	WITHOUT_CLASSIFICATION	2.336111523186522E-4	DESIGN
set RubyClass	WITHOUT_CLASSIFICATION	0.9991650982342061	WITHOUT_CLASSIFICATION	8.349017657938807E-4	DESIGN
set Ruby	WITHOUT_CLASSIFICATION	0.9990649161214658	WITHOUT_CLASSIFICATION	9.35083878534207E-4	DESIGN
all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999905794533622	WITHOUT_CLASSIFICATION	9.420546637731143E-6	DESIGN
try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9998424856019644	WITHOUT_CLASSIFICATION	1.575143980355809E-4	DESIGN
get current context	WITHOUT_CLASSIFICATION	0.9999173450287685	WITHOUT_CLASSIFICATION	8.265497123157914E-5	DESIGN
load self, class, and name	WITHOUT_CLASSIFICATION	0.9985083961439236	WITHOUT_CLASSIFICATION	0.0014916038560763988	DESIGN
construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9997764027846284	WITHOUT_CLASSIFICATION	2.235972153715125E-4	DESIGN
fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9989253018153327	WITHOUT_CLASSIFICATION	0.001074698184667304	DESIGN
create constructor	WITHOUT_CLASSIFICATION	0.9985042563945699	WITHOUT_CLASSIFICATION	0.0014957436054301551	DESIGN
end constructor	WITHOUT_CLASSIFICATION	0.9991760030356203	WITHOUT_CLASSIFICATION	8.239969643797388E-4	DESIGN
for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.999173880102634	WITHOUT_CLASSIFICATION	8.261198973660728E-4	DESIGN
load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9988185970142868	WITHOUT_CLASSIFICATION	0.001181402985713279	DESIGN
convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9988320830325225	WITHOUT_CLASSIFICATION	0.0011679169674775791	DESIGN
load null block	WITHOUT_CLASSIFICATION	0.9996960870175193	WITHOUT_CLASSIFICATION	3.0391298248060863E-4	DESIGN
invoke method	WITHOUT_CLASSIFICATION	0.999638760640827	WITHOUT_CLASSIFICATION	3.6123935917299464E-4	DESIGN
if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999750018407698	WITHOUT_CLASSIFICATION	2.4998159230164773E-5	DESIGN
end setup method	WITHOUT_CLASSIFICATION	0.9998420196509493	WITHOUT_CLASSIFICATION	1.5798034905061917E-4	DESIGN
end class	WITHOUT_CLASSIFICATION	0.9991065688938044	WITHOUT_CLASSIFICATION	8.934311061956558E-4	DESIGN
create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9938296920994842	WITHOUT_CLASSIFICATION	0.006170307900515778	DESIGN
store the wrapper	WITHOUT_CLASSIFICATION	0.9999889566908872	WITHOUT_CLASSIFICATION	1.1043309112964155E-5	DESIGN
prepare temp locals	WITHOUT_CLASSIFICATION	0.9998427483581098	WITHOUT_CLASSIFICATION	1.5725164189012185E-4	DESIGN
Try to look up field for simple name get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999743694372834	WITHOUT_CLASSIFICATION	2.5630562716712155E-5	DESIGN
field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9998898247649406	WITHOUT_CLASSIFICATION	1.1017523505938375E-4	DESIGN
try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9993073311260792	WITHOUT_CLASSIFICATION	6.926688739208183E-4	DESIGN
store it	WITHOUT_CLASSIFICATION	0.9998917487221023	WITHOUT_CLASSIFICATION	1.0825127789775554E-4	DESIGN
end of try block	WITHOUT_CLASSIFICATION	0.9998916300585773	WITHOUT_CLASSIFICATION	1.0836994142279242E-4	DESIGN
finally block to release monitor	WITHOUT_CLASSIFICATION	0.9903719651573397	WITHOUT_CLASSIFICATION	0.009628034842660164	DESIGN
exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9764431430843536	WITHOUT_CLASSIFICATION	0.023556856915646237	DESIGN
re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9982858168044886	WITHOUT_CLASSIFICATION	0.001714183195511409	DESIGN
load self, class, and name	WITHOUT_CLASSIFICATION	0.9985083961439236	WITHOUT_CLASSIFICATION	0.0014916038560763988	DESIGN
load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9988185970142868	WITHOUT_CLASSIFICATION	0.001181402985713279	DESIGN
convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9988320830325225	WITHOUT_CLASSIFICATION	0.0011679169674775791	DESIGN
invoke method	WITHOUT_CLASSIFICATION	0.999638760640827	WITHOUT_CLASSIFICATION	3.6123935917299464E-4	DESIGN
if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999750018407698	WITHOUT_CLASSIFICATION	2.4998159230164773E-5	DESIGN
end setup method	WITHOUT_CLASSIFICATION	0.9998420196509493	WITHOUT_CLASSIFICATION	1.5798034905061917E-4	DESIGN
end class	WITHOUT_CLASSIFICATION	0.9991065688938044	WITHOUT_CLASSIFICATION	8.934311061956558E-4	DESIGN
create the class	WITHOUT_CLASSIFICATION	0.9991598252380567	WITHOUT_CLASSIFICATION	8.401747619433374E-4	DESIGN
method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9983343997754209	WITHOUT_CLASSIFICATION	0.0016656002245790413	DESIGN
perform the dispatch	WITHOUT_CLASSIFICATION	0.9999417218073567	WITHOUT_CLASSIFICATION	5.827819264323521E-5	DESIGN
try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999735056131065	WITHOUT_CLASSIFICATION	2.6494386893537905E-5	DESIGN
up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9986628991672782	WITHOUT_CLASSIFICATION	0.0013371008327218367	DESIGN
up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9986628991672782	WITHOUT_CLASSIFICATION	0.0013371008327218367	DESIGN
setup the class	WITHOUT_CLASSIFICATION	0.9997566996279	WITHOUT_CLASSIFICATION	2.433003720999101E-4	DESIGN
now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.997431492098013	WITHOUT_CLASSIFICATION	0.002568507901987079	DESIGN
do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9981534181897135	WITHOUT_CLASSIFICATION	0.001846581810286494	DESIGN
probably a primitive	WITHOUT_CLASSIFICATION	0.9824383953324051	WITHOUT_CLASSIFICATION	0.017561604667594932	DESIGN
interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9997612852258975	WITHOUT_CLASSIFICATION	2.387147741024938E-4	DESIGN
construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9985672537881363	WITHOUT_CLASSIFICATION	0.0014327462118636646	DESIGN
set the full name	WITHOUT_CLASSIFICATION	0.9981944994132613	WITHOUT_CLASSIFICATION	0.0018055005867387423	DESIGN
include all interfaces	WITHOUT_CLASSIFICATION	0.9993046838081429	WITHOUT_CLASSIFICATION	6.953161918570835E-4	DESIGN
if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999799903062833	WITHOUT_CLASSIFICATION	2.0009693716837915E-5	DESIGN
add array construction methods	WITHOUT_CLASSIFICATION	0.9996016785546759	WITHOUT_CLASSIFICATION	3.9832144532418566E-4	DESIGN
add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9949906392100176	WITHOUT_CLASSIFICATION	0.005009360789982303	DESIGN
add all instance and static methods	WITHOUT_CLASSIFICATION	0.9966167313824147	WITHOUT_CLASSIFICATION	0.003383268617585268	DESIGN
proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9998134376308352	WITHOUT_CLASSIFICATION	1.8656236916480266E-4	DESIGN
too much array creation!	WITHOUT_CLASSIFICATION	0.995497454609112	WITHOUT_CLASSIFICATION	0.004502545390888076	DESIGN
only include static methods if specified	WITHOUT_CLASSIFICATION	0.9998175808619675	WITHOUT_CLASSIFICATION	1.8241913803259625E-4	DESIGN
add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9994968963879788	WITHOUT_CLASSIFICATION	5.031036120212238E-4	DESIGN
add all static variables	WITHOUT_CLASSIFICATION	0.9975468175737999	WITHOUT_CLASSIFICATION	0.0024531824261999867	DESIGN
only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9998312252244941	WITHOUT_CLASSIFICATION	1.6877477550601637E-4	DESIGN
looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999932345960212	WITHOUT_CLASSIFICATION	6.7654039788313614E-6	DESIGN
NOTE: The five match methods are arity-split to avoid the cost of boxing arguments when there's already a cached match. Do not condense them into a single method.	WITHOUT_CLASSIFICATION	0.99998246439253	WITHOUT_CLASSIFICATION	1.7535607469915222E-5	DESIGN
TODO: This is where we would want to do precision checks to see if it's non-destructive to coerce a given type into the target integral primitive	WITHOUT_CLASSIFICATION	0.8610675586163121	DESIGN	0.13893244138368782	WITHOUT_CLASSIFICATION
long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9984404402607153	WITHOUT_CLASSIFICATION	0.001559559739284715	DESIGN
double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9998043989917711	WITHOUT_CLASSIFICATION	1.9560100822883547E-4	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.528823705361872	WITHOUT_CLASSIFICATION	0.47117629463812793	DESIGN
read-volatile	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9974913407573841	WITHOUT_CLASSIFICATION	0.002508659242615826	DESIGN
we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9998969478601879	WITHOUT_CLASSIFICATION	1.0305213981211061E-4	DESIGN
If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.999629969568665	WITHOUT_CLASSIFICATION	3.700304313350295E-4	DESIGN
line 326	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
read-volatile	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9974913407573841	WITHOUT_CLASSIFICATION	0.002508659242615826	DESIGN
too much array creation!	WITHOUT_CLASSIFICATION	0.995497454609112	WITHOUT_CLASSIFICATION	0.004502545390888076	DESIGN
construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9998550589624441	WITHOUT_CLASSIFICATION	1.4494103755594739E-4	DESIGN
Get map of all fields we want to define.	WITHOUT_CLASSIFICATION	0.9995940985719728	WITHOUT_CLASSIFICATION	4.0590142802722777E-4	DESIGN
Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9991363357844442	WITHOUT_CLASSIFICATION	8.636642155558396E-4	DESIGN
Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9956022610429813	WITHOUT_CLASSIFICATION	0.004397738957018633	DESIGN
We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9987826695132781	WITHOUT_CLASSIFICATION	0.0012173304867218475	DESIGN
dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9997790727424919	WITHOUT_CLASSIFICATION	2.2092725750808153E-4	DESIGN
initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9992524300434604	WITHOUT_CLASSIFICATION	7.475699565395894E-4	DESIGN
initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.999730996164382	WITHOUT_CLASSIFICATION	2.690038356180123E-4	DESIGN
not allowed for original (non-generated) Java classes note: not allowing for any previously created class right now; this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9922070366519185	WITHOUT_CLASSIFICATION	0.007792963348081488	DESIGN
setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9898969863427137	WITHOUT_CLASSIFICATION	0.010103013657286206	DESIGN
First we make modifications to the class, to adapt it to being both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9985603276401744	WITHOUT_CLASSIFICATION	0.0014396723598255677	DESIGN
list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9892376807096868	WITHOUT_CLASSIFICATION	0.010762319290313248	DESIGN
We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9991790575810469	WITHOUT_CLASSIFICATION	8.209424189530994E-4	DESIGN
The replacement "new" allocates and inits the Ruby object as before, but also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999993302001066	WITHOUT_CLASSIFICATION	6.697998934681618E-7	DESIGN
Next, we define a few private methods that we'll use to manipulate the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9091916783307978	WITHOUT_CLASSIFICATION	0.09080832166920211	DESIGN
jcreate instantiates the proxy object which implements all interfaces and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9857339729984078	WITHOUT_CLASSIFICATION	0.01426602700159211	DESIGN
Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9997487114140383	WITHOUT_CLASSIFICATION	2.512885859616763E-4	DESIGN
implement all forces implementation of all interfaces we intend for this class to implement	WITHOUT_CLASSIFICATION	0.909957680920793	WITHOUT_CLASSIFICATION	0.090042319079207	DESIGN
we've already done the above priming logic, just add another interface to the list of intentions unless we're past the point of no return or already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999548392567069	WITHOUT_CLASSIFICATION	4.5160743293015456E-5	DESIGN
walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9995456585843904	WITHOUT_CLASSIFICATION	4.543414156096303E-4	DESIGN
construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9959035600021232	WITHOUT_CLASSIFICATION	0.004096439997876763	DESIGN
assuming the user wants a collection of interfaces that can be included together. make it so.	WITHOUT_CLASSIFICATION	0.9998349717132708	WITHOUT_CLASSIFICATION	1.6502828672917456E-4	DESIGN
not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999603890037158	WITHOUT_CLASSIFICATION	3.961099628420995E-5	DESIGN
To turn a module into an "interface collection" we add a class instance variable to hold the list of interfaces, and modify append_features for this module to call append_features on each of those interfaces as well	WITHOUT_CLASSIFICATION	0.6934033855740567	WITHOUT_CLASSIFICATION	0.3065966144259434	DESIGN
already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9998244843034256	WITHOUT_CLASSIFICATION	1.755156965744213E-4	DESIGN
array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9992896603773488	WITHOUT_CLASSIFICATION	7.103396226513182E-4	DESIGN
keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9990044694053963	WITHOUT_CLASSIFICATION	9.955305946037125E-4	DESIGN
array creation should use this variant	WITHOUT_CLASSIFICATION	0.8505239236307929	WITHOUT_CLASSIFICATION	0.14947607636920712	DESIGN
parent.setConstant(name, proxyClass); where the name should come from ?	WITHOUT_CLASSIFICATION	0.986858595906759	WITHOUT_CLASSIFICATION	0.013141404093241042	DESIGN
including interface module so old-style interface "subclasses" will respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.999961044640257	WITHOUT_CLASSIFICATION	3.8955359742950634E-5	DESIGN
add reference to interface module	WITHOUT_CLASSIFICATION	0.998280989530513	WITHOUT_CLASSIFICATION	0.0017190104694868537	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9991371731549412	WITHOUT_CLASSIFICATION	8.628268450587664E-4	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9991371731549412	WITHOUT_CLASSIFICATION	8.628268450587664E-4	DESIGN
proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9998134376308352	WITHOUT_CLASSIFICATION	1.8656236916480266E-4	DESIGN
same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999094025250209	WITHOUT_CLASSIFICATION	9.05974749791048E-5	DESIGN
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999904242281392	WITHOUT_CLASSIFICATION	9.575771860744554E-6	DESIGN
weakly reserved names	WITHOUT_CLASSIFICATION	0.9983617734741065	WITHOUT_CLASSIFICATION	0.0016382265258935384	DESIGN
called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9998818228516104	WITHOUT_CLASSIFICATION	1.1817714838947668E-4	DESIGN
called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9998818228516104	WITHOUT_CLASSIFICATION	1.1817714838947668E-4	DESIGN
modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999897982683202	WITHOUT_CLASSIFICATION	1.0201731679775891E-5	DESIGN
if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9998867905081985	WITHOUT_CLASSIFICATION	1.1320949180156337E-4	DESIGN
caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9998691552302882	WITHOUT_CLASSIFICATION	1.3084476971174274E-4	DESIGN
proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9987713330194398	WITHOUT_CLASSIFICATION	0.001228666980560344	DESIGN
proxy class for concrete classes. also used for "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.761435930802123	WITHOUT_CLASSIFICATION	0.23856406919787698	DESIGN
readable only by thread building proxy, so don't need to be volatile. used to handle recursive calls to getProxyClass/Module while proxy is being constructed (usually when a constant defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9627647637094507	WITHOUT_CLASSIFICATION	0.037235236290549284	DESIGN
allow proxy to be read without synchronization. if proxy is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999952660987816	WITHOUT_CLASSIFICATION	4.733901218316599E-6	DESIGN
Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999436821534696	WITHOUT_CLASSIFICATION	5.6317846530451385E-5	DESIGN
proxy is under construction, building thread can safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999540827590034	WITHOUT_CLASSIFICATION	4.591724099643525E-5	DESIGN
Add property name aliases	WITHOUT_CLASSIFICATION	0.9991514304751418	WITHOUT_CLASSIFICATION	8.485695248582297E-4	DESIGN
getFoo => foo getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9998416819033259	WITHOUT_CLASSIFICATION	1.5831809667421847E-4	DESIGN
setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9997105377743424	WITHOUT_CLASSIFICATION	2.8946222565761633E-4	DESIGN
isFoo() => foo, isFoo() => foo()	WITHOUT_CLASSIFICATION	0.9997334610464078	WITHOUT_CLASSIFICATION	2.6653895359217585E-4	DESIGN
Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.999973858872196	WITHOUT_CLASSIFICATION	2.6141127803869073E-5	DESIGN
is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9988157287080784	WITHOUT_CLASSIFICATION	0.0011842712919215147	DESIGN
something?	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9997393053326002	WITHOUT_CLASSIFICATION	2.606946673998267E-4	DESIGN
setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9997393053326002	WITHOUT_CLASSIFICATION	2.606946673998267E-4	DESIGN
Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999480267222355	WITHOUT_CLASSIFICATION	5.1973277764541164E-5	DESIGN
Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999480267222355	WITHOUT_CLASSIFICATION	5.1973277764541164E-5	DESIGN
create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999729823713754	WITHOUT_CLASSIFICATION	2.701762862458239E-5	DESIGN
we need to collect all methods, though we'll only install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9847443635805676	WITHOUT_CLASSIFICATION	0.015255636419432521	DESIGN
Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.8825599288329478	WITHOUT_CLASSIFICATION	0.11744007116705217	DESIGN
now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9995171261197463	WITHOUT_CLASSIFICATION	4.8287388025360843E-4	DESIGN
old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9988734071069526	WITHOUT_CLASSIFICATION	0.0011265928930473891	DESIGN
1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9978339535479164	WITHOUT_CLASSIFICATION	0.0021660464520835195	DESIGN
double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9997513642861275	WITHOUT_CLASSIFICATION	2.4863571387244757E-4	DESIGN
setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9997105377743424	WITHOUT_CLASSIFICATION	2.8946222565761633E-4	DESIGN
isFoo() => foo, isFoo() => foo()	WITHOUT_CLASSIFICATION	0.9997334610464078	WITHOUT_CLASSIFICATION	2.6653895359217585E-4	DESIGN
is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9988157287080784	WITHOUT_CLASSIFICATION	0.0011842712919215147	DESIGN
one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9963583146681566	WITHOUT_CLASSIFICATION	0.00364168533184327	DESIGN
Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9798393160423317	WITHOUT_CLASSIFICATION	0.02016068395766836	DESIGN
note: intentionally returning the actual array returned from Java, rather than wrapping it in a RubyArray. wave of the future, when java_class will return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9998713644058166	WITHOUT_CLASSIFICATION	1.2863559418340795E-4	DESIGN
see note above re: return type	WITHOUT_CLASSIFICATION	0.9846681335846327	WITHOUT_CLASSIFICATION	0.01533186641536724	DESIGN
restrictive security policy; no matter, we only want public classes anyway	WITHOUT_CLASSIFICATION	0.9714170746591907	WITHOUT_CLASSIFICATION	0.02858292534080938	DESIGN
very restrictive policy (disallows Member.PUBLIC) we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.996241531367906	WITHOUT_CLASSIFICATION	0.0037584686320939237	DESIGN
one-dimensional array	WITHOUT_CLASSIFICATION	0.9990019249827441	WITHOUT_CLASSIFICATION	9.980750172558634E-4	DESIGN
n-dimensional array	WITHOUT_CLASSIFICATION	0.99958970019778	WITHOUT_CLASSIFICATION	4.1029980221995896E-4	DESIGN
if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9998262770079104	WITHOUT_CLASSIFICATION	1.737229920896267E-4	DESIGN
we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods see JRUBY-3130	WITHOUT_CLASSIFICATION	0.999106051039388	WITHOUT_CLASSIFICATION	8.939489606120378E-4	DESIGN
Proc implementing an interface, pull in the catch-all code that lets the proc get invoked no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9870512642420065	WITHOUT_CLASSIFICATION	0.01294873575799354	DESIGN
can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9996890610959396	WITHOUT_CLASSIFICATION	3.109389040604204E-4	DESIGN
getFooBar() => fooBar?, foo_bar?()	WITHOUT_CLASSIFICATION	0.9998264394324188	WITHOUT_CLASSIFICATION	1.73560567581135E-4	DESIGN
If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9997473443481861	WITHOUT_CLASSIFICATION	2.526556518139278E-4	DESIGN
many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9809841116669217	WITHOUT_CLASSIFICATION	0.01901588833307835	DESIGN
for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.99991339848134	WITHOUT_CLASSIFICATION	8.660151866001182E-5	DESIGN
rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9998551351328792	WITHOUT_CLASSIFICATION	1.448648671208948E-4	DESIGN
the converters handle not only primitive types but also their boxed versions, so we should check if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9690388181714384	WITHOUT_CLASSIFICATION	0.03096118182856162	DESIGN
it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9998682193225142	WITHOUT_CLASSIFICATION	1.3178067748588514E-4	DESIGN
we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999691068802735	WITHOUT_CLASSIFICATION	3.0893119726417505E-5	DESIGN
set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999330855172236	WITHOUT_CLASSIFICATION	6.691448277634881E-5	DESIGN
the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9998820648682767	WITHOUT_CLASSIFICATION	1.1793513172326782E-4	DESIGN
InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9992896603773488	WITHOUT_CLASSIFICATION	7.103396226513182E-4	DESIGN
also create the JavaProxy classes	WITHOUT_CLASSIFICATION	0.9998775155023223	WITHOUT_CLASSIFICATION	1.2248449767765689E-4	DESIGN
The template for interface modules	WITHOUT_CLASSIFICATION	0.9999034448154952	WITHOUT_CLASSIFICATION	9.655518450476443E-5	DESIGN
Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999206832895298	WITHOUT_CLASSIFICATION	7.931671047020996E-5	DESIGN
add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9992998185330219	WITHOUT_CLASSIFICATION	7.001814669781346E-4	DESIGN
add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9998015161951987	WITHOUT_CLASSIFICATION	1.9848380480130343E-4	DESIGN
finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9990411370502185	WITHOUT_CLASSIFICATION	9.588629497816511E-4	DESIGN
shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.999457698059314	WITHOUT_CLASSIFICATION	5.423019406859522E-4	DESIGN
include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9948407435972787	WITHOUT_CLASSIFICATION	0.005159256402721213	DESIGN
java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9989824243488393	WITHOUT_CLASSIFICATION	0.001017575651160653	DESIGN
other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9998955106044877	WITHOUT_CLASSIFICATION	1.0448939551234623E-4	DESIGN
include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9995641902519843	WITHOUT_CLASSIFICATION	4.358097480157402E-4	DESIGN
JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9986742278006269	WITHOUT_CLASSIFICATION	0.0013257721993731643	DESIGN
add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9980925933987591	WITHOUT_CLASSIFICATION	0.0019074066012409097	DESIGN
add alias to meta	WITHOUT_CLASSIFICATION	0.9998479868347151	WITHOUT_CLASSIFICATION	1.5201316528491168E-4	DESIGN
we'll only map conventional class names to modules	WITHOUT_CLASSIFICATION	0.9989714602392883	WITHOUT_CLASSIFICATION	0.0010285397607116597	DESIGN
expected	WITHOUT_CLASSIFICATION	0.9999245941012453	WITHOUT_CLASSIFICATION	7.540589875473265E-5	DESIGN
Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9995863225964066	WITHOUT_CLASSIFICATION	4.136774035933937E-4	DESIGN
upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9998779213322744	WITHOUT_CLASSIFICATION	1.2207866772567452E-4	DESIGN
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999904242281392	WITHOUT_CLASSIFICATION	9.575771860744554E-6	DESIGN
add alias to meta	WITHOUT_CLASSIFICATION	0.9998479868347151	WITHOUT_CLASSIFICATION	1.5201316528491168E-4	DESIGN
this is where we'll get connected when classes are opened using package module syntax.	WITHOUT_CLASSIFICATION	0.9609795762465136	WITHOUT_CLASSIFICATION	0.03902042375348639	DESIGN
save package module as ivar in parent, and add method to parent so we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9405234514848095	WITHOUT_CLASSIFICATION	0.059476548515190485	DESIGN
this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9942723685752329	WITHOUT_CLASSIFICATION	0.005727631424767059	DESIGN
not primitive or lc class	WITHOUT_CLASSIFICATION	0.9914344880261692	WITHOUT_CLASSIFICATION	0.00856551197383074	DESIGN
not primitive or lc class	WITHOUT_CLASSIFICATION	0.9914344880261692	WITHOUT_CLASSIFICATION	0.00856551197383074	DESIGN
Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9991566102208566	WITHOUT_CLASSIFICATION	8.433897791434917E-4	DESIGN
Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9971598933329924	WITHOUT_CLASSIFICATION	0.0028401066670076048	DESIGN
hashcode is a combination of the interfaces and the Ruby class we're using to implement them	WITHOUT_CLASSIFICATION	0.9758458825080512	WITHOUT_CLASSIFICATION	0.024154117491948828	DESIGN
if it's a singleton class and the real class is proc, we're doing closure conversion so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999122491682497	WITHOUT_CLASSIFICATION	8.775083175028505E-5	DESIGN
normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9993557714351876	WITHOUT_CLASSIFICATION	6.442285648123124E-4	DESIGN
Initialize some components.	WITHOUT_CLASSIFICATION	0.9994376275198058	WITHOUT_CLASSIFICATION	5.623724801941955E-4	DESIGN
not synchronizing these methods, no harm if these values get set more than once. (also note that there's no chance of getting a partially initialized class/module, as happens-before is guaranteed by volatile write/read of constants table.)	WITHOUT_CLASSIFICATION	0.9993511021976965	WITHOUT_CLASSIFICATION	6.488978023034308E-4	DESIGN
Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9647141301878193	WITHOUT_CLASSIFICATION	0.03528586981218074	DESIGN
for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999503418593421	WITHOUT_CLASSIFICATION	4.965814065803931E-5	DESIGN
for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999503418593421	WITHOUT_CLASSIFICATION	4.965814065803931E-5	DESIGN
no matching ctor found	WITHOUT_CLASSIFICATION	0.9997886598604677	WITHOUT_CLASSIFICATION	2.1134013953227158E-4	DESIGN
Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9989002496536242	WITHOUT_CLASSIFICATION	0.001099750346375763	DESIGN
prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9996218474752014	WITHOUT_CLASSIFICATION	3.7815252479856315E-4	DESIGN
must be a public method	WITHOUT_CLASSIFICATION	0.9907728838256701	WITHOUT_CLASSIFICATION	0.00922711617433	DESIGN
must be a public class	WITHOUT_CLASSIFICATION	0.9842807489314097	WITHOUT_CLASSIFICATION	0.01571925106859024	DESIGN
must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9986917085410593	WITHOUT_CLASSIFICATION	0.0013082914589407644	DESIGN
Special classes like Collections.EMPTY_LIST are inner classes that are private but implement public interfaces. Their methods are all public methods for the public interface. Let these public methods execute via setAccessible(true).	WITHOUT_CLASSIFICATION	0.9674021385376514	WITHOUT_CLASSIFICATION	0.03259786146234858	DESIGN
search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9988124164013022	WITHOUT_CLASSIFICATION	0.0011875835986978312	DESIGN
no matching method found	WITHOUT_CLASSIFICATION	0.999499452230079	WITHOUT_CLASSIFICATION	5.005477699210583E-4	DESIGN
this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.7191867973827748	WITHOUT_CLASSIFICATION	0.2808132026172252	DESIGN
First we need to register the JRuby engine.	WITHOUT_CLASSIFICATION	0.9974869717975267	WITHOUT_CLASSIFICATION	0.0025130282024733606	DESIGN
Now we create a new BSFManager.	WITHOUT_CLASSIFICATION	0.9995474812160645	WITHOUT_CLASSIFICATION	4.5251878393545844E-4	DESIGN
Initialize a simple Frame.	WITHOUT_CLASSIFICATION	0.9993258149610326	WITHOUT_CLASSIFICATION	6.741850389674617E-4	DESIGN
e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998550901093817	WITHOUT_CLASSIFICATION	1.4490989061836818E-4	DESIGN
e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998550901093817	WITHOUT_CLASSIFICATION	1.4490989061836818E-4	DESIGN
JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9997842955795561	WITHOUT_CLASSIFICATION	2.1570442044394284E-4	DESIGN
end class	WITHOUT_CLASSIFICATION	0.9991065688938044	WITHOUT_CLASSIFICATION	8.934311061956558E-4	DESIGN
this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.7191867973827748	WITHOUT_CLASSIFICATION	0.2808132026172252	DESIGN
for our purposes, Accessibles are also Members, and vice-versa, so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.999760670525972	WITHOUT_CLASSIFICATION	2.3932947402799908E-4	DESIGN
Declare those components as beans in BSF. Then it will be possible to access those components in Ruby as global variables ($frame, $menubar, ...)	WITHOUT_CLASSIFICATION	0.9998835022978614	WITHOUT_CLASSIFICATION	1.1649770213860073E-4	DESIGN
Execute a Ruby script (add the menubar to the frame).	WITHOUT_CLASSIFICATION	0.9995883871322558	WITHOUT_CLASSIFICATION	4.1161286774415393E-4	DESIGN
Execute Ruby statements.	WITHOUT_CLASSIFICATION	0.9988083455328746	WITHOUT_CLASSIFICATION	0.0011916544671254547	DESIGN
Evaluates a Ruby expression and display the result.	WITHOUT_CLASSIFICATION	0.9996616195271498	WITHOUT_CLASSIFICATION	3.383804728501476E-4	DESIGN
Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9992806141128509	WITHOUT_CLASSIFICATION	7.193858871490369E-4	DESIGN
package scope	WITHOUT_CLASSIFICATION	0.997378692705276	WITHOUT_CLASSIFICATION	0.0026213072947241242	DESIGN
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999904242281392	WITHOUT_CLASSIFICATION	9.575771860744554E-6	DESIGN
Ruby-level methods	WITHOUT_CLASSIFICATION	0.9995178451342488	WITHOUT_CLASSIFICATION	4.82154865751162E-4	DESIGN
need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9913824010433537	WITHOUT_CLASSIFICATION	0.008617598956646285	DESIGN
we only collect methods and interfaces for user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999129234504243	WITHOUT_CLASSIFICATION	8.707654957571983E-5	DESIGN
get JavaClass if this is the new proxy class; verify it matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.999975346038641	WITHOUT_CLASSIFICATION	2.4653961358883673E-5	DESIGN
get any included interfaces	WITHOUT_CLASSIFICATION	0.9999293171158855	WITHOUT_CLASSIFICATION	7.068288411445868E-5	DESIGN
lock in the overridden methods for the new class, and any as-yet uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999359723677044	WITHOUT_CLASSIFICATION	6.402763229554023E-5	DESIGN
statically initialized below	WITHOUT_CLASSIFICATION	0.9981225822274948	WITHOUT_CLASSIFICATION	0.0018774177725051466	DESIGN
finish class initializer	WITHOUT_CLASSIFICATION	0.9985969201054619	WITHOUT_CLASSIFICATION	0.0014030798945380975	DESIGN
trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9995830140389379	WITHOUT_CLASSIFICATION	4.169859610622071E-4	DESIGN
should not happen!	WITHOUT_CLASSIFICATION	0.9830821432619631	WITHOUT_CLASSIFICATION	0.016917856738036884	DESIGN
start class	WITHOUT_CLASSIFICATION	0.9988207620856844	WITHOUT_CLASSIFICATION	0.0011792379143156682	DESIGN
make getter for handler	WITHOUT_CLASSIFICATION	0.9989003348649013	WITHOUT_CLASSIFICATION	0.00109966513509866	DESIGN
make getter for proxy class	WITHOUT_CLASSIFICATION	0.9987928949282339	WITHOUT_CLASSIFICATION	0.0012071050717660918	DESIGN
add (potentially) overridden names to the key. TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.95340053354253	DESIGN	0.046599466457470054	WITHOUT_CLASSIFICATION
We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9987867169454995	WITHOUT_CLASSIFICATION	0.0012132830545005533	DESIGN
create static private method field	WITHOUT_CLASSIFICATION	0.9793147030323132	WITHOUT_CLASSIFICATION	0.020685296967686895	DESIGN
load static empty array	WITHOUT_CLASSIFICATION	0.9956980030535174	WITHOUT_CLASSIFICATION	0.00430199694648261	DESIGN
box arguments	WITHOUT_CLASSIFICATION	0.9999392865653631	WITHOUT_CLASSIFICATION	6.0713434636825465E-5	DESIGN
this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.997592391831708	WITHOUT_CLASSIFICATION	0.002407608168291971	DESIGN
construct the super-proxy method	WITHOUT_CLASSIFICATION	0.9995191671241297	WITHOUT_CLASSIFICATION	4.8083287587031144E-4	DESIGN
do a void return	WITHOUT_CLASSIFICATION	0.9988581087154303	WITHOUT_CLASSIFICATION	0.001141891284569681	DESIGN
utility methods	WITHOUT_CLASSIFICATION	0.9997952849324968	WITHOUT_CLASSIFICATION	2.0471506750324551E-4	DESIGN
Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9991566102208566	WITHOUT_CLASSIFICATION	8.433897791434917E-4	DESIGN
store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9906588861974188	WITHOUT_CLASSIFICATION	0.009341113802581156	DESIGN
use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9984426651115984	WITHOUT_CLASSIFICATION	0.0015573348884015661	DESIGN
no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9996385279505842	WITHOUT_CLASSIFICATION	3.614720494158309E-4	DESIGN
only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9992867310139112	WITHOUT_CLASSIFICATION	7.132689860887051E-4	DESIGN
opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9969828057242837	WITHOUT_CLASSIFICATION	0.0030171942757163477	DESIGN
opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9985264773629263	WITHOUT_CLASSIFICATION	0.0014735226370736429	DESIGN
No block from a nil proc	WITHOUT_CLASSIFICATION	0.9993797766278525	WITHOUT_CLASSIFICATION	6.202233721474518E-4	DESIGN
If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9967428653228322	WITHOUT_CLASSIFICATION	0.0032571346771678826	DESIGN
The current block is already associated with proc. No need to create a new one	WITHOUT_CLASSIFICATION	0.9999403965282547	WITHOUT_CLASSIFICATION	5.960347174536073E-5	DESIGN
Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9993143212153289	WITHOUT_CLASSIFICATION	6.856787846710826E-4	DESIGN
NUL	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9984310793470159	WITHOUT_CLASSIFICATION	0.0015689206529841066	DESIGN
Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9998616084888753	WITHOUT_CLASSIFICATION	1.3839151112468348E-4	DESIGN
'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9991774234513296	WITHOUT_CLASSIFICATION	8.22576548670421E-4	DESIGN
Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9967933180747066	WITHOUT_CLASSIFICATION	0.003206681925293433	DESIGN
read-volatile	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
read-volatile	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9991750175824343	WITHOUT_CLASSIFICATION	8.249824175657484E-4	DESIGN
must be power of 2 must be power of 2	WITHOUT_CLASSIFICATION	0.9993823616915112	WITHOUT_CLASSIFICATION	6.176383084888308E-4	DESIGN
Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9996850636258684	WITHOUT_CLASSIFICATION	3.14936374131614E-4	DESIGN
note segmentShift differs from ConcurrentHashMap's calculation due to issues with System.identityHashCode (upper n bits always 0, at least under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.999196839185162	WITHOUT_CLASSIFICATION	8.031608148380634E-4	DESIGN
System.err.println("ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.997701480681512	WITHOUT_CLASSIFICATION	0.0022985193184880594	DESIGN
protected void finalize() throws Throwable { System.err.println("ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); }	WITHOUT_CLASSIFICATION	0.9804991029157217	WITHOUT_CLASSIFICATION	0.019500897084278306	DESIGN
EntryRefs include hash with key to facilitate lookup by Segment#expunge after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9996241588359225	WITHOUT_CLASSIFICATION	3.7584116407762434E-4	DESIGN
Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather makes it a final field. The theory is that doing so should force a happens-before relationship WRT the WeakReference constructor, guaranteeing that the key will be visibile to other threads (unless it's been GC'ed). See JLS 17.5 (final fields) and 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9986850584132657	WITHOUT_CLASSIFICATION	0.001314941586734306	DESIGN
references to the Java object and its proxy will either both be weak or both be soft, since the proxy contains a strong reference to the object, so it wouldn't make sense for the reference types to differ.	WITHOUT_CLASSIFICATION	0.9999223703435041	WITHOUT_CLASSIFICATION	7.762965649602167E-5	DESIGN
ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9620092320968412	WITHOUT_CLASSIFICATION	0.03799076790315884	DESIGN
must be called under lock	WITHOUT_CLASSIFICATION	0.9996704179273709	WITHOUT_CLASSIFICATION	3.295820726291037E-4	DESIGN
must be called under lock	WITHOUT_CLASSIFICATION	0.9996704179273709	WITHOUT_CLASSIFICATION	3.295820726291037E-4	DESIGN
must be called under lock	WITHOUT_CLASSIFICATION	0.9996704179273709	WITHOUT_CLASSIFICATION	3.295820726291037E-4	DESIGN
note that we'll potentially see the refs for both the java object and proxy -- whichever we see first will cause the entry to be removed; the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9959074223415327	WITHOUT_CLASSIFICATION	0.004092577658467217	DESIGN
temp method to verify tableSize value must be called under lock	WITHOUT_CLASSIFICATION	0.9999207772814448	WITHOUT_CLASSIFICATION	7.922271855527001E-5	DESIGN
Single node in list	WITHOUT_CLASSIFICATION	0.999909235319238	WITHOUT_CLASSIFICATION	9.07646807618913E-5	DESIGN
indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9986748790685201	WITHOUT_CLASSIFICATION	0.0013251209314797993	DESIGN
indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9986748790685201	WITHOUT_CLASSIFICATION	0.0013251209314797993	DESIGN
entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9993798361346304	WITHOUT_CLASSIFICATION	6.201638653696045E-4	DESIGN
Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9988954012488471	WITHOUT_CLASSIFICATION	0.0011045987511528435	DESIGN
Start of string ([, (, {, <, ', ", \n)	WITHOUT_CLASSIFICATION	0.9999373021674071	WITHOUT_CLASSIFICATION	6.269783259293954E-5	DESIGN
Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9997452419234119	WITHOUT_CLASSIFICATION	2.5475807658823006E-4	DESIGN
How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9972209552100336	WITHOUT_CLASSIFICATION	0.002779044789966453	DESIGN
For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9998661638553898	WITHOUT_CLASSIFICATION	1.3383614461014918E-4	DESIGN
Last full line read.	WITHOUT_CLASSIFICATION	0.999651053916859	WITHOUT_CLASSIFICATION	3.489460831410648E-4	DESIGN
Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9996610935088517	WITHOUT_CLASSIFICATION	3.3890649114827145E-4	DESIGN
Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999740347320671	WITHOUT_CLASSIFICATION	2.596526793289667E-5	DESIGN
Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999570448769408	WITHOUT_CLASSIFICATION	4.2955123059131195E-5	DESIGN
Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999570448769408	WITHOUT_CLASSIFICATION	4.2955123059131195E-5	DESIGN
End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999318492831014	WITHOUT_CLASSIFICATION	6.815071689862867E-5	DESIGN
How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9970608716160414	WITHOUT_CLASSIFICATION	0.0029391283839585365	DESIGN
Single-quote fast path	WITHOUT_CLASSIFICATION	0.9997690732122411	WITHOUT_CLASSIFICATION	2.3092678775889054E-4	DESIGN
Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9993989996229012	WITHOUT_CLASSIFICATION	6.010003770987014E-4	DESIGN
Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9987372446724481	WITHOUT_CLASSIFICATION	0.0012627553275518684	DESIGN
just ignore	WITHOUT_CLASSIFICATION	0.999799518762597	WITHOUT_CLASSIFICATION	2.0048123740300017E-4	DESIGN
octal constant	WITHOUT_CLASSIFICATION	0.9996632216278535	WITHOUT_CLASSIFICATION	3.3677837214652245E-4	DESIGN
hex constant	WITHOUT_CLASSIFICATION	0.9998306398708304	WITHOUT_CLASSIFICATION	1.6936012916945672E-4	DESIGN
PUSH(1)	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
POP	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
PUSH(0). If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999957714596726	WITHOUT_CLASSIFICATION	4.228540327450064E-6	DESIGN
LEXPOP	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
SET_P	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9994260134599892	WITHOUT_CLASSIFICATION	5.739865400109036E-4	DESIGN
Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9991545555413921	WITHOUT_CLASSIFICATION	8.454444586079272E-4	DESIGN
Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.99994503300923	WITHOUT_CLASSIFICATION	5.4966990770032425E-5	DESIGN
Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999869348127152	WITHOUT_CLASSIFICATION	1.3065187284783562E-5	DESIGN
Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999914308839714	WITHOUT_CLASSIFICATION	8.56911602866388E-6	DESIGN
Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9998088530963272	WITHOUT_CLASSIFICATION	1.9114690367279892E-4	DESIGN
Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9998843430682609	WITHOUT_CLASSIFICATION	1.1565693173918462E-4	DESIGN
Give a name to a value. Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.8710788670905025	DESIGN	0.12892113290949747	WITHOUT_CLASSIFICATION
When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9988204485572986	WITHOUT_CLASSIFICATION	0.0011795514427014764	DESIGN
Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9990025412165981	WITHOUT_CLASSIFICATION	9.974587834019075E-4	DESIGN
Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9950311113714583	WITHOUT_CLASSIFICATION	0.004968888628541617	DESIGN
1.9 only	WITHOUT_CLASSIFICATION	0.9997834527686278	WITHOUT_CLASSIFICATION	2.1654723137216745E-4	DESIGN
Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9995603995490948	WITHOUT_CLASSIFICATION	4.396004509052209E-4	DESIGN
Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.999266969910395	WITHOUT_CLASSIFICATION	7.330300896050814E-4	DESIGN
no mb || ismbchar(term)	WITHOUT_CLASSIFICATION	0.9995427183665477	WITHOUT_CLASSIFICATION	4.5728163345223476E-4	DESIGN
Not normally used, but is left in here since it can be useful in debugging grammar and lexing problems.	WITHOUT_CLASSIFICATION	0.7739442897011524	WITHOUT_CLASSIFICATION	0.2260557102988477	DESIGN
DEBUGGING HELP	WITHOUT_CLASSIFICATION	0.999521272061742	WITHOUT_CLASSIFICATION	4.78727938257908E-4	DESIGN
'\v'	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
end of script.	WITHOUT_CLASSIFICATION	0.9997652201216358	WITHOUT_CLASSIFICATION	2.347798783642141E-4	DESIGN
white spaces	WITHOUT_CLASSIFICATION	0.9995208940776972	WITHOUT_CLASSIFICATION	4.791059223027582E-4	DESIGN
'\v'	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
it's a comment	WITHOUT_CLASSIFICATION	0.9992968398386609	WITHOUT_CLASSIFICATION	7.031601613390076E-4	DESIGN
Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9974254844480388	WITHOUT_CLASSIFICATION	0.002574515551961202	DESIGN
$\: output record separator	WITHOUT_CLASSIFICATION	0.999949277486198	WITHOUT_CLASSIFICATION	5.072251380190372E-5	DESIGN
EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9981241202141207	WITHOUT_CLASSIFICATION	0.0018758797858792692	DESIGN
documentation nodes	WITHOUT_CLASSIFICATION	0.9999378712984404	WITHOUT_CLASSIFICATION	6.212870155961201E-5	DESIGN
In case last next was the newline.	WITHOUT_CLASSIFICATION	0.999918069835578	WITHOUT_CLASSIFICATION	8.193016442200766E-5	DESIGN
Just a plain bang	WITHOUT_CLASSIFICATION	0.9996770040651908	WITHOUT_CLASSIFICATION	3.229959348092252E-4	DESIGN
$_: last read line string	WITHOUT_CLASSIFICATION	0.999947485655166	WITHOUT_CLASSIFICATION	5.251434483402803E-5	DESIGN
$~: match-data	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
$: argv	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
$$: pid	WITHOUT_CLASSIFICATION	0.999455361236238	WITHOUT_CLASSIFICATION	5.44638763761934E-4	DESIGN
$?: last status	WITHOUT_CLASSIFICATION	0.9996903339465606	WITHOUT_CLASSIFICATION	3.0966605343945447E-4	DESIGN
$!: error string	WITHOUT_CLASSIFICATION	0.999613314874235	WITHOUT_CLASSIFICATION	3.8668512576492696E-4	DESIGN
$@: error position	WITHOUT_CLASSIFICATION	0.99967293455195	WITHOUT_CLASSIFICATION	3.270654480499766E-4	DESIGN
$/: input record separator	WITHOUT_CLASSIFICATION	0.9999090014934625	WITHOUT_CLASSIFICATION	9.09985065374956E-5	DESIGN
$;: field separator	WITHOUT_CLASSIFICATION	0.9997735628473831	WITHOUT_CLASSIFICATION	2.2643715261700943E-4	DESIGN
$,: output field separator	WITHOUT_CLASSIFICATION	0.9995914551979469	WITHOUT_CLASSIFICATION	4.0854480205312096E-4	DESIGN
$.: last read line number	WITHOUT_CLASSIFICATION	0.9997524666887901	WITHOUT_CLASSIFICATION	2.475333112098175E-4	DESIGN
$=: ignorecase	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
$:: load path	WITHOUT_CLASSIFICATION	0.9997516557654147	WITHOUT_CLASSIFICATION	2.4834423458529347E-4	DESIGN
$<: reading filename	WITHOUT_CLASSIFICATION	0.9996498350700607	WITHOUT_CLASSIFICATION	3.501649299393539E-4	DESIGN
$": already loaded files	WITHOUT_CLASSIFICATION	0.999505290948858	WITHOUT_CLASSIFICATION	4.947090511419842E-4	DESIGN
$&: last match	WITHOUT_CLASSIFICATION	0.999939343701651	WITHOUT_CLASSIFICATION	6.0656298348978216E-5	DESIGN
$`: string before last match	WITHOUT_CLASSIFICATION	0.9999249455243479	WITHOUT_CLASSIFICATION	7.50544756522229E-5	DESIGN
$': string after last match	WITHOUT_CLASSIFICATION	0.9999581750338473	WITHOUT_CLASSIFICATION	4.182496615265583E-5	DESIGN
methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9998833289390873	WITHOUT_CLASSIFICATION	1.1667106091265858E-4	DESIGN
See if it is a reserved word.	WITHOUT_CLASSIFICATION	0.9995615374295146	WITHOUT_CLASSIFICATION	4.384625704853724E-4	DESIGN
enum lex_state	WITHOUT_CLASSIFICATION	0.999682254923302	WITHOUT_CLASSIFICATION	3.1774507669799846E-4	DESIGN
block (primary)	WITHOUT_CLASSIFICATION	0.9996072015781119	WITHOUT_CLASSIFICATION	3.9279842188809626E-4	DESIGN
block (expr)	WITHOUT_CLASSIFICATION	0.9996072015781119	WITHOUT_CLASSIFICATION	3.9279842188809626E-4	DESIGN
hash	WITHOUT_CLASSIFICATION	0.9997908836367871	WITHOUT_CLASSIFICATION	2.091163632129313E-4	DESIGN
ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9916950269704041	WITHOUT_CLASSIFICATION	0.008304973029595866	DESIGN
FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.6069888701373866	WITHOUT_CLASSIFICATION	0.39301112986261355	DESIGN
We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9988150979035613	WITHOUT_CLASSIFICATION	0.001184902096438693	DESIGN
hexadecimal	WITHOUT_CLASSIFICATION	0.9995830734513119	WITHOUT_CLASSIFICATION	4.1692654868802375E-4	DESIGN
binary	WITHOUT_CLASSIFICATION	0.9998619592021661	WITHOUT_CLASSIFICATION	1.3804079783386562E-4	DESIGN
decimal	WITHOUT_CLASSIFICATION	0.9996949527738485	WITHOUT_CLASSIFICATION	3.050472261515838E-4	DESIGN
Octal	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
'_' in number just ignored	WITHOUT_CLASSIFICATION	0.999302673739917	WITHOUT_CLASSIFICATION	6.973262600829767E-4	DESIGN
backslash	WITHOUT_CLASSIFICATION	0.9995488746621198	WITHOUT_CLASSIFICATION	4.5112533788015845E-4	DESIGN
newline	WITHOUT_CLASSIFICATION	0.9997187918847487	WITHOUT_CLASSIFICATION	2.812081152513484E-4	DESIGN
horizontal tab	WITHOUT_CLASSIFICATION	0.998995707837424	WITHOUT_CLASSIFICATION	0.0010042921625760131	DESIGN
form feed	WITHOUT_CLASSIFICATION	0.9998043470284241	WITHOUT_CLASSIFICATION	1.956529715758213E-4	DESIGN
vertical tab	WITHOUT_CLASSIFICATION	0.9993257985042479	WITHOUT_CLASSIFICATION	6.742014957520316E-4	DESIGN
alarm(bell)	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
escape	WITHOUT_CLASSIFICATION	0.999437307299249	WITHOUT_CLASSIFICATION	5.626927007509838E-4	DESIGN
hex constant	WITHOUT_CLASSIFICATION	0.9998306398708304	WITHOUT_CLASSIFICATION	1.6936012916945672E-4	DESIGN
char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9998740024859097	WITHOUT_CLASSIFICATION	1.2599751409023838E-4	DESIGN
If \r\n then just pass along \n (windows). If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999965444524344	WITHOUT_CLASSIFICATION	3.4555475656309085E-6	DESIGN
space	WITHOUT_CLASSIFICATION	0.999966558132121	WITHOUT_CLASSIFICATION	3.34418678790182E-5	DESIGN
Where we started this marker match	WITHOUT_CLASSIFICATION	0.9979042272428416	WITHOUT_CLASSIFICATION	0.00209577275715847	DESIGN
Position within source must reflect the actual offset and column. Since we ate an extra character here (this accounting is normally done in read ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999904618973681	WITHOUT_CLASSIFICATION	9.53810263187493E-6	DESIGN
We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9982599652688304	WITHOUT_CLASSIFICATION	0.0017400347311695623	DESIGN
If \r\n then just pass along \n (windows). If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999965444524344	WITHOUT_CLASSIFICATION	3.4555475656309085E-6	DESIGN
FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.6742383366356329	DESIGN	0.3257616633643671	WITHOUT_CLASSIFICATION
FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.6742383366356329	DESIGN	0.3257616633643671	WITHOUT_CLASSIFICATION
Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9991684606670971	WITHOUT_CLASSIFICATION	8.315393329028516E-4	DESIGN
Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9991947474465175	WITHOUT_CLASSIFICATION	8.052525534823967E-4	DESIGN
index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.999824321235022	WITHOUT_CLASSIFICATION	1.7567876497812408E-4	DESIGN
Character read before previous read	WITHOUT_CLASSIFICATION	0.9998528959671895	WITHOUT_CLASSIFICATION	1.4710403281045713E-4	DESIGN
keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9357241329054072	WITHOUT_CLASSIFICATION	0.06427586709459286	DESIGN
NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9988157287080784	WITHOUT_CLASSIFICATION	0.0011842712919215147	DESIGN
BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. We did it here for now	WITHOUT_CLASSIFICATION	0.9276333694706781	DESIGN	0.07236663052932195	WITHOUT_CLASSIFICATION
Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9978953714227621	WITHOUT_CLASSIFICATION	0.002104628577237861	DESIGN
that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9424837921723077	WITHOUT_CLASSIFICATION	0.05751620782769217	DESIGN
Rubygems is too specific on host cpu so until we have real need lets default to universal setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.999131102668416	WITHOUT_CLASSIFICATION	8.688973315839812E-4	DESIGN
Our shell scripts pass in non-canonicalized paths, but even if we didn't anyone who did would become unhappy because Ruby apps expect no relative operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9991558405234292	WITHOUT_CLASSIFICATION	8.441594765707372E-4	DESIGN
this set is only for darwin	WITHOUT_CLASSIFICATION	0.995140834486516	WITHOUT_CLASSIFICATION	0.0048591655134839805	DESIGN
DigestLibrary	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
all errors, just info; do not prevent loading IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9874557447191212	WITHOUT_CLASSIFICATION	0.012544255280878772	DESIGN
all errors, just info; do not prevent unloading IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.988773652555184	WITHOUT_CLASSIFICATION	0.01122634744481588	DESIGN
do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999158663672643	WITHOUT_CLASSIFICATION	8.413363273577403E-5	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
line 329	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9993933783576864	WITHOUT_CLASSIFICATION	6.066216423135082E-4	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
dynamically increase	WITHOUT_CLASSIFICATION	0.9998651595482859	WITHOUT_CLASSIFICATION	1.3484045171408706E-4	DESIGN
discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.999610843067405	WITHOUT_CLASSIFICATION	3.8915693259499514E-4	DESIGN
else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.999471511525251	WITHOUT_CLASSIFICATION	5.284884747490487E-4	DESIGN
shift to yyN	WITHOUT_CLASSIFICATION	0.9936278100639562	WITHOUT_CLASSIFICATION	0.006372189936043899	DESIGN
reduce (yyN)	WITHOUT_CLASSIFICATION	0.9990775912619605	WITHOUT_CLASSIFICATION	9.224087380395728E-4	DESIGN
leave stack alone	WITHOUT_CLASSIFICATION	0.9997468228374486	WITHOUT_CLASSIFICATION	2.5317716255129875E-4	DESIGN
line 271	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 274	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 303	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 311	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 314	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 317	WITHOUT_CLASSIFICATION	0.9998003006379751	WITHOUT_CLASSIFICATION	1.9969936202490456E-4	DESIGN
line 332	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 338	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 341	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 344	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 351	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 358	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 367	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 372	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 378	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 382	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 407	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 411	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 414	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 417	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 420	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 426	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 434	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 443	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 446	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 452	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 457	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 464	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 467	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 470	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 479	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 484	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 486	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 492	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 498	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 501	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 504	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 507	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 510	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 519	WITHOUT_CLASSIFICATION	0.9998004240315795	WITHOUT_CLASSIFICATION	1.9957596842039177E-4	DESIGN
line 525	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
line 537	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 540	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 543	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 546	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 556	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 559	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 563	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 566	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 569	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 575	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 578	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 587	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 596	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 604	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 607	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 610	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 613	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 616	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 634	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 638	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 643	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 646	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 655	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 660	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 667	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 670	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 672	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 696	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 701	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 717	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 720	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 726	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 729	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 732	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 735	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 738	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 751	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 754	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 757	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 760	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 763	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 769	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 772	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 775	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 782	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 788	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 791	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 794	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 797	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 803	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 806	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 809	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 815	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 818	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 821	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 824	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 830	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 833	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 836	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 839	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 842	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 848	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 852	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 858	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 861	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 868	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 871	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 876	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 879	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 883	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 893	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 896	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 899	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 903	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 907	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 915	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 920	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 923	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 926	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 932	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 936	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 940	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 944	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 948	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 956	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 960	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 964	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 967	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 972	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 978	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 980	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 984	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 986	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 996	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1001	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1004	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1008	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1014	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1029	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1032	WITHOUT_CLASSIFICATION	0.9998037587935934	WITHOUT_CLASSIFICATION	1.9624120640660897E-4	DESIGN
line 1034	WITHOUT_CLASSIFICATION	0.9998130741563782	WITHOUT_CLASSIFICATION	1.8692584362184345E-4	DESIGN
line 1045	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1048	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1051	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1058	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1070	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1073	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1076	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1079	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1082	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1089	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1097	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1100	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1103	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1107	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1111	WITHOUT_CLASSIFICATION	0.9998072300405275	WITHOUT_CLASSIFICATION	1.9276995947252825E-4	DESIGN
line 1113	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1115	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1119	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1130	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1133	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1135	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1137	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1140	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1151	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1154	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1158	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1164	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1175	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1178	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1187	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1189	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1193	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1204	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1207	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1210	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1214	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1234	WITHOUT_CLASSIFICATION	0.999800438457515	WITHOUT_CLASSIFICATION	1.9956154248507255E-4	DESIGN
line 1239	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1243	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1247	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1251	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1263	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1269	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1280	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1283	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1290	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1296	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1299	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1302	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1309	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1313	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1315	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1320	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1328	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1335	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1348	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1352	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1358	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1374	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1381	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1387	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1392	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1415	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1431	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1434	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1440	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1443	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1453	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1456	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1462	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1465	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1470	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1477	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1480	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1485	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1488	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1496	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1502	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1510	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1513	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1516	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1533	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1550	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1553	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1556	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1565	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1568	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1571	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1574	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1577	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1587	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1595	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1598	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1600	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1609	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1623	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1626	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1629	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1632	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1638	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1641	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1644	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1649	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1655	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1658	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1661	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1672	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1677	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1687	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1694	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1705	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1708	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1725	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1733	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1742	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1745	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1749	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1757	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1769	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1772	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1775	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1784	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1808	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1814	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1818	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1822	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
force for args	WITHOUT_CLASSIFICATION	0.9997095034669806	WITHOUT_CLASSIFICATION	2.9049653301939935E-4	DESIGN
XXX 0;	WITHOUT_CLASSIFICATION	0.914994442172294	WITHOUT_CLASSIFICATION	0.08500555782770605	DESIGN
$$ = $3;	WITHOUT_CLASSIFICATION	0.999846541846463	WITHOUT_CLASSIFICATION	1.5345815353694445E-4	DESIGN
}	WITHOUT_CLASSIFICATION	0.9992786852731409	WITHOUT_CLASSIFICATION	7.213147268590074E-4	DESIGN
last expression should not be void	WITHOUT_CLASSIFICATION	0.9904976307187089	WITHOUT_CLASSIFICATION	0.009502369281291133	DESIGN
compstmt position includes both parens around it	WITHOUT_CLASSIFICATION	0.9180168164817345	WITHOUT_CLASSIFICATION	0.08198318351826553	DESIGN
$8 == null ? NilImplicitNode.NIL : $8;	WITHOUT_CLASSIFICATION	0.9694885348995191	WITHOUT_CLASSIFICATION	0.03051146510048086	DESIGN
$5 == null ? NilImplicitNode.NIL : $5;	WITHOUT_CLASSIFICATION	0.9694885348995191	WITHOUT_CLASSIFICATION	0.03051146510048086	DESIGN
NOEX_PRIVATE for toplevel	WITHOUT_CLASSIFICATION	0.9993815908942215	WITHOUT_CLASSIFICATION	6.18409105778507E-4	DESIGN
mirko: check	WITHOUT_CLASSIFICATION	0.9998702802745009	WITHOUT_CLASSIFICATION	1.2971972549914002E-4	DESIGN
Include pipes on multiple arg type	WITHOUT_CLASSIFICATION	0.9910630348021574	WITHOUT_CLASSIFICATION	0.008936965197842558	DESIGN
line 529	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
.setPosFrom($2);	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
XXX	WITHOUT_CLASSIFICATION	0.9039117813305719	WITHOUT_CLASSIFICATION	0.09608821866942814	DESIGN
zero length array	WITHOUT_CLASSIFICATION	0.9999445392244966	WITHOUT_CLASSIFICATION	5.5460775503396594E-5	DESIGN
DStrNode: :"some text #{some expression}"	WITHOUT_CLASSIFICATION	0.9998386898656292	WITHOUT_CLASSIFICATION	1.6131013437088604E-4	DESIGN
StrNode: :"some text"	WITHOUT_CLASSIFICATION	0.9988190015206143	WITHOUT_CLASSIFICATION	0.0011809984793856652	DESIGN
EvStrNode :"#{some expression}"	WITHOUT_CLASSIFICATION	0.9992896603773488	WITHOUT_CLASSIFICATION	7.103396226513182E-4	DESIGN
line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9997396716280049	WITHOUT_CLASSIFICATION	2.6032837199501394E-4	DESIGN
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9975249846956469	WITHOUT_CLASSIFICATION	0.0024750153043530776	DESIGN
yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9993933783576864	WITHOUT_CLASSIFICATION	6.066216423135082E-4	DESIGN
line 7713 "-"	WITHOUT_CLASSIFICATION	0.9998243178580088	WITHOUT_CLASSIFICATION	1.7568214199108073E-4	DESIGN
local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.999827687565408	WITHOUT_CLASSIFICATION	1.7231243459194542E-4	DESIGN
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9996277358419905	WITHOUT_CLASSIFICATION	3.7226415800950454E-4	DESIGN
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9996277358419905	WITHOUT_CLASSIFICATION	3.7226415800950454E-4	DESIGN
We know this is a block scope because a local scope cannot be within a local scope If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999571468998257	WITHOUT_CLASSIFICATION	4.2853100174318565E-5	DESIGN
ENEBO: 1.9 has CURR nodes for local/block variables. We don't. I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9981133237392765	WITHOUT_CLASSIFICATION	0.0018866762607234612	DESIGN
odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9990245732441094	WITHOUT_CLASSIFICATION	9.754267558905486E-4	DESIGN
What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9998060601051233	WITHOUT_CLASSIFICATION	1.9393989487677458E-4	DESIGN
Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9071219155631051	WITHOUT_CLASSIFICATION	0.09287808443689492	DESIGN
We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9998030984569909	WITHOUT_CLASSIFICATION	1.9690154300912657E-4	DESIGN
Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9998104800204053	WITHOUT_CLASSIFICATION	1.8951997959474264E-4	DESIGN
Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9996278370392174	WITHOUT_CLASSIFICATION	3.7216296078262484E-4	DESIGN
Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9932389231046304	WITHOUT_CLASSIFICATION	0.006761076895369611	DESIGN
__END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9993217326908299	WITHOUT_CLASSIFICATION	6.782673091699641E-4	DESIGN
Parser states:	WITHOUT_CLASSIFICATION	0.9994281240494279	WITHOUT_CLASSIFICATION	5.718759505720543E-4	DESIGN
Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9978297423743573	WITHOUT_CLASSIFICATION	0.0021702576256427096	DESIGN
Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9823585232821029	WITHOUT_CLASSIFICATION	0.017641476717897068	DESIGN
LOCALVAR	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
CONSTANT	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.999581956149352	WITHOUT_CLASSIFICATION	4.1804385064807395E-4	DESIGN
MRI: block_append	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
Reduces overhead in interp by not set position every single line we encounter.	WITHOUT_CLASSIFICATION	0.9995614905971648	WITHOUT_CLASSIFICATION	4.385094028352145E-4	DESIGN
Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9998644910912521	WITHOUT_CLASSIFICATION	1.3550890874779336E-4	DESIGN
return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9996760944769292	WITHOUT_CLASSIFICATION	3.239055230708102E-4	DESIGN
Node	WITHOUT_CLASSIFICATION	0.9995464656960915	WITHOUT_CLASSIFICATION	4.535343039084563E-4	DESIGN
FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9826361139553456	DESIGN	0.017363886044654508	WITHOUT_CLASSIFICATION
case CONSTNODE: handleUselessWarn(node, "a constant"); return;	WITHOUT_CLASSIFICATION	0.9998732661027045	WITHOUT_CLASSIFICATION	1.2673389729544427E-4	DESIGN
FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9826361139553456	DESIGN	0.017363886044654508	WITHOUT_CLASSIFICATION
case CLASSNODE: case COLON2NODE: handleUselessWarn(node, "::"); return;	WITHOUT_CLASSIFICATION	0.9998720609050546	WITHOUT_CLASSIFICATION	1.2793909494525327E-4	DESIGN
case SELFNODE: handleUselessWarn(node, "self"); return;	WITHOUT_CLASSIFICATION	0.9998720609050546	WITHOUT_CLASSIFICATION	1.2793909494525327E-4	DESIGN
FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.8272354982769554	DESIGN	0.17276450172304444	WITHOUT_CLASSIFICATION
MRI: range_op	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9982789977441062	WITHOUT_CLASSIFICATION	0.0017210022558938032	DESIGN
foo()	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
foo()	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
foo()	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
tail must be EvStrNode at this point	WITHOUT_CLASSIFICATION	0.996057540907546	WITHOUT_CLASSIFICATION	0.003942459092454073	DESIGN
Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9994089430758162	WITHOUT_CLASSIFICATION	5.910569241837795E-4	DESIGN
Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9968652451506185	WITHOUT_CLASSIFICATION	0.0031347548493816145	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
dynamically increase	WITHOUT_CLASSIFICATION	0.9998651595482859	WITHOUT_CLASSIFICATION	1.3484045171408706E-4	DESIGN
else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.999471511525251	WITHOUT_CLASSIFICATION	5.284884747490487E-4	DESIGN
shift to yyN	WITHOUT_CLASSIFICATION	0.9936278100639562	WITHOUT_CLASSIFICATION	0.006372189936043899	DESIGN
reduce (yyN)	WITHOUT_CLASSIFICATION	0.9990775912619605	WITHOUT_CLASSIFICATION	9.224087380395728E-4	DESIGN
leave stack alone	WITHOUT_CLASSIFICATION	0.9997468228374486	WITHOUT_CLASSIFICATION	2.5317716255129875E-4	DESIGN
line 321	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 351	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 382	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 417	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 420	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 423	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 426	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 280	WITHOUT_CLASSIFICATION	0.9998015087521345	WITHOUT_CLASSIFICATION	1.9849124786558976E-4	DESIGN
line 283	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 296	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 324	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 327	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 331	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 333	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 336	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 342	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 345	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 348	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 354	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 368	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 377	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 388	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 392	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 397	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 429	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 432	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 436	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 445	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 448	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 454	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 459	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 466	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 469	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 478	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 481	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 488	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 494	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 497	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 503	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 506	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 509	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 512	WITHOUT_CLASSIFICATION	0.9998014355695254	WITHOUT_CLASSIFICATION	1.9856443047466883E-4	DESIGN
line 521	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 526	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 540	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 543	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 546	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 566	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 610	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 672	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 691	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 696	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 772	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 782	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 785	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 788	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 791	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 534	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 549	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 552	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 558	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 561	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 571	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 574	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 579	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 586	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 589	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 592	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 595	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 598	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 623	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 627	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 630	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 633	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 639	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 648	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 657	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 661	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 666	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 678	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 682	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 688	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 699	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 706	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 708	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 727	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 737	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 753	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 779	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 801	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 808	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 811	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 817	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 842	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 845	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 848	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 893	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 899	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 932	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 944	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 960	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 980	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1004	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1038	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 820	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 826	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 829	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 832	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 851	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 857	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 860	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 863	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 866	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 869	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 875	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 884	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 887	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 890	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 902	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 909	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 912	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 916	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 922	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 928	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 941	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 947	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 951	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 955	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 965	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 969	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 977	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 983	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1013	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1023	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1035	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1041	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1043	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1054	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1057	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1060	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1069	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1075	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1105	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1111	WITHOUT_CLASSIFICATION	0.9998072300405275	WITHOUT_CLASSIFICATION	1.9276995947252825E-4	DESIGN
line 1122	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1130	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1140	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1158	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1204	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1207	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1247	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1251	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1261	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1078	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1084	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1087	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1090	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1093	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1114	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1116	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1118	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1124	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1126	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1138	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1144	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1149	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1155	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1162	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1173	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1179	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1182	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1190	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1196	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1213	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1217	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1231	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1236	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1244	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1254	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1258	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1264	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1270	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1273	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1276	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1279	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1282	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1289	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1292	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1295	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1298	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1305	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1348	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1387	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1392	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1448	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1462	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1470	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1496	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1502	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1595	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1598	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1308	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1311	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1317	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1323	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1326	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1329	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1337	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1342	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1345	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1354	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1359	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1366	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1369	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1373	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1377	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1383	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1399	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1401	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1406	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1417	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1424	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1427	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1430	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1433	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1436	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1442	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1445	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1458	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1464	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1489	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1493	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1507	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1519	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1532	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1538	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1542	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1557	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1573	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1591	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1615	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1629	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1632	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1705	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1716	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1725	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1742	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1749	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1818	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1822	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1607	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1610	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1622	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1625	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1636	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1639	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1647	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1651	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1657	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1660	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1663	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1678	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1702	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1711	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1719	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1722	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1731	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1734	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1738	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1746	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1756	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1758	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1761	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1767	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1776	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1782	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1785	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1788	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1791	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1797	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1800	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1803	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1806	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1809	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1815	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1825	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1828	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1831	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1847	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
$8 == null ? NilImplicitNode.NIL : $8;	WITHOUT_CLASSIFICATION	0.9694885348995191	WITHOUT_CLASSIFICATION	0.03051146510048086	DESIGN
$5 == null ? NilImplicitNode.NIL : $5;	WITHOUT_CLASSIFICATION	0.9694885348995191	WITHOUT_CLASSIFICATION	0.03051146510048086	DESIGN
.setPosFrom($2);	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
zero length array	WITHOUT_CLASSIFICATION	0.9999445392244966	WITHOUT_CLASSIFICATION	5.5460775503396594E-5	DESIGN
DStrNode: :"some text #{some expression}"	WITHOUT_CLASSIFICATION	0.9998386898656292	WITHOUT_CLASSIFICATION	1.6131013437088604E-4	DESIGN
StrNode: :"some text"	WITHOUT_CLASSIFICATION	0.9988190015206143	WITHOUT_CLASSIFICATION	0.0011809984793856652	DESIGN
EvStrNode :"#{some expression}"	WITHOUT_CLASSIFICATION	0.9992896603773488	WITHOUT_CLASSIFICATION	7.103396226513182E-4	DESIGN
INSTANCE VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9988682160405041	WITHOUT_CLASSIFICATION	0.0011317839594958557	DESIGN
line 1854	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1869	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1872	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1877	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1886	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1898	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1902	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1905	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1911	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1918	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1935	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1938	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1942	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1948	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1960	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1963	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1968	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1972	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1982	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1995	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 2000	WITHOUT_CLASSIFICATION	0.9998795992941623	WITHOUT_CLASSIFICATION	1.204007058377639E-4	DESIGN
line 2006	WITHOUT_CLASSIFICATION	0.9998029029304872	WITHOUT_CLASSIFICATION	1.970970695128136E-4	DESIGN
line 2010	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
We may need to subtract addition offset off of first	WITHOUT_CLASSIFICATION	0.9993148581811533	WITHOUT_CLASSIFICATION	6.851418188467528E-4	DESIGN
string fragment (we optimistically take one off in	WITHOUT_CLASSIFICATION	0.9989937935281386	WITHOUT_CLASSIFICATION	0.001006206471861428	DESIGN
ParserSupport.literal_concat). Check token length	WITHOUT_CLASSIFICATION	0.9997383692297752	WITHOUT_CLASSIFICATION	2.616307702248328E-4	DESIGN
and subtract as neeeded.	WITHOUT_CLASSIFICATION	0.9996571827325377	WITHOUT_CLASSIFICATION	3.428172674622236E-4	DESIGN
$$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);	WITHOUT_CLASSIFICATION	0.9998471639312757	WITHOUT_CLASSIFICATION	1.5283606872432283E-4	DESIGN
ENEBO: arg surrounded by in_defined set/unset	WITHOUT_CLASSIFICATION	0.9997583136110628	WITHOUT_CLASSIFICATION	2.4168638893719218E-4	DESIGN
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9975249846956469	WITHOUT_CLASSIFICATION	0.0024750153043530776	DESIGN
yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9993933783576864	WITHOUT_CLASSIFICATION	6.066216423135082E-4	DESIGN
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9996277358419905	WITHOUT_CLASSIFICATION	3.7226415800950454E-4	DESIGN
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9996277358419905	WITHOUT_CLASSIFICATION	3.7226415800950454E-4	DESIGN
ENEBO: Removed !compile_for_eval which probably is to reduce warnings	WITHOUT_CLASSIFICATION	0.9993557284120084	WITHOUT_CLASSIFICATION	6.442715879916397E-4	DESIGN
was $$ = null;	WITHOUT_CLASSIFICATION	0.9996535454777795	WITHOUT_CLASSIFICATION	3.4645452222046826E-4	DESIGN
line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9995658526344163	WITHOUT_CLASSIFICATION	4.341473655836492E-4	DESIGN
line 8143 "-"	WITHOUT_CLASSIFICATION	0.9998243178580088	WITHOUT_CLASSIFICATION	1.7568214199108073E-4	DESIGN
we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.999968747612708	WITHOUT_CLASSIFICATION	3.125238729197203E-5	DESIGN
No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999420018047848	WITHOUT_CLASSIFICATION	5.799819521523919E-5	DESIGN
Next immediate scope. Variable and constant scoping rules make use of this variable in different ways.	WITHOUT_CLASSIFICATION	0.994007837132089	WITHOUT_CLASSIFICATION	0.005992162867911067	DESIGN
Live reference to module	WITHOUT_CLASSIFICATION	0.9972252010115173	WITHOUT_CLASSIFICATION	0.002774798988482758	DESIGN
Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9995761265042765	WITHOUT_CLASSIFICATION	4.238734957235222E-4	DESIGN
Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999655624162346	WITHOUT_CLASSIFICATION	3.4437583765391755E-5	DESIGN
number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9952022467595735	WITHOUT_CLASSIFICATION	0.00479775324042649	DESIGN
number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9919836338119528	WITHOUT_CLASSIFICATION	0.008016366188047309	DESIGN
index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9993857452496059	WITHOUT_CLASSIFICATION	6.142547503941898E-4	DESIGN
Note that this object equality check is intentional, to ensure the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999968383365946	WITHOUT_CLASSIFICATION	3.161663405412201E-6	DESIGN
Returns slot of variable	WITHOUT_CLASSIFICATION	0.9974947245179057	WITHOUT_CLASSIFICATION	0.0025052754820944073	DESIGN
Returns slot of variable	WITHOUT_CLASSIFICATION	0.9974947245179057	WITHOUT_CLASSIFICATION	0.0025052754820944073	DESIGN
Note: Only used by compiler until it can use getConstant again or use some other refactoring	WITHOUT_CLASSIFICATION	0.8956180779960885	WITHOUT_CLASSIFICATION	0.10438192200391151	DESIGN
If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9987004372309303	WITHOUT_CLASSIFICATION	0.001299562769069673	DESIGN
Try and unload the autoload specified from internedName	WITHOUT_CLASSIFICATION	0.9997920628990498	WITHOUT_CLASSIFICATION	2.0793710095025548E-4	DESIGN
We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9997981725943366	WITHOUT_CLASSIFICATION	2.0182740566348904E-4	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9994706669648503	WITHOUT_CLASSIFICATION	5.293330351497248E-4	DESIGN
do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9990027130363782	WITHOUT_CLASSIFICATION	9.972869636218568E-4	DESIGN
source extensions	WITHOUT_CLASSIFICATION	0.9998799110472333	WITHOUT_CLASSIFICATION	1.2008895276668608E-4	DESIGN
do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9990027130363782	WITHOUT_CLASSIFICATION	9.972869636218568E-4	DESIGN
. Array given to rest should pass itself . Array with rest + other args should extract array . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9967764678371998	WITHOUT_CLASSIFICATION	0.0032235321628001964	DESIGN
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9942125950039382	WITHOUT_CLASSIFICATION	0.005787404996061779	DESIGN
Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.7125830919947376	WITHOUT_CLASSIFICATION	0.28741690800526243	DESIGN
Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.8173266629642512	WITHOUT_CLASSIFICATION	0.1826733370357488	DESIGN
private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9963147676202644	WITHOUT_CLASSIFICATION	0.0036852323797356597	DESIGN
private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9963147676202644	WITHOUT_CLASSIFICATION	0.0036852323797356597	DESIGN
List of active dynamic scopes. Each of these may have captured other dynamic scopes to implement closures.	WITHOUT_CLASSIFICATION	0.8258438743524271	WITHOUT_CLASSIFICATION	0.1741561256475729	DESIGN
File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999706526171334	WITHOUT_CLASSIFICATION	2.934738286664351E-5	DESIGN
Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9998554157775724	WITHOUT_CLASSIFICATION	1.4458422242748944E-4	DESIGN
In certain places, like grep, we don't use real frames for the call blocks. This has the effect of not setting the backref in the correct frame - this delta is activated to the place where the grep is running in so that the backref will be set in an appropriate place.	WITHOUT_CLASSIFICATION	0.9879716175700614	DESIGN	0.012028382429938542	WITHOUT_CLASSIFICATION
TOPLEVEL self and a few others want a top-level scope. We create this one right away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9962293118000737	WITHOUT_CLASSIFICATION	0.0037706881999262864	DESIGN
CATCH MANAGEMENT	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
FRAME MANAGEMENT	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.995554318937086	WITHOUT_CLASSIFICATION	0.004445681062913992	DESIGN
assert level == 0;	WITHOUT_CLASSIFICATION	0.9987431605399152	WITHOUT_CLASSIFICATION	0.0012568394600847986	DESIGN
assert level == 0;	WITHOUT_CLASSIFICATION	0.9987431605399152	WITHOUT_CLASSIFICATION	0.0012568394600847986	DESIGN
look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9995326593415806	WITHOUT_CLASSIFICATION	4.67340658419281E-4	DESIGN
if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9998608842622122	WITHOUT_CLASSIFICATION	1.3911573778774164E-4	DESIGN
look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9994092822379723	WITHOUT_CLASSIFICATION	5.907177620277849E-4	DESIGN
All entries following removed node can stay in list, but all preceding ones need to be cloned.	WITHOUT_CLASSIFICATION	0.9994624179615966	WITHOUT_CLASSIFICATION	5.375820384033489E-4	DESIGN
required and optional only	WITHOUT_CLASSIFICATION	0.9998891940805786	WITHOUT_CLASSIFICATION	1.108059194214387E-4	DESIGN
do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9990027130363782	WITHOUT_CLASSIFICATION	9.972869636218568E-4	DESIGN
look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9991143641983399	WITHOUT_CLASSIFICATION	8.856358016600274E-4	DESIGN
set the binding's frame's "previous" file and line to current, so trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999796863063228	WITHOUT_CLASSIFICATION	2.0313693677137317E-5	DESIGN
framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9994950955560322	WITHOUT_CLASSIFICATION	5.049044439678185E-4	DESIGN
look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9992131881421478	WITHOUT_CLASSIFICATION	7.868118578521651E-4	DESIGN
unframed invokers have no Ruby frames, so pull from class name but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999773624857251	WITHOUT_CLASSIFICATION	2.263751427486479E-5	DESIGN
try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999550678560618	WITHOUT_CLASSIFICATION	4.493214393812875E-5	DESIGN
Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999202592133025	WITHOUT_CLASSIFICATION	7.974078669754E-5	DESIGN
Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999165516179236	WITHOUT_CLASSIFICATION	8.34483820764749E-5	DESIGN
Determine what sort of assigner should be used for the provided 'iter' (e.g. block). Assigner provides just the right logic for assigning values to local parameters of the block. This method also has a second optimization which is to set 'noargblock' in the case that the block is a block which accepts no arguments. The primary reason for this second optimization is that in the case of a yield with a RubyArray we will bypass some logic processing the RubyArray into a proper form (only to then not do anythign with it). A secondary benefit is that a simple boolean seems to optimize by hotspot much faster than the zero arg assigner.	WITHOUT_CLASSIFICATION	0.8100792051366237	WITHOUT_CLASSIFICATION	0.1899207948633764	DESIGN
new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.991928065843516	WITHOUT_CLASSIFICATION	0.00807193415648409	DESIGN
No argument blocks	WITHOUT_CLASSIFICATION	0.9999491328745026	WITHOUT_CLASSIFICATION	5.086712549751652E-5	DESIGN
just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999282540292664	WITHOUT_CLASSIFICATION	7.174597073351817E-5	DESIGN
Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.8704939638916366	WITHOUT_CLASSIFICATION	0.12950603610836336	DESIGN
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9985389045641332	WITHOUT_CLASSIFICATION	0.001461095435866828	DESIGN
This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9332757687942054	WITHOUT_CLASSIFICATION	0.06672423120579449	DESIGN
Highest reserved id	WITHOUT_CLASSIFICATION	0.9992742021843144	WITHOUT_CLASSIFICATION	7.257978156855883E-4	DESIGN
binary typed calls	WITHOUT_CLASSIFICATION	0.9999388278534865	WITHOUT_CLASSIFICATION	6.117214651345696E-5	DESIGN
id must always be even	WITHOUT_CLASSIFICATION	0.9893515267466219	WITHOUT_CLASSIFICATION	0.010648473253378069	DESIGN
with block pass	WITHOUT_CLASSIFICATION	0.9997167890091513	WITHOUT_CLASSIFICATION	2.832109908487094E-4	DESIGN
no block	WITHOUT_CLASSIFICATION	0.9997095682232923	WITHOUT_CLASSIFICATION	2.904317767078054E-4	DESIGN
with block literal (iter)	WITHOUT_CLASSIFICATION	0.9978796970262648	WITHOUT_CLASSIFICATION	0.0021203029737351543	DESIGN
assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9809964728577194	WITHOUT_CLASSIFICATION	0.019003527142280614	DESIGN
if we have multiple asgn with just args, need a special type for that	WITHOUT_CLASSIFICATION	0.9921936778391103	WITHOUT_CLASSIFICATION	0.007806322160889658	DESIGN
&& args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9992412900495928	WITHOUT_CLASSIFICATION	7.587099504071447E-4	DESIGN
return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9996206959330651	WITHOUT_CLASSIFICATION	3.793040669349543E-4	DESIGN
ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999771093662384	WITHOUT_CLASSIFICATION	2.2890633761627138E-5	DESIGN
predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9855144322345958	WITHOUT_CLASSIFICATION	0.014485567765404116	DESIGN
fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999218459163726	WITHOUT_CLASSIFICATION	7.815408362752051E-5	DESIGN
Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.995759861692041	WITHOUT_CLASSIFICATION	0.004240138307958928	DESIGN
Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9964771169141372	WITHOUT_CLASSIFICATION	0.0035228830858627983	DESIGN
Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9982835276159076	WITHOUT_CLASSIFICATION	0.0017164723840923293	DESIGN
Lastline	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9977950755206413	WITHOUT_CLASSIFICATION	0.0022049244793586422	DESIGN
bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9995349317428167	WITHOUT_CLASSIFICATION	4.6506825718336533E-4	DESIGN
Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9975414703633514	WITHOUT_CLASSIFICATION	0.002458529636648667	DESIGN
try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9997710054787141	WITHOUT_CLASSIFICATION	2.289945212857426E-4	DESIGN
Some helper functions:	WITHOUT_CLASSIFICATION	0.9995053652096806	WITHOUT_CLASSIFICATION	4.946347903193353E-4	DESIGN
silently ignore	WITHOUT_CLASSIFICATION	0.9995482480927709	WITHOUT_CLASSIFICATION	4.51751907229078E-4	DESIGN
used by compiler	WITHOUT_CLASSIFICATION	0.9842551860239572	WITHOUT_CLASSIFICATION	0.015744813976042858	DESIGN
initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9945376120700802	WITHOUT_CLASSIFICATION	0.005462387929919917	DESIGN
INSTANCE VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9988682160405041	WITHOUT_CLASSIFICATION	0.0011317839594958557	DESIGN
We need to guarantee that any existing reads of old Map can proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999907442585088	WITHOUT_CLASSIFICATION	9.255741491158779E-6	DESIGN
Single node on list	WITHOUT_CLASSIFICATION	0.9999170290089952	WITHOUT_CLASSIFICATION	8.297099100493243E-5	DESIGN
Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9984310793470159	WITHOUT_CLASSIFICATION	0.0015689206529841066	DESIGN
Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9998616084888753	WITHOUT_CLASSIFICATION	1.3839151112468348E-4	DESIGN
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9942125950039382	WITHOUT_CLASSIFICATION	0.005787404996061779	DESIGN
Note: In Ruby 1.9 all of this logic can go away since they will require explicit bindings for evals.	WITHOUT_CLASSIFICATION	0.9984257692173654	WITHOUT_CLASSIFICATION	0.0015742307826346988	DESIGN
We only define one special dynamic scope per 'logical' binding. So all bindings for the same scope should share the same dynamic scope. This allows multiple evals with different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.8068800626517624	WITHOUT_CLASSIFICATION	0.19311993734823757	DESIGN
If the next scope out has the same binding scope as this scope it means we are evaling within an eval and in that case we should be sharing the same binding scope.	WITHOUT_CLASSIFICATION	0.9983938088217559	WITHOUT_CLASSIFICATION	0.0016061911782440511	DESIGN
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999694472586015	WITHOUT_CLASSIFICATION	3.0552741398479835E-5	DESIGN
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999694472586015	WITHOUT_CLASSIFICATION	3.0552741398479835E-5	DESIGN
nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999889020853329	WITHOUT_CLASSIFICATION	1.1097914667049819E-5	DESIGN
nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999889020853329	WITHOUT_CLASSIFICATION	1.1097914667049819E-5	DESIGN
nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999889020853329	WITHOUT_CLASSIFICATION	1.1097914667049819E-5	DESIGN
no extra args for rest	WITHOUT_CLASSIFICATION	0.9999102101797038	WITHOUT_CLASSIFICATION	8.97898202961743E-5	DESIGN
no extra args for rest	WITHOUT_CLASSIFICATION	0.9999102101797038	WITHOUT_CLASSIFICATION	8.97898202961743E-5	DESIGN
extra args for rest	WITHOUT_CLASSIFICATION	0.9999441075287236	WITHOUT_CLASSIFICATION	5.589247127637871E-5	DESIGN
extra args for rest	WITHOUT_CLASSIFICATION	0.9999441075287236	WITHOUT_CLASSIFICATION	5.589247127637871E-5	DESIGN
This is the proper behavior for all non-expanded assigners which have a pre > 0. The rest override this.	WITHOUT_CLASSIFICATION	0.9999228759056614	WITHOUT_CLASSIFICATION	7.712409433856198E-5	DESIGN
This is the proper behavior for all non-expanded assigners.	WITHOUT_CLASSIFICATION	0.9919119790991447	WITHOUT_CLASSIFICATION	0.008088020900855192	DESIGN
prefill ?	WITHOUT_CLASSIFICATION	0.9990020330778671	WITHOUT_CLASSIFICATION	9.979669221329163E-4	DESIGN
prefill ?	WITHOUT_CLASSIFICATION	0.9990020330778671	WITHOUT_CLASSIFICATION	9.979669221329163E-4	DESIGN
MUST be called from synchronized/locked block! should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9989032068555689	WITHOUT_CLASSIFICATION	0.0010967931444311246	DESIGN
retrieve method module name	WITHOUT_CLASSIFICATION	0.9956160528610749	WITHOUT_CLASSIFICATION	0.004383947138925088	DESIGN
call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9989255466965364	WITHOUT_CLASSIFICATION	0.0010744533034635498	DESIGN
if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9998787590570924	WITHOUT_CLASSIFICATION	1.212409429075753E-4	DESIGN
if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9997061074993153	WITHOUT_CLASSIFICATION	2.9389250068457905E-4	DESIGN
method object already present, push various args tc self klazz name	WITHOUT_CLASSIFICATION	0.9998394205832813	WITHOUT_CLASSIFICATION	1.605794167185801E-4	DESIGN
if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999142777385197	WITHOUT_CLASSIFICATION	8.572226148030174E-5	DESIGN
invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9994061796854665	WITHOUT_CLASSIFICATION	5.938203145334755E-4	DESIGN
caller	WITHOUT_CLASSIFICATION	0.9996290923805439	WITHOUT_CLASSIFICATION	3.709076194561846E-4	DESIGN
calltype block	WITHOUT_CLASSIFICATION	0.9996072015781119	WITHOUT_CLASSIFICATION	3.9279842188809626E-4	DESIGN
if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999863262372032	WITHOUT_CLASSIFICATION	1.3673762796885646E-5	DESIGN
load arity for check	WITHOUT_CLASSIFICATION	0.9998914582938485	WITHOUT_CLASSIFICATION	1.0854170615152802E-4	DESIGN
throw	WITHOUT_CLASSIFICATION	0.9991624692709553	WITHOUT_CLASSIFICATION	8.375307290446726E-4	DESIGN
load arity for error	WITHOUT_CLASSIFICATION	0.9993484511091583	WITHOUT_CLASSIFICATION	6.515488908418489E-4	DESIGN
arity ok, continue	WITHOUT_CLASSIFICATION	0.9995296219476737	WITHOUT_CLASSIFICATION	4.703780523262808E-4	DESIGN
InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9988157287080784	WITHOUT_CLASSIFICATION	0.0011842712919215147	DESIGN
ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9963164597865339	WITHOUT_CLASSIFICATION	0.003683540213465955	DESIGN
FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9988157287080784	WITHOUT_CLASSIFICATION	0.0011842712919215147	DESIGN
InvocationCallback	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9992896603773488	WITHOUT_CLASSIFICATION	7.103396226513182E-4	DESIGN
for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9998906344752911	WITHOUT_CLASSIFICATION	1.0936552470891021E-4	DESIGN
for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999325791669206	WITHOUT_CLASSIFICATION	6.742083307942433E-5	DESIGN
load the encoding	WITHOUT_CLASSIFICATION	0.9996572943188234	WITHOUT_CLASSIFICATION	3.4270568117664125E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9993240813889122	WITHOUT_CLASSIFICATION	6.759186110878258E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9993240813889122	WITHOUT_CLASSIFICATION	6.759186110878258E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9993240813889122	WITHOUT_CLASSIFICATION	6.759186110878258E-4	DESIGN
IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9994660694739305	WITHOUT_CLASSIFICATION	5.339305260694499E-4	DESIGN
IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9994660694739305	WITHOUT_CLASSIFICATION	5.339305260694499E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9994660694739305	WITHOUT_CLASSIFICATION	5.339305260694499E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9994660694739305	WITHOUT_CLASSIFICATION	5.339305260694499E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9994660694739305	WITHOUT_CLASSIFICATION	5.339305260694499E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999708110545323	WITHOUT_CLASSIFICATION	2.918894546769356E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999708110545323	WITHOUT_CLASSIFICATION	2.918894546769356E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999708110545323	WITHOUT_CLASSIFICATION	2.918894546769356E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999708110545323	WITHOUT_CLASSIFICATION	2.918894546769356E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999708110545323	WITHOUT_CLASSIFICATION	2.918894546769356E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999708110545323	WITHOUT_CLASSIFICATION	2.918894546769356E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999708110545323	WITHOUT_CLASSIFICATION	2.918894546769356E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999708110545323	WITHOUT_CLASSIFICATION	2.918894546769356E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999708110545323	WITHOUT_CLASSIFICATION	2.918894546769356E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999708110545323	WITHOUT_CLASSIFICATION	2.918894546769356E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999708110545323	WITHOUT_CLASSIFICATION	2.918894546769356E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999708110545323	WITHOUT_CLASSIFICATION	2.918894546769356E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999708110545323	WITHOUT_CLASSIFICATION	2.918894546769356E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999708110545323	WITHOUT_CLASSIFICATION	2.918894546769356E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999708110545323	WITHOUT_CLASSIFICATION	2.918894546769356E-4	DESIGN
If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999033451478014	WITHOUT_CLASSIFICATION	9.665485219850275E-5	DESIGN
BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9988157287080784	WITHOUT_CLASSIFICATION	0.0011842712919215147	DESIGN
ThreadContext	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9992896603773488	WITHOUT_CLASSIFICATION	7.103396226513182E-4	DESIGN
Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9998119911815809	WITHOUT_CLASSIFICATION	1.880088184190349E-4	DESIGN
RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9992896603773488	WITHOUT_CLASSIFICATION	7.103396226513182E-4	DESIGN
add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999965084094364	WITHOUT_CLASSIFICATION	3.4915905635180554E-6	DESIGN
if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9996167913673837	WITHOUT_CLASSIFICATION	3.832086326162296E-4	DESIGN
wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.999064756118675	WITHOUT_CLASSIFICATION	9.352438813250026E-4	DESIGN
add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.999628146921237	WITHOUT_CLASSIFICATION	3.7185307876295997E-4	DESIGN
Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9948511805040091	WITHOUT_CLASSIFICATION	0.005148819495990898	DESIGN
"." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.6984914545407473	WITHOUT_CLASSIFICATION	0.3015085454592526	DESIGN
Add 1.8 libs	WITHOUT_CLASSIFICATION	0.999704055530641	WITHOUT_CLASSIFICATION	2.959444693590604E-4	DESIGN
Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999956545586937	WITHOUT_CLASSIFICATION	4.345441306407608E-6	DESIGN
Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.991433546556069	WITHOUT_CLASSIFICATION	0.008566453443931043	DESIGN
We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9308351662433549	WITHOUT_CLASSIFICATION	0.06916483375664514	DESIGN
If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9997669002610096	WITHOUT_CLASSIFICATION	2.3309973899053534E-4	DESIGN
quietly try to load the class	WITHOUT_CLASSIFICATION	0.9987620865950643	WITHOUT_CLASSIFICATION	0.0012379134049357195	DESIGN
If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9993886979705364	WITHOUT_CLASSIFICATION	6.113020294636408E-4	DESIGN
no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9995618558930036	WITHOUT_CLASSIFICATION	4.3814410699643256E-4	DESIGN
if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9994400114918721	WITHOUT_CLASSIFICATION	5.5998850812788E-4	DESIGN
signed short, big-endian	WITHOUT_CLASSIFICATION	0.9995465296700528	WITHOUT_CLASSIFICATION	4.5347032994733815E-4	DESIGN
source extensions	WITHOUT_CLASSIFICATION	0.9998799110472333	WITHOUT_CLASSIFICATION	1.2008895276668608E-4	DESIGN
We don't support .so, but some stdlib require .so directly replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.924107825615851	WITHOUT_CLASSIFICATION	0.07589217438414894	DESIGN
This code exploits the fact that all .jar files will be found for the JarredScript feature. This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9895584207768904	WITHOUT_CLASSIFICATION	0.010441579223109586	DESIGN
Make the class name look nice, by splitting on _ and capitalize each segment, then joining the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9995984421035906	WITHOUT_CLASSIFICATION	4.0155789640940024E-4	DESIGN
It's _really_ expensive to check that the class actually exists in the Jar, so we don't do that now.	WITHOUT_CLASSIFICATION	0.9999051425672033	WITHOUT_CLASSIFICATION	9.485743279672571E-5	DESIGN
trim extension to try other options	WITHOUT_CLASSIFICATION	0.9995103098904479	WITHOUT_CLASSIFICATION	4.896901095520873E-4	DESIGN
extension extensions	WITHOUT_CLASSIFICATION	0.9994212046918945	WITHOUT_CLASSIFICATION	5.787953081054785E-4	DESIGN
unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9995138242915194	WITHOUT_CLASSIFICATION	4.8617570848068106E-4	DESIGN
try all extensions	WITHOUT_CLASSIFICATION	0.9998635116755632	WITHOUT_CLASSIFICATION	1.3648832443685787E-4	DESIGN
if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999696089762274	WITHOUT_CLASSIFICATION	3.0391023772503406E-5	DESIGN
unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9994985849223239	WITHOUT_CLASSIFICATION	5.014150776760369E-4	DESIGN
try only literal search	WITHOUT_CLASSIFICATION	0.9997463743940213	WITHOUT_CLASSIFICATION	2.536256059787863E-4	DESIGN
attempt to load the found library	WITHOUT_CLASSIFICATION	0.9994255206488352	WITHOUT_CLASSIFICATION	5.744793511647606E-4	DESIGN
otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999477668469293	WITHOUT_CLASSIFICATION	5.223315307060485E-5	DESIGN
allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.99668085364108	WITHOUT_CLASSIFICATION	0.0033191463589200888	DESIGN
Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9960701538470632	WITHOUT_CLASSIFICATION	0.003929846152936768	DESIGN
check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999993122764439	WITHOUT_CLASSIFICATION	6.877235559897987E-7	DESIGN
if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999865805395892	WITHOUT_CLASSIFICATION	1.3419460410708813E-5	DESIGN
end suffix iteration	WITHOUT_CLASSIFICATION	0.9998950379592961	WITHOUT_CLASSIFICATION	1.0496204070380985E-4	DESIGN
if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9986388276700077	WITHOUT_CLASSIFICATION	0.0013611723299923489	DESIGN
if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999811164870134	WITHOUT_CLASSIFICATION	1.888351298656427E-5	DESIGN
we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.999471605993001	WITHOUT_CLASSIFICATION	5.283940069989128E-4	DESIGN
we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.999471605993001	WITHOUT_CLASSIFICATION	5.283940069989128E-4	DESIGN
it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9972755872818622	WITHOUT_CLASSIFICATION	0.002724412718137874	DESIGN
it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9972755872818622	WITHOUT_CLASSIFICATION	0.002724412718137874	DESIGN
prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999491566883222	WITHOUT_CLASSIFICATION	5.084331167777706E-5	DESIGN
prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999491566883222	WITHOUT_CLASSIFICATION	5.084331167777706E-5	DESIGN
actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9998292909023307	WITHOUT_CLASSIFICATION	1.7070909766917045E-4	DESIGN
handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9991844371819875	WITHOUT_CLASSIFICATION	8.155628180124597E-4	DESIGN
if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9998522301566061	WITHOUT_CLASSIFICATION	1.4776984339395953E-4	DESIGN
if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9998184710306076	WITHOUT_CLASSIFICATION	1.8152896939228693E-4	DESIGN
otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9987352779162411	WITHOUT_CLASSIFICATION	0.0012647220837589525	DESIGN
Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9599322343349546	WITHOUT_CLASSIFICATION	0.04006776566504539	DESIGN
signed short, native	WITHOUT_CLASSIFICATION	0.9998745605101625	WITHOUT_CLASSIFICATION	1.254394898374898E-4	DESIGN
If we fail to find as a normal Ruby script, we try to find as an extension, checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9998757728942405	WITHOUT_CLASSIFICATION	1.2422710575964583E-4	DESIGN
write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.8601843210361605	WITHOUT_CLASSIFICATION	0.1398156789638395	DESIGN
if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999503688820821	WITHOUT_CLASSIFICATION	4.963111791793255E-5	DESIGN
Look in classpath next (we do not use File as a test since UNC names will match) Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9996705463307983	WITHOUT_CLASSIFICATION	3.2945366920173765E-4	DESIGN
Directories and unavailable resources are not able to open a stream.	WITHOUT_CLASSIFICATION	0.9991633607908066	WITHOUT_CLASSIFICATION	8.366392091934822E-4	DESIGN
Try to load from classpath without prefix. "A/b.rb" will not load as "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999210065186874	WITHOUT_CLASSIFICATION	7.899348131254012E-5	DESIGN
object has instance vars and isn't a class, get a snapshot to be marshalled and output the ivar header here	WITHOUT_CLASSIFICATION	0.943671921052625	WITHOUT_CLASSIFICATION	0.05632807894737494	DESIGN
flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9957929531534531	WITHOUT_CLASSIFICATION	0.004207046846546978	DESIGN
write('S');	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
switch on the object's native type. This allows use-defined classes that have extended core native types to piggyback on their marshalling logic.	WITHOUT_CLASSIFICATION	0.9993330142710956	WITHOUT_CLASSIFICATION	6.669857289043834E-4	DESIGN
object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9998387564648276	WITHOUT_CLASSIFICATION	1.6124353517240852E-4	DESIGN
We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9972547844035784	WITHOUT_CLASSIFICATION	0.0027452155964216097	DESIGN
w_symbol	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
w_unique	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9978992570770059	WITHOUT_CLASSIFICATION	0.0021007429229941586	DESIGN
Major Minor	WITHOUT_CLASSIFICATION	0.9995228760435336	WITHOUT_CLASSIFICATION	4.771239564663235E-4	DESIGN
any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9998896599855304	WITHOUT_CLASSIFICATION	1.1034001446959583E-4	DESIGN
"hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9997992342103389	WITHOUT_CLASSIFICATION	2.007657896612204E-4	DESIGN
All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999741006082248	WITHOUT_CLASSIFICATION	2.5899391775213762E-5	DESIGN
sic	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9996995415492951	WITHOUT_CLASSIFICATION	3.0045845070490696E-4	DESIGN
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9996995415492951	WITHOUT_CLASSIFICATION	3.0045845070490696E-4	DESIGN
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9996995415492951	WITHOUT_CLASSIFICATION	3.0045845070490696E-4	DESIGN
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9941579554765282	WITHOUT_CLASSIFICATION	0.005842044523471767	DESIGN
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9941579554765282	WITHOUT_CLASSIFICATION	0.005842044523471767	DESIGN
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9985389045641332	WITHOUT_CLASSIFICATION	0.001461095435866828	DESIGN
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9985389045641332	WITHOUT_CLASSIFICATION	0.001461095435866828	DESIGN
If we are setting post arguments we can assume there are no pre or others	WITHOUT_CLASSIFICATION	0.9998912298183312	WITHOUT_CLASSIFICATION	1.0877018166875085E-4	DESIGN
XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9700950753207022	WITHOUT_CLASSIFICATION	0.029904924679297812	DESIGN
unsigned short, native	WITHOUT_CLASSIFICATION	0.9995389551929711	WITHOUT_CLASSIFICATION	4.610448070289176E-4	DESIGN
int, native long, native	WITHOUT_CLASSIFICATION	0.9994969829842368	WITHOUT_CLASSIFICATION	5.030170157631946E-4	DESIGN
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9996995415492951	WITHOUT_CLASSIFICATION	3.0045845070490696E-4	DESIGN
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9996995415492951	WITHOUT_CLASSIFICATION	3.0045845070490696E-4	DESIGN
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9996995415492951	WITHOUT_CLASSIFICATION	3.0045845070490696E-4	DESIGN
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9941579554765282	WITHOUT_CLASSIFICATION	0.005842044523471767	DESIGN
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9941579554765282	WITHOUT_CLASSIFICATION	0.005842044523471767	DESIGN
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9941579554765282	WITHOUT_CLASSIFICATION	0.005842044523471767	DESIGN
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9985389045641332	WITHOUT_CLASSIFICATION	0.001461095435866828	DESIGN
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9985389045641332	WITHOUT_CLASSIFICATION	0.001461095435866828	DESIGN
Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999512261754572	WITHOUT_CLASSIFICATION	4.877382454289648E-5	DESIGN
Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9998217661295625	WITHOUT_CLASSIFICATION	1.7823387043759386E-4	DESIGN
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.980862215778303	WITHOUT_CLASSIFICATION	0.019137784221696975	DESIGN
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.980862215778303	WITHOUT_CLASSIFICATION	0.019137784221696975	DESIGN
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.980862215778303	WITHOUT_CLASSIFICATION	0.019137784221696975	DESIGN
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.980862215778303	WITHOUT_CLASSIFICATION	0.019137784221696975	DESIGN
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.980862215778303	WITHOUT_CLASSIFICATION	0.019137784221696975	DESIGN
SunSignalFacade	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
All braces pushed..	WITHOUT_CLASSIFICATION	0.9998051737330386	WITHOUT_CLASSIFICATION	1.9482626696151813E-4	DESIGN
failed : try next recursion	WITHOUT_CLASSIFICATION	0.9105118039396972	WITHOUT_CLASSIFICATION	0.08948819606030267	DESIGN
leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999484400033019	WITHOUT_CLASSIFICATION	5.1559996698152816E-5	DESIGN
are we at ''	WITHOUT_CLASSIFICATION	0.9967164960484429	WITHOUT_CLASSIFICATION	0.0032835039515570733	DESIGN
No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9998024354457721	WITHOUT_CLASSIFICATION	1.9756455422801616E-4	DESIGN
not enough bytes	WITHOUT_CLASSIFICATION	0.9989458568662059	WITHOUT_CLASSIFICATION	0.0010541431337941745	DESIGN
Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999176149946502	WITHOUT_CLASSIFICATION	8.238500534983205E-5	DESIGN
skip inner braces	WITHOUT_CLASSIFICATION	0.999386340754311	WITHOUT_CLASSIFICATION	6.136592456891161E-4	DESIGN
Process {}'s (example: Dir.glob("{jruby,jython}/README")	WITHOUT_CLASSIFICATION	0.999666738012628	WITHOUT_CLASSIFICATION	3.332619873720823E-4	DESIGN
complete, according to Posix.2	WITHOUT_CLASSIFICATION	0.9992519287814571	WITHOUT_CLASSIFICATION	7.480712185429774E-4	DESIGN
Only accept an open brace if there is a close	WITHOUT_CLASSIFICATION	0.9999996659886556	WITHOUT_CLASSIFICATION	3.3401134441442645E-7	DESIGN
brace to match it. Bracket expressions must be	WITHOUT_CLASSIFICATION	0.9994614108284183	WITHOUT_CLASSIFICATION	5.385891715816722E-4	DESIGN
index of left-most brace index of right-most brace	WITHOUT_CLASSIFICATION	0.9991787803620332	WITHOUT_CLASSIFICATION	8.212196379667456E-4	DESIGN
Length check is a hack. We should not be reeiving "" as a filename ever.	WITHOUT_CLASSIFICATION	0.9188159340584683	WITHOUT_CLASSIFICATION	0.08118406594153174	DESIGN
NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9909910906893529	WITHOUT_CLASSIFICATION	0.009008909310647122	DESIGN
NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9909910906893529	WITHOUT_CLASSIFICATION	0.009008909310647122	DESIGN
NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9909910906893529	WITHOUT_CLASSIFICATION	0.009008909310647122	DESIGN
Pickaxe says @ must be followed by a name character, but MRI does not require this.	WITHOUT_CLASSIFICATION	0.9988009400262279	WITHOUT_CLASSIFICATION	0.001199059973772192	DESIGN
Pickaxe says @@ must be followed by a name character, but MRI does not require this.	WITHOUT_CLASSIFICATION	0.99894979674826	WITHOUT_CLASSIFICATION	0.001050203251739984	DESIGN
SimpleSampler	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
convert into longs, returning unsigned 64-bit values as signed longs ( num2long raises a RangeError on values > Long.MAX_VALUE )	WITHOUT_CLASSIFICATION	0.9926590834149089	WITHOUT_CLASSIFICATION	0.007340916585091112	DESIGN
b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9995126367139423	WITHOUT_CLASSIFICATION	4.87363286057733E-4	DESIGN
single precision, little-endian	WITHOUT_CLASSIFICATION	0.9994877678166124	WITHOUT_CLASSIFICATION	5.122321833876181E-4	DESIGN
single precision, big-endian	WITHOUT_CLASSIFICATION	0.9991467829588705	WITHOUT_CLASSIFICATION	8.53217041129543E-4	DESIGN
single precision, native	WITHOUT_CLASSIFICATION	0.9994255649851795	WITHOUT_CLASSIFICATION	5.744350148205239E-4	DESIGN
single precision, native single precision, native	WITHOUT_CLASSIFICATION	0.9996555313990643	WITHOUT_CLASSIFICATION	3.4446860093565086E-4	DESIGN
double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999280851506086	WITHOUT_CLASSIFICATION	7.191484939147353E-5	DESIGN
double precision, big-endian	WITHOUT_CLASSIFICATION	0.9998801774340493	WITHOUT_CLASSIFICATION	1.1982256595067956E-4	DESIGN
double precision, native	WITHOUT_CLASSIFICATION	0.9999193478679631	WITHOUT_CLASSIFICATION	8.065213203689308E-5	DESIGN
signed short, little-endian	WITHOUT_CLASSIFICATION	0.9995460594215988	WITHOUT_CLASSIFICATION	4.539405784012137E-4	DESIGN
signed char	WITHOUT_CLASSIFICATION	0.9998986426225789	WITHOUT_CLASSIFICATION	1.0135737742114642E-4	DESIGN
unsigned char	WITHOUT_CLASSIFICATION	0.9998469017535544	WITHOUT_CLASSIFICATION	1.5309824644564116E-4	DESIGN
long, little-endian	WITHOUT_CLASSIFICATION	0.9995849482852205	WITHOUT_CLASSIFICATION	4.150517147794932E-4	DESIGN
long, big-endian	WITHOUT_CLASSIFICATION	0.9995853782644342	WITHOUT_CLASSIFICATION	4.1462173556580493E-4	DESIGN
unsigned int, native	WITHOUT_CLASSIFICATION	0.9998059809387623	WITHOUT_CLASSIFICATION	1.940190612378332E-4	DESIGN
int, native	WITHOUT_CLASSIFICATION	0.9997667934939549	WITHOUT_CLASSIFICATION	2.3320650604515203E-4	DESIGN
64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9997242060237932	WITHOUT_CLASSIFICATION	2.757939762067737E-4	DESIGN
How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.959945493308632	WITHOUT_CLASSIFICATION	0.040054506691368084	DESIGN
See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9998519352417781	WITHOUT_CLASSIFICATION	1.4806475822192632E-4	DESIGN
Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.985288290425012	WITHOUT_CLASSIFICATION	0.014711709574988005	DESIGN
Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9973680555577038	WITHOUT_CLASSIFICATION	0.0026319444422961778	DESIGN
obtain a	WITHOUT_CLASSIFICATION	0.999515897878762	WITHOUT_CLASSIFICATION	4.8410212123794675E-4	DESIGN
obtain b	WITHOUT_CLASSIFICATION	0.9998534973991705	WITHOUT_CLASSIFICATION	1.4650260082948584E-4	DESIGN
obtain c	WITHOUT_CLASSIFICATION	0.999826669709827	WITHOUT_CLASSIFICATION	1.733302901729203E-4	DESIGN
obtain d	WITHOUT_CLASSIFICATION	0.9997519371793684	WITHOUT_CLASSIFICATION	2.480628206315755E-4	DESIGN
encode.limit() -	WITHOUT_CLASSIFICATION	0.9989957635056516	WITHOUT_CLASSIFICATION	0.0010042364943484226	DESIGN
1	WITHOUT_CLASSIFICATION	0.9997296062538441	WITHOUT_CLASSIFICATION	2.703937461559636E-4	DESIGN
2	WITHOUT_CLASSIFICATION	0.9997710725264165	WITHOUT_CLASSIFICATION	2.289274735834889E-4	DESIGN
3	WITHOUT_CLASSIFICATION	0.9992283069789111	WITHOUT_CLASSIFICATION	7.716930210889982E-4	DESIGN
4	WITHOUT_CLASSIFICATION	0.9993431850918214	WITHOUT_CLASSIFICATION	6.568149081785077E-4	DESIGN
5	WITHOUT_CLASSIFICATION	0.999761187929035	WITHOUT_CLASSIFICATION	2.3881207096484926E-4	DESIGN
6	WITHOUT_CLASSIFICATION	0.9996977609612112	WITHOUT_CLASSIFICATION	3.0223903878882365E-4	DESIGN
7	WITHOUT_CLASSIFICATION	0.9994392759651928	WITHOUT_CLASSIFICATION	5.607240348072938E-4	DESIGN
Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9998588560845282	WITHOUT_CLASSIFICATION	1.411439154717436E-4	DESIGN
Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9986633408920844	WITHOUT_CLASSIFICATION	0.0013366591079156669	DESIGN
In case when the number of occurences is explicitly specified, we have to read up the remaining garbage after the '\0' to satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999948776270672	WITHOUT_CLASSIFICATION	5.122372932753989E-6	DESIGN
normal exit, this should be faster than a test at each iterations for string with more than about 40 char	WITHOUT_CLASSIFICATION	0.9978870042368063	WITHOUT_CLASSIFICATION	0.0021129957631937065	DESIGN
We encountered '\0' when were reading the buffer above, increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.99951470276264	WITHOUT_CLASSIFICATION	4.852972373600214E-4	DESIGN
MRI behavior: Contrary to what seems to be logical, when '' is given, MRI calculates the distance to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9933633774862735	WITHOUT_CLASSIFICATION	0.006636622513726471	DESIGN
Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9926905560694318	WITHOUT_CLASSIFICATION	0.007309443930568275	DESIGN
'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999532688518095	WITHOUT_CLASSIFICATION	4.673114819066988E-5	DESIGN
if the low bit is set set the high bit of the result	WITHOUT_CLASSIFICATION	0.9991650681876211	WITHOUT_CLASSIFICATION	8.349318123790798E-4	DESIGN
if the index is not a multiple of 8, we are not on a byte boundary shift the byte	WITHOUT_CLASSIFICATION	0.8406686840654042	WITHOUT_CLASSIFICATION	0.1593313159345958	DESIGN
if the length is not a multiple of 8 we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9861519727936074	WITHOUT_CLASSIFICATION	0.01384802720639258	DESIGN
if the length is not a multiple of 8 we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9861519727936074	WITHOUT_CLASSIFICATION	0.01384802720639258	DESIGN
do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.7841327501018609	WITHOUT_CLASSIFICATION	0.21586724989813902	DESIGN
we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9991087626216593	WITHOUT_CLASSIFICATION	8.912373783406817E-4	DESIGN
if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9830469137210371	WITHOUT_CLASSIFICATION	0.01695308627896283	DESIGN
this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9955417635456263	WITHOUT_CLASSIFICATION	0.0044582364543736975	DESIGN
we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9925259137691502	WITHOUT_CLASSIFICATION	0.007474086230849838	DESIGN
populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9991867442735164	WITHOUT_CLASSIFICATION	8.132557264835267E-4	DESIGN
are we recursing?	WITHOUT_CLASSIFICATION	0.9991685168071871	WITHOUT_CLASSIFICATION	8.314831928128865E-4	DESIGN
snip off ruby or jruby command from list of arguments leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999774169608425	WITHOUT_CLASSIFICATION	2.2583039157529704E-5	DESIGN
default PidGetter	WITHOUT_CLASSIFICATION	0.999829798517591	WITHOUT_CLASSIFICATION	1.702014824089593E-4	DESIGN
ignore and try windows version	WITHOUT_CLASSIFICATION	0.9990129607277667	WITHOUT_CLASSIFICATION	9.870392722332233E-4	DESIGN
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9982648775826432	WITHOUT_CLASSIFICATION	0.001735122417356833	DESIGN
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9982648775826432	WITHOUT_CLASSIFICATION	0.001735122417356833	DESIGN
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9982648775826432	WITHOUT_CLASSIFICATION	0.001735122417356833	DESIGN
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9982648775826432	WITHOUT_CLASSIFICATION	0.001735122417356833	DESIGN
try both	WITHOUT_CLASSIFICATION	0.9995911867439444	WITHOUT_CLASSIFICATION	4.088132560555479E-4	DESIGN
just unix	WITHOUT_CLASSIFICATION	0.9995882120024827	WITHOUT_CLASSIFICATION	4.117879975172779E-4	DESIGN
just windows	WITHOUT_CLASSIFICATION	0.9965439835309888	WITHOUT_CLASSIFICATION	0.0034560164690111863	DESIGN
neither	WITHOUT_CLASSIFICATION	0.999490688168426	WITHOUT_CLASSIFICATION	5.093118315739231E-4	DESIGN
CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.8186092397782813	DESIGN	0.18139076022171874	WITHOUT_CLASSIFICATION
single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999240509284915	WITHOUT_CLASSIFICATION	7.594907150855636E-5	DESIGN
direct invocation of the command	WITHOUT_CLASSIFICATION	0.999849482044092	WITHOUT_CLASSIFICATION	1.5051795590797425E-4	DESIGN
break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9997392931250486	WITHOUT_CLASSIFICATION	2.6070687495141084E-4	DESIGN
break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9997392931250486	WITHOUT_CLASSIFICATION	2.6070687495141084E-4	DESIGN
close process output See JRUBY-3405; hooking up to parent process stdin caused problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999981934502719	WITHOUT_CLASSIFICATION	1.8065497281760795E-6	DESIGN
ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9794785395486183	WITHOUT_CLASSIFICATION	0.020521460451381705	DESIGN
processes seem to have some peculiar locking sequences, so we need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.999854843532915	WITHOUT_CLASSIFICATION	1.4515646708494293E-4	DESIGN
popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9831241367593174	WITHOUT_CLASSIFICATION	0.016875863240682607	DESIGN
popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9831241367593174	WITHOUT_CLASSIFICATION	0.016875863240682607	DESIGN
popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9981124020912359	WITHOUT_CLASSIFICATION	0.0018875979087641275	DESIGN
no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9996164865271757	WITHOUT_CLASSIFICATION	3.835134728243427E-4	DESIGN
no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9996164865271757	WITHOUT_CLASSIFICATION	3.835134728243427E-4	DESIGN
execute command with sh -c this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9964301694204626	WITHOUT_CLASSIFICATION	0.0035698305795373838	DESIGN
We need to close the out, since some processes would just wait for the stream to be closed before they process its content, and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999999816234799	WITHOUT_CLASSIFICATION	1.837652004433349E-8	DESIGN
we only close out if it's the slave stream, to avoid closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.999997221001275	WITHOUT_CLASSIFICATION	2.778998725059922E-6	DESIGN
The assumption here is that the 'in' stream provides proper available() support. If available() always returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9971768509669089	WITHOUT_CLASSIFICATION	0.0028231490330910044	DESIGN
Force t3 to quit, just in case if it's stuck. Note: On some platforms, even interrupt might not have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9995480899342731	WITHOUT_CLASSIFICATION	4.5191006572683595E-4	DESIGN
Check for special shell characters [<>|] at the beginning and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999943338130657	WITHOUT_CLASSIFICATION	5.666186934287665E-6	DESIGN
Note: this method produces meaningful results only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9909444949840345	WITHOUT_CLASSIFICATION	0.009055505015965443	DESIGN
sequential	WITHOUT_CLASSIFICATION	0.9998435743528954	WITHOUT_CLASSIFICATION	1.564256471045051E-4	DESIGN
reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999903916618795	WITHOUT_CLASSIFICATION	9.608338120466172E-6	DESIGN
do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9994082587206293	WITHOUT_CLASSIFICATION	5.917412793706057E-4	DESIGN
if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9998915402630564	WITHOUT_CLASSIFICATION	1.0845973694360133E-4	DESIGN
SignalFacade	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.982733844634516	WITHOUT_CLASSIFICATION	0.01726615536548404	DESIGN
this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9928770323572814	WITHOUT_CLASSIFICATION	0.007122967642718558	DESIGN
basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9996789281789209	WITHOUT_CLASSIFICATION	3.210718210790384E-4	DESIGN
not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.6353746320505088	WITHOUT_CLASSIFICATION	0.3646253679494912	DESIGN
Args	WITHOUT_CLASSIFICATION	0.9994789480511617	WITHOUT_CLASSIFICATION	5.210519488383264E-4	DESIGN
static methods only	WITHOUT_CLASSIFICATION	0.9993280987375566	WITHOUT_CLASSIFICATION	6.71901262443425E-4	DESIGN
System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9990670634162234	WITHOUT_CLASSIFICATION	9.329365837765438E-4	DESIGN
MRI 1.8.6 behavior: null byte after '%' leads to "%" string. Null byte in other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9987176180083723	WITHOUT_CLASSIFICATION	0.001282381991627709	DESIGN
last index (+1) accessed by next() last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9996305600837974	WITHOUT_CLASSIFICATION	3.6943991620265205E-4	DESIGN
Special form of sprintf that returns a RubyString and handles tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9998248675738594	WITHOUT_CLASSIFICATION	1.7513242614064124E-4	DESIGN
Special form of sprintf that returns a RubyString and handles tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9998757939384154	WITHOUT_CLASSIFICATION	1.242060615845079E-4	DESIGN
MRI doesn't flag it as an error if width is given multiple times as a number (but it does for )	WITHOUT_CLASSIFICATION	0.990740226349257	WITHOUT_CLASSIFICATION	0.009259773650743089	DESIGN
let the width (if any), get processed in the next loop, so any leading 0 gets treated correctly	WITHOUT_CLASSIFICATION	0.999747175782723	WITHOUT_CLASSIFICATION	2.528242172770474E-4	DESIGN
MRI 1.8.5-p12 doesn't support 1-char strings, but YARV 0.4.1 does. I don't think it hurts to include this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9573074071335949	WITHOUT_CLASSIFICATION	0.04269259286640518	DESIGN
'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9991737620171606	WITHOUT_CLASSIFICATION	8.262379828393054E-4	DESIGN
'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999879287137722	WITHOUT_CLASSIFICATION	1.2071286227746203E-5	DESIGN
We depart here from strict adherence to MRI code, as MRI uses C-sprintf, in part, to format numeric output, while we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.6066849357225275	WITHOUT_CLASSIFICATION	0.3933150642774724	DESIGN
skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9993766231195574	WITHOUT_CLASSIFICATION	6.233768804424918E-4	DESIGN
..	WITHOUT_CLASSIFICATION	0.9975462977410356	WITHOUT_CLASSIFICATION	0.002453702258964291	DESIGN
the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.999959572269803	WITHOUT_CLASSIFICATION	4.042773019692611E-5	DESIGN
FIXME: what is correct 'recv' argument? (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9899450571461511	DESIGN	0.010054942853848949	WITHOUT_CLASSIFICATION
gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9921880652785587	WITHOUT_CLASSIFICATION	0.007811934721441221	DESIGN
OK, we now have the significand in digits[0...nDigits] and the exponent in exponent. We're ready to format.	WITHOUT_CLASSIFICATION	0.999312525082394	WITHOUT_CLASSIFICATION	6.874749176060735E-4	DESIGN
intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.945804822039678	WITHOUT_CLASSIFICATION	0.05419517796032196	DESIGN
intDigits = 1;	WITHOUT_CLASSIFICATION	0.9998691618401155	WITHOUT_CLASSIFICATION	1.30838159884419E-4	DESIGN
System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9990670634162234	WITHOUT_CLASSIFICATION	9.329365837765438E-4	DESIGN
System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9990989611980418	WITHOUT_CLASSIFICATION	9.010388019582253E-4	DESIGN
intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.945804822039678	WITHOUT_CLASSIFICATION	0.05419517796032196	DESIGN
intDigits = 1;	WITHOUT_CLASSIFICATION	0.9998691618401155	WITHOUT_CLASSIFICATION	1.30838159884419E-4	DESIGN
precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9998223346267199	WITHOUT_CLASSIFICATION	1.776653732801552E-4	DESIGN
deal with length/width	WITHOUT_CLASSIFICATION	0.9972131063304639	WITHOUT_CLASSIFICATION	0.0027868936695360394	DESIGN
deal with length/width	WITHOUT_CLASSIFICATION	0.9972131063304639	WITHOUT_CLASSIFICATION	0.0027868936695360394	DESIGN
first digit is always printed	WITHOUT_CLASSIFICATION	0.9991851728266185	WITHOUT_CLASSIFICATION	8.148271733815106E-4	DESIGN
MRI behavior: Be default, 2 digits in the exponent. Use 3 digits only when necessary. See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9981817430640952	WITHOUT_CLASSIFICATION	0.0018182569359047624	DESIGN
5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999565523918126	WITHOUT_CLASSIFICATION	4.344760818741234E-5	DESIGN
4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9998804633253666	WITHOUT_CLASSIFICATION	1.1953667463333149E-4	DESIGN
in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9900191952103312	WITHOUT_CLASSIFICATION	0.009980804789668797	DESIGN
MRI behavior: In this mode trailing zeroes are removed: 1.500E+05 -> 1.5E+05	WITHOUT_CLASSIFICATION	0.991730319467774	WITHOUT_CLASSIFICATION	0.008269680532226067	DESIGN
'.' is printed	WITHOUT_CLASSIFICATION	0.9994451272858458	WITHOUT_CLASSIFICATION	5.54872714154253E-4	DESIGN
all precision numebers printed	WITHOUT_CLASSIFICATION	0.9995017653442438	WITHOUT_CLASSIFICATION	4.982346557561591E-4	DESIGN
now some data...	WITHOUT_CLASSIFICATION	0.9995191188203181	WITHOUT_CLASSIFICATION	4.8088117968181885E-4	DESIGN
'.'	WITHOUT_CLASSIFICATION	0.9995321525830275	WITHOUT_CLASSIFICATION	4.6784741697247437E-4	DESIGN
decimal form, like (but not just like!) 'f'	WITHOUT_CLASSIFICATION	0.9996242272323307	WITHOUT_CLASSIFICATION	3.75772767669206E-4	DESIGN
digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999149412128212	WITHOUT_CLASSIFICATION	8.505878717879742E-5	DESIGN
will have a trailing '.' g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9998132654619643	WITHOUT_CLASSIFICATION	1.867345380357404E-4	DESIGN
s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9998756821000832	WITHOUT_CLASSIFICATION	1.2431789991688557E-4	DESIGN
s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9998756821000832	WITHOUT_CLASSIFICATION	1.2431789991688557E-4	DESIGN
always need at least a 0	WITHOUT_CLASSIFICATION	0.9919416717827372	WITHOUT_CLASSIFICATION	0.008058328217262873	DESIGN
always need at least a 0	WITHOUT_CLASSIFICATION	0.9919416717827372	WITHOUT_CLASSIFICATION	0.008058328217262873	DESIGN
digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9998316383571367	WITHOUT_CLASSIFICATION	1.683616428631574E-4	DESIGN
(1|intlen).prec	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
(1|intlen)	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9985066125228684	WITHOUT_CLASSIFICATION	0.0014933874771315477	DESIGN
fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9995377124884428	WITHOUT_CLASSIFICATION	4.6228751155720456E-4	DESIGN
System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9990670634162234	WITHOUT_CLASSIFICATION	9.329365837765438E-4	DESIGN
5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999565523918126	WITHOUT_CLASSIFICATION	4.344760818741234E-5	DESIGN
4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9998804633253666	WITHOUT_CLASSIFICATION	1.1953667463333149E-4	DESIGN
now some data...	WITHOUT_CLASSIFICATION	0.9995191188203181	WITHOUT_CLASSIFICATION	4.8088117968181885E-4	DESIGN
'.'	WITHOUT_CLASSIFICATION	0.9995321525830275	WITHOUT_CLASSIFICATION	4.6784741697247437E-4	DESIGN
equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9998049125744294	WITHOUT_CLASSIFICATION	1.950874255706266E-4	DESIGN
'.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999253881995516	WITHOUT_CLASSIFICATION	7.461180044849328E-5	DESIGN
\v	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
dangling '%' char	WITHOUT_CLASSIFICATION	0.9992807588597262	WITHOUT_CLASSIFICATION	7.192411402737411E-4	DESIGN
main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.999965274674733	WITHOUT_CLASSIFICATION	3.4725325267036054E-5	DESIGN
debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9998818159052961	WITHOUT_CLASSIFICATION	1.1818409470385663E-4	DESIGN
MRI rounds up on nnn5nnn, but not nnn5 -- except for when they do	WITHOUT_CLASSIFICATION	0.9910831172908263	WITHOUT_CLASSIFICATION	0.008916882709173676	DESIGN
"%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9995364547495217	WITHOUT_CLASSIFICATION	4.6354525047825716E-4	DESIGN
limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9998962301677893	WITHOUT_CLASSIFICATION	1.0376983221076311E-4	DESIGN
negative values	WITHOUT_CLASSIFICATION	0.9955786274659967	WITHOUT_CLASSIFICATION	0.004421372534003378	DESIGN
calculation for negatives when %u specified for values >= Integer.MIN_VALUE 2, MRI uses (the equivalent of) long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val for smaller values, BigInteger math is required to conform to MRI's result.	WITHOUT_CLASSIFICATION	0.9999922014015379	WITHOUT_CLASSIFICATION	7.798598462184942E-6	DESIGN
relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999727039745445	WITHOUT_CLASSIFICATION	2.7296025455397265E-5	DESIGN
no such luck...	WITHOUT_CLASSIFICATION	0.9993604718914048	WITHOUT_CLASSIFICATION	6.39528108595342E-4	DESIGN
ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9907096594513874	WITHOUT_CLASSIFICATION	0.009290340548612547	DESIGN
go through negated powers of 32 until we find one small enough	WITHOUT_CLASSIFICATION	0.9998119211517206	WITHOUT_CLASSIFICATION	1.8807884827934086E-4	DESIGN
add to the corresponding positive power of 32 for the result. meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.999471048283326	WITHOUT_CLASSIFICATION	5.289517166739936E-4	DESIGN
constant vector a	WITHOUT_CLASSIFICATION	0.9978906094074175	WITHOUT_CLASSIFICATION	0.002109390592582591	DESIGN
most significant w-r bits	WITHOUT_CLASSIFICATION	0.9997703874385248	WITHOUT_CLASSIFICATION	2.296125614751717E-4	DESIGN
least significant r bits	WITHOUT_CLASSIFICATION	0.9996727202596025	WITHOUT_CLASSIFICATION	3.272797403975193E-4	DESIGN
state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9988211991512429	WITHOUT_CLASSIFICATION	0.0011788008487571258	DESIGN
state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9988211991512429	WITHOUT_CLASSIFICATION	0.0011788008487571258	DESIGN
state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9988211991512429	WITHOUT_CLASSIFICATION	0.0011788008487571258	DESIGN
MSB is 1; assuring non-zero initial array	WITHOUT_CLASSIFICATION	0.9998161964484491	WITHOUT_CLASSIFICATION	1.8380355155097272E-4	DESIGN
Tempering	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
MRI behavior: Week values are monotonous. So, weeks that effectively belong to previous year, will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999844953445548	WITHOUT_CLASSIFICATION	1.5504655445223442E-5	DESIGN
System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9991492661920949	WITHOUT_CLASSIFICATION	8.507338079051899E-4	DESIGN
System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9991492661920949	WITHOUT_CLASSIFICATION	8.507338079051899E-4	DESIGN
\v	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9992896603773488	WITHOUT_CLASSIFICATION	7.103396226513182E-4	DESIGN
System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9990670634162234	WITHOUT_CLASSIFICATION	9.329365837765438E-4	DESIGN
System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9990465725044023	WITHOUT_CLASSIFICATION	9.534274955976392E-4	DESIGN
System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9990465725044023	WITHOUT_CLASSIFICATION	9.534274955976392E-4	DESIGN
System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9990670634162234	WITHOUT_CLASSIFICATION	9.329365837765438E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995210829193439	WITHOUT_CLASSIFICATION	4.7891708065602974E-4	DESIGN
System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9990670634162234	WITHOUT_CLASSIFICATION	9.329365837765438E-4	DESIGN
no number	WITHOUT_CLASSIFICATION	0.9991577719510416	WITHOUT_CLASSIFICATION	8.42228048958281E-4	DESIGN
trailing garbage	WITHOUT_CLASSIFICATION	0.9996371578002468	WITHOUT_CLASSIFICATION	3.6284219975327793E-4	DESIGN
System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9992406057041591	WITHOUT_CLASSIFICATION	7.593942958410337E-4	DESIGN
it was not found at all!	WITHOUT_CLASSIFICATION	0.9966897660335193	WITHOUT_CLASSIFICATION	0.0033102339664805957	DESIGN
can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9935296003173456	WITHOUT_CLASSIFICATION	0.006470399682654339	DESIGN
we reached the end of a list	WITHOUT_CLASSIFICATION	0.9998073158614106	WITHOUT_CLASSIFICATION	1.9268413858935255E-4	DESIGN
goto next bucket	WITHOUT_CLASSIFICATION	0.9987672220203103	WITHOUT_CLASSIFICATION	0.0012327779796896554	DESIGN
we reached the end	WITHOUT_CLASSIFICATION	0.9998606473818774	WITHOUT_CLASSIFICATION	1.393526181226211E-4	DESIGN
entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9983742125406161	WITHOUT_CLASSIFICATION	0.001625787459383985	DESIGN
states	WITHOUT_CLASSIFICATION	0.9994861574478191	WITHOUT_CLASSIFICATION	5.138425521809879E-4	DESIGN
remove leading whitespace (includes _ for lax) get sign, if any	WITHOUT_CLASSIFICATION	0.9998784634805145	WITHOUT_CLASSIFICATION	1.2153651948562541E-4	DESIGN
optimistic pass - calculate value as digits are processed digits - lax rules decimal digits - lax rules exponent sign/digits - lax rules digits - strict rules decimal digits - strict rules exponent sign/digits - strict rules complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999985993838493	WITHOUT_CLASSIFICATION	1.4006161507230162E-6	DESIGN
fields used for direct (optimistic) calculation number of significant digits, updated as parsed zeroes that may go to significand or exponent offset of decimal pt from start (-1 -> no decimal) significand, updated as parsed exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9993089421658319	WITHOUT_CLASSIFICATION	6.910578341681643E-4	DESIGN
drop through for sign	WITHOUT_CLASSIFICATION	0.997134565753635	WITHOUT_CLASSIFICATION	0.0028654342463649988	DESIGN
switch will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9877892739316543	WITHOUT_CLASSIFICATION	0.012210726068345643	DESIGN
drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9993659853273902	WITHOUT_CLASSIFICATION	6.340146726098643E-4	DESIGN
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999912121307283	WITHOUT_CLASSIFICATION	8.787869271756287E-6	DESIGN
ignore leading zeroes switch	WITHOUT_CLASSIFICATION	0.9996240332910196	WITHOUT_CLASSIFICATION	3.759667089803227E-4	DESIGN
no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9998919819999876	WITHOUT_CLASSIFICATION	1.0801800001245425E-4	DESIGN
ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9995718799124067	WITHOUT_CLASSIFICATION	4.281200875932891E-4	DESIGN
just save a count of zeroes for now; if no digit ends up following them, they'll be applied to the exponent rather than the significand (and our max length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9995404889517265	WITHOUT_CLASSIFICATION	4.595110482734636E-4	DESIGN
ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9996905581782671	WITHOUT_CLASSIFICATION	3.094418217329051E-4	DESIGN
else catch oversize below	WITHOUT_CLASSIFICATION	0.9999193207305811	WITHOUT_CLASSIFICATION	8.067926941886236E-5	DESIGN
else catch oversize below	WITHOUT_CLASSIFICATION	0.9999193207305811	WITHOUT_CLASSIFICATION	8.067926941886236E-5	DESIGN
oh, well, it was worth a try. go let Double/FloatingDecimal handle it	WITHOUT_CLASSIFICATION	0.997712989093018	WITHOUT_CLASSIFICATION	0.0022870109069820658	DESIGN
ignore switch	WITHOUT_CLASSIFICATION	0.9997678518441373	WITHOUT_CLASSIFICATION	2.321481558626337E-4	DESIGN
ignore switch	WITHOUT_CLASSIFICATION	0.9997678518441373	WITHOUT_CLASSIFICATION	2.321481558626337E-4	DESIGN
end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9994643530960069	WITHOUT_CLASSIFICATION	5.356469039931031E-4	DESIGN
end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9994643530960069	WITHOUT_CLASSIFICATION	5.356469039931031E-4	DESIGN
switch for	WITHOUT_CLASSIFICATION	0.999623805767733	WITHOUT_CLASSIFICATION	3.7619423226701947E-4	DESIGN
first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9998067846154765	WITHOUT_CLASSIFICATION	1.9321538452353625E-4	DESIGN
no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9996482058871718	WITHOUT_CLASSIFICATION	3.5179411282809973E-4	DESIGN
switch if	WITHOUT_CLASSIFICATION	0.9998443664970305	WITHOUT_CLASSIFICATION	1.5563350296960216E-4	DESIGN
difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9987759687575356	WITHOUT_CLASSIFICATION	0.0012240312424643858	DESIGN
block	WITHOUT_CLASSIFICATION	0.9995600452782349	WITHOUT_CLASSIFICATION	4.3995472176503917E-4	DESIGN
block	WITHOUT_CLASSIFICATION	0.9995600452782349	WITHOUT_CLASSIFICATION	4.3995472176503917E-4	DESIGN
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999912121307283	WITHOUT_CLASSIFICATION	8.787869271756287E-6	DESIGN
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999912121307283	WITHOUT_CLASSIFICATION	8.787869271756287E-6	DESIGN
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999912121307283	WITHOUT_CLASSIFICATION	8.787869271756287E-6	DESIGN
ignore leading zeroes switch	WITHOUT_CLASSIFICATION	0.9996240332910196	WITHOUT_CLASSIFICATION	3.759667089803227E-4	DESIGN
else catch oversize below	WITHOUT_CLASSIFICATION	0.9999193207305811	WITHOUT_CLASSIFICATION	8.067926941886236E-5	DESIGN
else catch oversize below	WITHOUT_CLASSIFICATION	0.9999193207305811	WITHOUT_CLASSIFICATION	8.067926941886236E-5	DESIGN
else catch oversize below	WITHOUT_CLASSIFICATION	0.9999193207305811	WITHOUT_CLASSIFICATION	8.067926941886236E-5	DESIGN
switch for	WITHOUT_CLASSIFICATION	0.999623805767733	WITHOUT_CLASSIFICATION	3.7619423226701947E-4	DESIGN
switch for	WITHOUT_CLASSIFICATION	0.999623805767733	WITHOUT_CLASSIFICATION	3.7619423226701947E-4	DESIGN
switch for	WITHOUT_CLASSIFICATION	0.999623805767733	WITHOUT_CLASSIFICATION	3.7619423226701947E-4	DESIGN
switch if	WITHOUT_CLASSIFICATION	0.9998443664970305	WITHOUT_CLASSIFICATION	1.5563350296960216E-4	DESIGN
switch if	WITHOUT_CLASSIFICATION	0.9998443664970305	WITHOUT_CLASSIFICATION	1.5563350296960216E-4	DESIGN
lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9961533723167973	WITHOUT_CLASSIFICATION	0.00384662768320275	DESIGN
switch for no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9994578255854893	WITHOUT_CLASSIFICATION	5.421744145107545E-4	DESIGN
switch for no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9996222280131996	WITHOUT_CLASSIFICATION	3.7777198680045634E-4	DESIGN
TODO: it's not clear to me why, in FloatingDecimal, the "slop" calculation performed above for positive exponents isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9999987966859966	DESIGN	1.203314003439816E-6	WITHOUT_CLASSIFICATION
no digits, error	WITHOUT_CLASSIFICATION	0.9994886048846051	WITHOUT_CLASSIFICATION	5.113951153948512E-4	DESIGN
too big for us	WITHOUT_CLASSIFICATION	0.999591305026668	WITHOUT_CLASSIFICATION	4.0869497333196296E-4	DESIGN
too big for us	WITHOUT_CLASSIFICATION	0.999591305026668	WITHOUT_CLASSIFICATION	4.0869497333196296E-4	DESIGN
must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9917417853676648	WITHOUT_CLASSIFICATION	0.008258214632335212	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995210829193439	WITHOUT_CLASSIFICATION	4.7891708065602974E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995210829193439	WITHOUT_CLASSIFICATION	4.7891708065602974E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995210829193439	WITHOUT_CLASSIFICATION	4.7891708065602974E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995210829193439	WITHOUT_CLASSIFICATION	4.7891708065602974E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995210829193439	WITHOUT_CLASSIFICATION	4.7891708065602974E-4	DESIGN
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.99998404444033	WITHOUT_CLASSIFICATION	1.5955559670043612E-5	DESIGN
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.99998404444033	WITHOUT_CLASSIFICATION	1.5955559670043612E-5	DESIGN
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.99998404444033	WITHOUT_CLASSIFICATION	1.5955559670043612E-5	DESIGN
first char must be digit	WITHOUT_CLASSIFICATION	0.9996777619373983	WITHOUT_CLASSIFICATION	3.2223806260174397E-4	DESIGN
no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9995864425679932	WITHOUT_CLASSIFICATION	4.135574320066703E-4	DESIGN
ignore leading zeroes switch	WITHOUT_CLASSIFICATION	0.9996240332910196	WITHOUT_CLASSIFICATION	3.759667089803227E-4	DESIGN
switch for	WITHOUT_CLASSIFICATION	0.999623805767733	WITHOUT_CLASSIFICATION	3.7619423226701947E-4	DESIGN
switch for	WITHOUT_CLASSIFICATION	0.999623805767733	WITHOUT_CLASSIFICATION	3.7619423226701947E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995210829193439	WITHOUT_CLASSIFICATION	4.7891708065602974E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995210829193439	WITHOUT_CLASSIFICATION	4.7891708065602974E-4	DESIGN
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.99998404444033	WITHOUT_CLASSIFICATION	1.5955559670043612E-5	DESIGN
must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9917417853676648	WITHOUT_CLASSIFICATION	0.008258214632335212	DESIGN
Copy out any buffered bytes	WITHOUT_CLASSIFICATION	0.9997562031120213	WITHOUT_CLASSIFICATION	2.4379688797865971E-4	DESIGN
switch while	WITHOUT_CLASSIFICATION	0.9995831565444129	WITHOUT_CLASSIFICATION	4.168434555870674E-4	DESIGN
All the positive powers of 10 that can be represented exactly in double/float. (From sun.misc.FloatingDecimal.java)	WITHOUT_CLASSIFICATION	0.9999569231377579	WITHOUT_CLASSIFICATION	4.30768622421496E-5	DESIGN
Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9855914504306398	WITHOUT_CLASSIFICATION	0.01440854956936014	DESIGN
rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9988157287080784	WITHOUT_CLASSIFICATION	0.0011842712919215147	DESIGN
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9981460677816589	WITHOUT_CLASSIFICATION	0.0018539322183410013	DESIGN
arg cannot be negative	WITHOUT_CLASSIFICATION	0.9954210000636059	WITHOUT_CLASSIFICATION	0.004578999936394112	DESIGN
NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9988157287080784	WITHOUT_CLASSIFICATION	0.0011842712919215147	DESIGN
Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.6376326609814116	DESIGN	0.3623673390185884	WITHOUT_CLASSIFICATION
could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9395950572969188	WITHOUT_CLASSIFICATION	0.06040494270308112	DESIGN
strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.999803821725894	WITHOUT_CLASSIFICATION	1.9617827410600968E-4	DESIGN
Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9982938104021722	WITHOUT_CLASSIFICATION	0.0017061895978276484	DESIGN
Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9992080053866524	WITHOUT_CLASSIFICATION	7.919946133475866E-4	DESIGN
Creates the new entry.	WITHOUT_CLASSIFICATION	0.9996168534651464	WITHOUT_CLASSIFICATION	3.831465348535778E-4	DESIGN
next entry to return current slot current entry	WITHOUT_CLASSIFICATION	0.9995566727542129	WITHOUT_CLASSIFICATION	4.433272457870101E-4	DESIGN
advance to first entry	WITHOUT_CLASSIFICATION	0.9991560079956896	WITHOUT_CLASSIFICATION	8.439920043103426E-4	DESIGN
The reason why we need the stream is to be able to invoke available() on it. STDIN in Java is non-interruptible, non-selectable, and attempt to read on such stream might lead to thread being blocked without any way to unblock it. That's where available() comes it, so at least we could check whether anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.7945728246929223	WITHOUT_CLASSIFICATION	0.20542717530707774	DESIGN
package-protected	WITHOUT_CLASSIFICATION	0.9996659645120471	WITHOUT_CLASSIFICATION	3.340354879528872E-4	DESIGN
raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9998231303128834	WITHOUT_CLASSIFICATION	1.7686968711674758E-4	DESIGN
We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9998561339498386	WITHOUT_CLASSIFICATION	1.4386605016136202E-4	DESIGN
if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999146874864946	WITHOUT_CLASSIFICATION	8.531251350544365E-5	DESIGN
if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999253687357615	WITHOUT_CLASSIFICATION	7.463126423838215E-5	DESIGN
otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999983647856674	WITHOUT_CLASSIFICATION	1.6352143326112231E-6	DESIGN
r/w buffer are we reading or writing?	WITHOUT_CLASSIFICATION	0.9959820778768169	WITHOUT_CLASSIFICATION	0.004017922123183112	DESIGN
this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.6861427506018611	WITHOUT_CLASSIFICATION	0.31385724939813897	DESIGN
unread back	WITHOUT_CLASSIFICATION	0.9993591390007223	WITHOUT_CLASSIFICATION	6.408609992778404E-4	DESIGN
iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9997302471771732	WITHOUT_CLASSIFICATION	2.6975282282681477E-4	DESIGN
terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.999339113341946	WITHOUT_CLASSIFICATION	6.608866580539987E-4	DESIGN
no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.998351750446479	WITHOUT_CLASSIFICATION	0.001648249553520965	DESIGN
found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999995354061846	WITHOUT_CLASSIFICATION	4.645938154473878E-7	DESIGN
Check file size - special files in /proc have zero size and need to be handled by the generic read path.	WITHOUT_CLASSIFICATION	0.9999863484961085	WITHOUT_CLASSIFICATION	1.3651503891448802E-5	DESIGN
Copy any buffered data (including ungetc byte)	WITHOUT_CLASSIFICATION	0.9998672014752287	WITHOUT_CLASSIFICATION	1.327985247712877E-4	DESIGN
Now read unbuffered directly from the file	WITHOUT_CLASSIFICATION	0.9999545228609127	WITHOUT_CLASSIFICATION	4.547713908730598E-5	DESIGN
Copy out any buffered bytes	WITHOUT_CLASSIFICATION	0.9997562031120213	WITHOUT_CLASSIFICATION	2.4379688797865971E-4	DESIGN
Need to clamp source (buffer) size to avoid overrun	WITHOUT_CLASSIFICATION	0.9984508588901868	WITHOUT_CLASSIFICATION	0.001549141109813186	DESIGN
not closing from finalize	WITHOUT_CLASSIFICATION	0.9967738368791437	WITHOUT_CLASSIFICATION	0.0032261631208563594	DESIGN
clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999707655845755	WITHOUT_CLASSIFICATION	2.9234415424417124E-5	DESIGN
silence	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
silence	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
Don't bother	WITHOUT_CLASSIFICATION	0.9998712147322834	WITHOUT_CLASSIFICATION	1.2878526771657598E-4	DESIGN
Don't bother	WITHOUT_CLASSIFICATION	0.9998712147322834	WITHOUT_CLASSIFICATION	1.2878526771657598E-4	DESIGN
For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999641436830409	WITHOUT_CLASSIFICATION	3.585631695915829E-5	DESIGN
Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9995850136072554	WITHOUT_CLASSIFICATION	4.149863927447272E-4	DESIGN
Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9996570632420831	WITHOUT_CLASSIFICATION	3.429367579168582E-4	DESIGN
for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9995169343136755	WITHOUT_CLASSIFICATION	4.8306568632456334E-4	DESIGN
libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9991091195620099	WITHOUT_CLASSIFICATION	8.908804379902046E-4	DESIGN
we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9980908721375475	WITHOUT_CLASSIFICATION	0.0019091278624524183	DESIGN
128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9990052618431446	WITHOUT_CLASSIFICATION	9.947381568554013E-4	DESIGN
limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations	WITHOUT_CLASSIFICATION	0.9995020146241301	WITHOUT_CLASSIFICATION	4.979853758699798E-4	DESIGN
append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9819076264453585	WITHOUT_CLASSIFICATION	0.01809237355464156	DESIGN
Copy what is in the buffer, if there is some buffered data	WITHOUT_CLASSIFICATION	0.9998150119295419	WITHOUT_CLASSIFICATION	1.8498807045811577E-4	DESIGN
Avoid double-copying for reads that are larger than the buffer size	WITHOUT_CLASSIFICATION	0.9998278180491236	WITHOUT_CLASSIFICATION	1.721819508764926E-4	DESIGN
Complete the request by filling the read buffer first	WITHOUT_CLASSIFICATION	0.999982193660421	WITHOUT_CLASSIFICATION	1.7806339579038288E-5	DESIGN
Complete the request by filling the read buffer first	WITHOUT_CLASSIFICATION	0.999982193660421	WITHOUT_CLASSIFICATION	1.7806339579038288E-5	DESIGN
Avoid double-copying for reads that are larger than the buffer size, or the destination is a direct buffer.	WITHOUT_CLASSIFICATION	0.9999156482165175	WITHOUT_CLASSIFICATION	8.435178348248273E-5	DESIGN
We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating a huge temporary native buffer, when doing reads into a heap buffer If the dst buffer is direct, then no need to limit.	WITHOUT_CLASSIFICATION	0.9941704829663334	WITHOUT_CLASSIFICATION	0.005829517033666712	DESIGN
Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9988625930291428	WITHOUT_CLASSIFICATION	0.0011374069708572725	DESIGN
Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9988625930291428	WITHOUT_CLASSIFICATION	0.0011374069708572725	DESIGN
Doesn't fit in buffer. Write immediately. ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999962881337104	WITHOUT_CLASSIFICATION	3.7118662895949458E-6	DESIGN
truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9995496460023342	WITHOUT_CLASSIFICATION	4.503539976657664E-4	DESIGN
how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9914882221994951	WITHOUT_CLASSIFICATION	0.008511777800504874	DESIGN
if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9998262880145843	WITHOUT_CLASSIFICATION	1.7371198541572241E-4	DESIGN
close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999945078924747	WITHOUT_CLASSIFICATION	5.492107525329724E-6	DESIGN
putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9668198764806933	WITHOUT_CLASSIFICATION	0.033180123519306666	DESIGN
save the ungot	WITHOUT_CLASSIFICATION	0.9996732132520607	WITHOUT_CLASSIFICATION	3.2678674793921964E-4	DESIGN
otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9993985167272645	WITHOUT_CLASSIFICATION	6.014832727354892E-4	DESIGN
ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9973287445664907	WITHOUT_CLASSIFICATION	0.0026712554335093556	DESIGN
flush first	WITHOUT_CLASSIFICATION	0.9997087000825414	WITHOUT_CLASSIFICATION	2.912999174586747E-4	DESIGN
Wake up any channels that became unblocked	WITHOUT_CLASSIFICATION	0.9996728234589181	WITHOUT_CLASSIFICATION	3.271765410819454E-4	DESIGN
Register any new blocking I/O requests	WITHOUT_CLASSIFICATION	0.9993563998944901	WITHOUT_CLASSIFICATION	6.436001055097973E-4	DESIGN
Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999973053936508	WITHOUT_CLASSIFICATION	2.6946063491949083E-6	DESIGN
Wait for I/O on any channel	WITHOUT_CLASSIFICATION	0.9997349452485821	WITHOUT_CLASSIFICATION	2.650547514179568E-4	DESIGN
Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999698633251366	WITHOUT_CLASSIFICATION	3.0136674863361467E-5	DESIGN
Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9982387439310065	WITHOUT_CLASSIFICATION	0.0017612560689934038	DESIGN
seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9967556464614015	WITHOUT_CLASSIFICATION	0.003244353538598541	DESIGN
seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9992543488132763	WITHOUT_CLASSIFICATION	7.456511867237476E-4	DESIGN
result = eval("arr = Array::['c', 200]; p arr"); assertEquals("[\"c\", 200]", result); result = eval("arr = Array.['d', 200]; p arr"); assertEquals("[\"d\", 200]", result);	WITHOUT_CLASSIFICATION	0.9999336295242386	WITHOUT_CLASSIFICATION	6.637047576145377E-5	DESIGN
MRI ignores seek errors, presumably for unseekable files like serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9985362657722548	WITHOUT_CLASSIFICATION	0.00146373422774513	DESIGN
TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.7608246915819826	DESIGN	0.23917530841801726	WITHOUT_CLASSIFICATION
make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9993894498560095	WITHOUT_CLASSIFICATION	6.105501439905059E-4	DESIGN
make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9996354673879165	WITHOUT_CLASSIFICATION	3.645326120835039E-4	DESIGN
first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999445556984121	WITHOUT_CLASSIFICATION	5.544430158794333E-5	DESIGN
then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9995533348841916	WITHOUT_CLASSIFICATION	4.466651158083593E-4	DESIGN
if we get here, the class and field exist; construct our Unsafe impl that calls it directly	WITHOUT_CLASSIFICATION	0.9992160250068587	WITHOUT_CLASSIFICATION	7.839749931414027E-4	DESIGN
else leave it null	WITHOUT_CLASSIFICATION	0.9998872069546124	WITHOUT_CLASSIFICATION	1.1279304538748338E-4	DESIGN
TypeMatcher	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
This is now needed, since module Java isn't in by default	WITHOUT_CLASSIFICATION	0.9993210547601376	WITHOUT_CLASSIFICATION	6.789452398623948E-4	DESIGN
Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9998285687139604	WITHOUT_CLASSIFICATION	1.7143128603953594E-4	DESIGN
Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999975550962336	WITHOUT_CLASSIFICATION	2.4449037664220426E-6	DESIGN
Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999985687224968	WITHOUT_CLASSIFICATION	1.4312775032369458E-6	DESIGN
Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.999842720009403	WITHOUT_CLASSIFICATION	1.5727999059703045E-4	DESIGN
Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9995556277225728	WITHOUT_CLASSIFICATION	4.4437227742732304E-4	DESIGN
Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9995556277225728	WITHOUT_CLASSIFICATION	4.4437227742732304E-4	DESIGN
Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9982588878832368	WITHOUT_CLASSIFICATION	0.0017411121167632854	DESIGN
If we're running from within an IDE we may not have the .rb files in our classpath. Try to find them in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9998021190046998	WITHOUT_CLASSIFICATION	1.9788099530007122E-4	DESIGN
assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.999324460706102	WITHOUT_CLASSIFICATION	6.755392938979254E-4	DESIGN
Init	WITHOUT_CLASSIFICATION	0.9995090670682034	WITHOUT_CLASSIFICATION	4.909329317965668E-4	DESIGN
Block	WITHOUT_CLASSIFICATION	0.9994638081002407	WITHOUT_CLASSIFICATION	5.361918997592831E-4	DESIGN
Copy constructor	WITHOUT_CLASSIFICATION	0.9991670084309376	WITHOUT_CLASSIFICATION	8.329915690623562E-4	DESIGN
presumably this require should fail	WITHOUT_CLASSIFICATION	0.9806596626751936	WITHOUT_CLASSIFICATION	0.01934033732480638	DESIGN
JRUBY-646 presumably this require should fail	WITHOUT_CLASSIFICATION	0.9806596626751936	WITHOUT_CLASSIFICATION	0.01934033732480638	DESIGN
Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999684102236821	WITHOUT_CLASSIFICATION	3.158977631782998E-5	DESIGN
ok	WITHOUT_CLASSIFICATION	0.9983865206761394	WITHOUT_CLASSIFICATION	0.0016134793238604733	DESIGN
Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9990218246539926	DESIGN	9.781753460073996E-4	WITHOUT_CLASSIFICATION
load should work several times in a row	WITHOUT_CLASSIFICATION	0.9779190172764994	WITHOUT_CLASSIFICATION	0.022080982723500654	DESIGN
reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9996160684995827	WITHOUT_CLASSIFICATION	3.8393150041730005E-4	DESIGN
call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9996618749577404	WITHOUT_CLASSIFICATION	3.381250422596297E-4	DESIGN
Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999844984245408	WITHOUT_CLASSIFICATION	1.550157545910927E-5	DESIGN
wait for the go signal	WITHOUT_CLASSIFICATION	0.9998773280516055	WITHOUT_CLASSIFICATION	1.226719483945765E-4	DESIGN
run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9964609770968421	WITHOUT_CLASSIFICATION	0.0035390229031578733	DESIGN
wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9998897084669135	WITHOUT_CLASSIFICATION	1.1029153308644328E-4	DESIGN
notify thread to proceed	WITHOUT_CLASSIFICATION	0.9985934965275691	WITHOUT_CLASSIFICATION	0.0014065034724308376	DESIGN
wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999791458290089	WITHOUT_CLASSIFICATION	2.085417099109368E-5	DESIGN
we do preand post load outside the "body" versions to pre-prepare and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9831547055820631	WITHOUT_CLASSIFICATION	0.01684529441793698	DESIGN
out of byte range there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999902420562223	WITHOUT_CLASSIFICATION	9.757943777665727E-6	DESIGN
MRI behavior: raise ArgumentError for 'unknown command' before checking number of args.	WITHOUT_CLASSIFICATION	0.9318751017807646	WITHOUT_CLASSIFICATION	0.06812489821923547	DESIGN
if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999316234274311	WITHOUT_CLASSIFICATION	6.837657256879705E-5	DESIGN
there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9744191470554935	WITHOUT_CLASSIFICATION	0.025580852944506592	DESIGN
construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9944289340908072	WITHOUT_CLASSIFICATION	0.0055710659091928435	DESIGN
Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9998000887679748	WITHOUT_CLASSIFICATION	1.9991123202519847E-4	DESIGN
assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9988157287080784	WITHOUT_CLASSIFICATION	0.0011842712919215147	DESIGN
void methods should work	WITHOUT_CLASSIFICATION	0.9729146226342349	WITHOUT_CLASSIFICATION	0.027085377365765186	DESIGN
methods with required = 4 or higher should bind and be callable using reflection JRUBY-3649	WITHOUT_CLASSIFICATION	0.9988339385591334	WITHOUT_CLASSIFICATION	0.001166061440866689	DESIGN
Since we don't have any other error reporting mechanism, we add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999988776090618	WITHOUT_CLASSIFICATION	1.1223909382277123E-6	DESIGN
Ensure we have a new interpreter for each test. Previous we were using the same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999997904328396	WITHOUT_CLASSIFICATION	2.095671604482163E-7	DESIGN
Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9996636027053036	WITHOUT_CLASSIFICATION	3.363972946963615E-4	DESIGN
assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9992896603773488	WITHOUT_CLASSIFICATION	7.103396226513182E-4	DESIGN
int n = 10;	WITHOUT_CLASSIFICATION	0.9999387541789078	WITHOUT_CLASSIFICATION	6.124582109231408E-5	DESIGN
there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9945009433332169	WITHOUT_CLASSIFICATION	0.005499056666783056	DESIGN
No ClassCastException!	WITHOUT_CLASSIFICATION	0.9996352855043175	WITHOUT_CLASSIFICATION	3.6471449568256767E-4	DESIGN
value equality	WITHOUT_CLASSIFICATION	0.9998240320581091	WITHOUT_CLASSIFICATION	1.7596794189091427E-4	DESIGN
identity equality	WITHOUT_CLASSIFICATION	0.9997931934797812	WITHOUT_CLASSIFICATION	2.0680652021865914E-4	DESIGN
bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9993463936062912	WITHOUT_CLASSIFICATION	6.536063937088468E-4	DESIGN
bench Integer fib	WITHOUT_CLASSIFICATION	0.99913137672983	WITHOUT_CLASSIFICATION	8.68623270169942E-4	DESIGN
bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9988157287080784	WITHOUT_CLASSIFICATION	0.0011842712919215147	DESIGN
bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9988157287080784	WITHOUT_CLASSIFICATION	0.0011842712919215147	DESIGN
bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9988157287080784	WITHOUT_CLASSIFICATION	0.0011842712919215147	DESIGN
bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9990609690261802	WITHOUT_CLASSIFICATION	9.3903097381972E-4	DESIGN
bench Long fib	WITHOUT_CLASSIFICATION	0.9995381812349585	WITHOUT_CLASSIFICATION	4.6181876504154706E-4	DESIGN
skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9884506651997553	WITHOUT_CLASSIFICATION	0.011549334800244674	DESIGN
start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9934555011908666	WITHOUT_CLASSIFICATION	0.006544498809133345	DESIGN
public class Hello { public static String getMessage() { return "....."; } }	WITHOUT_CLASSIFICATION	0.9927030970930534	WITHOUT_CLASSIFICATION	0.007296902906946566	DESIGN
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9991804915666919	WITHOUT_CLASSIFICATION	8.195084333080674E-4	DESIGN
Note: We can't use file.exists() to check whether the symlink exists or not, because that method returns false for existing but broken symlink. So, we try without the existence check, but in the try-catch block. MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.8222734125383249	WITHOUT_CLASSIFICATION	0.1777265874616752	DESIGN
We are creating a new IO object that shares the same IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9993161004017022	WITHOUT_CLASSIFICATION	6.83899598297875E-4	DESIGN
a while node could receive non-local flow control from any of these: a closure within the loop an eval within the loop a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999988666572279	WITHOUT_CLASSIFICATION	1.133342772003562E-6	DESIGN
[IRubyObject] [IRubyObject, IRubyObject] [IRubyObject, RubyClass] [IRubyObject, RubyClass, RubyClass] [IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9992896603773488	WITHOUT_CLASSIFICATION	7.103396226513182E-4	DESIGN
select appropriate call site dup receiver load self	WITHOUT_CLASSIFICATION	0.9985970593904776	WITHOUT_CLASSIFICATION	0.0014029406095223801	DESIGN
Translate "x || y" --> "x = (is_true(x) ? x : y)" --> x = -- build(x) should return a variable! -- f = is_true(x) beq(f, true, L) x = -- build(y) -- L:	WITHOUT_CLASSIFICATION	0.9857110683055818	WITHOUT_CLASSIFICATION	0.014288931694418276	DESIGN
Force the client socket to be blocking	WITHOUT_CLASSIFICATION	0.9977864846214608	WITHOUT_CLASSIFICATION	0.0022135153785392617	DESIGN
Additional context surrounding tokens that both the lexer and grammar use.	WITHOUT_CLASSIFICATION	0.9999790026034548	WITHOUT_CLASSIFICATION	2.0997396545214507E-5	DESIGN
Enebo: c can never be antrhign but '.' Why did I put this here?	WITHOUT_CLASSIFICATION	0.7810933515452471	DESIGN	0.2189066484547529	WITHOUT_CLASSIFICATION
save package module as ivar in parent, and add method to parent so we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9405234514848095	WITHOUT_CLASSIFICATION	0.059476548515190485	DESIGN
[C,C] [C, boolean]	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
Label for the start of the closure (used to implement redo) Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.999243003447687	WITHOUT_CLASSIFICATION	7.56996552312849E-4	DESIGN
ignore; job was cancelled FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9999369148904274	DESIGN	6.308510957267257E-5	WITHOUT_CLASSIFICATION
check arity checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9998442239597894	WITHOUT_CLASSIFICATION	1.5577604021048384E-4	DESIGN
rethrow exception rethrow it	WITHOUT_CLASSIFICATION	0.998527181935411	WITHOUT_CLASSIFICATION	0.0014728180645889044	DESIGN
we take the first method found as our "n" method, since for any non-specific arity they'll all error the same. If an actual "n" method is created, we use that.	WITHOUT_CLASSIFICATION	0.9999998793101016	WITHOUT_CLASSIFICATION	1.206898983097268E-7	DESIGN
Used by our duck-typification of Proc into interface types, to allow coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9997860330046193	WITHOUT_CLASSIFICATION	2.1396699538060932E-4	DESIGN
proxy is under construction, building thread can safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999540827590034	WITHOUT_CLASSIFICATION	4.591724099643525E-5	DESIGN
it's either as converted as we can make it via above logic or it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.999958500705965	WITHOUT_CLASSIFICATION	4.1499294034933605E-5	DESIGN
package scheme 2: separate module for each full package name, constructed from the camel-cased package segments: Java::JavaLang::Object,	WITHOUT_CLASSIFICATION	0.9983072728091589	WITHOUT_CLASSIFICATION	0.0016927271908411701	DESIGN
construct the proxy method	WITHOUT_CLASSIFICATION	0.9997116239176003	WITHOUT_CLASSIFICATION	2.8837608239971923E-4	DESIGN
line 159 "-" %token constants	WITHOUT_CLASSIFICATION	0.999706957763702	WITHOUT_CLASSIFICATION	2.930422362979279E-4	DESIGN
+++ Helper Methods	WITHOUT_CLASSIFICATION	0.9997999505476766	WITHOUT_CLASSIFICATION	2.0004945232338415E-4	DESIGN
line 152 "-" %token constants	WITHOUT_CLASSIFICATION	0.999706957763702	WITHOUT_CLASSIFICATION	2.930422362979279E-4	DESIGN
initial size state stack value stack current input #tokens to shift	WITHOUT_CLASSIFICATION	0.9999030195833677	WITHOUT_CLASSIFICATION	9.69804166322934E-5	DESIGN
+++ Helper Methods	WITHOUT_CLASSIFICATION	0.9997999505476766	WITHOUT_CLASSIFICATION	2.0004945232338415E-4	DESIGN
We only need to pass in current scope if we are evaluating as a block (which is only done for evals). We need to pass this in so that we can appropriately scope down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9998434854150927	WITHOUT_CLASSIFICATION	1.565145849072346E-4	DESIGN
let the width (if any), get processed in the next loop, so any leading 0 gets treated correctly	WITHOUT_CLASSIFICATION	0.999747175782723	WITHOUT_CLASSIFICATION	2.528242172770474E-4	DESIGN
A place to store that special hiding space that bindings need to implement things like: eval("a = 1", binding); eval("p a"). All binding instances must get access to this hidden shared scope. We store it here. This will be null if no binding has yet been called.	WITHOUT_CLASSIFICATION	0.9999988801159758	WITHOUT_CLASSIFICATION	1.1198840242807617E-6	DESIGN
TODO: make it 16 now ? MUST be power of 2!	WITHOUT_CLASSIFICATION	0.6546840088390045	DESIGN	0.34531599116099565	WITHOUT_CLASSIFICATION
check visibility dup method	WITHOUT_CLASSIFICATION	0.9133776943446376	WITHOUT_CLASSIFICATION	0.08662230565536241	DESIGN
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.980862215778303	WITHOUT_CLASSIFICATION	0.019137784221696975	DESIGN
unsigned int, native unsigned long, native	WITHOUT_CLASSIFICATION	0.9997490496992663	WITHOUT_CLASSIFICATION	2.509503007337468E-4	DESIGN
need padding I'm fairly sure there is a library call to create a string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9428019965797887	WITHOUT_CLASSIFICATION	0.057198003420211356	DESIGN
MRI behavior: Be default, 2 digits in the exponent. Use 3 digits only when necessary. See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9981817430640952	WITHOUT_CLASSIFICATION	0.0018182569359047624	DESIGN
MRI ignores seek errors, presumably for unseekable files like serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9985362657722548	WITHOUT_CLASSIFICATION	0.00146373422774513	DESIGN
switch for no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9996222280131996	WITHOUT_CLASSIFICATION	3.7777198680045634E-4	DESIGN
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9342769582110086	WITHOUT_CLASSIFICATION	0.06572304178899137	DESIGN
Estimate the square root with the foremost 62 bits of squarD bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.999761207911727	WITHOUT_CLASSIFICATION	2.387920882731634E-4	DESIGN
captures begin and end are used when not groups defined source string	WITHOUT_CLASSIFICATION	0.9979915789802285	WITHOUT_CLASSIFICATION	0.002008421019771458	DESIGN
INSTANCE VARIABLE RUBY METHODS	WITHOUT_CLASSIFICATION	0.9988682160405041	WITHOUT_CLASSIFICATION	0.0011317839594958557	DESIGN
switch while	WITHOUT_CLASSIFICATION	0.9995831565444129	WITHOUT_CLASSIFICATION	4.168434555870674E-4	DESIGN
For nodes do not have their own scope so we pass null to indicate this. 'For's are implemented as blocks in evaluation, but they have no scope so we just deal with this lack of scope throughout its lifespan. We should probably change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.5652344369450059	WITHOUT_CLASSIFICATION	0.43476556305499425	DESIGN
This field is used during argument processing to avoid putting RubyArray instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9709574436041121	WITHOUT_CLASSIFICATION	0.02904255639588797	DESIGN
Parent container for this context (can be dynamic!!) If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.999673361563749	WITHOUT_CLASSIFICATION	3.2663843625113024E-4	DESIGN
Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> v1 = -- build(a) -- OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. while this info can be inferred by using attributes, why bother if we can do this? ret = false beq(v1, false, L) v2 = -- build(b) -- ret = v2 L:	WITHOUT_CLASSIFICATION	0.7310871128999886	DESIGN	0.2689128871000114	WITHOUT_CLASSIFICATION
expected	WITHOUT_CLASSIFICATION	0.9999245941012453	WITHOUT_CLASSIFICATION	7.540589875473265E-5	DESIGN
Do nothing	WITHOUT_CLASSIFICATION	0.9995793786495538	WITHOUT_CLASSIFICATION	4.206213504461525E-4	DESIGN
constructor	WITHOUT_CLASSIFICATION	0.9987242532727257	WITHOUT_CLASSIFICATION	0.001275746727274256	DESIGN
If a line is followed by a blank line put it back.	WITHOUT_CLASSIFICATION	0.9999468286373517	WITHOUT_CLASSIFICATION	5.317136264828022E-5	DESIGN
$>: default output handle	WITHOUT_CLASSIFICATION	0.9988683292963879	WITHOUT_CLASSIFICATION	0.0011316707036120833	DESIGN
line 423	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 486	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
Signal uses sun.misc. classes, this is not allowed in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9995034644469147	WITHOUT_CLASSIFICATION	4.965355530853231E-4	DESIGN
re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9998434552086831	WITHOUT_CLASSIFICATION	1.5654479131689875E-4	DESIGN
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.8258473062108473	WITHOUT_CLASSIFICATION	0.17415269378915274	DESIGN
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.8258473062108473	WITHOUT_CLASSIFICATION	0.17415269378915274	DESIGN
colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9990374471222886	WITHOUT_CLASSIFICATION	9.625528777114112E-4	DESIGN
if there's no receiver, evaluate and pass in the superclass, or pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999970384212133	WITHOUT_CLASSIFICATION	2.96157878660436E-6	DESIGN
Wire up Function#call(args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9988338373222396	WITHOUT_CLASSIFICATION	0.001166162677760345	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.528823705361872	WITHOUT_CLASSIFICATION	0.47117629463812793	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.528823705361872	WITHOUT_CLASSIFICATION	0.47117629463812793	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.528823705361872	WITHOUT_CLASSIFICATION	0.47117629463812793	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.528823705361872	WITHOUT_CLASSIFICATION	0.47117629463812793	DESIGN
Decrease value to hit upper range.	WITHOUT_CLASSIFICATION	0.9988787733995034	WITHOUT_CLASSIFICATION	0.0011212266004966705	DESIGN
assign to appropriate variable	WITHOUT_CLASSIFICATION	0.994186095795492	WITHOUT_CLASSIFICATION	0.005813904204507932	DESIGN
"else" body	WITHOUT_CLASSIFICATION	0.9998332222522909	WITHOUT_CLASSIFICATION	1.6677774770914794E-4	DESIGN
done done done Nothing to do for 1.8 done done done done done done done? done done done done done done done done done done done case DEFINEDNODE: return buildDefined(node, m); Incomplete done done done done done done done done case ENSURENODE: return buildEnsureNode(node, m); DEFERRED done done done done case FLIPNODE: return buildFlip(node, m); SSS FIXME: What code generates this AST? done done done done done done done done done done done done done done done done done done? done done done done done done -- partially case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); DEFERRED SSS FIXME: What code generates this AST? done case POSTEXENODE: return buildPostExe(node, m); DEFERRED case PREEXENODE: return buildPreExe(node, m); DEFERRED done?? done	WITHOUT_CLASSIFICATION	0.8361699498607645	WITHOUT_CLASSIFICATION	0.16383005013923546	DESIGN
read-volatile	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
$+: string matches last paren.	WITHOUT_CLASSIFICATION	0.9999623357598082	WITHOUT_CLASSIFICATION	3.7664240191804364E-5	DESIGN
should alter global state	WITHOUT_CLASSIFICATION	0.9975977608984555	WITHOUT_CLASSIFICATION	0.0024022391015445133	DESIGN
should alter global state	WITHOUT_CLASSIFICATION	0.9975977608984555	WITHOUT_CLASSIFICATION	0.0024022391015445133	DESIGN
Ruby code frequently uses a platform check to choose "NUL:" on windows but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9891493446662607	WITHOUT_CLASSIFICATION	0.010850655333739197	DESIGN
10!	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
case RESCUENODE: return buildRescue(node, m); DEFERRED case RETRYNODE: return buildRetry(node, m); DEFERRED done	WITHOUT_CLASSIFICATION	0.9999209284844448	WITHOUT_CLASSIFICATION	7.907151555518284E-5	DESIGN
Is this instruction live or dead? During optimization passes, if this instruction causes no side-effects and the result of the instruction is not needed by anyone else, we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9434871582256175	WITHOUT_CLASSIFICATION	0.056512841774382545	DESIGN
all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9998545326438536	WITHOUT_CLASSIFICATION	1.4546735614642562E-4	DESIGN
first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9998886311008849	WITHOUT_CLASSIFICATION	1.1136889911505489E-4	DESIGN
Determine if the parameter might be passed as a 32bit int parameter. This just applies to buffer/pointer types.	WITHOUT_CLASSIFICATION	0.9996403277347684	WITHOUT_CLASSIFICATION	3.596722652316092E-4	DESIGN
Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999529078605889	WITHOUT_CLASSIFICATION	4.709213941110905E-5	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
initial size state stack value stack current input #tokens to shift	WITHOUT_CLASSIFICATION	0.9999030195833677	WITHOUT_CLASSIFICATION	9.69804166322934E-5	DESIGN
line 449	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 495	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
Management/monitoring	WITHOUT_CLASSIFICATION	0.9988157287080784	WITHOUT_CLASSIFICATION	0.0011842712919215147	DESIGN
if we've found the last char of the separator, and we've found at least as many characters as separator length, and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999998531038696	WITHOUT_CLASSIFICATION	1.468961303012015E-7	DESIGN
14!	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
Process any set of annotations No supported options	WITHOUT_CLASSIFICATION	0.9999708893388982	WITHOUT_CLASSIFICATION	2.911066110172838E-5	DESIGN
add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9987195943208074	WITHOUT_CLASSIFICATION	0.0012804056791926965	DESIGN
extract item from array	WITHOUT_CLASSIFICATION	0.9999350617242329	WITHOUT_CLASSIFICATION	6.493827576707993E-5	DESIGN
extract item from array	WITHOUT_CLASSIFICATION	0.9999350617242329	WITHOUT_CLASSIFICATION	6.493827576707993E-5	DESIGN
case SCLASSNODE: return buildSClass(node, m); DEFERRED done done done done done done done done case UNDEFNODE: return buildUndef(node, m); DEFERRED done case VALIASNODE: return buildVAlias(node, m); DEFERRED done done	WITHOUT_CLASSIFICATION	0.9999209284844448	WITHOUT_CLASSIFICATION	7.907151555518284E-5	DESIGN
Adding a post-invoke for the cb result serves to both keep it alive until after the function returns, and allows us to clean up the native trampoline early, instead of letting them accumulate until a GC run	WITHOUT_CLASSIFICATION	0.9984025550845984	WITHOUT_CLASSIFICATION	0.001597444915401671	DESIGN
The Java method doesn't care what class it is, but we need to know what to convert it to, so we use the object's own class. If that doesn't help, we use String to force a call to the object's "to_s" method.	WITHOUT_CLASSIFICATION	0.9608216549801901	WITHOUT_CLASSIFICATION	0.03917834501980996	DESIGN
index for the item	WITHOUT_CLASSIFICATION	0.9999861739688732	WITHOUT_CLASSIFICATION	1.3826031126689746E-5	DESIGN
Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9996221894156286	WITHOUT_CLASSIFICATION	3.778105843713943E-4	DESIGN
18!	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9989104149808214	WITHOUT_CLASSIFICATION	0.0010895850191786033	DESIGN
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.978019049440648	WITHOUT_CLASSIFICATION	0.021980950559352	DESIGN
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.978019049440648	WITHOUT_CLASSIFICATION	0.021980950559352	DESIGN
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.978019049440648	WITHOUT_CLASSIFICATION	0.021980950559352	DESIGN
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.978019049440648	WITHOUT_CLASSIFICATION	0.021980950559352	DESIGN
NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.996544319827941	WITHOUT_CLASSIFICATION	0.003455680172059073	DESIGN
This method takes as input a map of operands to their values, and outputs the result of this instruction. If the value map provides a value for any of the instruction's operands the expectation is that the operand will be replaced with the simplified value. It is not required that it do so -- code correctness is not compromised by failure to simplify. @param valueMap Mapping from operands to their simplified values @returns simplified result / output of this instruction	WITHOUT_CLASSIFICATION	0.9970802180041308	WITHOUT_CLASSIFICATION	0.0029197819958692124	DESIGN
Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9986125178936761	WITHOUT_CLASSIFICATION	0.0013874821063239351	DESIGN
An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9996753550200538	WITHOUT_CLASSIFICATION	3.2464497994615587E-4	DESIGN
MRI behavior: always check whether the file is writable or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999900361062077	WITHOUT_CLASSIFICATION	9.96389379231409E-6	DESIGN
22!	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
attribute set.	WITHOUT_CLASSIFICATION	0.9999380314861183	WITHOUT_CLASSIFICATION	6.196851388164972E-5	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9985672529346583	WITHOUT_CLASSIFICATION	0.0014327470653416488	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9985672529346583	WITHOUT_CLASSIFICATION	0.0014327470653416488	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9985672529346583	WITHOUT_CLASSIFICATION	0.0014327470653416488	DESIGN
fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9996009194585659	WITHOUT_CLASSIFICATION	3.990805414341188E-4	DESIGN
Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.998828370869483	WITHOUT_CLASSIFICATION	0.001171629130516949	DESIGN
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.9669219453037687	WITHOUT_CLASSIFICATION	0.033078054696231256	DESIGN
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.9669219453037687	WITHOUT_CLASSIFICATION	0.033078054696231256	DESIGN
AF_INET	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
Now we provide default impls of a number of signatures. For each arity, we first generate a non-block version of the method, which just adds NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can potentially take a block, to only generate the block-receiving signature and still avoid arg boxing. We then provide default implementations of each block-accepting method that in turn call the IRubyObject[]+Block version of call. This then finally falls back on the minimum implementation requirement for dynamic method handles.	WITHOUT_CLASSIFICATION	0.99999956505732	WITHOUT_CLASSIFICATION	4.3494267999368323E-7	DESIGN
Because we implement Java interfaces now, we need a new === that's aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.8342107879396232	WITHOUT_CLASSIFICATION	0.16578921206037678	DESIGN
BASE64	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY when value is an integer less than 1. We treat 0 as a special case to avoid Domain error.	WITHOUT_CLASSIFICATION	0.9999971092891402	WITHOUT_CLASSIFICATION	2.8907108598980538E-6	DESIGN
element set	WITHOUT_CLASSIFICATION	0.9992496707082976	WITHOUT_CLASSIFICATION	7.503292917024302E-4	DESIGN
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9473283279401294	WITHOUT_CLASSIFICATION	0.052671672059870604	DESIGN
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9473283279401294	WITHOUT_CLASSIFICATION	0.052671672059870604	DESIGN
temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9997164620536017	WITHOUT_CLASSIFICATION	2.8353794639843097E-4	DESIGN
SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode We won't get here for argument receives! So, buildDasgn is called for assignments to block variables within a block. As far as the IR is concerned, this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999999717194296	WITHOUT_CLASSIFICATION	2.8280570357786607E-8	DESIGN
getSimplifiedOperand returns the value of this operand, fully simplified getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away The value is used during optimizations and propagated through the IR. But, it is thrown away after that. But, the operand form is used for constructing the compound objects represented by the operand. Example: a = [1], b = [3,4], c = [a,b], d = [2,c] -- getValue(c) = [1,[3,4]]; getSimplifiedOperand(c) = [1, b] -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. So, if contents of a or b is modified, the "simplified value"s of c and d also change! This difference is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9923905839229356	WITHOUT_CLASSIFICATION	0.007609416077064407	DESIGN
IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.999185636306105	WITHOUT_CLASSIFICATION	8.143636938950149E-4	DESIGN
promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9771761608957117	WITHOUT_CLASSIFICATION	0.02282383910428827	DESIGN
Ruby's OMG capture all source in a Hash feature Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999985381037928	WITHOUT_CLASSIFICATION	1.4618962072020729E-6	DESIGN
carriage return	WITHOUT_CLASSIFICATION	0.999740247712755	WITHOUT_CLASSIFICATION	2.5975228724491755E-4	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.999610843067405	WITHOUT_CLASSIFICATION	3.8915693259499514E-4	DESIGN
String construction routines by NOT byte[] buffer and making the target String shared	WITHOUT_CLASSIFICATION	0.9999489758441407	WITHOUT_CLASSIFICATION	5.10241558593135E-5	DESIGN
insert all nodes in sequence, hash them in the final instruction KEY	WITHOUT_CLASSIFICATION	0.9999986517184052	WITHOUT_CLASSIFICATION	1.3482815947941184E-6	DESIGN
return last value from execution	WITHOUT_CLASSIFICATION	0.9998799542131165	WITHOUT_CLASSIFICATION	1.2004578688350464E-4	DESIGN
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9908732640681063	WITHOUT_CLASSIFICATION	0.009126735931893646	DESIGN
Basic Block id CFG that this basic block belongs to All basic blocks have a starting label List of non-label instructions	WITHOUT_CLASSIFICATION	0.9987013081314773	WITHOUT_CLASSIFICATION	0.001298691868522646	DESIGN
otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999960221227999	WITHOUT_CLASSIFICATION	3.977877200070199E-6	DESIGN
For all uninitialized specific arities, we defer to the "n" method which should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.7332335427598575	DESIGN	0.2667664572401424	WITHOUT_CLASSIFICATION
implement is called to force this class to create stubs for all methods in the given interface, so they'll show up in the list of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9940951635050504	WITHOUT_CLASSIFICATION	0.005904836494949562	DESIGN
CASE IR instructions are dummy instructions -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999738184520041	WITHOUT_CLASSIFICATION	2.618154799589232E-5	DESIGN
check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999360249455683	WITHOUT_CLASSIFICATION	6.397505443174439E-5	DESIGN
leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999670204913731	WITHOUT_CLASSIFICATION	3.297950862694181E-5	DESIGN
Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999957459128749	WITHOUT_CLASSIFICATION	4.254087125119794E-6	DESIGN
for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.999173880102634	WITHOUT_CLASSIFICATION	8.261198973660728E-4	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9991371731549412	WITHOUT_CLASSIFICATION	8.628268450587664E-4	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9991371731549412	WITHOUT_CLASSIFICATION	8.628268450587664E-4	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9991371731549412	WITHOUT_CLASSIFICATION	8.628268450587664E-4	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9991371731549412	WITHOUT_CLASSIFICATION	8.628268450587664E-4	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9991371731549412	WITHOUT_CLASSIFICATION	8.628268450587664E-4	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9991371731549412	WITHOUT_CLASSIFICATION	8.628268450587664E-4	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9991371731549412	WITHOUT_CLASSIFICATION	8.628268450587664E-4	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9991371731549412	WITHOUT_CLASSIFICATION	8.628268450587664E-4	DESIGN
Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.8825599288329478	WITHOUT_CLASSIFICATION	0.11744007116705217	DESIGN
fall through	WITHOUT_CLASSIFICATION	0.9997758880473945	WITHOUT_CLASSIFICATION	2.241119526054066E-4	DESIGN
deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9986389201189207	WITHOUT_CLASSIFICATION	0.001361079881079268	DESIGN
All errors to sysread should be SystemCallErrors, but on a closed stream Ruby returns an IOError. Java throws same exception for all errors so we resort to this hack...	WITHOUT_CLASSIFICATION	0.9841717147135086	DESIGN	0.01582828528649148	WITHOUT_CLASSIFICATION
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9991804915666919	WITHOUT_CLASSIFICATION	8.195084333080674E-4	DESIGN
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9991804915666919	WITHOUT_CLASSIFICATION	8.195084333080674E-4	DESIGN
store argument count information into scope	WITHOUT_CLASSIFICATION	0.9988941398073857	WITHOUT_CLASSIFICATION	0.0011058601926142541	DESIGN
the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9480032244226732	DESIGN	0.05199677557732691	WITHOUT_CLASSIFICATION
First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9998560116625668	WITHOUT_CLASSIFICATION	1.4398833743317537E-4	DESIGN
public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9976403446386828	WITHOUT_CLASSIFICATION	0.002359655361317167	DESIGN
get current context	WITHOUT_CLASSIFICATION	0.9999173450287685	WITHOUT_CLASSIFICATION	8.265497123157914E-5	DESIGN
octal constant	WITHOUT_CLASSIFICATION	0.9996632216278535	WITHOUT_CLASSIFICATION	3.3677837214652245E-4	DESIGN
read	WITHOUT_CLASSIFICATION	0.999694446015044	WITHOUT_CLASSIFICATION	3.0555398495613387E-4	DESIGN
this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.6038107165464055	DESIGN	0.39618928345359444	WITHOUT_CLASSIFICATION
it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9928282610439544	WITHOUT_CLASSIFICATION	0.007171738956045623	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.997159606032176	WITHOUT_CLASSIFICATION	0.0028403939678240293	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.997159606032176	WITHOUT_CLASSIFICATION	0.0028403939678240293	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.997159606032176	WITHOUT_CLASSIFICATION	0.0028403939678240293	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9997191098486099	WITHOUT_CLASSIFICATION	2.808901513900452E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9997191098486099	WITHOUT_CLASSIFICATION	2.808901513900452E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9997191098486099	WITHOUT_CLASSIFICATION	2.808901513900452E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9997191098486099	WITHOUT_CLASSIFICATION	2.808901513900452E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9997191098486099	WITHOUT_CLASSIFICATION	2.808901513900452E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9997191098486099	WITHOUT_CLASSIFICATION	2.808901513900452E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9997191098486099	WITHOUT_CLASSIFICATION	2.808901513900452E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9997191098486099	WITHOUT_CLASSIFICATION	2.808901513900452E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9997191098486099	WITHOUT_CLASSIFICATION	2.808901513900452E-4	DESIGN
ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.997882400830187	WITHOUT_CLASSIFICATION	0.0021175991698130525	DESIGN
at end	WITHOUT_CLASSIFICATION	0.9990253201012865	WITHOUT_CLASSIFICATION	9.7467989871357E-4	DESIGN
bang: true, no match, no substitution	WITHOUT_CLASSIFICATION	0.9991010335261952	WITHOUT_CLASSIFICATION	8.989664738047955E-4	DESIGN
save blocking state	WITHOUT_CLASSIFICATION	0.9996240672017338	WITHOUT_CLASSIFICATION	3.7593279826622113E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9997191098486099	WITHOUT_CLASSIFICATION	2.808901513900452E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9997191098486099	WITHOUT_CLASSIFICATION	2.808901513900452E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9997191098486099	WITHOUT_CLASSIFICATION	2.808901513900452E-4	DESIGN
invoke static __file__	WITHOUT_CLASSIFICATION	0.9979180523451532	WITHOUT_CLASSIFICATION	0.00208194765484685	DESIGN
rest of the argument array!	WITHOUT_CLASSIFICATION	0.9972356013913418	WITHOUT_CLASSIFICATION	0.0027643986086582162	DESIGN
fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9997269147671694	WITHOUT_CLASSIFICATION	2.730852328306065E-4	DESIGN
UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9923568892529262	WITHOUT_CLASSIFICATION	0.007643110747073781	DESIGN
UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9923568892529262	WITHOUT_CLASSIFICATION	0.007643110747073781	DESIGN
load null block	WITHOUT_CLASSIFICATION	0.9996960870175193	WITHOUT_CLASSIFICATION	3.0391298248060863E-4	DESIGN
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999904242281392	WITHOUT_CLASSIFICATION	9.575771860744554E-6	DESIGN
nothing else to here - the module version will be included in the class.	WITHOUT_CLASSIFICATION	0.9999153289884227	WITHOUT_CLASSIFICATION	8.46710115772394E-5	DESIGN
JRUBY-1000, fail early when attempting to subclass a final Java class; solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9997308698422704	WITHOUT_CLASSIFICATION	2.691301577294604E-4	DESIGN
block given	WITHOUT_CLASSIFICATION	0.99966047990375	WITHOUT_CLASSIFICATION	3.395200962500268E-4	DESIGN
block given	WITHOUT_CLASSIFICATION	0.99966047990375	WITHOUT_CLASSIFICATION	3.395200962500268E-4	DESIGN
Translate ret = (a || b) to ret = (a ? true : b) as follows v1 = -- build(a) -- OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. while this info can be inferred by using attributes, why bother if we can do this? ret = true beq(v1, true, L) v2 = -- build(b) -- ret = v2 L:	WITHOUT_CLASSIFICATION	0.8408858305701523	DESIGN	0.15911416942984766	WITHOUT_CLASSIFICATION
Initial precision is that of double numbers 2^63/2 ~ 4E18 63-1 an even number of number bits precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999234951998573	WITHOUT_CLASSIFICATION	7.650480014264178E-5	DESIGN
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.996209767084489	WITHOUT_CLASSIFICATION	0.0037902329155108543	DESIGN
self	WITHOUT_CLASSIFICATION	0.999565863348071	WITHOUT_CLASSIFICATION	4.341366519291143E-4	DESIGN
self	WITHOUT_CLASSIFICATION	0.999565863348071	WITHOUT_CLASSIFICATION	4.341366519291143E-4	DESIGN
self	WITHOUT_CLASSIFICATION	0.999565863348071	WITHOUT_CLASSIFICATION	4.341366519291143E-4	DESIGN
declare the field	WITHOUT_CLASSIFICATION	0.9997483767411507	WITHOUT_CLASSIFICATION	2.51623258849342E-4	DESIGN
Assign the values.	WITHOUT_CLASSIFICATION	0.9995718177706888	WITHOUT_CLASSIFICATION	4.28182229311202E-4	DESIGN
Assign the values.	WITHOUT_CLASSIFICATION	0.9995718177706888	WITHOUT_CLASSIFICATION	4.28182229311202E-4	DESIGN
check arity	WITHOUT_CLASSIFICATION	0.9998932431356493	WITHOUT_CLASSIFICATION	1.0675686435071044E-4	DESIGN
check arity	WITHOUT_CLASSIFICATION	0.9998932431356493	WITHOUT_CLASSIFICATION	1.0675686435071044E-4	DESIGN
create the class	WITHOUT_CLASSIFICATION	0.9991598252380567	WITHOUT_CLASSIFICATION	8.401747619433374E-4	DESIGN
called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9998818228516104	WITHOUT_CLASSIFICATION	1.1817714838947668E-4	DESIGN
No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999680424299892	WITHOUT_CLASSIFICATION	3.195757001086639E-5	DESIGN
1.8	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
6:tags 16:addr 1:eos	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999027350986162	WITHOUT_CLASSIFICATION	9.726490138389216E-5	DESIGN
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999273348909012	WITHOUT_CLASSIFICATION	7.266510909880578E-5	DESIGN
block	WITHOUT_CLASSIFICATION	0.9995600452782349	WITHOUT_CLASSIFICATION	4.3995472176503917E-4	DESIGN
Label for the start of the method Label for the end of the method	WITHOUT_CLASSIFICATION	0.9997519709183258	WITHOUT_CLASSIFICATION	2.4802908167413797E-4	DESIGN
comparisons & checks checks if the operand is non-null and non-false EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9936017191509725	WITHOUT_CLASSIFICATION	0.006398280849027454	DESIGN
FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.597658991233549	WITHOUT_CLASSIFICATION	0.40234100876645096	DESIGN
invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9994516948766392	WITHOUT_CLASSIFICATION	5.483051233609044E-4	DESIGN
all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.987295775197485	WITHOUT_CLASSIFICATION	0.012704224802514957	DESIGN
allow proxy to be read without synchronization. if proxy is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999952660987816	WITHOUT_CLASSIFICATION	4.733901218316599E-6	DESIGN
Create list of interface names to proxy (and make sure they really are interfaces) Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9916455515692661	WITHOUT_CLASSIFICATION	0.008354448430733876	DESIGN
Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9957458041716963	WITHOUT_CLASSIFICATION	0.004254195828303585	DESIGN
Value of "TZ" property is of a bit different format, which confuses the Java's TimeZone.getTimeZone(id) method, and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.966335278004165	WITHOUT_CLASSIFICATION	0.03366472199583501	DESIGN
file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9966886851764254	WITHOUT_CLASSIFICATION	0.0033113148235746695	DESIGN
ensure the object is associated with the wrapper we found it in, so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.999997957932993	WITHOUT_CLASSIFICATION	2.042067007037129E-6	DESIGN
return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9996147980595641	WITHOUT_CLASSIFICATION	3.852019404359175E-4	DESIGN
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9342769582110086	WITHOUT_CLASSIFICATION	0.06572304178899137	DESIGN
arg	WITHOUT_CLASSIFICATION	0.9996786493760054	WITHOUT_CLASSIFICATION	3.213506239946192E-4	DESIGN
Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999232362298115	WITHOUT_CLASSIFICATION	7.676377018844373E-5	DESIGN
normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999767279291795	WITHOUT_CLASSIFICATION	2.327207082061873E-5	DESIGN
coerce arguments	WITHOUT_CLASSIFICATION	0.999681657298797	WITHOUT_CLASSIFICATION	3.1834270120295827E-4	DESIGN
0.0 is ok float range inverted float range? NaN +infinity -infinity	WITHOUT_CLASSIFICATION	0.9995081790106193	WITHOUT_CLASSIFICATION	4.918209893807448E-4	DESIGN
expected	WITHOUT_CLASSIFICATION	0.9999245941012453	WITHOUT_CLASSIFICATION	7.540589875473265E-5	DESIGN
set this class's method names in var @__java_ovrd_methods if this is the new class; otherwise, get method names from there if this is a proxy superclass.	WITHOUT_CLASSIFICATION	0.9997549949938214	WITHOUT_CLASSIFICATION	2.450050061786322E-4	DESIGN
ignore backslashed spaces in %w	WITHOUT_CLASSIFICATION	0.9991111692552807	WITHOUT_CLASSIFICATION	8.88830744719265E-4	DESIGN
Invert the sign, since TZ format and Java format use opposite signs, sigh... Also, Java API requires the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9988295172831385	WITHOUT_CLASSIFICATION	0.0011704827168614682	DESIGN
no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9995562410355397	WITHOUT_CLASSIFICATION	4.437589644602314E-4	DESIGN
<=> may return nil in many circumstances, e.g. 3 <=> NaN	WITHOUT_CLASSIFICATION	0.997028054791641	WITHOUT_CLASSIFICATION	0.002971945208359045	DESIGN
use numbered access method	WITHOUT_CLASSIFICATION	0.9921124917850318	WITHOUT_CLASSIFICATION	0.007887508214968225	DESIGN
Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999738395935953	WITHOUT_CLASSIFICATION	2.6160406404715677E-5	DESIGN
ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9998950328243242	WITHOUT_CLASSIFICATION	1.049671756756906E-4	DESIGN
The dataStruct is a place where custom information can be contained for core implementations that doesn't necessarily want to go to the trouble of creating a subclass of RubyObject. The OpenSSL implementation uses this heavily to save holder objects containing Java cryptography objects. Java integration uses this to store the Java object ref. protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999583482347197	WITHOUT_CLASSIFICATION	4.165176528013237E-5	DESIGN
Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9993128717068127	WITHOUT_CLASSIFICATION	6.871282931873213E-4	DESIGN
arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9990250303246978	WITHOUT_CLASSIFICATION	9.749696753022221E-4	DESIGN
build scope names string	WITHOUT_CLASSIFICATION	0.9990510489476424	WITHOUT_CLASSIFICATION	9.489510523575498E-4	DESIGN
Tries to load at compile-time the constant referred to by 'constRef'. This might be possible if the constant is defined and is not a forward reference to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9674175736330332	WITHOUT_CLASSIFICATION	0.03258242636696695	DESIGN
Here we create an "anonymous" exception type used for unrolling the stack. MRI creates a new one for every call to timeout, which can be costly. We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.6742494152889078	WITHOUT_CLASSIFICATION	0.32575058471109214	DESIGN
finally	WITHOUT_CLASSIFICATION	0.9994772529736206	WITHOUT_CLASSIFICATION	5.227470263795442E-4	DESIGN
MRI behavior: With TZ equal to "GMT" or "UTC", Time.now is NOT considered as a proper GMT/UTC time: ENV['TZ']="GMT" Time.now.gmt? ==> false ENV['TZ']="UTC" Time.now.utc? ==> false Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9997806746769751	WITHOUT_CLASSIFICATION	2.193253230247833E-4	DESIGN
?l | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999915716654603	WITHOUT_CLASSIFICATION	8.42833453977058E-6	DESIGN
This try/catch is to allow failing over to the "commands" logic when running from within a jruby-complete jar file, which has jruby.home = a jar file URL that does not resolve correctly with JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9964543590227135	WITHOUT_CLASSIFICATION	0.003545640977286522	DESIGN
Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9967933180747066	WITHOUT_CLASSIFICATION	0.003206681925293433	DESIGN
specific arity	WITHOUT_CLASSIFICATION	0.9994750370052528	WITHOUT_CLASSIFICATION	5.24962994747207E-4	DESIGN
In the case of two arguments, MRI will discard the portion of the first argument after a decimal point (i.e., "floor"). However in the case of a single argument, any portion after the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999979498473236	WITHOUT_CLASSIFICATION	2.0501526764971666E-6	DESIGN
?w | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.999994626437724	WITHOUT_CLASSIFICATION	5.373562276038738E-6	DESIGN
COMMON VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.998763856133498	WITHOUT_CLASSIFICATION	0.001236143866502003	DESIGN
@JRubyMethod public IRubyObject to_proc() { return RubyProc.newProc(getRuntime(), CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()), Block.Type.PROC); }	WITHOUT_CLASSIFICATION	0.9990533193691091	WITHOUT_CLASSIFICATION	9.466806308908985E-4	DESIGN
let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9979942219368895	WITHOUT_CLASSIFICATION	0.0020057780631105777	DESIGN
let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9979942219368895	WITHOUT_CLASSIFICATION	0.0020057780631105777	DESIGN
do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999102270935358	WITHOUT_CLASSIFICATION	8.977290646419789E-5	DESIGN
do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999102270935358	WITHOUT_CLASSIFICATION	8.977290646419789E-5	DESIGN
Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.8448246560423582	WITHOUT_CLASSIFICATION	0.15517534395764182	DESIGN
Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.8448246560423582	WITHOUT_CLASSIFICATION	0.15517534395764182	DESIGN
================ Utility Methods ================	WITHOUT_CLASSIFICATION	0.9988709776826618	WITHOUT_CLASSIFICATION	0.0011290223173382294	DESIGN
================ Utility Methods ================	WITHOUT_CLASSIFICATION	0.9988709776826618	WITHOUT_CLASSIFICATION	0.0011290223173382294	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9984345830542541	WITHOUT_CLASSIFICATION	0.0015654169457458807	DESIGN
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9984345830542541	WITHOUT_CLASSIFICATION	0.0015654169457458807	DESIGN
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9984345830542541	WITHOUT_CLASSIFICATION	0.0015654169457458807	DESIGN
Add property name aliases	WITHOUT_CLASSIFICATION	0.9991514304751418	WITHOUT_CLASSIFICATION	8.485695248582297E-4	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.999990021506658	WITHOUT_CLASSIFICATION	9.97849334193417E-6	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.999990021506658	WITHOUT_CLASSIFICATION	9.97849334193417E-6	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.999990021506658	WITHOUT_CLASSIFICATION	9.97849334193417E-6	DESIGN
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.7842154702812866	WITHOUT_CLASSIFICATION	0.21578452971871342	DESIGN
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.7842154702812866	WITHOUT_CLASSIFICATION	0.21578452971871342	DESIGN
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.7842154702812866	WITHOUT_CLASSIFICATION	0.21578452971871342	DESIGN
INTERNAL VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9988682160405041	WITHOUT_CLASSIFICATION	0.0011317839594958557	DESIGN
backspace	WITHOUT_CLASSIFICATION	0.999477603985436	WITHOUT_CLASSIFICATION	5.223960145640202E-4	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
package-private	WITHOUT_CLASSIFICATION	0.9996373030378952	WITHOUT_CLASSIFICATION	3.6269696210475987E-4	DESIGN
fall through	WITHOUT_CLASSIFICATION	0.9997758880473945	WITHOUT_CLASSIFICATION	2.241119526054066E-4	DESIGN
fall through	WITHOUT_CLASSIFICATION	0.9997758880473945	WITHOUT_CLASSIFICATION	2.241119526054066E-4	DESIGN
MRI issuses warning here on (RBIGNUM(x)->len SIZEOF_BDIGITS yy > 10241024)	WITHOUT_CLASSIFICATION	0.9917442454695922	WITHOUT_CLASSIFICATION	0.008255754530407894	DESIGN
interrupt the target thread in case it's blocking or waiting WARNING: We no longer interrupt the target thread, since this usually means interrupting IO and with NIO that means the channel is no longer usable. We either need a new way to handle waking a target thread that's waiting on IO, or we need to accept that we can't wake such threads and must wait for them to complete their operation. threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.999999976609707	WITHOUT_CLASSIFICATION	2.339029300679604E-8	DESIGN
interrupt the target thread in case it's blocking or waiting WARNING: We no longer interrupt the target thread, since this usually means interrupting IO and with NIO that means the channel is no longer usable. We either need a new way to handle waking a target thread that's waiting on IO, or we need to accept that we can't wake such threads and must wait for them to complete their operation. threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.999999976609707	WITHOUT_CLASSIFICATION	2.339029300679604E-8	DESIGN
Nested class whose instances act as thunks reacting to to_str method called from (Exception#to_str, Exception#message) MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!", to_str implementation: "name_err_mesg_to_str" TODO: this class should not be lookupable	WITHOUT_CLASSIFICATION	0.5927757443222568	DESIGN	0.40722425567774323	WITHOUT_CLASSIFICATION
We need to guarantee that any existing reads of old Map can proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999907442585088	WITHOUT_CLASSIFICATION	9.255741491158779E-6	DESIGN
The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9994869605842506	WITHOUT_CLASSIFICATION	5.13039415749481E-4	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999686923042446	WITHOUT_CLASSIFICATION	3.13076957554013E-4	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999686923042446	WITHOUT_CLASSIFICATION	3.13076957554013E-4	DESIGN
This should only be called by this and RubyFile. It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9162009901688308	WITHOUT_CLASSIFICATION	0.08379900983116911	DESIGN
We yield here to hopefully permit the target thread to schedule MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9998931065709599	WITHOUT_CLASSIFICATION	1.0689342904013395E-4	DESIGN
note that addMethod now does its own put, so any change made to functionality here should be made there as well	WITHOUT_CLASSIFICATION	0.9962251101508132	WITHOUT_CLASSIFICATION	0.003774889849186896	DESIGN
Currently dead code, but useful when we figure out how to actually perform translit. private static boolean isTranslit(String encoding) { return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false; }	WITHOUT_CLASSIFICATION	0.6847469551716717	DESIGN	0.3152530448283283	WITHOUT_CLASSIFICATION
empirically it appears that to_ary coersions always return array or nil, so this should always be an array by now.	WITHOUT_CLASSIFICATION	0.9963539147149495	WITHOUT_CLASSIFICATION	0.0036460852850505685	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999686923042446	WITHOUT_CLASSIFICATION	3.13076957554013E-4	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999686923042446	WITHOUT_CLASSIFICATION	3.13076957554013E-4	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999686923042446	WITHOUT_CLASSIFICATION	3.13076957554013E-4	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999686923042446	WITHOUT_CLASSIFICATION	3.13076957554013E-4	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999686923042446	WITHOUT_CLASSIFICATION	3.13076957554013E-4	DESIGN
No seconds, just yield	WITHOUT_CLASSIFICATION	0.9997269771628094	WITHOUT_CLASSIFICATION	2.730228371906128E-4	DESIGN
finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.999667565704457	WITHOUT_CLASSIFICATION	3.3243429554303844E-4	DESIGN
if it's an inner class and it's not public, we can't access it; skip population of declared elements	WITHOUT_CLASSIFICATION	0.9874903930400719	WITHOUT_CLASSIFICATION	0.012509606959928154	DESIGN
getFoo => foo getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9998416819033259	WITHOUT_CLASSIFICATION	1.5831809667421847E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992743756572146	WITHOUT_CLASSIFICATION	7.256243427854744E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992743756572146	WITHOUT_CLASSIFICATION	7.256243427854744E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992743756572146	WITHOUT_CLASSIFICATION	7.256243427854744E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992743756572146	WITHOUT_CLASSIFICATION	7.256243427854744E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992743756572146	WITHOUT_CLASSIFICATION	7.256243427854744E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992743756572146	WITHOUT_CLASSIFICATION	7.256243427854744E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992743756572146	WITHOUT_CLASSIFICATION	7.256243427854744E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992743756572146	WITHOUT_CLASSIFICATION	7.256243427854744E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992743756572146	WITHOUT_CLASSIFICATION	7.256243427854744E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992743756572146	WITHOUT_CLASSIFICATION	7.256243427854744E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992743756572146	WITHOUT_CLASSIFICATION	7.256243427854744E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992743756572146	WITHOUT_CLASSIFICATION	7.256243427854744E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992743756572146	WITHOUT_CLASSIFICATION	7.256243427854744E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992743756572146	WITHOUT_CLASSIFICATION	7.256243427854744E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992743756572146	WITHOUT_CLASSIFICATION	7.256243427854744E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992743756572146	WITHOUT_CLASSIFICATION	7.256243427854744E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992743756572146	WITHOUT_CLASSIFICATION	7.256243427854744E-4	DESIGN
MRI behavior on Windows: it treats '/' as a root of a current drive (but only if SINGLE slash is present!): E.g., if current work directory is 'D:/home/directory', then '/' means 'D:/'. Basically, '/path' is treated as a RELATIVE path, relative to the current drive. 'path' is treated as absolute one.	WITHOUT_CLASSIFICATION	0.9999913727650068	WITHOUT_CLASSIFICATION	8.627234993125655E-6	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992743756572146	WITHOUT_CLASSIFICATION	7.256243427854744E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992743756572146	WITHOUT_CLASSIFICATION	7.256243427854744E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992743756572146	WITHOUT_CLASSIFICATION	7.256243427854744E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992743756572146	WITHOUT_CLASSIFICATION	7.256243427854744E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992743756572146	WITHOUT_CLASSIFICATION	7.256243427854744E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992743756572146	WITHOUT_CLASSIFICATION	7.256243427854744E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992743756572146	WITHOUT_CLASSIFICATION	7.256243427854744E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992743756572146	WITHOUT_CLASSIFICATION	7.256243427854744E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992743756572146	WITHOUT_CLASSIFICATION	7.256243427854744E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992743756572146	WITHOUT_CLASSIFICATION	7.256243427854744E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9992743756572146	WITHOUT_CLASSIFICATION	7.256243427854744E-4	DESIGN
This is needed when the enclosing class or module is a singleton. In that case, we generated a name such as null::Foo, which broke Marshalling, among others. The correct thing to do in this situation is to insert the generate the name of form #<Class:01xasdfasd> if it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.7989757477537829	DESIGN	0.20102425224621712	WITHOUT_CLASSIFICATION
this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9972911119927046	WITHOUT_CLASSIFICATION	0.002708888007295415	DESIGN
EQ == 0 (i.e. false) pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.997439194300935	WITHOUT_CLASSIFICATION	0.0025608056990650187	DESIGN
get "self"	WITHOUT_CLASSIFICATION	0.9995359790189454	WITHOUT_CLASSIFICATION	4.6402098105457747E-4	DESIGN
No timeout in critical section	WITHOUT_CLASSIFICATION	0.9992244873786998	WITHOUT_CLASSIFICATION	7.755126213001766E-4	DESIGN
rethrow exception rethrow it	WITHOUT_CLASSIFICATION	0.998527181935411	WITHOUT_CLASSIFICATION	0.0014728180645889044	DESIGN
only public methods	WITHOUT_CLASSIFICATION	0.9997550604202448	WITHOUT_CLASSIFICATION	2.4493957975525634E-4	DESIGN
If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9998609965211804	WITHOUT_CLASSIFICATION	1.3900347881962258E-4	DESIGN
First try to use drive letter from supplied dir value, then try current work dir.	WITHOUT_CLASSIFICATION	0.9999223230549393	WITHOUT_CLASSIFICATION	7.767694506069182E-5	DESIGN
JRUBY-2435: Aliasing eval and other "special" methods should display a warning We warn because we treat certain method names as "special" for purposes of optimization. Hopefully this will be enough to convince people not to alias them.	WITHOUT_CLASSIFICATION	0.9572092521294848	WITHOUT_CLASSIFICATION	0.042790747870515206	DESIGN
generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.998426217357424	WITHOUT_CLASSIFICATION	0.0015737826425759455	DESIGN
block argument to the method closure present class present method table mutations, def, defs, undef, alias likely call to eval makes calls that are aware of the frame makes calls that are aware of the frame's self makes calls that are aware of the frame's visibility makes calls that are aware of the frame's block makes calls that are aware of the frame's name makes calls that set or get backref makes calls that set or get lastline makes calls that are aware of the frame's class optional arguments to the method rest arg to the method makes calls that are aware of the scope makes a zero-argument super call accesses or sets constants accesses or sets class variables makes normal super call contains a retry	WITHOUT_CLASSIFICATION	0.9921274942501624	WITHOUT_CLASSIFICATION	0.00787250574983758	DESIGN
Add aliases in Type::, NativeType:: and FFI::TYPE_	WITHOUT_CLASSIFICATION	0.9997105808161463	WITHOUT_CLASSIFICATION	2.894191838536562E-4	DESIGN
Create constants for flock	WITHOUT_CLASSIFICATION	0.9997978003244233	WITHOUT_CLASSIFICATION	2.0219967557667999E-4	DESIGN
double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9994912448365103	WITHOUT_CLASSIFICATION	5.087551634897871E-4	DESIGN
indices for temp values	WITHOUT_CLASSIFICATION	0.9998130013509101	WITHOUT_CLASSIFICATION	1.8699864908989437E-4	DESIGN
a while node could receive non-local flow control from any of these: a closure within the loop an eval within the loop a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999988666572279	WITHOUT_CLASSIFICATION	1.133342772003562E-6	DESIGN
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9983114382878213	WITHOUT_CLASSIFICATION	0.0016885617121786597	DESIGN
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9983114382878213	WITHOUT_CLASSIFICATION	0.0016885617121786597	DESIGN
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9983114382878213	WITHOUT_CLASSIFICATION	0.0016885617121786597	DESIGN
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9983114382878213	WITHOUT_CLASSIFICATION	0.0016885617121786597	DESIGN
snapshot of contents of directory current position in directory	WITHOUT_CLASSIFICATION	0.9999977457434127	WITHOUT_CLASSIFICATION	2.2542565873773057E-6	DESIGN
Exclusive locks in Java require the channel to be writable, otherwise an exception is thrown (terminating JRuby execution). But flock behavior of MRI is that it allows exclusive locks even on non-writable file. So we convert exclusive lock to shared lock if the channel is not writable, to better match the MRI behavior.	WITHOUT_CLASSIFICATION	0.9991469874170918	WITHOUT_CLASSIFICATION	8.530125829082269E-4	DESIGN
explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.999777575335087	WITHOUT_CLASSIFICATION	2.2242466491295581E-4	DESIGN
explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.999777575335087	WITHOUT_CLASSIFICATION	2.2242466491295581E-4	DESIGN
set self to the class	WITHOUT_CLASSIFICATION	0.9971535876070166	WITHOUT_CLASSIFICATION	0.0028464123929833715	DESIGN
---------- Public fields, methods ---------	WITHOUT_CLASSIFICATION	0.9995887417906512	WITHOUT_CLASSIFICATION	4.1125820934887245E-4	DESIGN
A specific version was requested - use as is for search	WITHOUT_CLASSIFICATION	0.999778009257902	WITHOUT_CLASSIFICATION	2.219907420979168E-4	DESIGN
zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999574669447691	WITHOUT_CLASSIFICATION	4.253305523087244E-5	DESIGN
we need to collect all methods, though we'll only install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9847443635805676	WITHOUT_CLASSIFICATION	0.015255636419432521	DESIGN
Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.997249851471739	WITHOUT_CLASSIFICATION	0.0027501485282611345	DESIGN
Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999439577959309	WITHOUT_CLASSIFICATION	5.6042204069033064E-5	DESIGN
do nothing	WITHOUT_CLASSIFICATION	0.9996188190123129	WITHOUT_CLASSIFICATION	3.8118098768703227E-4	DESIGN
do nothing	WITHOUT_CLASSIFICATION	0.9996188190123129	WITHOUT_CLASSIFICATION	3.8118098768703227E-4	DESIGN
do nothing	WITHOUT_CLASSIFICATION	0.9996188190123129	WITHOUT_CLASSIFICATION	3.8118098768703227E-4	DESIGN
do nothing	WITHOUT_CLASSIFICATION	0.9996188190123129	WITHOUT_CLASSIFICATION	3.8118098768703227E-4	DESIGN
If an IO exception occurs (something odd, but possible) A directory may return null.	WITHOUT_CLASSIFICATION	0.9999661151636168	WITHOUT_CLASSIFICATION	3.38848363831801E-5	DESIGN
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.8860625225057566	WITHOUT_CLASSIFICATION	0.11393747749424345	DESIGN
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.8860625225057566	WITHOUT_CLASSIFICATION	0.11393747749424345	DESIGN
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.8860625225057566	WITHOUT_CLASSIFICATION	0.11393747749424345	DESIGN
use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9950393704585807	WITHOUT_CLASSIFICATION	0.004960629541419316	DESIGN
finally with no exception	WITHOUT_CLASSIFICATION	0.9981413709772264	WITHOUT_CLASSIFICATION	0.0018586290227734451	DESIGN
Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9847513256320953	WITHOUT_CLASSIFICATION	0.015248674367904579	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.528823705361872	WITHOUT_CLASSIFICATION	0.47117629463812793	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.528823705361872	WITHOUT_CLASSIFICATION	0.47117629463812793	DESIGN
The counting of slashes that follows is simply a way to adhere to Ruby's UNC (or something) compatibility. When Ruby's expand_path is called with "foobar" it will return "foo/bar". JRuby uses java.io.File, and hence returns "/foo/bar". In order to retain java.io.File in the lower layers and provide full Ruby compatibility, the number of extra slashes must be counted and prepended to the result.	WITHOUT_CLASSIFICATION	0.9171368583718442	WITHOUT_CLASSIFICATION	0.08286314162815575	DESIGN
This is almost always already interned, since it will be called with a symbol in most cases but when created from Java code, we might get an argument that needs to be interned. addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9988812064660211	WITHOUT_CLASSIFICATION	0.0011187935339789675	DESIGN
not a class	WITHOUT_CLASSIFICATION	0.9918920755500495	WITHOUT_CLASSIFICATION	0.008107924449950546	DESIGN
not a class	WITHOUT_CLASSIFICATION	0.9918920755500495	WITHOUT_CLASSIFICATION	0.008107924449950546	DESIGN
Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.925181952379178	WITHOUT_CLASSIFICATION	0.074818047620822	DESIGN
Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.925181952379178	WITHOUT_CLASSIFICATION	0.074818047620822	DESIGN
io.available() only returns 0 after EOF is encountered so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9997499545757862	WITHOUT_CLASSIFICATION	2.5004542421379805E-4	DESIGN
In the current logic, if we get here we know that module is not an IncludedModuleWrapper, so there's no need to fish out the delegate. But just in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.8799354625504934	WITHOUT_CLASSIFICATION	0.12006453744950668	DESIGN
rb_iterate((VALUE()_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9992896603773488	WITHOUT_CLASSIFICATION	7.103396226513182E-4	DESIGN
Broken symlinks considered by exists() as non-existing, so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.999991079787642	WITHOUT_CLASSIFICATION	8.920212358082819E-6	DESIGN
CONSTANT API METHODS	WITHOUT_CLASSIFICATION	0.9985601470439923	WITHOUT_CLASSIFICATION	0.0014398529560077373	DESIGN
create the default thread group	WITHOUT_CLASSIFICATION	0.9998383804062115	WITHOUT_CLASSIFICATION	1.6161959378856107E-4	DESIGN
range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9993794567889355	WITHOUT_CLASSIFICATION	6.205432110645722E-4	DESIGN
============================ Here are hash internals (This could be extracted to a separate class but it's not too large though) ============================	WITHOUT_CLASSIFICATION	0.9930778595214119	WITHOUT_CLASSIFICATION	0.006922140478588203	DESIGN
LOW-LEVEL CLASS VARIABLE INTERFACE fetch/store/list class variables for this module	WITHOUT_CLASSIFICATION	0.9757665468566109	WITHOUT_CLASSIFICATION	0.024233453143389035	DESIGN
used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9958031080606652	WITHOUT_CLASSIFICATION	0.004196891939334888	DESIGN
used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9958031080606652	WITHOUT_CLASSIFICATION	0.004196891939334888	DESIGN
Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999443096906949	WITHOUT_CLASSIFICATION	5.569030930503782E-5	DESIGN
Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999443096906949	WITHOUT_CLASSIFICATION	5.569030930503782E-5	DESIGN
retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9982647421620984	WITHOUT_CLASSIFICATION	0.0017352578379016311	DESIGN
returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9997992869839658	WITHOUT_CLASSIFICATION	2.0071301603418203E-4	DESIGN
\cX, \c\M-X	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9993933783576864	WITHOUT_CLASSIFICATION	6.066216423135082E-4	DESIGN
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9993933783576864	WITHOUT_CLASSIFICATION	6.066216423135082E-4	DESIGN
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9993933783576864	WITHOUT_CLASSIFICATION	6.066216423135082E-4	DESIGN
line 286	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 476	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 513	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 530	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 533	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 537	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 551	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
end loop	WITHOUT_CLASSIFICATION	0.9999295842438123	WITHOUT_CLASSIFICATION	7.041575618780643E-5	DESIGN
MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9998816381852657	WITHOUT_CLASSIFICATION	1.1836181473436634E-4	DESIGN
prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9902364024006698	WITHOUT_CLASSIFICATION	0.009763597599330216	DESIGN
Traverse the instructions in this basic block in reverse order! Mark as dead all instructions whose results are not used!	WITHOUT_CLASSIFICATION	0.9854999264487468	WITHOUT_CLASSIFICATION	0.01450007355125306	DESIGN
fields should really be an immutable map as it is never modified after construction	WITHOUT_CLASSIFICATION	0.9995900343157723	WITHOUT_CLASSIFICATION	4.0996568422776313E-4	DESIGN
load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9998989551848382	WITHOUT_CLASSIFICATION	1.0104481516186333E-4	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.528823705361872	WITHOUT_CLASSIFICATION	0.47117629463812793	DESIGN
If we define a class in Ruby, but later want to allow it to be defined in Java, the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9458925500825184	WITHOUT_CLASSIFICATION	0.05410744991748161	DESIGN
We only want IO objects with valid streams (better to error now).	WITHOUT_CLASSIFICATION	0.99950766170245	WITHOUT_CLASSIFICATION	4.923382975500172E-4	DESIGN
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.8258473062108473	WITHOUT_CLASSIFICATION	0.17415269378915274	DESIGN
value	WITHOUT_CLASSIFICATION	0.9997011077669412	WITHOUT_CLASSIFICATION	2.988922330588889E-4	DESIGN
value	WITHOUT_CLASSIFICATION	0.9997011077669412	WITHOUT_CLASSIFICATION	2.988922330588889E-4	DESIGN
value	WITHOUT_CLASSIFICATION	0.9997011077669412	WITHOUT_CLASSIFICATION	2.988922330588889E-4	DESIGN
value	WITHOUT_CLASSIFICATION	0.9997011077669412	WITHOUT_CLASSIFICATION	2.988922330588889E-4	DESIGN
value	WITHOUT_CLASSIFICATION	0.9997011077669412	WITHOUT_CLASSIFICATION	2.988922330588889E-4	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9994546562542459	WITHOUT_CLASSIFICATION	5.453437457541153E-4	DESIGN
value	WITHOUT_CLASSIFICATION	0.9997011077669412	WITHOUT_CLASSIFICATION	2.988922330588889E-4	DESIGN
value	WITHOUT_CLASSIFICATION	0.9997011077669412	WITHOUT_CLASSIFICATION	2.988922330588889E-4	DESIGN
value	WITHOUT_CLASSIFICATION	0.9997011077669412	WITHOUT_CLASSIFICATION	2.988922330588889E-4	DESIGN
MRI has extra pointer which makes our code look a little bit more strange in comparison	WITHOUT_CLASSIFICATION	0.9928836405958706	WITHOUT_CLASSIFICATION	0.007116359404129405	DESIGN
Tempory buffer to build up a potential token. Consumer takes responsibility to reset this before use.	WITHOUT_CLASSIFICATION	0.9986550650354056	WITHOUT_CLASSIFICATION	0.0013449349645943865	DESIGN
tmpPosition is required because getPosition()'s side effects. if the warning is generated, the getPosition() on line 954 (this line + 18) will create a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9992469926809265	WITHOUT_CLASSIFICATION	7.530073190733522E-4	DESIGN
What is \v in C? case '\v': c2 = 'v'; break;	WITHOUT_CLASSIFICATION	0.9997368886670028	WITHOUT_CLASSIFICATION	2.631113329972179E-4	DESIGN
Consider Thread aspects of this	WITHOUT_CLASSIFICATION	0.9963002096539701	WITHOUT_CLASSIFICATION	0.0036997903460298347	DESIGN
Position within source must reflect the actual offset and column. Since we ate an extra character here (this accounting is normally done in read ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999904618973681	WITHOUT_CLASSIFICATION	9.53810263187493E-6	DESIGN
An interrupt or timeout may have caused us to miss a notify that we consumed, so do another notify in case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999638575173232	WITHOUT_CLASSIFICATION	3.6142482676780645E-5	DESIGN
line 572	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 601	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 601	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 625	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 649	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 691	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 723	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 732	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 745	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 766	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 785	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 794	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 800	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 812	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 827	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 839	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 845	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 864	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 886	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 896	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 911	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 929	WITHOUT_CLASSIFICATION	0.999805806917261	WITHOUT_CLASSIFICATION	1.9419308273913507E-4	DESIGN
line 952	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 970	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 972	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 991	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1011	WITHOUT_CLASSIFICATION	0.9974829623434885	WITHOUT_CLASSIFICATION	0.0025170376565114175	DESIGN
line 1026	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1038	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1067	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1085	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1097	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1105	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1122	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1133	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1145	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1169	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1201	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1210	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1229	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1261	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1287	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1293	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1307	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1320	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1325	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1363	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1398	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1448	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1456	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1473	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1492	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1513	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1523	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1562	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1582	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1603	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1603	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1615	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1620	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1635	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1652	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1681	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1708	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1716	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1755	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1772	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1789	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
ACTIONS_END	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
ACTIONS_END	WITHOUT_CLASSIFICATION	0.9995131031150585	WITHOUT_CLASSIFICATION	4.868968849415681E-4	DESIGN
force for args	WITHOUT_CLASSIFICATION	0.9997095034669806	WITHOUT_CLASSIFICATION	2.9049653301939935E-4	DESIGN
last expression should not be void	WITHOUT_CLASSIFICATION	0.9904976307187089	WITHOUT_CLASSIFICATION	0.009502369281291133	DESIGN
compstmt position includes both parens around it	WITHOUT_CLASSIFICATION	0.9180168164817345	WITHOUT_CLASSIFICATION	0.08198318351826553	DESIGN
We can assign if we already have variable of that name here or we are the only scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9997239430779841	WITHOUT_CLASSIFICATION	2.760569220159435E-4	DESIGN
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9975249846956469	WITHOUT_CLASSIFICATION	0.0024750153043530776	DESIGN
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9975249846956469	WITHOUT_CLASSIFICATION	0.0024750153043530776	DESIGN
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9975249846956469	WITHOUT_CLASSIFICATION	0.0024750153043530776	DESIGN
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9975249846956469	WITHOUT_CLASSIFICATION	0.0024750153043530776	DESIGN
FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9826361139553456	DESIGN	0.017363886044654508	WITHOUT_CLASSIFICATION
This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:) into individual whenNodes. The primary reason for this is to ensure lazy evaluation of the arguments (when foo,bar,gar:) to prevent side-effects. In the old code this was done using nested when statements, which was awful for interpreter and compilation. Notes: This has semantic equivalence but will not be lexically equivalent. Compiler needs to detect same bodies to simplify bytecode generated.	WITHOUT_CLASSIFICATION	0.975486155755337	WITHOUT_CLASSIFICATION	0.024513844244663022	DESIGN
line 313	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 339	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 361	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 413	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 451	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 472	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 500	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 515	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 555	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 582	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 619	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 636	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 669	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 703	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 776	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 814	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 823	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 854	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 872	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 905	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 925	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 958	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 992	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1047	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1072	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1081	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1108	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1136	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1168	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1192	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1241	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1267	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1286	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1301	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1314	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1333	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1362	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1395	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1420	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1439	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1476	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1535	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1588	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1618	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1643	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1669	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1728	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1753	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1779	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1794	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1812	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1837	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1895	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1925	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1950	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 1992	WITHOUT_CLASSIFICATION	0.9998001609421953	WITHOUT_CLASSIFICATION	1.998390578048037E-4	DESIGN
line 2014	WITHOUT_CLASSIFICATION	0.9998031661748845	WITHOUT_CLASSIFICATION	1.9683382511547076E-4	DESIGN
Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9346847212246383	WITHOUT_CLASSIFICATION	0.06531527877536182	DESIGN
If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9987004372309303	WITHOUT_CLASSIFICATION	0.001299562769069673	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9994706669648503	WITHOUT_CLASSIFICATION	5.293330351497248E-4	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9994706669648503	WITHOUT_CLASSIFICATION	5.293330351497248E-4	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9994706669648503	WITHOUT_CLASSIFICATION	5.293330351497248E-4	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9994706669648503	WITHOUT_CLASSIFICATION	5.293330351497248E-4	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9994706669648503	WITHOUT_CLASSIFICATION	5.293330351497248E-4	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9994706669648503	WITHOUT_CLASSIFICATION	5.293330351497248E-4	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9994706669648503	WITHOUT_CLASSIFICATION	5.293330351497248E-4	DESIGN
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9942125950039382	WITHOUT_CLASSIFICATION	0.005787404996061779	DESIGN
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9942125950039382	WITHOUT_CLASSIFICATION	0.005787404996061779	DESIGN
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9942125950039382	WITHOUT_CLASSIFICATION	0.005787404996061779	DESIGN
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9942125950039382	WITHOUT_CLASSIFICATION	0.005787404996061779	DESIGN
happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.995554318937086	WITHOUT_CLASSIFICATION	0.004445681062913992	DESIGN
happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.995554318937086	WITHOUT_CLASSIFICATION	0.004445681062913992	DESIGN
We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the 'b' will get put into this new dynamic scope. The original scope does not see the new 'b' and successive evals with this binding will. I take it having the ability to have succesive binding evals be able to share same scope makes sense from a programmers perspective. One crappy outcome of this design is it requires Dynamic and Static scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.7842967704980998	WITHOUT_CLASSIFICATION	0.2157032295019003	DESIGN
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999694472586015	WITHOUT_CLASSIFICATION	3.0552741398479835E-5	DESIGN
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999694472586015	WITHOUT_CLASSIFICATION	3.0552741398479835E-5	DESIGN
tc under method self under method name args	WITHOUT_CLASSIFICATION	0.9998036903370133	WITHOUT_CLASSIFICATION	1.9630966298678226E-4	DESIGN
allow it to bubble up	WITHOUT_CLASSIFICATION	0.9945020728663895	WITHOUT_CLASSIFICATION	0.005497927133610481	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999708110545323	WITHOUT_CLASSIFICATION	2.918894546769356E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999708110545323	WITHOUT_CLASSIFICATION	2.918894546769356E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999708110545323	WITHOUT_CLASSIFICATION	2.918894546769356E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999708110545323	WITHOUT_CLASSIFICATION	2.918894546769356E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999708110545323	WITHOUT_CLASSIFICATION	2.918894546769356E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999708110545323	WITHOUT_CLASSIFICATION	2.918894546769356E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999708110545323	WITHOUT_CLASSIFICATION	2.918894546769356E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999708110545323	WITHOUT_CLASSIFICATION	2.918894546769356E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999708110545323	WITHOUT_CLASSIFICATION	2.918894546769356E-4	DESIGN
trim extension to try other options	WITHOUT_CLASSIFICATION	0.9995103098904479	WITHOUT_CLASSIFICATION	4.896901095520873E-4	DESIGN
trim extension to try other options	WITHOUT_CLASSIFICATION	0.9995103098904479	WITHOUT_CLASSIFICATION	4.896901095520873E-4	DESIGN
Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9995149999102687	WITHOUT_CLASSIFICATION	4.8500008973129105E-4	DESIGN
end suffix iteration	WITHOUT_CLASSIFICATION	0.9998950379592961	WITHOUT_CLASSIFICATION	1.0496204070380985E-4	DESIGN
end suffix iteration	WITHOUT_CLASSIFICATION	0.9998950379592961	WITHOUT_CLASSIFICATION	1.0496204070380985E-4	DESIGN
Unfortunately, the number of digits in the exponent is not clearly defined in Ruby documentation. This is a platform/version-dependent behavior. On Linux/Mac/Cygwinnix, two digits are used. On Windows, 3 digits are used. It is desirable for JRuby to have consistent behavior, and the two digits behavior was selected. This is also in sync with "Java-native" sprintf behavior (java.util.Formatter). E or e	WITHOUT_CLASSIFICATION	0.7827715555165133	WITHOUT_CLASSIFICATION	0.21722844448348658	DESIGN
Represents the the dynamic portion of scoping information. The variableValues are the values of assigned local or block variables. The staticScope identifies which sort of scope this is (block or local). Properties of Dynamic Scopes: 1. static and dynamic scopes have the same number of names to values 2. size of variables (and thus names) is determined during parsing. So those structured do not need to change FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents. This is harmless (other than wasting memory), but we should not do that. We can fix this in two ways: 1. Fix all callers 2. Check parent that is passed in and make if new instance is local, then its parent is not local	WITHOUT_CLASSIFICATION	0.99999903590044	DESIGN	9.640995598903549E-7	WITHOUT_CLASSIFICATION
This method handles '' patterns and delegates to fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9988401888961143	WITHOUT_CLASSIFICATION	0.001159811103885717	DESIGN
Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999484834594232	WITHOUT_CLASSIFICATION	5.1516540576875065E-5	DESIGN
double precision, native double precision, native	WITHOUT_CLASSIFICATION	0.9999516452995236	WITHOUT_CLASSIFICATION	4.835470047643814E-5	DESIGN
64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9997242060237932	WITHOUT_CLASSIFICATION	2.757939762067737E-4	DESIGN
Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999893067951107	WITHOUT_CLASSIFICATION	1.0693204889203034E-5	DESIGN
calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9997813713355975	WITHOUT_CLASSIFICATION	2.1862866440242447E-4	DESIGN
processes seem to have some peculiar locking sequences, so we need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.999854843532915	WITHOUT_CLASSIFICATION	1.4515646708494293E-4	DESIGN
MRI behavior: for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9946156103091569	WITHOUT_CLASSIFICATION	0.005384389690843039	DESIGN
this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9955417635456263	WITHOUT_CLASSIFICATION	0.0044582364543736975	DESIGN
exec needs to behave differently in-process, because it's technically supposed to replace the calling process. So if we're supposed to run in-process, we allow it to use the default streams and not use pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.5899955445390782	WITHOUT_CLASSIFICATION	0.4100044554609219	DESIGN
snip off ruby or jruby command from list of arguments leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999774169608425	WITHOUT_CLASSIFICATION	2.2583039157529704E-5	DESIGN
The problem we trying to solve below: STDIN in Java is blocked and non-interruptible, so if we invoke read on it, we might never be able to interrupt such thread. So, we use in.available() to see if there is any input ready, and only then read it. But this approach can't tell whether the end of stream reached or not, so we might end up looping right at the end of the stream. Well, at least, we can improve the situation by checking if some input was ever available, and if so, not checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9808353366099551	WITHOUT_CLASSIFICATION	0.019164663390044908	DESIGN
first digit is always printed	WITHOUT_CLASSIFICATION	0.9991851728266185	WITHOUT_CLASSIFICATION	8.148271733815106E-4	DESIGN
an empirically derived rule: precision applies to significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9995410370165596	WITHOUT_CLASSIFICATION	4.5896298344037903E-4	DESIGN
an official rule, clarified: if the exponent <clarif>after adjusting for exponent form</clarif> is < -4, or the exponent <clarif>after adjusting for exponent form</clarif> is greater than the precision, use exponent form	WITHOUT_CLASSIFICATION	0.999926812919854	WITHOUT_CLASSIFICATION	7.318708014596502E-5	DESIGN
in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9900191952103312	WITHOUT_CLASSIFICATION	0.009980804789668797	DESIGN
now some data...	WITHOUT_CLASSIFICATION	0.9995191188203181	WITHOUT_CLASSIFICATION	4.8088117968181885E-4	DESIGN
now some data...	WITHOUT_CLASSIFICATION	0.9995191188203181	WITHOUT_CLASSIFICATION	4.8088117968181885E-4	DESIGN
MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9998579316002041	WITHOUT_CLASSIFICATION	1.42068399795851E-4	DESIGN
else catch oversize below	WITHOUT_CLASSIFICATION	0.9999193207305811	WITHOUT_CLASSIFICATION	8.067926941886236E-5	DESIGN
calculation for simple (and typical) case, adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9969410461256825	WITHOUT_CLASSIFICATION	0.0030589538743174263	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9995210829193439	WITHOUT_CLASSIFICATION	4.7891708065602974E-4	DESIGN
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9981460677816589	WITHOUT_CLASSIFICATION	0.0018539322183410013	DESIGN
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9981460677816589	WITHOUT_CLASSIFICATION	0.0018539322183410013	DESIGN
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9981460677816589	WITHOUT_CLASSIFICATION	0.0018539322183410013	DESIGN
could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9395950572969188	WITHOUT_CLASSIFICATION	0.06040494270308112	DESIGN
We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9998561339498386	WITHOUT_CLASSIFICATION	1.4386605016136202E-4	DESIGN
call chmod after we created the RandomAccesFile because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9934316074169378	WITHOUT_CLASSIFICATION	0.006568392583062135	DESIGN
attempt to set the permissions, if we have been passed a POSIX instance, and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.999919250158712	WITHOUT_CLASSIFICATION	8.074984128792818E-5	DESIGN
When reading into a heap buffer, the jvm allocates a temporary direct ByteBuffer of the requested size. To avoid allocating a huge direct buffer when doing ludicrous reads (e.g. 1G or more) we split the read up into chunks of no more than 1M	WITHOUT_CLASSIFICATION	0.6020760119280661	WITHOUT_CLASSIFICATION	0.3979239880719339	DESIGN
If it is a file channel, then we can pre-allocate the output buffer to the total size of buffered + remaining bytes in file	WITHOUT_CLASSIFICATION	0.9999608104867471	WITHOUT_CLASSIFICATION	3.9189513252836716E-5	DESIGN
Cannot discern the total read length - allocate at least enough for the buffered data	WITHOUT_CLASSIFICATION	0.9998279232224989	WITHOUT_CLASSIFICATION	1.72076777501129E-4	DESIGN
Copy what is in the buffer, if there is some buffered data	WITHOUT_CLASSIFICATION	0.9998150119295419	WITHOUT_CLASSIFICATION	1.8498807045811577E-4	DESIGN
append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9819076264453585	WITHOUT_CLASSIFICATION	0.01809237355464156	DESIGN
already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999575885540456	WITHOUT_CLASSIFICATION	4.24114459544106E-5	DESIGN
reset buffer	WITHOUT_CLASSIFICATION	0.9996323704454997	WITHOUT_CLASSIFICATION	3.676295545002782E-4	DESIGN
Synchronize and re-check to avoid creating more than one Selector per provider	WITHOUT_CLASSIFICATION	0.9952225130679293	WITHOUT_CLASSIFICATION	0.0047774869320707436	DESIGN
TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.7608246915819826	DESIGN	0.23917530841801726	WITHOUT_CLASSIFICATION
Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.5333568681561066	DESIGN	0.4666431318438933	WITHOUT_CLASSIFICATION
Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999917343960227	WITHOUT_CLASSIFICATION	8.265603977325357E-6	DESIGN
value equality result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999760469465727	WITHOUT_CLASSIFICATION	2.3953053427243504E-5	DESIGN
Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9987873880372228	WITHOUT_CLASSIFICATION	0.0012126119627772923	DESIGN
Since we don't have any other error reporting mechanism, we add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999988776090618	WITHOUT_CLASSIFICATION	1.1223909382277123E-6	DESIGN
change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9991816225979704	WITHOUT_CLASSIFICATION	8.183774020296424E-4	DESIGN
Fixme: Do we need the check or does Main.java not call this...they should consolidate	DESIGN	0.965259375563861	WITHOUT_CLASSIFICATION	0.034740624436139046	DESIGN
FIXME: move out of this class!	DESIGN	0.9800852005173332	DESIGN	0.019914799482666907	WITHOUT_CLASSIFICATION
this is a rather ugly hack, but similar to MRI. See hash.c:ruby_setenv and similar in MRI we search all keys for a case-insensitive match, and use that	DESIGN	0.9449147905575972	DESIGN	0.05508520944240285	WITHOUT_CLASSIFICATION
FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9951023533646454	DESIGN	0.00489764663535464	WITHOUT_CLASSIFICATION
FIXME: Don't allow multiple threads to do this at once	DESIGN	0.9876863449342721	DESIGN	0.012313655065727949	WITHOUT_CLASSIFICATION
TODO: eliminate?	DESIGN	0.528823705361872	WITHOUT_CLASSIFICATION	0.47117629463812793	DESIGN
TODO: People extending GzipWriter/reader will break. Find better way here.	DESIGN	0.9974808780402176	DESIGN	0.0025191219597824094	WITHOUT_CLASSIFICATION
For JRUBY-2759, when MET choose CET timezone to work around Joda	DESIGN	0.7678319178651383	DESIGN	0.2321680821348617	WITHOUT_CLASSIFICATION
we might need to perform a DST correction	DESIGN	0.9946217032099552	WITHOUT_CLASSIFICATION	0.005378296790044834	DESIGN
rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9967904186858026	WITHOUT_CLASSIFICATION	0.0032095813141972537	DESIGN
rb_ary_push_m FIXME: Whis is this named "push_m"?	DESIGN	0.7946951922852233	DESIGN	0.20530480771477672	WITHOUT_CLASSIFICATION
from DUP_SETUP rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9967904186858026	WITHOUT_CLASSIFICATION	0.0032095813141972537	DESIGN
TODO: ary_sort_check should be done here	DESIGN	0.9902495271130628	DESIGN	0.009750472886937155	WITHOUT_CLASSIFICATION
TODO: ary_sort_check should be done here	DESIGN	0.9902495271130628	DESIGN	0.009750472886937155	WITHOUT_CLASSIFICATION
TODO: is this correct ?	DESIGN	0.99450551197719	DESIGN	0.00549448802281012	WITHOUT_CLASSIFICATION
TODO: make more efficient by not creating IRubyArray[]	DESIGN	0.8982853727198042	DESIGN	0.10171462728019579	WITHOUT_CLASSIFICATION
TODO: list.subList(from, to).clear() is supposed to clear the sublist from the list. How can we support this operation?	DESIGN	0.9999509411394086	DESIGN	4.9058860591290684E-5	WITHOUT_CLASSIFICATION
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9932179928867977	DESIGN	0.006782007113202269	WITHOUT_CLASSIFICATION
FIXME: This table will get moved into POSIX library so we can get all actual supported signals. This is a quick fix to support basic signals until that happens.	DESIGN	0.9993750531002094	DESIGN	6.249468997906101E-4	WITHOUT_CLASSIFICATION
The implementations of these are all bonus (see TODO above) I was going to throw an error from these, but it appears to be the wrong place to do it.	DESIGN	0.6271794686302768	DESIGN	0.3728205313697232	WITHOUT_CLASSIFICATION
TODO: number formatting here, MRI uses "%-.10g", 1.4 API is a must?	DESIGN	0.9986930908637606	DESIGN	0.0013069091362394312	WITHOUT_CLASSIFICATION
TODO: remove	DESIGN	0.8202481250102119	DESIGN	0.1797518749897881	WITHOUT_CLASSIFICATION
FIXME moved this here to get what's obviously a utility method out of IRubyObject. perhaps security methods should find their own centralized home at some point.	DESIGN	0.9999998861984002	DESIGN	1.1380159980159678E-7	WITHOUT_CLASSIFICATION
FIXME: Get rid of laziness and handle restricted access elsewhere	DESIGN	0.7950896052408049	DESIGN	0.2049103947591951	WITHOUT_CLASSIFICATION
TODO: Should frozen error have its own distinct class? If not should more share?	DESIGN	0.9989450558891032	DESIGN	0.0010549441108968517	WITHOUT_CLASSIFICATION
TODO: this is kinda gross	DESIGN	0.9987713314297081	DESIGN	0.0012286685702918559	WITHOUT_CLASSIFICATION
Not sure how well this works, but it works much better than just currentTimeMillis by itself.	DESIGN	0.5381503187265183	DESIGN	0.4618496812734818	WITHOUT_CLASSIFICATION
TODO: exec should replace the current process. This could be possible with JNA.	DESIGN	0.9997358643434541	DESIGN	2.6413565654595213E-4	WITHOUT_CLASSIFICATION
FIXME: In order for Thread to play well with the standard 'new' behavior, it must provide an allocator that can create empty object instances which initialize then fills with appropriate data.	DESIGN	0.9919225665937874	WITHOUT_CLASSIFICATION	0.008077433406212616	DESIGN
TODO: not sure that we should skip calling join() altogether. Thread.join() has some implications for Java Memory Model, etc.	DESIGN	0.9274547548574027	DESIGN	0.07254524514259729	WITHOUT_CLASSIFICATION
FIXME: There's some code duplication here with RubyObject#inspect	DESIGN	0.9812770336166895	DESIGN	0.0187229663833105	WITHOUT_CLASSIFICATION
FIXME: This should probably do some translation from Ruby priority levels to Java priority levels (until we have green threads)	DESIGN	0.9990154440996479	DESIGN	9.845559003520475E-4	WITHOUT_CLASSIFICATION
TODO: no java stringity	DESIGN	0.8846380369260061	DESIGN	0.11536196307399395	WITHOUT_CLASSIFICATION
need to reexamine this	DESIGN	0.9759187367925843	WITHOUT_CLASSIFICATION	0.02408126320741563	DESIGN
TODO: These were missing, so we're not handling them elsewhere?	DESIGN	0.7957944792124353	DESIGN	0.2042055207875647	WITHOUT_CLASSIFICATION
TODO: why are we duplicating the constants here, and then in File::Constants below? File::Constants is included in IO.	DESIGN	0.6001880448239727	DESIGN	0.3998119551760272	WITHOUT_CLASSIFICATION
TODO: this method is not present in MRI!	DESIGN	0.9918416771666153	DESIGN	0.008158322833384713	WITHOUT_CLASSIFICATION
TODO: This is also defined in the MetaClass too...Consolidate somewhere.	DESIGN	0.5323313526557938	DESIGN	0.46766864734420627	WITHOUT_CLASSIFICATION
Something wrong we don't know the cwd... TODO: Is this behavior really desirable? /mov	DESIGN	0.999828501736064	DESIGN	1.7149826393593584E-4	WITHOUT_CLASSIFICATION
Fixme: This does not have exact same semantics as RubyArray.join, but they probably could be consolidated (perhaps as join(args[], sep, doChomp)).	DESIGN	0.9624349769173197	DESIGN	0.03756502308268032	WITHOUT_CLASSIFICATION
TODO should this be deprecated ? (to be efficient, internals should deal with RubyHash directly)	DESIGN	0.9998853874888092	DESIGN	1.1461251119079844E-4	WITHOUT_CLASSIFICATION
TODO: Implement tty? and isatty. We have no real capability to determine this from java, but if we could set tty status, then we could invoke jruby differently to allow stdin to return true on this. This would allow things like cgi.rb to work properly.	DESIGN	0.9984522154656278	DESIGN	0.0015477845343721884	WITHOUT_CLASSIFICATION
TODO: better error handling	DESIGN	0.996512425059606	DESIGN	0.0034875749403939604	WITHOUT_CLASSIFICATION
this seems unlikely to happen unless it's a totally bogus fileno ...so do we even need to bother trying to create one?	DESIGN	0.9997674674547736	WITHOUT_CLASSIFICATION	2.325325452263836E-4	DESIGN
IN FACT, we should probably raise an error, yes?	DESIGN	0.8634894886817006	WITHOUT_CLASSIFICATION	0.1365105113182995	DESIGN
TODO: Ruby reuses this logic for other "write" behavior by checking if it's an IO and calling write again	DESIGN	0.8752839590861623	DESIGN	0.12471604091383776	WITHOUT_CLASSIFICATION
FIXME we should probably still be dyncalling 'write' here	DESIGN	0.9875784404795093	DESIGN	0.012421559520490745	WITHOUT_CLASSIFICATION
TODO: This version differs from ioctl by checking whether fcntl exists and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9996849773393809	DESIGN	3.150226606190853E-4	WITHOUT_CLASSIFICATION
FIXME: I don't like the null checks here	DESIGN	0.934511691300894	DESIGN	0.06548830869910598	WITHOUT_CLASSIFICATION
TODO: handle writing into original buffer better	DESIGN	0.9986686912975383	DESIGN	0.001331308702461638	WITHOUT_CLASSIFICATION
TODO: is this the right thing to do?	DESIGN	0.9993780060021399	DESIGN	6.219939978601588E-4	WITHOUT_CLASSIFICATION
TODO: This isn't an exact port of MRI's pipe behavior, so revisit	DESIGN	0.9962706526192269	DESIGN	0.0037293473807730273	WITHOUT_CLASSIFICATION
FIXME: If NativeException is expected to be used from Ruby code, it should provide a real allocator to be used. Otherwise Class.new will fail, as will marshalling. JRUBY-415	DESIGN	0.999268169887992	DESIGN	7.318301120079507E-4	WITHOUT_CLASSIFICATION
FIXME: finalizer should be dupped here	DESIGN	0.9855502379149481	DESIGN	0.014449762085051944	WITHOUT_CLASSIFICATION
rb_obj_id Return the internal id of an object. FIXME: Should this be renamed to match its ruby name?	DESIGN	0.9894551499719416	DESIGN	0.010544850028058356	WITHOUT_CLASSIFICATION
FIXME: Obvious issue that not all platforms can display all attributes. Ugly hacks. Using generic posix library makes pushing inspect behavior into specific system impls rather painful.	DESIGN	0.9993693511009334	DESIGN	6.306488990667375E-4	WITHOUT_CLASSIFICATION
Workaround for JRUBY-4149	DESIGN	0.9850629261881598	WITHOUT_CLASSIFICATION	0.01493707381184012	DESIGN
TODO: NOT_ALLOCATABLE_ALLOCATOR may be ok here, but it's unclear how Structs work with marshalling. Confirm behavior and ensure we're doing this correctly. JRUBY-415	DESIGN	0.9774465573224185	DESIGN	0.022553442677581595	WITHOUT_CLASSIFICATION
FIXME: This is copied code from RubyArray. Both RE, Struct, and Array should share one impl This is also hacky since I construct ruby objects to access ruby arrays through aref instead of something lower.	DESIGN	0.9993244882963236	DESIGN	6.755117036764376E-4	WITHOUT_CLASSIFICATION
FIXME: We should not be regenerating this over and over	DESIGN	0.9970024860171071	DESIGN	0.0029975139828929435	WITHOUT_CLASSIFICATION
FIXME: This is probably not very efficient, since it loads all methods for each call	DESIGN	0.9987880066039405	DESIGN	0.0012119933960594508	WITHOUT_CLASSIFICATION
TODO: Consider a better way of synchronizing	DESIGN	0.9991773032447921	DESIGN	8.226967552079083E-4	WITHOUT_CLASSIFICATION
FIXME: Why was this using a FullFunctionCallbackMethod before that did callSuper?	DESIGN	0.9150910848520236	DESIGN	0.08490891514797642	WITHOUT_CLASSIFICATION
A cloned method now belongs to a new class. Set it. TODO: Make DynamicMethod immutable	DESIGN	0.9121428839844002	WITHOUT_CLASSIFICATION	0.08785711601559978	DESIGN
FIXME: figure out why we get null sometimes	DESIGN	0.9868886428080351	DESIGN	0.013111357191964913	WITHOUT_CLASSIFICATION
FIXME: Can get optimized for IEqlNode	DESIGN	0.8439302254521075	DESIGN	0.15606977454789253	WITHOUT_CLASSIFICATION
rb_mod_remove_cvar FIXME: any good reason to have two identical methods? (same as remove_class_variable)	DESIGN	0.8427128922235518	DESIGN	0.15728710777644814	WITHOUT_CLASSIFICATION
FIXME: these descriptions should probably be moved out, to Constantine project which deals with all platform-dependent constants.	DESIGN	0.9997738104466607	DESIGN	2.261895533393557E-4	WITHOUT_CLASSIFICATION
TODO: what about n arg?	DESIGN	0.9620973486727736	DESIGN	0.03790265132722645	WITHOUT_CLASSIFICATION
TODO: rounding mode should not be hard-coded. See #mode.	DESIGN	0.9921818049429589	DESIGN	0.007818195057041023	WITHOUT_CLASSIFICATION
regular division with some default precision TODO: proper algorithm to set the precision	DESIGN	0.9689967691188124	DESIGN	0.031003230881187574	WITHOUT_CLASSIFICATION
TODO: better algorithm to set precision needed	DESIGN	0.9954778140586512	DESIGN	0.004522185941348832	WITHOUT_CLASSIFICATION
FIXME: what should these really be? Numeric? assert x instanceof RubyComplex && y instanceof RubyComplex;	DESIGN	0.999993465831435	DESIGN	6.534168565062696E-6	WITHOUT_CLASSIFICATION
FIXME: what should this really be? assert x instanceof RubyComplex;	DESIGN	0.999996133181786	DESIGN	3.86681821394955E-6	WITHOUT_CLASSIFICATION
FIXME: the code below is a copy of RubyIO.puts, and we should avoid copy-paste.	DESIGN	0.9801888583351464	DESIGN	0.019811141664853652	WITHOUT_CLASSIFICATION
Yow...this is still ugly	DESIGN	0.9803442773194239	WITHOUT_CLASSIFICATION	0.019655722680576113	DESIGN
end hack	DESIGN	0.8497666066587856	DESIGN	0.15023339334121444	WITHOUT_CLASSIFICATION
TODO: Should next and return also catch here?	DESIGN	0.9592795491912693	DESIGN	0.040720450808730574	WITHOUT_CLASSIFICATION
TODO: Generalize this type-checking code into IRubyObject helper.	DESIGN	0.9973144844895175	DESIGN	0.002685515510482495	WITHOUT_CLASSIFICATION
TODO: newTypeError does not offer enough for ruby error string...	DESIGN	0.8277274673321052	DESIGN	0.17227253266789477	WITHOUT_CLASSIFICATION
FIXME: If true array is common enough we should pre-allocate and stick somewhere	DESIGN	0.5953610287129687	WITHOUT_CLASSIFICATION	0.40463897128703136	DESIGN
TODO: This is almost RubyModule#instance_methods on the metaClass. Perhaps refactor.	DESIGN	0.9963139094147808	DESIGN	0.0036860905852190255	WITHOUT_CLASSIFICATION
The following three methods must be defined fast, since they expect to modify the current frame (i.e. they expect no frame will be allocated for them). JRUBY-1185.	DESIGN	0.999998604162326	WITHOUT_CLASSIFICATION	1.3958376740052896E-6	DESIGN
FIXME: I think this chunk is equivalent to MRI id2name (and not our public method id2name). Make into method if used more than once.	DESIGN	0.9999981558453588	DESIGN	1.844154641168263E-6	WITHOUT_CLASSIFICATION
TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9553853246531941	WITHOUT_CLASSIFICATION	0.04461467534680597	DESIGN
TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9553853246531941	WITHOUT_CLASSIFICATION	0.04461467534680597	DESIGN
TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9553853246531941	WITHOUT_CLASSIFICATION	0.04461467534680597	DESIGN
optional args, so we have IRubyObject[] TODO: confirm	DESIGN	0.5275291772663857	WITHOUT_CLASSIFICATION	0.4724708227336143	DESIGN
TODO: Split this into two sub-classes so that name and constNode can be specified seperately.	DESIGN	0.9994419989743999	DESIGN	5.580010256000938E-4	WITHOUT_CLASSIFICATION
TODO: wire into new exception handling mechanism	DESIGN	0.9619435452228625	DESIGN	0.03805645477713755	WITHOUT_CLASSIFICATION
FIXME: ConstDecl could be two seperate classes (or done differently since constNode and name never exist at the same time.	DESIGN	0.6426617944456579	DESIGN	0.3573382055543422	WITHOUT_CLASSIFICATION
TODO: do above but not below for additional newline nodes	DESIGN	0.5346538713830405	WITHOUT_CLASSIFICATION	0.46534612861695945	DESIGN
TODO: Figure out how this can happen and possibly remove	DESIGN	0.9923441584772261	DESIGN	0.007655841522773939	WITHOUT_CLASSIFICATION
TODO: At least ParserSupport.attrset passes argsNode as null. ImplicitNil is wrong magic for setupArgs since it will IRubyObject[] { nil }. So we need to figure out a nice fast null pattern for setupArgs. assert argsNode != null : "receiverNode is not null";	DESIGN	0.9999900130082277	DESIGN	9.986991772246341E-6	WITHOUT_CLASSIFICATION
FIXME: JRUBY-3188 ends up with condition returning null...quick fix until I can dig into it	DESIGN	0.9996170256354656	DESIGN	3.829743645344002E-4	WITHOUT_CLASSIFICATION
FIXME: I use a for block to implement END node because we need a proc which captures its enclosing scope. ForBlock now represents these node and should be renamed.	DESIGN	0.9997156944969018	DESIGN	2.8430550309821066E-4	WITHOUT_CLASSIFICATION
method has more than 500 lines; we'll need to split it and therefore need to use a heap-based scope	DESIGN	0.7058074807109195	WITHOUT_CLASSIFICATION	0.29419251928908047	DESIGN
TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.7606072151481524	WITHOUT_CLASSIFICATION	0.2393927848518477	DESIGN
If it's a single-arg when but contains an array, we know it's a real literal array FIXME: This is a gross way to figure it out; parser help similar to yield argument passing (expandArguments) would be better	DESIGN	0.9999984446402557	DESIGN	1.5553597442782355E-6	WITHOUT_CLASSIFICATION
TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.7606072151481524	WITHOUT_CLASSIFICATION	0.2393927848518477	DESIGN
XXX: const lookup can trigger const_missing; is that enough to warrant it always being executed?	DESIGN	0.8931975019431576	WITHOUT_CLASSIFICATION	0.10680249805684243	DESIGN
if body is a rescue node, inspect its pieces separately to avoid it disabling all optz TODO: this is gross.	DESIGN	0.5500331160325004	DESIGN	0.4499668839674996	WITHOUT_CLASSIFICATION
if body is a rescue node, inspect its pieces separately to avoid it disabling all optz TODO: this is gross.	DESIGN	0.5500331160325004	DESIGN	0.4499668839674996	WITHOUT_CLASSIFICATION
FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.9999383795588735	DESIGN	6.16204411264108E-5	WITHOUT_CLASSIFICATION
TODO: This filtering is kind of gross...it would be nice to get some parser help here	DESIGN	0.9999344268013508	DESIGN	6.557319864911826E-5	WITHOUT_CLASSIFICATION
FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.9999383795588735	DESIGN	6.16204411264108E-5	WITHOUT_CLASSIFICATION
arguments compilers always create IRubyObject[], but we want to use RubyArray.concat here; FIXME: as a result, this is NOT efficient, since it creates and then later unwraps an array	DESIGN	0.9988797944001752	DESIGN	0.0011202055998247797	WITHOUT_CLASSIFICATION
FIXME: This is temporary since the variable compilers assume we want args already on stack for assignment. We just pop and continue with 1.9 args logic.	DESIGN	0.9743423825863395	DESIGN	0.02565761741366054	WITHOUT_CLASSIFICATION
TODO: reads/writes from frame TODO: information on scoping TODO: visibility?	DESIGN	0.6874850712923574	WITHOUT_CLASSIFICATION	0.3125149287076426	DESIGN
for visibility checking without requiring frame self TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9971431985330643	DESIGN	0.0028568014669357825	WITHOUT_CLASSIFICATION
TODO: cache?	DESIGN	0.8678098105967368	DESIGN	0.13219018940326327	WITHOUT_CLASSIFICATION
TODO: cache?	DESIGN	0.8678098105967368	DESIGN	0.13219018940326327	WITHOUT_CLASSIFICATION
index for the item this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.8360419876359069	WITHOUT_CLASSIFICATION	0.16395801236409313	DESIGN
if we don't have opt args, start after args (they will be assigned later) this is for crap like def foo(a = (b = true; 1)) which numbers b before a FIXME: only starting after required args, since opt args may access others and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.9856655895868053	WITHOUT_CLASSIFICATION	0.014334410413194724	DESIGN
FIXME: this really ought to be in clinit, but it doesn't matter much	DESIGN	0.9946556801784103	DESIGN	0.0053443198215897166	WITHOUT_CLASSIFICATION
install invokedynamic bootstrapper TODO need to abstract this setup behind another compiler interface	DESIGN	0.9316894041399371	DESIGN	0.06831059586006288	WITHOUT_CLASSIFICATION
FIXME: This isn't right for within ensured/rescued code	DESIGN	0.9372933431413353	DESIGN	0.06270665685866479	WITHOUT_CLASSIFICATION
SSS FIXME: Deprecated! Going forward, all instructions should come from the CFG	DESIGN	0.7841292792321544	DESIGN	0.21587072076784572	WITHOUT_CLASSIFICATION
SSS FIXME: Do we need to check if l is same as whatever popped?	DESIGN	0.5183486601511921	WITHOUT_CLASSIFICATION	0.4816513398488078	DESIGN
SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.7467678034377992	DESIGN	0.25323219656220064	WITHOUT_CLASSIFICATION
SSS FIXME: I added this in. Is this correct?	DESIGN	0.9992809534135786	DESIGN	7.190465864214628E-4	WITHOUT_CLASSIFICATION
SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.7467678034377992	DESIGN	0.25323219656220064	WITHOUT_CLASSIFICATION
SSS FIXME: Are we guaranteed that we splats dont head to multiple-assignment nodes! i.e. |(a,b)|?	DESIGN	0.9319379977967472	DESIGN	0.06806200220325277	WITHOUT_CLASSIFICATION
SSS FIXME: Can this return anything other than nil?	DESIGN	0.8256015197344112	DESIGN	0.1743984802655887	WITHOUT_CLASSIFICATION
SSS FIXME: What happens to the add class in this case??	DESIGN	0.9575001792840381	DESIGN	0.0424998207159618	WITHOUT_CLASSIFICATION
CON FIXME: I don't know how to make case be an expression...does that logic need to go here?	DESIGN	0.9985062352975028	DESIGN	0.001493764702497156	WITHOUT_CLASSIFICATION
SSS FIXME: Where is this set up? How is this diff from ClassVarDeclNode??	DESIGN	0.9933221902422535	DESIGN	0.006677809757746393	WITHOUT_CLASSIFICATION
SSS FIXME: Is this correct?	DESIGN	0.999311496667505	DESIGN	6.885033324949556E-4	WITHOUT_CLASSIFICATION
SSS FIXME: Used anywhere? I don't see calls to this anywhere public Operand buildDAsgnAssignment(Node node, IR_Scope s) { DAsgnNode dasgnNode = (DAsgnNode) node; s.getVariableCompiler().assignLocalVariable(dasgnNode.getIndex(), dasgnNode.getDepth()); }	DESIGN	0.6195809080072334	DESIGN	0.38041909199276663	WITHOUT_CLASSIFICATION
SSS FIXME: Receiver -- this is the class meta object basically? Operand receiver = build(defsNode.getReceiverNode(), s);	DESIGN	0.7630562166655068	DESIGN	0.23694378333449326	WITHOUT_CLASSIFICATION
self = args[0] SSS FIXME: Verify that this is correct	DESIGN	0.8491890297795331	DESIGN	0.15081097022046688	WITHOUT_CLASSIFICATION
SSS FIXME: Is this correct?	DESIGN	0.999311496667505	DESIGN	6.885033324949556E-4	WITHOUT_CLASSIFICATION
SSS FIXME: 1. Is the ordering correct? (poll before next)	DESIGN	0.9896924156362115	DESIGN	0.01030758436378859	WITHOUT_CLASSIFICATION
add a "self" recv here TODO: is this right?	DESIGN	0.9999482382474115	DESIGN	5.176175258842636E-5	WITHOUT_CLASSIFICATION
SSS FIXME: Is this correctly placed ... at the end of the loop iteration?	DESIGN	0.8321227081040348	DESIGN	0.16787729189596515	WITHOUT_CLASSIFICATION
SSS FIXME: Where does this go? m.setLinePosition(arrayNode.getPosition());	DESIGN	0.7933477301783959	DESIGN	0.20665226982160412	WITHOUT_CLASSIFICATION
SSS FIXME: I could make IR_Loop a scope too ... semantically, it is a scope, but, functionally, not sure if this is required yet ...	DESIGN	0.9999342574410356	DESIGN	6.574255896448883E-5	WITHOUT_CLASSIFICATION
SSS FIXME: Should this be a string literal or a string? Dummy class for the script	DESIGN	0.9886375415195156	DESIGN	0.01136245848048452	WITHOUT_CLASSIFICATION
SSS FIXME: Does int suffice, or do we need long?	DESIGN	0.9465932864685498	DESIGN	0.053406713531450246	WITHOUT_CLASSIFICATION
SSS FIXME: Correct? Where does closure arg come from?	DESIGN	0.9045196767581573	WITHOUT_CLASSIFICATION	0.09548032324184276	DESIGN
SSS FIXME: Should I have a reference to the IR_loop that is being retried?	DESIGN	0.9781893093290662	DESIGN	0.021810690670933764	WITHOUT_CLASSIFICATION
Simplify the variables too -- to keep these variables in sync with what is actually used in the when clauses This is not required for correctness reasons, but only for performance reasons.	DESIGN	0.9335757017355216	DESIGN	0.06642429826447849	WITHOUT_CLASSIFICATION
SSS FIXME: This should never get called for constant svalues	DESIGN	0.8912445908041038	DESIGN	0.10875540919589617	WITHOUT_CLASSIFICATION
SSS FIXME: Should this be Operand or CompoundString? Can it happen that symbols are built out of other than compound strings? Or can it happen during optimizations that this becomes a generic operand?	DESIGN	0.991291366495855	DESIGN	0.008708633504145094	WITHOUT_CLASSIFICATION
TODO: need to get this back into the method signature...now is too late...	DESIGN	0.9983855799406111	DESIGN	0.001614420059388952	WITHOUT_CLASSIFICATION
Hack in to replace usual readline with this	DESIGN	0.9903409398336593	DESIGN	0.009659060166340702	WITHOUT_CLASSIFICATION
bit risky if someone changes completor, but useful for method calls	DESIGN	0.9985966013781744	WITHOUT_CLASSIFICATION	0.0014033986218256209	DESIGN
FIXME: This determine module is in a strange location and should somehow be in block	DESIGN	0.9884754893861242	DESIGN	0.011524510613875888	WITHOUT_CLASSIFICATION
Create block for this iter node FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.5985322659867015	DESIGN	0.4014677340132983	WITHOUT_CLASSIFICATION
we basically ignore protocol. let someone report it...	DESIGN	0.972802851729792	WITHOUT_CLASSIFICATION	0.027197148270207992	DESIGN
Workaround for a bug in Sun's JDK 1.5.x, see http:bugs.sun.com/bugdatabase/view_bug.do?bug_id=6303753	DESIGN	0.9761135769301131	WITHOUT_CLASSIFICATION	0.02388642306988683	DESIGN
context is null, wipe out the SoftReference (this could be done with a reference queue)	DESIGN	0.9732366889981203	WITHOUT_CLASSIFICATION	0.0267633110018797	DESIGN
FIXME we want to eliminate these type casts when possible	DESIGN	0.997121959042039	DESIGN	0.0028780409579610166	WITHOUT_CLASSIFICATION
TODO: Determine whether we should perhaps store non-singleton class in the implementationClass	DESIGN	0.994669184302222	DESIGN	0.005330815697778012	WITHOUT_CLASSIFICATION
FIXME: set up a CallConfiguration for this	DESIGN	0.9331515791005265	DESIGN	0.0668484208994736	WITHOUT_CLASSIFICATION
FIXME: set up a call configuration for this	DESIGN	0.9907050891069319	DESIGN	0.009294910893068048	WITHOUT_CLASSIFICATION
TODO: make this do specific-arity calling	DESIGN	0.92631268831234	DESIGN	0.07368731168766002	WITHOUT_CLASSIFICATION
add 'new' with full signature, so it's guaranteed to be directly accessible TODO: no need for this to be a full, formal JVM signature	DESIGN	0.9954543552132554	DESIGN	0.004545644786744578	WITHOUT_CLASSIFICATION
add method with full signature, so it's guaranteed to be directly accessible TODO: no need for this to be a full, formal JVM signature	DESIGN	0.9969675297864774	DESIGN	0.003032470213522531	WITHOUT_CLASSIFICATION
FIXME This whole thing could probably be implemented as a module and mixed into appropriate classes, especially if it uses either IOInput/OutputStream or is smart about the kind of IO-like object it's being used against.	DESIGN	0.999999980656793	DESIGN	1.934320695959573E-8	WITHOUT_CLASSIFICATION
using IOInputStream may not be the most performance way, but it's easy.	DESIGN	0.9996848754449206	WITHOUT_CLASSIFICATION	3.151245550794634E-4	DESIGN
using IOOutputStream may not be the most performance way, but it's easy.	DESIGN	0.9996848754449206	WITHOUT_CLASSIFICATION	3.151245550794634E-4	DESIGN
using IOChannel may not be the most performant way, but it's easy.	DESIGN	0.9992558982368775	WITHOUT_CLASSIFICATION	7.441017631224772E-4	DESIGN
these extra arrays are really unfortunate; split some of these paths out to eliminate?	DESIGN	0.9828636508921391	WITHOUT_CLASSIFICATION	0.0171363491078609	DESIGN
TODO: WRONG - get interfaces from class	DESIGN	0.8927603210591472	DESIGN	0.10723967894085278	WITHOUT_CLASSIFICATION
TODO: catch exception if constant is already set by other thread	DESIGN	0.8237011922019318	WITHOUT_CLASSIFICATION	0.17629880779806822	DESIGN
TODO: public only?	DESIGN	0.6195195030753953	DESIGN	0.38048049692460484	WITHOUT_CLASSIFICATION
see note below re: 2-field kludge	DESIGN	0.8585276394935395	WITHOUT_CLASSIFICATION	0.14147236050646056	DESIGN
TODO: protected methods. this is going to require a rework of some of the mechanism.	DESIGN	0.9659335843925078	DESIGN	0.034066415607492344	WITHOUT_CLASSIFICATION
TODO: protected methods. this is going to require a rework of some of the mechanism.	DESIGN	0.9659335843925078	DESIGN	0.034066415607492344	WITHOUT_CLASSIFICATION
FIXME: do we really want 'declared' methods? includes private/protected, and does _not_ include superclass methods	DESIGN	0.9502610301878203	DESIGN	0.04973896981217977	WITHOUT_CLASSIFICATION
FIXME: This doesn't actually support anything but String	DESIGN	0.5571034262627983	DESIGN	0.4428965737372018	WITHOUT_CLASSIFICATION
again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.7510773912970271	DESIGN	0.24892260870297298	WITHOUT_CLASSIFICATION
again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.7510773912970271	DESIGN	0.24892260870297298	WITHOUT_CLASSIFICATION
this needs to be split, since conditional calling #inherited doesn't fit standard ruby semantics	DESIGN	0.9894991509941551	WITHOUT_CLASSIFICATION	0.010500849005844878	DESIGN
TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.6217606859595792	DESIGN	0.37823931404042077	WITHOUT_CLASSIFICATION
TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.6217606859595792	DESIGN	0.37823931404042077	WITHOUT_CLASSIFICATION
this covers the rare case of lower-case class names (and thus will fail 99.999% of the time). fortunately, we'll only do this once per package name. (and seriously, folks, look into best practices...)	DESIGN	0.9704818194263102	WITHOUT_CLASSIFICATION	0.029518180573689934	DESIGN
FIXME: we should also support orgs that use capitalized package names (including, embarrassingly, the one I work for), but this should be enabled by a system property, as the expected default behavior for an upper-case value should be (and is) to treat it as a class name, and raise an exception if it's not found	DESIGN	0.9977365407188447	DESIGN	0.0022634592811553414	WITHOUT_CLASSIFICATION
TODO: check for Java reserved names and raise exception if encountered	DESIGN	0.9536647980455566	WITHOUT_CLASSIFICATION	0.046335201954443406	DESIGN
upper-case package name TODO: top-level upper-case package was supported in the previous (Ruby-based) implementation, so leaving as is. see note at #getProxyOrPackageUnderPackage re: future approach below the top-level.	DESIGN	0.9679867565532637	DESIGN	0.03201324344673628	WITHOUT_CLASSIFICATION
FIXME: wtf is this? Why would these use the class?	DESIGN	0.999954282016624	DESIGN	4.57179833759957E-5	WITHOUT_CLASSIFICATION
FIXME: needs to be rethought	DESIGN	0.9524115272510777	DESIGN	0.04758847274892235	WITHOUT_CLASSIFICATION
TODO: specifying soft refs, may want to compare memory consumption, behavior with weak refs (specify WEAK in place of SOFT below)	DESIGN	0.54697974323165	WITHOUT_CLASSIFICATION	0.45302025676834995	DESIGN
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9979038134929826	DESIGN	0.0020961865070173082	WITHOUT_CLASSIFICATION
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9979038134929826	DESIGN	0.0020961865070173082	WITHOUT_CLASSIFICATION
if we get here, we found a matching method, use it TODO: choose narrowest method by continuing to search	DESIGN	0.524121208511519	WITHOUT_CLASSIFICATION	0.47587879148848106	DESIGN
TODO: Only setAccessible to account for pattern found by accessing constants included from a non-public interface. (aka java.util.zip.ZipConstants being implemented by many classes)	DESIGN	0.8991330978257277	WITHOUT_CLASSIFICATION	0.10086690217427227	DESIGN
TODO: Only setAccessible to account for pattern found by accessing constants included from a non-public interface. (aka java.util.zip.ZipConstants being implemented by many classes) TODO: not sure we need this at all, since we only expose public fields. field.setAccessible(true);	DESIGN	0.8192113076130247	DESIGN	0.1807886923869753	WITHOUT_CLASSIFICATION
FIXME: NOT_ALLOCATABLE_ALLOCATOR is probably not right here, since we might eventually want JavaArray to be marshallable. JRUBY-414	DESIGN	0.9977907134394108	DESIGN	0.0022092865605890756	WITHOUT_CLASSIFICATION
FIXME: do we really want 'declared' methods? includes private/protected, and does _not_ include superclass methods. also, the getDeclared calls may throw SecurityException if we're running under a restrictive security policy.	DESIGN	0.8925151909893458	DESIGN	0.10748480901065413	WITHOUT_CLASSIFICATION
don't bother to check if final method, it won't be there (not generated, can't be!)	DESIGN	0.9999903260793724	WITHOUT_CLASSIFICATION	9.673920627563846E-6	DESIGN
super calls from proxies must use reflected method FIXME: possible to make handles do the superclass call?	DESIGN	0.975629643258592	DESIGN	0.024370356741408014	WITHOUT_CLASSIFICATION
actual type does not exactly match method return type, re-get converter FIXME: when the only autoconversions are primitives, this won't be needed	DESIGN	0.8956142194578465	WITHOUT_CLASSIFICATION	0.10438578054215354	DESIGN
FIXME: Ideally JavaObject instances should be marshallable, which means that the JavaObject metaclass should have an appropriate allocator. JRUBY-414	DESIGN	0.8443994062006737	DESIGN	0.15560059379932645	WITHOUT_CLASSIFICATION
FIXME: shouldn't need @__java_ovrd_methods, just query locally defined methods.	DESIGN	0.721206633713898	WITHOUT_CLASSIFICATION	0.27879336628610185	DESIGN
We always prepend an org.jruby.proxy package to the beginning because java and javax packages are protected and signed jars prevent us generating new classes with those package names. See JRUBY-2439.	DESIGN	0.9998545334324896	WITHOUT_CLASSIFICATION	1.454665675103149E-4	DESIGN
TODO: Only used by interface implementation; eliminate it	DESIGN	0.9969646707225127	DESIGN	0.0030353292774873307	WITHOUT_CLASSIFICATION
Create block for this iter node FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.5985322659867015	DESIGN	0.4014677340132983	WITHOUT_CLASSIFICATION
modules are included with a shim class; we must find that shim to handle super() appropriately	DESIGN	0.9992287325498501	WITHOUT_CLASSIFICATION	7.712674501498274E-4	DESIGN
lame generics issues: making Segment class static and manually inserting cache reference to work around various problems generically referencing methods/vars across classes.	DESIGN	0.7485466692498561	DESIGN	0.251453330750144	WITHOUT_CLASSIFICATION
entry exists, proxy doesn't match. replace. this could happen if old proxy was gc'ed TODO: raise exception if stored proxy is non-null? (not gc'ed)	DESIGN	0.9005844792014787	DESIGN	0.0994155207985214	WITHOUT_CLASSIFICATION
FIXME: How much more obtuse can this be? Heredoc already parsed this and saved string...Do not parse..just return	DESIGN	0.9999848374703029	DESIGN	1.5162529697217348E-5	WITHOUT_CLASSIFICATION
ruby constants for strings (should this be moved somewhere else?)	DESIGN	0.8645011932558022	WITHOUT_CLASSIFICATION	0.1354988067441978	DESIGN
Hacky: Advance position to eat newline here....	DESIGN	0.9998123202582921	WITHOUT_CLASSIFICATION	1.876797417078071E-4	DESIGN
FIXME: Not sure what the semantics of transfer are cFiber.defineFastMethod("transfer", cb.getFastOptMethod("transfer"));	DESIGN	0.9971023245304929	DESIGN	0.002897675469507168	WITHOUT_CLASSIFICATION
ignore...bean doesn't get registered TODO: Why does that bother me?	DESIGN	0.7211867903516129	DESIGN	0.2788132096483871	WITHOUT_CLASSIFICATION
ignore...bean doesn't get registered TODO: Why does that bother me?	DESIGN	0.7211867903516129	DESIGN	0.2788132096483871	WITHOUT_CLASSIFICATION
ENEBO: Totally weird naming (in MRI is not allocated and is a local var name)	DESIGN	0.9589369112019379	WITHOUT_CLASSIFICATION	0.04106308879806209	DESIGN
FIXME: Remove this from grammars.	DESIGN	0.965523063669395	DESIGN	0.03447693633060492	WITHOUT_CLASSIFICATION
FIXME: Consider fixing node_assign itself rather than single case	DESIGN	0.7662587885806322	DESIGN	0.23374121141936766	WITHOUT_CLASSIFICATION
Workaround for JRUBY-2326 (MRI does not enter this production for some reason)	DESIGN	0.9074060742821295	WITHOUT_CLASSIFICATION	0.09259392571787045	DESIGN
FIXME: lose syntactical elements here (and others like this)	DESIGN	0.9785469207409723	DESIGN	0.021453079259027803	WITHOUT_CLASSIFICATION
ENEBO: Lots of optz in 1.9 parser here	DESIGN	0.9963474531748835	WITHOUT_CLASSIFICATION	0.003652546825116589	DESIGN
This is perhaps innefficient timewise? Optimal spacewise	DESIGN	0.7831739397263394	WITHOUT_CLASSIFICATION	0.21682606027366058	DESIGN
This is a dummy scope; we should find a way to make that more explicit	DESIGN	0.794614057239142	DESIGN	0.20538594276085792	WITHOUT_CLASSIFICATION
We clone dynamic scope because this will be a new instance of a block. Any previously captured instances of this block may still be around and we do not want to start overwriting those values when we create a new one. ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.9998182930995213	DESIGN	1.8170690047873724E-4	WITHOUT_CLASSIFICATION
TODO: This probably isn't the best hack, but it works until we can have different root frame setup for 1.9 easily.	DESIGN	0.9995860633112296	DESIGN	4.1393668877053367E-4	WITHOUT_CLASSIFICATION
FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9975427879138818	DESIGN	0.0024572120861181923	WITHOUT_CLASSIFICATION
FIXME: I think we need these pushed somewhere?	DESIGN	0.9996822670792387	DESIGN	3.177329207613387E-4	WITHOUT_CLASSIFICATION
FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9975427879138818	DESIGN	0.0024572120861181923	WITHOUT_CLASSIFICATION
FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9975427879138818	DESIGN	0.0024572120861181923	WITHOUT_CLASSIFICATION
XXX: Again, screwy evaling under previous frame's scope	DESIGN	0.9955534415140223	WITHOUT_CLASSIFICATION	0.004446558485977756	DESIGN
FIXME: This version is faster than the previous, but both suffer from a crucial flaw: It is impossible to create an ObjectSpace with an iterator that doesn't either: a. hold on to objects that might otherwise be collected or b. have no way to guarantee that a call to hasNext() will be correct or that a subsequent call to next() will produce an object. For our purposes, for now, this may be acceptable.	DESIGN	0.9986903436711905	DESIGN	0.0013096563288095794	WITHOUT_CLASSIFICATION
FIXME: Maybe not best place, but move it to a good home	DESIGN	0.9999999373184599	DESIGN	6.26815400275944E-8	WITHOUT_CLASSIFICATION
FIXME: This is gross. Don't do this.	DESIGN	0.807177672487333	DESIGN	0.192822327512667	WITHOUT_CLASSIFICATION
@author headius FIXME convert to enum ?	DESIGN	0.7917035624412913	DESIGN	0.20829643755870877	WITHOUT_CLASSIFICATION
FIXME: No, I don't like it.	DESIGN	0.6585364184793815	WITHOUT_CLASSIFICATION	0.3414635815206185	DESIGN
TODO: This is probably BAD...	DESIGN	0.9940979041083021	DESIGN	0.005902095891697981	WITHOUT_CLASSIFICATION
FIXME: not very efficient	DESIGN	0.996718246740605	DESIGN	0.0032817532593950333	WITHOUT_CLASSIFICATION
invoke callMethodMissing method directly TODO: this could be further optimized, since some DSLs hit method_missing pretty hard...	DESIGN	0.9861281658174819	DESIGN	0.013871834182518182	WITHOUT_CLASSIFICATION
TODO this is really ineffient, and potentially a problem everytime anyone require's something. we should try to make LoadPath a special array object.	DESIGN	0.9993983422614079	DESIGN	6.016577385920606E-4	WITHOUT_CLASSIFICATION
FIXME: inefficient; constructing a bignum just for dumping?	DESIGN	0.624340513586831	WITHOUT_CLASSIFICATION	0.37565948641316904	DESIGN
FIXME: not very efficient	DESIGN	0.996718246740605	DESIGN	0.0032817532593950333	WITHOUT_CLASSIFICATION
FIXME: not very efficient	DESIGN	0.996718246740605	DESIGN	0.0032817532593950333	WITHOUT_CLASSIFICATION
FIXME: not very efficient	DESIGN	0.996718246740605	DESIGN	0.0032817532593950333	WITHOUT_CLASSIFICATION
FIXME: not very efficient	DESIGN	0.996718246740605	DESIGN	0.0032817532593950333	WITHOUT_CLASSIFICATION
FIXME: this should go somewhere more generic -- maybe IdUtil	DESIGN	0.9980459164592052	DESIGN	0.0019540835407948834	WITHOUT_CLASSIFICATION
FIXME: potentially could just use ByteList here?	DESIGN	0.9973085015119937	DESIGN	0.002691498488006275	WITHOUT_CLASSIFICATION
FIXME: This is almost entirely duplicated from Main.java	DESIGN	0.8353715292135532	DESIGN	0.1646284707864468	WITHOUT_CLASSIFICATION
TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.929707885599045	DESIGN	0.07029211440095497	WITHOUT_CLASSIFICATION
TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.929707885599045	DESIGN	0.07029211440095497	WITHOUT_CLASSIFICATION
grrr, arghh, want to subclass sun.misc.FloatingDecimal, but can't, so we must do all this (the next 70 lines of code), which has already been done by FloatingDecimal.	DESIGN	0.982519660503001	WITHOUT_CLASSIFICATION	0.017480339496999085	DESIGN
it would be nice (and logical!) if exponent form behaved like E/e, and decimal form behaved like f, but no such luck. hence:	DESIGN	0.9941361648817926	WITHOUT_CLASSIFICATION	0.005863835118207416	DESIGN
This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.9983321962713699	WITHOUT_CLASSIFICATION	0.0016678037286301012	DESIGN
This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.9983321962713699	WITHOUT_CLASSIFICATION	0.0016678037286301012	DESIGN
TODO: get rid of this (lax returns 0.0, strict will throw)	DESIGN	0.9846469587194658	DESIGN	0.015353041280534137	WITHOUT_CLASSIFICATION
TODO: turn off the negative? will return -0.0 in lax mode	DESIGN	0.7749496548104117	DESIGN	0.22505034518958836	WITHOUT_CLASSIFICATION
FIXME: this probably belongs in a different package.	DESIGN	0.9993183708416314	DESIGN	6.816291583685989E-4	WITHOUT_CLASSIFICATION
TODO: It would be nice to throw a better error for this	DESIGN	0.9999477581984566	DESIGN	5.2241801543383075E-5	WITHOUT_CLASSIFICATION
TODO: It would be nice to throw a better error for this	DESIGN	0.9999477581984566	DESIGN	5.2241801543383075E-5	WITHOUT_CLASSIFICATION
FIXME: I don't like this	DESIGN	0.9910118121605708	DESIGN	0.00898818783942915	WITHOUT_CLASSIFICATION
TODO: It's perhaps just a coincidence that all the channels for which we should raise are instanceof SelectableChannel, since stdio is not...so this bothers me slightly. -CON	DESIGN	0.9998330138690005	DESIGN	1.6698613099946075E-4	WITHOUT_CLASSIFICATION
FIXME: Clearing read buffer here...is this appropriate?	DESIGN	0.8902932858001513	DESIGN	0.10970671419984865	WITHOUT_CLASSIFICATION
TODO this should entry into error handling somewhere	DESIGN	0.996032906561938	DESIGN	0.003967093438062011	WITHOUT_CLASSIFICATION
FIXME: This worries me a bit, since it could allocate a lot with a large newLength	DESIGN	0.9928703777686099	DESIGN	0.007129622231390046	WITHOUT_CLASSIFICATION
We use a highly uncommon string to represent the paragraph delimiter (100% soln not worth it)	DESIGN	0.9998307694477822	WITHOUT_CLASSIFICATION	1.6923055221778783E-4	DESIGN
TODO: Ruby does not seem to care about invalid numeric mode values I am not sure if ruby overflows here also...	DESIGN	0.9932751175917878	DESIGN	0.006724882408212247	WITHOUT_CLASSIFICATION
TODO: Make this more intelligible value	DESIGN	0.9532801034913637	DESIGN	0.0467198965086362	WITHOUT_CLASSIFICATION
XXX: do something?	DESIGN	0.9856426284183869	WITHOUT_CLASSIFICATION	0.014357371581613102	DESIGN
for visibility checking without requiring frame self TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9971431985330643	DESIGN	0.0028568014669357825	WITHOUT_CLASSIFICATION
for visibility checking without requiring frame self TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9971431985330643	DESIGN	0.0028568014669357825	WITHOUT_CLASSIFICATION
up to ten, stuff into tmp locals, load in reverse order, and assign FIXME: There's probably a slightly smarter way, but is it important?	DESIGN	0.920367972507652	DESIGN	0.07963202749234798	WITHOUT_CLASSIFICATION
index for the item this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.8360419876359069	WITHOUT_CLASSIFICATION	0.16395801236409313	DESIGN
if we don't have opt args, start after args (they will be assigned later) this is for crap like def foo(a = (b = true; 1)) which numbers b before a FIXME: only starting after required args, since opt args may access others and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.9856655895868053	WITHOUT_CLASSIFICATION	0.014334410413194724	DESIGN
SSS FIXME: These should get normally compiled or initialized some other way ... SSS FIXME: Parent/super-type info is incorrect! These are just placeholders for now .. this needs to be updated with real class objects later!	DESIGN	0.99999946151782	DESIGN	5.384821799531578E-7	WITHOUT_CLASSIFICATION
SSS FIXME: Move this code to some utils area .. or probably there is already a method for this in some jruby utils class Holy cow! Just to append two darned arrays!	DESIGN	0.9999857832057247	DESIGN	1.4216794275291467E-5	WITHOUT_CLASSIFICATION
SSS FIXME: This method (at least in the context of multiple assignment) is a little weird. It calls regular to_ary on the object. But, if it encounters a method_missing, the value is inserted into an 1-element array! try "a,b,c = 1" first; then define Fixnum.to_ary method and try it again. Ex: http:gist.github.com/163551	DESIGN	0.9973865069525714	DESIGN	0.002613493047428672	WITHOUT_CLASSIFICATION
This is for JRUBY-2988, since after a suspend the terminal seems to need to be reinitialized. Since we can't easily detect suspension, initialize after every readline. Probably not fast, but this is for interactive terminals anyway...so who cares?	DESIGN	0.9953761345872149	WITHOUT_CLASSIFICATION	0.004623865412785169	DESIGN
set up a field for the CacheEntry TODO: make this an array so it's not as much class metadata; similar to AbstractScript stuff	DESIGN	0.9548671983730854	DESIGN	0.04513280162691456	WITHOUT_CLASSIFICATION
exit monitor before making call FIXME: this not being in a finally is a little worrisome	DESIGN	0.992808211038675	DESIGN	0.007191788961325051	WITHOUT_CLASSIFICATION
FIXME: Added this because marshal_spec seemed to reconstitute objects without calling dataWrapStruct this resulted in object being null after unmarshalling...	DESIGN	0.879089089686442	WITHOUT_CLASSIFICATION	0.12091091031355793	DESIGN
if we get here, we found a matching method, use it TODO: choose narrowest method by continuing to search	DESIGN	0.524121208511519	WITHOUT_CLASSIFICATION	0.47587879148848106	DESIGN
We clone dynamic scope because this will be a new instance of a block. Any previously captured instances of this block may still be around and we do not want to start overwriting those values when we create a new one. ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.9998182930995213	DESIGN	1.8170690047873724E-4	WITHOUT_CLASSIFICATION
TODO: This is actually now returning the scope of whoever called Method#to_proc which is obviously wrong; but there's no scope to provide for many methods. It fixes JRUBY-2237, but needs a better solution.	DESIGN	0.9998762329442367	DESIGN	1.2376705576334934E-4	WITHOUT_CLASSIFICATION
FIXME: We should be getting this from the runtime rather than assume none? return runtime.getEncodingService().getEncoding(runtime.getDefaultExternalEncoding());	DESIGN	0.846848711103193	DESIGN	0.15315128889680693	WITHOUT_CLASSIFICATION
ignore...bean doesn't get registered TODO: Why does that bother me?	DESIGN	0.7211867903516129	DESIGN	0.2788132096483871	WITHOUT_CLASSIFICATION
This is a fairly specific hack for empty string, but it does the job	DESIGN	0.9968677852266976	DESIGN	0.00313221477330246	WITHOUT_CLASSIFICATION
XXX This constructor is a hack to implement the __END__ syntax. Converting a reader back into an InputStream doesn't generally work.	DESIGN	0.9999999789603413	DESIGN	2.1039658608452878E-8	WITHOUT_CLASSIFICATION
FIXME: Total hack to get flash in Rails marshalling/unmarshalling in session ok...We need to totally change marshalling to work with overridden core classes.	DESIGN	0.9999977208921689	DESIGN	2.2791078311454716E-6	WITHOUT_CLASSIFICATION
FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9999999969852055	DESIGN	3.01479448941664E-9	WITHOUT_CLASSIFICATION
We're not setting the provider or anything, but it seems that BouncyCastle does some internal things in its provider's constructor which require it to be executed in a secure context. Ideally this hack should be removed. See JRUBY-3919 and this BC bug: http:www.bouncycastle.org/jira/browse/BJA-227	DESIGN	0.999946688237609	DESIGN	5.3311762391108725E-5	WITHOUT_CLASSIFICATION
FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.9989296055525959	DESIGN	0.001070394447404124	WITHOUT_CLASSIFICATION
FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.9989296055525959	DESIGN	0.001070394447404124	WITHOUT_CLASSIFICATION
hack to get right style for input	DESIGN	0.8471285077858962	DESIGN	0.15287149221410373	WITHOUT_CLASSIFICATION
Object#to_a is obsolete. We match Ruby's hack until to_a goes away. Then we can remove this hack too.	DESIGN	0.9851095768729976	DESIGN	0.01489042312700232	WITHOUT_CLASSIFICATION
small hack to save a cast later on	DESIGN	0.9931841246571169	DESIGN	0.006815875342883093	WITHOUT_CLASSIFICATION
temporary hack to handle non-Ruby values will come up with better solution shortly	DESIGN	0.999986785423335	DESIGN	1.3214576665142847E-5	WITHOUT_CLASSIFICATION
Object#to_a is obsolete. We match Ruby's hack until to_a goes away. Then we can remove this hack too.	DESIGN	0.9851095768729976	DESIGN	0.01489042312700232	WITHOUT_CLASSIFICATION
HACK: in order to have stdout/err act like ttys and flush always, we set anything assigned to stdout/stderr to sync	DESIGN	0.9585193334734606	WITHOUT_CLASSIFICATION	0.04148066652653946	DESIGN
HACK: force clinit to be created	DESIGN	0.6252497822198647	DESIGN	0.3747502177801353	WITHOUT_CLASSIFICATION
FIXME: This is pretty gross; we should have a cleaner initialization that doesn't depend on package-visible fields and ideally is atomic, probably using an immutable structure we replace all at once. lazy, null when no groups defined	DESIGN	0.9999320577592296	DESIGN	6.794224077041888E-5	WITHOUT_CLASSIFICATION
TODO: should probably apply the null object pattern for a non-allowed class, rather than null	DESIGN	0.9978125171322519	DESIGN	0.002187482867748136	WITHOUT_CLASSIFICATION
TODO: set our metaclass to target's class (i.e. scary!)	DESIGN	0.8585250953307346	DESIGN	0.14147490466926535	WITHOUT_CLASSIFICATION
TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9553853246531941	WITHOUT_CLASSIFICATION	0.04461467534680597	DESIGN
ignore...bean doesn't get registered TODO: Why does that bother me?	DESIGN	0.7211867903516129	DESIGN	0.2788132096483871	WITHOUT_CLASSIFICATION
optional args, so we have IRubyObject[] TODO: confirm	DESIGN	0.5275291772663857	WITHOUT_CLASSIFICATION	0.4724708227336143	DESIGN
not intended to be called directly by users (private) OLD TODO from Ruby code: This should be implemented in JavaClass.java, where we can check for reserved Ruby names, conflicting methods, etc.	DESIGN	0.9987023701623752	DESIGN	0.0012976298376247664	WITHOUT_CLASSIFICATION
TODO? I think this ends up propagating from normal Java exceptions sys_fail(openFile.getPath())	DESIGN	0.9552089868851463	WITHOUT_CLASSIFICATION	0.04479101311485371	DESIGN
TODO: Make callCoerced work in block context...then fix downto, step, and upto.	DESIGN	0.9942725016939269	DESIGN	0.005727498306073131	WITHOUT_CLASSIFICATION
TODO: the rest of this...seeking to same position is unnecessary since we share a channel but some of this may be needed?	DESIGN	0.9999379327663229	DESIGN	6.206723367706086E-5	WITHOUT_CLASSIFICATION
TODO: This version differs from ioctl by checking whether fcntl exists and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9996849773393809	DESIGN	3.150226606190853E-4	WITHOUT_CLASSIFICATION
FIXME this below is temporary, but its much safer for COW (it prevents not shared Strings with begin != 0) this allows now e.g.: ByteList#set not to be begin aware	DESIGN	0.6022193057460524	DESIGN	0.3977806942539475	WITHOUT_CLASSIFICATION
ignore; job was cancelled FIXME: Is this ok?	DESIGN	0.99998709211353	DESIGN	1.290788647007123E-5	WITHOUT_CLASSIFICATION
TODO: MRI behavior: Call "+" or "add", depending on the call. But this leads to exceptions when Floats are added. See: http:blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/17374 return callCoerced(context, op, b, true); -- this is MRI behavior. We'll use ours for now, thus providing an ability to add Floats.	DESIGN	0.990823927997646	DESIGN	0.009176072002353987	WITHOUT_CLASSIFICATION
Must be called from main thread (it is currently, but this bothers me)	DESIGN	0.9981985400346036	WITHOUT_CLASSIFICATION	0.0018014599653963749	DESIGN
TODO: wire into new exception handling mechanism	DESIGN	0.9619435452228625	DESIGN	0.03805645477713755	WITHOUT_CLASSIFICATION
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9979038134929826	DESIGN	0.0020961865070173082	WITHOUT_CLASSIFICATION
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9932179928867977	DESIGN	0.006782007113202269	WITHOUT_CLASSIFICATION
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9932179928867977	DESIGN	0.006782007113202269	WITHOUT_CLASSIFICATION
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9932179928867977	DESIGN	0.006782007113202269	WITHOUT_CLASSIFICATION
FIXME: Determine if a real allocator is needed here. Do people want to extend JavaClass? Do we want them to do that? Can you Class.new(JavaClass)? Should you be able to? TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9999999997900214	DESIGN	2.0997863251786275E-10	WITHOUT_CLASSIFICATION
SSS FIXME: Token can be final for a method -- implying that the token is only for this particular implementation of the method But, if the mehod is modified, we create a new method object which in turn gets a new token. What makes sense?? Intuitively, it seems the first one ... but let us see ... Current code version token for this method -- can change during execution as methods get redefined!	DESIGN	0.7905294877197013	DESIGN	0.20947051228029862	WITHOUT_CLASSIFICATION
FIXME weakref.rb also does caller(2) here for the backtrace	DESIGN	0.8889555851409553	WITHOUT_CLASSIFICATION	0.11104441485904472	DESIGN
FIXME: bit of a kludge here (non-interface classes assigned to both class and module fields). simplifies proxy extender code, will go away when JI is overhauled (and proxy extenders are deprecated).	DESIGN	0.9999479270997299	DESIGN	5.2072900270041E-5	WITHOUT_CLASSIFICATION
There's not a compelling reason to keep JavaClass instances in a weak map (any proxies created are [were] kept in a non-weak map, so in most cases they will stick around anyway), and some good reasons not to (JavaClass creation is expensive, for one; many lookups are performed when passing parameters to/from methods; etc.). TODO: faster custom concurrent map	DESIGN	0.995773576956213	DESIGN	0.004226423043786934	WITHOUT_CLASSIFICATION
TODO: we should be able to optimize this quite a bit post-1.0. JavaClass already has all the methods organized by method name; the next version (supporting protected methods/fields) will have them organized even further. So collectMethods here can just lookup the overridden methods in the JavaClass map, should be much faster.	DESIGN	0.9995437378238325	DESIGN	4.562621761675216E-4	WITHOUT_CLASSIFICATION
FIXME: finalizer should be dupped here	DESIGN	0.9855502379149481	DESIGN	0.014449762085051944	WITHOUT_CLASSIFICATION
FIXME: null check is removable once we figure out how to assign to unset named block args	DESIGN	0.890262318313405	WITHOUT_CLASSIFICATION	0.10973768168659502	DESIGN
rb_obj_id Return the internal id of an object. FIXME: Should this be renamed to match its ruby name?	DESIGN	0.9894551499719416	DESIGN	0.010544850028058356	WITHOUT_CLASSIFICATION
TODO: Bleeding runtime into parser. Arity may be should be in parser (to keep bleeding oneway)	DESIGN	0.9966499176714853	DESIGN	0.003350082328514692	WITHOUT_CLASSIFICATION
SSS FIXME: Maybe this is not really a concern after all ... Nesting level of this scope in the lexical nesting of scopes in the current file -- this is not to be confused with semantic nesting of scopes across files. Consider this code in a file f class M1::M2::M3::C ... end So, C is at lexical nesting level of 1 (the file script is at 0) in the file 'f' Semantically it is at level 3 (M1, M2, M3 are at 0,1,2). This is primarily used to ensure that variable names don't clash! i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! private int _lexicalNestingLevel;	DESIGN	0.9999999824645169	DESIGN	1.7535483008329622E-8	WITHOUT_CLASSIFICATION
Sometimes the value can be retrieved at "compile time". If we succeed, nothing like it! We might not .. for the following reasons: 1. The constant is missing, 2. The reference is a forward-reference, 3. The constant's value is only known at run-time on first-access (but, this is runtime, isn't it??) 4. Our compiler isn't able to right away infer that this is a constant. SSS FIXME: 1. The operand can be a literal array, range, or hash -- hence Operand because Array, Range, and Hash derive from Operand and not Constant ... Is there a way to fix this impedance mismatch? 2. It should be possible to handle the forward-reference case by creating a new ForwardReference operand and then inform the scope of the forward reference which the scope can fix up when the reference gets defined. At code-gen time, if the reference is unresolved, when a value is retrieved for the forward-ref and we get a null, we can throw a ConstMissing exception! Not sure!	DESIGN	0.9998378754326732	DESIGN	1.6212456732689616E-4	WITHOUT_CLASSIFICATION
Reset value map if this instruction is the start/end of a basic block Right now, calls are considered hard boundaries for optimization and information cannot be propagated across them! SSS FIXME: Rather than treat all calls with a broad brush, what we need is to capture different attributes about a call : - uses closures - known call target - can modify scope, - etc. This information is probably already present in the AST Inspector	DESIGN	0.9999960178340344	DESIGN	3.982165965550878E-6	WITHOUT_CLASSIFICATION
FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9951023533646454	DESIGN	0.00489764663535464	WITHOUT_CLASSIFICATION
XXX: This check previously used callMethod("==") to check for equality between classes when scanning the hierarchy. However the == check may be safe; we should only ever have one instance bound to a given type/constant. If it's found to be unsafe, examine ways to avoid the == call.	DESIGN	0.9939897975321016	DESIGN	0.006010202467898485	WITHOUT_CLASSIFICATION
end hack	DESIGN	0.8497666066587856	DESIGN	0.15023339334121444	WITHOUT_CLASSIFICATION
if not overloaded, we add a method that guesses at which signature to use TODO: just adding first one right now...add in signature-guessing logic	DESIGN	0.9290877938694088	DESIGN	0.07091220613059122	WITHOUT_CLASSIFICATION
FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9999999969852055	DESIGN	3.01479448941664E-9	WITHOUT_CLASSIFICATION
TODO: This version is better than the hackish previous one. Windows behavior needs to be defined though. I suppose this version could be improved more too. TODO: /etc/passwd is also inadequate for MacOSX since it does not use /etc/passwd for regular user accounts	DESIGN	0.9999999884677864	DESIGN	1.1532213725704986E-8	WITHOUT_CLASSIFICATION
TODO: Should next and return also catch here?	DESIGN	0.9592795491912693	DESIGN	0.040720450808730574	WITHOUT_CLASSIFICATION
Let's only generate methods for those the user may actually intend to override. That includes any defined in the current class, and any ancestors that are also JavaProxyClasses (but none from any other ancestor classes). Methods defined in mixins will be considered intentionally overridden, except those from Kernel, Java, and JavaProxyMethods, as well as Enumerable. TODO: may want to exclude other common mixins?	DESIGN	0.9999015161778256	WITHOUT_CLASSIFICATION	9.848382217439324E-5	DESIGN
FIXME: Consider fixing node_assign itself rather than single case	DESIGN	0.7662587885806322	DESIGN	0.23374121141936766	WITHOUT_CLASSIFICATION
Workaround for JRUBY-2326 (MRI does not enter this production for some reason)	DESIGN	0.9074060742821295	WITHOUT_CLASSIFICATION	0.09259392571787045	DESIGN
FIXME: We should really not be creating the dynamic scope for the root of the AST before parsing. This makes us end up needing to readjust this dynamic scope coming out of parse (and for local static scopes it will always happen because of $~ and $_). FIXME: Because we end up adjusting this after-the-fact, we can't use any of the specific-size scopes.	DESIGN	0.999977541608831	DESIGN	2.2458391168902344E-5	WITHOUT_CLASSIFICATION
FIXME: Resolve what the hell is going on	DESIGN	0.9720071696594141	DESIGN	0.02799283034058584	WITHOUT_CLASSIFICATION
This is perhaps innefficient timewise? Optimal spacewise	DESIGN	0.7831739397263394	WITHOUT_CLASSIFICATION	0.21682606027366058	DESIGN
If variables were added then we may need to grow the dynamic scope to match the static one. FIXME: Make this so we only need to check this for blockScope != null. We cannot currently since we create the DynamicScope for a LocalStaticScope before parse begins. Refactoring should make this fixable.	DESIGN	0.8732798456007723	WITHOUT_CLASSIFICATION	0.1267201543992277	DESIGN
FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9975427879138818	DESIGN	0.0024572120861181923	WITHOUT_CLASSIFICATION
FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9975427879138818	DESIGN	0.0024572120861181923	WITHOUT_CLASSIFICATION
we're depending on the side effect of the load, which loads the class but does not turn it into a script I don't like it, but until we restructure the code a bit more, we'll need to quietly let it by here.	DESIGN	0.9947776610691389	DESIGN	0.005222338930861101	WITHOUT_CLASSIFICATION
TODO: for now, we use a faithful reimplementation of MRI's algorithm, but should use UTF8Encoding facilities from Joni, once it starts prefroming UTF-8 content validation.	DESIGN	0.9077246332773252	DESIGN	0.09227536672267479	WITHOUT_CLASSIFICATION
Process streams get Channel.newChannel()ed into FileChannel but are not actually seekable. So instead of just the isSeekable check doing instanceof FileChannel, we must also add this boolean to check, which we set to false when it's known that the incoming channel is from a process. FIXME: This is gross, and it's NIO's fault for not providing a nice way to tell if a channel is "really" seekable.	DESIGN	0.9999937394476295	DESIGN	6.260552370598865E-6	WITHOUT_CLASSIFICATION
