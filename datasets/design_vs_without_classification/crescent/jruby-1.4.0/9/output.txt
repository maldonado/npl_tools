// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999999372968956	WITHOUT_CLASSIFICATION	6.270310430540966E-8	DESIGN
// line 335	WITHOUT_CLASSIFICATION	0.9999990288470062	WITHOUT_CLASSIFICATION	9.711529937979298E-7	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999845153963649	WITHOUT_CLASSIFICATION	1.5484603635183135E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999845153963649	WITHOUT_CLASSIFICATION	1.5484603635183135E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999135960799103	WITHOUT_CLASSIFICATION	8.640392008981726E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999135960799103	WITHOUT_CLASSIFICATION	8.640392008981726E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999616098291337	WITHOUT_CLASSIFICATION	3.8390170866190646E-5	DESIGN
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999993600029716	WITHOUT_CLASSIFICATION	6.399970284296948E-7	DESIGN
// line 362	WITHOUT_CLASSIFICATION	0.9999996113563057	WITHOUT_CLASSIFICATION	3.886436943686989E-7	DESIGN
// line 372	WITHOUT_CLASSIFICATION	0.9999997804473474	WITHOUT_CLASSIFICATION	2.1955265268497131E-7	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9996955599332772	WITHOUT_CLASSIFICATION	3.0444006672275883E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9996955599332772	WITHOUT_CLASSIFICATION	3.0444006672275883E-4	DESIGN
// line 391	WITHOUT_CLASSIFICATION	0.9999988507758284	WITHOUT_CLASSIFICATION	1.1492241715567535E-6	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9996661551756094	WITHOUT_CLASSIFICATION	3.3384482439059444E-4	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9996661551756094	WITHOUT_CLASSIFICATION	3.3384482439059444E-4	DESIGN
/* ^D */	WITHOUT_CLASSIFICATION	0.9999638171695096	WITHOUT_CLASSIFICATION	3.618283049054607E-5	DESIGN
/* ^Z */	WITHOUT_CLASSIFICATION	0.9999881255028498	WITHOUT_CLASSIFICATION	1.1874497150145292E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.999905011603603	WITHOUT_CLASSIFICATION	9.49883963969137E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.999905011603603	WITHOUT_CLASSIFICATION	9.49883963969137E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.999905011603603	WITHOUT_CLASSIFICATION	9.49883963969137E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.999905011603603	WITHOUT_CLASSIFICATION	9.49883963969137E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.999905011603603	WITHOUT_CLASSIFICATION	9.49883963969137E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.999905011603603	WITHOUT_CLASSIFICATION	9.49883963969137E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.999905011603603	WITHOUT_CLASSIFICATION	9.49883963969137E-5	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999236413388704	WITHOUT_CLASSIFICATION	7.635866112973734E-5	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999236413388704	WITHOUT_CLASSIFICATION	7.635866112973734E-5	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999236413388704	WITHOUT_CLASSIFICATION	7.635866112973734E-5	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999236413388704	WITHOUT_CLASSIFICATION	7.635866112973734E-5	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999236413388704	WITHOUT_CLASSIFICATION	7.635866112973734E-5	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999236413388704	WITHOUT_CLASSIFICATION	7.635866112973734E-5	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999236413388704	WITHOUT_CLASSIFICATION	7.635866112973734E-5	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9991931232135002	WITHOUT_CLASSIFICATION	8.068767864997456E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9991931232135002	WITHOUT_CLASSIFICATION	8.068767864997456E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9991931232135002	WITHOUT_CLASSIFICATION	8.068767864997456E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9991931232135002	WITHOUT_CLASSIFICATION	8.068767864997456E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9991931232135002	WITHOUT_CLASSIFICATION	8.068767864997456E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9991931232135002	WITHOUT_CLASSIFICATION	8.068767864997456E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9997244527136303	WITHOUT_CLASSIFICATION	2.755472863697149E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9997244527136303	WITHOUT_CLASSIFICATION	2.755472863697149E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9997244527136303	WITHOUT_CLASSIFICATION	2.755472863697149E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9997244527136303	WITHOUT_CLASSIFICATION	2.755472863697149E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9997244527136303	WITHOUT_CLASSIFICATION	2.755472863697149E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9997244527136303	WITHOUT_CLASSIFICATION	2.755472863697149E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9996978377609412	WITHOUT_CLASSIFICATION	3.021622390587607E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9996978377609412	WITHOUT_CLASSIFICATION	3.021622390587607E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9996978377609412	WITHOUT_CLASSIFICATION	3.021622390587607E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9996978377609412	WITHOUT_CLASSIFICATION	3.021622390587607E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9996978377609412	WITHOUT_CLASSIFICATION	3.021622390587607E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9996978377609412	WITHOUT_CLASSIFICATION	3.021622390587607E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9996978377609412	WITHOUT_CLASSIFICATION	3.021622390587607E-4	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9982177886653497	WITHOUT_CLASSIFICATION	0.0017822113346502896	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9982177886653497	WITHOUT_CLASSIFICATION	0.0017822113346502896	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9982177886653497	WITHOUT_CLASSIFICATION	0.0017822113346502896	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9982177886653497	WITHOUT_CLASSIFICATION	0.0017822113346502896	DESIGN
//Do nothing	WITHOUT_CLASSIFICATION	0.9999929142517533	WITHOUT_CLASSIFICATION	7.085748246608463E-6	DESIGN
//Do nothing	WITHOUT_CLASSIFICATION	0.9999929142517533	WITHOUT_CLASSIFICATION	7.085748246608463E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999400490977466	WITHOUT_CLASSIFICATION	5.9950902253537725E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999400490977466	WITHOUT_CLASSIFICATION	5.9950902253537725E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999400490977466	WITHOUT_CLASSIFICATION	5.9950902253537725E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999400490977466	WITHOUT_CLASSIFICATION	5.9950902253537725E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999400490977466	WITHOUT_CLASSIFICATION	5.9950902253537725E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999400490977466	WITHOUT_CLASSIFICATION	5.9950902253537725E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999400490977466	WITHOUT_CLASSIFICATION	5.9950902253537725E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999400490977466	WITHOUT_CLASSIFICATION	5.9950902253537725E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999400490977466	WITHOUT_CLASSIFICATION	5.9950902253537725E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999400490977466	WITHOUT_CLASSIFICATION	5.9950902253537725E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999400490977466	WITHOUT_CLASSIFICATION	5.9950902253537725E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999400490977466	WITHOUT_CLASSIFICATION	5.9950902253537725E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999400490977466	WITHOUT_CLASSIFICATION	5.9950902253537725E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999400490977466	WITHOUT_CLASSIFICATION	5.9950902253537725E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999400490977466	WITHOUT_CLASSIFICATION	5.9950902253537725E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999400490977466	WITHOUT_CLASSIFICATION	5.9950902253537725E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999400490977466	WITHOUT_CLASSIFICATION	5.9950902253537725E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999400490977466	WITHOUT_CLASSIFICATION	5.9950902253537725E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999400490977466	WITHOUT_CLASSIFICATION	5.9950902253537725E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999400490977466	WITHOUT_CLASSIFICATION	5.9950902253537725E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999400490977466	WITHOUT_CLASSIFICATION	5.9950902253537725E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999400490977466	WITHOUT_CLASSIFICATION	5.9950902253537725E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999400490977466	WITHOUT_CLASSIFICATION	5.9950902253537725E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999400490977466	WITHOUT_CLASSIFICATION	5.9950902253537725E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999400490977466	WITHOUT_CLASSIFICATION	5.9950902253537725E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999400490977466	WITHOUT_CLASSIFICATION	5.9950902253537725E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999400490977466	WITHOUT_CLASSIFICATION	5.9950902253537725E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999400490977466	WITHOUT_CLASSIFICATION	5.9950902253537725E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999400490977466	WITHOUT_CLASSIFICATION	5.9950902253537725E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999400490977466	WITHOUT_CLASSIFICATION	5.9950902253537725E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999400490977466	WITHOUT_CLASSIFICATION	5.9950902253537725E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999400490977466	WITHOUT_CLASSIFICATION	5.9950902253537725E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999400490977466	WITHOUT_CLASSIFICATION	5.9950902253537725E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999400490977466	WITHOUT_CLASSIFICATION	5.9950902253537725E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999400490977466	WITHOUT_CLASSIFICATION	5.9950902253537725E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999400490977466	WITHOUT_CLASSIFICATION	5.9950902253537725E-5	DESIGN
// return result	WITHOUT_CLASSIFICATION	0.9999912744369953	WITHOUT_CLASSIFICATION	8.725563004631365E-6	DESIGN
// name	WITHOUT_CLASSIFICATION	0.999947470395017	WITHOUT_CLASSIFICATION	5.2529604983017247E-5	DESIGN
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999991348235052	WITHOUT_CLASSIFICATION	8.651764949172713E-7	DESIGN
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9999970237323164	WITHOUT_CLASSIFICATION	2.9762676835061534E-6	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999358138086315	WITHOUT_CLASSIFICATION	6.418619136850797E-5	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999358138086315	WITHOUT_CLASSIFICATION	6.418619136850797E-5	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999358138086315	WITHOUT_CLASSIFICATION	6.418619136850797E-5	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999358138086315	WITHOUT_CLASSIFICATION	6.418619136850797E-5	DESIGN
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999990137322322	WITHOUT_CLASSIFICATION	9.862677677500933E-7	DESIGN
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.999949695795204	WITHOUT_CLASSIFICATION	5.030420479607843E-5	DESIGN
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999995889095425	WITHOUT_CLASSIFICATION	4.110904575031355E-7	DESIGN
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9962130172972241	WITHOUT_CLASSIFICATION	0.0037869827027759706	DESIGN
// Version information:	WITHOUT_CLASSIFICATION	0.9999828977478976	WITHOUT_CLASSIFICATION	1.710225210234164E-5	DESIGN
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999968715174272	WITHOUT_CLASSIFICATION	3.128482572758238E-6	DESIGN
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999993507108577	WITHOUT_CLASSIFICATION	6.492891423778845E-7	DESIGN
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999999379412079	WITHOUT_CLASSIFICATION	6.205879213616424E-8	DESIGN
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.978203170369701	WITHOUT_CLASSIFICATION	0.021796829630299008	DESIGN
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9998960879363843	WITHOUT_CLASSIFICATION	1.039120636156529E-4	DESIGN
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999940131511742	WITHOUT_CLASSIFICATION	5.986848825867247E-6	DESIGN
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.999835450062433	WITHOUT_CLASSIFICATION	1.6454993756692E-4	DESIGN
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9999158402807149	WITHOUT_CLASSIFICATION	8.415971928510446E-5	DESIGN
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999420341249415	WITHOUT_CLASSIFICATION	5.7965875058604887E-5	DESIGN
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.999998880712862	WITHOUT_CLASSIFICATION	1.1192871379791689E-6	DESIGN
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999999878557053	WITHOUT_CLASSIFICATION	1.214429469868741E-8	DESIGN
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9869199363729678	DESIGN	0.013080063627032226	WITHOUT_CLASSIFICATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999358138086315	WITHOUT_CLASSIFICATION	6.418619136850797E-5	DESIGN
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999949472901045	WITHOUT_CLASSIFICATION	5.052709895496459E-6	DESIGN
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999999873970156	WITHOUT_CLASSIFICATION	1.2602984292224934E-8	DESIGN
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999998215854004	WITHOUT_CLASSIFICATION	1.7841459956510497E-7	DESIGN
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9990195978448952	WITHOUT_CLASSIFICATION	9.804021551048092E-4	DESIGN
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9949902183471642	WITHOUT_CLASSIFICATION	0.005009781652835815	DESIGN
// Proc class	WITHOUT_CLASSIFICATION	0.9999817752933579	WITHOUT_CLASSIFICATION	1.822470664221939E-5	DESIGN
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999941693969234	WITHOUT_CLASSIFICATION	5.830603076559199E-6	DESIGN
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999989647205575	WITHOUT_CLASSIFICATION	1.0352794425097788E-6	DESIGN
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9719325083836055	WITHOUT_CLASSIFICATION	0.028067491616394546	DESIGN
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999999735195818	WITHOUT_CLASSIFICATION	2.6480418099313707E-8	DESIGN
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9997174934281855	WITHOUT_CLASSIFICATION	2.825065718144773E-4	DESIGN
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999963526434126	WITHOUT_CLASSIFICATION	3.6473565874372026E-6	DESIGN
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999781723927484	WITHOUT_CLASSIFICATION	2.1827607251634725E-5	DESIGN
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9999982640456765	WITHOUT_CLASSIFICATION	1.7359543235423493E-6	DESIGN
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9999979110438109	WITHOUT_CLASSIFICATION	2.088956189104263E-6	DESIGN
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9999998226346692	WITHOUT_CLASSIFICATION	1.7736533082489037E-7	DESIGN
// RubySignal	WITHOUT_CLASSIFICATION	0.9999978310092316	WITHOUT_CLASSIFICATION	2.168990768396113E-6	DESIGN
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999995243921169	WITHOUT_CLASSIFICATION	4.7560788304411597E-7	DESIGN
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9999997926898185	WITHOUT_CLASSIFICATION	2.0731018141658837E-7	DESIGN
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999999584422057	WITHOUT_CLASSIFICATION	4.155779428766941E-8	DESIGN
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9917620008344703	WITHOUT_CLASSIFICATION	0.008237999165529752	DESIGN
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999980593086956	WITHOUT_CLASSIFICATION	1.9406913043669013E-6	DESIGN
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999980694503166	WITHOUT_CLASSIFICATION	1.9305496834025815E-6	DESIGN
//io.finish();	WITHOUT_CLASSIFICATION	0.999979946432836	WITHOUT_CLASSIFICATION	2.0053567163967883E-5	DESIGN
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9999183772658019	WITHOUT_CLASSIFICATION	8.162273419811777E-5	DESIGN
// hmm...	WITHOUT_CLASSIFICATION	0.9995487927784925	WITHOUT_CLASSIFICATION	4.5120722150753076E-4	DESIGN
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999839268524865	WITHOUT_CLASSIFICATION	1.6073147513530613E-5	DESIGN
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999902769919418	WITHOUT_CLASSIFICATION	9.723008058334172E-6	DESIGN
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.999999970825182	WITHOUT_CLASSIFICATION	2.9174818009560517E-8	DESIGN
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999997214467677	WITHOUT_CLASSIFICATION	2.7855323232293474E-7	DESIGN
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999999348798881	WITHOUT_CLASSIFICATION	6.512011177554254E-8	DESIGN
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999991130654328	WITHOUT_CLASSIFICATION	8.869345673493796E-7	DESIGN
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999996270095041	WITHOUT_CLASSIFICATION	3.729904958930141E-7	DESIGN
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999999974647773	WITHOUT_CLASSIFICATION	2.5352227584295064E-9	DESIGN
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999975702132701	WITHOUT_CLASSIFICATION	2.4297867299527114E-6	DESIGN
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999349143433889	WITHOUT_CLASSIFICATION	6.508565661120642E-5	DESIGN
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999991248851104	WITHOUT_CLASSIFICATION	8.75114889529671E-7	DESIGN
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.999999832827402	WITHOUT_CLASSIFICATION	1.6717259808409413E-7	DESIGN
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999999761507095	WITHOUT_CLASSIFICATION	2.3849290608993856E-8	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999856382166009	WITHOUT_CLASSIFICATION	1.4361783399089603E-4	DESIGN
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.999999265912719	WITHOUT_CLASSIFICATION	7.340872810090346E-7	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999992862229279	WITHOUT_CLASSIFICATION	7.137770721087423E-6	DESIGN
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9985593413372119	WITHOUT_CLASSIFICATION	0.0014406586627881003	DESIGN
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9998668999790371	WITHOUT_CLASSIFICATION	1.331000209628984E-4	DESIGN
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9998668999790371	WITHOUT_CLASSIFICATION	1.331000209628984E-4	DESIGN
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9993154278375005	WITHOUT_CLASSIFICATION	6.845721624996018E-4	DESIGN
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999990376646412	WITHOUT_CLASSIFICATION	9.623353588787683E-7	DESIGN
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9999526417767445	WITHOUT_CLASSIFICATION	4.7358223255641624E-5	DESIGN
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999294466050501	WITHOUT_CLASSIFICATION	7.05533949498761E-5	DESIGN
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.8604461789035335	WITHOUT_CLASSIFICATION	0.1395538210964665	DESIGN
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9961474671624831	WITHOUT_CLASSIFICATION	0.0038525328375167834	DESIGN
// ???	WITHOUT_CLASSIFICATION	0.9987983101266749	WITHOUT_CLASSIFICATION	0.001201689873325103	DESIGN
// PID	WITHOUT_CLASSIFICATION	0.9999859229755503	WITHOUT_CLASSIFICATION	1.407702444966783E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999992862229279	WITHOUT_CLASSIFICATION	7.137770721087423E-6	DESIGN
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999999663729642	WITHOUT_CLASSIFICATION	3.3627035785063946E-8	DESIGN
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999674831600475	WITHOUT_CLASSIFICATION	3.251683995258005E-5	DESIGN
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999999981882174	WITHOUT_CLASSIFICATION	1.8117826427801086E-9	DESIGN
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999999984666006	WITHOUT_CLASSIFICATION	1.5333993985175758E-9	DESIGN
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999999596186638	WITHOUT_CLASSIFICATION	4.038133622520082E-8	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999999990193655	WITHOUT_CLASSIFICATION	9.806344695545734E-10	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999999990193655	WITHOUT_CLASSIFICATION	9.806344695545734E-10	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999999990193655	WITHOUT_CLASSIFICATION	9.806344695545734E-10	DESIGN
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9326728034923948	WITHOUT_CLASSIFICATION	0.06732719650760521	DESIGN
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999999993111099	WITHOUT_CLASSIFICATION	6.888901465091816E-10	DESIGN
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999994803228305	WITHOUT_CLASSIFICATION	5.196771694227796E-7	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999288598915046	WITHOUT_CLASSIFICATION	7.114010849543556E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999288598915046	WITHOUT_CLASSIFICATION	7.114010849543556E-5	DESIGN
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.8095124656919693	WITHOUT_CLASSIFICATION	0.19048753430803073	DESIGN
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9152940007145539	DESIGN	0.08470599928544618	WITHOUT_CLASSIFICATION
// not reached	WITHOUT_CLASSIFICATION	0.9999288598915046	WITHOUT_CLASSIFICATION	7.114010849543556E-5	DESIGN
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999999102867551	WITHOUT_CLASSIFICATION	8.971324501986179E-8	DESIGN
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9998355822927071	WITHOUT_CLASSIFICATION	1.6441770729300895E-4	DESIGN
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999999999271855	WITHOUT_CLASSIFICATION	7.28145402445955E-11	DESIGN
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999971825965799	WITHOUT_CLASSIFICATION	2.817403420161025E-6	DESIGN
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999971825965799	WITHOUT_CLASSIFICATION	2.817403420161025E-6	DESIGN
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999593571939701	WITHOUT_CLASSIFICATION	4.064280602992817E-5	DESIGN
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999999789345755	WITHOUT_CLASSIFICATION	2.1065424582872067E-8	DESIGN
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999939463519228	WITHOUT_CLASSIFICATION	6.05364807713391E-6	DESIGN
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999939463519228	WITHOUT_CLASSIFICATION	6.05364807713391E-6	DESIGN
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999999872918592	WITHOUT_CLASSIFICATION	1.2708140791547376E-8	DESIGN
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999998993994303	WITHOUT_CLASSIFICATION	1.006005696028198E-7	DESIGN
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999540459945331	WITHOUT_CLASSIFICATION	4.5954005466969116E-5	DESIGN
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999999672953811	WITHOUT_CLASSIFICATION	3.270461889688275E-8	DESIGN
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999987954128917	WITHOUT_CLASSIFICATION	1.2045871081928723E-6	DESIGN
// extras flag	WITHOUT_CLASSIFICATION	0.9999999743315725	WITHOUT_CLASSIFICATION	2.566842749838294E-8	DESIGN
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999996720574184	WITHOUT_CLASSIFICATION	3.2794258161565574E-7	DESIGN
// ...nothing	WITHOUT_CLASSIFICATION	0.9999974426872568	WITHOUT_CLASSIFICATION	2.5573127431985176E-6	DESIGN
// utility method	WITHOUT_CLASSIFICATION	0.9999518242168423	WITHOUT_CLASSIFICATION	4.8175783157707005E-5	DESIGN
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.999999834134006	WITHOUT_CLASSIFICATION	1.658659939976619E-7	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999992862229279	WITHOUT_CLASSIFICATION	7.137770721087423E-6	DESIGN
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999993383513822	WITHOUT_CLASSIFICATION	6.616486177427114E-7	DESIGN
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999995666910445	WITHOUT_CLASSIFICATION	4.333089555327839E-7	DESIGN
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999958876334465	WITHOUT_CLASSIFICATION	4.112366553492658E-6	DESIGN
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.8616300738406207	WITHOUT_CLASSIFICATION	0.13836992615937932	DESIGN
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9998907747241319	WITHOUT_CLASSIFICATION	1.092252758680617E-4	DESIGN
// MRI does it!	WITHOUT_CLASSIFICATION	0.9979387781268771	WITHOUT_CLASSIFICATION	0.0020612218731227492	DESIGN
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.999800525745682	WITHOUT_CLASSIFICATION	1.994742543178838E-4	DESIGN
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999784881093634	WITHOUT_CLASSIFICATION	2.1511890636554634E-5	DESIGN
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.999986359605725	WITHOUT_CLASSIFICATION	1.3640394274985995E-5	DESIGN
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9986329746619063	WITHOUT_CLASSIFICATION	0.00136702533809366	DESIGN
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999998035443213	WITHOUT_CLASSIFICATION	1.9645567861444426E-7	DESIGN
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999588338007493	WITHOUT_CLASSIFICATION	4.116619925064496E-5	DESIGN
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999924266975562	WITHOUT_CLASSIFICATION	7.573302443871536E-6	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999989569142893	WITHOUT_CLASSIFICATION	1.0430857107478607E-6	DESIGN
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9999998035251825	WITHOUT_CLASSIFICATION	1.96474817479133E-7	DESIGN
// recheck condition	WITHOUT_CLASSIFICATION	0.9999329781266972	WITHOUT_CLASSIFICATION	6.702187330276744E-5	DESIGN
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999990749840671	WITHOUT_CLASSIFICATION	9.250159327709531E-7	DESIGN
// Construct key services	WITHOUT_CLASSIFICATION	0.999998509291305	WITHOUT_CLASSIFICATION	1.490708695073323E-6	DESIGN
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999990141811127	WITHOUT_CLASSIFICATION	9.858188873777832E-7	DESIGN
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999700999028367	WITHOUT_CLASSIFICATION	2.9900097163261247E-5	DESIGN
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999998132559199	WITHOUT_CLASSIFICATION	1.8674408016190642E-7	DESIGN
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.999994503226189	WITHOUT_CLASSIFICATION	5.496773810971381E-6	DESIGN
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.999999972772246	WITHOUT_CLASSIFICATION	2.7227754029275168E-8	DESIGN
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.999970491393147	WITHOUT_CLASSIFICATION	2.9508606853124646E-5	DESIGN
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999878235060755	WITHOUT_CLASSIFICATION	1.217649392454149E-5	DESIGN
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9998252136016302	WITHOUT_CLASSIFICATION	1.747863983697419E-4	DESIGN
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9992056494179461	WITHOUT_CLASSIFICATION	7.943505820538936E-4	DESIGN
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999988589737001	WITHOUT_CLASSIFICATION	1.141026299911752E-6	DESIGN
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999964789897611	WITHOUT_CLASSIFICATION	3.5210102390423193E-6	DESIGN
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999999854802101	WITHOUT_CLASSIFICATION	1.451978997253836E-8	DESIGN
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9792393531308077	WITHOUT_CLASSIFICATION	0.020760646869192264	DESIGN
// determine spacing	WITHOUT_CLASSIFICATION	0.9999128121135288	WITHOUT_CLASSIFICATION	8.71878864711457E-5	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9957992992468571	WITHOUT_CLASSIFICATION	0.004200700753142872	DESIGN
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999086763141135	WITHOUT_CLASSIFICATION	9.132368588650306E-5	DESIGN
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9999324407019647	WITHOUT_CLASSIFICATION	6.755929803522254E-5	DESIGN
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9995641232742696	WITHOUT_CLASSIFICATION	4.3587672573030086E-4	DESIGN
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999663639466116	WITHOUT_CLASSIFICATION	3.3636053388401746E-5	DESIGN
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999999754979639	WITHOUT_CLASSIFICATION	2.4502036117067237E-8	DESIGN
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999979328657449	WITHOUT_CLASSIFICATION	2.0671342551176765E-6	DESIGN
// default: don't retain	WITHOUT_CLASSIFICATION	0.9993997524277205	WITHOUT_CLASSIFICATION	6.002475722795109E-4	DESIGN
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999993072950236	WITHOUT_CLASSIFICATION	6.927049765134154E-7	DESIGN
// Default objects	WITHOUT_CLASSIFICATION	0.9999999959281203	WITHOUT_CLASSIFICATION	4.0718797210492565E-9	DESIGN
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999978845700065	WITHOUT_CLASSIFICATION	2.115429993585768E-6	DESIGN
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999909920316283	WITHOUT_CLASSIFICATION	9.007968371677696E-6	DESIGN
// Java support	WITHOUT_CLASSIFICATION	0.999989801928199	WITHOUT_CLASSIFICATION	1.0198071800955406E-5	DESIGN
// Parser stats	WITHOUT_CLASSIFICATION	0.9999998788981858	WITHOUT_CLASSIFICATION	1.211018142035237E-7	DESIGN
// Compilation	WITHOUT_CLASSIFICATION	0.9999994847942771	WITHOUT_CLASSIFICATION	5.152057228578174E-7	DESIGN
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999999976505294	WITHOUT_CLASSIFICATION	2.349470682821318E-9	DESIGN
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999682712956802	WITHOUT_CLASSIFICATION	3.172870431968477E-5	DESIGN
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999940888861515	WITHOUT_CLASSIFICATION	5.911113848521818E-6	DESIGN
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.998994212788609	WITHOUT_CLASSIFICATION	0.0010057872113910051	DESIGN
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9999150976926279	WITHOUT_CLASSIFICATION	8.490230737217785E-5	DESIGN
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999995432118072	WITHOUT_CLASSIFICATION	4.5678819276805174E-7	DESIGN
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999998924301837	WITHOUT_CLASSIFICATION	1.075698163309593E-7	DESIGN
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9990879875752743	WITHOUT_CLASSIFICATION	9.120124247256584E-4	DESIGN
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.6162486932426406	WITHOUT_CLASSIFICATION	0.38375130675735936	DESIGN
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999092509965178	WITHOUT_CLASSIFICATION	9.074900348223377E-5	DESIGN
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.999999426551105	WITHOUT_CLASSIFICATION	5.73448895060524E-7	DESIGN
// quoted-printable	WITHOUT_CLASSIFICATION	0.9999998536535951	WITHOUT_CLASSIFICATION	1.4634640486217516E-7	DESIGN
// default options	WITHOUT_CLASSIFICATION	0.999999237029794	WITHOUT_CLASSIFICATION	7.629702060864383E-7	DESIGN
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999968687986022	WITHOUT_CLASSIFICATION	3.131201397909125E-6	DESIGN
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999968687986022	WITHOUT_CLASSIFICATION	3.131201397909125E-6	DESIGN
// Shift_JIS	WITHOUT_CLASSIFICATION	0.999994281717152	WITHOUT_CLASSIFICATION	5.718282848032081E-6	DESIGN
// Shift_JIS	WITHOUT_CLASSIFICATION	0.999994281717152	WITHOUT_CLASSIFICATION	5.718282848032081E-6	DESIGN
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999875899841246	WITHOUT_CLASSIFICATION	1.2410015875301985E-5	DESIGN
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999875899841246	WITHOUT_CLASSIFICATION	1.2410015875301985E-5	DESIGN
// UTF-8	WITHOUT_CLASSIFICATION	0.9999987234246587	WITHOUT_CLASSIFICATION	1.2765753413493543E-6	DESIGN
// UTF-8	WITHOUT_CLASSIFICATION	0.9999987234246587	WITHOUT_CLASSIFICATION	1.2765753413493543E-6	DESIGN
// long name option	WITHOUT_CLASSIFICATION	0.999999930124145	WITHOUT_CLASSIFICATION	6.987585498526839E-8	DESIGN
// conversion	WITHOUT_CLASSIFICATION	0.9999993139006508	WITHOUT_CLASSIFICATION	6.86099349221706E-7	DESIGN
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999017435063062	WITHOUT_CLASSIFICATION	9.825649369376758E-5	DESIGN
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999969642547613	WITHOUT_CLASSIFICATION	3.0357452387696345E-6	DESIGN
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999860261455226	WITHOUT_CLASSIFICATION	1.3973854477350048E-5	DESIGN
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999996643184372	WITHOUT_CLASSIFICATION	3.3568156276434E-7	DESIGN
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999997829464634	WITHOUT_CLASSIFICATION	2.170535366071747E-7	DESIGN
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999999838227419	WITHOUT_CLASSIFICATION	1.6177258102219714E-8	DESIGN
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999990434129309	WITHOUT_CLASSIFICATION	9.565870690641978E-7	DESIGN
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999999290895256	WITHOUT_CLASSIFICATION	7.09104743938219E-8	DESIGN
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999982282228508	WITHOUT_CLASSIFICATION	1.771777149149443E-6	DESIGN
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999992531631755	WITHOUT_CLASSIFICATION	7.468368243777576E-7	DESIGN
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999978696676605	WITHOUT_CLASSIFICATION	2.130332339549457E-6	DESIGN
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999988954042792	WITHOUT_CLASSIFICATION	1.104595720737403E-6	DESIGN
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999988118786092	WITHOUT_CLASSIFICATION	1.1881213907518777E-6	DESIGN
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999991250868722	WITHOUT_CLASSIFICATION	8.749131278945772E-7	DESIGN
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999999959529107	WITHOUT_CLASSIFICATION	4.04708934305737E-9	DESIGN
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999999560710208	WITHOUT_CLASSIFICATION	4.392897914716477E-8	DESIGN
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999994246028283	WITHOUT_CLASSIFICATION	5.753971718002487E-7	DESIGN
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.701542612475533	DESIGN	0.298457387524467	WITHOUT_CLASSIFICATION
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999991100267945	WITHOUT_CLASSIFICATION	8.899732053979049E-7	DESIGN
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999992612338348	WITHOUT_CLASSIFICATION	7.387661651473514E-7	DESIGN
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9998945336203434	WITHOUT_CLASSIFICATION	1.0546637965650537E-4	DESIGN
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999938854164554	WITHOUT_CLASSIFICATION	6.11458354465387E-6	DESIGN
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999998222630144	WITHOUT_CLASSIFICATION	1.7773698565643722E-7	DESIGN
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999985585108062	WITHOUT_CLASSIFICATION	1.441489193785144E-6	DESIGN
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999999407519242	WITHOUT_CLASSIFICATION	5.9248075816619776E-8	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.999999873849365	WITHOUT_CLASSIFICATION	1.2615063494774185E-7	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.999999873849365	WITHOUT_CLASSIFICATION	1.2615063494774185E-7	DESIGN
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.999996582858774	WITHOUT_CLASSIFICATION	3.4171412260691205E-6	DESIGN
// string given	WITHOUT_CLASSIFICATION	0.9999948620737397	WITHOUT_CLASSIFICATION	5.137926260225694E-6	DESIGN
// hash given	WITHOUT_CLASSIFICATION	0.9999945087991813	WITHOUT_CLASSIFICATION	5.491200818651568E-6	DESIGN
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.999988677339473	WITHOUT_CLASSIFICATION	1.1322660526959166E-5	DESIGN
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999738049932593	WITHOUT_CLASSIFICATION	2.619500674080291E-5	DESIGN
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999835086649046	WITHOUT_CLASSIFICATION	1.649133509546173E-5	DESIGN
// nothing	WITHOUT_CLASSIFICATION	0.9999290966098923	WITHOUT_CLASSIFICATION	7.090339010782684E-5	DESIGN
// nothing	WITHOUT_CLASSIFICATION	0.9999290966098923	WITHOUT_CLASSIFICATION	7.090339010782684E-5	DESIGN
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999967408155924	WITHOUT_CLASSIFICATION	3.259184407694424E-6	DESIGN
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.8522397260805112	WITHOUT_CLASSIFICATION	0.14776027391948876	DESIGN
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999608745567621	WITHOUT_CLASSIFICATION	3.912544323799007E-5	DESIGN
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999608745567621	WITHOUT_CLASSIFICATION	3.912544323799007E-5	DESIGN
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.999998296651747	WITHOUT_CLASSIFICATION	1.703348252986568E-6	DESIGN
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999999402520869	WITHOUT_CLASSIFICATION	5.97479130663058E-8	DESIGN
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999999402520869	WITHOUT_CLASSIFICATION	5.97479130663058E-8	DESIGN
// modified	WITHOUT_CLASSIFICATION	0.9999810789091417	WITHOUT_CLASSIFICATION	1.8921090858395966E-5	DESIGN
// modified	WITHOUT_CLASSIFICATION	0.9999810789091417	WITHOUT_CLASSIFICATION	1.8921090858395966E-5	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9999976652962441	WITHOUT_CLASSIFICATION	2.3347037559927836E-6	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9999976652962441	WITHOUT_CLASSIFICATION	2.3347037559927836E-6	DESIGN
// QTRUE	WITHOUT_CLASSIFICATION	0.9999662935023372	WITHOUT_CLASSIFICATION	3.3706497662736317E-5	DESIGN
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999337810181763	WITHOUT_CLASSIFICATION	6.621898182375973E-5	DESIGN
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999998234572682	WITHOUT_CLASSIFICATION	1.765427317470997E-7	DESIGN
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999984598800231	WITHOUT_CLASSIFICATION	1.5401199769083445E-6	DESIGN
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999991671422712	WITHOUT_CLASSIFICATION	8.328577288302633E-7	DESIGN
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999975732615485	WITHOUT_CLASSIFICATION	2.4267384514949207E-6	DESIGN
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9998871204152845	WITHOUT_CLASSIFICATION	1.1287958471543387E-4	DESIGN
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999661913685441	WITHOUT_CLASSIFICATION	3.38086314558085E-5	DESIGN
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9998871204152845	WITHOUT_CLASSIFICATION	1.1287958471543387E-4	DESIGN
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9995448124140528	WITHOUT_CLASSIFICATION	4.5518758594720814E-4	DESIGN
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999998315827048	WITHOUT_CLASSIFICATION	1.6841729522157387E-7	DESIGN
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999999854527437	WITHOUT_CLASSIFICATION	1.4547256325432932E-8	DESIGN
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999999985737883	WITHOUT_CLASSIFICATION	1.4262116314064682E-9	DESIGN
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999999257755869	WITHOUT_CLASSIFICATION	7.422441302513423E-8	DESIGN
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9999993487950789	WITHOUT_CLASSIFICATION	6.512049211425821E-7	DESIGN
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999993857351737	WITHOUT_CLASSIFICATION	6.142648262002128E-7	DESIGN
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.99999953700084	WITHOUT_CLASSIFICATION	4.6299915991416705E-7	DESIGN
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999999899087115	WITHOUT_CLASSIFICATION	1.009128840017308E-8	DESIGN
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999965003457392	WITHOUT_CLASSIFICATION	3.4996542607720238E-6	DESIGN
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999983153698859	WITHOUT_CLASSIFICATION	1.6846301140163762E-6	DESIGN
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999997967814972	WITHOUT_CLASSIFICATION	2.032185027348735E-7	DESIGN
// file not given	WITHOUT_CLASSIFICATION	0.9999998247637952	WITHOUT_CLASSIFICATION	1.7523620476655623E-7	DESIGN
// string to eval	WITHOUT_CLASSIFICATION	0.9999600475598515	WITHOUT_CLASSIFICATION	3.995244014851991E-5	DESIGN
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999999973841022	WITHOUT_CLASSIFICATION	2.6158977490078603E-9	DESIGN
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999997228869658	WITHOUT_CLASSIFICATION	2.7711303413746934E-7	DESIGN
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999999552900638	WITHOUT_CLASSIFICATION	4.4709936331790343E-8	DESIGN
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999954045939538	WITHOUT_CLASSIFICATION	4.5954060462649555E-6	DESIGN
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9999998653281899	WITHOUT_CLASSIFICATION	1.346718101315603E-7	DESIGN
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9999999463188728	WITHOUT_CLASSIFICATION	5.368112729198234E-8	DESIGN
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9999992650143278	WITHOUT_CLASSIFICATION	7.349856721882608E-7	DESIGN
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999999772261163	WITHOUT_CLASSIFICATION	2.2773883709612643E-8	DESIGN
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999903894167487	WITHOUT_CLASSIFICATION	9.610583251306613E-6	DESIGN
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9984670066977741	WITHOUT_CLASSIFICATION	0.0015329933022258284	DESIGN
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999999988416399	WITHOUT_CLASSIFICATION	1.1583601687567774E-9	DESIGN
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999087411855949	WITHOUT_CLASSIFICATION	9.125881440505366E-5	DESIGN
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9998896909567668	WITHOUT_CLASSIFICATION	1.103090432331481E-4	DESIGN
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999999762432645	WITHOUT_CLASSIFICATION	2.3756735479634683E-8	DESIGN
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999998840836335	WITHOUT_CLASSIFICATION	1.1591636644307033E-7	DESIGN
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999999277779391	WITHOUT_CLASSIFICATION	7.222206080849417E-8	DESIGN
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999911184309086	WITHOUT_CLASSIFICATION	8.881569091465962E-6	DESIGN
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999999991751155	WITHOUT_CLASSIFICATION	8.248845188446384E-10	DESIGN
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.999987286213824	WITHOUT_CLASSIFICATION	1.2713786176013767E-5	DESIGN
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999997725855846	WITHOUT_CLASSIFICATION	2.2741441548420352E-7	DESIGN
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999999249794893	WITHOUT_CLASSIFICATION	7.502051066719089E-8	DESIGN
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999999107302657	WITHOUT_CLASSIFICATION	8.926973419451478E-8	DESIGN
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999999365534513	WITHOUT_CLASSIFICATION	6.344654872048818E-8	DESIGN
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999997938795127	WITHOUT_CLASSIFICATION	2.0612048723757867E-7	DESIGN
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999872039065955	WITHOUT_CLASSIFICATION	1.2796093404554393E-5	DESIGN
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.999997741213447	WITHOUT_CLASSIFICATION	2.2587865530105076E-6	DESIGN
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999958300660958	WITHOUT_CLASSIFICATION	4.169933904210982E-6	DESIGN
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999999898946432	WITHOUT_CLASSIFICATION	1.0105356793247071E-8	DESIGN
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999999775997309	WITHOUT_CLASSIFICATION	2.2400269154642767E-8	DESIGN
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999999830267531	WITHOUT_CLASSIFICATION	1.6973246995864125E-8	DESIGN
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999999926035106	WITHOUT_CLASSIFICATION	7.3964895004204255E-9	DESIGN
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999996407516453	WITHOUT_CLASSIFICATION	3.592483547408696E-7	DESIGN
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999998888967546	WITHOUT_CLASSIFICATION	1.111032454281852E-7	DESIGN
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999871859470706	WITHOUT_CLASSIFICATION	1.2814052929402836E-5	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999987223472552	WITHOUT_CLASSIFICATION	1.277652744797968E-6	DESIGN
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999922318392805	WITHOUT_CLASSIFICATION	7.768160719336285E-6	DESIGN
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.99985643126918	WITHOUT_CLASSIFICATION	1.4356873082006376E-4	DESIGN
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999999992924958	WITHOUT_CLASSIFICATION	7.075041032781565E-10	DESIGN
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999928929426555	WITHOUT_CLASSIFICATION	7.107057344535452E-6	DESIGN
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9958831481397766	WITHOUT_CLASSIFICATION	0.0041168518602234475	DESIGN
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999947234329203	WITHOUT_CLASSIFICATION	5.276567079733915E-6	DESIGN
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999947234329203	WITHOUT_CLASSIFICATION	5.276567079733915E-6	DESIGN
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999999644448626	WITHOUT_CLASSIFICATION	3.555513732597377E-8	DESIGN
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999997739451499	WITHOUT_CLASSIFICATION	2.2605485005251846E-7	DESIGN
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999996512787152	WITHOUT_CLASSIFICATION	3.487212848200754E-7	DESIGN
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999851723490489	WITHOUT_CLASSIFICATION	1.4827650951150834E-5	DESIGN
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.999999873220082	WITHOUT_CLASSIFICATION	1.2677991811381078E-7	DESIGN
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999999952262255	WITHOUT_CLASSIFICATION	4.773774498302252E-9	DESIGN
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999997205568013	WITHOUT_CLASSIFICATION	2.794431987319104E-7	DESIGN
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999811786783918	WITHOUT_CLASSIFICATION	1.8821321608281732E-5	DESIGN
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9995882361463639	WITHOUT_CLASSIFICATION	4.11763853636049E-4	DESIGN
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999938785615424	WITHOUT_CLASSIFICATION	6.12143845760317E-6	DESIGN
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999989257059148	WITHOUT_CLASSIFICATION	1.0742940852803381E-6	DESIGN
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999989257059148	WITHOUT_CLASSIFICATION	1.0742940852803381E-6	DESIGN
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9981911926040419	DESIGN	0.0018088073959582106	WITHOUT_CLASSIFICATION
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9994758165176757	WITHOUT_CLASSIFICATION	5.241834823243083E-4	DESIGN
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999999996981834	WITHOUT_CLASSIFICATION	3.018166169452154E-10	DESIGN
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999998727441641	WITHOUT_CLASSIFICATION	1.2725583598783012E-7	DESIGN
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.999999998368527	WITHOUT_CLASSIFICATION	1.6314729260744039E-9	DESIGN
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999999960144773	WITHOUT_CLASSIFICATION	3.985522779078096E-9	DESIGN
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999999620587461	WITHOUT_CLASSIFICATION	3.7941253862844955E-8	DESIGN
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999999585447578	WITHOUT_CLASSIFICATION	4.145524216033954E-8	DESIGN
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999999323037261	WITHOUT_CLASSIFICATION	6.769627395071246E-8	DESIGN
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999825608627687	WITHOUT_CLASSIFICATION	1.7439137231211932E-5	DESIGN
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999923389699408	WITHOUT_CLASSIFICATION	7.661030059234968E-6	DESIGN
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999999735578289	WITHOUT_CLASSIFICATION	2.6442171165059363E-8	DESIGN
// Return false here	WITHOUT_CLASSIFICATION	0.9999978077259812	WITHOUT_CLASSIFICATION	2.19227401882035E-6	DESIGN
// Return false here	WITHOUT_CLASSIFICATION	0.9999978077259812	WITHOUT_CLASSIFICATION	2.19227401882035E-6	DESIGN
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9999979530985434	WITHOUT_CLASSIFICATION	2.0469014564369924E-6	DESIGN
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9787298173172093	WITHOUT_CLASSIFICATION	0.021270182682790743	DESIGN
/* File class methods */	WITHOUT_CLASSIFICATION	0.999977540928109	WITHOUT_CLASSIFICATION	2.2459071890965613E-5	DESIGN
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.999994004675594	WITHOUT_CLASSIFICATION	5.995324406083376E-6	DESIGN
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999493538361466	WITHOUT_CLASSIFICATION	5.0646163853319086E-5	DESIGN
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9998572423801905	WITHOUT_CLASSIFICATION	1.427576198095905E-4	DESIGN
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999999881429975	WITHOUT_CLASSIFICATION	1.1857002483747338E-8	DESIGN
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.999999937827157	WITHOUT_CLASSIFICATION	6.217284292863624E-8	DESIGN
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9999985040795206	WITHOUT_CLASSIFICATION	1.495920479353443E-6	DESIGN
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9994863113929442	WITHOUT_CLASSIFICATION	5.136886070558988E-4	DESIGN
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999999996981834	WITHOUT_CLASSIFICATION	3.018166169452154E-10	DESIGN
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9999990561581035	WITHOUT_CLASSIFICATION	9.438418965389205E-7	DESIGN
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9969176734028609	WITHOUT_CLASSIFICATION	0.0030823265971391066	DESIGN
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999999917519338	WITHOUT_CLASSIFICATION	8.24806617683429E-9	DESIGN
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999987072511967	WITHOUT_CLASSIFICATION	1.292748803275426E-6	DESIGN
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9993685470093978	WITHOUT_CLASSIFICATION	6.314529906020769E-4	DESIGN
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9998802972211752	WITHOUT_CLASSIFICATION	1.1970277882474637E-4	DESIGN
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999664683084515	WITHOUT_CLASSIFICATION	3.353169154849202E-5	DESIGN
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999235826718541	WITHOUT_CLASSIFICATION	7.641732814597713E-5	DESIGN
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999999955978639	WITHOUT_CLASSIFICATION	4.402136058094094E-9	DESIGN
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999983047698385	WITHOUT_CLASSIFICATION	1.6952301614886884E-6	DESIGN
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999957277145928	WITHOUT_CLASSIFICATION	4.272285407193011E-6	DESIGN
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.5134644807223259	WITHOUT_CLASSIFICATION	0.486535519277674	DESIGN
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.99999998165196	WITHOUT_CLASSIFICATION	1.8348039957272964E-8	DESIGN
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999981767009534	WITHOUT_CLASSIFICATION	1.8232990465256683E-6	DESIGN
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9997265433840853	WITHOUT_CLASSIFICATION	2.734566159146449E-4	DESIGN
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999648195956555	WITHOUT_CLASSIFICATION	3.5180404344554365E-5	DESIGN
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.99993170324028	WITHOUT_CLASSIFICATION	6.829675971989226E-5	DESIGN
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999939831342002	WITHOUT_CLASSIFICATION	6.016865799861057E-6	DESIGN
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9998523281154935	WITHOUT_CLASSIFICATION	1.476718845064825E-4	DESIGN
// rename is successful	WITHOUT_CLASSIFICATION	0.9996566368015993	WITHOUT_CLASSIFICATION	3.4336319840064483E-4	DESIGN
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9976009697264266	WITHOUT_CLASSIFICATION	0.002399030273573225	DESIGN
// try to rename one more time	WITHOUT_CLASSIFICATION	0.999927416491835	WITHOUT_CLASSIFICATION	7.258350816495188E-5	DESIGN
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9999408613650899	WITHOUT_CLASSIFICATION	5.913863491006661E-5	DESIGN
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.999997699143872	WITHOUT_CLASSIFICATION	2.3008561280075737E-6	DESIGN
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9999923255153372	WITHOUT_CLASSIFICATION	7.674484662696052E-6	DESIGN
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999990419112645	WITHOUT_CLASSIFICATION	9.580887355021435E-7	DESIGN
// 16 ?	WITHOUT_CLASSIFICATION	0.999892454432765	WITHOUT_CLASSIFICATION	1.0754556723499563E-4	DESIGN
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999998648052754	WITHOUT_CLASSIFICATION	1.3519472465417823E-7	DESIGN
// size + 1;	WITHOUT_CLASSIFICATION	0.9999851061364818	WITHOUT_CLASSIFICATION	1.4893863518097047E-5	DESIGN
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999999861061584	WITHOUT_CLASSIFICATION	1.3893841568218501E-8	DESIGN
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999999672898189	WITHOUT_CLASSIFICATION	3.271018108010628E-8	DESIGN
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999999672898189	WITHOUT_CLASSIFICATION	3.271018108010628E-8	DESIGN
// put implementation	WITHOUT_CLASSIFICATION	0.9999976015899587	WITHOUT_CLASSIFICATION	2.3984100413023964E-6	DESIGN
// get implementation	WITHOUT_CLASSIFICATION	0.9999977705647481	WITHOUT_CLASSIFICATION	2.229435251777586E-6	DESIGN
// specialized for value	WITHOUT_CLASSIFICATION	0.9999992230620075	WITHOUT_CLASSIFICATION	7.769379925302528E-7	DESIGN
// delete implementation	WITHOUT_CLASSIFICATION	0.999911165513105	WITHOUT_CLASSIFICATION	8.883448689491508E-5	DESIGN
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9832752310657824	WITHOUT_CLASSIFICATION	0.016724768934217683	DESIGN
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999997463073104	WITHOUT_CLASSIFICATION	2.5369268964767374E-7	DESIGN
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.999992862229279	WITHOUT_CLASSIFICATION	7.137770721087423E-6	DESIGN
// update the hash value	WITHOUT_CLASSIFICATION	0.9999982611196904	WITHOUT_CLASSIFICATION	1.7388803097161795E-6	DESIGN
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9999980220451417	WITHOUT_CLASSIFICATION	1.977954858456715E-6	DESIGN
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999825614174355	WITHOUT_CLASSIFICATION	1.7438582564582784E-5	DESIGN
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999999384266224	WITHOUT_CLASSIFICATION	6.157337766142639E-8	DESIGN
// remain where we are	WITHOUT_CLASSIFICATION	0.9999980090795256	WITHOUT_CLASSIFICATION	1.9909204742944907E-6	DESIGN
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999999665690232	WITHOUT_CLASSIFICATION	3.343097673764898E-8	DESIGN
// default: don't retain	WITHOUT_CLASSIFICATION	0.9993997524277205	WITHOUT_CLASSIFICATION	6.002475722795109E-4	DESIGN
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999999997766378	WITHOUT_CLASSIFICATION	2.2336213328887936E-10	DESIGN
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999973393066068	WITHOUT_CLASSIFICATION	2.6606933932580446E-6	DESIGN
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.999987923936687	WITHOUT_CLASSIFICATION	1.20760633129096E-5	DESIGN
// first try as directory	WITHOUT_CLASSIFICATION	0.9999999830415086	WITHOUT_CLASSIFICATION	1.695849134399825E-8	DESIGN
// next as regular file	WITHOUT_CLASSIFICATION	0.9999351443370406	WITHOUT_CLASSIFICATION	6.485566295940466E-5	DESIGN
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9687862964192138	WITHOUT_CLASSIFICATION	0.031213703580786293	DESIGN
// NIO-based	WITHOUT_CLASSIFICATION	0.9999848371085582	WITHOUT_CLASSIFICATION	1.5162891441837431E-5	DESIGN
// NIO-based	WITHOUT_CLASSIFICATION	0.9999848371085582	WITHOUT_CLASSIFICATION	1.5162891441837431E-5	DESIGN
// Stream-based	WITHOUT_CLASSIFICATION	0.9999293111037202	WITHOUT_CLASSIFICATION	7.06888962798072E-5	DESIGN
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9999999122992801	WITHOUT_CLASSIFICATION	8.770071990892034E-8	DESIGN
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999953814276998	WITHOUT_CLASSIFICATION	4.618572300218802E-6	DESIGN
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999992504911411	WITHOUT_CLASSIFICATION	7.495088588430899E-7	DESIGN
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999999823528634	WITHOUT_CLASSIFICATION	1.7647136553266065E-8	DESIGN
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999999974504808	WITHOUT_CLASSIFICATION	2.5495191619099035E-9	DESIGN
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999986416847904	WITHOUT_CLASSIFICATION	1.3583152096739593E-6	DESIGN
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999999982339	WITHOUT_CLASSIFICATION	1.7660887326532169E-12	DESIGN
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999900169296424	WITHOUT_CLASSIFICATION	9.98307035763869E-6	DESIGN
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999993102992423	WITHOUT_CLASSIFICATION	6.897007577797664E-7	DESIGN
// re-register	WITHOUT_CLASSIFICATION	0.9999970537223832	WITHOUT_CLASSIFICATION	2.9462776167146906E-6	DESIGN
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999998866149958	WITHOUT_CLASSIFICATION	1.133850041466154E-7	DESIGN
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999994787298045	WITHOUT_CLASSIFICATION	5.212701954466686E-7	DESIGN
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999999925827348	WITHOUT_CLASSIFICATION	7.41726528945101E-9	DESIGN
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999999993386641	WITHOUT_CLASSIFICATION	6.613359088685541E-10	DESIGN
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.8292661982386778	WITHOUT_CLASSIFICATION	0.17073380176132225	DESIGN
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999939745098553	WITHOUT_CLASSIFICATION	6.025490144746204E-6	DESIGN
// use original modes	WITHOUT_CLASSIFICATION	0.9999901634440739	WITHOUT_CLASSIFICATION	9.836555926148254E-6	DESIGN
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999997916322999	WITHOUT_CLASSIFICATION	2.0836770003771803E-7	DESIGN
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9990172396429875	WITHOUT_CLASSIFICATION	9.827603570125346E-4	DESIGN
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9999711933800399	WITHOUT_CLASSIFICATION	2.8806619960015194E-5	DESIGN
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999997747262183	WITHOUT_CLASSIFICATION	2.2527378185203887E-7	DESIGN
// isRetained=true	WITHOUT_CLASSIFICATION	0.9999914091779425	WITHOUT_CLASSIFICATION	8.590822057507702E-6	DESIGN
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999435995090145	WITHOUT_CLASSIFICATION	5.640049098559772E-5	DESIGN
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999988597698745	WITHOUT_CLASSIFICATION	1.1402301255659993E-6	DESIGN
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9999994599554544	WITHOUT_CLASSIFICATION	5.400445456931135E-7	DESIGN
//Everything written	WITHOUT_CLASSIFICATION	0.9997300311587585	WITHOUT_CLASSIFICATION	2.6996884124158376E-4	DESIGN
//            return len - n;	WITHOUT_CLASSIFICATION	0.999994951086175	WITHOUT_CLASSIFICATION	5.0489138249492506E-6	DESIGN
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.999997680972018	WITHOUT_CLASSIFICATION	2.3190279819601833E-6	DESIGN
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9880332992994808	WITHOUT_CLASSIFICATION	0.011966700700519322	DESIGN
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999978717549544	WITHOUT_CLASSIFICATION	2.1282450457395805E-6	DESIGN
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9998731989751978	WITHOUT_CLASSIFICATION	1.2680102480224607E-4	DESIGN
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9994278752365015	WITHOUT_CLASSIFICATION	5.72124763498515E-4	DESIGN
// hmmmm	WITHOUT_CLASSIFICATION	0.9998854608377006	WITHOUT_CLASSIFICATION	1.1453916229936295E-4	DESIGN
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999997232850875	WITHOUT_CLASSIFICATION	2.7671491257974384E-7	DESIGN
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999532681684317	WITHOUT_CLASSIFICATION	4.6731831568198365E-5	DESIGN
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999988267111412	WITHOUT_CLASSIFICATION	1.1732888587960338E-6	DESIGN
// Length to read	WITHOUT_CLASSIFICATION	0.9999990572783816	WITHOUT_CLASSIFICATION	9.427216185429662E-7	DESIGN
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9998684196025115	WITHOUT_CLASSIFICATION	1.315803974885571E-4	DESIGN
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999846280389341	WITHOUT_CLASSIFICATION	1.537196106598926E-5	DESIGN
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999935517339816	WITHOUT_CLASSIFICATION	6.448266018399816E-6	DESIGN
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999998705426891	WITHOUT_CLASSIFICATION	1.2945731092762912E-7	DESIGN
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999999817118139	WITHOUT_CLASSIFICATION	1.8288186108960222E-8	DESIGN
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9998593192597315	WITHOUT_CLASSIFICATION	1.4068074026850442E-4	DESIGN
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999590660219417	WITHOUT_CLASSIFICATION	4.0933978058295767E-5	DESIGN
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9998593192597315	WITHOUT_CLASSIFICATION	1.4068074026850442E-4	DESIGN
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999998915614893	DESIGN	1.0843851063143866E-7	WITHOUT_CLASSIFICATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.8485212188460066	DESIGN	0.1514787811539935	WITHOUT_CLASSIFICATION
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999972324664563	WITHOUT_CLASSIFICATION	2.767533543669483E-6	DESIGN
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.986311403336698	DESIGN	0.013688596663301989	WITHOUT_CLASSIFICATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999803527071712	WITHOUT_CLASSIFICATION	1.964729282876961E-5	DESIGN
// save blocking state	WITHOUT_CLASSIFICATION	0.9999571410284553	WITHOUT_CLASSIFICATION	4.2858971544757386E-5	DESIGN
// write	WITHOUT_CLASSIFICATION	0.999985963218429	WITHOUT_CLASSIFICATION	1.4036781570938396E-5	DESIGN
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9999991069323859	WITHOUT_CLASSIFICATION	8.930676140665602E-7	DESIGN
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999995803236895	WITHOUT_CLASSIFICATION	4.1967631044568546E-7	DESIGN
// FIXME: process options	WITHOUT_CLASSIFICATION	0.6146231997196102	DESIGN	0.38537680028038984	WITHOUT_CLASSIFICATION
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.993676174045885	WITHOUT_CLASSIFICATION	0.006323825954114982	DESIGN
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9999750930331258	WITHOUT_CLASSIFICATION	2.4906966874228144E-5	DESIGN
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9983655797474092	WITHOUT_CLASSIFICATION	0.0016344202525907334	DESIGN
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.99999988024339	WITHOUT_CLASSIFICATION	1.197566099009796E-7	DESIGN
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9999950731374209	WITHOUT_CLASSIFICATION	4.92686257909807E-6	DESIGN
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.927842948331199	WITHOUT_CLASSIFICATION	0.07215705166880103	DESIGN
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999988223409232	WITHOUT_CLASSIFICATION	1.1776590767659505E-6	DESIGN
// The class of this object	WITHOUT_CLASSIFICATION	0.9999214269252946	WITHOUT_CLASSIFICATION	7.857307470541043E-5	DESIGN
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.999998450099495	WITHOUT_CLASSIFICATION	1.5499005050430077E-6	DESIGN
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9999642752287624	WITHOUT_CLASSIFICATION	3.572477123759659E-5	DESIGN
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.999987020887473	WITHOUT_CLASSIFICATION	1.2979112526900301E-5	DESIGN
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9999994376067203	WITHOUT_CLASSIFICATION	5.623932797940076E-7	DESIGN
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999840465128191	WITHOUT_CLASSIFICATION	1.5953487180910744E-5	DESIGN
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999989704192097	WITHOUT_CLASSIFICATION	1.0295807903300862E-6	DESIGN
// for interface impls	WITHOUT_CLASSIFICATION	0.999976754238512	WITHOUT_CLASSIFICATION	2.3245761488031453E-5	DESIGN
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9997903445238936	WITHOUT_CLASSIFICATION	2.096554761063881E-4	DESIGN
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999801221953908	WITHOUT_CLASSIFICATION	1.9877804609252817E-5	DESIGN
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.999967921179013	WITHOUT_CLASSIFICATION	3.207882098706321E-5	DESIGN
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999940131511742	WITHOUT_CLASSIFICATION	5.986848825867247E-6	DESIGN
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999810935514258	WITHOUT_CLASSIFICATION	1.8906448574198855E-5	DESIGN
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999999512382072	WITHOUT_CLASSIFICATION	4.876179280219474E-8	DESIGN
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999999698320386	WITHOUT_CLASSIFICATION	3.016796131644575E-8	DESIGN
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999999706783672	WITHOUT_CLASSIFICATION	2.9321632748582772E-8	DESIGN
// Struct methods	WITHOUT_CLASSIFICATION	0.9999794528236035	WITHOUT_CLASSIFICATION	2.0547176396489427E-5	DESIGN
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9999999999947756	WITHOUT_CLASSIFICATION	5.224389317227251E-12	DESIGN
// define access methods.	WITHOUT_CLASSIFICATION	0.9999894645936633	WITHOUT_CLASSIFICATION	1.053540633662205E-5	DESIGN
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999496495378533	WITHOUT_CLASSIFICATION	5.035046214668845E-5	DESIGN
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9588667472426698	WITHOUT_CLASSIFICATION	0.04113325275733024	DESIGN
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999966085805043	WITHOUT_CLASSIFICATION	3.391419495710055E-6	DESIGN
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999999622700803	WITHOUT_CLASSIFICATION	3.7729919855342974E-8	DESIGN
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999999974009501	WITHOUT_CLASSIFICATION	2.5990498179781134E-9	DESIGN
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999985531903641	WITHOUT_CLASSIFICATION	1.4468096359133308E-6	DESIGN
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999999249433748	WITHOUT_CLASSIFICATION	7.505662524798493E-8	DESIGN
// Atomic ?	WITHOUT_CLASSIFICATION	0.999750174498507	WITHOUT_CLASSIFICATION	2.498255014930324E-4	DESIGN
// Atomic ?	WITHOUT_CLASSIFICATION	0.999750174498507	WITHOUT_CLASSIFICATION	2.498255014930324E-4	DESIGN
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9793686478409387	WITHOUT_CLASSIFICATION	0.020631352159061304	DESIGN
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9986949444115208	WITHOUT_CLASSIFICATION	0.0013050555884790683	DESIGN
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9898066320007094	WITHOUT_CLASSIFICATION	0.010193367999290692	DESIGN
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.99999999435198	WITHOUT_CLASSIFICATION	5.648020087770529E-9	DESIGN
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999992525440304	WITHOUT_CLASSIFICATION	7.474559696498126E-7	DESIGN
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999971436532714	WITHOUT_CLASSIFICATION	2.8563467285452675E-6	DESIGN
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.999999233395742	WITHOUT_CLASSIFICATION	7.666042580328581E-7	DESIGN
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.999979012190038	WITHOUT_CLASSIFICATION	2.098780996206064E-5	DESIGN
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9997561085898539	WITHOUT_CLASSIFICATION	2.4389141014610757E-4	DESIGN
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9994565652391335	WITHOUT_CLASSIFICATION	5.434347608665722E-4	DESIGN
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999998838658187	WITHOUT_CLASSIFICATION	1.1613418119074979E-7	DESIGN
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999156669428139	WITHOUT_CLASSIFICATION	8.433305718618537E-5	DESIGN
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9995036518673147	WITHOUT_CLASSIFICATION	4.96348132685322E-4	DESIGN
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9998130881811284	WITHOUT_CLASSIFICATION	1.8691181887159897E-4	DESIGN
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9980498970066464	WITHOUT_CLASSIFICATION	0.00195010299335362	DESIGN
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9999956126910805	WITHOUT_CLASSIFICATION	4.387308919465364E-6	DESIGN
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999808137121804	WITHOUT_CLASSIFICATION	1.9186287819598706E-5	DESIGN
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999878462253294	WITHOUT_CLASSIFICATION	1.2153774670575153E-5	DESIGN
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9999625545062838	WITHOUT_CLASSIFICATION	3.7445493716219496E-5	DESIGN
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999975639494492	WITHOUT_CLASSIFICATION	2.4360505509004615E-6	DESIGN
//FIXME warning	WITHOUT_CLASSIFICATION	0.9306415066630207	DESIGN	0.06935849333697937	WITHOUT_CLASSIFICATION
// FIXME warning	WITHOUT_CLASSIFICATION	0.561541315295803	WITHOUT_CLASSIFICATION	0.438458684704197	DESIGN
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9983552357485846	WITHOUT_CLASSIFICATION	0.0016447642514154175	DESIGN
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.6851245539405558	WITHOUT_CLASSIFICATION	0.31487544605944423	DESIGN
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.732861535127821	WITHOUT_CLASSIFICATION	0.26713846487217896	DESIGN
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999984302271231	WITHOUT_CLASSIFICATION	1.5697728768988653E-6	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9998986537911806	WITHOUT_CLASSIFICATION	1.0134620881941997E-4	DESIGN
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9997182999524743	WITHOUT_CLASSIFICATION	2.8170004752568094E-4	DESIGN
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999980696302828	WITHOUT_CLASSIFICATION	1.9303697171631435E-6	DESIGN
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999957589836115	WITHOUT_CLASSIFICATION	4.241016388508721E-6	DESIGN
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.8218967307679549	DESIGN	0.1781032692320451	WITHOUT_CLASSIFICATION
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999993672205483	WITHOUT_CLASSIFICATION	6.327794517718412E-7	DESIGN
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.999999999637108	WITHOUT_CLASSIFICATION	3.6289206649510706E-10	DESIGN
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999842172813114	WITHOUT_CLASSIFICATION	1.5782718688680653E-5	DESIGN
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999999965355054	WITHOUT_CLASSIFICATION	3.4644944782282006E-9	DESIGN
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999998615428666	WITHOUT_CLASSIFICATION	1.3845713344394674E-7	DESIGN
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999999215101525	WITHOUT_CLASSIFICATION	7.848984757973228E-8	DESIGN
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999997603328743	WITHOUT_CLASSIFICATION	2.396671256938493E-7	DESIGN
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.8551173167254911	WITHOUT_CLASSIFICATION	0.14488268327450896	DESIGN
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999998963785584	WITHOUT_CLASSIFICATION	1.036214416483429E-7	DESIGN
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9998902141944483	WITHOUT_CLASSIFICATION	1.0978580555168107E-4	DESIGN
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9999945739510756	WITHOUT_CLASSIFICATION	5.426048924397923E-6	DESIGN
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9999131565344783	WITHOUT_CLASSIFICATION	8.684346552169474E-5	DESIGN
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999768350681151	WITHOUT_CLASSIFICATION	2.316493188494228E-5	DESIGN
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999076974348342	WITHOUT_CLASSIFICATION	9.230256516576764E-5	DESIGN
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999999879789508	WITHOUT_CLASSIFICATION	1.2021049164247957E-8	DESIGN
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999996159102995	WITHOUT_CLASSIFICATION	3.840897005147739E-7	DESIGN
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999949704068807	WITHOUT_CLASSIFICATION	5.029593119293317E-6	DESIGN
//reopen	WITHOUT_CLASSIFICATION	0.9999615477526567	WITHOUT_CLASSIFICATION	3.845224734342491E-5	DESIGN
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999991115643272	WITHOUT_CLASSIFICATION	8.884356727347504E-7	DESIGN
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999999927777881	WITHOUT_CLASSIFICATION	7.222211987928771E-9	DESIGN
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9999994932728634	WITHOUT_CLASSIFICATION	5.067271365269565E-7	DESIGN
// one optional and no required args	WITHOUT_CLASSIFICATION	0.999999991508761	WITHOUT_CLASSIFICATION	8.491239051828416E-9	DESIGN
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999989692495539	WITHOUT_CLASSIFICATION	1.0307504460267444E-6	DESIGN
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999787291796965	WITHOUT_CLASSIFICATION	2.1270820303531344E-5	DESIGN
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.999985217941349	WITHOUT_CLASSIFICATION	1.4782058651102746E-5	DESIGN
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999783738391197	WITHOUT_CLASSIFICATION	2.1626160880300133E-5	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.8221989317279293	DESIGN	0.1778010682720706	WITHOUT_CLASSIFICATION
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.998568455092626	WITHOUT_CLASSIFICATION	0.0014315449073739738	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999845673813981	WITHOUT_CLASSIFICATION	1.5432618601957016E-5	DESIGN
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999992866074388	WITHOUT_CLASSIFICATION	7.133925612771764E-7	DESIGN
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999996136206618	WITHOUT_CLASSIFICATION	3.863793381783091E-7	DESIGN
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999999423739885	WITHOUT_CLASSIFICATION	5.7626011390301343E-8	DESIGN
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999987565503714	WITHOUT_CLASSIFICATION	1.243449628510009E-6	DESIGN
// ignore error	WITHOUT_CLASSIFICATION	0.999971399939961	WITHOUT_CLASSIFICATION	2.860006003898957E-5	DESIGN
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999999733690145	WITHOUT_CLASSIFICATION	2.663098547270688E-8	DESIGN
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999999156473065	WITHOUT_CLASSIFICATION	8.435269358705611E-8	DESIGN
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999999995136267	WITHOUT_CLASSIFICATION	4.863732223874603E-10	DESIGN
// odd	WITHOUT_CLASSIFICATION	0.9999574789169621	WITHOUT_CLASSIFICATION	4.252108303781158E-5	DESIGN
// JRubyClient	WITHOUT_CLASSIFICATION	0.9999651111347327	WITHOUT_CLASSIFICATION	3.488886526716395E-5	DESIGN
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999978598308583	WITHOUT_CLASSIFICATION	2.1401691416794416E-6	DESIGN
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9917477920763828	WITHOUT_CLASSIFICATION	0.00825220792361724	DESIGN
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999999796147954	WITHOUT_CLASSIFICATION	2.038520470318504E-8	DESIGN
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999932554628317	WITHOUT_CLASSIFICATION	6.744537168306416E-6	DESIGN
/*  0! */	WITHOUT_CLASSIFICATION	0.9999717824855251	WITHOUT_CLASSIFICATION	2.8217514474880213E-5	DESIGN
/*  1! */	WITHOUT_CLASSIFICATION	0.9999749516704026	WITHOUT_CLASSIFICATION	2.5048329597358644E-5	DESIGN
/*  2! */	WITHOUT_CLASSIFICATION	0.999988400275373	WITHOUT_CLASSIFICATION	1.1599724627084726E-5	DESIGN
/*  3! */	WITHOUT_CLASSIFICATION	0.9999349929127211	WITHOUT_CLASSIFICATION	6.500708727883333E-5	DESIGN
/*  4! */	WITHOUT_CLASSIFICATION	0.9999677652688608	WITHOUT_CLASSIFICATION	3.2234731139256834E-5	DESIGN
/*  5! */	WITHOUT_CLASSIFICATION	0.9999581778499468	WITHOUT_CLASSIFICATION	4.182215005323626E-5	DESIGN
/*  6! */	WITHOUT_CLASSIFICATION	0.9999399552439915	WITHOUT_CLASSIFICATION	6.0044756008664996E-5	DESIGN
/*  7! */	WITHOUT_CLASSIFICATION	0.9999680463149588	WITHOUT_CLASSIFICATION	3.195368504126589E-5	DESIGN
/*  8! */	WITHOUT_CLASSIFICATION	0.9999745407808625	WITHOUT_CLASSIFICATION	2.545921913750309E-5	DESIGN
/*  9! */	WITHOUT_CLASSIFICATION	0.9999634187138299	WITHOUT_CLASSIFICATION	3.658128617010829E-5	DESIGN
/* 11! */	WITHOUT_CLASSIFICATION	0.9999859553101752	WITHOUT_CLASSIFICATION	1.4044689824856552E-5	DESIGN
/* 12! */	WITHOUT_CLASSIFICATION	0.9999932099564156	WITHOUT_CLASSIFICATION	6.790043584462658E-6	DESIGN
/* 13! */	WITHOUT_CLASSIFICATION	0.9999645039297995	WITHOUT_CLASSIFICATION	3.5496070200524776E-5	DESIGN
/* 15! */	WITHOUT_CLASSIFICATION	0.9999839444545927	WITHOUT_CLASSIFICATION	1.605554540725328E-5	DESIGN
/* 16! */	WITHOUT_CLASSIFICATION	0.999955366196595	WITHOUT_CLASSIFICATION	4.4633803404955936E-5	DESIGN
/* 17! */	WITHOUT_CLASSIFICATION	0.9999851874688277	WITHOUT_CLASSIFICATION	1.4812531172160848E-5	DESIGN
/* 19! */	WITHOUT_CLASSIFICATION	0.9999834112162058	WITHOUT_CLASSIFICATION	1.658878379425396E-5	DESIGN
/* 20! */	WITHOUT_CLASSIFICATION	0.9999889917909748	WITHOUT_CLASSIFICATION	1.1008209025283958E-5	DESIGN
/* 21! */	WITHOUT_CLASSIFICATION	0.9999936958779251	WITHOUT_CLASSIFICATION	6.304122074824929E-6	DESIGN
// Static constants	WITHOUT_CLASSIFICATION	0.9999980912208434	WITHOUT_CLASSIFICATION	1.908779156714281E-6	DESIGN
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9210965875806165	WITHOUT_CLASSIFICATION	0.07890341241938348	DESIGN
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.999963917120128	WITHOUT_CLASSIFICATION	3.60828798720618E-5	DESIGN
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999998577103122	WITHOUT_CLASSIFICATION	1.4228968780710396E-7	DESIGN
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9997870212152148	WITHOUT_CLASSIFICATION	2.1297878478519766E-4	DESIGN
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9998625267838266	WITHOUT_CLASSIFICATION	1.3747321617345752E-4	DESIGN
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999910063166588	WITHOUT_CLASSIFICATION	8.993683341213286E-6	DESIGN
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9809499838553913	WITHOUT_CLASSIFICATION	0.019050016144608682	DESIGN
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999999525865978	WITHOUT_CLASSIFICATION	4.741340206593944E-8	DESIGN
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999994260803541	WITHOUT_CLASSIFICATION	5.739196459394356E-7	DESIGN
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.8507498090419374	DESIGN	0.14925019095806258	WITHOUT_CLASSIFICATION
// integer division	WITHOUT_CLASSIFICATION	0.9999954455672314	WITHOUT_CLASSIFICATION	4.554432768582042E-6	DESIGN
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999999102471652	WITHOUT_CLASSIFICATION	8.975283483209752E-8	DESIGN
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999467282946509	WITHOUT_CLASSIFICATION	5.327170534914151E-5	DESIGN
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999467282946509	WITHOUT_CLASSIFICATION	5.327170534914151E-5	DESIGN
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999768622834923	WITHOUT_CLASSIFICATION	2.313771650763687E-5	DESIGN
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9995531092636926	WITHOUT_CLASSIFICATION	4.468907363074891E-4	DESIGN
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999917733638434	WITHOUT_CLASSIFICATION	8.226636156586395E-6	DESIGN
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9999594715046374	WITHOUT_CLASSIFICATION	4.052849536267428E-5	DESIGN
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9708434906652045	WITHOUT_CLASSIFICATION	0.02915650933479552	DESIGN
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9988208080670873	WITHOUT_CLASSIFICATION	0.0011791919329127369	DESIGN
// sign	WITHOUT_CLASSIFICATION	0.9999759282137788	WITHOUT_CLASSIFICATION	2.40717862212288E-5	DESIGN
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.999995564835691	WITHOUT_CLASSIFICATION	4.435164309094839E-6	DESIGN
// normalize the value	WITHOUT_CLASSIFICATION	0.9999930278316955	WITHOUT_CLASSIFICATION	6.972168304505721E-6	DESIGN
// base	WITHOUT_CLASSIFICATION	0.9999998540652792	WITHOUT_CLASSIFICATION	1.459347207412315E-7	DESIGN
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9999998677864308	WITHOUT_CLASSIFICATION	1.322135691727115E-7	DESIGN
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999832449184983	WITHOUT_CLASSIFICATION	1.6755081501710377E-5	DESIGN
// eh?!	WITHOUT_CLASSIFICATION	0.9997626840950985	WITHOUT_CLASSIFICATION	2.373159049014432E-4	DESIGN
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999984465221105	WITHOUT_CLASSIFICATION	1.5534778895857847E-6	DESIGN
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9939404141962329	WITHOUT_CLASSIFICATION	0.0060595858037670825	DESIGN
// the requested precision	WITHOUT_CLASSIFICATION	0.9999272634240681	WITHOUT_CLASSIFICATION	7.273657593180618E-5	DESIGN
// Proc class	WITHOUT_CLASSIFICATION	0.9999817752933579	WITHOUT_CLASSIFICATION	1.822470664221939E-5	DESIGN
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999959782561785	WITHOUT_CLASSIFICATION	4.0217438215236625E-6	DESIGN
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999974856801789	WITHOUT_CLASSIFICATION	2.514319821263627E-6	DESIGN
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999571305370566	WITHOUT_CLASSIFICATION	4.2869462943352895E-5	DESIGN
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999977196011255	WITHOUT_CLASSIFICATION	2.280398874384708E-6	DESIGN
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.8883714915328553	DESIGN	0.11162850846714469	WITHOUT_CLASSIFICATION
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999957813832367	WITHOUT_CLASSIFICATION	4.218616763244849E-6	DESIGN
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999991187422046	WITHOUT_CLASSIFICATION	8.812577954748999E-7	DESIGN
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999999996169358	WITHOUT_CLASSIFICATION	3.8306427433259634E-10	DESIGN
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999651906333286	WITHOUT_CLASSIFICATION	3.480936667131043E-5	DESIGN
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999999131487916	WITHOUT_CLASSIFICATION	8.685120846960379E-8	DESIGN
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999876337321162	WITHOUT_CLASSIFICATION	1.236626788373361E-5	DESIGN
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999994233454885	WITHOUT_CLASSIFICATION	5.766545114606521E-7	DESIGN
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999997639645819	WITHOUT_CLASSIFICATION	2.3603541804195925E-7	DESIGN
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999955721418865	WITHOUT_CLASSIFICATION	4.427858113465354E-6	DESIGN
// root x is ready!	WITHOUT_CLASSIFICATION	0.9997407969699927	WITHOUT_CLASSIFICATION	2.592030300071766E-4	DESIGN
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9999999243513489	WITHOUT_CLASSIFICATION	7.564865108030489E-8	DESIGN
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999999041289663	WITHOUT_CLASSIFICATION	9.587103357545055E-8	DESIGN
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999890210968928	WITHOUT_CLASSIFICATION	1.097890310714929E-5	DESIGN
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9999867955831497	WITHOUT_CLASSIFICATION	1.320441685026172E-5	DESIGN
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999956031689738	WITHOUT_CLASSIFICATION	4.396831026090251E-6	DESIGN
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999999720797147	WITHOUT_CLASSIFICATION	2.792028539142331E-8	DESIGN
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9995803366352506	WITHOUT_CLASSIFICATION	4.196633647493612E-4	DESIGN
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999834273024456	WITHOUT_CLASSIFICATION	1.6572697554359384E-5	DESIGN
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.8003035733794598	WITHOUT_CLASSIFICATION	0.1996964266205401	DESIGN
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999496508735009	WITHOUT_CLASSIFICATION	5.034912649918919E-5	DESIGN
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999999204917186	WITHOUT_CLASSIFICATION	7.95082814939942E-8	DESIGN
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999916057093708	WITHOUT_CLASSIFICATION	8.394290629231816E-6	DESIGN
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999916057093708	WITHOUT_CLASSIFICATION	8.394290629231816E-6	DESIGN
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999866192096143	WITHOUT_CLASSIFICATION	1.3380790385635002E-5	DESIGN
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999891032364654	WITHOUT_CLASSIFICATION	1.0896763534638329E-5	DESIGN
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999193827516631	WITHOUT_CLASSIFICATION	8.061724833679369E-5	DESIGN
//consume the file name	WITHOUT_CLASSIFICATION	0.9999870681056645	WITHOUT_CLASSIFICATION	1.2931894335588846E-5	DESIGN
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.999885791040497	WITHOUT_CLASSIFICATION	1.142089595029168E-4	DESIGN
// try cwd first	WITHOUT_CLASSIFICATION	0.9999906643369109	WITHOUT_CLASSIFICATION	9.33566308917927E-6	DESIGN
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.99999672226007	WITHOUT_CLASSIFICATION	3.2777399301321145E-6	DESIGN
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9999994057806905	WITHOUT_CLASSIFICATION	5.942193094878353E-7	DESIGN
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9999702559119459	WITHOUT_CLASSIFICATION	2.9744088054215763E-5	DESIGN
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999566107736445	WITHOUT_CLASSIFICATION	4.338922635549388E-5	DESIGN
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999720434832851	WITHOUT_CLASSIFICATION	2.795651671491442E-5	DESIGN
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9990947525790372	WITHOUT_CLASSIFICATION	9.052474209627886E-4	DESIGN
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999999590305239	WITHOUT_CLASSIFICATION	4.0969476090209373E-8	DESIGN
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.999992174943484	WITHOUT_CLASSIFICATION	7.825056516002067E-6	DESIGN
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.9596617162237823	WITHOUT_CLASSIFICATION	0.04033828377621775	DESIGN
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.7341723474635524	DESIGN	0.2658276525364475	WITHOUT_CLASSIFICATION
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.999984503818019	WITHOUT_CLASSIFICATION	1.549618198100487E-5	DESIGN
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.999622413496248	WITHOUT_CLASSIFICATION	3.7758650375196106E-4	DESIGN
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999995090286459	WITHOUT_CLASSIFICATION	4.909713541261166E-7	DESIGN
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999999754979639	WITHOUT_CLASSIFICATION	2.4502036117067237E-8	DESIGN
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999995932626006	WITHOUT_CLASSIFICATION	4.0673739941113506E-7	DESIGN
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999995932626006	WITHOUT_CLASSIFICATION	4.0673739941113506E-7	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999905931384	WITHOUT_CLASSIFICATION	9.406861603762568E-9	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999905931384	WITHOUT_CLASSIFICATION	9.406861603762568E-9	DESIGN
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999999988967563	WITHOUT_CLASSIFICATION	1.1032437228739297E-9	DESIGN
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999783479381144	WITHOUT_CLASSIFICATION	2.165206188568384E-5	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999879148132546	WITHOUT_CLASSIFICATION	1.208518674539991E-5	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999999601538759	WITHOUT_CLASSIFICATION	3.9846124138687555E-8	DESIGN
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999998234572682	WITHOUT_CLASSIFICATION	1.765427317470997E-7	DESIGN
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999999229619273	WITHOUT_CLASSIFICATION	7.703807263799044E-8	DESIGN
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.587056147383191	DESIGN	0.412943852616809	WITHOUT_CLASSIFICATION
// Profile	WITHOUT_CLASSIFICATION	0.9999921701815775	WITHOUT_CLASSIFICATION	7.829818422526565E-6	DESIGN
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999975460767676	WITHOUT_CLASSIFICATION	2.453923232395109E-6	DESIGN
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999999976522962	WITHOUT_CLASSIFICATION	2.347703796773281E-9	DESIGN
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999294275180961	WITHOUT_CLASSIFICATION	7.05724819039172E-5	DESIGN
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.999995343262786	WITHOUT_CLASSIFICATION	4.656737213895866E-6	DESIGN
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999999980577884	WITHOUT_CLASSIFICATION	1.9422116105942693E-9	DESIGN
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9922893394791362	WITHOUT_CLASSIFICATION	0.00771066052086375	DESIGN
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999716068724348	WITHOUT_CLASSIFICATION	2.8393127565220127E-5	DESIGN
// reset the state	WITHOUT_CLASSIFICATION	0.9999953822715365	WITHOUT_CLASSIFICATION	4.617728463557064E-6	DESIGN
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9991475569929529	WITHOUT_CLASSIFICATION	8.524430070470613E-4	DESIGN
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999986133281068	WITHOUT_CLASSIFICATION	1.3866718932343965E-6	DESIGN
//str is frozen	WITHOUT_CLASSIFICATION	0.9999069491768667	WITHOUT_CLASSIFICATION	9.305082313331826E-5	DESIGN
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999918721494373	WITHOUT_CLASSIFICATION	8.127850562698267E-6	DESIGN
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999971650139471	WITHOUT_CLASSIFICATION	2.8349860530007705E-6	DESIGN
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.999999141933699	WITHOUT_CLASSIFICATION	8.580663009596237E-7	DESIGN
// boot the Object class 	WITHOUT_CLASSIFICATION	0.999999874263953	WITHOUT_CLASSIFICATION	1.257360471050153E-7	DESIGN
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999801221953908	WITHOUT_CLASSIFICATION	1.9877804609252817E-5	DESIGN
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999971436532714	WITHOUT_CLASSIFICATION	2.8563467285452675E-6	DESIGN
// undo check	WITHOUT_CLASSIFICATION	0.9999807813117435	WITHOUT_CLASSIFICATION	1.9218688256428905E-5	DESIGN
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9997897223495756	WITHOUT_CLASSIFICATION	2.1027765042431598E-4	DESIGN
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999999578107602	WITHOUT_CLASSIFICATION	4.218923979645296E-8	DESIGN
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9986575081627884	WITHOUT_CLASSIFICATION	0.001342491837211481	DESIGN
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999114076434971	WITHOUT_CLASSIFICATION	8.859235650295051E-5	DESIGN
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999114076434971	WITHOUT_CLASSIFICATION	8.859235650295051E-5	DESIGN
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.81231141649525	WITHOUT_CLASSIFICATION	0.18768858350474998	DESIGN
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999952196416825	WITHOUT_CLASSIFICATION	4.780358317569143E-6	DESIGN
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999999055082662	WITHOUT_CLASSIFICATION	9.44917336887293E-8	DESIGN
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999676312617019	WITHOUT_CLASSIFICATION	3.23687382981979E-5	DESIGN
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999849479406928	WITHOUT_CLASSIFICATION	1.5052059307256098E-5	DESIGN
// static initializing method	WITHOUT_CLASSIFICATION	0.9996220183961954	WITHOUT_CLASSIFICATION	3.7798160380464636E-4	DESIGN
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999977602373111	WITHOUT_CLASSIFICATION	2.239762688860063E-6	DESIGN
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999818520925505	WITHOUT_CLASSIFICATION	1.8147907449508786E-5	DESIGN
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999932750033496	WITHOUT_CLASSIFICATION	6.724996650360084E-6	DESIGN
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999897638655123	WITHOUT_CLASSIFICATION	1.0236134487713477E-5	DESIGN
// self // method name	WITHOUT_CLASSIFICATION	0.9999252695768966	WITHOUT_CLASSIFICATION	7.473042310338308E-5	DESIGN
// the default allocator	WITHOUT_CLASSIFICATION	0.9999905571257637	WITHOUT_CLASSIFICATION	9.442874236421113E-6	DESIGN
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999976748185037	WITHOUT_CLASSIFICATION	2.32518149630215E-6	DESIGN
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999969217704648	WITHOUT_CLASSIFICATION	3.0782295351280385E-6	DESIGN
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999999868407122	WITHOUT_CLASSIFICATION	1.3159287638567739E-8	DESIGN
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999017435063062	WITHOUT_CLASSIFICATION	9.825649369376758E-5	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9856215218279378	WITHOUT_CLASSIFICATION	0.01437847817206221	DESIGN
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999166527140416	WITHOUT_CLASSIFICATION	8.334728595839703E-5	DESIGN
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999971435971748	WITHOUT_CLASSIFICATION	2.8564028251512533E-6	DESIGN
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999999999635792	WITHOUT_CLASSIFICATION	3.642071274999654E-11	DESIGN
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999992052093126	WITHOUT_CLASSIFICATION	7.94790687386552E-7	DESIGN
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999849005239917	WITHOUT_CLASSIFICATION	1.5099476008186051E-5	DESIGN
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999997894342261	WITHOUT_CLASSIFICATION	2.1056577397221375E-7	DESIGN
// a gotcha	WITHOUT_CLASSIFICATION	0.999989891841427	WITHOUT_CLASSIFICATION	1.0108158573083027E-5	DESIGN
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999993685815549	WITHOUT_CLASSIFICATION	6.314184451643282E-7	DESIGN
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999999387670676	WITHOUT_CLASSIFICATION	6.123293241809903E-8	DESIGN
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9998631325689898	WITHOUT_CLASSIFICATION	1.3686743101025037E-4	DESIGN
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9997686385760367	WITHOUT_CLASSIFICATION	2.3136142396330294E-4	DESIGN
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.999999996063753	WITHOUT_CLASSIFICATION	3.936247047547119E-9	DESIGN
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999972172699068	WITHOUT_CLASSIFICATION	2.7827300933386076E-6	DESIGN
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9980893287703225	WITHOUT_CLASSIFICATION	0.001910671229677375	DESIGN
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9999558310951019	WITHOUT_CLASSIFICATION	4.41689048980383E-5	DESIGN
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999999699455306	WITHOUT_CLASSIFICATION	3.005446939583582E-8	DESIGN
// provider is not available	WITHOUT_CLASSIFICATION	0.9996889515662436	WITHOUT_CLASSIFICATION	3.1104843375631366E-4	DESIGN
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.999721264944818	WITHOUT_CLASSIFICATION	2.7873505518198594E-4	DESIGN
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9999352852683618	WITHOUT_CLASSIFICATION	6.47147316382103E-5	DESIGN
// RubyDigest	WITHOUT_CLASSIFICATION	0.9998638954405338	WITHOUT_CLASSIFICATION	1.3610455946623157E-4	DESIGN
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.6253426864784335	WITHOUT_CLASSIFICATION	0.3746573135215666	DESIGN
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999999888783304	WITHOUT_CLASSIFICATION	1.1121669506163881E-8	DESIGN
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999992684605999	WITHOUT_CLASSIFICATION	7.315394000774397E-7	DESIGN
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999999989541372	WITHOUT_CLASSIFICATION	1.0458628422845978E-9	DESIGN
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999791422946239	WITHOUT_CLASSIFICATION	2.0857705376111244E-5	DESIGN
// JRubyService	WITHOUT_CLASSIFICATION	0.9999886567224683	WITHOUT_CLASSIFICATION	1.13432775316762E-5	DESIGN
// while	WITHOUT_CLASSIFICATION	0.999989271377052	WITHOUT_CLASSIFICATION	1.0728622948014953E-5	DESIGN
/* \OOO */	WITHOUT_CLASSIFICATION	0.9999783638715317	WITHOUT_CLASSIFICATION	2.1636128468213336E-5	DESIGN
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999984447901635	WITHOUT_CLASSIFICATION	1.5552098365143104E-6	DESIGN
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999999449726623	WITHOUT_CLASSIFICATION	5.502733766260292E-8	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999972082640529	WITHOUT_CLASSIFICATION	2.791735947014462E-6	DESIGN
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999981863301344	WITHOUT_CLASSIFICATION	1.8136698656045456E-6	DESIGN
// silent ?	WITHOUT_CLASSIFICATION	0.9997598221755571	WITHOUT_CLASSIFICATION	2.4017782444284464E-4	DESIGN
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999757329781384	WITHOUT_CLASSIFICATION	2.4267021861547332E-5	DESIGN
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999972397941703	WITHOUT_CLASSIFICATION	2.760205829651398E-6	DESIGN
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999976524097711	WITHOUT_CLASSIFICATION	2.347590228831234E-6	DESIGN
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999976247499343	WITHOUT_CLASSIFICATION	2.375250065849036E-6	DESIGN
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.999999790887643	WITHOUT_CLASSIFICATION	2.0911235694266571E-7	DESIGN
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999998816092993	WITHOUT_CLASSIFICATION	1.1839070077598745E-7	DESIGN
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999998384965229	WITHOUT_CLASSIFICATION	1.6150347702916046E-7	DESIGN
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999997848308619	WITHOUT_CLASSIFICATION	2.151691380297693E-7	DESIGN
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999831746008279	WITHOUT_CLASSIFICATION	1.682539917211126E-5	DESIGN
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.8189904628515065	DESIGN	0.18100953714849358	WITHOUT_CLASSIFICATION
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9999962764169609	WITHOUT_CLASSIFICATION	3.723583039102915E-6	DESIGN
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999757329781384	WITHOUT_CLASSIFICATION	2.4267021861547332E-5	DESIGN
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999976524097711	WITHOUT_CLASSIFICATION	2.347590228831234E-6	DESIGN
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999972397941703	WITHOUT_CLASSIFICATION	2.760205829651398E-6	DESIGN
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999978822064755	WITHOUT_CLASSIFICATION	2.1177935245849496E-6	DESIGN
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999944628375681	WITHOUT_CLASSIFICATION	5.537162431945723E-6	DESIGN
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999973556300155	WITHOUT_CLASSIFICATION	2.6443699845074197E-6	DESIGN
// inner switch	WITHOUT_CLASSIFICATION	0.9999764643931426	WITHOUT_CLASSIFICATION	2.3535606857426667E-5	DESIGN
// newInstance here	WITHOUT_CLASSIFICATION	0.9996815099014364	WITHOUT_CLASSIFICATION	3.184900985635131E-4	DESIGN
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.999999323739276	WITHOUT_CLASSIFICATION	6.76260723978418E-7	DESIGN
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999967481758659	WITHOUT_CLASSIFICATION	3.25182413419187E-6	DESIGN
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999996267217318	WITHOUT_CLASSIFICATION	3.7327826819656997E-7	DESIGN
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.999995514009306	WITHOUT_CLASSIFICATION	4.485990694102149E-6	DESIGN
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999997523847658	WITHOUT_CLASSIFICATION	2.4761523413340347E-7	DESIGN
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999995895842121	WITHOUT_CLASSIFICATION	4.1041578790069657E-7	DESIGN
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9994966219627484	WITHOUT_CLASSIFICATION	5.033780372515782E-4	DESIGN
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999979229818332	WITHOUT_CLASSIFICATION	2.077018166837774E-6	DESIGN
// option_to_str	WITHOUT_CLASSIFICATION	0.9999996251009546	WITHOUT_CLASSIFICATION	3.748990453725959E-7	DESIGN
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999697457749465	WITHOUT_CLASSIFICATION	3.0254225053594544E-5	DESIGN
// args should be before block	WITHOUT_CLASSIFICATION	0.9997216553977541	WITHOUT_CLASSIFICATION	2.783446022458236E-4	DESIGN
// args should be at end	WITHOUT_CLASSIFICATION	0.9887786940897269	WITHOUT_CLASSIFICATION	0.011221305910273092	DESIGN
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9954015329409599	WITHOUT_CLASSIFICATION	0.004598467059040113	DESIGN
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9954015329409599	WITHOUT_CLASSIFICATION	0.004598467059040113	DESIGN
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999999626148732	WITHOUT_CLASSIFICATION	3.738512676282873E-8	DESIGN
// start a new populator	WITHOUT_CLASSIFICATION	0.999981713851682	WITHOUT_CLASSIFICATION	1.8286148318028067E-5	DESIGN
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999993473070309	WITHOUT_CLASSIFICATION	6.526929691737011E-7	DESIGN
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9999834543426825	WITHOUT_CLASSIFICATION	1.6545657317460036E-5	DESIGN
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999892404602491	WITHOUT_CLASSIFICATION	1.0759539750877433E-5	DESIGN
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999656438246978	WITHOUT_CLASSIFICATION	3.435617530226419E-5	DESIGN
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.999989422966417	WITHOUT_CLASSIFICATION	1.0577033582975816E-5	DESIGN
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999910054532053	WITHOUT_CLASSIFICATION	8.994546794769177E-6	DESIGN
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9979546093575848	WITHOUT_CLASSIFICATION	0.002045390642415195	DESIGN
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999973919547043	WITHOUT_CLASSIFICATION	2.6080452956589878E-6	DESIGN
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999979878123597	WITHOUT_CLASSIFICATION	2.0121876402482493E-6	DESIGN
//                }	WITHOUT_CLASSIFICATION	0.9999969326802993	WITHOUT_CLASSIFICATION	3.0673197006155136E-6	DESIGN
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9999297705282663	WITHOUT_CLASSIFICATION	7.02294717337351E-5	DESIGN
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9999999967812018	WITHOUT_CLASSIFICATION	3.2187982144097877E-9	DESIGN
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9984521492037324	WITHOUT_CLASSIFICATION	0.0015478507962676375	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.99999837312542	WITHOUT_CLASSIFICATION	1.6268745800172813E-6	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9999982607078417	WITHOUT_CLASSIFICATION	1.7392921582012694E-6	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999787817951258	WITHOUT_CLASSIFICATION	2.121820487419038E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999787817951258	WITHOUT_CLASSIFICATION	2.121820487419038E-5	DESIGN
// colon3	WITHOUT_CLASSIFICATION	0.9999969330849193	WITHOUT_CLASSIFICATION	3.06691508062451E-6	DESIGN
// Colon3	WITHOUT_CLASSIFICATION	0.9999884219647878	WITHOUT_CLASSIFICATION	1.15780352122183E-5	DESIGN
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9977027196895581	WITHOUT_CLASSIFICATION	0.002297280310441876	DESIGN
// For b.foo	WITHOUT_CLASSIFICATION	0.9999999146023549	WITHOUT_CLASSIFICATION	8.539764515049304E-8	DESIGN
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999713193626428	WITHOUT_CLASSIFICATION	2.8680637357232943E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999787817951258	WITHOUT_CLASSIFICATION	2.121820487419038E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999787817951258	WITHOUT_CLASSIFICATION	2.121820487419038E-5	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999890804214461	WITHOUT_CLASSIFICATION	1.0919578553860757E-5	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999890804214461	WITHOUT_CLASSIFICATION	1.0919578553860757E-5	DESIGN
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9999994495938621	WITHOUT_CLASSIFICATION	5.504061379091294E-7	DESIGN
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999998992631394	WITHOUT_CLASSIFICATION	1.0073686069597295E-7	DESIGN
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.999989995746127	WITHOUT_CLASSIFICATION	1.0004253872903625E-5	DESIGN
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.7080272236169232	WITHOUT_CLASSIFICATION	0.29197277638307684	DESIGN
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999773751176692	WITHOUT_CLASSIFICATION	2.2624882330762613E-5	DESIGN
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999773751176692	WITHOUT_CLASSIFICATION	2.2624882330762613E-5	DESIGN
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999991134362404	WITHOUT_CLASSIFICATION	8.865637596567454E-7	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999997881361349	WITHOUT_CLASSIFICATION	2.1186386510269746E-7	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999989777779468	WITHOUT_CLASSIFICATION	1.022222053183144E-6	DESIGN
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9996320675204237	WITHOUT_CLASSIFICATION	3.679324795762701E-4	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.999981836580346	WITHOUT_CLASSIFICATION	1.8163419653965158E-5	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999994935586168	WITHOUT_CLASSIFICATION	5.064413831513869E-7	DESIGN
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9999431416111257	WITHOUT_CLASSIFICATION	5.685838887431448E-5	DESIGN
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999990398998945	WITHOUT_CLASSIFICATION	9.601001056181795E-7	DESIGN
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9995918191303951	WITHOUT_CLASSIFICATION	4.081808696049354E-4	DESIGN
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999959387337752	WITHOUT_CLASSIFICATION	4.061266224785221E-6	DESIGN
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9692706547481871	WITHOUT_CLASSIFICATION	0.03072934525181297	DESIGN
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999977683867757	WITHOUT_CLASSIFICATION	2.2316132242690508E-6	DESIGN
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999848945972615	WITHOUT_CLASSIFICATION	1.5105402738592787E-5	DESIGN
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999990611355244	WITHOUT_CLASSIFICATION	9.388644754733238E-7	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.99999837312542	WITHOUT_CLASSIFICATION	1.6268745800172813E-6	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999787817951258	WITHOUT_CLASSIFICATION	2.121820487419038E-5	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999890804214461	WITHOUT_CLASSIFICATION	1.0919578553860757E-5	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999994935586168	WITHOUT_CLASSIFICATION	5.064413831513869E-7	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9681486234960092	WITHOUT_CLASSIFICATION	0.031851376503990836	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9681486234960092	WITHOUT_CLASSIFICATION	0.031851376503990836	DESIGN
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999849519715617	WITHOUT_CLASSIFICATION	1.5048028438301748E-5	DESIGN
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999999795429797	WITHOUT_CLASSIFICATION	2.0457020276679973E-8	DESIGN
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999997793924476	WITHOUT_CLASSIFICATION	2.2060755252611445E-7	DESIGN
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999999885003199	WITHOUT_CLASSIFICATION	1.1499680023413378E-8	DESIGN
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999710108730541	WITHOUT_CLASSIFICATION	2.8989126945947782E-5	DESIGN
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9998120925820707	WITHOUT_CLASSIFICATION	1.8790741792937683E-4	DESIGN
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999971381611443	WITHOUT_CLASSIFICATION	2.861838855764179E-6	DESIGN
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9932771222560002	WITHOUT_CLASSIFICATION	0.0067228777439998205	DESIGN
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9990177753953383	WITHOUT_CLASSIFICATION	9.822246046617051E-4	DESIGN
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9997897912553962	WITHOUT_CLASSIFICATION	2.1020874460384386E-4	DESIGN
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.998985384331682	WITHOUT_CLASSIFICATION	0.00101461566831797	DESIGN
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999999826301602	WITHOUT_CLASSIFICATION	1.736983977337655E-8	DESIGN
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999999586520671	WITHOUT_CLASSIFICATION	4.134793292040507E-8	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9999982607078417	WITHOUT_CLASSIFICATION	1.7392921582012694E-6	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999890804214461	WITHOUT_CLASSIFICATION	1.0919578553860757E-5	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999997881361349	WITHOUT_CLASSIFICATION	2.1186386510269746E-7	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999989777779468	WITHOUT_CLASSIFICATION	1.022222053183144E-6	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999989777779468	WITHOUT_CLASSIFICATION	1.022222053183144E-6	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.999981836580346	WITHOUT_CLASSIFICATION	1.8163419653965158E-5	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999994935586168	WITHOUT_CLASSIFICATION	5.064413831513869E-7	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999994935586168	WITHOUT_CLASSIFICATION	5.064413831513869E-7	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9681486234960092	WITHOUT_CLASSIFICATION	0.031851376503990836	DESIGN
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999851438650479	WITHOUT_CLASSIFICATION	1.485613495202654E-5	DESIGN
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9999524374029188	WITHOUT_CLASSIFICATION	4.756259708122454E-5	DESIGN
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999999963914696	WITHOUT_CLASSIFICATION	3.6085303473081788E-9	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9994346331095553	WITHOUT_CLASSIFICATION	5.65366890444648E-4	DESIGN
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9562087796136349	WITHOUT_CLASSIFICATION	0.04379122038636515	DESIGN
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9999984012173367	WITHOUT_CLASSIFICATION	1.5987826632345936E-6	DESIGN
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999997108184601	WITHOUT_CLASSIFICATION	2.891815400061512E-7	DESIGN
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999983388626342	WITHOUT_CLASSIFICATION	1.6611373658266906E-6	DESIGN
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999999865364878	WITHOUT_CLASSIFICATION	1.346351223483542E-8	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999997881361349	WITHOUT_CLASSIFICATION	2.1186386510269746E-7	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999989777779468	WITHOUT_CLASSIFICATION	1.022222053183144E-6	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999989777779468	WITHOUT_CLASSIFICATION	1.022222053183144E-6	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.999981836580346	WITHOUT_CLASSIFICATION	1.8163419653965158E-5	DESIGN
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9932771222560002	WITHOUT_CLASSIFICATION	0.0067228777439998205	DESIGN
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9997897912553962	WITHOUT_CLASSIFICATION	2.1020874460384386E-4	DESIGN
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9999995324804705	WITHOUT_CLASSIFICATION	4.6751952943469496E-7	DESIGN
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999996128851774	WITHOUT_CLASSIFICATION	3.871148226574293E-7	DESIGN
// For 'foo'	WITHOUT_CLASSIFICATION	0.999999670539268	WITHOUT_CLASSIFICATION	3.294607319574267E-7	DESIGN
// For 'foo'	WITHOUT_CLASSIFICATION	0.999999670539268	WITHOUT_CLASSIFICATION	3.294607319574267E-7	DESIGN
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9971249462214833	WITHOUT_CLASSIFICATION	0.0028750537785165826	DESIGN
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999991744110215	WITHOUT_CLASSIFICATION	8.2558897848072E-7	DESIGN
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999940858427157	WITHOUT_CLASSIFICATION	5.914157284307666E-6	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999992714341043	WITHOUT_CLASSIFICATION	7.28565895769892E-7	DESIGN
// just rethrow	WITHOUT_CLASSIFICATION	0.9999996748271414	WITHOUT_CLASSIFICATION	3.2517285864706555E-7	DESIGN
// just rethrow	WITHOUT_CLASSIFICATION	0.9999996748271414	WITHOUT_CLASSIFICATION	3.2517285864706555E-7	DESIGN
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999973882394761	WITHOUT_CLASSIFICATION	2.611760523843891E-6	DESIGN
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999973882394761	WITHOUT_CLASSIFICATION	2.611760523843891E-6	DESIGN
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999792410880035	WITHOUT_CLASSIFICATION	2.07589119964838E-5	DESIGN
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999792410880035	WITHOUT_CLASSIFICATION	2.07589119964838E-5	DESIGN
// Execute rescue block	WITHOUT_CLASSIFICATION	0.999981856502221	WITHOUT_CLASSIFICATION	1.8143497778927397E-5	DESIGN
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999966655262024	WITHOUT_CLASSIFICATION	3.3344737976843757E-6	DESIGN
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.997416763401067	WITHOUT_CLASSIFICATION	0.002583236598933016	DESIGN
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999978124012383	WITHOUT_CLASSIFICATION	2.187598761563267E-6	DESIGN
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9997670880845075	WITHOUT_CLASSIFICATION	2.3291191549238468E-4	DESIGN
// pragmas	WITHOUT_CLASSIFICATION	0.9999987244051305	WITHOUT_CLASSIFICATION	1.2755948694377503E-6	DESIGN
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999974734188722	WITHOUT_CLASSIFICATION	2.5265811277732936E-6	DESIGN
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999978906560171	WITHOUT_CLASSIFICATION	2.1093439828893375E-6	DESIGN
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9992455937526057	WITHOUT_CLASSIFICATION	7.544062473942909E-4	DESIGN
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9957796303707057	WITHOUT_CLASSIFICATION	0.004220369629294288	DESIGN
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9999658505486971	WITHOUT_CLASSIFICATION	3.414945130288856E-5	DESIGN
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9751626853303476	WITHOUT_CLASSIFICATION	0.024837314669652458	DESIGN
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9994572858799975	WITHOUT_CLASSIFICATION	5.427141200026065E-4	DESIGN
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999930662057296	WITHOUT_CLASSIFICATION	6.933794270339812E-6	DESIGN
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999930662057296	WITHOUT_CLASSIFICATION	6.933794270339812E-6	DESIGN
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9997916562908621	WITHOUT_CLASSIFICATION	2.0834370913800835E-4	DESIGN
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999999229619273	WITHOUT_CLASSIFICATION	7.703807263799044E-8	DESIGN
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9999651939459849	WITHOUT_CLASSIFICATION	3.4806054014991236E-5	DESIGN
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999999999436114	WITHOUT_CLASSIFICATION	5.6388577240504196E-11	DESIGN
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999369674676913	WITHOUT_CLASSIFICATION	6.303253230860688E-5	DESIGN
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999933416001732	WITHOUT_CLASSIFICATION	6.658399826836058E-6	DESIGN
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999992337942768	WITHOUT_CLASSIFICATION	7.662057232189125E-7	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999991855112325	WITHOUT_CLASSIFICATION	8.14488767574447E-7	DESIGN
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999999994805047	WITHOUT_CLASSIFICATION	5.194952862437835E-10	DESIGN
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999999904140058	WITHOUT_CLASSIFICATION	9.585994124039922E-9	DESIGN
// compile first node only	WITHOUT_CLASSIFICATION	0.9999999421613175	WITHOUT_CLASSIFICATION	5.783868256105701E-8	DESIGN
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9999564354135121	WITHOUT_CLASSIFICATION	4.3564586487921804E-5	DESIGN
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999995913257487	WITHOUT_CLASSIFICATION	4.0867425130415337E-7	DESIGN
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.998912222608402	WITHOUT_CLASSIFICATION	0.0010877773915981327	DESIGN
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9765814110275387	WITHOUT_CLASSIFICATION	0.023418588972461303	DESIGN
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9999952808238314	WITHOUT_CLASSIFICATION	4.719176168640207E-6	DESIGN
// can't do it	WITHOUT_CLASSIFICATION	0.9999928795684376	WITHOUT_CLASSIFICATION	7.120431562413715E-6	DESIGN
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999983231119941	WITHOUT_CLASSIFICATION	1.6768880058777396E-6	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999997961602802	WITHOUT_CLASSIFICATION	2.038397197228419E-7	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999997961602802	WITHOUT_CLASSIFICATION	2.038397197228419E-7	DESIGN
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9995291154028613	WITHOUT_CLASSIFICATION	4.708845971387695E-4	DESIGN
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999853150713249	WITHOUT_CLASSIFICATION	1.4684928674934264E-5	DESIGN
//[]	WITHOUT_CLASSIFICATION	0.9993246647380032	WITHOUT_CLASSIFICATION	6.75335261996827E-4	DESIGN
//[]	WITHOUT_CLASSIFICATION	0.9993246647380032	WITHOUT_CLASSIFICATION	6.75335261996827E-4	DESIGN
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999997423359265	WITHOUT_CLASSIFICATION	2.5766407352792705E-7	DESIGN
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9999966666306942	WITHOUT_CLASSIFICATION	3.333369305857239E-6	DESIGN
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9999340476167151	WITHOUT_CLASSIFICATION	6.595238328489426E-5	DESIGN
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.999997886429729	WITHOUT_CLASSIFICATION	2.113570270959864E-6	DESIGN
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999779759563431	WITHOUT_CLASSIFICATION	2.202404365692418E-5	DESIGN
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999950684994894	WITHOUT_CLASSIFICATION	4.931500510675207E-6	DESIGN
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999950684994894	WITHOUT_CLASSIFICATION	4.931500510675207E-6	DESIGN
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999956120771353	WITHOUT_CLASSIFICATION	4.3879228647532764E-6	DESIGN
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999944491667188	WITHOUT_CLASSIFICATION	5.550833281202816E-6	DESIGN
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999849859382292	WITHOUT_CLASSIFICATION	1.5014061770820864E-5	DESIGN
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999609557164488	WITHOUT_CLASSIFICATION	3.9044283551211544E-5	DESIGN
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999853150713249	WITHOUT_CLASSIFICATION	1.4684928674934264E-5	DESIGN
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999877123077926	WITHOUT_CLASSIFICATION	1.2287692207457213E-5	DESIGN
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999969184437226	WITHOUT_CLASSIFICATION	3.081556277350456E-6	DESIGN
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999969184437226	WITHOUT_CLASSIFICATION	3.081556277350456E-6	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999785087290325	WITHOUT_CLASSIFICATION	2.149127096758737E-5	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999993764109321	WITHOUT_CLASSIFICATION	6.235890679324366E-7	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999993764109321	WITHOUT_CLASSIFICATION	6.235890679324366E-7	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999999894815035	WITHOUT_CLASSIFICATION	1.0518496596992915E-8	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999999894815035	WITHOUT_CLASSIFICATION	1.0518496596992915E-8	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999999894815035	WITHOUT_CLASSIFICATION	1.0518496596992915E-8	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999993764109321	WITHOUT_CLASSIFICATION	6.235890679324366E-7	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999993764109321	WITHOUT_CLASSIFICATION	6.235890679324366E-7	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999785087290325	WITHOUT_CLASSIFICATION	2.149127096758737E-5	DESIGN
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999664771713905	WITHOUT_CLASSIFICATION	3.3522828609418495E-5	DESIGN
// always false or nil	WITHOUT_CLASSIFICATION	0.9999975765981831	WITHOUT_CLASSIFICATION	2.4234018168188125E-6	DESIGN
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999999947547041	WITHOUT_CLASSIFICATION	5.245295815175334E-9	DESIGN
// normal	WITHOUT_CLASSIFICATION	0.9999771638660582	WITHOUT_CLASSIFICATION	2.2836133941836903E-5	DESIGN
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999999980384875	WITHOUT_CLASSIFICATION	1.9615125098123255E-9	DESIGN
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999819572715462	WITHOUT_CLASSIFICATION	1.8042728453900737E-5	DESIGN
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999997778899987	WITHOUT_CLASSIFICATION	2.221100011261237E-7	DESIGN
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999999376838077	WITHOUT_CLASSIFICATION	6.231619228692132E-8	DESIGN
// compile first node only	WITHOUT_CLASSIFICATION	0.9999999421613175	WITHOUT_CLASSIFICATION	5.783868256105701E-8	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999993764109321	WITHOUT_CLASSIFICATION	6.235890679324366E-7	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999993764109321	WITHOUT_CLASSIFICATION	6.235890679324366E-7	DESIGN
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999999988950723	WITHOUT_CLASSIFICATION	1.1049276666401119E-9	DESIGN
// try optz version	WITHOUT_CLASSIFICATION	0.9999978014094978	WITHOUT_CLASSIFICATION	2.198590502287864E-6	DESIGN
// sizes must match	WITHOUT_CLASSIFICATION	0.9999964058719603	WITHOUT_CLASSIFICATION	3.59412803971818E-6	DESIGN
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999999938702225	WITHOUT_CLASSIFICATION	6.129777509131579E-9	DESIGN
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999983352104024	WITHOUT_CLASSIFICATION	1.6647895975954237E-6	DESIGN
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999908610891718	WITHOUT_CLASSIFICATION	9.138910828270804E-6	DESIGN
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.999999999870219	WITHOUT_CLASSIFICATION	1.2978104923080916E-10	DESIGN
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999999815287086	WITHOUT_CLASSIFICATION	1.8471291338385633E-8	DESIGN
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.999999996383891	WITHOUT_CLASSIFICATION	3.616109061846314E-9	DESIGN
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999957910367199	WITHOUT_CLASSIFICATION	4.2089632801717805E-6	DESIGN
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.999989157324344	WITHOUT_CLASSIFICATION	1.0842675656094784E-5	DESIGN
// done processing args	WITHOUT_CLASSIFICATION	0.9999943919306884	WITHOUT_CLASSIFICATION	5.608069311625706E-6	DESIGN
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999923712427484	WITHOUT_CLASSIFICATION	7.628757251543182E-6	DESIGN
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999993954689382	WITHOUT_CLASSIFICATION	6.045310618271414E-7	DESIGN
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999999308201851	WITHOUT_CLASSIFICATION	6.917981489831505E-8	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9999940588564296	WITHOUT_CLASSIFICATION	5.941143570485321E-6	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9999940588564296	WITHOUT_CLASSIFICATION	5.941143570485321E-6	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9999940588564296	WITHOUT_CLASSIFICATION	5.941143570485321E-6	DESIGN
// compile into array	WITHOUT_CLASSIFICATION	0.999984347401847	WITHOUT_CLASSIFICATION	1.565259815294098E-5	DESIGN
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999999999527392	WITHOUT_CLASSIFICATION	4.726073109309582E-11	DESIGN
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.999999992447299	WITHOUT_CLASSIFICATION	7.552701038206742E-9	DESIGN
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999689298498843	WITHOUT_CLASSIFICATION	3.107015011570924E-5	DESIGN
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999824464364514	WITHOUT_CLASSIFICATION	1.75535635485761E-5	DESIGN
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.99992940932113	WITHOUT_CLASSIFICATION	7.059067887001858E-5	DESIGN
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999997221867624	WITHOUT_CLASSIFICATION	2.778132376034504E-7	DESIGN
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999994096326196	WITHOUT_CLASSIFICATION	5.903673804444195E-7	DESIGN
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.999899930247355	WITHOUT_CLASSIFICATION	1.0006975264497046E-4	DESIGN
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999999438374322	WITHOUT_CLASSIFICATION	5.616256777316501E-8	DESIGN
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9997463813380381	WITHOUT_CLASSIFICATION	2.536186619618723E-4	DESIGN
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9971630294561857	WITHOUT_CLASSIFICATION	0.002836970543814227	DESIGN
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999956120771353	WITHOUT_CLASSIFICATION	4.3879228647532764E-6	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999993764109321	WITHOUT_CLASSIFICATION	6.235890679324366E-7	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999993764109321	WITHOUT_CLASSIFICATION	6.235890679324366E-7	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999785087290325	WITHOUT_CLASSIFICATION	2.149127096758737E-5	DESIGN
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999819572715462	WITHOUT_CLASSIFICATION	1.8042728453900737E-5	DESIGN
// try optz version	WITHOUT_CLASSIFICATION	0.9999978014094978	WITHOUT_CLASSIFICATION	2.198590502287864E-6	DESIGN
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999999938702225	WITHOUT_CLASSIFICATION	6.129777509131579E-9	DESIGN
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999908610891718	WITHOUT_CLASSIFICATION	9.138910828270804E-6	DESIGN
// sizes must match	WITHOUT_CLASSIFICATION	0.9999964058719603	WITHOUT_CLASSIFICATION	3.59412803971818E-6	DESIGN
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.999999999870219	WITHOUT_CLASSIFICATION	1.2978104923080916E-10	DESIGN
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999957910367199	WITHOUT_CLASSIFICATION	4.2089632801717805E-6	DESIGN
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.999999996383891	WITHOUT_CLASSIFICATION	3.616109061846314E-9	DESIGN
// done processing args	WITHOUT_CLASSIFICATION	0.9999943919306884	WITHOUT_CLASSIFICATION	5.608069311625706E-6	DESIGN
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9993300309852229	WITHOUT_CLASSIFICATION	6.699690147771114E-4	DESIGN
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9851803276863424	WITHOUT_CLASSIFICATION	0.014819672313657604	DESIGN
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9956579110752661	WITHOUT_CLASSIFICATION	0.004342088924733876	DESIGN
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999972607158375	WITHOUT_CLASSIFICATION	2.7392841626274034E-6	DESIGN
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9944272112465142	WITHOUT_CLASSIFICATION	0.00557278875348573	DESIGN
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999996855531182	WITHOUT_CLASSIFICATION	3.144468817417863E-7	DESIGN
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999794229444747	WITHOUT_CLASSIFICATION	2.057705552522351E-5	DESIGN
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.99999998415784	WITHOUT_CLASSIFICATION	1.5842160052891945E-8	DESIGN
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999997459105484	WITHOUT_CLASSIFICATION	2.5408945158976425E-7	DESIGN
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999999388638713	WITHOUT_CLASSIFICATION	6.113612880180785E-8	DESIGN
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999957622699214	WITHOUT_CLASSIFICATION	4.237730078662323E-6	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999873050415222	WITHOUT_CLASSIFICATION	1.2694958477868135E-5	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999998496261594	WITHOUT_CLASSIFICATION	1.5037384068388926E-7	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9971984344404279	WITHOUT_CLASSIFICATION	0.0028015655595721627	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999997282976518	WITHOUT_CLASSIFICATION	2.717023481408694E-7	DESIGN
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999871419323293	WITHOUT_CLASSIFICATION	1.2858067670839072E-5	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9981272158084044	WITHOUT_CLASSIFICATION	0.001872784191595672	DESIGN
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999997668002757	WITHOUT_CLASSIFICATION	2.3319972429672708E-7	DESIGN
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999943008712678	WITHOUT_CLASSIFICATION	5.699128732090275E-6	DESIGN
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9998686558922405	WITHOUT_CLASSIFICATION	1.3134410775952833E-4	DESIGN
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9997777736675432	WITHOUT_CLASSIFICATION	2.2222633245690563E-4	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9995117541708582	WITHOUT_CLASSIFICATION	4.8824582914171194E-4	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9995117541708582	WITHOUT_CLASSIFICATION	4.8824582914171194E-4	DESIGN
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9904791433885104	WITHOUT_CLASSIFICATION	0.009520856611489712	DESIGN
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999368577538759	WITHOUT_CLASSIFICATION	6.314224612412463E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999608671391801	WITHOUT_CLASSIFICATION	3.913286081986991E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999608671391801	WITHOUT_CLASSIFICATION	3.913286081986991E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999608671391801	WITHOUT_CLASSIFICATION	3.913286081986991E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9996142355171797	WITHOUT_CLASSIFICATION	3.8576448282041497E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9996142355171797	WITHOUT_CLASSIFICATION	3.8576448282041497E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9996142355171797	WITHOUT_CLASSIFICATION	3.8576448282041497E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9996142355171797	WITHOUT_CLASSIFICATION	3.8576448282041497E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998387869669444	WITHOUT_CLASSIFICATION	1.612130330556084E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998387869669444	WITHOUT_CLASSIFICATION	1.612130330556084E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998387869669444	WITHOUT_CLASSIFICATION	1.612130330556084E-4	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9998567549615791	WITHOUT_CLASSIFICATION	1.4324503842078572E-4	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9998567549615791	WITHOUT_CLASSIFICATION	1.4324503842078572E-4	DESIGN
/*arg2*/	WITHOUT_CLASSIFICATION	0.9998952823395724	WITHOUT_CLASSIFICATION	1.0471766042765958E-4	DESIGN
/*args*/	WITHOUT_CLASSIFICATION	0.9995192439936743	WITHOUT_CLASSIFICATION	4.8075600632567803E-4	DESIGN
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999368577538759	WITHOUT_CLASSIFICATION	6.314224612412463E-5	DESIGN
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999994763274336	WITHOUT_CLASSIFICATION	5.23672566465098E-7	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999608671391801	WITHOUT_CLASSIFICATION	3.913286081986991E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999608671391801	WITHOUT_CLASSIFICATION	3.913286081986991E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9996142355171797	WITHOUT_CLASSIFICATION	3.8576448282041497E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9996142355171797	WITHOUT_CLASSIFICATION	3.8576448282041497E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9996142355171797	WITHOUT_CLASSIFICATION	3.8576448282041497E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998387869669444	WITHOUT_CLASSIFICATION	1.612130330556084E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998387869669444	WITHOUT_CLASSIFICATION	1.612130330556084E-4	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9998567549615791	WITHOUT_CLASSIFICATION	1.4324503842078572E-4	DESIGN
/*args*/	WITHOUT_CLASSIFICATION	0.9995192439936743	WITHOUT_CLASSIFICATION	4.8075600632567803E-4	DESIGN
// get call site and thread context	WITHOUT_CLASSIFICATION	0.999998849064581	WITHOUT_CLASSIFICATION	1.1509354189337543E-6	DESIGN
// get call site and thread context	WITHOUT_CLASSIFICATION	0.999998849064581	WITHOUT_CLASSIFICATION	1.1509354189337543E-6	DESIGN
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999999716312541	WITHOUT_CLASSIFICATION	2.8368745900733743E-8	DESIGN
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999999716312541	WITHOUT_CLASSIFICATION	2.8368745900733743E-8	DESIGN
// invoke	WITHOUT_CLASSIFICATION	0.9999915699293498	WITHOUT_CLASSIFICATION	8.430070650279554E-6	DESIGN
// invoke	WITHOUT_CLASSIFICATION	0.9999915699293498	WITHOUT_CLASSIFICATION	8.430070650279554E-6	DESIGN
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999999819046741	WITHOUT_CLASSIFICATION	1.8095325886762722E-8	DESIGN
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999999540127373	WITHOUT_CLASSIFICATION	4.598726254114474E-8	DESIGN
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999999540127373	WITHOUT_CLASSIFICATION	4.598726254114474E-8	DESIGN
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999989767243516	WITHOUT_CLASSIFICATION	1.0232756484199926E-6	DESIGN
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999989767243516	WITHOUT_CLASSIFICATION	1.0232756484199926E-6	DESIGN
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999999972741126	WITHOUT_CLASSIFICATION	2.725887454931732E-9	DESIGN
// call site	WITHOUT_CLASSIFICATION	0.9999993206728824	WITHOUT_CLASSIFICATION	6.7932711756563E-7	DESIGN
// call site	WITHOUT_CLASSIFICATION	0.9999993206728824	WITHOUT_CLASSIFICATION	6.7932711756563E-7	DESIGN
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.999960955553093	WITHOUT_CLASSIFICATION	3.904444690698641E-5	DESIGN
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999999353134913	WITHOUT_CLASSIFICATION	6.468650872302964E-8	DESIGN
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999999573001094	WITHOUT_CLASSIFICATION	4.2699890661223264E-8	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9996142355171797	WITHOUT_CLASSIFICATION	3.8576448282041497E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9996142355171797	WITHOUT_CLASSIFICATION	3.8576448282041497E-4	DESIGN
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.999960955553093	WITHOUT_CLASSIFICATION	3.904444690698641E-5	DESIGN
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999993911005055	WITHOUT_CLASSIFICATION	6.08899494550049E-7	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999997107604821	WITHOUT_CLASSIFICATION	2.8923951792404805E-7	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999997107604821	WITHOUT_CLASSIFICATION	2.8923951792404805E-7	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999997107604821	WITHOUT_CLASSIFICATION	2.8923951792404805E-7	DESIGN
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999158291918345	WITHOUT_CLASSIFICATION	8.417080816553806E-5	DESIGN
// args	WITHOUT_CLASSIFICATION	0.9999962507047031	WITHOUT_CLASSIFICATION	3.7492952969563435E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999991915855431	WITHOUT_CLASSIFICATION	8.084144570547896E-7	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999991915855431	WITHOUT_CLASSIFICATION	8.084144570547896E-7	DESIGN
// no args, no block	WITHOUT_CLASSIFICATION	0.9999990899909963	WITHOUT_CLASSIFICATION	9.100090038417443E-7	DESIGN
// no args, with block	WITHOUT_CLASSIFICATION	0.9998809587435268	WITHOUT_CLASSIFICATION	1.1904125647314491E-4	DESIGN
// with args, no block	WITHOUT_CLASSIFICATION	0.999999496478817	WITHOUT_CLASSIFICATION	5.035211830310312E-7	DESIGN
// with args, with block	WITHOUT_CLASSIFICATION	0.9999797564309667	WITHOUT_CLASSIFICATION	2.0243569033266957E-5	DESIGN
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999999630661357	WITHOUT_CLASSIFICATION	3.6933864244453214E-8	DESIGN
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999988154222842	WITHOUT_CLASSIFICATION	1.1845777157602383E-6	DESIGN
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999988154222842	WITHOUT_CLASSIFICATION	1.1845777157602383E-6	DESIGN
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999893012387872	WITHOUT_CLASSIFICATION	1.069876121294368E-5	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.999826870980751	WITHOUT_CLASSIFICATION	1.7312901924913435E-4	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.999826870980751	WITHOUT_CLASSIFICATION	1.7312901924913435E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9996142355171797	WITHOUT_CLASSIFICATION	3.8576448282041497E-4	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999997107604821	WITHOUT_CLASSIFICATION	2.8923951792404805E-7	DESIGN
// args	WITHOUT_CLASSIFICATION	0.9999962507047031	WITHOUT_CLASSIFICATION	3.7492952969563435E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999991915855431	WITHOUT_CLASSIFICATION	8.084144570547896E-7	DESIGN
// no args, no block	WITHOUT_CLASSIFICATION	0.9999990899909963	WITHOUT_CLASSIFICATION	9.100090038417443E-7	DESIGN
// no args, with block	WITHOUT_CLASSIFICATION	0.9998809587435268	WITHOUT_CLASSIFICATION	1.1904125647314491E-4	DESIGN
// with args, no block	WITHOUT_CLASSIFICATION	0.999999496478817	WITHOUT_CLASSIFICATION	5.035211830310312E-7	DESIGN
// with args, with block	WITHOUT_CLASSIFICATION	0.9999797564309667	WITHOUT_CLASSIFICATION	2.0243569033266957E-5	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.999826870980751	WITHOUT_CLASSIFICATION	1.7312901924913435E-4	DESIGN
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9973842493224003	WITHOUT_CLASSIFICATION	0.0026157506775995702	DESIGN
// use numbered access method	WITHOUT_CLASSIFICATION	0.9991465834536377	WITHOUT_CLASSIFICATION	8.534165463623734E-4	DESIGN
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.999974017448702	WITHOUT_CLASSIFICATION	2.5982551298053866E-5	DESIGN
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999979719112716	WITHOUT_CLASSIFICATION	2.0280887284289293E-6	DESIGN
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999786551463472	WITHOUT_CLASSIFICATION	2.1344853652731962E-5	DESIGN
// build scope names string	WITHOUT_CLASSIFICATION	0.9999641785563728	WITHOUT_CLASSIFICATION	3.5821443627256114E-5	DESIGN
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999975913159272	WITHOUT_CLASSIFICATION	2.4086840727203813E-6	DESIGN
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999975913159272	WITHOUT_CLASSIFICATION	2.4086840727203813E-6	DESIGN
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999994736495993	WITHOUT_CLASSIFICATION	5.263504006848103E-7	DESIGN
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999994419082657	WITHOUT_CLASSIFICATION	5.580917342745057E-7	DESIGN
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.999983304360253	WITHOUT_CLASSIFICATION	1.6695639747083015E-5	DESIGN
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999999905727467	WITHOUT_CLASSIFICATION	9.42725331677211E-9	DESIGN
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999989145053515	WITHOUT_CLASSIFICATION	1.0854946484872645E-6	DESIGN
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999989145053515	WITHOUT_CLASSIFICATION	1.0854946484872645E-6	DESIGN
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999994968114129	WITHOUT_CLASSIFICATION	5.031885870881295E-7	DESIGN
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999997307031044	WITHOUT_CLASSIFICATION	2.6929689556613E-7	DESIGN
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999997477176915	WITHOUT_CLASSIFICATION	2.522823085182142E-7	DESIGN
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999997477176915	WITHOUT_CLASSIFICATION	2.522823085182142E-7	DESIGN
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999997182210576	WITHOUT_CLASSIFICATION	2.817789423286281E-7	DESIGN
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999984710468921	WITHOUT_CLASSIFICATION	1.5289531079476492E-6	DESIGN
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999999630661357	WITHOUT_CLASSIFICATION	3.6933864244453214E-8	DESIGN
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9994590029511401	WITHOUT_CLASSIFICATION	5.409970488600064E-4	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999099358664	WITHOUT_CLASSIFICATION	9.006413357255348E-8	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999977433290247	WITHOUT_CLASSIFICATION	2.256670975258893E-6	DESIGN
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999999371426046	WITHOUT_CLASSIFICATION	6.285739536413034E-8	DESIGN
// load Object under value	WITHOUT_CLASSIFICATION	0.9999931974181078	WITHOUT_CLASSIFICATION	6.8025818922444264E-6	DESIGN
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999999195910461	WITHOUT_CLASSIFICATION	8.040895399923657E-8	DESIGN
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.999999951546331	WITHOUT_CLASSIFICATION	4.845366888328272E-8	DESIGN
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9985621575453555	WITHOUT_CLASSIFICATION	0.001437842454644469	DESIGN
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999964948881682	WITHOUT_CLASSIFICATION	3.505111831733238E-6	DESIGN
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999964948881682	WITHOUT_CLASSIFICATION	3.505111831733238E-6	DESIGN
// brute force construction inline	WITHOUT_CLASSIFICATION	0.999999088354287	WITHOUT_CLASSIFICATION	9.116457131387812E-7	DESIGN
// brute force construction inline	WITHOUT_CLASSIFICATION	0.999999088354287	WITHOUT_CLASSIFICATION	9.116457131387812E-7	DESIGN
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999996881745032	WITHOUT_CLASSIFICATION	3.1182549676210246E-7	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999637457807561	WITHOUT_CLASSIFICATION	3.625421924391852E-5	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999637457807561	WITHOUT_CLASSIFICATION	3.625421924391852E-5	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999637457807561	WITHOUT_CLASSIFICATION	3.625421924391852E-5	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999902178937	WITHOUT_CLASSIFICATION	9.78210635276103E-9	DESIGN
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999999609770798	WITHOUT_CLASSIFICATION	3.9022920130682327E-8	DESIGN
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999999609770798	WITHOUT_CLASSIFICATION	3.9022920130682327E-8	DESIGN
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999999960889235	WITHOUT_CLASSIFICATION	3.9110764508081875E-9	DESIGN
// check the condition	WITHOUT_CLASSIFICATION	0.9999882447067907	WITHOUT_CLASSIFICATION	1.1755293209227062E-5	DESIGN
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999993432825	WITHOUT_CLASSIFICATION	6.567175000676484E-7	DESIGN
// skip catch block	WITHOUT_CLASSIFICATION	0.9999999669372586	WITHOUT_CLASSIFICATION	3.306274135309037E-8	DESIGN
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999983614624495	WITHOUT_CLASSIFICATION	1.6385375505724123E-6	DESIGN
// next jump	WITHOUT_CLASSIFICATION	0.9996744271752505	WITHOUT_CLASSIFICATION	3.255728247495702E-4	DESIGN
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9999999921712542	WITHOUT_CLASSIFICATION	7.828745808294124E-9	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999998496261594	WITHOUT_CLASSIFICATION	1.5037384068388926E-7	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999998496261594	WITHOUT_CLASSIFICATION	1.5037384068388926E-7	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999902178937	WITHOUT_CLASSIFICATION	9.78210635276103E-9	DESIGN
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999999960889235	WITHOUT_CLASSIFICATION	3.9110764508081875E-9	DESIGN
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999993572146569	WITHOUT_CLASSIFICATION	6.427853431660568E-7	DESIGN
// check the condition	WITHOUT_CLASSIFICATION	0.9999882447067907	WITHOUT_CLASSIFICATION	1.1755293209227062E-5	DESIGN
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999993432825	WITHOUT_CLASSIFICATION	6.567175000676484E-7	DESIGN
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999389858915748	WITHOUT_CLASSIFICATION	6.101410842515696E-5	DESIGN
// break jump	WITHOUT_CLASSIFICATION	0.9999979033383087	WITHOUT_CLASSIFICATION	2.0966616912297363E-6	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999989961718685	WITHOUT_CLASSIFICATION	1.0038281315214918E-6	DESIGN
//[reg]	WITHOUT_CLASSIFICATION	0.999409787948486	WITHOUT_CLASSIFICATION	5.902120515139706E-4	DESIGN
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999973358934621	WITHOUT_CLASSIFICATION	2.664106537885503E-6	DESIGN
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999754866426702	WITHOUT_CLASSIFICATION	2.4513357329676242E-5	DESIGN
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.999885429363104	WITHOUT_CLASSIFICATION	1.1457063689600094E-4	DESIGN
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999389858915748	WITHOUT_CLASSIFICATION	6.101410842515696E-5	DESIGN
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999739458633855	WITHOUT_CLASSIFICATION	2.6054136614563197E-5	DESIGN
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999739458633855	WITHOUT_CLASSIFICATION	2.6054136614563197E-5	DESIGN
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999882228036379	WITHOUT_CLASSIFICATION	1.1777196362173252E-5	DESIGN
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999064736762827	WITHOUT_CLASSIFICATION	9.352632371728994E-5	DESIGN
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9995767397388327	WITHOUT_CLASSIFICATION	4.2326026116730513E-4	DESIGN
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.999723899489418	WITHOUT_CLASSIFICATION	2.7610051058202527E-4	DESIGN
// restore the original exception	WITHOUT_CLASSIFICATION	0.999999956202435	WITHOUT_CLASSIFICATION	4.379756513661611E-8	DESIGN
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9986984947041706	WITHOUT_CLASSIFICATION	0.0013015052958293201	DESIGN
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999979283113375	WITHOUT_CLASSIFICATION	2.071688662548481E-6	DESIGN
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9975156250745298	WITHOUT_CLASSIFICATION	0.0024843749254702136	DESIGN
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999976583712588	WITHOUT_CLASSIFICATION	2.3416287412848505E-6	DESIGN
// false // zero	WITHOUT_CLASSIFICATION	0.9999999895913444	WITHOUT_CLASSIFICATION	1.0408655553264782E-8	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999899602618124	WITHOUT_CLASSIFICATION	1.0039738187667641E-5	DESIGN
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.999723899489418	WITHOUT_CLASSIFICATION	2.7610051058202527E-4	DESIGN
// restore the original exception	WITHOUT_CLASSIFICATION	0.999999956202435	WITHOUT_CLASSIFICATION	4.379756513661611E-8	DESIGN
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9998179941839637	WITHOUT_CLASSIFICATION	1.8200581603639742E-4	DESIGN
// push false	WITHOUT_CLASSIFICATION	0.9999999930471094	WITHOUT_CLASSIFICATION	6.952890520459362E-9	DESIGN
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.99999983238896	WITHOUT_CLASSIFICATION	1.6761103999902881E-7	DESIGN
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9999995925307248	WITHOUT_CLASSIFICATION	4.0746927526605924E-7	DESIGN
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999999968535139	WITHOUT_CLASSIFICATION	3.146486047657335E-9	DESIGN
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9999987914750992	WITHOUT_CLASSIFICATION	1.2085249007830147E-6	DESIGN
//[C]	WITHOUT_CLASSIFICATION	0.99958134553401	WITHOUT_CLASSIFICATION	4.1865446599002724E-4	DESIGN
// push true	WITHOUT_CLASSIFICATION	0.999998602011883	WITHOUT_CLASSIFICATION	1.3979881170406622E-6	DESIGN
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999982575075432	WITHOUT_CLASSIFICATION	1.742492456767374E-6	DESIGN
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.99999720687415	WITHOUT_CLASSIFICATION	2.79312584996205E-6	DESIGN
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9999948004262667	WITHOUT_CLASSIFICATION	5.199573733381271E-6	DESIGN
//[boolean]	WITHOUT_CLASSIFICATION	0.9999883643522895	WITHOUT_CLASSIFICATION	1.1635647710520538E-5	DESIGN
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999622239158159	WITHOUT_CLASSIFICATION	3.7776084184050856E-5	DESIGN
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999971810087923	WITHOUT_CLASSIFICATION	2.8189912076172376E-6	DESIGN
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9400933258014725	DESIGN	0.05990667419852743	WITHOUT_CLASSIFICATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999943846785957	WITHOUT_CLASSIFICATION	5.615321404256213E-6	DESIGN
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999987510132904	WITHOUT_CLASSIFICATION	1.2489867096410803E-6	DESIGN
// static scope	WITHOUT_CLASSIFICATION	0.9991306880189695	WITHOUT_CLASSIFICATION	8.693119810304193E-4	DESIGN
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999986865636102	WITHOUT_CLASSIFICATION	1.3134363897551438E-6	DESIGN
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999911059894485	WITHOUT_CLASSIFICATION	8.894010551492617E-6	DESIGN
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999987510132904	WITHOUT_CLASSIFICATION	1.2489867096410803E-6	DESIGN
// static scope	WITHOUT_CLASSIFICATION	0.9991306880189695	WITHOUT_CLASSIFICATION	8.693119810304193E-4	DESIGN
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999986865636102	WITHOUT_CLASSIFICATION	1.3134363897551438E-6	DESIGN
// finally with exception	WITHOUT_CLASSIFICATION	0.9999454173865358	WITHOUT_CLASSIFICATION	5.4582613464304244E-5	DESIGN
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999728040925887	WITHOUT_CLASSIFICATION	2.7195907411271038E-5	DESIGN
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9996193597231894	WITHOUT_CLASSIFICATION	3.806402768105517E-4	DESIGN
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9999977667106246	WITHOUT_CLASSIFICATION	2.233289375416075E-6	DESIGN
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.8516489797452513	WITHOUT_CLASSIFICATION	0.14835102025474856	DESIGN
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999945814135925	WITHOUT_CLASSIFICATION	5.418586407489561E-6	DESIGN
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999920568353344	WITHOUT_CLASSIFICATION	7.943164665652487E-6	DESIGN
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9999826990018169	WITHOUT_CLASSIFICATION	1.7300998183057356E-5	DESIGN
// script object	WITHOUT_CLASSIFICATION	0.9998437754641935	WITHOUT_CLASSIFICATION	1.5622453580645807E-4	DESIGN
// arities	WITHOUT_CLASSIFICATION	0.9999898880268282	WITHOUT_CLASSIFICATION	1.0111973171875044E-5	DESIGN
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.8647203727965259	DESIGN	0.13527962720347408	WITHOUT_CLASSIFICATION
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999963361259577	WITHOUT_CLASSIFICATION	3.663874042282678E-6	DESIGN
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.999998634660046	WITHOUT_CLASSIFICATION	1.365339954038651E-6	DESIGN
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999998315543944	WITHOUT_CLASSIFICATION	1.6844560559156553E-7	DESIGN
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9999999609352707	WITHOUT_CLASSIFICATION	3.9064729239953504E-8	DESIGN
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999682944922088	WITHOUT_CLASSIFICATION	3.170550779122182E-5	DESIGN
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.999982408212717	WITHOUT_CLASSIFICATION	1.7591787282901213E-5	DESIGN
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9983214407304578	WITHOUT_CLASSIFICATION	0.0016785592695421445	DESIGN
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999326987491971	WITHOUT_CLASSIFICATION	6.730125080289745E-5	DESIGN
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999993826818886	WITHOUT_CLASSIFICATION	6.173181114884519E-7	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999999197154036	WITHOUT_CLASSIFICATION	8.028459638020934E-8	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999977197750498	WITHOUT_CLASSIFICATION	2.2802249502120025E-6	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999977197750498	WITHOUT_CLASSIFICATION	2.2802249502120025E-6	DESIGN
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999991445624128	WITHOUT_CLASSIFICATION	8.554375872498297E-7	DESIGN
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999991445624128	WITHOUT_CLASSIFICATION	8.554375872498297E-7	DESIGN
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999986217002516	WITHOUT_CLASSIFICATION	1.3782997485399864E-6	DESIGN
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999986217002516	WITHOUT_CLASSIFICATION	1.3782997485399864E-6	DESIGN
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999999888227422	WITHOUT_CLASSIFICATION	1.1177257746916818E-8	DESIGN
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999998744043089	WITHOUT_CLASSIFICATION	1.2559569119771533E-7	DESIGN
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999997225118408	WITHOUT_CLASSIFICATION	2.7748815918283616E-7	DESIGN
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999997383534206	WITHOUT_CLASSIFICATION	2.616465794013921E-7	DESIGN
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999999999840181	WITHOUT_CLASSIFICATION	1.5981845625216658E-11	DESIGN
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999978081311856	WITHOUT_CLASSIFICATION	2.191868814464077E-6	DESIGN
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.999999994741184	WITHOUT_CLASSIFICATION	5.25881602314626E-9	DESIGN
// then optional args	WITHOUT_CLASSIFICATION	0.9999997527657961	WITHOUT_CLASSIFICATION	2.472342038751734E-7	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999998496261594	WITHOUT_CLASSIFICATION	1.5037384068388926E-7	DESIGN
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999999888227422	WITHOUT_CLASSIFICATION	1.1177257746916818E-8	DESIGN
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999998744043089	WITHOUT_CLASSIFICATION	1.2559569119771533E-7	DESIGN
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999997225118408	WITHOUT_CLASSIFICATION	2.7748815918283616E-7	DESIGN
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999999999840181	WITHOUT_CLASSIFICATION	1.5981845625216658E-11	DESIGN
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999978081311856	WITHOUT_CLASSIFICATION	2.191868814464077E-6	DESIGN
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.999999588115998	WITHOUT_CLASSIFICATION	4.1188400202378793E-7	DESIGN
// finally, post args	WITHOUT_CLASSIFICATION	0.9999996343180669	WITHOUT_CLASSIFICATION	3.65681933066913E-7	DESIGN
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9995744594972369	WITHOUT_CLASSIFICATION	4.255405027631206E-4	DESIGN
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9995744594972369	WITHOUT_CLASSIFICATION	4.255405027631206E-4	DESIGN
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9977559227197809	WITHOUT_CLASSIFICATION	0.00224407728021913	DESIGN
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999992447201027	WITHOUT_CLASSIFICATION	7.552798972688791E-7	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999652814549623	WITHOUT_CLASSIFICATION	3.471854503764592E-5	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.999999976944881	WITHOUT_CLASSIFICATION	2.305511904307619E-8	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.999999976944881	WITHOUT_CLASSIFICATION	2.305511904307619E-8	DESIGN
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.999999879341769	WITHOUT_CLASSIFICATION	1.2065823104434526E-7	DESIGN
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999974067475883	WITHOUT_CLASSIFICATION	2.5932524117767598E-6	DESIGN
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999983563517458	WITHOUT_CLASSIFICATION	1.6436482542554772E-6	DESIGN
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999735230103801	WITHOUT_CLASSIFICATION	2.6476989619940765E-5	DESIGN
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9912686257154517	WITHOUT_CLASSIFICATION	0.008731374284548277	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9971984344404279	WITHOUT_CLASSIFICATION	0.0028015655595721627	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999997282976518	WITHOUT_CLASSIFICATION	2.717023481408694E-7	DESIGN
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999871419323293	WITHOUT_CLASSIFICATION	1.2858067670839072E-5	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9981272158084044	WITHOUT_CLASSIFICATION	0.001872784191595672	DESIGN
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9998686558922405	WITHOUT_CLASSIFICATION	1.3134410775952833E-4	DESIGN
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9997777736675432	WITHOUT_CLASSIFICATION	2.2222633245690563E-4	DESIGN
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.999999879341769	WITHOUT_CLASSIFICATION	1.2065823104434526E-7	DESIGN
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999974067475883	WITHOUT_CLASSIFICATION	2.5932524117767598E-6	DESIGN
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999735230103801	WITHOUT_CLASSIFICATION	2.6476989619940765E-5	DESIGN
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.99999698192522	WITHOUT_CLASSIFICATION	3.0180747799036876E-6	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999652814549623	WITHOUT_CLASSIFICATION	3.471854503764592E-5	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999652814549623	WITHOUT_CLASSIFICATION	3.471854503764592E-5	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999899602618124	WITHOUT_CLASSIFICATION	1.0039738187667641E-5	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999899602618124	WITHOUT_CLASSIFICATION	1.0039738187667641E-5	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9968949802329622	WITHOUT_CLASSIFICATION	0.0031050197670377706	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9968949802329622	WITHOUT_CLASSIFICATION	0.0031050197670377706	DESIGN
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999996095256648	WITHOUT_CLASSIFICATION	3.9047433529701213E-7	DESIGN
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999983847161573	WITHOUT_CLASSIFICATION	1.6152838427555886E-6	DESIGN
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9966990291143327	WITHOUT_CLASSIFICATION	0.0033009708856672486	DESIGN
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999970172123022	WITHOUT_CLASSIFICATION	2.98278769785949E-6	DESIGN
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999473950954122	WITHOUT_CLASSIFICATION	5.260490458787383E-5	DESIGN
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999987626830418	WITHOUT_CLASSIFICATION	1.2373169582363875E-6	DESIGN
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9996877614229261	WITHOUT_CLASSIFICATION	3.122385770738641E-4	DESIGN
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999975864030272	WITHOUT_CLASSIFICATION	2.413596972826364E-6	DESIGN
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999999677838537	WITHOUT_CLASSIFICATION	3.2216146261993394E-8	DESIGN
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999911267351476	WITHOUT_CLASSIFICATION	8.873264852437063E-6	DESIGN
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999890153533769	WITHOUT_CLASSIFICATION	1.0984646622996196E-5	DESIGN
// verify the class	WITHOUT_CLASSIFICATION	0.9999805460322532	WITHOUT_CLASSIFICATION	1.945396774678059E-5	DESIGN
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9988319988057894	WITHOUT_CLASSIFICATION	0.0011680011942106169	DESIGN
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999996882722475	WITHOUT_CLASSIFICATION	3.117277525309433E-7	DESIGN
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999999997130854	WITHOUT_CLASSIFICATION	2.869145689406591E-10	DESIGN
// thread context	WITHOUT_CLASSIFICATION	0.9999686375884024	WITHOUT_CLASSIFICATION	3.136241159762709E-5	DESIGN
// line number	WITHOUT_CLASSIFICATION	0.9999919542860836	WITHOUT_CLASSIFICATION	8.045713916407323E-6	DESIGN
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999891280836645	WITHOUT_CLASSIFICATION	1.087191633557991E-5	DESIGN
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999977408725125	WITHOUT_CLASSIFICATION	2.2591274875748465E-6	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999997282976518	WITHOUT_CLASSIFICATION	2.717023481408694E-7	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9981272158084044	WITHOUT_CLASSIFICATION	0.001872784191595672	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9995117541708582	WITHOUT_CLASSIFICATION	4.8824582914171194E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999991915855431	WITHOUT_CLASSIFICATION	8.084144570547896E-7	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999991915855431	WITHOUT_CLASSIFICATION	8.084144570547896E-7	DESIGN
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.99999698192522	WITHOUT_CLASSIFICATION	3.0180747799036876E-6	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999652814549623	WITHOUT_CLASSIFICATION	3.471854503764592E-5	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999899602618124	WITHOUT_CLASSIFICATION	1.0039738187667641E-5	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9968949802329622	WITHOUT_CLASSIFICATION	0.0031050197670377706	DESIGN
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.7210288946197063	WITHOUT_CLASSIFICATION	0.27897110538029385	DESIGN
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9941478181225727	WITHOUT_CLASSIFICATION	0.0058521818774272625	DESIGN
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999950099772077	WITHOUT_CLASSIFICATION	4.990022792287635E-6	DESIGN
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9990252921148648	WITHOUT_CLASSIFICATION	9.747078851353045E-4	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9997469987205597	WITHOUT_CLASSIFICATION	2.530012794401978E-4	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9997469987205597	WITHOUT_CLASSIFICATION	2.530012794401978E-4	DESIGN
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999411652026609	WITHOUT_CLASSIFICATION	5.883479733928174E-5	DESIGN
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999999937282165	WITHOUT_CLASSIFICATION	6.271783550852591E-9	DESIGN
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999991140451863	WITHOUT_CLASSIFICATION	8.859548137517041E-7	DESIGN
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999999855023209	WITHOUT_CLASSIFICATION	1.4497679177104721E-8	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9999409917220066	WITHOUT_CLASSIFICATION	5.9008277993432095E-5	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9999409917220066	WITHOUT_CLASSIFICATION	5.9008277993432095E-5	DESIGN
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9992335213268231	WITHOUT_CLASSIFICATION	7.664786731770159E-4	DESIGN
// normal closure	WITHOUT_CLASSIFICATION	0.9999990400617332	WITHOUT_CLASSIFICATION	9.599382668141183E-7	DESIGN
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999999887017489	WITHOUT_CLASSIFICATION	1.1298251250625126E-8	DESIGN
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9993380812820215	WITHOUT_CLASSIFICATION	6.619187179784217E-4	DESIGN
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999632522654757	WITHOUT_CLASSIFICATION	3.674773452432666E-5	DESIGN
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999998295804691	WITHOUT_CLASSIFICATION	1.7041953101362464E-7	DESIGN
// Ruby name 	WITHOUT_CLASSIFICATION	0.9999789794626668	WITHOUT_CLASSIFICATION	2.10205373332777E-5	DESIGN
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999999301249219	WITHOUT_CLASSIFICATION	6.987507799777694E-8	DESIGN
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9994988536429035	WITHOUT_CLASSIFICATION	5.011463570966145E-4	DESIGN
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9598962212147014	WITHOUT_CLASSIFICATION	0.04010377878529869	DESIGN
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9999975400463937	WITHOUT_CLASSIFICATION	2.459953606252775E-6	DESIGN
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9998073486274166	WITHOUT_CLASSIFICATION	1.9265137258336535E-4	DESIGN
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999999882143729	WITHOUT_CLASSIFICATION	1.1785627153347244E-8	DESIGN
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9079419516833219	WITHOUT_CLASSIFICATION	0.09205804831667815	DESIGN
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999953179883093	WITHOUT_CLASSIFICATION	4.682011690701911E-6	DESIGN
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9998834260416462	WITHOUT_CLASSIFICATION	1.1657395835386309E-4	DESIGN
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999910615201976	WITHOUT_CLASSIFICATION	8.938479802383896E-6	DESIGN
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.999876388631413	WITHOUT_CLASSIFICATION	1.2361136858702273E-4	DESIGN
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999983806397683	WITHOUT_CLASSIFICATION	1.6193602316322156E-6	DESIGN
// get "self"	WITHOUT_CLASSIFICATION	0.9999993639610095	WITHOUT_CLASSIFICATION	6.360389905433655E-7	DESIGN
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9999987119015205	WITHOUT_CLASSIFICATION	1.2880984796469831E-6	DESIGN
// inline script	WITHOUT_CLASSIFICATION	0.9999126404836552	WITHOUT_CLASSIFICATION	8.735951634482608E-5	DESIGN
// inline script	WITHOUT_CLASSIFICATION	0.9999126404836552	WITHOUT_CLASSIFICATION	8.735951634482608E-5	DESIGN
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9998873391946291	WITHOUT_CLASSIFICATION	1.126608053708913E-4	DESIGN
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999776336791941	WITHOUT_CLASSIFICATION	2.2366320805874736E-5	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999991855112325	WITHOUT_CLASSIFICATION	8.14488767574447E-7	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999991855112325	WITHOUT_CLASSIFICATION	8.14488767574447E-7	DESIGN
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9999993990544476	DESIGN	6.009455525402489E-7	WITHOUT_CLASSIFICATION
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9994710959154145	WITHOUT_CLASSIFICATION	5.289040845854043E-4	DESIGN
// done // done // done // done	WITHOUT_CLASSIFICATION	0.999998534562968	WITHOUT_CLASSIFICATION	1.4654370320497164E-6	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999999482394837	WITHOUT_CLASSIFICATION	5.1760516309047006E-8	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999999482394837	WITHOUT_CLASSIFICATION	5.1760516309047006E-8	DESIGN
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9354422947045491	WITHOUT_CLASSIFICATION	0.06455770529545093	DESIGN
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999999976813773	WITHOUT_CLASSIFICATION	2.3186226799836784E-9	DESIGN
// build first node only and return false	WITHOUT_CLASSIFICATION	0.999999998743066	WITHOUT_CLASSIFICATION	1.2569339922584226E-9	DESIGN
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999993291739407	WITHOUT_CLASSIFICATION	6.708260593207972E-7	DESIGN
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999998850900877	WITHOUT_CLASSIFICATION	1.1490991218510744E-7	DESIGN
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999990498694679	WITHOUT_CLASSIFICATION	9.501305321876536E-7	DESIGN
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9997665438383765	WITHOUT_CLASSIFICATION	2.334561616236017E-4	DESIGN
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9973734385620481	WITHOUT_CLASSIFICATION	0.0026265614379518904	DESIGN
// build each "when"	WITHOUT_CLASSIFICATION	0.9999999037903693	WITHOUT_CLASSIFICATION	9.620963062078377E-8	DESIGN
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9990880491546137	WITHOUT_CLASSIFICATION	9.119508453862508E-4	DESIGN
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999998185068073	WITHOUT_CLASSIFICATION	1.814931927158588E-7	DESIGN
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999823403518516	WITHOUT_CLASSIFICATION	1.765964814844882E-5	DESIGN
// close it out	WITHOUT_CLASSIFICATION	0.9999990742612646	WITHOUT_CLASSIFICATION	9.25738735383489E-7	DESIGN
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999758589628807	WITHOUT_CLASSIFICATION	2.4141037119458716E-5	DESIGN
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9625961171484413	WITHOUT_CLASSIFICATION	0.037403882851558684	DESIGN
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999902795675483	WITHOUT_CLASSIFICATION	9.720432451776829E-6	DESIGN
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999999993769041	WITHOUT_CLASSIFICATION	6.23095876773488E-10	DESIGN
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999981063193197	WITHOUT_CLASSIFICATION	1.8936806802418084E-6	DESIGN
// Build IR for body	WITHOUT_CLASSIFICATION	0.999996517346324	WITHOUT_CLASSIFICATION	3.4826536759315574E-6	DESIGN
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999580223403796	WITHOUT_CLASSIFICATION	4.1977659620369964E-5	DESIGN
// Instance method	WITHOUT_CLASSIFICATION	0.9999956318500741	WITHOUT_CLASSIFICATION	4.3681499258180935E-6	DESIGN
// Class method	WITHOUT_CLASSIFICATION	0.9999974989844103	WITHOUT_CLASSIFICATION	2.5010155896081684E-6	DESIGN
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9991816216533236	WITHOUT_CLASSIFICATION	8.183783466764171E-4	DESIGN
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999711751361197	WITHOUT_CLASSIFICATION	2.8824863880411654E-5	DESIGN
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999965817422239	WITHOUT_CLASSIFICATION	3.418257776071311E-6	DESIGN
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999971062147431	WITHOUT_CLASSIFICATION	2.8937852567915947E-6	DESIGN
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9999869753780225	WITHOUT_CLASSIFICATION	1.3024621977588963E-5	DESIGN
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999999893708598	WITHOUT_CLASSIFICATION	1.062914012698193E-8	DESIGN
// Build args	WITHOUT_CLASSIFICATION	0.9999986411597389	WITHOUT_CLASSIFICATION	1.3588402610579545E-6	DESIGN
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999996203715549	WITHOUT_CLASSIFICATION	3.7962844516268654E-7	DESIGN
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999834010496623	WITHOUT_CLASSIFICATION	1.6598950337689235E-5	DESIGN
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999758589628807	WITHOUT_CLASSIFICATION	2.4141037119458716E-5	DESIGN
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999999893708598	WITHOUT_CLASSIFICATION	1.062914012698193E-8	DESIGN
// Build args	WITHOUT_CLASSIFICATION	0.9999986411597389	WITHOUT_CLASSIFICATION	1.3588402610579545E-6	DESIGN
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999834010496623	WITHOUT_CLASSIFICATION	1.6598950337689235E-5	DESIGN
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999992840136108	WITHOUT_CLASSIFICATION	7.159863891581457E-7	DESIGN
// Build the new module	WITHOUT_CLASSIFICATION	0.9999990238045265	WITHOUT_CLASSIFICATION	9.761954733928794E-7	DESIGN
// Build the module body	WITHOUT_CLASSIFICATION	0.9999993211559348	WITHOUT_CLASSIFICATION	6.788440652246893E-7	DESIGN
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999999871352402	WITHOUT_CLASSIFICATION	1.2864759826658978E-8	DESIGN
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999397900427914	WITHOUT_CLASSIFICATION	6.0209957208520115E-5	DESIGN
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999997063170787	WITHOUT_CLASSIFICATION	2.936829212588097E-7	DESIGN
// get attr	WITHOUT_CLASSIFICATION	0.9999978125834916	WITHOUT_CLASSIFICATION	2.187416508402303E-6	DESIGN
// call operator	WITHOUT_CLASSIFICATION	0.9999949342164928	WITHOUT_CLASSIFICATION	5.065783507201511E-6	DESIGN
// set attr	WITHOUT_CLASSIFICATION	0.9999970267028662	WITHOUT_CLASSIFICATION	2.9732971338764145E-6	DESIGN
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9598830724140911	WITHOUT_CLASSIFICATION	0.04011692758590889	DESIGN
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999707492913512	WITHOUT_CLASSIFICATION	2.925070864884058E-5	DESIGN
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999707492913512	WITHOUT_CLASSIFICATION	2.925070864884058E-5	DESIGN
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999964091939595	WITHOUT_CLASSIFICATION	3.5908060406418844E-6	DESIGN
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999999715994385	WITHOUT_CLASSIFICATION	2.8400561520178447E-8	DESIGN
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999999999041524	WITHOUT_CLASSIFICATION	9.584749660436562E-11	DESIGN
// Top-level script!	WITHOUT_CLASSIFICATION	0.9996405519799952	WITHOUT_CLASSIFICATION	3.5944802000477703E-4	DESIGN
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999998280832278	WITHOUT_CLASSIFICATION	1.719167721510986E-7	DESIGN
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999985481541084	WITHOUT_CLASSIFICATION	1.451845891557296E-6	DESIGN
// What handles warnings	WITHOUT_CLASSIFICATION	0.9999722757531078	WITHOUT_CLASSIFICATION	2.7724246892240055E-5	DESIGN
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9976898805568097	WITHOUT_CLASSIFICATION	0.002310119443190213	DESIGN
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.99999996230666	WITHOUT_CLASSIFICATION	3.769334002401544E-8	DESIGN
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.998423472908769	WITHOUT_CLASSIFICATION	0.0015765270912310061	DESIGN
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999260714688233	WITHOUT_CLASSIFICATION	7.392853117669235E-5	DESIGN
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9911238000302659	WITHOUT_CLASSIFICATION	0.008876199969734109	DESIGN
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999999998495877	WITHOUT_CLASSIFICATION	1.5041241490659317E-10	DESIGN
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999999434587632	WITHOUT_CLASSIFICATION	5.654123677098274E-8	DESIGN
// alu operations	WITHOUT_CLASSIFICATION	0.9999993791827885	WITHOUT_CLASSIFICATION	6.208172115142426E-7	DESIGN
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9999982548945706	WITHOUT_CLASSIFICATION	1.7451054293510663E-6	DESIGN
// closure instructions	WITHOUT_CLASSIFICATION	0.9999994470880327	WITHOUT_CLASSIFICATION	5.529119673285106E-7	DESIGN
// eval instructions	WITHOUT_CLASSIFICATION	0.9999995549119998	WITHOUT_CLASSIFICATION	4.4508800025299955E-7	DESIGN
// def instructions	WITHOUT_CLASSIFICATION	0.9991815264670634	WITHOUT_CLASSIFICATION	8.184735329365808E-4	DESIGN
// exception instructions	WITHOUT_CLASSIFICATION	0.9999849953217071	WITHOUT_CLASSIFICATION	1.5004678292888039E-5	DESIGN
// Loads	WITHOUT_CLASSIFICATION	0.9999988578028083	WITHOUT_CLASSIFICATION	1.1421971917479882E-6	DESIGN
// Stores	WITHOUT_CLASSIFICATION	0.9999647860077098	WITHOUT_CLASSIFICATION	3.521399229025567E-5	DESIGN
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999999210736068	WITHOUT_CLASSIFICATION	7.892639325430785E-8	DESIGN
// others	WITHOUT_CLASSIFICATION	0.9999533331405892	WITHOUT_CLASSIFICATION	4.666685941078433E-5	DESIGN
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999862750611551	WITHOUT_CLASSIFICATION	1.372493884496887E-5	DESIGN
// optimization guards	WITHOUT_CLASSIFICATION	0.9999999921551086	WITHOUT_CLASSIFICATION	7.844891442000448E-9	DESIGN
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.8266303935597431	WITHOUT_CLASSIFICATION	0.17336960644025692	DESIGN
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9978553733037239	WITHOUT_CLASSIFICATION	0.0021446266962761944	DESIGN
// scripts	WITHOUT_CLASSIFICATION	0.999839651980221	WITHOUT_CLASSIFICATION	1.6034801977904615E-4	DESIGN
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999958515220279	WITHOUT_CLASSIFICATION	4.148477972156942E-6	DESIGN
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999988266067766	WITHOUT_CLASSIFICATION	1.173393223371125E-6	DESIGN
// methods and closures	WITHOUT_CLASSIFICATION	0.9999997619351682	WITHOUT_CLASSIFICATION	2.380648318026431E-7	DESIGN
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999995283322335	WITHOUT_CLASSIFICATION	4.716677664455624E-7	DESIGN
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9987281087956378	WITHOUT_CLASSIFICATION	0.0012718912043622839	DESIGN
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999997652759879	WITHOUT_CLASSIFICATION	2.3472401220693327E-7	DESIGN
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.999999972827861	WITHOUT_CLASSIFICATION	2.7172138915243403E-8	DESIGN
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999999939039315	WITHOUT_CLASSIFICATION	6.096068545208179E-9	DESIGN
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999585557673134	WITHOUT_CLASSIFICATION	4.1444232686645605E-5	DESIGN
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999979279299518	WITHOUT_CLASSIFICATION	2.0720700481945887E-6	DESIGN
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999998504218105	WITHOUT_CLASSIFICATION	1.4957818943375608E-7	DESIGN
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9998413408644262	WITHOUT_CLASSIFICATION	1.5865913557384955E-4	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.880838168278693	DESIGN	0.11916183172130695	WITHOUT_CLASSIFICATION
// Readline	WITHOUT_CLASSIFICATION	0.9999982716795103	WITHOUT_CLASSIFICATION	1.7283204896645744E-6	DESIGN
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9985359208371901	WITHOUT_CLASSIFICATION	0.0014640791628098217	DESIGN
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999990852358166	WITHOUT_CLASSIFICATION	9.147641833956136E-7	DESIGN
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999809772171036	WITHOUT_CLASSIFICATION	1.902278289643631E-5	DESIGN
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9778954834506187	WITHOUT_CLASSIFICATION	0.0221045165493813	DESIGN
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9997124595636758	WITHOUT_CLASSIFICATION	2.875404363241841E-4	DESIGN
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999908157595075	WITHOUT_CLASSIFICATION	9.184240492511614E-6	DESIGN
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999800045974543	WITHOUT_CLASSIFICATION	1.999540254568128E-5	DESIGN
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9998829546936588	WITHOUT_CLASSIFICATION	1.1704530634114058E-4	DESIGN
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999869892693498	WITHOUT_CLASSIFICATION	1.301073065016122E-5	DESIGN
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9999460859899306	WITHOUT_CLASSIFICATION	5.39140100693082E-5	DESIGN
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999997265017895	WITHOUT_CLASSIFICATION	2.7349821054410604E-7	DESIGN
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9983029372620981	WITHOUT_CLASSIFICATION	0.001697062737901972	DESIGN
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999994518168643	WITHOUT_CLASSIFICATION	5.481831356167844E-7	DESIGN
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.999999983764966	WITHOUT_CLASSIFICATION	1.6235033946648075E-8	DESIGN
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9999999979028682	WITHOUT_CLASSIFICATION	2.097131776903126E-9	DESIGN
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.7165068468111992	WITHOUT_CLASSIFICATION	0.2834931531888008	DESIGN
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999530787935621	WITHOUT_CLASSIFICATION	4.692120643793307E-5	DESIGN
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999530787935621	WITHOUT_CLASSIFICATION	4.692120643793307E-5	DESIGN
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999987592566132	WITHOUT_CLASSIFICATION	1.2407433868075655E-6	DESIGN
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9999991771288992	WITHOUT_CLASSIFICATION	8.228711007435053E-7	DESIGN
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.999999822143563	WITHOUT_CLASSIFICATION	1.7785643701672903E-7	DESIGN
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999990990682366	WITHOUT_CLASSIFICATION	9.009317633232006E-7	DESIGN
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999999965030771	WITHOUT_CLASSIFICATION	3.496922902686765E-9	DESIGN
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9962969387573276	WITHOUT_CLASSIFICATION	0.003703061242672371	DESIGN
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9999977965840083	WITHOUT_CLASSIFICATION	2.2034159915773335E-6	DESIGN
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9999883052851568	WITHOUT_CLASSIFICATION	1.169471484326035E-5	DESIGN
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9994353178632911	WITHOUT_CLASSIFICATION	5.646821367089798E-4	DESIGN
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9994624010874507	WITHOUT_CLASSIFICATION	5.375989125492852E-4	DESIGN
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.999996063042149	WITHOUT_CLASSIFICATION	3.936957850974542E-6	DESIGN
// class or module	WITHOUT_CLASSIFICATION	0.9999997841271355	WITHOUT_CLASSIFICATION	2.1587286440517445E-7	DESIGN
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999973902993271	WITHOUT_CLASSIFICATION	2.6097006729337925E-6	DESIGN
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9999968347764955	WITHOUT_CLASSIFICATION	3.1652235045713838E-6	DESIGN
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999817163509337	WITHOUT_CLASSIFICATION	1.828364906625126E-5	DESIGN
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999995506868014	WITHOUT_CLASSIFICATION	4.4931319868698056E-7	DESIGN
// IN changed!	WITHOUT_CLASSIFICATION	0.9999998673137446	WITHOUT_CLASSIFICATION	1.3268625548065565E-7	DESIGN
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999956521426351	WITHOUT_CLASSIFICATION	4.347857364947544E-6	DESIGN
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999997337009526	WITHOUT_CLASSIFICATION	2.662990473195624E-7	DESIGN
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9999808169461982	WITHOUT_CLASSIFICATION	1.9183053801782744E-5	DESIGN
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999989227166852	WITHOUT_CLASSIFICATION	1.0772833147632706E-6	DESIGN
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9960836387264713	WITHOUT_CLASSIFICATION	0.003916361273528718	DESIGN
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9999510967855537	WITHOUT_CLASSIFICATION	4.890321444625587E-5	DESIGN
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9987113872250689	WITHOUT_CLASSIFICATION	0.0012886127749310507	DESIGN
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999999278372775	WITHOUT_CLASSIFICATION	7.216272256207729E-8	DESIGN
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9999088466928335	WITHOUT_CLASSIFICATION	9.115330716651133E-5	DESIGN
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9999621499201323	WITHOUT_CLASSIFICATION	3.7850079867714884E-5	DESIGN
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999999996019944	WITHOUT_CLASSIFICATION	3.980056404302467E-10	DESIGN
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999606479372664	WITHOUT_CLASSIFICATION	3.935206273353622E-5	DESIGN
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9442276394012652	DESIGN	0.0557723605987348	WITHOUT_CLASSIFICATION
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999641764584574	WITHOUT_CLASSIFICATION	3.582354154254808E-5	DESIGN
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.999999971722168	WITHOUT_CLASSIFICATION	2.827783192509263E-8	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999662778128	WITHOUT_CLASSIFICATION	3.3722187107749E-8	DESIGN
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999949006536885	WITHOUT_CLASSIFICATION	5.099346311516506E-6	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999662778128	WITHOUT_CLASSIFICATION	3.3722187107749E-8	DESIGN
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9997540912109434	WITHOUT_CLASSIFICATION	2.459087890565341E-4	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999952486748985	WITHOUT_CLASSIFICATION	4.7513251014833975E-6	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999952486748985	WITHOUT_CLASSIFICATION	4.7513251014833975E-6	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999952486748985	WITHOUT_CLASSIFICATION	4.7513251014833975E-6	DESIGN
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999962230561295	WITHOUT_CLASSIFICATION	3.7769438705773994E-6	DESIGN
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999962230561295	WITHOUT_CLASSIFICATION	3.7769438705773994E-6	DESIGN
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999974435041759	WITHOUT_CLASSIFICATION	2.556495824187424E-6	DESIGN
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9998826353887389	WITHOUT_CLASSIFICATION	1.173646112611331E-4	DESIGN
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999999826071249	WITHOUT_CLASSIFICATION	1.7392875178882826E-8	DESIGN
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9608468620058022	WITHOUT_CLASSIFICATION	0.039153137994197805	DESIGN
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999984396235219	WITHOUT_CLASSIFICATION	1.5603764781208637E-6	DESIGN
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999883559219822	WITHOUT_CLASSIFICATION	1.1644078017828823E-5	DESIGN
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999999490800239	WITHOUT_CLASSIFICATION	5.091997608620308E-8	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.999999091121885	WITHOUT_CLASSIFICATION	9.088781148969074E-7	DESIGN
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999997538346658	WITHOUT_CLASSIFICATION	2.461653342894273E-7	DESIGN
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.999999326734502	WITHOUT_CLASSIFICATION	6.732654979473455E-7	DESIGN
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999999471815033	WITHOUT_CLASSIFICATION	5.281849660549332E-8	DESIGN
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999916067189943	WITHOUT_CLASSIFICATION	8.393281005771823E-6	DESIGN
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999998047966878	WITHOUT_CLASSIFICATION	1.95203312173632E-7	DESIGN
// root-level logic	WITHOUT_CLASSIFICATION	0.999996643644708	WITHOUT_CLASSIFICATION	3.3563552920373383E-6	DESIGN
// root-level methods	WITHOUT_CLASSIFICATION	0.9999972344468622	WITHOUT_CLASSIFICATION	2.7655531378997696E-6	DESIGN
// root-level classes	WITHOUT_CLASSIFICATION	0.9999993902792418	WITHOUT_CLASSIFICATION	6.097207581080766E-7	DESIGN
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999991514307307	WITHOUT_CLASSIFICATION	8.48569269190704E-7	DESIGN
// load receiver	WITHOUT_CLASSIFICATION	0.9999987939029333	WITHOUT_CLASSIFICATION	1.2060970666205032E-6	DESIGN
// load receiver	WITHOUT_CLASSIFICATION	0.9999987939029333	WITHOUT_CLASSIFICATION	1.2060970666205032E-6	DESIGN
// receiver	WITHOUT_CLASSIFICATION	0.999997741462641	WITHOUT_CLASSIFICATION	2.2585373590152933E-6	DESIGN
// load arguments	WITHOUT_CLASSIFICATION	0.9999985573354572	WITHOUT_CLASSIFICATION	1.4426645427561017E-6	DESIGN
// load arguments	WITHOUT_CLASSIFICATION	0.9999985573354572	WITHOUT_CLASSIFICATION	1.4426645427561017E-6	DESIGN
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999979946835045	WITHOUT_CLASSIFICATION	2.0053164954624714E-6	DESIGN
// Object[] args	WITHOUT_CLASSIFICATION	0.9999757356716265	WITHOUT_CLASSIFICATION	2.426432837360712E-5	DESIGN
// load handle	WITHOUT_CLASSIFICATION	0.9999998902492181	WITHOUT_CLASSIFICATION	1.0975078194247307E-7	DESIGN
// args array	WITHOUT_CLASSIFICATION	0.9999558156002917	WITHOUT_CLASSIFICATION	4.418439970822279E-5	DESIGN
// i'th argument	WITHOUT_CLASSIFICATION	0.9999887329584254	WITHOUT_CLASSIFICATION	1.1267041574624835E-5	DESIGN
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999972737478222	WITHOUT_CLASSIFICATION	2.7262521778549977E-6	DESIGN
// Object arg0	WITHOUT_CLASSIFICATION	0.9999986014092642	WITHOUT_CLASSIFICATION	1.3985907358126116E-6	DESIGN
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999860103976069	WITHOUT_CLASSIFICATION	1.3989602393077126E-5	DESIGN
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999999373594987	WITHOUT_CLASSIFICATION	6.264050130668653E-8	DESIGN
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9937840010647564	WITHOUT_CLASSIFICATION	0.0062159989352436685	DESIGN
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9996563751871254	WITHOUT_CLASSIFICATION	3.436248128746564E-4	DESIGN
// at end	WITHOUT_CLASSIFICATION	0.9996878709871473	WITHOUT_CLASSIFICATION	3.1212901285272406E-4	DESIGN
// undo check	WITHOUT_CLASSIFICATION	0.9999807813117435	WITHOUT_CLASSIFICATION	1.9218688256428905E-5	DESIGN
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999952014785833	WITHOUT_CLASSIFICATION	4.798521416588064E-6	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.999999091121885	WITHOUT_CLASSIFICATION	9.088781148969074E-7	DESIGN
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9999702318141944	WITHOUT_CLASSIFICATION	2.9768185805541814E-5	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999994373793039	WITHOUT_CLASSIFICATION	5.626206960666632E-7	DESIGN
// no check for '*'	WITHOUT_CLASSIFICATION	0.99998316240662	WITHOUT_CLASSIFICATION	1.6837593379941538E-5	DESIGN
// no check for '*'	WITHOUT_CLASSIFICATION	0.99998316240662	WITHOUT_CLASSIFICATION	1.6837593379941538E-5	DESIGN
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999990319821993	WITHOUT_CLASSIFICATION	9.68017800745818E-7	DESIGN
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999870753313331	WITHOUT_CLASSIFICATION	1.2924668666820002E-5	DESIGN
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999989013587401	WITHOUT_CLASSIFICATION	1.098641259803804E-6	DESIGN
// restore position	WITHOUT_CLASSIFICATION	0.9999886987201065	WITHOUT_CLASSIFICATION	1.1301279893584295E-5	DESIGN
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999984326756931	WITHOUT_CLASSIFICATION	1.567324306819864E-6	DESIGN
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.999168161874925	WITHOUT_CLASSIFICATION	8.318381250750915E-4	DESIGN
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999999910851041	WITHOUT_CLASSIFICATION	8.914895873748767E-9	DESIGN
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.999999716665229	WITHOUT_CLASSIFICATION	2.833347710261299E-7	DESIGN
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.999961579428557	WITHOUT_CLASSIFICATION	3.842057144293683E-5	DESIGN
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999998962925273	WITHOUT_CLASSIFICATION	1.0370747263791828E-7	DESIGN
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9999994985645588	WITHOUT_CLASSIFICATION	5.014354411471554E-7	DESIGN
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999838465042652	WITHOUT_CLASSIFICATION	1.6153495734773543E-5	DESIGN
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.926357500983382	DESIGN	0.07364249901661805	WITHOUT_CLASSIFICATION
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999814326062291	WITHOUT_CLASSIFICATION	1.8567393770920486E-5	DESIGN
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999276776544263	WITHOUT_CLASSIFICATION	7.23223455737484E-5	DESIGN
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999992940562467	WITHOUT_CLASSIFICATION	7.059437532518748E-7	DESIGN
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999990088609927	WITHOUT_CLASSIFICATION	9.911390073647214E-7	DESIGN
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999989210934525	WITHOUT_CLASSIFICATION	1.0789065474729676E-6	DESIGN
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999702453393257	WITHOUT_CLASSIFICATION	2.9754660674308305E-5	DESIGN
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999999686703254	WITHOUT_CLASSIFICATION	3.132967470527225E-8	DESIGN
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999999890518574	WITHOUT_CLASSIFICATION	1.094814256020839E-8	DESIGN
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999933845849023	WITHOUT_CLASSIFICATION	6.6154150977414726E-6	DESIGN
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999966013464788	WITHOUT_CLASSIFICATION	3.398653521271297E-6	DESIGN
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999999596338252	WITHOUT_CLASSIFICATION	4.0366174874620984E-8	DESIGN
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999999953707441	WITHOUT_CLASSIFICATION	4.629255949322393E-9	DESIGN
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999991199732724	WITHOUT_CLASSIFICATION	8.800267274831065E-7	DESIGN
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9999993370823038	WITHOUT_CLASSIFICATION	6.62917696167006E-7	DESIGN
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.998849907661202	WITHOUT_CLASSIFICATION	0.0011500923387980804	DESIGN
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999744749373021	WITHOUT_CLASSIFICATION	2.5525062697967776E-5	DESIGN
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999329466125996	WITHOUT_CLASSIFICATION	6.705338740040974E-5	DESIGN
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9987827621185071	WITHOUT_CLASSIFICATION	0.0012172378814928509	DESIGN
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999967172725688	WITHOUT_CLASSIFICATION	3.28272743120535E-6	DESIGN
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9998291501132195	WITHOUT_CLASSIFICATION	1.7084988678052026E-4	DESIGN
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999926576567243	WITHOUT_CLASSIFICATION	7.342343275725181E-6	DESIGN
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999936937999985	WITHOUT_CLASSIFICATION	6.306200001519362E-6	DESIGN
// $blah	WITHOUT_CLASSIFICATION	0.9999989650169453	WITHOUT_CLASSIFICATION	1.0349830547503602E-6	DESIGN
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.998849907661202	WITHOUT_CLASSIFICATION	0.0011500923387980804	DESIGN
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999993284312461	WITHOUT_CLASSIFICATION	6.715687538647762E-7	DESIGN
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999936937999985	WITHOUT_CLASSIFICATION	6.306200001519362E-6	DESIGN
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9999071302408215	WITHOUT_CLASSIFICATION	9.286975917862031E-5	DESIGN
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999998660372427	WITHOUT_CLASSIFICATION	1.339627573836033E-7	DESIGN
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999999747409891	WITHOUT_CLASSIFICATION	2.525901090366043E-8	DESIGN
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999944270456697	WITHOUT_CLASSIFICATION	5.572954330318076E-6	DESIGN
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999982912376807	WITHOUT_CLASSIFICATION	1.7087623193635237E-6	DESIGN
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999321115284616	WITHOUT_CLASSIFICATION	6.788847153835854E-5	DESIGN
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999321115284616	WITHOUT_CLASSIFICATION	6.788847153835854E-5	DESIGN
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9998549198131519	WITHOUT_CLASSIFICATION	1.450801868481677E-4	DESIGN
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999994149141381	WITHOUT_CLASSIFICATION	5.850858619181499E-7	DESIGN
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999998690675567	WITHOUT_CLASSIFICATION	1.3093244325988074E-7	DESIGN
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999998690675567	WITHOUT_CLASSIFICATION	1.3093244325988074E-7	DESIGN
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.99944688666981	WITHOUT_CLASSIFICATION	5.531133301899975E-4	DESIGN
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9999873979030085	WITHOUT_CLASSIFICATION	1.260209699151865E-5	DESIGN
//AF_INET	WITHOUT_CLASSIFICATION	0.9999647640360981	WITHOUT_CLASSIFICATION	3.523596390196403E-5	DESIGN
//AF_INET	WITHOUT_CLASSIFICATION	0.9999647640360981	WITHOUT_CLASSIFICATION	3.523596390196403E-5	DESIGN
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999611865789874	WITHOUT_CLASSIFICATION	3.881342101267426E-5	DESIGN
// line 321	WITHOUT_CLASSIFICATION	0.9999994941569043	WITHOUT_CLASSIFICATION	5.058430957667992E-7	DESIGN
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.99999991354722	WITHOUT_CLASSIFICATION	8.645277999707315E-8	DESIGN
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.999997442599637	WITHOUT_CLASSIFICATION	2.557400363101984E-6	DESIGN
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9992344947557231	WITHOUT_CLASSIFICATION	7.655052442768715E-4	DESIGN
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9994579501249893	WITHOUT_CLASSIFICATION	5.420498750106297E-4	DESIGN
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9998403604704287	WITHOUT_CLASSIFICATION	1.5963952957136703E-4	DESIGN
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999660297341761	WITHOUT_CLASSIFICATION	3.397026582383524E-5	DESIGN
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9999097463369183	WITHOUT_CLASSIFICATION	9.025366308166216E-5	DESIGN
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999917024433269	WITHOUT_CLASSIFICATION	8.297556673153207E-6	DESIGN
// host and port given	WITHOUT_CLASSIFICATION	0.9999203095231779	WITHOUT_CLASSIFICATION	7.969047682208689E-5	DESIGN
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9996934821338024	WITHOUT_CLASSIFICATION	3.065178661976764E-4	DESIGN
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999999913373683	WITHOUT_CLASSIFICATION	8.662631679474887E-9	DESIGN
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999858102001415	WITHOUT_CLASSIFICATION	1.418979985849893E-5	DESIGN
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999999842962941	WITHOUT_CLASSIFICATION	1.570370598816758E-8	DESIGN
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.999930639731298	WITHOUT_CLASSIFICATION	6.936026870204876E-5	DESIGN
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9950309127451651	WITHOUT_CLASSIFICATION	0.004969087254834992	DESIGN
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999835193987907	WITHOUT_CLASSIFICATION	1.648060120923826E-5	DESIGN
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9974709625454509	WITHOUT_CLASSIFICATION	0.0025290374545490907	DESIGN
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9999584318729718	WITHOUT_CLASSIFICATION	4.1568127028154284E-5	DESIGN
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999814189932693	WITHOUT_CLASSIFICATION	1.8581006730750293E-5	DESIGN
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999999409232548	WITHOUT_CLASSIFICATION	5.907674527439021E-8	DESIGN
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9999635574422466	WITHOUT_CLASSIFICATION	3.6442557753268844E-5	DESIGN
// AF_INET	WITHOUT_CLASSIFICATION	0.9999995105270377	WITHOUT_CLASSIFICATION	4.894729621876987E-7	DESIGN
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9999996764657617	WITHOUT_CLASSIFICATION	3.235342382519573E-7	DESIGN
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9999977148779414	WITHOUT_CLASSIFICATION	2.285122058528243E-6	DESIGN
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9510509404300104	WITHOUT_CLASSIFICATION	0.04894905956998969	DESIGN
// line 323	WITHOUT_CLASSIFICATION	0.9999991549178731	WITHOUT_CLASSIFICATION	8.450821269667697E-7	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999845673813981	WITHOUT_CLASSIFICATION	1.5432618601957016E-5	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999845673813981	WITHOUT_CLASSIFICATION	1.5432618601957016E-5	DESIGN
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999627710144007	WITHOUT_CLASSIFICATION	3.722898559930122E-5	DESIGN
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999999935902535	WITHOUT_CLASSIFICATION	6.409746505033897E-9	DESIGN
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9999849966921436	WITHOUT_CLASSIFICATION	1.5003307856442175E-5	DESIGN
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9997391036561303	WITHOUT_CLASSIFICATION	2.6089634386976246E-4	DESIGN
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999985873132157	WITHOUT_CLASSIFICATION	1.412686784397138E-6	DESIGN
// RubySocket	WITHOUT_CLASSIFICATION	0.9998824529796039	WITHOUT_CLASSIFICATION	1.1754702039608333E-4	DESIGN
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9984707158231197	WITHOUT_CLASSIFICATION	0.0015292841768802972	DESIGN
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998739374156	WITHOUT_CLASSIFICATION	1.2606258444497643E-7	DESIGN
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999997345741899	WITHOUT_CLASSIFICATION	2.654258100474129E-7	DESIGN
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999988377856235	WITHOUT_CLASSIFICATION	1.1622143765011247E-6	DESIGN
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999999964890105	WITHOUT_CLASSIFICATION	3.5109895393422294E-9	DESIGN
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999910850728143	WITHOUT_CLASSIFICATION	8.914927185605766E-6	DESIGN
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9999941335683519	WITHOUT_CLASSIFICATION	5.866431648147454E-6	DESIGN
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9993144652728243	WITHOUT_CLASSIFICATION	6.855347271757089E-4	DESIGN
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999692051262611	WITHOUT_CLASSIFICATION	3.079487373898276E-5	DESIGN
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999788288800618	WITHOUT_CLASSIFICATION	2.11711199382203E-5	DESIGN
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9999483116863903	WITHOUT_CLASSIFICATION	5.1688313609695264E-5	DESIGN
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.999991587834355	WITHOUT_CLASSIFICATION	8.412165645010578E-6	DESIGN
// be dead	WITHOUT_CLASSIFICATION	0.9988669638332915	WITHOUT_CLASSIFICATION	0.0011330361667084643	DESIGN
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9999751564667599	WITHOUT_CLASSIFICATION	2.4843533240035433E-5	DESIGN
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999690502724208	WITHOUT_CLASSIFICATION	3.094972757928785E-5	DESIGN
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9999781736038713	WITHOUT_CLASSIFICATION	2.1826396128673362E-5	DESIGN
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999951492864934	WITHOUT_CLASSIFICATION	4.8507135065757195E-6	DESIGN
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999999171334488	WITHOUT_CLASSIFICATION	8.286655123484854E-8	DESIGN
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.999999976126619	WITHOUT_CLASSIFICATION	2.3873381119510854E-8	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999987372792076	WITHOUT_CLASSIFICATION	1.2627207923479713E-6	DESIGN
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.869541822198645	WITHOUT_CLASSIFICATION	0.130458177801355	DESIGN
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9964438231364338	WITHOUT_CLASSIFICATION	0.003556176863566185	DESIGN
// main body	WITHOUT_CLASSIFICATION	0.999999494125711	WITHOUT_CLASSIFICATION	5.05874289019968E-7	DESIGN
// return jump handling	WITHOUT_CLASSIFICATION	0.999991452632718	WITHOUT_CLASSIFICATION	8.547367281887205E-6	DESIGN
// finally	WITHOUT_CLASSIFICATION	0.9999962389189477	WITHOUT_CLASSIFICATION	3.7610810522109203E-6	DESIGN
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999997922328818	WITHOUT_CLASSIFICATION	2.0776711811641334E-7	DESIGN
// redo jump handling	WITHOUT_CLASSIFICATION	0.9999784952548565	WITHOUT_CLASSIFICATION	2.1504745143466887E-5	DESIGN
// clear the redo	WITHOUT_CLASSIFICATION	0.9999973592099718	WITHOUT_CLASSIFICATION	2.6407900282458738E-6	DESIGN
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999994684111932	WITHOUT_CLASSIFICATION	5.315888067680375E-7	DESIGN
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9999849811385456	WITHOUT_CLASSIFICATION	1.5018861454407982E-5	DESIGN
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.999997950209026	WITHOUT_CLASSIFICATION	2.049790973967785E-6	DESIGN
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9950999751643637	WITHOUT_CLASSIFICATION	0.004900024835636418	DESIGN
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999999977151571	WITHOUT_CLASSIFICATION	2.284842814136776E-9	DESIGN
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.999995159554324	WITHOUT_CLASSIFICATION	4.840445675953145E-6	DESIGN
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9997434023333919	WITHOUT_CLASSIFICATION	2.565976666081675E-4	DESIGN
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9997900289321784	WITHOUT_CLASSIFICATION	2.099710678215967E-4	DESIGN
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999996645489209	WITHOUT_CLASSIFICATION	3.354510791680217E-7	DESIGN
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999996645489209	WITHOUT_CLASSIFICATION	3.354510791680217E-7	DESIGN
// normal all-rest method	WITHOUT_CLASSIFICATION	0.999974703297979	WITHOUT_CLASSIFICATION	2.529670202098696E-5	DESIGN
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.999872712717587	WITHOUT_CLASSIFICATION	1.272872824129867E-4	DESIGN
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9999985233186868	WITHOUT_CLASSIFICATION	1.4766813132522742E-6	DESIGN
// return	WITHOUT_CLASSIFICATION	0.9999841481626887	WITHOUT_CLASSIFICATION	1.585183731137201E-5	DESIGN
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999326987491971	WITHOUT_CLASSIFICATION	6.730125080289745E-5	DESIGN
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999993826818886	WITHOUT_CLASSIFICATION	6.173181114884519E-7	DESIGN
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999764957076192	WITHOUT_CLASSIFICATION	2.350429238091937E-5	DESIGN
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999980769652038	WITHOUT_CLASSIFICATION	1.9230347962298115E-6	DESIGN
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.999989603398877	WITHOUT_CLASSIFICATION	1.0396601122904575E-5	DESIGN
// tc	WITHOUT_CLASSIFICATION	0.9999439636738953	WITHOUT_CLASSIFICATION	5.6036326104798706E-5	DESIGN
// self // name	WITHOUT_CLASSIFICATION	0.9999780091516497	WITHOUT_CLASSIFICATION	2.1990848350342623E-5	DESIGN
// no args	WITHOUT_CLASSIFICATION	0.9999728117815994	WITHOUT_CLASSIFICATION	2.718821840063631E-5	DESIGN
// variable args with block	WITHOUT_CLASSIFICATION	0.9999970533532744	WITHOUT_CLASSIFICATION	2.9466467256792504E-6	DESIGN
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999990597585209	WITHOUT_CLASSIFICATION	9.402414791130609E-7	DESIGN
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.999999836719746	WITHOUT_CLASSIFICATION	1.632802539316637E-7	DESIGN
// one arg with block	WITHOUT_CLASSIFICATION	0.9999989148091933	WITHOUT_CLASSIFICATION	1.0851908066670703E-6	DESIGN
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999998745359968	WITHOUT_CLASSIFICATION	1.254640030598915E-7	DESIGN
// two args with block	WITHOUT_CLASSIFICATION	0.9999728193818619	WITHOUT_CLASSIFICATION	2.7180618138023227E-5	DESIGN
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999957836187415	WITHOUT_CLASSIFICATION	4.2163812585156715E-6	DESIGN
// three args with block	WITHOUT_CLASSIFICATION	0.99995331783206	WITHOUT_CLASSIFICATION	4.668216793989623E-5	DESIGN
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999929865536492	WITHOUT_CLASSIFICATION	7.013446350821428E-6	DESIGN
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999999483895685	WITHOUT_CLASSIFICATION	5.161043147013523E-8	DESIGN
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9999668789429851	WITHOUT_CLASSIFICATION	3.312105701494183E-5	DESIGN
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9999651855019647	WITHOUT_CLASSIFICATION	3.481449803527778E-5	DESIGN
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999998258605647	WITHOUT_CLASSIFICATION	1.7413943525280576E-7	DESIGN
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999970785321586	WITHOUT_CLASSIFICATION	2.921467841549684E-6	DESIGN
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999938580919533	WITHOUT_CLASSIFICATION	6.141908046722102E-6	DESIGN
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999999972009304	WITHOUT_CLASSIFICATION	2.799069687817363E-9	DESIGN
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999998694452392	WITHOUT_CLASSIFICATION	1.3055476068273002E-7	DESIGN
// static invocation	WITHOUT_CLASSIFICATION	0.9999873045594314	WITHOUT_CLASSIFICATION	1.2695440568595814E-5	DESIGN
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999999592364998	WITHOUT_CLASSIFICATION	4.0763500268939684E-8	DESIGN
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999969801793928	WITHOUT_CLASSIFICATION	3.019820607306511E-6	DESIGN
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999115906260923	WITHOUT_CLASSIFICATION	8.840937390778722E-5	DESIGN
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9999824240228179	WITHOUT_CLASSIFICATION	1.757597718211137E-5	DESIGN
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9950999751643637	WITHOUT_CLASSIFICATION	0.004900024835636418	DESIGN
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9999990799489318	WITHOUT_CLASSIFICATION	9.200510682865264E-7	DESIGN
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999971120575515	WITHOUT_CLASSIFICATION	2.8879424484802407E-6	DESIGN
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999971120575515	WITHOUT_CLASSIFICATION	2.8879424484802407E-6	DESIGN
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9889052944724205	WITHOUT_CLASSIFICATION	0.011094705527579483	DESIGN
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9993073928679318	WITHOUT_CLASSIFICATION	6.926071320681203E-4	DESIGN
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999979669432273	WITHOUT_CLASSIFICATION	2.0330567726490377E-6	DESIGN
// never reached	WITHOUT_CLASSIFICATION	0.9999377641798859	WITHOUT_CLASSIFICATION	6.223582011413696E-5	DESIGN
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9999728457239462	WITHOUT_CLASSIFICATION	2.7154276053866467E-5	DESIGN
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9999975668084042	WITHOUT_CLASSIFICATION	2.4331915958522773E-6	DESIGN
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9999710396050802	WITHOUT_CLASSIFICATION	2.896039491982487E-5	DESIGN
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9999806639592372	WITHOUT_CLASSIFICATION	1.9336040762760418E-5	DESIGN
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9999883497366958	WITHOUT_CLASSIFICATION	1.1650263304106227E-5	DESIGN
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.999898443435733	WITHOUT_CLASSIFICATION	1.0155656426705848E-4	DESIGN
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9999074238364083	WITHOUT_CLASSIFICATION	9.257616359172003E-5	DESIGN
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9997712621071251	WITHOUT_CLASSIFICATION	2.2873789287491898E-4	DESIGN
// promise to implement N	WITHOUT_CLASSIFICATION	0.9999557246656892	WITHOUT_CLASSIFICATION	4.427533431080764E-5	DESIGN
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9999657182156753	WITHOUT_CLASSIFICATION	3.428178432483528E-5	DESIGN
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9993113016459192	WITHOUT_CLASSIFICATION	6.886983540808857E-4	DESIGN
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9999638753726788	WITHOUT_CLASSIFICATION	3.6124627321197296E-5	DESIGN
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.99998897535863	WITHOUT_CLASSIFICATION	1.1024641370017734E-5	DESIGN
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9999458163475068	WITHOUT_CLASSIFICATION	5.418365249312969E-5	DESIGN
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.999984895296863	WITHOUT_CLASSIFICATION	1.5104703137099799E-5	DESIGN
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9998683342322705	WITHOUT_CLASSIFICATION	1.3166576772950578E-4	DESIGN
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9998872408952575	WITHOUT_CLASSIFICATION	1.1275910474254966E-4	DESIGN
// promise to implement three	WITHOUT_CLASSIFICATION	0.9992036748290126	WITHOUT_CLASSIFICATION	7.963251709874629E-4	DESIGN
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999928672580327	WITHOUT_CLASSIFICATION	7.132741967278993E-6	DESIGN
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.999999819058899	WITHOUT_CLASSIFICATION	1.8094110100429647E-7	DESIGN
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999997788202232	WITHOUT_CLASSIFICATION	2.2117977694739784E-7	DESIGN
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9998481777228535	WITHOUT_CLASSIFICATION	1.5182227714643053E-4	DESIGN
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999998628543939	WITHOUT_CLASSIFICATION	1.37145606078457E-7	DESIGN
// create constructor	WITHOUT_CLASSIFICATION	0.9998592665800524	WITHOUT_CLASSIFICATION	1.4073341994763638E-4	DESIGN
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999999858549408	WITHOUT_CLASSIFICATION	1.4145059125197415E-8	DESIGN
// end constructor	WITHOUT_CLASSIFICATION	0.9998923678816825	WITHOUT_CLASSIFICATION	1.076321183174739E-4	DESIGN
// start setup method	WITHOUT_CLASSIFICATION	0.9999590806106501	WITHOUT_CLASSIFICATION	4.091938934994057E-5	DESIGN
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999955669406118	WITHOUT_CLASSIFICATION	4.433059388290735E-6	DESIGN
// set Ruby	WITHOUT_CLASSIFICATION	0.9999775877254639	WITHOUT_CLASSIFICATION	2.2412274536179568E-5	DESIGN
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.999999361681804	WITHOUT_CLASSIFICATION	6.383181959816461E-7	DESIGN
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9960525791650277	WITHOUT_CLASSIFICATION	0.003947420834972321	DESIGN
// get current context	WITHOUT_CLASSIFICATION	0.9999835295246323	WITHOUT_CLASSIFICATION	1.6470475367633603E-5	DESIGN
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999999431349145	WITHOUT_CLASSIFICATION	5.6865085524852124E-8	DESIGN
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9998481777228535	WITHOUT_CLASSIFICATION	1.5182227714643053E-4	DESIGN
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999998628543939	WITHOUT_CLASSIFICATION	1.37145606078457E-7	DESIGN
// create constructor	WITHOUT_CLASSIFICATION	0.9998592665800524	WITHOUT_CLASSIFICATION	1.4073341994763638E-4	DESIGN
// end constructor	WITHOUT_CLASSIFICATION	0.9998923678816825	WITHOUT_CLASSIFICATION	1.076321183174739E-4	DESIGN
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9985765123079875	WITHOUT_CLASSIFICATION	0.001423487692012501	DESIGN
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.999997115323999	WITHOUT_CLASSIFICATION	2.884676000994496E-6	DESIGN
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9998768976689286	WITHOUT_CLASSIFICATION	1.2310233107137424E-4	DESIGN
// load null block	WITHOUT_CLASSIFICATION	0.9999999135248203	WITHOUT_CLASSIFICATION	8.647517960371252E-8	DESIGN
// invoke method	WITHOUT_CLASSIFICATION	0.9998185133907751	WITHOUT_CLASSIFICATION	1.8148660922495552E-4	DESIGN
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.999999999916408	WITHOUT_CLASSIFICATION	8.359209972245669E-11	DESIGN
// end setup method	WITHOUT_CLASSIFICATION	0.9999969246449181	WITHOUT_CLASSIFICATION	3.0753550818440038E-6	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9999987775046809	WITHOUT_CLASSIFICATION	1.222495319077534E-6	DESIGN
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.999997433768716	WITHOUT_CLASSIFICATION	2.566231284054094E-6	DESIGN
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999998602731307	WITHOUT_CLASSIFICATION	1.3972686923809862E-7	DESIGN
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999999674101526	WITHOUT_CLASSIFICATION	3.258984729433553E-8	DESIGN
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.999983949470017	WITHOUT_CLASSIFICATION	1.6050529982935146E-5	DESIGN
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.999930394780226	WITHOUT_CLASSIFICATION	6.960521977394283E-5	DESIGN
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9998710496683744	WITHOUT_CLASSIFICATION	1.2895033162568762E-4	DESIGN
// store it	WITHOUT_CLASSIFICATION	0.9999920091585434	WITHOUT_CLASSIFICATION	7.990841456656928E-6	DESIGN
// end of try block	WITHOUT_CLASSIFICATION	0.9999969480896563	WITHOUT_CLASSIFICATION	3.0519103436191268E-6	DESIGN
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9998070354444979	WITHOUT_CLASSIFICATION	1.9296455550209558E-4	DESIGN
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999994080421001	WITHOUT_CLASSIFICATION	5.919578999049048E-7	DESIGN
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.999998159818192	WITHOUT_CLASSIFICATION	1.8401818080165487E-6	DESIGN
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999999431349145	WITHOUT_CLASSIFICATION	5.6865085524852124E-8	DESIGN
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.999997115323999	WITHOUT_CLASSIFICATION	2.884676000994496E-6	DESIGN
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9998768976689286	WITHOUT_CLASSIFICATION	1.2310233107137424E-4	DESIGN
// invoke method	WITHOUT_CLASSIFICATION	0.9998185133907751	WITHOUT_CLASSIFICATION	1.8148660922495552E-4	DESIGN
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.999999999916408	WITHOUT_CLASSIFICATION	8.359209972245669E-11	DESIGN
// end setup method	WITHOUT_CLASSIFICATION	0.9999969246449181	WITHOUT_CLASSIFICATION	3.0753550818440038E-6	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9999987775046809	WITHOUT_CLASSIFICATION	1.222495319077534E-6	DESIGN
// create the class	WITHOUT_CLASSIFICATION	0.999980957625442	WITHOUT_CLASSIFICATION	1.904237455801851E-5	DESIGN
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9999803020854299	WITHOUT_CLASSIFICATION	1.969791457017556E-5	DESIGN
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999999957956229	WITHOUT_CLASSIFICATION	4.204377030824669E-9	DESIGN
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999999972208847	WITHOUT_CLASSIFICATION	2.7791153632619043E-9	DESIGN
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999848258691186	WITHOUT_CLASSIFICATION	1.5174130881328005E-5	DESIGN
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999848258691186	WITHOUT_CLASSIFICATION	1.5174130881328005E-5	DESIGN
// setup the class	WITHOUT_CLASSIFICATION	0.9999919239334918	WITHOUT_CLASSIFICATION	8.07606650828455E-6	DESIGN
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999996118116217	WITHOUT_CLASSIFICATION	3.8818837831694906E-7	DESIGN
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999985545948284	WITHOUT_CLASSIFICATION	1.4454051715445526E-6	DESIGN
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999292660000053	WITHOUT_CLASSIFICATION	7.073399999472906E-5	DESIGN
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.999998669637853	WITHOUT_CLASSIFICATION	1.3303621470393726E-6	DESIGN
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999946030020975	WITHOUT_CLASSIFICATION	5.396997902560911E-6	DESIGN
// set the full name	WITHOUT_CLASSIFICATION	0.999996814488924	WITHOUT_CLASSIFICATION	3.1855110760380184E-6	DESIGN
// include all interfaces	WITHOUT_CLASSIFICATION	0.9999593812896335	WITHOUT_CLASSIFICATION	4.061871036647425E-5	DESIGN
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999999981586438	WITHOUT_CLASSIFICATION	1.8413562623281832E-9	DESIGN
// add array construction methods	WITHOUT_CLASSIFICATION	0.9999842725778815	WITHOUT_CLASSIFICATION	1.572742211857129E-5	DESIGN
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9932233526791135	WITHOUT_CLASSIFICATION	0.006776647320886447	DESIGN
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999141814966596	WITHOUT_CLASSIFICATION	8.58185033404861E-5	DESIGN
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999985891823291	WITHOUT_CLASSIFICATION	1.4108176709444945E-6	DESIGN
// too much array creation!	WITHOUT_CLASSIFICATION	0.9968448598208414	WITHOUT_CLASSIFICATION	0.0031551401791585472	DESIGN
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999982714890518	WITHOUT_CLASSIFICATION	1.728510948087948E-6	DESIGN
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999994728558558	WITHOUT_CLASSIFICATION	5.27144144150351E-7	DESIGN
// add all static variables	WITHOUT_CLASSIFICATION	0.9993273851563246	WITHOUT_CLASSIFICATION	6.726148436754485E-4	DESIGN
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999997839859546	WITHOUT_CLASSIFICATION	2.1601404539612488E-7	DESIGN
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999993910806391	WITHOUT_CLASSIFICATION	6.089193608631592E-7	DESIGN
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9998945781965636	WITHOUT_CLASSIFICATION	1.054218034364561E-4	DESIGN
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.8201353907650311	DESIGN	0.17986460923496894	WITHOUT_CLASSIFICATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999996999807168	WITHOUT_CLASSIFICATION	3.00019283212605E-7	DESIGN
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999999797968128	WITHOUT_CLASSIFICATION	2.0203187177784634E-8	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9987003909098573	DESIGN	0.001299609090142723	WITHOUT_CLASSIFICATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999998862783921	WITHOUT_CLASSIFICATION	1.1372160782109755E-7	DESIGN
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.999869439963832	WITHOUT_CLASSIFICATION	1.3056003616790683E-4	DESIGN
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999999977968399	WITHOUT_CLASSIFICATION	2.2031600658506046E-9	DESIGN
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9998994417581619	WITHOUT_CLASSIFICATION	1.0055824183806395E-4	DESIGN
// line 326	WITHOUT_CLASSIFICATION	0.9999982546508853	WITHOUT_CLASSIFICATION	1.745349114660715E-6	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999998862783921	WITHOUT_CLASSIFICATION	1.1372160782109755E-7	DESIGN
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.999869439963832	WITHOUT_CLASSIFICATION	1.3056003616790683E-4	DESIGN
// too much array creation!	WITHOUT_CLASSIFICATION	0.9968448598208414	WITHOUT_CLASSIFICATION	0.0031551401791585472	DESIGN
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999939529951707	WITHOUT_CLASSIFICATION	6.047004829388447E-6	DESIGN
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999991797553431	WITHOUT_CLASSIFICATION	8.202446567793121E-7	DESIGN
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9998433593922361	WITHOUT_CLASSIFICATION	1.566406077639129E-4	DESIGN
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999975358808809	WITHOUT_CLASSIFICATION	2.4641191190693617E-6	DESIGN
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.999788699001421	WITHOUT_CLASSIFICATION	2.113009985788917E-4	DESIGN
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999963809642242	WITHOUT_CLASSIFICATION	3.6190357757807093E-6	DESIGN
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9999953440668993	WITHOUT_CLASSIFICATION	4.655933100663897E-6	DESIGN
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999992927422444	WITHOUT_CLASSIFICATION	7.072577555973786E-7	DESIGN
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9926884141178454	WITHOUT_CLASSIFICATION	0.007311585882154643	DESIGN
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9992837028938706	WITHOUT_CLASSIFICATION	7.162971061294232E-4	DESIGN
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999993172099473	WITHOUT_CLASSIFICATION	6.827900527680576E-7	DESIGN
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.999353685039885	WITHOUT_CLASSIFICATION	6.46314960115079E-4	DESIGN
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9999999018690997	WITHOUT_CLASSIFICATION	9.813090024044531E-8	DESIGN
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.99999989805456	WITHOUT_CLASSIFICATION	1.0194543995593842E-7	DESIGN
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9937965799875552	WITHOUT_CLASSIFICATION	0.006203420012444829	DESIGN
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9999864671322486	WITHOUT_CLASSIFICATION	1.3532867751357064E-5	DESIGN
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9999876463991343	WITHOUT_CLASSIFICATION	1.235360086567401E-5	DESIGN
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9609299943816499	WITHOUT_CLASSIFICATION	0.03907000561834998	DESIGN
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.99999979133023	WITHOUT_CLASSIFICATION	2.0866976990931773E-7	DESIGN
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9809248620364225	WITHOUT_CLASSIFICATION	0.019075137963577515	DESIGN
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999967231925931	WITHOUT_CLASSIFICATION	3.276807406814063E-6	DESIGN
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9997907176007378	WITHOUT_CLASSIFICATION	2.092823992622405E-4	DESIGN
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999995905725356	WITHOUT_CLASSIFICATION	4.0942746437461757E-7	DESIGN
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9993731430494799	WITHOUT_CLASSIFICATION	6.268569505201009E-4	DESIGN
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999998469994399	WITHOUT_CLASSIFICATION	1.530005600791233E-7	DESIGN
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999218272843398	WITHOUT_CLASSIFICATION	7.817271566022514E-5	DESIGN
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9778402095835467	WITHOUT_CLASSIFICATION	0.022159790416453405	DESIGN
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.786058110595234	WITHOUT_CLASSIFICATION	0.2139418894047659	DESIGN
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9996735303282199	WITHOUT_CLASSIFICATION	3.264696717800334E-4	DESIGN
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9998110710520429	WITHOUT_CLASSIFICATION	1.8892894795703857E-4	DESIGN
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999961691773598	WITHOUT_CLASSIFICATION	3.830822640158105E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999985208924003	WITHOUT_CLASSIFICATION	1.4791075996952204E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999985208924003	WITHOUT_CLASSIFICATION	1.4791075996952204E-6	DESIGN
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999985891823291	WITHOUT_CLASSIFICATION	1.4108176709444945E-6	DESIGN
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9998938071608374	WITHOUT_CLASSIFICATION	1.0619283916252132E-4	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999996551157788	WITHOUT_CLASSIFICATION	3.448842211922645E-7	DESIGN
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9999721775211121	WITHOUT_CLASSIFICATION	2.7822478887934047E-5	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999999388677886	WITHOUT_CLASSIFICATION	6.11322114116256E-8	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999999388677886	WITHOUT_CLASSIFICATION	6.11322114116256E-8	DESIGN
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999997861514413	WITHOUT_CLASSIFICATION	2.1384855866471425E-7	DESIGN
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999859232363343	WITHOUT_CLASSIFICATION	1.4076763665847966E-5	DESIGN
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999999816957528	WITHOUT_CLASSIFICATION	1.8304247220813643E-8	DESIGN
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999914785670897	WITHOUT_CLASSIFICATION	8.52143291032287E-6	DESIGN
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9957919012397329	WITHOUT_CLASSIFICATION	0.0042080987602670815	DESIGN
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999995087812767	WITHOUT_CLASSIFICATION	4.912187231989037E-7	DESIGN
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999987332126203	WITHOUT_CLASSIFICATION	1.2667873796806464E-6	DESIGN
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999992577553408	WITHOUT_CLASSIFICATION	7.422446591146669E-7	DESIGN
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999999651975879	WITHOUT_CLASSIFICATION	3.4802412025521885E-8	DESIGN
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999768467681132	WITHOUT_CLASSIFICATION	2.3153231886854194E-5	DESIGN
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999999881334101	WITHOUT_CLASSIFICATION	1.1866589927270828E-8	DESIGN
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.99999996221954	WITHOUT_CLASSIFICATION	3.778045996489467E-8	DESIGN
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.999999989467821	WITHOUT_CLASSIFICATION	1.0532179015757627E-8	DESIGN
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9998261446408516	WITHOUT_CLASSIFICATION	1.7385535914824738E-4	DESIGN
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.999607454989859	WITHOUT_CLASSIFICATION	3.925450101408939E-4	DESIGN
// something?	WITHOUT_CLASSIFICATION	0.9802033302923476	WITHOUT_CLASSIFICATION	0.019796669707652384	DESIGN
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999974912270368	WITHOUT_CLASSIFICATION	2.508772963084129E-6	DESIGN
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999974912270368	WITHOUT_CLASSIFICATION	2.508772963084129E-6	DESIGN
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999999939525487	WITHOUT_CLASSIFICATION	6.047451226699302E-9	DESIGN
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999999939525487	WITHOUT_CLASSIFICATION	6.047451226699302E-9	DESIGN
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999999851800269	WITHOUT_CLASSIFICATION	1.4819973105921514E-8	DESIGN
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999260478320441	WITHOUT_CLASSIFICATION	7.395216795594723E-5	DESIGN
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999986492202902	WITHOUT_CLASSIFICATION	1.3507797098175721E-6	DESIGN
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9999982933825136	WITHOUT_CLASSIFICATION	1.706617486446176E-6	DESIGN
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999577167076604	WITHOUT_CLASSIFICATION	4.228329233959779E-5	DESIGN
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999964574328019	WITHOUT_CLASSIFICATION	3.5425671981275708E-6	DESIGN
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999999628601849	WITHOUT_CLASSIFICATION	3.7139815087226114E-8	DESIGN
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.99999996221954	WITHOUT_CLASSIFICATION	3.778045996489467E-8	DESIGN
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.999999989467821	WITHOUT_CLASSIFICATION	1.0532179015757627E-8	DESIGN
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.999607454989859	WITHOUT_CLASSIFICATION	3.925450101408939E-4	DESIGN
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999999852905286	WITHOUT_CLASSIFICATION	1.4709471393441582E-8	DESIGN
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9348240209448367	WITHOUT_CLASSIFICATION	0.06517597905516329	DESIGN
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9997957003155404	WITHOUT_CLASSIFICATION	2.0429968445961826E-4	DESIGN
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9993768993197564	WITHOUT_CLASSIFICATION	6.231006802436034E-4	DESIGN
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9999607638464912	WITHOUT_CLASSIFICATION	3.923615350880952E-5	DESIGN
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9996046236031599	WITHOUT_CLASSIFICATION	3.95376396840067E-4	DESIGN
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999999186779025	WITHOUT_CLASSIFICATION	8.132209744649781E-8	DESIGN
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999988352071427	WITHOUT_CLASSIFICATION	1.164792857350856E-6	DESIGN
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999999441838099	WITHOUT_CLASSIFICATION	5.581619017994073E-8	DESIGN
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999999961491336	WITHOUT_CLASSIFICATION	3.85086647187781E-9	DESIGN
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9385723988225978	DESIGN	0.06142760117740223	WITHOUT_CLASSIFICATION
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999965414120142	WITHOUT_CLASSIFICATION	3.4585879859139606E-6	DESIGN
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999998869857079	WITHOUT_CLASSIFICATION	1.130142921778379E-7	DESIGN
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9998214802807583	WITHOUT_CLASSIFICATION	1.7851971924172778E-4	DESIGN
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.669208482283101	DESIGN	0.33079151771689896	WITHOUT_CLASSIFICATION
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999999444331902	WITHOUT_CLASSIFICATION	5.556680976119023E-8	DESIGN
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999994478859716	WITHOUT_CLASSIFICATION	5.521140284833562E-7	DESIGN
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9999999947113565	WITHOUT_CLASSIFICATION	5.2886434890809156E-9	DESIGN
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999999916294938	WITHOUT_CLASSIFICATION	8.370506189263598E-9	DESIGN
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999999643696841	WITHOUT_CLASSIFICATION	3.563031581810834E-8	DESIGN
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.999999618655546	WITHOUT_CLASSIFICATION	3.813444540789109E-7	DESIGN
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999990374713705	WITHOUT_CLASSIFICATION	9.62528629451407E-7	DESIGN
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9999011336926102	WITHOUT_CLASSIFICATION	9.886630738975003E-5	DESIGN
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999965151250483	WITHOUT_CLASSIFICATION	3.4848749517627313E-6	DESIGN
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999993849906658	WITHOUT_CLASSIFICATION	6.15009334368304E-7	DESIGN
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999999918683385	WITHOUT_CLASSIFICATION	8.13166141408784E-9	DESIGN
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999999857495683	WITHOUT_CLASSIFICATION	1.4250431681818963E-8	DESIGN
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9999654875215921	WITHOUT_CLASSIFICATION	3.4512478407971994E-5	DESIGN
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999994882301594	WITHOUT_CLASSIFICATION	5.117698405350174E-7	DESIGN
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9999998090215465	WITHOUT_CLASSIFICATION	1.9097845334624024E-7	DESIGN
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9992150189063591	WITHOUT_CLASSIFICATION	7.849810936407951E-4	DESIGN
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999822077806355	WITHOUT_CLASSIFICATION	1.779221936440606E-5	DESIGN
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999808260319056	WITHOUT_CLASSIFICATION	1.9173968094396136E-5	DESIGN
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999908646566849	WITHOUT_CLASSIFICATION	9.135343315242859E-6	DESIGN
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999993443184928	WITHOUT_CLASSIFICATION	6.556815070930966E-7	DESIGN
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9999966228292162	WITHOUT_CLASSIFICATION	3.3771707838357344E-6	DESIGN
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999984720765377	WITHOUT_CLASSIFICATION	1.5279234622502375E-6	DESIGN
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999939052502596	WITHOUT_CLASSIFICATION	6.094749740491969E-6	DESIGN
/* expected */	WITHOUT_CLASSIFICATION	0.9999990317825767	WITHOUT_CLASSIFICATION	9.682174232803316E-7	DESIGN
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999899491764119	WITHOUT_CLASSIFICATION	1.0050823588013518E-5	DESIGN
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999885927502935	WITHOUT_CLASSIFICATION	1.1407249706392261E-5	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999996551157788	WITHOUT_CLASSIFICATION	3.448842211922645E-7	DESIGN
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999984720765377	WITHOUT_CLASSIFICATION	1.5279234622502375E-6	DESIGN
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9997667278250852	WITHOUT_CLASSIFICATION	2.3327217491478312E-4	DESIGN
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9765531686192691	WITHOUT_CLASSIFICATION	0.02344683138073083	DESIGN
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999911172572992	WITHOUT_CLASSIFICATION	8.882742700933444E-6	DESIGN
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999998378802255	WITHOUT_CLASSIFICATION	1.6211977454211294E-7	DESIGN
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999998378802255	WITHOUT_CLASSIFICATION	1.6211977454211294E-7	DESIGN
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9968578098322998	WITHOUT_CLASSIFICATION	0.0031421901677001853	DESIGN
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999881296716604	WITHOUT_CLASSIFICATION	1.1870328339653777E-5	DESIGN
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9553705904858013	WITHOUT_CLASSIFICATION	0.044629409514198734	DESIGN
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999998190718911	WITHOUT_CLASSIFICATION	1.8092810895387002E-7	DESIGN
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9997082326609672	WITHOUT_CLASSIFICATION	2.9176733903279865E-4	DESIGN
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999999635165474	WITHOUT_CLASSIFICATION	3.648345252967249E-8	DESIGN
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999986105391371	WITHOUT_CLASSIFICATION	1.389460862851173E-6	DESIGN
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9999975575796859	WITHOUT_CLASSIFICATION	2.4424203140274E-6	DESIGN
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999996380695272	WITHOUT_CLASSIFICATION	3.6193047280382535E-7	DESIGN
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999996380695272	WITHOUT_CLASSIFICATION	3.6193047280382535E-7	DESIGN
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999851092971401	WITHOUT_CLASSIFICATION	1.4890702859743099E-5	DESIGN
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999992746717264	WITHOUT_CLASSIFICATION	7.253282735317578E-7	DESIGN
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9998501562160349	WITHOUT_CLASSIFICATION	1.4984378396512145E-4	DESIGN
// must be a public method	WITHOUT_CLASSIFICATION	0.9946576170960945	WITHOUT_CLASSIFICATION	0.0053423829039055066	DESIGN
// must be a public class	WITHOUT_CLASSIFICATION	0.9987111068869494	WITHOUT_CLASSIFICATION	0.0012888931130506439	DESIGN
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9997371290081972	WITHOUT_CLASSIFICATION	2.628709918027207E-4	DESIGN
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9991182010011748	WITHOUT_CLASSIFICATION	8.817989988252106E-4	DESIGN
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999997833123663	WITHOUT_CLASSIFICATION	2.1668763376566287E-7	DESIGN
// no matching method found	WITHOUT_CLASSIFICATION	0.9999779554455186	WITHOUT_CLASSIFICATION	2.2044554481337758E-5	DESIGN
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9999648390786626	WITHOUT_CLASSIFICATION	3.51609213374129E-5	DESIGN
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9998386264182118	WITHOUT_CLASSIFICATION	1.6137358178825099E-4	DESIGN
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999976787024212	WITHOUT_CLASSIFICATION	2.32129757880995E-6	DESIGN
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999961901817513	WITHOUT_CLASSIFICATION	3.80981824858049E-6	DESIGN
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999947590302316	WITHOUT_CLASSIFICATION	5.2409697684800296E-6	DESIGN
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999947590302316	WITHOUT_CLASSIFICATION	5.2409697684800296E-6	DESIGN
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999991744110215	WITHOUT_CLASSIFICATION	8.2558897848072E-7	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9999987775046809	WITHOUT_CLASSIFICATION	1.222495319077534E-6	DESIGN
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9999991383762914	WITHOUT_CLASSIFICATION	8.616237085906903E-7	DESIGN
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999797126169433	WITHOUT_CLASSIFICATION	2.0287383056694932E-5	DESIGN
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999989224792944	WITHOUT_CLASSIFICATION	1.077520705545085E-6	DESIGN
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9981660306992064	WITHOUT_CLASSIFICATION	0.0018339693007936573	DESIGN
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999976226640749	WITHOUT_CLASSIFICATION	2.377335925159551E-6	DESIGN
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999991285420325	WITHOUT_CLASSIFICATION	8.714579675101557E-7	DESIGN
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999997467265348	WITHOUT_CLASSIFICATION	2.5327346521595556E-7	DESIGN
/* package scope */	WITHOUT_CLASSIFICATION	0.9998946176399082	WITHOUT_CLASSIFICATION	1.0538236009191407E-4	DESIGN
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999998916400556	WITHOUT_CLASSIFICATION	1.0835994445434304E-7	DESIGN
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999929490227114	WITHOUT_CLASSIFICATION	7.0509772886941356E-6	DESIGN
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9999833703765754	WITHOUT_CLASSIFICATION	1.662962342460738E-5	DESIGN
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9998376120190255	WITHOUT_CLASSIFICATION	1.623879809744135E-4	DESIGN
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999985550960171	WITHOUT_CLASSIFICATION	1.4449039828683316E-6	DESIGN
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999981019381267	WITHOUT_CLASSIFICATION	1.898061873323319E-6	DESIGN
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999855835185891	WITHOUT_CLASSIFICATION	1.4416481410962784E-5	DESIGN
// statically initialized below	WITHOUT_CLASSIFICATION	0.99999129168446	WITHOUT_CLASSIFICATION	8.708315540063164E-6	DESIGN
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999979017216147	WITHOUT_CLASSIFICATION	2.098278385296506E-6	DESIGN
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999932670701929	WITHOUT_CLASSIFICATION	6.732929807198834E-6	DESIGN
// should not happen!	WITHOUT_CLASSIFICATION	0.9995852873510148	WITHOUT_CLASSIFICATION	4.1471264898509664E-4	DESIGN
// start class	WITHOUT_CLASSIFICATION	0.999993196424994	WITHOUT_CLASSIFICATION	6.80357500616436E-6	DESIGN
// make getter for handler	WITHOUT_CLASSIFICATION	0.9998469345278409	WITHOUT_CLASSIFICATION	1.5306547215907236E-4	DESIGN
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9995019538712437	WITHOUT_CLASSIFICATION	4.98046128756342E-4	DESIGN
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.999964376274381	WITHOUT_CLASSIFICATION	3.56237256189805E-5	DESIGN
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9999386002201869	WITHOUT_CLASSIFICATION	6.13997798132157E-5	DESIGN
// create static private method field	WITHOUT_CLASSIFICATION	0.9998743326848936	WITHOUT_CLASSIFICATION	1.2566731510637596E-4	DESIGN
// load static empty array	WITHOUT_CLASSIFICATION	0.999913665594116	WITHOUT_CLASSIFICATION	8.633440588390768E-5	DESIGN
// box arguments	WITHOUT_CLASSIFICATION	0.9999998129537139	WITHOUT_CLASSIFICATION	1.8704628618686764E-7	DESIGN
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9965515837191711	WITHOUT_CLASSIFICATION	0.0034484162808289327	DESIGN
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999993053757018	WITHOUT_CLASSIFICATION	6.946242982430354E-7	DESIGN
// do a void return	WITHOUT_CLASSIFICATION	0.999906521333235	WITHOUT_CLASSIFICATION	9.347866676496406E-5	DESIGN
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999984655162616	WITHOUT_CLASSIFICATION	1.5344837383992443E-6	DESIGN
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9974643310818677	WITHOUT_CLASSIFICATION	0.002535668918132335	DESIGN
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9994600637763611	WITHOUT_CLASSIFICATION	5.399362236388942E-4	DESIGN
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999904806850753	WITHOUT_CLASSIFICATION	9.519314924613514E-6	DESIGN
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999998029292482	WITHOUT_CLASSIFICATION	1.970707517478885E-7	DESIGN
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999485411026697	WITHOUT_CLASSIFICATION	5.145889733042021E-5	DESIGN
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999999216214248	WITHOUT_CLASSIFICATION	7.837857517544248E-8	DESIGN
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999776972320115	WITHOUT_CLASSIFICATION	2.23027679884572E-5	DESIGN
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999921703194122	WITHOUT_CLASSIFICATION	7.829680587723613E-6	DESIGN
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9994562402517861	WITHOUT_CLASSIFICATION	5.437597482138405E-4	DESIGN
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9998907505922001	WITHOUT_CLASSIFICATION	1.0924940779991894E-4	DESIGN
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.7137067567476431	WITHOUT_CLASSIFICATION	0.2862932432523568	DESIGN
/* NUL */	WITHOUT_CLASSIFICATION	0.9999930059500333	WITHOUT_CLASSIFICATION	6.994049966688581E-6	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999879148132546	WITHOUT_CLASSIFICATION	1.208518674539991E-5	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999999601538759	WITHOUT_CLASSIFICATION	3.9846124138687555E-8	DESIGN
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9990177753953383	WITHOUT_CLASSIFICATION	9.822246046617051E-4	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9994346331095553	WITHOUT_CLASSIFICATION	5.65366890444648E-4	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999998862783921	WITHOUT_CLASSIFICATION	1.1372160782109755E-7	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999998862783921	WITHOUT_CLASSIFICATION	1.1372160782109755E-7	DESIGN
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9998799307318106	WITHOUT_CLASSIFICATION	1.2006926818939096E-4	DESIGN
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999806005954206	WITHOUT_CLASSIFICATION	1.939940457948734E-5	DESIGN
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999995006642227	WITHOUT_CLASSIFICATION	4.993357772334922E-7	DESIGN
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9476182565311339	DESIGN	0.05238174346886606	WITHOUT_CLASSIFICATION
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999996036300235	WITHOUT_CLASSIFICATION	3.963699764564638E-7	DESIGN
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999968377540993	WITHOUT_CLASSIFICATION	3.1622459005747598E-6	DESIGN
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9999041173445757	WITHOUT_CLASSIFICATION	9.58826554243022E-5	DESIGN
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999999998884522	WITHOUT_CLASSIFICATION	1.1154779369541445E-10	DESIGN
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999999981633051	WITHOUT_CLASSIFICATION	1.8366948360777865E-9	DESIGN
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9990365150022599	WITHOUT_CLASSIFICATION	9.634849977402025E-4	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999535482249442	WITHOUT_CLASSIFICATION	4.645177505580829E-5	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999535482249442	WITHOUT_CLASSIFICATION	4.645177505580829E-5	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999535482249442	WITHOUT_CLASSIFICATION	4.645177505580829E-5	DESIGN
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999999994995917	WITHOUT_CLASSIFICATION	5.004082149095803E-10	DESIGN
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.999986231156304	WITHOUT_CLASSIFICATION	1.3768843695880941E-5	DESIGN
// Single node in list	WITHOUT_CLASSIFICATION	0.999973952821906	WITHOUT_CLASSIFICATION	2.604717809394159E-5	DESIGN
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999999988411217	WITHOUT_CLASSIFICATION	1.1588783120507742E-9	DESIGN
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999999988411217	WITHOUT_CLASSIFICATION	1.1588783120507742E-9	DESIGN
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999993436761039	WITHOUT_CLASSIFICATION	6.563238961331716E-7	DESIGN
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.999944517066655	WITHOUT_CLASSIFICATION	5.548293334493684E-5	DESIGN
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999999746776276	WITHOUT_CLASSIFICATION	2.5322372458688514E-8	DESIGN
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999998742118179	WITHOUT_CLASSIFICATION	1.2578818210758672E-7	DESIGN
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.999842621315156	WITHOUT_CLASSIFICATION	1.57378684844123E-4	DESIGN
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9999980132513271	WITHOUT_CLASSIFICATION	1.9867486729887334E-6	DESIGN
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999997408691356	WITHOUT_CLASSIFICATION	2.591308644271087E-7	DESIGN
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999940547092555	WITHOUT_CLASSIFICATION	5.945290744529745E-6	DESIGN
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999999980182979	WITHOUT_CLASSIFICATION	1.98170212483683E-9	DESIGN
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999964032606267	WITHOUT_CLASSIFICATION	3.5967393733625396E-6	DESIGN
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999964032606267	WITHOUT_CLASSIFICATION	3.5967393733625396E-6	DESIGN
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999958561054457	WITHOUT_CLASSIFICATION	4.143894554236822E-6	DESIGN
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9998594519896182	WITHOUT_CLASSIFICATION	1.4054801038181574E-4	DESIGN
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999998793222432	WITHOUT_CLASSIFICATION	1.2067775678845586E-7	DESIGN
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999929622552027	WITHOUT_CLASSIFICATION	7.037744797346514E-6	DESIGN
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.999999776462715	WITHOUT_CLASSIFICATION	2.2353728491531918E-7	DESIGN
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999982866437552	WITHOUT_CLASSIFICATION	1.7133562447122273E-6	DESIGN
/* octal constant */	WITHOUT_CLASSIFICATION	0.999999454002287	WITHOUT_CLASSIFICATION	5.45997713039734E-7	DESIGN
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999897749643578	WITHOUT_CLASSIFICATION	1.022503564223815E-5	DESIGN
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9999131152758393	WITHOUT_CLASSIFICATION	8.688472416073437E-5	DESIGN
// POP	WITHOUT_CLASSIFICATION	0.9999963921822391	WITHOUT_CLASSIFICATION	3.607817760871269E-6	DESIGN
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9998261032368168	WITHOUT_CLASSIFICATION	1.7389676318326291E-4	DESIGN
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999985185379573	WITHOUT_CLASSIFICATION	1.4814620427237986E-6	DESIGN
// SET_P	WITHOUT_CLASSIFICATION	0.9999881934644623	WITHOUT_CLASSIFICATION	1.1806535537775222E-5	DESIGN
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999905967532721	WITHOUT_CLASSIFICATION	9.403246727927598E-6	DESIGN
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9999940653064128	WITHOUT_CLASSIFICATION	5.934693587159873E-6	DESIGN
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999999439129937	WITHOUT_CLASSIFICATION	5.608700638112607E-8	DESIGN
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999989425723571	WITHOUT_CLASSIFICATION	1.0574276428735022E-6	DESIGN
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999963604902511	WITHOUT_CLASSIFICATION	3.6395097490010124E-6	DESIGN
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999963466360682	WITHOUT_CLASSIFICATION	3.653363931901315E-6	DESIGN
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999999397548739	WITHOUT_CLASSIFICATION	6.024512613079008E-8	DESIGN
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9931079500815607	DESIGN	0.00689204991843922	WITHOUT_CLASSIFICATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9996863237446919	WITHOUT_CLASSIFICATION	3.1367625530803256E-4	DESIGN
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.999999985612799	WITHOUT_CLASSIFICATION	1.438720096924013E-8	DESIGN
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999122798393908	WITHOUT_CLASSIFICATION	8.772016060920673E-5	DESIGN
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999998866670534	WITHOUT_CLASSIFICATION	1.1333294658663653E-7	DESIGN
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9994355432399527	WITHOUT_CLASSIFICATION	5.644567600472539E-4	DESIGN
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999995486817197	WITHOUT_CLASSIFICATION	4.5131828033095695E-7	DESIGN
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9999811269823066	WITHOUT_CLASSIFICATION	1.8873017693395492E-5	DESIGN
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9817270609618481	WITHOUT_CLASSIFICATION	0.018272939038151872	DESIGN
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9999992238516136	WITHOUT_CLASSIFICATION	7.761483864741263E-7	DESIGN
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999780077870072	WITHOUT_CLASSIFICATION	2.1992212992725198E-5	DESIGN
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999679341958773	WITHOUT_CLASSIFICATION	3.206580412284894E-5	DESIGN
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999903736615718	WITHOUT_CLASSIFICATION	9.626338428180319E-6	DESIGN
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999780077870072	WITHOUT_CLASSIFICATION	2.1992212992725198E-5	DESIGN
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9999985819914059	WITHOUT_CLASSIFICATION	1.4180085941247267E-6	DESIGN
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999956017123546	WITHOUT_CLASSIFICATION	4.398287645517101E-6	DESIGN
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9996056399360609	WITHOUT_CLASSIFICATION	3.943600639390902E-4	DESIGN
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.999833511399748	WITHOUT_CLASSIFICATION	1.664886002519522E-4	DESIGN
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999997909937202	WITHOUT_CLASSIFICATION	2.0900627970049023E-7	DESIGN
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999999453840315	WITHOUT_CLASSIFICATION	5.461596859706162E-8	DESIGN
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999999502284637	WITHOUT_CLASSIFICATION	4.977153634607868E-8	DESIGN
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999972765706123	WITHOUT_CLASSIFICATION	2.7234293876590078E-6	DESIGN
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.999984554072752	WITHOUT_CLASSIFICATION	1.54459272480713E-5	DESIGN
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999514304010192	WITHOUT_CLASSIFICATION	4.8569598980770015E-5	DESIGN
/* $$: pid */	WITHOUT_CLASSIFICATION	0.991973495135031	WITHOUT_CLASSIFICATION	0.008026504864969078	DESIGN
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9955516639191724	WITHOUT_CLASSIFICATION	0.004448336080827558	DESIGN
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9992925919744509	WITHOUT_CLASSIFICATION	7.074080255491444E-4	DESIGN
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9994643809086898	WITHOUT_CLASSIFICATION	5.356190913101863E-4	DESIGN
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9989628165714334	WITHOUT_CLASSIFICATION	0.0010371834285665806	DESIGN
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9945139744698636	WITHOUT_CLASSIFICATION	0.005486025530136463	DESIGN
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9992518830484156	WITHOUT_CLASSIFICATION	7.481169515844956E-4	DESIGN
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9986089771518528	WITHOUT_CLASSIFICATION	0.0013910228481472298	DESIGN
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999965457078155	WITHOUT_CLASSIFICATION	3.4542921843981022E-6	DESIGN
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9999122893255489	WITHOUT_CLASSIFICATION	8.771067445113154E-5	DESIGN
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999042298004409	WITHOUT_CLASSIFICATION	9.577019955901181E-5	DESIGN
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999989706469076	WITHOUT_CLASSIFICATION	1.029353092323485E-6	DESIGN
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999989204291719	WITHOUT_CLASSIFICATION	1.0795708280815808E-6	DESIGN
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999993964992394	WITHOUT_CLASSIFICATION	6.035007604643633E-7	DESIGN
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999999813494994	WITHOUT_CLASSIFICATION	1.8650500576037447E-8	DESIGN
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999555603078977	WITHOUT_CLASSIFICATION	4.4439692102285136E-5	DESIGN
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999996303019278	WITHOUT_CLASSIFICATION	3.6969807211993105E-7	DESIGN
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999996389444945	WITHOUT_CLASSIFICATION	3.610555054674193E-7	DESIGN
// block (primary)	WITHOUT_CLASSIFICATION	0.9999932755254444	WITHOUT_CLASSIFICATION	6.7244745555984685E-6	DESIGN
// block (expr)	WITHOUT_CLASSIFICATION	0.9999985642510284	WITHOUT_CLASSIFICATION	1.4357489716688227E-6	DESIGN
// hash	WITHOUT_CLASSIFICATION	0.999883037920457	WITHOUT_CLASSIFICATION	1.1696207954303417E-4	DESIGN
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9804979844852955	WITHOUT_CLASSIFICATION	0.019502015514704586	DESIGN
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9450658487070427	DESIGN	0.05493415129295718	WITHOUT_CLASSIFICATION
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9878105729757439	WITHOUT_CLASSIFICATION	0.012189427024256135	DESIGN
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999944582668763	WITHOUT_CLASSIFICATION	5.541733123751419E-6	DESIGN
// binary	WITHOUT_CLASSIFICATION	0.9999777772763006	WITHOUT_CLASSIFICATION	2.2222723699484632E-5	DESIGN
// decimal	WITHOUT_CLASSIFICATION	0.9999769485394044	WITHOUT_CLASSIFICATION	2.3051460595580576E-5	DESIGN
//Octal	WITHOUT_CLASSIFICATION	0.9999938614352216	WITHOUT_CLASSIFICATION	6.138564778372693E-6	DESIGN
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999813080051186	WITHOUT_CLASSIFICATION	1.8691994881418948E-5	DESIGN
// backslash	WITHOUT_CLASSIFICATION	0.9999999472201413	WITHOUT_CLASSIFICATION	5.2779858616090666E-8	DESIGN
// newline	WITHOUT_CLASSIFICATION	0.9999617491644491	WITHOUT_CLASSIFICATION	3.825083555091788E-5	DESIGN
// horizontal tab	WITHOUT_CLASSIFICATION	0.9999012696065362	WITHOUT_CLASSIFICATION	9.873039346377548E-5	DESIGN
// form feed	WITHOUT_CLASSIFICATION	0.9999908610331066	WITHOUT_CLASSIFICATION	9.13896689335634E-6	DESIGN
// vertical tab	WITHOUT_CLASSIFICATION	0.9999878246412536	WITHOUT_CLASSIFICATION	1.2175358746467011E-5	DESIGN
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999988025370241	WITHOUT_CLASSIFICATION	1.197462975889493E-6	DESIGN
// escape	WITHOUT_CLASSIFICATION	0.9999983755029098	WITHOUT_CLASSIFICATION	1.6244970900982472E-6	DESIGN
// hex constant	WITHOUT_CLASSIFICATION	0.999920782807636	WITHOUT_CLASSIFICATION	7.921719236399923E-5	DESIGN
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999998312365644	WITHOUT_CLASSIFICATION	1.687634355075218E-7	DESIGN
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999994402375337	WITHOUT_CLASSIFICATION	5.597624662627583E-7	DESIGN
// space	WITHOUT_CLASSIFICATION	0.9999867666781391	WITHOUT_CLASSIFICATION	1.3233321860845554E-5	DESIGN
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9999743635387045	WITHOUT_CLASSIFICATION	2.5636461295444517E-5	DESIGN
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999927602837846	WITHOUT_CLASSIFICATION	7.239716215405049E-6	DESIGN
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999975481349638	WITHOUT_CLASSIFICATION	2.4518650361998803E-6	DESIGN
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999994402375337	WITHOUT_CLASSIFICATION	5.597624662627583E-7	DESIGN
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.999453181019919	DESIGN	5.468189800809629E-4	WITHOUT_CLASSIFICATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.999453181019919	DESIGN	5.468189800809629E-4	WITHOUT_CLASSIFICATION
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999950692872198	WITHOUT_CLASSIFICATION	4.930712780167748E-6	DESIGN
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999996633412231	WITHOUT_CLASSIFICATION	3.3665877680397975E-7	DESIGN
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9998519725004527	WITHOUT_CLASSIFICATION	1.480274995473489E-4	DESIGN
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999864987293898	WITHOUT_CLASSIFICATION	1.3501270610122459E-5	DESIGN
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.999951283344788	WITHOUT_CLASSIFICATION	4.871665521189373E-5	DESIGN
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999974397504682	WITHOUT_CLASSIFICATION	2.5602495318074535E-6	DESIGN
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999987707157844	WITHOUT_CLASSIFICATION	1.2292842156746775E-6	DESIGN
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.7511435262266069	WITHOUT_CLASSIFICATION	0.24885647377339315	DESIGN
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999176699985847	WITHOUT_CLASSIFICATION	8.233000141530846E-5	DESIGN
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9999335509426066	WITHOUT_CLASSIFICATION	6.644905739329818E-5	DESIGN
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.999998860139855	WITHOUT_CLASSIFICATION	1.1398601449945267E-6	DESIGN
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999999989567179	WITHOUT_CLASSIFICATION	1.0432821017391555E-9	DESIGN
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9999970696917865	WITHOUT_CLASSIFICATION	2.930308213467169E-6	DESIGN
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9998835699693056	WITHOUT_CLASSIFICATION	1.1643003069430725E-4	DESIGN
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.7349222573837808	WITHOUT_CLASSIFICATION	0.2650777426162193	DESIGN
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9697005280891661	WITHOUT_CLASSIFICATION	0.030299471910833986	DESIGN
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999999516386963	WITHOUT_CLASSIFICATION	4.8361303780420304E-8	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9997392388674428	WITHOUT_CLASSIFICATION	2.607611325571611E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9997392388674428	WITHOUT_CLASSIFICATION	2.607611325571611E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9997392388674428	WITHOUT_CLASSIFICATION	2.607611325571611E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9997392388674428	WITHOUT_CLASSIFICATION	2.607611325571611E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9997392388674428	WITHOUT_CLASSIFICATION	2.607611325571611E-4	DESIGN
// line 329	WITHOUT_CLASSIFICATION	0.9999992729929094	WITHOUT_CLASSIFICATION	7.270070905048889E-7	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998874025618	WITHOUT_CLASSIFICATION	1.1259743816229153E-7	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999151098862394	WITHOUT_CLASSIFICATION	8.489011376065553E-5	DESIGN
// dynamically increase	WITHOUT_CLASSIFICATION	0.999993669662985	WITHOUT_CLASSIFICATION	6.330337015038193E-6	DESIGN
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999848473421613	WITHOUT_CLASSIFICATION	1.5152657838630598E-5	DESIGN
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999931813177744	WITHOUT_CLASSIFICATION	6.818682225608244E-6	DESIGN
// shift to yyN	WITHOUT_CLASSIFICATION	0.9972423982047568	WITHOUT_CLASSIFICATION	0.002757601795243217	DESIGN
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.999307112762294	WITHOUT_CLASSIFICATION	6.928872377059567E-4	DESIGN
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999099094341399	WITHOUT_CLASSIFICATION	9.009056586008007E-5	DESIGN
// line 271	WITHOUT_CLASSIFICATION	0.9999999366633712	WITHOUT_CLASSIFICATION	6.333662885511525E-8	DESIGN
// line 274	WITHOUT_CLASSIFICATION	0.9999999079049952	WITHOUT_CLASSIFICATION	9.209500486484283E-8	DESIGN
// line 303	WITHOUT_CLASSIFICATION	0.9999983108446162	WITHOUT_CLASSIFICATION	1.6891553838114128E-6	DESIGN
// line 311	WITHOUT_CLASSIFICATION	0.999998821151599	WITHOUT_CLASSIFICATION	1.1788484010792041E-6	DESIGN
// line 314	WITHOUT_CLASSIFICATION	0.9999991792659145	WITHOUT_CLASSIFICATION	8.207340854207167E-7	DESIGN
// line 317	WITHOUT_CLASSIFICATION	0.9999994492762342	WITHOUT_CLASSIFICATION	5.507237657715854E-7	DESIGN
// line 332	WITHOUT_CLASSIFICATION	0.9999996822285205	WITHOUT_CLASSIFICATION	3.177714795138331E-7	DESIGN
// line 338	WITHOUT_CLASSIFICATION	0.9999990466069371	WITHOUT_CLASSIFICATION	9.533930627996494E-7	DESIGN
// line 341	WITHOUT_CLASSIFICATION	0.9999991071887812	WITHOUT_CLASSIFICATION	8.928112187431556E-7	DESIGN
// line 344	WITHOUT_CLASSIFICATION	0.9999987809818373	WITHOUT_CLASSIFICATION	1.219018162727855E-6	DESIGN
// line 351	WITHOUT_CLASSIFICATION	0.9999994937441365	WITHOUT_CLASSIFICATION	5.062558633939487E-7	DESIGN
// line 358	WITHOUT_CLASSIFICATION	0.9999993879414438	WITHOUT_CLASSIFICATION	6.12058556266145E-7	DESIGN
// line 367	WITHOUT_CLASSIFICATION	0.9999984111935005	WITHOUT_CLASSIFICATION	1.5888064994824635E-6	DESIGN
// line 372	WITHOUT_CLASSIFICATION	0.9999997804473474	WITHOUT_CLASSIFICATION	2.1955265268497131E-7	DESIGN
// line 378	WITHOUT_CLASSIFICATION	0.9999993532413589	WITHOUT_CLASSIFICATION	6.467586410606596E-7	DESIGN
// line 382	WITHOUT_CLASSIFICATION	0.9999998257725503	WITHOUT_CLASSIFICATION	1.742274496979533E-7	DESIGN
// line 407	WITHOUT_CLASSIFICATION	0.9999996217587835	WITHOUT_CLASSIFICATION	3.782412164491719E-7	DESIGN
// line 411	WITHOUT_CLASSIFICATION	0.9999994158507701	WITHOUT_CLASSIFICATION	5.84149229861511E-7	DESIGN
// line 414	WITHOUT_CLASSIFICATION	0.9999996036461394	WITHOUT_CLASSIFICATION	3.96353860652265E-7	DESIGN
// line 417	WITHOUT_CLASSIFICATION	0.9999997285744592	WITHOUT_CLASSIFICATION	2.714255408865381E-7	DESIGN
// line 420	WITHOUT_CLASSIFICATION	0.9999998946050632	WITHOUT_CLASSIFICATION	1.0539493673319854E-7	DESIGN
// line 426	WITHOUT_CLASSIFICATION	0.9999992612726611	WITHOUT_CLASSIFICATION	7.387273388652668E-7	DESIGN
// line 434	WITHOUT_CLASSIFICATION	0.9999990188242448	WITHOUT_CLASSIFICATION	9.811757551905526E-7	DESIGN
// line 443	WITHOUT_CLASSIFICATION	0.9999986400359848	WITHOUT_CLASSIFICATION	1.3599640151659987E-6	DESIGN
// line 446	WITHOUT_CLASSIFICATION	0.9999987490022094	WITHOUT_CLASSIFICATION	1.2509977905328108E-6	DESIGN
// line 452	WITHOUT_CLASSIFICATION	0.9999998855872083	WITHOUT_CLASSIFICATION	1.1441279161615668E-7	DESIGN
// line 457	WITHOUT_CLASSIFICATION	0.9999995802340295	WITHOUT_CLASSIFICATION	4.197659705211503E-7	DESIGN
// line 464	WITHOUT_CLASSIFICATION	0.9999991058569346	WITHOUT_CLASSIFICATION	8.94143065385817E-7	DESIGN
// line 467	WITHOUT_CLASSIFICATION	0.9999992567762952	WITHOUT_CLASSIFICATION	7.432237047294738E-7	DESIGN
// line 470	WITHOUT_CLASSIFICATION	0.9999997761967654	WITHOUT_CLASSIFICATION	2.2380323464885676E-7	DESIGN
// line 479	WITHOUT_CLASSIFICATION	0.9999993504493582	WITHOUT_CLASSIFICATION	6.495506417690321E-7	DESIGN
// line 484	WITHOUT_CLASSIFICATION	0.9999995656329209	WITHOUT_CLASSIFICATION	4.343670791316486E-7	DESIGN
// line 486	WITHOUT_CLASSIFICATION	0.9999991320237893	WITHOUT_CLASSIFICATION	8.679762106962123E-7	DESIGN
// line 492	WITHOUT_CLASSIFICATION	0.9999998726759077	WITHOUT_CLASSIFICATION	1.273240922186669E-7	DESIGN
// line 498	WITHOUT_CLASSIFICATION	0.9999996251173303	WITHOUT_CLASSIFICATION	3.7488266965042233E-7	DESIGN
// line 501	WITHOUT_CLASSIFICATION	0.9999994620989964	WITHOUT_CLASSIFICATION	5.379010036545936E-7	DESIGN
// line 504	WITHOUT_CLASSIFICATION	0.9999990167977009	WITHOUT_CLASSIFICATION	9.832022991044588E-7	DESIGN
// line 507	WITHOUT_CLASSIFICATION	0.9999994676748327	WITHOUT_CLASSIFICATION	5.323251672636452E-7	DESIGN
// line 510	WITHOUT_CLASSIFICATION	0.9999999140619087	WITHOUT_CLASSIFICATION	8.593809132993124E-8	DESIGN
// line 519	WITHOUT_CLASSIFICATION	0.9999996392107127	WITHOUT_CLASSIFICATION	3.607892872636373E-7	DESIGN
// line 525	WITHOUT_CLASSIFICATION	0.9999996759132203	WITHOUT_CLASSIFICATION	3.2408677972010834E-7	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999151098862394	WITHOUT_CLASSIFICATION	8.489011376065553E-5	DESIGN
// line 537	WITHOUT_CLASSIFICATION	0.9999990626261144	WITHOUT_CLASSIFICATION	9.373738855412956E-7	DESIGN
// line 540	WITHOUT_CLASSIFICATION	0.9999996836358931	WITHOUT_CLASSIFICATION	3.163641068643246E-7	DESIGN
// line 543	WITHOUT_CLASSIFICATION	0.999997898631887	WITHOUT_CLASSIFICATION	2.1013681130449408E-6	DESIGN
// line 546	WITHOUT_CLASSIFICATION	0.999998067228736	WITHOUT_CLASSIFICATION	1.9327712640768715E-6	DESIGN
// line 556	WITHOUT_CLASSIFICATION	0.9999980105160318	WITHOUT_CLASSIFICATION	1.9894839681576333E-6	DESIGN
// line 559	WITHOUT_CLASSIFICATION	0.999998953258628	WITHOUT_CLASSIFICATION	1.0467413720293866E-6	DESIGN
// line 563	WITHOUT_CLASSIFICATION	0.9999939456715046	WITHOUT_CLASSIFICATION	6.05432849548017E-6	DESIGN
// line 566	WITHOUT_CLASSIFICATION	0.9999975992019723	WITHOUT_CLASSIFICATION	2.400798027744187E-6	DESIGN
// line 569	WITHOUT_CLASSIFICATION	0.9999979632229383	WITHOUT_CLASSIFICATION	2.036777061581593E-6	DESIGN
// line 575	WITHOUT_CLASSIFICATION	0.9999993519361666	WITHOUT_CLASSIFICATION	6.48063833450219E-7	DESIGN
// line 578	WITHOUT_CLASSIFICATION	0.9999995765745474	WITHOUT_CLASSIFICATION	4.234254525999021E-7	DESIGN
// line 587	WITHOUT_CLASSIFICATION	0.9999995650646397	WITHOUT_CLASSIFICATION	4.3493536029461776E-7	DESIGN
// line 596	WITHOUT_CLASSIFICATION	0.9999973660929824	WITHOUT_CLASSIFICATION	2.633907017614284E-6	DESIGN
// line 604	WITHOUT_CLASSIFICATION	0.999998158239984	WITHOUT_CLASSIFICATION	1.8417600160855833E-6	DESIGN
// line 607	WITHOUT_CLASSIFICATION	0.9999989778604353	WITHOUT_CLASSIFICATION	1.022139564610954E-6	DESIGN
// line 610	WITHOUT_CLASSIFICATION	0.9999998761480672	WITHOUT_CLASSIFICATION	1.2385193280326885E-7	DESIGN
// line 613	WITHOUT_CLASSIFICATION	0.9999986773273023	WITHOUT_CLASSIFICATION	1.32267269766341E-6	DESIGN
// line 616	WITHOUT_CLASSIFICATION	0.9999991207873238	WITHOUT_CLASSIFICATION	8.792126761128531E-7	DESIGN
// line 634	WITHOUT_CLASSIFICATION	0.9999979863936003	WITHOUT_CLASSIFICATION	2.0136063997236547E-6	DESIGN
// line 638	WITHOUT_CLASSIFICATION	0.9999982282334147	WITHOUT_CLASSIFICATION	1.7717665853116433E-6	DESIGN
// line 643	WITHOUT_CLASSIFICATION	0.9999978387633655	WITHOUT_CLASSIFICATION	2.1612366346726867E-6	DESIGN
// line 646	WITHOUT_CLASSIFICATION	0.9999987809778235	WITHOUT_CLASSIFICATION	1.219022176448755E-6	DESIGN
// line 655	WITHOUT_CLASSIFICATION	0.9999991820593931	WITHOUT_CLASSIFICATION	8.179406068978183E-7	DESIGN
// line 660	WITHOUT_CLASSIFICATION	0.9999994852801578	WITHOUT_CLASSIFICATION	5.147198422414371E-7	DESIGN
// line 667	WITHOUT_CLASSIFICATION	0.9999991686080875	WITHOUT_CLASSIFICATION	8.313919125181518E-7	DESIGN
// line 670	WITHOUT_CLASSIFICATION	0.9999996894175867	WITHOUT_CLASSIFICATION	3.1058241333054787E-7	DESIGN
// line 672	WITHOUT_CLASSIFICATION	0.9999998167332254	WITHOUT_CLASSIFICATION	1.832667746183571E-7	DESIGN
// line 696	WITHOUT_CLASSIFICATION	0.9999985797051131	WITHOUT_CLASSIFICATION	1.4202948869071692E-6	DESIGN
// line 701	WITHOUT_CLASSIFICATION	0.9999997584721574	WITHOUT_CLASSIFICATION	2.415278425751521E-7	DESIGN
// line 717	WITHOUT_CLASSIFICATION	0.9999997179450163	WITHOUT_CLASSIFICATION	2.820549836479891E-7	DESIGN
// line 720	WITHOUT_CLASSIFICATION	0.9999999042483753	WITHOUT_CLASSIFICATION	9.575162479953139E-8	DESIGN
// line 726	WITHOUT_CLASSIFICATION	0.9999991173803994	WITHOUT_CLASSIFICATION	8.826196006595503E-7	DESIGN
// line 729	WITHOUT_CLASSIFICATION	0.9999997208316526	WITHOUT_CLASSIFICATION	2.791683474226563E-7	DESIGN
// line 732	WITHOUT_CLASSIFICATION	0.9999997815486593	WITHOUT_CLASSIFICATION	2.1845134064328533E-7	DESIGN
// line 735	WITHOUT_CLASSIFICATION	0.9999993285248573	WITHOUT_CLASSIFICATION	6.714751428169153E-7	DESIGN
// line 738	WITHOUT_CLASSIFICATION	0.9999993403574279	WITHOUT_CLASSIFICATION	6.596425722230934E-7	DESIGN
// line 751	WITHOUT_CLASSIFICATION	0.9999997219043484	WITHOUT_CLASSIFICATION	2.78095651565801E-7	DESIGN
// line 754	WITHOUT_CLASSIFICATION	0.999999521897578	WITHOUT_CLASSIFICATION	4.78102421992734E-7	DESIGN
// line 757	WITHOUT_CLASSIFICATION	0.9999995323378712	WITHOUT_CLASSIFICATION	4.6766212889475254E-7	DESIGN
// line 760	WITHOUT_CLASSIFICATION	0.9999995516232784	WITHOUT_CLASSIFICATION	4.4837672159442566E-7	DESIGN
// line 763	WITHOUT_CLASSIFICATION	0.9999976221265889	WITHOUT_CLASSIFICATION	2.3778734110449384E-6	DESIGN
// line 769	WITHOUT_CLASSIFICATION	0.9999990297838305	WITHOUT_CLASSIFICATION	9.70216169557818E-7	DESIGN
// line 772	WITHOUT_CLASSIFICATION	0.9999998780854903	WITHOUT_CLASSIFICATION	1.219145097737373E-7	DESIGN
// line 775	WITHOUT_CLASSIFICATION	0.9999995387668714	WITHOUT_CLASSIFICATION	4.6123312849270443E-7	DESIGN
// line 782	WITHOUT_CLASSIFICATION	0.9999999274936952	WITHOUT_CLASSIFICATION	7.250630476824187E-8	DESIGN
// line 788	WITHOUT_CLASSIFICATION	0.9999996616061465	WITHOUT_CLASSIFICATION	3.3839385346112643E-7	DESIGN
// line 791	WITHOUT_CLASSIFICATION	0.9999995426781824	WITHOUT_CLASSIFICATION	4.573218176636582E-7	DESIGN
// line 794	WITHOUT_CLASSIFICATION	0.9999993961971935	WITHOUT_CLASSIFICATION	6.038028066100478E-7	DESIGN
// line 797	WITHOUT_CLASSIFICATION	0.9999994038086156	WITHOUT_CLASSIFICATION	5.961913843738402E-7	DESIGN
// line 803	WITHOUT_CLASSIFICATION	0.9999985448251539	WITHOUT_CLASSIFICATION	1.455174846062136E-6	DESIGN
// line 806	WITHOUT_CLASSIFICATION	0.9999982170711227	WITHOUT_CLASSIFICATION	1.78292887728652E-6	DESIGN
// line 809	WITHOUT_CLASSIFICATION	0.9999994948650293	WITHOUT_CLASSIFICATION	5.051349707901269E-7	DESIGN
// line 815	WITHOUT_CLASSIFICATION	0.9999997941416207	WITHOUT_CLASSIFICATION	2.0585837932275795E-7	DESIGN
// line 818	WITHOUT_CLASSIFICATION	0.9999998394285362	WITHOUT_CLASSIFICATION	1.6057146387270834E-7	DESIGN
// line 821	WITHOUT_CLASSIFICATION	0.9999998645533292	WITHOUT_CLASSIFICATION	1.3544667069571141E-7	DESIGN
// line 824	WITHOUT_CLASSIFICATION	0.9999998333813932	WITHOUT_CLASSIFICATION	1.6661860668847975E-7	DESIGN
// line 830	WITHOUT_CLASSIFICATION	0.9999997891956196	WITHOUT_CLASSIFICATION	2.1080438034470778E-7	DESIGN
// line 833	WITHOUT_CLASSIFICATION	0.9999989220009574	WITHOUT_CLASSIFICATION	1.0779990426271208E-6	DESIGN
// line 836	WITHOUT_CLASSIFICATION	0.9999983453497667	WITHOUT_CLASSIFICATION	1.6546502332948452E-6	DESIGN
// line 839	WITHOUT_CLASSIFICATION	0.9999990106140775	WITHOUT_CLASSIFICATION	9.893859225359599E-7	DESIGN
// line 842	WITHOUT_CLASSIFICATION	0.9999998987445516	WITHOUT_CLASSIFICATION	1.0125544838726054E-7	DESIGN
// line 848	WITHOUT_CLASSIFICATION	0.9999995310532198	WITHOUT_CLASSIFICATION	4.689467802303366E-7	DESIGN
// line 852	WITHOUT_CLASSIFICATION	0.9999999275953988	WITHOUT_CLASSIFICATION	7.240460125395076E-8	DESIGN
// line 858	WITHOUT_CLASSIFICATION	0.9999996734494401	WITHOUT_CLASSIFICATION	3.2655055993658486E-7	DESIGN
// line 861	WITHOUT_CLASSIFICATION	0.99999949163575	WITHOUT_CLASSIFICATION	5.083642499813726E-7	DESIGN
// line 868	WITHOUT_CLASSIFICATION	0.9999992924564887	WITHOUT_CLASSIFICATION	7.075435113927228E-7	DESIGN
// line 871	WITHOUT_CLASSIFICATION	0.9999997776530146	WITHOUT_CLASSIFICATION	2.223469852605404E-7	DESIGN
// line 876	WITHOUT_CLASSIFICATION	0.9999992890758879	WITHOUT_CLASSIFICATION	7.109241121831696E-7	DESIGN
// line 879	WITHOUT_CLASSIFICATION	0.999999611659593	WITHOUT_CLASSIFICATION	3.883404070626764E-7	DESIGN
// line 883	WITHOUT_CLASSIFICATION	0.999999009397169	WITHOUT_CLASSIFICATION	9.9060283103913E-7	DESIGN
// line 893	WITHOUT_CLASSIFICATION	0.9999990520848299	WITHOUT_CLASSIFICATION	9.479151701291927E-7	DESIGN
// line 896	WITHOUT_CLASSIFICATION	0.9999990656641722	WITHOUT_CLASSIFICATION	9.34335827856518E-7	DESIGN
// line 899	WITHOUT_CLASSIFICATION	0.9999995519403626	WITHOUT_CLASSIFICATION	4.4805963731162216E-7	DESIGN
// line 903	WITHOUT_CLASSIFICATION	0.9999980835040226	WITHOUT_CLASSIFICATION	1.916495977371975E-6	DESIGN
// line 907	WITHOUT_CLASSIFICATION	0.9999996302491603	WITHOUT_CLASSIFICATION	3.6975083971001103E-7	DESIGN
// line 915	WITHOUT_CLASSIFICATION	0.9999996419980323	WITHOUT_CLASSIFICATION	3.5800196766584047E-7	DESIGN
// line 920	WITHOUT_CLASSIFICATION	0.9999998969006854	WITHOUT_CLASSIFICATION	1.030993145665013E-7	DESIGN
// line 923	WITHOUT_CLASSIFICATION	0.9999993748949496	WITHOUT_CLASSIFICATION	6.251050503853602E-7	DESIGN
// line 926	WITHOUT_CLASSIFICATION	0.9999992812537503	WITHOUT_CLASSIFICATION	7.187462497228976E-7	DESIGN
// line 932	WITHOUT_CLASSIFICATION	0.9999997466471544	WITHOUT_CLASSIFICATION	2.533528456249618E-7	DESIGN
// line 936	WITHOUT_CLASSIFICATION	0.9999977672804959	WITHOUT_CLASSIFICATION	2.2327195040801215E-6	DESIGN
// line 940	WITHOUT_CLASSIFICATION	0.9999997929552875	WITHOUT_CLASSIFICATION	2.0704471248461275E-7	DESIGN
// line 944	WITHOUT_CLASSIFICATION	0.999999360501394	WITHOUT_CLASSIFICATION	6.394986059267489E-7	DESIGN
// line 948	WITHOUT_CLASSIFICATION	0.9999995858244596	WITHOUT_CLASSIFICATION	4.141755404841982E-7	DESIGN
// line 956	WITHOUT_CLASSIFICATION	0.9999988327388473	WITHOUT_CLASSIFICATION	1.1672611527193037E-6	DESIGN
// line 960	WITHOUT_CLASSIFICATION	0.9999994671707257	WITHOUT_CLASSIFICATION	5.328292743652941E-7	DESIGN
// line 964	WITHOUT_CLASSIFICATION	0.9999989738593779	WITHOUT_CLASSIFICATION	1.0261406221790316E-6	DESIGN
// line 967	WITHOUT_CLASSIFICATION	0.9999991396732347	WITHOUT_CLASSIFICATION	8.603267654183888E-7	DESIGN
// line 972	WITHOUT_CLASSIFICATION	0.9999998949676833	WITHOUT_CLASSIFICATION	1.0503231665274546E-7	DESIGN
// line 978	WITHOUT_CLASSIFICATION	0.9999996884091029	WITHOUT_CLASSIFICATION	3.1159089702711455E-7	DESIGN
// line 980	WITHOUT_CLASSIFICATION	0.9999998474666647	WITHOUT_CLASSIFICATION	1.5253333540234383E-7	DESIGN
// line 984	WITHOUT_CLASSIFICATION	0.9999995866921538	WITHOUT_CLASSIFICATION	4.1330784612423253E-7	DESIGN
// line 986	WITHOUT_CLASSIFICATION	0.9999991683505155	WITHOUT_CLASSIFICATION	8.316494844394804E-7	DESIGN
// line 996	WITHOUT_CLASSIFICATION	0.9999986310522415	WITHOUT_CLASSIFICATION	1.368947758451339E-6	DESIGN
// line 1001	WITHOUT_CLASSIFICATION	0.999998942463127	WITHOUT_CLASSIFICATION	1.0575368730108675E-6	DESIGN
// line 1004	WITHOUT_CLASSIFICATION	0.9999986181184087	WITHOUT_CLASSIFICATION	1.3818815913094718E-6	DESIGN
// line 1008	WITHOUT_CLASSIFICATION	0.9999995155600068	WITHOUT_CLASSIFICATION	4.84439993281074E-7	DESIGN
// line 1014	WITHOUT_CLASSIFICATION	0.9999971685224027	WITHOUT_CLASSIFICATION	2.831477597228551E-6	DESIGN
// line 1029	WITHOUT_CLASSIFICATION	0.9999994459398409	WITHOUT_CLASSIFICATION	5.540601590601283E-7	DESIGN
// line 1032	WITHOUT_CLASSIFICATION	0.999999466508232	WITHOUT_CLASSIFICATION	5.334917679132421E-7	DESIGN
// line 1034	WITHOUT_CLASSIFICATION	0.9999978776564851	WITHOUT_CLASSIFICATION	2.122343515008614E-6	DESIGN
// line 1045	WITHOUT_CLASSIFICATION	0.9999990962628432	WITHOUT_CLASSIFICATION	9.037371567867836E-7	DESIGN
// line 1048	WITHOUT_CLASSIFICATION	0.9999991993361091	WITHOUT_CLASSIFICATION	8.006638908118621E-7	DESIGN
// line 1051	WITHOUT_CLASSIFICATION	0.9999992275602446	WITHOUT_CLASSIFICATION	7.724397553200156E-7	DESIGN
// line 1058	WITHOUT_CLASSIFICATION	0.999999555258724	WITHOUT_CLASSIFICATION	4.447412760183435E-7	DESIGN
// line 1070	WITHOUT_CLASSIFICATION	0.9999997119094098	WITHOUT_CLASSIFICATION	2.880905902126366E-7	DESIGN
// line 1073	WITHOUT_CLASSIFICATION	0.9999984612019003	WITHOUT_CLASSIFICATION	1.5387980996487177E-6	DESIGN
// line 1076	WITHOUT_CLASSIFICATION	0.9999985324488224	WITHOUT_CLASSIFICATION	1.4675511776017832E-6	DESIGN
// line 1079	WITHOUT_CLASSIFICATION	0.9999991994070883	WITHOUT_CLASSIFICATION	8.005929117046419E-7	DESIGN
// line 1082	WITHOUT_CLASSIFICATION	0.9999998749920763	WITHOUT_CLASSIFICATION	1.2500792367689827E-7	DESIGN
// line 1089	WITHOUT_CLASSIFICATION	0.9999993479389279	WITHOUT_CLASSIFICATION	6.520610721325855E-7	DESIGN
// line 1097	WITHOUT_CLASSIFICATION	0.9999991254414436	WITHOUT_CLASSIFICATION	8.745585563828578E-7	DESIGN
// line 1100	WITHOUT_CLASSIFICATION	0.999999913342533	WITHOUT_CLASSIFICATION	8.665746692945567E-8	DESIGN
// line 1103	WITHOUT_CLASSIFICATION	0.9999992086487739	WITHOUT_CLASSIFICATION	7.913512260157268E-7	DESIGN
// line 1107	WITHOUT_CLASSIFICATION	0.9999998299589853	WITHOUT_CLASSIFICATION	1.7004101460806587E-7	DESIGN
// line 1111	WITHOUT_CLASSIFICATION	0.9999990463488834	WITHOUT_CLASSIFICATION	9.53651116701987E-7	DESIGN
// line 1113	WITHOUT_CLASSIFICATION	0.9999989041732534	WITHOUT_CLASSIFICATION	1.095826746642174E-6	DESIGN
// line 1115	WITHOUT_CLASSIFICATION	0.9999996009025193	WITHOUT_CLASSIFICATION	3.9909748079586425E-7	DESIGN
// line 1119	WITHOUT_CLASSIFICATION	0.9999995710732797	WITHOUT_CLASSIFICATION	4.2892672017766006E-7	DESIGN
// line 1130	WITHOUT_CLASSIFICATION	0.999999781297835	WITHOUT_CLASSIFICATION	2.1870216510786397E-7	DESIGN
// line 1133	WITHOUT_CLASSIFICATION	0.9999988845002853	WITHOUT_CLASSIFICATION	1.1154997146836432E-6	DESIGN
// line 1135	WITHOUT_CLASSIFICATION	0.9999994062092498	WITHOUT_CLASSIFICATION	5.937907501515968E-7	DESIGN
// line 1137	WITHOUT_CLASSIFICATION	0.9999993490682648	WITHOUT_CLASSIFICATION	6.509317352646951E-7	DESIGN
// line 1140	WITHOUT_CLASSIFICATION	0.9999998394608877	WITHOUT_CLASSIFICATION	1.605391122553097E-7	DESIGN
// line 1151	WITHOUT_CLASSIFICATION	0.9999995747031563	WITHOUT_CLASSIFICATION	4.252968436275304E-7	DESIGN
// line 1154	WITHOUT_CLASSIFICATION	0.9999996029020036	WITHOUT_CLASSIFICATION	3.970979964010485E-7	DESIGN
// line 1158	WITHOUT_CLASSIFICATION	0.9999997543904436	WITHOUT_CLASSIFICATION	2.4560955635964645E-7	DESIGN
// line 1164	WITHOUT_CLASSIFICATION	0.9999991623843597	WITHOUT_CLASSIFICATION	8.376156403437014E-7	DESIGN
// line 1175	WITHOUT_CLASSIFICATION	0.9999997442538778	WITHOUT_CLASSIFICATION	2.5574612215917905E-7	DESIGN
// line 1178	WITHOUT_CLASSIFICATION	0.9999997911139549	WITHOUT_CLASSIFICATION	2.0888604504328488E-7	DESIGN
// line 1187	WITHOUT_CLASSIFICATION	0.9999998375158987	WITHOUT_CLASSIFICATION	1.6248410128956098E-7	DESIGN
// line 1189	WITHOUT_CLASSIFICATION	0.9999997881676556	WITHOUT_CLASSIFICATION	2.1183234435335172E-7	DESIGN
// line 1193	WITHOUT_CLASSIFICATION	0.9999991094857739	WITHOUT_CLASSIFICATION	8.905142260515034E-7	DESIGN
// line 1204	WITHOUT_CLASSIFICATION	0.9999997410865131	WITHOUT_CLASSIFICATION	2.5891348684773564E-7	DESIGN
// line 1207	WITHOUT_CLASSIFICATION	0.9999998586230044	WITHOUT_CLASSIFICATION	1.4137699553761384E-7	DESIGN
// line 1210	WITHOUT_CLASSIFICATION	0.9999999410711998	WITHOUT_CLASSIFICATION	5.892880019916334E-8	DESIGN
// line 1214	WITHOUT_CLASSIFICATION	0.999999674940697	WITHOUT_CLASSIFICATION	3.250593030026267E-7	DESIGN
// line 1234	WITHOUT_CLASSIFICATION	0.9999996806641095	WITHOUT_CLASSIFICATION	3.193358905279575E-7	DESIGN
// line 1239	WITHOUT_CLASSIFICATION	0.9999994585709148	WITHOUT_CLASSIFICATION	5.414290851199824E-7	DESIGN
// line 1243	WITHOUT_CLASSIFICATION	0.9999995009517267	WITHOUT_CLASSIFICATION	4.990482731657618E-7	DESIGN
// line 1247	WITHOUT_CLASSIFICATION	0.9999997955837299	WITHOUT_CLASSIFICATION	2.0441627016869698E-7	DESIGN
// line 1251	WITHOUT_CLASSIFICATION	0.9999998071678292	WITHOUT_CLASSIFICATION	1.9283217074183627E-7	DESIGN
// line 1263	WITHOUT_CLASSIFICATION	0.9999988493635422	WITHOUT_CLASSIFICATION	1.1506364578183794E-6	DESIGN
// line 1269	WITHOUT_CLASSIFICATION	0.9999995305194631	WITHOUT_CLASSIFICATION	4.6948053686524233E-7	DESIGN
// line 1280	WITHOUT_CLASSIFICATION	0.9999999422174692	WITHOUT_CLASSIFICATION	5.778253076201796E-8	DESIGN
// line 1283	WITHOUT_CLASSIFICATION	0.9999996550157302	WITHOUT_CLASSIFICATION	3.4498426983643983E-7	DESIGN
// line 1290	WITHOUT_CLASSIFICATION	0.9999999205812456	WITHOUT_CLASSIFICATION	7.941875435356616E-8	DESIGN
// line 1296	WITHOUT_CLASSIFICATION	0.9999995084451531	WITHOUT_CLASSIFICATION	4.915548469590354E-7	DESIGN
// line 1299	WITHOUT_CLASSIFICATION	0.9999997642755108	WITHOUT_CLASSIFICATION	2.357244891247636E-7	DESIGN
// line 1302	WITHOUT_CLASSIFICATION	0.999999816186815	WITHOUT_CLASSIFICATION	1.8381318504310783E-7	DESIGN
// line 1309	WITHOUT_CLASSIFICATION	0.9999990023847244	WITHOUT_CLASSIFICATION	9.97615275614186E-7	DESIGN
// line 1313	WITHOUT_CLASSIFICATION	0.9999984293019043	WITHOUT_CLASSIFICATION	1.5706980957650588E-6	DESIGN
// line 1315	WITHOUT_CLASSIFICATION	0.9999989720189976	WITHOUT_CLASSIFICATION	1.027981002342242E-6	DESIGN
// line 1320	WITHOUT_CLASSIFICATION	0.9999997836220161	WITHOUT_CLASSIFICATION	2.163779838157929E-7	DESIGN
// line 1328	WITHOUT_CLASSIFICATION	0.9999996538545106	WITHOUT_CLASSIFICATION	3.4614548942637993E-7	DESIGN
// line 1335	WITHOUT_CLASSIFICATION	0.9999991376531124	WITHOUT_CLASSIFICATION	8.623468874445632E-7	DESIGN
// line 1348	WITHOUT_CLASSIFICATION	0.9999992908276424	WITHOUT_CLASSIFICATION	7.091723575283926E-7	DESIGN
// line 1352	WITHOUT_CLASSIFICATION	0.9999998157800164	WITHOUT_CLASSIFICATION	1.8421998356563726E-7	DESIGN
// line 1358	WITHOUT_CLASSIFICATION	0.9999994501154436	WITHOUT_CLASSIFICATION	5.49884556377077E-7	DESIGN
// line 1374	WITHOUT_CLASSIFICATION	0.999999149757266	WITHOUT_CLASSIFICATION	8.502427339897035E-7	DESIGN
// line 1381	WITHOUT_CLASSIFICATION	0.9999989067584099	WITHOUT_CLASSIFICATION	1.093241590076672E-6	DESIGN
// line 1387	WITHOUT_CLASSIFICATION	0.9999993427607476	WITHOUT_CLASSIFICATION	6.572392523728726E-7	DESIGN
// line 1392	WITHOUT_CLASSIFICATION	0.9999997137323875	WITHOUT_CLASSIFICATION	2.8626761256100565E-7	DESIGN
// line 1415	WITHOUT_CLASSIFICATION	0.9999993902259934	WITHOUT_CLASSIFICATION	6.097740065894645E-7	DESIGN
// line 1431	WITHOUT_CLASSIFICATION	0.999998460431739	WITHOUT_CLASSIFICATION	1.5395682609342391E-6	DESIGN
// line 1434	WITHOUT_CLASSIFICATION	0.9999989078080426	WITHOUT_CLASSIFICATION	1.0921919574032519E-6	DESIGN
// line 1440	WITHOUT_CLASSIFICATION	0.9999997655485945	WITHOUT_CLASSIFICATION	2.3445140548233743E-7	DESIGN
// line 1443	WITHOUT_CLASSIFICATION	0.9999984403557762	WITHOUT_CLASSIFICATION	1.5596442237601382E-6	DESIGN
// line 1453	WITHOUT_CLASSIFICATION	0.9999990577842748	WITHOUT_CLASSIFICATION	9.422157251825607E-7	DESIGN
// line 1456	WITHOUT_CLASSIFICATION	0.9999987134595784	WITHOUT_CLASSIFICATION	1.2865404216675984E-6	DESIGN
// line 1462	WITHOUT_CLASSIFICATION	0.9999997887821481	WITHOUT_CLASSIFICATION	2.112178518008248E-7	DESIGN
// line 1465	WITHOUT_CLASSIFICATION	0.9999991113656544	WITHOUT_CLASSIFICATION	8.886343454663914E-7	DESIGN
// line 1470	WITHOUT_CLASSIFICATION	0.9999997381250262	WITHOUT_CLASSIFICATION	2.618749738050104E-7	DESIGN
// line 1477	WITHOUT_CLASSIFICATION	0.9999993331089814	WITHOUT_CLASSIFICATION	6.668910186996173E-7	DESIGN
// line 1480	WITHOUT_CLASSIFICATION	0.9999998095608181	WITHOUT_CLASSIFICATION	1.9043918193371014E-7	DESIGN
// line 1485	WITHOUT_CLASSIFICATION	0.9999996561516605	WITHOUT_CLASSIFICATION	3.438483395342732E-7	DESIGN
// line 1488	WITHOUT_CLASSIFICATION	0.9999995690819422	WITHOUT_CLASSIFICATION	4.309180577182836E-7	DESIGN
// line 1496	WITHOUT_CLASSIFICATION	0.9999984886477998	WITHOUT_CLASSIFICATION	1.5113522000957085E-6	DESIGN
// line 1502	WITHOUT_CLASSIFICATION	0.9999999021190649	WITHOUT_CLASSIFICATION	9.788093506171476E-8	DESIGN
// line 1510	WITHOUT_CLASSIFICATION	0.9999999007241864	WITHOUT_CLASSIFICATION	9.92758135077382E-8	DESIGN
// line 1513	WITHOUT_CLASSIFICATION	0.9999989350068091	WITHOUT_CLASSIFICATION	1.064993190907873E-6	DESIGN
// line 1516	WITHOUT_CLASSIFICATION	0.9999988276437822	WITHOUT_CLASSIFICATION	1.172356217663595E-6	DESIGN
// line 1533	WITHOUT_CLASSIFICATION	0.9999989960327809	WITHOUT_CLASSIFICATION	1.0039672192319537E-6	DESIGN
// line 1550	WITHOUT_CLASSIFICATION	0.9999998166828005	WITHOUT_CLASSIFICATION	1.8331719952204854E-7	DESIGN
// line 1553	WITHOUT_CLASSIFICATION	0.9999990477631944	WITHOUT_CLASSIFICATION	9.522368055394976E-7	DESIGN
// line 1556	WITHOUT_CLASSIFICATION	0.999998759210319	WITHOUT_CLASSIFICATION	1.2407896809449204E-6	DESIGN
// line 1565	WITHOUT_CLASSIFICATION	0.9999989954255186	WITHOUT_CLASSIFICATION	1.0045744813831138E-6	DESIGN
// line 1568	WITHOUT_CLASSIFICATION	0.9999993821474182	WITHOUT_CLASSIFICATION	6.17852581662592E-7	DESIGN
// line 1571	WITHOUT_CLASSIFICATION	0.9999995104176435	WITHOUT_CLASSIFICATION	4.895823564553873E-7	DESIGN
// line 1574	WITHOUT_CLASSIFICATION	0.9999996126838673	WITHOUT_CLASSIFICATION	3.87316132672188E-7	DESIGN
// line 1577	WITHOUT_CLASSIFICATION	0.9999995719097123	WITHOUT_CLASSIFICATION	4.280902876600209E-7	DESIGN
// line 1587	WITHOUT_CLASSIFICATION	0.9999997283953506	WITHOUT_CLASSIFICATION	2.7160464946509314E-7	DESIGN
// line 1595	WITHOUT_CLASSIFICATION	0.9999994198307689	WITHOUT_CLASSIFICATION	5.801692310490981E-7	DESIGN
// line 1598	WITHOUT_CLASSIFICATION	0.9999996254780185	WITHOUT_CLASSIFICATION	3.745219815097172E-7	DESIGN
// line 1600	WITHOUT_CLASSIFICATION	0.9999992005427276	WITHOUT_CLASSIFICATION	7.994572723079181E-7	DESIGN
// line 1609	WITHOUT_CLASSIFICATION	0.9999976534389705	WITHOUT_CLASSIFICATION	2.346561029534126E-6	DESIGN
// line 1623	WITHOUT_CLASSIFICATION	0.999998492449567	WITHOUT_CLASSIFICATION	1.5075504330157307E-6	DESIGN
// line 1626	WITHOUT_CLASSIFICATION	0.9999989172210807	WITHOUT_CLASSIFICATION	1.0827789192929412E-6	DESIGN
// line 1629	WITHOUT_CLASSIFICATION	0.9999992843493611	WITHOUT_CLASSIFICATION	7.156506387881918E-7	DESIGN
// line 1632	WITHOUT_CLASSIFICATION	0.9999991110249102	WITHOUT_CLASSIFICATION	8.889750897171016E-7	DESIGN
// line 1638	WITHOUT_CLASSIFICATION	0.9999966422163268	WITHOUT_CLASSIFICATION	3.3577836731430044E-6	DESIGN
// line 1641	WITHOUT_CLASSIFICATION	0.9999979051527176	WITHOUT_CLASSIFICATION	2.094847282437937E-6	DESIGN
// line 1644	WITHOUT_CLASSIFICATION	0.9999984482385458	WITHOUT_CLASSIFICATION	1.5517614541667321E-6	DESIGN
// line 1649	WITHOUT_CLASSIFICATION	0.9999983742052155	WITHOUT_CLASSIFICATION	1.625794784414286E-6	DESIGN
// line 1655	WITHOUT_CLASSIFICATION	0.9999986753584162	WITHOUT_CLASSIFICATION	1.324641583840347E-6	DESIGN
// line 1658	WITHOUT_CLASSIFICATION	0.9999991039499263	WITHOUT_CLASSIFICATION	8.960500736515873E-7	DESIGN
// line 1661	WITHOUT_CLASSIFICATION	0.9999979877771062	WITHOUT_CLASSIFICATION	2.012222893744103E-6	DESIGN
// line 1672	WITHOUT_CLASSIFICATION	0.9999997166965819	WITHOUT_CLASSIFICATION	2.8330341800907555E-7	DESIGN
// line 1677	WITHOUT_CLASSIFICATION	0.999998648018356	WITHOUT_CLASSIFICATION	1.3519816439982981E-6	DESIGN
// line 1687	WITHOUT_CLASSIFICATION	0.9999991672182217	WITHOUT_CLASSIFICATION	8.327817783685054E-7	DESIGN
// line 1694	WITHOUT_CLASSIFICATION	0.9999983177124369	WITHOUT_CLASSIFICATION	1.6822875632223496E-6	DESIGN
// line 1705	WITHOUT_CLASSIFICATION	0.9999997323117515	WITHOUT_CLASSIFICATION	2.6768824839306536E-7	DESIGN
// line 1708	WITHOUT_CLASSIFICATION	0.9999997197372428	WITHOUT_CLASSIFICATION	2.8026275725786467E-7	DESIGN
// line 1725	WITHOUT_CLASSIFICATION	0.999999844264807	WITHOUT_CLASSIFICATION	1.5573519297222176E-7	DESIGN
// line 1733	WITHOUT_CLASSIFICATION	0.999998894609681	WITHOUT_CLASSIFICATION	1.105390318920054E-6	DESIGN
// line 1742	WITHOUT_CLASSIFICATION	0.99999990424114	WITHOUT_CLASSIFICATION	9.575886000539019E-8	DESIGN
// line 1745	WITHOUT_CLASSIFICATION	0.9999996665697765	WITHOUT_CLASSIFICATION	3.3343022353663323E-7	DESIGN
// line 1749	WITHOUT_CLASSIFICATION	0.9999995265846126	WITHOUT_CLASSIFICATION	4.734153873896013E-7	DESIGN
// line 1757	WITHOUT_CLASSIFICATION	0.9999995940957498	WITHOUT_CLASSIFICATION	4.059042502757125E-7	DESIGN
// line 1769	WITHOUT_CLASSIFICATION	0.9999991498771291	WITHOUT_CLASSIFICATION	8.501228707917152E-7	DESIGN
// line 1772	WITHOUT_CLASSIFICATION	0.999999885459322	WITHOUT_CLASSIFICATION	1.1454067803430467E-7	DESIGN
// line 1775	WITHOUT_CLASSIFICATION	0.9999995491938347	WITHOUT_CLASSIFICATION	4.508061652344013E-7	DESIGN
// line 1784	WITHOUT_CLASSIFICATION	0.9999996489456798	WITHOUT_CLASSIFICATION	3.5105432015919107E-7	DESIGN
// line 1808	WITHOUT_CLASSIFICATION	0.9999997266508668	WITHOUT_CLASSIFICATION	2.733491332442004E-7	DESIGN
// line 1814	WITHOUT_CLASSIFICATION	0.9999996447180883	WITHOUT_CLASSIFICATION	3.552819115625833E-7	DESIGN
// line 1818	WITHOUT_CLASSIFICATION	0.9999996813160545	WITHOUT_CLASSIFICATION	3.186839454626371E-7	DESIGN
// line 1822	WITHOUT_CLASSIFICATION	0.9999999444927737	WITHOUT_CLASSIFICATION	5.5507226291168986E-8	DESIGN
/* force for args */	WITHOUT_CLASSIFICATION	0.9999968380736246	WITHOUT_CLASSIFICATION	3.161926375417418E-6	DESIGN
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9938213130498718	WITHOUT_CLASSIFICATION	0.0061786869501283155	DESIGN
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9999970366992532	WITHOUT_CLASSIFICATION	2.9633007468056423E-6	DESIGN
/*                  }*/	WITHOUT_CLASSIFICATION	0.9999867756073317	WITHOUT_CLASSIFICATION	1.322439266823502E-5	DESIGN
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999974148487397	WITHOUT_CLASSIFICATION	2.5851512602495224E-6	DESIGN
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9850814791986852	WITHOUT_CLASSIFICATION	0.01491852080131483	DESIGN
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9993960934048375	WITHOUT_CLASSIFICATION	6.039065951625888E-4	DESIGN
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9992579542389386	WITHOUT_CLASSIFICATION	7.42045761061404E-4	DESIGN
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9999982348763997	WITHOUT_CLASSIFICATION	1.7651236003332604E-6	DESIGN
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9994354671251596	WITHOUT_CLASSIFICATION	5.64532874840429E-4	DESIGN
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9983868677204164	WITHOUT_CLASSIFICATION	0.0016131322795835924	DESIGN
// line 529	WITHOUT_CLASSIFICATION	0.9999995142881096	WITHOUT_CLASSIFICATION	4.857118904227389E-7	DESIGN
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999991742824212	WITHOUT_CLASSIFICATION	8.257175787501777E-7	DESIGN
/* XXX*/	WITHOUT_CLASSIFICATION	0.9848468770134338	WITHOUT_CLASSIFICATION	0.015153122986566174	DESIGN
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999995409384098	WITHOUT_CLASSIFICATION	4.590615900922987E-7	DESIGN
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999864991058077	WITHOUT_CLASSIFICATION	1.3500894192210504E-5	DESIGN
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9990207222657944	WITHOUT_CLASSIFICATION	9.792777342055865E-4	DESIGN
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999903028023486	WITHOUT_CLASSIFICATION	9.697197651515994E-6	DESIGN
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999999999841239	WITHOUT_CLASSIFICATION	1.5876097996192695E-11	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999993807702773	WITHOUT_CLASSIFICATION	6.192297226463267E-7	DESIGN
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999999975502486	WITHOUT_CLASSIFICATION	2.4497514108086357E-9	DESIGN
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.999999916566336	WITHOUT_CLASSIFICATION	8.343366405054177E-8	DESIGN
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999364619459367	WITHOUT_CLASSIFICATION	6.353805406328366E-5	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999988977482851	WITHOUT_CLASSIFICATION	1.1022517149118797E-6	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999988977482851	WITHOUT_CLASSIFICATION	1.1022517149118797E-6	DESIGN
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9991935151181746	WITHOUT_CLASSIFICATION	8.064848818253766E-4	DESIGN
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9455466757706498	WITHOUT_CLASSIFICATION	0.054453324229350335	DESIGN
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9999419121505912	WITHOUT_CLASSIFICATION	5.808784940867878E-5	DESIGN
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9994774033278901	WITHOUT_CLASSIFICATION	5.225966721097261E-4	DESIGN
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9999675153803327	WITHOUT_CLASSIFICATION	3.248461966733903E-5	DESIGN
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999999822154388	WITHOUT_CLASSIFICATION	1.7784561044216883E-8	DESIGN
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999979502856177	WITHOUT_CLASSIFICATION	2.049714382393937E-6	DESIGN
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999999893880923	WITHOUT_CLASSIFICATION	1.061190772214408E-8	DESIGN
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.7571760707307338	WITHOUT_CLASSIFICATION	0.24282392926926621	DESIGN
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999999945679534	WITHOUT_CLASSIFICATION	5.4320465854766145E-9	DESIGN
// Parser states:	WITHOUT_CLASSIFICATION	0.9999998093337187	WITHOUT_CLASSIFICATION	1.9066628125611445E-7	DESIGN
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9999989446737279	WITHOUT_CLASSIFICATION	1.0553262722458703E-6	DESIGN
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9999844603089107	WITHOUT_CLASSIFICATION	1.5539691089231277E-5	DESIGN
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9999998459221169	WITHOUT_CLASSIFICATION	1.540778831989416E-7	DESIGN
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999998385787793	WITHOUT_CLASSIFICATION	1.6142122081926057E-7	DESIGN
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999999927137929	WITHOUT_CLASSIFICATION	7.28620702985884E-9	DESIGN
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.999999985064357	WITHOUT_CLASSIFICATION	1.493564299401503E-8	DESIGN
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9999369938773728	WITHOUT_CLASSIFICATION	6.300612262726667E-5	DESIGN
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.99706391910171	WITHOUT_CLASSIFICATION	0.0029360808982900844	DESIGN
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9999828534152351	WITHOUT_CLASSIFICATION	1.7146584764967715E-5	DESIGN
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999999999915926	WITHOUT_CLASSIFICATION	8.407321250865866E-12	DESIGN
// Node	WITHOUT_CLASSIFICATION	0.9999825962502243	WITHOUT_CLASSIFICATION	1.7403749775737816E-5	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9910525108497639	DESIGN	0.008947489150236174	WITHOUT_CLASSIFICATION
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9999994734447798	WITHOUT_CLASSIFICATION	5.265552202357033E-7	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9910525108497639	DESIGN	0.008947489150236174	WITHOUT_CLASSIFICATION
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9999997361983619	WITHOUT_CLASSIFICATION	2.638016381059231E-7	DESIGN
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9999968504293428	WITHOUT_CLASSIFICATION	3.1495706571569235E-6	DESIGN
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.5263428587842229	WITHOUT_CLASSIFICATION	0.473657141215777	DESIGN
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999859105731751	WITHOUT_CLASSIFICATION	1.4089426824793146E-5	DESIGN
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999993925557923	WITHOUT_CLASSIFICATION	6.074442077503339E-7	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9999991849870281	WITHOUT_CLASSIFICATION	8.150129717592241E-7	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9999991849870281	WITHOUT_CLASSIFICATION	8.150129717592241E-7	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9999991849870281	WITHOUT_CLASSIFICATION	8.150129717592241E-7	DESIGN
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9999811783022915	WITHOUT_CLASSIFICATION	1.8821697708532172E-5	DESIGN
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9999882897820737	WITHOUT_CLASSIFICATION	1.1710217926358442E-5	DESIGN
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.999930231587135	WITHOUT_CLASSIFICATION	6.976841286502112E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999618957991521	WITHOUT_CLASSIFICATION	3.810420084787959E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999618957991521	WITHOUT_CLASSIFICATION	3.810420084787959E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999618957991521	WITHOUT_CLASSIFICATION	3.810420084787959E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999618957991521	WITHOUT_CLASSIFICATION	3.810420084787959E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999618957991521	WITHOUT_CLASSIFICATION	3.810420084787959E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999618957991521	WITHOUT_CLASSIFICATION	3.810420084787959E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999845153963649	WITHOUT_CLASSIFICATION	1.5484603635183135E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999845153963649	WITHOUT_CLASSIFICATION	1.5484603635183135E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999845153963649	WITHOUT_CLASSIFICATION	1.5484603635183135E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999845153963649	WITHOUT_CLASSIFICATION	1.5484603635183135E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999845153963649	WITHOUT_CLASSIFICATION	1.5484603635183135E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999135960799103	WITHOUT_CLASSIFICATION	8.640392008981726E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999135960799103	WITHOUT_CLASSIFICATION	8.640392008981726E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999135960799103	WITHOUT_CLASSIFICATION	8.640392008981726E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999135960799103	WITHOUT_CLASSIFICATION	8.640392008981726E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999135960799103	WITHOUT_CLASSIFICATION	8.640392008981726E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999616098291337	WITHOUT_CLASSIFICATION	3.8390170866190646E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999616098291337	WITHOUT_CLASSIFICATION	3.8390170866190646E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999616098291337	WITHOUT_CLASSIFICATION	3.8390170866190646E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999616098291337	WITHOUT_CLASSIFICATION	3.8390170866190646E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999616098291337	WITHOUT_CLASSIFICATION	3.8390170866190646E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999616098291337	WITHOUT_CLASSIFICATION	3.8390170866190646E-5	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9996955599332772	WITHOUT_CLASSIFICATION	3.0444006672275883E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9996955599332772	WITHOUT_CLASSIFICATION	3.0444006672275883E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9996955599332772	WITHOUT_CLASSIFICATION	3.0444006672275883E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9996955599332772	WITHOUT_CLASSIFICATION	3.0444006672275883E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9996955599332772	WITHOUT_CLASSIFICATION	3.0444006672275883E-4	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9996661551756094	WITHOUT_CLASSIFICATION	3.3384482439059444E-4	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9996661551756094	WITHOUT_CLASSIFICATION	3.3384482439059444E-4	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9996661551756094	WITHOUT_CLASSIFICATION	3.3384482439059444E-4	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9996661551756094	WITHOUT_CLASSIFICATION	3.3384482439059444E-4	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9996661551756094	WITHOUT_CLASSIFICATION	3.3384482439059444E-4	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999151098862394	WITHOUT_CLASSIFICATION	8.489011376065553E-5	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999151098862394	WITHOUT_CLASSIFICATION	8.489011376065553E-5	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999151098862394	WITHOUT_CLASSIFICATION	8.489011376065553E-5	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999151098862394	WITHOUT_CLASSIFICATION	8.489011376065553E-5	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999151098862394	WITHOUT_CLASSIFICATION	8.489011376065553E-5	DESIGN
// dynamically increase	WITHOUT_CLASSIFICATION	0.999993669662985	WITHOUT_CLASSIFICATION	6.330337015038193E-6	DESIGN
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999931813177744	WITHOUT_CLASSIFICATION	6.818682225608244E-6	DESIGN
// shift to yyN	WITHOUT_CLASSIFICATION	0.9972423982047568	WITHOUT_CLASSIFICATION	0.002757601795243217	DESIGN
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.999307112762294	WITHOUT_CLASSIFICATION	6.928872377059567E-4	DESIGN
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999099094341399	WITHOUT_CLASSIFICATION	9.009056586008007E-5	DESIGN
// line 321	WITHOUT_CLASSIFICATION	0.9999994941569043	WITHOUT_CLASSIFICATION	5.058430957667992E-7	DESIGN
// line 351	WITHOUT_CLASSIFICATION	0.9999994937441365	WITHOUT_CLASSIFICATION	5.062558633939487E-7	DESIGN
// line 382	WITHOUT_CLASSIFICATION	0.9999998257725503	WITHOUT_CLASSIFICATION	1.742274496979533E-7	DESIGN
// line 417	WITHOUT_CLASSIFICATION	0.9999997285744592	WITHOUT_CLASSIFICATION	2.714255408865381E-7	DESIGN
// line 420	WITHOUT_CLASSIFICATION	0.9999998946050632	WITHOUT_CLASSIFICATION	1.0539493673319854E-7	DESIGN
// line 423	WITHOUT_CLASSIFICATION	0.9999993434888657	WITHOUT_CLASSIFICATION	6.565111342219361E-7	DESIGN
// line 426	WITHOUT_CLASSIFICATION	0.9999992612726611	WITHOUT_CLASSIFICATION	7.387273388652668E-7	DESIGN
// line 280	WITHOUT_CLASSIFICATION	0.9999999640258634	WITHOUT_CLASSIFICATION	3.597413660370244E-8	DESIGN
// line 283	WITHOUT_CLASSIFICATION	0.9999997847924142	WITHOUT_CLASSIFICATION	2.1520758580847353E-7	DESIGN
// line 296	WITHOUT_CLASSIFICATION	0.999999676706717	WITHOUT_CLASSIFICATION	3.2329328302294054E-7	DESIGN
// line 324	WITHOUT_CLASSIFICATION	0.999999376050864	WITHOUT_CLASSIFICATION	6.239491361408819E-7	DESIGN
// line 327	WITHOUT_CLASSIFICATION	0.9999995236655346	WITHOUT_CLASSIFICATION	4.7633446537314266E-7	DESIGN
// line 331	WITHOUT_CLASSIFICATION	0.9999989726046824	WITHOUT_CLASSIFICATION	1.0273953176244869E-6	DESIGN
// line 333	WITHOUT_CLASSIFICATION	0.9999982388350036	WITHOUT_CLASSIFICATION	1.7611649962925692E-6	DESIGN
// line 336	WITHOUT_CLASSIFICATION	0.9999971947894252	WITHOUT_CLASSIFICATION	2.805210574778582E-6	DESIGN
// line 342	WITHOUT_CLASSIFICATION	0.9999997429211519	WITHOUT_CLASSIFICATION	2.5707884816756993E-7	DESIGN
// line 345	WITHOUT_CLASSIFICATION	0.9999991415270962	WITHOUT_CLASSIFICATION	8.58472903879663E-7	DESIGN
// line 348	WITHOUT_CLASSIFICATION	0.9999992106434041	WITHOUT_CLASSIFICATION	7.893565957462417E-7	DESIGN
// line 354	WITHOUT_CLASSIFICATION	0.9999990348579213	WITHOUT_CLASSIFICATION	9.651420787344725E-7	DESIGN
// line 368	WITHOUT_CLASSIFICATION	0.9999987456954964	WITHOUT_CLASSIFICATION	1.254304503630633E-6	DESIGN
// line 377	WITHOUT_CLASSIFICATION	0.9999989522497477	WITHOUT_CLASSIFICATION	1.0477502523247354E-6	DESIGN
// line 388	WITHOUT_CLASSIFICATION	0.9999991710289318	WITHOUT_CLASSIFICATION	8.289710682562242E-7	DESIGN
// line 392	WITHOUT_CLASSIFICATION	0.999999681646162	WITHOUT_CLASSIFICATION	3.1835383792091935E-7	DESIGN
// line 397	WITHOUT_CLASSIFICATION	0.9999988357075565	WITHOUT_CLASSIFICATION	1.16429244354149E-6	DESIGN
// line 429	WITHOUT_CLASSIFICATION	0.9999996916818904	WITHOUT_CLASSIFICATION	3.0831810970439066E-7	DESIGN
// line 432	WITHOUT_CLASSIFICATION	0.9999997565100637	WITHOUT_CLASSIFICATION	2.4348993638089706E-7	DESIGN
// line 436	WITHOUT_CLASSIFICATION	0.9999978519047502	WITHOUT_CLASSIFICATION	2.1480952497978397E-6	DESIGN
// line 445	WITHOUT_CLASSIFICATION	0.9999995340891367	WITHOUT_CLASSIFICATION	4.659108633752589E-7	DESIGN
// line 448	WITHOUT_CLASSIFICATION	0.9999995777919033	WITHOUT_CLASSIFICATION	4.222080967804797E-7	DESIGN
// line 454	WITHOUT_CLASSIFICATION	0.9999994442206387	WITHOUT_CLASSIFICATION	5.557793612290952E-7	DESIGN
// line 459	WITHOUT_CLASSIFICATION	0.9999993272817262	WITHOUT_CLASSIFICATION	6.727182736694341E-7	DESIGN
// line 466	WITHOUT_CLASSIFICATION	0.9999988284548903	WITHOUT_CLASSIFICATION	1.1715451097362694E-6	DESIGN
// line 469	WITHOUT_CLASSIFICATION	0.9999990015104954	WITHOUT_CLASSIFICATION	9.984895046141157E-7	DESIGN
// line 478	WITHOUT_CLASSIFICATION	0.999999636903834	WITHOUT_CLASSIFICATION	3.630961661035265E-7	DESIGN
// line 481	WITHOUT_CLASSIFICATION	0.9999997194711713	WITHOUT_CLASSIFICATION	2.8052882872270457E-7	DESIGN
// line 488	WITHOUT_CLASSIFICATION	0.9999996288271533	WITHOUT_CLASSIFICATION	3.711728466682513E-7	DESIGN
// line 494	WITHOUT_CLASSIFICATION	0.9999993733396857	WITHOUT_CLASSIFICATION	6.266603143187681E-7	DESIGN
// line 497	WITHOUT_CLASSIFICATION	0.9999995206978453	WITHOUT_CLASSIFICATION	4.793021548217782E-7	DESIGN
// line 503	WITHOUT_CLASSIFICATION	0.9999975066667193	WITHOUT_CLASSIFICATION	2.493333280612161E-6	DESIGN
// line 506	WITHOUT_CLASSIFICATION	0.9999969588292303	WITHOUT_CLASSIFICATION	3.041170769688063E-6	DESIGN
// line 509	WITHOUT_CLASSIFICATION	0.9999991643207289	WITHOUT_CLASSIFICATION	8.356792710759151E-7	DESIGN
// line 512	WITHOUT_CLASSIFICATION	0.9999999268153298	WITHOUT_CLASSIFICATION	7.318467012850186E-8	DESIGN
// line 521	WITHOUT_CLASSIFICATION	0.9999997078791656	WITHOUT_CLASSIFICATION	2.921208344685046E-7	DESIGN
// line 526	WITHOUT_CLASSIFICATION	0.9999989962398729	WITHOUT_CLASSIFICATION	1.003760127128912E-6	DESIGN
// line 540	WITHOUT_CLASSIFICATION	0.9999996836358931	WITHOUT_CLASSIFICATION	3.163641068643246E-7	DESIGN
// line 543	WITHOUT_CLASSIFICATION	0.999997898631887	WITHOUT_CLASSIFICATION	2.1013681130449408E-6	DESIGN
// line 546	WITHOUT_CLASSIFICATION	0.999998067228736	WITHOUT_CLASSIFICATION	1.9327712640768715E-6	DESIGN
// line 566	WITHOUT_CLASSIFICATION	0.9999975992019723	WITHOUT_CLASSIFICATION	2.400798027744187E-6	DESIGN
// line 610	WITHOUT_CLASSIFICATION	0.9999998761480672	WITHOUT_CLASSIFICATION	1.2385193280326885E-7	DESIGN
// line 672	WITHOUT_CLASSIFICATION	0.9999998167332254	WITHOUT_CLASSIFICATION	1.832667746183571E-7	DESIGN
// line 691	WITHOUT_CLASSIFICATION	0.9999991822490195	WITHOUT_CLASSIFICATION	8.177509805499841E-7	DESIGN
// line 696	WITHOUT_CLASSIFICATION	0.9999985797051131	WITHOUT_CLASSIFICATION	1.4202948869071692E-6	DESIGN
// line 772	WITHOUT_CLASSIFICATION	0.9999998780854903	WITHOUT_CLASSIFICATION	1.219145097737373E-7	DESIGN
// line 782	WITHOUT_CLASSIFICATION	0.9999999274936952	WITHOUT_CLASSIFICATION	7.250630476824187E-8	DESIGN
// line 785	WITHOUT_CLASSIFICATION	0.999999724868138	WITHOUT_CLASSIFICATION	2.7513186189744975E-7	DESIGN
// line 788	WITHOUT_CLASSIFICATION	0.9999996616061465	WITHOUT_CLASSIFICATION	3.3839385346112643E-7	DESIGN
// line 791	WITHOUT_CLASSIFICATION	0.9999995426781824	WITHOUT_CLASSIFICATION	4.573218176636582E-7	DESIGN
// line 534	WITHOUT_CLASSIFICATION	0.9999988820289958	WITHOUT_CLASSIFICATION	1.1179710041145216E-6	DESIGN
// line 549	WITHOUT_CLASSIFICATION	0.9999989780977662	WITHOUT_CLASSIFICATION	1.0219022338145976E-6	DESIGN
// line 552	WITHOUT_CLASSIFICATION	0.9999998219411516	WITHOUT_CLASSIFICATION	1.7805884834304636E-7	DESIGN
// line 558	WITHOUT_CLASSIFICATION	0.9999994705432409	WITHOUT_CLASSIFICATION	5.294567591744864E-7	DESIGN
// line 561	WITHOUT_CLASSIFICATION	0.9999986985324256	WITHOUT_CLASSIFICATION	1.3014675744529505E-6	DESIGN
// line 571	WITHOUT_CLASSIFICATION	0.9999995733503312	WITHOUT_CLASSIFICATION	4.266496688211777E-7	DESIGN
// line 574	WITHOUT_CLASSIFICATION	0.9999993796275939	WITHOUT_CLASSIFICATION	6.203724062061989E-7	DESIGN
// line 579	WITHOUT_CLASSIFICATION	0.9999992568518348	WITHOUT_CLASSIFICATION	7.431481652726447E-7	DESIGN
// line 586	WITHOUT_CLASSIFICATION	0.9999987992920548	WITHOUT_CLASSIFICATION	1.200707945206323E-6	DESIGN
// line 589	WITHOUT_CLASSIFICATION	0.9999994330858574	WITHOUT_CLASSIFICATION	5.669141425754415E-7	DESIGN
// line 592	WITHOUT_CLASSIFICATION	0.9999997535648255	WITHOUT_CLASSIFICATION	2.4643517440973794E-7	DESIGN
// line 595	WITHOUT_CLASSIFICATION	0.9999988843559027	WITHOUT_CLASSIFICATION	1.1156440973085484E-6	DESIGN
// line 598	WITHOUT_CLASSIFICATION	0.9999992887992146	WITHOUT_CLASSIFICATION	7.112007853663677E-7	DESIGN
// line 623	WITHOUT_CLASSIFICATION	0.999999025124473	WITHOUT_CLASSIFICATION	9.748755270413128E-7	DESIGN
// line 627	WITHOUT_CLASSIFICATION	0.99999970354668	WITHOUT_CLASSIFICATION	2.9645332002389804E-7	DESIGN
// line 630	WITHOUT_CLASSIFICATION	0.9999994130049894	WITHOUT_CLASSIFICATION	5.869950105810468E-7	DESIGN
// line 633	WITHOUT_CLASSIFICATION	0.9999971238735091	WITHOUT_CLASSIFICATION	2.876126490893083E-6	DESIGN
// line 639	WITHOUT_CLASSIFICATION	0.9999973602949821	WITHOUT_CLASSIFICATION	2.63970501791215E-6	DESIGN
// line 648	WITHOUT_CLASSIFICATION	0.9999993393849377	WITHOUT_CLASSIFICATION	6.606150623318487E-7	DESIGN
// line 657	WITHOUT_CLASSIFICATION	0.9999993190686722	WITHOUT_CLASSIFICATION	6.80931327808486E-7	DESIGN
// line 661	WITHOUT_CLASSIFICATION	0.9999992881991546	WITHOUT_CLASSIFICATION	7.118008452821537E-7	DESIGN
// line 666	WITHOUT_CLASSIFICATION	0.9999986602227622	WITHOUT_CLASSIFICATION	1.3397772377929331E-6	DESIGN
// line 678	WITHOUT_CLASSIFICATION	0.9999994835218126	WITHOUT_CLASSIFICATION	5.164781873687972E-7	DESIGN
// line 682	WITHOUT_CLASSIFICATION	0.999999866986989	WITHOUT_CLASSIFICATION	1.3301301109711303E-7	DESIGN
// line 688	WITHOUT_CLASSIFICATION	0.9999993687470877	WITHOUT_CLASSIFICATION	6.31252912293652E-7	DESIGN
// line 699	WITHOUT_CLASSIFICATION	0.9999988724483906	WITHOUT_CLASSIFICATION	1.127551609433628E-6	DESIGN
// line 706	WITHOUT_CLASSIFICATION	0.9999972454427791	WITHOUT_CLASSIFICATION	2.7545572208183987E-6	DESIGN
// line 708	WITHOUT_CLASSIFICATION	0.9999996807426461	WITHOUT_CLASSIFICATION	3.192573539385849E-7	DESIGN
// line 727	WITHOUT_CLASSIFICATION	0.999999778947911	WITHOUT_CLASSIFICATION	2.210520889562585E-7	DESIGN
// line 737	WITHOUT_CLASSIFICATION	0.9999990492562336	WITHOUT_CLASSIFICATION	9.50743766413948E-7	DESIGN
// line 753	WITHOUT_CLASSIFICATION	0.9999991496288593	WITHOUT_CLASSIFICATION	8.503711408290797E-7	DESIGN
// line 779	WITHOUT_CLASSIFICATION	0.9999993429157666	WITHOUT_CLASSIFICATION	6.57084233336504E-7	DESIGN
// line 801	WITHOUT_CLASSIFICATION	0.9999996852937109	WITHOUT_CLASSIFICATION	3.147062891197879E-7	DESIGN
// line 808	WITHOUT_CLASSIFICATION	0.9999995979099744	WITHOUT_CLASSIFICATION	4.0209002568794026E-7	DESIGN
// line 811	WITHOUT_CLASSIFICATION	0.9999996088985632	WITHOUT_CLASSIFICATION	3.9110143679352976E-7	DESIGN
// line 817	WITHOUT_CLASSIFICATION	0.9999998175643859	WITHOUT_CLASSIFICATION	1.824356139334943E-7	DESIGN
// line 842	WITHOUT_CLASSIFICATION	0.9999998987445516	WITHOUT_CLASSIFICATION	1.0125544838726054E-7	DESIGN
// line 845	WITHOUT_CLASSIFICATION	0.9999996475454139	WITHOUT_CLASSIFICATION	3.5245458616965993E-7	DESIGN
// line 848	WITHOUT_CLASSIFICATION	0.9999995310532198	WITHOUT_CLASSIFICATION	4.689467802303366E-7	DESIGN
// line 893	WITHOUT_CLASSIFICATION	0.9999990520848299	WITHOUT_CLASSIFICATION	9.479151701291927E-7	DESIGN
// line 899	WITHOUT_CLASSIFICATION	0.9999995519403626	WITHOUT_CLASSIFICATION	4.4805963731162216E-7	DESIGN
// line 932	WITHOUT_CLASSIFICATION	0.9999997466471544	WITHOUT_CLASSIFICATION	2.533528456249618E-7	DESIGN
// line 944	WITHOUT_CLASSIFICATION	0.999999360501394	WITHOUT_CLASSIFICATION	6.394986059267489E-7	DESIGN
// line 960	WITHOUT_CLASSIFICATION	0.9999994671707257	WITHOUT_CLASSIFICATION	5.328292743652941E-7	DESIGN
// line 980	WITHOUT_CLASSIFICATION	0.9999998474666647	WITHOUT_CLASSIFICATION	1.5253333540234383E-7	DESIGN
// line 1004	WITHOUT_CLASSIFICATION	0.9999986181184087	WITHOUT_CLASSIFICATION	1.3818815913094718E-6	DESIGN
// line 1038	WITHOUT_CLASSIFICATION	0.9999984040662957	WITHOUT_CLASSIFICATION	1.5959337042609345E-6	DESIGN
// line 820	WITHOUT_CLASSIFICATION	0.9999999334124644	WITHOUT_CLASSIFICATION	6.658753564674585E-8	DESIGN
// line 826	WITHOUT_CLASSIFICATION	0.9999995348444615	WITHOUT_CLASSIFICATION	4.651555384519914E-7	DESIGN
// line 829	WITHOUT_CLASSIFICATION	0.9999998059502762	WITHOUT_CLASSIFICATION	1.940497238517024E-7	DESIGN
// line 832	WITHOUT_CLASSIFICATION	0.999999811947442	WITHOUT_CLASSIFICATION	1.8805255799044736E-7	DESIGN
// line 851	WITHOUT_CLASSIFICATION	0.9999997965315213	WITHOUT_CLASSIFICATION	2.0346847865807778E-7	DESIGN
// line 857	WITHOUT_CLASSIFICATION	0.9999997344072701	WITHOUT_CLASSIFICATION	2.655927298478408E-7	DESIGN
// line 860	WITHOUT_CLASSIFICATION	0.999999633021429	WITHOUT_CLASSIFICATION	3.6697857096923314E-7	DESIGN
// line 863	WITHOUT_CLASSIFICATION	0.9999980482938032	WITHOUT_CLASSIFICATION	1.951706196783574E-6	DESIGN
// line 866	WITHOUT_CLASSIFICATION	0.9999990624235624	WITHOUT_CLASSIFICATION	9.375764376437947E-7	DESIGN
// line 869	WITHOUT_CLASSIFICATION	0.9999991992761976	WITHOUT_CLASSIFICATION	8.007238022959982E-7	DESIGN
// line 875	WITHOUT_CLASSIFICATION	0.9999997274086982	WITHOUT_CLASSIFICATION	2.7259130174624343E-7	DESIGN
// line 884	WITHOUT_CLASSIFICATION	0.9999995484038525	WITHOUT_CLASSIFICATION	4.5159614735031334E-7	DESIGN
// line 887	WITHOUT_CLASSIFICATION	0.9999996708422113	WITHOUT_CLASSIFICATION	3.291577887583795E-7	DESIGN
// line 890	WITHOUT_CLASSIFICATION	0.999999855348612	WITHOUT_CLASSIFICATION	1.4465138797180256E-7	DESIGN
// line 902	WITHOUT_CLASSIFICATION	0.9999998776041307	WITHOUT_CLASSIFICATION	1.2239586932907824E-7	DESIGN
// line 909	WITHOUT_CLASSIFICATION	0.9999993376865866	WITHOUT_CLASSIFICATION	6.623134133988183E-7	DESIGN
// line 912	WITHOUT_CLASSIFICATION	0.9999999301868845	WITHOUT_CLASSIFICATION	6.981311551887093E-8	DESIGN
// line 916	WITHOUT_CLASSIFICATION	0.9999990317121331	WITHOUT_CLASSIFICATION	9.682878669128903E-7	DESIGN
// line 922	WITHOUT_CLASSIFICATION	0.9999998713163432	WITHOUT_CLASSIFICATION	1.2868365672039288E-7	DESIGN
// line 928	WITHOUT_CLASSIFICATION	0.9999998359590595	WITHOUT_CLASSIFICATION	1.640409406284373E-7	DESIGN
// line 941	WITHOUT_CLASSIFICATION	0.9999995310928086	WITHOUT_CLASSIFICATION	4.6890719143967067E-7	DESIGN
// line 947	WITHOUT_CLASSIFICATION	0.9999994381032289	WITHOUT_CLASSIFICATION	5.618967712170196E-7	DESIGN
// line 951	WITHOUT_CLASSIFICATION	0.9999997059375515	WITHOUT_CLASSIFICATION	2.9406244855622384E-7	DESIGN
// line 955	WITHOUT_CLASSIFICATION	0.999999535819666	WITHOUT_CLASSIFICATION	4.6418033402110156E-7	DESIGN
// line 965	WITHOUT_CLASSIFICATION	0.9999991121932795	WITHOUT_CLASSIFICATION	8.878067205949424E-7	DESIGN
// line 969	WITHOUT_CLASSIFICATION	0.9999988537504877	WITHOUT_CLASSIFICATION	1.146249512251081E-6	DESIGN
// line 977	WITHOUT_CLASSIFICATION	0.9999994955706984	WITHOUT_CLASSIFICATION	5.044293014314391E-7	DESIGN
// line 983	WITHOUT_CLASSIFICATION	0.9999990933847784	WITHOUT_CLASSIFICATION	9.06615221529263E-7	DESIGN
// line 1013	WITHOUT_CLASSIFICATION	0.9999939785096937	WITHOUT_CLASSIFICATION	6.021490306298071E-6	DESIGN
// line 1023	WITHOUT_CLASSIFICATION	0.9999988828365116	WITHOUT_CLASSIFICATION	1.117163488381967E-6	DESIGN
// line 1035	WITHOUT_CLASSIFICATION	0.9999983754387011	WITHOUT_CLASSIFICATION	1.6245612989854488E-6	DESIGN
// line 1041	WITHOUT_CLASSIFICATION	0.9999982331802448	WITHOUT_CLASSIFICATION	1.7668197551281154E-6	DESIGN
// line 1043	WITHOUT_CLASSIFICATION	0.9999973409189784	WITHOUT_CLASSIFICATION	2.659081021605337E-6	DESIGN
// line 1054	WITHOUT_CLASSIFICATION	0.9999992802698356	WITHOUT_CLASSIFICATION	7.197301644417594E-7	DESIGN
// line 1057	WITHOUT_CLASSIFICATION	0.9999994526182926	WITHOUT_CLASSIFICATION	5.4738170733157E-7	DESIGN
// line 1060	WITHOUT_CLASSIFICATION	0.9999978780637252	WITHOUT_CLASSIFICATION	2.121936274693706E-6	DESIGN
// line 1069	WITHOUT_CLASSIFICATION	0.9999970940702302	WITHOUT_CLASSIFICATION	2.9059297698175413E-6	DESIGN
// line 1075	WITHOUT_CLASSIFICATION	0.9999994360686799	WITHOUT_CLASSIFICATION	5.639313200782482E-7	DESIGN
// line 1105	WITHOUT_CLASSIFICATION	0.9999998440357757	WITHOUT_CLASSIFICATION	1.559642243188595E-7	DESIGN
// line 1111	WITHOUT_CLASSIFICATION	0.9999990463488834	WITHOUT_CLASSIFICATION	9.53651116701987E-7	DESIGN
// line 1122	WITHOUT_CLASSIFICATION	0.9999999193309934	WITHOUT_CLASSIFICATION	8.066900648978854E-8	DESIGN
// line 1130	WITHOUT_CLASSIFICATION	0.999999781297835	WITHOUT_CLASSIFICATION	2.1870216510786397E-7	DESIGN
// line 1140	WITHOUT_CLASSIFICATION	0.9999998394608877	WITHOUT_CLASSIFICATION	1.605391122553097E-7	DESIGN
// line 1158	WITHOUT_CLASSIFICATION	0.9999997543904436	WITHOUT_CLASSIFICATION	2.4560955635964645E-7	DESIGN
// line 1204	WITHOUT_CLASSIFICATION	0.9999997410865131	WITHOUT_CLASSIFICATION	2.5891348684773564E-7	DESIGN
// line 1207	WITHOUT_CLASSIFICATION	0.9999998586230044	WITHOUT_CLASSIFICATION	1.4137699553761384E-7	DESIGN
// line 1247	WITHOUT_CLASSIFICATION	0.9999997955837299	WITHOUT_CLASSIFICATION	2.0441627016869698E-7	DESIGN
// line 1251	WITHOUT_CLASSIFICATION	0.9999998071678292	WITHOUT_CLASSIFICATION	1.9283217074183627E-7	DESIGN
// line 1261	WITHOUT_CLASSIFICATION	0.999999449667329	WITHOUT_CLASSIFICATION	5.5033267090822E-7	DESIGN
// line 1078	WITHOUT_CLASSIFICATION	0.999999545958102	WITHOUT_CLASSIFICATION	4.540418978949378E-7	DESIGN
// line 1084	WITHOUT_CLASSIFICATION	0.999999308747529	WITHOUT_CLASSIFICATION	6.912524710028243E-7	DESIGN
// line 1087	WITHOUT_CLASSIFICATION	0.9999994968942126	WITHOUT_CLASSIFICATION	5.031057873499237E-7	DESIGN
// line 1090	WITHOUT_CLASSIFICATION	0.9999995789680888	WITHOUT_CLASSIFICATION	4.210319111396723E-7	DESIGN
// line 1093	WITHOUT_CLASSIFICATION	0.9999974687931621	WITHOUT_CLASSIFICATION	2.5312068378394267E-6	DESIGN
// line 1114	WITHOUT_CLASSIFICATION	0.999999486234486	WITHOUT_CLASSIFICATION	5.137655140407664E-7	DESIGN
// line 1116	WITHOUT_CLASSIFICATION	0.9999988103207792	WITHOUT_CLASSIFICATION	1.1896792208555077E-6	DESIGN
// line 1118	WITHOUT_CLASSIFICATION	0.9999997944622293	WITHOUT_CLASSIFICATION	2.0553777056465666E-7	DESIGN
// line 1124	WITHOUT_CLASSIFICATION	0.9999998484325293	WITHOUT_CLASSIFICATION	1.5156747063659715E-7	DESIGN
// line 1126	WITHOUT_CLASSIFICATION	0.9999995740165855	WITHOUT_CLASSIFICATION	4.2598341458783367E-7	DESIGN
// line 1138	WITHOUT_CLASSIFICATION	0.9999994166728859	WITHOUT_CLASSIFICATION	5.83327114110134E-7	DESIGN
// line 1144	WITHOUT_CLASSIFICATION	0.9999994889763165	WITHOUT_CLASSIFICATION	5.110236834417493E-7	DESIGN
// line 1149	WITHOUT_CLASSIFICATION	0.9999994809909588	WITHOUT_CLASSIFICATION	5.190090412083019E-7	DESIGN
// line 1155	WITHOUT_CLASSIFICATION	0.9999996352692647	WITHOUT_CLASSIFICATION	3.64730735281433E-7	DESIGN
// line 1162	WITHOUT_CLASSIFICATION	0.9999998229167194	WITHOUT_CLASSIFICATION	1.77083280579784E-7	DESIGN
// line 1173	WITHOUT_CLASSIFICATION	0.9999992974420292	WITHOUT_CLASSIFICATION	7.025579708085943E-7	DESIGN
// line 1179	WITHOUT_CLASSIFICATION	0.9999996223483254	WITHOUT_CLASSIFICATION	3.7765167460547946E-7	DESIGN
// line 1182	WITHOUT_CLASSIFICATION	0.9999999597397836	WITHOUT_CLASSIFICATION	4.026021634924663E-8	DESIGN
// line 1190	WITHOUT_CLASSIFICATION	0.9999998755437438	WITHOUT_CLASSIFICATION	1.24456256205236E-7	DESIGN
// line 1196	WITHOUT_CLASSIFICATION	0.999999123884869	WITHOUT_CLASSIFICATION	8.761151309233425E-7	DESIGN
// line 1213	WITHOUT_CLASSIFICATION	0.999999370494441	WITHOUT_CLASSIFICATION	6.295055589422061E-7	DESIGN
// line 1217	WITHOUT_CLASSIFICATION	0.9999997821118364	WITHOUT_CLASSIFICATION	2.1788816359903412E-7	DESIGN
// line 1231	WITHOUT_CLASSIFICATION	0.9999994756985822	WITHOUT_CLASSIFICATION	5.243014179066585E-7	DESIGN
// line 1236	WITHOUT_CLASSIFICATION	0.9999992087650862	WITHOUT_CLASSIFICATION	7.912349139208916E-7	DESIGN
// line 1244	WITHOUT_CLASSIFICATION	0.9999997678984202	WITHOUT_CLASSIFICATION	2.3210157987911496E-7	DESIGN
// line 1254	WITHOUT_CLASSIFICATION	0.9999998195995748	WITHOUT_CLASSIFICATION	1.804004251347503E-7	DESIGN
// line 1258	WITHOUT_CLASSIFICATION	0.9999998884868682	WITHOUT_CLASSIFICATION	1.1151313188834175E-7	DESIGN
// line 1264	WITHOUT_CLASSIFICATION	0.9999995813040706	WITHOUT_CLASSIFICATION	4.1869592939934074E-7	DESIGN
// line 1270	WITHOUT_CLASSIFICATION	0.9999999329603798	WITHOUT_CLASSIFICATION	6.703962008588337E-8	DESIGN
// line 1273	WITHOUT_CLASSIFICATION	0.9999996176205352	WITHOUT_CLASSIFICATION	3.823794648649288E-7	DESIGN
// line 1276	WITHOUT_CLASSIFICATION	0.9999996345436	WITHOUT_CLASSIFICATION	3.654564000429234E-7	DESIGN
// line 1279	WITHOUT_CLASSIFICATION	0.9999997803829206	WITHOUT_CLASSIFICATION	2.1961707933332877E-7	DESIGN
// line 1282	WITHOUT_CLASSIFICATION	0.9999999282331731	WITHOUT_CLASSIFICATION	7.176682691529168E-8	DESIGN
// line 1289	WITHOUT_CLASSIFICATION	0.9999998507574474	WITHOUT_CLASSIFICATION	1.4924255261555107E-7	DESIGN
// line 1292	WITHOUT_CLASSIFICATION	0.9999998838120813	WITHOUT_CLASSIFICATION	1.1618791874150265E-7	DESIGN
// line 1295	WITHOUT_CLASSIFICATION	0.9999998324071618	WITHOUT_CLASSIFICATION	1.6759283818476545E-7	DESIGN
// line 1298	WITHOUT_CLASSIFICATION	0.9999998642784594	WITHOUT_CLASSIFICATION	1.3572154062488117E-7	DESIGN
// line 1305	WITHOUT_CLASSIFICATION	0.9999994551622274	WITHOUT_CLASSIFICATION	5.44837772609492E-7	DESIGN
// line 1348	WITHOUT_CLASSIFICATION	0.9999992908276424	WITHOUT_CLASSIFICATION	7.091723575283926E-7	DESIGN
// line 1387	WITHOUT_CLASSIFICATION	0.9999993427607476	WITHOUT_CLASSIFICATION	6.572392523728726E-7	DESIGN
// line 1392	WITHOUT_CLASSIFICATION	0.9999997137323875	WITHOUT_CLASSIFICATION	2.8626761256100565E-7	DESIGN
// line 1448	WITHOUT_CLASSIFICATION	0.9999995014003997	WITHOUT_CLASSIFICATION	4.985996002446641E-7	DESIGN
// line 1462	WITHOUT_CLASSIFICATION	0.9999997887821481	WITHOUT_CLASSIFICATION	2.112178518008248E-7	DESIGN
// line 1470	WITHOUT_CLASSIFICATION	0.9999997381250262	WITHOUT_CLASSIFICATION	2.618749738050104E-7	DESIGN
// line 1496	WITHOUT_CLASSIFICATION	0.9999984886477998	WITHOUT_CLASSIFICATION	1.5113522000957085E-6	DESIGN
// line 1502	WITHOUT_CLASSIFICATION	0.9999999021190649	WITHOUT_CLASSIFICATION	9.788093506171476E-8	DESIGN
// line 1595	WITHOUT_CLASSIFICATION	0.9999994198307689	WITHOUT_CLASSIFICATION	5.801692310490981E-7	DESIGN
// line 1598	WITHOUT_CLASSIFICATION	0.9999996254780185	WITHOUT_CLASSIFICATION	3.745219815097172E-7	DESIGN
// line 1308	WITHOUT_CLASSIFICATION	0.9999994760890771	WITHOUT_CLASSIFICATION	5.239109228157243E-7	DESIGN
// line 1311	WITHOUT_CLASSIFICATION	0.9999980468684907	WITHOUT_CLASSIFICATION	1.953131509357734E-6	DESIGN
// line 1317	WITHOUT_CLASSIFICATION	0.9999990875039484	WITHOUT_CLASSIFICATION	9.12496051697978E-7	DESIGN
// line 1323	WITHOUT_CLASSIFICATION	0.9999992643440897	WITHOUT_CLASSIFICATION	7.356559102495529E-7	DESIGN
// line 1326	WITHOUT_CLASSIFICATION	0.9999984837239839	WITHOUT_CLASSIFICATION	1.5162760160342117E-6	DESIGN
// line 1329	WITHOUT_CLASSIFICATION	0.9999993684110197	WITHOUT_CLASSIFICATION	6.31588980236564E-7	DESIGN
// line 1337	WITHOUT_CLASSIFICATION	0.9999990524585064	WITHOUT_CLASSIFICATION	9.475414936773736E-7	DESIGN
// line 1342	WITHOUT_CLASSIFICATION	0.9999997690356882	WITHOUT_CLASSIFICATION	2.309643118845338E-7	DESIGN
// line 1345	WITHOUT_CLASSIFICATION	0.9999992287322855	WITHOUT_CLASSIFICATION	7.712677143305971E-7	DESIGN
// line 1354	WITHOUT_CLASSIFICATION	0.9999991328987441	WITHOUT_CLASSIFICATION	8.671012559297231E-7	DESIGN
// line 1359	WITHOUT_CLASSIFICATION	0.9999989192261307	WITHOUT_CLASSIFICATION	1.0807738693604484E-6	DESIGN
// line 1366	WITHOUT_CLASSIFICATION	0.9999976556477581	WITHOUT_CLASSIFICATION	2.344352241846181E-6	DESIGN
// line 1369	WITHOUT_CLASSIFICATION	0.9999980144424838	WITHOUT_CLASSIFICATION	1.9855575162367607E-6	DESIGN
// line 1373	WITHOUT_CLASSIFICATION	0.9999988733840149	WITHOUT_CLASSIFICATION	1.126615985136339E-6	DESIGN
// line 1377	WITHOUT_CLASSIFICATION	0.9999990602492173	WITHOUT_CLASSIFICATION	9.397507827135593E-7	DESIGN
// line 1383	WITHOUT_CLASSIFICATION	0.9999988594494309	WITHOUT_CLASSIFICATION	1.140550569163013E-6	DESIGN
// line 1399	WITHOUT_CLASSIFICATION	0.9999985779989264	WITHOUT_CLASSIFICATION	1.4220010735692246E-6	DESIGN
// line 1401	WITHOUT_CLASSIFICATION	0.9999992277741456	WITHOUT_CLASSIFICATION	7.722258544822015E-7	DESIGN
// line 1406	WITHOUT_CLASSIFICATION	0.9999977879933998	WITHOUT_CLASSIFICATION	2.212006600242592E-6	DESIGN
// line 1417	WITHOUT_CLASSIFICATION	0.9999994563962709	WITHOUT_CLASSIFICATION	5.43603729185244E-7	DESIGN
// line 1424	WITHOUT_CLASSIFICATION	0.9999996878684924	WITHOUT_CLASSIFICATION	3.121315075937349E-7	DESIGN
// line 1427	WITHOUT_CLASSIFICATION	0.999999777524424	WITHOUT_CLASSIFICATION	2.224755759841071E-7	DESIGN
// line 1430	WITHOUT_CLASSIFICATION	0.9999996951478443	WITHOUT_CLASSIFICATION	3.0485215567415857E-7	DESIGN
// line 1433	WITHOUT_CLASSIFICATION	0.9999984454873	WITHOUT_CLASSIFICATION	1.5545126999623598E-6	DESIGN
// line 1436	WITHOUT_CLASSIFICATION	0.9999976088564833	WITHOUT_CLASSIFICATION	2.3911435167331347E-6	DESIGN
// line 1442	WITHOUT_CLASSIFICATION	0.9999998464971973	WITHOUT_CLASSIFICATION	1.5350280268364184E-7	DESIGN
// line 1445	WITHOUT_CLASSIFICATION	0.9999994656805077	WITHOUT_CLASSIFICATION	5.343194923808278E-7	DESIGN
// line 1458	WITHOUT_CLASSIFICATION	0.9999996591810856	WITHOUT_CLASSIFICATION	3.4081891433549073E-7	DESIGN
// line 1464	WITHOUT_CLASSIFICATION	0.9999989652766343	WITHOUT_CLASSIFICATION	1.0347233657495991E-6	DESIGN
// line 1489	WITHOUT_CLASSIFICATION	0.9999995240538581	WITHOUT_CLASSIFICATION	4.7594614188994364E-7	DESIGN
// line 1493	WITHOUT_CLASSIFICATION	0.9999984648707605	WITHOUT_CLASSIFICATION	1.5351292395243977E-6	DESIGN
// line 1507	WITHOUT_CLASSIFICATION	0.9999996733292775	WITHOUT_CLASSIFICATION	3.266707225343598E-7	DESIGN
// line 1519	WITHOUT_CLASSIFICATION	0.9999995831788984	WITHOUT_CLASSIFICATION	4.1682110164067906E-7	DESIGN
// line 1532	WITHOUT_CLASSIFICATION	0.999999824856305	WITHOUT_CLASSIFICATION	1.751436950315636E-7	DESIGN
// line 1538	WITHOUT_CLASSIFICATION	0.9999994953419334	WITHOUT_CLASSIFICATION	5.046580665281412E-7	DESIGN
// line 1542	WITHOUT_CLASSIFICATION	0.9999998837568204	WITHOUT_CLASSIFICATION	1.1624317954981699E-7	DESIGN
// line 1557	WITHOUT_CLASSIFICATION	0.9999995924133852	WITHOUT_CLASSIFICATION	4.0758661475945266E-7	DESIGN
// line 1573	WITHOUT_CLASSIFICATION	0.9999991113237557	WITHOUT_CLASSIFICATION	8.886762442387886E-7	DESIGN
// line 1591	WITHOUT_CLASSIFICATION	0.9999991216460946	WITHOUT_CLASSIFICATION	8.783539053855838E-7	DESIGN
// line 1615	WITHOUT_CLASSIFICATION	0.999998629898288	WITHOUT_CLASSIFICATION	1.3701017120430164E-6	DESIGN
// line 1629	WITHOUT_CLASSIFICATION	0.9999992843493611	WITHOUT_CLASSIFICATION	7.156506387881918E-7	DESIGN
// line 1632	WITHOUT_CLASSIFICATION	0.9999991110249102	WITHOUT_CLASSIFICATION	8.889750897171016E-7	DESIGN
// line 1705	WITHOUT_CLASSIFICATION	0.9999997323117515	WITHOUT_CLASSIFICATION	2.6768824839306536E-7	DESIGN
// line 1716	WITHOUT_CLASSIFICATION	0.9999987274449981	WITHOUT_CLASSIFICATION	1.2725550019532723E-6	DESIGN
// line 1725	WITHOUT_CLASSIFICATION	0.999999844264807	WITHOUT_CLASSIFICATION	1.5573519297222176E-7	DESIGN
// line 1742	WITHOUT_CLASSIFICATION	0.99999990424114	WITHOUT_CLASSIFICATION	9.575886000539019E-8	DESIGN
// line 1749	WITHOUT_CLASSIFICATION	0.9999995265846126	WITHOUT_CLASSIFICATION	4.734153873896013E-7	DESIGN
// line 1818	WITHOUT_CLASSIFICATION	0.9999996813160545	WITHOUT_CLASSIFICATION	3.186839454626371E-7	DESIGN
// line 1822	WITHOUT_CLASSIFICATION	0.9999999444927737	WITHOUT_CLASSIFICATION	5.5507226291168986E-8	DESIGN
// line 1607	WITHOUT_CLASSIFICATION	0.9999984310125752	WITHOUT_CLASSIFICATION	1.5689874248185272E-6	DESIGN
// line 1610	WITHOUT_CLASSIFICATION	0.9999996477375572	WITHOUT_CLASSIFICATION	3.522624427731096E-7	DESIGN
// line 1622	WITHOUT_CLASSIFICATION	0.9999996798873431	WITHOUT_CLASSIFICATION	3.201126569133923E-7	DESIGN
// line 1625	WITHOUT_CLASSIFICATION	0.9999995349650704	WITHOUT_CLASSIFICATION	4.650349295784471E-7	DESIGN
// line 1636	WITHOUT_CLASSIFICATION	0.9999952591754532	WITHOUT_CLASSIFICATION	4.740824546846593E-6	DESIGN
// line 1639	WITHOUT_CLASSIFICATION	0.9999953230724264	WITHOUT_CLASSIFICATION	4.676927573522102E-6	DESIGN
// line 1647	WITHOUT_CLASSIFICATION	0.9999986349636106	WITHOUT_CLASSIFICATION	1.3650363893143653E-6	DESIGN
// line 1651	WITHOUT_CLASSIFICATION	0.9999984484028539	WITHOUT_CLASSIFICATION	1.5515971461381753E-6	DESIGN
// line 1657	WITHOUT_CLASSIFICATION	0.9999988980627109	WITHOUT_CLASSIFICATION	1.1019372891406924E-6	DESIGN
// line 1660	WITHOUT_CLASSIFICATION	0.9999992083238133	WITHOUT_CLASSIFICATION	7.916761866372092E-7	DESIGN
// line 1663	WITHOUT_CLASSIFICATION	0.9999958016515368	WITHOUT_CLASSIFICATION	4.198348463235331E-6	DESIGN
// line 1678	WITHOUT_CLASSIFICATION	0.9999992016010022	WITHOUT_CLASSIFICATION	7.98398997854883E-7	DESIGN
// line 1702	WITHOUT_CLASSIFICATION	0.9999998984961368	WITHOUT_CLASSIFICATION	1.0150386326084341E-7	DESIGN
// line 1711	WITHOUT_CLASSIFICATION	0.9999993426487166	WITHOUT_CLASSIFICATION	6.573512833486166E-7	DESIGN
// line 1719	WITHOUT_CLASSIFICATION	0.9999995732872594	WITHOUT_CLASSIFICATION	4.267127404836389E-7	DESIGN
// line 1722	WITHOUT_CLASSIFICATION	0.9999998931950349	WITHOUT_CLASSIFICATION	1.0680496511030514E-7	DESIGN
// line 1731	WITHOUT_CLASSIFICATION	0.9999989057751247	WITHOUT_CLASSIFICATION	1.094224875261019E-6	DESIGN
// line 1734	WITHOUT_CLASSIFICATION	0.9999992436933387	WITHOUT_CLASSIFICATION	7.563066613503249E-7	DESIGN
// line 1738	WITHOUT_CLASSIFICATION	0.9999994219593845	WITHOUT_CLASSIFICATION	5.780406154330177E-7	DESIGN
// line 1746	WITHOUT_CLASSIFICATION	0.9999991062202596	WITHOUT_CLASSIFICATION	8.937797403490733E-7	DESIGN
// line 1756	WITHOUT_CLASSIFICATION	0.999999039581144	WITHOUT_CLASSIFICATION	9.604188559932008E-7	DESIGN
// line 1758	WITHOUT_CLASSIFICATION	0.9999997428110949	WITHOUT_CLASSIFICATION	2.5718890499600834E-7	DESIGN
// line 1761	WITHOUT_CLASSIFICATION	0.9999990013727456	WITHOUT_CLASSIFICATION	9.986272545075324E-7	DESIGN
// line 1767	WITHOUT_CLASSIFICATION	0.9999991250835935	WITHOUT_CLASSIFICATION	8.74916406591239E-7	DESIGN
// line 1776	WITHOUT_CLASSIFICATION	0.99999882428794	WITHOUT_CLASSIFICATION	1.1757120601034087E-6	DESIGN
// line 1782	WITHOUT_CLASSIFICATION	0.9999999365005794	WITHOUT_CLASSIFICATION	6.349942060464815E-8	DESIGN
// line 1785	WITHOUT_CLASSIFICATION	0.9999997590455848	WITHOUT_CLASSIFICATION	2.4095441514992544E-7	DESIGN
// line 1788	WITHOUT_CLASSIFICATION	0.9999997036421259	WITHOUT_CLASSIFICATION	2.96357874109877E-7	DESIGN
// line 1791	WITHOUT_CLASSIFICATION	0.9999992401454192	WITHOUT_CLASSIFICATION	7.598545807586461E-7	DESIGN
// line 1797	WITHOUT_CLASSIFICATION	0.9999994601397917	WITHOUT_CLASSIFICATION	5.398602082192501E-7	DESIGN
// line 1800	WITHOUT_CLASSIFICATION	0.9999998829123716	WITHOUT_CLASSIFICATION	1.1708762836897734E-7	DESIGN
// line 1803	WITHOUT_CLASSIFICATION	0.9999990107416459	WITHOUT_CLASSIFICATION	9.892583540915513E-7	DESIGN
// line 1806	WITHOUT_CLASSIFICATION	0.99999878792746	WITHOUT_CLASSIFICATION	1.212072539922447E-6	DESIGN
// line 1809	WITHOUT_CLASSIFICATION	0.999999656598766	WITHOUT_CLASSIFICATION	3.434012339803067E-7	DESIGN
// line 1815	WITHOUT_CLASSIFICATION	0.9999997240139578	WITHOUT_CLASSIFICATION	2.7598604224381077E-7	DESIGN
// line 1825	WITHOUT_CLASSIFICATION	0.9999999164502834	WITHOUT_CLASSIFICATION	8.354971664186086E-8	DESIGN
// line 1828	WITHOUT_CLASSIFICATION	0.9999998887981891	WITHOUT_CLASSIFICATION	1.1120181085811111E-7	DESIGN
// line 1831	WITHOUT_CLASSIFICATION	0.9999992823985425	WITHOUT_CLASSIFICATION	7.176014575544104E-7	DESIGN
// line 1847	WITHOUT_CLASSIFICATION	0.9999997150628077	WITHOUT_CLASSIFICATION	2.849371922053813E-7	DESIGN
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9993960934048375	WITHOUT_CLASSIFICATION	6.039065951625888E-4	DESIGN
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9992579542389386	WITHOUT_CLASSIFICATION	7.42045761061404E-4	DESIGN
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999991742824212	WITHOUT_CLASSIFICATION	8.257175787501777E-7	DESIGN
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999995409384098	WITHOUT_CLASSIFICATION	4.590615900922987E-7	DESIGN
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999864991058077	WITHOUT_CLASSIFICATION	1.3500894192210504E-5	DESIGN
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9990207222657944	WITHOUT_CLASSIFICATION	9.792777342055865E-4	DESIGN
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999903028023486	WITHOUT_CLASSIFICATION	9.697197651515994E-6	DESIGN
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999999934866978	WITHOUT_CLASSIFICATION	6.513302214005375E-9	DESIGN
// line 1854	WITHOUT_CLASSIFICATION	0.999999764007855	WITHOUT_CLASSIFICATION	2.359921451140406E-7	DESIGN
// line 1869	WITHOUT_CLASSIFICATION	0.9999994613759356	WITHOUT_CLASSIFICATION	5.386240644513414E-7	DESIGN
// line 1872	WITHOUT_CLASSIFICATION	0.9999999492358431	WITHOUT_CLASSIFICATION	5.076415690822488E-8	DESIGN
// line 1877	WITHOUT_CLASSIFICATION	0.9999997577428856	WITHOUT_CLASSIFICATION	2.422571142929783E-7	DESIGN
// line 1886	WITHOUT_CLASSIFICATION	0.9999993860565544	WITHOUT_CLASSIFICATION	6.139434456066092E-7	DESIGN
// line 1898	WITHOUT_CLASSIFICATION	0.9999997436723151	WITHOUT_CLASSIFICATION	2.563276848231628E-7	DESIGN
// line 1902	WITHOUT_CLASSIFICATION	0.999999907689965	WITHOUT_CLASSIFICATION	9.231003497648772E-8	DESIGN
// line 1905	WITHOUT_CLASSIFICATION	0.9999997156929703	WITHOUT_CLASSIFICATION	2.8430702962100597E-7	DESIGN
// line 1911	WITHOUT_CLASSIFICATION	0.9999990197731382	WITHOUT_CLASSIFICATION	9.802268617807658E-7	DESIGN
// line 1918	WITHOUT_CLASSIFICATION	0.999999734647878	WITHOUT_CLASSIFICATION	2.653521221176274E-7	DESIGN
// line 1935	WITHOUT_CLASSIFICATION	0.9999993184429872	WITHOUT_CLASSIFICATION	6.81557012963904E-7	DESIGN
// line 1938	WITHOUT_CLASSIFICATION	0.9999993305655397	WITHOUT_CLASSIFICATION	6.694344603220748E-7	DESIGN
// line 1942	WITHOUT_CLASSIFICATION	0.9999998808170625	WITHOUT_CLASSIFICATION	1.1918293748698919E-7	DESIGN
// line 1948	WITHOUT_CLASSIFICATION	0.9999996346883936	WITHOUT_CLASSIFICATION	3.6531160631502996E-7	DESIGN
// line 1960	WITHOUT_CLASSIFICATION	0.9999995319547453	WITHOUT_CLASSIFICATION	4.6804525463887063E-7	DESIGN
// line 1963	WITHOUT_CLASSIFICATION	0.9999975196416117	WITHOUT_CLASSIFICATION	2.480358388230676E-6	DESIGN
// line 1968	WITHOUT_CLASSIFICATION	0.9999994036028016	WITHOUT_CLASSIFICATION	5.963971984586247E-7	DESIGN
// line 1972	WITHOUT_CLASSIFICATION	0.9999999094823364	WITHOUT_CLASSIFICATION	9.051766368701873E-8	DESIGN
// line 1982	WITHOUT_CLASSIFICATION	0.999999932025374	WITHOUT_CLASSIFICATION	6.797462595531873E-8	DESIGN
// line 1995	WITHOUT_CLASSIFICATION	0.9999995935214311	WITHOUT_CLASSIFICATION	4.0647856883941846E-7	DESIGN
// line 2000	WITHOUT_CLASSIFICATION	0.999999911400639	WITHOUT_CLASSIFICATION	8.859936101084443E-8	DESIGN
// line 2006	WITHOUT_CLASSIFICATION	0.9999990324500948	WITHOUT_CLASSIFICATION	9.67549905259125E-7	DESIGN
// line 2010	WITHOUT_CLASSIFICATION	0.9999999707027832	WITHOUT_CLASSIFICATION	2.9297216781144898E-8	DESIGN
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9999853923694034	WITHOUT_CLASSIFICATION	1.4607630596440856E-5	DESIGN
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.999954646150659	WITHOUT_CLASSIFICATION	4.535384934095998E-5	DESIGN
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9999984202548388	WITHOUT_CLASSIFICATION	1.5797451611651038E-6	DESIGN
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9998731737878646	WITHOUT_CLASSIFICATION	1.2682621213547474E-4	DESIGN
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999999966840039	WITHOUT_CLASSIFICATION	3.3159962561972617E-9	DESIGN
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9999891845540979	WITHOUT_CLASSIFICATION	1.0815445902049568E-5	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999993807702773	WITHOUT_CLASSIFICATION	6.192297226463267E-7	DESIGN
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999999975502486	WITHOUT_CLASSIFICATION	2.4497514108086357E-9	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999988977482851	WITHOUT_CLASSIFICATION	1.1022517149118797E-6	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999988977482851	WITHOUT_CLASSIFICATION	1.1022517149118797E-6	DESIGN
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.670853294414551	DESIGN	0.3291467055854491	WITHOUT_CLASSIFICATION
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999947686590633	WITHOUT_CLASSIFICATION	5.231340936699592E-6	DESIGN
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999999981041588	WITHOUT_CLASSIFICATION	1.8958411301844826E-9	DESIGN
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999999333590937	WITHOUT_CLASSIFICATION	6.66409063049828E-8	DESIGN
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999641253780189	WITHOUT_CLASSIFICATION	3.587462198103177E-5	DESIGN
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999999503195588	WITHOUT_CLASSIFICATION	4.968044125722941E-8	DESIGN
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9610221130536765	WITHOUT_CLASSIFICATION	0.03897788694632355	DESIGN
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999962421110348	WITHOUT_CLASSIFICATION	3.7578889651801154E-6	DESIGN
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.999964225551801	WITHOUT_CLASSIFICATION	3.577444819894394E-5	DESIGN
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999968954552253	WITHOUT_CLASSIFICATION	3.1045447746504117E-6	DESIGN
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9390903773886813	WITHOUT_CLASSIFICATION	0.06090962261131868	DESIGN
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9985785726587743	WITHOUT_CLASSIFICATION	0.0014214273412257502	DESIGN
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999992641040827	WITHOUT_CLASSIFICATION	7.358959173644094E-7	DESIGN
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999955263277057	WITHOUT_CLASSIFICATION	4.4736722943338704E-6	DESIGN
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999406031020865	WITHOUT_CLASSIFICATION	5.9396897913587625E-5	DESIGN
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999406031020865	WITHOUT_CLASSIFICATION	5.9396897913587625E-5	DESIGN
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9582104930504455	WITHOUT_CLASSIFICATION	0.041789506949554564	DESIGN
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999983728208668	WITHOUT_CLASSIFICATION	1.6271791332156803E-6	DESIGN
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999999995593264	WITHOUT_CLASSIFICATION	4.406736288850536E-10	DESIGN
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9999703581188638	WITHOUT_CLASSIFICATION	2.964188113626366E-5	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9992290438497133	WITHOUT_CLASSIFICATION	7.709561502867068E-4	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999998201592788	WITHOUT_CLASSIFICATION	1.798407211860834E-7	DESIGN
// source extensions	WITHOUT_CLASSIFICATION	0.9999988483523435	WITHOUT_CLASSIFICATION	1.1516476564289337E-6	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999998201592788	WITHOUT_CLASSIFICATION	1.798407211860834E-7	DESIGN
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.990688183684115	WITHOUT_CLASSIFICATION	0.009311816315885056	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9995517906338779	WITHOUT_CLASSIFICATION	4.4820936612220724E-4	DESIGN
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.8123804945722013	WITHOUT_CLASSIFICATION	0.18761950542779865	DESIGN
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.6941604558869683	DESIGN	0.30583954411303166	WITHOUT_CLASSIFICATION
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9969329990129795	WITHOUT_CLASSIFICATION	0.003067000987020554	DESIGN
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9969149754409851	WITHOUT_CLASSIFICATION	0.0030850245590149645	DESIGN
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9999758217526117	WITHOUT_CLASSIFICATION	2.4178247388331837E-5	DESIGN
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999999549202135	WITHOUT_CLASSIFICATION	4.5079786402012446E-8	DESIGN
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999999881929303	WITHOUT_CLASSIFICATION	1.1807069704611466E-8	DESIGN
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9963325772780015	WITHOUT_CLASSIFICATION	0.003667422721998442	DESIGN
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.8565539812044632	DESIGN	0.1434460187955367	WITHOUT_CLASSIFICATION
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999976058073253	WITHOUT_CLASSIFICATION	2.394192674722273E-6	DESIGN
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999972120433536	WITHOUT_CLASSIFICATION	2.7879566463925776E-6	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9996957779003889	WITHOUT_CLASSIFICATION	3.042220996111769E-4	DESIGN
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999999990460255	WITHOUT_CLASSIFICATION	9.539743620093565E-10	DESIGN
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999999990460255	WITHOUT_CLASSIFICATION	9.539743620093565E-10	DESIGN
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999916977132899	WITHOUT_CLASSIFICATION	8.302286710119584E-6	DESIGN
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999970447347611	WITHOUT_CLASSIFICATION	2.9552652387474797E-6	DESIGN
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999998449002105	WITHOUT_CLASSIFICATION	1.5509978944757693E-7	DESIGN
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9999996253782847	WITHOUT_CLASSIFICATION	3.7462171529953904E-7	DESIGN
// required and optional only	WITHOUT_CLASSIFICATION	0.9999998448862809	WITHOUT_CLASSIFICATION	1.5511371919806005E-7	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999998201592788	WITHOUT_CLASSIFICATION	1.798407211860834E-7	DESIGN
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999993767921143	WITHOUT_CLASSIFICATION	6.232078857768364E-7	DESIGN
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999999999789811	WITHOUT_CLASSIFICATION	2.1018843745188712E-11	DESIGN
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999787189219842	WITHOUT_CLASSIFICATION	2.1281078015823827E-5	DESIGN
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999989391977647	WITHOUT_CLASSIFICATION	1.060802235368056E-6	DESIGN
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999999098052577	WITHOUT_CLASSIFICATION	9.019474239801595E-8	DESIGN
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999999997334709	WITHOUT_CLASSIFICATION	2.665291730697344E-10	DESIGN
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999999975020579	WITHOUT_CLASSIFICATION	2.4979421086328146E-9	DESIGN
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999999371089016	WITHOUT_CLASSIFICATION	6.289109836665886E-8	DESIGN
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9998444214087284	WITHOUT_CLASSIFICATION	1.555785912716017E-4	DESIGN
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.8571475571665585	DESIGN	0.1428524428334414	WITHOUT_CLASSIFICATION
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999787874480481	WITHOUT_CLASSIFICATION	2.1212551951838536E-5	DESIGN
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.999999761122908	WITHOUT_CLASSIFICATION	2.388770920554664E-7	DESIGN
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9456756247569302	WITHOUT_CLASSIFICATION	0.054324375243069795	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999831861932276	WITHOUT_CLASSIFICATION	1.681380677239297E-5	DESIGN
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9916214041823214	DESIGN	0.008378595817678663	WITHOUT_CLASSIFICATION
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9997607975149285	WITHOUT_CLASSIFICATION	2.3920248507143773E-4	DESIGN
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999976880258757	WITHOUT_CLASSIFICATION	2.311974124388742E-6	DESIGN
// id must always be even	WITHOUT_CLASSIFICATION	0.9998612231601466	WITHOUT_CLASSIFICATION	1.387768398534823E-4	DESIGN
// with block pass	WITHOUT_CLASSIFICATION	0.9999988973027243	WITHOUT_CLASSIFICATION	1.1026972757829191E-6	DESIGN
// no block	WITHOUT_CLASSIFICATION	0.9999963105422017	WITHOUT_CLASSIFICATION	3.6894577982389683E-6	DESIGN
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999977255488793	WITHOUT_CLASSIFICATION	2.2744511206643636E-6	DESIGN
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9999983565290314	WITHOUT_CLASSIFICATION	1.6434709686821473E-6	DESIGN
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9998829188159684	WITHOUT_CLASSIFICATION	1.1708118403171716E-4	DESIGN
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999990257223952	WITHOUT_CLASSIFICATION	9.742776048629783E-7	DESIGN
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999996256665339	WITHOUT_CLASSIFICATION	3.743334661382838E-7	DESIGN
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999876195014628	WITHOUT_CLASSIFICATION	1.2380498537297204E-5	DESIGN
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9989660862664269	WITHOUT_CLASSIFICATION	0.0010339137335730597	DESIGN
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999983151552287	WITHOUT_CLASSIFICATION	1.684844771193286E-6	DESIGN
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9779505807251133	WITHOUT_CLASSIFICATION	0.02204941927488668	DESIGN
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999844718119177	WITHOUT_CLASSIFICATION	1.5528188082305706E-5	DESIGN
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999960902123448	WITHOUT_CLASSIFICATION	3.909787655253239E-6	DESIGN
// Lastline	WITHOUT_CLASSIFICATION	0.9999996634626047	WITHOUT_CLASSIFICATION	3.3653739527864006E-7	DESIGN
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9999886912499183	WITHOUT_CLASSIFICATION	1.1308750081674648E-5	DESIGN
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999992167946675	WITHOUT_CLASSIFICATION	7.832053324958624E-7	DESIGN
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9990558831419877	WITHOUT_CLASSIFICATION	9.441168580123331E-4	DESIGN
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9996619401816373	WITHOUT_CLASSIFICATION	3.380598183626512E-4	DESIGN
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999923104236629	WITHOUT_CLASSIFICATION	7.689576337099866E-6	DESIGN
// silently ignore	WITHOUT_CLASSIFICATION	0.9999122882613635	WITHOUT_CLASSIFICATION	8.771173863651399E-5	DESIGN
// used by compiler	WITHOUT_CLASSIFICATION	0.9996204061891123	WITHOUT_CLASSIFICATION	3.7959381088761374E-4	DESIGN
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9957226225126234	WITHOUT_CLASSIFICATION	0.004277377487376554	DESIGN
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999999934866978	WITHOUT_CLASSIFICATION	6.513302214005375E-9	DESIGN
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999999988590137	WITHOUT_CLASSIFICATION	1.1409863646559454E-9	DESIGN
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999783479381144	WITHOUT_CLASSIFICATION	2.165206188568384E-5	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999879148132546	WITHOUT_CLASSIFICATION	1.208518674539991E-5	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999999601538759	WITHOUT_CLASSIFICATION	3.9846124138687555E-8	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9995517906338779	WITHOUT_CLASSIFICATION	4.4820936612220724E-4	DESIGN
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.999959567780886	WITHOUT_CLASSIFICATION	4.043221911405889E-5	DESIGN
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9994702194917467	DESIGN	5.297805082532358E-4	WITHOUT_CLASSIFICATION
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.995514134219188	WITHOUT_CLASSIFICATION	0.004485865780812017	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999965283171461	WITHOUT_CLASSIFICATION	3.471682853729415E-6	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999965283171461	WITHOUT_CLASSIFICATION	3.471682853729415E-6	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.999979450344924	WITHOUT_CLASSIFICATION	2.0549655076092545E-5	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.999979450344924	WITHOUT_CLASSIFICATION	2.0549655076092545E-5	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.999979450344924	WITHOUT_CLASSIFICATION	2.0549655076092545E-5	DESIGN
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999364611069612	WITHOUT_CLASSIFICATION	6.353889303867894E-5	DESIGN
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999364611069612	WITHOUT_CLASSIFICATION	6.353889303867894E-5	DESIGN
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999987727191272	WITHOUT_CLASSIFICATION	1.2272808727994927E-6	DESIGN
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999987727191272	WITHOUT_CLASSIFICATION	1.2272808727994927E-6	DESIGN
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999999999438481	WITHOUT_CLASSIFICATION	5.615189167085264E-11	DESIGN
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999999476774125	WITHOUT_CLASSIFICATION	5.2322587558064165E-8	DESIGN
// prefill ?	WITHOUT_CLASSIFICATION	0.9999997267135368	WITHOUT_CLASSIFICATION	2.732864631907755E-7	DESIGN
// prefill ?	WITHOUT_CLASSIFICATION	0.9999997267135368	WITHOUT_CLASSIFICATION	2.732864631907755E-7	DESIGN
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999451656043666	WITHOUT_CLASSIFICATION	5.483439563331829E-5	DESIGN
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9991734869705376	WITHOUT_CLASSIFICATION	8.265130294623954E-4	DESIGN
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.999925526807933	WITHOUT_CLASSIFICATION	7.447319206704448E-5	DESIGN
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999988478002154	WITHOUT_CLASSIFICATION	1.1521997846104465E-6	DESIGN
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999998815484002	WITHOUT_CLASSIFICATION	1.1845159983663708E-7	DESIGN
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9879692217783376	WITHOUT_CLASSIFICATION	0.012030778221662422	DESIGN
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999992301397339	WITHOUT_CLASSIFICATION	7.698602659998791E-7	DESIGN
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9997062088744515	WITHOUT_CLASSIFICATION	2.9379112554843895E-4	DESIGN
// caller	WITHOUT_CLASSIFICATION	0.9999986869519604	WITHOUT_CLASSIFICATION	1.313048039672145E-6	DESIGN
// calltype // block	WITHOUT_CLASSIFICATION	0.9999963542645905	WITHOUT_CLASSIFICATION	3.6457354094794106E-6	DESIGN
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9975178346051918	WITHOUT_CLASSIFICATION	0.002482165394808157	DESIGN
// load arity for check	WITHOUT_CLASSIFICATION	0.9999930617088576	WITHOUT_CLASSIFICATION	6.938291142366677E-6	DESIGN
// throw	WITHOUT_CLASSIFICATION	0.9999964172455078	WITHOUT_CLASSIFICATION	3.5827544921531104E-6	DESIGN
// load arity for error	WITHOUT_CLASSIFICATION	0.9989716707631006	WITHOUT_CLASSIFICATION	0.0010283292368994399	DESIGN
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999427774776273	WITHOUT_CLASSIFICATION	5.7222522372636034E-5	DESIGN
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9991937773182669	WITHOUT_CLASSIFICATION	8.062226817331533E-4	DESIGN
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9732024264903844	WITHOUT_CLASSIFICATION	0.026797573509615702	DESIGN
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999997158394522	WITHOUT_CLASSIFICATION	2.8416054772120784E-7	DESIGN
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999999407311423	WITHOUT_CLASSIFICATION	5.926885780602805E-8	DESIGN
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.999006685777574	WITHOUT_CLASSIFICATION	9.933142224259751E-4	DESIGN
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999997535354186	WITHOUT_CLASSIFICATION	2.4646458148759647E-7	DESIGN
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999994237979443	WITHOUT_CLASSIFICATION	5.762020556395337E-7	DESIGN
// load the encoding	WITHOUT_CLASSIFICATION	0.9999994587645166	WITHOUT_CLASSIFICATION	5.412354834729791E-7	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999986129725428	WITHOUT_CLASSIFICATION	1.3870274572376239E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999977635491074	WITHOUT_CLASSIFICATION	2.2364508925113723E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999919007377951	WITHOUT_CLASSIFICATION	8.099262204945847E-6	DESIGN
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999798165256	WITHOUT_CLASSIFICATION	2.018347438444637E-8	DESIGN
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999210684534	WITHOUT_CLASSIFICATION	7.893154667878359E-8	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999985345313038	WITHOUT_CLASSIFICATION	1.4654686962372543E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.999997637070125	WITHOUT_CLASSIFICATION	2.3629298750384954E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999914426995251	WITHOUT_CLASSIFICATION	8.557300474817002E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999983873256187	WITHOUT_CLASSIFICATION	1.6126743813139627E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999973997150942	WITHOUT_CLASSIFICATION	2.600284905827354E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999843979167817	WITHOUT_CLASSIFICATION	1.560208321832166E-5	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999973997150942	WITHOUT_CLASSIFICATION	2.600284905827354E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999973997150942	WITHOUT_CLASSIFICATION	2.600284905827354E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999973997150942	WITHOUT_CLASSIFICATION	2.600284905827354E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999973997150942	WITHOUT_CLASSIFICATION	2.600284905827354E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999973997150942	WITHOUT_CLASSIFICATION	2.600284905827354E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999973997150942	WITHOUT_CLASSIFICATION	2.600284905827354E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999843979167817	WITHOUT_CLASSIFICATION	1.560208321832166E-5	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999843979167817	WITHOUT_CLASSIFICATION	1.560208321832166E-5	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999843979167817	WITHOUT_CLASSIFICATION	1.560208321832166E-5	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999843979167817	WITHOUT_CLASSIFICATION	1.560208321832166E-5	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999843979167817	WITHOUT_CLASSIFICATION	1.560208321832166E-5	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999843979167817	WITHOUT_CLASSIFICATION	1.560208321832166E-5	DESIGN
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999989772630558	WITHOUT_CLASSIFICATION	1.0227369442483837E-6	DESIGN
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.999999919974658	WITHOUT_CLASSIFICATION	8.002534203107735E-8	DESIGN
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999995983218453	WITHOUT_CLASSIFICATION	4.016781547080958E-7	DESIGN
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999945317415069	WITHOUT_CLASSIFICATION	5.468258493014474E-6	DESIGN
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9998507541977212	WITHOUT_CLASSIFICATION	1.492458022787346E-4	DESIGN
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999906546103918	WITHOUT_CLASSIFICATION	9.345389608127694E-6	DESIGN
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999985180530613	WITHOUT_CLASSIFICATION	1.4819469387177422E-6	DESIGN
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999995983302995	WITHOUT_CLASSIFICATION	4.0166970053110093E-7	DESIGN
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9998644881985065	WITHOUT_CLASSIFICATION	1.355118014935388E-4	DESIGN
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999891278776352	WITHOUT_CLASSIFICATION	1.087212236493604E-5	DESIGN
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9984616984248704	WITHOUT_CLASSIFICATION	0.0015383015751296188	DESIGN
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999999948844107	WITHOUT_CLASSIFICATION	5.115589270995422E-9	DESIGN
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999999141279209	WITHOUT_CLASSIFICATION	8.587207912284452E-8	DESIGN
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999881281447028	WITHOUT_CLASSIFICATION	1.1871855297238727E-5	DESIGN
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999657575089549	WITHOUT_CLASSIFICATION	3.424249104509574E-5	DESIGN
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9199941824163315	WITHOUT_CLASSIFICATION	0.08000581758366852	DESIGN
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999982959012642	WITHOUT_CLASSIFICATION	1.7040987357091517E-6	DESIGN
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9996203156237721	WITHOUT_CLASSIFICATION	3.796843762278949E-4	DESIGN
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9936170800402668	WITHOUT_CLASSIFICATION	0.006382919959733199	DESIGN
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999999894364728	WITHOUT_CLASSIFICATION	1.0563527160247453E-8	DESIGN
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999999992791141	WITHOUT_CLASSIFICATION	7.208859249035552E-10	DESIGN
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999709316747885	WITHOUT_CLASSIFICATION	2.9068325211522124E-5	DESIGN
// source extensions	WITHOUT_CLASSIFICATION	0.9999988483523435	WITHOUT_CLASSIFICATION	1.1516476564289337E-6	DESIGN
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9873745935711828	WITHOUT_CLASSIFICATION	0.012625406428817137	DESIGN
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9968700179788946	WITHOUT_CLASSIFICATION	0.0031299820211053977	DESIGN
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.999999886083003	WITHOUT_CLASSIFICATION	1.1391699690697088E-7	DESIGN
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999999838825955	WITHOUT_CLASSIFICATION	1.611740453364282E-8	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999998031003849	WITHOUT_CLASSIFICATION	1.9689961501473742E-7	DESIGN
// extension extensions	WITHOUT_CLASSIFICATION	0.9999996143745592	WITHOUT_CLASSIFICATION	3.856254408209333E-7	DESIGN
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999985281940783	WITHOUT_CLASSIFICATION	1.4718059216645082E-6	DESIGN
// try all extensions	WITHOUT_CLASSIFICATION	0.9999997105817636	WITHOUT_CLASSIFICATION	2.8941823638813836E-7	DESIGN
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.999999995572933	WITHOUT_CLASSIFICATION	4.4270670315699606E-9	DESIGN
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999850505095763	WITHOUT_CLASSIFICATION	1.494949042377766E-5	DESIGN
// try only literal search	WITHOUT_CLASSIFICATION	0.9999999649797305	WITHOUT_CLASSIFICATION	3.502026937098442E-8	DESIGN
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.999972933949085	WITHOUT_CLASSIFICATION	2.706605091491808E-5	DESIGN
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999635385556427	WITHOUT_CLASSIFICATION	3.6461444357431224E-5	DESIGN
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999663725197071	WITHOUT_CLASSIFICATION	3.3627480292971344E-5	DESIGN
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999831329415624	WITHOUT_CLASSIFICATION	1.686705843768565E-5	DESIGN
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.999999995549934	WITHOUT_CLASSIFICATION	4.450065983479717E-9	DESIGN
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999999964945291	WITHOUT_CLASSIFICATION	3.5054708519405063E-9	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999849555077044	WITHOUT_CLASSIFICATION	1.5044492295657717E-5	DESIGN
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999998716242334	WITHOUT_CLASSIFICATION	1.2837576664722527E-7	DESIGN
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999998867204922	WITHOUT_CLASSIFICATION	1.1327950767995255E-7	DESIGN
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999788679551616	WITHOUT_CLASSIFICATION	2.1132044838437945E-5	DESIGN
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999788679551616	WITHOUT_CLASSIFICATION	2.1132044838437945E-5	DESIGN
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999993533824797	WITHOUT_CLASSIFICATION	6.466175202703235E-7	DESIGN
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999993533824797	WITHOUT_CLASSIFICATION	6.466175202703235E-7	DESIGN
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999995973223952	WITHOUT_CLASSIFICATION	4.0267760477283815E-7	DESIGN
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999995973223952	WITHOUT_CLASSIFICATION	4.0267760477283815E-7	DESIGN
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999999986543752	WITHOUT_CLASSIFICATION	1.3456248912718899E-9	DESIGN
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.999989027928879	WITHOUT_CLASSIFICATION	1.0972071121112842E-5	DESIGN
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999998113747575	WITHOUT_CLASSIFICATION	1.886252425873635E-7	DESIGN
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999966849112883	WITHOUT_CLASSIFICATION	3.3150887117367544E-6	DESIGN
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999757174673084	WITHOUT_CLASSIFICATION	2.4282532691605733E-5	DESIGN
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9930495529310408	WITHOUT_CLASSIFICATION	0.0069504470689592205	DESIGN
// signed short, native	WITHOUT_CLASSIFICATION	0.9985972476186823	WITHOUT_CLASSIFICATION	0.0014027523813177954	DESIGN
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999998709099136	WITHOUT_CLASSIFICATION	1.290900863526284E-7	DESIGN
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999117874399012	WITHOUT_CLASSIFICATION	8.821256009888089E-5	DESIGN
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.99999859604889	WITHOUT_CLASSIFICATION	1.4039511100493836E-6	DESIGN
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999937509435368	WITHOUT_CLASSIFICATION	6.2490564631571095E-6	DESIGN
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999992299781877	WITHOUT_CLASSIFICATION	7.700218123131819E-7	DESIGN
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.999998558697828	WITHOUT_CLASSIFICATION	1.4413021718993641E-6	DESIGN
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.999504174724068	WITHOUT_CLASSIFICATION	4.958252759319276E-4	DESIGN
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9998078005051283	WITHOUT_CLASSIFICATION	1.9219949487164545E-4	DESIGN
//            write('S');	WITHOUT_CLASSIFICATION	0.9999974535367756	WITHOUT_CLASSIFICATION	2.5464632244345733E-6	DESIGN
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9783839953164682	WITHOUT_CLASSIFICATION	0.021616004683531677	DESIGN
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.999985863265158	WITHOUT_CLASSIFICATION	1.4136734841838348E-5	DESIGN
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.999964507632207	WITHOUT_CLASSIFICATION	3.549236779291818E-5	DESIGN
// w_symbol	WITHOUT_CLASSIFICATION	0.99999187503134	WITHOUT_CLASSIFICATION	8.124968659970822E-6	DESIGN
// w_unique	WITHOUT_CLASSIFICATION	0.999997257698314	WITHOUT_CLASSIFICATION	2.742301685963281E-6	DESIGN
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999993996352086	WITHOUT_CLASSIFICATION	6.003647914340387E-7	DESIGN
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999928089360273	WITHOUT_CLASSIFICATION	7.191063972654957E-6	DESIGN
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999999962411565	WITHOUT_CLASSIFICATION	3.7588435145531325E-9	DESIGN
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999822805457137	WITHOUT_CLASSIFICATION	1.7719454286353677E-5	DESIGN
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999988060848152	WITHOUT_CLASSIFICATION	1.1939151847901265E-6	DESIGN
// sic	WITHOUT_CLASSIFICATION	0.999833606288142	WITHOUT_CLASSIFICATION	1.6639371185792791E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999949171795529	WITHOUT_CLASSIFICATION	5.08282044701469E-6	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999949171795529	WITHOUT_CLASSIFICATION	5.08282044701469E-6	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999949171795529	WITHOUT_CLASSIFICATION	5.08282044701469E-6	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9988523754953819	WITHOUT_CLASSIFICATION	0.0011476245046181015	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9988523754953819	WITHOUT_CLASSIFICATION	0.0011476245046181015	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999831861932276	WITHOUT_CLASSIFICATION	1.681380677239297E-5	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999831861932276	WITHOUT_CLASSIFICATION	1.681380677239297E-5	DESIGN
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999999991752493	WITHOUT_CLASSIFICATION	8.247506456907408E-10	DESIGN
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.6994817865414793	WITHOUT_CLASSIFICATION	0.3005182134585206	DESIGN
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9981368864565829	WITHOUT_CLASSIFICATION	0.001863113543417102	DESIGN
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9999909370148696	WITHOUT_CLASSIFICATION	9.062985130436945E-6	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999949171795529	WITHOUT_CLASSIFICATION	5.08282044701469E-6	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999949171795529	WITHOUT_CLASSIFICATION	5.08282044701469E-6	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999949171795529	WITHOUT_CLASSIFICATION	5.08282044701469E-6	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9988523754953819	WITHOUT_CLASSIFICATION	0.0011476245046181015	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9988523754953819	WITHOUT_CLASSIFICATION	0.0011476245046181015	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9988523754953819	WITHOUT_CLASSIFICATION	0.0011476245046181015	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999831861932276	WITHOUT_CLASSIFICATION	1.681380677239297E-5	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999831861932276	WITHOUT_CLASSIFICATION	1.681380677239297E-5	DESIGN
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999999639128307	WITHOUT_CLASSIFICATION	3.6087169273395324E-8	DESIGN
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9574403733051559	WITHOUT_CLASSIFICATION	0.04255962669484415	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999921127911454	WITHOUT_CLASSIFICATION	7.887208854509156E-6	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999921127911454	WITHOUT_CLASSIFICATION	7.887208854509156E-6	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999921127911454	WITHOUT_CLASSIFICATION	7.887208854509156E-6	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999921127911454	WITHOUT_CLASSIFICATION	7.887208854509156E-6	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999921127911454	WITHOUT_CLASSIFICATION	7.887208854509156E-6	DESIGN
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999526969750308	WITHOUT_CLASSIFICATION	4.7303024969296505E-5	DESIGN
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999987760622376	WITHOUT_CLASSIFICATION	1.2239377623461045E-6	DESIGN
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9998605414593776	WITHOUT_CLASSIFICATION	1.3945854062239022E-4	DESIGN
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999997894269895	WITHOUT_CLASSIFICATION	2.105730104886743E-7	DESIGN
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9999864707473606	WITHOUT_CLASSIFICATION	1.3529252639304673E-5	DESIGN
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9998086253574261	WITHOUT_CLASSIFICATION	1.9137464257392358E-4	DESIGN
// not enough bytes	WITHOUT_CLASSIFICATION	0.9999621242174639	WITHOUT_CLASSIFICATION	3.7875782536097444E-5	DESIGN
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.999999835431178	WITHOUT_CLASSIFICATION	1.6456882203423878E-7	DESIGN
// skip inner braces	WITHOUT_CLASSIFICATION	0.9999551684997066	WITHOUT_CLASSIFICATION	4.483150029336025E-5	DESIGN
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.999997886826383	WITHOUT_CLASSIFICATION	2.1131736169344937E-6	DESIGN
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999991936981125	WITHOUT_CLASSIFICATION	8.06301887424966E-7	DESIGN
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999999566205279	WITHOUT_CLASSIFICATION	4.337947216718904E-8	DESIGN
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999791518802613	WITHOUT_CLASSIFICATION	2.0848119738651622E-5	DESIGN
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9999939963864426	WITHOUT_CLASSIFICATION	6.003613557415933E-6	DESIGN
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9958107720925317	WITHOUT_CLASSIFICATION	0.004189227907468375	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9952433978736519	WITHOUT_CLASSIFICATION	0.004756602126348104	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9952433978736519	WITHOUT_CLASSIFICATION	0.004756602126348104	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9952433978736519	WITHOUT_CLASSIFICATION	0.004756602126348104	DESIGN
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9997448322549706	WITHOUT_CLASSIFICATION	2.5516774502939223E-4	DESIGN
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9997459427853059	WITHOUT_CLASSIFICATION	2.540572146940313E-4	DESIGN
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999997360818436	WITHOUT_CLASSIFICATION	2.63918156444593E-7	DESIGN
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999999971822919	WITHOUT_CLASSIFICATION	2.8177080418033606E-9	DESIGN
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999999505104652	WITHOUT_CLASSIFICATION	4.948953468399875E-8	DESIGN
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9997705560979239	WITHOUT_CLASSIFICATION	2.2944390207606775E-4	DESIGN
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999887991764519	WITHOUT_CLASSIFICATION	1.1200823548000136E-5	DESIGN
// single precision, native	WITHOUT_CLASSIFICATION	0.9990611704111784	WITHOUT_CLASSIFICATION	9.388295888216371E-4	DESIGN
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9997982871940366	WITHOUT_CLASSIFICATION	2.0171280596347093E-4	DESIGN
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.999997681301849	WITHOUT_CLASSIFICATION	2.3186981510815728E-6	DESIGN
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999998910845795	WITHOUT_CLASSIFICATION	1.0891542050061672E-7	DESIGN
// double precision, native	WITHOUT_CLASSIFICATION	0.9999795284564477	WITHOUT_CLASSIFICATION	2.047154355232158E-5	DESIGN
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9998430479244035	WITHOUT_CLASSIFICATION	1.569520755964946E-4	DESIGN
// signed char	WITHOUT_CLASSIFICATION	0.9999993912738526	WITHOUT_CLASSIFICATION	6.08726147311394E-7	DESIGN
// unsigned char	WITHOUT_CLASSIFICATION	0.9999991480618196	WITHOUT_CLASSIFICATION	8.519381804399423E-7	DESIGN
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999938844440737	WITHOUT_CLASSIFICATION	6.115555926410231E-6	DESIGN
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999998710214101	WITHOUT_CLASSIFICATION	1.289785898809778E-7	DESIGN
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9999628230594756	WITHOUT_CLASSIFICATION	3.717694052445806E-5	DESIGN
// int, native	WITHOUT_CLASSIFICATION	0.999983499617803	WITHOUT_CLASSIFICATION	1.650038219706166E-5	DESIGN
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9999923112814324	WITHOUT_CLASSIFICATION	7.688718567577875E-6	DESIGN
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999476352624046	WITHOUT_CLASSIFICATION	5.236473759543266E-5	DESIGN
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999940562574299	WITHOUT_CLASSIFICATION	5.94374257019155E-6	DESIGN
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.8409018610037725	WITHOUT_CLASSIFICATION	0.15909813899622754	DESIGN
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999964393034957	WITHOUT_CLASSIFICATION	3.5606965043689765E-6	DESIGN
// obtain a	WITHOUT_CLASSIFICATION	0.9999995090215287	WITHOUT_CLASSIFICATION	4.909784713265795E-7	DESIGN
// obtain b	WITHOUT_CLASSIFICATION	0.9999989943276326	WITHOUT_CLASSIFICATION	1.005672367326587E-6	DESIGN
// obtain c	WITHOUT_CLASSIFICATION	0.9999996912291454	WITHOUT_CLASSIFICATION	3.087708545567762E-7	DESIGN
// obtain d	WITHOUT_CLASSIFICATION	0.999997061660205	WITHOUT_CLASSIFICATION	2.9383397950061494E-6	DESIGN
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999980669397063	WITHOUT_CLASSIFICATION	1.9330602935997773E-6	DESIGN
/* 1 */	WITHOUT_CLASSIFICATION	0.9999946702828907	WITHOUT_CLASSIFICATION	5.329717109293224E-6	DESIGN
/* 2 */	WITHOUT_CLASSIFICATION	0.9999910172907008	WITHOUT_CLASSIFICATION	8.982709299106649E-6	DESIGN
/* 3 */	WITHOUT_CLASSIFICATION	0.9999707895095227	WITHOUT_CLASSIFICATION	2.9210490477365357E-5	DESIGN
/* 4 */	WITHOUT_CLASSIFICATION	0.9999836854512675	WITHOUT_CLASSIFICATION	1.631454873250069E-5	DESIGN
/* 5 */	WITHOUT_CLASSIFICATION	0.9999884803577453	WITHOUT_CLASSIFICATION	1.1519642254568155E-5	DESIGN
/* 6 */	WITHOUT_CLASSIFICATION	0.9999867466581664	WITHOUT_CLASSIFICATION	1.3253341833588127E-5	DESIGN
/* 7 */	WITHOUT_CLASSIFICATION	0.9999882044377838	WITHOUT_CLASSIFICATION	1.1795562216223122E-5	DESIGN
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9996515186851027	WITHOUT_CLASSIFICATION	3.4848131489726754E-4	DESIGN
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9989595528079512	WITHOUT_CLASSIFICATION	0.001040447192048792	DESIGN
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999999835576747	WITHOUT_CLASSIFICATION	1.644232521401085E-8	DESIGN
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9999997456896372	WITHOUT_CLASSIFICATION	2.543103627799514E-7	DESIGN
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999998494497927	WITHOUT_CLASSIFICATION	1.5055020727594612E-7	DESIGN
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999572137262118	WITHOUT_CLASSIFICATION	4.278627378819203E-5	DESIGN
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9989893841950921	WITHOUT_CLASSIFICATION	0.0010106158049079008	DESIGN
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999992290552572	WITHOUT_CLASSIFICATION	7.709447427842305E-7	DESIGN
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999937429613794	WITHOUT_CLASSIFICATION	6.2570386205214905E-6	DESIGN
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9991977891551657	WITHOUT_CLASSIFICATION	8.022108448343627E-4	DESIGN
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999989843510106	WITHOUT_CLASSIFICATION	1.0156489893630553E-6	DESIGN
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999989843510106	WITHOUT_CLASSIFICATION	1.0156489893630553E-6	DESIGN
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9995265361211734	WITHOUT_CLASSIFICATION	4.734638788265213E-4	DESIGN
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9998912981566963	WITHOUT_CLASSIFICATION	1.0870184330364156E-4	DESIGN
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9998839095030679	WITHOUT_CLASSIFICATION	1.1609049693216276E-4	DESIGN
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999209661083422	WITHOUT_CLASSIFICATION	7.90338916577547E-5	DESIGN
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9992189205710585	WITHOUT_CLASSIFICATION	7.810794289415563E-4	DESIGN
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.999999744340248	WITHOUT_CLASSIFICATION	2.556597520768936E-7	DESIGN
// are we recursing?	WITHOUT_CLASSIFICATION	0.9954105769621744	WITHOUT_CLASSIFICATION	0.004589423037825641	DESIGN
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999997957022773	WITHOUT_CLASSIFICATION	2.042977228197408E-7	DESIGN
// default PidGetter	WITHOUT_CLASSIFICATION	0.999948741533144	WITHOUT_CLASSIFICATION	5.125846685607758E-5	DESIGN
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.999998980084724	WITHOUT_CLASSIFICATION	1.0199152760898654E-6	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999873393985546	WITHOUT_CLASSIFICATION	1.2660601445412397E-5	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999873393985546	WITHOUT_CLASSIFICATION	1.2660601445412397E-5	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999873393985546	WITHOUT_CLASSIFICATION	1.2660601445412397E-5	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999873393985546	WITHOUT_CLASSIFICATION	1.2660601445412397E-5	DESIGN
// try both	WITHOUT_CLASSIFICATION	0.9999905459653491	WITHOUT_CLASSIFICATION	9.454034650884848E-6	DESIGN
// just unix	WITHOUT_CLASSIFICATION	0.999994393370401	WITHOUT_CLASSIFICATION	5.606629599046753E-6	DESIGN
// just windows	WITHOUT_CLASSIFICATION	0.9999851043740378	WITHOUT_CLASSIFICATION	1.4895625962094955E-5	DESIGN
// neither	WITHOUT_CLASSIFICATION	0.9986910530848219	WITHOUT_CLASSIFICATION	0.0013089469151781534	DESIGN
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.8257526692667073	DESIGN	0.17424733073329268	WITHOUT_CLASSIFICATION
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999999953743115	WITHOUT_CLASSIFICATION	4.6256884907088695E-9	DESIGN
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999999642733916	WITHOUT_CLASSIFICATION	3.57266084075319E-8	DESIGN
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999998845155158	WITHOUT_CLASSIFICATION	1.154844840985434E-7	DESIGN
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999998845155158	WITHOUT_CLASSIFICATION	1.154844840985434E-7	DESIGN
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999997610086927	WITHOUT_CLASSIFICATION	2.3899130730511924E-7	DESIGN
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.999999260593725	WITHOUT_CLASSIFICATION	7.39406274891228E-7	DESIGN
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999999649342106	WITHOUT_CLASSIFICATION	3.506578940802821E-8	DESIGN
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999994408245937	WITHOUT_CLASSIFICATION	5.591754063363945E-7	DESIGN
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999994408245937	WITHOUT_CLASSIFICATION	5.591754063363945E-7	DESIGN
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999998969700348	WITHOUT_CLASSIFICATION	1.030299651531253E-7	DESIGN
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9997881413686479	WITHOUT_CLASSIFICATION	2.1185863135199642E-4	DESIGN
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9997881413686479	WITHOUT_CLASSIFICATION	2.1185863135199642E-4	DESIGN
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999999942767082	WITHOUT_CLASSIFICATION	5.723291796401917E-9	DESIGN
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999999968706874	WITHOUT_CLASSIFICATION	3.1293126584485265E-9	DESIGN
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999999999083006	WITHOUT_CLASSIFICATION	9.169943956635355E-11	DESIGN
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9994534283363931	WITHOUT_CLASSIFICATION	5.465716636069508E-4	DESIGN
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9999207456867064	WITHOUT_CLASSIFICATION	7.925431329357078E-5	DESIGN
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999999068980665	WITHOUT_CLASSIFICATION	9.310193347226312E-8	DESIGN
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9974167447897158	WITHOUT_CLASSIFICATION	0.002583255210284212	DESIGN
//sequential	WITHOUT_CLASSIFICATION	0.9999733370739715	WITHOUT_CLASSIFICATION	2.6662926028511322E-5	DESIGN
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999999999395851	WITHOUT_CLASSIFICATION	6.041488778319166E-11	DESIGN
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999994495424712	WITHOUT_CLASSIFICATION	5.504575288199387E-7	DESIGN
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999999742329744	WITHOUT_CLASSIFICATION	2.5767025706049144E-8	DESIGN
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999884213641548	WITHOUT_CLASSIFICATION	1.1578635845241158E-5	DESIGN
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9999137188246371	WITHOUT_CLASSIFICATION	8.62811753628783E-5	DESIGN
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9999668976567954	WITHOUT_CLASSIFICATION	3.310234320463082E-5	DESIGN
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999999738290926	WITHOUT_CLASSIFICATION	2.6170907485933025E-8	DESIGN
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.8069100454925442	WITHOUT_CLASSIFICATION	0.1930899545074557	DESIGN
// Args	WITHOUT_CLASSIFICATION	0.9999943244503465	WITHOUT_CLASSIFICATION	5.675549653438697E-6	DESIGN
// static methods only	WITHOUT_CLASSIFICATION	0.9999342930887781	WITHOUT_CLASSIFICATION	6.570691122188396E-5	DESIGN
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.999999983735154	WITHOUT_CLASSIFICATION	1.6264846040764143E-8	DESIGN
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.996447183126508	WITHOUT_CLASSIFICATION	0.0035528168734918824	DESIGN
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999993706254651	WITHOUT_CLASSIFICATION	6.293745350122216E-7	DESIGN
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.999997484342364	WITHOUT_CLASSIFICATION	2.51565763607734E-6	DESIGN
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999998252111393	WITHOUT_CLASSIFICATION	1.7478886071869884E-7	DESIGN
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9988378063988368	WITHOUT_CLASSIFICATION	0.0011621936011632019	DESIGN
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9998482197413738	WITHOUT_CLASSIFICATION	1.5178025862625595E-4	DESIGN
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.992654418563466	WITHOUT_CLASSIFICATION	0.007345581436533908	DESIGN
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999896244934596	WITHOUT_CLASSIFICATION	1.0375506540269285E-5	DESIGN
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999993688232179	WITHOUT_CLASSIFICATION	6.311767821241958E-7	DESIGN
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.997118903220453	WITHOUT_CLASSIFICATION	0.0028810967795469974	DESIGN
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999880190603234	WITHOUT_CLASSIFICATION	1.1980939676470655E-5	DESIGN
// ..	WITHOUT_CLASSIFICATION	0.9999888866184855	WITHOUT_CLASSIFICATION	1.1113381514504252E-5	DESIGN
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999998282606575	WITHOUT_CLASSIFICATION	1.717393424303852E-7	DESIGN
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9999988591605463	DESIGN	1.1408394536440506E-6	WITHOUT_CLASSIFICATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999936631539119	WITHOUT_CLASSIFICATION	6.336846088154273E-6	DESIGN
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999997340453224	WITHOUT_CLASSIFICATION	2.659546776512512E-7	DESIGN
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9939418036792013	WITHOUT_CLASSIFICATION	0.006058196320798706	DESIGN
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999988734384193	WITHOUT_CLASSIFICATION	1.1265615807533832E-6	DESIGN
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999999991504223	WITHOUT_CLASSIFICATION	8.495778052459956E-10	DESIGN
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9999999091935836	WITHOUT_CLASSIFICATION	9.08064163845576E-8	DESIGN
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9939418036792013	WITHOUT_CLASSIFICATION	0.006058196320798706	DESIGN
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999988734384193	WITHOUT_CLASSIFICATION	1.1265615807533832E-6	DESIGN
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999995659694492	WITHOUT_CLASSIFICATION	4.3403055087568713E-7	DESIGN
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999838360117072	WITHOUT_CLASSIFICATION	1.6163988292926575E-5	DESIGN
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999838360117072	WITHOUT_CLASSIFICATION	1.6163988292926575E-5	DESIGN
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999997475948325	WITHOUT_CLASSIFICATION	2.524051675184647E-7	DESIGN
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9913724262930951	WITHOUT_CLASSIFICATION	0.008627573706904932	DESIGN
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999999876078143	WITHOUT_CLASSIFICATION	1.2392185768033915E-8	DESIGN
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999999838184699	WITHOUT_CLASSIFICATION	1.61815301582094E-8	DESIGN
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9997506414948222	WITHOUT_CLASSIFICATION	2.493585051778621E-4	DESIGN
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9925149365075455	WITHOUT_CLASSIFICATION	0.007485063492454515	DESIGN
// '.' is printed	WITHOUT_CLASSIFICATION	0.9999913144784498	WITHOUT_CLASSIFICATION	8.685521550120075E-6	DESIGN
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999997185445917	WITHOUT_CLASSIFICATION	2.8145540834768405E-7	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9992310810500047	WITHOUT_CLASSIFICATION	7.689189499952672E-4	DESIGN
// '.'	WITHOUT_CLASSIFICATION	0.9999977327774451	WITHOUT_CLASSIFICATION	2.267222554849427E-6	DESIGN
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9999989739403496	WITHOUT_CLASSIFICATION	1.0260596502952799E-6	DESIGN
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999990159838881	WITHOUT_CLASSIFICATION	9.840161119339704E-7	DESIGN
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999998686998719	WITHOUT_CLASSIFICATION	1.3130012817655653E-7	DESIGN
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999999324440382	WITHOUT_CLASSIFICATION	6.755596186183255E-8	DESIGN
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999999324440382	WITHOUT_CLASSIFICATION	6.755596186183255E-8	DESIGN
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9998941948934338	WITHOUT_CLASSIFICATION	1.0580510656624931E-4	DESIGN
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9998941948934338	WITHOUT_CLASSIFICATION	1.0580510656624931E-4	DESIGN
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999998826233086	WITHOUT_CLASSIFICATION	1.1737669131541263E-7	DESIGN
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999982874582398	WITHOUT_CLASSIFICATION	1.7125417602306746E-6	DESIGN
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9999973528873186	WITHOUT_CLASSIFICATION	2.6471126813202955E-6	DESIGN
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999977226063435	WITHOUT_CLASSIFICATION	2.277393656591836E-6	DESIGN
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999991392954249	WITHOUT_CLASSIFICATION	8.607045750765531E-7	DESIGN
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.999999996812773	WITHOUT_CLASSIFICATION	3.1872270433354565E-9	DESIGN
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999999876078143	WITHOUT_CLASSIFICATION	1.2392185768033915E-8	DESIGN
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999999838184699	WITHOUT_CLASSIFICATION	1.61815301582094E-8	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9992310810500047	WITHOUT_CLASSIFICATION	7.689189499952672E-4	DESIGN
// '.'	WITHOUT_CLASSIFICATION	0.9999977327774451	WITHOUT_CLASSIFICATION	2.267222554849427E-6	DESIGN
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999939846947206	WITHOUT_CLASSIFICATION	6.015305279504118E-6	DESIGN
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999999968058783	WITHOUT_CLASSIFICATION	3.1941217652975605E-9	DESIGN
// \v	WITHOUT_CLASSIFICATION	0.9999900093608629	WITHOUT_CLASSIFICATION	9.990639137084804E-6	DESIGN
// dangling '%' char	WITHOUT_CLASSIFICATION	0.999999707920843	WITHOUT_CLASSIFICATION	2.920791568861736E-7	DESIGN
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999999846049706	WITHOUT_CLASSIFICATION	1.5395029361150036E-8	DESIGN
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999998883450454	WITHOUT_CLASSIFICATION	1.116549546084153E-7	DESIGN
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9999928310221329	WITHOUT_CLASSIFICATION	7.168977867223548E-6	DESIGN
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9999992274749566	WITHOUT_CLASSIFICATION	7.725250434745905E-7	DESIGN
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999999542216199	WITHOUT_CLASSIFICATION	4.577838006178111E-8	DESIGN
// negative values	WITHOUT_CLASSIFICATION	0.999934844399141	WITHOUT_CLASSIFICATION	6.515560085898669E-5	DESIGN
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999999179822828	WITHOUT_CLASSIFICATION	8.201771713668267E-8	DESIGN
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.99999999190567	WITHOUT_CLASSIFICATION	8.094329936776212E-9	DESIGN
// no such luck...	WITHOUT_CLASSIFICATION	0.8594320389062916	WITHOUT_CLASSIFICATION	0.14056796109370837	DESIGN
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999896025839655	WITHOUT_CLASSIFICATION	1.0397416034378928E-5	DESIGN
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9998448722242813	WITHOUT_CLASSIFICATION	1.551277757185776E-4	DESIGN
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9965299715115394	WITHOUT_CLASSIFICATION	0.0034700284884605866	DESIGN
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999918971789521	WITHOUT_CLASSIFICATION	8.102821047931225E-6	DESIGN
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999944066545919	WITHOUT_CLASSIFICATION	5.593345408107141E-6	DESIGN
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999592709825361	WITHOUT_CLASSIFICATION	4.072901746382628E-5	DESIGN
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999977209798205	WITHOUT_CLASSIFICATION	2.2790201794757396E-6	DESIGN
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999961558664225	WITHOUT_CLASSIFICATION	3.844133577399152E-6	DESIGN
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999961558664225	WITHOUT_CLASSIFICATION	3.844133577399152E-6	DESIGN
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999999956999078	WITHOUT_CLASSIFICATION	4.3000921244109726E-9	DESIGN
/* Tempering */	WITHOUT_CLASSIFICATION	0.9999996054827365	WITHOUT_CLASSIFICATION	3.94517263496035E-7	DESIGN
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999996412630784	WITHOUT_CLASSIFICATION	3.587369216244214E-7	DESIGN
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999999912393556	WITHOUT_CLASSIFICATION	8.760644436615322E-9	DESIGN
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999999912393556	WITHOUT_CLASSIFICATION	8.760644436615322E-9	DESIGN
// \v	WITHOUT_CLASSIFICATION	0.9999900093608629	WITHOUT_CLASSIFICATION	9.990639137084804E-6	DESIGN
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9999996482830923	WITHOUT_CLASSIFICATION	3.5171690775610246E-7	DESIGN
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999999736087364	WITHOUT_CLASSIFICATION	2.6391263691198303E-8	DESIGN
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9999999970699782	WITHOUT_CLASSIFICATION	2.930021800510567E-9	DESIGN
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9999999963248166	WITHOUT_CLASSIFICATION	3.6751833876023112E-9	DESIGN
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999999863909215	WITHOUT_CLASSIFICATION	1.3609078648404497E-8	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9985528553744408	WITHOUT_CLASSIFICATION	0.0014471446255591963	DESIGN
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9999999838432803	WITHOUT_CLASSIFICATION	1.6156719732114432E-8	DESIGN
// no number	WITHOUT_CLASSIFICATION	0.9999577419414117	WITHOUT_CLASSIFICATION	4.2258058588332734E-5	DESIGN
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999998993966549	WITHOUT_CLASSIFICATION	1.0060334506108136E-7	DESIGN
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9999986852078967	WITHOUT_CLASSIFICATION	1.3147921032476423E-6	DESIGN
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9998334737716189	WITHOUT_CLASSIFICATION	1.6652622838111245E-4	DESIGN
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9998547141245736	WITHOUT_CLASSIFICATION	1.4528587542647658E-4	DESIGN
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999979106270186	WITHOUT_CLASSIFICATION	2.089372981395486E-6	DESIGN
// goto next bucket	WITHOUT_CLASSIFICATION	0.9989276592920648	WITHOUT_CLASSIFICATION	0.001072340707935171	DESIGN
// we reached the end	WITHOUT_CLASSIFICATION	0.9999918457733379	WITHOUT_CLASSIFICATION	8.15422666214471E-6	DESIGN
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999366598781384	WITHOUT_CLASSIFICATION	6.334012186160378E-5	DESIGN
// states	WITHOUT_CLASSIFICATION	0.9999920883027387	WITHOUT_CLASSIFICATION	7.911697261268997E-6	DESIGN
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999974629216599	WITHOUT_CLASSIFICATION	2.537078340085693E-6	DESIGN
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999999999994562	WITHOUT_CLASSIFICATION	5.43802379445339E-13	DESIGN
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.999999999999962	WITHOUT_CLASSIFICATION	3.7953193120458225E-14	DESIGN
// drop through for sign	WITHOUT_CLASSIFICATION	0.9998883080783131	WITHOUT_CLASSIFICATION	1.1169192168681984E-4	DESIGN
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9817406527515269	WITHOUT_CLASSIFICATION	0.01825934724847313	DESIGN
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999971807450114	WITHOUT_CLASSIFICATION	2.819254988546245E-6	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999813463957	WITHOUT_CLASSIFICATION	1.8653604303674102E-8	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.999999956534786	WITHOUT_CLASSIFICATION	4.346521390062008E-8	DESIGN
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999999798502456	WITHOUT_CLASSIFICATION	2.0149754355471653E-8	DESIGN
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999999591674334	WITHOUT_CLASSIFICATION	4.083256652246594E-8	DESIGN
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999999998140999	WITHOUT_CLASSIFICATION	1.8590011047065881E-10	DESIGN
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999952489607433	WITHOUT_CLASSIFICATION	4.751039256686003E-6	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999997189182	WITHOUT_CLASSIFICATION	2.8108190039886707E-10	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999997189182	WITHOUT_CLASSIFICATION	2.8108190039886707E-10	DESIGN
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9999973511159215	WITHOUT_CLASSIFICATION	2.6488840785589475E-6	DESIGN
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999993020553815	WITHOUT_CLASSIFICATION	6.979446186169435E-7	DESIGN
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999993020553815	WITHOUT_CLASSIFICATION	6.979446186169435E-7	DESIGN
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999998990896559	WITHOUT_CLASSIFICATION	1.0091034417516064E-7	DESIGN
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999998990896559	WITHOUT_CLASSIFICATION	1.0091034417516064E-7	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.999963993385205	WITHOUT_CLASSIFICATION	3.600661479495222E-5	DESIGN
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999999736850778	WITHOUT_CLASSIFICATION	2.631492225191079E-8	DESIGN
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999989521925693	WITHOUT_CLASSIFICATION	1.047807430730132E-6	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9999858772489257	WITHOUT_CLASSIFICATION	1.4122751074131831E-5	DESIGN
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.999998725872128	WITHOUT_CLASSIFICATION	1.274127872041242E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999991915855431	WITHOUT_CLASSIFICATION	8.084144570547896E-7	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999991915855431	WITHOUT_CLASSIFICATION	8.084144570547896E-7	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999813463957	WITHOUT_CLASSIFICATION	1.8653604303674102E-8	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999813463957	WITHOUT_CLASSIFICATION	1.8653604303674102E-8	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999813463957	WITHOUT_CLASSIFICATION	1.8653604303674102E-8	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.999999956534786	WITHOUT_CLASSIFICATION	4.346521390062008E-8	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999997189182	WITHOUT_CLASSIFICATION	2.8108190039886707E-10	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999997189182	WITHOUT_CLASSIFICATION	2.8108190039886707E-10	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999997189182	WITHOUT_CLASSIFICATION	2.8108190039886707E-10	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.999963993385205	WITHOUT_CLASSIFICATION	3.600661479495222E-5	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.999963993385205	WITHOUT_CLASSIFICATION	3.600661479495222E-5	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.999963993385205	WITHOUT_CLASSIFICATION	3.600661479495222E-5	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9999858772489257	WITHOUT_CLASSIFICATION	1.4122751074131831E-5	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9999858772489257	WITHOUT_CLASSIFICATION	1.4122751074131831E-5	DESIGN
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999785999595154	WITHOUT_CLASSIFICATION	2.1400040484640954E-5	DESIGN
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999943750754244	WITHOUT_CLASSIFICATION	5.6249245755913036E-6	DESIGN
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999986487667057	WITHOUT_CLASSIFICATION	1.3512332941976839E-6	DESIGN
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9993483460805301	DESIGN	6.516539194699242E-4	WITHOUT_CLASSIFICATION
// no digits, error	WITHOUT_CLASSIFICATION	0.999441982906012	WITHOUT_CLASSIFICATION	5.580170939879311E-4	DESIGN
// too big for us	WITHOUT_CLASSIFICATION	0.9998731889838315	WITHOUT_CLASSIFICATION	1.2681101616857476E-4	DESIGN
// too big for us	WITHOUT_CLASSIFICATION	0.9998731889838315	WITHOUT_CLASSIFICATION	1.2681101616857476E-4	DESIGN
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999928807143893	WITHOUT_CLASSIFICATION	7.119285610692218E-6	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9985528553744408	WITHOUT_CLASSIFICATION	0.0014471446255591963	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9985528553744408	WITHOUT_CLASSIFICATION	0.0014471446255591963	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9985528553744408	WITHOUT_CLASSIFICATION	0.0014471446255591963	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9985528553744408	WITHOUT_CLASSIFICATION	0.0014471446255591963	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9985528553744408	WITHOUT_CLASSIFICATION	0.0014471446255591963	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999274362483	WITHOUT_CLASSIFICATION	7.256375171150935E-8	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999274362483	WITHOUT_CLASSIFICATION	7.256375171150935E-8	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999274362483	WITHOUT_CLASSIFICATION	7.256375171150935E-8	DESIGN
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999945006603572	WITHOUT_CLASSIFICATION	5.499339642786515E-6	DESIGN
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999991872708872	WITHOUT_CLASSIFICATION	8.127291126483298E-7	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.999999956534786	WITHOUT_CLASSIFICATION	4.346521390062008E-8	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.999963993385205	WITHOUT_CLASSIFICATION	3.600661479495222E-5	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.999963993385205	WITHOUT_CLASSIFICATION	3.600661479495222E-5	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9985528553744408	WITHOUT_CLASSIFICATION	0.0014471446255591963	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9985528553744408	WITHOUT_CLASSIFICATION	0.0014471446255591963	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999274362483	WITHOUT_CLASSIFICATION	7.256375171150935E-8	DESIGN
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999928807143893	WITHOUT_CLASSIFICATION	7.119285610692218E-6	DESIGN
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999999959776698	WITHOUT_CLASSIFICATION	4.022330222563805E-9	DESIGN
// switch //while	WITHOUT_CLASSIFICATION	0.9999954643685367	WITHOUT_CLASSIFICATION	4.535631463304469E-6	DESIGN
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9998994776478931	WITHOUT_CLASSIFICATION	1.0052235210693441E-4	DESIGN
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9983509069990592	WITHOUT_CLASSIFICATION	0.0016490930009408391	DESIGN
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999997193096719	WITHOUT_CLASSIFICATION	2.806903280255935E-7	DESIGN
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999995418278573	WITHOUT_CLASSIFICATION	4.581721426318597E-7	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999719654868311	WITHOUT_CLASSIFICATION	2.8034513168900565E-5	DESIGN
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.998086842094082	WITHOUT_CLASSIFICATION	0.0019131579059179524	DESIGN
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999714386411599	WITHOUT_CLASSIFICATION	2.8561358840088354E-5	DESIGN
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999969035826483	WITHOUT_CLASSIFICATION	3.096417351749202E-6	DESIGN
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9879208602637607	WITHOUT_CLASSIFICATION	0.012079139736239223	DESIGN
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999999950807794	WITHOUT_CLASSIFICATION	4.919220522879446E-9	DESIGN
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.999982312093382	WITHOUT_CLASSIFICATION	1.7687906618122825E-5	DESIGN
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999919311708071	WITHOUT_CLASSIFICATION	8.068829192816975E-6	DESIGN
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999995865519324	WITHOUT_CLASSIFICATION	4.1344806764649283E-7	DESIGN
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9999606531457511	WITHOUT_CLASSIFICATION	3.934685424883287E-5	DESIGN
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999154781197465	WITHOUT_CLASSIFICATION	8.452188025344697E-5	DESIGN
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999979784547453	WITHOUT_CLASSIFICATION	2.0215452546979857E-6	DESIGN
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9999530276699002	WITHOUT_CLASSIFICATION	4.697233009975443E-5	DESIGN
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999999012178503	WITHOUT_CLASSIFICATION	9.878214961716916E-8	DESIGN
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999874082843002	WITHOUT_CLASSIFICATION	1.2591715699848966E-5	DESIGN
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999999418555509	WITHOUT_CLASSIFICATION	5.8144449223803563E-8	DESIGN
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999999908629306	WITHOUT_CLASSIFICATION	9.13706941509846E-9	DESIGN
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999988921224137	WITHOUT_CLASSIFICATION	1.1078775863450906E-6	DESIGN
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999786370761068	WITHOUT_CLASSIFICATION	2.136292389325761E-5	DESIGN
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9843456820114495	WITHOUT_CLASSIFICATION	0.015654317988550506	DESIGN
// unread back	WITHOUT_CLASSIFICATION	0.9999922861879208	WITHOUT_CLASSIFICATION	7.71381207918414E-6	DESIGN
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999999998760851	WITHOUT_CLASSIFICATION	1.2391489200506578E-10	DESIGN
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999713933261681	WITHOUT_CLASSIFICATION	2.8606673831930714E-5	DESIGN
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999998550040298	WITHOUT_CLASSIFICATION	1.4499597028204263E-7	DESIGN
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999999798431203	WITHOUT_CLASSIFICATION	2.0156879733128606E-8	DESIGN
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999999951167132	WITHOUT_CLASSIFICATION	4.883286726624596E-9	DESIGN
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999999940812234	WITHOUT_CLASSIFICATION	5.918776551960563E-9	DESIGN
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999999980758916	WITHOUT_CLASSIFICATION	1.924108344024957E-9	DESIGN
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999999959776698	WITHOUT_CLASSIFICATION	4.022330222563805E-9	DESIGN
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999999992618027	WITHOUT_CLASSIFICATION	7.381971669419158E-10	DESIGN
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9999981873269342	WITHOUT_CLASSIFICATION	1.8126730658024206E-6	DESIGN
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9459820743655765	WITHOUT_CLASSIFICATION	0.0540179256344234	DESIGN
// silence	WITHOUT_CLASSIFICATION	0.9998837999199897	WITHOUT_CLASSIFICATION	1.1620008001027475E-4	DESIGN
// silence	WITHOUT_CLASSIFICATION	0.9998837999199897	WITHOUT_CLASSIFICATION	1.1620008001027475E-4	DESIGN
// Don't bother	WITHOUT_CLASSIFICATION	0.9999696587515307	WITHOUT_CLASSIFICATION	3.0341248469336533E-5	DESIGN
// Don't bother	WITHOUT_CLASSIFICATION	0.9999696587515307	WITHOUT_CLASSIFICATION	3.0341248469336533E-5	DESIGN
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999999959202474	WITHOUT_CLASSIFICATION	4.079752668040099E-9	DESIGN
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999977477801679	WITHOUT_CLASSIFICATION	2.2522198320910736E-6	DESIGN
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999999758475878	WITHOUT_CLASSIFICATION	2.4152412153233825E-8	DESIGN
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.999999856007032	WITHOUT_CLASSIFICATION	1.4399296791474336E-7	DESIGN
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999999944809911	WITHOUT_CLASSIFICATION	5.519008846881293E-9	DESIGN
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9998977216191879	WITHOUT_CLASSIFICATION	1.022783808121617E-4	DESIGN
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999999263443797	WITHOUT_CLASSIFICATION	7.365562018188229E-8	DESIGN
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999999916207104	WITHOUT_CLASSIFICATION	8.37928968635312E-9	DESIGN
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999513743851888	WITHOUT_CLASSIFICATION	4.8625614811142795E-5	DESIGN
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.999999984007903	WITHOUT_CLASSIFICATION	1.5992096886784567E-8	DESIGN
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999999949156269	WITHOUT_CLASSIFICATION	5.084373162418544E-9	DESIGN
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999997560982072	WITHOUT_CLASSIFICATION	2.439017927607384E-7	DESIGN
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999997560982072	WITHOUT_CLASSIFICATION	2.439017927607384E-7	DESIGN
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999999999008302	WITHOUT_CLASSIFICATION	9.916978203304802E-11	DESIGN
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999999950381193	WITHOUT_CLASSIFICATION	4.961880713988239E-9	DESIGN
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999993859136389	WITHOUT_CLASSIFICATION	6.140863611257308E-7	DESIGN
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999993859136389	WITHOUT_CLASSIFICATION	6.140863611257308E-7	DESIGN
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999999995648502	WITHOUT_CLASSIFICATION	4.351498622992263E-10	DESIGN
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999999320902576	WITHOUT_CLASSIFICATION	6.790974237508847E-8	DESIGN
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9949605157417769	WITHOUT_CLASSIFICATION	0.005039484258223037	DESIGN
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999989045650826	WITHOUT_CLASSIFICATION	1.0954349174566957E-6	DESIGN
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999999653567954	WITHOUT_CLASSIFICATION	3.464320460310704E-8	DESIGN
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.997890082775068	WITHOUT_CLASSIFICATION	0.0021099172249320767	DESIGN
// save the ungot	WITHOUT_CLASSIFICATION	0.9998762944062745	WITHOUT_CLASSIFICATION	1.2370559372554819E-4	DESIGN
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.99998864329177	WITHOUT_CLASSIFICATION	1.135670823006242E-5	DESIGN
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999985900961454	WITHOUT_CLASSIFICATION	1.4099038545734126E-6	DESIGN
// flush first	WITHOUT_CLASSIFICATION	0.9999992102536333	WITHOUT_CLASSIFICATION	7.897463667389072E-7	DESIGN
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999983904508076	WITHOUT_CLASSIFICATION	1.609549192309476E-6	DESIGN
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9999419655637494	WITHOUT_CLASSIFICATION	5.803443625070314E-5	DESIGN
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999999975511045	WITHOUT_CLASSIFICATION	2.448895439707163E-9	DESIGN
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999999620277517	WITHOUT_CLASSIFICATION	3.797224830565448E-8	DESIGN
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.999999998802646	WITHOUT_CLASSIFICATION	1.1973539390241227E-9	DESIGN
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999998873979925	WITHOUT_CLASSIFICATION	1.1260200748669988E-7	DESIGN
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9999583691035185	WITHOUT_CLASSIFICATION	4.1630896481421933E-5	DESIGN
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9999327095169069	WITHOUT_CLASSIFICATION	6.729048309300452E-5	DESIGN
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999999993750526	WITHOUT_CLASSIFICATION	6.249474554453995E-10	DESIGN
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999747032198709	WITHOUT_CLASSIFICATION	2.529678012909515E-5	DESIGN
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9997345307776477	DESIGN	2.6546922235232454E-4	WITHOUT_CLASSIFICATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999990325647407	WITHOUT_CLASSIFICATION	9.674352593504596E-7	DESIGN
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999996566286158	WITHOUT_CLASSIFICATION	3.433713842119652E-7	DESIGN
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999992046484789	WITHOUT_CLASSIFICATION	7.953515211103335E-7	DESIGN
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999193067412911	WITHOUT_CLASSIFICATION	8.069325870879491E-5	DESIGN
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9997837893726377	WITHOUT_CLASSIFICATION	2.162106273623639E-4	DESIGN
// else leave it null	WITHOUT_CLASSIFICATION	0.9999998209319677	WITHOUT_CLASSIFICATION	1.7906803226742877E-7	DESIGN
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999641565108982	WITHOUT_CLASSIFICATION	3.584348910184023E-5	DESIGN
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9995127244905688	WITHOUT_CLASSIFICATION	4.872755094312402E-4	DESIGN
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999999904855251	WITHOUT_CLASSIFICATION	9.514474842232286E-9	DESIGN
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999999964052286	WITHOUT_CLASSIFICATION	3.5947714118610036E-9	DESIGN
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999999441064	WITHOUT_CLASSIFICATION	5.589359999013145E-8	DESIGN
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.999999001909756	WITHOUT_CLASSIFICATION	9.980902439548434E-7	DESIGN
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999973209209817	WITHOUT_CLASSIFICATION	2.6790790181646423E-6	DESIGN
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999973209209817	WITHOUT_CLASSIFICATION	2.6790790181646423E-6	DESIGN
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999999874819671	WITHOUT_CLASSIFICATION	1.2518032956425264E-8	DESIGN
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999868797630835	WITHOUT_CLASSIFICATION	1.3120236916411319E-5	DESIGN
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9999999999773211	WITHOUT_CLASSIFICATION	2.2678797444855775E-11	DESIGN
// Init	WITHOUT_CLASSIFICATION	0.9999952140069731	WITHOUT_CLASSIFICATION	4.785993026866179E-6	DESIGN
// Block	WITHOUT_CLASSIFICATION	0.9999951718049429	WITHOUT_CLASSIFICATION	4.828195057042979E-6	DESIGN
// Copy constructor	WITHOUT_CLASSIFICATION	0.9987221803269953	WITHOUT_CLASSIFICATION	0.0012778196730046313	DESIGN
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9973063710680757	WITHOUT_CLASSIFICATION	0.002693628931924199	DESIGN
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9988448279122347	WITHOUT_CLASSIFICATION	0.0011551720877652097	DESIGN
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9998963332323727	WITHOUT_CLASSIFICATION	1.0366676762739488E-4	DESIGN
// ok	WITHOUT_CLASSIFICATION	0.9999927229741088	WITHOUT_CLASSIFICATION	7.277025891144031E-6	DESIGN
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.644099978192904	DESIGN	0.355900021807096	WITHOUT_CLASSIFICATION
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9996536125782309	WITHOUT_CLASSIFICATION	3.4638742176910275E-4	DESIGN
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9999814017617094	WITHOUT_CLASSIFICATION	1.8598238290716986E-5	DESIGN
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9999863579278633	WITHOUT_CLASSIFICATION	1.3642072136827582E-5	DESIGN
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999876358071277	WITHOUT_CLASSIFICATION	1.236419287223307E-5	DESIGN
// wait for the go signal	WITHOUT_CLASSIFICATION	0.999998511187066	WITHOUT_CLASSIFICATION	1.488812934010675E-6	DESIGN
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9925491022482332	WITHOUT_CLASSIFICATION	0.007450897751766696	DESIGN
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999903001043077	WITHOUT_CLASSIFICATION	9.69989569244271E-6	DESIGN
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.998617152967623	WITHOUT_CLASSIFICATION	0.001382847032377067	DESIGN
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999926090492373	WITHOUT_CLASSIFICATION	7.390950762770122E-6	DESIGN
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999997844658375	WITHOUT_CLASSIFICATION	2.1553416257634126E-7	DESIGN
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999985585108062	WITHOUT_CLASSIFICATION	1.441489193785144E-6	DESIGN
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.5067051416782288	WITHOUT_CLASSIFICATION	0.4932948583217713	DESIGN
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999835681681988	WITHOUT_CLASSIFICATION	1.643183180128938E-5	DESIGN
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9963081058654364	WITHOUT_CLASSIFICATION	0.003691894134563653	DESIGN
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.999999095582899	WITHOUT_CLASSIFICATION	9.044171010592088E-7	DESIGN
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999999966599371	WITHOUT_CLASSIFICATION	3.3400628506295645E-9	DESIGN
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999999984020702	WITHOUT_CLASSIFICATION	1.597929746238422E-9	DESIGN
// void methods should work	WITHOUT_CLASSIFICATION	0.999683647290495	WITHOUT_CLASSIFICATION	3.163527095049903E-4	DESIGN
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9999981872345649	WITHOUT_CLASSIFICATION	1.8127654351407977E-6	DESIGN
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999999965052337	WITHOUT_CLASSIFICATION	3.4947662240410205E-9	DESIGN
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999999518266041	WITHOUT_CLASSIFICATION	4.817339594059548E-8	DESIGN
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999989762058511	WITHOUT_CLASSIFICATION	1.0237941489825167E-6	DESIGN
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999998581614894	WITHOUT_CLASSIFICATION	1.4183851056897665E-7	DESIGN
//        int n = 10;	WITHOUT_CLASSIFICATION	0.999998641359224	WITHOUT_CLASSIFICATION	1.3586407760571803E-6	DESIGN
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9999998146015993	WITHOUT_CLASSIFICATION	1.8539840081772974E-7	DESIGN
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9986184574840604	WITHOUT_CLASSIFICATION	0.001381542515939515	DESIGN
// value equality	WITHOUT_CLASSIFICATION	0.9999990900791742	WITHOUT_CLASSIFICATION	9.099208257965924E-7	DESIGN
// identity equality	WITHOUT_CLASSIFICATION	0.9999777477605034	WITHOUT_CLASSIFICATION	2.225223949655314E-5	DESIGN
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999991193277489	WITHOUT_CLASSIFICATION	8.806722510678729E-7	DESIGN
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999992886096798	WITHOUT_CLASSIFICATION	7.113903201855147E-7	DESIGN
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999999544181416	WITHOUT_CLASSIFICATION	4.5581858456415265E-8	DESIGN
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999999544181416	WITHOUT_CLASSIFICATION	4.5581858456415265E-8	DESIGN
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999995896735848	WITHOUT_CLASSIFICATION	4.103264152375357E-7	DESIGN
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999999658171501	WITHOUT_CLASSIFICATION	3.4182849950364565E-8	DESIGN
// bench Long fib	WITHOUT_CLASSIFICATION	0.999999987696505	WITHOUT_CLASSIFICATION	1.2303494903182554E-8	DESIGN
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9994205167446167	WITHOUT_CLASSIFICATION	5.794832553832483E-4	DESIGN
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999621500164289	WITHOUT_CLASSIFICATION	3.7849983571087264E-5	DESIGN
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999995696945418	WITHOUT_CLASSIFICATION	4.303054581694652E-7	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9995117541708582	WITHOUT_CLASSIFICATION	4.8824582914171194E-4	DESIGN
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9704166360573376	WITHOUT_CLASSIFICATION	0.029583363942662408	DESIGN
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999803315857879	WITHOUT_CLASSIFICATION	1.9668414212040347E-5	DESIGN
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9992606991359579	WITHOUT_CLASSIFICATION	7.393008640420567E-4	DESIGN
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999609557164488	WITHOUT_CLASSIFICATION	3.9044283551211544E-5	DESIGN
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999994763274336	WITHOUT_CLASSIFICATION	5.23672566465098E-7	DESIGN
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.8179373753348955	WITHOUT_CLASSIFICATION	0.1820626246651045	DESIGN
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999924471340562	WITHOUT_CLASSIFICATION	7.552865943832603E-6	DESIGN
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999984995398401	WITHOUT_CLASSIFICATION	1.500460159849048E-6	DESIGN
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9999858822891379	DESIGN	1.4117710862001015E-5	WITHOUT_CLASSIFICATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9765531686192691	WITHOUT_CLASSIFICATION	0.02344683138073083	DESIGN
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9999997957649308	WITHOUT_CLASSIFICATION	2.0423506914172824E-7	DESIGN
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9999114314009832	WITHOUT_CLASSIFICATION	8.856859901688084E-5	DESIGN
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9999960162196335	DESIGN	3.983780366545817E-6	WITHOUT_CLASSIFICATION
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9998453728176309	WITHOUT_CLASSIFICATION	1.54627182369083E-4	DESIGN
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999862758324448	WITHOUT_CLASSIFICATION	1.3724167555233283E-5	DESIGN
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999999999724871	WITHOUT_CLASSIFICATION	2.7512976616207324E-11	DESIGN
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9176347903504308	WITHOUT_CLASSIFICATION	0.0823652096495692	DESIGN
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999999651975879	WITHOUT_CLASSIFICATION	3.4802412025521885E-8	DESIGN
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999999293034599	WITHOUT_CLASSIFICATION	7.069654005413468E-8	DESIGN
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999997867606415	WITHOUT_CLASSIFICATION	2.132393585077291E-7	DESIGN
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9999793714074794	WITHOUT_CLASSIFICATION	2.062859252056816E-5	DESIGN
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999999981288702	WITHOUT_CLASSIFICATION	1.8711298662013968E-9	DESIGN
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999953330100767	WITHOUT_CLASSIFICATION	4.6669899233020455E-6	DESIGN
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999999987309961	WITHOUT_CLASSIFICATION	1.2690039075800667E-9	DESIGN
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999983482007542	WITHOUT_CLASSIFICATION	1.6517992458439727E-6	DESIGN
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999953330100767	WITHOUT_CLASSIFICATION	4.6669899233020455E-6	DESIGN
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999519864273192	WITHOUT_CLASSIFICATION	4.801357268082363E-5	DESIGN
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9998482197413738	WITHOUT_CLASSIFICATION	1.5178025862625595E-4	DESIGN
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9999999668065161	WITHOUT_CLASSIFICATION	3.3193483909626866E-8	DESIGN
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.999485162015694	DESIGN	5.148379843059291E-4	WITHOUT_CLASSIFICATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9999849608612873	WITHOUT_CLASSIFICATION	1.503913871281326E-5	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999921127911454	WITHOUT_CLASSIFICATION	7.887208854509156E-6	DESIGN
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9999934572556071	WITHOUT_CLASSIFICATION	6.542744392977795E-6	DESIGN
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.8932237720135214	WITHOUT_CLASSIFICATION	0.10677622798647854	DESIGN
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9913724262930951	WITHOUT_CLASSIFICATION	0.008627573706904932	DESIGN
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999747032198709	WITHOUT_CLASSIFICATION	2.529678012909515E-5	DESIGN
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999986487667057	WITHOUT_CLASSIFICATION	1.3512332941976839E-6	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9681486234960092	WITHOUT_CLASSIFICATION	0.031851376503990836	DESIGN
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999993149367671	WITHOUT_CLASSIFICATION	6.850632330141611E-7	DESIGN
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999979526141352	WITHOUT_CLASSIFICATION	2.0473858648034455E-6	DESIGN
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999999777898241	WITHOUT_CLASSIFICATION	2.2210175878107087E-8	DESIGN
// switch // while	WITHOUT_CLASSIFICATION	0.9999764907476691	WITHOUT_CLASSIFICATION	2.350925233081317E-5	DESIGN
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9988482345639915	DESIGN	0.0011517654360084953	WITHOUT_CLASSIFICATION
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.8636807418784038	WITHOUT_CLASSIFICATION	0.13631925812159607	DESIGN
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9917986418106634	WITHOUT_CLASSIFICATION	0.008201358189336672	DESIGN
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9994422300143513	WITHOUT_CLASSIFICATION	5.577699856487983E-4	DESIGN
// expected	WITHOUT_CLASSIFICATION	0.9999999834987358	WITHOUT_CLASSIFICATION	1.650126417015592E-8	DESIGN
// Do nothing	WITHOUT_CLASSIFICATION	0.9999979779505245	WITHOUT_CLASSIFICATION	2.02204947545844E-6	DESIGN
// constructor	WITHOUT_CLASSIFICATION	0.9998818291703471	WITHOUT_CLASSIFICATION	1.181708296529465E-4	DESIGN
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999986075485211	WITHOUT_CLASSIFICATION	1.39245147887682E-6	DESIGN
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.99984002056593	WITHOUT_CLASSIFICATION	1.5997943406993178E-4	DESIGN
// line 423	WITHOUT_CLASSIFICATION	0.9999993434888657	WITHOUT_CLASSIFICATION	6.565111342219361E-7	DESIGN
// line 486	WITHOUT_CLASSIFICATION	0.9999991320237893	WITHOUT_CLASSIFICATION	8.679762106962123E-7	DESIGN
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9999764859627572	WITHOUT_CLASSIFICATION	2.3514037242774656E-5	DESIGN
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999999982339	WITHOUT_CLASSIFICATION	1.7660887326532169E-12	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.8221989317279293	DESIGN	0.1778010682720706	WITHOUT_CLASSIFICATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.8221989317279293	DESIGN	0.1778010682720706	WITHOUT_CLASSIFICATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999997961602802	WITHOUT_CLASSIFICATION	2.038397197228419E-7	DESIGN
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999999999846565	WITHOUT_CLASSIFICATION	1.5343562800303825E-11	DESIGN
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999994149141381	WITHOUT_CLASSIFICATION	5.850858619181499E-7	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9987003909098573	DESIGN	0.001299609090142723	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9987003909098573	DESIGN	0.001299609090142723	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9987003909098573	DESIGN	0.001299609090142723	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9987003909098573	DESIGN	0.001299609090142723	WITHOUT_CLASSIFICATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999995844519726	WITHOUT_CLASSIFICATION	4.1554802741225155E-7	DESIGN
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999993954689382	WITHOUT_CLASSIFICATION	6.045310618271414E-7	DESIGN
// "else" body	WITHOUT_CLASSIFICATION	0.9999990107943937	WITHOUT_CLASSIFICATION	9.89205606384668E-7	DESIGN
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9980543580899529	DESIGN	0.0019456419100471194	WITHOUT_CLASSIFICATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999998862783921	WITHOUT_CLASSIFICATION	1.1372160782109755E-7	DESIGN
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999999744533776	WITHOUT_CLASSIFICATION	2.554662235573125E-8	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9957992992468571	WITHOUT_CLASSIFICATION	0.004200700753142872	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9957992992468571	WITHOUT_CLASSIFICATION	0.004200700753142872	DESIGN
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9896016678075273	WITHOUT_CLASSIFICATION	0.010398332192472614	DESIGN
/* 10! */	WITHOUT_CLASSIFICATION	0.9999797929003278	WITHOUT_CLASSIFICATION	2.0207099672292963E-5	DESIGN
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9967254152784193	WITHOUT_CLASSIFICATION	0.0032745847215805875	DESIGN
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9999999902248984	WITHOUT_CLASSIFICATION	9.775101616811026E-9	DESIGN
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999923712427484	WITHOUT_CLASSIFICATION	7.628757251543182E-6	DESIGN
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999999259723725	WITHOUT_CLASSIFICATION	7.402762737691336E-8	DESIGN
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.999999998415133	WITHOUT_CLASSIFICATION	1.5848670176860647E-9	DESIGN
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999999905468664	WITHOUT_CLASSIFICATION	9.453133571709081E-9	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9997392388674428	WITHOUT_CLASSIFICATION	2.607611325571611E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9997392388674428	WITHOUT_CLASSIFICATION	2.607611325571611E-4	DESIGN
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999983482007542	WITHOUT_CLASSIFICATION	1.6517992458439727E-6	DESIGN
// line 449	WITHOUT_CLASSIFICATION	0.9999993385728212	WITHOUT_CLASSIFICATION	6.614271788544138E-7	DESIGN
// line 495	WITHOUT_CLASSIFICATION	0.9999995372085491	WITHOUT_CLASSIFICATION	4.627914509862713E-7	DESIGN
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999592460296552	WITHOUT_CLASSIFICATION	4.075397034479301E-5	DESIGN
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999999999998591	WITHOUT_CLASSIFICATION	1.408655940517791E-13	DESIGN
/* 14! */	WITHOUT_CLASSIFICATION	0.9999793110710012	WITHOUT_CLASSIFICATION	2.0688928998751802E-5	DESIGN
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999998245204079	WITHOUT_CLASSIFICATION	1.7547959210660715E-7	DESIGN
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999776829505381	WITHOUT_CLASSIFICATION	2.2317049461920196E-5	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999999197154036	WITHOUT_CLASSIFICATION	8.028459638020934E-8	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999999197154036	WITHOUT_CLASSIFICATION	8.028459638020934E-8	DESIGN
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9984644122098925	WITHOUT_CLASSIFICATION	0.0015355877901075882	DESIGN
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999999877313059	WITHOUT_CLASSIFICATION	1.2268694108446484E-8	DESIGN
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9999999623856188	WITHOUT_CLASSIFICATION	3.761438120536084E-8	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999977197750498	WITHOUT_CLASSIFICATION	2.2802249502120025E-6	DESIGN
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999904577447787	WITHOUT_CLASSIFICATION	9.54225522136149E-6	DESIGN
/* 18! */	WITHOUT_CLASSIFICATION	0.9999912332035391	WITHOUT_CLASSIFICATION	8.766796460840636E-6	DESIGN
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9984521492037324	WITHOUT_CLASSIFICATION	0.0015478507962676375	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999873050415222	WITHOUT_CLASSIFICATION	1.2694958477868135E-5	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999873050415222	WITHOUT_CLASSIFICATION	1.2694958477868135E-5	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999873050415222	WITHOUT_CLASSIFICATION	1.2694958477868135E-5	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999873050415222	WITHOUT_CLASSIFICATION	1.2694958477868135E-5	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999999482394837	WITHOUT_CLASSIFICATION	5.1760516309047006E-8	DESIGN
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999999993483311	WITHOUT_CLASSIFICATION	6.516690723417156E-10	DESIGN
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9950309127451651	WITHOUT_CLASSIFICATION	0.004969087254834992	DESIGN
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.999992357999211	WITHOUT_CLASSIFICATION	7.642000788862544E-6	DESIGN
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999996095077491	WITHOUT_CLASSIFICATION	3.904922508850231E-7	DESIGN
/* 22! */	WITHOUT_CLASSIFICATION	0.999990819785181	WITHOUT_CLASSIFICATION	9.18021481903501E-6	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.99999837312542	WITHOUT_CLASSIFICATION	1.6268745800172813E-6	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999998496261594	WITHOUT_CLASSIFICATION	1.5037384068388926E-7	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999998496261594	WITHOUT_CLASSIFICATION	1.5037384068388926E-7	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999998496261594	WITHOUT_CLASSIFICATION	1.5037384068388926E-7	DESIGN
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999992447201027	WITHOUT_CLASSIFICATION	7.552798972688791E-7	DESIGN
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9998507491787529	WITHOUT_CLASSIFICATION	1.4925082124711604E-4	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999662778128	WITHOUT_CLASSIFICATION	3.3722187107749E-8	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999662778128	WITHOUT_CLASSIFICATION	3.3722187107749E-8	DESIGN
// AF_INET	WITHOUT_CLASSIFICATION	0.9999995105270377	WITHOUT_CLASSIFICATION	4.894729621876987E-7	DESIGN
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999989729924	WITHOUT_CLASSIFICATION	1.0270076149588525E-9	DESIGN
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9999999983149491	WITHOUT_CLASSIFICATION	1.685050846644738E-9	DESIGN
// BASE64	WITHOUT_CLASSIFICATION	0.9999523228953954	WITHOUT_CLASSIFICATION	4.767710460459773E-5	DESIGN
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999999998204816	WITHOUT_CLASSIFICATION	1.795184366960153E-10	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9999982607078417	WITHOUT_CLASSIFICATION	1.7392921582012694E-6	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9971984344404279	WITHOUT_CLASSIFICATION	0.0028015655595721627	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9971984344404279	WITHOUT_CLASSIFICATION	0.0028015655595721627	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.999999976944881	WITHOUT_CLASSIFICATION	2.305511904307619E-8	DESIGN
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.999999981767701	WITHOUT_CLASSIFICATION	1.8232299032219128E-8	DESIGN
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999997369915269	WITHOUT_CLASSIFICATION	2.630084731256272E-7	DESIGN
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9997375968217856	WITHOUT_CLASSIFICATION	2.6240317821428635E-4	DESIGN
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9998871650797728	WITHOUT_CLASSIFICATION	1.128349202272409E-4	DESIGN
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999999999660434	WITHOUT_CLASSIFICATION	3.3956677220413725E-11	DESIGN
// carriage return	WITHOUT_CLASSIFICATION	0.9999997418288095	WITHOUT_CLASSIFICATION	2.581711905546761E-7	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9991931232135002	WITHOUT_CLASSIFICATION	8.068767864997456E-4	DESIGN
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999848473421613	WITHOUT_CLASSIFICATION	1.5152657838630598E-5	DESIGN
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999998287061351	WITHOUT_CLASSIFICATION	1.7129386477778486E-7	DESIGN
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.999999883260262	WITHOUT_CLASSIFICATION	1.1673973805543487E-7	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999997282976518	WITHOUT_CLASSIFICATION	2.717023481408694E-7	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9968949802329622	WITHOUT_CLASSIFICATION	0.0031050197670377706	DESIGN
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.999999933307024	WITHOUT_CLASSIFICATION	6.669297601349974E-8	DESIGN
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999988377856235	WITHOUT_CLASSIFICATION	1.1622143765011247E-6	DESIGN
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.865938215931547	DESIGN	0.13406178406845307	WITHOUT_CLASSIFICATION
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999950503966151	WITHOUT_CLASSIFICATION	4.949603384968344E-6	DESIGN
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999976018614712	WITHOUT_CLASSIFICATION	2.398138528715452E-6	DESIGN
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999943008712678	WITHOUT_CLASSIFICATION	5.699128732090275E-6	DESIGN
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999994834223247	WITHOUT_CLASSIFICATION	5.16577675282957E-7	DESIGN
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999996203715549	WITHOUT_CLASSIFICATION	3.7962844516268654E-7	DESIGN
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9985765123079875	WITHOUT_CLASSIFICATION	0.001423487692012501	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999985208924003	WITHOUT_CLASSIFICATION	1.4791075996952204E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999985208924003	WITHOUT_CLASSIFICATION	1.4791075996952204E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999985208924003	WITHOUT_CLASSIFICATION	1.4791075996952204E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999985208924003	WITHOUT_CLASSIFICATION	1.4791075996952204E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999985208924003	WITHOUT_CLASSIFICATION	1.4791075996952204E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999985208924003	WITHOUT_CLASSIFICATION	1.4791075996952204E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999985208924003	WITHOUT_CLASSIFICATION	1.4791075996952204E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999985208924003	WITHOUT_CLASSIFICATION	1.4791075996952204E-6	DESIGN
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999986492202902	WITHOUT_CLASSIFICATION	1.3507797098175721E-6	DESIGN
/* fall through */	WITHOUT_CLASSIFICATION	0.9999916792333472	WITHOUT_CLASSIFICATION	8.32076665273059E-6	DESIGN
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.999743126315409	WITHOUT_CLASSIFICATION	2.568736845910415E-4	DESIGN
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999998915614893	DESIGN	1.0843851063143866E-7	WITHOUT_CLASSIFICATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9995117541708582	WITHOUT_CLASSIFICATION	4.8824582914171194E-4	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9995117541708582	WITHOUT_CLASSIFICATION	4.8824582914171194E-4	DESIGN
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9987756025402732	WITHOUT_CLASSIFICATION	0.0012243974597268101	DESIGN
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.8066446898284013	WITHOUT_CLASSIFICATION	0.19335531017159877	DESIGN
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.999999994940064	WITHOUT_CLASSIFICATION	5.0599359604870865E-9	DESIGN
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999997900687164	WITHOUT_CLASSIFICATION	2.0993128357535666E-7	DESIGN
// get current context	WITHOUT_CLASSIFICATION	0.9999835295246323	WITHOUT_CLASSIFICATION	1.6470475367633603E-5	DESIGN
// octal constant	WITHOUT_CLASSIFICATION	0.9999998544410853	WITHOUT_CLASSIFICATION	1.455589147064491E-7	DESIGN
// read	WITHOUT_CLASSIFICATION	0.9999820108200795	WITHOUT_CLASSIFICATION	1.7989179920551023E-5	DESIGN
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.701542612475533	DESIGN	0.298457387524467	WITHOUT_CLASSIFICATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999994260803541	WITHOUT_CLASSIFICATION	5.739196459394356E-7	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999787817951258	WITHOUT_CLASSIFICATION	2.121820487419038E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999787817951258	WITHOUT_CLASSIFICATION	2.121820487419038E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999787817951258	WITHOUT_CLASSIFICATION	2.121820487419038E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999608671391801	WITHOUT_CLASSIFICATION	3.913286081986991E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999608671391801	WITHOUT_CLASSIFICATION	3.913286081986991E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999608671391801	WITHOUT_CLASSIFICATION	3.913286081986991E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999608671391801	WITHOUT_CLASSIFICATION	3.913286081986991E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999608671391801	WITHOUT_CLASSIFICATION	3.913286081986991E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999608671391801	WITHOUT_CLASSIFICATION	3.913286081986991E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999608671391801	WITHOUT_CLASSIFICATION	3.913286081986991E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999608671391801	WITHOUT_CLASSIFICATION	3.913286081986991E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999608671391801	WITHOUT_CLASSIFICATION	3.913286081986991E-5	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9997469987205597	WITHOUT_CLASSIFICATION	2.530012794401978E-4	DESIGN
// at end	WITHOUT_CLASSIFICATION	0.9996878709871473	WITHOUT_CLASSIFICATION	3.1212901285272406E-4	DESIGN
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999998222630144	WITHOUT_CLASSIFICATION	1.7773698565643722E-7	DESIGN
// save blocking state	WITHOUT_CLASSIFICATION	0.9999571410284553	WITHOUT_CLASSIFICATION	4.2858971544757386E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999608671391801	WITHOUT_CLASSIFICATION	3.913286081986991E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999608671391801	WITHOUT_CLASSIFICATION	3.913286081986991E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999608671391801	WITHOUT_CLASSIFICATION	3.913286081986991E-5	DESIGN
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999991140451863	WITHOUT_CLASSIFICATION	8.859548137517041E-7	DESIGN
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999397900427914	WITHOUT_CLASSIFICATION	6.0209957208520115E-5	DESIGN
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999327803030915	WITHOUT_CLASSIFICATION	6.72196969085074E-5	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999987372792076	WITHOUT_CLASSIFICATION	1.2627207923479713E-6	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999987372792076	WITHOUT_CLASSIFICATION	1.2627207923479713E-6	DESIGN
// load null block	WITHOUT_CLASSIFICATION	0.9999999135248203	WITHOUT_CLASSIFICATION	8.647517960371252E-8	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999996551157788	WITHOUT_CLASSIFICATION	3.448842211922645E-7	DESIGN
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999984460930091	WITHOUT_CLASSIFICATION	1.5539069909089284E-6	DESIGN
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9997052837492639	WITHOUT_CLASSIFICATION	2.947162507361433E-4	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.999999873849365	WITHOUT_CLASSIFICATION	1.2615063494774185E-7	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.999999873849365	WITHOUT_CLASSIFICATION	1.2615063494774185E-7	DESIGN
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.7771004622247939	WITHOUT_CLASSIFICATION	0.22289953777520607	DESIGN
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999999979554348	WITHOUT_CLASSIFICATION	2.0445651382772673E-9	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999997881361349	WITHOUT_CLASSIFICATION	2.1186386510269746E-7	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9996142355171797	WITHOUT_CLASSIFICATION	3.8576448282041497E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9996142355171797	WITHOUT_CLASSIFICATION	3.8576448282041497E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9996142355171797	WITHOUT_CLASSIFICATION	3.8576448282041497E-4	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9999409917220066	WITHOUT_CLASSIFICATION	5.9008277993432095E-5	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999994373793039	WITHOUT_CLASSIFICATION	5.626206960666632E-7	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999994373793039	WITHOUT_CLASSIFICATION	5.626206960666632E-7	DESIGN
// check arity	WITHOUT_CLASSIFICATION	0.9999404607747202	WITHOUT_CLASSIFICATION	5.953922527980559E-5	DESIGN
// check arity	WITHOUT_CLASSIFICATION	0.9999404607747202	WITHOUT_CLASSIFICATION	5.953922527980559E-5	DESIGN
// create the class	WITHOUT_CLASSIFICATION	0.999980957625442	WITHOUT_CLASSIFICATION	1.904237455801851E-5	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999999388677886	WITHOUT_CLASSIFICATION	6.11322114116256E-8	DESIGN
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999998526625783	WITHOUT_CLASSIFICATION	1.4733742163926305E-7	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9999976652962441	WITHOUT_CLASSIFICATION	2.3347037559927836E-6	DESIGN
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999840465128191	WITHOUT_CLASSIFICATION	1.5953487180910744E-5	DESIGN
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999689499031775	WITHOUT_CLASSIFICATION	3.105009682246713E-5	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.999981836580346	WITHOUT_CLASSIFICATION	1.8163419653965158E-5	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999991915855431	WITHOUT_CLASSIFICATION	8.084144570547896E-7	DESIGN
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999976604479833	WITHOUT_CLASSIFICATION	2.339552016609568E-6	DESIGN
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999999955589943	WITHOUT_CLASSIFICATION	4.441005719999393E-9	DESIGN
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.926357500983382	DESIGN	0.07364249901661805	WITHOUT_CLASSIFICATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9964438231364338	WITHOUT_CLASSIFICATION	0.003556176863566185	DESIGN
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9999689436794948	WITHOUT_CLASSIFICATION	3.10563205051528E-5	DESIGN
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999987332126203	WITHOUT_CLASSIFICATION	1.2667873796806464E-6	DESIGN
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9993043163077943	WITHOUT_CLASSIFICATION	6.956836922057216E-4	DESIGN
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999697354114897	WITHOUT_CLASSIFICATION	3.0264588510362113E-5	DESIGN
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999689192754369	WITHOUT_CLASSIFICATION	3.1080724563149036E-5	DESIGN
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999999899087115	WITHOUT_CLASSIFICATION	1.009128840017308E-8	DESIGN
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999999900378544	WITHOUT_CLASSIFICATION	9.962145491229702E-9	DESIGN
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999961818941278	WITHOUT_CLASSIFICATION	3.818105872223651E-6	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9681486234960092	WITHOUT_CLASSIFICATION	0.031851376503990836	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.999826870980751	WITHOUT_CLASSIFICATION	1.7312901924913435E-4	DESIGN
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999991217339087	WITHOUT_CLASSIFICATION	8.782660914418414E-7	DESIGN
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.999993017366038	WITHOUT_CLASSIFICATION	6.98263396205767E-6	DESIGN
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999992767648062	WITHOUT_CLASSIFICATION	7.232351937203509E-7	DESIGN
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9903898281123484	WITHOUT_CLASSIFICATION	0.009610171887651692	DESIGN
/* expected */	WITHOUT_CLASSIFICATION	0.9999990317825767	WITHOUT_CLASSIFICATION	9.682174232803316E-7	DESIGN
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9992912058022205	WITHOUT_CLASSIFICATION	7.087941977795978E-4	DESIGN
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999999158483487	WITHOUT_CLASSIFICATION	8.41516513546489E-8	DESIGN
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999999898459483	WITHOUT_CLASSIFICATION	1.0154051659923084E-8	DESIGN
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999995555197364	WITHOUT_CLASSIFICATION	4.444802636033466E-7	DESIGN
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.999996795387026	WITHOUT_CLASSIFICATION	3.2046129739100104E-6	DESIGN
// use numbered access method	WITHOUT_CLASSIFICATION	0.9991465834536377	WITHOUT_CLASSIFICATION	8.534165463623734E-4	DESIGN
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999998895254177	WITHOUT_CLASSIFICATION	1.1047458223565662E-7	DESIGN
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999999772261163	WITHOUT_CLASSIFICATION	2.2773883709612643E-8	DESIGN
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9518290325947738	WITHOUT_CLASSIFICATION	0.048170967405226126	DESIGN
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9998833317224296	WITHOUT_CLASSIFICATION	1.1666827757034307E-4	DESIGN
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.999636457593462	WITHOUT_CLASSIFICATION	3.63542406537985E-4	DESIGN
// build scope names string	WITHOUT_CLASSIFICATION	0.9999641785563728	WITHOUT_CLASSIFICATION	3.5821443627256114E-5	DESIGN
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9976898805568097	WITHOUT_CLASSIFICATION	0.002310119443190213	DESIGN
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.950287951236203	WITHOUT_CLASSIFICATION	0.049712048763796875	DESIGN
// finally	WITHOUT_CLASSIFICATION	0.9999962389189477	WITHOUT_CLASSIFICATION	3.7610810522109203E-6	DESIGN
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9999999661480483	WITHOUT_CLASSIFICATION	3.385195171064775E-8	DESIGN
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999993710840006	WITHOUT_CLASSIFICATION	6.28915999493252E-7	DESIGN
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999510468945788	WITHOUT_CLASSIFICATION	4.895310542114942E-5	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9994346331095553	WITHOUT_CLASSIFICATION	5.65366890444648E-4	DESIGN
// specific arity	WITHOUT_CLASSIFICATION	0.9999011668149358	WITHOUT_CLASSIFICATION	9.883318506422934E-5	DESIGN
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999999964814411	WITHOUT_CLASSIFICATION	3.5185590191186445E-9	DESIGN
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999999020222607	WITHOUT_CLASSIFICATION	9.797773927813724E-8	DESIGN
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999999512382072	WITHOUT_CLASSIFICATION	4.876179280219474E-8	DESIGN
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9976625335256445	WITHOUT_CLASSIFICATION	0.0023374664743555456	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999992714341043	WITHOUT_CLASSIFICATION	7.28565895769892E-7	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999992714341043	WITHOUT_CLASSIFICATION	7.28565895769892E-7	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999099358664	WITHOUT_CLASSIFICATION	9.006413357255348E-8	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999099358664	WITHOUT_CLASSIFICATION	9.006413357255348E-8	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.880838168278693	DESIGN	0.11916183172130695	WITHOUT_CLASSIFICATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.880838168278693	DESIGN	0.11916183172130695	WITHOUT_CLASSIFICATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999856382166009	WITHOUT_CLASSIFICATION	1.4361783399089603E-4	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999856382166009	WITHOUT_CLASSIFICATION	1.4361783399089603E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999905931384	WITHOUT_CLASSIFICATION	9.406861603762568E-9	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999905931384	WITHOUT_CLASSIFICATION	9.406861603762568E-9	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999905931384	WITHOUT_CLASSIFICATION	9.406861603762568E-9	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999905931384	WITHOUT_CLASSIFICATION	9.406861603762568E-9	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999905931384	WITHOUT_CLASSIFICATION	9.406861603762568E-9	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999905931384	WITHOUT_CLASSIFICATION	9.406861603762568E-9	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999905931384	WITHOUT_CLASSIFICATION	9.406861603762568E-9	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999905931384	WITHOUT_CLASSIFICATION	9.406861603762568E-9	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999905931384	WITHOUT_CLASSIFICATION	9.406861603762568E-9	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999977433290247	WITHOUT_CLASSIFICATION	2.256670975258893E-6	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999977433290247	WITHOUT_CLASSIFICATION	2.256670975258893E-6	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999977433290247	WITHOUT_CLASSIFICATION	2.256670975258893E-6	DESIGN
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999768467681132	WITHOUT_CLASSIFICATION	2.3153231886854194E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999992862229279	WITHOUT_CLASSIFICATION	7.137770721087423E-6	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999992862229279	WITHOUT_CLASSIFICATION	7.137770721087423E-6	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999992862229279	WITHOUT_CLASSIFICATION	7.137770721087423E-6	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999987223472552	WITHOUT_CLASSIFICATION	1.277652744797968E-6	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999987223472552	WITHOUT_CLASSIFICATION	1.277652744797968E-6	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999987223472552	WITHOUT_CLASSIFICATION	1.277652744797968E-6	DESIGN
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999999698320386	WITHOUT_CLASSIFICATION	3.016796131644575E-8	DESIGN
// backspace	WITHOUT_CLASSIFICATION	0.9999998712484025	WITHOUT_CLASSIFICATION	1.2875159753490706E-7	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9997244527136303	WITHOUT_CLASSIFICATION	2.755472863697149E-4	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9982177886653497	WITHOUT_CLASSIFICATION	0.0017822113346502896	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9982177886653497	WITHOUT_CLASSIFICATION	0.0017822113346502896	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9982177886653497	WITHOUT_CLASSIFICATION	0.0017822113346502896	DESIGN
/* package-private */	WITHOUT_CLASSIFICATION	0.9999924492362057	WITHOUT_CLASSIFICATION	7.550763794334414E-6	DESIGN
// fall through	WITHOUT_CLASSIFICATION	0.9999945261126942	WITHOUT_CLASSIFICATION	5.473887305748229E-6	DESIGN
// fall through	WITHOUT_CLASSIFICATION	0.9999945261126942	WITHOUT_CLASSIFICATION	5.473887305748229E-6	DESIGN
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9985593413372119	WITHOUT_CLASSIFICATION	0.0014406586627881003	DESIGN
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999998792407627	WITHOUT_CLASSIFICATION	1.2075923729235143E-7	DESIGN
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999998792407627	WITHOUT_CLASSIFICATION	1.2075923729235143E-7	DESIGN
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9146704197323539	DESIGN	0.08532958026764619	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999999988590137	WITHOUT_CLASSIFICATION	1.1409863646559454E-9	DESIGN
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999998178450153	WITHOUT_CLASSIFICATION	1.821549845860084E-7	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999902178937	WITHOUT_CLASSIFICATION	9.78210635276103E-9	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999902178937	WITHOUT_CLASSIFICATION	9.78210635276103E-9	DESIGN
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.8604461789035335	WITHOUT_CLASSIFICATION	0.1395538210964665	DESIGN
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999999075118626	WITHOUT_CLASSIFICATION	9.248813734386763E-8	DESIGN
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.6467714957014332	WITHOUT_CLASSIFICATION	0.35322850429856667	DESIGN
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9999783375895699	WITHOUT_CLASSIFICATION	2.166241043006137E-5	DESIGN
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.8790667371055629	WITHOUT_CLASSIFICATION	0.12093326289443712	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999902178937	WITHOUT_CLASSIFICATION	9.78210635276103E-9	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999902178937	WITHOUT_CLASSIFICATION	9.78210635276103E-9	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999902178937	WITHOUT_CLASSIFICATION	9.78210635276103E-9	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999902178937	WITHOUT_CLASSIFICATION	9.78210635276103E-9	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999902178937	WITHOUT_CLASSIFICATION	9.78210635276103E-9	DESIGN
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999702453393257	WITHOUT_CLASSIFICATION	2.9754660674308305E-5	DESIGN
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.999997950209026	WITHOUT_CLASSIFICATION	2.049790973967785E-6	DESIGN
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.999999011555008	WITHOUT_CLASSIFICATION	9.88444991996966E-7	DESIGN
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999999881334101	WITHOUT_CLASSIFICATION	1.1866589927270828E-8	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999288598915046	WITHOUT_CLASSIFICATION	7.114010849543556E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999288598915046	WITHOUT_CLASSIFICATION	7.114010849543556E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999288598915046	WITHOUT_CLASSIFICATION	7.114010849543556E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999288598915046	WITHOUT_CLASSIFICATION	7.114010849543556E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999288598915046	WITHOUT_CLASSIFICATION	7.114010849543556E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999288598915046	WITHOUT_CLASSIFICATION	7.114010849543556E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999288598915046	WITHOUT_CLASSIFICATION	7.114010849543556E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999288598915046	WITHOUT_CLASSIFICATION	7.114010849543556E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999288598915046	WITHOUT_CLASSIFICATION	7.114010849543556E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999288598915046	WITHOUT_CLASSIFICATION	7.114010849543556E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999288598915046	WITHOUT_CLASSIFICATION	7.114010849543556E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999288598915046	WITHOUT_CLASSIFICATION	7.114010849543556E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999288598915046	WITHOUT_CLASSIFICATION	7.114010849543556E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999288598915046	WITHOUT_CLASSIFICATION	7.114010849543556E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999288598915046	WITHOUT_CLASSIFICATION	7.114010849543556E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999288598915046	WITHOUT_CLASSIFICATION	7.114010849543556E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999288598915046	WITHOUT_CLASSIFICATION	7.114010849543556E-5	DESIGN
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999989164095334	WITHOUT_CLASSIFICATION	1.0835904664859752E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999288598915046	WITHOUT_CLASSIFICATION	7.114010849543556E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999288598915046	WITHOUT_CLASSIFICATION	7.114010849543556E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999288598915046	WITHOUT_CLASSIFICATION	7.114010849543556E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999288598915046	WITHOUT_CLASSIFICATION	7.114010849543556E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999288598915046	WITHOUT_CLASSIFICATION	7.114010849543556E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999288598915046	WITHOUT_CLASSIFICATION	7.114010849543556E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999288598915046	WITHOUT_CLASSIFICATION	7.114010849543556E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999288598915046	WITHOUT_CLASSIFICATION	7.114010849543556E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999288598915046	WITHOUT_CLASSIFICATION	7.114010849543556E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999288598915046	WITHOUT_CLASSIFICATION	7.114010849543556E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999288598915046	WITHOUT_CLASSIFICATION	7.114010849543556E-5	DESIGN
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9041856896539519	WITHOUT_CLASSIFICATION	0.0958143103460482	DESIGN
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9986575081627884	WITHOUT_CLASSIFICATION	0.001342491837211481	DESIGN
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999993572146569	WITHOUT_CLASSIFICATION	6.427853431660568E-7	DESIGN
// get "self"	WITHOUT_CLASSIFICATION	0.9999993639610095	WITHOUT_CLASSIFICATION	6.360389905433655E-7	DESIGN
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999999686703254	WITHOUT_CLASSIFICATION	3.132967470527225E-8	DESIGN
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999862758324448	WITHOUT_CLASSIFICATION	1.3724167555233283E-5	DESIGN
// only public methods	WITHOUT_CLASSIFICATION	0.9999303369207124	WITHOUT_CLASSIFICATION	6.966307928757778E-5	DESIGN
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999999789345755	WITHOUT_CLASSIFICATION	2.1065424582872067E-8	DESIGN
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999956703035348	WITHOUT_CLASSIFICATION	4.329696465243596E-6	DESIGN
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9999998482086114	WITHOUT_CLASSIFICATION	1.5179138861167202E-7	DESIGN
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999981738077784	WITHOUT_CLASSIFICATION	1.826192221633995E-6	DESIGN
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999999662452534	WITHOUT_CLASSIFICATION	3.3754746615080636E-8	DESIGN
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999981118331868	WITHOUT_CLASSIFICATION	1.8881668132476265E-6	DESIGN
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999999620587461	WITHOUT_CLASSIFICATION	3.7941253862844955E-8	DESIGN
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.999988263112945	WITHOUT_CLASSIFICATION	1.1736887054994692E-5	DESIGN
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999897638655123	WITHOUT_CLASSIFICATION	1.0236134487713477E-5	DESIGN
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9992606991359579	WITHOUT_CLASSIFICATION	7.393008640420567E-4	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999989961718685	WITHOUT_CLASSIFICATION	1.0038281315214918E-6	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999989961718685	WITHOUT_CLASSIFICATION	1.0038281315214918E-6	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999989961718685	WITHOUT_CLASSIFICATION	1.0038281315214918E-6	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999989961718685	WITHOUT_CLASSIFICATION	1.0038281315214918E-6	DESIGN
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999989537391106	WITHOUT_CLASSIFICATION	1.0462608893864892E-6	DESIGN
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9999917460493227	WITHOUT_CLASSIFICATION	8.253950677240474E-6	DESIGN
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999996724010594	WITHOUT_CLASSIFICATION	3.275989405432531E-7	DESIGN
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999996724010594	WITHOUT_CLASSIFICATION	3.275989405432531E-7	DESIGN
// set self to the class	WITHOUT_CLASSIFICATION	0.9999943846785957	WITHOUT_CLASSIFICATION	5.615321404256213E-6	DESIGN
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.999998618985248	WITHOUT_CLASSIFICATION	1.381014751983218E-6	DESIGN
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999993284312461	WITHOUT_CLASSIFICATION	6.715687538647762E-7	DESIGN
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999997733729986	WITHOUT_CLASSIFICATION	2.266270013468653E-7	DESIGN
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999260478320441	WITHOUT_CLASSIFICATION	7.395216795594723E-5	DESIGN
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999997117651526	WITHOUT_CLASSIFICATION	2.8823484735251265E-7	DESIGN
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999998414735182	WITHOUT_CLASSIFICATION	1.5852648181920227E-7	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.99999162897131	WITHOUT_CLASSIFICATION	8.371028690027315E-6	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.99999162897131	WITHOUT_CLASSIFICATION	8.371028690027315E-6	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.99999162897131	WITHOUT_CLASSIFICATION	8.371028690027315E-6	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.99999162897131	WITHOUT_CLASSIFICATION	8.371028690027315E-6	DESIGN
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999990877176085	WITHOUT_CLASSIFICATION	9.122823914210706E-7	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9998986537911806	WITHOUT_CLASSIFICATION	1.0134620881941997E-4	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9998986537911806	WITHOUT_CLASSIFICATION	1.0134620881941997E-4	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9998986537911806	WITHOUT_CLASSIFICATION	1.0134620881941997E-4	DESIGN
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999992337942768	WITHOUT_CLASSIFICATION	7.662057232189125E-7	DESIGN
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999598667601092	WITHOUT_CLASSIFICATION	4.013323989086594E-5	DESIGN
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9995595252392252	WITHOUT_CLASSIFICATION	4.4047476077485864E-4	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9987003909098573	DESIGN	0.001299609090142723	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9987003909098573	DESIGN	0.001299609090142723	WITHOUT_CLASSIFICATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999999999822372	WITHOUT_CLASSIFICATION	1.7762784740493503E-11	DESIGN
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9994185455415475	WITHOUT_CLASSIFICATION	5.814544584524959E-4	DESIGN
/* not a class */	WITHOUT_CLASSIFICATION	0.9999812579295457	WITHOUT_CLASSIFICATION	1.874207045425722E-5	DESIGN
/* not a class */	WITHOUT_CLASSIFICATION	0.9999812579295457	WITHOUT_CLASSIFICATION	1.874207045425722E-5	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9856215218279378	WITHOUT_CLASSIFICATION	0.01437847817206221	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9856215218279378	WITHOUT_CLASSIFICATION	0.01437847817206221	DESIGN
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.999999720980501	WITHOUT_CLASSIFICATION	2.7901949891590604E-7	DESIGN
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9999988903641879	WITHOUT_CLASSIFICATION	1.1096358121173022E-6	DESIGN
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999999621339277	WITHOUT_CLASSIFICATION	3.7866072348298286E-8	DESIGN
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999997284670405	WITHOUT_CLASSIFICATION	2.7153295942226947E-7	DESIGN
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999997666124625	WITHOUT_CLASSIFICATION	2.3338753762698542E-7	DESIGN
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999986273009231	WITHOUT_CLASSIFICATION	1.372699076898768E-6	DESIGN
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999995666910445	WITHOUT_CLASSIFICATION	4.333089555327839E-7	DESIGN
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9996442051295148	WITHOUT_CLASSIFICATION	3.557948704851989E-4	DESIGN
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999999725702899	WITHOUT_CLASSIFICATION	2.7429710045973082E-8	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999972082640529	WITHOUT_CLASSIFICATION	2.791735947014462E-6	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999972082640529	WITHOUT_CLASSIFICATION	2.791735947014462E-6	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999989569142893	WITHOUT_CLASSIFICATION	1.0430857107478607E-6	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999989569142893	WITHOUT_CLASSIFICATION	1.0430857107478607E-6	DESIGN
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999983503595825	WITHOUT_CLASSIFICATION	1.6496404174697897E-6	DESIGN
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999999879789508	WITHOUT_CLASSIFICATION	1.2021049164247957E-8	DESIGN
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999976247499343	WITHOUT_CLASSIFICATION	2.375250065849036E-6	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998874025618	WITHOUT_CLASSIFICATION	1.1259743816229153E-7	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998874025618	WITHOUT_CLASSIFICATION	1.1259743816229153E-7	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998874025618	WITHOUT_CLASSIFICATION	1.1259743816229153E-7	DESIGN
// line 286	WITHOUT_CLASSIFICATION	0.9999998025742881	WITHOUT_CLASSIFICATION	1.9742571180101862E-7	DESIGN
// line 476	WITHOUT_CLASSIFICATION	0.9999988108857468	WITHOUT_CLASSIFICATION	1.1891142531705364E-6	DESIGN
// line 513	WITHOUT_CLASSIFICATION	0.9999990780887031	WITHOUT_CLASSIFICATION	9.219112968891838E-7	DESIGN
// line 530	WITHOUT_CLASSIFICATION	0.9999997606555053	WITHOUT_CLASSIFICATION	2.3934449461298E-7	DESIGN
// line 533	WITHOUT_CLASSIFICATION	0.9999983969195315	WITHOUT_CLASSIFICATION	1.6030804684889252E-6	DESIGN
// line 537	WITHOUT_CLASSIFICATION	0.9999990626261144	WITHOUT_CLASSIFICATION	9.373738855412956E-7	DESIGN
// line 551	WITHOUT_CLASSIFICATION	0.99999949962633	WITHOUT_CLASSIFICATION	5.003736700102281E-7	DESIGN
// end loop	WITHOUT_CLASSIFICATION	0.9999998040862864	WITHOUT_CLASSIFICATION	1.959137135189031E-7	DESIGN
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9993122981147297	WITHOUT_CLASSIFICATION	6.877018852702849E-4	DESIGN
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999728040925887	WITHOUT_CLASSIFICATION	2.7195907411271038E-5	DESIGN
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.5516731219596098	WITHOUT_CLASSIFICATION	0.44832687804039023	DESIGN
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9999995793431651	WITHOUT_CLASSIFICATION	4.2065683485542637E-7	DESIGN
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999996044812078	WITHOUT_CLASSIFICATION	3.955187922253586E-7	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9987003909098573	DESIGN	0.001299609090142723	WITHOUT_CLASSIFICATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.999513620165751	WITHOUT_CLASSIFICATION	4.8637983424901893E-4	DESIGN
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9687862964192138	WITHOUT_CLASSIFICATION	0.031213703580786293	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.8221989317279293	DESIGN	0.1778010682720706	WITHOUT_CLASSIFICATION
/*value*/	WITHOUT_CLASSIFICATION	0.9998726219195345	WITHOUT_CLASSIFICATION	1.2737808046557402E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998726219195345	WITHOUT_CLASSIFICATION	1.2737808046557402E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998726219195345	WITHOUT_CLASSIFICATION	1.2737808046557402E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998726219195345	WITHOUT_CLASSIFICATION	1.2737808046557402E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998726219195345	WITHOUT_CLASSIFICATION	1.2737808046557402E-4	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999618957991521	WITHOUT_CLASSIFICATION	3.810420084787959E-5	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998726219195345	WITHOUT_CLASSIFICATION	1.2737808046557402E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998726219195345	WITHOUT_CLASSIFICATION	1.2737808046557402E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998726219195345	WITHOUT_CLASSIFICATION	1.2737808046557402E-4	DESIGN
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.999499525025522	WITHOUT_CLASSIFICATION	5.004749744781198E-4	DESIGN
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9995798805886144	WITHOUT_CLASSIFICATION	4.201194113857403E-4	DESIGN
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9999999993501572	WITHOUT_CLASSIFICATION	6.49842779711631E-10	DESIGN
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9806523397092157	WITHOUT_CLASSIFICATION	0.01934766029078425	DESIGN
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.999999806273779	WITHOUT_CLASSIFICATION	1.9372622100170535E-7	DESIGN
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999927602837846	WITHOUT_CLASSIFICATION	7.239716215405049E-6	DESIGN
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999478152006696	WITHOUT_CLASSIFICATION	5.2184799330443077E-5	DESIGN
// line 572	WITHOUT_CLASSIFICATION	0.9999998563177765	WITHOUT_CLASSIFICATION	1.4368222349905187E-7	DESIGN
// line 601	WITHOUT_CLASSIFICATION	0.9999990524466603	WITHOUT_CLASSIFICATION	9.475533397983312E-7	DESIGN
// line 601	WITHOUT_CLASSIFICATION	0.9999990524466603	WITHOUT_CLASSIFICATION	9.475533397983312E-7	DESIGN
// line 625	WITHOUT_CLASSIFICATION	0.9999996992797089	WITHOUT_CLASSIFICATION	3.00720291102777E-7	DESIGN
// line 649	WITHOUT_CLASSIFICATION	0.9999989341667823	WITHOUT_CLASSIFICATION	1.0658332177319901E-6	DESIGN
// line 691	WITHOUT_CLASSIFICATION	0.9999991822490195	WITHOUT_CLASSIFICATION	8.177509805499841E-7	DESIGN
// line 723	WITHOUT_CLASSIFICATION	0.99999943630036	WITHOUT_CLASSIFICATION	5.636996399099994E-7	DESIGN
// line 732	WITHOUT_CLASSIFICATION	0.9999997815486593	WITHOUT_CLASSIFICATION	2.1845134064328533E-7	DESIGN
// line 745	WITHOUT_CLASSIFICATION	0.999999605463329	WITHOUT_CLASSIFICATION	3.9453667102683785E-7	DESIGN
// line 766	WITHOUT_CLASSIFICATION	0.9999988564198984	WITHOUT_CLASSIFICATION	1.1435801016558594E-6	DESIGN
// line 785	WITHOUT_CLASSIFICATION	0.999999724868138	WITHOUT_CLASSIFICATION	2.7513186189744975E-7	DESIGN
// line 794	WITHOUT_CLASSIFICATION	0.9999993961971935	WITHOUT_CLASSIFICATION	6.038028066100478E-7	DESIGN
// line 800	WITHOUT_CLASSIFICATION	0.999999828002802	WITHOUT_CLASSIFICATION	1.7199719804650595E-7	DESIGN
// line 812	WITHOUT_CLASSIFICATION	0.9999999532452859	WITHOUT_CLASSIFICATION	4.675471402373332E-8	DESIGN
// line 827	WITHOUT_CLASSIFICATION	0.9999998829924747	WITHOUT_CLASSIFICATION	1.1700752537727231E-7	DESIGN
// line 839	WITHOUT_CLASSIFICATION	0.9999990106140775	WITHOUT_CLASSIFICATION	9.893859225359599E-7	DESIGN
// line 845	WITHOUT_CLASSIFICATION	0.9999996475454139	WITHOUT_CLASSIFICATION	3.5245458616965993E-7	DESIGN
// line 864	WITHOUT_CLASSIFICATION	0.9999992906254241	WITHOUT_CLASSIFICATION	7.093745758469948E-7	DESIGN
// line 886	WITHOUT_CLASSIFICATION	0.9999990918028544	WITHOUT_CLASSIFICATION	9.081971455897913E-7	DESIGN
// line 896	WITHOUT_CLASSIFICATION	0.9999990656641722	WITHOUT_CLASSIFICATION	9.34335827856518E-7	DESIGN
// line 911	WITHOUT_CLASSIFICATION	0.9999993923588655	WITHOUT_CLASSIFICATION	6.07641134587693E-7	DESIGN
// line 929	WITHOUT_CLASSIFICATION	0.9999997023266377	WITHOUT_CLASSIFICATION	2.976733622634697E-7	DESIGN
// line 952	WITHOUT_CLASSIFICATION	0.9999998953820833	WITHOUT_CLASSIFICATION	1.0461791666179729E-7	DESIGN
// line 970	WITHOUT_CLASSIFICATION	0.9999998216783509	WITHOUT_CLASSIFICATION	1.7832164922090116E-7	DESIGN
// line 972	WITHOUT_CLASSIFICATION	0.9999998949676833	WITHOUT_CLASSIFICATION	1.0503231665274546E-7	DESIGN
// line 991	WITHOUT_CLASSIFICATION	0.9999995212364664	WITHOUT_CLASSIFICATION	4.787635336741575E-7	DESIGN
// line 1011	WITHOUT_CLASSIFICATION	0.9999835249658305	WITHOUT_CLASSIFICATION	1.647503416945983E-5	DESIGN
// line 1026	WITHOUT_CLASSIFICATION	0.9999986721515173	WITHOUT_CLASSIFICATION	1.3278484826478645E-6	DESIGN
// line 1038	WITHOUT_CLASSIFICATION	0.9999984040662957	WITHOUT_CLASSIFICATION	1.5959337042609345E-6	DESIGN
// line 1067	WITHOUT_CLASSIFICATION	0.9999978308240586	WITHOUT_CLASSIFICATION	2.169175941487423E-6	DESIGN
// line 1085	WITHOUT_CLASSIFICATION	0.9999995253822186	WITHOUT_CLASSIFICATION	4.7461778138165425E-7	DESIGN
// line 1097	WITHOUT_CLASSIFICATION	0.9999991254414436	WITHOUT_CLASSIFICATION	8.745585563828578E-7	DESIGN
// line 1105	WITHOUT_CLASSIFICATION	0.9999998440357757	WITHOUT_CLASSIFICATION	1.559642243188595E-7	DESIGN
// line 1122	WITHOUT_CLASSIFICATION	0.9999999193309934	WITHOUT_CLASSIFICATION	8.066900648978854E-8	DESIGN
// line 1133	WITHOUT_CLASSIFICATION	0.9999988845002853	WITHOUT_CLASSIFICATION	1.1154997146836432E-6	DESIGN
// line 1145	WITHOUT_CLASSIFICATION	0.9999996344534532	WITHOUT_CLASSIFICATION	3.655465468432872E-7	DESIGN
// line 1169	WITHOUT_CLASSIFICATION	0.9999990345973917	WITHOUT_CLASSIFICATION	9.65402608216281E-7	DESIGN
// line 1201	WITHOUT_CLASSIFICATION	0.9999997100632769	WITHOUT_CLASSIFICATION	2.8993672303602853E-7	DESIGN
// line 1210	WITHOUT_CLASSIFICATION	0.9999999410711998	WITHOUT_CLASSIFICATION	5.892880019916334E-8	DESIGN
// line 1229	WITHOUT_CLASSIFICATION	0.9999997230797808	WITHOUT_CLASSIFICATION	2.7692021919101135E-7	DESIGN
// line 1261	WITHOUT_CLASSIFICATION	0.999999449667329	WITHOUT_CLASSIFICATION	5.5033267090822E-7	DESIGN
// line 1287	WITHOUT_CLASSIFICATION	0.9999998853609647	WITHOUT_CLASSIFICATION	1.146390352562608E-7	DESIGN
// line 1293	WITHOUT_CLASSIFICATION	0.9999995013010468	WITHOUT_CLASSIFICATION	4.986989532987012E-7	DESIGN
// line 1307	WITHOUT_CLASSIFICATION	0.9999993708370863	WITHOUT_CLASSIFICATION	6.291629135822895E-7	DESIGN
// line 1320	WITHOUT_CLASSIFICATION	0.9999997836220161	WITHOUT_CLASSIFICATION	2.163779838157929E-7	DESIGN
// line 1325	WITHOUT_CLASSIFICATION	0.9999996057815629	WITHOUT_CLASSIFICATION	3.942184371404324E-7	DESIGN
// line 1363	WITHOUT_CLASSIFICATION	0.9999971824629349	WITHOUT_CLASSIFICATION	2.8175370651358893E-6	DESIGN
// line 1398	WITHOUT_CLASSIFICATION	0.999999181263371	WITHOUT_CLASSIFICATION	8.187366290169252E-7	DESIGN
// line 1448	WITHOUT_CLASSIFICATION	0.9999995014003997	WITHOUT_CLASSIFICATION	4.985996002446641E-7	DESIGN
// line 1456	WITHOUT_CLASSIFICATION	0.9999987134595784	WITHOUT_CLASSIFICATION	1.2865404216675984E-6	DESIGN
// line 1473	WITHOUT_CLASSIFICATION	0.9999986104980598	WITHOUT_CLASSIFICATION	1.3895019401887194E-6	DESIGN
// line 1492	WITHOUT_CLASSIFICATION	0.9999998580333617	WITHOUT_CLASSIFICATION	1.419666383391782E-7	DESIGN
// line 1513	WITHOUT_CLASSIFICATION	0.9999989350068091	WITHOUT_CLASSIFICATION	1.064993190907873E-6	DESIGN
// line 1523	WITHOUT_CLASSIFICATION	0.9999994701637609	WITHOUT_CLASSIFICATION	5.298362392227727E-7	DESIGN
// line 1562	WITHOUT_CLASSIFICATION	0.999999807667922	WITHOUT_CLASSIFICATION	1.9233207808300692E-7	DESIGN
// line 1582	WITHOUT_CLASSIFICATION	0.9999999325890064	WITHOUT_CLASSIFICATION	6.741099359793904E-8	DESIGN
// line 1603	WITHOUT_CLASSIFICATION	0.999990942797	WITHOUT_CLASSIFICATION	9.057203000035103E-6	DESIGN
// line 1603	WITHOUT_CLASSIFICATION	0.999990942797	WITHOUT_CLASSIFICATION	9.057203000035103E-6	DESIGN
// line 1615	WITHOUT_CLASSIFICATION	0.999998629898288	WITHOUT_CLASSIFICATION	1.3701017120430164E-6	DESIGN
// line 1620	WITHOUT_CLASSIFICATION	0.9999997437899438	WITHOUT_CLASSIFICATION	2.5621005612411117E-7	DESIGN
// line 1635	WITHOUT_CLASSIFICATION	0.9999972874489365	WITHOUT_CLASSIFICATION	2.7125510634665073E-6	DESIGN
// line 1652	WITHOUT_CLASSIFICATION	0.9999996995950206	WITHOUT_CLASSIFICATION	3.0040497949548137E-7	DESIGN
// line 1681	WITHOUT_CLASSIFICATION	0.9999986147187784	WITHOUT_CLASSIFICATION	1.3852812215770806E-6	DESIGN
// line 1708	WITHOUT_CLASSIFICATION	0.9999997197372428	WITHOUT_CLASSIFICATION	2.8026275725786467E-7	DESIGN
// line 1716	WITHOUT_CLASSIFICATION	0.9999987274449981	WITHOUT_CLASSIFICATION	1.2725550019532723E-6	DESIGN
// line 1755	WITHOUT_CLASSIFICATION	0.9999996180739085	WITHOUT_CLASSIFICATION	3.819260915127171E-7	DESIGN
// line 1772	WITHOUT_CLASSIFICATION	0.999999885459322	WITHOUT_CLASSIFICATION	1.1454067803430467E-7	DESIGN
// line 1789	WITHOUT_CLASSIFICATION	0.9999996761928055	WITHOUT_CLASSIFICATION	3.2380719448772763E-7	DESIGN
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999999443095063	WITHOUT_CLASSIFICATION	5.5690493705304264E-8	DESIGN
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999999443095063	WITHOUT_CLASSIFICATION	5.5690493705304264E-8	DESIGN
/* force for args */	WITHOUT_CLASSIFICATION	0.9999968380736246	WITHOUT_CLASSIFICATION	3.161926375417418E-6	DESIGN
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999974148487397	WITHOUT_CLASSIFICATION	2.5851512602495224E-6	DESIGN
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9850814791986852	WITHOUT_CLASSIFICATION	0.01491852080131483	DESIGN
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999999997385598	WITHOUT_CLASSIFICATION	2.6144024746687777E-10	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999993807702773	WITHOUT_CLASSIFICATION	6.192297226463267E-7	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999993807702773	WITHOUT_CLASSIFICATION	6.192297226463267E-7	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999993807702773	WITHOUT_CLASSIFICATION	6.192297226463267E-7	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999993807702773	WITHOUT_CLASSIFICATION	6.192297226463267E-7	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9910525108497639	DESIGN	0.008947489150236174	WITHOUT_CLASSIFICATION
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9112539215300332	WITHOUT_CLASSIFICATION	0.08874607846996695	DESIGN
// line 313	WITHOUT_CLASSIFICATION	0.9999990158966218	WITHOUT_CLASSIFICATION	9.841033782266616E-7	DESIGN
// line 339	WITHOUT_CLASSIFICATION	0.9999983253838097	WITHOUT_CLASSIFICATION	1.6746161903423208E-6	DESIGN
// line 361	WITHOUT_CLASSIFICATION	0.9999986396765603	WITHOUT_CLASSIFICATION	1.3603234396967739E-6	DESIGN
// line 413	WITHOUT_CLASSIFICATION	0.9999991604542764	WITHOUT_CLASSIFICATION	8.395457236107513E-7	DESIGN
// line 451	WITHOUT_CLASSIFICATION	0.9999996784206159	WITHOUT_CLASSIFICATION	3.21579384132074E-7	DESIGN
// line 472	WITHOUT_CLASSIFICATION	0.9999998744141776	WITHOUT_CLASSIFICATION	1.255858223157016E-7	DESIGN
// line 500	WITHOUT_CLASSIFICATION	0.9999997052696235	WITHOUT_CLASSIFICATION	2.9473037651949736E-7	DESIGN
// line 515	WITHOUT_CLASSIFICATION	0.9999995829477454	WITHOUT_CLASSIFICATION	4.1705225456753623E-7	DESIGN
// line 555	WITHOUT_CLASSIFICATION	0.9999991952995128	WITHOUT_CLASSIFICATION	8.047004872474402E-7	DESIGN
// line 582	WITHOUT_CLASSIFICATION	0.9999998920510808	WITHOUT_CLASSIFICATION	1.079489193071477E-7	DESIGN
// line 619	WITHOUT_CLASSIFICATION	0.9999994825456768	WITHOUT_CLASSIFICATION	5.174543231025298E-7	DESIGN
// line 636	WITHOUT_CLASSIFICATION	0.9999973242308124	WITHOUT_CLASSIFICATION	2.6757691875567188E-6	DESIGN
// line 669	WITHOUT_CLASSIFICATION	0.9999988880940152	WITHOUT_CLASSIFICATION	1.1119059848252382E-6	DESIGN
// line 703	WITHOUT_CLASSIFICATION	0.9999981356546012	WITHOUT_CLASSIFICATION	1.8643453987954042E-6	DESIGN
// line 776	WITHOUT_CLASSIFICATION	0.9999987970942182	WITHOUT_CLASSIFICATION	1.2029057817208135E-6	DESIGN
// line 814	WITHOUT_CLASSIFICATION	0.9999997349947143	WITHOUT_CLASSIFICATION	2.650052857600837E-7	DESIGN
// line 823	WITHOUT_CLASSIFICATION	0.9999996086490893	WITHOUT_CLASSIFICATION	3.913509106176967E-7	DESIGN
// line 854	WITHOUT_CLASSIFICATION	0.9999996507827836	WITHOUT_CLASSIFICATION	3.492172163001946E-7	DESIGN
// line 872	WITHOUT_CLASSIFICATION	0.9999999249172644	WITHOUT_CLASSIFICATION	7.508273558217639E-8	DESIGN
// line 905	WITHOUT_CLASSIFICATION	0.9999996230311918	WITHOUT_CLASSIFICATION	3.769688081926888E-7	DESIGN
// line 925	WITHOUT_CLASSIFICATION	0.9999998127948752	WITHOUT_CLASSIFICATION	1.872051249162398E-7	DESIGN
// line 958	WITHOUT_CLASSIFICATION	0.9999996874211066	WITHOUT_CLASSIFICATION	3.1257889337132264E-7	DESIGN
// line 992	WITHOUT_CLASSIFICATION	0.9999998711370425	WITHOUT_CLASSIFICATION	1.28862957515634E-7	DESIGN
// line 1047	WITHOUT_CLASSIFICATION	0.9999989140350235	WITHOUT_CLASSIFICATION	1.0859649764667404E-6	DESIGN
// line 1072	WITHOUT_CLASSIFICATION	0.9999998215829234	WITHOUT_CLASSIFICATION	1.784170765891233E-7	DESIGN
// line 1081	WITHOUT_CLASSIFICATION	0.999999154537802	WITHOUT_CLASSIFICATION	8.454621981010797E-7	DESIGN
// line 1108	WITHOUT_CLASSIFICATION	0.9999998547132098	WITHOUT_CLASSIFICATION	1.4528679013545468E-7	DESIGN
// line 1136	WITHOUT_CLASSIFICATION	0.9999982919056098	WITHOUT_CLASSIFICATION	1.708094390117007E-6	DESIGN
// line 1168	WITHOUT_CLASSIFICATION	0.9999994310818181	WITHOUT_CLASSIFICATION	5.689181819245012E-7	DESIGN
// line 1192	WITHOUT_CLASSIFICATION	0.9999999189418921	WITHOUT_CLASSIFICATION	8.10581079030422E-8	DESIGN
// line 1241	WITHOUT_CLASSIFICATION	0.9999996911892022	WITHOUT_CLASSIFICATION	3.0881079781247914E-7	DESIGN
// line 1267	WITHOUT_CLASSIFICATION	0.9999996496690526	WITHOUT_CLASSIFICATION	3.5033094734810956E-7	DESIGN
// line 1286	WITHOUT_CLASSIFICATION	0.9999996835206086	WITHOUT_CLASSIFICATION	3.164793913145748E-7	DESIGN
// line 1301	WITHOUT_CLASSIFICATION	0.999998875004183	WITHOUT_CLASSIFICATION	1.1249958168777878E-6	DESIGN
// line 1314	WITHOUT_CLASSIFICATION	0.9999986401966712	WITHOUT_CLASSIFICATION	1.3598033289274927E-6	DESIGN
// line 1333	WITHOUT_CLASSIFICATION	0.9999984359843813	WITHOUT_CLASSIFICATION	1.564015618726478E-6	DESIGN
// line 1362	WITHOUT_CLASSIFICATION	0.9999996383024607	WITHOUT_CLASSIFICATION	3.61697539328028E-7	DESIGN
// line 1395	WITHOUT_CLASSIFICATION	0.9999989875760757	WITHOUT_CLASSIFICATION	1.0124239242386674E-6	DESIGN
// line 1420	WITHOUT_CLASSIFICATION	0.9999998761730885	WITHOUT_CLASSIFICATION	1.238269113958755E-7	DESIGN
// line 1439	WITHOUT_CLASSIFICATION	0.9999985725681294	WITHOUT_CLASSIFICATION	1.4274318706455423E-6	DESIGN
// line 1476	WITHOUT_CLASSIFICATION	0.9999986768210855	WITHOUT_CLASSIFICATION	1.3231789145015513E-6	DESIGN
// line 1535	WITHOUT_CLASSIFICATION	0.9999993378450475	WITHOUT_CLASSIFICATION	6.621549525294853E-7	DESIGN
// line 1588	WITHOUT_CLASSIFICATION	0.9999996793595287	WITHOUT_CLASSIFICATION	3.206404712747024E-7	DESIGN
// line 1618	WITHOUT_CLASSIFICATION	0.9999992932042505	WITHOUT_CLASSIFICATION	7.067957494376762E-7	DESIGN
// line 1643	WITHOUT_CLASSIFICATION	0.9999967487244434	WITHOUT_CLASSIFICATION	3.2512755566183226E-6	DESIGN
// line 1669	WITHOUT_CLASSIFICATION	0.9999982926744491	WITHOUT_CLASSIFICATION	1.707325550944558E-6	DESIGN
// line 1728	WITHOUT_CLASSIFICATION	0.9999998628410942	WITHOUT_CLASSIFICATION	1.3715890572866045E-7	DESIGN
// line 1753	WITHOUT_CLASSIFICATION	0.9999992603198917	WITHOUT_CLASSIFICATION	7.396801083650629E-7	DESIGN
// line 1779	WITHOUT_CLASSIFICATION	0.9999993577702759	WITHOUT_CLASSIFICATION	6.4222972392717E-7	DESIGN
// line 1794	WITHOUT_CLASSIFICATION	0.9999994541636058	WITHOUT_CLASSIFICATION	5.458363941544202E-7	DESIGN
// line 1812	WITHOUT_CLASSIFICATION	0.9999999352463674	WITHOUT_CLASSIFICATION	6.475363258370586E-8	DESIGN
// line 1837	WITHOUT_CLASSIFICATION	0.9999995754779615	WITHOUT_CLASSIFICATION	4.2452203848342163E-7	DESIGN
// line 1895	WITHOUT_CLASSIFICATION	0.9999997844534999	WITHOUT_CLASSIFICATION	2.1554650013558007E-7	DESIGN
// line 1925	WITHOUT_CLASSIFICATION	0.9999998372456164	WITHOUT_CLASSIFICATION	1.6275438362547156E-7	DESIGN
// line 1950	WITHOUT_CLASSIFICATION	0.9999998469744283	WITHOUT_CLASSIFICATION	1.5302557167558706E-7	DESIGN
// line 1992	WITHOUT_CLASSIFICATION	0.9999998883561937	WITHOUT_CLASSIFICATION	1.1164380638631859E-7	DESIGN
// line 2014	WITHOUT_CLASSIFICATION	0.999999880610323	WITHOUT_CLASSIFICATION	1.1938967695359544E-7	DESIGN
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9942492029907999	WITHOUT_CLASSIFICATION	0.005750797009200056	DESIGN
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999983728208668	WITHOUT_CLASSIFICATION	1.6271791332156803E-6	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9992290438497133	WITHOUT_CLASSIFICATION	7.709561502867068E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9992290438497133	WITHOUT_CLASSIFICATION	7.709561502867068E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9992290438497133	WITHOUT_CLASSIFICATION	7.709561502867068E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9992290438497133	WITHOUT_CLASSIFICATION	7.709561502867068E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9992290438497133	WITHOUT_CLASSIFICATION	7.709561502867068E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9992290438497133	WITHOUT_CLASSIFICATION	7.709561502867068E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9992290438497133	WITHOUT_CLASSIFICATION	7.709561502867068E-4	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9995517906338779	WITHOUT_CLASSIFICATION	4.4820936612220724E-4	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9995517906338779	WITHOUT_CLASSIFICATION	4.4820936612220724E-4	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9995517906338779	WITHOUT_CLASSIFICATION	4.4820936612220724E-4	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9995517906338779	WITHOUT_CLASSIFICATION	4.4820936612220724E-4	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9996957779003889	WITHOUT_CLASSIFICATION	3.042220996111769E-4	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9996957779003889	WITHOUT_CLASSIFICATION	3.042220996111769E-4	DESIGN
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999996404738162	WITHOUT_CLASSIFICATION	3.595261837539018E-7	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999965283171461	WITHOUT_CLASSIFICATION	3.471682853729415E-6	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999965283171461	WITHOUT_CLASSIFICATION	3.471682853729415E-6	DESIGN
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9702312610728109	WITHOUT_CLASSIFICATION	0.029768738927189065	DESIGN
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999611977322236	WITHOUT_CLASSIFICATION	3.880226777634666E-5	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999983873256187	WITHOUT_CLASSIFICATION	1.6126743813139627E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999983873256187	WITHOUT_CLASSIFICATION	1.6126743813139627E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999983873256187	WITHOUT_CLASSIFICATION	1.6126743813139627E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999983873256187	WITHOUT_CLASSIFICATION	1.6126743813139627E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999983873256187	WITHOUT_CLASSIFICATION	1.6126743813139627E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999983873256187	WITHOUT_CLASSIFICATION	1.6126743813139627E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999983873256187	WITHOUT_CLASSIFICATION	1.6126743813139627E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999973997150942	WITHOUT_CLASSIFICATION	2.600284905827354E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999843979167817	WITHOUT_CLASSIFICATION	1.560208321832166E-5	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999998031003849	WITHOUT_CLASSIFICATION	1.9689961501473742E-7	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999998031003849	WITHOUT_CLASSIFICATION	1.9689961501473742E-7	DESIGN
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999576989391405	WITHOUT_CLASSIFICATION	4.230106085938907E-5	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999849555077044	WITHOUT_CLASSIFICATION	1.5044492295657717E-5	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999849555077044	WITHOUT_CLASSIFICATION	1.5044492295657717E-5	DESIGN
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999999840812369	WITHOUT_CLASSIFICATION	1.591876312099652E-8	DESIGN
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9999999967545884	DESIGN	3.245411508641242E-9	WITHOUT_CLASSIFICATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.999992824008741	WITHOUT_CLASSIFICATION	7.1759912590999E-6	DESIGN
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9998162838860455	WITHOUT_CLASSIFICATION	1.8371611395449062E-4	DESIGN
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999956047461276	WITHOUT_CLASSIFICATION	4.395253872488558E-6	DESIGN
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9999993746538423	WITHOUT_CLASSIFICATION	6.253461578026361E-7	DESIGN
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.999999917454029	WITHOUT_CLASSIFICATION	8.254597089190465E-8	DESIGN
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999992138812734	WITHOUT_CLASSIFICATION	7.861187265488899E-7	DESIGN
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999999649342106	WITHOUT_CLASSIFICATION	3.506578940802821E-8	DESIGN
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9990655544243296	WITHOUT_CLASSIFICATION	9.344455756702219E-4	DESIGN
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999209661083422	WITHOUT_CLASSIFICATION	7.90338916577547E-5	DESIGN
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999293925662261	WITHOUT_CLASSIFICATION	7.060743377391388E-5	DESIGN
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999997957022773	WITHOUT_CLASSIFICATION	2.042977228197408E-7	DESIGN
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9159581623771749	WITHOUT_CLASSIFICATION	0.08404183762282509	DESIGN
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999997475948325	WITHOUT_CLASSIFICATION	2.524051675184647E-7	DESIGN
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999851993423353	WITHOUT_CLASSIFICATION	1.4800657664769226E-5	DESIGN
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999999996495418	WITHOUT_CLASSIFICATION	3.504582189072448E-10	DESIGN
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9997506414948222	WITHOUT_CLASSIFICATION	2.493585051778621E-4	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9992310810500047	WITHOUT_CLASSIFICATION	7.689189499952672E-4	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9992310810500047	WITHOUT_CLASSIFICATION	7.689189499952672E-4	DESIGN
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999506030460699	WITHOUT_CLASSIFICATION	4.939695393017686E-5	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999997189182	WITHOUT_CLASSIFICATION	2.8108190039886707E-10	DESIGN
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999999574665427	WITHOUT_CLASSIFICATION	4.2533457373855836E-8	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9985528553744408	WITHOUT_CLASSIFICATION	0.0014471446255591963	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999719654868311	WITHOUT_CLASSIFICATION	2.8034513168900565E-5	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999719654868311	WITHOUT_CLASSIFICATION	2.8034513168900565E-5	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999719654868311	WITHOUT_CLASSIFICATION	2.8034513168900565E-5	DESIGN
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9879208602637607	WITHOUT_CLASSIFICATION	0.012079139736239223	DESIGN
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999874082843002	WITHOUT_CLASSIFICATION	1.2591715699848966E-5	DESIGN
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999963950840042	WITHOUT_CLASSIFICATION	3.6049159959197847E-6	DESIGN
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.999991675539318	WITHOUT_CLASSIFICATION	8.32446068202765E-6	DESIGN
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999783029561727	WITHOUT_CLASSIFICATION	2.169704382734567E-5	DESIGN
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999999999987925	WITHOUT_CLASSIFICATION	1.2074133529385796E-12	DESIGN
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999999987501879	WITHOUT_CLASSIFICATION	1.249812095929174E-9	DESIGN
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.999999984007903	WITHOUT_CLASSIFICATION	1.5992096886784567E-8	DESIGN
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999513743851888	WITHOUT_CLASSIFICATION	4.8625614811142795E-5	DESIGN
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999999696541848	WITHOUT_CLASSIFICATION	3.0345815130699556E-8	DESIGN
// reset buffer	WITHOUT_CLASSIFICATION	0.9999971161061552	WITHOUT_CLASSIFICATION	2.883893844884559E-6	DESIGN
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9991777641671485	WITHOUT_CLASSIFICATION	8.222358328514119E-4	DESIGN
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9997345307776477	DESIGN	2.6546922235232454E-4	WITHOUT_CLASSIFICATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.8362107346460775	WITHOUT_CLASSIFICATION	0.16378926535392244	DESIGN
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999999999745635	WITHOUT_CLASSIFICATION	2.543661197704938E-11	DESIGN
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999999999990612	WITHOUT_CLASSIFICATION	9.388299745098803E-13	DESIGN
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9993077785496629	WITHOUT_CLASSIFICATION	6.922214503372135E-4	DESIGN
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999999965052337	WITHOUT_CLASSIFICATION	3.4947662240410205E-9	DESIGN
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9999524939644293	WITHOUT_CLASSIFICATION	4.750603557071093E-5	DESIGN
// Fixme: Do we need the check or does Main.java not call this...they should consolidate 	DESIGN	0.8209210469821633	DESIGN	0.17907895301783666	WITHOUT_CLASSIFICATION
// FIXME: move out of this class!	DESIGN	0.9989981966248362	DESIGN	0.0010018033751637621	WITHOUT_CLASSIFICATION
// this is a rather ugly hack, but similar to MRI. See hash.c:ruby_setenv and similar in MRI // we search all keys for a case-insensitive match, and use that	DESIGN	0.9999993887832997	DESIGN	6.112167003349393E-7	WITHOUT_CLASSIFICATION
// FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9999462916634008	DESIGN	5.3708336599270776E-5	WITHOUT_CLASSIFICATION
// FIXME: Don't allow multiple threads to do this at once	DESIGN	0.9999228345186244	DESIGN	7.716548137556178E-5	WITHOUT_CLASSIFICATION
// TODO: eliminate?	DESIGN	0.8514635102202066	DESIGN	0.14853648977979328	WITHOUT_CLASSIFICATION
// TODO: People extending GzipWriter/reader will break.  Find better way here.	DESIGN	0.9999983322827715	DESIGN	1.66771722843501E-6	WITHOUT_CLASSIFICATION
// For JRUBY-2759, when MET choose CET timezone to work around Joda	DESIGN	0.9615232329725466	WITHOUT_CLASSIFICATION	0.03847676702745342	DESIGN
// we might need to perform a DST correction	DESIGN	0.9998975284477102	WITHOUT_CLASSIFICATION	1.0247155228977549E-4	DESIGN
// rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9999329459709018	WITHOUT_CLASSIFICATION	6.705402909827778E-5	DESIGN
/** rb_ary_push_m     * FIXME: Whis is this named "push_m"?     */	DESIGN	0.9999959591270123	DESIGN	4.0408729877109945E-6	WITHOUT_CLASSIFICATION
// from DUP_SETUP // rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.999943472351267	WITHOUT_CLASSIFICATION	5.6527648732957046E-5	DESIGN
//TODO: ary_sort_check should be done here	DESIGN	0.9944394965290875	DESIGN	0.005560503470912544	WITHOUT_CLASSIFICATION
//TODO: ary_sort_check should be done here	DESIGN	0.9944394965290875	DESIGN	0.005560503470912544	WITHOUT_CLASSIFICATION
// TODO: is this correct ?	DESIGN	0.9994544225735821	DESIGN	5.455774264178416E-4	WITHOUT_CLASSIFICATION
// TODO: make more efficient by not creating IRubyArray[]	DESIGN	0.9999574996818728	DESIGN	4.250031812717696E-5	WITHOUT_CLASSIFICATION
// TODO: list.subList(from, to).clear() is supposed to clear the sublist from the list. // How can we support this operation?	DESIGN	0.9999648987745923	DESIGN	3.5101225407623605E-5	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9803112687341113	DESIGN	0.019688731265888628	WITHOUT_CLASSIFICATION
// FIXME: This table will get moved into POSIX library so we can get all actual supported // signals.  This is a quick fix to support basic signals until that happens.	DESIGN	0.9999999994866791	DESIGN	5.133209139545634E-10	WITHOUT_CLASSIFICATION
// The implementations of these are all bonus (see TODO above)  I was going // to throw an error from these, but it appears to be the wrong place to // do it.	DESIGN	0.9741212774286088	DESIGN	0.025878722571391337	WITHOUT_CLASSIFICATION
// TODO: number formatting here, MRI uses "%-.10g", 1.4 API is a must?	DESIGN	0.999983624519287	DESIGN	1.6375480712919952E-5	WITHOUT_CLASSIFICATION
// TODO: remove	DESIGN	0.9949484432261944	DESIGN	0.005051556773805609	WITHOUT_CLASSIFICATION
// FIXME moved this here to get what's obviously a utility method out of IRubyObject. // perhaps security methods should find their own centralized home at some point.	DESIGN	0.9999999474712057	DESIGN	5.2528794331727484E-8	WITHOUT_CLASSIFICATION
// FIXME: Get rid of laziness and handle restricted access elsewhere	DESIGN	0.6404212537609589	DESIGN	0.3595787462390411	WITHOUT_CLASSIFICATION
// TODO: Should frozen error have its own distinct class?  If not should more share?	DESIGN	0.9986831565483782	DESIGN	0.0013168434516217817	WITHOUT_CLASSIFICATION
// TODO: this is kinda gross	DESIGN	0.9999135880607214	DESIGN	8.641193927863628E-5	WITHOUT_CLASSIFICATION
// Not sure how well this works, but it works much better than // just currentTimeMillis by itself.	DESIGN	0.9878936780323437	DESIGN	0.012106321967656227	WITHOUT_CLASSIFICATION
// TODO: exec should replace the current process. // This could be possible with JNA. 	DESIGN	0.999992142433856	DESIGN	7.857566144074236E-6	WITHOUT_CLASSIFICATION
// FIXME: In order for Thread to play well with the standard 'new' behavior, // it must provide an allocator that can create empty object instances which // initialize then fills with appropriate data.	DESIGN	0.9839458993781568	WITHOUT_CLASSIFICATION	0.016054100621843276	DESIGN
// TODO: not sure that we should skip calling join() altogether. // Thread.join() has some implications for Java Memory Model, etc.	DESIGN	0.9999041227242997	DESIGN	9.587727570017065E-5	WITHOUT_CLASSIFICATION
// FIXME: There's some code duplication here with RubyObject#inspect	DESIGN	0.9990725759109809	DESIGN	9.274240890192742E-4	WITHOUT_CLASSIFICATION
// FIXME: This should probably do some translation from Ruby priority levels to Java priority levels (until we have green threads)	DESIGN	0.9999999348665266	DESIGN	6.51334734177601E-8	WITHOUT_CLASSIFICATION
// TODO: no java stringity	DESIGN	0.9880100524104649	DESIGN	0.011989947589535041	WITHOUT_CLASSIFICATION
// need to reexamine this	DESIGN	0.9875617718422008	WITHOUT_CLASSIFICATION	0.012438228157799259	DESIGN
// TODO: These were missing, so we're not handling them elsewhere?	DESIGN	0.994498006417196	DESIGN	0.005501993582804014	WITHOUT_CLASSIFICATION
// TODO: why are we duplicating the constants here, and then in // File::Constants below? File::Constants is included in IO.	DESIGN	0.9233577323015267	DESIGN	0.07664226769847321	WITHOUT_CLASSIFICATION
// TODO: this method is not present in MRI!	DESIGN	0.9998395125468039	DESIGN	1.604874531960723E-4	WITHOUT_CLASSIFICATION
// TODO: This is also defined in the MetaClass too...Consolidate somewhere.	DESIGN	0.9999849914783739	DESIGN	1.5008521626136214E-5	WITHOUT_CLASSIFICATION
// Something wrong we don't know the cwd... // TODO: Is this behavior really desirable? /mov	DESIGN	0.9999998924871039	DESIGN	1.0751289608524973E-7	WITHOUT_CLASSIFICATION
/*     * Fixme:  This does not have exact same semantics as RubyArray.join, but they     * probably could be consolidated (perhaps as join(args[], sep, doChomp)).     */	DESIGN	0.9999999942662893	DESIGN	5.733710784606898E-9	WITHOUT_CLASSIFICATION
// TODO should this be deprecated ? (to be efficient, internals should deal with RubyHash directly)	DESIGN	0.999999999854484	DESIGN	1.455161205138419E-10	WITHOUT_CLASSIFICATION
// TODO: Implement tty? and isatty.  We have no real capability to // determine this from java, but if we could set tty status, then // we could invoke jruby differently to allow stdin to return true // on this.  This would allow things like cgi.rb to work properly.	DESIGN	0.9999999999588087	DESIGN	4.119132970885532E-11	WITHOUT_CLASSIFICATION
// TODO: better error handling	DESIGN	0.9992702560486496	DESIGN	7.297439513503988E-4	WITHOUT_CLASSIFICATION
// this seems unlikely to happen unless it's a totally bogus fileno // ...so do we even need to bother trying to create one?	DESIGN	0.9976570658351794	WITHOUT_CLASSIFICATION	0.0023429341648204772	DESIGN
// IN FACT, we should probably raise an error, yes?	DESIGN	0.8088010950573876	WITHOUT_CLASSIFICATION	0.19119890494261224	DESIGN
// TODO: Ruby reuses this logic for other "write" behavior by checking if it's an IO and calling write again	DESIGN	0.9974167681421764	DESIGN	0.002583231857823607	WITHOUT_CLASSIFICATION
// FIXME we should probably still be dyncalling 'write' here	DESIGN	0.9996470746739436	DESIGN	3.529253260562962E-4	WITHOUT_CLASSIFICATION
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9999999985678731	DESIGN	1.4321269057111423E-9	WITHOUT_CLASSIFICATION
// FIXME: I don't like the null checks here	DESIGN	0.9907888998520182	DESIGN	0.009211100147981774	WITHOUT_CLASSIFICATION
// TODO: handle writing into original buffer better	DESIGN	0.9842814928589093	DESIGN	0.015718507141090816	WITHOUT_CLASSIFICATION
// TODO: is this the right thing to do?	DESIGN	0.9999932756446985	DESIGN	6.724355301492416E-6	WITHOUT_CLASSIFICATION
// TODO: This isn't an exact port of MRI's pipe behavior, so revisit	DESIGN	0.9988862107754974	DESIGN	0.0011137892245024993	WITHOUT_CLASSIFICATION
// FIXME: If NativeException is expected to be used from Ruby code, it should provide // a real allocator to be used. Otherwise Class.new will fail, as will marshalling. JRUBY-415	DESIGN	0.9990535445254008	DESIGN	9.464554745991198E-4	WITHOUT_CLASSIFICATION
/* FIXME: finalizer should be dupped here */	DESIGN	0.9999857716370225	DESIGN	1.4228362977453682E-5	WITHOUT_CLASSIFICATION
/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */	DESIGN	0.9999999875671506	DESIGN	1.2432849368227789E-8	WITHOUT_CLASSIFICATION
// FIXME: Obvious issue that not all platforms can display all attributes.  Ugly hacks. // Using generic posix library makes pushing inspect behavior into specific system impls // rather painful.	DESIGN	0.9999995363125684	DESIGN	4.636874314941461E-7	WITHOUT_CLASSIFICATION
// Workaround for JRUBY-4149	DESIGN	0.974278782857313	DESIGN	0.025721217142687037	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR may be ok here, but it's unclear how Structs // work with marshalling. Confirm behavior and ensure we're doing this correctly. JRUBY-415	DESIGN	0.999935251053077	DESIGN	6.474894692303353E-5	WITHOUT_CLASSIFICATION
// FIXME: This is copied code from RubyArray.  Both RE, Struct, and Array should share one impl // This is also hacky since I construct ruby objects to access ruby arrays through aref instead // of something lower.	DESIGN	0.9999999999999172	DESIGN	8.282054513438681E-14	WITHOUT_CLASSIFICATION
// FIXME: We should not be regenerating this over and over	DESIGN	0.9998591015633619	DESIGN	1.4089843663813727E-4	WITHOUT_CLASSIFICATION
// FIXME: This is probably not very efficient, since it loads all methods for each call	DESIGN	0.999999705249781	DESIGN	2.9475021897869285E-7	WITHOUT_CLASSIFICATION
// TODO: Consider a better way of synchronizing 	DESIGN	0.999996067811365	DESIGN	3.9321886350588415E-6	WITHOUT_CLASSIFICATION
// FIXME: Why was this using a FullFunctionCallbackMethod before that did callSuper?	DESIGN	0.999999795900608	DESIGN	2.0409939200611187E-7	WITHOUT_CLASSIFICATION
// A cloned method now belongs to a new class.  Set it. // TODO: Make DynamicMethod immutable	DESIGN	0.7736366300105539	DESIGN	0.2263633699894462	WITHOUT_CLASSIFICATION
// FIXME: figure out why we get null sometimes	DESIGN	0.9798514391356633	DESIGN	0.0201485608643366	WITHOUT_CLASSIFICATION
// FIXME: Can get optimized for IEqlNode	DESIGN	0.6175883543263797	DESIGN	0.3824116456736202	WITHOUT_CLASSIFICATION
/** rb_mod_remove_cvar     *     * FIXME: any good reason to have two identical methods? (same as remove_class_variable)     */	DESIGN	0.999999999234021	DESIGN	7.659789571098994E-10	WITHOUT_CLASSIFICATION
// FIXME: these descriptions should probably be moved out, // to Constantine project which deals with all platform-dependent constants.	DESIGN	0.9999999783711538	DESIGN	2.162884616709371E-8	WITHOUT_CLASSIFICATION
// TODO: what about n arg?	DESIGN	0.9872756514483584	DESIGN	0.01272434855164163	WITHOUT_CLASSIFICATION
// TODO: rounding mode should not be hard-coded. See #mode.	DESIGN	0.9999829616764726	DESIGN	1.703832352742169E-5	WITHOUT_CLASSIFICATION
// regular division with some default precision // TODO: proper algorithm to set the precision	DESIGN	0.9346574192772967	DESIGN	0.06534258072270327	WITHOUT_CLASSIFICATION
// TODO: better algorithm to set precision needed	DESIGN	0.9998534057349486	DESIGN	1.4659426505135253E-4	WITHOUT_CLASSIFICATION
// FIXME: what should these really be? Numeric?       assert x instanceof RubyComplex && y instanceof RubyComplex;	DESIGN	0.9999992077686387	DESIGN	7.922313613388524E-7	WITHOUT_CLASSIFICATION
// FIXME: what should this really be?       assert x instanceof RubyComplex;	DESIGN	0.9999998560750398	DESIGN	1.439249602042795E-7	WITHOUT_CLASSIFICATION
// FIXME: the code below is a copy of RubyIO.puts, // and we should avoid copy-paste.	DESIGN	0.9237946343553185	DESIGN	0.07620536564468151	WITHOUT_CLASSIFICATION
// Yow...this is still ugly	DESIGN	0.9346144545246726	WITHOUT_CLASSIFICATION	0.06538554547532732	DESIGN
// end hack	DESIGN	0.9956986191155006	WITHOUT_CLASSIFICATION	0.004301380884499451	DESIGN
//TODO: Should next and return also catch here?	DESIGN	0.6755701878270083	DESIGN	0.32442981217299177	WITHOUT_CLASSIFICATION
// TODO: Generalize this type-checking code into IRubyObject helper.	DESIGN	0.9995366546392893	DESIGN	4.6334536071066657E-4	WITHOUT_CLASSIFICATION
// TODO: newTypeError does not offer enough for ruby error string...	DESIGN	0.9980246727716316	DESIGN	0.0019753272283683145	WITHOUT_CLASSIFICATION
// FIXME: If true array is common enough we should pre-allocate and stick somewhere	DESIGN	0.9998802413964046	DESIGN	1.197586035953081E-4	WITHOUT_CLASSIFICATION
// TODO: This is almost RubyModule#instance_methods on the metaClass.  Perhaps refactor.	DESIGN	0.9999996062789254	DESIGN	3.9372107470982927E-7	WITHOUT_CLASSIFICATION
// The following three methods must be defined fast, since they expect to modify the current frame // (i.e. they expect no frame will be allocated for them). JRUBY-1185.	DESIGN	0.9999999998861405	WITHOUT_CLASSIFICATION	1.13859444457388E-10	DESIGN
// FIXME: I think this chunk is equivalent to MRI id2name (and not our public method  // id2name).  Make into method if used more than once.  	DESIGN	0.9999999422327279	DESIGN	5.776727218927186E-8	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.7786721434290872	DESIGN	0.22132785657091283	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.7786721434290872	DESIGN	0.22132785657091283	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.7786721434290872	DESIGN	0.22132785657091283	WITHOUT_CLASSIFICATION
// optional args, so we have IRubyObject[] // TODO: confirm	DESIGN	0.5911159788646226	WITHOUT_CLASSIFICATION	0.4088840211353773	DESIGN
// TODO: Split this into two sub-classes so that name and constNode can be specified seperately.	DESIGN	0.9918652401137275	DESIGN	0.008134759886272446	WITHOUT_CLASSIFICATION
// TODO: wire into new exception handling mechanism	DESIGN	0.9032319552320948	DESIGN	0.09676804476790521	WITHOUT_CLASSIFICATION
// FIXME: ConstDecl could be two seperate classes (or done differently since constNode and name // never exist at the same time.	DESIGN	0.9841894661711429	DESIGN	0.015810533828857155	WITHOUT_CLASSIFICATION
// TODO: do above but not below for additional newline nodes	DESIGN	0.9872306522293127	WITHOUT_CLASSIFICATION	0.01276934777068734	DESIGN
// TODO: Figure out how this can happen and possibly remove	DESIGN	0.9999125459586771	DESIGN	8.745404132290435E-5	WITHOUT_CLASSIFICATION
// TODO: At least ParserSupport.attrset passes argsNode as null.  ImplicitNil is wrong magic for  // setupArgs since it will IRubyObject[] { nil }.  So we need to figure out a nice fast // null pattern for setupArgs. // assert argsNode != null : "receiverNode is not null";	DESIGN	0.7463841522320761	WITHOUT_CLASSIFICATION	0.25361584776792384	DESIGN
// FIXME: JRUBY-3188 ends up with condition returning null...quick fix until I can dig into it	DESIGN	0.9999903535725649	DESIGN	9.646427435071572E-6	WITHOUT_CLASSIFICATION
// FIXME: I use a for block to implement END node because we need a proc which captures // its enclosing scope.   ForBlock now represents these node and should be renamed.	DESIGN	0.9999864846984826	DESIGN	1.3515301517467086E-5	WITHOUT_CLASSIFICATION
// method has more than 500 lines; we'll need to split it // and therefore need to use a heap-based scope	DESIGN	0.582879549987409	WITHOUT_CLASSIFICATION	0.4171204500125911	DESIGN
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.9812200649093126	DESIGN	0.01877993509068743	WITHOUT_CLASSIFICATION
// If it's a single-arg when but contains an array, we know it's a real literal array // FIXME: This is a gross way to figure it out; parser help similar to yield argument passing (expandArguments) would be better	DESIGN	0.9996016339210432	DESIGN	3.9836607895685244E-4	WITHOUT_CLASSIFICATION
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.9812200649093126	DESIGN	0.01877993509068743	WITHOUT_CLASSIFICATION
// XXX: const lookup can trigger const_missing; is that enough to warrant it always being executed?	DESIGN	0.9980042399213158	DESIGN	0.0019957600786842575	WITHOUT_CLASSIFICATION
// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.	DESIGN	0.804006674583088	WITHOUT_CLASSIFICATION	0.19599332541691206	DESIGN
// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.	DESIGN	0.804006674583088	WITHOUT_CLASSIFICATION	0.19599332541691206	DESIGN
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.9999999877672533	DESIGN	1.2232746696090647E-8	WITHOUT_CLASSIFICATION
// TODO: This filtering is kind of gross...it would be nice to get some parser help here	DESIGN	0.9999957605574297	DESIGN	4.2394425702681525E-6	WITHOUT_CLASSIFICATION
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.9999999877672533	DESIGN	1.2232746696090647E-8	WITHOUT_CLASSIFICATION
// arguments compilers always create IRubyObject[], but we want to use RubyArray.concat here; // FIXME: as a result, this is NOT efficient, since it creates and then later unwraps an array	DESIGN	0.9999999952286024	DESIGN	4.771397609523187E-9	WITHOUT_CLASSIFICATION
// FIXME: This is temporary since the variable compilers assume we want // args already on stack for assignment. We just pop and continue with // 1.9 args logic.	DESIGN	0.999893863006842	DESIGN	1.0613699315798116E-4	WITHOUT_CLASSIFICATION
// TODO: reads/writes from frame // TODO: information on scoping // TODO: visibility?	DESIGN	0.9999914642480835	DESIGN	8.53575191648944E-6	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9911031931249759	DESIGN	0.008896806875024092	WITHOUT_CLASSIFICATION
// TODO: cache?	DESIGN	0.9265832720096591	DESIGN	0.07341672799034085	WITHOUT_CLASSIFICATION
// TODO: cache?	DESIGN	0.9265832720096591	DESIGN	0.07341672799034085	WITHOUT_CLASSIFICATION
// index for the item // this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.9998540769664117	DESIGN	1.45923033588279E-4	WITHOUT_CLASSIFICATION
// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.7924301882663692	DESIGN	0.2075698117336309	WITHOUT_CLASSIFICATION
// FIXME: this really ought to be in clinit, but it doesn't matter much	DESIGN	0.9999790883817962	DESIGN	2.0911618203767898E-5	WITHOUT_CLASSIFICATION
// install invokedynamic bootstrapper // TODO need to abstract this setup behind another compiler interface	DESIGN	0.9853613996738949	DESIGN	0.014638600326105106	WITHOUT_CLASSIFICATION
// FIXME: This isn't right for within ensured/rescued code	DESIGN	0.9998519425270244	DESIGN	1.480574729756366E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: Deprecated!  Going forward, all instructions should come from the CFG	DESIGN	0.9994791435668124	DESIGN	5.208564331875121E-4	WITHOUT_CLASSIFICATION
/* SSS FIXME: Do we need to check if l is same as whatever popped? */	DESIGN	0.9996068538655712	DESIGN	3.931461344288533E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.592037714114087	WITHOUT_CLASSIFICATION	0.4079622858859129	DESIGN
// SSS FIXME: I added this in.  Is this correct?	DESIGN	0.999984249949765	DESIGN	1.5750050235010948E-5	WITHOUT_CLASSIFICATION
// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.592037714114087	WITHOUT_CLASSIFICATION	0.4079622858859129	DESIGN
// SSS FIXME: Are we guaranteed that we splats dont head to multiple-assignment nodes!  i.e. |*(a,b)|?	DESIGN	0.975861359445519	DESIGN	0.024138640554480974	WITHOUT_CLASSIFICATION
// SSS FIXME: Can this return anything other than nil?	DESIGN	0.99999579636628	DESIGN	4.203633720057396E-6	WITHOUT_CLASSIFICATION
// SSS FIXME: What happens to the add class in this case??	DESIGN	0.9999905512165275	DESIGN	9.448783472505268E-6	WITHOUT_CLASSIFICATION
// CON FIXME: I don't know how to make case be an expression...does that // logic need to go here?	DESIGN	0.9999999327787032	DESIGN	6.722129672043149E-8	WITHOUT_CLASSIFICATION
// SSS FIXME: Where is this set up?  How is this diff from ClassVarDeclNode??	DESIGN	0.9999439314923584	DESIGN	5.606850764153115E-5	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correct?	DESIGN	0.9999926102247952	DESIGN	7.3897752047421925E-6	WITHOUT_CLASSIFICATION
/** * SSS FIXME: Used anywhere?  I don't see calls to this anywhere    public Operand buildDAsgnAssignment(Node node, IR_Scope s) {        DAsgnNode dasgnNode = (DAsgnNode) node;        s.getVariableCompiler().assignLocalVariable(dasgnNode.getIndex(), dasgnNode.getDepth());    }**/	DESIGN	0.9762668326091662	DESIGN	0.023733167390833795	WITHOUT_CLASSIFICATION
// SSS FIXME: Receiver -- this is the class meta object basically? // Operand receiver = build(defsNode.getReceiverNode(), s);	DESIGN	0.9999080740765477	DESIGN	9.192592345231086E-5	WITHOUT_CLASSIFICATION
// self = args[0] // SSS FIXME: Verify that this is correct	DESIGN	0.9896430651902155	DESIGN	0.010356934809784462	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correct?	DESIGN	0.9999926102247952	DESIGN	7.3897752047421925E-6	WITHOUT_CLASSIFICATION
// SSS FIXME: 1. Is the ordering correct? (poll before next)	DESIGN	0.9998116174711842	DESIGN	1.8838252881580268E-4	WITHOUT_CLASSIFICATION
// add a "self" recv here // TODO: is this right?	DESIGN	0.9999985013843403	DESIGN	1.498615659714455E-6	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correctly placed ... at the end of the loop iteration?	DESIGN	0.9999998095083293	DESIGN	1.9049167067240607E-7	WITHOUT_CLASSIFICATION
// SSS FIXME: Where does this go? // m.setLinePosition(arrayNode.getPosition());	DESIGN	0.6988326313631807	DESIGN	0.30116736863681937	WITHOUT_CLASSIFICATION
// SSS FIXME: I could make IR_Loop a scope too ... semantically, it is a scope, but, functionally, not sure if this is required yet ...	DESIGN	0.9999999980161479	DESIGN	1.9838520914205552E-9	WITHOUT_CLASSIFICATION
// SSS FIXME: Should this be a string literal or a string? // Dummy class for the script	DESIGN	0.999949370707147	DESIGN	5.0629292852995976E-5	WITHOUT_CLASSIFICATION
// SSS FIXME: Does int suffice, or do we need long?	DESIGN	0.9999998696325327	DESIGN	1.3036746721118304E-7	WITHOUT_CLASSIFICATION
// SSS FIXME: Correct?  Where does closure arg come from?	DESIGN	0.9994005174717503	DESIGN	5.994825282496831E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: Should I have a reference to the IR_loop that is being retried?	DESIGN	0.9999042264495253	DESIGN	9.577355047476011E-5	WITHOUT_CLASSIFICATION
// Simplify the variables too -- to keep these variables in sync with what is actually used in the when clauses // This is not required for correctness reasons, but only for performance reasons.	DESIGN	0.5302138360147631	DESIGN	0.46978616398523687	WITHOUT_CLASSIFICATION
// SSS FIXME: This should never get called for constant svalues	DESIGN	0.9767452000857063	DESIGN	0.023254799914293765	WITHOUT_CLASSIFICATION
// SSS FIXME: Should this be Operand or CompoundString? // Can it happen that symbols are built out of other than compound strings?   // Or can it happen during optimizations that this becomes a generic operand?	DESIGN	0.9999990350448404	DESIGN	9.649551595599984E-7	WITHOUT_CLASSIFICATION
// TODO: need to get this back into the method signature...now is too late...	DESIGN	0.9996904396383108	DESIGN	3.0956036168912094E-4	WITHOUT_CLASSIFICATION
/* Hack in to replace usual readline with this */	DESIGN	0.975647762276727	DESIGN	0.024352237723272996	WITHOUT_CLASSIFICATION
// bit risky if someone changes completor, but useful for method calls	DESIGN	0.999910854942766	WITHOUT_CLASSIFICATION	8.914505723400416E-5	DESIGN
// FIXME:  This determine module is in a strange location and should somehow be in block	DESIGN	0.9999988262122921	DESIGN	1.1737877078751405E-6	WITHOUT_CLASSIFICATION
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.9983116433287937	DESIGN	0.0016883566712062442	WITHOUT_CLASSIFICATION
// we basically ignore protocol. let someone report it...	DESIGN	0.9987573770471209	WITHOUT_CLASSIFICATION	0.0012426229528792083	DESIGN
// Workaround for a bug in Sun's JDK 1.5.x, see // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6303753	DESIGN	0.9999998459960112	DESIGN	1.5400398876511625E-7	WITHOUT_CLASSIFICATION
// context is null, wipe out the SoftReference (this could be done with a reference queue)	DESIGN	0.996516820050339	WITHOUT_CLASSIFICATION	0.003483179949660983	DESIGN
// FIXME we want to eliminate these type casts when possible	DESIGN	0.9271100806496619	DESIGN	0.07288991935033796	WITHOUT_CLASSIFICATION
// TODO: Determine whether we should perhaps store non-singleton class // in the implementationClass	DESIGN	0.9999906413729068	DESIGN	9.358627093142005E-6	WITHOUT_CLASSIFICATION
// FIXME: set up a CallConfiguration for this	DESIGN	0.9992017146054397	DESIGN	7.982853945603269E-4	WITHOUT_CLASSIFICATION
// FIXME: set up a call configuration for this	DESIGN	0.9939870325376199	DESIGN	0.006012967462380105	WITHOUT_CLASSIFICATION
// TODO: make this do specific-arity calling	DESIGN	0.9997683564324605	DESIGN	2.3164356753960021E-4	WITHOUT_CLASSIFICATION
// add 'new' with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature	DESIGN	0.996597562357463	WITHOUT_CLASSIFICATION	0.0034024376425370495	DESIGN
// add method with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature	DESIGN	0.9878872781408563	WITHOUT_CLASSIFICATION	0.01211272185914377	DESIGN
// FIXME This whole thing could probably be implemented as a module and // mixed into appropriate classes, especially if it uses either // IOInput/OutputStream or is smart about the kind of IO-like object // it's being used against.	DESIGN	0.9999964035700633	DESIGN	3.5964299367425376E-6	WITHOUT_CLASSIFICATION
// using IOInputStream may not be the most performance way, but it's easy.	DESIGN	0.9999998553209677	WITHOUT_CLASSIFICATION	1.4467903229284116E-7	DESIGN
// using IOOutputStream may not be the most performance way, but it's easy.	DESIGN	0.9999999087832945	WITHOUT_CLASSIFICATION	9.12167055563754E-8	DESIGN
// using IOChannel may not be the most performant way, but it's easy.	DESIGN	0.9999994286437524	WITHOUT_CLASSIFICATION	5.713562477265623E-7	DESIGN
// these extra arrays are really unfortunate; split some of these paths out to eliminate?	DESIGN	0.7661885263457036	DESIGN	0.23381147365429644	WITHOUT_CLASSIFICATION
// TODO: WRONG - get interfaces from class	DESIGN	0.7023865576371635	WITHOUT_CLASSIFICATION	0.2976134423628363	DESIGN
// TODO: catch exception if constant is already set by other // thread	DESIGN	0.9891940424744009	WITHOUT_CLASSIFICATION	0.010805957525599081	DESIGN
// TODO: public only?	DESIGN	0.9970310082375422	DESIGN	0.0029689917624577114	WITHOUT_CLASSIFICATION
// see note below re: 2-field kludge	DESIGN	0.9335800373498702	WITHOUT_CLASSIFICATION	0.06641996265012973	DESIGN
// TODO: protected methods.  this is going to require a rework // of some of the mechanism.	DESIGN	0.9999804966119078	DESIGN	1.9503388092214235E-5	WITHOUT_CLASSIFICATION
// TODO: protected methods.  this is going to require a rework of some of the mechanism.	DESIGN	0.9999900519605204	DESIGN	9.948039479697586E-6	WITHOUT_CLASSIFICATION
// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods	DESIGN	0.9999924763256456	DESIGN	7.523674354358009E-6	WITHOUT_CLASSIFICATION
// FIXME: This doesn't actually support anything but String	DESIGN	0.9838463189959922	DESIGN	0.016153681004007804	WITHOUT_CLASSIFICATION
// again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.8856515795143352	DESIGN	0.11434842048566493	WITHOUT_CLASSIFICATION
// again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.8856515795143352	DESIGN	0.11434842048566493	WITHOUT_CLASSIFICATION
// this needs to be split, since conditional calling #inherited doesn't fit standard ruby semantics	DESIGN	0.6768247412813657	WITHOUT_CLASSIFICATION	0.32317525871863434	DESIGN
// TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.9578228454753047	DESIGN	0.04217715452469535	WITHOUT_CLASSIFICATION
// TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.9578228454753047	DESIGN	0.04217715452469535	WITHOUT_CLASSIFICATION
// this covers the rare case of lower-case class names (and thus will // fail 99.999% of the time). fortunately, we'll only do this once per // package name. (and seriously, folks, look into best practices...)	DESIGN	0.99999489302603	WITHOUT_CLASSIFICATION	5.106973970106741E-6	DESIGN
// FIXME: we should also support orgs that use capitalized package // names (including, embarrassingly, the one I work for), but this // should be enabled by a system property, as the expected default // behavior for an upper-case value should be (and is) to treat it // as a class name, and raise an exception if it's not found 	DESIGN	0.9999821249265018	DESIGN	1.787507349814917E-5	WITHOUT_CLASSIFICATION
// TODO: check for Java reserved names and raise exception if encountered	DESIGN	0.8870186815577177	WITHOUT_CLASSIFICATION	0.11298131844228235	DESIGN
// upper-case package name // TODO: top-level upper-case package was supported in the previous (Ruby-based) // implementation, so leaving as is.  see note at #getProxyOrPackageUnderPackage // re: future approach below the top-level.	DESIGN	0.9972779503215083	DESIGN	0.0027220496784916897	WITHOUT_CLASSIFICATION
// FIXME: wtf is this? Why would these use the class?	DESIGN	0.9999999999264183	DESIGN	7.358172416799616E-11	WITHOUT_CLASSIFICATION
// FIXME: needs to be rethought	DESIGN	0.9999709626572519	DESIGN	2.90373427480114E-5	WITHOUT_CLASSIFICATION
// TODO: specifying soft refs, may want to compare memory consumption, // behavior with weak refs (specify WEAK in place of SOFT below)	DESIGN	0.9272457031638102	DESIGN	0.07275429683618985	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9969056040356179	DESIGN	0.003094395964382079	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9969056040356179	DESIGN	0.003094395964382079	WITHOUT_CLASSIFICATION
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search	DESIGN	0.9995052781962078	WITHOUT_CLASSIFICATION	4.947218037922122E-4	DESIGN
// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes)	DESIGN	0.9667766646160435	WITHOUT_CLASSIFICATION	0.033223335383956505	DESIGN
// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes) // TODO: not sure we need this at all, since we only expose // public fields. //field.setAccessible(true);	DESIGN	0.9884413677949322	DESIGN	0.011558632205067716	WITHOUT_CLASSIFICATION
// FIXME: NOT_ALLOCATABLE_ALLOCATOR is probably not right here, since we might // eventually want JavaArray to be marshallable. JRUBY-414	DESIGN	0.9999588466563772	DESIGN	4.115334362287307E-5	WITHOUT_CLASSIFICATION
// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods.  also, the getDeclared calls may throw SecurityException if // we're running under a restrictive security policy.	DESIGN	0.9989187373524859	DESIGN	0.0010812626475141282	WITHOUT_CLASSIFICATION
// don't bother to check if final method, it won't // be there (not generated, can't be!)	DESIGN	0.9999998829101048	WITHOUT_CLASSIFICATION	1.1708989524924724E-7	DESIGN
// super calls from proxies must use reflected method // FIXME: possible to make handles do the superclass call?	DESIGN	0.9999996662528875	DESIGN	3.337471125595381E-7	WITHOUT_CLASSIFICATION
// actual type does not exactly match method return type, re-get converter // FIXME: when the only autoconversions are primitives, this won't be needed	DESIGN	0.6658567359462846	DESIGN	0.33414326405371536	WITHOUT_CLASSIFICATION
// FIXME: Ideally JavaObject instances should be marshallable, which means that // the JavaObject metaclass should have an appropriate allocator. JRUBY-414	DESIGN	0.9995322281636271	DESIGN	4.677718363728636E-4	WITHOUT_CLASSIFICATION
// FIXME: shouldn't need @__java_ovrd_methods, just query locally defined methods.	DESIGN	0.9798214585440452	DESIGN	0.02017854145595472	WITHOUT_CLASSIFICATION
// We always prepend an org.jruby.proxy package to the beginning // because java and javax packages are protected and signed // jars prevent us generating new classes with those package // names. See JRUBY-2439.	DESIGN	0.9999990238359737	WITHOUT_CLASSIFICATION	9.761640262981239E-7	DESIGN
// TODO: Only used by interface implementation; eliminate it	DESIGN	0.9955753172493441	DESIGN	0.004424682750655926	WITHOUT_CLASSIFICATION
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.9983116433287937	DESIGN	0.0016883566712062442	WITHOUT_CLASSIFICATION
// modules are included with a shim class; we must find that shim to handle super() appropriately	DESIGN	0.9993322147047864	WITHOUT_CLASSIFICATION	6.67785295213577E-4	DESIGN
// lame generics issues: making Segment class static and manually // inserting cache reference to work around various problems generically // referencing methods/vars across classes.	DESIGN	0.9999998983541204	DESIGN	1.0164587961104126E-7	WITHOUT_CLASSIFICATION
// entry exists, proxy doesn't match. replace. // this could happen if old proxy was gc'ed // TODO: raise exception if stored proxy is non-null? (not gc'ed)	DESIGN	0.9387484901986201	DESIGN	0.061251509801380076	WITHOUT_CLASSIFICATION
// FIXME: How much more obtuse can this be? // Heredoc already parsed this and saved string...Do not parse..just return	DESIGN	0.9993812402311569	DESIGN	6.187597688431299E-4	WITHOUT_CLASSIFICATION
// ruby constants for strings (should this be moved somewhere else?)	DESIGN	0.9913677277761729	DESIGN	0.008632272223827175	WITHOUT_CLASSIFICATION
// Hacky: Advance position to eat newline here....	DESIGN	0.9999621172650345	DESIGN	3.788273496548204E-5	WITHOUT_CLASSIFICATION
// FIXME: Not sure what the semantics of transfer are //cFiber.defineFastMethod("transfer", cb.getFastOptMethod("transfer"));	DESIGN	0.9992394261301095	DESIGN	7.605738698906121E-4	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9983544570523719	DESIGN	0.0016455429476281097	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9983544570523719	DESIGN	0.0016455429476281097	WITHOUT_CLASSIFICATION
// ENEBO: Totally weird naming (in MRI is not allocated and is a local var name)	DESIGN	0.6497043109594857	WITHOUT_CLASSIFICATION	0.3502956890405144	DESIGN
// FIXME: Remove this from grammars.	DESIGN	0.9997754413030053	DESIGN	2.2455869699460407E-4	WITHOUT_CLASSIFICATION
/* FIXME: Consider fixing node_assign itself rather than single case*/	DESIGN	0.9999685547733258	DESIGN	3.1445226674226164E-5	WITHOUT_CLASSIFICATION
/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/	DESIGN	0.9999975075172798	DESIGN	2.492482720244825E-6	WITHOUT_CLASSIFICATION
/* FIXME: lose syntactical elements here (and others like this)*/	DESIGN	0.9811967639754154	DESIGN	0.01880323602458454	WITHOUT_CLASSIFICATION
/* ENEBO: Lots of optz in 1.9 parser here*/	DESIGN	0.999995597122512	WITHOUT_CLASSIFICATION	4.402877488020781E-6	DESIGN
// This is perhaps innefficient timewise?  Optimal spacewise	DESIGN	0.9299663659005564	DESIGN	0.07003363409944365	WITHOUT_CLASSIFICATION
// This is a dummy scope; we should find a way to make that more explicit	DESIGN	0.9923942861399114	DESIGN	0.00760571386008854	WITHOUT_CLASSIFICATION
// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.8234936950767654	DESIGN	0.17650630492323455	WITHOUT_CLASSIFICATION
// TODO: This probably isn't the best hack, but it works until we can have different // root frame setup for 1.9 easily.	DESIGN	0.9999999974519975	DESIGN	2.548002560988838E-9	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9999758217960363	DESIGN	2.4178203963809985E-5	WITHOUT_CLASSIFICATION
// FIXME: I think we need these pushed somewhere?	DESIGN	0.9999999991136368	DESIGN	8.86363276007028E-10	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9999758217960363	DESIGN	2.4178203963809985E-5	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9999758217960363	DESIGN	2.4178203963809985E-5	WITHOUT_CLASSIFICATION
// XXX: Again, screwy evaling under previous frame's scope	DESIGN	0.9724182349494377	WITHOUT_CLASSIFICATION	0.0275817650505623	DESIGN
/** * FIXME: This version is faster than the previous, but both suffer from a * crucial flaw: It is impossible to create an ObjectSpace with an iterator * that doesn't either: a. hold on to objects that might otherwise be collected * or b. have no way to guarantee that a call to hasNext() will be correct or * that a subsequent call to next() will produce an object. For our purposes, * for now, this may be acceptable. */	DESIGN	0.9960385706722018	DESIGN	0.0039614293277981695	WITHOUT_CLASSIFICATION
// FIXME: Maybe not best place, but move it to a good home	DESIGN	0.9999999999354334	DESIGN	6.456650840666091E-11	WITHOUT_CLASSIFICATION
// FIXME: This is gross. Don't do this.	DESIGN	0.9946449659109896	DESIGN	0.005355034089010383	WITHOUT_CLASSIFICATION
/** * * @author headius * FIXME convert to enum ? */	DESIGN	0.999762110989293	DESIGN	2.378890107069527E-4	WITHOUT_CLASSIFICATION
// FIXME: No, I don't like it.	DESIGN	0.9557490088467333	DESIGN	0.044250991153266674	WITHOUT_CLASSIFICATION
// TODO: This is probably BAD...	DESIGN	0.9999385087149343	DESIGN	6.149128506571303E-5	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9999982608238668	DESIGN	1.739176133182781E-6	WITHOUT_CLASSIFICATION
// invoke callMethodMissing method directly // TODO: this could be further optimized, since some DSLs hit method_missing pretty hard...	DESIGN	0.9999698015744383	DESIGN	3.019842556168427E-5	WITHOUT_CLASSIFICATION
// TODO this is really ineffient, and potentially a problem everytime anyone require's something. // we should try to make LoadPath a special array object.	DESIGN	0.9999994297287694	DESIGN	5.70271230499443E-7	WITHOUT_CLASSIFICATION
// FIXME: inefficient; constructing a bignum just for dumping?	DESIGN	0.9999999812502256	DESIGN	1.8749774329622848E-8	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9999982608238668	DESIGN	1.739176133182781E-6	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9999982608238668	DESIGN	1.739176133182781E-6	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9999982608238668	DESIGN	1.739176133182781E-6	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9999982608238668	DESIGN	1.739176133182781E-6	WITHOUT_CLASSIFICATION
// FIXME: this should go somewhere more generic -- maybe IdUtil	DESIGN	0.999999969701611	DESIGN	3.029838897845132E-8	WITHOUT_CLASSIFICATION
// FIXME: potentially could just use ByteList here?	DESIGN	0.9999984297737988	DESIGN	1.5702262011663258E-6	WITHOUT_CLASSIFICATION
// FIXME: This is almost entirely duplicated from Main.java	DESIGN	0.9999802273872624	DESIGN	1.9772612737597372E-5	WITHOUT_CLASSIFICATION
// TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.9966600702268855	DESIGN	0.003339929773114535	WITHOUT_CLASSIFICATION
// TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.9966600702268855	DESIGN	0.003339929773114535	WITHOUT_CLASSIFICATION
// grrr, arghh, want to subclass sun.misc.FloatingDecimal, but can't, // so we must do all this (the next 70 lines of code), which has already // been done by FloatingDecimal.	DESIGN	0.9859219965862355	WITHOUT_CLASSIFICATION	0.01407800341376458	DESIGN
// it would be nice (and logical!) if exponent form  // behaved like E/e, and decimal form behaved like f, // but no such luck. hence: 	DESIGN	0.9983076228062898	WITHOUT_CLASSIFICATION	0.0016923771937101262	DESIGN
// This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.5767487226627098	WITHOUT_CLASSIFICATION	0.42325127733729007	DESIGN
// This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.5767487226627098	WITHOUT_CLASSIFICATION	0.42325127733729007	DESIGN
// TODO: get rid of this (lax returns 0.0, strict will throw)	DESIGN	0.9924289642751902	DESIGN	0.007571035724809719	WITHOUT_CLASSIFICATION
// TODO: turn off the negative? will return -0.0 in lax mode	DESIGN	0.9998494267580751	DESIGN	1.505732419248172E-4	WITHOUT_CLASSIFICATION
// FIXME: this probably belongs in a different package.	DESIGN	0.9999905828407263	DESIGN	9.417159273684483E-6	WITHOUT_CLASSIFICATION
// TODO: It would be nice to throw a better error for this	DESIGN	0.9999999714459502	DESIGN	2.8554049725836434E-8	WITHOUT_CLASSIFICATION
// TODO: It would be nice to throw a better error for this	DESIGN	0.9999999714459502	DESIGN	2.8554049725836434E-8	WITHOUT_CLASSIFICATION
// FIXME: I don't like this	DESIGN	0.9999635585726051	DESIGN	3.644142739491924E-5	WITHOUT_CLASSIFICATION
// TODO: It's perhaps just a coincidence that all the channels for // which we should raise are instanceof SelectableChannel, since // stdio is not...so this bothers me slightly. -CON	DESIGN	0.9995510612241623	DESIGN	4.48938775837752E-4	WITHOUT_CLASSIFICATION
// FIXME: Clearing read buffer here...is this appropriate?	DESIGN	0.999998233684422	DESIGN	1.766315577932801E-6	WITHOUT_CLASSIFICATION
// TODO this should entry into error handling somewhere	DESIGN	0.9999834556789252	DESIGN	1.654432107471617E-5	WITHOUT_CLASSIFICATION
// FIXME: This worries me a bit, since it could allocate a lot with a large newLength	DESIGN	0.9999933871794175	DESIGN	6.612820582463526E-6	WITHOUT_CLASSIFICATION
// We use a highly uncommon string to represent the paragraph delimiter (100% soln not worth it) 	DESIGN	0.9999997218789313	WITHOUT_CLASSIFICATION	2.781210686976657E-7	DESIGN
// TODO: Ruby does not seem to care about invalid numeric mode values // I am not sure if ruby overflows here also...	DESIGN	0.9997126218290805	DESIGN	2.873781709194798E-4	WITHOUT_CLASSIFICATION
// TODO: Make this more intelligible value	DESIGN	0.9919823491086657	DESIGN	0.00801765089133431	WITHOUT_CLASSIFICATION
// XXX: do something?	DESIGN	0.9895249707605485	DESIGN	0.010475029239451554	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9911031931249759	DESIGN	0.008896806875024092	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9911031931249759	DESIGN	0.008896806875024092	WITHOUT_CLASSIFICATION
// up to ten, stuff into tmp locals, load in reverse order, and assign // FIXME: There's probably a slightly smarter way, but is it important?	DESIGN	0.9999909403411984	DESIGN	9.05965880162803E-6	WITHOUT_CLASSIFICATION
// index for the item // this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.9998540769664117	DESIGN	1.45923033588279E-4	WITHOUT_CLASSIFICATION
// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.7924301882663692	DESIGN	0.2075698117336309	WITHOUT_CLASSIFICATION
// SSS FIXME: These should get normally compiled or initialized some other way ...  // SSS FIXME: Parent/super-type info is incorrect! // These are just placeholders for now .. this needs to be updated with *real* class objects later!	DESIGN	0.9999999997486182	DESIGN	2.513818750710638E-10	WITHOUT_CLASSIFICATION
// SSS FIXME: Move this code to some utils area .. or probably there is already a method for this in some jruby utils class // Holy cow!  Just to append two darned arrays!	DESIGN	0.9999999430837437	DESIGN	5.691625637078037E-8	WITHOUT_CLASSIFICATION
// SSS FIXME: This method (at least in the context of multiple assignment) is a little weird. // It calls regular to_ary on the object.  But, if it encounters a method_missing, the value // is inserted into an 1-element array! // try "a,b,c = 1" first; then define Fixnum.to_ary method and try it again. // Ex: http://gist.github.com/163551	DESIGN	0.9999999990830138	DESIGN	9.169861986877236E-10	WITHOUT_CLASSIFICATION
// This is for JRUBY-2988, since after a suspend the terminal seems // to need to be reinitialized. Since we can't easily detect suspension, // initialize after every readline. Probably not fast, but this is for // interactive terminals anyway...so who cares?	DESIGN	0.6942621188136209	DESIGN	0.3057378811863792	WITHOUT_CLASSIFICATION
// set up a field for the CacheEntry // TODO: make this an array so it's not as much class metadata; similar to AbstractScript stuff	DESIGN	0.9853878580983991	DESIGN	0.014612141901600897	WITHOUT_CLASSIFICATION
// exit monitor before making call // FIXME: this not being in a finally is a little worrisome	DESIGN	0.9999977739214401	DESIGN	2.226078559822593E-6	WITHOUT_CLASSIFICATION
// FIXME: Added this because marshal_spec seemed to reconstitute objects without calling dataWrapStruct // this resulted in object being null after unmarshalling...	DESIGN	0.9835306281570774	WITHOUT_CLASSIFICATION	0.016469371842922555	DESIGN
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search	DESIGN	0.9995052781962078	WITHOUT_CLASSIFICATION	4.947218037922122E-4	DESIGN
// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.8234936950767654	DESIGN	0.17650630492323455	WITHOUT_CLASSIFICATION
// TODO: This is actually now returning the scope of whoever called Method#to_proc // which is obviously wrong; but there's no scope to provide for many methods. // It fixes JRUBY-2237, but needs a better solution.	DESIGN	0.9999999999702648	DESIGN	2.973517046581622E-11	WITHOUT_CLASSIFICATION
// FIXME: We should be getting this from the runtime rather than assume none? //return runtime.getEncodingService().getEncoding(runtime.getDefaultExternalEncoding());	DESIGN	0.5247092473971195	DESIGN	0.4752907526028805	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9983544570523719	DESIGN	0.0016455429476281097	WITHOUT_CLASSIFICATION
// This is a fairly specific hack for empty string, but it does the job	DESIGN	0.9968692313482213	DESIGN	0.003130768651778737	WITHOUT_CLASSIFICATION
// XXX This constructor is a hack to implement the __END__ syntax. //     Converting a reader back into an InputStream doesn't generally work.	DESIGN	0.9999999906094988	DESIGN	9.39050115786622E-9	WITHOUT_CLASSIFICATION
// FIXME:  Total hack to get flash in Rails marshalling/unmarshalling in session ok...We need // to totally change marshalling to work with overridden core classes.	DESIGN	0.9999999999999145	DESIGN	8.555191713149603E-14	WITHOUT_CLASSIFICATION
// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9999999999999761	DESIGN	2.378023046996921E-14	WITHOUT_CLASSIFICATION
// We're not setting the provider or anything, but it seems that BouncyCastle does some internal things in its // provider's constructor which require it to be executed in a secure context. // Ideally this hack should be removed. See JRUBY-3919 and this BC bug: //   http://www.bouncycastle.org/jira/browse/BJA-227	DESIGN	0.9950594636304931	DESIGN	0.004940536369506788	WITHOUT_CLASSIFICATION
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.9999994053517738	DESIGN	5.946482261833234E-7	WITHOUT_CLASSIFICATION
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.9999994053517738	DESIGN	5.946482261833234E-7	WITHOUT_CLASSIFICATION
// hack to get right style for input	DESIGN	0.9995825338433609	DESIGN	4.174661566390964E-4	WITHOUT_CLASSIFICATION
// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.	DESIGN	0.9976656094710988	DESIGN	0.002334390528901133	WITHOUT_CLASSIFICATION
// small hack to save a cast later on	DESIGN	0.6696510146410947	DESIGN	0.33034898535890533	WITHOUT_CLASSIFICATION
// temporary hack to handle non-Ruby values // will come up with better solution shortly	DESIGN	0.9999999228965846	DESIGN	7.71034153689586E-8	WITHOUT_CLASSIFICATION
// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.	DESIGN	0.9976656094710988	DESIGN	0.002334390528901133	WITHOUT_CLASSIFICATION
// HACK: in order to have stdout/err act like ttys and flush always, // we set anything assigned to stdout/stderr to sync	DESIGN	0.9937099926206897	WITHOUT_CLASSIFICATION	0.006290007379310287	DESIGN
// HACK: force clinit to be created	DESIGN	0.9471738976561689	DESIGN	0.05282610234383108	WITHOUT_CLASSIFICATION
// FIXME: This is pretty gross; we should have a cleaner initialization // that doesn't depend on package-visible fields and ideally is atomic, // probably using an immutable structure we replace all at once. // lazy, null when no groups defined	DESIGN	0.9999986788071221	DESIGN	1.321192877876685E-6	WITHOUT_CLASSIFICATION
// TODO: should probably apply the null object pattern for a // non-allowed class, rather than null	DESIGN	0.999956571746643	DESIGN	4.342825335705343E-5	WITHOUT_CLASSIFICATION
// TODO: set our metaclass to target's class (i.e. scary!)	DESIGN	0.999537132677893	WITHOUT_CLASSIFICATION	4.628673221069628E-4	DESIGN
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.7786721434290872	DESIGN	0.22132785657091283	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9983544570523719	DESIGN	0.0016455429476281097	WITHOUT_CLASSIFICATION
// optional args, so we have IRubyObject[] // TODO: confirm	DESIGN	0.5911159788646226	WITHOUT_CLASSIFICATION	0.4088840211353773	DESIGN
// not intended to be called directly by users (private) // OLD TODO from Ruby code: // This should be implemented in JavaClass.java, where we can // check for reserved Ruby names, conflicting methods, etc.	DESIGN	0.9999999315760469	DESIGN	6.84239530723585E-8	WITHOUT_CLASSIFICATION
// TODO? I think this ends up propagating from normal Java exceptions // sys_fail(openFile.getPath())	DESIGN	0.9607126661804541	DESIGN	0.03928733381954596	WITHOUT_CLASSIFICATION
// TODO: Make callCoerced work in block context...then fix downto, step, and upto.	DESIGN	0.9991553724018575	DESIGN	8.44627598142639E-4	WITHOUT_CLASSIFICATION
// TODO: the rest of this...seeking to same position is unnecessary since we share a channel // but some of this may be needed?	DESIGN	0.9999999981132304	DESIGN	1.8867695752191983E-9	WITHOUT_CLASSIFICATION
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9999999985678731	DESIGN	1.4321269057111423E-9	WITHOUT_CLASSIFICATION
// FIXME this below is temporary, but its much safer for COW (it prevents not shared Strings with begin != 0) // this allows now e.g.: ByteList#set not to be begin aware	DESIGN	0.9934983935732632	DESIGN	0.006501606426736776	WITHOUT_CLASSIFICATION
// ignore; job was cancelled // FIXME: Is this ok?	DESIGN	0.9999990561423843	DESIGN	9.438576156658568E-7	WITHOUT_CLASSIFICATION
// TODO: // MRI behavior: Call "+" or "add", depending on the call. // But this leads to exceptions when Floats are added. See: // http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/17374 // return callCoerced(context, op, b, true); -- this is MRI behavior. // We'll use ours for now, thus providing an ability to add Floats.	DESIGN	0.9999999449651957	DESIGN	5.5034804255229854E-8	WITHOUT_CLASSIFICATION
// Must be called from main thread (it is currently, but this bothers me)	DESIGN	0.9999399532056444	WITHOUT_CLASSIFICATION	6.004679435565979E-5	DESIGN
// TODO: wire into new exception handling mechanism	DESIGN	0.9032319552320948	DESIGN	0.09676804476790521	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9969056040356179	DESIGN	0.003094395964382079	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9803112687341113	DESIGN	0.019688731265888628	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9803112687341113	DESIGN	0.019688731265888628	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9803112687341113	DESIGN	0.019688731265888628	WITHOUT_CLASSIFICATION
// FIXME: Determine if a real allocator is needed here. Do people want to extend // JavaClass? Do we want them to do that? Can you Class.new(JavaClass)? Should // you be able to? // TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9999999998494371	DESIGN	1.5056295421640863E-10	WITHOUT_CLASSIFICATION
// SSS FIXME: Token can be final for a method -- implying that the token is only for this particular implementation of the method // But, if the mehod is modified, we create a new method object which in turn gets a new token.  What makes sense??  Intuitively, // it seems the first one ... but let us see ... // Current code version token for this method -- can change during execution as methods get redefined!	DESIGN	0.9999999993661324	DESIGN	6.338677473239804E-10	WITHOUT_CLASSIFICATION
// FIXME weakref.rb also does caller(2) here for the backtrace	DESIGN	0.9933133845244876	WITHOUT_CLASSIFICATION	0.006686615475512381	DESIGN
// FIXME: bit of a kludge here (non-interface classes assigned to both // class and module fields). simplifies proxy extender code, will go away // when JI is overhauled (and proxy extenders are deprecated).	DESIGN	0.9999999993620312	DESIGN	6.379688680199109E-10	WITHOUT_CLASSIFICATION
// There's not a compelling reason to keep JavaClass instances in a weak map // (any proxies created are [were] kept in a non-weak map, so in most cases they will // stick around anyway), and some good reasons not to (JavaClass creation is // expensive, for one; many lookups are performed when passing parameters to/from // methods; etc.). // TODO: faster custom concurrent map	DESIGN	0.9999874512281562	DESIGN	1.2548771843660983E-5	WITHOUT_CLASSIFICATION
// TODO: we should be able to optimize this quite a bit post-1.0.  JavaClass already // has all the methods organized by method name; the next version (supporting protected // methods/fields) will have them organized even further. So collectMethods here can // just lookup the overridden methods in the JavaClass map, should be much faster.	DESIGN	0.9982413014771807	DESIGN	0.0017586985228191917	WITHOUT_CLASSIFICATION
/* FIXME: finalizer should be dupped here */	DESIGN	0.9999857716370225	DESIGN	1.4228362977453682E-5	WITHOUT_CLASSIFICATION
// FIXME: null check is removable once we figure out how to assign to unset named block args	DESIGN	0.9015778536023619	DESIGN	0.09842214639763819	WITHOUT_CLASSIFICATION
/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */	DESIGN	0.9999999875671506	DESIGN	1.2432849368227789E-8	WITHOUT_CLASSIFICATION
// TODO: Bleeding runtime into parser.  Arity may be should be in parser (to keep bleeding oneway)	DESIGN	0.9988575031835012	DESIGN	0.0011424968164987779	WITHOUT_CLASSIFICATION
// SSS FIXME: Maybe this is not really a concern after all ... // Nesting level of this scope in the lexical nesting of scopes in the current file -- this is not to be confused // with semantic nesting of scopes across files. // // Consider this code in a file f // class M1::M2::M3::C  //   ... // end // // So, C is at lexical nesting level of 1 (the file script is at 0) in the file 'f' // Semantically it is at level 3 (M1, M2, M3 are at 0,1,2). // // This is primarily used to ensure that variable names don't clash! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //    private int _lexicalNestingLevel;	DESIGN	0.9999999038126985	DESIGN	9.618730140285181E-8	WITHOUT_CLASSIFICATION
// Sometimes the value can be retrieved at "compile time".  If we succeed, nothing like it!   // We might not .. for the following reasons: // 1. The constant is missing, // 2. The reference is a forward-reference, // 3. The constant's value is only known at run-time on first-access (but, this is runtime, isn't it??) // 4. Our compiler isn't able to right away infer that this is a constant. // // SSS FIXME: // 1. The operand can be a literal array, range, or hash -- hence Operand //    because Array, Range, and Hash derive from Operand and not Constant ... //    Is there a way to fix this impedance mismatch? // 2. It should be possible to handle the forward-reference case by creating a new //    ForwardReference operand and then inform the scope of the forward reference //    which the scope can fix up when the reference gets defined.  At code-gen time, //    if the reference is unresolved, when a value is retrieved for the forward-ref //    and we get a null, we can throw a ConstMissing exception!  Not sure! //	DESIGN	0.9999999946669536	DESIGN	5.333046385890256E-9	WITHOUT_CLASSIFICATION
// Reset value map if this instruction is the start/end of a basic block // // Right now, calls are considered hard boundaries for optimization and // information cannot be propagated across them! // // SSS FIXME: Rather than treat all calls with a broad brush, what we need // is to capture different attributes about a call : //   - uses closures //   - known call target //   - can modify scope, //   - etc. // // This information is probably already present in the AST Inspector	DESIGN	0.9999890878805314	DESIGN	1.091211946851443E-5	WITHOUT_CLASSIFICATION
// FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9999462916634008	DESIGN	5.3708336599270776E-5	WITHOUT_CLASSIFICATION
// XXX: This check previously used callMethod("==") to check for equality between classes // when scanning the hierarchy. However the == check may be safe; we should only ever have // one instance bound to a given type/constant. If it's found to be unsafe, examine ways // to avoid the == call.	DESIGN	0.8105787090942663	WITHOUT_CLASSIFICATION	0.18942129090573365	DESIGN
// end hack	DESIGN	0.9956986191155006	WITHOUT_CLASSIFICATION	0.004301380884499451	DESIGN
// if not overloaded, we add a method that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	DESIGN	0.9139410703062563	DESIGN	0.08605892969374365	WITHOUT_CLASSIFICATION
// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9999999999999761	DESIGN	2.378023046996921E-14	WITHOUT_CLASSIFICATION
/*         * TODO: This version is better than the hackish previous one. Windows         *       behavior needs to be defined though. I suppose this version         *       could be improved more too.         * TODO: /etc/passwd is also inadequate for MacOSX since it does not         *       use /etc/passwd for regular user accounts         */	DESIGN	0.9999999999999962	DESIGN	3.824852613130065E-15	WITHOUT_CLASSIFICATION
//TODO: Should next and return also catch here?	DESIGN	0.6755701878270083	DESIGN	0.32442981217299177	WITHOUT_CLASSIFICATION
// Let's only generate methods for those the user may actually  // intend to override.  That includes any defined in the current // class, and any ancestors that are also JavaProxyClasses (but none // from any other ancestor classes). Methods defined in mixins will // be considered intentionally overridden, except those from Kernel, // Java, and JavaProxyMethods, as well as Enumerable.  // TODO: may want to exclude other common mixins?	DESIGN	0.9999942494638775	WITHOUT_CLASSIFICATION	5.750536122555361E-6	DESIGN
/* FIXME: Consider fixing node_assign itself rather than single case*/	DESIGN	0.9999685547733258	DESIGN	3.1445226674226164E-5	WITHOUT_CLASSIFICATION
/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/	DESIGN	0.9999975075172798	DESIGN	2.492482720244825E-6	WITHOUT_CLASSIFICATION
// FIXME: We should really not be creating the dynamic scope for the root // of the AST before parsing.  This makes us end up needing to readjust // this dynamic scope coming out of parse (and for local static scopes it // will always happen because of $~ and $_). // FIXME: Because we end up adjusting this after-the-fact, we can't use // any of the specific-size scopes.	DESIGN	0.9996524225801522	DESIGN	3.475774198477777E-4	WITHOUT_CLASSIFICATION
/* FIXME: Resolve what the hell is going on*/	DESIGN	0.9998212245995205	DESIGN	1.7877540047954674E-4	WITHOUT_CLASSIFICATION
// This is perhaps innefficient timewise?  Optimal spacewise	DESIGN	0.9299663659005564	DESIGN	0.07003363409944365	WITHOUT_CLASSIFICATION
// If variables were added then we may need to grow the dynamic scope to match the static // one. // FIXME: Make this so we only need to check this for blockScope != null.  We cannot // currently since we create the DynamicScope for a LocalStaticScope before parse begins. // Refactoring should make this fixable.	DESIGN	0.9972033355295313	DESIGN	0.002796664470468674	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9999758217960363	DESIGN	2.4178203963809985E-5	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9999758217960363	DESIGN	2.4178203963809985E-5	WITHOUT_CLASSIFICATION
// we're depending on the side effect of the load, which loads the class but does not turn it into a script // I don't like it, but until we restructure the code a bit more, we'll need to quietly let it by here.	DESIGN	0.9952502284460232	DESIGN	0.004749771553976879	WITHOUT_CLASSIFICATION
// TODO: for now, we use a faithful // reimplementation of MRI's algorithm, // but should use UTF8Encoding facilities // from Joni, once it starts prefroming // UTF-8 content validation. 	DESIGN	0.9432022615199619	DESIGN	0.05679773848003814	WITHOUT_CLASSIFICATION
/**     * Process streams get Channel.newChannel()ed into FileChannel but are not actually     * seekable. So instead of just the isSeekable check doing instanceof FileChannel,     * we must also add this boolean to check, which we set to false when it's known     * that the incoming channel is from a process.     *      * FIXME: This is gross, and it's NIO's fault for not providing a nice way to     * tell if a channel is "really" seekable.     */	DESIGN	0.9999995549667539	DESIGN	4.450332461276657E-7	WITHOUT_CLASSIFICATION
