// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999959241857307	WITHOUT_CLASSIFICATION	4.075814269350126E-6	DESIGN
// line 335	WITHOUT_CLASSIFICATION	0.9999806023284191	WITHOUT_CLASSIFICATION	1.9397671580843136E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999550352974934	WITHOUT_CLASSIFICATION	4.4964702506636866E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999550352974934	WITHOUT_CLASSIFICATION	4.4964702506636866E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998312417912719	WITHOUT_CLASSIFICATION	1.6875820872815021E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998312417912719	WITHOUT_CLASSIFICATION	1.6875820872815021E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9997613553153273	WITHOUT_CLASSIFICATION	2.386446846728069E-4	DESIGN
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999827820312557	WITHOUT_CLASSIFICATION	1.7217968744273854E-5	DESIGN
// line 362	WITHOUT_CLASSIFICATION	0.9999852453820934	WITHOUT_CLASSIFICATION	1.4754617906503777E-5	DESIGN
// line 372	WITHOUT_CLASSIFICATION	0.9999863122085008	WITHOUT_CLASSIFICATION	1.368779149930855E-5	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9997729161059041	WITHOUT_CLASSIFICATION	2.270838940959008E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9997729161059041	WITHOUT_CLASSIFICATION	2.270838940959008E-4	DESIGN
// line 391	WITHOUT_CLASSIFICATION	0.9999810279747883	WITHOUT_CLASSIFICATION	1.8972025211733696E-5	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999785732394159	WITHOUT_CLASSIFICATION	2.1426760584089942E-4	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999785732394159	WITHOUT_CLASSIFICATION	2.1426760584089942E-4	DESIGN
/* ^D */	WITHOUT_CLASSIFICATION	0.9999571818734776	WITHOUT_CLASSIFICATION	4.281812652242539E-5	DESIGN
/* ^Z */	WITHOUT_CLASSIFICATION	0.9999723389263463	WITHOUT_CLASSIFICATION	2.766107365365027E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999223609689334	WITHOUT_CLASSIFICATION	7.763903106663977E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999223609689334	WITHOUT_CLASSIFICATION	7.763903106663977E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999223609689334	WITHOUT_CLASSIFICATION	7.763903106663977E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999223609689334	WITHOUT_CLASSIFICATION	7.763903106663977E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999223609689334	WITHOUT_CLASSIFICATION	7.763903106663977E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999223609689334	WITHOUT_CLASSIFICATION	7.763903106663977E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999223609689334	WITHOUT_CLASSIFICATION	7.763903106663977E-5	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998550016879528	WITHOUT_CLASSIFICATION	1.449983120470989E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998550016879528	WITHOUT_CLASSIFICATION	1.449983120470989E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998550016879528	WITHOUT_CLASSIFICATION	1.449983120470989E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998550016879528	WITHOUT_CLASSIFICATION	1.449983120470989E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998550016879528	WITHOUT_CLASSIFICATION	1.449983120470989E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998550016879528	WITHOUT_CLASSIFICATION	1.449983120470989E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998550016879528	WITHOUT_CLASSIFICATION	1.449983120470989E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9996959628360097	WITHOUT_CLASSIFICATION	3.0403716399023036E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9996959628360097	WITHOUT_CLASSIFICATION	3.0403716399023036E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9996959628360097	WITHOUT_CLASSIFICATION	3.0403716399023036E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9996959628360097	WITHOUT_CLASSIFICATION	3.0403716399023036E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9996959628360097	WITHOUT_CLASSIFICATION	3.0403716399023036E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9996959628360097	WITHOUT_CLASSIFICATION	3.0403716399023036E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998048862214061	WITHOUT_CLASSIFICATION	1.9511377859392898E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998048862214061	WITHOUT_CLASSIFICATION	1.9511377859392898E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998048862214061	WITHOUT_CLASSIFICATION	1.9511377859392898E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998048862214061	WITHOUT_CLASSIFICATION	1.9511377859392898E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998048862214061	WITHOUT_CLASSIFICATION	1.9511377859392898E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998048862214061	WITHOUT_CLASSIFICATION	1.9511377859392898E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998158984945993	WITHOUT_CLASSIFICATION	1.841015054008236E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998158984945993	WITHOUT_CLASSIFICATION	1.841015054008236E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998158984945993	WITHOUT_CLASSIFICATION	1.841015054008236E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998158984945993	WITHOUT_CLASSIFICATION	1.841015054008236E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998158984945993	WITHOUT_CLASSIFICATION	1.841015054008236E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998158984945993	WITHOUT_CLASSIFICATION	1.841015054008236E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998158984945993	WITHOUT_CLASSIFICATION	1.841015054008236E-4	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998231495917566	WITHOUT_CLASSIFICATION	1.7685040824346187E-4	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998231495917566	WITHOUT_CLASSIFICATION	1.7685040824346187E-4	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998231495917566	WITHOUT_CLASSIFICATION	1.7685040824346187E-4	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998231495917566	WITHOUT_CLASSIFICATION	1.7685040824346187E-4	DESIGN
//Do nothing	WITHOUT_CLASSIFICATION	0.9988472821126134	WITHOUT_CLASSIFICATION	0.0011527178873865914	DESIGN
//Do nothing	WITHOUT_CLASSIFICATION	0.9988472821126134	WITHOUT_CLASSIFICATION	0.0011527178873865914	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999946466045753	WITHOUT_CLASSIFICATION	5.3533954246946425E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999946466045753	WITHOUT_CLASSIFICATION	5.3533954246946425E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999946466045753	WITHOUT_CLASSIFICATION	5.3533954246946425E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999946466045753	WITHOUT_CLASSIFICATION	5.3533954246946425E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999946466045753	WITHOUT_CLASSIFICATION	5.3533954246946425E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999946466045753	WITHOUT_CLASSIFICATION	5.3533954246946425E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999946466045753	WITHOUT_CLASSIFICATION	5.3533954246946425E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999946466045753	WITHOUT_CLASSIFICATION	5.3533954246946425E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999946466045753	WITHOUT_CLASSIFICATION	5.3533954246946425E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999946466045753	WITHOUT_CLASSIFICATION	5.3533954246946425E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999946466045753	WITHOUT_CLASSIFICATION	5.3533954246946425E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999946466045753	WITHOUT_CLASSIFICATION	5.3533954246946425E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999946466045753	WITHOUT_CLASSIFICATION	5.3533954246946425E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999946466045753	WITHOUT_CLASSIFICATION	5.3533954246946425E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999946466045753	WITHOUT_CLASSIFICATION	5.3533954246946425E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999946466045753	WITHOUT_CLASSIFICATION	5.3533954246946425E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999946466045753	WITHOUT_CLASSIFICATION	5.3533954246946425E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999946466045753	WITHOUT_CLASSIFICATION	5.3533954246946425E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999946466045753	WITHOUT_CLASSIFICATION	5.3533954246946425E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999946466045753	WITHOUT_CLASSIFICATION	5.3533954246946425E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999946466045753	WITHOUT_CLASSIFICATION	5.3533954246946425E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999946466045753	WITHOUT_CLASSIFICATION	5.3533954246946425E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999946466045753	WITHOUT_CLASSIFICATION	5.3533954246946425E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999946466045753	WITHOUT_CLASSIFICATION	5.3533954246946425E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999946466045753	WITHOUT_CLASSIFICATION	5.3533954246946425E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999946466045753	WITHOUT_CLASSIFICATION	5.3533954246946425E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999946466045753	WITHOUT_CLASSIFICATION	5.3533954246946425E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999946466045753	WITHOUT_CLASSIFICATION	5.3533954246946425E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999946466045753	WITHOUT_CLASSIFICATION	5.3533954246946425E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999946466045753	WITHOUT_CLASSIFICATION	5.3533954246946425E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999946466045753	WITHOUT_CLASSIFICATION	5.3533954246946425E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999946466045753	WITHOUT_CLASSIFICATION	5.3533954246946425E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999946466045753	WITHOUT_CLASSIFICATION	5.3533954246946425E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999946466045753	WITHOUT_CLASSIFICATION	5.3533954246946425E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999946466045753	WITHOUT_CLASSIFICATION	5.3533954246946425E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999946466045753	WITHOUT_CLASSIFICATION	5.3533954246946425E-5	DESIGN
// return result	WITHOUT_CLASSIFICATION	0.9999937872101844	WITHOUT_CLASSIFICATION	6.212789815658721E-6	DESIGN
// name	WITHOUT_CLASSIFICATION	0.9999723014094906	WITHOUT_CLASSIFICATION	2.7698590509552194E-5	DESIGN
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999912675200272	WITHOUT_CLASSIFICATION	8.732479972700342E-6	DESIGN
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9999921904512561	WITHOUT_CLASSIFICATION	7.809548743861664E-6	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999885273830458	WITHOUT_CLASSIFICATION	1.1472616954116346E-5	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999885273830458	WITHOUT_CLASSIFICATION	1.1472616954116346E-5	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999885273830458	WITHOUT_CLASSIFICATION	1.1472616954116346E-5	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999885273830458	WITHOUT_CLASSIFICATION	1.1472616954116346E-5	DESIGN
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9997175660340007	WITHOUT_CLASSIFICATION	2.8243396599921097E-4	DESIGN
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9999902721921801	WITHOUT_CLASSIFICATION	9.72780781995531E-6	DESIGN
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999885785089175	WITHOUT_CLASSIFICATION	1.1421491082605605E-5	DESIGN
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.999900555431799	WITHOUT_CLASSIFICATION	9.944456820101393E-5	DESIGN
// Version information:	WITHOUT_CLASSIFICATION	0.9999937239173189	WITHOUT_CLASSIFICATION	6.27608268111578E-6	DESIGN
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999827456779686	WITHOUT_CLASSIFICATION	1.725432203136006E-5	DESIGN
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999965552113081	WITHOUT_CLASSIFICATION	3.444788691911677E-6	DESIGN
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999998369638338	WITHOUT_CLASSIFICATION	1.6303616622515742E-7	DESIGN
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999957516407512	WITHOUT_CLASSIFICATION	4.248359248851144E-6	DESIGN
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9999224688302638	WITHOUT_CLASSIFICATION	7.753116973613843E-5	DESIGN
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999993848023456	WITHOUT_CLASSIFICATION	6.151976542937179E-7	DESIGN
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999956587291314	WITHOUT_CLASSIFICATION	4.341270868501129E-6	DESIGN
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9998590678828971	WITHOUT_CLASSIFICATION	1.409321171028923E-4	DESIGN
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9992520778250744	WITHOUT_CLASSIFICATION	7.47922174925527E-4	DESIGN
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999733306802134	WITHOUT_CLASSIFICATION	2.6669319786448524E-5	DESIGN
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9998658604702413	WITHOUT_CLASSIFICATION	1.3413952975869898E-4	DESIGN
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.7641294931268681	WITHOUT_CLASSIFICATION	0.235870506873132	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999885273830458	WITHOUT_CLASSIFICATION	1.1472616954116346E-5	DESIGN
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999902456716563	WITHOUT_CLASSIFICATION	9.754328343678176E-6	DESIGN
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999677682614205	WITHOUT_CLASSIFICATION	3.223173857938133E-5	DESIGN
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999791438656161	WITHOUT_CLASSIFICATION	2.0856134383815434E-5	DESIGN
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9970755728960619	WITHOUT_CLASSIFICATION	0.0029244271039382138	DESIGN
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9995623057841857	WITHOUT_CLASSIFICATION	4.3769421581433496E-4	DESIGN
// Proc class	WITHOUT_CLASSIFICATION	0.9999760359432399	WITHOUT_CLASSIFICATION	2.3964056760106194E-5	DESIGN
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999940468249202	WITHOUT_CLASSIFICATION	5.9531750797255345E-6	DESIGN
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999804247448237	WITHOUT_CLASSIFICATION	1.9575255176197512E-5	DESIGN
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9376297955015636	WITHOUT_CLASSIFICATION	0.062370204498436416	DESIGN
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9994242568480338	WITHOUT_CLASSIFICATION	5.757431519662924E-4	DESIGN
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.7092661486272104	WITHOUT_CLASSIFICATION	0.2907338513727895	DESIGN
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.99997858169976	WITHOUT_CLASSIFICATION	2.141830024004364E-5	DESIGN
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9990807859381031	WITHOUT_CLASSIFICATION	9.192140618968122E-4	DESIGN
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9989290085689511	WITHOUT_CLASSIFICATION	0.0010709914310489215	DESIGN
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9998641709437424	WITHOUT_CLASSIFICATION	1.3582905625761732E-4	DESIGN
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9999225100873644	WITHOUT_CLASSIFICATION	7.7489912635545E-5	DESIGN
// RubySignal	WITHOUT_CLASSIFICATION	0.9999541764311088	WITHOUT_CLASSIFICATION	4.5823568891192466E-5	DESIGN
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999995958473933	WITHOUT_CLASSIFICATION	4.0415260672858E-7	DESIGN
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.999956584731986	WITHOUT_CLASSIFICATION	4.341526801397257E-5	DESIGN
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999591272959714	WITHOUT_CLASSIFICATION	4.0872704028577845E-5	DESIGN
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9950846695405259	WITHOUT_CLASSIFICATION	0.00491533045947409	DESIGN
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999674787435922	WITHOUT_CLASSIFICATION	3.252125640785214E-5	DESIGN
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999657466199685	WITHOUT_CLASSIFICATION	3.42533800315234E-5	DESIGN
//io.finish();	WITHOUT_CLASSIFICATION	0.9999528359032206	WITHOUT_CLASSIFICATION	4.716409677935482E-5	DESIGN
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9998905848677644	WITHOUT_CLASSIFICATION	1.0941513223560348E-4	DESIGN
// hmm...	WITHOUT_CLASSIFICATION	0.9997807904949213	WITHOUT_CLASSIFICATION	2.1920950507864882E-4	DESIGN
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999821060807977	WITHOUT_CLASSIFICATION	1.7893919202192216E-5	DESIGN
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.999503786113851	WITHOUT_CLASSIFICATION	4.962138861488926E-4	DESIGN
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999217395223159	WITHOUT_CLASSIFICATION	7.826047768410816E-5	DESIGN
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999826835330953	WITHOUT_CLASSIFICATION	1.7316466904765557E-5	DESIGN
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999000630443047	WITHOUT_CLASSIFICATION	9.993695569529088E-5	DESIGN
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9997136220015722	WITHOUT_CLASSIFICATION	2.863779984277173E-4	DESIGN
/* Time class methods */	WITHOUT_CLASSIFICATION	0.999874011146798	WITHOUT_CLASSIFICATION	1.259888532019616E-4	DESIGN
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999774679094499	WITHOUT_CLASSIFICATION	2.2532090550117487E-5	DESIGN
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999069799585489	WITHOUT_CLASSIFICATION	9.302004145108168E-5	DESIGN
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999995323202399	WITHOUT_CLASSIFICATION	4.6767976008283426E-7	DESIGN
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.999992791063864	WITHOUT_CLASSIFICATION	7.208936136069651E-6	DESIGN
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9838992018706554	WITHOUT_CLASSIFICATION	0.016100798129344656	DESIGN
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999798216491425	WITHOUT_CLASSIFICATION	2.017835085756828E-5	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999719493597041	WITHOUT_CLASSIFICATION	2.8050640295871337E-5	DESIGN
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999944551597612	WITHOUT_CLASSIFICATION	5.544840238735999E-6	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999984173175502	WITHOUT_CLASSIFICATION	1.582682449706435E-6	DESIGN
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9996156842939672	WITHOUT_CLASSIFICATION	3.843157060328997E-4	DESIGN
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999193089500359	WITHOUT_CLASSIFICATION	8.069104996410022E-5	DESIGN
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999193089500359	WITHOUT_CLASSIFICATION	8.069104996410022E-5	DESIGN
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9996894348870005	WITHOUT_CLASSIFICATION	3.1056511299954446E-4	DESIGN
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9993722058834124	WITHOUT_CLASSIFICATION	6.277941165876306E-4	DESIGN
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9999303508199617	WITHOUT_CLASSIFICATION	6.964918003824799E-5	DESIGN
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999964312285452	WITHOUT_CLASSIFICATION	3.568771454730979E-6	DESIGN
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9995445605696137	WITHOUT_CLASSIFICATION	4.554394303863341E-4	DESIGN
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9994640058752617	WITHOUT_CLASSIFICATION	5.359941247383234E-4	DESIGN
// ???	WITHOUT_CLASSIFICATION	0.999505964326105	WITHOUT_CLASSIFICATION	4.940356738950674E-4	DESIGN
// PID	WITHOUT_CLASSIFICATION	0.9998838308455419	WITHOUT_CLASSIFICATION	1.1616915445821284E-4	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999984173175502	WITHOUT_CLASSIFICATION	1.582682449706435E-6	DESIGN
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999996954511461	WITHOUT_CLASSIFICATION	3.045488539073454E-7	DESIGN
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.999977700278825	WITHOUT_CLASSIFICATION	2.229972117494038E-5	DESIGN
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.999543513784971	WITHOUT_CLASSIFICATION	4.5648621502910827E-4	DESIGN
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999919220077259	WITHOUT_CLASSIFICATION	8.07799227415291E-6	DESIGN
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.999999512703551	WITHOUT_CLASSIFICATION	4.872964489259993E-7	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999989371442647	WITHOUT_CLASSIFICATION	1.0628557353045728E-6	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999989371442647	WITHOUT_CLASSIFICATION	1.0628557353045728E-6	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999989371442647	WITHOUT_CLASSIFICATION	1.0628557353045728E-6	DESIGN
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9997512757968324	WITHOUT_CLASSIFICATION	2.487242031676111E-4	DESIGN
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999997688666058	WITHOUT_CLASSIFICATION	2.3113339421514863E-7	DESIGN
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999998143827353	WITHOUT_CLASSIFICATION	1.8561726471643195E-7	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997904595092874	WITHOUT_CLASSIFICATION	2.09540490712541E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997904595092874	WITHOUT_CLASSIFICATION	2.09540490712541E-4	DESIGN
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9996297525545428	WITHOUT_CLASSIFICATION	3.702474454571953E-4	DESIGN
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9956080295168227	WITHOUT_CLASSIFICATION	0.004391970483177324	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997904595092874	WITHOUT_CLASSIFICATION	2.09540490712541E-4	DESIGN
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999970347628793	WITHOUT_CLASSIFICATION	2.965237120743575E-6	DESIGN
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.996107193793796	WITHOUT_CLASSIFICATION	0.0038928062062040785	DESIGN
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999910944439311	WITHOUT_CLASSIFICATION	8.90555606888061E-6	DESIGN
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999795876551864	WITHOUT_CLASSIFICATION	2.041234481371243E-5	DESIGN
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999795876551864	WITHOUT_CLASSIFICATION	2.041234481371243E-5	DESIGN
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9995465248432415	WITHOUT_CLASSIFICATION	4.5347515675854387E-4	DESIGN
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999995473848547	WITHOUT_CLASSIFICATION	4.5261514524853165E-7	DESIGN
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999629636606774	WITHOUT_CLASSIFICATION	3.703633932272255E-5	DESIGN
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999629636606774	WITHOUT_CLASSIFICATION	3.703633932272255E-5	DESIGN
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999993459621697	WITHOUT_CLASSIFICATION	6.54037830257073E-7	DESIGN
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999971815789022	WITHOUT_CLASSIFICATION	2.81842109794679E-6	DESIGN
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999817487000744	WITHOUT_CLASSIFICATION	1.8251299925616774E-5	DESIGN
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.999990076827773	WITHOUT_CLASSIFICATION	9.923172227150194E-6	DESIGN
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999598923332825	WITHOUT_CLASSIFICATION	4.010766671750081E-5	DESIGN
// extras flag	WITHOUT_CLASSIFICATION	0.9999949046241191	WITHOUT_CLASSIFICATION	5.09537588093198E-6	DESIGN
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999649026006172	WITHOUT_CLASSIFICATION	3.5097399382874516E-5	DESIGN
// ...nothing	WITHOUT_CLASSIFICATION	0.9998345048024693	WITHOUT_CLASSIFICATION	1.65495197530701E-4	DESIGN
// utility method	WITHOUT_CLASSIFICATION	0.9998613912193399	WITHOUT_CLASSIFICATION	1.386087806601563E-4	DESIGN
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999903881506326	WITHOUT_CLASSIFICATION	9.611849367354492E-6	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999984173175502	WITHOUT_CLASSIFICATION	1.582682449706435E-6	DESIGN
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999982454059134	WITHOUT_CLASSIFICATION	1.754594086492644E-6	DESIGN
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999883772593156	WITHOUT_CLASSIFICATION	1.1622740684373013E-5	DESIGN
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999583026333788	WITHOUT_CLASSIFICATION	4.1697366621195754E-5	DESIGN
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9994009134158044	WITHOUT_CLASSIFICATION	5.990865841956138E-4	DESIGN
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9992393101663807	WITHOUT_CLASSIFICATION	7.606898336193337E-4	DESIGN
// MRI does it!	WITHOUT_CLASSIFICATION	0.9997012619715454	WITHOUT_CLASSIFICATION	2.987380284545953E-4	DESIGN
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999048735993501	WITHOUT_CLASSIFICATION	9.512640064996527E-5	DESIGN
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9997542149710148	WITHOUT_CLASSIFICATION	2.457850289851195E-4	DESIGN
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999716747660659	WITHOUT_CLASSIFICATION	2.8325233934231663E-5	DESIGN
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9994881102061278	WITHOUT_CLASSIFICATION	5.118897938721025E-4	DESIGN
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9965560720654372	WITHOUT_CLASSIFICATION	0.0034439279345627855	DESIGN
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9996966722751309	WITHOUT_CLASSIFICATION	3.033277248690914E-4	DESIGN
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.999970225189407	WITHOUT_CLASSIFICATION	2.9774810592979224E-5	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999549326187984	WITHOUT_CLASSIFICATION	4.5067381201628674E-5	DESIGN
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9999136119918177	WITHOUT_CLASSIFICATION	8.638800818224183E-5	DESIGN
// recheck condition	WITHOUT_CLASSIFICATION	0.9999849069868592	WITHOUT_CLASSIFICATION	1.5093013140933011E-5	DESIGN
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9998568484200997	WITHOUT_CLASSIFICATION	1.43151579900232E-4	DESIGN
// Construct key services	WITHOUT_CLASSIFICATION	0.9999741612031965	WITHOUT_CLASSIFICATION	2.5838796803532225E-5	DESIGN
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999783006791465	WITHOUT_CLASSIFICATION	2.169932085358754E-5	DESIGN
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.999963743851869	WITHOUT_CLASSIFICATION	3.625614813095497E-5	DESIGN
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999968788310823	WITHOUT_CLASSIFICATION	3.1211689176881944E-6	DESIGN
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.999940609080271	WITHOUT_CLASSIFICATION	5.939091972894399E-5	DESIGN
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999934258267045	WITHOUT_CLASSIFICATION	6.5741732955864E-6	DESIGN
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999906615563254	WITHOUT_CLASSIFICATION	9.338443674577954E-6	DESIGN
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999979505740125	WITHOUT_CLASSIFICATION	2.0494259874523806E-6	DESIGN
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9999993512637497	WITHOUT_CLASSIFICATION	6.487362503414757E-7	DESIGN
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9999181342603386	WITHOUT_CLASSIFICATION	8.186573966133755E-5	DESIGN
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999789500059052	WITHOUT_CLASSIFICATION	2.1049994094771088E-5	DESIGN
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999999911794515	WITHOUT_CLASSIFICATION	8.820548539059354E-9	DESIGN
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999981289718668	WITHOUT_CLASSIFICATION	1.8710281332941176E-6	DESIGN
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9998603101137157	WITHOUT_CLASSIFICATION	1.3968988628434807E-4	DESIGN
// determine spacing	WITHOUT_CLASSIFICATION	0.999986923858717	WITHOUT_CLASSIFICATION	1.3076141282959386E-5	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9998894670947422	WITHOUT_CLASSIFICATION	1.1053290525782492E-4	DESIGN
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999941115000545	WITHOUT_CLASSIFICATION	5.8884999455324895E-6	DESIGN
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9999310249158453	WITHOUT_CLASSIFICATION	6.897508415475534E-5	DESIGN
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9999897454300506	WITHOUT_CLASSIFICATION	1.025456994938253E-5	DESIGN
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999824585584669	WITHOUT_CLASSIFICATION	1.754144153309013E-5	DESIGN
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999835745676774	WITHOUT_CLASSIFICATION	1.642543232261944E-5	DESIGN
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999908531960116	WITHOUT_CLASSIFICATION	9.146803988510797E-6	DESIGN
// default: don't retain	WITHOUT_CLASSIFICATION	0.9998585679304499	WITHOUT_CLASSIFICATION	1.414320695501716E-4	DESIGN
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999992422840888	WITHOUT_CLASSIFICATION	7.577159113041758E-7	DESIGN
// Default objects	WITHOUT_CLASSIFICATION	0.9999999356628517	WITHOUT_CLASSIFICATION	6.433714823801506E-8	DESIGN
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999545743121423	WITHOUT_CLASSIFICATION	4.5425687857628136E-5	DESIGN
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999767469979866	WITHOUT_CLASSIFICATION	2.3253002013446856E-5	DESIGN
// Java support	WITHOUT_CLASSIFICATION	0.9999897012029663	WITHOUT_CLASSIFICATION	1.0298797033770101E-5	DESIGN
// Parser stats	WITHOUT_CLASSIFICATION	0.9999988612186139	WITHOUT_CLASSIFICATION	1.1387813860576362E-6	DESIGN
// Compilation	WITHOUT_CLASSIFICATION	0.9999968676579856	WITHOUT_CLASSIFICATION	3.132342014417618E-6	DESIGN
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999097966434302	WITHOUT_CLASSIFICATION	9.02033565697652E-5	DESIGN
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9997006803731872	WITHOUT_CLASSIFICATION	2.9931962681283236E-4	DESIGN
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999941071774321	WITHOUT_CLASSIFICATION	5.892822567837403E-6	DESIGN
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9999916308139767	WITHOUT_CLASSIFICATION	8.36918602319469E-6	DESIGN
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9862332365838176	WITHOUT_CLASSIFICATION	0.013766763416182331	DESIGN
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999996001490343	WITHOUT_CLASSIFICATION	3.998509656737777E-7	DESIGN
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999968904349519	WITHOUT_CLASSIFICATION	3.109565048127904E-6	DESIGN
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9999713951239304	WITHOUT_CLASSIFICATION	2.8604876069578212E-5	DESIGN
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9748743752791793	WITHOUT_CLASSIFICATION	0.02512562472082069	DESIGN
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999960780205549	WITHOUT_CLASSIFICATION	3.921979445053734E-6	DESIGN
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999354175061669	WITHOUT_CLASSIFICATION	6.458249383307476E-5	DESIGN
// quoted-printable	WITHOUT_CLASSIFICATION	0.9999935940746397	WITHOUT_CLASSIFICATION	6.405925360359463E-6	DESIGN
// default options	WITHOUT_CLASSIFICATION	0.999999574233805	WITHOUT_CLASSIFICATION	4.2576619503627693E-7	DESIGN
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999752096171486	WITHOUT_CLASSIFICATION	2.479038285144654E-5	DESIGN
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999752096171486	WITHOUT_CLASSIFICATION	2.479038285144654E-5	DESIGN
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999679021679913	WITHOUT_CLASSIFICATION	3.209783200880132E-5	DESIGN
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999679021679913	WITHOUT_CLASSIFICATION	3.209783200880132E-5	DESIGN
// EUC-JP	WITHOUT_CLASSIFICATION	0.9998182921231619	WITHOUT_CLASSIFICATION	1.817078768381836E-4	DESIGN
// EUC-JP	WITHOUT_CLASSIFICATION	0.9998182921231619	WITHOUT_CLASSIFICATION	1.817078768381836E-4	DESIGN
// UTF-8	WITHOUT_CLASSIFICATION	0.9996397385349749	WITHOUT_CLASSIFICATION	3.602614650250925E-4	DESIGN
// UTF-8	WITHOUT_CLASSIFICATION	0.9996397385349749	WITHOUT_CLASSIFICATION	3.602614650250925E-4	DESIGN
// long name option	WITHOUT_CLASSIFICATION	0.9999986408296638	WITHOUT_CLASSIFICATION	1.3591703360990088E-6	DESIGN
// conversion	WITHOUT_CLASSIFICATION	0.9999941190420897	WITHOUT_CLASSIFICATION	5.880957910321194E-6	DESIGN
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999501220649243	WITHOUT_CLASSIFICATION	4.987793507566297E-5	DESIGN
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999986731409951	WITHOUT_CLASSIFICATION	1.3268590048036705E-6	DESIGN
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999338322336165	WITHOUT_CLASSIFICATION	6.616776638345143E-5	DESIGN
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999961806972391	WITHOUT_CLASSIFICATION	3.81930276098029E-6	DESIGN
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9998473664117884	WITHOUT_CLASSIFICATION	1.5263358821162912E-4	DESIGN
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.99999577260226	WITHOUT_CLASSIFICATION	4.227397740002273E-6	DESIGN
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999173471057853	WITHOUT_CLASSIFICATION	8.265289421481313E-5	DESIGN
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999945882744402	WITHOUT_CLASSIFICATION	5.411725559773026E-6	DESIGN
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999894315200781	WITHOUT_CLASSIFICATION	1.0568479921810359E-5	DESIGN
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999997700050907	WITHOUT_CLASSIFICATION	2.2999490946350583E-7	DESIGN
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.999990680391471	WITHOUT_CLASSIFICATION	9.319608528945784E-6	DESIGN
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999604992953409	WITHOUT_CLASSIFICATION	3.950070465910194E-5	DESIGN
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999969779445523	WITHOUT_CLASSIFICATION	3.0220554477218213E-6	DESIGN
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999931401830279	WITHOUT_CLASSIFICATION	6.859816972092409E-6	DESIGN
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999966127096728	WITHOUT_CLASSIFICATION	3.3872903271413905E-6	DESIGN
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999515851195202	WITHOUT_CLASSIFICATION	4.8414880479904915E-5	DESIGN
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9971344064186659	WITHOUT_CLASSIFICATION	0.002865593581334211	DESIGN
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.8744989345536925	WITHOUT_CLASSIFICATION	0.12550106544630737	DESIGN
// must not reallocate	WITHOUT_CLASSIFICATION	0.9998815311418957	WITHOUT_CLASSIFICATION	1.1846885810440254E-4	DESIGN
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999825370907067	WITHOUT_CLASSIFICATION	1.746290929325526E-5	DESIGN
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9999861242487335	WITHOUT_CLASSIFICATION	1.3875751266616891E-5	DESIGN
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999912047095977	WITHOUT_CLASSIFICATION	8.795290402350062E-6	DESIGN
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999993273418073	WITHOUT_CLASSIFICATION	6.726581927499683E-7	DESIGN
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.999982188943728	WITHOUT_CLASSIFICATION	1.7811056271904745E-5	DESIGN
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999942907859221	WITHOUT_CLASSIFICATION	5.709214077978779E-6	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999910196742244	WITHOUT_CLASSIFICATION	8.980325775611091E-6	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999910196742244	WITHOUT_CLASSIFICATION	8.980325775611091E-6	DESIGN
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999910494699635	WITHOUT_CLASSIFICATION	8.950530036525174E-6	DESIGN
// string given	WITHOUT_CLASSIFICATION	0.9999963247840501	WITHOUT_CLASSIFICATION	3.6752159499051908E-6	DESIGN
// hash given	WITHOUT_CLASSIFICATION	0.9999929460580255	WITHOUT_CLASSIFICATION	7.053941974563408E-6	DESIGN
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9997491535941605	WITHOUT_CLASSIFICATION	2.5084640583949996E-4	DESIGN
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999962742385182	WITHOUT_CLASSIFICATION	3.725761481650033E-6	DESIGN
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999868231707693	WITHOUT_CLASSIFICATION	1.3176829230842047E-5	DESIGN
// nothing	WITHOUT_CLASSIFICATION	0.9997497041303748	WITHOUT_CLASSIFICATION	2.502958696251377E-4	DESIGN
// nothing	WITHOUT_CLASSIFICATION	0.9997497041303748	WITHOUT_CLASSIFICATION	2.502958696251377E-4	DESIGN
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999911773282874	WITHOUT_CLASSIFICATION	8.822671712735198E-6	DESIGN
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.8728186402071283	WITHOUT_CLASSIFICATION	0.12718135979287176	DESIGN
// keep cr ?	WITHOUT_CLASSIFICATION	0.9998371946794369	WITHOUT_CLASSIFICATION	1.6280532056303111E-4	DESIGN
// keep cr ?	WITHOUT_CLASSIFICATION	0.9998371946794369	WITHOUT_CLASSIFICATION	1.6280532056303111E-4	DESIGN
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999639715190521	WITHOUT_CLASSIFICATION	3.602848094789284E-5	DESIGN
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999665095948524	WITHOUT_CLASSIFICATION	3.3490405147574214E-5	DESIGN
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999665095948524	WITHOUT_CLASSIFICATION	3.3490405147574214E-5	DESIGN
// modified	WITHOUT_CLASSIFICATION	0.9999654411963789	WITHOUT_CLASSIFICATION	3.455880362116506E-5	DESIGN
// modified	WITHOUT_CLASSIFICATION	0.9999654411963789	WITHOUT_CLASSIFICATION	3.455880362116506E-5	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9999597503334126	WITHOUT_CLASSIFICATION	4.024966658749488E-5	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9999597503334126	WITHOUT_CLASSIFICATION	4.024966658749488E-5	DESIGN
// QTRUE	WITHOUT_CLASSIFICATION	0.9998537194614717	WITHOUT_CLASSIFICATION	1.4628053852836154E-4	DESIGN
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999652878456178	WITHOUT_CLASSIFICATION	3.4712154382189394E-5	DESIGN
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.999996015784929	WITHOUT_CLASSIFICATION	3.984215071048126E-6	DESIGN
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.999985506528995	WITHOUT_CLASSIFICATION	1.4493471004897514E-5	DESIGN
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9997911171102284	WITHOUT_CLASSIFICATION	2.0888288977161446E-4	DESIGN
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999725447212563	WITHOUT_CLASSIFICATION	2.7455278743708678E-5	DESIGN
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9998521567295556	WITHOUT_CLASSIFICATION	1.478432704442929E-4	DESIGN
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9998727060932011	WITHOUT_CLASSIFICATION	1.2729390679897505E-4	DESIGN
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9998521567295556	WITHOUT_CLASSIFICATION	1.478432704442929E-4	DESIGN
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9999798235678177	WITHOUT_CLASSIFICATION	2.0176432182422867E-5	DESIGN
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9982872825108151	WITHOUT_CLASSIFICATION	0.0017127174891848707	DESIGN
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999958118181717	WITHOUT_CLASSIFICATION	4.188181828386729E-6	DESIGN
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999903222526096	WITHOUT_CLASSIFICATION	9.677747390477189E-6	DESIGN
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999254090808174	WITHOUT_CLASSIFICATION	7.45909191825579E-5	DESIGN
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9999491999332382	WITHOUT_CLASSIFICATION	5.080006676184734E-5	DESIGN
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999978317498222	WITHOUT_CLASSIFICATION	2.168250177750857E-6	DESIGN
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999711021957866	WITHOUT_CLASSIFICATION	2.8897804213364327E-5	DESIGN
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.999986944524603	WITHOUT_CLASSIFICATION	1.305547539685471E-5	DESIGN
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9989151038920279	WITHOUT_CLASSIFICATION	0.0010848961079720507	DESIGN
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9998655834090342	WITHOUT_CLASSIFICATION	1.3441659096586004E-4	DESIGN
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999999280256391	WITHOUT_CLASSIFICATION	7.197436090793393E-8	DESIGN
// file not given	WITHOUT_CLASSIFICATION	0.9999972069462355	WITHOUT_CLASSIFICATION	2.7930537643959697E-6	DESIGN
// string to eval	WITHOUT_CLASSIFICATION	0.9999948783131177	WITHOUT_CLASSIFICATION	5.12168688225171E-6	DESIGN
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9998753077774466	WITHOUT_CLASSIFICATION	1.2469222255342963E-4	DESIGN
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999980394564842	WITHOUT_CLASSIFICATION	1.9605435156668204E-6	DESIGN
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.998538423224626	WITHOUT_CLASSIFICATION	0.0014615767753739703	DESIGN
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999954963070372	WITHOUT_CLASSIFICATION	4.503692962777918E-6	DESIGN
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9997888796622024	WITHOUT_CLASSIFICATION	2.1112033779747963E-4	DESIGN
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9999757214983234	WITHOUT_CLASSIFICATION	2.4278501676679965E-5	DESIGN
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9999971224108334	WITHOUT_CLASSIFICATION	2.8775891664754032E-6	DESIGN
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999989615608457	WITHOUT_CLASSIFICATION	1.0384391543837782E-6	DESIGN
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999990092889458	WITHOUT_CLASSIFICATION	9.907110541394237E-7	DESIGN
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999658756477235	WITHOUT_CLASSIFICATION	3.412435227653634E-5	DESIGN
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999993007231487	WITHOUT_CLASSIFICATION	6.992768513151323E-7	DESIGN
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9998273931925835	WITHOUT_CLASSIFICATION	1.7260680741647277E-4	DESIGN
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9998808729561467	WITHOUT_CLASSIFICATION	1.1912704385328481E-4	DESIGN
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999930486676537	WITHOUT_CLASSIFICATION	6.9513323463309214E-6	DESIGN
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999934829418116	WITHOUT_CLASSIFICATION	6.517058188443571E-6	DESIGN
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999971353177681	WITHOUT_CLASSIFICATION	2.864682231941348E-6	DESIGN
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999921191340172	WITHOUT_CLASSIFICATION	7.880865982727871E-6	DESIGN
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999939391153618	WITHOUT_CLASSIFICATION	6.060884638138218E-6	DESIGN
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999634780463058	WITHOUT_CLASSIFICATION	3.652195369415061E-5	DESIGN
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999846874947159	WITHOUT_CLASSIFICATION	1.531250528402337E-5	DESIGN
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999816937651126	WITHOUT_CLASSIFICATION	1.8306234887372628E-5	DESIGN
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999441611756592	WITHOUT_CLASSIFICATION	5.5838824340775595E-5	DESIGN
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999934057204912	WITHOUT_CLASSIFICATION	6.5942795086733974E-6	DESIGN
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999771996361904	WITHOUT_CLASSIFICATION	2.2800363809611E-5	DESIGN
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999943240457314	WITHOUT_CLASSIFICATION	5.675954268594708E-6	DESIGN
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999709099314134	WITHOUT_CLASSIFICATION	2.909006858670946E-5	DESIGN
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999922898928475	WITHOUT_CLASSIFICATION	7.710107152513746E-6	DESIGN
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999996502756057	WITHOUT_CLASSIFICATION	3.497243942392258E-7	DESIGN
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999947286215891	WITHOUT_CLASSIFICATION	5.271378410887584E-6	DESIGN
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999791954264651	WITHOUT_CLASSIFICATION	2.0804573534982733E-5	DESIGN
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999999576355556	WITHOUT_CLASSIFICATION	4.236444427745276E-8	DESIGN
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999988393189088	WITHOUT_CLASSIFICATION	1.1606810912747356E-6	DESIGN
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999994453224303	WITHOUT_CLASSIFICATION	5.546775697298166E-7	DESIGN
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.999996077999693	WITHOUT_CLASSIFICATION	3.922000307062326E-6	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9971678651942918	WITHOUT_CLASSIFICATION	0.002832134805708212	DESIGN
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9911841528950002	WITHOUT_CLASSIFICATION	0.00881584710499978	DESIGN
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9998879185957781	WITHOUT_CLASSIFICATION	1.120814042219776E-4	DESIGN
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999732986169702	WITHOUT_CLASSIFICATION	2.6701383029889728E-5	DESIGN
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9991935619865521	WITHOUT_CLASSIFICATION	8.06438013447917E-4	DESIGN
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9999941109316147	WITHOUT_CLASSIFICATION	5.889068385314037E-6	DESIGN
// set to default thread group	WITHOUT_CLASSIFICATION	0.9998091842940148	WITHOUT_CLASSIFICATION	1.9081570598532716E-4	DESIGN
// set to default thread group	WITHOUT_CLASSIFICATION	0.9998091842940148	WITHOUT_CLASSIFICATION	1.9081570598532716E-4	DESIGN
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9973661874352648	WITHOUT_CLASSIFICATION	0.002633812564735086	DESIGN
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9992578197432334	WITHOUT_CLASSIFICATION	7.421802567666528E-4	DESIGN
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9415674178687167	WITHOUT_CLASSIFICATION	0.058432582131283384	DESIGN
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9998773593269662	WITHOUT_CLASSIFICATION	1.2264067303388346E-4	DESIGN
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999994624658294	WITHOUT_CLASSIFICATION	5.375341706701691E-7	DESIGN
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999424053102016	WITHOUT_CLASSIFICATION	5.759468979832214E-5	DESIGN
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999627336055382	WITHOUT_CLASSIFICATION	3.726639446180821E-5	DESIGN
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9969736473604096	WITHOUT_CLASSIFICATION	0.003026352639590414	DESIGN
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.999596375975471	WITHOUT_CLASSIFICATION	4.036240245290504E-4	DESIGN
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999893146361578	WITHOUT_CLASSIFICATION	1.0685363842184822E-5	DESIGN
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.998825764753822	WITHOUT_CLASSIFICATION	0.0011742352461780216	DESIGN
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.998825764753822	WITHOUT_CLASSIFICATION	0.0011742352461780216	DESIGN
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9877636830754031	WITHOUT_CLASSIFICATION	0.012236316924596997	DESIGN
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9990600913041796	WITHOUT_CLASSIFICATION	9.399086958203851E-4	DESIGN
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.999992783681888	WITHOUT_CLASSIFICATION	7.216318111989001E-6	DESIGN
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999982984459801	WITHOUT_CLASSIFICATION	1.7015540198698716E-6	DESIGN
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999995572986958	WITHOUT_CLASSIFICATION	4.4270130411286574E-7	DESIGN
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999996512133035	WITHOUT_CLASSIFICATION	3.487866964275228E-7	DESIGN
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999974431399246	WITHOUT_CLASSIFICATION	2.5568600755161494E-6	DESIGN
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999978911917463	WITHOUT_CLASSIFICATION	2.1088082537709527E-6	DESIGN
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999981356921578	WITHOUT_CLASSIFICATION	1.8643078421979153E-6	DESIGN
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.999996155575241	WITHOUT_CLASSIFICATION	3.84442475900997E-6	DESIGN
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999517414988528	WITHOUT_CLASSIFICATION	4.825850114714925E-5	DESIGN
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999656484588911	WITHOUT_CLASSIFICATION	3.435154110895293E-5	DESIGN
// Return false here	WITHOUT_CLASSIFICATION	0.9999608700713122	WITHOUT_CLASSIFICATION	3.9129928687849316E-5	DESIGN
// Return false here	WITHOUT_CLASSIFICATION	0.9999608700713122	WITHOUT_CLASSIFICATION	3.9129928687849316E-5	DESIGN
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9996681536072222	WITHOUT_CLASSIFICATION	3.3184639277783246E-4	DESIGN
// Should we do anything?	WITHOUT_CLASSIFICATION	0.7875528977519073	WITHOUT_CLASSIFICATION	0.21244710224809257	DESIGN
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999844873338976	WITHOUT_CLASSIFICATION	1.5512666102387135E-5	DESIGN
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9998936561378021	WITHOUT_CLASSIFICATION	1.0634386219789104E-4	DESIGN
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9994027792003151	WITHOUT_CLASSIFICATION	5.972207996849462E-4	DESIGN
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9996012050512992	WITHOUT_CLASSIFICATION	3.987949487007478E-4	DESIGN
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999901523597566	WITHOUT_CLASSIFICATION	9.847640243331361E-6	DESIGN
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999992797547352	WITHOUT_CLASSIFICATION	7.202452648778308E-7	DESIGN
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.99999687414923	WITHOUT_CLASSIFICATION	3.1258507700851043E-6	DESIGN
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9994623750696416	WITHOUT_CLASSIFICATION	5.376249303584122E-4	DESIGN
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.999992783681888	WITHOUT_CLASSIFICATION	7.216318111989001E-6	DESIGN
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9999990277706993	WITHOUT_CLASSIFICATION	9.72229300718811E-7	DESIGN
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9999616520155891	WITHOUT_CLASSIFICATION	3.834798441091585E-5	DESIGN
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.999994371860462	WITHOUT_CLASSIFICATION	5.628139537911241E-6	DESIGN
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9554713182572725	WITHOUT_CLASSIFICATION	0.044528681742727554	DESIGN
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9992160766805038	WITHOUT_CLASSIFICATION	7.839233194962301E-4	DESIGN
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9881815048817042	WITHOUT_CLASSIFICATION	0.011818495118295844	DESIGN
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9997675247176251	WITHOUT_CLASSIFICATION	2.3247528237485708E-4	DESIGN
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9998058544485179	WITHOUT_CLASSIFICATION	1.9414555148217116E-4	DESIGN
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999955306318475	WITHOUT_CLASSIFICATION	4.469368152410666E-6	DESIGN
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999951771577295	WITHOUT_CLASSIFICATION	4.8228422704996495E-6	DESIGN
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.999992951298049	WITHOUT_CLASSIFICATION	7.048701950932427E-6	DESIGN
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9998343936408719	WITHOUT_CLASSIFICATION	1.6560635912798028E-4	DESIGN
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999913090501608	WITHOUT_CLASSIFICATION	8.690949839217097E-6	DESIGN
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.988602732935672	WITHOUT_CLASSIFICATION	0.011397267064327912	DESIGN
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9997428039579117	WITHOUT_CLASSIFICATION	2.571960420882473E-4	DESIGN
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9996492674508458	WITHOUT_CLASSIFICATION	3.507325491541243E-4	DESIGN
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.8831298709454747	WITHOUT_CLASSIFICATION	0.11687012905452526	DESIGN
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999805671039115	WITHOUT_CLASSIFICATION	1.9432896088520497E-5	DESIGN
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999415177576859	WITHOUT_CLASSIFICATION	5.848224231408714E-5	DESIGN
// rename is successful	WITHOUT_CLASSIFICATION	0.9999800200562766	WITHOUT_CLASSIFICATION	1.9979943723308372E-5	DESIGN
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.998459465164088	WITHOUT_CLASSIFICATION	0.0015405348359119957	DESIGN
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999989522129523	WITHOUT_CLASSIFICATION	1.0477870477354263E-6	DESIGN
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9620290757531572	WITHOUT_CLASSIFICATION	0.037970924246842765	DESIGN
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999985454183722	WITHOUT_CLASSIFICATION	1.4545816277777774E-6	DESIGN
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9999748647185361	WITHOUT_CLASSIFICATION	2.513528146387756E-5	DESIGN
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999457877445416	WITHOUT_CLASSIFICATION	5.421225545841475E-5	DESIGN
// 16 ?	WITHOUT_CLASSIFICATION	0.9995953452856704	WITHOUT_CLASSIFICATION	4.046547143296411E-4	DESIGN
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999953517746208	WITHOUT_CLASSIFICATION	4.64822537923047E-6	DESIGN
// size + 1;	WITHOUT_CLASSIFICATION	0.9999515942271379	WITHOUT_CLASSIFICATION	4.840577286204973E-5	DESIGN
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999586116791571	WITHOUT_CLASSIFICATION	4.138832084288467E-5	DESIGN
// ------------------------------	WITHOUT_CLASSIFICATION	0.999983511913588	WITHOUT_CLASSIFICATION	1.6488086411947268E-5	DESIGN
// ------------------------------	WITHOUT_CLASSIFICATION	0.999983511913588	WITHOUT_CLASSIFICATION	1.6488086411947268E-5	DESIGN
// put implementation	WITHOUT_CLASSIFICATION	0.9999856309834172	WITHOUT_CLASSIFICATION	1.4369016582683598E-5	DESIGN
// get implementation	WITHOUT_CLASSIFICATION	0.9999943615124031	WITHOUT_CLASSIFICATION	5.638487596880796E-6	DESIGN
// specialized for value	WITHOUT_CLASSIFICATION	0.9999902249045247	WITHOUT_CLASSIFICATION	9.775095475343545E-6	DESIGN
// delete implementation	WITHOUT_CLASSIFICATION	0.9999888643593934	WITHOUT_CLASSIFICATION	1.1135640606592294E-5	DESIGN
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999001459210981	WITHOUT_CLASSIFICATION	9.985407890183648E-5	DESIGN
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999625564511451	WITHOUT_CLASSIFICATION	3.744354885501081E-5	DESIGN
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999984173175502	WITHOUT_CLASSIFICATION	1.582682449706435E-6	DESIGN
// update the hash value	WITHOUT_CLASSIFICATION	0.9999578435358268	WITHOUT_CLASSIFICATION	4.21564641731519E-5	DESIGN
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9999680354486639	WITHOUT_CLASSIFICATION	3.196455133612483E-5	DESIGN
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.999946811334296	WITHOUT_CLASSIFICATION	5.3188665704084176E-5	DESIGN
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999985668688518	WITHOUT_CLASSIFICATION	1.4331311481788006E-6	DESIGN
// remain where we are	WITHOUT_CLASSIFICATION	0.9996370808513955	WITHOUT_CLASSIFICATION	3.6291914860451407E-4	DESIGN
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999854594745421	WITHOUT_CLASSIFICATION	1.454052545782994E-5	DESIGN
// default: don't retain	WITHOUT_CLASSIFICATION	0.9998585679304499	WITHOUT_CLASSIFICATION	1.414320695501716E-4	DESIGN
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999940774112145	WITHOUT_CLASSIFICATION	5.9225887854888525E-6	DESIGN
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9990030098722674	WITHOUT_CLASSIFICATION	9.96990127732565E-4	DESIGN
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999997344833922	WITHOUT_CLASSIFICATION	2.6551660786852555E-7	DESIGN
// first try as directory	WITHOUT_CLASSIFICATION	0.9999995032326453	WITHOUT_CLASSIFICATION	4.967673547168781E-7	DESIGN
// next as regular file	WITHOUT_CLASSIFICATION	0.9999994329081335	WITHOUT_CLASSIFICATION	5.67091866429237E-7	DESIGN
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999019201894314	WITHOUT_CLASSIFICATION	9.80798105685436E-5	DESIGN
// NIO-based	WITHOUT_CLASSIFICATION	0.9999841170563918	WITHOUT_CLASSIFICATION	1.588294360820789E-5	DESIGN
// NIO-based	WITHOUT_CLASSIFICATION	0.9999841170563918	WITHOUT_CLASSIFICATION	1.588294360820789E-5	DESIGN
// Stream-based	WITHOUT_CLASSIFICATION	0.9999949081760203	WITHOUT_CLASSIFICATION	5.091823979728234E-6	DESIGN
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.99999941958108	WITHOUT_CLASSIFICATION	5.804189199956571E-7	DESIGN
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999662994688229	WITHOUT_CLASSIFICATION	3.370053117716786E-5	DESIGN
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999964411137924	WITHOUT_CLASSIFICATION	3.5588862077512915E-6	DESIGN
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999481493483708	WITHOUT_CLASSIFICATION	5.1850651629191985E-5	DESIGN
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999475379149535	WITHOUT_CLASSIFICATION	5.24620850465607E-5	DESIGN
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999998289574223	WITHOUT_CLASSIFICATION	1.7104257761685014E-7	DESIGN
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999997469544527	WITHOUT_CLASSIFICATION	2.5304554721990267E-7	DESIGN
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999916505069858	WITHOUT_CLASSIFICATION	8.34949301409344E-6	DESIGN
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9980986008770563	WITHOUT_CLASSIFICATION	0.0019013991229437708	DESIGN
// re-register	WITHOUT_CLASSIFICATION	0.999995339410551	WITHOUT_CLASSIFICATION	4.660589449053326E-6	DESIGN
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9991910383853767	WITHOUT_CLASSIFICATION	8.089616146234009E-4	DESIGN
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999918148255031	WITHOUT_CLASSIFICATION	8.185174496923228E-6	DESIGN
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999839157829432	WITHOUT_CLASSIFICATION	1.6084217056819374E-5	DESIGN
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999950589979699	WITHOUT_CLASSIFICATION	4.9410020300746445E-6	DESIGN
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9995234485477539	WITHOUT_CLASSIFICATION	4.7655145224603915E-4	DESIGN
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999744265779383	WITHOUT_CLASSIFICATION	2.5573422061693392E-5	DESIGN
// use original modes	WITHOUT_CLASSIFICATION	0.9999156207780058	WITHOUT_CLASSIFICATION	8.437922199424701E-5	DESIGN
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9856746883629613	WITHOUT_CLASSIFICATION	0.01432531163703866	DESIGN
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9998972014164259	WITHOUT_CLASSIFICATION	1.0279858357409035E-4	DESIGN
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9999848822357542	WITHOUT_CLASSIFICATION	1.511776424586462E-5	DESIGN
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.999997966321799	WITHOUT_CLASSIFICATION	2.033678200906897E-6	DESIGN
// isRetained=true	WITHOUT_CLASSIFICATION	0.9999852260447015	WITHOUT_CLASSIFICATION	1.4773955298576142E-5	DESIGN
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9537734290276159	WITHOUT_CLASSIFICATION	0.04622657097238405	DESIGN
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.999186626811899	WITHOUT_CLASSIFICATION	8.133731881010708E-4	DESIGN
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9991923630586771	WITHOUT_CLASSIFICATION	8.076369413229618E-4	DESIGN
//Everything written	WITHOUT_CLASSIFICATION	0.9990899858110165	WITHOUT_CLASSIFICATION	9.100141889834698E-4	DESIGN
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999252124755197	WITHOUT_CLASSIFICATION	7.478752448028455E-5	DESIGN
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999492033279948	WITHOUT_CLASSIFICATION	5.079667200519254E-5	DESIGN
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9998112382222251	WITHOUT_CLASSIFICATION	1.8876177777505708E-4	DESIGN
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.999992459512132	WITHOUT_CLASSIFICATION	7.540487868021571E-6	DESIGN
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999948208848128	WITHOUT_CLASSIFICATION	5.179115187268016E-6	DESIGN
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9997184978249383	WITHOUT_CLASSIFICATION	2.8150217506179946E-4	DESIGN
// hmmmm	WITHOUT_CLASSIFICATION	0.9999536532465212	WITHOUT_CLASSIFICATION	4.634675347886646E-5	DESIGN
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999033326988216	WITHOUT_CLASSIFICATION	9.66673011783246E-5	DESIGN
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.5928966385117556	DESIGN	0.40710336148824444	WITHOUT_CLASSIFICATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.997490905968905	WITHOUT_CLASSIFICATION	0.002509094031095	DESIGN
// Length to read	WITHOUT_CLASSIFICATION	0.9999932777911119	WITHOUT_CLASSIFICATION	6.722208888061082E-6	DESIGN
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999293092547682	WITHOUT_CLASSIFICATION	7.069074523181386E-5	DESIGN
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9998408945007776	WITHOUT_CLASSIFICATION	1.5910549922225757E-4	DESIGN
// select until read is ready	WITHOUT_CLASSIFICATION	0.999692396798967	WITHOUT_CLASSIFICATION	3.0760320103304583E-4	DESIGN
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999951296135797	WITHOUT_CLASSIFICATION	4.870386420276435E-6	DESIGN
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999851560109098	WITHOUT_CLASSIFICATION	1.4843989090345888E-5	DESIGN
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9784720821092998	WITHOUT_CLASSIFICATION	0.021527917890700257	DESIGN
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999526501169599	WITHOUT_CLASSIFICATION	4.7349883040136696E-5	DESIGN
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9784720821092998	WITHOUT_CLASSIFICATION	0.021527917890700257	DESIGN
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9893510698543077	DESIGN	0.010648930145692287	WITHOUT_CLASSIFICATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.6772379668149282	DESIGN	0.32276203318507185	WITHOUT_CLASSIFICATION
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9994492299433497	WITHOUT_CLASSIFICATION	5.507700566502157E-4	DESIGN
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.9812225671886408	DESIGN	0.01877743281135923	WITHOUT_CLASSIFICATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999256600309234	WITHOUT_CLASSIFICATION	7.433996907659066E-5	DESIGN
// save blocking state	WITHOUT_CLASSIFICATION	0.9999836166235384	WITHOUT_CLASSIFICATION	1.6383376461575088E-5	DESIGN
// write	WITHOUT_CLASSIFICATION	0.9999647960773965	WITHOUT_CLASSIFICATION	3.520392260352969E-5	DESIGN
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.999930921594691	WITHOUT_CLASSIFICATION	6.907840530897148E-5	DESIGN
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999877619818826	WITHOUT_CLASSIFICATION	1.2238018117451958E-5	DESIGN
// FIXME: process options	WITHOUT_CLASSIFICATION	0.9999881170154593	WITHOUT_CLASSIFICATION	1.188298454058149E-5	DESIGN
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.995068007908347	WITHOUT_CLASSIFICATION	0.0049319920916529045	DESIGN
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9999736879849052	WITHOUT_CLASSIFICATION	2.6312015094848587E-5	DESIGN
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9873645733555421	WITHOUT_CLASSIFICATION	0.012635426644457923	DESIGN
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9995586026217547	WITHOUT_CLASSIFICATION	4.4139737824531756E-4	DESIGN
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9992814576695876	WITHOUT_CLASSIFICATION	7.185423304123337E-4	DESIGN
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9011062153281758	WITHOUT_CLASSIFICATION	0.09889378467182428	DESIGN
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999930661452869	WITHOUT_CLASSIFICATION	6.93385471302559E-6	DESIGN
// The class of this object	WITHOUT_CLASSIFICATION	0.9989354167834821	WITHOUT_CLASSIFICATION	0.001064583216517967	DESIGN
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999396360304581	WITHOUT_CLASSIFICATION	6.036396954193262E-5	DESIGN
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9998074601593985	WITHOUT_CLASSIFICATION	1.92539840601417E-4	DESIGN
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9999358745101463	WITHOUT_CLASSIFICATION	6.412548985376729E-5	DESIGN
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9999816845008014	WITHOUT_CLASSIFICATION	1.8315499198604064E-5	DESIGN
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999924888787527	WITHOUT_CLASSIFICATION	7.511121247302279E-6	DESIGN
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999909815923277	WITHOUT_CLASSIFICATION	9.018407672293488E-6	DESIGN
// for interface impls	WITHOUT_CLASSIFICATION	0.9999969955815406	WITHOUT_CLASSIFICATION	3.004418459456118E-6	DESIGN
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9980944140302995	WITHOUT_CLASSIFICATION	0.001905585969700575	DESIGN
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999951928569677	WITHOUT_CLASSIFICATION	4.80714303237168E-6	DESIGN
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9993204611438818	WITHOUT_CLASSIFICATION	6.795388561182108E-4	DESIGN
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999993848023456	WITHOUT_CLASSIFICATION	6.151976542937179E-7	DESIGN
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9998097332379191	WITHOUT_CLASSIFICATION	1.9026676208092012E-4	DESIGN
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9998950522890679	WITHOUT_CLASSIFICATION	1.0494771093202993E-4	DESIGN
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999363512412058	WITHOUT_CLASSIFICATION	6.364875879421206E-5	DESIGN
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.999796310163854	WITHOUT_CLASSIFICATION	2.036898361460459E-4	DESIGN
// Struct methods	WITHOUT_CLASSIFICATION	0.9999964523986479	WITHOUT_CLASSIFICATION	3.5476013521893364E-6	DESIGN
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9999996485341227	WITHOUT_CLASSIFICATION	3.514658773513127E-7	DESIGN
// define access methods.	WITHOUT_CLASSIFICATION	0.9999949069957245	WITHOUT_CLASSIFICATION	5.0930042754910645E-6	DESIGN
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999970429836982	WITHOUT_CLASSIFICATION	2.9570163019049907E-6	DESIGN
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9544505978480389	WITHOUT_CLASSIFICATION	0.045549402151961224	DESIGN
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999991210845073	WITHOUT_CLASSIFICATION	8.789154926921492E-7	DESIGN
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999096352555042	WITHOUT_CLASSIFICATION	9.036474449576574E-5	DESIGN
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999347216447574	WITHOUT_CLASSIFICATION	6.527835524251629E-5	DESIGN
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999825979366429	WITHOUT_CLASSIFICATION	1.7402063357089432E-5	DESIGN
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999994021578973	WITHOUT_CLASSIFICATION	5.978421028429739E-7	DESIGN
// Atomic ?	WITHOUT_CLASSIFICATION	0.9994495142745732	WITHOUT_CLASSIFICATION	5.504857254268461E-4	DESIGN
// Atomic ?	WITHOUT_CLASSIFICATION	0.9994495142745732	WITHOUT_CLASSIFICATION	5.504857254268461E-4	DESIGN
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9998874306487521	WITHOUT_CLASSIFICATION	1.125693512478183E-4	DESIGN
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9995489239667895	WITHOUT_CLASSIFICATION	4.510760332104677E-4	DESIGN
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9998877382465343	WITHOUT_CLASSIFICATION	1.1226175346564404E-4	DESIGN
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999994936268723	WITHOUT_CLASSIFICATION	5.063731276347924E-7	DESIGN
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.999221345316598	WITHOUT_CLASSIFICATION	7.7865468340205E-4	DESIGN
// update superclass reference	WITHOUT_CLASSIFICATION	0.9997756372943928	WITHOUT_CLASSIFICATION	2.2436270560713135E-4	DESIGN
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999861862498699	WITHOUT_CLASSIFICATION	1.3813750130192193E-5	DESIGN
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999673933914796	WITHOUT_CLASSIFICATION	3.2606608520374646E-5	DESIGN
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9995912980076997	WITHOUT_CLASSIFICATION	4.0870199230027426E-4	DESIGN
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9991705788910213	WITHOUT_CLASSIFICATION	8.294211089785743E-4	DESIGN
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999237938238607	WITHOUT_CLASSIFICATION	7.620617613935632E-5	DESIGN
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9183865389978849	WITHOUT_CLASSIFICATION	0.0816134610021152	DESIGN
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9998856186970198	WITHOUT_CLASSIFICATION	1.1438130298031707E-4	DESIGN
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9991638569239681	WITHOUT_CLASSIFICATION	8.36143076031865E-4	DESIGN
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999702143982525	WITHOUT_CLASSIFICATION	2.9785601747468172E-5	DESIGN
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.999995908943541	WITHOUT_CLASSIFICATION	4.091056459034387E-6	DESIGN
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999260880659253	WITHOUT_CLASSIFICATION	7.391193407467109E-5	DESIGN
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999467316937538	WITHOUT_CLASSIFICATION	5.326830624628944E-5	DESIGN
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9997752782081747	WITHOUT_CLASSIFICATION	2.2472179182530809E-4	DESIGN
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999464310066296	WITHOUT_CLASSIFICATION	5.356899337034756E-5	DESIGN
//FIXME warning	WITHOUT_CLASSIFICATION	0.999455712799298	WITHOUT_CLASSIFICATION	5.442872007019498E-4	DESIGN
// FIXME warning	WITHOUT_CLASSIFICATION	0.9997941111644243	WITHOUT_CLASSIFICATION	2.0588883557574818E-4	DESIGN
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9999218536756103	WITHOUT_CLASSIFICATION	7.814632438978132E-5	DESIGN
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9978970018656954	WITHOUT_CLASSIFICATION	0.00210299813430457	DESIGN
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9998435388061787	WITHOUT_CLASSIFICATION	1.564611938212463E-4	DESIGN
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9890864895836615	WITHOUT_CLASSIFICATION	0.01091351041633836	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.7650491278314	WITHOUT_CLASSIFICATION	0.2349508721686	DESIGN
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9999536409517727	WITHOUT_CLASSIFICATION	4.635904822724659E-5	DESIGN
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999287866751201	WITHOUT_CLASSIFICATION	7.121332487986696E-5	DESIGN
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999329118901835	WITHOUT_CLASSIFICATION	6.708810981641519E-5	DESIGN
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9716503517463392	WITHOUT_CLASSIFICATION	0.02834964825366083	DESIGN
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999957309006551	WITHOUT_CLASSIFICATION	4.269099344910185E-6	DESIGN
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.999992015353183	WITHOUT_CLASSIFICATION	7.98464681693197E-6	DESIGN
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999985263903359	WITHOUT_CLASSIFICATION	1.473609664104695E-6	DESIGN
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999987991054234	WITHOUT_CLASSIFICATION	1.200894576577788E-6	DESIGN
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9994264606770266	WITHOUT_CLASSIFICATION	5.735393229734388E-4	DESIGN
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9996433723511509	WITHOUT_CLASSIFICATION	3.5662764884908897E-4	DESIGN
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9998994923541541	WITHOUT_CLASSIFICATION	1.0050764584589501E-4	DESIGN
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.999987472283776	WITHOUT_CLASSIFICATION	1.2527716223995541E-5	DESIGN
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9993229003711991	WITHOUT_CLASSIFICATION	6.770996288008459E-4	DESIGN
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9999419639950307	WITHOUT_CLASSIFICATION	5.803600496938236E-5	DESIGN
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9999247094062842	WITHOUT_CLASSIFICATION	7.529059371576372E-5	DESIGN
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.999992147034682	WITHOUT_CLASSIFICATION	7.852965318041878E-6	DESIGN
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999976685358329	WITHOUT_CLASSIFICATION	2.3314641670830496E-6	DESIGN
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9998934332290619	WITHOUT_CLASSIFICATION	1.0656677093810822E-4	DESIGN
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999108308216815	WITHOUT_CLASSIFICATION	8.916917831845484E-5	DESIGN
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9997920160903553	WITHOUT_CLASSIFICATION	2.0798390964463787E-4	DESIGN
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999749941933823	WITHOUT_CLASSIFICATION	2.500580661764704E-5	DESIGN
//reopen	WITHOUT_CLASSIFICATION	0.9998663617207153	WITHOUT_CLASSIFICATION	1.336382792846697E-4	DESIGN
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999927203458001	WITHOUT_CLASSIFICATION	7.2796541997793215E-6	DESIGN
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999996857668813	WITHOUT_CLASSIFICATION	3.142331188027523E-7	DESIGN
// one optional, one required args	WITHOUT_CLASSIFICATION	0.999999802778294	WITHOUT_CLASSIFICATION	1.9722170592195521E-7	DESIGN
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999999585138529	WITHOUT_CLASSIFICATION	4.1486147000646944E-8	DESIGN
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999971495333883	WITHOUT_CLASSIFICATION	2.8504666118137134E-6	DESIGN
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9997353435186829	WITHOUT_CLASSIFICATION	2.646564813171263E-4	DESIGN
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999452060015094	WITHOUT_CLASSIFICATION	5.479399849065911E-5	DESIGN
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9998099944805006	WITHOUT_CLASSIFICATION	1.900055194993902E-4	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9904036301436786	WITHOUT_CLASSIFICATION	0.009596369856321348	DESIGN
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9984869573480115	WITHOUT_CLASSIFICATION	0.0015130426519885368	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9986545920840608	WITHOUT_CLASSIFICATION	0.0013454079159391963	DESIGN
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.999988456480292	WITHOUT_CLASSIFICATION	1.154351970812052E-5	DESIGN
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999251080203826	WITHOUT_CLASSIFICATION	7.489197961743406E-5	DESIGN
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999956341462651	WITHOUT_CLASSIFICATION	4.365853734873979E-6	DESIGN
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999911943233408	WITHOUT_CLASSIFICATION	8.805676659091937E-6	DESIGN
// ignore error	WITHOUT_CLASSIFICATION	0.9999872524009578	WITHOUT_CLASSIFICATION	1.2747599042267532E-5	DESIGN
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999389627955659	WITHOUT_CLASSIFICATION	6.103720443410454E-5	DESIGN
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.999870627773623	WITHOUT_CLASSIFICATION	1.2937222637701066E-4	DESIGN
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999897985262042	WITHOUT_CLASSIFICATION	1.020147379583029E-5	DESIGN
// odd	WITHOUT_CLASSIFICATION	0.9998711917652577	WITHOUT_CLASSIFICATION	1.288082347422096E-4	DESIGN
// JRubyClient	WITHOUT_CLASSIFICATION	0.999963567978651	WITHOUT_CLASSIFICATION	3.643202134894607E-5	DESIGN
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999862917242605	WITHOUT_CLASSIFICATION	1.3708275739594054E-5	DESIGN
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9998877479694926	WITHOUT_CLASSIFICATION	1.1225203050737975E-4	DESIGN
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999920537727918	WITHOUT_CLASSIFICATION	7.946227208194699E-6	DESIGN
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999627657178195	WITHOUT_CLASSIFICATION	3.7234282180519405E-5	DESIGN
/*  0! */	WITHOUT_CLASSIFICATION	0.9999796720440824	WITHOUT_CLASSIFICATION	2.0327955917535805E-5	DESIGN
/*  1! */	WITHOUT_CLASSIFICATION	0.9999794637491682	WITHOUT_CLASSIFICATION	2.0536250831778387E-5	DESIGN
/*  2! */	WITHOUT_CLASSIFICATION	0.9999839956943297	WITHOUT_CLASSIFICATION	1.6004305670210936E-5	DESIGN
/*  3! */	WITHOUT_CLASSIFICATION	0.9999811367819241	WITHOUT_CLASSIFICATION	1.886321807587257E-5	DESIGN
/*  4! */	WITHOUT_CLASSIFICATION	0.9999741815082568	WITHOUT_CLASSIFICATION	2.5818491743190227E-5	DESIGN
/*  5! */	WITHOUT_CLASSIFICATION	0.9999726867851622	WITHOUT_CLASSIFICATION	2.7313214837885703E-5	DESIGN
/*  6! */	WITHOUT_CLASSIFICATION	0.9999770815056975	WITHOUT_CLASSIFICATION	2.2918494302408585E-5	DESIGN
/*  7! */	WITHOUT_CLASSIFICATION	0.9999774861482167	WITHOUT_CLASSIFICATION	2.25138517833659E-5	DESIGN
/*  8! */	WITHOUT_CLASSIFICATION	0.9999785042530692	WITHOUT_CLASSIFICATION	2.1495746930796846E-5	DESIGN
/*  9! */	WITHOUT_CLASSIFICATION	0.9999722438129196	WITHOUT_CLASSIFICATION	2.7756187080417882E-5	DESIGN
/* 11! */	WITHOUT_CLASSIFICATION	0.9999788931794337	WITHOUT_CLASSIFICATION	2.1106820566296027E-5	DESIGN
/* 12! */	WITHOUT_CLASSIFICATION	0.9999838157566218	WITHOUT_CLASSIFICATION	1.6184243378282445E-5	DESIGN
/* 13! */	WITHOUT_CLASSIFICATION	0.9999810481058099	WITHOUT_CLASSIFICATION	1.8951894190023267E-5	DESIGN
/* 15! */	WITHOUT_CLASSIFICATION	0.9999775937849477	WITHOUT_CLASSIFICATION	2.2406215052375212E-5	DESIGN
/* 16! */	WITHOUT_CLASSIFICATION	0.9999800325032187	WITHOUT_CLASSIFICATION	1.9967496781378912E-5	DESIGN
/* 17! */	WITHOUT_CLASSIFICATION	0.9999774834486447	WITHOUT_CLASSIFICATION	2.2516551355297585E-5	DESIGN
/* 19! */	WITHOUT_CLASSIFICATION	0.9999766137461362	WITHOUT_CLASSIFICATION	2.3386253863854637E-5	DESIGN
/* 20! */	WITHOUT_CLASSIFICATION	0.9999853458044414	WITHOUT_CLASSIFICATION	1.465419555854987E-5	DESIGN
/* 21! */	WITHOUT_CLASSIFICATION	0.9999855483612772	WITHOUT_CLASSIFICATION	1.445163872293217E-5	DESIGN
// Static constants	WITHOUT_CLASSIFICATION	0.9999962701063447	WITHOUT_CLASSIFICATION	3.729893655194861E-6	DESIGN
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9999663753626776	WITHOUT_CLASSIFICATION	3.362463732239676E-5	DESIGN
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9999505632415965	WITHOUT_CLASSIFICATION	4.9436758403638913E-5	DESIGN
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.999999405115053	WITHOUT_CLASSIFICATION	5.94884947033759E-7	DESIGN
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9998599068880519	WITHOUT_CLASSIFICATION	1.4009311194817386E-4	DESIGN
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999902736904999	WITHOUT_CLASSIFICATION	9.72630950012521E-6	DESIGN
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999988239867819	WITHOUT_CLASSIFICATION	1.1760132180461389E-6	DESIGN
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9975896279795747	WITHOUT_CLASSIFICATION	0.002410372020425206	DESIGN
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999852779840124	WITHOUT_CLASSIFICATION	1.4722015987554836E-5	DESIGN
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999685257675835	WITHOUT_CLASSIFICATION	3.147423241644362E-5	DESIGN
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9303528555572443	DESIGN	0.06964714444275569	WITHOUT_CLASSIFICATION
// integer division	WITHOUT_CLASSIFICATION	0.9999914383012258	WITHOUT_CLASSIFICATION	8.561698774145011E-6	DESIGN
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999792422809878	WITHOUT_CLASSIFICATION	2.075771901221166E-5	DESIGN
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9997777456561672	WITHOUT_CLASSIFICATION	2.2225434383284015E-4	DESIGN
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9997777456561672	WITHOUT_CLASSIFICATION	2.2225434383284015E-4	DESIGN
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999963400741777	WITHOUT_CLASSIFICATION	3.6599258222166653E-6	DESIGN
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9979984979989331	WITHOUT_CLASSIFICATION	0.0020015020010668303	DESIGN
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999458766356306	WITHOUT_CLASSIFICATION	5.4123364369366815E-5	DESIGN
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9992906046718947	WITHOUT_CLASSIFICATION	7.093953281052604E-4	DESIGN
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9995247962684078	WITHOUT_CLASSIFICATION	4.7520373159209506E-4	DESIGN
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9987103759014849	WITHOUT_CLASSIFICATION	0.0012896240985150402	DESIGN
// sign	WITHOUT_CLASSIFICATION	0.9999583148106947	WITHOUT_CLASSIFICATION	4.168518930525743E-5	DESIGN
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.99999705009379	WITHOUT_CLASSIFICATION	2.9499062099825513E-6	DESIGN
// normalize the value	WITHOUT_CLASSIFICATION	0.9999232900062729	WITHOUT_CLASSIFICATION	7.670999372711607E-5	DESIGN
// base	WITHOUT_CLASSIFICATION	0.9999925848296376	WITHOUT_CLASSIFICATION	7.415170362439668E-6	DESIGN
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9999964341251614	WITHOUT_CLASSIFICATION	3.5658748386438797E-6	DESIGN
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999438820560147	WITHOUT_CLASSIFICATION	5.611794398529903E-5	DESIGN
// eh?!	WITHOUT_CLASSIFICATION	0.999856103879162	WITHOUT_CLASSIFICATION	1.4389612083794273E-4	DESIGN
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.999994363400455	WITHOUT_CLASSIFICATION	5.636599544926204E-6	DESIGN
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9999986592691031	WITHOUT_CLASSIFICATION	1.3407308967393098E-6	DESIGN
// the requested precision	WITHOUT_CLASSIFICATION	0.9999760969017865	WITHOUT_CLASSIFICATION	2.390309821357459E-5	DESIGN
// Proc class	WITHOUT_CLASSIFICATION	0.9999760359432399	WITHOUT_CLASSIFICATION	2.3964056760106194E-5	DESIGN
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999977998377129	WITHOUT_CLASSIFICATION	2.2001622871682654E-6	DESIGN
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999958257673135	WITHOUT_CLASSIFICATION	4.174232686472801E-6	DESIGN
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9998969180656708	WITHOUT_CLASSIFICATION	1.0308193432913592E-4	DESIGN
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999972688451402	WITHOUT_CLASSIFICATION	2.7311548598160303E-6	DESIGN
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9670107360534687	WITHOUT_CLASSIFICATION	0.03298926394653139	DESIGN
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999626114808432	WITHOUT_CLASSIFICATION	3.738851915681572E-5	DESIGN
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999843115512459	WITHOUT_CLASSIFICATION	1.5688448754130646E-5	DESIGN
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999934366750862	WITHOUT_CLASSIFICATION	6.563324913803171E-6	DESIGN
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999974000701256	WITHOUT_CLASSIFICATION	2.5999298743869425E-6	DESIGN
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999949343532766	WITHOUT_CLASSIFICATION	5.0656467233427735E-6	DESIGN
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999832338766858	WITHOUT_CLASSIFICATION	1.6766123314269947E-5	DESIGN
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999993244623028	WITHOUT_CLASSIFICATION	6.755376971778256E-7	DESIGN
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9998870358914386	WITHOUT_CLASSIFICATION	1.1296410856134795E-4	DESIGN
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9998672066609465	WITHOUT_CLASSIFICATION	1.327933390534966E-4	DESIGN
// root x is ready!	WITHOUT_CLASSIFICATION	0.999086328253983	WITHOUT_CLASSIFICATION	9.136717460170267E-4	DESIGN
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9999916861210102	WITHOUT_CLASSIFICATION	8.313878989834859E-6	DESIGN
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999426874412071	WITHOUT_CLASSIFICATION	5.731255879292133E-5	DESIGN
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.999931830066711	WITHOUT_CLASSIFICATION	6.816993328895163E-5	DESIGN
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9997097927021846	WITHOUT_CLASSIFICATION	2.902072978154039E-4	DESIGN
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999935035250502	WITHOUT_CLASSIFICATION	6.496474949742072E-6	DESIGN
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999618109427618	WITHOUT_CLASSIFICATION	3.818905723827E-5	DESIGN
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9905295863889578	WITHOUT_CLASSIFICATION	0.009470413611042103	DESIGN
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9994803068455134	WITHOUT_CLASSIFICATION	5.196931544865976E-4	DESIGN
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.7330671822787206	WITHOUT_CLASSIFICATION	0.26693281772127947	DESIGN
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999557306223673	WITHOUT_CLASSIFICATION	4.4269377632638504E-5	DESIGN
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999791060328006	WITHOUT_CLASSIFICATION	2.0893967199308082E-5	DESIGN
// verify it if it's there	WITHOUT_CLASSIFICATION	0.999939192681332	WITHOUT_CLASSIFICATION	6.0807318667931373E-5	DESIGN
// verify it if it's there	WITHOUT_CLASSIFICATION	0.999939192681332	WITHOUT_CLASSIFICATION	6.0807318667931373E-5	DESIGN
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9998486976887649	WITHOUT_CLASSIFICATION	1.5130231123504698E-4	DESIGN
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999902160063511	WITHOUT_CLASSIFICATION	9.783993648869295E-6	DESIGN
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999762673488293	WITHOUT_CLASSIFICATION	2.3732651170628682E-5	DESIGN
//consume the file name	WITHOUT_CLASSIFICATION	0.999991199901833	WITHOUT_CLASSIFICATION	8.800098166881913E-6	DESIGN
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9998649199640484	WITHOUT_CLASSIFICATION	1.350800359516666E-4	DESIGN
// try cwd first	WITHOUT_CLASSIFICATION	0.9999525710281361	WITHOUT_CLASSIFICATION	4.742897186393643E-5	DESIGN
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9993670338050658	WITHOUT_CLASSIFICATION	6.329661949342366E-4	DESIGN
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9990252255510146	WITHOUT_CLASSIFICATION	9.747744489853978E-4	DESIGN
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9999149439534109	WITHOUT_CLASSIFICATION	8.505604658919552E-5	DESIGN
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9993264827977367	WITHOUT_CLASSIFICATION	6.735172022633772E-4	DESIGN
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9993715067643856	WITHOUT_CLASSIFICATION	6.284932356145582E-4	DESIGN
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999702984539678	WITHOUT_CLASSIFICATION	2.9701546032185117E-5	DESIGN
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999114450274909	WITHOUT_CLASSIFICATION	8.855497250916431E-5	DESIGN
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999535467490449	WITHOUT_CLASSIFICATION	4.645325095502023E-5	DESIGN
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.8773991560563665	WITHOUT_CLASSIFICATION	0.12260084394363338	DESIGN
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.737080495802584	WITHOUT_CLASSIFICATION	0.26291950419741594	DESIGN
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9999229289359646	WITHOUT_CLASSIFICATION	7.70710640353655E-5	DESIGN
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.99991588699883	WITHOUT_CLASSIFICATION	8.411300116984937E-5	DESIGN
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999999808295587	WITHOUT_CLASSIFICATION	1.9170441399604043E-8	DESIGN
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999835745676774	WITHOUT_CLASSIFICATION	1.642543232261944E-5	DESIGN
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999992979239516	WITHOUT_CLASSIFICATION	7.020760483116417E-7	DESIGN
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999992979239516	WITHOUT_CLASSIFICATION	7.020760483116417E-7	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999959552336811	WITHOUT_CLASSIFICATION	4.044766318783611E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999959552336811	WITHOUT_CLASSIFICATION	4.044766318783611E-6	DESIGN
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9994446059495068	WITHOUT_CLASSIFICATION	5.553940504933321E-4	DESIGN
//  Single node on list	WITHOUT_CLASSIFICATION	0.9998301997823955	WITHOUT_CLASSIFICATION	1.6980021760446709E-4	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999994403862341	WITHOUT_CLASSIFICATION	5.596137659117684E-7	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999920433854947	WITHOUT_CLASSIFICATION	7.95661450534844E-6	DESIGN
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.999996015784929	WITHOUT_CLASSIFICATION	3.984215071048126E-6	DESIGN
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999397689111198	WITHOUT_CLASSIFICATION	6.02310888802972E-5	DESIGN
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9816822057042711	WITHOUT_CLASSIFICATION	0.01831779429572886	DESIGN
// Profile	WITHOUT_CLASSIFICATION	0.9999955441775493	WITHOUT_CLASSIFICATION	4.455822450680981E-6	DESIGN
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999903254370432	WITHOUT_CLASSIFICATION	9.674562956723507E-6	DESIGN
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999998640806016	WITHOUT_CLASSIFICATION	1.35919398482414E-7	DESIGN
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.999970335006554	WITHOUT_CLASSIFICATION	2.9664993445990666E-5	DESIGN
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999904420479667	WITHOUT_CLASSIFICATION	9.557952033335374E-6	DESIGN
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9770131233842507	WITHOUT_CLASSIFICATION	0.022986876615749274	DESIGN
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.999989375543271	WITHOUT_CLASSIFICATION	1.062445672894045E-5	DESIGN
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999706009011576	WITHOUT_CLASSIFICATION	2.9399098842325215E-5	DESIGN
// reset the state	WITHOUT_CLASSIFICATION	0.9999989571957081	WITHOUT_CLASSIFICATION	1.0428042919099918E-6	DESIGN
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9987952905182361	WITHOUT_CLASSIFICATION	0.001204709481763915	DESIGN
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999899585356835	WITHOUT_CLASSIFICATION	1.0041464316529523E-5	DESIGN
//str is frozen	WITHOUT_CLASSIFICATION	0.9990128530826928	WITHOUT_CLASSIFICATION	9.871469173071304E-4	DESIGN
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.999961933886987	WITHOUT_CLASSIFICATION	3.80661130131186E-5	DESIGN
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999871740820543	WITHOUT_CLASSIFICATION	1.2825917945691164E-5	DESIGN
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9999976612893968	WITHOUT_CLASSIFICATION	2.3387106031878717E-6	DESIGN
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999902528096782	WITHOUT_CLASSIFICATION	9.747190321869111E-6	DESIGN
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999951928569677	WITHOUT_CLASSIFICATION	4.80714303237168E-6	DESIGN
// update superclass reference	WITHOUT_CLASSIFICATION	0.9997756372943928	WITHOUT_CLASSIFICATION	2.2436270560713135E-4	DESIGN
// undo check	WITHOUT_CLASSIFICATION	0.9999799764420044	WITHOUT_CLASSIFICATION	2.002355799555893E-5	DESIGN
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.5361657267252246	DESIGN	0.46383427327477533	WITHOUT_CLASSIFICATION
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999816974518816	WITHOUT_CLASSIFICATION	1.830254811836773E-5	DESIGN
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9995003384205222	WITHOUT_CLASSIFICATION	4.996615794777129E-4	DESIGN
// use parent's marshal	WITHOUT_CLASSIFICATION	0.999983939185937	WITHOUT_CLASSIFICATION	1.6060814063116232E-5	DESIGN
// use parent's marshal	WITHOUT_CLASSIFICATION	0.999983939185937	WITHOUT_CLASSIFICATION	1.6060814063116232E-5	DESIGN
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9815149204965342	WITHOUT_CLASSIFICATION	0.018485079503465795	DESIGN
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9945841339244316	WITHOUT_CLASSIFICATION	0.005415866075568451	DESIGN
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999731635969069	WITHOUT_CLASSIFICATION	2.6836403093124572E-5	DESIGN
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999141139926124	WITHOUT_CLASSIFICATION	8.588600738759307E-5	DESIGN
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999697245648843	WITHOUT_CLASSIFICATION	3.0275435115742005E-5	DESIGN
// static initializing method	WITHOUT_CLASSIFICATION	0.997172973026402	WITHOUT_CLASSIFICATION	0.002827026973598012	DESIGN
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999976267205847	WITHOUT_CLASSIFICATION	2.3732794153327067E-6	DESIGN
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999701879744319	WITHOUT_CLASSIFICATION	2.981202556804638E-5	DESIGN
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999988568873727	WITHOUT_CLASSIFICATION	1.1431126272889501E-6	DESIGN
// indices for temp values	WITHOUT_CLASSIFICATION	0.999969465455395	WITHOUT_CLASSIFICATION	3.05345446049152E-5	DESIGN
// self // method name	WITHOUT_CLASSIFICATION	0.9999895259935486	WITHOUT_CLASSIFICATION	1.0474006451365587E-5	DESIGN
// the default allocator	WITHOUT_CLASSIFICATION	0.9999989985485447	WITHOUT_CLASSIFICATION	1.0014514553253484E-6	DESIGN
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9991592081023357	WITHOUT_CLASSIFICATION	8.407918976641735E-4	DESIGN
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.999561712837974	WITHOUT_CLASSIFICATION	4.382871620259368E-4	DESIGN
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999673382892968	WITHOUT_CLASSIFICATION	3.2661710703158065E-5	DESIGN
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999501220649243	WITHOUT_CLASSIFICATION	4.987793507566297E-5	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9990990319997446	WITHOUT_CLASSIFICATION	9.0096800025537E-4	DESIGN
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999914185766857	WITHOUT_CLASSIFICATION	8.58142331428032E-6	DESIGN
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9997775741424121	WITHOUT_CLASSIFICATION	2.2242585758800538E-4	DESIGN
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9996824866636372	WITHOUT_CLASSIFICATION	3.1751333636274696E-4	DESIGN
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.999866275105592	WITHOUT_CLASSIFICATION	1.337248944079953E-4	DESIGN
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9998831083783831	WITHOUT_CLASSIFICATION	1.1689162161691269E-4	DESIGN
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999391137916871	WITHOUT_CLASSIFICATION	6.088620831294541E-5	DESIGN
// a gotcha	WITHOUT_CLASSIFICATION	0.9999902157160592	WITHOUT_CLASSIFICATION	9.784283940788286E-6	DESIGN
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999868691074166	WITHOUT_CLASSIFICATION	1.3130892583315668E-5	DESIGN
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999922082397683	WITHOUT_CLASSIFICATION	7.79176023173183E-6	DESIGN
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9996739072742737	WITHOUT_CLASSIFICATION	3.2609272572627974E-4	DESIGN
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999750907458516	WITHOUT_CLASSIFICATION	2.4909254148457913E-5	DESIGN
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999582359968584	WITHOUT_CLASSIFICATION	4.176400314154916E-5	DESIGN
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999782709027509	WITHOUT_CLASSIFICATION	2.1729097249044024E-5	DESIGN
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9999137952651167	WITHOUT_CLASSIFICATION	8.62047348832172E-5	DESIGN
// MRI behavior:	WITHOUT_CLASSIFICATION	0.999973554595234	WITHOUT_CLASSIFICATION	2.6445404766081622E-5	DESIGN
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999677022797662	WITHOUT_CLASSIFICATION	3.229772023377088E-5	DESIGN
// provider is not available	WITHOUT_CLASSIFICATION	0.999147809677638	WITHOUT_CLASSIFICATION	8.521903223619885E-4	DESIGN
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9993212516943226	WITHOUT_CLASSIFICATION	6.787483056773987E-4	DESIGN
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9975921786140377	WITHOUT_CLASSIFICATION	0.002407821385962376	DESIGN
// RubyDigest	WITHOUT_CLASSIFICATION	0.9995450019255343	WITHOUT_CLASSIFICATION	4.549980744657163E-4	DESIGN
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9981851792764447	WITHOUT_CLASSIFICATION	0.001814820723555347	DESIGN
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999865726470624	WITHOUT_CLASSIFICATION	1.3427352937663934E-5	DESIGN
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999129515517459	WITHOUT_CLASSIFICATION	8.704844825417039E-5	DESIGN
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999353104893347	WITHOUT_CLASSIFICATION	6.468951066526388E-5	DESIGN
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999672897775224	WITHOUT_CLASSIFICATION	3.271022247756083E-5	DESIGN
// JRubyService	WITHOUT_CLASSIFICATION	0.9999610488676824	WITHOUT_CLASSIFICATION	3.895113231764747E-5	DESIGN
// while	WITHOUT_CLASSIFICATION	0.999968609436098	WITHOUT_CLASSIFICATION	3.139056390198177E-5	DESIGN
/* \OOO */	WITHOUT_CLASSIFICATION	0.9999574728793446	WITHOUT_CLASSIFICATION	4.252712065536337E-5	DESIGN
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999354077332593	WITHOUT_CLASSIFICATION	6.459226674080038E-5	DESIGN
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999900020614293	WITHOUT_CLASSIFICATION	9.997938570765427E-6	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999665750773717	WITHOUT_CLASSIFICATION	3.342492262831744E-5	DESIGN
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999960695910053	WITHOUT_CLASSIFICATION	3.930408994785865E-6	DESIGN
// silent ?	WITHOUT_CLASSIFICATION	0.999824067637634	WITHOUT_CLASSIFICATION	1.759323623660627E-4	DESIGN
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999489782613467	WITHOUT_CLASSIFICATION	5.102173865326994E-5	DESIGN
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9997135633941387	WITHOUT_CLASSIFICATION	2.8643660586122755E-4	DESIGN
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999079112654108	WITHOUT_CLASSIFICATION	9.208873458923878E-5	DESIGN
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.999915857150421	WITHOUT_CLASSIFICATION	8.414284957900863E-5	DESIGN
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999905228964675	WITHOUT_CLASSIFICATION	9.47710353247779E-6	DESIGN
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999559471334694	WITHOUT_CLASSIFICATION	4.405286653065877E-5	DESIGN
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999541338525667	WITHOUT_CLASSIFICATION	4.58661474332905E-5	DESIGN
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.999734249697985	WITHOUT_CLASSIFICATION	2.65750302015033E-4	DESIGN
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999983819097977	WITHOUT_CLASSIFICATION	1.6180902021735103E-6	DESIGN
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9950831889321197	WITHOUT_CLASSIFICATION	0.004916811067880283	DESIGN
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9999745069529434	WITHOUT_CLASSIFICATION	2.549304705656046E-5	DESIGN
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999489782613467	WITHOUT_CLASSIFICATION	5.102173865326994E-5	DESIGN
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999079112654108	WITHOUT_CLASSIFICATION	9.208873458923878E-5	DESIGN
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9997135633941387	WITHOUT_CLASSIFICATION	2.8643660586122755E-4	DESIGN
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.999891103766668	WITHOUT_CLASSIFICATION	1.0889623333199806E-4	DESIGN
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999719053892271	WITHOUT_CLASSIFICATION	2.8094610772913405E-5	DESIGN
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999924788433928	WITHOUT_CLASSIFICATION	7.521156607187787E-6	DESIGN
// inner switch	WITHOUT_CLASSIFICATION	0.9999882689315227	WITHOUT_CLASSIFICATION	1.1731068477373362E-5	DESIGN
// newInstance here	WITHOUT_CLASSIFICATION	0.9999886830212061	WITHOUT_CLASSIFICATION	1.1316978793881084E-5	DESIGN
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999908151838035	WITHOUT_CLASSIFICATION	9.184816196471751E-6	DESIGN
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.999984180774099	WITHOUT_CLASSIFICATION	1.5819225901007087E-5	DESIGN
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999924283404446	WITHOUT_CLASSIFICATION	7.571659555504194E-6	DESIGN
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999041178809579	WITHOUT_CLASSIFICATION	9.5882119042058E-5	DESIGN
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999692748902604	WITHOUT_CLASSIFICATION	3.07251097394921E-5	DESIGN
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999828017783737	WITHOUT_CLASSIFICATION	1.719822162623866E-5	DESIGN
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9994230918825255	WITHOUT_CLASSIFICATION	5.769081174743893E-4	DESIGN
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999958657925786	WITHOUT_CLASSIFICATION	4.1342074213533795E-6	DESIGN
// option_to_str	WITHOUT_CLASSIFICATION	0.9999974437896572	WITHOUT_CLASSIFICATION	2.5562103427813835E-6	DESIGN
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999881565395686	WITHOUT_CLASSIFICATION	1.1843460431418601E-5	DESIGN
// args should be before block	WITHOUT_CLASSIFICATION	0.9999539112555433	WITHOUT_CLASSIFICATION	4.608874445665316E-5	DESIGN
// args should be at end	WITHOUT_CLASSIFICATION	0.9998274062569574	WITHOUT_CLASSIFICATION	1.7259374304261777E-4	DESIGN
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999962652333947	WITHOUT_CLASSIFICATION	3.7347666052860986E-6	DESIGN
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999962652333947	WITHOUT_CLASSIFICATION	3.7347666052860986E-6	DESIGN
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999903209396672	WITHOUT_CLASSIFICATION	9.679060332780113E-6	DESIGN
// start a new populator	WITHOUT_CLASSIFICATION	0.9999984381552256	WITHOUT_CLASSIFICATION	1.5618447743644933E-6	DESIGN
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999901688075262	WITHOUT_CLASSIFICATION	9.831192473657802E-6	DESIGN
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9999851300470464	WITHOUT_CLASSIFICATION	1.4869952953608823E-5	DESIGN
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999793189313271	WITHOUT_CLASSIFICATION	2.06810686728302E-5	DESIGN
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999528815924971	WITHOUT_CLASSIFICATION	4.7118407502963555E-5	DESIGN
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9995134807091927	WITHOUT_CLASSIFICATION	4.865192908073511E-4	DESIGN
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999213210313787	WITHOUT_CLASSIFICATION	7.867896862141915E-5	DESIGN
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9993437186984909	WITHOUT_CLASSIFICATION	6.562813015091706E-4	DESIGN
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9993974773962716	WITHOUT_CLASSIFICATION	6.025226037283128E-4	DESIGN
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9970609714527906	WITHOUT_CLASSIFICATION	0.00293902854720928	DESIGN
//                }	WITHOUT_CLASSIFICATION	0.9999406095441725	WITHOUT_CLASSIFICATION	5.9390455827470745E-5	DESIGN
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9999925110070604	WITHOUT_CLASSIFICATION	7.488992939480929E-6	DESIGN
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9986220510422795	WITHOUT_CLASSIFICATION	0.0013779489577205467	DESIGN
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999003885501071	WITHOUT_CLASSIFICATION	9.961144989298785E-5	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9999937480390233	WITHOUT_CLASSIFICATION	6.251960976631935E-6	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9999913973021096	WITHOUT_CLASSIFICATION	8.602697890325203E-6	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9997662329595262	WITHOUT_CLASSIFICATION	2.337670404738911E-4	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9997662329595262	WITHOUT_CLASSIFICATION	2.337670404738911E-4	DESIGN
// colon3	WITHOUT_CLASSIFICATION	0.9999386015803342	WITHOUT_CLASSIFICATION	6.139841966581773E-5	DESIGN
// Colon3	WITHOUT_CLASSIFICATION	0.9999482851509242	WITHOUT_CLASSIFICATION	5.1714849075815814E-5	DESIGN
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999979643415781	WITHOUT_CLASSIFICATION	2.0356584218476023E-6	DESIGN
// For b.foo	WITHOUT_CLASSIFICATION	0.9999960439431398	WITHOUT_CLASSIFICATION	3.956056860238212E-6	DESIGN
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999902547238728	WITHOUT_CLASSIFICATION	9.745276127143578E-6	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9997662329595262	WITHOUT_CLASSIFICATION	2.337670404738911E-4	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9997662329595262	WITHOUT_CLASSIFICATION	2.337670404738911E-4	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999942592434263	WITHOUT_CLASSIFICATION	5.740756573657388E-6	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999942592434263	WITHOUT_CLASSIFICATION	5.740756573657388E-6	DESIGN
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9997983903145096	WITHOUT_CLASSIFICATION	2.0160968549048198E-4	DESIGN
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999953089163393	WITHOUT_CLASSIFICATION	4.691083660729874E-6	DESIGN
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999777732906572	WITHOUT_CLASSIFICATION	2.22267093428231E-5	DESIGN
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9284745437440215	WITHOUT_CLASSIFICATION	0.07152545625597849	DESIGN
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999978068519518	WITHOUT_CLASSIFICATION	2.1931480482679784E-6	DESIGN
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999978068519518	WITHOUT_CLASSIFICATION	2.1931480482679784E-6	DESIGN
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999909085081431	WITHOUT_CLASSIFICATION	9.091491856905255E-6	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999092918971613	WITHOUT_CLASSIFICATION	9.070810283876074E-5	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999975240035093	WITHOUT_CLASSIFICATION	2.4759964906512577E-6	DESIGN
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9995744153409091	WITHOUT_CLASSIFICATION	4.255846590909603E-4	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999939538810128	WITHOUT_CLASSIFICATION	6.046118987147925E-6	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999258422191295	WITHOUT_CLASSIFICATION	7.415778087041309E-5	DESIGN
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9999437681320676	WITHOUT_CLASSIFICATION	5.62318679323365E-5	DESIGN
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999476509344736	WITHOUT_CLASSIFICATION	5.234906552637209E-5	DESIGN
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9996349284553042	WITHOUT_CLASSIFICATION	3.6507154469582183E-4	DESIGN
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999534023629122	WITHOUT_CLASSIFICATION	4.659763708789901E-5	DESIGN
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9990795424463056	WITHOUT_CLASSIFICATION	9.204575536944176E-4	DESIGN
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999814246866673	WITHOUT_CLASSIFICATION	1.85753133326995E-5	DESIGN
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999367419241623	WITHOUT_CLASSIFICATION	6.325807583769384E-5	DESIGN
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999185040031481	WITHOUT_CLASSIFICATION	8.149599685200886E-5	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9999937480390233	WITHOUT_CLASSIFICATION	6.251960976631935E-6	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9997662329595262	WITHOUT_CLASSIFICATION	2.337670404738911E-4	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999942592434263	WITHOUT_CLASSIFICATION	5.740756573657388E-6	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999258422191295	WITHOUT_CLASSIFICATION	7.415778087041309E-5	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9906575844895229	WITHOUT_CLASSIFICATION	0.00934241551047706	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9906575844895229	WITHOUT_CLASSIFICATION	0.00934241551047706	DESIGN
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999999441685483	WITHOUT_CLASSIFICATION	5.5831451653750054E-8	DESIGN
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.999999928088008	WITHOUT_CLASSIFICATION	7.191199209565465E-8	DESIGN
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.999927494370671	WITHOUT_CLASSIFICATION	7.250562932893804E-5	DESIGN
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999991833735863	WITHOUT_CLASSIFICATION	8.166264136434471E-7	DESIGN
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999861708798482	WITHOUT_CLASSIFICATION	1.3829120151825373E-5	DESIGN
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9991428978375306	WITHOUT_CLASSIFICATION	8.571021624692489E-4	DESIGN
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9924829551360218	WITHOUT_CLASSIFICATION	0.007517044863978204	DESIGN
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.999475168883167	WITHOUT_CLASSIFICATION	5.248311168329708E-4	DESIGN
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999829912146241	WITHOUT_CLASSIFICATION	1.7008785375963147E-5	DESIGN
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999779613035554	WITHOUT_CLASSIFICATION	2.2038696444526366E-5	DESIGN
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9988973083441154	WITHOUT_CLASSIFICATION	0.0011026916558846461	DESIGN
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999979218964963	WITHOUT_CLASSIFICATION	2.0781035036683727E-6	DESIGN
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.999914606530855	WITHOUT_CLASSIFICATION	8.539346914502433E-5	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9999913973021096	WITHOUT_CLASSIFICATION	8.602697890325203E-6	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999942592434263	WITHOUT_CLASSIFICATION	5.740756573657388E-6	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999092918971613	WITHOUT_CLASSIFICATION	9.070810283876074E-5	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999975240035093	WITHOUT_CLASSIFICATION	2.4759964906512577E-6	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999975240035093	WITHOUT_CLASSIFICATION	2.4759964906512577E-6	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999939538810128	WITHOUT_CLASSIFICATION	6.046118987147925E-6	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999258422191295	WITHOUT_CLASSIFICATION	7.415778087041309E-5	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999258422191295	WITHOUT_CLASSIFICATION	7.415778087041309E-5	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9906575844895229	WITHOUT_CLASSIFICATION	0.00934241551047706	DESIGN
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999950933790298	WITHOUT_CLASSIFICATION	4.906620970226805E-6	DESIGN
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9999895781391144	WITHOUT_CLASSIFICATION	1.0421860885706805E-5	DESIGN
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.999975281721199	WITHOUT_CLASSIFICATION	2.4718278801040908E-5	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.993853829976292	WITHOUT_CLASSIFICATION	0.00614617002370808	DESIGN
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.984356106042804	WITHOUT_CLASSIFICATION	0.015643893957196085	DESIGN
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9999022219945819	WITHOUT_CLASSIFICATION	9.777800541820729E-5	DESIGN
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999945811846914	WITHOUT_CLASSIFICATION	5.418815308543404E-6	DESIGN
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999963834527164	WITHOUT_CLASSIFICATION	3.6165472837061702E-6	DESIGN
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.999998584078872	WITHOUT_CLASSIFICATION	1.4159211280193473E-6	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999092918971613	WITHOUT_CLASSIFICATION	9.070810283876074E-5	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999975240035093	WITHOUT_CLASSIFICATION	2.4759964906512577E-6	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999975240035093	WITHOUT_CLASSIFICATION	2.4759964906512577E-6	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999939538810128	WITHOUT_CLASSIFICATION	6.046118987147925E-6	DESIGN
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.999475168883167	WITHOUT_CLASSIFICATION	5.248311168329708E-4	DESIGN
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999779613035554	WITHOUT_CLASSIFICATION	2.2038696444526366E-5	DESIGN
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9999949452580013	WITHOUT_CLASSIFICATION	5.054741998714946E-6	DESIGN
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999947154570826	WITHOUT_CLASSIFICATION	5.2845429173613465E-6	DESIGN
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999946855633872	WITHOUT_CLASSIFICATION	5.314436612841107E-6	DESIGN
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999946855633872	WITHOUT_CLASSIFICATION	5.314436612841107E-6	DESIGN
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9996033832271594	WITHOUT_CLASSIFICATION	3.966167728406317E-4	DESIGN
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9997899120024648	WITHOUT_CLASSIFICATION	2.1008799753517458E-4	DESIGN
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.970252500750399	WITHOUT_CLASSIFICATION	0.02974749924960091	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999363746504765	WITHOUT_CLASSIFICATION	6.362534952348446E-5	DESIGN
// just rethrow	WITHOUT_CLASSIFICATION	0.9999751044961331	WITHOUT_CLASSIFICATION	2.4895503866855643E-5	DESIGN
// just rethrow	WITHOUT_CLASSIFICATION	0.9999751044961331	WITHOUT_CLASSIFICATION	2.4895503866855643E-5	DESIGN
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9998021033757979	WITHOUT_CLASSIFICATION	1.978966242020847E-4	DESIGN
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9998021033757979	WITHOUT_CLASSIFICATION	1.978966242020847E-4	DESIGN
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999315856661978	WITHOUT_CLASSIFICATION	6.841433380224265E-5	DESIGN
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999315856661978	WITHOUT_CLASSIFICATION	6.841433380224265E-5	DESIGN
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999706051180065	WITHOUT_CLASSIFICATION	2.9394881993553713E-5	DESIGN
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999994296268029	WITHOUT_CLASSIFICATION	5.703731970954664E-7	DESIGN
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9998455994661163	WITHOUT_CLASSIFICATION	1.544005338836692E-4	DESIGN
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999964518035764	WITHOUT_CLASSIFICATION	3.5481964234657224E-6	DESIGN
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999655220030073	WITHOUT_CLASSIFICATION	3.447799699265047E-5	DESIGN
// pragmas	WITHOUT_CLASSIFICATION	0.9999862628505075	WITHOUT_CLASSIFICATION	1.3737149492358333E-5	DESIGN
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9889606025709363	WITHOUT_CLASSIFICATION	0.011039397429063695	DESIGN
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999970694362467	WITHOUT_CLASSIFICATION	2.9305637533105384E-6	DESIGN
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9977033617162684	WITHOUT_CLASSIFICATION	0.002296638283731551	DESIGN
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.8768277960409486	WITHOUT_CLASSIFICATION	0.12317220395905129	DESIGN
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9999772657582494	WITHOUT_CLASSIFICATION	2.2734241750490113E-5	DESIGN
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999894565743044	WITHOUT_CLASSIFICATION	1.0543425695578028E-5	DESIGN
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9991280253866773	WITHOUT_CLASSIFICATION	8.719746133226469E-4	DESIGN
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9995583920983725	WITHOUT_CLASSIFICATION	4.4160790162740436E-4	DESIGN
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9995583920983725	WITHOUT_CLASSIFICATION	4.4160790162740436E-4	DESIGN
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9995157309721164	WITHOUT_CLASSIFICATION	4.8426902788361546E-4	DESIGN
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999397689111198	WITHOUT_CLASSIFICATION	6.02310888802972E-5	DESIGN
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9979999542151692	WITHOUT_CLASSIFICATION	0.002000045784830783	DESIGN
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999897421071702	WITHOUT_CLASSIFICATION	1.0257892829916487E-5	DESIGN
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999955547584242	WITHOUT_CLASSIFICATION	4.445241575835346E-6	DESIGN
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9997858762305816	WITHOUT_CLASSIFICATION	2.1412376941851326E-4	DESIGN
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9995810675960412	WITHOUT_CLASSIFICATION	4.1893240395897397E-4	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.999998031124769	WITHOUT_CLASSIFICATION	1.9688752309861467E-6	DESIGN
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999999903367255	WITHOUT_CLASSIFICATION	9.66327439855377E-9	DESIGN
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999999221064405	WITHOUT_CLASSIFICATION	7.789355939090054E-8	DESIGN
// compile first node only	WITHOUT_CLASSIFICATION	0.9999981717644466	WITHOUT_CLASSIFICATION	1.828235553359523E-6	DESIGN
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9989812393545913	WITHOUT_CLASSIFICATION	0.0010187606454087022	DESIGN
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999991996671674	WITHOUT_CLASSIFICATION	8.003328326255064E-7	DESIGN
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9999980225145516	WITHOUT_CLASSIFICATION	1.977485448367885E-6	DESIGN
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9923013805304739	WITHOUT_CLASSIFICATION	0.00769861946952614	DESIGN
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9999345480202686	WITHOUT_CLASSIFICATION	6.545197973134768E-5	DESIGN
// can't do it	WITHOUT_CLASSIFICATION	0.9997869039977816	WITHOUT_CLASSIFICATION	2.1309600221845065E-4	DESIGN
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999943710489846	WITHOUT_CLASSIFICATION	5.628951015379188E-6	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999929539042224	WITHOUT_CLASSIFICATION	7.046095777711859E-6	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999929539042224	WITHOUT_CLASSIFICATION	7.046095777711859E-6	DESIGN
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999997046392489	WITHOUT_CLASSIFICATION	2.9536075109868266E-7	DESIGN
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9994255664180162	WITHOUT_CLASSIFICATION	5.744335819837664E-4	DESIGN
//[]	WITHOUT_CLASSIFICATION	0.9996628989283823	WITHOUT_CLASSIFICATION	3.3710107161767487E-4	DESIGN
//[]	WITHOUT_CLASSIFICATION	0.9996628989283823	WITHOUT_CLASSIFICATION	3.3710107161767487E-4	DESIGN
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999700514964205	WITHOUT_CLASSIFICATION	2.9948503579570017E-5	DESIGN
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9998723987160238	WITHOUT_CLASSIFICATION	1.276012839761254E-4	DESIGN
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9995530229452523	WITHOUT_CLASSIFICATION	4.469770547476616E-4	DESIGN
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9996527708395845	WITHOUT_CLASSIFICATION	3.472291604155154E-4	DESIGN
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.999996374684461	WITHOUT_CLASSIFICATION	3.625315538923481E-6	DESIGN
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999949281890093	WITHOUT_CLASSIFICATION	5.071810990758003E-6	DESIGN
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999949281890093	WITHOUT_CLASSIFICATION	5.071810990758003E-6	DESIGN
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999986062509039	WITHOUT_CLASSIFICATION	1.3937490961533766E-6	DESIGN
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999990567898003	WITHOUT_CLASSIFICATION	9.43210199789004E-7	DESIGN
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999932780788341	WITHOUT_CLASSIFICATION	6.721921165895468E-6	DESIGN
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9994649234458436	WITHOUT_CLASSIFICATION	5.350765541564453E-4	DESIGN
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9994255664180162	WITHOUT_CLASSIFICATION	5.744335819837664E-4	DESIGN
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9998513427502683	WITHOUT_CLASSIFICATION	1.4865724973164718E-4	DESIGN
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999453451324357	WITHOUT_CLASSIFICATION	5.465486756424225E-5	DESIGN
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999453451324357	WITHOUT_CLASSIFICATION	5.465486756424225E-5	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999662008419166	WITHOUT_CLASSIFICATION	3.379915808343023E-5	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999981538097892	WITHOUT_CLASSIFICATION	1.8461902108400113E-6	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999981538097892	WITHOUT_CLASSIFICATION	1.8461902108400113E-6	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.999999869196787	WITHOUT_CLASSIFICATION	1.3080321295087388E-7	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.999999869196787	WITHOUT_CLASSIFICATION	1.3080321295087388E-7	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.999999869196787	WITHOUT_CLASSIFICATION	1.3080321295087388E-7	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999981538097892	WITHOUT_CLASSIFICATION	1.8461902108400113E-6	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999981538097892	WITHOUT_CLASSIFICATION	1.8461902108400113E-6	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999662008419166	WITHOUT_CLASSIFICATION	3.379915808343023E-5	DESIGN
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999631659744146	WITHOUT_CLASSIFICATION	3.6834025585448595E-5	DESIGN
// always false or nil	WITHOUT_CLASSIFICATION	0.9999866256226119	WITHOUT_CLASSIFICATION	1.3374377388183657E-5	DESIGN
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999887022381374	WITHOUT_CLASSIFICATION	1.1297761862669837E-5	DESIGN
// normal	WITHOUT_CLASSIFICATION	0.9999474290905987	WITHOUT_CLASSIFICATION	5.257090940116524E-5	DESIGN
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999999628692736	WITHOUT_CLASSIFICATION	3.7130726315508234E-8	DESIGN
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999950127494038	WITHOUT_CLASSIFICATION	4.987250596181673E-6	DESIGN
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999923221740095	WITHOUT_CLASSIFICATION	7.677825990500543E-6	DESIGN
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999974505076022	WITHOUT_CLASSIFICATION	2.5494923978303533E-6	DESIGN
// compile first node only	WITHOUT_CLASSIFICATION	0.9999981717644466	WITHOUT_CLASSIFICATION	1.828235553359523E-6	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999981538097892	WITHOUT_CLASSIFICATION	1.8461902108400113E-6	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999981538097892	WITHOUT_CLASSIFICATION	1.8461902108400113E-6	DESIGN
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999835068174475	WITHOUT_CLASSIFICATION	1.6493182552433012E-5	DESIGN
// try optz version	WITHOUT_CLASSIFICATION	0.9999996952549999	WITHOUT_CLASSIFICATION	3.0474500020577415E-7	DESIGN
// sizes must match	WITHOUT_CLASSIFICATION	0.999994396474478	WITHOUT_CLASSIFICATION	5.6035255219591745E-6	DESIGN
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999988545432198	WITHOUT_CLASSIFICATION	1.145456780233868E-6	DESIGN
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999931173545246	WITHOUT_CLASSIFICATION	6.8826454753520285E-6	DESIGN
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999989029903247	WITHOUT_CLASSIFICATION	1.0970096753354268E-6	DESIGN
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999809812181748	WITHOUT_CLASSIFICATION	1.9018781825253175E-5	DESIGN
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999999595713798	WITHOUT_CLASSIFICATION	4.0428620149716053E-8	DESIGN
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999986983783792	WITHOUT_CLASSIFICATION	1.3016216207216255E-6	DESIGN
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9940853687528843	WITHOUT_CLASSIFICATION	0.005914631247115631	DESIGN
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9999454428530912	WITHOUT_CLASSIFICATION	5.4557146908739025E-5	DESIGN
// done processing args	WITHOUT_CLASSIFICATION	0.9999556434435414	WITHOUT_CLASSIFICATION	4.435655645856698E-5	DESIGN
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999999312160782	WITHOUT_CLASSIFICATION	6.878392178199852E-8	DESIGN
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999930349347347	WITHOUT_CLASSIFICATION	6.965065265356692E-6	DESIGN
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999996302547811	WITHOUT_CLASSIFICATION	3.6974521888118034E-7	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9999831794000297	WITHOUT_CLASSIFICATION	1.6820599970282333E-5	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9999831794000297	WITHOUT_CLASSIFICATION	1.6820599970282333E-5	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9999831794000297	WITHOUT_CLASSIFICATION	1.6820599970282333E-5	DESIGN
// compile into array	WITHOUT_CLASSIFICATION	0.9999501173668792	WITHOUT_CLASSIFICATION	4.9882633120826966E-5	DESIGN
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999999596532805	WITHOUT_CLASSIFICATION	4.03467194070013E-8	DESIGN
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999922916596183	WITHOUT_CLASSIFICATION	7.708340381716719E-6	DESIGN
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999992090352503	WITHOUT_CLASSIFICATION	7.909647496157273E-7	DESIGN
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999997570858792	WITHOUT_CLASSIFICATION	2.429141207591126E-7	DESIGN
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999914697545914	WITHOUT_CLASSIFICATION	8.530245408623718E-6	DESIGN
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999928290739134	WITHOUT_CLASSIFICATION	7.170926086635029E-6	DESIGN
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.999996810013385	WITHOUT_CLASSIFICATION	3.189986614877426E-6	DESIGN
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999861677155591	WITHOUT_CLASSIFICATION	1.3832284440937586E-5	DESIGN
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999796051170678	WITHOUT_CLASSIFICATION	2.03948829322191E-5	DESIGN
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9998958665681904	WITHOUT_CLASSIFICATION	1.041334318095574E-4	DESIGN
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9998676135892961	WITHOUT_CLASSIFICATION	1.3238641070391629E-4	DESIGN
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999986062509039	WITHOUT_CLASSIFICATION	1.3937490961533766E-6	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999981538097892	WITHOUT_CLASSIFICATION	1.8461902108400113E-6	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999981538097892	WITHOUT_CLASSIFICATION	1.8461902108400113E-6	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999662008419166	WITHOUT_CLASSIFICATION	3.379915808343023E-5	DESIGN
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999950127494038	WITHOUT_CLASSIFICATION	4.987250596181673E-6	DESIGN
// try optz version	WITHOUT_CLASSIFICATION	0.9999996952549999	WITHOUT_CLASSIFICATION	3.0474500020577415E-7	DESIGN
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999988545432198	WITHOUT_CLASSIFICATION	1.145456780233868E-6	DESIGN
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999989029903247	WITHOUT_CLASSIFICATION	1.0970096753354268E-6	DESIGN
// sizes must match	WITHOUT_CLASSIFICATION	0.999994396474478	WITHOUT_CLASSIFICATION	5.6035255219591745E-6	DESIGN
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999809812181748	WITHOUT_CLASSIFICATION	1.9018781825253175E-5	DESIGN
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9940853687528843	WITHOUT_CLASSIFICATION	0.005914631247115631	DESIGN
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999986983783792	WITHOUT_CLASSIFICATION	1.3016216207216255E-6	DESIGN
// done processing args	WITHOUT_CLASSIFICATION	0.9999556434435414	WITHOUT_CLASSIFICATION	4.435655645856698E-5	DESIGN
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9999905284336015	WITHOUT_CLASSIFICATION	9.471566398474047E-6	DESIGN
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9999779756470996	WITHOUT_CLASSIFICATION	2.202435290052791E-5	DESIGN
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.999556555008011	WITHOUT_CLASSIFICATION	4.434449919890046E-4	DESIGN
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999921626537771	WITHOUT_CLASSIFICATION	7.837346222937093E-6	DESIGN
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999908815667204	WITHOUT_CLASSIFICATION	9.118433279479845E-6	DESIGN
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999787127784838	WITHOUT_CLASSIFICATION	2.128722151623582E-5	DESIGN
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9909290335284493	WITHOUT_CLASSIFICATION	0.00907096647155068	DESIGN
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9999902656400426	WITHOUT_CLASSIFICATION	9.734359957406459E-6	DESIGN
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9970658813374303	WITHOUT_CLASSIFICATION	0.0029341186625696587	DESIGN
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.999999930193975	WITHOUT_CLASSIFICATION	6.980602503464565E-8	DESIGN
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999663778288962	WITHOUT_CLASSIFICATION	3.362217110388549E-5	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999923330346566	WITHOUT_CLASSIFICATION	7.66696534338312E-6	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999982328320485	WITHOUT_CLASSIFICATION	1.7671679514595134E-6	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.8151465618680449	WITHOUT_CLASSIFICATION	0.184853438131955	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999957187709365	WITHOUT_CLASSIFICATION	4.281229063468264E-6	DESIGN
// end of variable scope	WITHOUT_CLASSIFICATION	0.9990812314192672	WITHOUT_CLASSIFICATION	9.187685807328129E-4	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999028495508929	WITHOUT_CLASSIFICATION	9.715044910704915E-5	DESIGN
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999993654512218	WITHOUT_CLASSIFICATION	6.345487782842335E-7	DESIGN
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999990497291769	WITHOUT_CLASSIFICATION	9.502708231590415E-7	DESIGN
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999346009270268	WITHOUT_CLASSIFICATION	6.539907297320707E-5	DESIGN
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9997243387002814	WITHOUT_CLASSIFICATION	2.756612997185651E-4	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999827137553067	WITHOUT_CLASSIFICATION	1.728624469337373E-5	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999827137553067	WITHOUT_CLASSIFICATION	1.728624469337373E-5	DESIGN
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999157132661591	WITHOUT_CLASSIFICATION	8.428673384092618E-5	DESIGN
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9961216435092148	WITHOUT_CLASSIFICATION	0.0038783564907852145	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999532316721594	WITHOUT_CLASSIFICATION	4.676832784044752E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999532316721594	WITHOUT_CLASSIFICATION	4.676832784044752E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999532316721594	WITHOUT_CLASSIFICATION	4.676832784044752E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9999083195971971	WITHOUT_CLASSIFICATION	9.168040280287099E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9999083195971971	WITHOUT_CLASSIFICATION	9.168040280287099E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9999083195971971	WITHOUT_CLASSIFICATION	9.168040280287099E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9999083195971971	WITHOUT_CLASSIFICATION	9.168040280287099E-5	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999185934589714	WITHOUT_CLASSIFICATION	8.140654102861056E-5	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999185934589714	WITHOUT_CLASSIFICATION	8.140654102861056E-5	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999185934589714	WITHOUT_CLASSIFICATION	8.140654102861056E-5	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999263492617456	WITHOUT_CLASSIFICATION	7.365073825434401E-5	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999263492617456	WITHOUT_CLASSIFICATION	7.365073825434401E-5	DESIGN
/*arg2*/	WITHOUT_CLASSIFICATION	0.9999330353900143	WITHOUT_CLASSIFICATION	6.696460998568897E-5	DESIGN
/*args*/	WITHOUT_CLASSIFICATION	0.9999234710020087	WITHOUT_CLASSIFICATION	7.652899799128012E-5	DESIGN
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9961216435092148	WITHOUT_CLASSIFICATION	0.0038783564907852145	DESIGN
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999965079220468	WITHOUT_CLASSIFICATION	3.49207795320538E-6	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999532316721594	WITHOUT_CLASSIFICATION	4.676832784044752E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999532316721594	WITHOUT_CLASSIFICATION	4.676832784044752E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9999083195971971	WITHOUT_CLASSIFICATION	9.168040280287099E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9999083195971971	WITHOUT_CLASSIFICATION	9.168040280287099E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9999083195971971	WITHOUT_CLASSIFICATION	9.168040280287099E-5	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999185934589714	WITHOUT_CLASSIFICATION	8.140654102861056E-5	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999185934589714	WITHOUT_CLASSIFICATION	8.140654102861056E-5	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999263492617456	WITHOUT_CLASSIFICATION	7.365073825434401E-5	DESIGN
/*args*/	WITHOUT_CLASSIFICATION	0.9999234710020087	WITHOUT_CLASSIFICATION	7.652899799128012E-5	DESIGN
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999613091657801	WITHOUT_CLASSIFICATION	3.869083421993258E-5	DESIGN
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999613091657801	WITHOUT_CLASSIFICATION	3.869083421993258E-5	DESIGN
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.999994238103544	WITHOUT_CLASSIFICATION	5.761896456047299E-6	DESIGN
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.999994238103544	WITHOUT_CLASSIFICATION	5.761896456047299E-6	DESIGN
// invoke	WITHOUT_CLASSIFICATION	0.9999200351198588	WITHOUT_CLASSIFICATION	7.99648801411311E-5	DESIGN
// invoke	WITHOUT_CLASSIFICATION	0.9999200351198588	WITHOUT_CLASSIFICATION	7.99648801411311E-5	DESIGN
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999912198327728	WITHOUT_CLASSIFICATION	8.780167227236218E-6	DESIGN
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999966405407666	WITHOUT_CLASSIFICATION	3.3594592334231196E-6	DESIGN
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999966405407666	WITHOUT_CLASSIFICATION	3.3594592334231196E-6	DESIGN
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999918141678971	WITHOUT_CLASSIFICATION	8.185832103011822E-6	DESIGN
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999918141678971	WITHOUT_CLASSIFICATION	8.185832103011822E-6	DESIGN
// eval value for assignment	WITHOUT_CLASSIFICATION	0.999996171157316	WITHOUT_CLASSIFICATION	3.828842684032454E-6	DESIGN
// call site	WITHOUT_CLASSIFICATION	0.9999154826035057	WITHOUT_CLASSIFICATION	8.451739649424979E-5	DESIGN
// call site	WITHOUT_CLASSIFICATION	0.9999154826035057	WITHOUT_CLASSIFICATION	8.451739649424979E-5	DESIGN
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9980876513379646	WITHOUT_CLASSIFICATION	0.0019123486620353973	DESIGN
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999923264174999	WITHOUT_CLASSIFICATION	7.673582500087762E-6	DESIGN
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999727892307814	WITHOUT_CLASSIFICATION	2.7210769218619758E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9999083195971971	WITHOUT_CLASSIFICATION	9.168040280287099E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9999083195971971	WITHOUT_CLASSIFICATION	9.168040280287099E-5	DESIGN
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9980876513379646	WITHOUT_CLASSIFICATION	0.0019123486620353973	DESIGN
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999981548867832	WITHOUT_CLASSIFICATION	1.845113216738766E-6	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999913419335948	WITHOUT_CLASSIFICATION	8.658066405176121E-6	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999913419335948	WITHOUT_CLASSIFICATION	8.658066405176121E-6	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999913419335948	WITHOUT_CLASSIFICATION	8.658066405176121E-6	DESIGN
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999966555451005	WITHOUT_CLASSIFICATION	3.34445489936653E-6	DESIGN
// args	WITHOUT_CLASSIFICATION	0.9999947740907577	WITHOUT_CLASSIFICATION	5.225909242309569E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999677787914756	WITHOUT_CLASSIFICATION	3.2221208524409534E-5	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999677787914756	WITHOUT_CLASSIFICATION	3.2221208524409534E-5	DESIGN
// no args, no block	WITHOUT_CLASSIFICATION	0.9999877947155221	WITHOUT_CLASSIFICATION	1.2205284477888768E-5	DESIGN
// no args, with block	WITHOUT_CLASSIFICATION	0.9999611306391963	WITHOUT_CLASSIFICATION	3.8869360803644296E-5	DESIGN
// with args, no block	WITHOUT_CLASSIFICATION	0.9999931397823977	WITHOUT_CLASSIFICATION	6.86021760233602E-6	DESIGN
// with args, with block	WITHOUT_CLASSIFICATION	0.9999885879080964	WITHOUT_CLASSIFICATION	1.1412091903583012E-5	DESIGN
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999989202896764	WITHOUT_CLASSIFICATION	1.0797103236120265E-6	DESIGN
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999902720381999	WITHOUT_CLASSIFICATION	9.727961800196519E-6	DESIGN
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999902720381999	WITHOUT_CLASSIFICATION	9.727961800196519E-6	DESIGN
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999996657001328	WITHOUT_CLASSIFICATION	3.3429986715039935E-7	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9999109026340199	WITHOUT_CLASSIFICATION	8.909736598015967E-5	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9999109026340199	WITHOUT_CLASSIFICATION	8.909736598015967E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9999083195971971	WITHOUT_CLASSIFICATION	9.168040280287099E-5	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999913419335948	WITHOUT_CLASSIFICATION	8.658066405176121E-6	DESIGN
// args	WITHOUT_CLASSIFICATION	0.9999947740907577	WITHOUT_CLASSIFICATION	5.225909242309569E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999677787914756	WITHOUT_CLASSIFICATION	3.2221208524409534E-5	DESIGN
// no args, no block	WITHOUT_CLASSIFICATION	0.9999877947155221	WITHOUT_CLASSIFICATION	1.2205284477888768E-5	DESIGN
// no args, with block	WITHOUT_CLASSIFICATION	0.9999611306391963	WITHOUT_CLASSIFICATION	3.8869360803644296E-5	DESIGN
// with args, no block	WITHOUT_CLASSIFICATION	0.9999931397823977	WITHOUT_CLASSIFICATION	6.86021760233602E-6	DESIGN
// with args, with block	WITHOUT_CLASSIFICATION	0.9999885879080964	WITHOUT_CLASSIFICATION	1.1412091903583012E-5	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9999109026340199	WITHOUT_CLASSIFICATION	8.909736598015967E-5	DESIGN
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9994888524593031	WITHOUT_CLASSIFICATION	5.111475406969976E-4	DESIGN
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999805588609435	WITHOUT_CLASSIFICATION	1.9441139056426756E-5	DESIGN
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999142812000414	WITHOUT_CLASSIFICATION	8.571879995849378E-5	DESIGN
// add name to call site list	WITHOUT_CLASSIFICATION	0.9997169884833996	WITHOUT_CLASSIFICATION	2.8301151660032627E-4	DESIGN
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999746606874332	WITHOUT_CLASSIFICATION	2.5339312566805127E-5	DESIGN
// build scope names string	WITHOUT_CLASSIFICATION	0.9999474626615629	WITHOUT_CLASSIFICATION	5.253733843711522E-5	DESIGN
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999949457915078	WITHOUT_CLASSIFICATION	5.054208492120923E-6	DESIGN
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999949457915078	WITHOUT_CLASSIFICATION	5.054208492120923E-6	DESIGN
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999190826670038	WITHOUT_CLASSIFICATION	8.091733299630779E-5	DESIGN
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999388573329995	WITHOUT_CLASSIFICATION	6.114266700051164E-5	DESIGN
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.999886748516276	WITHOUT_CLASSIFICATION	1.1325148372405986E-4	DESIGN
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999914324731497	WITHOUT_CLASSIFICATION	8.5675268503303E-6	DESIGN
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999609418234653	WITHOUT_CLASSIFICATION	3.9058176534679654E-5	DESIGN
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999609418234653	WITHOUT_CLASSIFICATION	3.9058176534679654E-5	DESIGN
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9997514848899787	WITHOUT_CLASSIFICATION	2.485151100213357E-4	DESIGN
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9998331430949685	WITHOUT_CLASSIFICATION	1.6685690503137558E-4	DESIGN
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999752299850241	WITHOUT_CLASSIFICATION	2.4770014975858866E-5	DESIGN
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999752299850241	WITHOUT_CLASSIFICATION	2.4770014975858866E-5	DESIGN
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999815147549184	WITHOUT_CLASSIFICATION	1.848524508157459E-5	DESIGN
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999952140971388	WITHOUT_CLASSIFICATION	4.7859028612573E-6	DESIGN
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999989202896764	WITHOUT_CLASSIFICATION	1.0797103236120265E-6	DESIGN
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999808461936008	WITHOUT_CLASSIFICATION	1.915380639915242E-5	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9998589099724811	WITHOUT_CLASSIFICATION	1.410900275189618E-4	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999755333311735	WITHOUT_CLASSIFICATION	2.446666882638862E-5	DESIGN
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999970877902378	WITHOUT_CLASSIFICATION	2.9122097622609237E-6	DESIGN
// load Object under value	WITHOUT_CLASSIFICATION	0.9999870161634459	WITHOUT_CLASSIFICATION	1.298383655416586E-5	DESIGN
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999948442247701	WITHOUT_CLASSIFICATION	5.155775229798948E-6	DESIGN
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999856682129615	WITHOUT_CLASSIFICATION	1.4331787038398362E-5	DESIGN
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.988898395234798	WITHOUT_CLASSIFICATION	0.011101604765201995	DESIGN
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.999798905362486	WITHOUT_CLASSIFICATION	2.0109463751394276E-4	DESIGN
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.999798905362486	WITHOUT_CLASSIFICATION	2.0109463751394276E-4	DESIGN
// brute force construction inline	WITHOUT_CLASSIFICATION	0.999989243803988	WITHOUT_CLASSIFICATION	1.0756196011933789E-5	DESIGN
// brute force construction inline	WITHOUT_CLASSIFICATION	0.999989243803988	WITHOUT_CLASSIFICATION	1.0756196011933789E-5	DESIGN
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999997022997691	WITHOUT_CLASSIFICATION	2.977002309050143E-7	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9997664546254376	WITHOUT_CLASSIFICATION	2.335453745623798E-4	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9997664546254376	WITHOUT_CLASSIFICATION	2.335453745623798E-4	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9997664546254376	WITHOUT_CLASSIFICATION	2.335453745623798E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998736353417385	WITHOUT_CLASSIFICATION	1.263646582615901E-4	DESIGN
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9998972417920579	WITHOUT_CLASSIFICATION	1.0275820794219151E-4	DESIGN
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9998972417920579	WITHOUT_CLASSIFICATION	1.0275820794219151E-4	DESIGN
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999991894688963	WITHOUT_CLASSIFICATION	8.10531103620114E-7	DESIGN
// check the condition	WITHOUT_CLASSIFICATION	0.9999576816641279	WITHOUT_CLASSIFICATION	4.2318335872003445E-5	DESIGN
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.999996911862921	WITHOUT_CLASSIFICATION	3.088137079081346E-6	DESIGN
// skip catch block	WITHOUT_CLASSIFICATION	0.9999982454068166	WITHOUT_CLASSIFICATION	1.7545931834024097E-6	DESIGN
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999634300133585	WITHOUT_CLASSIFICATION	3.656998664139495E-5	DESIGN
// next jump	WITHOUT_CLASSIFICATION	0.9999841098165234	WITHOUT_CLASSIFICATION	1.589018347652855E-5	DESIGN
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9999980026007399	WITHOUT_CLASSIFICATION	1.9973992600890126E-6	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999982328320485	WITHOUT_CLASSIFICATION	1.7671679514595134E-6	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999982328320485	WITHOUT_CLASSIFICATION	1.7671679514595134E-6	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998736353417385	WITHOUT_CLASSIFICATION	1.263646582615901E-4	DESIGN
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999991894688963	WITHOUT_CLASSIFICATION	8.10531103620114E-7	DESIGN
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999987045736644	WITHOUT_CLASSIFICATION	1.295426335647624E-6	DESIGN
// check the condition	WITHOUT_CLASSIFICATION	0.9999576816641279	WITHOUT_CLASSIFICATION	4.2318335872003445E-5	DESIGN
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.999996911862921	WITHOUT_CLASSIFICATION	3.088137079081346E-6	DESIGN
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999958408351188	WITHOUT_CLASSIFICATION	4.15916488124084E-6	DESIGN
// break jump	WITHOUT_CLASSIFICATION	0.9999912960523489	WITHOUT_CLASSIFICATION	8.703947650995237E-6	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999984418320292	WITHOUT_CLASSIFICATION	1.5581679707914136E-6	DESIGN
//[reg]	WITHOUT_CLASSIFICATION	0.9999195397700171	WITHOUT_CLASSIFICATION	8.046022998296002E-5	DESIGN
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999998158097388	WITHOUT_CLASSIFICATION	1.8419026124013819E-7	DESIGN
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9998542727864806	WITHOUT_CLASSIFICATION	1.457272135193159E-4	DESIGN
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9999796150491398	WITHOUT_CLASSIFICATION	2.0384950860252633E-5	DESIGN
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999958408351188	WITHOUT_CLASSIFICATION	4.15916488124084E-6	DESIGN
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9884324180718046	WITHOUT_CLASSIFICATION	0.011567581928195363	DESIGN
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9884324180718046	WITHOUT_CLASSIFICATION	0.011567581928195363	DESIGN
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999716856317603	WITHOUT_CLASSIFICATION	2.8314368239707106E-5	DESIGN
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999687784115	WITHOUT_CLASSIFICATION	3.1221588499911154E-5	DESIGN
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9998764935956548	WITHOUT_CLASSIFICATION	1.235064043452219E-4	DESIGN
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999083196175568	WITHOUT_CLASSIFICATION	9.168038244320763E-5	DESIGN
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999888201635133	WITHOUT_CLASSIFICATION	1.1179836486623318E-5	DESIGN
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9978202819183122	WITHOUT_CLASSIFICATION	0.002179718081687947	DESIGN
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999579329930006	WITHOUT_CLASSIFICATION	4.206700699933862E-5	DESIGN
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9917600815415567	WITHOUT_CLASSIFICATION	0.008239918458443369	DESIGN
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999893455317402	WITHOUT_CLASSIFICATION	1.0654468259834978E-5	DESIGN
// false // zero	WITHOUT_CLASSIFICATION	0.9999910404718324	WITHOUT_CLASSIFICATION	8.959528167624997E-6	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999462145174433	WITHOUT_CLASSIFICATION	5.378548255666169E-5	DESIGN
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999083196175568	WITHOUT_CLASSIFICATION	9.168038244320763E-5	DESIGN
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999888201635133	WITHOUT_CLASSIFICATION	1.1179836486623318E-5	DESIGN
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.999984970556326	WITHOUT_CLASSIFICATION	1.5029443674133727E-5	DESIGN
// push false	WITHOUT_CLASSIFICATION	0.999974437533559	WITHOUT_CLASSIFICATION	2.5562466441109197E-5	DESIGN
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9999999620091936	WITHOUT_CLASSIFICATION	3.7990806315664156E-8	DESIGN
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9999578884656025	WITHOUT_CLASSIFICATION	4.211153439753081E-5	DESIGN
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9998506666572992	WITHOUT_CLASSIFICATION	1.493333427009047E-4	DESIGN
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9999935254670825	WITHOUT_CLASSIFICATION	6.474532917519447E-6	DESIGN
//[C]	WITHOUT_CLASSIFICATION	0.9996302205275148	WITHOUT_CLASSIFICATION	3.69779472485086E-4	DESIGN
// push true	WITHOUT_CLASSIFICATION	0.9999959805987303	WITHOUT_CLASSIFICATION	4.0194012697400665E-6	DESIGN
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999706439920074	WITHOUT_CLASSIFICATION	2.935600799259011E-5	DESIGN
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9997562832575335	WITHOUT_CLASSIFICATION	2.4371674246652408E-4	DESIGN
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9999598057065814	WITHOUT_CLASSIFICATION	4.019429341858234E-5	DESIGN
//[boolean]	WITHOUT_CLASSIFICATION	0.999930892443384	WITHOUT_CLASSIFICATION	6.910755661599597E-5	DESIGN
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999489790746219	WITHOUT_CLASSIFICATION	5.102092537804256E-5	DESIGN
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9687313882328636	WITHOUT_CLASSIFICATION	0.03126861176713636	DESIGN
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.7464378499125116	DESIGN	0.2535621500874882	WITHOUT_CLASSIFICATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999879596061996	WITHOUT_CLASSIFICATION	1.2040393800387517E-5	DESIGN
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9997968970239886	WITHOUT_CLASSIFICATION	2.0310297601145463E-4	DESIGN
// static scope	WITHOUT_CLASSIFICATION	0.9998686588768265	WITHOUT_CLASSIFICATION	1.3134112317347661E-4	DESIGN
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999734967298944	WITHOUT_CLASSIFICATION	2.6503270105654233E-5	DESIGN
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999900079122632	WITHOUT_CLASSIFICATION	9.992087736749947E-6	DESIGN
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9997968970239886	WITHOUT_CLASSIFICATION	2.0310297601145463E-4	DESIGN
// static scope	WITHOUT_CLASSIFICATION	0.9998686588768265	WITHOUT_CLASSIFICATION	1.3134112317347661E-4	DESIGN
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999734967298944	WITHOUT_CLASSIFICATION	2.6503270105654233E-5	DESIGN
// finally with exception	WITHOUT_CLASSIFICATION	0.9998987878038055	WITHOUT_CLASSIFICATION	1.0121219619450157E-4	DESIGN
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9997928524929088	WITHOUT_CLASSIFICATION	2.071475070911567E-4	DESIGN
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9970220194922299	WITHOUT_CLASSIFICATION	0.0029779805077701695	DESIGN
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9999348459815173	WITHOUT_CLASSIFICATION	6.515401848275579E-5	DESIGN
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9960641705893926	WITHOUT_CLASSIFICATION	0.003935829410607408	DESIGN
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999796515499108	WITHOUT_CLASSIFICATION	2.0348450089264E-5	DESIGN
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9980777234369658	WITHOUT_CLASSIFICATION	0.0019222765630341758	DESIGN
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9997271606759155	WITHOUT_CLASSIFICATION	2.7283932408452493E-4	DESIGN
// script object	WITHOUT_CLASSIFICATION	0.9999980920674453	WITHOUT_CLASSIFICATION	1.907932554757914E-6	DESIGN
// arities	WITHOUT_CLASSIFICATION	0.9999957488163937	WITHOUT_CLASSIFICATION	4.251183606210441E-6	DESIGN
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9387503034310394	DESIGN	0.0612496965689606	WITHOUT_CLASSIFICATION
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9998619747516637	WITHOUT_CLASSIFICATION	1.380252483362088E-4	DESIGN
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9996809299527096	WITHOUT_CLASSIFICATION	3.190700472903745E-4	DESIGN
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999300798482315	WITHOUT_CLASSIFICATION	6.992015176859989E-5	DESIGN
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.999998468480695	WITHOUT_CLASSIFICATION	1.5315193050082447E-6	DESIGN
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9997246158245364	WITHOUT_CLASSIFICATION	2.753841754635543E-4	DESIGN
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999461167695466	WITHOUT_CLASSIFICATION	5.388323045340336E-5	DESIGN
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9840406509866018	WITHOUT_CLASSIFICATION	0.015959349013398145	DESIGN
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.999756225425686	WITHOUT_CLASSIFICATION	2.43774574314035E-4	DESIGN
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999997897773661	WITHOUT_CLASSIFICATION	2.1022263393767906E-7	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9996815915968774	WITHOUT_CLASSIFICATION	3.184084031224908E-4	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999656347800381	WITHOUT_CLASSIFICATION	3.4365219961862506E-5	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999656347800381	WITHOUT_CLASSIFICATION	3.4365219961862506E-5	DESIGN
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.999820869259053	WITHOUT_CLASSIFICATION	1.7913074094699197E-4	DESIGN
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.999820869259053	WITHOUT_CLASSIFICATION	1.7913074094699197E-4	DESIGN
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999971837945254	WITHOUT_CLASSIFICATION	2.8162054746100903E-6	DESIGN
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999971837945254	WITHOUT_CLASSIFICATION	2.8162054746100903E-6	DESIGN
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999994537792315	WITHOUT_CLASSIFICATION	5.462207685543703E-7	DESIGN
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999995359143417	WITHOUT_CLASSIFICATION	4.6408565823365366E-7	DESIGN
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999628746433797	WITHOUT_CLASSIFICATION	3.712535662030315E-5	DESIGN
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.999987514654057	WITHOUT_CLASSIFICATION	1.2485345943033263E-5	DESIGN
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999996334308251	WITHOUT_CLASSIFICATION	3.6656917484707874E-7	DESIGN
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9998518838892254	WITHOUT_CLASSIFICATION	1.481161107745731E-4	DESIGN
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999973728547583	WITHOUT_CLASSIFICATION	2.627145241790415E-6	DESIGN
// then optional args	WITHOUT_CLASSIFICATION	0.9999996865837499	WITHOUT_CLASSIFICATION	3.1341625015346285E-7	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999982328320485	WITHOUT_CLASSIFICATION	1.7671679514595134E-6	DESIGN
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999994537792315	WITHOUT_CLASSIFICATION	5.462207685543703E-7	DESIGN
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999995359143417	WITHOUT_CLASSIFICATION	4.6408565823365366E-7	DESIGN
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999628746433797	WITHOUT_CLASSIFICATION	3.712535662030315E-5	DESIGN
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999996334308251	WITHOUT_CLASSIFICATION	3.6656917484707874E-7	DESIGN
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9998518838892254	WITHOUT_CLASSIFICATION	1.481161107745731E-4	DESIGN
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999877591499856	WITHOUT_CLASSIFICATION	1.2240850014508165E-5	DESIGN
// finally, post args	WITHOUT_CLASSIFICATION	0.9999916231085736	WITHOUT_CLASSIFICATION	8.376891426360473E-6	DESIGN
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9995020564866313	WITHOUT_CLASSIFICATION	4.979435133687042E-4	DESIGN
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9995020564866313	WITHOUT_CLASSIFICATION	4.979435133687042E-4	DESIGN
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9976686226700893	WITHOUT_CLASSIFICATION	0.0023313773299108304	DESIGN
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999996270294965	WITHOUT_CLASSIFICATION	3.729705034795195E-7	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999549838726038	WITHOUT_CLASSIFICATION	4.501612739608927E-5	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999990528910114	WITHOUT_CLASSIFICATION	9.471089884592098E-7	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999990528910114	WITHOUT_CLASSIFICATION	9.471089884592098E-7	DESIGN
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999367289116613	WITHOUT_CLASSIFICATION	6.327108833871015E-5	DESIGN
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9994483641958377	WITHOUT_CLASSIFICATION	5.516358041622176E-4	DESIGN
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999868493498687	WITHOUT_CLASSIFICATION	1.3150650131236262E-5	DESIGN
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999903181686142	WITHOUT_CLASSIFICATION	9.681831385928823E-6	DESIGN
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.999686444389503	WITHOUT_CLASSIFICATION	3.1355561049694534E-4	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.8151465618680449	WITHOUT_CLASSIFICATION	0.184853438131955	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999957187709365	WITHOUT_CLASSIFICATION	4.281229063468264E-6	DESIGN
// end of variable scope	WITHOUT_CLASSIFICATION	0.9990812314192672	WITHOUT_CLASSIFICATION	9.187685807328129E-4	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999028495508929	WITHOUT_CLASSIFICATION	9.715044910704915E-5	DESIGN
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999346009270268	WITHOUT_CLASSIFICATION	6.539907297320707E-5	DESIGN
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9997243387002814	WITHOUT_CLASSIFICATION	2.756612997185651E-4	DESIGN
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999367289116613	WITHOUT_CLASSIFICATION	6.327108833871015E-5	DESIGN
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9994483641958377	WITHOUT_CLASSIFICATION	5.516358041622176E-4	DESIGN
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999903181686142	WITHOUT_CLASSIFICATION	9.681831385928823E-6	DESIGN
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999925081161855	WITHOUT_CLASSIFICATION	7.4918838145084325E-6	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999549838726038	WITHOUT_CLASSIFICATION	4.501612739608927E-5	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999549838726038	WITHOUT_CLASSIFICATION	4.501612739608927E-5	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999462145174433	WITHOUT_CLASSIFICATION	5.378548255666169E-5	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999462145174433	WITHOUT_CLASSIFICATION	5.378548255666169E-5	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999696259465014	WITHOUT_CLASSIFICATION	3.0374053498696214E-5	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999696259465014	WITHOUT_CLASSIFICATION	3.0374053498696214E-5	DESIGN
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999964619933571	WITHOUT_CLASSIFICATION	3.538006642865435E-6	DESIGN
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.999972418463608	WITHOUT_CLASSIFICATION	2.758153639199037E-5	DESIGN
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9999941681598292	WITHOUT_CLASSIFICATION	5.831840170795942E-6	DESIGN
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999991789361822	WITHOUT_CLASSIFICATION	8.210638178088337E-7	DESIGN
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9982893939053695	WITHOUT_CLASSIFICATION	0.0017106060946304865	DESIGN
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999967663499939	WITHOUT_CLASSIFICATION	3.233650006081108E-6	DESIGN
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9980633092176686	WITHOUT_CLASSIFICATION	0.0019366907823314132	DESIGN
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9970597358146236	WITHOUT_CLASSIFICATION	0.0029402641853764505	DESIGN
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999998400425748	WITHOUT_CLASSIFICATION	1.5995742511985666E-7	DESIGN
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999910020506413	WITHOUT_CLASSIFICATION	8.997949358732517E-6	DESIGN
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9998065519253392	WITHOUT_CLASSIFICATION	1.9344807466089892E-4	DESIGN
// verify the class	WITHOUT_CLASSIFICATION	0.9999926797249556	WITHOUT_CLASSIFICATION	7.320275044336351E-6	DESIGN
// create dir if necessary	WITHOUT_CLASSIFICATION	0.999989976087047	WITHOUT_CLASSIFICATION	1.0023912953065887E-5	DESIGN
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999999258123287	WITHOUT_CLASSIFICATION	7.418767123780069E-8	DESIGN
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999998303561632	WITHOUT_CLASSIFICATION	1.696438368181235E-7	DESIGN
// thread context	WITHOUT_CLASSIFICATION	0.9999730382237185	WITHOUT_CLASSIFICATION	2.6961776281527908E-5	DESIGN
// line number	WITHOUT_CLASSIFICATION	0.9999901538821832	WITHOUT_CLASSIFICATION	9.846117816885773E-6	DESIGN
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999991927195813	WITHOUT_CLASSIFICATION	8.072804186805625E-7	DESIGN
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999925671048727	WITHOUT_CLASSIFICATION	7.432895127299353E-6	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999957187709365	WITHOUT_CLASSIFICATION	4.281229063468264E-6	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999028495508929	WITHOUT_CLASSIFICATION	9.715044910704915E-5	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999827137553067	WITHOUT_CLASSIFICATION	1.728624469337373E-5	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999677787914756	WITHOUT_CLASSIFICATION	3.2221208524409534E-5	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999677787914756	WITHOUT_CLASSIFICATION	3.2221208524409534E-5	DESIGN
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999925081161855	WITHOUT_CLASSIFICATION	7.4918838145084325E-6	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999549838726038	WITHOUT_CLASSIFICATION	4.501612739608927E-5	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999462145174433	WITHOUT_CLASSIFICATION	5.378548255666169E-5	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999696259465014	WITHOUT_CLASSIFICATION	3.0374053498696214E-5	DESIGN
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9999850800487532	WITHOUT_CLASSIFICATION	1.4919951246847451E-5	DESIGN
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9999915975638921	WITHOUT_CLASSIFICATION	8.402436107844051E-6	DESIGN
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999874299091864	WITHOUT_CLASSIFICATION	1.2570090813611598E-5	DESIGN
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9881244095263615	WITHOUT_CLASSIFICATION	0.011875590473638595	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9944972170608617	WITHOUT_CLASSIFICATION	0.005502782939138364	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9944972170608617	WITHOUT_CLASSIFICATION	0.005502782939138364	DESIGN
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999977476868384	WITHOUT_CLASSIFICATION	2.252313161607339E-6	DESIGN
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999959681468757	WITHOUT_CLASSIFICATION	4.0318531242463605E-6	DESIGN
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999855241035372	WITHOUT_CLASSIFICATION	1.4475896462683247E-5	DESIGN
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.999996452017507	WITHOUT_CLASSIFICATION	3.5479824930226963E-6	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9999648841013624	WITHOUT_CLASSIFICATION	3.511589863754543E-5	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9999648841013624	WITHOUT_CLASSIFICATION	3.511589863754543E-5	DESIGN
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.995357175224974	WITHOUT_CLASSIFICATION	0.0046428247750259005	DESIGN
// normal closure	WITHOUT_CLASSIFICATION	0.9998978819217482	WITHOUT_CLASSIFICATION	1.0211807825176031E-4	DESIGN
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9958851521302232	WITHOUT_CLASSIFICATION	0.004114847869776801	DESIGN
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9972789077526729	WITHOUT_CLASSIFICATION	0.002721092247327129	DESIGN
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999951803188767	WITHOUT_CLASSIFICATION	4.819681123345184E-6	DESIGN
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9989629658781882	WITHOUT_CLASSIFICATION	0.0010370341218116869	DESIGN
// Ruby name 	WITHOUT_CLASSIFICATION	0.9999229324196152	WITHOUT_CLASSIFICATION	7.706758038474912E-5	DESIGN
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999388207989112	WITHOUT_CLASSIFICATION	6.117920108887658E-5	DESIGN
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9988735401452902	WITHOUT_CLASSIFICATION	0.001126459854709788	DESIGN
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.99988370788899	WITHOUT_CLASSIFICATION	1.1629211100994581E-4	DESIGN
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9970926292675528	WITHOUT_CLASSIFICATION	0.002907370732447138	DESIGN
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9968458437134909	WITHOUT_CLASSIFICATION	0.003154156286509009	DESIGN
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999945813372885	WITHOUT_CLASSIFICATION	5.418662711585132E-6	DESIGN
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9999974486471909	WITHOUT_CLASSIFICATION	2.5513528092563105E-6	DESIGN
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9997572345317222	WITHOUT_CLASSIFICATION	2.4276546827786512E-4	DESIGN
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9997189773419024	WITHOUT_CLASSIFICATION	2.8102265809758453E-4	DESIGN
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9992567971236124	WITHOUT_CLASSIFICATION	7.43202876387643E-4	DESIGN
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999926690270151	WITHOUT_CLASSIFICATION	7.33097298484617E-6	DESIGN
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999649508437606	WITHOUT_CLASSIFICATION	3.504915623943456E-5	DESIGN
// get "self"	WITHOUT_CLASSIFICATION	0.9999939621123433	WITHOUT_CLASSIFICATION	6.037887656729047E-6	DESIGN
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9999648577744713	WITHOUT_CLASSIFICATION	3.514222552873395E-5	DESIGN
// inline script	WITHOUT_CLASSIFICATION	0.9999818750968006	WITHOUT_CLASSIFICATION	1.812490319941202E-5	DESIGN
// inline script	WITHOUT_CLASSIFICATION	0.9999818750968006	WITHOUT_CLASSIFICATION	1.812490319941202E-5	DESIGN
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9997512760636754	WITHOUT_CLASSIFICATION	2.487239363246416E-4	DESIGN
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999572118134833	WITHOUT_CLASSIFICATION	4.2788186516812104E-5	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.999998031124769	WITHOUT_CLASSIFICATION	1.9688752309861467E-6	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.999998031124769	WITHOUT_CLASSIFICATION	1.9688752309861467E-6	DESIGN
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.995591403616486	WITHOUT_CLASSIFICATION	0.0044085963835140156	DESIGN
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.999852153926416	WITHOUT_CLASSIFICATION	1.4784607358386172E-4	DESIGN
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9999453990395244	WITHOUT_CLASSIFICATION	5.4600960475455414E-5	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9997807625230043	WITHOUT_CLASSIFICATION	2.192374769957562E-4	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9997807625230043	WITHOUT_CLASSIFICATION	2.192374769957562E-4	DESIGN
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9972360490294445	WITHOUT_CLASSIFICATION	0.0027639509705555806	DESIGN
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999999467609799	WITHOUT_CLASSIFICATION	5.323902017494877E-8	DESIGN
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999995588833647	WITHOUT_CLASSIFICATION	4.4111663544034023E-7	DESIGN
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999998692004832	WITHOUT_CLASSIFICATION	1.307995166879209E-7	DESIGN
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9962430607003738	WITHOUT_CLASSIFICATION	0.0037569392996261264	DESIGN
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999439702650992	WITHOUT_CLASSIFICATION	5.602973490086987E-5	DESIGN
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999691473633702	WITHOUT_CLASSIFICATION	3.085263662979356E-5	DESIGN
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999615908283879	WITHOUT_CLASSIFICATION	3.840917161215056E-5	DESIGN
// build each "when"	WITHOUT_CLASSIFICATION	0.9999943760355081	WITHOUT_CLASSIFICATION	5.623964491927316E-6	DESIGN
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9990888104328094	WITHOUT_CLASSIFICATION	9.111895671905757E-4	DESIGN
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999932317368555	WITHOUT_CLASSIFICATION	6.768263144528389E-6	DESIGN
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999726345732541	WITHOUT_CLASSIFICATION	2.736542674583387E-5	DESIGN
// close it out	WITHOUT_CLASSIFICATION	0.9998671214353462	WITHOUT_CLASSIFICATION	1.3287856465387548E-4	DESIGN
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9994998888192688	WITHOUT_CLASSIFICATION	5.0011118073121E-4	DESIGN
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9060467544374109	WITHOUT_CLASSIFICATION	0.09395324556258901	DESIGN
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999969826156736	WITHOUT_CLASSIFICATION	3.0173843263041753E-6	DESIGN
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.999997903668769	WITHOUT_CLASSIFICATION	2.0963312310617555E-6	DESIGN
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999874947708419	WITHOUT_CLASSIFICATION	1.2505229158005534E-5	DESIGN
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999062502302197	WITHOUT_CLASSIFICATION	9.374976978027686E-5	DESIGN
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999932500799202	WITHOUT_CLASSIFICATION	6.749920079712627E-6	DESIGN
// Instance method	WITHOUT_CLASSIFICATION	0.9999941712457527	WITHOUT_CLASSIFICATION	5.8287542471984595E-6	DESIGN
// Class method	WITHOUT_CLASSIFICATION	0.9999791166584372	WITHOUT_CLASSIFICATION	2.0883341562875077E-5	DESIGN
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999873478422331	WITHOUT_CLASSIFICATION	1.2652157766951753E-5	DESIGN
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999846600745708	WITHOUT_CLASSIFICATION	1.5339925429243362E-5	DESIGN
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999879166688103	WITHOUT_CLASSIFICATION	1.2083331189766536E-5	DESIGN
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999915047877165	WITHOUT_CLASSIFICATION	8.49521228346637E-6	DESIGN
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9999819344094197	WITHOUT_CLASSIFICATION	1.8065590580300935E-5	DESIGN
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999976946873406	WITHOUT_CLASSIFICATION	2.3053126594923443E-6	DESIGN
// Build args	WITHOUT_CLASSIFICATION	0.9999880368180114	WITHOUT_CLASSIFICATION	1.1963181988496549E-5	DESIGN
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999926262910824	WITHOUT_CLASSIFICATION	7.373708917673686E-6	DESIGN
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999615981015801	WITHOUT_CLASSIFICATION	3.8401898419911966E-5	DESIGN
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9994998888192688	WITHOUT_CLASSIFICATION	5.0011118073121E-4	DESIGN
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999976946873406	WITHOUT_CLASSIFICATION	2.3053126594923443E-6	DESIGN
// Build args	WITHOUT_CLASSIFICATION	0.9999880368180114	WITHOUT_CLASSIFICATION	1.1963181988496549E-5	DESIGN
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999615981015801	WITHOUT_CLASSIFICATION	3.8401898419911966E-5	DESIGN
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999605264894522	WITHOUT_CLASSIFICATION	3.947351054768923E-5	DESIGN
// Build the new module	WITHOUT_CLASSIFICATION	0.9999880988852776	WITHOUT_CLASSIFICATION	1.1901114722304757E-5	DESIGN
// Build the module body	WITHOUT_CLASSIFICATION	0.9999690697711411	WITHOUT_CLASSIFICATION	3.0930228858964864E-5	DESIGN
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999998042396352	WITHOUT_CLASSIFICATION	1.9576036473597218E-7	DESIGN
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999788643987171	WITHOUT_CLASSIFICATION	2.1135601282891384E-5	DESIGN
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999868274516596	WITHOUT_CLASSIFICATION	1.3172548340479434E-5	DESIGN
// get attr	WITHOUT_CLASSIFICATION	0.9999958019152594	WITHOUT_CLASSIFICATION	4.198084740680996E-6	DESIGN
// call operator	WITHOUT_CLASSIFICATION	0.9998881756287168	WITHOUT_CLASSIFICATION	1.1182437128326721E-4	DESIGN
// set attr	WITHOUT_CLASSIFICATION	0.9999971537056684	WITHOUT_CLASSIFICATION	2.846294331458925E-6	DESIGN
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9926341491181777	WITHOUT_CLASSIFICATION	0.007365850881822267	DESIGN
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9993203681469396	WITHOUT_CLASSIFICATION	6.796318530604056E-4	DESIGN
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9993203681469396	WITHOUT_CLASSIFICATION	6.796318530604056E-4	DESIGN
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999886638581502	WITHOUT_CLASSIFICATION	1.1336141849715821E-5	DESIGN
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999998962922866	WITHOUT_CLASSIFICATION	1.0370771336127078E-7	DESIGN
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999997075721198	WITHOUT_CLASSIFICATION	2.9242788028669383E-7	DESIGN
// Top-level script!	WITHOUT_CLASSIFICATION	0.9999101090177557	WITHOUT_CLASSIFICATION	8.989098224431547E-5	DESIGN
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999988614504206	WITHOUT_CLASSIFICATION	1.1385495793964664E-6	DESIGN
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999969916433571	WITHOUT_CLASSIFICATION	3.0083566429875476E-6	DESIGN
// What handles warnings	WITHOUT_CLASSIFICATION	0.999352373208108	WITHOUT_CLASSIFICATION	6.476267918920077E-4	DESIGN
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999736046379346	WITHOUT_CLASSIFICATION	2.6395362065489603E-5	DESIGN
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999839642401566	WITHOUT_CLASSIFICATION	1.6035759843440756E-5	DESIGN
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9995976732631531	WITHOUT_CLASSIFICATION	4.023267368469117E-4	DESIGN
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999879595142549	WITHOUT_CLASSIFICATION	1.2040485745170993E-5	DESIGN
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999762041294178	WITHOUT_CLASSIFICATION	2.37958705822628E-5	DESIGN
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999987912972584	WITHOUT_CLASSIFICATION	1.2087027415523397E-6	DESIGN
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999991962276095	WITHOUT_CLASSIFICATION	8.037723906230727E-7	DESIGN
// alu operations	WITHOUT_CLASSIFICATION	0.9999987549405404	WITHOUT_CLASSIFICATION	1.2450594597093979E-6	DESIGN
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9999695440965831	WITHOUT_CLASSIFICATION	3.0455903416794382E-5	DESIGN
// closure instructions	WITHOUT_CLASSIFICATION	0.9999816939218685	WITHOUT_CLASSIFICATION	1.830607813148769E-5	DESIGN
// eval instructions	WITHOUT_CLASSIFICATION	0.9999968259943799	WITHOUT_CLASSIFICATION	3.1740056201634092E-6	DESIGN
// def instructions	WITHOUT_CLASSIFICATION	0.9999947274914245	WITHOUT_CLASSIFICATION	5.272508575593325E-6	DESIGN
// exception instructions	WITHOUT_CLASSIFICATION	0.9999587932643073	WITHOUT_CLASSIFICATION	4.120673569286747E-5	DESIGN
// Loads	WITHOUT_CLASSIFICATION	0.9999805062311352	WITHOUT_CLASSIFICATION	1.949376886477332E-5	DESIGN
// Stores	WITHOUT_CLASSIFICATION	0.9999940193461798	WITHOUT_CLASSIFICATION	5.980653820277794E-6	DESIGN
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999987711982148	WITHOUT_CLASSIFICATION	1.228801785242336E-6	DESIGN
// others	WITHOUT_CLASSIFICATION	0.999984009121749	WITHOUT_CLASSIFICATION	1.5990878250938264E-5	DESIGN
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999557699288896	WITHOUT_CLASSIFICATION	4.423007111045816E-5	DESIGN
// optimization guards	WITHOUT_CLASSIFICATION	0.9999981838548659	WITHOUT_CLASSIFICATION	1.816145134041015E-6	DESIGN
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9997124950299819	WITHOUT_CLASSIFICATION	2.8750497001810436E-4	DESIGN
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9997874000214952	WITHOUT_CLASSIFICATION	2.1259997850482987E-4	DESIGN
// scripts	WITHOUT_CLASSIFICATION	0.9999928085789852	WITHOUT_CLASSIFICATION	7.19142101474171E-6	DESIGN
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999963334269006	WITHOUT_CLASSIFICATION	3.666573099400406E-6	DESIGN
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999887349046775	WITHOUT_CLASSIFICATION	1.1265095322422644E-5	DESIGN
// methods and closures	WITHOUT_CLASSIFICATION	0.9999951860429404	WITHOUT_CLASSIFICATION	4.813957059688209E-6	DESIGN
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999944317429689	WITHOUT_CLASSIFICATION	5.568257031130901E-6	DESIGN
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9999444026083049	WITHOUT_CLASSIFICATION	5.559739169517442E-5	DESIGN
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999495539470681	WITHOUT_CLASSIFICATION	5.044605293188094E-5	DESIGN
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9998962691746603	WITHOUT_CLASSIFICATION	1.0373082533972874E-4	DESIGN
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9998753443048225	WITHOUT_CLASSIFICATION	1.2465569517746035E-4	DESIGN
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9995949242433799	WITHOUT_CLASSIFICATION	4.0507575662006057E-4	DESIGN
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999905033125377	WITHOUT_CLASSIFICATION	9.496687462189387E-6	DESIGN
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999563299338518	WITHOUT_CLASSIFICATION	4.367006614818364E-5	DESIGN
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9998859117915113	WITHOUT_CLASSIFICATION	1.1408820848870924E-4	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.899117085934885	WITHOUT_CLASSIFICATION	0.1008829140651149	DESIGN
// Readline	WITHOUT_CLASSIFICATION	0.999969528152281	WITHOUT_CLASSIFICATION	3.0471847718953038E-5	DESIGN
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999587409278805	WITHOUT_CLASSIFICATION	4.1259072119568834E-5	DESIGN
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.999986680863215	WITHOUT_CLASSIFICATION	1.3319136785014954E-5	DESIGN
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9998242979838017	WITHOUT_CLASSIFICATION	1.7570201619834634E-4	DESIGN
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9999789079706622	WITHOUT_CLASSIFICATION	2.109202933775886E-5	DESIGN
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9997215638784552	WITHOUT_CLASSIFICATION	2.784361215447207E-4	DESIGN
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9996734022664011	WITHOUT_CLASSIFICATION	3.265977335989134E-4	DESIGN
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999886531431248	WITHOUT_CLASSIFICATION	1.134685687521389E-5	DESIGN
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9999991368979534	WITHOUT_CLASSIFICATION	8.6310204653751E-7	DESIGN
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999979555207569	WITHOUT_CLASSIFICATION	2.0444792432355E-6	DESIGN
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9933926029936929	WITHOUT_CLASSIFICATION	0.006607397006307066	DESIGN
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999883253200137	WITHOUT_CLASSIFICATION	1.1674679986326924E-5	DESIGN
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9998913655647156	WITHOUT_CLASSIFICATION	1.0863443528433088E-4	DESIGN
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999590518086039	WITHOUT_CLASSIFICATION	4.09481913961234E-5	DESIGN
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999999361809815	WITHOUT_CLASSIFICATION	6.381901857379199E-8	DESIGN
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.99999971426679	WITHOUT_CLASSIFICATION	2.857332100027406E-7	DESIGN
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9951204211344121	WITHOUT_CLASSIFICATION	0.0048795788655878825	DESIGN
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9998767124331797	WITHOUT_CLASSIFICATION	1.2328756682045304E-4	DESIGN
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9998767124331797	WITHOUT_CLASSIFICATION	1.2328756682045304E-4	DESIGN
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999837622575072	WITHOUT_CLASSIFICATION	1.6237742492890495E-5	DESIGN
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9998923883737001	WITHOUT_CLASSIFICATION	1.076116263000052E-4	DESIGN
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999938098820996	WITHOUT_CLASSIFICATION	6.19011790038155E-6	DESIGN
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.999994544686135	WITHOUT_CLASSIFICATION	5.455313864890763E-6	DESIGN
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999972285074169	WITHOUT_CLASSIFICATION	2.7714925830371495E-6	DESIGN
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9991015636825079	WITHOUT_CLASSIFICATION	8.984363174920121E-4	DESIGN
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9999027463316885	WITHOUT_CLASSIFICATION	9.725366831143061E-5	DESIGN
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.997334811972203	WITHOUT_CLASSIFICATION	0.002665188027797034	DESIGN
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999992835694698	WITHOUT_CLASSIFICATION	7.164305302042756E-7	DESIGN
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999989544574946	WITHOUT_CLASSIFICATION	1.045542505350824E-6	DESIGN
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999868883836769	WITHOUT_CLASSIFICATION	1.311161632307452E-5	DESIGN
// class or module	WITHOUT_CLASSIFICATION	0.9999886729538684	WITHOUT_CLASSIFICATION	1.132704613166805E-5	DESIGN
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9998846946509968	WITHOUT_CLASSIFICATION	1.1530534900312746E-4	DESIGN
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9999804101809608	WITHOUT_CLASSIFICATION	1.9589819039155327E-5	DESIGN
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999536612506874	WITHOUT_CLASSIFICATION	4.633874931251713E-5	DESIGN
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999955386436779	WITHOUT_CLASSIFICATION	4.461356322219968E-6	DESIGN
// IN changed!	WITHOUT_CLASSIFICATION	0.999981106131762	WITHOUT_CLASSIFICATION	1.8893868237949256E-5	DESIGN
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999950806601496	WITHOUT_CLASSIFICATION	4.919339850314983E-6	DESIGN
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999988225702291	WITHOUT_CLASSIFICATION	1.1774297708004552E-6	DESIGN
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9994909593086586	WITHOUT_CLASSIFICATION	5.090406913413802E-4	DESIGN
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999963685610825	WITHOUT_CLASSIFICATION	3.6314389173254137E-6	DESIGN
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9999903291684322	WITHOUT_CLASSIFICATION	9.67083156774539E-6	DESIGN
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9999187832255684	WITHOUT_CLASSIFICATION	8.121677443159247E-5	DESIGN
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9991995632900914	WITHOUT_CLASSIFICATION	8.004367099086991E-4	DESIGN
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999993583520304	WITHOUT_CLASSIFICATION	6.416479696668965E-7	DESIGN
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9996351103085256	WITHOUT_CLASSIFICATION	3.648896914744299E-4	DESIGN
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9999669072853747	WITHOUT_CLASSIFICATION	3.3092714625263405E-5	DESIGN
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999993471855618	WITHOUT_CLASSIFICATION	6.528144382256129E-7	DESIGN
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999971334778383	WITHOUT_CLASSIFICATION	2.866522161748299E-6	DESIGN
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.7592644779840455	DESIGN	0.2407355220159544	WITHOUT_CLASSIFICATION
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999912338959078	WITHOUT_CLASSIFICATION	8.76610409225322E-6	DESIGN
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999990603058386	WITHOUT_CLASSIFICATION	9.39694161354294E-7	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999975650564108	WITHOUT_CLASSIFICATION	2.4349435891132676E-6	DESIGN
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999887824647191	WITHOUT_CLASSIFICATION	1.1217535280927662E-5	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999975650564108	WITHOUT_CLASSIFICATION	2.4349435891132676E-6	DESIGN
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.999984408724888	WITHOUT_CLASSIFICATION	1.5591275111945998E-5	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999354193287204	WITHOUT_CLASSIFICATION	6.458067127961174E-5	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999354193287204	WITHOUT_CLASSIFICATION	6.458067127961174E-5	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999354193287204	WITHOUT_CLASSIFICATION	6.458067127961174E-5	DESIGN
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999851897762991	WITHOUT_CLASSIFICATION	1.4810223700830907E-5	DESIGN
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999851897762991	WITHOUT_CLASSIFICATION	1.4810223700830907E-5	DESIGN
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9943544232762395	WITHOUT_CLASSIFICATION	0.0056455767237606445	DESIGN
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.999985203830353	WITHOUT_CLASSIFICATION	1.4796169646948355E-5	DESIGN
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9984956687673862	WITHOUT_CLASSIFICATION	0.0015043312326138644	DESIGN
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9976605178330405	WITHOUT_CLASSIFICATION	0.002339482166959519	DESIGN
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999426129093035	WITHOUT_CLASSIFICATION	5.7387090696418635E-5	DESIGN
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999508741577567	WITHOUT_CLASSIFICATION	4.91258422433359E-5	DESIGN
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999972503559604	WITHOUT_CLASSIFICATION	2.74964403952924E-6	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.9999895196549758	WITHOUT_CLASSIFICATION	1.0480345024145823E-5	DESIGN
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9978884346297009	WITHOUT_CLASSIFICATION	0.0021115653702992268	DESIGN
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999977135883618	WITHOUT_CLASSIFICATION	2.2864116382758557E-6	DESIGN
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999952111340275	WITHOUT_CLASSIFICATION	4.788865972587996E-6	DESIGN
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999863148584451	WITHOUT_CLASSIFICATION	1.3685141554913394E-5	DESIGN
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999938794325656	WITHOUT_CLASSIFICATION	6.120567434405987E-6	DESIGN
// root-level logic	WITHOUT_CLASSIFICATION	0.9999810688597763	WITHOUT_CLASSIFICATION	1.893114022372527E-5	DESIGN
// root-level methods	WITHOUT_CLASSIFICATION	0.9999586040223614	WITHOUT_CLASSIFICATION	4.1395977638698226E-5	DESIGN
// root-level classes	WITHOUT_CLASSIFICATION	0.9999498013569761	WITHOUT_CLASSIFICATION	5.019864302399359E-5	DESIGN
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.999797549297387	WITHOUT_CLASSIFICATION	2.024507026130344E-4	DESIGN
// load receiver	WITHOUT_CLASSIFICATION	0.9999929374763963	WITHOUT_CLASSIFICATION	7.062523603719235E-6	DESIGN
// load receiver	WITHOUT_CLASSIFICATION	0.9999929374763963	WITHOUT_CLASSIFICATION	7.062523603719235E-6	DESIGN
// receiver	WITHOUT_CLASSIFICATION	0.9999937607953103	WITHOUT_CLASSIFICATION	6.239204689650125E-6	DESIGN
// load arguments	WITHOUT_CLASSIFICATION	0.9999808863931339	WITHOUT_CLASSIFICATION	1.9113606866143622E-5	DESIGN
// load arguments	WITHOUT_CLASSIFICATION	0.9999808863931339	WITHOUT_CLASSIFICATION	1.9113606866143622E-5	DESIGN
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.999295002492071	WITHOUT_CLASSIFICATION	7.049975079289713E-4	DESIGN
// Object[] args	WITHOUT_CLASSIFICATION	0.999999491167635	WITHOUT_CLASSIFICATION	5.088323650252892E-7	DESIGN
// load handle	WITHOUT_CLASSIFICATION	0.9999101910202762	WITHOUT_CLASSIFICATION	8.980897972376707E-5	DESIGN
// args array	WITHOUT_CLASSIFICATION	0.9999930814093158	WITHOUT_CLASSIFICATION	6.918590684207486E-6	DESIGN
// i'th argument	WITHOUT_CLASSIFICATION	0.999986332694056	WITHOUT_CLASSIFICATION	1.3667305943909688E-5	DESIGN
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999986165208764	WITHOUT_CLASSIFICATION	1.3834791235747296E-6	DESIGN
// Object arg0	WITHOUT_CLASSIFICATION	0.9999992526790484	WITHOUT_CLASSIFICATION	7.473209515693506E-7	DESIGN
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999908832337878	WITHOUT_CLASSIFICATION	9.116766212197421E-6	DESIGN
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999967665998338	WITHOUT_CLASSIFICATION	3.2334001661157443E-6	DESIGN
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9992761062367692	WITHOUT_CLASSIFICATION	7.238937632308247E-4	DESIGN
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9993095630036457	WITHOUT_CLASSIFICATION	6.904369963543171E-4	DESIGN
// at end	WITHOUT_CLASSIFICATION	0.9999765575045904	WITHOUT_CLASSIFICATION	2.34424954095937E-5	DESIGN
// undo check	WITHOUT_CLASSIFICATION	0.9999799764420044	WITHOUT_CLASSIFICATION	2.002355799555893E-5	DESIGN
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9991086834884746	WITHOUT_CLASSIFICATION	8.913165115254349E-4	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.9999895196549758	WITHOUT_CLASSIFICATION	1.0480345024145823E-5	DESIGN
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9996058461768729	WITHOUT_CLASSIFICATION	3.941538231271134E-4	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999779206730968	WITHOUT_CLASSIFICATION	2.2079326903251833E-5	DESIGN
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999925300668802	WITHOUT_CLASSIFICATION	7.469933119891924E-6	DESIGN
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999925300668802	WITHOUT_CLASSIFICATION	7.469933119891924E-6	DESIGN
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9923089669609146	WITHOUT_CLASSIFICATION	0.007691033039085322	DESIGN
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.999536018622852	WITHOUT_CLASSIFICATION	4.639813771479231E-4	DESIGN
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9996700851447999	WITHOUT_CLASSIFICATION	3.299148552001294E-4	DESIGN
// restore position	WITHOUT_CLASSIFICATION	0.9999869685989676	WITHOUT_CLASSIFICATION	1.3031401032370351E-5	DESIGN
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999818412650162	WITHOUT_CLASSIFICATION	1.81587349838572E-5	DESIGN
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999875831484809	WITHOUT_CLASSIFICATION	1.2416851519064088E-5	DESIGN
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999961045320414	WITHOUT_CLASSIFICATION	3.895467958646303E-6	DESIGN
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9999526509737822	WITHOUT_CLASSIFICATION	4.734902621777479E-5	DESIGN
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.8935223580718462	WITHOUT_CLASSIFICATION	0.10647764192815379	DESIGN
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9980891668652355	WITHOUT_CLASSIFICATION	0.0019108331347644357	DESIGN
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9999266394806243	WITHOUT_CLASSIFICATION	7.336051937563643E-5	DESIGN
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9979210556343262	WITHOUT_CLASSIFICATION	0.0020789443656738173	DESIGN
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9997898535618174	WITHOUT_CLASSIFICATION	2.1014643818262541E-4	DESIGN
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999975285831573	WITHOUT_CLASSIFICATION	2.4714168426400516E-6	DESIGN
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9997481418398662	WITHOUT_CLASSIFICATION	2.5185816013383657E-4	DESIGN
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.6159048148808092	DESIGN	0.38409518511919083	WITHOUT_CLASSIFICATION
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9996305037915897	WITHOUT_CLASSIFICATION	3.6949620841032543E-4	DESIGN
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9998804601985062	WITHOUT_CLASSIFICATION	1.1953980149370418E-4	DESIGN
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999292278543843	WITHOUT_CLASSIFICATION	7.077214561567137E-5	DESIGN
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999962477480104	WITHOUT_CLASSIFICATION	3.752251989598114E-6	DESIGN
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999973960240258	WITHOUT_CLASSIFICATION	2.6039759742449495E-6	DESIGN
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999955701606028	WITHOUT_CLASSIFICATION	4.429839397095362E-6	DESIGN
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999065493943509	WITHOUT_CLASSIFICATION	9.345060564908837E-5	DESIGN
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9989525727399937	WITHOUT_CLASSIFICATION	0.001047427260006283	DESIGN
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999931076394613	WITHOUT_CLASSIFICATION	6.89236053878141E-6	DESIGN
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999695567717563	WITHOUT_CLASSIFICATION	3.04432282437621E-5	DESIGN
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9999993105945634	WITHOUT_CLASSIFICATION	6.894054366112603E-7	DESIGN
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999999729620441	WITHOUT_CLASSIFICATION	2.70379558823533E-8	DESIGN
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999612198006385	WITHOUT_CLASSIFICATION	3.8780199361539536E-5	DESIGN
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999977702873696	WITHOUT_CLASSIFICATION	2.2297126304964514E-6	DESIGN
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9899057671334108	WITHOUT_CLASSIFICATION	0.010094232866589151	DESIGN
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9997535812384176	WITHOUT_CLASSIFICATION	2.464187615824262E-4	DESIGN
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9993084448184354	WITHOUT_CLASSIFICATION	6.915551815645112E-4	DESIGN
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.999684252388471	WITHOUT_CLASSIFICATION	3.1574761152905397E-4	DESIGN
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.999786949107383	WITHOUT_CLASSIFICATION	2.130508926170961E-4	DESIGN
// $blah	WITHOUT_CLASSIFICATION	0.9999547245697468	WITHOUT_CLASSIFICATION	4.527543025309469E-5	DESIGN
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999999729620441	WITHOUT_CLASSIFICATION	2.70379558823533E-8	DESIGN
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999924631850944	WITHOUT_CLASSIFICATION	7.536814905623982E-6	DESIGN
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.999786949107383	WITHOUT_CLASSIFICATION	2.130508926170961E-4	DESIGN
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9981296541708089	WITHOUT_CLASSIFICATION	0.0018703458291911166	DESIGN
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999983473216597	WITHOUT_CLASSIFICATION	1.6526783402851584E-6	DESIGN
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999997347240794	WITHOUT_CLASSIFICATION	2.652759206097332E-7	DESIGN
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.999970737856048	WITHOUT_CLASSIFICATION	2.926214395206788E-5	DESIGN
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9987278804985775	WITHOUT_CLASSIFICATION	0.0012721195014224966	DESIGN
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9995383084438534	WITHOUT_CLASSIFICATION	4.616915561466963E-4	DESIGN
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9995383084438534	WITHOUT_CLASSIFICATION	4.616915561466963E-4	DESIGN
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9998998574969151	WITHOUT_CLASSIFICATION	1.0014250308488152E-4	DESIGN
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999783935391352	WITHOUT_CLASSIFICATION	2.160646086485366E-5	DESIGN
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.999988185239369	WITHOUT_CLASSIFICATION	1.1814760630976242E-5	DESIGN
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.999988185239369	WITHOUT_CLASSIFICATION	1.1814760630976242E-5	DESIGN
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9998606416129471	WITHOUT_CLASSIFICATION	1.3935838705296812E-4	DESIGN
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9998424038313509	WITHOUT_CLASSIFICATION	1.5759616864903224E-4	DESIGN
//AF_INET	WITHOUT_CLASSIFICATION	0.9994989674850397	WITHOUT_CLASSIFICATION	5.010325149603024E-4	DESIGN
//AF_INET	WITHOUT_CLASSIFICATION	0.9994989674850397	WITHOUT_CLASSIFICATION	5.010325149603024E-4	DESIGN
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999734688301942	WITHOUT_CLASSIFICATION	2.6531169805774107E-5	DESIGN
// line 321	WITHOUT_CLASSIFICATION	0.9999866573710017	WITHOUT_CLASSIFICATION	1.334262899822375E-5	DESIGN
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999953555713283	WITHOUT_CLASSIFICATION	4.6444286716011514E-6	DESIGN
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999504369784719	WITHOUT_CLASSIFICATION	4.9563021528171254E-5	DESIGN
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.98991036842118	WITHOUT_CLASSIFICATION	0.010089631578820021	DESIGN
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.999990264721711	WITHOUT_CLASSIFICATION	9.735278288934542E-6	DESIGN
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9999994794044449	WITHOUT_CLASSIFICATION	5.205955551531712E-7	DESIGN
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9993192802465678	WITHOUT_CLASSIFICATION	6.807197534320898E-4	DESIGN
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9999620100933274	WITHOUT_CLASSIFICATION	3.7989906672633854E-5	DESIGN
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9998409073281875	WITHOUT_CLASSIFICATION	1.5909267181257055E-4	DESIGN
// host and port given	WITHOUT_CLASSIFICATION	0.9999881642554902	WITHOUT_CLASSIFICATION	1.1835744509834435E-5	DESIGN
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9999117334138012	WITHOUT_CLASSIFICATION	8.826658619871623E-5	DESIGN
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999995555930101	WITHOUT_CLASSIFICATION	4.444069898200094E-7	DESIGN
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999718062965625	WITHOUT_CLASSIFICATION	2.8193703437482E-5	DESIGN
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999679149819175	WITHOUT_CLASSIFICATION	3.208501808251119E-5	DESIGN
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999926914665657	WITHOUT_CLASSIFICATION	7.308533434233943E-6	DESIGN
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999964572612706	WITHOUT_CLASSIFICATION	3.542738729331559E-6	DESIGN
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999549521519814	WITHOUT_CLASSIFICATION	4.5047848018604195E-5	DESIGN
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.999878646433151	WITHOUT_CLASSIFICATION	1.2135356684887435E-4	DESIGN
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9999665545656736	WITHOUT_CLASSIFICATION	3.344543432646521E-5	DESIGN
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999659655607789	WITHOUT_CLASSIFICATION	3.403443922111039E-5	DESIGN
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999976101884529	WITHOUT_CLASSIFICATION	2.3898115471081526E-6	DESIGN
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.999891564556493	WITHOUT_CLASSIFICATION	1.0843544350711276E-4	DESIGN
// AF_INET	WITHOUT_CLASSIFICATION	0.9999525558419552	WITHOUT_CLASSIFICATION	4.744415804486936E-5	DESIGN
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.999977912955491	WITHOUT_CLASSIFICATION	2.208704450901956E-5	DESIGN
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9999622099914754	WITHOUT_CLASSIFICATION	3.779000852461465E-5	DESIGN
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9998982912922495	WITHOUT_CLASSIFICATION	1.0170870775058615E-4	DESIGN
// line 323	WITHOUT_CLASSIFICATION	0.9999818586834265	WITHOUT_CLASSIFICATION	1.814131657344765E-5	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9986545920840608	WITHOUT_CLASSIFICATION	0.0013454079159391963	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9986545920840608	WITHOUT_CLASSIFICATION	0.0013454079159391963	DESIGN
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9720475237549382	WITHOUT_CLASSIFICATION	0.0279524762450618	DESIGN
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999145304381639	WITHOUT_CLASSIFICATION	8.546956183597553E-5	DESIGN
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9999937604941626	WITHOUT_CLASSIFICATION	6.239505837495408E-6	DESIGN
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9999789220600864	WITHOUT_CLASSIFICATION	2.1077939913645055E-5	DESIGN
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.999320286650577	WITHOUT_CLASSIFICATION	6.797133494229289E-4	DESIGN
// RubySocket	WITHOUT_CLASSIFICATION	0.9999599940069711	WITHOUT_CLASSIFICATION	4.000599302889639E-5	DESIGN
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9996929148322108	WITHOUT_CLASSIFICATION	3.0708516778918247E-4	DESIGN
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999522286069686	WITHOUT_CLASSIFICATION	4.777139303146779E-5	DESIGN
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999418519168115	WITHOUT_CLASSIFICATION	5.8148083188566515E-5	DESIGN
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999761718126813	WITHOUT_CLASSIFICATION	2.382818731880782E-5	DESIGN
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999998476087215	WITHOUT_CLASSIFICATION	1.5239127853915082E-7	DESIGN
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9993843954439954	WITHOUT_CLASSIFICATION	6.156045560046244E-4	DESIGN
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9989735404879087	WITHOUT_CLASSIFICATION	0.0010264595120913498	DESIGN
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9988770696197732	WITHOUT_CLASSIFICATION	0.0011229303802268427	DESIGN
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9997117527202667	WITHOUT_CLASSIFICATION	2.882472797333738E-4	DESIGN
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9996407122224487	WITHOUT_CLASSIFICATION	3.592877775514076E-4	DESIGN
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9987563379555895	WITHOUT_CLASSIFICATION	0.0012436620444104523	DESIGN
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9942680770704997	WITHOUT_CLASSIFICATION	0.005731922929500311	DESIGN
// be dead	WITHOUT_CLASSIFICATION	0.9996545288175291	WITHOUT_CLASSIFICATION	3.4547118247088327E-4	DESIGN
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9999945623239412	WITHOUT_CLASSIFICATION	5.437676058838586E-6	DESIGN
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9994906011730162	WITHOUT_CLASSIFICATION	5.093988269838219E-4	DESIGN
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.999934925461183	WITHOUT_CLASSIFICATION	6.507453881696809E-5	DESIGN
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9998800971159196	WITHOUT_CLASSIFICATION	1.1990288408036543E-4	DESIGN
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999963799657657	WITHOUT_CLASSIFICATION	3.6200342342742713E-6	DESIGN
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999987358132724	WITHOUT_CLASSIFICATION	1.2641867276566321E-6	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9996744241216723	WITHOUT_CLASSIFICATION	3.255758783276341E-4	DESIGN
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9999672452811554	WITHOUT_CLASSIFICATION	3.275471884458974E-5	DESIGN
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9992644968288183	WITHOUT_CLASSIFICATION	7.355031711816193E-4	DESIGN
// main body	WITHOUT_CLASSIFICATION	0.9999199805819121	WITHOUT_CLASSIFICATION	8.001941808791334E-5	DESIGN
// return jump handling	WITHOUT_CLASSIFICATION	0.9999484686685627	WITHOUT_CLASSIFICATION	5.153133143726205E-5	DESIGN
// finally	WITHOUT_CLASSIFICATION	0.9999344452092888	WITHOUT_CLASSIFICATION	6.555479071131846E-5	DESIGN
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999770790558116	WITHOUT_CLASSIFICATION	2.292094418848481E-5	DESIGN
// redo jump handling	WITHOUT_CLASSIFICATION	0.9999249584304039	WITHOUT_CLASSIFICATION	7.50415695961432E-5	DESIGN
// clear the redo	WITHOUT_CLASSIFICATION	0.9999692367570644	WITHOUT_CLASSIFICATION	3.0763242935588025E-5	DESIGN
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999550806539311	WITHOUT_CLASSIFICATION	4.491934606877472E-5	DESIGN
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9999030323785697	WITHOUT_CLASSIFICATION	9.696762143019288E-5	DESIGN
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999147795629031	WITHOUT_CLASSIFICATION	8.522043709690477E-5	DESIGN
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9972125988523154	WITHOUT_CLASSIFICATION	0.0027874011476846476	DESIGN
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999999929549681	WITHOUT_CLASSIFICATION	7.045031999236371E-9	DESIGN
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9999996130728717	WITHOUT_CLASSIFICATION	3.869271282674489E-7	DESIGN
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9999968911815403	WITHOUT_CLASSIFICATION	3.108818459707509E-6	DESIGN
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.999840281171893	WITHOUT_CLASSIFICATION	1.5971882810689945E-4	DESIGN
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999004786304009	WITHOUT_CLASSIFICATION	9.952136959922217E-5	DESIGN
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999004786304009	WITHOUT_CLASSIFICATION	9.952136959922217E-5	DESIGN
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9998784645506116	WITHOUT_CLASSIFICATION	1.2153544938846257E-4	DESIGN
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9998998804931569	WITHOUT_CLASSIFICATION	1.0011950684308404E-4	DESIGN
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9999838812548429	WITHOUT_CLASSIFICATION	1.6118745157110322E-5	DESIGN
// return	WITHOUT_CLASSIFICATION	0.9999788674127507	WITHOUT_CLASSIFICATION	2.1132587249354898E-5	DESIGN
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.999756225425686	WITHOUT_CLASSIFICATION	2.43774574314035E-4	DESIGN
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999997897773661	WITHOUT_CLASSIFICATION	2.1022263393767906E-7	DESIGN
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9997060127320849	WITHOUT_CLASSIFICATION	2.9398726791509837E-4	DESIGN
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999993833404135	WITHOUT_CLASSIFICATION	6.166595864321015E-7	DESIGN
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.999994959704386	WITHOUT_CLASSIFICATION	5.040295613977465E-6	DESIGN
// tc	WITHOUT_CLASSIFICATION	0.9999724559225488	WITHOUT_CLASSIFICATION	2.7544077451299022E-5	DESIGN
// self // name	WITHOUT_CLASSIFICATION	0.9999922202845558	WITHOUT_CLASSIFICATION	7.779715444158923E-6	DESIGN
// no args	WITHOUT_CLASSIFICATION	0.9999847816107187	WITHOUT_CLASSIFICATION	1.5218389281231855E-5	DESIGN
// variable args with block	WITHOUT_CLASSIFICATION	0.9999943150565579	WITHOUT_CLASSIFICATION	5.684943442177911E-6	DESIGN
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999941061932771	WITHOUT_CLASSIFICATION	5.893806722898415E-6	DESIGN
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999510333277454	WITHOUT_CLASSIFICATION	4.896667225463807E-5	DESIGN
// one arg with block	WITHOUT_CLASSIFICATION	0.9999972810313765	WITHOUT_CLASSIFICATION	2.7189686235259934E-6	DESIGN
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999907305491584	WITHOUT_CLASSIFICATION	9.269450841551568E-6	DESIGN
// two args with block	WITHOUT_CLASSIFICATION	0.9999885861196255	WITHOUT_CLASSIFICATION	1.1413880374421215E-5	DESIGN
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999383711639512	WITHOUT_CLASSIFICATION	6.162883604875287E-5	DESIGN
// three args with block	WITHOUT_CLASSIFICATION	0.9999970463442494	WITHOUT_CLASSIFICATION	2.9536557507299548E-6	DESIGN
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999880234830569	WITHOUT_CLASSIFICATION	1.1976516942997628E-5	DESIGN
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999837842204972	WITHOUT_CLASSIFICATION	1.621577950274171E-5	DESIGN
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9999962988966593	WITHOUT_CLASSIFICATION	3.701103340770935E-6	DESIGN
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9999953140567618	WITHOUT_CLASSIFICATION	4.685943238142138E-6	DESIGN
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999314032083693	WITHOUT_CLASSIFICATION	6.859679163075919E-5	DESIGN
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9994603107748778	WITHOUT_CLASSIFICATION	5.396892251220968E-4	DESIGN
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9998787921805271	WITHOUT_CLASSIFICATION	1.2120781947284297E-4	DESIGN
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999882745417625	WITHOUT_CLASSIFICATION	1.1725458237538167E-5	DESIGN
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999981779756644	WITHOUT_CLASSIFICATION	1.822024335650408E-6	DESIGN
// static invocation	WITHOUT_CLASSIFICATION	0.9999648328623478	WITHOUT_CLASSIFICATION	3.516713765215051E-5	DESIGN
// virtual invocation	WITHOUT_CLASSIFICATION	0.999966594685828	WITHOUT_CLASSIFICATION	3.3405314172018976E-5	DESIGN
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9995729198265139	WITHOUT_CLASSIFICATION	4.27080173486122E-4	DESIGN
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999517155789773	WITHOUT_CLASSIFICATION	4.828442102272372E-5	DESIGN
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9999971630610123	WITHOUT_CLASSIFICATION	2.836938987617227E-6	DESIGN
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9972125988523154	WITHOUT_CLASSIFICATION	0.0027874011476846476	DESIGN
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9999461980871738	WITHOUT_CLASSIFICATION	5.380191282614132E-5	DESIGN
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999923246834433	WITHOUT_CLASSIFICATION	7.67531655669119E-6	DESIGN
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999923246834433	WITHOUT_CLASSIFICATION	7.67531655669119E-6	DESIGN
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.969095394098317	WITHOUT_CLASSIFICATION	0.03090460590168288	DESIGN
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.816859773404506	WITHOUT_CLASSIFICATION	0.18314022659549403	DESIGN
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999646696613287	WITHOUT_CLASSIFICATION	3.533033867126941E-5	DESIGN
// never reached	WITHOUT_CLASSIFICATION	0.9999849589015668	WITHOUT_CLASSIFICATION	1.5041098433252787E-5	DESIGN
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9999938002089199	WITHOUT_CLASSIFICATION	6.199791080043015E-6	DESIGN
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9999950617769449	WITHOUT_CLASSIFICATION	4.938223055156465E-6	DESIGN
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.999999130868544	WITHOUT_CLASSIFICATION	8.691314560917428E-7	DESIGN
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9999935742496433	WITHOUT_CLASSIFICATION	6.425750356690873E-6	DESIGN
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9999905330495016	WITHOUT_CLASSIFICATION	9.46695049843286E-6	DESIGN
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9999983715604243	WITHOUT_CLASSIFICATION	1.6284395757364126E-6	DESIGN
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9999876813629364	WITHOUT_CLASSIFICATION	1.2318637063659668E-5	DESIGN
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9999874966207409	WITHOUT_CLASSIFICATION	1.2503379259030636E-5	DESIGN
// promise to implement N	WITHOUT_CLASSIFICATION	0.9999591274748642	WITHOUT_CLASSIFICATION	4.087252513591624E-5	DESIGN
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9999917790316358	WITHOUT_CLASSIFICATION	8.22096836420338E-6	DESIGN
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9992274486057561	WITHOUT_CLASSIFICATION	7.72551394243918E-4	DESIGN
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9529192661562292	WITHOUT_CLASSIFICATION	0.04708073384377063	DESIGN
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9999633910817686	WITHOUT_CLASSIFICATION	3.660891823135845E-5	DESIGN
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9999862309419232	WITHOUT_CLASSIFICATION	1.376905807686918E-5	DESIGN
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9999752259414265	WITHOUT_CLASSIFICATION	2.4774058573478597E-5	DESIGN
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9999957384831829	WITHOUT_CLASSIFICATION	4.261516817057061E-6	DESIGN
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9999437337400141	WITHOUT_CLASSIFICATION	5.6266259985928375E-5	DESIGN
// promise to implement three	WITHOUT_CLASSIFICATION	0.9999339151472673	WITHOUT_CLASSIFICATION	6.608485273269279E-5	DESIGN
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999994943370227	WITHOUT_CLASSIFICATION	5.056629771561564E-7	DESIGN
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.999995046263004	WITHOUT_CLASSIFICATION	4.95373699614819E-6	DESIGN
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999999371352667	WITHOUT_CLASSIFICATION	6.28647333236079E-8	DESIGN
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999963592270043	WITHOUT_CLASSIFICATION	3.640772995601574E-6	DESIGN
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999997678127331	WITHOUT_CLASSIFICATION	2.3218726691177292E-7	DESIGN
// create constructor	WITHOUT_CLASSIFICATION	0.9999769657968806	WITHOUT_CLASSIFICATION	2.303420311946353E-5	DESIGN
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999960405411139	WITHOUT_CLASSIFICATION	3.959458886075078E-6	DESIGN
// end constructor	WITHOUT_CLASSIFICATION	0.9999665170366437	WITHOUT_CLASSIFICATION	3.348296335623174E-5	DESIGN
// start setup method	WITHOUT_CLASSIFICATION	0.9999858384729458	WITHOUT_CLASSIFICATION	1.4161527054177373E-5	DESIGN
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999870561803466	WITHOUT_CLASSIFICATION	1.294381965353421E-5	DESIGN
// set Ruby	WITHOUT_CLASSIFICATION	0.9999660200013176	WITHOUT_CLASSIFICATION	3.3979998682335107E-5	DESIGN
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999965044222585	WITHOUT_CLASSIFICATION	3.4955777414331E-6	DESIGN
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9999995937276462	WITHOUT_CLASSIFICATION	4.0627235375008607E-7	DESIGN
// get current context	WITHOUT_CLASSIFICATION	0.9999944403434688	WITHOUT_CLASSIFICATION	5.559656531175886E-6	DESIGN
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999527960192239	WITHOUT_CLASSIFICATION	4.720398077607966E-5	DESIGN
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999963592270043	WITHOUT_CLASSIFICATION	3.640772995601574E-6	DESIGN
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999997678127331	WITHOUT_CLASSIFICATION	2.3218726691177292E-7	DESIGN
// create constructor	WITHOUT_CLASSIFICATION	0.9999769657968806	WITHOUT_CLASSIFICATION	2.303420311946353E-5	DESIGN
// end constructor	WITHOUT_CLASSIFICATION	0.9999665170366437	WITHOUT_CLASSIFICATION	3.348296335623174E-5	DESIGN
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.99999974950418	WITHOUT_CLASSIFICATION	2.5049581998094965E-7	DESIGN
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999315541282665	WITHOUT_CLASSIFICATION	6.844587173348942E-5	DESIGN
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999550840293956	WITHOUT_CLASSIFICATION	4.491597060449807E-5	DESIGN
// load null block	WITHOUT_CLASSIFICATION	0.9999898514537612	WITHOUT_CLASSIFICATION	1.0148546238915841E-5	DESIGN
// invoke method	WITHOUT_CLASSIFICATION	0.9998496563308198	WITHOUT_CLASSIFICATION	1.5034366918011276E-4	DESIGN
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999902147678744	WITHOUT_CLASSIFICATION	9.785232125522754E-6	DESIGN
// end setup method	WITHOUT_CLASSIFICATION	0.9999761377045734	WITHOUT_CLASSIFICATION	2.3862295426644292E-5	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9999596526084107	WITHOUT_CLASSIFICATION	4.0347391589348924E-5	DESIGN
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999687942004184	WITHOUT_CLASSIFICATION	3.120579958163479E-5	DESIGN
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999796376041349	WITHOUT_CLASSIFICATION	2.0362395865131026E-5	DESIGN
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999933680900159	WITHOUT_CLASSIFICATION	6.631909983987554E-6	DESIGN
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999958167734148	WITHOUT_CLASSIFICATION	4.18322658527039E-6	DESIGN
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999992668010306	WITHOUT_CLASSIFICATION	7.331989694763115E-7	DESIGN
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9999986148791365	WITHOUT_CLASSIFICATION	1.3851208634216262E-6	DESIGN
// store it	WITHOUT_CLASSIFICATION	0.9999861977283716	WITHOUT_CLASSIFICATION	1.3802271628415611E-5	DESIGN
// end of try block	WITHOUT_CLASSIFICATION	0.9999953784383517	WITHOUT_CLASSIFICATION	4.621561648318217E-6	DESIGN
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999929331195379	WITHOUT_CLASSIFICATION	7.066880462113851E-6	DESIGN
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999274833074648	WITHOUT_CLASSIFICATION	7.25166925351141E-5	DESIGN
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999660397291279	WITHOUT_CLASSIFICATION	3.396027087213906E-5	DESIGN
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999527960192239	WITHOUT_CLASSIFICATION	4.720398077607966E-5	DESIGN
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999315541282665	WITHOUT_CLASSIFICATION	6.844587173348942E-5	DESIGN
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999550840293956	WITHOUT_CLASSIFICATION	4.491597060449807E-5	DESIGN
// invoke method	WITHOUT_CLASSIFICATION	0.9998496563308198	WITHOUT_CLASSIFICATION	1.5034366918011276E-4	DESIGN
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999902147678744	WITHOUT_CLASSIFICATION	9.785232125522754E-6	DESIGN
// end setup method	WITHOUT_CLASSIFICATION	0.9999761377045734	WITHOUT_CLASSIFICATION	2.3862295426644292E-5	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9999596526084107	WITHOUT_CLASSIFICATION	4.0347391589348924E-5	DESIGN
// create the class	WITHOUT_CLASSIFICATION	0.999998274603937	WITHOUT_CLASSIFICATION	1.725396062980416E-6	DESIGN
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9999605612079917	WITHOUT_CLASSIFICATION	3.943879200823634E-5	DESIGN
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999977887169799	WITHOUT_CLASSIFICATION	2.2112830202028167E-6	DESIGN
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999998709528122	WITHOUT_CLASSIFICATION	1.2904718782484102E-7	DESIGN
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999652491164668	WITHOUT_CLASSIFICATION	3.475088353326155E-5	DESIGN
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999652491164668	WITHOUT_CLASSIFICATION	3.475088353326155E-5	DESIGN
// setup the class	WITHOUT_CLASSIFICATION	0.9999976169159751	WITHOUT_CLASSIFICATION	2.3830840248290553E-6	DESIGN
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999868765269982	WITHOUT_CLASSIFICATION	1.3123473001645184E-5	DESIGN
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9994474307952166	WITHOUT_CLASSIFICATION	5.525692047834597E-4	DESIGN
// probably a primitive	WITHOUT_CLASSIFICATION	0.9998896806381581	WITHOUT_CLASSIFICATION	1.1031936184194109E-4	DESIGN
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999955368914044	WITHOUT_CLASSIFICATION	4.463108595525061E-6	DESIGN
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999937972245434	WITHOUT_CLASSIFICATION	6.202775456635988E-6	DESIGN
// set the full name	WITHOUT_CLASSIFICATION	0.9999973044877211	WITHOUT_CLASSIFICATION	2.6955122790090366E-6	DESIGN
// include all interfaces	WITHOUT_CLASSIFICATION	0.9999977042657251	WITHOUT_CLASSIFICATION	2.295734274895226E-6	DESIGN
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999996250738309	WITHOUT_CLASSIFICATION	3.7492616918671916E-7	DESIGN
// add array construction methods	WITHOUT_CLASSIFICATION	0.9999894557011888	WITHOUT_CLASSIFICATION	1.0544298811262964E-5	DESIGN
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9989927302554968	WITHOUT_CLASSIFICATION	0.0010072697445032135	DESIGN
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999908542626285	WITHOUT_CLASSIFICATION	9.145737371611435E-6	DESIGN
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999455404164137	WITHOUT_CLASSIFICATION	5.4459583586280126E-5	DESIGN
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999919687128919	WITHOUT_CLASSIFICATION	8.031287108161748E-6	DESIGN
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999994840410525	WITHOUT_CLASSIFICATION	5.159589475030564E-7	DESIGN
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999989062611536	WITHOUT_CLASSIFICATION	1.0937388464706813E-6	DESIGN
// add all static variables	WITHOUT_CLASSIFICATION	0.9999681523922338	WITHOUT_CLASSIFICATION	3.184760776613793E-5	DESIGN
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.999976001716646	WITHOUT_CLASSIFICATION	2.3998283353963228E-5	DESIGN
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999982549256251	WITHOUT_CLASSIFICATION	1.7450743748462764E-6	DESIGN
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9884729531984768	WITHOUT_CLASSIFICATION	0.011527046801523102	DESIGN
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.9230660850271134	WITHOUT_CLASSIFICATION	0.0769339149728866	DESIGN
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9983732206598566	WITHOUT_CLASSIFICATION	0.00162677934014334	DESIGN
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9960408135768991	WITHOUT_CLASSIFICATION	0.003959186423100885	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5402258376233736	DESIGN	0.45977416237662644	WITHOUT_CLASSIFICATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999860413854944	WITHOUT_CLASSIFICATION	1.3958614505575445E-5	DESIGN
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999869002232309	WITHOUT_CLASSIFICATION	1.309977676907791E-5	DESIGN
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999999140885298	WITHOUT_CLASSIFICATION	8.591147017427926E-8	DESIGN
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9999637624433754	WITHOUT_CLASSIFICATION	3.623755662455771E-5	DESIGN
// line 326	WITHOUT_CLASSIFICATION	0.9999818740025109	WITHOUT_CLASSIFICATION	1.8125997488981252E-5	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999860413854944	WITHOUT_CLASSIFICATION	1.3958614505575445E-5	DESIGN
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999869002232309	WITHOUT_CLASSIFICATION	1.309977676907791E-5	DESIGN
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999919687128919	WITHOUT_CLASSIFICATION	8.031287108161748E-6	DESIGN
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999677283892395	WITHOUT_CLASSIFICATION	3.2271610760528934E-5	DESIGN
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999608527715306	WITHOUT_CLASSIFICATION	3.91472284694393E-5	DESIGN
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9999968742055944	WITHOUT_CLASSIFICATION	3.125794405601512E-6	DESIGN
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9988058973656739	WITHOUT_CLASSIFICATION	0.001194102634326082	DESIGN
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9890603685578332	WITHOUT_CLASSIFICATION	0.010939631442166907	DESIGN
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999991237247412	WITHOUT_CLASSIFICATION	8.762752587548047E-7	DESIGN
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9997521219963382	WITHOUT_CLASSIFICATION	2.478780036617567E-4	DESIGN
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999916595304088	WITHOUT_CLASSIFICATION	8.340469591245244E-6	DESIGN
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9997600803506675	WITHOUT_CLASSIFICATION	2.3991964933244765E-4	DESIGN
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9990002576314697	WITHOUT_CLASSIFICATION	9.99742368530287E-4	DESIGN
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9998559961976973	WITHOUT_CLASSIFICATION	1.4400380230269774E-4	DESIGN
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9999971467555535	WITHOUT_CLASSIFICATION	2.853244446582313E-6	DESIGN
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9999929183828133	WITHOUT_CLASSIFICATION	7.08161718675538E-6	DESIGN
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999967885477271	WITHOUT_CLASSIFICATION	3.2114522727827357E-6	DESIGN
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.999975890083792	WITHOUT_CLASSIFICATION	2.410991620807511E-5	DESIGN
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9999992837278914	WITHOUT_CLASSIFICATION	7.162721085673338E-7	DESIGN
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9999990131101015	WITHOUT_CLASSIFICATION	9.868898985174008E-7	DESIGN
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9999853756563881	WITHOUT_CLASSIFICATION	1.4624343611854342E-5	DESIGN
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999999976684877	WITHOUT_CLASSIFICATION	2.3315122990855575E-9	DESIGN
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999895101051279	WITHOUT_CLASSIFICATION	1.048989487202205E-5	DESIGN
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999995903013951	WITHOUT_CLASSIFICATION	4.096986049708099E-7	DESIGN
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9999987512032542	WITHOUT_CLASSIFICATION	1.2487967458611705E-6	DESIGN
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999809492090542	WITHOUT_CLASSIFICATION	1.905079094573371E-5	DESIGN
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999937399692872	WITHOUT_CLASSIFICATION	6.2600307128253385E-6	DESIGN
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999980528003358	WITHOUT_CLASSIFICATION	1.947199664103172E-6	DESIGN
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999993957955152	WITHOUT_CLASSIFICATION	6.042044847417105E-7	DESIGN
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9909737497630271	WITHOUT_CLASSIFICATION	0.009026250236972956	DESIGN
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9927791346020094	WITHOUT_CLASSIFICATION	0.007220865397990559	DESIGN
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9576207792401099	WITHOUT_CLASSIFICATION	0.04237922075989011	DESIGN
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9987311181830962	WITHOUT_CLASSIFICATION	0.0012688818169036967	DESIGN
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999972805881637	WITHOUT_CLASSIFICATION	2.7194118363830583E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999252445862241	WITHOUT_CLASSIFICATION	7.475541377585021E-5	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999252445862241	WITHOUT_CLASSIFICATION	7.475541377585021E-5	DESIGN
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999455404164137	WITHOUT_CLASSIFICATION	5.4459583586280126E-5	DESIGN
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999391627048895	WITHOUT_CLASSIFICATION	6.083729511047423E-5	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999487803738524	WITHOUT_CLASSIFICATION	5.121962614767497E-5	DESIGN
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9998755431746419	WITHOUT_CLASSIFICATION	1.2445682535804233E-4	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9998578585165776	WITHOUT_CLASSIFICATION	1.421414834224814E-4	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9998578585165776	WITHOUT_CLASSIFICATION	1.421414834224814E-4	DESIGN
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999994284245666	WITHOUT_CLASSIFICATION	5.715754333932812E-7	DESIGN
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999296284145461	WITHOUT_CLASSIFICATION	7.037158545385115E-5	DESIGN
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999979191541495	WITHOUT_CLASSIFICATION	2.0808458505945156E-6	DESIGN
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999018377951052	WITHOUT_CLASSIFICATION	9.816220489484617E-5	DESIGN
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.6031676845651206	DESIGN	0.3968323154348794	WITHOUT_CLASSIFICATION
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9998914388530555	WITHOUT_CLASSIFICATION	1.0856114694451053E-4	DESIGN
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.999976566973163	WITHOUT_CLASSIFICATION	2.3433026837134973E-5	DESIGN
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999992916679632	WITHOUT_CLASSIFICATION	7.083320367822504E-7	DESIGN
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9973708034694047	WITHOUT_CLASSIFICATION	0.0026291965305953757	DESIGN
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9998281478980146	WITHOUT_CLASSIFICATION	1.7185210198535265E-4	DESIGN
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.999981322210796	WITHOUT_CLASSIFICATION	1.8677789203925597E-5	DESIGN
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999862997222657	WITHOUT_CLASSIFICATION	1.370027773443194E-5	DESIGN
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999589876790153	WITHOUT_CLASSIFICATION	4.101232098475674E-5	DESIGN
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.999960784564918	WITHOUT_CLASSIFICATION	3.921543508196517E-5	DESIGN
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9901152621789583	WITHOUT_CLASSIFICATION	0.009884737821041713	DESIGN
// something?	WITHOUT_CLASSIFICATION	0.9923159735610176	WITHOUT_CLASSIFICATION	0.007684026438982429	DESIGN
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999443319612427	WITHOUT_CLASSIFICATION	5.566803875723183E-5	DESIGN
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999443319612427	WITHOUT_CLASSIFICATION	5.566803875723183E-5	DESIGN
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999989978393727	WITHOUT_CLASSIFICATION	1.0021606272424203E-6	DESIGN
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999989978393727	WITHOUT_CLASSIFICATION	1.0021606272424203E-6	DESIGN
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999395294158697	WITHOUT_CLASSIFICATION	6.0470584130238424E-5	DESIGN
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999958125692809	WITHOUT_CLASSIFICATION	4.1874307190323025E-6	DESIGN
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9995874795226213	WITHOUT_CLASSIFICATION	4.125204773787964E-4	DESIGN
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9999938785155701	WITHOUT_CLASSIFICATION	6.121484429970103E-6	DESIGN
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9992973784523475	WITHOUT_CLASSIFICATION	7.026215476524433E-4	DESIGN
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999126353505442	WITHOUT_CLASSIFICATION	8.736464945574747E-5	DESIGN
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999964102824915	WITHOUT_CLASSIFICATION	3.5897175083521973E-6	DESIGN
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999862997222657	WITHOUT_CLASSIFICATION	1.370027773443194E-5	DESIGN
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999589876790153	WITHOUT_CLASSIFICATION	4.101232098475674E-5	DESIGN
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9901152621789583	WITHOUT_CLASSIFICATION	0.009884737821041713	DESIGN
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.999976783350291	WITHOUT_CLASSIFICATION	2.32166497089214E-5	DESIGN
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.999260699685343	WITHOUT_CLASSIFICATION	7.393003146568302E-4	DESIGN
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9946313232922972	WITHOUT_CLASSIFICATION	0.0053686767077028305	DESIGN
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9999054193430802	WITHOUT_CLASSIFICATION	9.458065691982022E-5	DESIGN
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9998740181280199	WITHOUT_CLASSIFICATION	1.2598187198013458E-4	DESIGN
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9762698687392439	WITHOUT_CLASSIFICATION	0.02373013126075601	DESIGN
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999947799053424	WITHOUT_CLASSIFICATION	5.220094657603966E-6	DESIGN
// n-dimensional array	WITHOUT_CLASSIFICATION	0.999986837890572	WITHOUT_CLASSIFICATION	1.3162109427922968E-5	DESIGN
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999999406079635	WITHOUT_CLASSIFICATION	5.9392036548630014E-8	DESIGN
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999695920122461	WITHOUT_CLASSIFICATION	3.0407987753868548E-5	DESIGN
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9999822241268055	WITHOUT_CLASSIFICATION	1.7775873194440526E-5	DESIGN
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999903947081569	WITHOUT_CLASSIFICATION	9.605291843034838E-6	DESIGN
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999881341683265	WITHOUT_CLASSIFICATION	1.1865831673452097E-5	DESIGN
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9967436303145379	WITHOUT_CLASSIFICATION	0.0032563696854621014	DESIGN
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9998759706496896	WITHOUT_CLASSIFICATION	1.2402935031049272E-4	DESIGN
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999984964876376	WITHOUT_CLASSIFICATION	1.5035123623826838E-6	DESIGN
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999548787107283	WITHOUT_CLASSIFICATION	4.5121289271839545E-5	DESIGN
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9964335960096476	WITHOUT_CLASSIFICATION	0.0035664039903524586	DESIGN
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999946398950461	WITHOUT_CLASSIFICATION	5.360104953921763E-6	DESIGN
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.999837817632997	WITHOUT_CLASSIFICATION	1.621823670030793E-4	DESIGN
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999981632270505	WITHOUT_CLASSIFICATION	1.8367729494439676E-6	DESIGN
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999609098013323	WITHOUT_CLASSIFICATION	3.909019866763746E-5	DESIGN
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9999939544967466	WITHOUT_CLASSIFICATION	6.045503253428625E-6	DESIGN
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999969963060548	WITHOUT_CLASSIFICATION	3.003693945166377E-6	DESIGN
// The template for interface modules	WITHOUT_CLASSIFICATION	0.999959423395526	WITHOUT_CLASSIFICATION	4.057660447398857E-5	DESIGN
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999998409448484	WITHOUT_CLASSIFICATION	1.5905515162418592E-7	DESIGN
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999988450706517	WITHOUT_CLASSIFICATION	1.1549293482806863E-6	DESIGN
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.999905001530896	WITHOUT_CLASSIFICATION	9.499846910404059E-5	DESIGN
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999997355016751	WITHOUT_CLASSIFICATION	2.6449832496120555E-7	DESIGN
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9993160939061898	WITHOUT_CLASSIFICATION	6.839060938101657E-4	DESIGN
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9999925357682459	WITHOUT_CLASSIFICATION	7.464231754044998E-6	DESIGN
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999817237513811	WITHOUT_CLASSIFICATION	1.8276248618946705E-5	DESIGN
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9987897391070016	WITHOUT_CLASSIFICATION	0.0012102608929982733	DESIGN
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.999975917285341	WITHOUT_CLASSIFICATION	2.4082714659053623E-5	DESIGN
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9998306979336358	WITHOUT_CLASSIFICATION	1.6930206636424908E-4	DESIGN
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9999713500435012	WITHOUT_CLASSIFICATION	2.8649956498724707E-5	DESIGN
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999867054877651	WITHOUT_CLASSIFICATION	1.3294512234881017E-5	DESIGN
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999802292255424	WITHOUT_CLASSIFICATION	1.9770774457608743E-5	DESIGN
/* expected */	WITHOUT_CLASSIFICATION	0.9999963416533266	WITHOUT_CLASSIFICATION	3.6583466732547837E-6	DESIGN
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9997987888014918	WITHOUT_CLASSIFICATION	2.012111985081329E-4	DESIGN
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999181749915648	WITHOUT_CLASSIFICATION	8.18250084352438E-5	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999487803738524	WITHOUT_CLASSIFICATION	5.121962614767497E-5	DESIGN
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999867054877651	WITHOUT_CLASSIFICATION	1.3294512234881017E-5	DESIGN
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.979073326293355	WITHOUT_CLASSIFICATION	0.02092667370664509	DESIGN
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9997145007462943	WITHOUT_CLASSIFICATION	2.8549925370565136E-4	DESIGN
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.999939557334155	WITHOUT_CLASSIFICATION	6.044266584517475E-5	DESIGN
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999568848999896	WITHOUT_CLASSIFICATION	4.311510001045333E-5	DESIGN
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999568848999896	WITHOUT_CLASSIFICATION	4.311510001045333E-5	DESIGN
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9979602388719429	WITHOUT_CLASSIFICATION	0.0020397611280570573	DESIGN
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999872590492732	WITHOUT_CLASSIFICATION	1.274095072671293E-5	DESIGN
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9999843573642633	WITHOUT_CLASSIFICATION	1.5642635736681967E-5	DESIGN
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9840062200561893	WITHOUT_CLASSIFICATION	0.01599377994381076	DESIGN
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9999977349229284	WITHOUT_CLASSIFICATION	2.2650770716895095E-6	DESIGN
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999725788079729	WITHOUT_CLASSIFICATION	2.7421192027130278E-5	DESIGN
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999980211523632	WITHOUT_CLASSIFICATION	1.978847636782546E-6	DESIGN
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9999998597806297	WITHOUT_CLASSIFICATION	1.402193703553479E-7	DESIGN
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.999976145048103	WITHOUT_CLASSIFICATION	2.385495189704227E-5	DESIGN
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.999976145048103	WITHOUT_CLASSIFICATION	2.385495189704227E-5	DESIGN
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9984968260654914	WITHOUT_CLASSIFICATION	0.0015031739345086753	DESIGN
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999945039475018	WITHOUT_CLASSIFICATION	5.496052498258936E-6	DESIGN
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9991170924487366	WITHOUT_CLASSIFICATION	8.829075512633901E-4	DESIGN
// must be a public method	WITHOUT_CLASSIFICATION	0.9994803282540009	WITHOUT_CLASSIFICATION	5.196717459991445E-4	DESIGN
// must be a public class	WITHOUT_CLASSIFICATION	0.9994601082284286	WITHOUT_CLASSIFICATION	5.398917715714236E-4	DESIGN
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9978105743472255	WITHOUT_CLASSIFICATION	0.0021894256527745432	DESIGN
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999980462504234	WITHOUT_CLASSIFICATION	1.9537495765411243E-6	DESIGN
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9994161468408767	WITHOUT_CLASSIFICATION	5.838531591232851E-4	DESIGN
// no matching method found	WITHOUT_CLASSIFICATION	0.999773898400579	WITHOUT_CLASSIFICATION	2.261015994209824E-4	DESIGN
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9906182678270664	WITHOUT_CLASSIFICATION	0.00938173217293365	DESIGN
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9999918213693222	WITHOUT_CLASSIFICATION	8.178630677808482E-6	DESIGN
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.999996290254846	WITHOUT_CLASSIFICATION	3.709745153903317E-6	DESIGN
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999973952309882	WITHOUT_CLASSIFICATION	2.6047690118870226E-6	DESIGN
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.999740129169284	WITHOUT_CLASSIFICATION	2.598708307159327E-4	DESIGN
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.999740129169284	WITHOUT_CLASSIFICATION	2.598708307159327E-4	DESIGN
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9997899120024648	WITHOUT_CLASSIFICATION	2.1008799753517458E-4	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9999596526084107	WITHOUT_CLASSIFICATION	4.0347391589348924E-5	DESIGN
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9930808832536424	WITHOUT_CLASSIFICATION	0.0069191167463575395	DESIGN
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9998225475176303	WITHOUT_CLASSIFICATION	1.774524823697338E-4	DESIGN
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999709029551391	WITHOUT_CLASSIFICATION	2.909704486088168E-5	DESIGN
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999780956351743	WITHOUT_CLASSIFICATION	2.190436482582291E-5	DESIGN
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999786113969318	WITHOUT_CLASSIFICATION	2.1388603068225416E-5	DESIGN
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999997051295965	WITHOUT_CLASSIFICATION	2.948704036029536E-7	DESIGN
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999985317625582	WITHOUT_CLASSIFICATION	1.4682374419415954E-6	DESIGN
/* package scope */	WITHOUT_CLASSIFICATION	0.9998400771204095	WITHOUT_CLASSIFICATION	1.5992287959054285E-4	DESIGN
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999643875038953	WITHOUT_CLASSIFICATION	3.561249610477808E-5	DESIGN
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999294277045176	WITHOUT_CLASSIFICATION	7.057229548230692E-5	DESIGN
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9999992515463911	WITHOUT_CLASSIFICATION	7.484536088569562E-7	DESIGN
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999785220430655	WITHOUT_CLASSIFICATION	2.1477956934578017E-5	DESIGN
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9943909196540307	WITHOUT_CLASSIFICATION	0.005609080345969338	DESIGN
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999995462931498	WITHOUT_CLASSIFICATION	4.5370685014427783E-7	DESIGN
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.999997914925075	WITHOUT_CLASSIFICATION	2.0850749250017743E-6	DESIGN
// statically initialized below	WITHOUT_CLASSIFICATION	0.9901466880623423	WITHOUT_CLASSIFICATION	0.009853311937657672	DESIGN
// finish class initializer	WITHOUT_CLASSIFICATION	0.9998154466674083	WITHOUT_CLASSIFICATION	1.845533325916782E-4	DESIGN
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999931252530804	WITHOUT_CLASSIFICATION	6.874746919679805E-6	DESIGN
// should not happen!	WITHOUT_CLASSIFICATION	0.9990277170577584	WITHOUT_CLASSIFICATION	9.722829422416978E-4	DESIGN
// start class	WITHOUT_CLASSIFICATION	0.9999938337680796	WITHOUT_CLASSIFICATION	6.166231920336759E-6	DESIGN
// make getter for handler	WITHOUT_CLASSIFICATION	0.9996552356077869	WITHOUT_CLASSIFICATION	3.447643922130609E-4	DESIGN
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9996610450304916	WITHOUT_CLASSIFICATION	3.389549695084043E-4	DESIGN
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9979322375724652	WITHOUT_CLASSIFICATION	0.0020677624275348217	DESIGN
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9999832010772967	WITHOUT_CLASSIFICATION	1.6798922703338568E-5	DESIGN
// create static private method field	WITHOUT_CLASSIFICATION	0.9999799684310345	WITHOUT_CLASSIFICATION	2.0031568965548956E-5	DESIGN
// load static empty array	WITHOUT_CLASSIFICATION	0.99991922941693	WITHOUT_CLASSIFICATION	8.077058306991558E-5	DESIGN
// box arguments	WITHOUT_CLASSIFICATION	0.99998644721139	WITHOUT_CLASSIFICATION	1.355278860999769E-5	DESIGN
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9910398132869112	WITHOUT_CLASSIFICATION	0.008960186713088736	DESIGN
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.999956856585543	WITHOUT_CLASSIFICATION	4.3143414456946705E-5	DESIGN
// do a void return	WITHOUT_CLASSIFICATION	0.9999026714142886	WITHOUT_CLASSIFICATION	9.732858571143953E-5	DESIGN
// // utility methods //	WITHOUT_CLASSIFICATION	0.999948616122517	WITHOUT_CLASSIFICATION	5.138387748317567E-5	DESIGN
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9985743282500352	WITHOUT_CLASSIFICATION	0.00142567174996475	DESIGN
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9999256994065735	WITHOUT_CLASSIFICATION	7.430059342648118E-5	DESIGN
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999980694103294	WITHOUT_CLASSIFICATION	1.930589670534454E-6	DESIGN
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999946546394063	WITHOUT_CLASSIFICATION	5.3453605937409406E-6	DESIGN
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999991414111942	WITHOUT_CLASSIFICATION	8.585888058236299E-7	DESIGN
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999997060880542	WITHOUT_CLASSIFICATION	2.939119458181281E-7	DESIGN
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999997793555571	WITHOUT_CLASSIFICATION	2.2064444298358227E-7	DESIGN
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9998819180071884	WITHOUT_CLASSIFICATION	1.1808199281150426E-4	DESIGN
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9999909390512386	WITHOUT_CLASSIFICATION	9.060948761449902E-6	DESIGN
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9999993650616129	WITHOUT_CLASSIFICATION	6.349383870555457E-7	DESIGN
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9991698050278764	WITHOUT_CLASSIFICATION	8.301949721235339E-4	DESIGN
/* NUL */	WITHOUT_CLASSIFICATION	0.999986416872399	WITHOUT_CLASSIFICATION	1.3583127601036694E-5	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999994403862341	WITHOUT_CLASSIFICATION	5.596137659117684E-7	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999920433854947	WITHOUT_CLASSIFICATION	7.95661450534844E-6	DESIGN
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999829912146241	WITHOUT_CLASSIFICATION	1.7008785375963147E-5	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.993853829976292	WITHOUT_CLASSIFICATION	0.00614617002370808	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999860413854944	WITHOUT_CLASSIFICATION	1.3958614505575445E-5	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999860413854944	WITHOUT_CLASSIFICATION	1.3958614505575445E-5	DESIGN
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.999999977347075	WITHOUT_CLASSIFICATION	2.265292489914304E-8	DESIGN
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.999989770220078	WITHOUT_CLASSIFICATION	1.0229779922023367E-5	DESIGN
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999014949458814	WITHOUT_CLASSIFICATION	9.850505411853061E-5	DESIGN
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9997634744175522	WITHOUT_CLASSIFICATION	2.3652558244787686E-4	DESIGN
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999998264396854	WITHOUT_CLASSIFICATION	1.735603145535855E-7	DESIGN
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999963042038585	WITHOUT_CLASSIFICATION	3.695796141441379E-6	DESIGN
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9994018916506446	WITHOUT_CLASSIFICATION	5.981083493553017E-4	DESIGN
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9978637531696188	WITHOUT_CLASSIFICATION	0.002136246830381158	DESIGN
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999997232969823	WITHOUT_CLASSIFICATION	2.7670301772994644E-7	DESIGN
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9917156983034597	WITHOUT_CLASSIFICATION	0.008284301696540325	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999431198585333	WITHOUT_CLASSIFICATION	5.688014146674066E-5	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999431198585333	WITHOUT_CLASSIFICATION	5.688014146674066E-5	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999431198585333	WITHOUT_CLASSIFICATION	5.688014146674066E-5	DESIGN
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999911099428711	WITHOUT_CLASSIFICATION	8.890057128799917E-6	DESIGN
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999986930878324	WITHOUT_CLASSIFICATION	1.3069121676393575E-6	DESIGN
// Single node in list	WITHOUT_CLASSIFICATION	0.9990137493866817	WITHOUT_CLASSIFICATION	9.862506133182798E-4	DESIGN
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999673771084695	WITHOUT_CLASSIFICATION	3.262289153057679E-5	DESIGN
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999673771084695	WITHOUT_CLASSIFICATION	3.262289153057679E-5	DESIGN
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999596863956256	WITHOUT_CLASSIFICATION	4.031360437429475E-5	DESIGN
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.99991344422919	WITHOUT_CLASSIFICATION	8.655577080988318E-5	DESIGN
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.999999249222262	WITHOUT_CLASSIFICATION	7.507777379302431E-7	DESIGN
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.999861803471378	WITHOUT_CLASSIFICATION	1.3819652862195284E-4	DESIGN
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9715595823683651	WITHOUT_CLASSIFICATION	0.028440417631634865	DESIGN
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9999985489494796	WITHOUT_CLASSIFICATION	1.451050520368089E-6	DESIGN
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999196190495625	WITHOUT_CLASSIFICATION	8.03809504374481E-5	DESIGN
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9997377971500947	WITHOUT_CLASSIFICATION	2.622028499052616E-4	DESIGN
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999977669952105	WITHOUT_CLASSIFICATION	2.2330047894397663E-6	DESIGN
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999933087720536	WITHOUT_CLASSIFICATION	6.691227946433183E-6	DESIGN
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999933087720536	WITHOUT_CLASSIFICATION	6.691227946433183E-6	DESIGN
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.999859108230143	WITHOUT_CLASSIFICATION	1.408917698570758E-4	DESIGN
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999694064158864	WITHOUT_CLASSIFICATION	3.059358411369411E-5	DESIGN
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999308059598767	WITHOUT_CLASSIFICATION	6.919404012321928E-5	DESIGN
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.999987472513956	WITHOUT_CLASSIFICATION	1.2527486043959363E-5	DESIGN
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999565154722689	WITHOUT_CLASSIFICATION	4.348452773110444E-5	DESIGN
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999969118240092	WITHOUT_CLASSIFICATION	3.088175990783026E-6	DESIGN
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999972382915249	WITHOUT_CLASSIFICATION	2.761708475114228E-6	DESIGN
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999950121794735	WITHOUT_CLASSIFICATION	4.987820526415182E-6	DESIGN
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9996714058604845	WITHOUT_CLASSIFICATION	3.285941395155794E-4	DESIGN
// POP	WITHOUT_CLASSIFICATION	0.999932674004942	WITHOUT_CLASSIFICATION	6.732599505808557E-5	DESIGN
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.999353001621044	WITHOUT_CLASSIFICATION	6.469983789560689E-4	DESIGN
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999346091384549	WITHOUT_CLASSIFICATION	6.539086154513844E-5	DESIGN
// SET_P	WITHOUT_CLASSIFICATION	0.999825118748758	WITHOUT_CLASSIFICATION	1.7488125124200745E-4	DESIGN
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999874421938496	WITHOUT_CLASSIFICATION	1.2557806150343352E-5	DESIGN
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9998020855806442	WITHOUT_CLASSIFICATION	1.9791441935591405E-4	DESIGN
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999998532461534	WITHOUT_CLASSIFICATION	1.4675384654097865E-7	DESIGN
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999745863914662	WITHOUT_CLASSIFICATION	2.5413608533853816E-5	DESIGN
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999941640058784	WITHOUT_CLASSIFICATION	5.835994121633856E-6	DESIGN
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999833479625734	WITHOUT_CLASSIFICATION	1.66520374266091E-5	DESIGN
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999847415815584	WITHOUT_CLASSIFICATION	1.5258418441629886E-5	DESIGN
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.7298918101848997	WITHOUT_CLASSIFICATION	0.27010818981510043	DESIGN
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999999726216408	WITHOUT_CLASSIFICATION	2.737835930202833E-8	DESIGN
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999323963057	WITHOUT_CLASSIFICATION	6.76036943000174E-5	DESIGN
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999889495698672	WITHOUT_CLASSIFICATION	1.1050430132898101E-5	DESIGN
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999888020277735	WITHOUT_CLASSIFICATION	1.1197972226482524E-5	DESIGN
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9999528991057199	WITHOUT_CLASSIFICATION	4.7100894280062064E-5	DESIGN
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999719075865663	WITHOUT_CLASSIFICATION	2.8092413433705038E-5	DESIGN
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9999405024967146	WITHOUT_CLASSIFICATION	5.949750328524185E-5	DESIGN
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9999331412638112	WITHOUT_CLASSIFICATION	6.685873618880836E-5	DESIGN
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9999690623046116	WITHOUT_CLASSIFICATION	3.09376953884949E-5	DESIGN
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999779700304834	WITHOUT_CLASSIFICATION	2.2029969516623795E-5	DESIGN
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999849757960735	WITHOUT_CLASSIFICATION	1.5024203926566411E-5	DESIGN
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999617652609375	WITHOUT_CLASSIFICATION	3.8234739062468465E-5	DESIGN
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999779700304834	WITHOUT_CLASSIFICATION	2.2029969516623795E-5	DESIGN
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9999714698658871	WITHOUT_CLASSIFICATION	2.853013411289598E-5	DESIGN
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999947032313223	WITHOUT_CLASSIFICATION	5.296768677694454E-6	DESIGN
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9998293626483468	WITHOUT_CLASSIFICATION	1.70637351653264E-4	DESIGN
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.998676430955797	WITHOUT_CLASSIFICATION	0.0013235690442030218	DESIGN
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999957814645983	WITHOUT_CLASSIFICATION	4.218535401732262E-6	DESIGN
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999957848949943	WITHOUT_CLASSIFICATION	4.215105005709791E-6	DESIGN
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999974954516129	WITHOUT_CLASSIFICATION	2.504548387149447E-6	DESIGN
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999503874593567	WITHOUT_CLASSIFICATION	4.9612540643249135E-5	DESIGN
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9999719677905916	WITHOUT_CLASSIFICATION	2.803220940849887E-5	DESIGN
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999785703676431	WITHOUT_CLASSIFICATION	2.1429632356793225E-5	DESIGN
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9998731235961196	WITHOUT_CLASSIFICATION	1.2687640388050575E-4	DESIGN
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9998525223933176	WITHOUT_CLASSIFICATION	1.4747760668235184E-4	DESIGN
/* $!: error string */	WITHOUT_CLASSIFICATION	0.999907026633796	WITHOUT_CLASSIFICATION	9.297336620402182E-5	DESIGN
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9999588473233532	WITHOUT_CLASSIFICATION	4.115267664679511E-5	DESIGN
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9998988029870238	WITHOUT_CLASSIFICATION	1.0119701297618631E-4	DESIGN
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9998907874773139	WITHOUT_CLASSIFICATION	1.092125226861578E-4	DESIGN
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9999075382821362	WITHOUT_CLASSIFICATION	9.246171786382239E-5	DESIGN
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9998855154744566	WITHOUT_CLASSIFICATION	1.1448452554342446E-4	DESIGN
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999918880525879	WITHOUT_CLASSIFICATION	8.111947412111102E-6	DESIGN
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9999825261963051	WITHOUT_CLASSIFICATION	1.747380369483221E-5	DESIGN
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9991554714944991	WITHOUT_CLASSIFICATION	8.445285055008691E-4	DESIGN
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999945369465117	WITHOUT_CLASSIFICATION	5.46305348827668E-6	DESIGN
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999955333391254	WITHOUT_CLASSIFICATION	4.4666608746461965E-6	DESIGN
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999987527373645	WITHOUT_CLASSIFICATION	1.2472626354736528E-6	DESIGN
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999996918919799	WITHOUT_CLASSIFICATION	3.0810802009631383E-7	DESIGN
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9972083109600569	WITHOUT_CLASSIFICATION	0.00279168903994307	DESIGN
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999332514074319	WITHOUT_CLASSIFICATION	6.674859256813426E-5	DESIGN
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999927757219763	WITHOUT_CLASSIFICATION	7.224278023634996E-6	DESIGN
// block (primary)	WITHOUT_CLASSIFICATION	0.9999595830381632	WITHOUT_CLASSIFICATION	4.041696183671346E-5	DESIGN
// block (expr)	WITHOUT_CLASSIFICATION	0.9999816939958438	WITHOUT_CLASSIFICATION	1.830600415624112E-5	DESIGN
// hash	WITHOUT_CLASSIFICATION	0.9999598394629537	WITHOUT_CLASSIFICATION	4.016053704623814E-5	DESIGN
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9804100229127989	WITHOUT_CLASSIFICATION	0.01958997708720109	DESIGN
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9986396110169761	WITHOUT_CLASSIFICATION	0.001360388983023907	DESIGN
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999731873906343	WITHOUT_CLASSIFICATION	2.681260936564852E-5	DESIGN
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999183980302611	WITHOUT_CLASSIFICATION	8.160196973899404E-5	DESIGN
// binary	WITHOUT_CLASSIFICATION	0.9998755783689729	WITHOUT_CLASSIFICATION	1.2442163102706482E-4	DESIGN
// decimal	WITHOUT_CLASSIFICATION	0.9999433409963013	WITHOUT_CLASSIFICATION	5.665900369860344E-5	DESIGN
//Octal	WITHOUT_CLASSIFICATION	0.9998957509123118	WITHOUT_CLASSIFICATION	1.0424908768828583E-4	DESIGN
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999601857848345	WITHOUT_CLASSIFICATION	3.9814215165562744E-5	DESIGN
// backslash	WITHOUT_CLASSIFICATION	0.999968336626111	WITHOUT_CLASSIFICATION	3.1663373889144334E-5	DESIGN
// newline	WITHOUT_CLASSIFICATION	0.9999665590157031	WITHOUT_CLASSIFICATION	3.344098429694731E-5	DESIGN
// horizontal tab	WITHOUT_CLASSIFICATION	0.9999705918289559	WITHOUT_CLASSIFICATION	2.940817104405018E-5	DESIGN
// form feed	WITHOUT_CLASSIFICATION	0.9999838427110961	WITHOUT_CLASSIFICATION	1.6157288903937477E-5	DESIGN
// vertical tab	WITHOUT_CLASSIFICATION	0.9999881253056757	WITHOUT_CLASSIFICATION	1.1874694324267577E-5	DESIGN
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999874686320273	WITHOUT_CLASSIFICATION	1.2531367972808437E-5	DESIGN
// escape	WITHOUT_CLASSIFICATION	0.9999701442519922	WITHOUT_CLASSIFICATION	2.9855748007809597E-5	DESIGN
// hex constant	WITHOUT_CLASSIFICATION	0.9999930357209238	WITHOUT_CLASSIFICATION	6.964279076251078E-6	DESIGN
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999677748498812	WITHOUT_CLASSIFICATION	3.222515011881256E-5	DESIGN
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999927844000913	WITHOUT_CLASSIFICATION	7.215599908688197E-6	DESIGN
// space	WITHOUT_CLASSIFICATION	0.999966921013013	WITHOUT_CLASSIFICATION	3.307898698698154E-5	DESIGN
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9998546358894872	WITHOUT_CLASSIFICATION	1.4536411051281996E-4	DESIGN
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9894117598684595	WITHOUT_CLASSIFICATION	0.010588240131540519	DESIGN
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999054624769462	WITHOUT_CLASSIFICATION	9.453752305373336E-5	DESIGN
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999927844000913	WITHOUT_CLASSIFICATION	7.215599908688197E-6	DESIGN
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9990293313350159	WITHOUT_CLASSIFICATION	9.706686649841868E-4	DESIGN
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9990293313350159	WITHOUT_CLASSIFICATION	9.706686649841868E-4	DESIGN
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9998740291454289	WITHOUT_CLASSIFICATION	1.259708545710778E-4	DESIGN
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9997467183371355	WITHOUT_CLASSIFICATION	2.5328166286457785E-4	DESIGN
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999806047309602	WITHOUT_CLASSIFICATION	1.9395269039851036E-5	DESIGN
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9996738337550428	WITHOUT_CLASSIFICATION	3.261662449572267E-4	DESIGN
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9641084395995302	WITHOUT_CLASSIFICATION	0.03589156040046971	DESIGN
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999769343117988	WITHOUT_CLASSIFICATION	2.3065688201106654E-5	DESIGN
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999888720862636	WITHOUT_CLASSIFICATION	1.1127913736327089E-5	DESIGN
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9899023887858966	DESIGN	0.010097611214103292	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9995414470161654	WITHOUT_CLASSIFICATION	4.585529838344813E-4	DESIGN
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9999940518033524	WITHOUT_CLASSIFICATION	5.948196647499863E-6	DESIGN
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.999937721562186	WITHOUT_CLASSIFICATION	6.227843781406213E-5	DESIGN
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.979818859265131	WITHOUT_CLASSIFICATION	0.020181140734869	DESIGN
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9999025733777056	WITHOUT_CLASSIFICATION	9.742662229440703E-5	DESIGN
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9999777996208464	WITHOUT_CLASSIFICATION	2.2200379153676755E-5	DESIGN
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9994490499679499	WITHOUT_CLASSIFICATION	5.50950032050144E-4	DESIGN
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9994049381296141	WITHOUT_CLASSIFICATION	5.950618703859674E-4	DESIGN
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.999526091656004	WITHOUT_CLASSIFICATION	4.739083439960641E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998535807755001	WITHOUT_CLASSIFICATION	1.4641922449996114E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998535807755001	WITHOUT_CLASSIFICATION	1.4641922449996114E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998535807755001	WITHOUT_CLASSIFICATION	1.4641922449996114E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998535807755001	WITHOUT_CLASSIFICATION	1.4641922449996114E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998535807755001	WITHOUT_CLASSIFICATION	1.4641922449996114E-4	DESIGN
// line 329	WITHOUT_CLASSIFICATION	0.9999827740308789	WITHOUT_CLASSIFICATION	1.7225969121105104E-5	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999228324795443	WITHOUT_CLASSIFICATION	7.716752045572866E-5	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999861116161614	WITHOUT_CLASSIFICATION	1.3888383838607884E-4	DESIGN
// dynamically increase	WITHOUT_CLASSIFICATION	0.9995597445549854	WITHOUT_CLASSIFICATION	4.402554450145271E-4	DESIGN
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999525100415873	WITHOUT_CLASSIFICATION	4.7489958412736244E-5	DESIGN
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999944938020321	WITHOUT_CLASSIFICATION	5.506197967916818E-6	DESIGN
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999711702083457	WITHOUT_CLASSIFICATION	2.882979165434004E-5	DESIGN
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999385871671385	WITHOUT_CLASSIFICATION	6.141283286151055E-5	DESIGN
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999855786533512	WITHOUT_CLASSIFICATION	1.4421346648858643E-5	DESIGN
// line 271	WITHOUT_CLASSIFICATION	0.9999875074589843	WITHOUT_CLASSIFICATION	1.2492541015575504E-5	DESIGN
// line 274	WITHOUT_CLASSIFICATION	0.9999848308108739	WITHOUT_CLASSIFICATION	1.5169189126148212E-5	DESIGN
// line 303	WITHOUT_CLASSIFICATION	0.9999797048189485	WITHOUT_CLASSIFICATION	2.0295181051510262E-5	DESIGN
// line 311	WITHOUT_CLASSIFICATION	0.9999838938784259	WITHOUT_CLASSIFICATION	1.6106121574083775E-5	DESIGN
// line 314	WITHOUT_CLASSIFICATION	0.9999829486820173	WITHOUT_CLASSIFICATION	1.7051317982638687E-5	DESIGN
// line 317	WITHOUT_CLASSIFICATION	0.9999834209192143	WITHOUT_CLASSIFICATION	1.6579080785685618E-5	DESIGN
// line 332	WITHOUT_CLASSIFICATION	0.9999850639010477	WITHOUT_CLASSIFICATION	1.4936098952367238E-5	DESIGN
// line 338	WITHOUT_CLASSIFICATION	0.999982505313421	WITHOUT_CLASSIFICATION	1.7494686578976027E-5	DESIGN
// line 341	WITHOUT_CLASSIFICATION	0.9999830825692834	WITHOUT_CLASSIFICATION	1.6917430716645646E-5	DESIGN
// line 344	WITHOUT_CLASSIFICATION	0.9999795620529949	WITHOUT_CLASSIFICATION	2.0437947005156714E-5	DESIGN
// line 351	WITHOUT_CLASSIFICATION	0.9999827046136347	WITHOUT_CLASSIFICATION	1.7295386365226514E-5	DESIGN
// line 358	WITHOUT_CLASSIFICATION	0.9999809047756193	WITHOUT_CLASSIFICATION	1.909522438068139E-5	DESIGN
// line 367	WITHOUT_CLASSIFICATION	0.9999811497837122	WITHOUT_CLASSIFICATION	1.8850216287848567E-5	DESIGN
// line 372	WITHOUT_CLASSIFICATION	0.9999863122085008	WITHOUT_CLASSIFICATION	1.368779149930855E-5	DESIGN
// line 378	WITHOUT_CLASSIFICATION	0.9999819076240448	WITHOUT_CLASSIFICATION	1.8092375955140448E-5	DESIGN
// line 382	WITHOUT_CLASSIFICATION	0.9999869373620538	WITHOUT_CLASSIFICATION	1.3062637946151075E-5	DESIGN
// line 407	WITHOUT_CLASSIFICATION	0.9999749286144123	WITHOUT_CLASSIFICATION	2.507138558762385E-5	DESIGN
// line 411	WITHOUT_CLASSIFICATION	0.9999784568108496	WITHOUT_CLASSIFICATION	2.1543189150451043E-5	DESIGN
// line 414	WITHOUT_CLASSIFICATION	0.9999770937992024	WITHOUT_CLASSIFICATION	2.2906200797535602E-5	DESIGN
// line 417	WITHOUT_CLASSIFICATION	0.9999778241946928	WITHOUT_CLASSIFICATION	2.2175805307163253E-5	DESIGN
// line 420	WITHOUT_CLASSIFICATION	0.9999827124208438	WITHOUT_CLASSIFICATION	1.7287579156239194E-5	DESIGN
// line 426	WITHOUT_CLASSIFICATION	0.9999770610018965	WITHOUT_CLASSIFICATION	2.2938998103385873E-5	DESIGN
// line 434	WITHOUT_CLASSIFICATION	0.9999773337728206	WITHOUT_CLASSIFICATION	2.2666227179389425E-5	DESIGN
// line 443	WITHOUT_CLASSIFICATION	0.9999758096497666	WITHOUT_CLASSIFICATION	2.419035023335772E-5	DESIGN
// line 446	WITHOUT_CLASSIFICATION	0.9999701639792825	WITHOUT_CLASSIFICATION	2.9836020717486033E-5	DESIGN
// line 452	WITHOUT_CLASSIFICATION	0.9999797986236206	WITHOUT_CLASSIFICATION	2.020137637938553E-5	DESIGN
// line 457	WITHOUT_CLASSIFICATION	0.9999742734994013	WITHOUT_CLASSIFICATION	2.572650059870681E-5	DESIGN
// line 464	WITHOUT_CLASSIFICATION	0.9999751987649771	WITHOUT_CLASSIFICATION	2.4801235022982638E-5	DESIGN
// line 467	WITHOUT_CLASSIFICATION	0.9999755730104174	WITHOUT_CLASSIFICATION	2.4426989582678398E-5	DESIGN
// line 470	WITHOUT_CLASSIFICATION	0.999977511686436	WITHOUT_CLASSIFICATION	2.248831356400492E-5	DESIGN
// line 479	WITHOUT_CLASSIFICATION	0.9999726771203415	WITHOUT_CLASSIFICATION	2.732287965845351E-5	DESIGN
// line 484	WITHOUT_CLASSIFICATION	0.9999759179913437	WITHOUT_CLASSIFICATION	2.4082008656313423E-5	DESIGN
// line 486	WITHOUT_CLASSIFICATION	0.9999730878577674	WITHOUT_CLASSIFICATION	2.6912142232619165E-5	DESIGN
// line 492	WITHOUT_CLASSIFICATION	0.9999780029813059	WITHOUT_CLASSIFICATION	2.1997018694132437E-5	DESIGN
// line 498	WITHOUT_CLASSIFICATION	0.999972831567146	WITHOUT_CLASSIFICATION	2.7168432853937025E-5	DESIGN
// line 501	WITHOUT_CLASSIFICATION	0.9999777306077355	WITHOUT_CLASSIFICATION	2.226939226455076E-5	DESIGN
// line 504	WITHOUT_CLASSIFICATION	0.9999740444512144	WITHOUT_CLASSIFICATION	2.595554878551605E-5	DESIGN
// line 507	WITHOUT_CLASSIFICATION	0.9999754697309844	WITHOUT_CLASSIFICATION	2.453026901552484E-5	DESIGN
// line 510	WITHOUT_CLASSIFICATION	0.9999783849355761	WITHOUT_CLASSIFICATION	2.1615064423879987E-5	DESIGN
// line 519	WITHOUT_CLASSIFICATION	0.999975476123482	WITHOUT_CLASSIFICATION	2.452387651797529E-5	DESIGN
// line 525	WITHOUT_CLASSIFICATION	0.9999791103038259	WITHOUT_CLASSIFICATION	2.0889696174136137E-5	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999861116161614	WITHOUT_CLASSIFICATION	1.3888383838607884E-4	DESIGN
// line 537	WITHOUT_CLASSIFICATION	0.9999772962071097	WITHOUT_CLASSIFICATION	2.2703792890269703E-5	DESIGN
// line 540	WITHOUT_CLASSIFICATION	0.99997298128251	WITHOUT_CLASSIFICATION	2.701871748997537E-5	DESIGN
// line 543	WITHOUT_CLASSIFICATION	0.9999740670289591	WITHOUT_CLASSIFICATION	2.593297104092671E-5	DESIGN
// line 546	WITHOUT_CLASSIFICATION	0.9999680146695236	WITHOUT_CLASSIFICATION	3.198533047646398E-5	DESIGN
// line 556	WITHOUT_CLASSIFICATION	0.999967563933348	WITHOUT_CLASSIFICATION	3.2436066652036645E-5	DESIGN
// line 559	WITHOUT_CLASSIFICATION	0.9999647206917646	WITHOUT_CLASSIFICATION	3.527930823547085E-5	DESIGN
// line 563	WITHOUT_CLASSIFICATION	0.999973885444997	WITHOUT_CLASSIFICATION	2.6114555003057985E-5	DESIGN
// line 566	WITHOUT_CLASSIFICATION	0.9999675788647586	WITHOUT_CLASSIFICATION	3.24211352414711E-5	DESIGN
// line 569	WITHOUT_CLASSIFICATION	0.9999701176167302	WITHOUT_CLASSIFICATION	2.9882383269856183E-5	DESIGN
// line 575	WITHOUT_CLASSIFICATION	0.9999736999192722	WITHOUT_CLASSIFICATION	2.6300080727848386E-5	DESIGN
// line 578	WITHOUT_CLASSIFICATION	0.9999738910568169	WITHOUT_CLASSIFICATION	2.6108943183122846E-5	DESIGN
// line 587	WITHOUT_CLASSIFICATION	0.9999754975005603	WITHOUT_CLASSIFICATION	2.4502499439799525E-5	DESIGN
// line 596	WITHOUT_CLASSIFICATION	0.9999525739941233	WITHOUT_CLASSIFICATION	4.742600587663923E-5	DESIGN
// line 604	WITHOUT_CLASSIFICATION	0.9999778109286642	WITHOUT_CLASSIFICATION	2.218907133578459E-5	DESIGN
// line 607	WITHOUT_CLASSIFICATION	0.9999790651714237	WITHOUT_CLASSIFICATION	2.0934828576333084E-5	DESIGN
// line 610	WITHOUT_CLASSIFICATION	0.9999818670874359	WITHOUT_CLASSIFICATION	1.8132912564199115E-5	DESIGN
// line 613	WITHOUT_CLASSIFICATION	0.9999810797321859	WITHOUT_CLASSIFICATION	1.8920267814085414E-5	DESIGN
// line 616	WITHOUT_CLASSIFICATION	0.9999778916651054	WITHOUT_CLASSIFICATION	2.2108334894607985E-5	DESIGN
// line 634	WITHOUT_CLASSIFICATION	0.9999791414411918	WITHOUT_CLASSIFICATION	2.0858558808258248E-5	DESIGN
// line 638	WITHOUT_CLASSIFICATION	0.9999816998163572	WITHOUT_CLASSIFICATION	1.8300183642822507E-5	DESIGN
// line 643	WITHOUT_CLASSIFICATION	0.999980121220875	WITHOUT_CLASSIFICATION	1.9878779125015313E-5	DESIGN
// line 646	WITHOUT_CLASSIFICATION	0.9999735470151343	WITHOUT_CLASSIFICATION	2.6452984865750507E-5	DESIGN
// line 655	WITHOUT_CLASSIFICATION	0.9999762563842534	WITHOUT_CLASSIFICATION	2.3743615746615384E-5	DESIGN
// line 660	WITHOUT_CLASSIFICATION	0.9999779019944793	WITHOUT_CLASSIFICATION	2.2098005520776257E-5	DESIGN
// line 667	WITHOUT_CLASSIFICATION	0.9999769392507162	WITHOUT_CLASSIFICATION	2.3060749283731573E-5	DESIGN
// line 670	WITHOUT_CLASSIFICATION	0.9999798175510971	WITHOUT_CLASSIFICATION	2.0182448902885093E-5	DESIGN
// line 672	WITHOUT_CLASSIFICATION	0.9999834208102194	WITHOUT_CLASSIFICATION	1.6579189780613393E-5	DESIGN
// line 696	WITHOUT_CLASSIFICATION	0.9999685170214466	WITHOUT_CLASSIFICATION	3.148297855335876E-5	DESIGN
// line 701	WITHOUT_CLASSIFICATION	0.999981615367664	WITHOUT_CLASSIFICATION	1.8384632336041478E-5	DESIGN
// line 717	WITHOUT_CLASSIFICATION	0.9999792538692212	WITHOUT_CLASSIFICATION	2.074613077895922E-5	DESIGN
// line 720	WITHOUT_CLASSIFICATION	0.9999852786883405	WITHOUT_CLASSIFICATION	1.4721311659461481E-5	DESIGN
// line 726	WITHOUT_CLASSIFICATION	0.9999804785263144	WITHOUT_CLASSIFICATION	1.9521473685516994E-5	DESIGN
// line 729	WITHOUT_CLASSIFICATION	0.9999814478443787	WITHOUT_CLASSIFICATION	1.855215562128057E-5	DESIGN
// line 732	WITHOUT_CLASSIFICATION	0.9999846735594495	WITHOUT_CLASSIFICATION	1.5326440550457343E-5	DESIGN
// line 735	WITHOUT_CLASSIFICATION	0.999980088489475	WITHOUT_CLASSIFICATION	1.9911510525003287E-5	DESIGN
// line 738	WITHOUT_CLASSIFICATION	0.999982043177953	WITHOUT_CLASSIFICATION	1.7956822046959487E-5	DESIGN
// line 751	WITHOUT_CLASSIFICATION	0.9999799866530867	WITHOUT_CLASSIFICATION	2.001334691323306E-5	DESIGN
// line 754	WITHOUT_CLASSIFICATION	0.999975747148986	WITHOUT_CLASSIFICATION	2.4252851014036446E-5	DESIGN
// line 757	WITHOUT_CLASSIFICATION	0.9999756968671151	WITHOUT_CLASSIFICATION	2.430313288495678E-5	DESIGN
// line 760	WITHOUT_CLASSIFICATION	0.9999789573278786	WITHOUT_CLASSIFICATION	2.1042672121455523E-5	DESIGN
// line 763	WITHOUT_CLASSIFICATION	0.9999783842011598	WITHOUT_CLASSIFICATION	2.1615798840148025E-5	DESIGN
// line 769	WITHOUT_CLASSIFICATION	0.9999752654408691	WITHOUT_CLASSIFICATION	2.4734559130909054E-5	DESIGN
// line 772	WITHOUT_CLASSIFICATION	0.9999822713103527	WITHOUT_CLASSIFICATION	1.7728689647386626E-5	DESIGN
// line 775	WITHOUT_CLASSIFICATION	0.9999759516704766	WITHOUT_CLASSIFICATION	2.4048329523444427E-5	DESIGN
// line 782	WITHOUT_CLASSIFICATION	0.9999832285970813	WITHOUT_CLASSIFICATION	1.677140291871126E-5	DESIGN
// line 788	WITHOUT_CLASSIFICATION	0.999977270836692	WITHOUT_CLASSIFICATION	2.272916330807193E-5	DESIGN
// line 791	WITHOUT_CLASSIFICATION	0.9999783866705471	WITHOUT_CLASSIFICATION	2.16133294529544E-5	DESIGN
// line 794	WITHOUT_CLASSIFICATION	0.9999737905643693	WITHOUT_CLASSIFICATION	2.6209435630735826E-5	DESIGN
// line 797	WITHOUT_CLASSIFICATION	0.9999738123696409	WITHOUT_CLASSIFICATION	2.6187630359177547E-5	DESIGN
// line 803	WITHOUT_CLASSIFICATION	0.999979931273621	WITHOUT_CLASSIFICATION	2.0068726378993306E-5	DESIGN
// line 806	WITHOUT_CLASSIFICATION	0.9999690748510224	WITHOUT_CLASSIFICATION	3.092514897756871E-5	DESIGN
// line 809	WITHOUT_CLASSIFICATION	0.9999782957929033	WITHOUT_CLASSIFICATION	2.170420709660647E-5	DESIGN
// line 815	WITHOUT_CLASSIFICATION	0.9999815174590975	WITHOUT_CLASSIFICATION	1.848254090262419E-5	DESIGN
// line 818	WITHOUT_CLASSIFICATION	0.9999811969023369	WITHOUT_CLASSIFICATION	1.8803097663146094E-5	DESIGN
// line 821	WITHOUT_CLASSIFICATION	0.9999859046190909	WITHOUT_CLASSIFICATION	1.4095380909109623E-5	DESIGN
// line 824	WITHOUT_CLASSIFICATION	0.9999832453718343	WITHOUT_CLASSIFICATION	1.6754628165697843E-5	DESIGN
// line 830	WITHOUT_CLASSIFICATION	0.9999829917092695	WITHOUT_CLASSIFICATION	1.7008290730591007E-5	DESIGN
// line 833	WITHOUT_CLASSIFICATION	0.9999796358596711	WITHOUT_CLASSIFICATION	2.0364140328993976E-5	DESIGN
// line 836	WITHOUT_CLASSIFICATION	0.9999785178289342	WITHOUT_CLASSIFICATION	2.1482171065814294E-5	DESIGN
// line 839	WITHOUT_CLASSIFICATION	0.9999791911451557	WITHOUT_CLASSIFICATION	2.0808854844358614E-5	DESIGN
// line 842	WITHOUT_CLASSIFICATION	0.9999833113881385	WITHOUT_CLASSIFICATION	1.6688611861548834E-5	DESIGN
// line 848	WITHOUT_CLASSIFICATION	0.9999775522527324	WITHOUT_CLASSIFICATION	2.2447747267483095E-5	DESIGN
// line 852	WITHOUT_CLASSIFICATION	0.9999831786228567	WITHOUT_CLASSIFICATION	1.682137714327505E-5	DESIGN
// line 858	WITHOUT_CLASSIFICATION	0.999977103302024	WITHOUT_CLASSIFICATION	2.289669797599675E-5	DESIGN
// line 861	WITHOUT_CLASSIFICATION	0.9999817055734135	WITHOUT_CLASSIFICATION	1.8294426586542896E-5	DESIGN
// line 868	WITHOUT_CLASSIFICATION	0.9999776647019578	WITHOUT_CLASSIFICATION	2.233529804210085E-5	DESIGN
// line 871	WITHOUT_CLASSIFICATION	0.9999824338669259	WITHOUT_CLASSIFICATION	1.756613307417931E-5	DESIGN
// line 876	WITHOUT_CLASSIFICATION	0.9999761880609934	WITHOUT_CLASSIFICATION	2.381193900660846E-5	DESIGN
// line 879	WITHOUT_CLASSIFICATION	0.9999773060628614	WITHOUT_CLASSIFICATION	2.2693937138530088E-5	DESIGN
// line 883	WITHOUT_CLASSIFICATION	0.9999791796978347	WITHOUT_CLASSIFICATION	2.0820302165338643E-5	DESIGN
// line 893	WITHOUT_CLASSIFICATION	0.9999769083453011	WITHOUT_CLASSIFICATION	2.3091654698953667E-5	DESIGN
// line 896	WITHOUT_CLASSIFICATION	0.9999715998548243	WITHOUT_CLASSIFICATION	2.840014517568326E-5	DESIGN
// line 899	WITHOUT_CLASSIFICATION	0.9999759277290654	WITHOUT_CLASSIFICATION	2.407227093453596E-5	DESIGN
// line 903	WITHOUT_CLASSIFICATION	0.9999709766276468	WITHOUT_CLASSIFICATION	2.9023372353106535E-5	DESIGN
// line 907	WITHOUT_CLASSIFICATION	0.9999713258114518	WITHOUT_CLASSIFICATION	2.8674188548193928E-5	DESIGN
// line 915	WITHOUT_CLASSIFICATION	0.9999760636375328	WITHOUT_CLASSIFICATION	2.393636246725369E-5	DESIGN
// line 920	WITHOUT_CLASSIFICATION	0.9999812909338748	WITHOUT_CLASSIFICATION	1.870906612525258E-5	DESIGN
// line 923	WITHOUT_CLASSIFICATION	0.9999788242393121	WITHOUT_CLASSIFICATION	2.1175760688013416E-5	DESIGN
// line 926	WITHOUT_CLASSIFICATION	0.9999751862269184	WITHOUT_CLASSIFICATION	2.481377308163666E-5	DESIGN
// line 932	WITHOUT_CLASSIFICATION	0.9999810655905985	WITHOUT_CLASSIFICATION	1.893440940151936E-5	DESIGN
// line 936	WITHOUT_CLASSIFICATION	0.9999717627695054	WITHOUT_CLASSIFICATION	2.8237230494635708E-5	DESIGN
// line 940	WITHOUT_CLASSIFICATION	0.9999725620396714	WITHOUT_CLASSIFICATION	2.7437960328539324E-5	DESIGN
// line 944	WITHOUT_CLASSIFICATION	0.9999706410835579	WITHOUT_CLASSIFICATION	2.9358916442118884E-5	DESIGN
// line 948	WITHOUT_CLASSIFICATION	0.9999734992456358	WITHOUT_CLASSIFICATION	2.650075436426407E-5	DESIGN
// line 956	WITHOUT_CLASSIFICATION	0.9999668025369143	WITHOUT_CLASSIFICATION	3.3197463085622584E-5	DESIGN
// line 960	WITHOUT_CLASSIFICATION	0.9999734591242878	WITHOUT_CLASSIFICATION	2.6540875712185174E-5	DESIGN
// line 964	WITHOUT_CLASSIFICATION	0.9999720045499173	WITHOUT_CLASSIFICATION	2.7995450082715183E-5	DESIGN
// line 967	WITHOUT_CLASSIFICATION	0.9999723028233694	WITHOUT_CLASSIFICATION	2.7697176630756363E-5	DESIGN
// line 972	WITHOUT_CLASSIFICATION	0.9999799988887806	WITHOUT_CLASSIFICATION	2.000111121933541E-5	DESIGN
// line 978	WITHOUT_CLASSIFICATION	0.9999735627994804	WITHOUT_CLASSIFICATION	2.6437200519546078E-5	DESIGN
// line 980	WITHOUT_CLASSIFICATION	0.9999754658694372	WITHOUT_CLASSIFICATION	2.4534130562778494E-5	DESIGN
// line 984	WITHOUT_CLASSIFICATION	0.9999735346524598	WITHOUT_CLASSIFICATION	2.6465347540236473E-5	DESIGN
// line 986	WITHOUT_CLASSIFICATION	0.999970291246972	WITHOUT_CLASSIFICATION	2.9708753028004922E-5	DESIGN
// line 996	WITHOUT_CLASSIFICATION	0.9999668064482445	WITHOUT_CLASSIFICATION	3.319355175556113E-5	DESIGN
// line 1001	WITHOUT_CLASSIFICATION	0.9999831143442348	WITHOUT_CLASSIFICATION	1.6885655765249338E-5	DESIGN
// line 1004	WITHOUT_CLASSIFICATION	0.999983466115993	WITHOUT_CLASSIFICATION	1.65338840069664E-5	DESIGN
// line 1008	WITHOUT_CLASSIFICATION	0.9999848056921453	WITHOUT_CLASSIFICATION	1.5194307854745379E-5	DESIGN
// line 1014	WITHOUT_CLASSIFICATION	0.9999808544336628	WITHOUT_CLASSIFICATION	1.9145566337267807E-5	DESIGN
// line 1029	WITHOUT_CLASSIFICATION	0.9999860215224408	WITHOUT_CLASSIFICATION	1.3978477559239558E-5	DESIGN
// line 1032	WITHOUT_CLASSIFICATION	0.9999878575327799	WITHOUT_CLASSIFICATION	1.2142467220083738E-5	DESIGN
// line 1034	WITHOUT_CLASSIFICATION	0.9999837964808845	WITHOUT_CLASSIFICATION	1.6203519115424302E-5	DESIGN
// line 1045	WITHOUT_CLASSIFICATION	0.9999825401888902	WITHOUT_CLASSIFICATION	1.745981110976025E-5	DESIGN
// line 1048	WITHOUT_CLASSIFICATION	0.9999835742599629	WITHOUT_CLASSIFICATION	1.642574003706656E-5	DESIGN
// line 1051	WITHOUT_CLASSIFICATION	0.999981555182705	WITHOUT_CLASSIFICATION	1.8444817294959125E-5	DESIGN
// line 1058	WITHOUT_CLASSIFICATION	0.9999830459115266	WITHOUT_CLASSIFICATION	1.6954088473265678E-5	DESIGN
// line 1070	WITHOUT_CLASSIFICATION	0.9999833883541037	WITHOUT_CLASSIFICATION	1.6611645896285726E-5	DESIGN
// line 1073	WITHOUT_CLASSIFICATION	0.9999839048883101	WITHOUT_CLASSIFICATION	1.609511168994816E-5	DESIGN
// line 1076	WITHOUT_CLASSIFICATION	0.9999806175279199	WITHOUT_CLASSIFICATION	1.9382472080029878E-5	DESIGN
// line 1079	WITHOUT_CLASSIFICATION	0.9999815297765882	WITHOUT_CLASSIFICATION	1.8470223411798966E-5	DESIGN
// line 1082	WITHOUT_CLASSIFICATION	0.999987584453843	WITHOUT_CLASSIFICATION	1.2415546157118822E-5	DESIGN
// line 1089	WITHOUT_CLASSIFICATION	0.9999821622668469	WITHOUT_CLASSIFICATION	1.7837733153174207E-5	DESIGN
// line 1097	WITHOUT_CLASSIFICATION	0.9999816621040241	WITHOUT_CLASSIFICATION	1.833789597589943E-5	DESIGN
// line 1100	WITHOUT_CLASSIFICATION	0.9999843794686036	WITHOUT_CLASSIFICATION	1.5620531396368633E-5	DESIGN
// line 1103	WITHOUT_CLASSIFICATION	0.9999832456072342	WITHOUT_CLASSIFICATION	1.6754392765824888E-5	DESIGN
// line 1107	WITHOUT_CLASSIFICATION	0.999983422094769	WITHOUT_CLASSIFICATION	1.65779052310643E-5	DESIGN
// line 1111	WITHOUT_CLASSIFICATION	0.9999805414056471	WITHOUT_CLASSIFICATION	1.945859435290546E-5	DESIGN
// line 1113	WITHOUT_CLASSIFICATION	0.9999818055689816	WITHOUT_CLASSIFICATION	1.8194431018440396E-5	DESIGN
// line 1115	WITHOUT_CLASSIFICATION	0.9999809828073404	WITHOUT_CLASSIFICATION	1.9017192659686772E-5	DESIGN
// line 1119	WITHOUT_CLASSIFICATION	0.9999802110149635	WITHOUT_CLASSIFICATION	1.9788985036459458E-5	DESIGN
// line 1130	WITHOUT_CLASSIFICATION	0.9999851348566857	WITHOUT_CLASSIFICATION	1.4865143314389013E-5	DESIGN
// line 1133	WITHOUT_CLASSIFICATION	0.9999821875329261	WITHOUT_CLASSIFICATION	1.781246707392648E-5	DESIGN
// line 1135	WITHOUT_CLASSIFICATION	0.9999836352801202	WITHOUT_CLASSIFICATION	1.636471987970941E-5	DESIGN
// line 1137	WITHOUT_CLASSIFICATION	0.9999844726548361	WITHOUT_CLASSIFICATION	1.5527345163821714E-5	DESIGN
// line 1140	WITHOUT_CLASSIFICATION	0.9999817082079887	WITHOUT_CLASSIFICATION	1.8291792011269954E-5	DESIGN
// line 1151	WITHOUT_CLASSIFICATION	0.9999802169606052	WITHOUT_CLASSIFICATION	1.978303939472656E-5	DESIGN
// line 1154	WITHOUT_CLASSIFICATION	0.9999800211604181	WITHOUT_CLASSIFICATION	1.9978839581919806E-5	DESIGN
// line 1158	WITHOUT_CLASSIFICATION	0.9999817941302052	WITHOUT_CLASSIFICATION	1.82058697948435E-5	DESIGN
// line 1164	WITHOUT_CLASSIFICATION	0.9999848938015431	WITHOUT_CLASSIFICATION	1.510619845689274E-5	DESIGN
// line 1175	WITHOUT_CLASSIFICATION	0.9999814349001206	WITHOUT_CLASSIFICATION	1.8565099879459984E-5	DESIGN
// line 1178	WITHOUT_CLASSIFICATION	0.9999817491447937	WITHOUT_CLASSIFICATION	1.8250855206288737E-5	DESIGN
// line 1187	WITHOUT_CLASSIFICATION	0.9999837287183971	WITHOUT_CLASSIFICATION	1.6271281602793873E-5	DESIGN
// line 1189	WITHOUT_CLASSIFICATION	0.9999813807027242	WITHOUT_CLASSIFICATION	1.861929727571584E-5	DESIGN
// line 1193	WITHOUT_CLASSIFICATION	0.9999806394422849	WITHOUT_CLASSIFICATION	1.9360557715198288E-5	DESIGN
// line 1204	WITHOUT_CLASSIFICATION	0.9999872496650352	WITHOUT_CLASSIFICATION	1.2750334964825115E-5	DESIGN
// line 1207	WITHOUT_CLASSIFICATION	0.9999879639990742	WITHOUT_CLASSIFICATION	1.2036000925794117E-5	DESIGN
// line 1210	WITHOUT_CLASSIFICATION	0.999986649720105	WITHOUT_CLASSIFICATION	1.3350279895098581E-5	DESIGN
// line 1214	WITHOUT_CLASSIFICATION	0.9999849580184041	WITHOUT_CLASSIFICATION	1.5041981595718884E-5	DESIGN
// line 1234	WITHOUT_CLASSIFICATION	0.9999868102524718	WITHOUT_CLASSIFICATION	1.3189747528178218E-5	DESIGN
// line 1239	WITHOUT_CLASSIFICATION	0.9999853131267369	WITHOUT_CLASSIFICATION	1.4686873263215618E-5	DESIGN
// line 1243	WITHOUT_CLASSIFICATION	0.9999869079266328	WITHOUT_CLASSIFICATION	1.3092073367276926E-5	DESIGN
// line 1247	WITHOUT_CLASSIFICATION	0.9999862123291802	WITHOUT_CLASSIFICATION	1.3787670819952756E-5	DESIGN
// line 1251	WITHOUT_CLASSIFICATION	0.9999850224588684	WITHOUT_CLASSIFICATION	1.49775411316008E-5	DESIGN
// line 1263	WITHOUT_CLASSIFICATION	0.9999864232979717	WITHOUT_CLASSIFICATION	1.3576702028224116E-5	DESIGN
// line 1269	WITHOUT_CLASSIFICATION	0.9999844644127602	WITHOUT_CLASSIFICATION	1.553558723969197E-5	DESIGN
// line 1280	WITHOUT_CLASSIFICATION	0.9999876257763867	WITHOUT_CLASSIFICATION	1.237422361333464E-5	DESIGN
// line 1283	WITHOUT_CLASSIFICATION	0.9999877014246605	WITHOUT_CLASSIFICATION	1.2298575339529285E-5	DESIGN
// line 1290	WITHOUT_CLASSIFICATION	0.9999832409692145	WITHOUT_CLASSIFICATION	1.6759030785500454E-5	DESIGN
// line 1296	WITHOUT_CLASSIFICATION	0.9999812575509506	WITHOUT_CLASSIFICATION	1.8742449049432395E-5	DESIGN
// line 1299	WITHOUT_CLASSIFICATION	0.9999841137203813	WITHOUT_CLASSIFICATION	1.5886279618690524E-5	DESIGN
// line 1302	WITHOUT_CLASSIFICATION	0.9999889204957629	WITHOUT_CLASSIFICATION	1.1079504237108565E-5	DESIGN
// line 1309	WITHOUT_CLASSIFICATION	0.9999837840368048	WITHOUT_CLASSIFICATION	1.6215963195191124E-5	DESIGN
// line 1313	WITHOUT_CLASSIFICATION	0.9999808258403216	WITHOUT_CLASSIFICATION	1.9174159678378945E-5	DESIGN
// line 1315	WITHOUT_CLASSIFICATION	0.9999829586433763	WITHOUT_CLASSIFICATION	1.7041356623633044E-5	DESIGN
// line 1320	WITHOUT_CLASSIFICATION	0.9999886473735796	WITHOUT_CLASSIFICATION	1.135262642038039E-5	DESIGN
// line 1328	WITHOUT_CLASSIFICATION	0.9999878420702214	WITHOUT_CLASSIFICATION	1.2157929778649523E-5	DESIGN
// line 1335	WITHOUT_CLASSIFICATION	0.9999830575374744	WITHOUT_CLASSIFICATION	1.694246252567894E-5	DESIGN
// line 1348	WITHOUT_CLASSIFICATION	0.999984166946868	WITHOUT_CLASSIFICATION	1.583305313205152E-5	DESIGN
// line 1352	WITHOUT_CLASSIFICATION	0.9999866996748229	WITHOUT_CLASSIFICATION	1.330032517709083E-5	DESIGN
// line 1358	WITHOUT_CLASSIFICATION	0.9999836116824804	WITHOUT_CLASSIFICATION	1.6388317519616688E-5	DESIGN
// line 1374	WITHOUT_CLASSIFICATION	0.9999836467719233	WITHOUT_CLASSIFICATION	1.6353228076734014E-5	DESIGN
// line 1381	WITHOUT_CLASSIFICATION	0.9999847063244124	WITHOUT_CLASSIFICATION	1.5293675587642257E-5	DESIGN
// line 1387	WITHOUT_CLASSIFICATION	0.9999856823064289	WITHOUT_CLASSIFICATION	1.431769357114087E-5	DESIGN
// line 1392	WITHOUT_CLASSIFICATION	0.9999854684864352	WITHOUT_CLASSIFICATION	1.4531513564799755E-5	DESIGN
// line 1415	WITHOUT_CLASSIFICATION	0.9999799364655945	WITHOUT_CLASSIFICATION	2.0063534405589816E-5	DESIGN
// line 1431	WITHOUT_CLASSIFICATION	0.9999833095009292	WITHOUT_CLASSIFICATION	1.6690499070860875E-5	DESIGN
// line 1434	WITHOUT_CLASSIFICATION	0.9999829258851693	WITHOUT_CLASSIFICATION	1.707411483061465E-5	DESIGN
// line 1440	WITHOUT_CLASSIFICATION	0.99998092410767	WITHOUT_CLASSIFICATION	1.907589233004643E-5	DESIGN
// line 1443	WITHOUT_CLASSIFICATION	0.9999816732310836	WITHOUT_CLASSIFICATION	1.8326768916472828E-5	DESIGN
// line 1453	WITHOUT_CLASSIFICATION	0.9999812022662729	WITHOUT_CLASSIFICATION	1.8797733727185115E-5	DESIGN
// line 1456	WITHOUT_CLASSIFICATION	0.9999770295417411	WITHOUT_CLASSIFICATION	2.2970458258979105E-5	DESIGN
// line 1462	WITHOUT_CLASSIFICATION	0.9999853811182661	WITHOUT_CLASSIFICATION	1.4618881733848418E-5	DESIGN
// line 1465	WITHOUT_CLASSIFICATION	0.9999807910878759	WITHOUT_CLASSIFICATION	1.920891212412478E-5	DESIGN
// line 1470	WITHOUT_CLASSIFICATION	0.9999829656010167	WITHOUT_CLASSIFICATION	1.7034398983303583E-5	DESIGN
// line 1477	WITHOUT_CLASSIFICATION	0.9999798411534372	WITHOUT_CLASSIFICATION	2.0158846562788484E-5	DESIGN
// line 1480	WITHOUT_CLASSIFICATION	0.9999829403589849	WITHOUT_CLASSIFICATION	1.705964101505147E-5	DESIGN
// line 1485	WITHOUT_CLASSIFICATION	0.9999823886768459	WITHOUT_CLASSIFICATION	1.7611323154148024E-5	DESIGN
// line 1488	WITHOUT_CLASSIFICATION	0.9999814838561581	WITHOUT_CLASSIFICATION	1.8516143841879194E-5	DESIGN
// line 1496	WITHOUT_CLASSIFICATION	0.9999742417193295	WITHOUT_CLASSIFICATION	2.5758280670492357E-5	DESIGN
// line 1502	WITHOUT_CLASSIFICATION	0.999986829933256	WITHOUT_CLASSIFICATION	1.3170066743822741E-5	DESIGN
// line 1510	WITHOUT_CLASSIFICATION	0.9999813307158425	WITHOUT_CLASSIFICATION	1.866928415743296E-5	DESIGN
// line 1513	WITHOUT_CLASSIFICATION	0.9999805200710764	WITHOUT_CLASSIFICATION	1.947992892363452E-5	DESIGN
// line 1516	WITHOUT_CLASSIFICATION	0.9999780143464652	WITHOUT_CLASSIFICATION	2.1985653534900225E-5	DESIGN
// line 1533	WITHOUT_CLASSIFICATION	0.9999812463165754	WITHOUT_CLASSIFICATION	1.8753683424532784E-5	DESIGN
// line 1550	WITHOUT_CLASSIFICATION	0.9999813713224416	WITHOUT_CLASSIFICATION	1.8628677558344356E-5	DESIGN
// line 1553	WITHOUT_CLASSIFICATION	0.9999807091365592	WITHOUT_CLASSIFICATION	1.92908634408189E-5	DESIGN
// line 1556	WITHOUT_CLASSIFICATION	0.9999766376083036	WITHOUT_CLASSIFICATION	2.3362391696480505E-5	DESIGN
// line 1565	WITHOUT_CLASSIFICATION	0.9999805282007082	WITHOUT_CLASSIFICATION	1.9471799291854895E-5	DESIGN
// line 1568	WITHOUT_CLASSIFICATION	0.9999815055479266	WITHOUT_CLASSIFICATION	1.849445207337273E-5	DESIGN
// line 1571	WITHOUT_CLASSIFICATION	0.9999804605507553	WITHOUT_CLASSIFICATION	1.9539449244734732E-5	DESIGN
// line 1574	WITHOUT_CLASSIFICATION	0.9999802235920573	WITHOUT_CLASSIFICATION	1.97764079426572E-5	DESIGN
// line 1577	WITHOUT_CLASSIFICATION	0.9999795183817777	WITHOUT_CLASSIFICATION	2.0481618222311833E-5	DESIGN
// line 1587	WITHOUT_CLASSIFICATION	0.9999823620872169	WITHOUT_CLASSIFICATION	1.7637912783092716E-5	DESIGN
// line 1595	WITHOUT_CLASSIFICATION	0.999975159508775	WITHOUT_CLASSIFICATION	2.4840491224946295E-5	DESIGN
// line 1598	WITHOUT_CLASSIFICATION	0.9999763570468652	WITHOUT_CLASSIFICATION	2.364295313484614E-5	DESIGN
// line 1600	WITHOUT_CLASSIFICATION	0.9999847240533316	WITHOUT_CLASSIFICATION	1.5275946668347976E-5	DESIGN
// line 1609	WITHOUT_CLASSIFICATION	0.9999824936194168	WITHOUT_CLASSIFICATION	1.7506380583151434E-5	DESIGN
// line 1623	WITHOUT_CLASSIFICATION	0.9999866623192563	WITHOUT_CLASSIFICATION	1.3337680743634319E-5	DESIGN
// line 1626	WITHOUT_CLASSIFICATION	0.9999838215720429	WITHOUT_CLASSIFICATION	1.6178427957101892E-5	DESIGN
// line 1629	WITHOUT_CLASSIFICATION	0.9999851835321935	WITHOUT_CLASSIFICATION	1.4816467806659477E-5	DESIGN
// line 1632	WITHOUT_CLASSIFICATION	0.9999880653823022	WITHOUT_CLASSIFICATION	1.1934617697726491E-5	DESIGN
// line 1638	WITHOUT_CLASSIFICATION	0.9999860209480346	WITHOUT_CLASSIFICATION	1.3979051965440051E-5	DESIGN
// line 1641	WITHOUT_CLASSIFICATION	0.9999831988338582	WITHOUT_CLASSIFICATION	1.680116614179288E-5	DESIGN
// line 1644	WITHOUT_CLASSIFICATION	0.9999831698572643	WITHOUT_CLASSIFICATION	1.6830142735677004E-5	DESIGN
// line 1649	WITHOUT_CLASSIFICATION	0.9999819601305746	WITHOUT_CLASSIFICATION	1.8039869425359894E-5	DESIGN
// line 1655	WITHOUT_CLASSIFICATION	0.9999818753141564	WITHOUT_CLASSIFICATION	1.8124685843623238E-5	DESIGN
// line 1658	WITHOUT_CLASSIFICATION	0.999982770790375	WITHOUT_CLASSIFICATION	1.722920962505055E-5	DESIGN
// line 1661	WITHOUT_CLASSIFICATION	0.9999814910093635	WITHOUT_CLASSIFICATION	1.850899063646342E-5	DESIGN
// line 1672	WITHOUT_CLASSIFICATION	0.9999873533089623	WITHOUT_CLASSIFICATION	1.2646691037674778E-5	DESIGN
// line 1677	WITHOUT_CLASSIFICATION	0.9999817809036181	WITHOUT_CLASSIFICATION	1.8219096381804172E-5	DESIGN
// line 1687	WITHOUT_CLASSIFICATION	0.9999843020311915	WITHOUT_CLASSIFICATION	1.5697968808479098E-5	DESIGN
// line 1694	WITHOUT_CLASSIFICATION	0.9999796867615567	WITHOUT_CLASSIFICATION	2.0313238443345824E-5	DESIGN
// line 1705	WITHOUT_CLASSIFICATION	0.9999817086571172	WITHOUT_CLASSIFICATION	1.829134288284559E-5	DESIGN
// line 1708	WITHOUT_CLASSIFICATION	0.999982706976071	WITHOUT_CLASSIFICATION	1.729302392910838E-5	DESIGN
// line 1725	WITHOUT_CLASSIFICATION	0.9999851877164679	WITHOUT_CLASSIFICATION	1.4812283532088402E-5	DESIGN
// line 1733	WITHOUT_CLASSIFICATION	0.9999809859256096	WITHOUT_CLASSIFICATION	1.9014074390422673E-5	DESIGN
// line 1742	WITHOUT_CLASSIFICATION	0.9999845071621608	WITHOUT_CLASSIFICATION	1.549283783918105E-5	DESIGN
// line 1745	WITHOUT_CLASSIFICATION	0.9999799285122004	WITHOUT_CLASSIFICATION	2.0071487799532448E-5	DESIGN
// line 1749	WITHOUT_CLASSIFICATION	0.9999777176006608	WITHOUT_CLASSIFICATION	2.2282399339249857E-5	DESIGN
// line 1757	WITHOUT_CLASSIFICATION	0.9999786800412497	WITHOUT_CLASSIFICATION	2.131995875035372E-5	DESIGN
// line 1769	WITHOUT_CLASSIFICATION	0.9999783015707975	WITHOUT_CLASSIFICATION	2.169842920262198E-5	DESIGN
// line 1772	WITHOUT_CLASSIFICATION	0.9999834135246474	WITHOUT_CLASSIFICATION	1.6586475352602204E-5	DESIGN
// line 1775	WITHOUT_CLASSIFICATION	0.9999772837271146	WITHOUT_CLASSIFICATION	2.2716272885481817E-5	DESIGN
// line 1784	WITHOUT_CLASSIFICATION	0.9999802164332845	WITHOUT_CLASSIFICATION	1.9783566715572748E-5	DESIGN
// line 1808	WITHOUT_CLASSIFICATION	0.9999830008787943	WITHOUT_CLASSIFICATION	1.699912120573747E-5	DESIGN
// line 1814	WITHOUT_CLASSIFICATION	0.9999818475426369	WITHOUT_CLASSIFICATION	1.8152457363056876E-5	DESIGN
// line 1818	WITHOUT_CLASSIFICATION	0.9999816930579039	WITHOUT_CLASSIFICATION	1.830694209609653E-5	DESIGN
// line 1822	WITHOUT_CLASSIFICATION	0.9999873439441836	WITHOUT_CLASSIFICATION	1.2656055816275737E-5	DESIGN
/* force for args */	WITHOUT_CLASSIFICATION	0.9999986034618249	WITHOUT_CLASSIFICATION	1.3965381750525298E-6	DESIGN
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9937228567166837	WITHOUT_CLASSIFICATION	0.0062771432833162765	DESIGN
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9999796463777842	WITHOUT_CLASSIFICATION	2.035362221575978E-5	DESIGN
/*                  }*/	WITHOUT_CLASSIFICATION	0.9999279070462469	WITHOUT_CLASSIFICATION	7.209295375314048E-5	DESIGN
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999838102707489	WITHOUT_CLASSIFICATION	1.618972925110414E-5	DESIGN
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999984228082548	WITHOUT_CLASSIFICATION	1.5771917451531666E-6	DESIGN
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9999447104170446	WITHOUT_CLASSIFICATION	5.528958295546344E-5	DESIGN
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9999374107635575	WITHOUT_CLASSIFICATION	6.258923644251488E-5	DESIGN
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.999977276841312	WITHOUT_CLASSIFICATION	2.2723158687947398E-5	DESIGN
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9999361290657927	WITHOUT_CLASSIFICATION	6.387093420728533E-5	DESIGN
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9999965304815606	WITHOUT_CLASSIFICATION	3.4695184395272984E-6	DESIGN
// line 529	WITHOUT_CLASSIFICATION	0.9999767092137049	WITHOUT_CLASSIFICATION	2.3290786295221606E-5	DESIGN
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999781162003453	WITHOUT_CLASSIFICATION	2.188379965480511E-5	DESIGN
/* XXX*/	WITHOUT_CLASSIFICATION	0.9970512302171864	WITHOUT_CLASSIFICATION	0.0029487697828135813	DESIGN
/* zero length array */	WITHOUT_CLASSIFICATION	0.99998323751482	WITHOUT_CLASSIFICATION	1.676248517994371E-5	DESIGN
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999989695454041	WITHOUT_CLASSIFICATION	1.0304545959239049E-6	DESIGN
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999665763169715	WITHOUT_CLASSIFICATION	3.342368302850377E-5	DESIGN
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999986759803603	WITHOUT_CLASSIFICATION	1.3240196396574512E-6	DESIGN
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999990758373304	WITHOUT_CLASSIFICATION	9.241626696721562E-7	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999976769222565	WITHOUT_CLASSIFICATION	2.323077743509728E-5	DESIGN
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999803412790699	WITHOUT_CLASSIFICATION	1.9658720930134062E-5	DESIGN
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999932545369583	WITHOUT_CLASSIFICATION	6.745463041606306E-6	DESIGN
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999737543084	WITHOUT_CLASSIFICATION	2.624569159994785E-5	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9998551519091997	WITHOUT_CLASSIFICATION	1.4484809080032558E-4	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9998551519091997	WITHOUT_CLASSIFICATION	1.4484809080032558E-4	DESIGN
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9901892082156664	WITHOUT_CLASSIFICATION	0.009810791784333637	DESIGN
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9525640039089874	WITHOUT_CLASSIFICATION	0.047435996091012594	DESIGN
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9963346323407193	WITHOUT_CLASSIFICATION	0.0036653676592807703	DESIGN
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.5767538480607459	WITHOUT_CLASSIFICATION	0.42324615193925413	DESIGN
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9992507551882653	WITHOUT_CLASSIFICATION	7.492448117346321E-4	DESIGN
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.999998017960077	WITHOUT_CLASSIFICATION	1.982039923065722E-6	DESIGN
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999989756557751	WITHOUT_CLASSIFICATION	1.0243442248850721E-6	DESIGN
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999998689141996	WITHOUT_CLASSIFICATION	1.3108580054070642E-7	DESIGN
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9903076571511576	WITHOUT_CLASSIFICATION	0.009692342848842331	DESIGN
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999995193096709	WITHOUT_CLASSIFICATION	4.806903290914248E-7	DESIGN
// Parser states:	WITHOUT_CLASSIFICATION	0.9999963175045368	WITHOUT_CLASSIFICATION	3.6824954630755914E-6	DESIGN
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9999691176946574	WITHOUT_CLASSIFICATION	3.0882305342583906E-5	DESIGN
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9999996303865192	WITHOUT_CLASSIFICATION	3.6961348093119807E-7	DESIGN
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9999724112846652	WITHOUT_CLASSIFICATION	2.758871533480671E-5	DESIGN
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999844468243597	WITHOUT_CLASSIFICATION	1.5553175640269793E-5	DESIGN
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999870797957043	WITHOUT_CLASSIFICATION	1.2920204295777306E-5	DESIGN
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999932032483089	WITHOUT_CLASSIFICATION	6.796751691141351E-6	DESIGN
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9999427210442707	WITHOUT_CLASSIFICATION	5.7278955729289095E-5	DESIGN
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9996828181758517	WITHOUT_CLASSIFICATION	3.1718182414825635E-4	DESIGN
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9999847585726437	WITHOUT_CLASSIFICATION	1.5241427356187051E-5	DESIGN
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999657942214929	WITHOUT_CLASSIFICATION	3.4205778507188594E-5	DESIGN
// Node	WITHOUT_CLASSIFICATION	0.9999787447204102	WITHOUT_CLASSIFICATION	2.1255279589925605E-5	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.8695648240035383	WITHOUT_CLASSIFICATION	0.13043517599646176	DESIGN
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9994025778506355	WITHOUT_CLASSIFICATION	5.974221493645509E-4	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.8695648240035383	WITHOUT_CLASSIFICATION	0.13043517599646176	DESIGN
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9985776185303136	WITHOUT_CLASSIFICATION	0.0014223814696863793	DESIGN
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9998150833702036	WITHOUT_CLASSIFICATION	1.8491662979632913E-4	DESIGN
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9990140438564346	WITHOUT_CLASSIFICATION	9.859561435654309E-4	DESIGN
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999744067064184	WITHOUT_CLASSIFICATION	2.5593293581711598E-5	DESIGN
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999959646032528	WITHOUT_CLASSIFICATION	4.035396747216892E-6	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9999614040079554	WITHOUT_CLASSIFICATION	3.8595992044616294E-5	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9999614040079554	WITHOUT_CLASSIFICATION	3.8595992044616294E-5	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9999614040079554	WITHOUT_CLASSIFICATION	3.8595992044616294E-5	DESIGN
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9999996061580322	WITHOUT_CLASSIFICATION	3.9384196775269367E-7	DESIGN
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9995604248277966	WITHOUT_CLASSIFICATION	4.3957517220340295E-4	DESIGN
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9991561155373331	WITHOUT_CLASSIFICATION	8.438844626669557E-4	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999081096647103	WITHOUT_CLASSIFICATION	9.189033528968205E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999081096647103	WITHOUT_CLASSIFICATION	9.189033528968205E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999081096647103	WITHOUT_CLASSIFICATION	9.189033528968205E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999081096647103	WITHOUT_CLASSIFICATION	9.189033528968205E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999081096647103	WITHOUT_CLASSIFICATION	9.189033528968205E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999081096647103	WITHOUT_CLASSIFICATION	9.189033528968205E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999550352974934	WITHOUT_CLASSIFICATION	4.4964702506636866E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999550352974934	WITHOUT_CLASSIFICATION	4.4964702506636866E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999550352974934	WITHOUT_CLASSIFICATION	4.4964702506636866E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999550352974934	WITHOUT_CLASSIFICATION	4.4964702506636866E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999550352974934	WITHOUT_CLASSIFICATION	4.4964702506636866E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998312417912719	WITHOUT_CLASSIFICATION	1.6875820872815021E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998312417912719	WITHOUT_CLASSIFICATION	1.6875820872815021E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998312417912719	WITHOUT_CLASSIFICATION	1.6875820872815021E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998312417912719	WITHOUT_CLASSIFICATION	1.6875820872815021E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998312417912719	WITHOUT_CLASSIFICATION	1.6875820872815021E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9997613553153273	WITHOUT_CLASSIFICATION	2.386446846728069E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9997613553153273	WITHOUT_CLASSIFICATION	2.386446846728069E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9997613553153273	WITHOUT_CLASSIFICATION	2.386446846728069E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9997613553153273	WITHOUT_CLASSIFICATION	2.386446846728069E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9997613553153273	WITHOUT_CLASSIFICATION	2.386446846728069E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9997613553153273	WITHOUT_CLASSIFICATION	2.386446846728069E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9997729161059041	WITHOUT_CLASSIFICATION	2.270838940959008E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9997729161059041	WITHOUT_CLASSIFICATION	2.270838940959008E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9997729161059041	WITHOUT_CLASSIFICATION	2.270838940959008E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9997729161059041	WITHOUT_CLASSIFICATION	2.270838940959008E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9997729161059041	WITHOUT_CLASSIFICATION	2.270838940959008E-4	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999785732394159	WITHOUT_CLASSIFICATION	2.1426760584089942E-4	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999785732394159	WITHOUT_CLASSIFICATION	2.1426760584089942E-4	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999785732394159	WITHOUT_CLASSIFICATION	2.1426760584089942E-4	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999785732394159	WITHOUT_CLASSIFICATION	2.1426760584089942E-4	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999785732394159	WITHOUT_CLASSIFICATION	2.1426760584089942E-4	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999861116161614	WITHOUT_CLASSIFICATION	1.3888383838607884E-4	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999861116161614	WITHOUT_CLASSIFICATION	1.3888383838607884E-4	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999861116161614	WITHOUT_CLASSIFICATION	1.3888383838607884E-4	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999861116161614	WITHOUT_CLASSIFICATION	1.3888383838607884E-4	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999861116161614	WITHOUT_CLASSIFICATION	1.3888383838607884E-4	DESIGN
// dynamically increase	WITHOUT_CLASSIFICATION	0.9995597445549854	WITHOUT_CLASSIFICATION	4.402554450145271E-4	DESIGN
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999944938020321	WITHOUT_CLASSIFICATION	5.506197967916818E-6	DESIGN
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999711702083457	WITHOUT_CLASSIFICATION	2.882979165434004E-5	DESIGN
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999385871671385	WITHOUT_CLASSIFICATION	6.141283286151055E-5	DESIGN
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999855786533512	WITHOUT_CLASSIFICATION	1.4421346648858643E-5	DESIGN
// line 321	WITHOUT_CLASSIFICATION	0.9999866573710017	WITHOUT_CLASSIFICATION	1.334262899822375E-5	DESIGN
// line 351	WITHOUT_CLASSIFICATION	0.9999827046136347	WITHOUT_CLASSIFICATION	1.7295386365226514E-5	DESIGN
// line 382	WITHOUT_CLASSIFICATION	0.9999869373620538	WITHOUT_CLASSIFICATION	1.3062637946151075E-5	DESIGN
// line 417	WITHOUT_CLASSIFICATION	0.9999778241946928	WITHOUT_CLASSIFICATION	2.2175805307163253E-5	DESIGN
// line 420	WITHOUT_CLASSIFICATION	0.9999827124208438	WITHOUT_CLASSIFICATION	1.7287579156239194E-5	DESIGN
// line 423	WITHOUT_CLASSIFICATION	0.9999804207654553	WITHOUT_CLASSIFICATION	1.9579234544562368E-5	DESIGN
// line 426	WITHOUT_CLASSIFICATION	0.9999770610018965	WITHOUT_CLASSIFICATION	2.2938998103385873E-5	DESIGN
// line 280	WITHOUT_CLASSIFICATION	0.9999862550031372	WITHOUT_CLASSIFICATION	1.3744996862688503E-5	DESIGN
// line 283	WITHOUT_CLASSIFICATION	0.999986339031348	WITHOUT_CLASSIFICATION	1.3660968651949837E-5	DESIGN
// line 296	WITHOUT_CLASSIFICATION	0.9999791012178633	WITHOUT_CLASSIFICATION	2.089878213677983E-5	DESIGN
// line 324	WITHOUT_CLASSIFICATION	0.9999841401363463	WITHOUT_CLASSIFICATION	1.585986365374515E-5	DESIGN
// line 327	WITHOUT_CLASSIFICATION	0.999985032252635	WITHOUT_CLASSIFICATION	1.4967747365081826E-5	DESIGN
// line 331	WITHOUT_CLASSIFICATION	0.9999836791982847	WITHOUT_CLASSIFICATION	1.6320801715273836E-5	DESIGN
// line 333	WITHOUT_CLASSIFICATION	0.9999784663966301	WITHOUT_CLASSIFICATION	2.153360336994051E-5	DESIGN
// line 336	WITHOUT_CLASSIFICATION	0.999977725479132	WITHOUT_CLASSIFICATION	2.2274520868021058E-5	DESIGN
// line 342	WITHOUT_CLASSIFICATION	0.9999848478836862	WITHOUT_CLASSIFICATION	1.515211631369186E-5	DESIGN
// line 345	WITHOUT_CLASSIFICATION	0.9999803790597496	WITHOUT_CLASSIFICATION	1.962094025044376E-5	DESIGN
// line 348	WITHOUT_CLASSIFICATION	0.9999815517529755	WITHOUT_CLASSIFICATION	1.8448247024440027E-5	DESIGN
// line 354	WITHOUT_CLASSIFICATION	0.9999790408534825	WITHOUT_CLASSIFICATION	2.095914651745088E-5	DESIGN
// line 368	WITHOUT_CLASSIFICATION	0.9999817506409405	WITHOUT_CLASSIFICATION	1.8249359059501964E-5	DESIGN
// line 377	WITHOUT_CLASSIFICATION	0.9999802810808426	WITHOUT_CLASSIFICATION	1.971891915739751E-5	DESIGN
// line 388	WITHOUT_CLASSIFICATION	0.9999823000641426	WITHOUT_CLASSIFICATION	1.769993585740202E-5	DESIGN
// line 392	WITHOUT_CLASSIFICATION	0.9999830810508797	WITHOUT_CLASSIFICATION	1.6918949120296333E-5	DESIGN
// line 397	WITHOUT_CLASSIFICATION	0.9999783977014517	WITHOUT_CLASSIFICATION	2.16022985482167E-5	DESIGN
// line 429	WITHOUT_CLASSIFICATION	0.9999782000098106	WITHOUT_CLASSIFICATION	2.1799990189446953E-5	DESIGN
// line 432	WITHOUT_CLASSIFICATION	0.9999830983056442	WITHOUT_CLASSIFICATION	1.6901694355729634E-5	DESIGN
// line 436	WITHOUT_CLASSIFICATION	0.9999747941693979	WITHOUT_CLASSIFICATION	2.5205830601994556E-5	DESIGN
// line 445	WITHOUT_CLASSIFICATION	0.9999740983349267	WITHOUT_CLASSIFICATION	2.5901665073299735E-5	DESIGN
// line 448	WITHOUT_CLASSIFICATION	0.9999756577329385	WITHOUT_CLASSIFICATION	2.4342267061477494E-5	DESIGN
// line 454	WITHOUT_CLASSIFICATION	0.9999725576670666	WITHOUT_CLASSIFICATION	2.7442332933358216E-5	DESIGN
// line 459	WITHOUT_CLASSIFICATION	0.9999669789341499	WITHOUT_CLASSIFICATION	3.302106585010016E-5	DESIGN
// line 466	WITHOUT_CLASSIFICATION	0.9999701485236602	WITHOUT_CLASSIFICATION	2.985147633983859E-5	DESIGN
// line 469	WITHOUT_CLASSIFICATION	0.999972486062841	WITHOUT_CLASSIFICATION	2.7513937159049384E-5	DESIGN
// line 478	WITHOUT_CLASSIFICATION	0.9999755821139883	WITHOUT_CLASSIFICATION	2.4417886011659033E-5	DESIGN
// line 481	WITHOUT_CLASSIFICATION	0.9999800823891913	WITHOUT_CLASSIFICATION	1.9917610808704592E-5	DESIGN
// line 488	WITHOUT_CLASSIFICATION	0.9999758563876542	WITHOUT_CLASSIFICATION	2.4143612345820364E-5	DESIGN
// line 494	WITHOUT_CLASSIFICATION	0.9999699537026668	WITHOUT_CLASSIFICATION	3.0046297333233907E-5	DESIGN
// line 497	WITHOUT_CLASSIFICATION	0.9999719140063807	WITHOUT_CLASSIFICATION	2.8085993619331707E-5	DESIGN
// line 503	WITHOUT_CLASSIFICATION	0.9999751710090666	WITHOUT_CLASSIFICATION	2.4828990933471892E-5	DESIGN
// line 506	WITHOUT_CLASSIFICATION	0.9999617679713227	WITHOUT_CLASSIFICATION	3.8232028677289096E-5	DESIGN
// line 509	WITHOUT_CLASSIFICATION	0.9999734242264213	WITHOUT_CLASSIFICATION	2.6575773578753466E-5	DESIGN
// line 512	WITHOUT_CLASSIFICATION	0.9999825292742041	WITHOUT_CLASSIFICATION	1.7470725795937545E-5	DESIGN
// line 521	WITHOUT_CLASSIFICATION	0.999981960067251	WITHOUT_CLASSIFICATION	1.8039932748973228E-5	DESIGN
// line 526	WITHOUT_CLASSIFICATION	0.9999754905492501	WITHOUT_CLASSIFICATION	2.4509450749866887E-5	DESIGN
// line 540	WITHOUT_CLASSIFICATION	0.99997298128251	WITHOUT_CLASSIFICATION	2.701871748997537E-5	DESIGN
// line 543	WITHOUT_CLASSIFICATION	0.9999740670289591	WITHOUT_CLASSIFICATION	2.593297104092671E-5	DESIGN
// line 546	WITHOUT_CLASSIFICATION	0.9999680146695236	WITHOUT_CLASSIFICATION	3.198533047646398E-5	DESIGN
// line 566	WITHOUT_CLASSIFICATION	0.9999675788647586	WITHOUT_CLASSIFICATION	3.24211352414711E-5	DESIGN
// line 610	WITHOUT_CLASSIFICATION	0.9999818670874359	WITHOUT_CLASSIFICATION	1.8132912564199115E-5	DESIGN
// line 672	WITHOUT_CLASSIFICATION	0.9999834208102194	WITHOUT_CLASSIFICATION	1.6579189780613393E-5	DESIGN
// line 691	WITHOUT_CLASSIFICATION	0.9999780372988284	WITHOUT_CLASSIFICATION	2.196270117163439E-5	DESIGN
// line 696	WITHOUT_CLASSIFICATION	0.9999685170214466	WITHOUT_CLASSIFICATION	3.148297855335876E-5	DESIGN
// line 772	WITHOUT_CLASSIFICATION	0.9999822713103527	WITHOUT_CLASSIFICATION	1.7728689647386626E-5	DESIGN
// line 782	WITHOUT_CLASSIFICATION	0.9999832285970813	WITHOUT_CLASSIFICATION	1.677140291871126E-5	DESIGN
// line 785	WITHOUT_CLASSIFICATION	0.9999783815287961	WITHOUT_CLASSIFICATION	2.1618471203935055E-5	DESIGN
// line 788	WITHOUT_CLASSIFICATION	0.999977270836692	WITHOUT_CLASSIFICATION	2.272916330807193E-5	DESIGN
// line 791	WITHOUT_CLASSIFICATION	0.9999783866705471	WITHOUT_CLASSIFICATION	2.16133294529544E-5	DESIGN
// line 534	WITHOUT_CLASSIFICATION	0.9999754172581875	WITHOUT_CLASSIFICATION	2.4582741812461473E-5	DESIGN
// line 549	WITHOUT_CLASSIFICATION	0.9999691738158851	WITHOUT_CLASSIFICATION	3.082618411489726E-5	DESIGN
// line 552	WITHOUT_CLASSIFICATION	0.9999784170743564	WITHOUT_CLASSIFICATION	2.1582925643586965E-5	DESIGN
// line 558	WITHOUT_CLASSIFICATION	0.9999734080445114	WITHOUT_CLASSIFICATION	2.6591955488494325E-5	DESIGN
// line 561	WITHOUT_CLASSIFICATION	0.9999767586097285	WITHOUT_CLASSIFICATION	2.3241390271510364E-5	DESIGN
// line 571	WITHOUT_CLASSIFICATION	0.9999773718468892	WITHOUT_CLASSIFICATION	2.2628153110848162E-5	DESIGN
// line 574	WITHOUT_CLASSIFICATION	0.9999725236052251	WITHOUT_CLASSIFICATION	2.7476394774824412E-5	DESIGN
// line 579	WITHOUT_CLASSIFICATION	0.9999707848841322	WITHOUT_CLASSIFICATION	2.921511586785941E-5	DESIGN
// line 586	WITHOUT_CLASSIFICATION	0.9999705229526544	WITHOUT_CLASSIFICATION	2.9477047345511686E-5	DESIGN
// line 589	WITHOUT_CLASSIFICATION	0.9999719617181794	WITHOUT_CLASSIFICATION	2.8038281820644303E-5	DESIGN
// line 592	WITHOUT_CLASSIFICATION	0.9999694479262842	WITHOUT_CLASSIFICATION	3.055207371578345E-5	DESIGN
// line 595	WITHOUT_CLASSIFICATION	0.9999603609201271	WITHOUT_CLASSIFICATION	3.963907987293598E-5	DESIGN
// line 598	WITHOUT_CLASSIFICATION	0.9999622718581574	WITHOUT_CLASSIFICATION	3.772814184258319E-5	DESIGN
// line 623	WITHOUT_CLASSIFICATION	0.9999824981935667	WITHOUT_CLASSIFICATION	1.7501806433238903E-5	DESIGN
// line 627	WITHOUT_CLASSIFICATION	0.9999830676796501	WITHOUT_CLASSIFICATION	1.6932320349952365E-5	DESIGN
// line 630	WITHOUT_CLASSIFICATION	0.9999815523852035	WITHOUT_CLASSIFICATION	1.8447614796483025E-5	DESIGN
// line 633	WITHOUT_CLASSIFICATION	0.9999779125536061	WITHOUT_CLASSIFICATION	2.2087446393865015E-5	DESIGN
// line 639	WITHOUT_CLASSIFICATION	0.9999774302061777	WITHOUT_CLASSIFICATION	2.256979382236566E-5	DESIGN
// line 648	WITHOUT_CLASSIFICATION	0.9999791542360397	WITHOUT_CLASSIFICATION	2.0845763960381058E-5	DESIGN
// line 657	WITHOUT_CLASSIFICATION	0.9999766707093913	WITHOUT_CLASSIFICATION	2.3329290608627176E-5	DESIGN
// line 661	WITHOUT_CLASSIFICATION	0.9999797976087499	WITHOUT_CLASSIFICATION	2.0202391250122182E-5	DESIGN
// line 666	WITHOUT_CLASSIFICATION	0.9999717377848555	WITHOUT_CLASSIFICATION	2.8262215144613762E-5	DESIGN
// line 678	WITHOUT_CLASSIFICATION	0.9999780858252065	WITHOUT_CLASSIFICATION	2.191417479349078E-5	DESIGN
// line 682	WITHOUT_CLASSIFICATION	0.9999836195309373	WITHOUT_CLASSIFICATION	1.6380469062628124E-5	DESIGN
// line 688	WITHOUT_CLASSIFICATION	0.9999778034242436	WITHOUT_CLASSIFICATION	2.2196575756531158E-5	DESIGN
// line 699	WITHOUT_CLASSIFICATION	0.9999742251660519	WITHOUT_CLASSIFICATION	2.5774833948104936E-5	DESIGN
// line 706	WITHOUT_CLASSIFICATION	0.9999684372281189	WITHOUT_CLASSIFICATION	3.15627718810625E-5	DESIGN
// line 708	WITHOUT_CLASSIFICATION	0.999980288860487	WITHOUT_CLASSIFICATION	1.9711139513017632E-5	DESIGN
// line 727	WITHOUT_CLASSIFICATION	0.9999828463759541	WITHOUT_CLASSIFICATION	1.7153624045906035E-5	DESIGN
// line 737	WITHOUT_CLASSIFICATION	0.9999798881711041	WITHOUT_CLASSIFICATION	2.011182889590989E-5	DESIGN
// line 753	WITHOUT_CLASSIFICATION	0.9999777440304038	WITHOUT_CLASSIFICATION	2.2255969596178628E-5	DESIGN
// line 779	WITHOUT_CLASSIFICATION	0.9999735252874359	WITHOUT_CLASSIFICATION	2.6474712564121634E-5	DESIGN
// line 801	WITHOUT_CLASSIFICATION	0.9999819867740176	WITHOUT_CLASSIFICATION	1.8013225982437233E-5	DESIGN
// line 808	WITHOUT_CLASSIFICATION	0.9999786636944048	WITHOUT_CLASSIFICATION	2.133630559520181E-5	DESIGN
// line 811	WITHOUT_CLASSIFICATION	0.9999819600730179	WITHOUT_CLASSIFICATION	1.803992698211927E-5	DESIGN
// line 817	WITHOUT_CLASSIFICATION	0.9999814295006433	WITHOUT_CLASSIFICATION	1.8570499356753003E-5	DESIGN
// line 842	WITHOUT_CLASSIFICATION	0.9999833113881385	WITHOUT_CLASSIFICATION	1.6688611861548834E-5	DESIGN
// line 845	WITHOUT_CLASSIFICATION	0.9999783793547399	WITHOUT_CLASSIFICATION	2.1620645260196352E-5	DESIGN
// line 848	WITHOUT_CLASSIFICATION	0.9999775522527324	WITHOUT_CLASSIFICATION	2.2447747267483095E-5	DESIGN
// line 893	WITHOUT_CLASSIFICATION	0.9999769083453011	WITHOUT_CLASSIFICATION	2.3091654698953667E-5	DESIGN
// line 899	WITHOUT_CLASSIFICATION	0.9999759277290654	WITHOUT_CLASSIFICATION	2.407227093453596E-5	DESIGN
// line 932	WITHOUT_CLASSIFICATION	0.9999810655905985	WITHOUT_CLASSIFICATION	1.893440940151936E-5	DESIGN
// line 944	WITHOUT_CLASSIFICATION	0.9999706410835579	WITHOUT_CLASSIFICATION	2.9358916442118884E-5	DESIGN
// line 960	WITHOUT_CLASSIFICATION	0.9999734591242878	WITHOUT_CLASSIFICATION	2.6540875712185174E-5	DESIGN
// line 980	WITHOUT_CLASSIFICATION	0.9999754658694372	WITHOUT_CLASSIFICATION	2.4534130562778494E-5	DESIGN
// line 1004	WITHOUT_CLASSIFICATION	0.999983466115993	WITHOUT_CLASSIFICATION	1.65338840069664E-5	DESIGN
// line 1038	WITHOUT_CLASSIFICATION	0.9999857591484935	WITHOUT_CLASSIFICATION	1.424085150656173E-5	DESIGN
// line 820	WITHOUT_CLASSIFICATION	0.999985559871027	WITHOUT_CLASSIFICATION	1.4440128973028772E-5	DESIGN
// line 826	WITHOUT_CLASSIFICATION	0.999980851392177	WITHOUT_CLASSIFICATION	1.9148607823064812E-5	DESIGN
// line 829	WITHOUT_CLASSIFICATION	0.9999818021963193	WITHOUT_CLASSIFICATION	1.8197803680705064E-5	DESIGN
// line 832	WITHOUT_CLASSIFICATION	0.9999855952120859	WITHOUT_CLASSIFICATION	1.440478791404345E-5	DESIGN
// line 851	WITHOUT_CLASSIFICATION	0.9999812281291508	WITHOUT_CLASSIFICATION	1.877187084923749E-5	DESIGN
// line 857	WITHOUT_CLASSIFICATION	0.999978577916619	WITHOUT_CLASSIFICATION	2.1422083381052475E-5	DESIGN
// line 860	WITHOUT_CLASSIFICATION	0.9999799889821417	WITHOUT_CLASSIFICATION	2.001101785824626E-5	DESIGN
// line 863	WITHOUT_CLASSIFICATION	0.9999794439533977	WITHOUT_CLASSIFICATION	2.055604660226687E-5	DESIGN
// line 866	WITHOUT_CLASSIFICATION	0.999974479700631	WITHOUT_CLASSIFICATION	2.552029936891774E-5	DESIGN
// line 869	WITHOUT_CLASSIFICATION	0.999976478092173	WITHOUT_CLASSIFICATION	2.352190782703725E-5	DESIGN
// line 875	WITHOUT_CLASSIFICATION	0.9999793859484571	WITHOUT_CLASSIFICATION	2.0614051542944432E-5	DESIGN
// line 884	WITHOUT_CLASSIFICATION	0.9999773927267787	WITHOUT_CLASSIFICATION	2.26072732214604E-5	DESIGN
// line 887	WITHOUT_CLASSIFICATION	0.999978904913096	WITHOUT_CLASSIFICATION	2.1095086904026788E-5	DESIGN
// line 890	WITHOUT_CLASSIFICATION	0.9999746052721015	WITHOUT_CLASSIFICATION	2.5394727898586652E-5	DESIGN
// line 902	WITHOUT_CLASSIFICATION	0.9999785960874419	WITHOUT_CLASSIFICATION	2.1403912558141278E-5	DESIGN
// line 909	WITHOUT_CLASSIFICATION	0.9999711239558875	WITHOUT_CLASSIFICATION	2.8876044112530187E-5	DESIGN
// line 912	WITHOUT_CLASSIFICATION	0.9999822560973162	WITHOUT_CLASSIFICATION	1.7743902683821587E-5	DESIGN
// line 916	WITHOUT_CLASSIFICATION	0.9999741534763795	WITHOUT_CLASSIFICATION	2.5846523620445447E-5	DESIGN
// line 922	WITHOUT_CLASSIFICATION	0.9999792991997751	WITHOUT_CLASSIFICATION	2.0700800224906255E-5	DESIGN
// line 928	WITHOUT_CLASSIFICATION	0.9999799977899592	WITHOUT_CLASSIFICATION	2.0002210040836255E-5	DESIGN
// line 941	WITHOUT_CLASSIFICATION	0.9999756982343703	WITHOUT_CLASSIFICATION	2.430176562973921E-5	DESIGN
// line 947	WITHOUT_CLASSIFICATION	0.999972285542192	WITHOUT_CLASSIFICATION	2.7714457807952378E-5	DESIGN
// line 951	WITHOUT_CLASSIFICATION	0.999975349094209	WITHOUT_CLASSIFICATION	2.465090579093188E-5	DESIGN
// line 955	WITHOUT_CLASSIFICATION	0.999971369300786	WITHOUT_CLASSIFICATION	2.863069921403781E-5	DESIGN
// line 965	WITHOUT_CLASSIFICATION	0.9999715439910226	WITHOUT_CLASSIFICATION	2.845600897738675E-5	DESIGN
// line 969	WITHOUT_CLASSIFICATION	0.9999713092898378	WITHOUT_CLASSIFICATION	2.8690710162212085E-5	DESIGN
// line 977	WITHOUT_CLASSIFICATION	0.9999711860603615	WITHOUT_CLASSIFICATION	2.8813939638467935E-5	DESIGN
// line 983	WITHOUT_CLASSIFICATION	0.9999756265740082	WITHOUT_CLASSIFICATION	2.437342599177643E-5	DESIGN
// line 1013	WITHOUT_CLASSIFICATION	0.9999822713337835	WITHOUT_CLASSIFICATION	1.7728666216501742E-5	DESIGN
// line 1023	WITHOUT_CLASSIFICATION	0.9999874391345285	WITHOUT_CLASSIFICATION	1.2560865471464918E-5	DESIGN
// line 1035	WITHOUT_CLASSIFICATION	0.9999842089553141	WITHOUT_CLASSIFICATION	1.5791044685841946E-5	DESIGN
// line 1041	WITHOUT_CLASSIFICATION	0.9999819290736915	WITHOUT_CLASSIFICATION	1.8070926308463112E-5	DESIGN
// line 1043	WITHOUT_CLASSIFICATION	0.9999836767716127	WITHOUT_CLASSIFICATION	1.6323228387214163E-5	DESIGN
// line 1054	WITHOUT_CLASSIFICATION	0.9999813687649223	WITHOUT_CLASSIFICATION	1.86312350776619E-5	DESIGN
// line 1057	WITHOUT_CLASSIFICATION	0.9999824550352704	WITHOUT_CLASSIFICATION	1.754496472962742E-5	DESIGN
// line 1060	WITHOUT_CLASSIFICATION	0.9999797786875827	WITHOUT_CLASSIFICATION	2.0221312417335188E-5	DESIGN
// line 1069	WITHOUT_CLASSIFICATION	0.999978263994716	WITHOUT_CLASSIFICATION	2.173600528402282E-5	DESIGN
// line 1075	WITHOUT_CLASSIFICATION	0.999983220558364	WITHOUT_CLASSIFICATION	1.677944163602729E-5	DESIGN
// line 1105	WITHOUT_CLASSIFICATION	0.9999829555211989	WITHOUT_CLASSIFICATION	1.7044478801166248E-5	DESIGN
// line 1111	WITHOUT_CLASSIFICATION	0.9999805414056471	WITHOUT_CLASSIFICATION	1.945859435290546E-5	DESIGN
// line 1122	WITHOUT_CLASSIFICATION	0.9999865565753836	WITHOUT_CLASSIFICATION	1.344342461648527E-5	DESIGN
// line 1130	WITHOUT_CLASSIFICATION	0.9999851348566857	WITHOUT_CLASSIFICATION	1.4865143314389013E-5	DESIGN
// line 1140	WITHOUT_CLASSIFICATION	0.9999817082079887	WITHOUT_CLASSIFICATION	1.8291792011269954E-5	DESIGN
// line 1158	WITHOUT_CLASSIFICATION	0.9999817941302052	WITHOUT_CLASSIFICATION	1.82058697948435E-5	DESIGN
// line 1204	WITHOUT_CLASSIFICATION	0.9999872496650352	WITHOUT_CLASSIFICATION	1.2750334964825115E-5	DESIGN
// line 1207	WITHOUT_CLASSIFICATION	0.9999879639990742	WITHOUT_CLASSIFICATION	1.2036000925794117E-5	DESIGN
// line 1247	WITHOUT_CLASSIFICATION	0.9999862123291802	WITHOUT_CLASSIFICATION	1.3787670819952756E-5	DESIGN
// line 1251	WITHOUT_CLASSIFICATION	0.9999850224588684	WITHOUT_CLASSIFICATION	1.49775411316008E-5	DESIGN
// line 1261	WITHOUT_CLASSIFICATION	0.9999855039505822	WITHOUT_CLASSIFICATION	1.4496049417934066E-5	DESIGN
// line 1078	WITHOUT_CLASSIFICATION	0.999983512420147	WITHOUT_CLASSIFICATION	1.648757985296442E-5	DESIGN
// line 1084	WITHOUT_CLASSIFICATION	0.9999832942825799	WITHOUT_CLASSIFICATION	1.670571742012723E-5	DESIGN
// line 1087	WITHOUT_CLASSIFICATION	0.9999844134229592	WITHOUT_CLASSIFICATION	1.558657704089135E-5	DESIGN
// line 1090	WITHOUT_CLASSIFICATION	0.9999783876417866	WITHOUT_CLASSIFICATION	2.1612358213352632E-5	DESIGN
// line 1093	WITHOUT_CLASSIFICATION	0.9999818521578064	WITHOUT_CLASSIFICATION	1.814784219362041E-5	DESIGN
// line 1114	WITHOUT_CLASSIFICATION	0.9999803514450094	WITHOUT_CLASSIFICATION	1.9648554990618392E-5	DESIGN
// line 1116	WITHOUT_CLASSIFICATION	0.9999802947781973	WITHOUT_CLASSIFICATION	1.9705221802694824E-5	DESIGN
// line 1118	WITHOUT_CLASSIFICATION	0.9999824877029655	WITHOUT_CLASSIFICATION	1.751229703458574E-5	DESIGN
// line 1124	WITHOUT_CLASSIFICATION	0.9999859026179376	WITHOUT_CLASSIFICATION	1.4097382062372288E-5	DESIGN
// line 1126	WITHOUT_CLASSIFICATION	0.9999838883119178	WITHOUT_CLASSIFICATION	1.6111688082188546E-5	DESIGN
// line 1138	WITHOUT_CLASSIFICATION	0.9999852417896653	WITHOUT_CLASSIFICATION	1.4758210334694355E-5	DESIGN
// line 1144	WITHOUT_CLASSIFICATION	0.9999804136270506	WITHOUT_CLASSIFICATION	1.9586372949435635E-5	DESIGN
// line 1149	WITHOUT_CLASSIFICATION	0.9999791156427367	WITHOUT_CLASSIFICATION	2.088435726329092E-5	DESIGN
// line 1155	WITHOUT_CLASSIFICATION	0.999980847893724	WITHOUT_CLASSIFICATION	1.915210627604286E-5	DESIGN
// line 1162	WITHOUT_CLASSIFICATION	0.9999873078534551	WITHOUT_CLASSIFICATION	1.2692146544850529E-5	DESIGN
// line 1173	WITHOUT_CLASSIFICATION	0.9999821920547574	WITHOUT_CLASSIFICATION	1.7807945242628782E-5	DESIGN
// line 1179	WITHOUT_CLASSIFICATION	0.9999795617423456	WITHOUT_CLASSIFICATION	2.0438257654418722E-5	DESIGN
// line 1182	WITHOUT_CLASSIFICATION	0.9999870404609331	WITHOUT_CLASSIFICATION	1.2959539066732488E-5	DESIGN
// line 1190	WITHOUT_CLASSIFICATION	0.9999787486082263	WITHOUT_CLASSIFICATION	2.125139177370029E-5	DESIGN
// line 1196	WITHOUT_CLASSIFICATION	0.9999762139619399	WITHOUT_CLASSIFICATION	2.378603806002606E-5	DESIGN
// line 1213	WITHOUT_CLASSIFICATION	0.9999860719429837	WITHOUT_CLASSIFICATION	1.3928057016420574E-5	DESIGN
// line 1217	WITHOUT_CLASSIFICATION	0.9999853604775594	WITHOUT_CLASSIFICATION	1.4639522440540138E-5	DESIGN
// line 1231	WITHOUT_CLASSIFICATION	0.9999870446640593	WITHOUT_CLASSIFICATION	1.2955335940618856E-5	DESIGN
// line 1236	WITHOUT_CLASSIFICATION	0.9999852526372786	WITHOUT_CLASSIFICATION	1.4747362721393934E-5	DESIGN
// line 1244	WITHOUT_CLASSIFICATION	0.9999854081194967	WITHOUT_CLASSIFICATION	1.4591880503391703E-5	DESIGN
// line 1254	WITHOUT_CLASSIFICATION	0.9999848698361167	WITHOUT_CLASSIFICATION	1.513016388335939E-5	DESIGN
// line 1258	WITHOUT_CLASSIFICATION	0.9999862294973713	WITHOUT_CLASSIFICATION	1.3770502628672746E-5	DESIGN
// line 1264	WITHOUT_CLASSIFICATION	0.9999860589233495	WITHOUT_CLASSIFICATION	1.3941076650454207E-5	DESIGN
// line 1270	WITHOUT_CLASSIFICATION	0.9999878354607107	WITHOUT_CLASSIFICATION	1.2164539289276297E-5	DESIGN
// line 1273	WITHOUT_CLASSIFICATION	0.9999871152423028	WITHOUT_CLASSIFICATION	1.288475769711824E-5	DESIGN
// line 1276	WITHOUT_CLASSIFICATION	0.9999844793133174	WITHOUT_CLASSIFICATION	1.5520686682695142E-5	DESIGN
// line 1279	WITHOUT_CLASSIFICATION	0.9999852080357376	WITHOUT_CLASSIFICATION	1.4791964262413451E-5	DESIGN
// line 1282	WITHOUT_CLASSIFICATION	0.9999868010290626	WITHOUT_CLASSIFICATION	1.3198970937431646E-5	DESIGN
// line 1289	WITHOUT_CLASSIFICATION	0.9999857409395935	WITHOUT_CLASSIFICATION	1.4259060406409599E-5	DESIGN
// line 1292	WITHOUT_CLASSIFICATION	0.9999840191093841	WITHOUT_CLASSIFICATION	1.5980890615941093E-5	DESIGN
// line 1295	WITHOUT_CLASSIFICATION	0.9999841935023766	WITHOUT_CLASSIFICATION	1.5806497623435836E-5	DESIGN
// line 1298	WITHOUT_CLASSIFICATION	0.9999850901711943	WITHOUT_CLASSIFICATION	1.4909828805767329E-5	DESIGN
// line 1305	WITHOUT_CLASSIFICATION	0.9999847199251306	WITHOUT_CLASSIFICATION	1.528007486938841E-5	DESIGN
// line 1348	WITHOUT_CLASSIFICATION	0.999984166946868	WITHOUT_CLASSIFICATION	1.583305313205152E-5	DESIGN
// line 1387	WITHOUT_CLASSIFICATION	0.9999856823064289	WITHOUT_CLASSIFICATION	1.431769357114087E-5	DESIGN
// line 1392	WITHOUT_CLASSIFICATION	0.9999854684864352	WITHOUT_CLASSIFICATION	1.4531513564799755E-5	DESIGN
// line 1448	WITHOUT_CLASSIFICATION	0.9999815581372133	WITHOUT_CLASSIFICATION	1.844186278673906E-5	DESIGN
// line 1462	WITHOUT_CLASSIFICATION	0.9999853811182661	WITHOUT_CLASSIFICATION	1.4618881733848418E-5	DESIGN
// line 1470	WITHOUT_CLASSIFICATION	0.9999829656010167	WITHOUT_CLASSIFICATION	1.7034398983303583E-5	DESIGN
// line 1496	WITHOUT_CLASSIFICATION	0.9999742417193295	WITHOUT_CLASSIFICATION	2.5758280670492357E-5	DESIGN
// line 1502	WITHOUT_CLASSIFICATION	0.999986829933256	WITHOUT_CLASSIFICATION	1.3170066743822741E-5	DESIGN
// line 1595	WITHOUT_CLASSIFICATION	0.999975159508775	WITHOUT_CLASSIFICATION	2.4840491224946295E-5	DESIGN
// line 1598	WITHOUT_CLASSIFICATION	0.9999763570468652	WITHOUT_CLASSIFICATION	2.364295313484614E-5	DESIGN
// line 1308	WITHOUT_CLASSIFICATION	0.9999855538951613	WITHOUT_CLASSIFICATION	1.444610483869695E-5	DESIGN
// line 1311	WITHOUT_CLASSIFICATION	0.9999833660034944	WITHOUT_CLASSIFICATION	1.663399650566043E-5	DESIGN
// line 1317	WITHOUT_CLASSIFICATION	0.9999828775434041	WITHOUT_CLASSIFICATION	1.7122456595943502E-5	DESIGN
// line 1323	WITHOUT_CLASSIFICATION	0.9999849233516191	WITHOUT_CLASSIFICATION	1.5076648380817053E-5	DESIGN
// line 1326	WITHOUT_CLASSIFICATION	0.9999849360828428	WITHOUT_CLASSIFICATION	1.506391715724167E-5	DESIGN
// line 1329	WITHOUT_CLASSIFICATION	0.9999856840688356	WITHOUT_CLASSIFICATION	1.4315931164419359E-5	DESIGN
// line 1337	WITHOUT_CLASSIFICATION	0.9999839146733127	WITHOUT_CLASSIFICATION	1.60853266873128E-5	DESIGN
// line 1342	WITHOUT_CLASSIFICATION	0.999986995829455	WITHOUT_CLASSIFICATION	1.3004170544854238E-5	DESIGN
// line 1345	WITHOUT_CLASSIFICATION	0.9999831604899523	WITHOUT_CLASSIFICATION	1.683951004771494E-5	DESIGN
// line 1354	WITHOUT_CLASSIFICATION	0.9999820119820547	WITHOUT_CLASSIFICATION	1.7988017945224067E-5	DESIGN
// line 1359	WITHOUT_CLASSIFICATION	0.9999782539304924	WITHOUT_CLASSIFICATION	2.174606950753822E-5	DESIGN
// line 1366	WITHOUT_CLASSIFICATION	0.9999802150883766	WITHOUT_CLASSIFICATION	1.9784911623314115E-5	DESIGN
// line 1369	WITHOUT_CLASSIFICATION	0.9999817643730652	WITHOUT_CLASSIFICATION	1.823562693479165E-5	DESIGN
// line 1373	WITHOUT_CLASSIFICATION	0.999982233194466	WITHOUT_CLASSIFICATION	1.7766805533992383E-5	DESIGN
// line 1377	WITHOUT_CLASSIFICATION	0.9999830636273267	WITHOUT_CLASSIFICATION	1.693637267331317E-5	DESIGN
// line 1383	WITHOUT_CLASSIFICATION	0.9999836685667393	WITHOUT_CLASSIFICATION	1.6331433260716363E-5	DESIGN
// line 1399	WITHOUT_CLASSIFICATION	0.9999808767440846	WITHOUT_CLASSIFICATION	1.91232559154224E-5	DESIGN
// line 1401	WITHOUT_CLASSIFICATION	0.9999792916825231	WITHOUT_CLASSIFICATION	2.070831747692373E-5	DESIGN
// line 1406	WITHOUT_CLASSIFICATION	0.9999715258574734	WITHOUT_CLASSIFICATION	2.8474142526612425E-5	DESIGN
// line 1417	WITHOUT_CLASSIFICATION	0.9999798479604874	WITHOUT_CLASSIFICATION	2.0152039512524962E-5	DESIGN
// line 1424	WITHOUT_CLASSIFICATION	0.9999847459093382	WITHOUT_CLASSIFICATION	1.5254090661840789E-5	DESIGN
// line 1427	WITHOUT_CLASSIFICATION	0.9999856594295241	WITHOUT_CLASSIFICATION	1.4340570475817095E-5	DESIGN
// line 1430	WITHOUT_CLASSIFICATION	0.9999849671085849	WITHOUT_CLASSIFICATION	1.5032891414971966E-5	DESIGN
// line 1433	WITHOUT_CLASSIFICATION	0.9999820023092607	WITHOUT_CLASSIFICATION	1.7997690739280404E-5	DESIGN
// line 1436	WITHOUT_CLASSIFICATION	0.9999810128296892	WITHOUT_CLASSIFICATION	1.8987170310722305E-5	DESIGN
// line 1442	WITHOUT_CLASSIFICATION	0.9999848531272757	WITHOUT_CLASSIFICATION	1.5146872724377566E-5	DESIGN
// line 1445	WITHOUT_CLASSIFICATION	0.9999803767195313	WITHOUT_CLASSIFICATION	1.9623280468627603E-5	DESIGN
// line 1458	WITHOUT_CLASSIFICATION	0.9999811571064932	WITHOUT_CLASSIFICATION	1.8842893506820226E-5	DESIGN
// line 1464	WITHOUT_CLASSIFICATION	0.9999810370483209	WITHOUT_CLASSIFICATION	1.8962951679192546E-5	DESIGN
// line 1489	WITHOUT_CLASSIFICATION	0.9999803680211949	WITHOUT_CLASSIFICATION	1.963197880504734E-5	DESIGN
// line 1493	WITHOUT_CLASSIFICATION	0.9999790564088502	WITHOUT_CLASSIFICATION	2.0943591149780873E-5	DESIGN
// line 1507	WITHOUT_CLASSIFICATION	0.9999823576879701	WITHOUT_CLASSIFICATION	1.764231202993451E-5	DESIGN
// line 1519	WITHOUT_CLASSIFICATION	0.9999788155890561	WITHOUT_CLASSIFICATION	2.118441094389477E-5	DESIGN
// line 1532	WITHOUT_CLASSIFICATION	0.999986734391894	WITHOUT_CLASSIFICATION	1.3265608106055582E-5	DESIGN
// line 1538	WITHOUT_CLASSIFICATION	0.9999846105986503	WITHOUT_CLASSIFICATION	1.5389401349685878E-5	DESIGN
// line 1542	WITHOUT_CLASSIFICATION	0.9999845795597604	WITHOUT_CLASSIFICATION	1.542044023969794E-5	DESIGN
// line 1557	WITHOUT_CLASSIFICATION	0.9999802030438192	WITHOUT_CLASSIFICATION	1.9796956180802842E-5	DESIGN
// line 1573	WITHOUT_CLASSIFICATION	0.9999816783128179	WITHOUT_CLASSIFICATION	1.8321687182078367E-5	DESIGN
// line 1591	WITHOUT_CLASSIFICATION	0.9999742476691404	WITHOUT_CLASSIFICATION	2.575233085962178E-5	DESIGN
// line 1615	WITHOUT_CLASSIFICATION	0.9999818803192088	WITHOUT_CLASSIFICATION	1.811968079125445E-5	DESIGN
// line 1629	WITHOUT_CLASSIFICATION	0.9999851835321935	WITHOUT_CLASSIFICATION	1.4816467806659477E-5	DESIGN
// line 1632	WITHOUT_CLASSIFICATION	0.9999880653823022	WITHOUT_CLASSIFICATION	1.1934617697726491E-5	DESIGN
// line 1705	WITHOUT_CLASSIFICATION	0.9999817086571172	WITHOUT_CLASSIFICATION	1.829134288284559E-5	DESIGN
// line 1716	WITHOUT_CLASSIFICATION	0.9999779460511551	WITHOUT_CLASSIFICATION	2.2053948844921352E-5	DESIGN
// line 1725	WITHOUT_CLASSIFICATION	0.9999851877164679	WITHOUT_CLASSIFICATION	1.4812283532088402E-5	DESIGN
// line 1742	WITHOUT_CLASSIFICATION	0.9999845071621608	WITHOUT_CLASSIFICATION	1.549283783918105E-5	DESIGN
// line 1749	WITHOUT_CLASSIFICATION	0.9999777176006608	WITHOUT_CLASSIFICATION	2.2282399339249857E-5	DESIGN
// line 1818	WITHOUT_CLASSIFICATION	0.9999816930579039	WITHOUT_CLASSIFICATION	1.830694209609653E-5	DESIGN
// line 1822	WITHOUT_CLASSIFICATION	0.9999873439441836	WITHOUT_CLASSIFICATION	1.2656055816275737E-5	DESIGN
// line 1607	WITHOUT_CLASSIFICATION	0.9999839995781987	WITHOUT_CLASSIFICATION	1.6000421801257123E-5	DESIGN
// line 1610	WITHOUT_CLASSIFICATION	0.9999833856690381	WITHOUT_CLASSIFICATION	1.6614330961833088E-5	DESIGN
// line 1622	WITHOUT_CLASSIFICATION	0.9999869614782645	WITHOUT_CLASSIFICATION	1.3038521735527995E-5	DESIGN
// line 1625	WITHOUT_CLASSIFICATION	0.9999865611580513	WITHOUT_CLASSIFICATION	1.3438841948790698E-5	DESIGN
// line 1636	WITHOUT_CLASSIFICATION	0.9999815728951226	WITHOUT_CLASSIFICATION	1.8427104877443876E-5	DESIGN
// line 1639	WITHOUT_CLASSIFICATION	0.9999827594823671	WITHOUT_CLASSIFICATION	1.7240517632807278E-5	DESIGN
// line 1647	WITHOUT_CLASSIFICATION	0.9999840289937397	WITHOUT_CLASSIFICATION	1.5971006260323877E-5	DESIGN
// line 1651	WITHOUT_CLASSIFICATION	0.9999812782269987	WITHOUT_CLASSIFICATION	1.872177300134744E-5	DESIGN
// line 1657	WITHOUT_CLASSIFICATION	0.9999821915909402	WITHOUT_CLASSIFICATION	1.7808409059859996E-5	DESIGN
// line 1660	WITHOUT_CLASSIFICATION	0.9999831244855663	WITHOUT_CLASSIFICATION	1.687551443374524E-5	DESIGN
// line 1663	WITHOUT_CLASSIFICATION	0.9999826648552702	WITHOUT_CLASSIFICATION	1.733514472976452E-5	DESIGN
// line 1678	WITHOUT_CLASSIFICATION	0.9999832837338654	WITHOUT_CLASSIFICATION	1.6716266134612317E-5	DESIGN
// line 1702	WITHOUT_CLASSIFICATION	0.9999867370297285	WITHOUT_CLASSIFICATION	1.3262970271523467E-5	DESIGN
// line 1711	WITHOUT_CLASSIFICATION	0.999980064151183	WITHOUT_CLASSIFICATION	1.993584881707559E-5	DESIGN
// line 1719	WITHOUT_CLASSIFICATION	0.9999787535075112	WITHOUT_CLASSIFICATION	2.1246492488766615E-5	DESIGN
// line 1722	WITHOUT_CLASSIFICATION	0.9999857970851302	WITHOUT_CLASSIFICATION	1.4202914869670549E-5	DESIGN
// line 1731	WITHOUT_CLASSIFICATION	0.999982368208415	WITHOUT_CLASSIFICATION	1.7631791584944624E-5	DESIGN
// line 1734	WITHOUT_CLASSIFICATION	0.9999820438219084	WITHOUT_CLASSIFICATION	1.7956178091664017E-5	DESIGN
// line 1738	WITHOUT_CLASSIFICATION	0.9999842462155396	WITHOUT_CLASSIFICATION	1.5753784460426034E-5	DESIGN
// line 1746	WITHOUT_CLASSIFICATION	0.9999768797158611	WITHOUT_CLASSIFICATION	2.3120284138857922E-5	DESIGN
// line 1756	WITHOUT_CLASSIFICATION	0.9999763562327048	WITHOUT_CLASSIFICATION	2.3643767295228077E-5	DESIGN
// line 1758	WITHOUT_CLASSIFICATION	0.9999806162375293	WITHOUT_CLASSIFICATION	1.938376247059479E-5	DESIGN
// line 1761	WITHOUT_CLASSIFICATION	0.9999797534765265	WITHOUT_CLASSIFICATION	2.024652347357963E-5	DESIGN
// line 1767	WITHOUT_CLASSIFICATION	0.9999795009476696	WITHOUT_CLASSIFICATION	2.049905233042325E-5	DESIGN
// line 1776	WITHOUT_CLASSIFICATION	0.9999737597275882	WITHOUT_CLASSIFICATION	2.6240272411827236E-5	DESIGN
// line 1782	WITHOUT_CLASSIFICATION	0.9999852988549203	WITHOUT_CLASSIFICATION	1.4701145079666612E-5	DESIGN
// line 1785	WITHOUT_CLASSIFICATION	0.9999810500962103	WITHOUT_CLASSIFICATION	1.8949903789771712E-5	DESIGN
// line 1788	WITHOUT_CLASSIFICATION	0.9999800765043513	WITHOUT_CLASSIFICATION	1.9923495648722324E-5	DESIGN
// line 1791	WITHOUT_CLASSIFICATION	0.9999772531359551	WITHOUT_CLASSIFICATION	2.274686404491682E-5	DESIGN
// line 1797	WITHOUT_CLASSIFICATION	0.999977026857779	WITHOUT_CLASSIFICATION	2.29731422209336E-5	DESIGN
// line 1800	WITHOUT_CLASSIFICATION	0.9999849492186116	WITHOUT_CLASSIFICATION	1.5050781388380586E-5	DESIGN
// line 1803	WITHOUT_CLASSIFICATION	0.9999840107921808	WITHOUT_CLASSIFICATION	1.5989207819176885E-5	DESIGN
// line 1806	WITHOUT_CLASSIFICATION	0.9999753611805875	WITHOUT_CLASSIFICATION	2.4638819412523887E-5	DESIGN
// line 1809	WITHOUT_CLASSIFICATION	0.9999827077619855	WITHOUT_CLASSIFICATION	1.7292238014517153E-5	DESIGN
// line 1815	WITHOUT_CLASSIFICATION	0.9999824308320643	WITHOUT_CLASSIFICATION	1.7569167935709478E-5	DESIGN
// line 1825	WITHOUT_CLASSIFICATION	0.9999869307722024	WITHOUT_CLASSIFICATION	1.3069227797594591E-5	DESIGN
// line 1828	WITHOUT_CLASSIFICATION	0.9999864499592249	WITHOUT_CLASSIFICATION	1.3550040775173098E-5	DESIGN
// line 1831	WITHOUT_CLASSIFICATION	0.9999850417864611	WITHOUT_CLASSIFICATION	1.4958213538868511E-5	DESIGN
// line 1847	WITHOUT_CLASSIFICATION	0.999983112408472	WITHOUT_CLASSIFICATION	1.6887591527910943E-5	DESIGN
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9999447104170446	WITHOUT_CLASSIFICATION	5.528958295546344E-5	DESIGN
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9999374107635575	WITHOUT_CLASSIFICATION	6.258923644251488E-5	DESIGN
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999781162003453	WITHOUT_CLASSIFICATION	2.188379965480511E-5	DESIGN
/* zero length array */	WITHOUT_CLASSIFICATION	0.99998323751482	WITHOUT_CLASSIFICATION	1.676248517994371E-5	DESIGN
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999989695454041	WITHOUT_CLASSIFICATION	1.0304545959239049E-6	DESIGN
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999665763169715	WITHOUT_CLASSIFICATION	3.342368302850377E-5	DESIGN
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999986759803603	WITHOUT_CLASSIFICATION	1.3240196396574512E-6	DESIGN
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999200651571335	WITHOUT_CLASSIFICATION	7.993484286644905E-5	DESIGN
// line 1854	WITHOUT_CLASSIFICATION	0.9999819804705385	WITHOUT_CLASSIFICATION	1.801952946144074E-5	DESIGN
// line 1869	WITHOUT_CLASSIFICATION	0.9999813677495746	WITHOUT_CLASSIFICATION	1.8632250425448262E-5	DESIGN
// line 1872	WITHOUT_CLASSIFICATION	0.9999878459430809	WITHOUT_CLASSIFICATION	1.2154056919233952E-5	DESIGN
// line 1877	WITHOUT_CLASSIFICATION	0.9999824905991734	WITHOUT_CLASSIFICATION	1.7509400826544815E-5	DESIGN
// line 1886	WITHOUT_CLASSIFICATION	0.9999799111387799	WITHOUT_CLASSIFICATION	2.0088861220153797E-5	DESIGN
// line 1898	WITHOUT_CLASSIFICATION	0.9999802272637558	WITHOUT_CLASSIFICATION	1.9772736244173256E-5	DESIGN
// line 1902	WITHOUT_CLASSIFICATION	0.9999841703126582	WITHOUT_CLASSIFICATION	1.5829687341814315E-5	DESIGN
// line 1905	WITHOUT_CLASSIFICATION	0.9999781672536496	WITHOUT_CLASSIFICATION	2.1832746350372445E-5	DESIGN
// line 1911	WITHOUT_CLASSIFICATION	0.9999792552320367	WITHOUT_CLASSIFICATION	2.0744767963357457E-5	DESIGN
// line 1918	WITHOUT_CLASSIFICATION	0.9999804418604096	WITHOUT_CLASSIFICATION	1.9558139590462814E-5	DESIGN
// line 1935	WITHOUT_CLASSIFICATION	0.9999817940443595	WITHOUT_CLASSIFICATION	1.820595564048923E-5	DESIGN
// line 1938	WITHOUT_CLASSIFICATION	0.9999835813033631	WITHOUT_CLASSIFICATION	1.6418696636921327E-5	DESIGN
// line 1942	WITHOUT_CLASSIFICATION	0.9999838864644831	WITHOUT_CLASSIFICATION	1.6113535516847754E-5	DESIGN
// line 1948	WITHOUT_CLASSIFICATION	0.9999803811945919	WITHOUT_CLASSIFICATION	1.961880540813033E-5	DESIGN
// line 1960	WITHOUT_CLASSIFICATION	0.9999803723664277	WITHOUT_CLASSIFICATION	1.9627633572280055E-5	DESIGN
// line 1963	WITHOUT_CLASSIFICATION	0.9999798377794936	WITHOUT_CLASSIFICATION	2.0162220506481375E-5	DESIGN
// line 1968	WITHOUT_CLASSIFICATION	0.9999801701410196	WITHOUT_CLASSIFICATION	1.9829858980393643E-5	DESIGN
// line 1972	WITHOUT_CLASSIFICATION	0.9999851978625356	WITHOUT_CLASSIFICATION	1.4802137464487288E-5	DESIGN
// line 1982	WITHOUT_CLASSIFICATION	0.9999853714056375	WITHOUT_CLASSIFICATION	1.4628594362483075E-5	DESIGN
// line 1995	WITHOUT_CLASSIFICATION	0.9999791065516764	WITHOUT_CLASSIFICATION	2.089344832358815E-5	DESIGN
// line 2000	WITHOUT_CLASSIFICATION	0.999988440048465	WITHOUT_CLASSIFICATION	1.155995153490139E-5	DESIGN
// line 2006	WITHOUT_CLASSIFICATION	0.9999817047079159	WITHOUT_CLASSIFICATION	1.8295292083993158E-5	DESIGN
// line 2010	WITHOUT_CLASSIFICATION	0.9999882505998773	WITHOUT_CLASSIFICATION	1.1749400122704855E-5	DESIGN
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9999906421433737	WITHOUT_CLASSIFICATION	9.357856626275709E-6	DESIGN
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9998137585149626	WITHOUT_CLASSIFICATION	1.8624148503735183E-4	DESIGN
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9999986098747429	WITHOUT_CLASSIFICATION	1.3901252571042878E-6	DESIGN
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9999944673779255	WITHOUT_CLASSIFICATION	5.5326220745191715E-6	DESIGN
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999999034161283	WITHOUT_CLASSIFICATION	9.658387170035791E-8	DESIGN
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9999296031838306	WITHOUT_CLASSIFICATION	7.039681616935916E-5	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999976769222565	WITHOUT_CLASSIFICATION	2.323077743509728E-5	DESIGN
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999803412790699	WITHOUT_CLASSIFICATION	1.9658720930134062E-5	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9998551519091997	WITHOUT_CLASSIFICATION	1.4484809080032558E-4	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9998551519091997	WITHOUT_CLASSIFICATION	1.4484809080032558E-4	DESIGN
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9977693993970765	WITHOUT_CLASSIFICATION	0.0022306006029235597	DESIGN
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.999993402375374	WITHOUT_CLASSIFICATION	6.597624625935801E-6	DESIGN
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999881897878767	WITHOUT_CLASSIFICATION	1.1810212123332495E-5	DESIGN
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999942788567562	WITHOUT_CLASSIFICATION	5.72114324379645E-6	DESIGN
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999983654076711	WITHOUT_CLASSIFICATION	1.6345923288672414E-6	DESIGN
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9924829365011221	WITHOUT_CLASSIFICATION	0.007517063498877971	DESIGN
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9993594381536797	WITHOUT_CLASSIFICATION	6.405618463203125E-4	DESIGN
// Live reference to module	WITHOUT_CLASSIFICATION	0.9998194505313551	WITHOUT_CLASSIFICATION	1.8054946864487533E-4	DESIGN
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999827659835225	WITHOUT_CLASSIFICATION	1.7234016477508822E-5	DESIGN
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999018659312001	WITHOUT_CLASSIFICATION	9.813406879985579E-5	DESIGN
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.997472625359914	WITHOUT_CLASSIFICATION	0.00252737464008605	DESIGN
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.999153373939443	WITHOUT_CLASSIFICATION	8.466260605569367E-4	DESIGN
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999828579878999	WITHOUT_CLASSIFICATION	1.7142012100162665E-5	DESIGN
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999999664049287	WITHOUT_CLASSIFICATION	3.359507130137646E-8	DESIGN
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.99997641452714	WITHOUT_CLASSIFICATION	2.358547285991452E-5	DESIGN
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.99997641452714	WITHOUT_CLASSIFICATION	2.358547285991452E-5	DESIGN
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9998633774209434	WITHOUT_CLASSIFICATION	1.3662257905649E-4	DESIGN
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9998264010370709	WITHOUT_CLASSIFICATION	1.7359896292920606E-4	DESIGN
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999963609285493	WITHOUT_CLASSIFICATION	3.639071450814928E-6	DESIGN
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.999940730513469	WITHOUT_CLASSIFICATION	5.92694865310885E-5	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9991842956096482	WITHOUT_CLASSIFICATION	8.157043903518746E-4	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999879927495607	WITHOUT_CLASSIFICATION	1.2007250439208377E-5	DESIGN
// source extensions	WITHOUT_CLASSIFICATION	0.9999993312369896	WITHOUT_CLASSIFICATION	6.68763010481946E-7	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999879927495607	WITHOUT_CLASSIFICATION	1.2007250439208377E-5	DESIGN
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999898355471666	WITHOUT_CLASSIFICATION	1.0164452833478007E-5	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9996701475798285	WITHOUT_CLASSIFICATION	3.298524201714981E-4	DESIGN
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.997476435781893	WITHOUT_CLASSIFICATION	0.0025235642181069633	DESIGN
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9991726663714743	WITHOUT_CLASSIFICATION	8.273336285257492E-4	DESIGN
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9997693002470306	WITHOUT_CLASSIFICATION	2.306997529693877E-4	DESIGN
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9979832179275689	WITHOUT_CLASSIFICATION	0.00201678207243112	DESIGN
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9999134626600559	WITHOUT_CLASSIFICATION	8.653733994413396E-5	DESIGN
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999808764155081	WITHOUT_CLASSIFICATION	1.9123584491872514E-5	DESIGN
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999683344812047	WITHOUT_CLASSIFICATION	3.1665518795242886E-5	DESIGN
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9915888576349653	WITHOUT_CLASSIFICATION	0.008411142365034777	DESIGN
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9992338664156306	WITHOUT_CLASSIFICATION	7.661335843693821E-4	DESIGN
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9998900912174403	WITHOUT_CLASSIFICATION	1.0990878255974829E-4	DESIGN
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.999933118378647	WITHOUT_CLASSIFICATION	6.688162135304992E-5	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9990659081882789	WITHOUT_CLASSIFICATION	9.340918117212342E-4	DESIGN
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999984476283166	WITHOUT_CLASSIFICATION	1.5523716833996569E-6	DESIGN
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999984476283166	WITHOUT_CLASSIFICATION	1.5523716833996569E-6	DESIGN
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999975041873959	WITHOUT_CLASSIFICATION	2.4958126041195323E-6	DESIGN
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999453029890119	WITHOUT_CLASSIFICATION	5.4697010988251096E-5	DESIGN
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999996050195387	WITHOUT_CLASSIFICATION	3.9498046142436783E-7	DESIGN
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9999627581176591	WITHOUT_CLASSIFICATION	3.7241882340842274E-5	DESIGN
// required and optional only	WITHOUT_CLASSIFICATION	0.9999995694391459	WITHOUT_CLASSIFICATION	4.30560854057567E-7	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999879927495607	WITHOUT_CLASSIFICATION	1.2007250439208377E-5	DESIGN
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999534169543981	WITHOUT_CLASSIFICATION	4.658304560191342E-5	DESIGN
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999970074883311	WITHOUT_CLASSIFICATION	2.992511668899009E-6	DESIGN
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999851889355793	WITHOUT_CLASSIFICATION	1.4811064420756047E-5	DESIGN
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999452796223838	WITHOUT_CLASSIFICATION	5.472037761624728E-5	DESIGN
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999645178084478	WITHOUT_CLASSIFICATION	3.548219155220138E-5	DESIGN
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999997292797935	WITHOUT_CLASSIFICATION	2.707202063842148E-7	DESIGN
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.999999890522449	WITHOUT_CLASSIFICATION	1.0947755096415076E-7	DESIGN
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999709644122141	WITHOUT_CLASSIFICATION	2.9035587785941128E-5	DESIGN
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.95390147320369	WITHOUT_CLASSIFICATION	0.046098526796310026	DESIGN
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9995414210158958	WITHOUT_CLASSIFICATION	4.5857898410415137E-4	DESIGN
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999926668200407	WITHOUT_CLASSIFICATION	7.333179959202309E-6	DESIGN
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9998490615554898	WITHOUT_CLASSIFICATION	1.509384445101247E-4	DESIGN
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9514530995823124	WITHOUT_CLASSIFICATION	0.04854690041768762	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999895548003781	WITHOUT_CLASSIFICATION	1.0445199621977926E-5	DESIGN
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9001574206441235	DESIGN	0.09984257935587647	WITHOUT_CLASSIFICATION
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9979588983605866	WITHOUT_CLASSIFICATION	0.002041101639413359	DESIGN
// binary typed calls	WITHOUT_CLASSIFICATION	0.9996240806024042	WITHOUT_CLASSIFICATION	3.7591939759574734E-4	DESIGN
// id must always be even	WITHOUT_CLASSIFICATION	0.9999086547447907	WITHOUT_CLASSIFICATION	9.134525520920757E-5	DESIGN
// with block pass	WITHOUT_CLASSIFICATION	0.99999922741449	WITHOUT_CLASSIFICATION	7.72585509936509E-7	DESIGN
// no block	WITHOUT_CLASSIFICATION	0.9999768252097624	WITHOUT_CLASSIFICATION	2.3174790237659433E-5	DESIGN
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.999992942139575	WITHOUT_CLASSIFICATION	7.057860424956616E-6	DESIGN
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9998157106843054	WITHOUT_CLASSIFICATION	1.8428931569461666E-4	DESIGN
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999899104790062	WITHOUT_CLASSIFICATION	1.0089520993805477E-5	DESIGN
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9996317176557434	WITHOUT_CLASSIFICATION	3.6828234425651386E-4	DESIGN
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999310857042193	WITHOUT_CLASSIFICATION	6.891429578062788E-5	DESIGN
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.999916290451717	WITHOUT_CLASSIFICATION	8.370954828294343E-5	DESIGN
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9997786791602735	WITHOUT_CLASSIFICATION	2.2132083972653551E-4	DESIGN
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9996516016957963	WITHOUT_CLASSIFICATION	3.4839830420376676E-4	DESIGN
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9985820099984537	WITHOUT_CLASSIFICATION	0.0014179900015463957	DESIGN
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9997654128678596	WITHOUT_CLASSIFICATION	2.345871321403828E-4	DESIGN
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999295710231771	WITHOUT_CLASSIFICATION	7.042897682283255E-5	DESIGN
// Lastline	WITHOUT_CLASSIFICATION	0.9999912752191695	WITHOUT_CLASSIFICATION	8.724780830519928E-6	DESIGN
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9968472339682252	WITHOUT_CLASSIFICATION	0.0031527660317747265	DESIGN
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999778843813771	WITHOUT_CLASSIFICATION	2.2115618622876924E-5	DESIGN
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9994215567396908	WITHOUT_CLASSIFICATION	5.78443260309093E-4	DESIGN
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999978945418808	WITHOUT_CLASSIFICATION	2.1054581191145686E-6	DESIGN
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9998938696649821	WITHOUT_CLASSIFICATION	1.0613033501804254E-4	DESIGN
// silently ignore	WITHOUT_CLASSIFICATION	0.9999771396543092	WITHOUT_CLASSIFICATION	2.2860345690762685E-5	DESIGN
// used by compiler	WITHOUT_CLASSIFICATION	0.9999492715592982	WITHOUT_CLASSIFICATION	5.072844070168618E-5	DESIGN
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9869364598352053	WITHOUT_CLASSIFICATION	0.013063540164794765	DESIGN
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999200651571335	WITHOUT_CLASSIFICATION	7.993484286644905E-5	DESIGN
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999333429404543	WITHOUT_CLASSIFICATION	6.665705954563456E-5	DESIGN
//  Single node on list	WITHOUT_CLASSIFICATION	0.9998301997823955	WITHOUT_CLASSIFICATION	1.6980021760446709E-4	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999994403862341	WITHOUT_CLASSIFICATION	5.596137659117684E-7	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999920433854947	WITHOUT_CLASSIFICATION	7.95661450534844E-6	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9996701475798285	WITHOUT_CLASSIFICATION	3.298524201714981E-4	DESIGN
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9996734245613276	WITHOUT_CLASSIFICATION	3.2657543867239134E-4	DESIGN
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9833291756686678	WITHOUT_CLASSIFICATION	0.016670824331332216	DESIGN
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9978896205757863	WITHOUT_CLASSIFICATION	0.002110379424213739	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999960386578706	WITHOUT_CLASSIFICATION	3.961342129459426E-6	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999960386578706	WITHOUT_CLASSIFICATION	3.961342129459426E-6	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999743306301115	WITHOUT_CLASSIFICATION	2.5669369888404344E-5	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999743306301115	WITHOUT_CLASSIFICATION	2.5669369888404344E-5	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999743306301115	WITHOUT_CLASSIFICATION	2.5669369888404344E-5	DESIGN
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999695324442931	WITHOUT_CLASSIFICATION	3.046755570697489E-5	DESIGN
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999695324442931	WITHOUT_CLASSIFICATION	3.046755570697489E-5	DESIGN
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999796856523975	WITHOUT_CLASSIFICATION	2.031434760250332E-5	DESIGN
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999796856523975	WITHOUT_CLASSIFICATION	2.031434760250332E-5	DESIGN
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9995145795932718	WITHOUT_CLASSIFICATION	4.8542040672813085E-4	DESIGN
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999167830887292	WITHOUT_CLASSIFICATION	8.32169112708002E-5	DESIGN
// prefill ?	WITHOUT_CLASSIFICATION	0.9999498493782449	WITHOUT_CLASSIFICATION	5.0150621755002246E-5	DESIGN
// prefill ?	WITHOUT_CLASSIFICATION	0.9999498493782449	WITHOUT_CLASSIFICATION	5.0150621755002246E-5	DESIGN
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9996793573335608	WITHOUT_CLASSIFICATION	3.2064266643915993E-4	DESIGN
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9999965573834642	WITHOUT_CLASSIFICATION	3.4426165357132414E-6	DESIGN
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9981902250579634	WITHOUT_CLASSIFICATION	0.0018097749420365838	DESIGN
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999948650719089	WITHOUT_CLASSIFICATION	5.134928091161218E-6	DESIGN
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999894654437645	WITHOUT_CLASSIFICATION	1.0534556235445902E-5	DESIGN
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9999992218164421	WITHOUT_CLASSIFICATION	7.781835580335943E-7	DESIGN
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999636831517776	WITHOUT_CLASSIFICATION	3.631684822239019E-5	DESIGN
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9979043846468852	WITHOUT_CLASSIFICATION	0.0020956153531146494	DESIGN
// caller	WITHOUT_CLASSIFICATION	0.9999451562201058	WITHOUT_CLASSIFICATION	5.4843779894289926E-5	DESIGN
// calltype // block	WITHOUT_CLASSIFICATION	0.9998922712709346	WITHOUT_CLASSIFICATION	1.0772872906539602E-4	DESIGN
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999895065471377	WITHOUT_CLASSIFICATION	1.049345286227359E-5	DESIGN
// load arity for check	WITHOUT_CLASSIFICATION	0.9999252053046993	WITHOUT_CLASSIFICATION	7.479469530065648E-5	DESIGN
// throw	WITHOUT_CLASSIFICATION	0.9999784829464652	WITHOUT_CLASSIFICATION	2.1517053534801023E-5	DESIGN
// load arity for error	WITHOUT_CLASSIFICATION	0.9998259984447447	WITHOUT_CLASSIFICATION	1.7400155525525135E-4	DESIGN
// arity ok, continue	WITHOUT_CLASSIFICATION	0.999972027963648	WITHOUT_CLASSIFICATION	2.797203635208305E-5	DESIGN
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9995856568845987	WITHOUT_CLASSIFICATION	4.143431154013862E-4	DESIGN
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9989105382244845	WITHOUT_CLASSIFICATION	0.0010894617755155313	DESIGN
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999318946158958	WITHOUT_CLASSIFICATION	6.810538410418791E-5	DESIGN
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999476789609156	WITHOUT_CLASSIFICATION	5.2321039084260706E-5	DESIGN
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9991972154397015	WITHOUT_CLASSIFICATION	8.027845602984514E-4	DESIGN
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999659548974676	WITHOUT_CLASSIFICATION	3.404510253241441E-5	DESIGN
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999277324793567	WITHOUT_CLASSIFICATION	7.226752064322118E-5	DESIGN
// load the encoding	WITHOUT_CLASSIFICATION	0.999971183920715	WITHOUT_CLASSIFICATION	2.881607928498219E-5	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999960952832185	WITHOUT_CLASSIFICATION	3.904716781453238E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999987928008379	WITHOUT_CLASSIFICATION	1.2071991621052989E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999991482997178	WITHOUT_CLASSIFICATION	8.517002822526087E-7	DESIGN
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999878793958179	WITHOUT_CLASSIFICATION	1.2120604182246406E-5	DESIGN
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999715383911216	WITHOUT_CLASSIFICATION	2.8461608878384002E-5	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999907614599417	WITHOUT_CLASSIFICATION	9.238540058327055E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999971437623937	WITHOUT_CLASSIFICATION	2.856237606375123E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999979848730572	WITHOUT_CLASSIFICATION	2.0151269427819335E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999972519437607	WITHOUT_CLASSIFICATION	2.748056239400115E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999991503997027	WITHOUT_CLASSIFICATION	8.496002973943737E-7	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993468320024	WITHOUT_CLASSIFICATION	6.531679976196105E-7	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999991503997027	WITHOUT_CLASSIFICATION	8.496002973943737E-7	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999991503997027	WITHOUT_CLASSIFICATION	8.496002973943737E-7	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999991503997027	WITHOUT_CLASSIFICATION	8.496002973943737E-7	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999991503997027	WITHOUT_CLASSIFICATION	8.496002973943737E-7	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999991503997027	WITHOUT_CLASSIFICATION	8.496002973943737E-7	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999991503997027	WITHOUT_CLASSIFICATION	8.496002973943737E-7	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993468320024	WITHOUT_CLASSIFICATION	6.531679976196105E-7	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993468320024	WITHOUT_CLASSIFICATION	6.531679976196105E-7	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993468320024	WITHOUT_CLASSIFICATION	6.531679976196105E-7	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993468320024	WITHOUT_CLASSIFICATION	6.531679976196105E-7	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993468320024	WITHOUT_CLASSIFICATION	6.531679976196105E-7	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993468320024	WITHOUT_CLASSIFICATION	6.531679976196105E-7	DESIGN
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999836186622886	WITHOUT_CLASSIFICATION	1.6381337711445114E-5	DESIGN
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9998936084031348	WITHOUT_CLASSIFICATION	1.0639159686517824E-4	DESIGN
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999144496539866	WITHOUT_CLASSIFICATION	8.555034601346219E-5	DESIGN
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999936139657508	WITHOUT_CLASSIFICATION	6.386034249121802E-6	DESIGN
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.999941754859298	WITHOUT_CLASSIFICATION	5.8245140701918685E-5	DESIGN
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999961879601891	WITHOUT_CLASSIFICATION	3.812039810974082E-6	DESIGN
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999938119797197	WITHOUT_CLASSIFICATION	6.188020280318466E-6	DESIGN
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999955611209733	WITHOUT_CLASSIFICATION	4.438879026641475E-6	DESIGN
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999992633786532	WITHOUT_CLASSIFICATION	7.366213467870597E-7	DESIGN
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.99998098925052	WITHOUT_CLASSIFICATION	1.9010749479947616E-5	DESIGN
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9992660502988117	WITHOUT_CLASSIFICATION	7.339497011883386E-4	DESIGN
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999917619772845	WITHOUT_CLASSIFICATION	8.238022715517726E-6	DESIGN
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999867832574605	WITHOUT_CLASSIFICATION	1.3216742539629929E-5	DESIGN
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999980273576159	WITHOUT_CLASSIFICATION	1.9726423840256088E-6	DESIGN
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999817021284385	WITHOUT_CLASSIFICATION	1.829787156142828E-5	DESIGN
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9941806429649386	WITHOUT_CLASSIFICATION	0.005819357035061395	DESIGN
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999955910729049	WITHOUT_CLASSIFICATION	4.408927095043839E-6	DESIGN
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.999952682961487	WITHOUT_CLASSIFICATION	4.7317038513104985E-5	DESIGN
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999460635422207	WITHOUT_CLASSIFICATION	5.3936457779297684E-5	DESIGN
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999986511063559	WITHOUT_CLASSIFICATION	1.3488936441862593E-6	DESIGN
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999999985615474	WITHOUT_CLASSIFICATION	1.4384526599739082E-9	DESIGN
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999541098631263	WITHOUT_CLASSIFICATION	4.589013687382313E-5	DESIGN
// source extensions	WITHOUT_CLASSIFICATION	0.9999993312369896	WITHOUT_CLASSIFICATION	6.68763010481946E-7	DESIGN
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9999672254001535	WITHOUT_CLASSIFICATION	3.277459984645511E-5	DESIGN
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999979685194564	WITHOUT_CLASSIFICATION	2.031480543647364E-6	DESIGN
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999998591341651	WITHOUT_CLASSIFICATION	1.4086583496591677E-7	DESIGN
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9997978370928657	WITHOUT_CLASSIFICATION	2.0216290713425915E-4	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.99999986353588	WITHOUT_CLASSIFICATION	1.364641199624889E-7	DESIGN
// extension extensions	WITHOUT_CLASSIFICATION	0.9999974265290393	WITHOUT_CLASSIFICATION	2.573470960658779E-6	DESIGN
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999979901200506	WITHOUT_CLASSIFICATION	2.009879949329745E-6	DESIGN
// try all extensions	WITHOUT_CLASSIFICATION	0.9999999189255149	WITHOUT_CLASSIFICATION	8.107448511290925E-8	DESIGN
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999999791986939	WITHOUT_CLASSIFICATION	2.0801306143145766E-8	DESIGN
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999635005492535	WITHOUT_CLASSIFICATION	3.649945074650441E-5	DESIGN
// try only literal search	WITHOUT_CLASSIFICATION	0.9999998217176083	WITHOUT_CLASSIFICATION	1.782823917871625E-7	DESIGN
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999906222315075	WITHOUT_CLASSIFICATION	9.377768492588984E-6	DESIGN
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9992409483068986	WITHOUT_CLASSIFICATION	7.590516931014846E-4	DESIGN
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999863599551458	WITHOUT_CLASSIFICATION	1.3640044854043743E-5	DESIGN
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999602239147548	WITHOUT_CLASSIFICATION	3.977608524517256E-5	DESIGN
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999997931657042	WITHOUT_CLASSIFICATION	2.0683429585166968E-7	DESIGN
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999996337283185	WITHOUT_CLASSIFICATION	3.6627168145013E-7	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9997234291535341	WITHOUT_CLASSIFICATION	2.7657084646585657E-4	DESIGN
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999934778441315	WITHOUT_CLASSIFICATION	6.522155868476043E-6	DESIGN
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999999828434825	WITHOUT_CLASSIFICATION	1.715651748597958E-8	DESIGN
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9998091830582916	WITHOUT_CLASSIFICATION	1.9081694170834592E-4	DESIGN
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9998091830582916	WITHOUT_CLASSIFICATION	1.9081694170834592E-4	DESIGN
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999973791555347	WITHOUT_CLASSIFICATION	2.620844465249601E-6	DESIGN
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999973791555347	WITHOUT_CLASSIFICATION	2.620844465249601E-6	DESIGN
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9998906968564248	WITHOUT_CLASSIFICATION	1.0930314357508945E-4	DESIGN
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9998906968564248	WITHOUT_CLASSIFICATION	1.0930314357508945E-4	DESIGN
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999999001596626	WITHOUT_CLASSIFICATION	9.984033740064755E-8	DESIGN
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999625677336244	WITHOUT_CLASSIFICATION	3.743226637568975E-5	DESIGN
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999980884815837	WITHOUT_CLASSIFICATION	1.9115184162265103E-6	DESIGN
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999992226579923	WITHOUT_CLASSIFICATION	7.773420076024427E-7	DESIGN
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.999986677345294	WITHOUT_CLASSIFICATION	1.3322654705982805E-5	DESIGN
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9976892101686157	WITHOUT_CLASSIFICATION	0.002310789831384276	DESIGN
// signed short, native	WITHOUT_CLASSIFICATION	0.9999415991608502	WITHOUT_CLASSIFICATION	5.840083914964519E-5	DESIGN
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999921042858149	WITHOUT_CLASSIFICATION	7.89571418512531E-6	DESIGN
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999614904112899	WITHOUT_CLASSIFICATION	3.850958871003717E-5	DESIGN
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.99999582367082	WITHOUT_CLASSIFICATION	4.17632917998697E-6	DESIGN
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.999976000380602	WITHOUT_CLASSIFICATION	2.399961939801419E-5	DESIGN
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999999083471577	WITHOUT_CLASSIFICATION	9.165284235405367E-8	DESIGN
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9984319008260844	WITHOUT_CLASSIFICATION	0.0015680991739156235	DESIGN
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9991988878474316	WITHOUT_CLASSIFICATION	8.011121525683699E-4	DESIGN
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.999807234385035	WITHOUT_CLASSIFICATION	1.9276561496498642E-4	DESIGN
//            write('S');	WITHOUT_CLASSIFICATION	0.99976641527713	WITHOUT_CLASSIFICATION	2.3358472286998084E-4	DESIGN
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9999996765216932	WITHOUT_CLASSIFICATION	3.2347830681177306E-7	DESIGN
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999975765520376	WITHOUT_CLASSIFICATION	2.423447962310725E-6	DESIGN
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9999065058757343	WITHOUT_CLASSIFICATION	9.349412426578115E-5	DESIGN
// w_symbol	WITHOUT_CLASSIFICATION	0.9999205709861465	WITHOUT_CLASSIFICATION	7.942901385352892E-5	DESIGN
// w_unique	WITHOUT_CLASSIFICATION	0.9999498950939771	WITHOUT_CLASSIFICATION	5.01049060228447E-5	DESIGN
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9966935488515688	WITHOUT_CLASSIFICATION	0.0033064511484312566	DESIGN
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999850194726516	WITHOUT_CLASSIFICATION	1.4980527348312713E-5	DESIGN
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999582329701717	WITHOUT_CLASSIFICATION	4.1767029828244165E-5	DESIGN
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999957021174515	WITHOUT_CLASSIFICATION	4.297882548530711E-6	DESIGN
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9976464312834886	WITHOUT_CLASSIFICATION	0.0023535687165114286	DESIGN
// sic	WITHOUT_CLASSIFICATION	0.9998923512431352	WITHOUT_CLASSIFICATION	1.0764875686476259E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9998605032250566	WITHOUT_CLASSIFICATION	1.394967749435126E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9998605032250566	WITHOUT_CLASSIFICATION	1.394967749435126E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9998605032250566	WITHOUT_CLASSIFICATION	1.394967749435126E-4	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9948236095575153	WITHOUT_CLASSIFICATION	0.0051763904424846395	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9948236095575153	WITHOUT_CLASSIFICATION	0.0051763904424846395	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999895548003781	WITHOUT_CLASSIFICATION	1.0445199621977926E-5	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999895548003781	WITHOUT_CLASSIFICATION	1.0445199621977926E-5	DESIGN
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.999991335848361	WITHOUT_CLASSIFICATION	8.664151639094357E-6	DESIGN
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.5519051672862594	WITHOUT_CLASSIFICATION	0.4480948327137407	DESIGN
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9999467557212038	WITHOUT_CLASSIFICATION	5.3244278796171107E-5	DESIGN
// int, native // long, native	WITHOUT_CLASSIFICATION	0.999938511787864	WITHOUT_CLASSIFICATION	6.148821213600877E-5	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9998605032250566	WITHOUT_CLASSIFICATION	1.394967749435126E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9998605032250566	WITHOUT_CLASSIFICATION	1.394967749435126E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9998605032250566	WITHOUT_CLASSIFICATION	1.394967749435126E-4	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9948236095575153	WITHOUT_CLASSIFICATION	0.0051763904424846395	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9948236095575153	WITHOUT_CLASSIFICATION	0.0051763904424846395	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9948236095575153	WITHOUT_CLASSIFICATION	0.0051763904424846395	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999895548003781	WITHOUT_CLASSIFICATION	1.0445199621977926E-5	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999895548003781	WITHOUT_CLASSIFICATION	1.0445199621977926E-5	DESIGN
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999861688910167	WITHOUT_CLASSIFICATION	1.3831108983276632E-5	DESIGN
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9997522014068999	WITHOUT_CLASSIFICATION	2.477985931001473E-4	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999645757064421	WITHOUT_CLASSIFICATION	3.542429355788073E-5	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999645757064421	WITHOUT_CLASSIFICATION	3.542429355788073E-5	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999645757064421	WITHOUT_CLASSIFICATION	3.542429355788073E-5	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999645757064421	WITHOUT_CLASSIFICATION	3.542429355788073E-5	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999645757064421	WITHOUT_CLASSIFICATION	3.542429355788073E-5	DESIGN
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999649461071911	WITHOUT_CLASSIFICATION	3.505389280896651E-5	DESIGN
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9997058130114117	WITHOUT_CLASSIFICATION	2.9418698858833206E-4	DESIGN
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9999994166437348	WITHOUT_CLASSIFICATION	5.833562651910335E-7	DESIGN
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999968079253524	WITHOUT_CLASSIFICATION	3.192074647604794E-6	DESIGN
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9999929950360789	WITHOUT_CLASSIFICATION	7.0049639211062626E-6	DESIGN
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9997525210965712	WITHOUT_CLASSIFICATION	2.4747890342877594E-4	DESIGN
// not enough bytes	WITHOUT_CLASSIFICATION	0.9999969571241096	WITHOUT_CLASSIFICATION	3.0428758903127836E-6	DESIGN
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.99994824296224	WITHOUT_CLASSIFICATION	5.175703775995573E-5	DESIGN
// skip inner braces	WITHOUT_CLASSIFICATION	0.9999957392377897	WITHOUT_CLASSIFICATION	4.260762210323877E-6	DESIGN
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999662784413089	WITHOUT_CLASSIFICATION	3.372155869098502E-5	DESIGN
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999942267623575	WITHOUT_CLASSIFICATION	5.77323764245957E-6	DESIGN
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999853221021708	WITHOUT_CLASSIFICATION	1.467789782906968E-5	DESIGN
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.999998563232458	WITHOUT_CLASSIFICATION	1.4367675419469376E-6	DESIGN
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9999896596799673	WITHOUT_CLASSIFICATION	1.0340320032640392E-5	DESIGN
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9989453625017045	WITHOUT_CLASSIFICATION	0.0010546374982955398	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9995155227673977	WITHOUT_CLASSIFICATION	4.844772326023084E-4	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9995155227673977	WITHOUT_CLASSIFICATION	4.844772326023084E-4	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9995155227673977	WITHOUT_CLASSIFICATION	4.844772326023084E-4	DESIGN
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9908616290692157	WITHOUT_CLASSIFICATION	0.009138370930784347	DESIGN
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9908606816144306	WITHOUT_CLASSIFICATION	0.0091393183855693	DESIGN
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999965573412603	WITHOUT_CLASSIFICATION	3.442658739838979E-6	DESIGN
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999243731979124	WITHOUT_CLASSIFICATION	7.562680208751712E-5	DESIGN
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999454551262763	WITHOUT_CLASSIFICATION	5.4544873723752675E-5	DESIGN
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9980449351935531	WITHOUT_CLASSIFICATION	0.0019550648064469356	DESIGN
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9995299858539416	WITHOUT_CLASSIFICATION	4.700141460585289E-4	DESIGN
// single precision, native	WITHOUT_CLASSIFICATION	0.9995944999816586	WITHOUT_CLASSIFICATION	4.055000183413886E-4	DESIGN
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9997991222826218	WITHOUT_CLASSIFICATION	2.0087771737819368E-4	DESIGN
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9993354663568956	WITHOUT_CLASSIFICATION	6.645336431044376E-4	DESIGN
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9998951453964017	WITHOUT_CLASSIFICATION	1.0485460359830522E-4	DESIGN
// double precision, native	WITHOUT_CLASSIFICATION	0.9997283569510867	WITHOUT_CLASSIFICATION	2.716430489131743E-4	DESIGN
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9997981854879865	WITHOUT_CLASSIFICATION	2.0181451201349858E-4	DESIGN
// signed char	WITHOUT_CLASSIFICATION	0.9999822187320752	WITHOUT_CLASSIFICATION	1.7781267924834355E-5	DESIGN
// unsigned char	WITHOUT_CLASSIFICATION	0.9999848545157006	WITHOUT_CLASSIFICATION	1.5145484299352086E-5	DESIGN
// long, little-endian	WITHOUT_CLASSIFICATION	0.9994973041725858	WITHOUT_CLASSIFICATION	5.026958274142001E-4	DESIGN
// long, big-endian	WITHOUT_CLASSIFICATION	0.999962243843479	WITHOUT_CLASSIFICATION	3.775615652093715E-5	DESIGN
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9999055444663961	WITHOUT_CLASSIFICATION	9.44555336037663E-5	DESIGN
// int, native	WITHOUT_CLASSIFICATION	0.9999707510559457	WITHOUT_CLASSIFICATION	2.9248944054212017E-5	DESIGN
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9996463587214155	WITHOUT_CLASSIFICATION	3.5364127858441413E-4	DESIGN
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999767522638084	WITHOUT_CLASSIFICATION	2.3247736191549453E-5	DESIGN
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9877758048748292	WITHOUT_CLASSIFICATION	0.012224195125170794	DESIGN
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9908396346097968	WITHOUT_CLASSIFICATION	0.009160365390203202	DESIGN
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9998872388382517	WITHOUT_CLASSIFICATION	1.1276116174832146E-4	DESIGN
// obtain a	WITHOUT_CLASSIFICATION	0.9999887242298946	WITHOUT_CLASSIFICATION	1.1275770105497907E-5	DESIGN
// obtain b	WITHOUT_CLASSIFICATION	0.9999727991843624	WITHOUT_CLASSIFICATION	2.7200815637648222E-5	DESIGN
// obtain c	WITHOUT_CLASSIFICATION	0.9999722457717947	WITHOUT_CLASSIFICATION	2.7754228205349077E-5	DESIGN
// obtain d	WITHOUT_CLASSIFICATION	0.9999228003491748	WITHOUT_CLASSIFICATION	7.719965082529613E-5	DESIGN
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9986503944134425	WITHOUT_CLASSIFICATION	0.0013496055865574953	DESIGN
/* 1 */	WITHOUT_CLASSIFICATION	0.9999764366469527	WITHOUT_CLASSIFICATION	2.3563353047287322E-5	DESIGN
/* 2 */	WITHOUT_CLASSIFICATION	0.9999827022942958	WITHOUT_CLASSIFICATION	1.7297705704352093E-5	DESIGN
/* 3 */	WITHOUT_CLASSIFICATION	0.9999804652513998	WITHOUT_CLASSIFICATION	1.953474860011806E-5	DESIGN
/* 4 */	WITHOUT_CLASSIFICATION	0.9999633617428313	WITHOUT_CLASSIFICATION	3.663825716869895E-5	DESIGN
/* 5 */	WITHOUT_CLASSIFICATION	0.9999693306536892	WITHOUT_CLASSIFICATION	3.0669346310774275E-5	DESIGN
/* 6 */	WITHOUT_CLASSIFICATION	0.9999742577913665	WITHOUT_CLASSIFICATION	2.5742208633544623E-5	DESIGN
/* 7 */	WITHOUT_CLASSIFICATION	0.999973384091072	WITHOUT_CLASSIFICATION	2.661590892799294E-5	DESIGN
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999188269733575	WITHOUT_CLASSIFICATION	8.117302664245314E-5	DESIGN
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999850397061906	WITHOUT_CLASSIFICATION	1.4960293809408281E-5	DESIGN
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9998948118165664	WITHOUT_CLASSIFICATION	1.0518818343355923E-4	DESIGN
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9999843063185487	WITHOUT_CLASSIFICATION	1.569368145132154E-5	DESIGN
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9998441110929572	WITHOUT_CLASSIFICATION	1.5588890704287518E-4	DESIGN
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999934831965007	WITHOUT_CLASSIFICATION	6.5168034992275225E-6	DESIGN
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9999835484694871	WITHOUT_CLASSIFICATION	1.64515305128859E-5	DESIGN
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.999993840065929	WITHOUT_CLASSIFICATION	6.159934071059281E-6	DESIGN
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999762155224683	WITHOUT_CLASSIFICATION	2.3784477531780094E-5	DESIGN
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9999600019110545	WITHOUT_CLASSIFICATION	3.999808894548367E-5	DESIGN
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999457348476813	WITHOUT_CLASSIFICATION	5.4265152318576815E-5	DESIGN
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999457348476813	WITHOUT_CLASSIFICATION	5.4265152318576815E-5	DESIGN
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9999423784230775	WITHOUT_CLASSIFICATION	5.762157692253291E-5	DESIGN
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999989276143317	WITHOUT_CLASSIFICATION	1.0723856683253096E-6	DESIGN
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9999740121706512	WITHOUT_CLASSIFICATION	2.598782934874885E-5	DESIGN
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9679957020259804	WITHOUT_CLASSIFICATION	0.03200429797401959	DESIGN
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9998472124013342	WITHOUT_CLASSIFICATION	1.5278759866575487E-4	DESIGN
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999157323196153	WITHOUT_CLASSIFICATION	8.426768038471032E-5	DESIGN
// are we recursing?	WITHOUT_CLASSIFICATION	0.9986712627448792	WITHOUT_CLASSIFICATION	0.0013287372551208391	DESIGN
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.999999006908017	WITHOUT_CLASSIFICATION	9.930919829129723E-7	DESIGN
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999799854011009	WITHOUT_CLASSIFICATION	2.0014598899050353E-5	DESIGN
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.999999205419042	WITHOUT_CLASSIFICATION	7.945809580438456E-7	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9998518825700744	WITHOUT_CLASSIFICATION	1.481174299256241E-4	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9998518825700744	WITHOUT_CLASSIFICATION	1.481174299256241E-4	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9998518825700744	WITHOUT_CLASSIFICATION	1.481174299256241E-4	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9998518825700744	WITHOUT_CLASSIFICATION	1.481174299256241E-4	DESIGN
// try both	WITHOUT_CLASSIFICATION	0.9999979229130199	WITHOUT_CLASSIFICATION	2.077086980094261E-6	DESIGN
// just unix	WITHOUT_CLASSIFICATION	0.999943185089354	WITHOUT_CLASSIFICATION	5.681491064606636E-5	DESIGN
// just windows	WITHOUT_CLASSIFICATION	0.9999020032983092	WITHOUT_CLASSIFICATION	9.799670169069489E-5	DESIGN
// neither	WITHOUT_CLASSIFICATION	0.999984531826769	WITHOUT_CLASSIFICATION	1.546817323090567E-5	DESIGN
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9382067308880696	WITHOUT_CLASSIFICATION	0.06179326911193037	DESIGN
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999991670054196	WITHOUT_CLASSIFICATION	8.329945803688737E-7	DESIGN
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999996836298338	WITHOUT_CLASSIFICATION	3.1637016620144316E-7	DESIGN
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9998580837281401	WITHOUT_CLASSIFICATION	1.4191627185991787E-4	DESIGN
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9998580837281401	WITHOUT_CLASSIFICATION	1.4191627185991787E-4	DESIGN
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9997110915766833	WITHOUT_CLASSIFICATION	2.8890842331670487E-4	DESIGN
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999850056946197	WITHOUT_CLASSIFICATION	1.499430538040816E-5	DESIGN
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999241889312077	WITHOUT_CLASSIFICATION	7.581106879233985E-5	DESIGN
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9942848779715405	WITHOUT_CLASSIFICATION	0.005715122028459557	DESIGN
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9942848779715405	WITHOUT_CLASSIFICATION	0.005715122028459557	DESIGN
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9985805994984635	WITHOUT_CLASSIFICATION	0.001419400501536601	DESIGN
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999243239478525	WITHOUT_CLASSIFICATION	7.567605214749104E-5	DESIGN
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999243239478525	WITHOUT_CLASSIFICATION	7.567605214749104E-5	DESIGN
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999999773446244	WITHOUT_CLASSIFICATION	2.2655375604706536E-8	DESIGN
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999608659985344	WITHOUT_CLASSIFICATION	3.9134001465578325E-5	DESIGN
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999649958341746	WITHOUT_CLASSIFICATION	3.5004165825327054E-5	DESIGN
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.999176000542279	WITHOUT_CLASSIFICATION	8.239994577210164E-4	DESIGN
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9999939991110625	WITHOUT_CLASSIFICATION	6.000888937531406E-6	DESIGN
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999999547976003	WITHOUT_CLASSIFICATION	4.520239963413776E-8	DESIGN
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9999953576352142	WITHOUT_CLASSIFICATION	4.642364785870675E-6	DESIGN
//sequential	WITHOUT_CLASSIFICATION	0.9999363859207006	WITHOUT_CLASSIFICATION	6.36140792994952E-5	DESIGN
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999983080586269	WITHOUT_CLASSIFICATION	1.6919413731366356E-6	DESIGN
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999866916143777	WITHOUT_CLASSIFICATION	1.3308385622265918E-5	DESIGN
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999984992991461	WITHOUT_CLASSIFICATION	1.5007008539067192E-6	DESIGN
// SignalFacade	WITHOUT_CLASSIFICATION	0.999958909293928	WITHOUT_CLASSIFICATION	4.109070607200336E-5	DESIGN
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9970330069885638	WITHOUT_CLASSIFICATION	0.0029669930114362445	DESIGN
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9989958074260266	WITHOUT_CLASSIFICATION	0.0010041925739734739	DESIGN
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9997921650746553	WITHOUT_CLASSIFICATION	2.0783492534472408E-4	DESIGN
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9134450689184925	WITHOUT_CLASSIFICATION	0.08655493108150746	DESIGN
// Args	WITHOUT_CLASSIFICATION	0.9999891429850356	WITHOUT_CLASSIFICATION	1.0857014964333801E-5	DESIGN
// static methods only	WITHOUT_CLASSIFICATION	0.9999900511559581	WITHOUT_CLASSIFICATION	9.948844041915075E-6	DESIGN
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999940565562887	WITHOUT_CLASSIFICATION	5.9434437113218916E-6	DESIGN
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999985948796621	WITHOUT_CLASSIFICATION	1.4051203378088825E-6	DESIGN
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9998793258734372	WITHOUT_CLASSIFICATION	1.2067412656278292E-4	DESIGN
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999979275563308	WITHOUT_CLASSIFICATION	2.0724436691070283E-6	DESIGN
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999998401386869	WITHOUT_CLASSIFICATION	1.5986131317913948E-7	DESIGN
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.99943691952778	WITHOUT_CLASSIFICATION	5.630804722200082E-4	DESIGN
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999948472037348	WITHOUT_CLASSIFICATION	5.152796265136481E-6	DESIGN
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9965945696804966	WITHOUT_CLASSIFICATION	0.0034054303195033054	DESIGN
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999933380426587	WITHOUT_CLASSIFICATION	6.66195734135509E-6	DESIGN
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999340467682085	WITHOUT_CLASSIFICATION	6.595323179146815E-5	DESIGN
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9995564165467482	WITHOUT_CLASSIFICATION	4.4358345325179883E-4	DESIGN
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999419391199199	WITHOUT_CLASSIFICATION	5.806088008016581E-5	DESIGN
// ..	WITHOUT_CLASSIFICATION	0.9998406719111776	WITHOUT_CLASSIFICATION	1.593280888222693E-4	DESIGN
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999923879813346	WITHOUT_CLASSIFICATION	7.612018665440581E-6	DESIGN
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.7504956584576515	DESIGN	0.24950434154234832	WITHOUT_CLASSIFICATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999375313952471	WITHOUT_CLASSIFICATION	6.246860475290865E-5	DESIGN
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9995047518997948	WITHOUT_CLASSIFICATION	4.952481002052198E-4	DESIGN
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.8643223745995778	WITHOUT_CLASSIFICATION	0.13567762540042214	DESIGN
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.999982097057177	WITHOUT_CLASSIFICATION	1.7902942823037767E-5	DESIGN
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999745610205721	WITHOUT_CLASSIFICATION	2.5438979427852687E-5	DESIGN
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9999909120969969	WITHOUT_CLASSIFICATION	9.087903003102371E-6	DESIGN
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.8643223745995778	WITHOUT_CLASSIFICATION	0.13567762540042214	DESIGN
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.999982097057177	WITHOUT_CLASSIFICATION	1.7902942823037767E-5	DESIGN
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999973583553999	WITHOUT_CLASSIFICATION	2.6416446001480277E-6	DESIGN
// deal with length/width	WITHOUT_CLASSIFICATION	0.9998841198948641	WITHOUT_CLASSIFICATION	1.1588010513594882E-4	DESIGN
// deal with length/width	WITHOUT_CLASSIFICATION	0.9998841198948641	WITHOUT_CLASSIFICATION	1.1588010513594882E-4	DESIGN
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999848640779343	WITHOUT_CLASSIFICATION	1.513592206561093E-5	DESIGN
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999999482076283	WITHOUT_CLASSIFICATION	5.1792371695041574E-8	DESIGN
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999846785859318	WITHOUT_CLASSIFICATION	1.5321414068253878E-5	DESIGN
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999943022015674	WITHOUT_CLASSIFICATION	5.697798432638026E-6	DESIGN
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.999927401627216	WITHOUT_CLASSIFICATION	7.259837278392231E-5	DESIGN
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9999363026458059	WITHOUT_CLASSIFICATION	6.369735419409422E-5	DESIGN
// '.' is printed	WITHOUT_CLASSIFICATION	0.9999862954697356	WITHOUT_CLASSIFICATION	1.3704530264477848E-5	DESIGN
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999995487599883	WITHOUT_CLASSIFICATION	4.5124001164366954E-7	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9992074760098055	WITHOUT_CLASSIFICATION	7.925239901944229E-4	DESIGN
// '.'	WITHOUT_CLASSIFICATION	0.9999761821504902	WITHOUT_CLASSIFICATION	2.3817849509773882E-5	DESIGN
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9999322909531523	WITHOUT_CLASSIFICATION	6.77090468477571E-5	DESIGN
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999882537267897	WITHOUT_CLASSIFICATION	1.1746273210447637E-5	DESIGN
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999963257447767	WITHOUT_CLASSIFICATION	3.674255223417151E-6	DESIGN
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999995899657456	WITHOUT_CLASSIFICATION	4.1003425436666034E-7	DESIGN
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999995899657456	WITHOUT_CLASSIFICATION	4.1003425436666034E-7	DESIGN
// always need at least a 0	WITHOUT_CLASSIFICATION	0.999992529520508	WITHOUT_CLASSIFICATION	7.4704794919641295E-6	DESIGN
// always need at least a 0	WITHOUT_CLASSIFICATION	0.999992529520508	WITHOUT_CLASSIFICATION	7.4704794919641295E-6	DESIGN
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999977974789693	WITHOUT_CLASSIFICATION	2.202521030739512E-6	DESIGN
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999755653408362	WITHOUT_CLASSIFICATION	2.4434659163845994E-5	DESIGN
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9999049085767462	WITHOUT_CLASSIFICATION	9.50914232537929E-5	DESIGN
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999868417248582	WITHOUT_CLASSIFICATION	1.3158275141749631E-5	DESIGN
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999974469756068	WITHOUT_CLASSIFICATION	2.5530243931851595E-6	DESIGN
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9999945076231458	WITHOUT_CLASSIFICATION	5.4923768541625645E-6	DESIGN
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999846785859318	WITHOUT_CLASSIFICATION	1.5321414068253878E-5	DESIGN
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999943022015674	WITHOUT_CLASSIFICATION	5.697798432638026E-6	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9992074760098055	WITHOUT_CLASSIFICATION	7.925239901944229E-4	DESIGN
// '.'	WITHOUT_CLASSIFICATION	0.9999761821504902	WITHOUT_CLASSIFICATION	2.3817849509773882E-5	DESIGN
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9998836945951776	WITHOUT_CLASSIFICATION	1.1630540482245257E-4	DESIGN
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999999290901589	WITHOUT_CLASSIFICATION	7.090984101871626E-8	DESIGN
// \v	WITHOUT_CLASSIFICATION	0.9999468040276345	WITHOUT_CLASSIFICATION	5.31959723654935E-5	DESIGN
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9999703539791445	WITHOUT_CLASSIFICATION	2.9646020855562862E-5	DESIGN
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999874156629714	WITHOUT_CLASSIFICATION	1.2584337028544884E-5	DESIGN
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9996035727504732	WITHOUT_CLASSIFICATION	3.9642724952678024E-4	DESIGN
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9825433329350562	WITHOUT_CLASSIFICATION	0.017456667064943757	DESIGN
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9999854406780765	WITHOUT_CLASSIFICATION	1.4559321923527519E-5	DESIGN
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9998922937150913	WITHOUT_CLASSIFICATION	1.0770628490870575E-4	DESIGN
// negative values	WITHOUT_CLASSIFICATION	0.9999878707988858	WITHOUT_CLASSIFICATION	1.2129201114089976E-5	DESIGN
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999982411655944	WITHOUT_CLASSIFICATION	1.7588344056026836E-6	DESIGN
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999908166571799	WITHOUT_CLASSIFICATION	9.18334282013132E-6	DESIGN
// no such luck...	WITHOUT_CLASSIFICATION	0.9998709897803785	WITHOUT_CLASSIFICATION	1.2901021962151757E-4	DESIGN
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9995022350746282	WITHOUT_CLASSIFICATION	4.977649253716711E-4	DESIGN
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999900521991074	WITHOUT_CLASSIFICATION	9.94780089264858E-6	DESIGN
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9718756173697354	WITHOUT_CLASSIFICATION	0.02812438263026471	DESIGN
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999841274544239	WITHOUT_CLASSIFICATION	1.587254557610335E-5	DESIGN
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999821379087344	WITHOUT_CLASSIFICATION	1.786209126561021E-5	DESIGN
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999947204734023	WITHOUT_CLASSIFICATION	5.279526597786477E-6	DESIGN
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999900765253744	WITHOUT_CLASSIFICATION	9.923474625586564E-6	DESIGN
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999870563829458	WITHOUT_CLASSIFICATION	1.2943617054259783E-5	DESIGN
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999870563829458	WITHOUT_CLASSIFICATION	1.2943617054259783E-5	DESIGN
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999165886353094	WITHOUT_CLASSIFICATION	8.341136469058764E-5	DESIGN
/* Tempering */	WITHOUT_CLASSIFICATION	0.9998849707508394	WITHOUT_CLASSIFICATION	1.1502924916060553E-4	DESIGN
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999869245242634	WITHOUT_CLASSIFICATION	1.3075475736610194E-5	DESIGN
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999962931498002	WITHOUT_CLASSIFICATION	3.7068501998406636E-6	DESIGN
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999962931498002	WITHOUT_CLASSIFICATION	3.7068501998406636E-6	DESIGN
// \v	WITHOUT_CLASSIFICATION	0.9999468040276345	WITHOUT_CLASSIFICATION	5.31959723654935E-5	DESIGN
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9999791755229044	WITHOUT_CLASSIFICATION	2.0824477095579883E-5	DESIGN
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999904562183353	WITHOUT_CLASSIFICATION	9.543781664722129E-6	DESIGN
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.999996779283751	WITHOUT_CLASSIFICATION	3.220716248927782E-6	DESIGN
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9999953275382972	WITHOUT_CLASSIFICATION	4.6724617027954545E-6	DESIGN
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999979871489536	WITHOUT_CLASSIFICATION	2.0128510463791073E-6	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9991491241593092	WITHOUT_CLASSIFICATION	8.508758406907351E-4	DESIGN
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9999973295604188	WITHOUT_CLASSIFICATION	2.6704395813118146E-6	DESIGN
// no number	WITHOUT_CLASSIFICATION	0.9999859568945852	WITHOUT_CLASSIFICATION	1.4043105414739545E-5	DESIGN
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999996356418527	WITHOUT_CLASSIFICATION	3.643581473815689E-7	DESIGN
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9999347481568508	WITHOUT_CLASSIFICATION	6.525184314922178E-5	DESIGN
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9997496610674558	WITHOUT_CLASSIFICATION	2.5033893254421623E-4	DESIGN
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999738922112794	WITHOUT_CLASSIFICATION	2.6107788720575954E-5	DESIGN
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999262208783767	WITHOUT_CLASSIFICATION	7.377912162322982E-5	DESIGN
// goto next bucket	WITHOUT_CLASSIFICATION	0.9999787541718484	WITHOUT_CLASSIFICATION	2.1245828151558303E-5	DESIGN
// we reached the end	WITHOUT_CLASSIFICATION	0.999914470712952	WITHOUT_CLASSIFICATION	8.55292870479854E-5	DESIGN
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999903076964443	WITHOUT_CLASSIFICATION	9.692303555626361E-6	DESIGN
// states	WITHOUT_CLASSIFICATION	0.9999957843047312	WITHOUT_CLASSIFICATION	4.215695268779363E-6	DESIGN
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9902916489206662	WITHOUT_CLASSIFICATION	0.009708351079333717	DESIGN
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999986879509797	WITHOUT_CLASSIFICATION	1.3120490203618686E-6	DESIGN
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999997218830546	WITHOUT_CLASSIFICATION	2.7811694546998347E-7	DESIGN
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999717062075821	WITHOUT_CLASSIFICATION	2.8293792417753212E-5	DESIGN
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9832741020469545	WITHOUT_CLASSIFICATION	0.016725897953045382	DESIGN
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999988047533709	WITHOUT_CLASSIFICATION	1.1952466290796553E-6	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999986140426761	WITHOUT_CLASSIFICATION	1.3859573239068922E-6	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999787017367792	WITHOUT_CLASSIFICATION	2.1298263220799583E-5	DESIGN
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9987758731530426	WITHOUT_CLASSIFICATION	0.0012241268469573676	DESIGN
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999245435527474	WITHOUT_CLASSIFICATION	7.54564472526009E-5	DESIGN
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999352359392072	WITHOUT_CLASSIFICATION	6.476406079279561E-5	DESIGN
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999962026653638	WITHOUT_CLASSIFICATION	3.7973346361024985E-6	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999865655652854	WITHOUT_CLASSIFICATION	1.3434434714654862E-5	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999865655652854	WITHOUT_CLASSIFICATION	1.3434434714654862E-5	DESIGN
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.999927523005257	WITHOUT_CLASSIFICATION	7.247699474292487E-5	DESIGN
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999945131893303	WITHOUT_CLASSIFICATION	5.48681066969478E-6	DESIGN
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999945131893303	WITHOUT_CLASSIFICATION	5.48681066969478E-6	DESIGN
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999805073823841	WITHOUT_CLASSIFICATION	1.9492617615933286E-5	DESIGN
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999805073823841	WITHOUT_CLASSIFICATION	1.9492617615933286E-5	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999944973691407	WITHOUT_CLASSIFICATION	5.5026308592821855E-6	DESIGN
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999922389014987	WITHOUT_CLASSIFICATION	7.761098501259775E-6	DESIGN
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999512112121869	WITHOUT_CLASSIFICATION	4.878878781303579E-5	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9999723918565141	WITHOUT_CLASSIFICATION	2.760814348581761E-5	DESIGN
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999593220854573	WITHOUT_CLASSIFICATION	4.067791454276687E-5	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999677787914756	WITHOUT_CLASSIFICATION	3.2221208524409534E-5	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999677787914756	WITHOUT_CLASSIFICATION	3.2221208524409534E-5	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999986140426761	WITHOUT_CLASSIFICATION	1.3859573239068922E-6	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999986140426761	WITHOUT_CLASSIFICATION	1.3859573239068922E-6	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999986140426761	WITHOUT_CLASSIFICATION	1.3859573239068922E-6	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999787017367792	WITHOUT_CLASSIFICATION	2.1298263220799583E-5	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999865655652854	WITHOUT_CLASSIFICATION	1.3434434714654862E-5	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999865655652854	WITHOUT_CLASSIFICATION	1.3434434714654862E-5	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999865655652854	WITHOUT_CLASSIFICATION	1.3434434714654862E-5	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999944973691407	WITHOUT_CLASSIFICATION	5.5026308592821855E-6	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999944973691407	WITHOUT_CLASSIFICATION	5.5026308592821855E-6	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999944973691407	WITHOUT_CLASSIFICATION	5.5026308592821855E-6	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9999723918565141	WITHOUT_CLASSIFICATION	2.760814348581761E-5	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9999723918565141	WITHOUT_CLASSIFICATION	2.760814348581761E-5	DESIGN
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999635762910377	WITHOUT_CLASSIFICATION	3.64237089623136E-5	DESIGN
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999867727067061	WITHOUT_CLASSIFICATION	1.3227293293824476E-5	DESIGN
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999827523313578	WITHOUT_CLASSIFICATION	1.724766864217445E-5	DESIGN
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9973475799355594	DESIGN	0.0026524200644404894	WITHOUT_CLASSIFICATION
// no digits, error	WITHOUT_CLASSIFICATION	0.999925312579633	WITHOUT_CLASSIFICATION	7.468742036697276E-5	DESIGN
// too big for us	WITHOUT_CLASSIFICATION	0.9999589066348245	WITHOUT_CLASSIFICATION	4.109336517546199E-5	DESIGN
// too big for us	WITHOUT_CLASSIFICATION	0.9999589066348245	WITHOUT_CLASSIFICATION	4.109336517546199E-5	DESIGN
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999999041331905	WITHOUT_CLASSIFICATION	9.586680947382863E-8	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9991491241593092	WITHOUT_CLASSIFICATION	8.508758406907351E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9991491241593092	WITHOUT_CLASSIFICATION	8.508758406907351E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9991491241593092	WITHOUT_CLASSIFICATION	8.508758406907351E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9991491241593092	WITHOUT_CLASSIFICATION	8.508758406907351E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9991491241593092	WITHOUT_CLASSIFICATION	8.508758406907351E-4	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999127214963491	WITHOUT_CLASSIFICATION	8.727850365079484E-5	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999127214963491	WITHOUT_CLASSIFICATION	8.727850365079484E-5	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999127214963491	WITHOUT_CLASSIFICATION	8.727850365079484E-5	DESIGN
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999798563613261	WITHOUT_CLASSIFICATION	2.014363867393066E-5	DESIGN
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.999961376250856	WITHOUT_CLASSIFICATION	3.8623749143958706E-5	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999787017367792	WITHOUT_CLASSIFICATION	2.1298263220799583E-5	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999944973691407	WITHOUT_CLASSIFICATION	5.5026308592821855E-6	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999944973691407	WITHOUT_CLASSIFICATION	5.5026308592821855E-6	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9991491241593092	WITHOUT_CLASSIFICATION	8.508758406907351E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9991491241593092	WITHOUT_CLASSIFICATION	8.508758406907351E-4	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999127214963491	WITHOUT_CLASSIFICATION	8.727850365079484E-5	DESIGN
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999999041331905	WITHOUT_CLASSIFICATION	9.586680947382863E-8	DESIGN
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999995484569635	WITHOUT_CLASSIFICATION	4.5154303656423917E-7	DESIGN
// switch //while	WITHOUT_CLASSIFICATION	0.9999926419490353	WITHOUT_CLASSIFICATION	7.358050964790723E-6	DESIGN
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.995530563415798	WITHOUT_CLASSIFICATION	0.004469436584201954	DESIGN
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999495094433528	WITHOUT_CLASSIFICATION	5.049055664727825E-5	DESIGN
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999841837623688	WITHOUT_CLASSIFICATION	1.5816237631282387E-5	DESIGN
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999569207158044	WITHOUT_CLASSIFICATION	4.307928419560092E-5	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999699590844339	WITHOUT_CLASSIFICATION	3.004091556611509E-5	DESIGN
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999492288935602	WITHOUT_CLASSIFICATION	5.0771106439812705E-5	DESIGN
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999912686762319	WITHOUT_CLASSIFICATION	8.731323768035924E-6	DESIGN
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.998156504128816	WITHOUT_CLASSIFICATION	0.0018434958711840514	DESIGN
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9989380575703046	WITHOUT_CLASSIFICATION	0.0010619424296954114	DESIGN
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999997576926815	WITHOUT_CLASSIFICATION	2.4230731849350423E-7	DESIGN
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999928314584898	WITHOUT_CLASSIFICATION	7.168541510237292E-6	DESIGN
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999985615560372	WITHOUT_CLASSIFICATION	1.4384439627842291E-6	DESIGN
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999996412721908	WITHOUT_CLASSIFICATION	3.5872780920830205E-7	DESIGN
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9999960608719969	WITHOUT_CLASSIFICATION	3.939128003133114E-6	DESIGN
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999374672057031	WITHOUT_CLASSIFICATION	6.253279429687398E-5	DESIGN
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999274766245431	WITHOUT_CLASSIFICATION	7.252337545694025E-5	DESIGN
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9989023209880676	WITHOUT_CLASSIFICATION	0.0010976790119323872	DESIGN
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999955093444252	WITHOUT_CLASSIFICATION	4.49065557482335E-6	DESIGN
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999071599808896	WITHOUT_CLASSIFICATION	9.284001911035566E-5	DESIGN
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9996998524615844	WITHOUT_CLASSIFICATION	3.0014753841548837E-4	DESIGN
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9963946516984397	WITHOUT_CLASSIFICATION	0.0036053483015604836	DESIGN
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9998204877489048	WITHOUT_CLASSIFICATION	1.7951225109519566E-4	DESIGN
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.8813336515362107	WITHOUT_CLASSIFICATION	0.1186663484637893	DESIGN
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9205209538596447	WITHOUT_CLASSIFICATION	0.07947904614035525	DESIGN
// unread back	WITHOUT_CLASSIFICATION	0.999906214722714	WITHOUT_CLASSIFICATION	9.378527728596856E-5	DESIGN
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9997938367131555	WITHOUT_CLASSIFICATION	2.061632868445577E-4	DESIGN
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9996647041544593	WITHOUT_CLASSIFICATION	3.3529584554063924E-4	DESIGN
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.999998825384326	WITHOUT_CLASSIFICATION	1.17461567389398E-6	DESIGN
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.999590194815507	WITHOUT_CLASSIFICATION	4.098051844929862E-4	DESIGN
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999975863156837	WITHOUT_CLASSIFICATION	2.413684316292791E-6	DESIGN
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999963917928208	WITHOUT_CLASSIFICATION	3.6082071790687773E-6	DESIGN
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999931609285563	WITHOUT_CLASSIFICATION	6.839071443705935E-6	DESIGN
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999995484569635	WITHOUT_CLASSIFICATION	4.5154303656423917E-7	DESIGN
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999705582936885	WITHOUT_CLASSIFICATION	2.944170631156153E-5	DESIGN
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9953136266153435	WITHOUT_CLASSIFICATION	0.004686373384656474	DESIGN
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9829184539406334	WITHOUT_CLASSIFICATION	0.017081546059366633	DESIGN
// silence	WITHOUT_CLASSIFICATION	0.9999779143519554	WITHOUT_CLASSIFICATION	2.208564804462852E-5	DESIGN
// silence	WITHOUT_CLASSIFICATION	0.9999779143519554	WITHOUT_CLASSIFICATION	2.208564804462852E-5	DESIGN
// Don't bother	WITHOUT_CLASSIFICATION	0.9999979520047211	WITHOUT_CLASSIFICATION	2.04799527888976E-6	DESIGN
// Don't bother	WITHOUT_CLASSIFICATION	0.9999979520047211	WITHOUT_CLASSIFICATION	2.04799527888976E-6	DESIGN
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999985746390657	WITHOUT_CLASSIFICATION	1.4253609342623527E-6	DESIGN
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9838033607824266	WITHOUT_CLASSIFICATION	0.01619663921757342	DESIGN
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999765805289809	WITHOUT_CLASSIFICATION	2.3419471019151305E-5	DESIGN
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999373595030339	WITHOUT_CLASSIFICATION	6.264049696604851E-5	DESIGN
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999883948460154	WITHOUT_CLASSIFICATION	1.1605153984709273E-5	DESIGN
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9898345944903968	WITHOUT_CLASSIFICATION	0.010165405509603194	DESIGN
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999619661149084	WITHOUT_CLASSIFICATION	3.803388509149695E-5	DESIGN
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999930920341589	WITHOUT_CLASSIFICATION	6.907965841094443E-6	DESIGN
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999310054299696	WITHOUT_CLASSIFICATION	6.899457003038253E-5	DESIGN
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9962469193561139	WITHOUT_CLASSIFICATION	0.003753080643886029	DESIGN
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9998818545661448	WITHOUT_CLASSIFICATION	1.1814543385515447E-4	DESIGN
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999952354595352	WITHOUT_CLASSIFICATION	4.764540464901001E-6	DESIGN
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999952354595352	WITHOUT_CLASSIFICATION	4.764540464901001E-6	DESIGN
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999662152887011	WITHOUT_CLASSIFICATION	3.378471129896776E-5	DESIGN
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9585077097673909	WITHOUT_CLASSIFICATION	0.041492290232609065	DESIGN
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999929467765339	WITHOUT_CLASSIFICATION	7.053223466001572E-6	DESIGN
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999929467765339	WITHOUT_CLASSIFICATION	7.053223466001572E-6	DESIGN
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999265152606531	WITHOUT_CLASSIFICATION	7.348473934685788E-5	DESIGN
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999929444459676	WITHOUT_CLASSIFICATION	7.055554032439194E-6	DESIGN
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9934564427410767	WITHOUT_CLASSIFICATION	0.006543557258923318	DESIGN
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9991951426497452	WITHOUT_CLASSIFICATION	8.048573502548826E-4	DESIGN
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9986375188035195	WITHOUT_CLASSIFICATION	0.0013624811964805218	DESIGN
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9994176081888095	WITHOUT_CLASSIFICATION	5.823918111904737E-4	DESIGN
// save the ungot	WITHOUT_CLASSIFICATION	0.9999749954962281	WITHOUT_CLASSIFICATION	2.500450377186858E-5	DESIGN
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999779494836374	WITHOUT_CLASSIFICATION	2.2050516362627645E-5	DESIGN
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9991214147858096	WITHOUT_CLASSIFICATION	8.785852141904056E-4	DESIGN
// flush first	WITHOUT_CLASSIFICATION	0.9999753699169108	WITHOUT_CLASSIFICATION	2.4630083089168344E-5	DESIGN
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999988179155845	WITHOUT_CLASSIFICATION	1.1820844154489003E-6	DESIGN
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9999992222762576	WITHOUT_CLASSIFICATION	7.777237423704043E-7	DESIGN
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999969800179537	WITHOUT_CLASSIFICATION	3.0199820464097575E-6	DESIGN
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999960560307573	WITHOUT_CLASSIFICATION	3.943969242737843E-6	DESIGN
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999999692349126	WITHOUT_CLASSIFICATION	3.0765087363529576E-8	DESIGN
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999993102173246	WITHOUT_CLASSIFICATION	6.897826754324066E-7	DESIGN
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.999651160091374	WITHOUT_CLASSIFICATION	3.488399086259253E-4	DESIGN
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9981741554666497	WITHOUT_CLASSIFICATION	0.0018258445333503787	DESIGN
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.999999572698961	WITHOUT_CLASSIFICATION	4.273010389775086E-7	DESIGN
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999965862916895	WITHOUT_CLASSIFICATION	3.413708310327505E-6	DESIGN
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.5765188298625565	WITHOUT_CLASSIFICATION	0.42348117013744346	DESIGN
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999958360860092	WITHOUT_CLASSIFICATION	4.163913990755191E-6	DESIGN
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999982127933063	WITHOUT_CLASSIFICATION	1.787206693781872E-6	DESIGN
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999929252280501	WITHOUT_CLASSIFICATION	7.0747719498999795E-6	DESIGN
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999906359623054	WITHOUT_CLASSIFICATION	9.364037694600093E-6	DESIGN
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9991588636610759	WITHOUT_CLASSIFICATION	8.411363389242587E-4	DESIGN
// else leave it null	WITHOUT_CLASSIFICATION	0.9999960087793859	WITHOUT_CLASSIFICATION	3.991220614091643E-6	DESIGN
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999623965147105	WITHOUT_CLASSIFICATION	3.760348528949233E-5	DESIGN
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9996012020468219	WITHOUT_CLASSIFICATION	3.9879795317811673E-4	DESIGN
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999390543804881	WITHOUT_CLASSIFICATION	6.0945619511872005E-5	DESIGN
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999934863941236	WITHOUT_CLASSIFICATION	6.5136058763688595E-6	DESIGN
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999919836031553	WITHOUT_CLASSIFICATION	8.016396844616534E-6	DESIGN
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999988646134068	WITHOUT_CLASSIFICATION	1.1353865932693683E-6	DESIGN
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999085465338621	WITHOUT_CLASSIFICATION	9.14534661378858E-5	DESIGN
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999085465338621	WITHOUT_CLASSIFICATION	9.14534661378858E-5	DESIGN
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999982529384237	WITHOUT_CLASSIFICATION	1.7470615762174782E-6	DESIGN
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9960811096870361	WITHOUT_CLASSIFICATION	0.003918890312963894	DESIGN
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9999998507743165	WITHOUT_CLASSIFICATION	1.4922568347973146E-7	DESIGN
// Init	WITHOUT_CLASSIFICATION	0.999971591703134	WITHOUT_CLASSIFICATION	2.8408296866026556E-5	DESIGN
// Block	WITHOUT_CLASSIFICATION	0.9999367367526429	WITHOUT_CLASSIFICATION	6.326324735715629E-5	DESIGN
// Copy constructor	WITHOUT_CLASSIFICATION	0.9999647150884791	WITHOUT_CLASSIFICATION	3.528491152082454E-5	DESIGN
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9992686000370412	WITHOUT_CLASSIFICATION	7.313999629587726E-4	DESIGN
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9994633872731751	WITHOUT_CLASSIFICATION	5.366127268250432E-4	DESIGN
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9998342956138695	WITHOUT_CLASSIFICATION	1.6570438613047788E-4	DESIGN
// ok	WITHOUT_CLASSIFICATION	0.9999441361909744	WITHOUT_CLASSIFICATION	5.5863809025577275E-5	DESIGN
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9959769387736211	DESIGN	0.004023061226378821	WITHOUT_CLASSIFICATION
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9403210075980629	WITHOUT_CLASSIFICATION	0.059678992401937074	DESIGN
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9996137816868306	WITHOUT_CLASSIFICATION	3.8621831316936676E-4	DESIGN
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9992241992944161	WITHOUT_CLASSIFICATION	7.758007055838187E-4	DESIGN
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.999986721363201	WITHOUT_CLASSIFICATION	1.3278636799038777E-5	DESIGN
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999885350346637	WITHOUT_CLASSIFICATION	1.1464965336329259E-5	DESIGN
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9994422803279841	WITHOUT_CLASSIFICATION	5.577196720159177E-4	DESIGN
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9935618598625687	WITHOUT_CLASSIFICATION	0.006438140137431323	DESIGN
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9966026454616561	WITHOUT_CLASSIFICATION	0.003397354538343976	DESIGN
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9997927334929562	WITHOUT_CLASSIFICATION	2.0726650704381482E-4	DESIGN
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.997829758674572	WITHOUT_CLASSIFICATION	0.0021702413254280784	DESIGN
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.999982188943728	WITHOUT_CLASSIFICATION	1.7811056271904745E-5	DESIGN
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999749056166854	WITHOUT_CLASSIFICATION	2.5094383314470145E-5	DESIGN
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9997942386547587	WITHOUT_CLASSIFICATION	2.057613452413487E-4	DESIGN
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9998711739070995	WITHOUT_CLASSIFICATION	1.2882609290056118E-4	DESIGN
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999738730387541	WITHOUT_CLASSIFICATION	2.6126961246034478E-5	DESIGN
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999918953347904	WITHOUT_CLASSIFICATION	8.104665209648528E-6	DESIGN
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999980422952808	WITHOUT_CLASSIFICATION	1.9577047193275864E-6	DESIGN
// void methods should work	WITHOUT_CLASSIFICATION	0.9801230447944248	WITHOUT_CLASSIFICATION	0.01987695520557519	DESIGN
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9999949261697622	WITHOUT_CLASSIFICATION	5.0738302377774025E-6	DESIGN
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999994528811884	WITHOUT_CLASSIFICATION	5.471188115355129E-7	DESIGN
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9991816082681515	WITHOUT_CLASSIFICATION	8.183917318485465E-4	DESIGN
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9993891802641433	WITHOUT_CLASSIFICATION	6.10819735856856E-4	DESIGN
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999984313504023	WITHOUT_CLASSIFICATION	1.5686495976175899E-6	DESIGN
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9998989393491909	WITHOUT_CLASSIFICATION	1.0106065080908165E-4	DESIGN
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9991803531277337	WITHOUT_CLASSIFICATION	8.196468722662628E-4	DESIGN
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9990990036873255	WITHOUT_CLASSIFICATION	9.009963126745224E-4	DESIGN
// value equality	WITHOUT_CLASSIFICATION	0.9999825422176266	WITHOUT_CLASSIFICATION	1.7457782373314587E-5	DESIGN
// identity equality	WITHOUT_CLASSIFICATION	0.9999585899874665	WITHOUT_CLASSIFICATION	4.141001253354142E-5	DESIGN
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999921729284427	WITHOUT_CLASSIFICATION	7.827071557441284E-6	DESIGN
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999941922264187	WITHOUT_CLASSIFICATION	5.807773581326245E-6	DESIGN
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9997470604954005	WITHOUT_CLASSIFICATION	2.5293950459953234E-4	DESIGN
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9997470604954005	WITHOUT_CLASSIFICATION	2.5293950459953234E-4	DESIGN
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9996714467138555	WITHOUT_CLASSIFICATION	3.2855328614448423E-4	DESIGN
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999974366814245	WITHOUT_CLASSIFICATION	2.563318575407025E-6	DESIGN
// bench Long fib	WITHOUT_CLASSIFICATION	0.9999914798919682	WITHOUT_CLASSIFICATION	8.520108031806784E-6	DESIGN
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9998127627808159	WITHOUT_CLASSIFICATION	1.8723721918411E-4	DESIGN
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999998219698558	WITHOUT_CLASSIFICATION	1.7803014412310253E-7	DESIGN
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9998013889208763	WITHOUT_CLASSIFICATION	1.986110791236229E-4	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999827137553067	WITHOUT_CLASSIFICATION	1.728624469337373E-5	DESIGN
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.99999947195472	WITHOUT_CLASSIFICATION	5.280452799753882E-7	DESIGN
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999997667045016	WITHOUT_CLASSIFICATION	2.3329549842650214E-7	DESIGN
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9997780822023794	WITHOUT_CLASSIFICATION	2.219177976207292E-4	DESIGN
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9994649234458436	WITHOUT_CLASSIFICATION	5.350765541564453E-4	DESIGN
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999965079220468	WITHOUT_CLASSIFICATION	3.49207795320538E-6	DESIGN
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9979381788839621	WITHOUT_CLASSIFICATION	0.0020618211160379502	DESIGN
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999956875639928	WITHOUT_CLASSIFICATION	4.312436007177479E-6	DESIGN
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999996279139439	WITHOUT_CLASSIFICATION	3.7208605610356315E-7	DESIGN
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.8797436669279899	DESIGN	0.12025633307201013	WITHOUT_CLASSIFICATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9997145007462943	WITHOUT_CLASSIFICATION	2.8549925370565136E-4	DESIGN
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9999378181405195	WITHOUT_CLASSIFICATION	6.218185948049684E-5	DESIGN
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9991448782141573	WITHOUT_CLASSIFICATION	8.551217858426473E-4	DESIGN
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.8750434866994637	WITHOUT_CLASSIFICATION	0.12495651330053618	DESIGN
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9994100056689809	WITHOUT_CLASSIFICATION	5.899943310191784E-4	DESIGN
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999378525090094	WITHOUT_CLASSIFICATION	6.214749099058619E-5	DESIGN
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999999968960183	WITHOUT_CLASSIFICATION	3.1039817497973486E-9	DESIGN
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.999944545009647	WITHOUT_CLASSIFICATION	5.545499035288602E-5	DESIGN
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9973708034694047	WITHOUT_CLASSIFICATION	0.0026291965305953757	DESIGN
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999857454501514	WITHOUT_CLASSIFICATION	1.425454984858982E-5	DESIGN
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999983913287168	WITHOUT_CLASSIFICATION	1.6086712832959072E-6	DESIGN
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.999981095613546	WITHOUT_CLASSIFICATION	1.8904386454042907E-5	DESIGN
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999989912895919	WITHOUT_CLASSIFICATION	1.0087104080410153E-6	DESIGN
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9996734219682897	WITHOUT_CLASSIFICATION	3.265780317103569E-4	DESIGN
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999994433614601	WITHOUT_CLASSIFICATION	5.566385398697E-7	DESIGN
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999975901343844	WITHOUT_CLASSIFICATION	2.4098656156299095E-6	DESIGN
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9996734219682897	WITHOUT_CLASSIFICATION	3.265780317103569E-4	DESIGN
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9996720484135626	WITHOUT_CLASSIFICATION	3.2795158643731683E-4	DESIGN
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999948472037348	WITHOUT_CLASSIFICATION	5.152796265136481E-6	DESIGN
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9999982955180647	WITHOUT_CLASSIFICATION	1.7044819351684593E-6	DESIGN
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.6000699609072728	WITHOUT_CLASSIFICATION	0.39993003909272723	DESIGN
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9953883134751776	WITHOUT_CLASSIFICATION	0.004611686524822369	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999645757064421	WITHOUT_CLASSIFICATION	3.542429355788073E-5	DESIGN
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9999690437084268	WITHOUT_CLASSIFICATION	3.095629157329871E-5	DESIGN
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.940258796147361	WITHOUT_CLASSIFICATION	0.059741203852639	DESIGN
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999999482076283	WITHOUT_CLASSIFICATION	5.1792371695041574E-8	DESIGN
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999965862916895	WITHOUT_CLASSIFICATION	3.413708310327505E-6	DESIGN
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999827523313578	WITHOUT_CLASSIFICATION	1.724766864217445E-5	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9906575844895229	WITHOUT_CLASSIFICATION	0.00934241551047706	DESIGN
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999897239094908	WITHOUT_CLASSIFICATION	1.0276090509192797E-5	DESIGN
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999214524331171	WITHOUT_CLASSIFICATION	7.854756688279154E-5	DESIGN
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9998927408309425	WITHOUT_CLASSIFICATION	1.0725916905756715E-4	DESIGN
// switch // while	WITHOUT_CLASSIFICATION	0.9999921040632028	WITHOUT_CLASSIFICATION	7.8959367970471E-6	DESIGN
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9843769293862085	DESIGN	0.015623070613791664	WITHOUT_CLASSIFICATION
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.8432359473531507	WITHOUT_CLASSIFICATION	0.15676405264684942	DESIGN
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9873551430227437	WITHOUT_CLASSIFICATION	0.012644856977256163	DESIGN
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.7941085124485504	WITHOUT_CLASSIFICATION	0.20589148755144968	DESIGN
// expected	WITHOUT_CLASSIFICATION	0.9999896645930542	WITHOUT_CLASSIFICATION	1.0335406945883063E-5	DESIGN
// Do nothing	WITHOUT_CLASSIFICATION	0.9999332551925215	WITHOUT_CLASSIFICATION	6.674480747851824E-5	DESIGN
// constructor	WITHOUT_CLASSIFICATION	0.9999807929357443	WITHOUT_CLASSIFICATION	1.920706425576203E-5	DESIGN
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9984191668945025	WITHOUT_CLASSIFICATION	0.0015808331054975547	DESIGN
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9999028402514822	WITHOUT_CLASSIFICATION	9.715974851777442E-5	DESIGN
// line 423	WITHOUT_CLASSIFICATION	0.9999804207654553	WITHOUT_CLASSIFICATION	1.9579234544562368E-5	DESIGN
// line 486	WITHOUT_CLASSIFICATION	0.9999730878577674	WITHOUT_CLASSIFICATION	2.6912142232619165E-5	DESIGN
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9997957710983407	WITHOUT_CLASSIFICATION	2.042289016592834E-4	DESIGN
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999997469544527	WITHOUT_CLASSIFICATION	2.5304554721990267E-7	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9904036301436786	WITHOUT_CLASSIFICATION	0.009596369856321348	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9904036301436786	WITHOUT_CLASSIFICATION	0.009596369856321348	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999929539042224	WITHOUT_CLASSIFICATION	7.046095777711859E-6	DESIGN
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999983001253651	WITHOUT_CLASSIFICATION	1.6998746349842916E-6	DESIGN
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999783935391352	WITHOUT_CLASSIFICATION	2.160646086485366E-5	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5402258376233736	DESIGN	0.45977416237662644	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5402258376233736	DESIGN	0.45977416237662644	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5402258376233736	DESIGN	0.45977416237662644	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5402258376233736	DESIGN	0.45977416237662644	WITHOUT_CLASSIFICATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999885108584775	WITHOUT_CLASSIFICATION	1.1489141522535517E-5	DESIGN
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999930349347347	WITHOUT_CLASSIFICATION	6.965065265356692E-6	DESIGN
// "else" body	WITHOUT_CLASSIFICATION	0.9999783600006055	WITHOUT_CLASSIFICATION	2.163999939460442E-5	DESIGN
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.6574129092145518	WITHOUT_CLASSIFICATION	0.3425870907854483	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999860413854944	WITHOUT_CLASSIFICATION	1.3958614505575445E-5	DESIGN
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999998596392047	WITHOUT_CLASSIFICATION	1.403607953775445E-7	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9998894670947422	WITHOUT_CLASSIFICATION	1.1053290525782492E-4	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9998894670947422	WITHOUT_CLASSIFICATION	1.1053290525782492E-4	DESIGN
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9985047933618075	WITHOUT_CLASSIFICATION	0.0014952066381924939	DESIGN
/* 10! */	WITHOUT_CLASSIFICATION	0.999980243004111	WITHOUT_CLASSIFICATION	1.975699588895918E-5	DESIGN
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9992388399443108	WITHOUT_CLASSIFICATION	7.61160055689068E-4	DESIGN
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9999766122721689	WITHOUT_CLASSIFICATION	2.3387727831136338E-5	DESIGN
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999999312160782	WITHOUT_CLASSIFICATION	6.878392178199852E-8	DESIGN
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999981155541233	WITHOUT_CLASSIFICATION	1.8844458767584622E-6	DESIGN
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999993489075153	WITHOUT_CLASSIFICATION	6.510924846326709E-7	DESIGN
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999874677328174	WITHOUT_CLASSIFICATION	1.2532267182613215E-5	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998535807755001	WITHOUT_CLASSIFICATION	1.4641922449996114E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998535807755001	WITHOUT_CLASSIFICATION	1.4641922449996114E-4	DESIGN
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999975901343844	WITHOUT_CLASSIFICATION	2.4098656156299095E-6	DESIGN
// line 449	WITHOUT_CLASSIFICATION	0.9999712452370336	WITHOUT_CLASSIFICATION	2.875476296638535E-5	DESIGN
// line 495	WITHOUT_CLASSIFICATION	0.9999711976939283	WITHOUT_CLASSIFICATION	2.8802306071757175E-5	DESIGN
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9998927344313177	WITHOUT_CLASSIFICATION	1.0726556868236416E-4	DESIGN
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999999320464212	WITHOUT_CLASSIFICATION	6.795357875757762E-8	DESIGN
/* 14! */	WITHOUT_CLASSIFICATION	0.9999778239828292	WITHOUT_CLASSIFICATION	2.217601717083276E-5	DESIGN
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999999322141636	WITHOUT_CLASSIFICATION	6.77858363364937E-8	DESIGN
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999681646994337	WITHOUT_CLASSIFICATION	3.18353005663306E-5	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9996815915968774	WITHOUT_CLASSIFICATION	3.184084031224908E-4	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9996815915968774	WITHOUT_CLASSIFICATION	3.184084031224908E-4	DESIGN
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9972785063907652	WITHOUT_CLASSIFICATION	0.0027214936092348385	DESIGN
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999968202758455	WITHOUT_CLASSIFICATION	3.179724154499366E-6	DESIGN
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9986360932916932	WITHOUT_CLASSIFICATION	0.0013639067083068136	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999656347800381	WITHOUT_CLASSIFICATION	3.4365219961862506E-5	DESIGN
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999887130300084	WITHOUT_CLASSIFICATION	1.1286969991700277E-5	DESIGN
/* 18! */	WITHOUT_CLASSIFICATION	0.9999805748228785	WITHOUT_CLASSIFICATION	1.9425177121396422E-5	DESIGN
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999003885501071	WITHOUT_CLASSIFICATION	9.961144989298785E-5	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999923330346566	WITHOUT_CLASSIFICATION	7.66696534338312E-6	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999923330346566	WITHOUT_CLASSIFICATION	7.66696534338312E-6	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999923330346566	WITHOUT_CLASSIFICATION	7.66696534338312E-6	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999923330346566	WITHOUT_CLASSIFICATION	7.66696534338312E-6	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9997807625230043	WITHOUT_CLASSIFICATION	2.192374769957562E-4	DESIGN
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999939517770453	WITHOUT_CLASSIFICATION	6.048222954701551E-6	DESIGN
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999964572612706	WITHOUT_CLASSIFICATION	3.542738729331559E-6	DESIGN
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999956170821104	WITHOUT_CLASSIFICATION	4.382917889636072E-6	DESIGN
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999992878751175	WITHOUT_CLASSIFICATION	7.121248825757829E-7	DESIGN
/* 22! */	WITHOUT_CLASSIFICATION	0.9999835012454751	WITHOUT_CLASSIFICATION	1.6498754524938884E-5	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9999937480390233	WITHOUT_CLASSIFICATION	6.251960976631935E-6	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999982328320485	WITHOUT_CLASSIFICATION	1.7671679514595134E-6	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999982328320485	WITHOUT_CLASSIFICATION	1.7671679514595134E-6	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999982328320485	WITHOUT_CLASSIFICATION	1.7671679514595134E-6	DESIGN
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999996270294965	WITHOUT_CLASSIFICATION	3.729705034795195E-7	DESIGN
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9997638771884402	WITHOUT_CLASSIFICATION	2.3612281155984216E-4	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999975650564108	WITHOUT_CLASSIFICATION	2.4349435891132676E-6	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999975650564108	WITHOUT_CLASSIFICATION	2.4349435891132676E-6	DESIGN
// AF_INET	WITHOUT_CLASSIFICATION	0.9999525558419552	WITHOUT_CLASSIFICATION	4.744415804486936E-5	DESIGN
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999998685033	WITHOUT_CLASSIFICATION	1.314966429303459E-10	DESIGN
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9999999836231284	WITHOUT_CLASSIFICATION	1.6376871634417007E-8	DESIGN
// BASE64	WITHOUT_CLASSIFICATION	0.9998215069406813	WITHOUT_CLASSIFICATION	1.784930593188146E-4	DESIGN
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999998706865506	WITHOUT_CLASSIFICATION	1.2931344934652412E-7	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9999913973021096	WITHOUT_CLASSIFICATION	8.602697890325203E-6	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.8151465618680449	WITHOUT_CLASSIFICATION	0.184853438131955	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.8151465618680449	WITHOUT_CLASSIFICATION	0.184853438131955	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999990528910114	WITHOUT_CLASSIFICATION	9.471089884592098E-7	DESIGN
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.999518039114531	WITHOUT_CLASSIFICATION	4.8196088546908626E-4	DESIGN
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9998420047790226	WITHOUT_CLASSIFICATION	1.579952209773124E-4	DESIGN
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.99999226885405	WITHOUT_CLASSIFICATION	7.73114595009471E-6	DESIGN
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9999951267039349	WITHOUT_CLASSIFICATION	4.873296065116302E-6	DESIGN
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999965121679912	WITHOUT_CLASSIFICATION	3.487832008803107E-6	DESIGN
// carriage return	WITHOUT_CLASSIFICATION	0.9999308233466051	WITHOUT_CLASSIFICATION	6.917665339489407E-5	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9996959628360097	WITHOUT_CLASSIFICATION	3.0403716399023036E-4	DESIGN
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999525100415873	WITHOUT_CLASSIFICATION	4.7489958412736244E-5	DESIGN
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999996962979498	WITHOUT_CLASSIFICATION	3.037020501954004E-7	DESIGN
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999988657861651	WITHOUT_CLASSIFICATION	1.134213834862002E-6	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999957187709365	WITHOUT_CLASSIFICATION	4.281229063468264E-6	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999696259465014	WITHOUT_CLASSIFICATION	3.0374053498696214E-5	DESIGN
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999832680520588	WITHOUT_CLASSIFICATION	1.673194794120908E-5	DESIGN
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999761718126813	WITHOUT_CLASSIFICATION	2.382818731880782E-5	DESIGN
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9990191888843551	WITHOUT_CLASSIFICATION	9.808111156448301E-4	DESIGN
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999962053325594	WITHOUT_CLASSIFICATION	3.794667440667725E-6	DESIGN
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999854812319869	WITHOUT_CLASSIFICATION	1.45187680130396E-5	DESIGN
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999990497291769	WITHOUT_CLASSIFICATION	9.502708231590415E-7	DESIGN
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999969575847965	WITHOUT_CLASSIFICATION	3.0424152035368106E-6	DESIGN
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999926262910824	WITHOUT_CLASSIFICATION	7.373708917673686E-6	DESIGN
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.99999974950418	WITHOUT_CLASSIFICATION	2.5049581998094965E-7	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999252445862241	WITHOUT_CLASSIFICATION	7.475541377585021E-5	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999252445862241	WITHOUT_CLASSIFICATION	7.475541377585021E-5	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999252445862241	WITHOUT_CLASSIFICATION	7.475541377585021E-5	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999252445862241	WITHOUT_CLASSIFICATION	7.475541377585021E-5	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999252445862241	WITHOUT_CLASSIFICATION	7.475541377585021E-5	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999252445862241	WITHOUT_CLASSIFICATION	7.475541377585021E-5	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999252445862241	WITHOUT_CLASSIFICATION	7.475541377585021E-5	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999252445862241	WITHOUT_CLASSIFICATION	7.475541377585021E-5	DESIGN
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9995874795226213	WITHOUT_CLASSIFICATION	4.125204773787964E-4	DESIGN
/* fall through */	WITHOUT_CLASSIFICATION	0.9999843008544589	WITHOUT_CLASSIFICATION	1.569914554113547E-5	DESIGN
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9998179689685839	WITHOUT_CLASSIFICATION	1.820310314160851E-4	DESIGN
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9893510698543077	DESIGN	0.010648930145692287	WITHOUT_CLASSIFICATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999827137553067	WITHOUT_CLASSIFICATION	1.728624469337373E-5	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999827137553067	WITHOUT_CLASSIFICATION	1.728624469337373E-5	DESIGN
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9979375626970413	WITHOUT_CLASSIFICATION	0.0020624373029586945	DESIGN
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9960925838197291	WITHOUT_CLASSIFICATION	0.003907416180270775	DESIGN
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999995998569622	WITHOUT_CLASSIFICATION	4.001430378719191E-7	DESIGN
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9997859803509086	WITHOUT_CLASSIFICATION	2.1401964909147214E-4	DESIGN
// get current context	WITHOUT_CLASSIFICATION	0.9999944403434688	WITHOUT_CLASSIFICATION	5.559656531175886E-6	DESIGN
// octal constant	WITHOUT_CLASSIFICATION	0.9999937846691139	WITHOUT_CLASSIFICATION	6.215330886036381E-6	DESIGN
// read	WITHOUT_CLASSIFICATION	0.9998737196083508	WITHOUT_CLASSIFICATION	1.2628039164911862E-4	DESIGN
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.8744989345536925	WITHOUT_CLASSIFICATION	0.12550106544630737	DESIGN
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999685257675835	WITHOUT_CLASSIFICATION	3.147423241644362E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9997662329595262	WITHOUT_CLASSIFICATION	2.337670404738911E-4	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9997662329595262	WITHOUT_CLASSIFICATION	2.337670404738911E-4	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9997662329595262	WITHOUT_CLASSIFICATION	2.337670404738911E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999532316721594	WITHOUT_CLASSIFICATION	4.676832784044752E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999532316721594	WITHOUT_CLASSIFICATION	4.676832784044752E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999532316721594	WITHOUT_CLASSIFICATION	4.676832784044752E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999532316721594	WITHOUT_CLASSIFICATION	4.676832784044752E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999532316721594	WITHOUT_CLASSIFICATION	4.676832784044752E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999532316721594	WITHOUT_CLASSIFICATION	4.676832784044752E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999532316721594	WITHOUT_CLASSIFICATION	4.676832784044752E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999532316721594	WITHOUT_CLASSIFICATION	4.676832784044752E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999532316721594	WITHOUT_CLASSIFICATION	4.676832784044752E-5	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9944972170608617	WITHOUT_CLASSIFICATION	0.005502782939138364	DESIGN
// at end	WITHOUT_CLASSIFICATION	0.9999765575045904	WITHOUT_CLASSIFICATION	2.34424954095937E-5	DESIGN
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999993273418073	WITHOUT_CLASSIFICATION	6.726581927499683E-7	DESIGN
// save blocking state	WITHOUT_CLASSIFICATION	0.9999836166235384	WITHOUT_CLASSIFICATION	1.6383376461575088E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999532316721594	WITHOUT_CLASSIFICATION	4.676832784044752E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999532316721594	WITHOUT_CLASSIFICATION	4.676832784044752E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999532316721594	WITHOUT_CLASSIFICATION	4.676832784044752E-5	DESIGN
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999855241035372	WITHOUT_CLASSIFICATION	1.4475896462683247E-5	DESIGN
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999788643987171	WITHOUT_CLASSIFICATION	2.1135601282891384E-5	DESIGN
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999987975229461	WITHOUT_CLASSIFICATION	1.2024770539100084E-6	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9996744241216723	WITHOUT_CLASSIFICATION	3.255758783276341E-4	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9996744241216723	WITHOUT_CLASSIFICATION	3.255758783276341E-4	DESIGN
// load null block	WITHOUT_CLASSIFICATION	0.9999898514537612	WITHOUT_CLASSIFICATION	1.0148546238915841E-5	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999487803738524	WITHOUT_CLASSIFICATION	5.121962614767497E-5	DESIGN
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999932348446544	WITHOUT_CLASSIFICATION	6.765155345532519E-6	DESIGN
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999047768729956	WITHOUT_CLASSIFICATION	9.522312700446868E-5	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999910196742244	WITHOUT_CLASSIFICATION	8.980325775611091E-6	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999910196742244	WITHOUT_CLASSIFICATION	8.980325775611091E-6	DESIGN
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9337396417985745	WITHOUT_CLASSIFICATION	0.0662603582014256	DESIGN
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.999999994187318	WITHOUT_CLASSIFICATION	5.812681961538878E-9	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999092918971613	WITHOUT_CLASSIFICATION	9.070810283876074E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9999083195971971	WITHOUT_CLASSIFICATION	9.168040280287099E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9999083195971971	WITHOUT_CLASSIFICATION	9.168040280287099E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9999083195971971	WITHOUT_CLASSIFICATION	9.168040280287099E-5	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9999648841013624	WITHOUT_CLASSIFICATION	3.511589863754543E-5	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999779206730968	WITHOUT_CLASSIFICATION	2.2079326903251833E-5	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999779206730968	WITHOUT_CLASSIFICATION	2.2079326903251833E-5	DESIGN
// check arity	WITHOUT_CLASSIFICATION	0.9999944765566253	WITHOUT_CLASSIFICATION	5.523443374604334E-6	DESIGN
// check arity	WITHOUT_CLASSIFICATION	0.9999944765566253	WITHOUT_CLASSIFICATION	5.523443374604334E-6	DESIGN
// create the class	WITHOUT_CLASSIFICATION	0.999998274603937	WITHOUT_CLASSIFICATION	1.725396062980416E-6	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9998578585165776	WITHOUT_CLASSIFICATION	1.421414834224814E-4	DESIGN
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999984846919729	WITHOUT_CLASSIFICATION	1.5153080270643162E-6	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9999597503334126	WITHOUT_CLASSIFICATION	4.024966658749488E-5	DESIGN
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999924888787527	WITHOUT_CLASSIFICATION	7.511121247302279E-6	DESIGN
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999998026252492	WITHOUT_CLASSIFICATION	1.9737475071816766E-7	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999939538810128	WITHOUT_CLASSIFICATION	6.046118987147925E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999677787914756	WITHOUT_CLASSIFICATION	3.2221208524409534E-5	DESIGN
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999806802005002	WITHOUT_CLASSIFICATION	1.931979949976683E-5	DESIGN
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999318273034584	WITHOUT_CLASSIFICATION	6.817269654149783E-5	DESIGN
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9997898535618174	WITHOUT_CLASSIFICATION	2.1014643818262541E-4	DESIGN
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9992644968288183	WITHOUT_CLASSIFICATION	7.355031711816193E-4	DESIGN
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9999982233502422	WITHOUT_CLASSIFICATION	1.7766497577154354E-6	DESIGN
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.999976566973163	WITHOUT_CLASSIFICATION	2.3433026837134973E-5	DESIGN
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.999860491251457	WITHOUT_CLASSIFICATION	1.3950874854296816E-4	DESIGN
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999996792180615	WITHOUT_CLASSIFICATION	3.207819383864384E-7	DESIGN
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9996770811244202	WITHOUT_CLASSIFICATION	3.2291887557984317E-4	DESIGN
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.999986944524603	WITHOUT_CLASSIFICATION	1.305547539685471E-5	DESIGN
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999975526555647	WITHOUT_CLASSIFICATION	2.447344435246816E-6	DESIGN
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999912731532035	WITHOUT_CLASSIFICATION	8.7268467965833E-6	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9906575844895229	WITHOUT_CLASSIFICATION	0.00934241551047706	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9999109026340199	WITHOUT_CLASSIFICATION	8.909736598015967E-5	DESIGN
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9991546624923718	WITHOUT_CLASSIFICATION	8.453375076281649E-4	DESIGN
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999925796305018	WITHOUT_CLASSIFICATION	7.420369498148111E-6	DESIGN
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999840615343248	WITHOUT_CLASSIFICATION	1.593846567513921E-5	DESIGN
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9997381760444806	WITHOUT_CLASSIFICATION	2.618239555194327E-4	DESIGN
/* expected */	WITHOUT_CLASSIFICATION	0.9999963416533266	WITHOUT_CLASSIFICATION	3.6583466732547837E-6	DESIGN
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9979737186759094	WITHOUT_CLASSIFICATION	0.002026281324090621	DESIGN
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999558306677017	WITHOUT_CLASSIFICATION	4.4169332298350644E-5	DESIGN
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999999925508537	WITHOUT_CLASSIFICATION	7.449146335590783E-9	DESIGN
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9996865268021249	WITHOUT_CLASSIFICATION	3.13473197875088E-4	DESIGN
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999964939156301	WITHOUT_CLASSIFICATION	3.5060843700145635E-6	DESIGN
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999805588609435	WITHOUT_CLASSIFICATION	1.9441139056426756E-5	DESIGN
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999966133398135	WITHOUT_CLASSIFICATION	3.3866601865548967E-6	DESIGN
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999989615608457	WITHOUT_CLASSIFICATION	1.0384391543837782E-6	DESIGN
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9998575927623535	WITHOUT_CLASSIFICATION	1.4240723764643765E-4	DESIGN
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999894525224088	WITHOUT_CLASSIFICATION	1.0547477591307065E-5	DESIGN
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9996747225627918	WITHOUT_CLASSIFICATION	3.252774372082314E-4	DESIGN
// build scope names string	WITHOUT_CLASSIFICATION	0.9999474626615629	WITHOUT_CLASSIFICATION	5.253733843711522E-5	DESIGN
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999736046379346	WITHOUT_CLASSIFICATION	2.6395362065489603E-5	DESIGN
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.6636508438014644	DESIGN	0.3363491561985355	WITHOUT_CLASSIFICATION
// finally	WITHOUT_CLASSIFICATION	0.9999344452092888	WITHOUT_CLASSIFICATION	6.555479071131846E-5	DESIGN
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9994148441096622	WITHOUT_CLASSIFICATION	5.851558903377541E-4	DESIGN
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.999938376713999	WITHOUT_CLASSIFICATION	6.162328600107601E-5	DESIGN
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999990243835146	WITHOUT_CLASSIFICATION	9.756164854101581E-7	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.993853829976292	WITHOUT_CLASSIFICATION	0.00614617002370808	DESIGN
// specific arity	WITHOUT_CLASSIFICATION	0.9999977305364531	WITHOUT_CLASSIFICATION	2.2694635468685096E-6	DESIGN
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.999842708794666	WITHOUT_CLASSIFICATION	1.5729120533416397E-4	DESIGN
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999843726406279	WITHOUT_CLASSIFICATION	1.5627359372115753E-5	DESIGN
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9998950522890679	WITHOUT_CLASSIFICATION	1.0494771093202993E-4	DESIGN
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9985842401444307	WITHOUT_CLASSIFICATION	0.0014157598555692866	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999363746504765	WITHOUT_CLASSIFICATION	6.362534952348446E-5	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999363746504765	WITHOUT_CLASSIFICATION	6.362534952348446E-5	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9998589099724811	WITHOUT_CLASSIFICATION	1.410900275189618E-4	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9998589099724811	WITHOUT_CLASSIFICATION	1.410900275189618E-4	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.899117085934885	WITHOUT_CLASSIFICATION	0.1008829140651149	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.899117085934885	WITHOUT_CLASSIFICATION	0.1008829140651149	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999719493597041	WITHOUT_CLASSIFICATION	2.8050640295871337E-5	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999719493597041	WITHOUT_CLASSIFICATION	2.8050640295871337E-5	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999959552336811	WITHOUT_CLASSIFICATION	4.044766318783611E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999959552336811	WITHOUT_CLASSIFICATION	4.044766318783611E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999959552336811	WITHOUT_CLASSIFICATION	4.044766318783611E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999959552336811	WITHOUT_CLASSIFICATION	4.044766318783611E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999959552336811	WITHOUT_CLASSIFICATION	4.044766318783611E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999959552336811	WITHOUT_CLASSIFICATION	4.044766318783611E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999959552336811	WITHOUT_CLASSIFICATION	4.044766318783611E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999959552336811	WITHOUT_CLASSIFICATION	4.044766318783611E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999959552336811	WITHOUT_CLASSIFICATION	4.044766318783611E-6	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999755333311735	WITHOUT_CLASSIFICATION	2.446666882638862E-5	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999755333311735	WITHOUT_CLASSIFICATION	2.446666882638862E-5	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999755333311735	WITHOUT_CLASSIFICATION	2.446666882638862E-5	DESIGN
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9998281478980146	WITHOUT_CLASSIFICATION	1.7185210198535265E-4	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999984173175502	WITHOUT_CLASSIFICATION	1.582682449706435E-6	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999984173175502	WITHOUT_CLASSIFICATION	1.582682449706435E-6	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999984173175502	WITHOUT_CLASSIFICATION	1.582682449706435E-6	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9971678651942918	WITHOUT_CLASSIFICATION	0.002832134805708212	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9971678651942918	WITHOUT_CLASSIFICATION	0.002832134805708212	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9971678651942918	WITHOUT_CLASSIFICATION	0.002832134805708212	DESIGN
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999363512412058	WITHOUT_CLASSIFICATION	6.364875879421206E-5	DESIGN
// backspace	WITHOUT_CLASSIFICATION	0.9999747497781468	WITHOUT_CLASSIFICATION	2.5250221853163797E-5	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998048862214061	WITHOUT_CLASSIFICATION	1.9511377859392898E-4	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998231495917566	WITHOUT_CLASSIFICATION	1.7685040824346187E-4	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998231495917566	WITHOUT_CLASSIFICATION	1.7685040824346187E-4	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998231495917566	WITHOUT_CLASSIFICATION	1.7685040824346187E-4	DESIGN
/* package-private */	WITHOUT_CLASSIFICATION	0.9999276601596846	WITHOUT_CLASSIFICATION	7.233984031541613E-5	DESIGN
// fall through	WITHOUT_CLASSIFICATION	0.9999642234137618	WITHOUT_CLASSIFICATION	3.5776586238308106E-5	DESIGN
// fall through	WITHOUT_CLASSIFICATION	0.9999642234137618	WITHOUT_CLASSIFICATION	3.5776586238308106E-5	DESIGN
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9996156842939672	WITHOUT_CLASSIFICATION	3.843157060328997E-4	DESIGN
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999999171477486	WITHOUT_CLASSIFICATION	8.285225137144085E-8	DESIGN
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999999171477486	WITHOUT_CLASSIFICATION	8.285225137144085E-8	DESIGN
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9844984752572582	DESIGN	0.015501524742741704	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999333429404543	WITHOUT_CLASSIFICATION	6.665705954563456E-5	DESIGN
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9996190172818706	WITHOUT_CLASSIFICATION	3.809827181294106E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998736353417385	WITHOUT_CLASSIFICATION	1.263646582615901E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998736353417385	WITHOUT_CLASSIFICATION	1.263646582615901E-4	DESIGN
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9995445605696137	WITHOUT_CLASSIFICATION	4.554394303863341E-4	DESIGN
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.713600555562882	WITHOUT_CLASSIFICATION	0.28639944443711784	DESIGN
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9996212033532633	WITHOUT_CLASSIFICATION	3.787966467365945E-4	DESIGN
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.6346439664847515	WITHOUT_CLASSIFICATION	0.3653560335152485	DESIGN
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9995497526260979	WITHOUT_CLASSIFICATION	4.502473739020881E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998736353417385	WITHOUT_CLASSIFICATION	1.263646582615901E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998736353417385	WITHOUT_CLASSIFICATION	1.263646582615901E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998736353417385	WITHOUT_CLASSIFICATION	1.263646582615901E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998736353417385	WITHOUT_CLASSIFICATION	1.263646582615901E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998736353417385	WITHOUT_CLASSIFICATION	1.263646582615901E-4	DESIGN
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999292278543843	WITHOUT_CLASSIFICATION	7.077214561567137E-5	DESIGN
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999147795629031	WITHOUT_CLASSIFICATION	8.522043709690477E-5	DESIGN
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9998688760556766	WITHOUT_CLASSIFICATION	1.3112394432327328E-4	DESIGN
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.999981322210796	WITHOUT_CLASSIFICATION	1.8677789203925597E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997904595092874	WITHOUT_CLASSIFICATION	2.09540490712541E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997904595092874	WITHOUT_CLASSIFICATION	2.09540490712541E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997904595092874	WITHOUT_CLASSIFICATION	2.09540490712541E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997904595092874	WITHOUT_CLASSIFICATION	2.09540490712541E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997904595092874	WITHOUT_CLASSIFICATION	2.09540490712541E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997904595092874	WITHOUT_CLASSIFICATION	2.09540490712541E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997904595092874	WITHOUT_CLASSIFICATION	2.09540490712541E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997904595092874	WITHOUT_CLASSIFICATION	2.09540490712541E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997904595092874	WITHOUT_CLASSIFICATION	2.09540490712541E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997904595092874	WITHOUT_CLASSIFICATION	2.09540490712541E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997904595092874	WITHOUT_CLASSIFICATION	2.09540490712541E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997904595092874	WITHOUT_CLASSIFICATION	2.09540490712541E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997904595092874	WITHOUT_CLASSIFICATION	2.09540490712541E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997904595092874	WITHOUT_CLASSIFICATION	2.09540490712541E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997904595092874	WITHOUT_CLASSIFICATION	2.09540490712541E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997904595092874	WITHOUT_CLASSIFICATION	2.09540490712541E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997904595092874	WITHOUT_CLASSIFICATION	2.09540490712541E-4	DESIGN
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999998432941911	WITHOUT_CLASSIFICATION	1.567058088034875E-7	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997904595092874	WITHOUT_CLASSIFICATION	2.09540490712541E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997904595092874	WITHOUT_CLASSIFICATION	2.09540490712541E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997904595092874	WITHOUT_CLASSIFICATION	2.09540490712541E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997904595092874	WITHOUT_CLASSIFICATION	2.09540490712541E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997904595092874	WITHOUT_CLASSIFICATION	2.09540490712541E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997904595092874	WITHOUT_CLASSIFICATION	2.09540490712541E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997904595092874	WITHOUT_CLASSIFICATION	2.09540490712541E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997904595092874	WITHOUT_CLASSIFICATION	2.09540490712541E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997904595092874	WITHOUT_CLASSIFICATION	2.09540490712541E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997904595092874	WITHOUT_CLASSIFICATION	2.09540490712541E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997904595092874	WITHOUT_CLASSIFICATION	2.09540490712541E-4	DESIGN
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9996467205573422	WITHOUT_CLASSIFICATION	3.5327944265783234E-4	DESIGN
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9995003384205222	WITHOUT_CLASSIFICATION	4.996615794777129E-4	DESIGN
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999987045736644	WITHOUT_CLASSIFICATION	1.295426335647624E-6	DESIGN
// get "self"	WITHOUT_CLASSIFICATION	0.9999939621123433	WITHOUT_CLASSIFICATION	6.037887656729047E-6	DESIGN
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999962477480104	WITHOUT_CLASSIFICATION	3.752251989598114E-6	DESIGN
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999378525090094	WITHOUT_CLASSIFICATION	6.214749099058619E-5	DESIGN
// only public methods	WITHOUT_CLASSIFICATION	0.9994604811788145	WITHOUT_CLASSIFICATION	5.395188211855842E-4	DESIGN
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999995473848547	WITHOUT_CLASSIFICATION	4.5261514524853165E-7	DESIGN
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9984844831671081	WITHOUT_CLASSIFICATION	0.0015155168328919136	DESIGN
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9998891225502747	WITHOUT_CLASSIFICATION	1.1087744972531075E-4	DESIGN
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999950660718655	WITHOUT_CLASSIFICATION	4.9339281345545305E-6	DESIGN
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999412611827172	WITHOUT_CLASSIFICATION	5.873881728285543E-5	DESIGN
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999889633347614	WITHOUT_CLASSIFICATION	1.103666523865975E-5	DESIGN
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999974431399246	WITHOUT_CLASSIFICATION	2.5568600755161494E-6	DESIGN
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9980246387962308	WITHOUT_CLASSIFICATION	0.001975361203769174	DESIGN
// indices for temp values	WITHOUT_CLASSIFICATION	0.999969465455395	WITHOUT_CLASSIFICATION	3.05345446049152E-5	DESIGN
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9997780822023794	WITHOUT_CLASSIFICATION	2.219177976207292E-4	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999984418320292	WITHOUT_CLASSIFICATION	1.5581679707914136E-6	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999984418320292	WITHOUT_CLASSIFICATION	1.5581679707914136E-6	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999984418320292	WITHOUT_CLASSIFICATION	1.5581679707914136E-6	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999984418320292	WITHOUT_CLASSIFICATION	1.5581679707914136E-6	DESIGN
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.999999677008022	WITHOUT_CLASSIFICATION	3.2299197815309886E-7	DESIGN
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9999973713608017	WITHOUT_CLASSIFICATION	2.6286391983618015E-6	DESIGN
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999962697908906	WITHOUT_CLASSIFICATION	3.7302091094856914E-6	DESIGN
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999962697908906	WITHOUT_CLASSIFICATION	3.7302091094856914E-6	DESIGN
// set self to the class	WITHOUT_CLASSIFICATION	0.9999879596061996	WITHOUT_CLASSIFICATION	1.2040393800387517E-5	DESIGN
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999566143425832	WITHOUT_CLASSIFICATION	4.338565741670981E-5	DESIGN
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999924631850944	WITHOUT_CLASSIFICATION	7.536814905623982E-6	DESIGN
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.999637723587434	WITHOUT_CLASSIFICATION	3.622764125661365E-4	DESIGN
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999958125692809	WITHOUT_CLASSIFICATION	4.1874307190323025E-6	DESIGN
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999730203028571	WITHOUT_CLASSIFICATION	2.6979697142870986E-5	DESIGN
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999979536501798	WITHOUT_CLASSIFICATION	2.046349820155626E-6	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9997226155404287	WITHOUT_CLASSIFICATION	2.773844595712342E-4	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9997226155404287	WITHOUT_CLASSIFICATION	2.773844595712342E-4	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9997226155404287	WITHOUT_CLASSIFICATION	2.773844595712342E-4	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9997226155404287	WITHOUT_CLASSIFICATION	2.773844595712342E-4	DESIGN
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999192117872437	WITHOUT_CLASSIFICATION	8.078821275622693E-5	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.7650491278314	WITHOUT_CLASSIFICATION	0.2349508721686	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.7650491278314	WITHOUT_CLASSIFICATION	0.2349508721686	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.7650491278314	WITHOUT_CLASSIFICATION	0.2349508721686	DESIGN
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9995810675960412	WITHOUT_CLASSIFICATION	4.1893240395897397E-4	DESIGN
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999443811346616	WITHOUT_CLASSIFICATION	5.561886533841862E-5	DESIGN
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9998523692310797	WITHOUT_CLASSIFICATION	1.4763076892024184E-4	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5402258376233736	DESIGN	0.45977416237662644	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5402258376233736	DESIGN	0.45977416237662644	WITHOUT_CLASSIFICATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9997791145977618	WITHOUT_CLASSIFICATION	2.2088540223808023E-4	DESIGN
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.8755936728535315	WITHOUT_CLASSIFICATION	0.12440632714646847	DESIGN
/* not a class */	WITHOUT_CLASSIFICATION	0.9999261832993813	WITHOUT_CLASSIFICATION	7.381670061863171E-5	DESIGN
/* not a class */	WITHOUT_CLASSIFICATION	0.9999261832993813	WITHOUT_CLASSIFICATION	7.381670061863171E-5	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9990990319997446	WITHOUT_CLASSIFICATION	9.0096800025537E-4	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9990990319997446	WITHOUT_CLASSIFICATION	9.0096800025537E-4	DESIGN
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999970608095079	WITHOUT_CLASSIFICATION	2.93919049208114E-6	DESIGN
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9998532649290658	WITHOUT_CLASSIFICATION	1.467350709341366E-4	DESIGN
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999863734531517	WITHOUT_CLASSIFICATION	1.362654684832769E-5	DESIGN
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999361264565221	WITHOUT_CLASSIFICATION	6.387354347794803E-5	DESIGN
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9998329821673781	WITHOUT_CLASSIFICATION	1.670178326217947E-4	DESIGN
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999830719476703	WITHOUT_CLASSIFICATION	1.6928052329681198E-5	DESIGN
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999883772593156	WITHOUT_CLASSIFICATION	1.1622740684373013E-5	DESIGN
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.7111932735373637	WITHOUT_CLASSIFICATION	0.28880672646263617	DESIGN
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9992589602735364	WITHOUT_CLASSIFICATION	7.41039726463503E-4	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999665750773717	WITHOUT_CLASSIFICATION	3.342492262831744E-5	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999665750773717	WITHOUT_CLASSIFICATION	3.342492262831744E-5	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999549326187984	WITHOUT_CLASSIFICATION	4.5067381201628674E-5	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999549326187984	WITHOUT_CLASSIFICATION	4.5067381201628674E-5	DESIGN
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999088614498296	WITHOUT_CLASSIFICATION	9.113855017040071E-5	DESIGN
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999108308216815	WITHOUT_CLASSIFICATION	8.916917831845484E-5	DESIGN
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.999915857150421	WITHOUT_CLASSIFICATION	8.414284957900863E-5	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999228324795443	WITHOUT_CLASSIFICATION	7.716752045572866E-5	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999228324795443	WITHOUT_CLASSIFICATION	7.716752045572866E-5	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999228324795443	WITHOUT_CLASSIFICATION	7.716752045572866E-5	DESIGN
// line 286	WITHOUT_CLASSIFICATION	0.9999833486151817	WITHOUT_CLASSIFICATION	1.665138481825196E-5	DESIGN
// line 476	WITHOUT_CLASSIFICATION	0.9999713310832065	WITHOUT_CLASSIFICATION	2.866891679353428E-5	DESIGN
// line 513	WITHOUT_CLASSIFICATION	0.9999774463840579	WITHOUT_CLASSIFICATION	2.2553615941975086E-5	DESIGN
// line 530	WITHOUT_CLASSIFICATION	0.9999782774557617	WITHOUT_CLASSIFICATION	2.172254423818427E-5	DESIGN
// line 533	WITHOUT_CLASSIFICATION	0.9999739689650732	WITHOUT_CLASSIFICATION	2.6031034926814677E-5	DESIGN
// line 537	WITHOUT_CLASSIFICATION	0.9999772962071097	WITHOUT_CLASSIFICATION	2.2703792890269703E-5	DESIGN
// line 551	WITHOUT_CLASSIFICATION	0.9999759144768241	WITHOUT_CLASSIFICATION	2.408552317591591E-5	DESIGN
// end loop	WITHOUT_CLASSIFICATION	0.9999850842266684	WITHOUT_CLASSIFICATION	1.4915773331475104E-5	DESIGN
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9986959751827222	WITHOUT_CLASSIFICATION	0.0013040248172777576	DESIGN
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9997928524929088	WITHOUT_CLASSIFICATION	2.071475070911567E-4	DESIGN
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9835749542429548	WITHOUT_CLASSIFICATION	0.016425045757045093	DESIGN
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9999976303112782	WITHOUT_CLASSIFICATION	2.36968872183532E-6	DESIGN
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999998524333324	WITHOUT_CLASSIFICATION	1.4756666753121287E-7	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5402258376233736	DESIGN	0.45977416237662644	WITHOUT_CLASSIFICATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.998229332640225	WITHOUT_CLASSIFICATION	0.0017706673597750547	DESIGN
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999019201894314	WITHOUT_CLASSIFICATION	9.80798105685436E-5	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9904036301436786	WITHOUT_CLASSIFICATION	0.009596369856321348	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998865304892925	WITHOUT_CLASSIFICATION	1.1346951070742047E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998865304892925	WITHOUT_CLASSIFICATION	1.1346951070742047E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998865304892925	WITHOUT_CLASSIFICATION	1.1346951070742047E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998865304892925	WITHOUT_CLASSIFICATION	1.1346951070742047E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998865304892925	WITHOUT_CLASSIFICATION	1.1346951070742047E-4	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999081096647103	WITHOUT_CLASSIFICATION	9.189033528968205E-5	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998865304892925	WITHOUT_CLASSIFICATION	1.1346951070742047E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998865304892925	WITHOUT_CLASSIFICATION	1.1346951070742047E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998865304892925	WITHOUT_CLASSIFICATION	1.1346951070742047E-4	DESIGN
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999294778011778	WITHOUT_CLASSIFICATION	7.052219882223977E-5	DESIGN
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9960032231212986	WITHOUT_CLASSIFICATION	0.0039967768787013925	DESIGN
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9999949077852757	WITHOUT_CLASSIFICATION	5.0922147243322705E-6	DESIGN
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9933489385978955	WITHOUT_CLASSIFICATION	0.006651061402104564	DESIGN
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999467768372737	WITHOUT_CLASSIFICATION	5.322316272634109E-5	DESIGN
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9894117598684595	WITHOUT_CLASSIFICATION	0.010588240131540519	DESIGN
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9929544093251242	WITHOUT_CLASSIFICATION	0.007045590674875791	DESIGN
// line 572	WITHOUT_CLASSIFICATION	0.9999802472340327	WITHOUT_CLASSIFICATION	1.9752765967267044E-5	DESIGN
// line 601	WITHOUT_CLASSIFICATION	0.99998098773684	WITHOUT_CLASSIFICATION	1.9012263160020102E-5	DESIGN
// line 601	WITHOUT_CLASSIFICATION	0.99998098773684	WITHOUT_CLASSIFICATION	1.9012263160020102E-5	DESIGN
// line 625	WITHOUT_CLASSIFICATION	0.9999823654496185	WITHOUT_CLASSIFICATION	1.7634550381502012E-5	DESIGN
// line 649	WITHOUT_CLASSIFICATION	0.9999753755317883	WITHOUT_CLASSIFICATION	2.46244682117403E-5	DESIGN
// line 691	WITHOUT_CLASSIFICATION	0.9999780372988284	WITHOUT_CLASSIFICATION	2.196270117163439E-5	DESIGN
// line 723	WITHOUT_CLASSIFICATION	0.9999833377500229	WITHOUT_CLASSIFICATION	1.666224997709242E-5	DESIGN
// line 732	WITHOUT_CLASSIFICATION	0.9999846735594495	WITHOUT_CLASSIFICATION	1.5326440550457343E-5	DESIGN
// line 745	WITHOUT_CLASSIFICATION	0.9999771200251314	WITHOUT_CLASSIFICATION	2.2879974868566317E-5	DESIGN
// line 766	WITHOUT_CLASSIFICATION	0.9999731640267709	WITHOUT_CLASSIFICATION	2.683597322913082E-5	DESIGN
// line 785	WITHOUT_CLASSIFICATION	0.9999783815287961	WITHOUT_CLASSIFICATION	2.1618471203935055E-5	DESIGN
// line 794	WITHOUT_CLASSIFICATION	0.9999737905643693	WITHOUT_CLASSIFICATION	2.6209435630735826E-5	DESIGN
// line 800	WITHOUT_CLASSIFICATION	0.9999810838996772	WITHOUT_CLASSIFICATION	1.8916100322838232E-5	DESIGN
// line 812	WITHOUT_CLASSIFICATION	0.9999862990065911	WITHOUT_CLASSIFICATION	1.3700993408907827E-5	DESIGN
// line 827	WITHOUT_CLASSIFICATION	0.9999841878177721	WITHOUT_CLASSIFICATION	1.581218222786248E-5	DESIGN
// line 839	WITHOUT_CLASSIFICATION	0.9999791911451557	WITHOUT_CLASSIFICATION	2.0808854844358614E-5	DESIGN
// line 845	WITHOUT_CLASSIFICATION	0.9999783793547399	WITHOUT_CLASSIFICATION	2.1620645260196352E-5	DESIGN
// line 864	WITHOUT_CLASSIFICATION	0.9999788922694894	WITHOUT_CLASSIFICATION	2.1107730510476654E-5	DESIGN
// line 886	WITHOUT_CLASSIFICATION	0.9999746221275454	WITHOUT_CLASSIFICATION	2.53778724545824E-5	DESIGN
// line 896	WITHOUT_CLASSIFICATION	0.9999715998548243	WITHOUT_CLASSIFICATION	2.840014517568326E-5	DESIGN
// line 911	WITHOUT_CLASSIFICATION	0.9999766358134474	WITHOUT_CLASSIFICATION	2.336418655259163E-5	DESIGN
// line 929	WITHOUT_CLASSIFICATION	0.9999782935956658	WITHOUT_CLASSIFICATION	2.170640433410681E-5	DESIGN
// line 952	WITHOUT_CLASSIFICATION	0.9999779104363188	WITHOUT_CLASSIFICATION	2.2089563681165507E-5	DESIGN
// line 970	WITHOUT_CLASSIFICATION	0.999975659971619	WITHOUT_CLASSIFICATION	2.4340028380936037E-5	DESIGN
// line 972	WITHOUT_CLASSIFICATION	0.9999799988887806	WITHOUT_CLASSIFICATION	2.000111121933541E-5	DESIGN
// line 991	WITHOUT_CLASSIFICATION	0.9999759777937749	WITHOUT_CLASSIFICATION	2.4022206225089727E-5	DESIGN
// line 1011	WITHOUT_CLASSIFICATION	0.9999819125869444	WITHOUT_CLASSIFICATION	1.808741305569114E-5	DESIGN
// line 1026	WITHOUT_CLASSIFICATION	0.9999852836935179	WITHOUT_CLASSIFICATION	1.4716306482218149E-5	DESIGN
// line 1038	WITHOUT_CLASSIFICATION	0.9999857591484935	WITHOUT_CLASSIFICATION	1.424085150656173E-5	DESIGN
// line 1067	WITHOUT_CLASSIFICATION	0.9999807026952423	WITHOUT_CLASSIFICATION	1.9297304757698327E-5	DESIGN
// line 1085	WITHOUT_CLASSIFICATION	0.9999839982495905	WITHOUT_CLASSIFICATION	1.6001750409434906E-5	DESIGN
// line 1097	WITHOUT_CLASSIFICATION	0.9999816621040241	WITHOUT_CLASSIFICATION	1.833789597589943E-5	DESIGN
// line 1105	WITHOUT_CLASSIFICATION	0.9999829555211989	WITHOUT_CLASSIFICATION	1.7044478801166248E-5	DESIGN
// line 1122	WITHOUT_CLASSIFICATION	0.9999865565753836	WITHOUT_CLASSIFICATION	1.344342461648527E-5	DESIGN
// line 1133	WITHOUT_CLASSIFICATION	0.9999821875329261	WITHOUT_CLASSIFICATION	1.781246707392648E-5	DESIGN
// line 1145	WITHOUT_CLASSIFICATION	0.9999811892617713	WITHOUT_CLASSIFICATION	1.8810738228794607E-5	DESIGN
// line 1169	WITHOUT_CLASSIFICATION	0.9999817342054362	WITHOUT_CLASSIFICATION	1.8265794563721132E-5	DESIGN
// line 1201	WITHOUT_CLASSIFICATION	0.9999868796752345	WITHOUT_CLASSIFICATION	1.3120324765564283E-5	DESIGN
// line 1210	WITHOUT_CLASSIFICATION	0.999986649720105	WITHOUT_CLASSIFICATION	1.3350279895098581E-5	DESIGN
// line 1229	WITHOUT_CLASSIFICATION	0.9999848236575296	WITHOUT_CLASSIFICATION	1.5176342470459833E-5	DESIGN
// line 1261	WITHOUT_CLASSIFICATION	0.9999855039505822	WITHOUT_CLASSIFICATION	1.4496049417934066E-5	DESIGN
// line 1287	WITHOUT_CLASSIFICATION	0.9999875391076122	WITHOUT_CLASSIFICATION	1.2460892387745465E-5	DESIGN
// line 1293	WITHOUT_CLASSIFICATION	0.9999847608743657	WITHOUT_CLASSIFICATION	1.5239125634271081E-5	DESIGN
// line 1307	WITHOUT_CLASSIFICATION	0.9999851594740814	WITHOUT_CLASSIFICATION	1.4840525918592862E-5	DESIGN
// line 1320	WITHOUT_CLASSIFICATION	0.9999886473735796	WITHOUT_CLASSIFICATION	1.135262642038039E-5	DESIGN
// line 1325	WITHOUT_CLASSIFICATION	0.9999870449166548	WITHOUT_CLASSIFICATION	1.2955083345236783E-5	DESIGN
// line 1363	WITHOUT_CLASSIFICATION	0.9999813132681568	WITHOUT_CLASSIFICATION	1.8686731843268682E-5	DESIGN
// line 1398	WITHOUT_CLASSIFICATION	0.9999820521522043	WITHOUT_CLASSIFICATION	1.79478477957733E-5	DESIGN
// line 1448	WITHOUT_CLASSIFICATION	0.9999815581372133	WITHOUT_CLASSIFICATION	1.844186278673906E-5	DESIGN
// line 1456	WITHOUT_CLASSIFICATION	0.9999770295417411	WITHOUT_CLASSIFICATION	2.2970458258979105E-5	DESIGN
// line 1473	WITHOUT_CLASSIFICATION	0.9999819670465442	WITHOUT_CLASSIFICATION	1.8032953455815554E-5	DESIGN
// line 1492	WITHOUT_CLASSIFICATION	0.9999834093845826	WITHOUT_CLASSIFICATION	1.659061541731181E-5	DESIGN
// line 1513	WITHOUT_CLASSIFICATION	0.9999805200710764	WITHOUT_CLASSIFICATION	1.947992892363452E-5	DESIGN
// line 1523	WITHOUT_CLASSIFICATION	0.9999849422093665	WITHOUT_CLASSIFICATION	1.5057790633429925E-5	DESIGN
// line 1562	WITHOUT_CLASSIFICATION	0.9999850472235408	WITHOUT_CLASSIFICATION	1.4952776459210225E-5	DESIGN
// line 1582	WITHOUT_CLASSIFICATION	0.9999859519803708	WITHOUT_CLASSIFICATION	1.4048019629274848E-5	DESIGN
// line 1603	WITHOUT_CLASSIFICATION	0.9999838007570298	WITHOUT_CLASSIFICATION	1.6199242970237932E-5	DESIGN
// line 1603	WITHOUT_CLASSIFICATION	0.9999838007570298	WITHOUT_CLASSIFICATION	1.6199242970237932E-5	DESIGN
// line 1615	WITHOUT_CLASSIFICATION	0.9999818803192088	WITHOUT_CLASSIFICATION	1.811968079125445E-5	DESIGN
// line 1620	WITHOUT_CLASSIFICATION	0.9999882159924819	WITHOUT_CLASSIFICATION	1.1784007518220043E-5	DESIGN
// line 1635	WITHOUT_CLASSIFICATION	0.9999844992526998	WITHOUT_CLASSIFICATION	1.5500747300199692E-5	DESIGN
// line 1652	WITHOUT_CLASSIFICATION	0.9999860162185303	WITHOUT_CLASSIFICATION	1.3983781469681129E-5	DESIGN
// line 1681	WITHOUT_CLASSIFICATION	0.9999832319627069	WITHOUT_CLASSIFICATION	1.676803729315533E-5	DESIGN
// line 1708	WITHOUT_CLASSIFICATION	0.999982706976071	WITHOUT_CLASSIFICATION	1.729302392910838E-5	DESIGN
// line 1716	WITHOUT_CLASSIFICATION	0.9999779460511551	WITHOUT_CLASSIFICATION	2.2053948844921352E-5	DESIGN
// line 1755	WITHOUT_CLASSIFICATION	0.9999796087822047	WITHOUT_CLASSIFICATION	2.039121779525178E-5	DESIGN
// line 1772	WITHOUT_CLASSIFICATION	0.9999834135246474	WITHOUT_CLASSIFICATION	1.6586475352602204E-5	DESIGN
// line 1789	WITHOUT_CLASSIFICATION	0.9999788758601972	WITHOUT_CLASSIFICATION	2.112413980280971E-5	DESIGN
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999739849474905	WITHOUT_CLASSIFICATION	2.6015052509540845E-5	DESIGN
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999739849474905	WITHOUT_CLASSIFICATION	2.6015052509540845E-5	DESIGN
/* force for args */	WITHOUT_CLASSIFICATION	0.9999986034618249	WITHOUT_CLASSIFICATION	1.3965381750525298E-6	DESIGN
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999838102707489	WITHOUT_CLASSIFICATION	1.618972925110414E-5	DESIGN
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999984228082548	WITHOUT_CLASSIFICATION	1.5771917451531666E-6	DESIGN
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999832587589972	WITHOUT_CLASSIFICATION	1.674124100286522E-5	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999976769222565	WITHOUT_CLASSIFICATION	2.323077743509728E-5	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999976769222565	WITHOUT_CLASSIFICATION	2.323077743509728E-5	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999976769222565	WITHOUT_CLASSIFICATION	2.323077743509728E-5	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999976769222565	WITHOUT_CLASSIFICATION	2.323077743509728E-5	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.8695648240035383	WITHOUT_CLASSIFICATION	0.13043517599646176	DESIGN
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9682067668248705	WITHOUT_CLASSIFICATION	0.031793233175129415	DESIGN
// line 313	WITHOUT_CLASSIFICATION	0.9999815036051207	WITHOUT_CLASSIFICATION	1.8496394879336556E-5	DESIGN
// line 339	WITHOUT_CLASSIFICATION	0.9999784236294571	WITHOUT_CLASSIFICATION	2.1576370542881177E-5	DESIGN
// line 361	WITHOUT_CLASSIFICATION	0.9999834862587872	WITHOUT_CLASSIFICATION	1.6513741212834507E-5	DESIGN
// line 413	WITHOUT_CLASSIFICATION	0.9999788840983125	WITHOUT_CLASSIFICATION	2.1115901687556157E-5	DESIGN
// line 451	WITHOUT_CLASSIFICATION	0.9999774562167821	WITHOUT_CLASSIFICATION	2.254378321789823E-5	DESIGN
// line 472	WITHOUT_CLASSIFICATION	0.999981526613856	WITHOUT_CLASSIFICATION	1.847338614403087E-5	DESIGN
// line 500	WITHOUT_CLASSIFICATION	0.9999765771460309	WITHOUT_CLASSIFICATION	2.3422853968953945E-5	DESIGN
// line 515	WITHOUT_CLASSIFICATION	0.9999766374787215	WITHOUT_CLASSIFICATION	2.3362521278549623E-5	DESIGN
// line 555	WITHOUT_CLASSIFICATION	0.9999719573680746	WITHOUT_CLASSIFICATION	2.8042631925343352E-5	DESIGN
// line 582	WITHOUT_CLASSIFICATION	0.9999804845347485	WITHOUT_CLASSIFICATION	1.9515465251491343E-5	DESIGN
// line 619	WITHOUT_CLASSIFICATION	0.9999794420161435	WITHOUT_CLASSIFICATION	2.0557983856393033E-5	DESIGN
// line 636	WITHOUT_CLASSIFICATION	0.9999758768376834	WITHOUT_CLASSIFICATION	2.4123162316571604E-5	DESIGN
// line 669	WITHOUT_CLASSIFICATION	0.9999740249565328	WITHOUT_CLASSIFICATION	2.597504346732318E-5	DESIGN
// line 703	WITHOUT_CLASSIFICATION	0.9999795022662502	WITHOUT_CLASSIFICATION	2.049773374981864E-5	DESIGN
// line 776	WITHOUT_CLASSIFICATION	0.9999722210333304	WITHOUT_CLASSIFICATION	2.7778966669563085E-5	DESIGN
// line 814	WITHOUT_CLASSIFICATION	0.9999809038466277	WITHOUT_CLASSIFICATION	1.9096153372184844E-5	DESIGN
// line 823	WITHOUT_CLASSIFICATION	0.9999836560047681	WITHOUT_CLASSIFICATION	1.634399523193462E-5	DESIGN
// line 854	WITHOUT_CLASSIFICATION	0.9999772516057075	WITHOUT_CLASSIFICATION	2.2748394292459888E-5	DESIGN
// line 872	WITHOUT_CLASSIFICATION	0.9999846563304975	WITHOUT_CLASSIFICATION	1.534366950251483E-5	DESIGN
// line 905	WITHOUT_CLASSIFICATION	0.9999704791891436	WITHOUT_CLASSIFICATION	2.9520810856456607E-5	DESIGN
// line 925	WITHOUT_CLASSIFICATION	0.9999786636305379	WITHOUT_CLASSIFICATION	2.1336369462090347E-5	DESIGN
// line 958	WITHOUT_CLASSIFICATION	0.9999727838276052	WITHOUT_CLASSIFICATION	2.7216172394802743E-5	DESIGN
// line 992	WITHOUT_CLASSIFICATION	0.9999785773683902	WITHOUT_CLASSIFICATION	2.142263160977386E-5	DESIGN
// line 1047	WITHOUT_CLASSIFICATION	0.9999828382936489	WITHOUT_CLASSIFICATION	1.7161706351234116E-5	DESIGN
// line 1072	WITHOUT_CLASSIFICATION	0.9999875169034129	WITHOUT_CLASSIFICATION	1.2483096587043048E-5	DESIGN
// line 1081	WITHOUT_CLASSIFICATION	0.999983349132382	WITHOUT_CLASSIFICATION	1.6650867618118976E-5	DESIGN
// line 1108	WITHOUT_CLASSIFICATION	0.9999838641341057	WITHOUT_CLASSIFICATION	1.6135865894296884E-5	DESIGN
// line 1136	WITHOUT_CLASSIFICATION	0.9999812095913595	WITHOUT_CLASSIFICATION	1.8790408640464824E-5	DESIGN
// line 1168	WITHOUT_CLASSIFICATION	0.9999843004730637	WITHOUT_CLASSIFICATION	1.5699526936244794E-5	DESIGN
// line 1192	WITHOUT_CLASSIFICATION	0.999984687327529	WITHOUT_CLASSIFICATION	1.5312672471007995E-5	DESIGN
// line 1241	WITHOUT_CLASSIFICATION	0.9999854956556483	WITHOUT_CLASSIFICATION	1.4504344351780123E-5	DESIGN
// line 1267	WITHOUT_CLASSIFICATION	0.9999862074585888	WITHOUT_CLASSIFICATION	1.3792541411161383E-5	DESIGN
// line 1286	WITHOUT_CLASSIFICATION	0.9999850092349242	WITHOUT_CLASSIFICATION	1.4990765075841929E-5	DESIGN
// line 1301	WITHOUT_CLASSIFICATION	0.9999838352048704	WITHOUT_CLASSIFICATION	1.6164795129544444E-5	DESIGN
// line 1314	WITHOUT_CLASSIFICATION	0.9999823898290071	WITHOUT_CLASSIFICATION	1.7610170992987492E-5	DESIGN
// line 1333	WITHOUT_CLASSIFICATION	0.9999811903304873	WITHOUT_CLASSIFICATION	1.880966951270122E-5	DESIGN
// line 1362	WITHOUT_CLASSIFICATION	0.9999873278929983	WITHOUT_CLASSIFICATION	1.2672107001797529E-5	DESIGN
// line 1395	WITHOUT_CLASSIFICATION	0.9999809727820894	WITHOUT_CLASSIFICATION	1.9027217910589576E-5	DESIGN
// line 1420	WITHOUT_CLASSIFICATION	0.9999869120659844	WITHOUT_CLASSIFICATION	1.3087934015547273E-5	DESIGN
// line 1439	WITHOUT_CLASSIFICATION	0.9999816079464784	WITHOUT_CLASSIFICATION	1.839205352161807E-5	DESIGN
// line 1476	WITHOUT_CLASSIFICATION	0.9999782838985359	WITHOUT_CLASSIFICATION	2.1716101464146567E-5	DESIGN
// line 1535	WITHOUT_CLASSIFICATION	0.9999829218058393	WITHOUT_CLASSIFICATION	1.707819416071739E-5	DESIGN
// line 1588	WITHOUT_CLASSIFICATION	0.9999809640255733	WITHOUT_CLASSIFICATION	1.9035974426630872E-5	DESIGN
// line 1618	WITHOUT_CLASSIFICATION	0.9999833141928292	WITHOUT_CLASSIFICATION	1.6685807170880445E-5	DESIGN
// line 1643	WITHOUT_CLASSIFICATION	0.9999860251759995	WITHOUT_CLASSIFICATION	1.397482400051256E-5	DESIGN
// line 1669	WITHOUT_CLASSIFICATION	0.9999801637020053	WITHOUT_CLASSIFICATION	1.9836297994768894E-5	DESIGN
// line 1728	WITHOUT_CLASSIFICATION	0.9999860991458853	WITHOUT_CLASSIFICATION	1.3900854114605643E-5	DESIGN
// line 1753	WITHOUT_CLASSIFICATION	0.9999804759231351	WITHOUT_CLASSIFICATION	1.9524076864841337E-5	DESIGN
// line 1779	WITHOUT_CLASSIFICATION	0.9999749917400534	WITHOUT_CLASSIFICATION	2.500825994652178E-5	DESIGN
// line 1794	WITHOUT_CLASSIFICATION	0.9999770077290068	WITHOUT_CLASSIFICATION	2.2992270993160792E-5	DESIGN
// line 1812	WITHOUT_CLASSIFICATION	0.9999869760874073	WITHOUT_CLASSIFICATION	1.3023912592673693E-5	DESIGN
// line 1837	WITHOUT_CLASSIFICATION	0.9999861335746604	WITHOUT_CLASSIFICATION	1.3866425339641657E-5	DESIGN
// line 1895	WITHOUT_CLASSIFICATION	0.9999810260088801	WITHOUT_CLASSIFICATION	1.897399111991365E-5	DESIGN
// line 1925	WITHOUT_CLASSIFICATION	0.999984227960664	WITHOUT_CLASSIFICATION	1.5772039336036565E-5	DESIGN
// line 1950	WITHOUT_CLASSIFICATION	0.9999804023385108	WITHOUT_CLASSIFICATION	1.9597661489204574E-5	DESIGN
// line 1992	WITHOUT_CLASSIFICATION	0.9999840431973273	WITHOUT_CLASSIFICATION	1.595680267271927E-5	DESIGN
// line 2014	WITHOUT_CLASSIFICATION	0.999987876583115	WITHOUT_CLASSIFICATION	1.2123416884980738E-5	DESIGN
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9864425986752241	WITHOUT_CLASSIFICATION	0.013557401324775852	DESIGN
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9998264010370709	WITHOUT_CLASSIFICATION	1.7359896292920606E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9991842956096482	WITHOUT_CLASSIFICATION	8.157043903518746E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9991842956096482	WITHOUT_CLASSIFICATION	8.157043903518746E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9991842956096482	WITHOUT_CLASSIFICATION	8.157043903518746E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9991842956096482	WITHOUT_CLASSIFICATION	8.157043903518746E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9991842956096482	WITHOUT_CLASSIFICATION	8.157043903518746E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9991842956096482	WITHOUT_CLASSIFICATION	8.157043903518746E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9991842956096482	WITHOUT_CLASSIFICATION	8.157043903518746E-4	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9996701475798285	WITHOUT_CLASSIFICATION	3.298524201714981E-4	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9996701475798285	WITHOUT_CLASSIFICATION	3.298524201714981E-4	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9996701475798285	WITHOUT_CLASSIFICATION	3.298524201714981E-4	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9996701475798285	WITHOUT_CLASSIFICATION	3.298524201714981E-4	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9990659081882789	WITHOUT_CLASSIFICATION	9.340918117212342E-4	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9990659081882789	WITHOUT_CLASSIFICATION	9.340918117212342E-4	DESIGN
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9998024205585556	WITHOUT_CLASSIFICATION	1.9757944144431708E-4	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999960386578706	WITHOUT_CLASSIFICATION	3.961342129459426E-6	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999960386578706	WITHOUT_CLASSIFICATION	3.961342129459426E-6	DESIGN
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9999987809709836	WITHOUT_CLASSIFICATION	1.2190290164710802E-6	DESIGN
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999022143491064	WITHOUT_CLASSIFICATION	9.778565089362997E-5	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999972519437607	WITHOUT_CLASSIFICATION	2.748056239400115E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999972519437607	WITHOUT_CLASSIFICATION	2.748056239400115E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999972519437607	WITHOUT_CLASSIFICATION	2.748056239400115E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999972519437607	WITHOUT_CLASSIFICATION	2.748056239400115E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999972519437607	WITHOUT_CLASSIFICATION	2.748056239400115E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999972519437607	WITHOUT_CLASSIFICATION	2.748056239400115E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999972519437607	WITHOUT_CLASSIFICATION	2.748056239400115E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999991503997027	WITHOUT_CLASSIFICATION	8.496002973943737E-7	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993468320024	WITHOUT_CLASSIFICATION	6.531679976196105E-7	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.99999986353588	WITHOUT_CLASSIFICATION	1.364641199624889E-7	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.99999986353588	WITHOUT_CLASSIFICATION	1.364641199624889E-7	DESIGN
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999263112846589	WITHOUT_CLASSIFICATION	7.368871534107868E-5	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9997234291535341	WITHOUT_CLASSIFICATION	2.7657084646585657E-4	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9997234291535341	WITHOUT_CLASSIFICATION	2.7657084646585657E-4	DESIGN
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.999983710578646	WITHOUT_CLASSIFICATION	1.6289421354104313E-5	DESIGN
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.6702230415687365	WITHOUT_CLASSIFICATION	0.32977695843126353	DESIGN
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9829616417621336	WITHOUT_CLASSIFICATION	0.017038358237866317	DESIGN
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9998257346050211	WITHOUT_CLASSIFICATION	1.742653949788255E-4	DESIGN
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9998654418099159	WITHOUT_CLASSIFICATION	1.345581900841558E-4	DESIGN
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9999513836922784	WITHOUT_CLASSIFICATION	4.861630772164303E-5	DESIGN
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9995870266498392	WITHOUT_CLASSIFICATION	4.129733501607116E-4	DESIGN
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999759504749184	WITHOUT_CLASSIFICATION	2.404952508166145E-5	DESIGN
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999241889312077	WITHOUT_CLASSIFICATION	7.581106879233985E-5	DESIGN
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9999674204619635	WITHOUT_CLASSIFICATION	3.2579538036563755E-5	DESIGN
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9679957020259804	WITHOUT_CLASSIFICATION	0.03200429797401959	DESIGN
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.999593548568455	WITHOUT_CLASSIFICATION	4.0645143154502384E-4	DESIGN
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.999999006908017	WITHOUT_CLASSIFICATION	9.930919829129723E-7	DESIGN
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9999993872753712	WITHOUT_CLASSIFICATION	6.127246288654299E-7	DESIGN
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999848640779343	WITHOUT_CLASSIFICATION	1.513592206561093E-5	DESIGN
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999979227805712	WITHOUT_CLASSIFICATION	2.0772194287976547E-6	DESIGN
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999979818614928	WITHOUT_CLASSIFICATION	2.018138507242501E-6	DESIGN
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.999927401627216	WITHOUT_CLASSIFICATION	7.259837278392231E-5	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9992074760098055	WITHOUT_CLASSIFICATION	7.925239901944229E-4	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9992074760098055	WITHOUT_CLASSIFICATION	7.925239901944229E-4	DESIGN
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.999984087364787	WITHOUT_CLASSIFICATION	1.591263521295864E-5	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999865655652854	WITHOUT_CLASSIFICATION	1.3434434714654862E-5	DESIGN
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.999959411014009	WITHOUT_CLASSIFICATION	4.058898599105362E-5	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9991491241593092	WITHOUT_CLASSIFICATION	8.508758406907351E-4	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999699590844339	WITHOUT_CLASSIFICATION	3.004091556611509E-5	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999699590844339	WITHOUT_CLASSIFICATION	3.004091556611509E-5	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999699590844339	WITHOUT_CLASSIFICATION	3.004091556611509E-5	DESIGN
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9989380575703046	WITHOUT_CLASSIFICATION	0.0010619424296954114	DESIGN
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999071599808896	WITHOUT_CLASSIFICATION	9.284001911035566E-5	DESIGN
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9994797377831898	WITHOUT_CLASSIFICATION	5.202622168102787E-4	DESIGN
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9997206945093067	WITHOUT_CLASSIFICATION	2.7930549069329387E-4	DESIGN
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.6305180486629098	DESIGN	0.3694819513370903	WITHOUT_CLASSIFICATION
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999941147842002	WITHOUT_CLASSIFICATION	5.885215799814948E-6	DESIGN
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999979107293344	WITHOUT_CLASSIFICATION	2.089270665688712E-6	DESIGN
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9962469193561139	WITHOUT_CLASSIFICATION	0.003753080643886029	DESIGN
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999310054299696	WITHOUT_CLASSIFICATION	6.899457003038253E-5	DESIGN
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999814376286525	WITHOUT_CLASSIFICATION	1.856237134736567E-5	DESIGN
// reset buffer	WITHOUT_CLASSIFICATION	0.9999958422617596	WITHOUT_CLASSIFICATION	4.15773824037969E-6	DESIGN
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9999751478255042	WITHOUT_CLASSIFICATION	2.485217449579152E-5	DESIGN
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.5765188298625565	WITHOUT_CLASSIFICATION	0.42348117013744346	DESIGN
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.7535165620349348	WITHOUT_CLASSIFICATION	0.24648343796506533	DESIGN
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999953000856066	WITHOUT_CLASSIFICATION	4.699914393462099E-6	DESIGN
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999998147654877	WITHOUT_CLASSIFICATION	1.852345124034224E-7	DESIGN
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.999764577758663	WITHOUT_CLASSIFICATION	2.3542224133706464E-4	DESIGN
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999994528811884	WITHOUT_CLASSIFICATION	5.471188115355129E-7	DESIGN
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9999952029814116	WITHOUT_CLASSIFICATION	4.797018588443234E-6	DESIGN
// Fixme: Do we need the check or does Main.java not call this...they should consolidate 	DESIGN	0.8816464462015327	DESIGN	0.11835355379846735	WITHOUT_CLASSIFICATION
// FIXME: move out of this class!	DESIGN	0.9730793837118917	WITHOUT_CLASSIFICATION	0.026920616288108185	DESIGN
// this is a rather ugly hack, but similar to MRI. See hash.c:ruby_setenv and similar in MRI // we search all keys for a case-insensitive match, and use that	DESIGN	0.9959511061469449	DESIGN	0.0040488938530549865	WITHOUT_CLASSIFICATION
// FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.8875764311389502	WITHOUT_CLASSIFICATION	0.11242356886104983	DESIGN
// FIXME: Don't allow multiple threads to do this at once	DESIGN	0.9855484954591011	WITHOUT_CLASSIFICATION	0.014451504540898908	DESIGN
// TODO: eliminate?	DESIGN	0.5738174240831254	WITHOUT_CLASSIFICATION	0.42618257591687453	DESIGN
// TODO: People extending GzipWriter/reader will break.  Find better way here.	DESIGN	0.9994100901174634	DESIGN	5.899098825364992E-4	WITHOUT_CLASSIFICATION
// For JRUBY-2759, when MET choose CET timezone to work around Joda	DESIGN	0.9901901404068119	WITHOUT_CLASSIFICATION	0.009809859593188228	DESIGN
// we might need to perform a DST correction	DESIGN	0.9999096070194585	WITHOUT_CLASSIFICATION	9.039298054154535E-5	DESIGN
// rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9864333544677986	WITHOUT_CLASSIFICATION	0.013566645532201374	DESIGN
/** rb_ary_push_m     * FIXME: Whis is this named "push_m"?     */	DESIGN	0.8518769920210721	WITHOUT_CLASSIFICATION	0.14812300797892783	DESIGN
// from DUP_SETUP // rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.987363843187714	WITHOUT_CLASSIFICATION	0.012636156812286092	DESIGN
//TODO: ary_sort_check should be done here	DESIGN	0.5795593819217597	DESIGN	0.42044061807824024	WITHOUT_CLASSIFICATION
//TODO: ary_sort_check should be done here	DESIGN	0.5795593819217597	DESIGN	0.42044061807824024	WITHOUT_CLASSIFICATION
// TODO: is this correct ?	DESIGN	0.9092155457929444	DESIGN	0.0907844542070556	WITHOUT_CLASSIFICATION
// TODO: make more efficient by not creating IRubyArray[]	DESIGN	0.5364991659231065	DESIGN	0.4635008340768934	WITHOUT_CLASSIFICATION
// TODO: list.subList(from, to).clear() is supposed to clear the sublist from the list. // How can we support this operation?	DESIGN	0.9999882643216293	DESIGN	1.1735678370663691E-5	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.8934641744494649	WITHOUT_CLASSIFICATION	0.1065358255505351	DESIGN
// FIXME: This table will get moved into POSIX library so we can get all actual supported // signals.  This is a quick fix to support basic signals until that happens.	DESIGN	0.9370505694814444	DESIGN	0.06294943051855571	WITHOUT_CLASSIFICATION
// The implementations of these are all bonus (see TODO above)  I was going // to throw an error from these, but it appears to be the wrong place to // do it.	DESIGN	0.7144270118224094	DESIGN	0.28557298817759064	WITHOUT_CLASSIFICATION
// TODO: number formatting here, MRI uses "%-.10g", 1.4 API is a must?	DESIGN	0.976128568889742	DESIGN	0.023871431110258145	WITHOUT_CLASSIFICATION
// TODO: remove	DESIGN	0.5307900201936986	WITHOUT_CLASSIFICATION	0.46920997980630147	DESIGN
// FIXME moved this here to get what's obviously a utility method out of IRubyObject. // perhaps security methods should find their own centralized home at some point.	DESIGN	0.970720085616946	WITHOUT_CLASSIFICATION	0.029279914383054013	DESIGN
// FIXME: Get rid of laziness and handle restricted access elsewhere	DESIGN	0.9990602256924943	WITHOUT_CLASSIFICATION	9.397743075056454E-4	DESIGN
// TODO: Should frozen error have its own distinct class?  If not should more share?	DESIGN	0.999579661961629	DESIGN	4.203380383710569E-4	WITHOUT_CLASSIFICATION
// TODO: this is kinda gross	DESIGN	0.8804628105226894	DESIGN	0.1195371894773106	WITHOUT_CLASSIFICATION
// Not sure how well this works, but it works much better than // just currentTimeMillis by itself.	DESIGN	0.5298552613313993	WITHOUT_CLASSIFICATION	0.4701447386686007	DESIGN
// TODO: exec should replace the current process. // This could be possible with JNA. 	DESIGN	0.5681195619110795	WITHOUT_CLASSIFICATION	0.4318804380889205	DESIGN
// FIXME: In order for Thread to play well with the standard 'new' behavior, // it must provide an allocator that can create empty object instances which // initialize then fills with appropriate data.	DESIGN	0.9998654324521662	WITHOUT_CLASSIFICATION	1.345675478338346E-4	DESIGN
// TODO: not sure that we should skip calling join() altogether. // Thread.join() has some implications for Java Memory Model, etc.	DESIGN	0.9987889909788766	DESIGN	0.0012110090211233905	WITHOUT_CLASSIFICATION
// FIXME: There's some code duplication here with RubyObject#inspect	DESIGN	0.9987858706179263	WITHOUT_CLASSIFICATION	0.0012141293820736947	DESIGN
// FIXME: This should probably do some translation from Ruby priority levels to Java priority levels (until we have green threads)	DESIGN	0.9413621803359535	DESIGN	0.05863781966404645	WITHOUT_CLASSIFICATION
// TODO: no java stringity	DESIGN	0.8753795222224949	WITHOUT_CLASSIFICATION	0.12462047777750505	DESIGN
// need to reexamine this	DESIGN	0.9995884607435533	WITHOUT_CLASSIFICATION	4.1153925644663963E-4	DESIGN
// TODO: These were missing, so we're not handling them elsewhere?	DESIGN	0.991019828275809	DESIGN	0.008980171724191	WITHOUT_CLASSIFICATION
// TODO: why are we duplicating the constants here, and then in // File::Constants below? File::Constants is included in IO.	DESIGN	0.6089103171034576	WITHOUT_CLASSIFICATION	0.39108968289654245	DESIGN
// TODO: this method is not present in MRI!	DESIGN	0.5146353910387136	WITHOUT_CLASSIFICATION	0.4853646089612864	DESIGN
// TODO: This is also defined in the MetaClass too...Consolidate somewhere.	DESIGN	0.9809451204079588	DESIGN	0.0190548795920412	WITHOUT_CLASSIFICATION
// Something wrong we don't know the cwd... // TODO: Is this behavior really desirable? /mov	DESIGN	0.99501566120533	DESIGN	0.004984338794669925	WITHOUT_CLASSIFICATION
/*     * Fixme:  This does not have exact same semantics as RubyArray.join, but they     * probably could be consolidated (perhaps as join(args[], sep, doChomp)).     */	DESIGN	0.5437744166644557	WITHOUT_CLASSIFICATION	0.4562255833355443	DESIGN
// TODO should this be deprecated ? (to be efficient, internals should deal with RubyHash directly)	DESIGN	0.9999671454248177	DESIGN	3.285457518227757E-5	WITHOUT_CLASSIFICATION
// TODO: Implement tty? and isatty.  We have no real capability to // determine this from java, but if we could set tty status, then // we could invoke jruby differently to allow stdin to return true // on this.  This would allow things like cgi.rb to work properly.	DESIGN	0.9999990679398371	DESIGN	9.320601630692635E-7	WITHOUT_CLASSIFICATION
// TODO: better error handling	DESIGN	0.9543304382092003	DESIGN	0.04566956179079974	WITHOUT_CLASSIFICATION
// this seems unlikely to happen unless it's a totally bogus fileno // ...so do we even need to bother trying to create one?	DESIGN	0.9959219272681323	WITHOUT_CLASSIFICATION	0.004078072731867728	DESIGN
// IN FACT, we should probably raise an error, yes?	DESIGN	0.9113992476971592	WITHOUT_CLASSIFICATION	0.0886007523028408	DESIGN
// TODO: Ruby reuses this logic for other "write" behavior by checking if it's an IO and calling write again	DESIGN	0.6884341944125695	DESIGN	0.3115658055874304	WITHOUT_CLASSIFICATION
// FIXME we should probably still be dyncalling 'write' here	DESIGN	0.9361611650059702	WITHOUT_CLASSIFICATION	0.06383883499402966	DESIGN
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9919990308303079	DESIGN	0.008000969169692092	WITHOUT_CLASSIFICATION
// FIXME: I don't like the null checks here	DESIGN	0.9999426485869357	WITHOUT_CLASSIFICATION	5.735141306422466E-5	DESIGN
// TODO: handle writing into original buffer better	DESIGN	0.9976799045995356	DESIGN	0.0023200954004644566	WITHOUT_CLASSIFICATION
// TODO: is this the right thing to do?	DESIGN	0.9986544371288703	DESIGN	0.001345562871129707	WITHOUT_CLASSIFICATION
// TODO: This isn't an exact port of MRI's pipe behavior, so revisit	DESIGN	0.5882896578599818	DESIGN	0.4117103421400182	WITHOUT_CLASSIFICATION
// FIXME: If NativeException is expected to be used from Ruby code, it should provide // a real allocator to be used. Otherwise Class.new will fail, as will marshalling. JRUBY-415	DESIGN	0.7135103544658391	DESIGN	0.286489645534161	WITHOUT_CLASSIFICATION
/* FIXME: finalizer should be dupped here */	DESIGN	0.9944637411641659	WITHOUT_CLASSIFICATION	0.005536258835834081	DESIGN
/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */	DESIGN	0.9928200269063212	WITHOUT_CLASSIFICATION	0.007179973093678816	DESIGN
// FIXME: Obvious issue that not all platforms can display all attributes.  Ugly hacks. // Using generic posix library makes pushing inspect behavior into specific system impls // rather painful.	DESIGN	0.8521339630139778	WITHOUT_CLASSIFICATION	0.14786603698602221	DESIGN
// Workaround for JRUBY-4149	DESIGN	0.8090340887283248	WITHOUT_CLASSIFICATION	0.1909659112716752	DESIGN
// TODO: NOT_ALLOCATABLE_ALLOCATOR may be ok here, but it's unclear how Structs // work with marshalling. Confirm behavior and ensure we're doing this correctly. JRUBY-415	DESIGN	0.6279367555164753	WITHOUT_CLASSIFICATION	0.3720632444835248	DESIGN
// FIXME: This is copied code from RubyArray.  Both RE, Struct, and Array should share one impl // This is also hacky since I construct ruby objects to access ruby arrays through aref instead // of something lower.	DESIGN	0.9999098924525146	DESIGN	9.010754748543651E-5	WITHOUT_CLASSIFICATION
// FIXME: We should not be regenerating this over and over	DESIGN	0.9854413966451416	WITHOUT_CLASSIFICATION	0.014558603354858316	DESIGN
// FIXME: This is probably not very efficient, since it loads all methods for each call	DESIGN	0.6049467938141417	WITHOUT_CLASSIFICATION	0.3950532061858582	DESIGN
// TODO: Consider a better way of synchronizing 	DESIGN	0.9978375709573291	DESIGN	0.0021624290426709007	WITHOUT_CLASSIFICATION
// FIXME: Why was this using a FullFunctionCallbackMethod before that did callSuper?	DESIGN	0.5633740129748154	WITHOUT_CLASSIFICATION	0.43662598702518457	DESIGN
// A cloned method now belongs to a new class.  Set it. // TODO: Make DynamicMethod immutable	DESIGN	0.7955643509182948	WITHOUT_CLASSIFICATION	0.20443564908170525	DESIGN
// FIXME: figure out why we get null sometimes	DESIGN	0.9869608896650925	WITHOUT_CLASSIFICATION	0.013039110334907587	DESIGN
// FIXME: Can get optimized for IEqlNode	DESIGN	0.9999318938228365	WITHOUT_CLASSIFICATION	6.810617716350694E-5	DESIGN
/** rb_mod_remove_cvar     *     * FIXME: any good reason to have two identical methods? (same as remove_class_variable)     */	DESIGN	0.8352732957487021	WITHOUT_CLASSIFICATION	0.16472670425129796	DESIGN
// FIXME: these descriptions should probably be moved out, // to Constantine project which deals with all platform-dependent constants.	DESIGN	0.9961656139682499	WITHOUT_CLASSIFICATION	0.0038343860317501767	DESIGN
// TODO: what about n arg?	DESIGN	0.926348849508805	DESIGN	0.07365115049119493	WITHOUT_CLASSIFICATION
// TODO: rounding mode should not be hard-coded. See #mode.	DESIGN	0.9984804801000497	DESIGN	0.0015195198999503003	WITHOUT_CLASSIFICATION
// regular division with some default precision // TODO: proper algorithm to set the precision	DESIGN	0.9292581034477297	WITHOUT_CLASSIFICATION	0.07074189655227023	DESIGN
// TODO: better algorithm to set precision needed	DESIGN	0.7521918726471803	WITHOUT_CLASSIFICATION	0.24780812735281973	DESIGN
// FIXME: what should these really be? Numeric?       assert x instanceof RubyComplex && y instanceof RubyComplex;	DESIGN	0.7850630439966779	DESIGN	0.2149369560033221	WITHOUT_CLASSIFICATION
// FIXME: what should this really be?       assert x instanceof RubyComplex;	DESIGN	0.9592364611055862	DESIGN	0.0407635388944138	WITHOUT_CLASSIFICATION
// FIXME: the code below is a copy of RubyIO.puts, // and we should avoid copy-paste.	DESIGN	0.679036106160291	WITHOUT_CLASSIFICATION	0.32096389383970897	DESIGN
// Yow...this is still ugly	DESIGN	0.5283559216954059	DESIGN	0.47164407830459415	WITHOUT_CLASSIFICATION
// end hack	DESIGN	0.9973364174692493	WITHOUT_CLASSIFICATION	0.00266358253075081	DESIGN
//TODO: Should next and return also catch here?	DESIGN	0.8125827135322118	DESIGN	0.1874172864677883	WITHOUT_CLASSIFICATION
// TODO: Generalize this type-checking code into IRubyObject helper.	DESIGN	0.7756722248595662	DESIGN	0.22432777514043364	WITHOUT_CLASSIFICATION
// TODO: newTypeError does not offer enough for ruby error string...	DESIGN	0.8199339506952641	WITHOUT_CLASSIFICATION	0.1800660493047359	DESIGN
// FIXME: If true array is common enough we should pre-allocate and stick somewhere	DESIGN	0.9847596974804501	WITHOUT_CLASSIFICATION	0.015240302519549992	DESIGN
// TODO: This is almost RubyModule#instance_methods on the metaClass.  Perhaps refactor.	DESIGN	0.5784480971043766	DESIGN	0.42155190289562344	WITHOUT_CLASSIFICATION
// The following three methods must be defined fast, since they expect to modify the current frame // (i.e. they expect no frame will be allocated for them). JRUBY-1185.	DESIGN	0.9999999196934138	WITHOUT_CLASSIFICATION	8.030658612779939E-8	DESIGN
// FIXME: I think this chunk is equivalent to MRI id2name (and not our public method  // id2name).  Make into method if used more than once.  	DESIGN	0.5819638800352767	WITHOUT_CLASSIFICATION	0.41803611996472334	DESIGN
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9731138115956681	WITHOUT_CLASSIFICATION	0.026886188404331816	DESIGN
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9731138115956681	WITHOUT_CLASSIFICATION	0.026886188404331816	DESIGN
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9731138115956681	WITHOUT_CLASSIFICATION	0.026886188404331816	DESIGN
// optional args, so we have IRubyObject[] // TODO: confirm	DESIGN	0.7740830056367347	WITHOUT_CLASSIFICATION	0.2259169943632653	DESIGN
// TODO: Split this into two sub-classes so that name and constNode can be specified seperately.	DESIGN	0.8398743578381609	DESIGN	0.16012564216183917	WITHOUT_CLASSIFICATION
// TODO: wire into new exception handling mechanism	DESIGN	0.5565235583407591	DESIGN	0.4434764416592411	WITHOUT_CLASSIFICATION
// FIXME: ConstDecl could be two seperate classes (or done differently since constNode and name // never exist at the same time.	DESIGN	0.9986950867118636	WITHOUT_CLASSIFICATION	0.0013049132881364878	DESIGN
// TODO: do above but not below for additional newline nodes	DESIGN	0.5505955547588182	DESIGN	0.44940444524118195	WITHOUT_CLASSIFICATION
// TODO: Figure out how this can happen and possibly remove	DESIGN	0.9500784275168066	DESIGN	0.04992157248319343	WITHOUT_CLASSIFICATION
// TODO: At least ParserSupport.attrset passes argsNode as null.  ImplicitNil is wrong magic for  // setupArgs since it will IRubyObject[] { nil }.  So we need to figure out a nice fast // null pattern for setupArgs. // assert argsNode != null : "receiverNode is not null";	DESIGN	0.9854552875924326	WITHOUT_CLASSIFICATION	0.014544712407567459	DESIGN
// FIXME: JRUBY-3188 ends up with condition returning null...quick fix until I can dig into it	DESIGN	0.9395238444278096	WITHOUT_CLASSIFICATION	0.060476155572190445	DESIGN
// FIXME: I use a for block to implement END node because we need a proc which captures // its enclosing scope.   ForBlock now represents these node and should be renamed.	DESIGN	0.7931394279365631	WITHOUT_CLASSIFICATION	0.20686057206343697	DESIGN
// method has more than 500 lines; we'll need to split it // and therefore need to use a heap-based scope	DESIGN	0.9929352005653248	WITHOUT_CLASSIFICATION	0.0070647994346751345	DESIGN
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.9995458025270187	DESIGN	4.5419747298136636E-4	WITHOUT_CLASSIFICATION
// If it's a single-arg when but contains an array, we know it's a real literal array // FIXME: This is a gross way to figure it out; parser help similar to yield argument passing (expandArguments) would be better	DESIGN	0.9999972018103258	DESIGN	2.7981896742549203E-6	WITHOUT_CLASSIFICATION
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.9995458025270187	DESIGN	4.5419747298136636E-4	WITHOUT_CLASSIFICATION
// XXX: const lookup can trigger const_missing; is that enough to warrant it always being executed?	DESIGN	0.5373655796970838	DESIGN	0.46263442030291624	WITHOUT_CLASSIFICATION
// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.	DESIGN	0.6700082966924623	WITHOUT_CLASSIFICATION	0.32999170330753774	DESIGN
// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.	DESIGN	0.6700082966924623	WITHOUT_CLASSIFICATION	0.32999170330753774	DESIGN
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.6919747351793613	DESIGN	0.3080252648206387	WITHOUT_CLASSIFICATION
// TODO: This filtering is kind of gross...it would be nice to get some parser help here	DESIGN	0.9999753781411196	DESIGN	2.4621858880414916E-5	WITHOUT_CLASSIFICATION
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.6919747351793613	DESIGN	0.3080252648206387	WITHOUT_CLASSIFICATION
// arguments compilers always create IRubyObject[], but we want to use RubyArray.concat here; // FIXME: as a result, this is NOT efficient, since it creates and then later unwraps an array	DESIGN	0.9824309295207467	WITHOUT_CLASSIFICATION	0.01756907047925331	DESIGN
// FIXME: This is temporary since the variable compilers assume we want // args already on stack for assignment. We just pop and continue with // 1.9 args logic.	DESIGN	0.9918954765619459	WITHOUT_CLASSIFICATION	0.008104523438054193	DESIGN
// TODO: reads/writes from frame // TODO: information on scoping // TODO: visibility?	DESIGN	0.9998613976081847	DESIGN	1.386023918151806E-4	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.6009819782860765	DESIGN	0.3990180217139236	WITHOUT_CLASSIFICATION
// TODO: cache?	DESIGN	0.7251459318554637	DESIGN	0.2748540681445363	WITHOUT_CLASSIFICATION
// TODO: cache?	DESIGN	0.7251459318554637	DESIGN	0.2748540681445363	WITHOUT_CLASSIFICATION
// index for the item // this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.9997311153382474	WITHOUT_CLASSIFICATION	2.6888466175254127E-4	DESIGN
// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.999999733437627	WITHOUT_CLASSIFICATION	2.665623729787212E-7	DESIGN
// FIXME: this really ought to be in clinit, but it doesn't matter much	DESIGN	0.8212106276009716	DESIGN	0.17878937239902845	WITHOUT_CLASSIFICATION
// install invokedynamic bootstrapper // TODO need to abstract this setup behind another compiler interface	DESIGN	0.8880090773341618	WITHOUT_CLASSIFICATION	0.11199092266583817	DESIGN
// FIXME: This isn't right for within ensured/rescued code	DESIGN	0.9234800893366737	WITHOUT_CLASSIFICATION	0.07651991066332638	DESIGN
// SSS FIXME: Deprecated!  Going forward, all instructions should come from the CFG	DESIGN	0.976414746052536	WITHOUT_CLASSIFICATION	0.023585253947464014	DESIGN
/* SSS FIXME: Do we need to check if l is same as whatever popped? */	DESIGN	0.9124052120900042	WITHOUT_CLASSIFICATION	0.08759478790999571	DESIGN
// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.9908342385096837	WITHOUT_CLASSIFICATION	0.00916576149031641	DESIGN
// SSS FIXME: I added this in.  Is this correct?	DESIGN	0.9299323770496132	WITHOUT_CLASSIFICATION	0.07006762295038693	DESIGN
// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.9908342385096837	WITHOUT_CLASSIFICATION	0.00916576149031641	DESIGN
// SSS FIXME: Are we guaranteed that we splats dont head to multiple-assignment nodes!  i.e. |*(a,b)|?	DESIGN	0.9975630323916347	WITHOUT_CLASSIFICATION	0.002436967608365419	DESIGN
// SSS FIXME: Can this return anything other than nil?	DESIGN	0.9960399860967539	WITHOUT_CLASSIFICATION	0.003960013903246044	DESIGN
// SSS FIXME: What happens to the add class in this case??	DESIGN	0.7293590584786556	DESIGN	0.2706409415213444	WITHOUT_CLASSIFICATION
// CON FIXME: I don't know how to make case be an expression...does that // logic need to go here?	DESIGN	0.9989126762135923	WITHOUT_CLASSIFICATION	0.0010873237864077482	DESIGN
// SSS FIXME: Where is this set up?  How is this diff from ClassVarDeclNode??	DESIGN	0.8799408310438267	DESIGN	0.12005916895617322	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correct?	DESIGN	0.9639479135964737	WITHOUT_CLASSIFICATION	0.03605208640352619	DESIGN
/** * SSS FIXME: Used anywhere?  I don't see calls to this anywhere    public Operand buildDAsgnAssignment(Node node, IR_Scope s) {        DAsgnNode dasgnNode = (DAsgnNode) node;        s.getVariableCompiler().assignLocalVariable(dasgnNode.getIndex(), dasgnNode.getDepth());    }**/	DESIGN	0.5051139420309297	WITHOUT_CLASSIFICATION	0.49488605796907026	DESIGN
// SSS FIXME: Receiver -- this is the class meta object basically? // Operand receiver = build(defsNode.getReceiverNode(), s);	DESIGN	0.9955719575628178	WITHOUT_CLASSIFICATION	0.004428042437182243	DESIGN
// self = args[0] // SSS FIXME: Verify that this is correct	DESIGN	0.999377947547337	WITHOUT_CLASSIFICATION	6.220524526629957E-4	DESIGN
// SSS FIXME: Is this correct?	DESIGN	0.9639479135964737	WITHOUT_CLASSIFICATION	0.03605208640352619	DESIGN
// SSS FIXME: 1. Is the ordering correct? (poll before next)	DESIGN	0.999240894327798	WITHOUT_CLASSIFICATION	7.591056722020628E-4	DESIGN
// add a "self" recv here // TODO: is this right?	DESIGN	0.9341706976303865	DESIGN	0.06582930236961358	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correctly placed ... at the end of the loop iteration?	DESIGN	0.9714996863439358	WITHOUT_CLASSIFICATION	0.028500313656064306	DESIGN
// SSS FIXME: Where does this go? // m.setLinePosition(arrayNode.getPosition());	DESIGN	0.9992433727289342	WITHOUT_CLASSIFICATION	7.566272710658263E-4	DESIGN
// SSS FIXME: I could make IR_Loop a scope too ... semantically, it is a scope, but, functionally, not sure if this is required yet ...	DESIGN	0.9711066266293911	DESIGN	0.028893373370608915	WITHOUT_CLASSIFICATION
// SSS FIXME: Should this be a string literal or a string? // Dummy class for the script	DESIGN	0.9612318936435849	WITHOUT_CLASSIFICATION	0.03876810635641521	DESIGN
// SSS FIXME: Does int suffice, or do we need long?	DESIGN	0.5471646418449312	WITHOUT_CLASSIFICATION	0.45283535815506887	DESIGN
// SSS FIXME: Correct?  Where does closure arg come from?	DESIGN	0.8285592953578566	WITHOUT_CLASSIFICATION	0.1714407046421434	DESIGN
// SSS FIXME: Should I have a reference to the IR_loop that is being retried?	DESIGN	0.5252915636432783	WITHOUT_CLASSIFICATION	0.4747084363567218	DESIGN
// Simplify the variables too -- to keep these variables in sync with what is actually used in the when clauses // This is not required for correctness reasons, but only for performance reasons.	DESIGN	0.9952562099674908	WITHOUT_CLASSIFICATION	0.004743790032509252	DESIGN
// SSS FIXME: This should never get called for constant svalues	DESIGN	0.9738836990105565	WITHOUT_CLASSIFICATION	0.02611630098944345	DESIGN
// SSS FIXME: Should this be Operand or CompoundString? // Can it happen that symbols are built out of other than compound strings?   // Or can it happen during optimizations that this becomes a generic operand?	DESIGN	0.6160105996229907	WITHOUT_CLASSIFICATION	0.38398940037700924	DESIGN
// TODO: need to get this back into the method signature...now is too late...	DESIGN	0.8662906526547521	DESIGN	0.13370934734524792	WITHOUT_CLASSIFICATION
/* Hack in to replace usual readline with this */	DESIGN	0.989552549932356	WITHOUT_CLASSIFICATION	0.010447450067644116	DESIGN
// bit risky if someone changes completor, but useful for method calls	DESIGN	0.9924400895243589	WITHOUT_CLASSIFICATION	0.007559910475641016	DESIGN
// FIXME:  This determine module is in a strange location and should somehow be in block	DESIGN	0.9644345252325548	WITHOUT_CLASSIFICATION	0.035565474767445183	DESIGN
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.9683784529117274	WITHOUT_CLASSIFICATION	0.03162154708827263	DESIGN
// we basically ignore protocol. let someone report it...	DESIGN	0.9347033435859115	WITHOUT_CLASSIFICATION	0.06529665641408866	DESIGN
// Workaround for a bug in Sun's JDK 1.5.x, see // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6303753	DESIGN	0.9665138845318432	WITHOUT_CLASSIFICATION	0.033486115468156864	DESIGN
// context is null, wipe out the SoftReference (this could be done with a reference queue)	DESIGN	0.9977315131108702	WITHOUT_CLASSIFICATION	0.002268486889129905	DESIGN
// FIXME we want to eliminate these type casts when possible	DESIGN	0.999934047993527	WITHOUT_CLASSIFICATION	6.595200647301941E-5	DESIGN
// TODO: Determine whether we should perhaps store non-singleton class // in the implementationClass	DESIGN	0.8758066096238935	DESIGN	0.12419339037610651	WITHOUT_CLASSIFICATION
// FIXME: set up a CallConfiguration for this	DESIGN	0.9994965615052696	WITHOUT_CLASSIFICATION	5.034384947305386E-4	DESIGN
// FIXME: set up a call configuration for this	DESIGN	0.9974289205142011	WITHOUT_CLASSIFICATION	0.002571079485798935	DESIGN
// TODO: make this do specific-arity calling	DESIGN	0.8140501934119663	DESIGN	0.18594980658803378	WITHOUT_CLASSIFICATION
// add 'new' with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature	DESIGN	0.9990845070161231	WITHOUT_CLASSIFICATION	9.154929838769837E-4	DESIGN
// add method with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature	DESIGN	0.9990893483211497	WITHOUT_CLASSIFICATION	9.106516788502685E-4	DESIGN
// FIXME This whole thing could probably be implemented as a module and // mixed into appropriate classes, especially if it uses either // IOInput/OutputStream or is smart about the kind of IO-like object // it's being used against.	DESIGN	0.9998499042264382	WITHOUT_CLASSIFICATION	1.500957735617634E-4	DESIGN
// using IOInputStream may not be the most performance way, but it's easy.	DESIGN	0.9999742364002325	WITHOUT_CLASSIFICATION	2.576359976741448E-5	DESIGN
// using IOOutputStream may not be the most performance way, but it's easy.	DESIGN	0.9999539397025401	WITHOUT_CLASSIFICATION	4.6060297459980444E-5	DESIGN
// using IOChannel may not be the most performant way, but it's easy.	DESIGN	0.9997722734304089	WITHOUT_CLASSIFICATION	2.2772656959110636E-4	DESIGN
// these extra arrays are really unfortunate; split some of these paths out to eliminate?	DESIGN	0.9879971628243059	WITHOUT_CLASSIFICATION	0.012002837175694156	DESIGN
// TODO: WRONG - get interfaces from class	DESIGN	0.8672298866915649	WITHOUT_CLASSIFICATION	0.13277011330843513	DESIGN
// TODO: catch exception if constant is already set by other // thread	DESIGN	0.963361829296655	WITHOUT_CLASSIFICATION	0.03663817070334493	DESIGN
// TODO: public only?	DESIGN	0.9825651113703027	DESIGN	0.017434888629697304	WITHOUT_CLASSIFICATION
// see note below re: 2-field kludge	DESIGN	0.9995216184037171	WITHOUT_CLASSIFICATION	4.783815962827725E-4	DESIGN
// TODO: protected methods.  this is going to require a rework // of some of the mechanism.	DESIGN	0.9922707803619616	DESIGN	0.007729219638038413	WITHOUT_CLASSIFICATION
// TODO: protected methods.  this is going to require a rework of some of the mechanism.	DESIGN	0.9935096823116227	DESIGN	0.006490317688377233	WITHOUT_CLASSIFICATION
// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods	DESIGN	0.5233403394931171	DESIGN	0.4766596605068829	WITHOUT_CLASSIFICATION
// FIXME: This doesn't actually support anything but String	DESIGN	0.9968167939930406	WITHOUT_CLASSIFICATION	0.0031832060069594105	DESIGN
// again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.6640058474548579	DESIGN	0.3359941525451421	WITHOUT_CLASSIFICATION
// again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.6640058474548579	DESIGN	0.3359941525451421	WITHOUT_CLASSIFICATION
// this needs to be split, since conditional calling #inherited doesn't fit standard ruby semantics	DESIGN	0.9999694589560356	WITHOUT_CLASSIFICATION	3.0541043964438045E-5	DESIGN
// TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.774456159162073	DESIGN	0.22554384083792706	WITHOUT_CLASSIFICATION
// TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.774456159162073	DESIGN	0.22554384083792706	WITHOUT_CLASSIFICATION
// this covers the rare case of lower-case class names (and thus will // fail 99.999% of the time). fortunately, we'll only do this once per // package name. (and seriously, folks, look into best practices...)	DESIGN	0.99107491896868	WITHOUT_CLASSIFICATION	0.008925081031319981	DESIGN
// FIXME: we should also support orgs that use capitalized package // names (including, embarrassingly, the one I work for), but this // should be enabled by a system property, as the expected default // behavior for an upper-case value should be (and is) to treat it // as a class name, and raise an exception if it's not found 	DESIGN	0.8599488018023703	DESIGN	0.14005119819762968	WITHOUT_CLASSIFICATION
// TODO: check for Java reserved names and raise exception if encountered	DESIGN	0.9907945717659944	WITHOUT_CLASSIFICATION	0.009205428234005553	DESIGN
// upper-case package name // TODO: top-level upper-case package was supported in the previous (Ruby-based) // implementation, so leaving as is.  see note at #getProxyOrPackageUnderPackage // re: future approach below the top-level.	DESIGN	0.9852612735781379	DESIGN	0.014738726421862252	WITHOUT_CLASSIFICATION
// FIXME: wtf is this? Why would these use the class?	DESIGN	0.9239650539539442	DESIGN	0.07603494604605578	WITHOUT_CLASSIFICATION
// FIXME: needs to be rethought	DESIGN	0.9970226177777541	WITHOUT_CLASSIFICATION	0.002977382222245841	DESIGN
// TODO: specifying soft refs, may want to compare memory consumption, // behavior with weak refs (specify WEAK in place of SOFT below)	DESIGN	0.7676624112473884	WITHOUT_CLASSIFICATION	0.23233758875261157	DESIGN
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.8236925989433271	WITHOUT_CLASSIFICATION	0.17630740105667275	DESIGN
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.8236925989433271	WITHOUT_CLASSIFICATION	0.17630740105667275	DESIGN
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search	DESIGN	0.5179318775286003	DESIGN	0.48206812247139985	WITHOUT_CLASSIFICATION
// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes)	DESIGN	0.8361964220110278	WITHOUT_CLASSIFICATION	0.1638035779889722	DESIGN
// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes) // TODO: not sure we need this at all, since we only expose // public fields. //field.setAccessible(true);	DESIGN	0.6350041530680827	WITHOUT_CLASSIFICATION	0.3649958469319174	DESIGN
// FIXME: NOT_ALLOCATABLE_ALLOCATOR is probably not right here, since we might // eventually want JavaArray to be marshallable. JRUBY-414	DESIGN	0.9292742769466237	WITHOUT_CLASSIFICATION	0.07072572305337635	DESIGN
// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods.  also, the getDeclared calls may throw SecurityException if // we're running under a restrictive security policy.	DESIGN	0.7794786192098756	DESIGN	0.22052138079012426	WITHOUT_CLASSIFICATION
// don't bother to check if final method, it won't // be there (not generated, can't be!)	DESIGN	0.9999504861968994	WITHOUT_CLASSIFICATION	4.951380310059238E-5	DESIGN
// super calls from proxies must use reflected method // FIXME: possible to make handles do the superclass call?	DESIGN	0.9776003022001134	DESIGN	0.022399697799886653	WITHOUT_CLASSIFICATION
// actual type does not exactly match method return type, re-get converter // FIXME: when the only autoconversions are primitives, this won't be needed	DESIGN	0.9999938930186043	WITHOUT_CLASSIFICATION	6.106981395786464E-6	DESIGN
// FIXME: Ideally JavaObject instances should be marshallable, which means that // the JavaObject metaclass should have an appropriate allocator. JRUBY-414	DESIGN	0.9995401192858673	WITHOUT_CLASSIFICATION	4.5988071413279985E-4	DESIGN
// FIXME: shouldn't need @__java_ovrd_methods, just query locally defined methods.	DESIGN	0.9976017163719192	WITHOUT_CLASSIFICATION	0.0023982836280809117	DESIGN
// We always prepend an org.jruby.proxy package to the beginning // because java and javax packages are protected and signed // jars prevent us generating new classes with those package // names. See JRUBY-2439.	DESIGN	0.9999841643664252	WITHOUT_CLASSIFICATION	1.583563357476573E-5	DESIGN
// TODO: Only used by interface implementation; eliminate it	DESIGN	0.9668054760002487	WITHOUT_CLASSIFICATION	0.033194523999751376	DESIGN
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.9683784529117274	WITHOUT_CLASSIFICATION	0.03162154708827263	DESIGN
// modules are included with a shim class; we must find that shim to handle super() appropriately	DESIGN	0.999474200141232	WITHOUT_CLASSIFICATION	5.257998587680943E-4	DESIGN
// lame generics issues: making Segment class static and manually // inserting cache reference to work around various problems generically // referencing methods/vars across classes.	DESIGN	0.8951562806048614	WITHOUT_CLASSIFICATION	0.10484371939513855	DESIGN
// entry exists, proxy doesn't match. replace. // this could happen if old proxy was gc'ed // TODO: raise exception if stored proxy is non-null? (not gc'ed)	DESIGN	0.8762250498028274	DESIGN	0.12377495019717263	WITHOUT_CLASSIFICATION
// FIXME: How much more obtuse can this be? // Heredoc already parsed this and saved string...Do not parse..just return	DESIGN	0.9472244548322237	WITHOUT_CLASSIFICATION	0.05277554516777625	DESIGN
// ruby constants for strings (should this be moved somewhere else?)	DESIGN	0.9889387964363788	WITHOUT_CLASSIFICATION	0.01106120356362113	DESIGN
// Hacky: Advance position to eat newline here....	DESIGN	0.9182632260915062	WITHOUT_CLASSIFICATION	0.08173677390849375	DESIGN
// FIXME: Not sure what the semantics of transfer are //cFiber.defineFastMethod("transfer", cb.getFastOptMethod("transfer"));	DESIGN	0.9999895452687023	WITHOUT_CLASSIFICATION	1.0454731297662541E-5	DESIGN
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.8429372017695962	DESIGN	0.1570627982304038	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.8429372017695962	DESIGN	0.1570627982304038	WITHOUT_CLASSIFICATION
// ENEBO: Totally weird naming (in MRI is not allocated and is a local var name)	DESIGN	0.9513117909189425	WITHOUT_CLASSIFICATION	0.04868820908105752	DESIGN
// FIXME: Remove this from grammars.	DESIGN	0.9295082363246293	WITHOUT_CLASSIFICATION	0.0704917636753707	DESIGN
/* FIXME: Consider fixing node_assign itself rather than single case*/	DESIGN	0.9973996234250245	WITHOUT_CLASSIFICATION	0.002600376574975459	DESIGN
/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/	DESIGN	0.5605604386553237	WITHOUT_CLASSIFICATION	0.4394395613446762	DESIGN
/* FIXME: lose syntactical elements here (and others like this)*/	DESIGN	0.9997936691080007	WITHOUT_CLASSIFICATION	2.0633089199918815E-4	DESIGN
/* ENEBO: Lots of optz in 1.9 parser here*/	DESIGN	0.9999972236737348	WITHOUT_CLASSIFICATION	2.776326265235968E-6	DESIGN
// This is perhaps innefficient timewise?  Optimal spacewise	DESIGN	0.9671997027564821	WITHOUT_CLASSIFICATION	0.03280029724351775	DESIGN
// This is a dummy scope; we should find a way to make that more explicit	DESIGN	0.9969126352329846	DESIGN	0.003087364767015438	WITHOUT_CLASSIFICATION
// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.9986552857085084	WITHOUT_CLASSIFICATION	0.001344714291491576	DESIGN
// TODO: This probably isn't the best hack, but it works until we can have different // root frame setup for 1.9 easily.	DESIGN	0.9999715670456305	DESIGN	2.8432954369520547E-5	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.6356020708071449	WITHOUT_CLASSIFICATION	0.36439792919285496	DESIGN
// FIXME: I think we need these pushed somewhere?	DESIGN	0.9273260502798657	DESIGN	0.07267394972013437	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.6356020708071449	WITHOUT_CLASSIFICATION	0.36439792919285496	DESIGN
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.6356020708071449	WITHOUT_CLASSIFICATION	0.36439792919285496	DESIGN
// XXX: Again, screwy evaling under previous frame's scope	DESIGN	0.9578040898957761	DESIGN	0.04219591010422389	WITHOUT_CLASSIFICATION
/** * FIXME: This version is faster than the previous, but both suffer from a * crucial flaw: It is impossible to create an ObjectSpace with an iterator * that doesn't either: a. hold on to objects that might otherwise be collected * or b. have no way to guarantee that a call to hasNext() will be correct or * that a subsequent call to next() will produce an object. For our purposes, * for now, this may be acceptable. */	DESIGN	0.898159481706702	WITHOUT_CLASSIFICATION	0.10184051829329792	DESIGN
// FIXME: Maybe not best place, but move it to a good home	DESIGN	0.575105747328881	WITHOUT_CLASSIFICATION	0.4248942526711191	DESIGN
// FIXME: This is gross. Don't do this.	DESIGN	0.9152666855653687	WITHOUT_CLASSIFICATION	0.08473331443463127	DESIGN
/** * * @author headius * FIXME convert to enum ? */	DESIGN	0.9909019250816853	WITHOUT_CLASSIFICATION	0.009098074918314655	DESIGN
// FIXME: No, I don't like it.	DESIGN	0.9996686054717523	WITHOUT_CLASSIFICATION	3.3139452824777467E-4	DESIGN
// TODO: This is probably BAD...	DESIGN	0.9905787338612754	DESIGN	0.009421266138724658	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9910560912687718	WITHOUT_CLASSIFICATION	0.008943908731228262	DESIGN
// invoke callMethodMissing method directly // TODO: this could be further optimized, since some DSLs hit method_missing pretty hard...	DESIGN	0.9979917896296417	DESIGN	0.002008210370358156	WITHOUT_CLASSIFICATION
// TODO this is really ineffient, and potentially a problem everytime anyone require's something. // we should try to make LoadPath a special array object.	DESIGN	0.9781992884915601	DESIGN	0.02180071150843993	WITHOUT_CLASSIFICATION
// FIXME: inefficient; constructing a bignum just for dumping?	DESIGN	0.8531979437320141	WITHOUT_CLASSIFICATION	0.14680205626798587	DESIGN
// FIXME: not very efficient	DESIGN	0.9910560912687718	WITHOUT_CLASSIFICATION	0.008943908731228262	DESIGN
// FIXME: not very efficient	DESIGN	0.9910560912687718	WITHOUT_CLASSIFICATION	0.008943908731228262	DESIGN
// FIXME: not very efficient	DESIGN	0.9910560912687718	WITHOUT_CLASSIFICATION	0.008943908731228262	DESIGN
// FIXME: not very efficient	DESIGN	0.9910560912687718	WITHOUT_CLASSIFICATION	0.008943908731228262	DESIGN
// FIXME: this should go somewhere more generic -- maybe IdUtil	DESIGN	0.6770255258806036	WITHOUT_CLASSIFICATION	0.32297447411939645	DESIGN
// FIXME: potentially could just use ByteList here?	DESIGN	0.802684727543383	WITHOUT_CLASSIFICATION	0.19731527245661692	DESIGN
// FIXME: This is almost entirely duplicated from Main.java	DESIGN	0.9700870211019017	WITHOUT_CLASSIFICATION	0.029912978898098262	DESIGN
// TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.9407740063515624	DESIGN	0.05922599364843774	WITHOUT_CLASSIFICATION
// TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.9407740063515624	DESIGN	0.05922599364843774	WITHOUT_CLASSIFICATION
// grrr, arghh, want to subclass sun.misc.FloatingDecimal, but can't, // so we must do all this (the next 70 lines of code), which has already // been done by FloatingDecimal.	DESIGN	0.9828210028888695	WITHOUT_CLASSIFICATION	0.017178997111130422	DESIGN
// it would be nice (and logical!) if exponent form  // behaved like E/e, and decimal form behaved like f, // but no such luck. hence: 	DESIGN	0.9982023916094634	WITHOUT_CLASSIFICATION	0.0017976083905364912	DESIGN
// This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.9986295987485131	WITHOUT_CLASSIFICATION	0.001370401251486964	DESIGN
// This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.9986295987485131	WITHOUT_CLASSIFICATION	0.001370401251486964	DESIGN
// TODO: get rid of this (lax returns 0.0, strict will throw)	DESIGN	0.9863038603304737	DESIGN	0.013696139669526423	WITHOUT_CLASSIFICATION
// TODO: turn off the negative? will return -0.0 in lax mode	DESIGN	0.9203878419374414	DESIGN	0.07961215806255864	WITHOUT_CLASSIFICATION
// FIXME: this probably belongs in a different package.	DESIGN	0.9262083975047215	WITHOUT_CLASSIFICATION	0.07379160249527843	DESIGN
// TODO: It would be nice to throw a better error for this	DESIGN	0.9999521294080469	DESIGN	4.7870591953158394E-5	WITHOUT_CLASSIFICATION
// TODO: It would be nice to throw a better error for this	DESIGN	0.9999521294080469	DESIGN	4.7870591953158394E-5	WITHOUT_CLASSIFICATION
// FIXME: I don't like this	DESIGN	0.994399580000751	WITHOUT_CLASSIFICATION	0.0056004199992490695	DESIGN
// TODO: It's perhaps just a coincidence that all the channels for // which we should raise are instanceof SelectableChannel, since // stdio is not...so this bothers me slightly. -CON	DESIGN	0.9422735777435878	WITHOUT_CLASSIFICATION	0.05772642225641211	DESIGN
// FIXME: Clearing read buffer here...is this appropriate?	DESIGN	0.5580143734285656	WITHOUT_CLASSIFICATION	0.44198562657143436	DESIGN
// TODO this should entry into error handling somewhere	DESIGN	0.9979806573388369	DESIGN	0.00201934266116308	WITHOUT_CLASSIFICATION
// FIXME: This worries me a bit, since it could allocate a lot with a large newLength	DESIGN	0.9583069024977755	WITHOUT_CLASSIFICATION	0.041693097502224524	DESIGN
// We use a highly uncommon string to represent the paragraph delimiter (100% soln not worth it) 	DESIGN	0.9994022596619621	WITHOUT_CLASSIFICATION	5.97740338037907E-4	DESIGN
// TODO: Ruby does not seem to care about invalid numeric mode values // I am not sure if ruby overflows here also...	DESIGN	0.9965793566796373	DESIGN	0.0034206433203627317	WITHOUT_CLASSIFICATION
// TODO: Make this more intelligible value	DESIGN	0.9506410021789995	WITHOUT_CLASSIFICATION	0.04935899782100047	DESIGN
// XXX: do something?	DESIGN	0.9957859016595069	DESIGN	0.00421409834049305	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.6009819782860765	DESIGN	0.3990180217139236	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.6009819782860765	DESIGN	0.3990180217139236	WITHOUT_CLASSIFICATION
// up to ten, stuff into tmp locals, load in reverse order, and assign // FIXME: There's probably a slightly smarter way, but is it important?	DESIGN	0.8492415412412955	DESIGN	0.15075845875870453	WITHOUT_CLASSIFICATION
// index for the item // this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.9997311153382474	WITHOUT_CLASSIFICATION	2.6888466175254127E-4	DESIGN
// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.999999733437627	WITHOUT_CLASSIFICATION	2.665623729787212E-7	DESIGN
// SSS FIXME: These should get normally compiled or initialized some other way ...  // SSS FIXME: Parent/super-type info is incorrect! // These are just placeholders for now .. this needs to be updated with *real* class objects later!	DESIGN	0.9849367729435968	DESIGN	0.015063227056403117	WITHOUT_CLASSIFICATION
// SSS FIXME: Move this code to some utils area .. or probably there is already a method for this in some jruby utils class // Holy cow!  Just to append two darned arrays!	DESIGN	0.8916445979249541	DESIGN	0.10835540207504585	WITHOUT_CLASSIFICATION
// SSS FIXME: This method (at least in the context of multiple assignment) is a little weird. // It calls regular to_ary on the object.  But, if it encounters a method_missing, the value // is inserted into an 1-element array! // try "a,b,c = 1" first; then define Fixnum.to_ary method and try it again. // Ex: http://gist.github.com/163551	DESIGN	0.9493224434994902	WITHOUT_CLASSIFICATION	0.050677556500509764	DESIGN
// This is for JRUBY-2988, since after a suspend the terminal seems // to need to be reinitialized. Since we can't easily detect suspension, // initialize after every readline. Probably not fast, but this is for // interactive terminals anyway...so who cares?	DESIGN	0.5612564197214063	DESIGN	0.43874358027859367	WITHOUT_CLASSIFICATION
// set up a field for the CacheEntry // TODO: make this an array so it's not as much class metadata; similar to AbstractScript stuff	DESIGN	0.8570951011155469	DESIGN	0.1429048988844531	WITHOUT_CLASSIFICATION
// exit monitor before making call // FIXME: this not being in a finally is a little worrisome	DESIGN	0.9928853432873513	DESIGN	0.007114656712648706	WITHOUT_CLASSIFICATION
// FIXME: Added this because marshal_spec seemed to reconstitute objects without calling dataWrapStruct // this resulted in object being null after unmarshalling...	DESIGN	0.9999959685248038	WITHOUT_CLASSIFICATION	4.031475196275672E-6	DESIGN
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search	DESIGN	0.5179318775286003	DESIGN	0.48206812247139985	WITHOUT_CLASSIFICATION
// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.9986552857085084	WITHOUT_CLASSIFICATION	0.001344714291491576	DESIGN
// TODO: This is actually now returning the scope of whoever called Method#to_proc // which is obviously wrong; but there's no scope to provide for many methods. // It fixes JRUBY-2237, but needs a better solution.	DESIGN	0.999999596682706	DESIGN	4.0331729405365257E-7	WITHOUT_CLASSIFICATION
// FIXME: We should be getting this from the runtime rather than assume none? //return runtime.getEncodingService().getEncoding(runtime.getDefaultExternalEncoding());	DESIGN	0.7946999163957377	WITHOUT_CLASSIFICATION	0.20530008360426222	DESIGN
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.8429372017695962	DESIGN	0.1570627982304038	WITHOUT_CLASSIFICATION
// This is a fairly specific hack for empty string, but it does the job	DESIGN	0.9890182245165766	DESIGN	0.010981775483423335	WITHOUT_CLASSIFICATION
// XXX This constructor is a hack to implement the __END__ syntax. //     Converting a reader back into an InputStream doesn't generally work.	DESIGN	0.9999898070526705	DESIGN	1.0192947329472712E-5	WITHOUT_CLASSIFICATION
// FIXME:  Total hack to get flash in Rails marshalling/unmarshalling in session ok...We need // to totally change marshalling to work with overridden core classes.	DESIGN	0.771276679105871	WITHOUT_CLASSIFICATION	0.22872332089412892	DESIGN
// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9994501517210085	DESIGN	5.498482789915056E-4	WITHOUT_CLASSIFICATION
// We're not setting the provider or anything, but it seems that BouncyCastle does some internal things in its // provider's constructor which require it to be executed in a secure context. // Ideally this hack should be removed. See JRUBY-3919 and this BC bug: //   http://www.bouncycastle.org/jira/browse/BJA-227	DESIGN	0.9843531202858402	DESIGN	0.015646879714159793	WITHOUT_CLASSIFICATION
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.9989222674838356	WITHOUT_CLASSIFICATION	0.0010777325161644012	DESIGN
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.9989222674838356	WITHOUT_CLASSIFICATION	0.0010777325161644012	DESIGN
// hack to get right style for input	DESIGN	0.9436461083538658	WITHOUT_CLASSIFICATION	0.05635389164613418	DESIGN
// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.	DESIGN	0.9468556979560254	WITHOUT_CLASSIFICATION	0.053144302043974516	DESIGN
// small hack to save a cast later on	DESIGN	0.9960390053383208	WITHOUT_CLASSIFICATION	0.003960994661679157	DESIGN
// temporary hack to handle non-Ruby values // will come up with better solution shortly	DESIGN	0.804841291197997	WITHOUT_CLASSIFICATION	0.19515870880200303	DESIGN
// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.	DESIGN	0.9468556979560254	WITHOUT_CLASSIFICATION	0.053144302043974516	DESIGN
// HACK: in order to have stdout/err act like ttys and flush always, // we set anything assigned to stdout/stderr to sync	DESIGN	0.977482265459	WITHOUT_CLASSIFICATION	0.022517734541000037	DESIGN
// HACK: force clinit to be created	DESIGN	0.7991677084997237	WITHOUT_CLASSIFICATION	0.20083229150027615	DESIGN
// FIXME: This is pretty gross; we should have a cleaner initialization // that doesn't depend on package-visible fields and ideally is atomic, // probably using an immutable structure we replace all at once. // lazy, null when no groups defined	DESIGN	0.9958727596889835	DESIGN	0.004127240311016452	WITHOUT_CLASSIFICATION
// TODO: should probably apply the null object pattern for a // non-allowed class, rather than null	DESIGN	0.5811566287993223	WITHOUT_CLASSIFICATION	0.4188433712006778	DESIGN
// TODO: set our metaclass to target's class (i.e. scary!)	DESIGN	0.9487838827677023	WITHOUT_CLASSIFICATION	0.05121611723229769	DESIGN
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9731138115956681	WITHOUT_CLASSIFICATION	0.026886188404331816	DESIGN
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.8429372017695962	DESIGN	0.1570627982304038	WITHOUT_CLASSIFICATION
// optional args, so we have IRubyObject[] // TODO: confirm	DESIGN	0.7740830056367347	WITHOUT_CLASSIFICATION	0.2259169943632653	DESIGN
// not intended to be called directly by users (private) // OLD TODO from Ruby code: // This should be implemented in JavaClass.java, where we can // check for reserved Ruby names, conflicting methods, etc.	DESIGN	0.998639462845028	DESIGN	0.001360537154971933	WITHOUT_CLASSIFICATION
// TODO? I think this ends up propagating from normal Java exceptions // sys_fail(openFile.getPath())	DESIGN	0.977693226681296	DESIGN	0.022306773318703964	WITHOUT_CLASSIFICATION
// TODO: Make callCoerced work in block context...then fix downto, step, and upto.	DESIGN	0.9882351738398857	DESIGN	0.011764826160114332	WITHOUT_CLASSIFICATION
// TODO: the rest of this...seeking to same position is unnecessary since we share a channel // but some of this may be needed?	DESIGN	0.9999673089974618	DESIGN	3.269100253826216E-5	WITHOUT_CLASSIFICATION
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9919990308303079	DESIGN	0.008000969169692092	WITHOUT_CLASSIFICATION
// FIXME this below is temporary, but its much safer for COW (it prevents not shared Strings with begin != 0) // this allows now e.g.: ByteList#set not to be begin aware	DESIGN	0.998713135755043	WITHOUT_CLASSIFICATION	0.001286864244957023	DESIGN
// ignore; job was cancelled // FIXME: Is this ok?	DESIGN	0.9051538197424789	WITHOUT_CLASSIFICATION	0.09484618025752106	DESIGN
// TODO: // MRI behavior: Call "+" or "add", depending on the call. // But this leads to exceptions when Floats are added. See: // http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/17374 // return callCoerced(context, op, b, true); -- this is MRI behavior. // We'll use ours for now, thus providing an ability to add Floats.	DESIGN	0.9999977669627962	DESIGN	2.2330372037852495E-6	WITHOUT_CLASSIFICATION
// Must be called from main thread (it is currently, but this bothers me)	DESIGN	0.7874372087182698	WITHOUT_CLASSIFICATION	0.21256279128173008	DESIGN
// TODO: wire into new exception handling mechanism	DESIGN	0.5565235583407591	DESIGN	0.4434764416592411	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.8236925989433271	WITHOUT_CLASSIFICATION	0.17630740105667275	DESIGN
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.8934641744494649	WITHOUT_CLASSIFICATION	0.1065358255505351	DESIGN
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.8934641744494649	WITHOUT_CLASSIFICATION	0.1065358255505351	DESIGN
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.8934641744494649	WITHOUT_CLASSIFICATION	0.1065358255505351	DESIGN
// FIXME: Determine if a real allocator is needed here. Do people want to extend // JavaClass? Do we want them to do that? Can you Class.new(JavaClass)? Should // you be able to? // TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.925545175852168	DESIGN	0.07445482414783199	WITHOUT_CLASSIFICATION
// SSS FIXME: Token can be final for a method -- implying that the token is only for this particular implementation of the method // But, if the mehod is modified, we create a new method object which in turn gets a new token.  What makes sense??  Intuitively, // it seems the first one ... but let us see ... // Current code version token for this method -- can change during execution as methods get redefined!	DESIGN	0.99999642287154	WITHOUT_CLASSIFICATION	3.5771284600171447E-6	DESIGN
// FIXME weakref.rb also does caller(2) here for the backtrace	DESIGN	0.9990258040776467	WITHOUT_CLASSIFICATION	9.741959223533721E-4	DESIGN
// FIXME: bit of a kludge here (non-interface classes assigned to both // class and module fields). simplifies proxy extender code, will go away // when JI is overhauled (and proxy extenders are deprecated).	DESIGN	0.9800319270315153	WITHOUT_CLASSIFICATION	0.019968072968484702	DESIGN
// There's not a compelling reason to keep JavaClass instances in a weak map // (any proxies created are [were] kept in a non-weak map, so in most cases they will // stick around anyway), and some good reasons not to (JavaClass creation is // expensive, for one; many lookups are performed when passing parameters to/from // methods; etc.). // TODO: faster custom concurrent map	DESIGN	0.9563230582054955	WITHOUT_CLASSIFICATION	0.0436769417945046	DESIGN
// TODO: we should be able to optimize this quite a bit post-1.0.  JavaClass already // has all the methods organized by method name; the next version (supporting protected // methods/fields) will have them organized even further. So collectMethods here can // just lookup the overridden methods in the JavaClass map, should be much faster.	DESIGN	0.7762777164982295	WITHOUT_CLASSIFICATION	0.22372228350177056	DESIGN
/* FIXME: finalizer should be dupped here */	DESIGN	0.9944637411641659	WITHOUT_CLASSIFICATION	0.005536258835834081	DESIGN
// FIXME: null check is removable once we figure out how to assign to unset named block args	DESIGN	0.9991969946157916	WITHOUT_CLASSIFICATION	8.030053842085362E-4	DESIGN
/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */	DESIGN	0.9928200269063212	WITHOUT_CLASSIFICATION	0.007179973093678816	DESIGN
// TODO: Bleeding runtime into parser.  Arity may be should be in parser (to keep bleeding oneway)	DESIGN	0.8750515676132393	DESIGN	0.12494843238676079	WITHOUT_CLASSIFICATION
// SSS FIXME: Maybe this is not really a concern after all ... // Nesting level of this scope in the lexical nesting of scopes in the current file -- this is not to be confused // with semantic nesting of scopes across files. // // Consider this code in a file f // class M1::M2::M3::C  //   ... // end // // So, C is at lexical nesting level of 1 (the file script is at 0) in the file 'f' // Semantically it is at level 3 (M1, M2, M3 are at 0,1,2). // // This is primarily used to ensure that variable names don't clash! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //    private int _lexicalNestingLevel;	DESIGN	0.5287609924275875	WITHOUT_CLASSIFICATION	0.47123900757241266	DESIGN
// Sometimes the value can be retrieved at "compile time".  If we succeed, nothing like it!   // We might not .. for the following reasons: // 1. The constant is missing, // 2. The reference is a forward-reference, // 3. The constant's value is only known at run-time on first-access (but, this is runtime, isn't it??) // 4. Our compiler isn't able to right away infer that this is a constant. // // SSS FIXME: // 1. The operand can be a literal array, range, or hash -- hence Operand //    because Array, Range, and Hash derive from Operand and not Constant ... //    Is there a way to fix this impedance mismatch? // 2. It should be possible to handle the forward-reference case by creating a new //    ForwardReference operand and then inform the scope of the forward reference //    which the scope can fix up when the reference gets defined.  At code-gen time, //    if the reference is unresolved, when a value is retrieved for the forward-ref //    and we get a null, we can throw a ConstMissing exception!  Not sure! //	DESIGN	0.9960459811932104	DESIGN	0.003954018806789524	WITHOUT_CLASSIFICATION
// Reset value map if this instruction is the start/end of a basic block // // Right now, calls are considered hard boundaries for optimization and // information cannot be propagated across them! // // SSS FIXME: Rather than treat all calls with a broad brush, what we need // is to capture different attributes about a call : //   - uses closures //   - known call target //   - can modify scope, //   - etc. // // This information is probably already present in the AST Inspector	DESIGN	0.9412886666049803	WITHOUT_CLASSIFICATION	0.05871133339501961	DESIGN
// FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.8875764311389502	WITHOUT_CLASSIFICATION	0.11242356886104983	DESIGN
// XXX: This check previously used callMethod("==") to check for equality between classes // when scanning the hierarchy. However the == check may be safe; we should only ever have // one instance bound to a given type/constant. If it's found to be unsafe, examine ways // to avoid the == call.	DESIGN	0.9978532454231069	DESIGN	0.0021467545768929807	WITHOUT_CLASSIFICATION
// end hack	DESIGN	0.9973364174692493	WITHOUT_CLASSIFICATION	0.00266358253075081	DESIGN
// if not overloaded, we add a method that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	DESIGN	0.8895619602781131	WITHOUT_CLASSIFICATION	0.11043803972188694	DESIGN
// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9994501517210085	DESIGN	5.498482789915056E-4	WITHOUT_CLASSIFICATION
/*         * TODO: This version is better than the hackish previous one. Windows         *       behavior needs to be defined though. I suppose this version         *       could be improved more too.         * TODO: /etc/passwd is also inadequate for MacOSX since it does not         *       use /etc/passwd for regular user accounts         */	DESIGN	0.9816193375054146	DESIGN	0.018380662494585396	WITHOUT_CLASSIFICATION
//TODO: Should next and return also catch here?	DESIGN	0.8125827135322118	DESIGN	0.1874172864677883	WITHOUT_CLASSIFICATION
// Let's only generate methods for those the user may actually  // intend to override.  That includes any defined in the current // class, and any ancestors that are also JavaProxyClasses (but none // from any other ancestor classes). Methods defined in mixins will // be considered intentionally overridden, except those from Kernel, // Java, and JavaProxyMethods, as well as Enumerable.  // TODO: may want to exclude other common mixins?	DESIGN	0.9999325061558811	WITHOUT_CLASSIFICATION	6.749384411881056E-5	DESIGN
/* FIXME: Consider fixing node_assign itself rather than single case*/	DESIGN	0.9973996234250245	WITHOUT_CLASSIFICATION	0.002600376574975459	DESIGN
/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/	DESIGN	0.5605604386553237	WITHOUT_CLASSIFICATION	0.4394395613446762	DESIGN
// FIXME: We should really not be creating the dynamic scope for the root // of the AST before parsing.  This makes us end up needing to readjust // this dynamic scope coming out of parse (and for local static scopes it // will always happen because of $~ and $_). // FIXME: Because we end up adjusting this after-the-fact, we can't use // any of the specific-size scopes.	DESIGN	0.8925316821435	WITHOUT_CLASSIFICATION	0.10746831785649992	DESIGN
/* FIXME: Resolve what the hell is going on*/	DESIGN	0.9707296661135923	WITHOUT_CLASSIFICATION	0.02927033388640774	DESIGN
// This is perhaps innefficient timewise?  Optimal spacewise	DESIGN	0.9671997027564821	WITHOUT_CLASSIFICATION	0.03280029724351775	DESIGN
// If variables were added then we may need to grow the dynamic scope to match the static // one. // FIXME: Make this so we only need to check this for blockScope != null.  We cannot // currently since we create the DynamicScope for a LocalStaticScope before parse begins. // Refactoring should make this fixable.	DESIGN	0.9998524453841448	WITHOUT_CLASSIFICATION	1.4755461585528316E-4	DESIGN
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.6356020708071449	WITHOUT_CLASSIFICATION	0.36439792919285496	DESIGN
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.6356020708071449	WITHOUT_CLASSIFICATION	0.36439792919285496	DESIGN
// we're depending on the side effect of the load, which loads the class but does not turn it into a script // I don't like it, but until we restructure the code a bit more, we'll need to quietly let it by here.	DESIGN	0.9655422439773382	WITHOUT_CLASSIFICATION	0.03445775602266178	DESIGN
// TODO: for now, we use a faithful // reimplementation of MRI's algorithm, // but should use UTF8Encoding facilities // from Joni, once it starts prefroming // UTF-8 content validation. 	DESIGN	0.9933823550221792	DESIGN	0.006617644977820867	WITHOUT_CLASSIFICATION
/**     * Process streams get Channel.newChannel()ed into FileChannel but are not actually     * seekable. So instead of just the isSeekable check doing instanceof FileChannel,     * we must also add this boolean to check, which we set to false when it's known     * that the incoming channel is from a process.     *      * FIXME: This is gross, and it's NIO's fault for not providing a nice way to     * tell if a channel is "really" seekable.     */	DESIGN	0.837288117454867	DESIGN	0.16271188254513297	WITHOUT_CLASSIFICATION
