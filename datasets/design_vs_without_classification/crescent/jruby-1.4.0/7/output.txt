// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999999051399976	WITHOUT_CLASSIFICATION	9.486000242095874E-8	DESIGN
// line 335	WITHOUT_CLASSIFICATION	0.99999901275607	WITHOUT_CLASSIFICATION	9.872439300020813E-7	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999159410783327	WITHOUT_CLASSIFICATION	8.405892166727839E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999159410783327	WITHOUT_CLASSIFICATION	8.405892166727839E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9994581767730322	WITHOUT_CLASSIFICATION	5.418232269677245E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9994581767730322	WITHOUT_CLASSIFICATION	5.418232269677245E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998789836376909	WITHOUT_CLASSIFICATION	1.2101636230904601E-4	DESIGN
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.999999900767156	WITHOUT_CLASSIFICATION	9.923284409325503E-8	DESIGN
// line 362	WITHOUT_CLASSIFICATION	0.9999994327661242	WITHOUT_CLASSIFICATION	5.672338757935099E-7	DESIGN
// line 372	WITHOUT_CLASSIFICATION	0.9999994309710403	WITHOUT_CLASSIFICATION	5.690289596652696E-7	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999695008008922	WITHOUT_CLASSIFICATION	3.0499199107830298E-5	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999695008008922	WITHOUT_CLASSIFICATION	3.0499199107830298E-5	DESIGN
// line 391	WITHOUT_CLASSIFICATION	0.9999993227743916	WITHOUT_CLASSIFICATION	6.772256083462768E-7	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999653012903831	WITHOUT_CLASSIFICATION	3.469870961687522E-5	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999653012903831	WITHOUT_CLASSIFICATION	3.469870961687522E-5	DESIGN
/* ^D */	WITHOUT_CLASSIFICATION	0.9997651807061729	WITHOUT_CLASSIFICATION	2.348192938270285E-4	DESIGN
/* ^Z */	WITHOUT_CLASSIFICATION	0.9998891712350695	WITHOUT_CLASSIFICATION	1.1082876493049362E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998147958591261	WITHOUT_CLASSIFICATION	1.8520414087379002E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998147958591261	WITHOUT_CLASSIFICATION	1.8520414087379002E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998147958591261	WITHOUT_CLASSIFICATION	1.8520414087379002E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998147958591261	WITHOUT_CLASSIFICATION	1.8520414087379002E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998147958591261	WITHOUT_CLASSIFICATION	1.8520414087379002E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998147958591261	WITHOUT_CLASSIFICATION	1.8520414087379002E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998147958591261	WITHOUT_CLASSIFICATION	1.8520414087379002E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9995176833267992	WITHOUT_CLASSIFICATION	4.823166732007275E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9995176833267992	WITHOUT_CLASSIFICATION	4.823166732007275E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9995176833267992	WITHOUT_CLASSIFICATION	4.823166732007275E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9995176833267992	WITHOUT_CLASSIFICATION	4.823166732007275E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9995176833267992	WITHOUT_CLASSIFICATION	4.823166732007275E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9995176833267992	WITHOUT_CLASSIFICATION	4.823166732007275E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9995176833267992	WITHOUT_CLASSIFICATION	4.823166732007275E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9996693987566428	WITHOUT_CLASSIFICATION	3.3060124335708213E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9996693987566428	WITHOUT_CLASSIFICATION	3.3060124335708213E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9996693987566428	WITHOUT_CLASSIFICATION	3.3060124335708213E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9996693987566428	WITHOUT_CLASSIFICATION	3.3060124335708213E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9996693987566428	WITHOUT_CLASSIFICATION	3.3060124335708213E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9996693987566428	WITHOUT_CLASSIFICATION	3.3060124335708213E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999720466723653	WITHOUT_CLASSIFICATION	2.795332763462078E-5	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999720466723653	WITHOUT_CLASSIFICATION	2.795332763462078E-5	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999720466723653	WITHOUT_CLASSIFICATION	2.795332763462078E-5	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999720466723653	WITHOUT_CLASSIFICATION	2.795332763462078E-5	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999720466723653	WITHOUT_CLASSIFICATION	2.795332763462078E-5	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999720466723653	WITHOUT_CLASSIFICATION	2.795332763462078E-5	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999681976980769	WITHOUT_CLASSIFICATION	3.1802301923134875E-5	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999681976980769	WITHOUT_CLASSIFICATION	3.1802301923134875E-5	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999681976980769	WITHOUT_CLASSIFICATION	3.1802301923134875E-5	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999681976980769	WITHOUT_CLASSIFICATION	3.1802301923134875E-5	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999681976980769	WITHOUT_CLASSIFICATION	3.1802301923134875E-5	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999681976980769	WITHOUT_CLASSIFICATION	3.1802301923134875E-5	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999681976980769	WITHOUT_CLASSIFICATION	3.1802301923134875E-5	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999559061073561	WITHOUT_CLASSIFICATION	4.409389264388869E-5	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999559061073561	WITHOUT_CLASSIFICATION	4.409389264388869E-5	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999559061073561	WITHOUT_CLASSIFICATION	4.409389264388869E-5	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999559061073561	WITHOUT_CLASSIFICATION	4.409389264388869E-5	DESIGN
//Do nothing	WITHOUT_CLASSIFICATION	0.9997613062336835	WITHOUT_CLASSIFICATION	2.3869376631648726E-4	DESIGN
//Do nothing	WITHOUT_CLASSIFICATION	0.9997613062336835	WITHOUT_CLASSIFICATION	2.3869376631648726E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999704408351138	WITHOUT_CLASSIFICATION	2.9559164886338655E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999704408351138	WITHOUT_CLASSIFICATION	2.9559164886338655E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999704408351138	WITHOUT_CLASSIFICATION	2.9559164886338655E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999704408351138	WITHOUT_CLASSIFICATION	2.9559164886338655E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999704408351138	WITHOUT_CLASSIFICATION	2.9559164886338655E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999704408351138	WITHOUT_CLASSIFICATION	2.9559164886338655E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999704408351138	WITHOUT_CLASSIFICATION	2.9559164886338655E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999704408351138	WITHOUT_CLASSIFICATION	2.9559164886338655E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999704408351138	WITHOUT_CLASSIFICATION	2.9559164886338655E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999704408351138	WITHOUT_CLASSIFICATION	2.9559164886338655E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999704408351138	WITHOUT_CLASSIFICATION	2.9559164886338655E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999704408351138	WITHOUT_CLASSIFICATION	2.9559164886338655E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999704408351138	WITHOUT_CLASSIFICATION	2.9559164886338655E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999704408351138	WITHOUT_CLASSIFICATION	2.9559164886338655E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999704408351138	WITHOUT_CLASSIFICATION	2.9559164886338655E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999704408351138	WITHOUT_CLASSIFICATION	2.9559164886338655E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999704408351138	WITHOUT_CLASSIFICATION	2.9559164886338655E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999704408351138	WITHOUT_CLASSIFICATION	2.9559164886338655E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999704408351138	WITHOUT_CLASSIFICATION	2.9559164886338655E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999704408351138	WITHOUT_CLASSIFICATION	2.9559164886338655E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999704408351138	WITHOUT_CLASSIFICATION	2.9559164886338655E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999704408351138	WITHOUT_CLASSIFICATION	2.9559164886338655E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999704408351138	WITHOUT_CLASSIFICATION	2.9559164886338655E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999704408351138	WITHOUT_CLASSIFICATION	2.9559164886338655E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999704408351138	WITHOUT_CLASSIFICATION	2.9559164886338655E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999704408351138	WITHOUT_CLASSIFICATION	2.9559164886338655E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999704408351138	WITHOUT_CLASSIFICATION	2.9559164886338655E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999704408351138	WITHOUT_CLASSIFICATION	2.9559164886338655E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999704408351138	WITHOUT_CLASSIFICATION	2.9559164886338655E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999704408351138	WITHOUT_CLASSIFICATION	2.9559164886338655E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999704408351138	WITHOUT_CLASSIFICATION	2.9559164886338655E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999704408351138	WITHOUT_CLASSIFICATION	2.9559164886338655E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999704408351138	WITHOUT_CLASSIFICATION	2.9559164886338655E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999704408351138	WITHOUT_CLASSIFICATION	2.9559164886338655E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999704408351138	WITHOUT_CLASSIFICATION	2.9559164886338655E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999704408351138	WITHOUT_CLASSIFICATION	2.9559164886338655E-5	DESIGN
// return result	WITHOUT_CLASSIFICATION	0.9999887108508783	WITHOUT_CLASSIFICATION	1.128914912173081E-5	DESIGN
// name	WITHOUT_CLASSIFICATION	0.9999264312892929	WITHOUT_CLASSIFICATION	7.356871070701255E-5	DESIGN
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999995420762499	WITHOUT_CLASSIFICATION	4.579237501541775E-7	DESIGN
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9999979501703901	WITHOUT_CLASSIFICATION	2.0498296099515136E-6	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999917466661866	WITHOUT_CLASSIFICATION	8.253333813421235E-6	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999917466661866	WITHOUT_CLASSIFICATION	8.253333813421235E-6	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999917466661866	WITHOUT_CLASSIFICATION	8.253333813421235E-6	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999917466661866	WITHOUT_CLASSIFICATION	8.253333813421235E-6	DESIGN
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999962290342795	WITHOUT_CLASSIFICATION	3.7709657204163376E-6	DESIGN
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9999949296137361	WITHOUT_CLASSIFICATION	5.070386263897308E-6	DESIGN
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999919886060652	WITHOUT_CLASSIFICATION	8.011393934835202E-6	DESIGN
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.999855505359037	WITHOUT_CLASSIFICATION	1.4449464096307E-4	DESIGN
// Version information:	WITHOUT_CLASSIFICATION	0.9999979823683598	WITHOUT_CLASSIFICATION	2.0176316402943757E-6	DESIGN
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999962686706941	WITHOUT_CLASSIFICATION	3.7313293060221084E-6	DESIGN
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999914325693599	WITHOUT_CLASSIFICATION	8.567430640106267E-6	DESIGN
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999999909781304	WITHOUT_CLASSIFICATION	9.021869633585135E-9	DESIGN
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9991995402910705	WITHOUT_CLASSIFICATION	8.004597089295568E-4	DESIGN
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9999696878417801	WITHOUT_CLASSIFICATION	3.031215821988747E-5	DESIGN
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999944787957626	WITHOUT_CLASSIFICATION	5.521204237346448E-6	DESIGN
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999993898751441	WITHOUT_CLASSIFICATION	6.101248558201607E-7	DESIGN
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9999938072570429	WITHOUT_CLASSIFICATION	6.192742957165895E-6	DESIGN
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9983802186260214	WITHOUT_CLASSIFICATION	0.001619781373978513	DESIGN
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999989429433793	WITHOUT_CLASSIFICATION	1.0570566206394607E-6	DESIGN
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999999967331344	WITHOUT_CLASSIFICATION	3.2668655384633634E-9	DESIGN
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9880305325171171	DESIGN	0.011969467482882797	WITHOUT_CLASSIFICATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999917466661866	WITHOUT_CLASSIFICATION	8.253333813421235E-6	DESIGN
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999986078244996	WITHOUT_CLASSIFICATION	1.3921755005232904E-6	DESIGN
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999999520103559	WITHOUT_CLASSIFICATION	4.7989644239887626E-8	DESIGN
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999991018510253	WITHOUT_CLASSIFICATION	8.98148974720844E-7	DESIGN
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9993344543322483	WITHOUT_CLASSIFICATION	6.655456677516799E-4	DESIGN
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9982718095949618	WITHOUT_CLASSIFICATION	0.0017281904050382383	DESIGN
// Proc class	WITHOUT_CLASSIFICATION	0.9999808716759523	WITHOUT_CLASSIFICATION	1.9128324047734234E-5	DESIGN
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9998492154274936	WITHOUT_CLASSIFICATION	1.5078457250641277E-4	DESIGN
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999996568049336	WITHOUT_CLASSIFICATION	3.431950663658712E-7	DESIGN
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.8389266474874788	WITHOUT_CLASSIFICATION	0.16107335251252128	DESIGN
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999996939674299	WITHOUT_CLASSIFICATION	3.060325701237678E-7	DESIGN
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9070509802835338	WITHOUT_CLASSIFICATION	0.09294901971646609	DESIGN
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999941466775876	WITHOUT_CLASSIFICATION	5.8533224125100145E-6	DESIGN
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9992972258248443	WITHOUT_CLASSIFICATION	7.027741751558547E-4	DESIGN
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9999995009101968	WITHOUT_CLASSIFICATION	4.990898030267251E-7	DESIGN
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9999879474423216	WITHOUT_CLASSIFICATION	1.2052557678567833E-5	DESIGN
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9999991179896902	WITHOUT_CLASSIFICATION	8.820103097821917E-7	DESIGN
// RubySignal	WITHOUT_CLASSIFICATION	0.9999730119910664	WITHOUT_CLASSIFICATION	2.698800893358466E-5	DESIGN
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999998557811064	WITHOUT_CLASSIFICATION	1.4421889357603845E-7	DESIGN
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9999999166537852	WITHOUT_CLASSIFICATION	8.334621483819652E-8	DESIGN
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999993639769639	WITHOUT_CLASSIFICATION	6.360230361602726E-7	DESIGN
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9889148585623896	WITHOUT_CLASSIFICATION	0.011085141437610545	DESIGN
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999676100253548	WITHOUT_CLASSIFICATION	3.238997464509477E-5	DESIGN
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999636866975462	WITHOUT_CLASSIFICATION	3.631330245373303E-5	DESIGN
//io.finish();	WITHOUT_CLASSIFICATION	0.9999973865093112	WITHOUT_CLASSIFICATION	2.613490688762662E-6	DESIGN
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.999970071842813	WITHOUT_CLASSIFICATION	2.992815718707794E-5	DESIGN
// hmm...	WITHOUT_CLASSIFICATION	0.9992167914201222	WITHOUT_CLASSIFICATION	7.832085798777255E-4	DESIGN
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999662218360195	WITHOUT_CLASSIFICATION	3.377816398043706E-5	DESIGN
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999961369556771	WITHOUT_CLASSIFICATION	3.8630443228077575E-6	DESIGN
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999997794012092	WITHOUT_CLASSIFICATION	2.2059879088476065E-7	DESIGN
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999964176287428	WITHOUT_CLASSIFICATION	3.582371257059664E-6	DESIGN
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999998792527315	WITHOUT_CLASSIFICATION	1.207472684953777E-7	DESIGN
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9998761747200341	WITHOUT_CLASSIFICATION	1.2382527996600122E-4	DESIGN
/* Time class methods */	WITHOUT_CLASSIFICATION	0.999977535059992	WITHOUT_CLASSIFICATION	2.2464940008067205E-5	DESIGN
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999999793681219	WITHOUT_CLASSIFICATION	2.06318780579344E-8	DESIGN
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999720485840239	WITHOUT_CLASSIFICATION	2.7951415976048655E-5	DESIGN
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9997275002641085	WITHOUT_CLASSIFICATION	2.72499735891525E-4	DESIGN
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999996195319095	WITHOUT_CLASSIFICATION	3.804680904826545E-7	DESIGN
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9995603725721884	WITHOUT_CLASSIFICATION	4.396274278115041E-4	DESIGN
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.999999745033164	WITHOUT_CLASSIFICATION	2.549668359229421E-7	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9994813868996754	WITHOUT_CLASSIFICATION	5.186131003246573E-4	DESIGN
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999855153470889	WITHOUT_CLASSIFICATION	1.4484652911030587E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999991117215024	WITHOUT_CLASSIFICATION	8.882784975898026E-7	DESIGN
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999142057749661	WITHOUT_CLASSIFICATION	8.579422503392015E-5	DESIGN
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9997776515484779	WITHOUT_CLASSIFICATION	2.2234845152210725E-4	DESIGN
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9997776515484779	WITHOUT_CLASSIFICATION	2.2234845152210725E-4	DESIGN
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.999963135649692	WITHOUT_CLASSIFICATION	3.686435030795126E-5	DESIGN
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999944614201528	WITHOUT_CLASSIFICATION	5.538579847131039E-6	DESIGN
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9998227926315093	WITHOUT_CLASSIFICATION	1.7720736849062752E-4	DESIGN
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999998145149865	WITHOUT_CLASSIFICATION	1.8548501342734865E-7	DESIGN
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9222896152536605	DESIGN	0.07771038474633948	WITHOUT_CLASSIFICATION
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9976119885651711	WITHOUT_CLASSIFICATION	0.0023880114348288394	DESIGN
// ???	WITHOUT_CLASSIFICATION	0.9991442208239623	WITHOUT_CLASSIFICATION	8.557791760376569E-4	DESIGN
// PID	WITHOUT_CLASSIFICATION	0.9999433487566707	WITHOUT_CLASSIFICATION	5.665124332921998E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999991117215024	WITHOUT_CLASSIFICATION	8.882784975898026E-7	DESIGN
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999996020980798	WITHOUT_CLASSIFICATION	3.97901920157221E-7	DESIGN
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.999977583067642	WITHOUT_CLASSIFICATION	2.241693235801251E-5	DESIGN
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999999308941062	WITHOUT_CLASSIFICATION	6.910589374388777E-8	DESIGN
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999999587896432	WITHOUT_CLASSIFICATION	4.121035682035855E-8	DESIGN
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999999096528348	WITHOUT_CLASSIFICATION	9.034716523331573E-8	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999999718482308	WITHOUT_CLASSIFICATION	2.815176925603028E-8	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999999718482308	WITHOUT_CLASSIFICATION	2.815176925603028E-8	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999999718482308	WITHOUT_CLASSIFICATION	2.815176925603028E-8	DESIGN
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9986975181888982	WITHOUT_CLASSIFICATION	0.0013024818111017444	DESIGN
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999999972065157	WITHOUT_CLASSIFICATION	2.7934843284612E-9	DESIGN
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999995902313062	WITHOUT_CLASSIFICATION	4.097686937339596E-7	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997362893837819	WITHOUT_CLASSIFICATION	2.6371061621808866E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997362893837819	WITHOUT_CLASSIFICATION	2.6371061621808866E-4	DESIGN
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9991605033030398	WITHOUT_CLASSIFICATION	8.394966969601405E-4	DESIGN
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.6575417003060604	DESIGN	0.34245829969393965	WITHOUT_CLASSIFICATION
// not reached	WITHOUT_CLASSIFICATION	0.9997362893837819	WITHOUT_CLASSIFICATION	2.6371061621808866E-4	DESIGN
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999991243658648	WITHOUT_CLASSIFICATION	8.756341352539077E-7	DESIGN
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9975341442400756	WITHOUT_CLASSIFICATION	0.002465855759924392	DESIGN
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999999997286618	WITHOUT_CLASSIFICATION	2.713381308404039E-10	DESIGN
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999902751995176	WITHOUT_CLASSIFICATION	9.724800482389272E-6	DESIGN
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999902751995176	WITHOUT_CLASSIFICATION	9.724800482389272E-6	DESIGN
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999555356626441	WITHOUT_CLASSIFICATION	4.446433735589391E-5	DESIGN
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999999778727033	WITHOUT_CLASSIFICATION	2.2127296653377808E-8	DESIGN
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.999993900731578	WITHOUT_CLASSIFICATION	6.099268422003754E-6	DESIGN
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.999993900731578	WITHOUT_CLASSIFICATION	6.099268422003754E-6	DESIGN
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999999454018126	WITHOUT_CLASSIFICATION	5.4598187334578875E-8	DESIGN
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999998199698952	WITHOUT_CLASSIFICATION	1.8003010471856734E-7	DESIGN
/* root fiber */	WITHOUT_CLASSIFICATION	0.9981898908521495	WITHOUT_CLASSIFICATION	0.0018101091478505374	DESIGN
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.999999994453952	WITHOUT_CLASSIFICATION	5.546048034609886E-9	DESIGN
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999988932344265	WITHOUT_CLASSIFICATION	1.1067655735848717E-6	DESIGN
// extras flag	WITHOUT_CLASSIFICATION	0.9999998880625663	WITHOUT_CLASSIFICATION	1.1193743373737768E-7	DESIGN
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999900272659057	WITHOUT_CLASSIFICATION	9.972734094257711E-6	DESIGN
// ...nothing	WITHOUT_CLASSIFICATION	0.9999604296597865	WITHOUT_CLASSIFICATION	3.957034021345918E-5	DESIGN
// utility method	WITHOUT_CLASSIFICATION	0.9997100843017102	WITHOUT_CLASSIFICATION	2.8991569828979336E-4	DESIGN
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999999608921623	WITHOUT_CLASSIFICATION	3.910783763475652E-8	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999991117215024	WITHOUT_CLASSIFICATION	8.882784975898026E-7	DESIGN
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999995428474054	WITHOUT_CLASSIFICATION	4.571525945958037E-7	DESIGN
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999967189698326	WITHOUT_CLASSIFICATION	3.2810301673891823E-6	DESIGN
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999987947607731	WITHOUT_CLASSIFICATION	1.2052392268539836E-6	DESIGN
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9963664352816914	WITHOUT_CLASSIFICATION	0.0036335647183084276	DESIGN
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999829088989796	WITHOUT_CLASSIFICATION	1.7091101020459043E-5	DESIGN
// MRI does it!	WITHOUT_CLASSIFICATION	0.9930782372796706	WITHOUT_CLASSIFICATION	0.006921762720329319	DESIGN
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9996818472363463	WITHOUT_CLASSIFICATION	3.1815276365361255E-4	DESIGN
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9998815549119946	WITHOUT_CLASSIFICATION	1.1844508800543507E-4	DESIGN
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999760739023948	WITHOUT_CLASSIFICATION	2.392609760514222E-5	DESIGN
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9234717757427922	WITHOUT_CLASSIFICATION	0.07652822425720784	DESIGN
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999574455481546	WITHOUT_CLASSIFICATION	4.255445184532569E-5	DESIGN
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999908577060633	WITHOUT_CLASSIFICATION	9.142293936691769E-6	DESIGN
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999966486195162	WITHOUT_CLASSIFICATION	3.3513804837293918E-6	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999992725693845	WITHOUT_CLASSIFICATION	7.274306155489317E-7	DESIGN
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9999879387512208	WITHOUT_CLASSIFICATION	1.2061248779254359E-5	DESIGN
// recheck condition	WITHOUT_CLASSIFICATION	0.9999019980112347	WITHOUT_CLASSIFICATION	9.800198876530913E-5	DESIGN
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999953946252607	WITHOUT_CLASSIFICATION	4.605374739332867E-6	DESIGN
// Construct key services	WITHOUT_CLASSIFICATION	0.9999827944649607	WITHOUT_CLASSIFICATION	1.7205535039210506E-5	DESIGN
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999997037371343	WITHOUT_CLASSIFICATION	2.9626286566921135E-7	DESIGN
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999955987169447	WITHOUT_CLASSIFICATION	4.401283055397943E-6	DESIGN
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999998322640944	WITHOUT_CLASSIFICATION	1.677359055543685E-7	DESIGN
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999998283600141	WITHOUT_CLASSIFICATION	1.7163998593861266E-7	DESIGN
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999998616100675	WITHOUT_CLASSIFICATION	1.383899325641224E-7	DESIGN
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999321334765087	WITHOUT_CLASSIFICATION	6.786652349131538E-5	DESIGN
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999959181295595	WITHOUT_CLASSIFICATION	4.081870440510114E-6	DESIGN
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9999911994016123	WITHOUT_CLASSIFICATION	8.800598387679436E-6	DESIGN
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9980237416058497	WITHOUT_CLASSIFICATION	0.001976258394150332	DESIGN
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999978851829074	WITHOUT_CLASSIFICATION	2.1148170926221955E-6	DESIGN
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999993435424064	WITHOUT_CLASSIFICATION	6.564575936127543E-7	DESIGN
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.999999983445747	WITHOUT_CLASSIFICATION	1.655425292971071E-8	DESIGN
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.99534920612352	WITHOUT_CLASSIFICATION	0.004650793876480077	DESIGN
// determine spacing	WITHOUT_CLASSIFICATION	0.9999024971081729	WITHOUT_CLASSIFICATION	9.750289182699222E-5	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9933979448506781	WITHOUT_CLASSIFICATION	0.006602055149321816	DESIGN
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9998082349813233	WITHOUT_CLASSIFICATION	1.9176501867671641E-4	DESIGN
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9999602222246328	WITHOUT_CLASSIFICATION	3.977777536714071E-5	DESIGN
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.999753901965008	WITHOUT_CLASSIFICATION	2.4609803499204674E-4	DESIGN
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999634770755836	WITHOUT_CLASSIFICATION	3.652292441637577E-5	DESIGN
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999989614034734	WITHOUT_CLASSIFICATION	1.0385965264990265E-6	DESIGN
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999982992274956	WITHOUT_CLASSIFICATION	1.7007725043847748E-6	DESIGN
// default: don't retain	WITHOUT_CLASSIFICATION	0.9983366129858146	WITHOUT_CLASSIFICATION	0.0016633870141854617	DESIGN
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999999905823813	WITHOUT_CLASSIFICATION	9.417618604340112E-9	DESIGN
// Default objects	WITHOUT_CLASSIFICATION	0.9999998383504627	WITHOUT_CLASSIFICATION	1.6164953739253556E-7	DESIGN
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.999990655974649	WITHOUT_CLASSIFICATION	9.344025350974675E-6	DESIGN
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.999977782506635	WITHOUT_CLASSIFICATION	2.22174933649539E-5	DESIGN
// Java support	WITHOUT_CLASSIFICATION	0.9999941615670147	WITHOUT_CLASSIFICATION	5.838432985312406E-6	DESIGN
// Parser stats	WITHOUT_CLASSIFICATION	0.9999991388552824	WITHOUT_CLASSIFICATION	8.611447175384373E-7	DESIGN
// Compilation	WITHOUT_CLASSIFICATION	0.999999272500379	WITHOUT_CLASSIFICATION	7.274996209451181E-7	DESIGN
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.999999985497946	WITHOUT_CLASSIFICATION	1.4502053964162577E-8	DESIGN
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.999991065512024	WITHOUT_CLASSIFICATION	8.934487975974859E-6	DESIGN
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999998455059951	WITHOUT_CLASSIFICATION	1.5449400494807293E-7	DESIGN
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9999967405071081	WITHOUT_CLASSIFICATION	3.2594928920089882E-6	DESIGN
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9999630524202445	WITHOUT_CLASSIFICATION	3.6947579755478675E-5	DESIGN
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999998161618741	WITHOUT_CLASSIFICATION	1.8383812590726947E-7	DESIGN
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999998526987898	WITHOUT_CLASSIFICATION	1.4730121029011013E-7	DESIGN
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9986685275946742	WITHOUT_CLASSIFICATION	0.0013314724053257434	DESIGN
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.5428070237935604	DESIGN	0.45719297620643967	WITHOUT_CLASSIFICATION
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999245614089399	WITHOUT_CLASSIFICATION	7.543859106012678E-5	DESIGN
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999999169071715	WITHOUT_CLASSIFICATION	8.309282860267759E-8	DESIGN
// quoted-printable	WITHOUT_CLASSIFICATION	0.9999999628278398	WITHOUT_CLASSIFICATION	3.7172160338954205E-8	DESIGN
// default options	WITHOUT_CLASSIFICATION	0.9999991088062602	WITHOUT_CLASSIFICATION	8.911937398409895E-7	DESIGN
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999921614987046	WITHOUT_CLASSIFICATION	7.83850129544571E-6	DESIGN
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999921614987046	WITHOUT_CLASSIFICATION	7.83850129544571E-6	DESIGN
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999888289489947	WITHOUT_CLASSIFICATION	1.1171051005413704E-5	DESIGN
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999888289489947	WITHOUT_CLASSIFICATION	1.1171051005413704E-5	DESIGN
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999795253021876	WITHOUT_CLASSIFICATION	2.0474697812362338E-5	DESIGN
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999795253021876	WITHOUT_CLASSIFICATION	2.0474697812362338E-5	DESIGN
// UTF-8	WITHOUT_CLASSIFICATION	0.999987849013973	WITHOUT_CLASSIFICATION	1.2150986026959129E-5	DESIGN
// UTF-8	WITHOUT_CLASSIFICATION	0.999987849013973	WITHOUT_CLASSIFICATION	1.2150986026959129E-5	DESIGN
// long name option	WITHOUT_CLASSIFICATION	0.9999998754740088	WITHOUT_CLASSIFICATION	1.245259910992658E-7	DESIGN
// conversion	WITHOUT_CLASSIFICATION	0.9999987337755968	WITHOUT_CLASSIFICATION	1.2662244032607599E-6	DESIGN
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9998305142668902	WITHOUT_CLASSIFICATION	1.6948573310981673E-4	DESIGN
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999991490525455	WITHOUT_CLASSIFICATION	8.509474543893564E-7	DESIGN
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999961341664375	WITHOUT_CLASSIFICATION	3.8658335624737895E-6	DESIGN
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999968500371522	WITHOUT_CLASSIFICATION	3.1499628478161255E-6	DESIGN
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999835451494169	WITHOUT_CLASSIFICATION	1.6454850583093917E-5	DESIGN
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999996615806062	WITHOUT_CLASSIFICATION	3.384193938736072E-7	DESIGN
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.999987418768932	WITHOUT_CLASSIFICATION	1.2581231067936285E-5	DESIGN
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999994880670627	WITHOUT_CLASSIFICATION	5.119329372391771E-7	DESIGN
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999937285987095	WITHOUT_CLASSIFICATION	6.271401290466675E-6	DESIGN
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9996638545410893	WITHOUT_CLASSIFICATION	3.361454589106391E-4	DESIGN
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999407367651725	WITHOUT_CLASSIFICATION	5.9263234827374924E-5	DESIGN
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999993846683919	WITHOUT_CLASSIFICATION	6.15331608143765E-7	DESIGN
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999997021933917	WITHOUT_CLASSIFICATION	2.9780660831353827E-7	DESIGN
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999852356030854	WITHOUT_CLASSIFICATION	1.4764396914772503E-5	DESIGN
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999999828569288	WITHOUT_CLASSIFICATION	1.714307128358628E-8	DESIGN
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999999872696987	WITHOUT_CLASSIFICATION	1.273030124639756E-8	DESIGN
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999527207245714	WITHOUT_CLASSIFICATION	4.7279275428485445E-5	DESIGN
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.7557363983264762	WITHOUT_CLASSIFICATION	0.24426360167352387	DESIGN
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999991916027143	WITHOUT_CLASSIFICATION	8.083972857972599E-7	DESIGN
// Illegal combination	WITHOUT_CLASSIFICATION	0.999999648351277	WITHOUT_CLASSIFICATION	3.516487229543847E-7	DESIGN
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9999658564795642	WITHOUT_CLASSIFICATION	3.41435204358316E-5	DESIGN
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999702449442424	WITHOUT_CLASSIFICATION	2.97550557575492E-5	DESIGN
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999967799445488	WITHOUT_CLASSIFICATION	3.2200554512048737E-6	DESIGN
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.999986180589857	WITHOUT_CLASSIFICATION	1.3819410143026471E-5	DESIGN
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999916417481676	WITHOUT_CLASSIFICATION	8.358251832353531E-6	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999981082515884	WITHOUT_CLASSIFICATION	1.8917484116828307E-6	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999981082515884	WITHOUT_CLASSIFICATION	1.8917484116828307E-6	DESIGN
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.999980991636628	WITHOUT_CLASSIFICATION	1.9008363371932226E-5	DESIGN
// string given	WITHOUT_CLASSIFICATION	0.9999869198350121	WITHOUT_CLASSIFICATION	1.308016498799954E-5	DESIGN
// hash given	WITHOUT_CLASSIFICATION	0.9999618741507629	WITHOUT_CLASSIFICATION	3.8125849237082524E-5	DESIGN
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999609817830932	WITHOUT_CLASSIFICATION	3.9018216906907615E-5	DESIGN
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999833176701487	WITHOUT_CLASSIFICATION	1.6682329851371305E-5	DESIGN
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.999822399867698	WITHOUT_CLASSIFICATION	1.7760013230193518E-4	DESIGN
// nothing	WITHOUT_CLASSIFICATION	0.9992931923201755	WITHOUT_CLASSIFICATION	7.06807679824557E-4	DESIGN
// nothing	WITHOUT_CLASSIFICATION	0.9992931923201755	WITHOUT_CLASSIFICATION	7.06807679824557E-4	DESIGN
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999634298051825	WITHOUT_CLASSIFICATION	3.657019481746323E-5	DESIGN
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.9839660321743828	DESIGN	0.016033967825617154	WITHOUT_CLASSIFICATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9994455012931077	WITHOUT_CLASSIFICATION	5.544987068923233E-4	DESIGN
// keep cr ?	WITHOUT_CLASSIFICATION	0.9994455012931077	WITHOUT_CLASSIFICATION	5.544987068923233E-4	DESIGN
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999858179032202	WITHOUT_CLASSIFICATION	1.4182096779801659E-5	DESIGN
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999997248009335	WITHOUT_CLASSIFICATION	2.751990666205015E-7	DESIGN
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999997248009335	WITHOUT_CLASSIFICATION	2.751990666205015E-7	DESIGN
// modified	WITHOUT_CLASSIFICATION	0.999943898587318	WITHOUT_CLASSIFICATION	5.610141268192762E-5	DESIGN
// modified	WITHOUT_CLASSIFICATION	0.999943898587318	WITHOUT_CLASSIFICATION	5.610141268192762E-5	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9999944577266009	WITHOUT_CLASSIFICATION	5.54227339908442E-6	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9999944577266009	WITHOUT_CLASSIFICATION	5.54227339908442E-6	DESIGN
// QTRUE	WITHOUT_CLASSIFICATION	0.9999191694940269	WITHOUT_CLASSIFICATION	8.083050597311983E-5	DESIGN
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9984553032332336	WITHOUT_CLASSIFICATION	0.0015446967667663743	DESIGN
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999976115614129	WITHOUT_CLASSIFICATION	2.388438587037016E-6	DESIGN
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.999966778539976	WITHOUT_CLASSIFICATION	3.322146002395666E-5	DESIGN
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999997531760051	WITHOUT_CLASSIFICATION	2.468239949196291E-7	DESIGN
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999988397026947	WITHOUT_CLASSIFICATION	1.160297305307002E-6	DESIGN
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999827312277384	WITHOUT_CLASSIFICATION	1.7268772261597042E-5	DESIGN
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999964807051266	WITHOUT_CLASSIFICATION	3.5192948734646465E-6	DESIGN
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999827312277384	WITHOUT_CLASSIFICATION	1.7268772261597042E-5	DESIGN
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9993664155743419	WITHOUT_CLASSIFICATION	6.335844256580643E-4	DESIGN
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999988412893622	WITHOUT_CLASSIFICATION	1.1587106377864887E-6	DESIGN
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999999562887222	WITHOUT_CLASSIFICATION	4.371127777853821E-8	DESIGN
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999999964867865	WITHOUT_CLASSIFICATION	3.5132135376018704E-9	DESIGN
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999961733429025	WITHOUT_CLASSIFICATION	3.82665709757749E-6	DESIGN
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9999115933241731	WITHOUT_CLASSIFICATION	8.840667582686566E-5	DESIGN
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999990276440377	WITHOUT_CLASSIFICATION	9.723559623431512E-7	DESIGN
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999985648125704	WITHOUT_CLASSIFICATION	1.4351874295321513E-6	DESIGN
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999999500310026	WITHOUT_CLASSIFICATION	4.99689973773785E-8	DESIGN
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9998796784335622	WITHOUT_CLASSIFICATION	1.2032156643784177E-4	DESIGN
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999875236857636	WITHOUT_CLASSIFICATION	1.2476314236449411E-5	DESIGN
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999987192775596	WITHOUT_CLASSIFICATION	1.2807224404917337E-6	DESIGN
// file not given	WITHOUT_CLASSIFICATION	0.9999943648695512	WITHOUT_CLASSIFICATION	5.635130448844276E-6	DESIGN
// string to eval	WITHOUT_CLASSIFICATION	0.9999719822454779	WITHOUT_CLASSIFICATION	2.801775452212018E-5	DESIGN
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999999025753232	WITHOUT_CLASSIFICATION	9.742467678589418E-8	DESIGN
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999998839186238	WITHOUT_CLASSIFICATION	1.1608137613282743E-7	DESIGN
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999997463881499	WITHOUT_CLASSIFICATION	2.5361185007572723E-7	DESIGN
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999971796708498	WITHOUT_CLASSIFICATION	2.820329150149706E-6	DESIGN
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9999997959502089	WITHOUT_CLASSIFICATION	2.040497911645952E-7	DESIGN
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9999995399882379	WITHOUT_CLASSIFICATION	4.600117621670447E-7	DESIGN
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9999934946302093	WITHOUT_CLASSIFICATION	6.5053697906802084E-6	DESIGN
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999999698145781	WITHOUT_CLASSIFICATION	3.018542199830803E-8	DESIGN
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.999999034527242	WITHOUT_CLASSIFICATION	9.654727580015085E-7	DESIGN
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9997468725603005	WITHOUT_CLASSIFICATION	2.531274396995734E-4	DESIGN
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.999999993525136	WITHOUT_CLASSIFICATION	6.4748639134028154E-9	DESIGN
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.999976361575432	WITHOUT_CLASSIFICATION	2.3638424567998393E-5	DESIGN
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999948368572137	WITHOUT_CLASSIFICATION	5.163142786276161E-6	DESIGN
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999999413859513	WITHOUT_CLASSIFICATION	5.86140487704355E-8	DESIGN
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999998594639053	WITHOUT_CLASSIFICATION	1.4053609468588274E-7	DESIGN
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999998874654532	WITHOUT_CLASSIFICATION	1.1253454680211199E-7	DESIGN
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999960126246593	WITHOUT_CLASSIFICATION	3.9873753407469205E-6	DESIGN
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999999977050075	WITHOUT_CLASSIFICATION	2.294992518859671E-9	DESIGN
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999760967572194	WITHOUT_CLASSIFICATION	2.3903242780546214E-5	DESIGN
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999997797632625	WITHOUT_CLASSIFICATION	2.2023673745558664E-7	DESIGN
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999999700463862	WITHOUT_CLASSIFICATION	2.9953613826450004E-8	DESIGN
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999998155366255	WITHOUT_CLASSIFICATION	1.8446337442456987E-7	DESIGN
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999998782607519	WITHOUT_CLASSIFICATION	1.217392481955279E-7	DESIGN
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.999999831141759	WITHOUT_CLASSIFICATION	1.688582408235105E-7	DESIGN
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.999992808907906	WITHOUT_CLASSIFICATION	7.191092094001245E-6	DESIGN
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999973478006352	WITHOUT_CLASSIFICATION	2.6521993647763146E-6	DESIGN
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999981501596855	WITHOUT_CLASSIFICATION	1.8498403144661902E-6	DESIGN
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999999943445947	WITHOUT_CLASSIFICATION	5.655405317689664E-9	DESIGN
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999999739863052	WITHOUT_CLASSIFICATION	2.6013694742533522E-8	DESIGN
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999999629303331	WITHOUT_CLASSIFICATION	3.706966686969907E-8	DESIGN
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999999992687099	WITHOUT_CLASSIFICATION	7.312901697633676E-10	DESIGN
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999998794019863	WITHOUT_CLASSIFICATION	1.2059801375185487E-7	DESIGN
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999999503475178	WITHOUT_CLASSIFICATION	4.965248228293259E-8	DESIGN
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999990612063444	WITHOUT_CLASSIFICATION	9.387936556222599E-7	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999748692226387	WITHOUT_CLASSIFICATION	2.5130777361306553E-5	DESIGN
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9997814062454465	WITHOUT_CLASSIFICATION	2.18593754553429E-4	DESIGN
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9991971524660203	WITHOUT_CLASSIFICATION	8.028475339797652E-4	DESIGN
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999999882705409	WITHOUT_CLASSIFICATION	1.1729459190399731E-8	DESIGN
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999748319740921	WITHOUT_CLASSIFICATION	2.5168025907970898E-5	DESIGN
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9957780279652235	WITHOUT_CLASSIFICATION	0.004221972034776465	DESIGN
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999831674384242	WITHOUT_CLASSIFICATION	1.6832561575801687E-5	DESIGN
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999831674384242	WITHOUT_CLASSIFICATION	1.6832561575801687E-5	DESIGN
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999999916867248	WITHOUT_CLASSIFICATION	8.313275135267361E-9	DESIGN
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999999220094331	WITHOUT_CLASSIFICATION	7.799056689118038E-8	DESIGN
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999416473307824	WITHOUT_CLASSIFICATION	5.835266921756966E-5	DESIGN
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.999998398923349	WITHOUT_CLASSIFICATION	1.6010766509323315E-6	DESIGN
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.999999091154049	WITHOUT_CLASSIFICATION	9.088459510626774E-7	DESIGN
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999997311887077	WITHOUT_CLASSIFICATION	2.688112923668168E-7	DESIGN
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999850731420796	WITHOUT_CLASSIFICATION	1.4926857920316998E-5	DESIGN
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.999995167949736	WITHOUT_CLASSIFICATION	4.8320502641076594E-6	DESIGN
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9995426800127344	WITHOUT_CLASSIFICATION	4.5731998726562036E-4	DESIGN
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.999998927099817	WITHOUT_CLASSIFICATION	1.0729001830087702E-6	DESIGN
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999982595757898	WITHOUT_CLASSIFICATION	1.7404242102436846E-6	DESIGN
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999982595757898	WITHOUT_CLASSIFICATION	1.7404242102436846E-6	DESIGN
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9992223960270508	DESIGN	7.776039729492397E-4	WITHOUT_CLASSIFICATION
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9979649215016049	WITHOUT_CLASSIFICATION	0.0020350784983950935	DESIGN
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999999999816928	WITHOUT_CLASSIFICATION	1.830730478126871E-11	DESIGN
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999998092002165	WITHOUT_CLASSIFICATION	1.907997835015486E-7	DESIGN
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999999968407202	WITHOUT_CLASSIFICATION	3.159279856878811E-9	DESIGN
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999998702770836	WITHOUT_CLASSIFICATION	1.2972291638104703E-7	DESIGN
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999999320639251	WITHOUT_CLASSIFICATION	6.793607495619964E-8	DESIGN
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999996946074288	WITHOUT_CLASSIFICATION	3.053925712806388E-7	DESIGN
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999994907717504	WITHOUT_CLASSIFICATION	5.092282494804025E-7	DESIGN
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999622084050449	WITHOUT_CLASSIFICATION	3.779159495514219E-5	DESIGN
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.99998261440176	WITHOUT_CLASSIFICATION	1.7385598240063198E-5	DESIGN
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999999790295246	WITHOUT_CLASSIFICATION	2.0970475351907707E-8	DESIGN
// Return false here	WITHOUT_CLASSIFICATION	0.9999560748333168	WITHOUT_CLASSIFICATION	4.39251666831183E-5	DESIGN
// Return false here	WITHOUT_CLASSIFICATION	0.9999560748333168	WITHOUT_CLASSIFICATION	4.39251666831183E-5	DESIGN
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9999998896473937	WITHOUT_CLASSIFICATION	1.1035260638136656E-7	DESIGN
// Should we do anything?	WITHOUT_CLASSIFICATION	0.5883652240551714	WITHOUT_CLASSIFICATION	0.4116347759448286	DESIGN
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999481917516481	WITHOUT_CLASSIFICATION	5.180824835197979E-5	DESIGN
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9999978473712392	WITHOUT_CLASSIFICATION	2.152628760711716E-6	DESIGN
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999412213555209	WITHOUT_CLASSIFICATION	5.8778644479103445E-5	DESIGN
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9994849896127811	WITHOUT_CLASSIFICATION	5.150103872189259E-4	DESIGN
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999999889503662	WITHOUT_CLASSIFICATION	1.10496337859003E-8	DESIGN
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999998910952705	WITHOUT_CLASSIFICATION	1.089047295231335E-7	DESIGN
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9999991240254267	WITHOUT_CLASSIFICATION	8.759745732822909E-7	DESIGN
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9943319209768644	WITHOUT_CLASSIFICATION	0.0056680790231355745	DESIGN
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999999999816928	WITHOUT_CLASSIFICATION	1.830730478126871E-11	DESIGN
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9999999438144725	WITHOUT_CLASSIFICATION	5.6185527495073045E-8	DESIGN
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9994913282515204	WITHOUT_CLASSIFICATION	5.086717484795658E-4	DESIGN
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999999153210359	WITHOUT_CLASSIFICATION	8.467896397884825E-8	DESIGN
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9986691466823722	WITHOUT_CLASSIFICATION	0.0013308533176278163	DESIGN
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9966979844450239	WITHOUT_CLASSIFICATION	0.003302015554976119	DESIGN
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9987861812008159	WITHOUT_CLASSIFICATION	0.0012138187991841622	DESIGN
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999850477279756	WITHOUT_CLASSIFICATION	1.4952272024435583E-5	DESIGN
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999613202766068	WITHOUT_CLASSIFICATION	3.867972339327637E-5	DESIGN
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999996696263194	WITHOUT_CLASSIFICATION	3.3037368056012385E-7	DESIGN
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999996912478044	WITHOUT_CLASSIFICATION	3.0875219557027184E-7	DESIGN
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999985383632175	WITHOUT_CLASSIFICATION	1.4616367824863887E-6	DESIGN
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.7514464028408665	DESIGN	0.2485535971591335	WITHOUT_CLASSIFICATION
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999999745847898	WITHOUT_CLASSIFICATION	2.5415210084347455E-8	DESIGN
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.999984288147796	WITHOUT_CLASSIFICATION	1.5711852203965124E-5	DESIGN
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9995775998764642	WITHOUT_CLASSIFICATION	4.22400123535833E-4	DESIGN
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.999999782049082	WITHOUT_CLASSIFICATION	2.1795091801043612E-7	DESIGN
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9990898915039992	WITHOUT_CLASSIFICATION	9.101084960007211E-4	DESIGN
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999124381988309	WITHOUT_CLASSIFICATION	8.756180116917522E-5	DESIGN
/* rb: readable */	WITHOUT_CLASSIFICATION	0.998510849482453	WITHOUT_CLASSIFICATION	0.0014891505175469786	DESIGN
// rename is successful	WITHOUT_CLASSIFICATION	0.9999303036198748	WITHOUT_CLASSIFICATION	6.96963801252916E-5	DESIGN
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.6365429056133033	WITHOUT_CLASSIFICATION	0.36345709438669677	DESIGN
// try to rename one more time	WITHOUT_CLASSIFICATION	0.999997697414766	WITHOUT_CLASSIFICATION	2.302585234019513E-6	DESIGN
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.999231352635651	WITHOUT_CLASSIFICATION	7.686473643489674E-4	DESIGN
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999993367443804	WITHOUT_CLASSIFICATION	6.632556196366302E-7	DESIGN
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9999771566104908	WITHOUT_CLASSIFICATION	2.2843389509164016E-5	DESIGN
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999765567574247	WITHOUT_CLASSIFICATION	2.3443242575301035E-5	DESIGN
// 16 ?	WITHOUT_CLASSIFICATION	0.9997842013087913	WITHOUT_CLASSIFICATION	2.1579869120859013E-4	DESIGN
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999999241529475	WITHOUT_CLASSIFICATION	7.58470525280676E-8	DESIGN
// size + 1;	WITHOUT_CLASSIFICATION	0.999965968165369	WITHOUT_CLASSIFICATION	3.4031834631054834E-5	DESIGN
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999999043225785	WITHOUT_CLASSIFICATION	9.567742149511962E-8	DESIGN
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999996565556407	WITHOUT_CLASSIFICATION	3.434443592187842E-7	DESIGN
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999996565556407	WITHOUT_CLASSIFICATION	3.434443592187842E-7	DESIGN
// put implementation	WITHOUT_CLASSIFICATION	0.9999966660744521	WITHOUT_CLASSIFICATION	3.3339255479051695E-6	DESIGN
// get implementation	WITHOUT_CLASSIFICATION	0.9999991929748895	WITHOUT_CLASSIFICATION	8.070251104677751E-7	DESIGN
// specialized for value	WITHOUT_CLASSIFICATION	0.9999937500997231	WITHOUT_CLASSIFICATION	6.249900276925597E-6	DESIGN
// delete implementation	WITHOUT_CLASSIFICATION	0.9999839191547761	WITHOUT_CLASSIFICATION	1.6080845223831807E-5	DESIGN
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9995713847679749	WITHOUT_CLASSIFICATION	4.286152320251449E-4	DESIGN
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999994283893449	WITHOUT_CLASSIFICATION	5.716106551962916E-7	DESIGN
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999991117215024	WITHOUT_CLASSIFICATION	8.882784975898026E-7	DESIGN
// update the hash value	WITHOUT_CLASSIFICATION	0.9999938568590255	WITHOUT_CLASSIFICATION	6.143140974470745E-6	DESIGN
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9999885610895471	WITHOUT_CLASSIFICATION	1.1438910452708589E-5	DESIGN
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.999947447562534	WITHOUT_CLASSIFICATION	5.2552437465958194E-5	DESIGN
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999999618966265	WITHOUT_CLASSIFICATION	3.8103373457726795E-8	DESIGN
// remain where we are	WITHOUT_CLASSIFICATION	0.9999693193576967	WITHOUT_CLASSIFICATION	3.068064230325324E-5	DESIGN
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.999999807746743	WITHOUT_CLASSIFICATION	1.922532568583313E-7	DESIGN
// default: don't retain	WITHOUT_CLASSIFICATION	0.9983366129858146	WITHOUT_CLASSIFICATION	0.0016633870141854617	DESIGN
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999999938173756	WITHOUT_CLASSIFICATION	6.182624420688533E-9	DESIGN
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999338145105372	WITHOUT_CLASSIFICATION	6.618548946279637E-5	DESIGN
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999999359691172	WITHOUT_CLASSIFICATION	6.403088291342049E-8	DESIGN
// first try as directory	WITHOUT_CLASSIFICATION	0.9999999386318695	WITHOUT_CLASSIFICATION	6.136813051417157E-8	DESIGN
// next as regular file	WITHOUT_CLASSIFICATION	0.9999745501714579	WITHOUT_CLASSIFICATION	2.544982854206815E-5	DESIGN
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9926701722310405	WITHOUT_CLASSIFICATION	0.007329827768959545	DESIGN
// NIO-based	WITHOUT_CLASSIFICATION	0.9997997390527319	WITHOUT_CLASSIFICATION	2.0026094726816903E-4	DESIGN
// NIO-based	WITHOUT_CLASSIFICATION	0.9997997390527319	WITHOUT_CLASSIFICATION	2.0026094726816903E-4	DESIGN
// Stream-based	WITHOUT_CLASSIFICATION	0.9999312186149109	WITHOUT_CLASSIFICATION	6.878138508916072E-5	DESIGN
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9999986536662059	WITHOUT_CLASSIFICATION	1.3463337942065008E-6	DESIGN
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999569961204047	WITHOUT_CLASSIFICATION	4.300387959544491E-5	DESIGN
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999919697096051	WITHOUT_CLASSIFICATION	8.030290394932098E-6	DESIGN
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999999261657676	WITHOUT_CLASSIFICATION	7.383423241325246E-8	DESIGN
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999999835485537	WITHOUT_CLASSIFICATION	1.6451446278633628E-8	DESIGN
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999998190854404	WITHOUT_CLASSIFICATION	1.8091455959174218E-7	DESIGN
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999998625916	WITHOUT_CLASSIFICATION	1.3740831561201926E-10	DESIGN
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999926896341181	WITHOUT_CLASSIFICATION	7.310365881918955E-6	DESIGN
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999999974869243	WITHOUT_CLASSIFICATION	2.5130757278613336E-9	DESIGN
// re-register	WITHOUT_CLASSIFICATION	0.9999984635942785	WITHOUT_CLASSIFICATION	1.5364057214566866E-6	DESIGN
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999998903678431	WITHOUT_CLASSIFICATION	1.0963215689397862E-7	DESIGN
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999992304253037	WITHOUT_CLASSIFICATION	7.695746961741381E-7	DESIGN
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999998912776927	WITHOUT_CLASSIFICATION	1.087223073305322E-7	DESIGN
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999999904511312	WITHOUT_CLASSIFICATION	9.548868758195438E-9	DESIGN
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.961875930209511	WITHOUT_CLASSIFICATION	0.038124069790489	DESIGN
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999908706728565	WITHOUT_CLASSIFICATION	9.129327143438934E-6	DESIGN
// use original modes	WITHOUT_CLASSIFICATION	0.9999929525255798	WITHOUT_CLASSIFICATION	7.047474420167939E-6	DESIGN
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999997265081062	WITHOUT_CLASSIFICATION	2.7349189381436493E-7	DESIGN
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9942454507292258	WITHOUT_CLASSIFICATION	0.005754549270774213	DESIGN
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9999964867340829	WITHOUT_CLASSIFICATION	3.513265917056271E-6	DESIGN
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999988401929799	WITHOUT_CLASSIFICATION	1.1598070199964623E-6	DESIGN
// isRetained=true	WITHOUT_CLASSIFICATION	0.9999923626334483	WITHOUT_CLASSIFICATION	7.637366551807172E-6	DESIGN
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9958918195077654	WITHOUT_CLASSIFICATION	0.0041081804922346145	DESIGN
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999990098645524	WITHOUT_CLASSIFICATION	9.9013544766763E-7	DESIGN
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9999720197613339	WITHOUT_CLASSIFICATION	2.7980238666137478E-5	DESIGN
//Everything written	WITHOUT_CLASSIFICATION	0.9984472995084144	WITHOUT_CLASSIFICATION	0.0015527004915856504	DESIGN
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999467016064731	WITHOUT_CLASSIFICATION	5.329839352692229E-5	DESIGN
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999998772597526	WITHOUT_CLASSIFICATION	1.2274024743060992E-7	DESIGN
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9717064423034387	WITHOUT_CLASSIFICATION	0.02829355769656135	DESIGN
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999998394043466	WITHOUT_CLASSIFICATION	1.6059565341603485E-7	DESIGN
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999183389751025	WITHOUT_CLASSIFICATION	8.166102489751983E-5	DESIGN
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9974346524969459	WITHOUT_CLASSIFICATION	0.0025653475030541608	DESIGN
// hmmmm	WITHOUT_CLASSIFICATION	0.9997612539488898	WITHOUT_CLASSIFICATION	2.387460511102782E-4	DESIGN
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999989076737946	WITHOUT_CLASSIFICATION	1.0923262054051104E-6	DESIGN
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9030014990442048	WITHOUT_CLASSIFICATION	0.0969985009557952	DESIGN
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999951554705763	WITHOUT_CLASSIFICATION	4.8445294237074145E-6	DESIGN
// Length to read	WITHOUT_CLASSIFICATION	0.9999986918350038	WITHOUT_CLASSIFICATION	1.3081649963132395E-6	DESIGN
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999459782813495	WITHOUT_CLASSIFICATION	5.402171865051991E-5	DESIGN
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999982678578766	WITHOUT_CLASSIFICATION	1.7321421232747073E-6	DESIGN
// select until read is ready	WITHOUT_CLASSIFICATION	0.9995671356442849	WITHOUT_CLASSIFICATION	4.3286435571517865E-4	DESIGN
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999996893706051	WITHOUT_CLASSIFICATION	3.106293948789462E-7	DESIGN
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999999659510899	WITHOUT_CLASSIFICATION	3.404891020000997E-8	DESIGN
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9993798031543197	WITHOUT_CLASSIFICATION	6.201968456801452E-4	DESIGN
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9972338449814274	WITHOUT_CLASSIFICATION	0.002766155018572617	DESIGN
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9993798031543197	WITHOUT_CLASSIFICATION	6.201968456801452E-4	DESIGN
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.999991995023691	DESIGN	8.004976309066291E-6	WITHOUT_CLASSIFICATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.5834200549170092	DESIGN	0.41657994508299084	WITHOUT_CLASSIFICATION
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999978454621314	WITHOUT_CLASSIFICATION	2.1545378686350456E-6	DESIGN
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.9997776792277289	DESIGN	2.2232077227112904E-4	WITHOUT_CLASSIFICATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999006592281674	WITHOUT_CLASSIFICATION	9.934077183263677E-5	DESIGN
// save blocking state	WITHOUT_CLASSIFICATION	0.9998093985753033	WITHOUT_CLASSIFICATION	1.9060142469678454E-4	DESIGN
// write	WITHOUT_CLASSIFICATION	0.9998773853792342	WITHOUT_CLASSIFICATION	1.226146207657514E-4	DESIGN
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9998932810298391	WITHOUT_CLASSIFICATION	1.0671897016093691E-4	DESIGN
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999997513287787	WITHOUT_CLASSIFICATION	2.486712213013919E-7	DESIGN
// FIXME: process options	WITHOUT_CLASSIFICATION	0.5314072461313138	WITHOUT_CLASSIFICATION	0.46859275386868615	DESIGN
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9955202708069835	WITHOUT_CLASSIFICATION	0.004479729193016582	DESIGN
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9997384351706037	WITHOUT_CLASSIFICATION	2.6156482939634315E-4	DESIGN
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9808758001872281	WITHOUT_CLASSIFICATION	0.0191241998127719	DESIGN
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999997951955991	WITHOUT_CLASSIFICATION	2.0480440077108615E-7	DESIGN
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.999959936747516	WITHOUT_CLASSIFICATION	4.006325248393322E-5	DESIGN
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9776774143426731	DESIGN	0.022322585657326977	WITHOUT_CLASSIFICATION
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999893662679109	WITHOUT_CLASSIFICATION	1.0633732089155832E-5	DESIGN
// The class of this object	WITHOUT_CLASSIFICATION	0.9994892402527157	WITHOUT_CLASSIFICATION	5.107597472843534E-4	DESIGN
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999933007905649	WITHOUT_CLASSIFICATION	6.699209435179707E-6	DESIGN
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9999122323360311	WITHOUT_CLASSIFICATION	8.776766396896918E-5	DESIGN
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9999919986167449	WITHOUT_CLASSIFICATION	8.001383255051518E-6	DESIGN
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9999979465227522	WITHOUT_CLASSIFICATION	2.053477247783284E-6	DESIGN
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999593395909904	WITHOUT_CLASSIFICATION	4.066040900961385E-5	DESIGN
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999983847791555	WITHOUT_CLASSIFICATION	1.6152208445208222E-6	DESIGN
// for interface impls	WITHOUT_CLASSIFICATION	0.9999919438171071	WITHOUT_CLASSIFICATION	8.05618289286958E-6	DESIGN
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9998357770611318	WITHOUT_CLASSIFICATION	1.6422293886816483E-4	DESIGN
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999587062512524	WITHOUT_CLASSIFICATION	4.1293748747585505E-5	DESIGN
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9998787716209221	WITHOUT_CLASSIFICATION	1.2122837907790046E-4	DESIGN
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999944787957626	WITHOUT_CLASSIFICATION	5.521204237346448E-6	DESIGN
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9994476548775941	WITHOUT_CLASSIFICATION	5.523451224058253E-4	DESIGN
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999999706697167	WITHOUT_CLASSIFICATION	2.9330283377989488E-8	DESIGN
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999999948736438	WITHOUT_CLASSIFICATION	5.126356252509365E-9	DESIGN
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999999704096295	WITHOUT_CLASSIFICATION	2.95903705253975E-8	DESIGN
// Struct methods	WITHOUT_CLASSIFICATION	0.9999675104894884	WITHOUT_CLASSIFICATION	3.248951051162404E-5	DESIGN
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9999999999939617	WITHOUT_CLASSIFICATION	6.0383593563165246E-12	DESIGN
// define access methods.	WITHOUT_CLASSIFICATION	0.9999983538905343	WITHOUT_CLASSIFICATION	1.6461094656366483E-6	DESIGN
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.999997840554555	WITHOUT_CLASSIFICATION	2.1594454449282068E-6	DESIGN
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9175772027419408	WITHOUT_CLASSIFICATION	0.08242279725805926	DESIGN
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999949425996945	WITHOUT_CLASSIFICATION	5.057400305624601E-6	DESIGN
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999978900444702	WITHOUT_CLASSIFICATION	2.1099555297423563E-6	DESIGN
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999999977810391	WITHOUT_CLASSIFICATION	2.218960864356755E-9	DESIGN
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.999999654769943	WITHOUT_CLASSIFICATION	3.4523005705753384E-7	DESIGN
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999999959728791	WITHOUT_CLASSIFICATION	4.0271209065078575E-9	DESIGN
// Atomic ?	WITHOUT_CLASSIFICATION	0.9998297995933443	WITHOUT_CLASSIFICATION	1.7020040665583625E-4	DESIGN
// Atomic ?	WITHOUT_CLASSIFICATION	0.9998297995933443	WITHOUT_CLASSIFICATION	1.7020040665583625E-4	DESIGN
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9777225015938902	WITHOUT_CLASSIFICATION	0.022277498406109843	DESIGN
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9978274215491374	WITHOUT_CLASSIFICATION	0.0021725784508626043	DESIGN
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9417477489165471	WITHOUT_CLASSIFICATION	0.05825225108345286	DESIGN
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999998694204414	WITHOUT_CLASSIFICATION	1.3057955861896168E-7	DESIGN
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999950164342117	WITHOUT_CLASSIFICATION	4.983565788315353E-6	DESIGN
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999839714273396	WITHOUT_CLASSIFICATION	1.6028572660295838E-5	DESIGN
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999984539590278	WITHOUT_CLASSIFICATION	1.5460409721667347E-6	DESIGN
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999938624987508	WITHOUT_CLASSIFICATION	6.137501249218309E-6	DESIGN
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9995128340300646	WITHOUT_CLASSIFICATION	4.871659699353312E-4	DESIGN
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9979894565356289	WITHOUT_CLASSIFICATION	0.0020105434643710503	DESIGN
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999993548906275	WITHOUT_CLASSIFICATION	6.451093723995325E-7	DESIGN
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999415960633868	WITHOUT_CLASSIFICATION	5.8403936613154496E-5	DESIGN
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9768410859818991	WITHOUT_CLASSIFICATION	0.02315891401810082	DESIGN
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999551578909864	WITHOUT_CLASSIFICATION	4.484210901353871E-5	DESIGN
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.889580095658385	WITHOUT_CLASSIFICATION	0.11041990434161501	DESIGN
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9999992592729575	WITHOUT_CLASSIFICATION	7.407270424869928E-7	DESIGN
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999683188522064	WITHOUT_CLASSIFICATION	3.168114779367411E-5	DESIGN
// reopen a java class	WITHOUT_CLASSIFICATION	0.999989061548205	WITHOUT_CLASSIFICATION	1.0938451794902557E-5	DESIGN
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9997908366750792	WITHOUT_CLASSIFICATION	2.0916332492070599E-4	DESIGN
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999958692759604	WITHOUT_CLASSIFICATION	4.130724039645921E-6	DESIGN
//FIXME warning	WITHOUT_CLASSIFICATION	0.5037731748133053	WITHOUT_CLASSIFICATION	0.49622682518669464	DESIGN
// FIXME warning	WITHOUT_CLASSIFICATION	0.6285499341515831	WITHOUT_CLASSIFICATION	0.3714500658484169	DESIGN
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9722077683421873	WITHOUT_CLASSIFICATION	0.027792231657812735	DESIGN
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9721638800014769	WITHOUT_CLASSIFICATION	0.02783611999852308	DESIGN
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.836356135453191	DESIGN	0.16364386454680896	WITHOUT_CLASSIFICATION
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9994707832392471	WITHOUT_CLASSIFICATION	5.292167607528883E-4	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9902283432755249	WITHOUT_CLASSIFICATION	0.009771656724475082	DESIGN
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9995884375304557	WITHOUT_CLASSIFICATION	4.1156246954433644E-4	DESIGN
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999986558315377	WITHOUT_CLASSIFICATION	1.3441684622524098E-6	DESIGN
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999697456341857	WITHOUT_CLASSIFICATION	3.0254365814263506E-5	DESIGN
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9986797955918838	DESIGN	0.0013202044081161376	WITHOUT_CLASSIFICATION
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999907891502539	WITHOUT_CLASSIFICATION	9.21084974613547E-6	DESIGN
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999999997518622	WITHOUT_CLASSIFICATION	2.481378938609224E-10	DESIGN
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999747487334512	WITHOUT_CLASSIFICATION	2.5251266548882903E-5	DESIGN
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999999873301135	WITHOUT_CLASSIFICATION	1.2669886502266866E-8	DESIGN
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999995085124918	WITHOUT_CLASSIFICATION	4.914875081794824E-7	DESIGN
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999999838031118	WITHOUT_CLASSIFICATION	1.6196888143342952E-8	DESIGN
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999999202320464	WITHOUT_CLASSIFICATION	7.976795361984972E-8	DESIGN
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9809876278085665	WITHOUT_CLASSIFICATION	0.019012372191433386	DESIGN
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999999561760194	WITHOUT_CLASSIFICATION	4.382398059600746E-8	DESIGN
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9999282758959089	WITHOUT_CLASSIFICATION	7.172410409095583E-5	DESIGN
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9997786260579531	WITHOUT_CLASSIFICATION	2.213739420468646E-4	DESIGN
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.991435873517835	WITHOUT_CLASSIFICATION	0.008564126482165061	DESIGN
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9997273504636095	WITHOUT_CLASSIFICATION	2.7264953639049205E-4	DESIGN
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.999945364938298	WITHOUT_CLASSIFICATION	5.463506170197037E-5	DESIGN
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999988507697467	WITHOUT_CLASSIFICATION	1.1492302533618788E-6	DESIGN
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999901693135026	WITHOUT_CLASSIFICATION	9.830686497400282E-6	DESIGN
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999996463466542	WITHOUT_CLASSIFICATION	3.53653345746846E-7	DESIGN
//reopen	WITHOUT_CLASSIFICATION	0.999979714030083	WITHOUT_CLASSIFICATION	2.0285969917065564E-5	DESIGN
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999969739416685	WITHOUT_CLASSIFICATION	3.026058331482025E-6	DESIGN
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999999661754649	WITHOUT_CLASSIFICATION	3.38245350676705E-8	DESIGN
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9999996080920933	WITHOUT_CLASSIFICATION	3.9190790662627387E-7	DESIGN
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999999974970638	WITHOUT_CLASSIFICATION	2.5029362164820444E-9	DESIGN
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999988510054673	WITHOUT_CLASSIFICATION	1.148994532681367E-6	DESIGN
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999640063277769	WITHOUT_CLASSIFICATION	3.5993672223169875E-5	DESIGN
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999974817242981	WITHOUT_CLASSIFICATION	2.5182757017605364E-6	DESIGN
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9998594353113098	WITHOUT_CLASSIFICATION	1.4056468869015753E-4	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9890959271026611	DESIGN	0.010904072897338812	WITHOUT_CLASSIFICATION
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9989860567555703	WITHOUT_CLASSIFICATION	0.0010139432444297586	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999779170740972	WITHOUT_CLASSIFICATION	2.2082925902714786E-5	DESIGN
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999944264741191	WITHOUT_CLASSIFICATION	5.5735258809604176E-6	DESIGN
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999845122448016	WITHOUT_CLASSIFICATION	1.5487755198447278E-5	DESIGN
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999972880043988	WITHOUT_CLASSIFICATION	2.7119956012364235E-6	DESIGN
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999992820896052	WITHOUT_CLASSIFICATION	7.179103949170526E-7	DESIGN
// ignore error	WITHOUT_CLASSIFICATION	0.9999896412490404	WITHOUT_CLASSIFICATION	1.035875095957107E-5	DESIGN
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999999634560113	WITHOUT_CLASSIFICATION	3.6543988619561074E-8	DESIGN
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999999716555147	WITHOUT_CLASSIFICATION	2.834448529106009E-8	DESIGN
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999999993448285	WITHOUT_CLASSIFICATION	6.55171606304444E-10	DESIGN
// odd	WITHOUT_CLASSIFICATION	0.9999573362708176	WITHOUT_CLASSIFICATION	4.2663729182349214E-5	DESIGN
// JRubyClient	WITHOUT_CLASSIFICATION	0.9999588099604043	WITHOUT_CLASSIFICATION	4.1190039595713024E-5	DESIGN
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.999999991818434	WITHOUT_CLASSIFICATION	8.181565873425705E-9	DESIGN
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9997852870460721	WITHOUT_CLASSIFICATION	2.1471295392792714E-4	DESIGN
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999999875380834	WITHOUT_CLASSIFICATION	1.2461916641964844E-8	DESIGN
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999840956481226	WITHOUT_CLASSIFICATION	1.590435187737262E-5	DESIGN
/*  0! */	WITHOUT_CLASSIFICATION	0.9999679065037519	WITHOUT_CLASSIFICATION	3.209349624812692E-5	DESIGN
/*  1! */	WITHOUT_CLASSIFICATION	0.9999647810196883	WITHOUT_CLASSIFICATION	3.521898031165484E-5	DESIGN
/*  2! */	WITHOUT_CLASSIFICATION	0.9999731313633304	WITHOUT_CLASSIFICATION	2.686863666961026E-5	DESIGN
/*  3! */	WITHOUT_CLASSIFICATION	0.9999493953416667	WITHOUT_CLASSIFICATION	5.0604658333373254E-5	DESIGN
/*  4! */	WITHOUT_CLASSIFICATION	0.9999463304022639	WITHOUT_CLASSIFICATION	5.3669597736163873E-5	DESIGN
/*  5! */	WITHOUT_CLASSIFICATION	0.9999264244179168	WITHOUT_CLASSIFICATION	7.357558208319771E-5	DESIGN
/*  6! */	WITHOUT_CLASSIFICATION	0.9999209319740227	WITHOUT_CLASSIFICATION	7.906802597728769E-5	DESIGN
/*  7! */	WITHOUT_CLASSIFICATION	0.9999251852897604	WITHOUT_CLASSIFICATION	7.481471023963806E-5	DESIGN
/*  8! */	WITHOUT_CLASSIFICATION	0.9999552195563846	WITHOUT_CLASSIFICATION	4.47804436154252E-5	DESIGN
/*  9! */	WITHOUT_CLASSIFICATION	0.9999301599546753	WITHOUT_CLASSIFICATION	6.984004532481581E-5	DESIGN
/* 11! */	WITHOUT_CLASSIFICATION	0.9999302077516551	WITHOUT_CLASSIFICATION	6.979224834489383E-5	DESIGN
/* 12! */	WITHOUT_CLASSIFICATION	0.9999661227888061	WITHOUT_CLASSIFICATION	3.3877211193878684E-5	DESIGN
/* 13! */	WITHOUT_CLASSIFICATION	0.9999432413026407	WITHOUT_CLASSIFICATION	5.675869735941177E-5	DESIGN
/* 15! */	WITHOUT_CLASSIFICATION	0.9999391258500694	WITHOUT_CLASSIFICATION	6.08741499306391E-5	DESIGN
/* 16! */	WITHOUT_CLASSIFICATION	0.9998997117407755	WITHOUT_CLASSIFICATION	1.0028825922440666E-4	DESIGN
/* 17! */	WITHOUT_CLASSIFICATION	0.9999153186547561	WITHOUT_CLASSIFICATION	8.468134524378164E-5	DESIGN
/* 19! */	WITHOUT_CLASSIFICATION	0.9999344051416174	WITHOUT_CLASSIFICATION	6.559485838259406E-5	DESIGN
/* 20! */	WITHOUT_CLASSIFICATION	0.9999591274118377	WITHOUT_CLASSIFICATION	4.087258816231624E-5	DESIGN
/* 21! */	WITHOUT_CLASSIFICATION	0.9999666579098754	WITHOUT_CLASSIFICATION	3.3342090124669047E-5	DESIGN
// Static constants	WITHOUT_CLASSIFICATION	0.9999945024468904	WITHOUT_CLASSIFICATION	5.497553109643162E-6	DESIGN
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.6865794835508752	WITHOUT_CLASSIFICATION	0.3134205164491248	DESIGN
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9997773615762201	WITHOUT_CLASSIFICATION	2.22638423779968E-4	DESIGN
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.999999983436694	WITHOUT_CLASSIFICATION	1.6563305948503844E-8	DESIGN
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9999642806201995	WITHOUT_CLASSIFICATION	3.571937980056553E-5	DESIGN
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999955189172643	WITHOUT_CLASSIFICATION	4.481082735695063E-6	DESIGN
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999962158965823	WITHOUT_CLASSIFICATION	3.78410341777686E-6	DESIGN
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9997458388553657	WITHOUT_CLASSIFICATION	2.5416114463427573E-4	DESIGN
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999991027038757	WITHOUT_CLASSIFICATION	8.972961242953634E-7	DESIGN
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999918622871106	WITHOUT_CLASSIFICATION	8.137712889433795E-6	DESIGN
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9999423931614767	DESIGN	5.7606838523323006E-5	WITHOUT_CLASSIFICATION
// integer division	WITHOUT_CLASSIFICATION	0.9999994383950628	WITHOUT_CLASSIFICATION	5.616049371606904E-7	DESIGN
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.999999485208932	WITHOUT_CLASSIFICATION	5.147910680947148E-7	DESIGN
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999918261923565	WITHOUT_CLASSIFICATION	8.17380764352348E-6	DESIGN
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999918261923565	WITHOUT_CLASSIFICATION	8.17380764352348E-6	DESIGN
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999990520516533	WITHOUT_CLASSIFICATION	9.479483466334953E-7	DESIGN
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9994797353748395	WITHOUT_CLASSIFICATION	5.202646251605264E-4	DESIGN
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999451331458237	WITHOUT_CLASSIFICATION	5.4866854176316565E-5	DESIGN
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9999354196108541	WITHOUT_CLASSIFICATION	6.458038914595546E-5	DESIGN
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9974140238121356	WITHOUT_CLASSIFICATION	0.002585976187864339	DESIGN
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9966005402321516	WITHOUT_CLASSIFICATION	0.0033994597678484724	DESIGN
// sign	WITHOUT_CLASSIFICATION	0.999976503764567	WITHOUT_CLASSIFICATION	2.3496235432909533E-5	DESIGN
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999986868265363	WITHOUT_CLASSIFICATION	1.3131734637960443E-6	DESIGN
// normalize the value	WITHOUT_CLASSIFICATION	0.99997448396711	WITHOUT_CLASSIFICATION	2.5516032889991523E-5	DESIGN
// base	WITHOUT_CLASSIFICATION	0.999999562313869	WITHOUT_CLASSIFICATION	4.376861310243747E-7	DESIGN
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9999987893936587	WITHOUT_CLASSIFICATION	1.2106063413097542E-6	DESIGN
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9994708523462222	WITHOUT_CLASSIFICATION	5.291476537776372E-4	DESIGN
// eh?!	WITHOUT_CLASSIFICATION	0.9990801512577213	WITHOUT_CLASSIFICATION	9.198487422787586E-4	DESIGN
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999844396704501	WITHOUT_CLASSIFICATION	1.5560329549924306E-5	DESIGN
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9949668595986773	WITHOUT_CLASSIFICATION	0.005033140401322713	DESIGN
// the requested precision	WITHOUT_CLASSIFICATION	0.9999553233477617	WITHOUT_CLASSIFICATION	4.467665223816197E-5	DESIGN
// Proc class	WITHOUT_CLASSIFICATION	0.9999808716759523	WITHOUT_CLASSIFICATION	1.9128324047734234E-5	DESIGN
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999979403764754	WITHOUT_CLASSIFICATION	2.059623524643216E-6	DESIGN
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999999802160174	WITHOUT_CLASSIFICATION	1.9783982533451988E-8	DESIGN
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999965297918342	WITHOUT_CLASSIFICATION	3.4702081658465973E-6	DESIGN
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999999283543997	WITHOUT_CLASSIFICATION	7.164560040507459E-8	DESIGN
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.8642794332889022	DESIGN	0.13572056671109778	WITHOUT_CLASSIFICATION
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999981846450606	WITHOUT_CLASSIFICATION	1.8153549394414987E-6	DESIGN
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.999997867684322	WITHOUT_CLASSIFICATION	2.132315678047503E-6	DESIGN
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999999988879823	WITHOUT_CLASSIFICATION	1.112017747872874E-9	DESIGN
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999868907288051	WITHOUT_CLASSIFICATION	1.310927119486231E-5	DESIGN
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999986271351499	WITHOUT_CLASSIFICATION	1.3728648500669692E-6	DESIGN
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999996250712767	WITHOUT_CLASSIFICATION	3.7492872323999843E-7	DESIGN
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999995170080711	WITHOUT_CLASSIFICATION	4.829919288339544E-7	DESIGN
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999948168607085	WITHOUT_CLASSIFICATION	5.18313929155036E-6	DESIGN
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999933972146035	WITHOUT_CLASSIFICATION	6.602785396496547E-6	DESIGN
// root x is ready!	WITHOUT_CLASSIFICATION	0.9994917888617159	WITHOUT_CLASSIFICATION	5.082111382841073E-4	DESIGN
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9999989007889829	WITHOUT_CLASSIFICATION	1.0992110169897876E-6	DESIGN
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999985881261039	WITHOUT_CLASSIFICATION	1.4118738961232816E-6	DESIGN
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999851545325421	WITHOUT_CLASSIFICATION	1.4845467457867497E-5	DESIGN
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9997791048820317	WITHOUT_CLASSIFICATION	2.2089511796825835E-4	DESIGN
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999934809393592	WITHOUT_CLASSIFICATION	6.51906064068691E-6	DESIGN
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.99999999082029	WITHOUT_CLASSIFICATION	9.1797101039717E-9	DESIGN
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9961326964984563	WITHOUT_CLASSIFICATION	0.0038673035015438038	DESIGN
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999845905981822	WITHOUT_CLASSIFICATION	1.5409401817834944E-5	DESIGN
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9968204109048743	WITHOUT_CLASSIFICATION	0.003179589095125709	DESIGN
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999944076002164	WITHOUT_CLASSIFICATION	5.5923997835195156E-6	DESIGN
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999995898577776	WITHOUT_CLASSIFICATION	4.1014222243645226E-7	DESIGN
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9998314870089232	WITHOUT_CLASSIFICATION	1.6851299107671516E-4	DESIGN
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9998314870089232	WITHOUT_CLASSIFICATION	1.6851299107671516E-4	DESIGN
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999967736692439	WITHOUT_CLASSIFICATION	3.2263307560511524E-6	DESIGN
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.999998710726659	WITHOUT_CLASSIFICATION	1.2892733410342503E-6	DESIGN
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999991732325488	WITHOUT_CLASSIFICATION	8.267674512393286E-7	DESIGN
//consume the file name	WITHOUT_CLASSIFICATION	0.9999611398404465	WITHOUT_CLASSIFICATION	3.886015955346959E-5	DESIGN
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9998859888162	WITHOUT_CLASSIFICATION	1.1401118379985953E-4	DESIGN
// try cwd first	WITHOUT_CLASSIFICATION	0.9999046015552433	WITHOUT_CLASSIFICATION	9.53984447567362E-5	DESIGN
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.99990386629495	WITHOUT_CLASSIFICATION	9.613370504999531E-5	DESIGN
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9999999900494899	WITHOUT_CLASSIFICATION	9.95051002254566E-9	DESIGN
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.999999395545073	WITHOUT_CLASSIFICATION	6.044549270880295E-7	DESIGN
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.999972654125115	WITHOUT_CLASSIFICATION	2.7345874885022867E-5	DESIGN
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999728760697553	WITHOUT_CLASSIFICATION	2.7123930244818697E-5	DESIGN
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999784124374984	WITHOUT_CLASSIFICATION	2.1587562501517545E-5	DESIGN
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999994657959576	WITHOUT_CLASSIFICATION	5.342040424435662E-7	DESIGN
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999909231333127	WITHOUT_CLASSIFICATION	9.076866687224984E-6	DESIGN
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.9613358030578811	DESIGN	0.03866419694211885	WITHOUT_CLASSIFICATION
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.7482710398599216	WITHOUT_CLASSIFICATION	0.25172896014007834	DESIGN
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9999937002536151	WITHOUT_CLASSIFICATION	6.299746384809783E-6	DESIGN
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9995677386376061	WITHOUT_CLASSIFICATION	4.322613623938804E-4	DESIGN
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999999650780396	WITHOUT_CLASSIFICATION	3.4921960490397395E-8	DESIGN
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999989614034734	WITHOUT_CLASSIFICATION	1.0385965264990265E-6	DESIGN
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999998237632125	WITHOUT_CLASSIFICATION	1.7623678749208513E-7	DESIGN
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999998237632125	WITHOUT_CLASSIFICATION	1.7623678749208513E-7	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999996955739076	WITHOUT_CLASSIFICATION	3.0442609247574033E-7	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999996955739076	WITHOUT_CLASSIFICATION	3.0442609247574033E-7	DESIGN
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999999791784937	WITHOUT_CLASSIFICATION	2.0821506371882186E-8	DESIGN
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999631598117475	WITHOUT_CLASSIFICATION	3.684018825239295E-5	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999995152594854	WITHOUT_CLASSIFICATION	4.84740514650512E-7	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999998952532093	WITHOUT_CLASSIFICATION	1.047467906570861E-7	DESIGN
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999976115614129	WITHOUT_CLASSIFICATION	2.388438587037016E-6	DESIGN
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999996879552672	WITHOUT_CLASSIFICATION	3.120447328410997E-7	DESIGN
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.8284727963235645	WITHOUT_CLASSIFICATION	0.17152720367643548	DESIGN
// Profile	WITHOUT_CLASSIFICATION	0.9999897127121429	WITHOUT_CLASSIFICATION	1.0287287857043337E-5	DESIGN
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999917339797039	WITHOUT_CLASSIFICATION	8.26602029612097E-6	DESIGN
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999999822555604	WITHOUT_CLASSIFICATION	1.7744439564915205E-8	DESIGN
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999665581288192	WITHOUT_CLASSIFICATION	3.344187118077558E-5	DESIGN
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999756394868919	WITHOUT_CLASSIFICATION	2.4360513108102045E-5	DESIGN
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999989826132432	WITHOUT_CLASSIFICATION	1.0173867568251012E-6	DESIGN
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9973558224928869	WITHOUT_CLASSIFICATION	0.0026441775071130743	DESIGN
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999997769235	WITHOUT_CLASSIFICATION	2.2307650020451816E-7	DESIGN
// reset the state	WITHOUT_CLASSIFICATION	0.9999914215102097	WITHOUT_CLASSIFICATION	8.578489790304155E-6	DESIGN
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9995227657171848	WITHOUT_CLASSIFICATION	4.772342828152045E-4	DESIGN
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999952810217231	WITHOUT_CLASSIFICATION	4.718978276998999E-6	DESIGN
//str is frozen	WITHOUT_CLASSIFICATION	0.9995549580483406	WITHOUT_CLASSIFICATION	4.450419516595128E-4	DESIGN
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999986029475111	WITHOUT_CLASSIFICATION	1.3970524889677855E-6	DESIGN
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999958298423317	WITHOUT_CLASSIFICATION	4.170157668276144E-6	DESIGN
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9999970484824756	WITHOUT_CLASSIFICATION	2.951517524302745E-6	DESIGN
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999986399788289	WITHOUT_CLASSIFICATION	1.360021171115768E-6	DESIGN
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999587062512524	WITHOUT_CLASSIFICATION	4.1293748747585505E-5	DESIGN
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999839714273396	WITHOUT_CLASSIFICATION	1.6028572660295838E-5	DESIGN
// undo check	WITHOUT_CLASSIFICATION	0.9999658220695515	WITHOUT_CLASSIFICATION	3.417793044857032E-5	DESIGN
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9989501937362679	WITHOUT_CLASSIFICATION	0.001049806263732172	DESIGN
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999997299830368	WITHOUT_CLASSIFICATION	2.700169632586911E-7	DESIGN
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9857640876211865	WITHOUT_CLASSIFICATION	0.014235912378813545	DESIGN
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999269360466332	WITHOUT_CLASSIFICATION	7.30639533668403E-5	DESIGN
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999269360466332	WITHOUT_CLASSIFICATION	7.30639533668403E-5	DESIGN
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.976934589946975	WITHOUT_CLASSIFICATION	0.023065410053024944	DESIGN
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9998819983703348	WITHOUT_CLASSIFICATION	1.180016296653251E-4	DESIGN
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999928490161379	WITHOUT_CLASSIFICATION	7.150983861996911E-6	DESIGN
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999456038539829	WITHOUT_CLASSIFICATION	5.4396146017082E-5	DESIGN
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999903805333038	WITHOUT_CLASSIFICATION	9.619466696193866E-6	DESIGN
// static initializing method	WITHOUT_CLASSIFICATION	0.998869610962768	WITHOUT_CLASSIFICATION	0.001130389037231979	DESIGN
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999966205387821	WITHOUT_CLASSIFICATION	3.379461217940168E-6	DESIGN
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9997129646935546	WITHOUT_CLASSIFICATION	2.8703530644537146E-4	DESIGN
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999831649554378	WITHOUT_CLASSIFICATION	1.6835044562206173E-5	DESIGN
// indices for temp values	WITHOUT_CLASSIFICATION	0.99999313575575	WITHOUT_CLASSIFICATION	6.864244250055306E-6	DESIGN
// self // method name	WITHOUT_CLASSIFICATION	0.9999646065078899	WITHOUT_CLASSIFICATION	3.539349211018467E-5	DESIGN
// the default allocator	WITHOUT_CLASSIFICATION	0.9999909436361564	WITHOUT_CLASSIFICATION	9.056363843565514E-6	DESIGN
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.999984778307784	WITHOUT_CLASSIFICATION	1.5221692216081745E-5	DESIGN
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9997397332853871	WITHOUT_CLASSIFICATION	2.602667146129437E-4	DESIGN
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999979177145477	WITHOUT_CLASSIFICATION	2.082285452386545E-6	DESIGN
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9998305142668902	WITHOUT_CLASSIFICATION	1.6948573310981673E-4	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9942991995489638	WITHOUT_CLASSIFICATION	0.005700800451036195	DESIGN
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9989262866456561	WITHOUT_CLASSIFICATION	0.001073713354343908	DESIGN
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999806280079665	WITHOUT_CLASSIFICATION	1.93719920333954E-5	DESIGN
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999999942214616	WITHOUT_CLASSIFICATION	5.778538450681273E-9	DESIGN
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999986715665756	WITHOUT_CLASSIFICATION	1.3284334243257184E-6	DESIGN
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999945273038771	WITHOUT_CLASSIFICATION	5.472696122863245E-6	DESIGN
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999989431136609	WITHOUT_CLASSIFICATION	1.0568863391161493E-6	DESIGN
// a gotcha	WITHOUT_CLASSIFICATION	0.9999907202917425	WITHOUT_CLASSIFICATION	9.279708257590775E-6	DESIGN
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999996083198172	WITHOUT_CLASSIFICATION	3.916801828456357E-7	DESIGN
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999995779067784	WITHOUT_CLASSIFICATION	4.220932216604804E-7	DESIGN
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9997379088671084	WITHOUT_CLASSIFICATION	2.6209113289156634E-4	DESIGN
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9930034469868685	WITHOUT_CLASSIFICATION	0.006996553013131616	DESIGN
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999987259565417	WITHOUT_CLASSIFICATION	1.2740434582893072E-6	DESIGN
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999980222431493	WITHOUT_CLASSIFICATION	1.9777568507056868E-6	DESIGN
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9999791756444723	WITHOUT_CLASSIFICATION	2.0824355527855253E-5	DESIGN
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9999923454652404	WITHOUT_CLASSIFICATION	7.654534759560357E-6	DESIGN
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999999212386602	WITHOUT_CLASSIFICATION	7.87613398128887E-8	DESIGN
// provider is not available	WITHOUT_CLASSIFICATION	0.9996743070547821	WITHOUT_CLASSIFICATION	3.256929452179008E-4	DESIGN
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9999200844162224	WITHOUT_CLASSIFICATION	7.991558377761769E-5	DESIGN
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.99998753668487	WITHOUT_CLASSIFICATION	1.2463315129981853E-5	DESIGN
// RubyDigest	WITHOUT_CLASSIFICATION	0.9989910662742375	WITHOUT_CLASSIFICATION	0.0010089337257624886	DESIGN
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9708435042066264	DESIGN	0.029156495793373764	WITHOUT_CLASSIFICATION
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999997331904882	WITHOUT_CLASSIFICATION	2.668095118590723E-7	DESIGN
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999966848550699	WITHOUT_CLASSIFICATION	3.3151449300805786E-6	DESIGN
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999999910592404	WITHOUT_CLASSIFICATION	8.940759604048645E-9	DESIGN
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9998562587859111	WITHOUT_CLASSIFICATION	1.437412140889887E-4	DESIGN
// JRubyService	WITHOUT_CLASSIFICATION	0.9999824145431454	WITHOUT_CLASSIFICATION	1.7585456854638215E-5	DESIGN
// while	WITHOUT_CLASSIFICATION	0.9999352956627965	WITHOUT_CLASSIFICATION	6.47043372035965E-5	DESIGN
/* \OOO */	WITHOUT_CLASSIFICATION	0.9998203963001048	WITHOUT_CLASSIFICATION	1.796036998952255E-4	DESIGN
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9998870934822649	WITHOUT_CLASSIFICATION	1.1290651773512133E-4	DESIGN
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999998049994548	WITHOUT_CLASSIFICATION	1.9500054517255957E-7	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999928688558146	WITHOUT_CLASSIFICATION	7.131144185383859E-6	DESIGN
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999999860154731	WITHOUT_CLASSIFICATION	1.398452690914066E-8	DESIGN
// silent ?	WITHOUT_CLASSIFICATION	0.9993695055998166	WITHOUT_CLASSIFICATION	6.304944001833981E-4	DESIGN
/* \xHH */	WITHOUT_CLASSIFICATION	0.9997779627142	WITHOUT_CLASSIFICATION	2.2203728579981558E-4	DESIGN
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9998996626664913	WITHOUT_CLASSIFICATION	1.0033733350859929E-4	DESIGN
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999449005231953	WITHOUT_CLASSIFICATION	5.5099476804716E-5	DESIGN
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999401145784538	WITHOUT_CLASSIFICATION	5.988542154619386E-5	DESIGN
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999931042155422	WITHOUT_CLASSIFICATION	6.895784457828784E-6	DESIGN
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999966121318417	WITHOUT_CLASSIFICATION	3.3878681584017673E-6	DESIGN
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999984511413667	WITHOUT_CLASSIFICATION	1.5488586332825497E-6	DESIGN
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999921369539368	WITHOUT_CLASSIFICATION	7.863046063074088E-6	DESIGN
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999734901020922	WITHOUT_CLASSIFICATION	2.6509897907800507E-5	DESIGN
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.5450542175795813	DESIGN	0.4549457824204188	WITHOUT_CLASSIFICATION
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9999369062803656	WITHOUT_CLASSIFICATION	6.309371963449026E-5	DESIGN
/* \xHH */	WITHOUT_CLASSIFICATION	0.9997779627142	WITHOUT_CLASSIFICATION	2.2203728579981558E-4	DESIGN
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999449005231953	WITHOUT_CLASSIFICATION	5.5099476804716E-5	DESIGN
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9998996626664913	WITHOUT_CLASSIFICATION	1.0033733350859929E-4	DESIGN
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999221313484428	WITHOUT_CLASSIFICATION	7.786865155720857E-5	DESIGN
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9998813129257407	WITHOUT_CLASSIFICATION	1.186870742594237E-4	DESIGN
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999783718667886	WITHOUT_CLASSIFICATION	2.162813321136001E-5	DESIGN
// inner switch	WITHOUT_CLASSIFICATION	0.9999705296877924	WITHOUT_CLASSIFICATION	2.9470312207567634E-5	DESIGN
// newInstance here	WITHOUT_CLASSIFICATION	0.9999137159658481	WITHOUT_CLASSIFICATION	8.62840341519645E-5	DESIGN
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999937070079963	WITHOUT_CLASSIFICATION	6.2929920036680875E-6	DESIGN
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999894780396399	WITHOUT_CLASSIFICATION	1.0521960360018934E-5	DESIGN
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999950835050272	WITHOUT_CLASSIFICATION	4.916494972837491E-6	DESIGN
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999705415921232	WITHOUT_CLASSIFICATION	2.945840787689179E-5	DESIGN
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999967203222224	WITHOUT_CLASSIFICATION	3.2796777776384383E-6	DESIGN
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999943416967018	WITHOUT_CLASSIFICATION	5.6583032982810815E-6	DESIGN
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999705679909212	WITHOUT_CLASSIFICATION	2.943200907871478E-5	DESIGN
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999969878131765	WITHOUT_CLASSIFICATION	3.0121868235413344E-6	DESIGN
// option_to_str	WITHOUT_CLASSIFICATION	0.9999993443963894	WITHOUT_CLASSIFICATION	6.556036105604287E-7	DESIGN
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999294900477705	WITHOUT_CLASSIFICATION	7.050995222947105E-5	DESIGN
// args should be before block	WITHOUT_CLASSIFICATION	0.999739041428264	WITHOUT_CLASSIFICATION	2.6095857173605405E-4	DESIGN
// args should be at end	WITHOUT_CLASSIFICATION	0.9960931526931093	WITHOUT_CLASSIFICATION	0.003906847306890706	DESIGN
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.999850140490096	WITHOUT_CLASSIFICATION	1.4985950990403056E-4	DESIGN
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.999850140490096	WITHOUT_CLASSIFICATION	1.4985950990403056E-4	DESIGN
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999720471592222	WITHOUT_CLASSIFICATION	2.7952840777812246E-5	DESIGN
// start a new populator	WITHOUT_CLASSIFICATION	0.9999630320977138	WITHOUT_CLASSIFICATION	3.6967902286169906E-5	DESIGN
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999992867414574	WITHOUT_CLASSIFICATION	7.132585425013573E-7	DESIGN
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9999451511391997	WITHOUT_CLASSIFICATION	5.484886080027742E-5	DESIGN
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.999793270011205	WITHOUT_CLASSIFICATION	2.0672998879491604E-4	DESIGN
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9998473380317565	WITHOUT_CLASSIFICATION	1.5266196824348784E-4	DESIGN
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.999956581634475	WITHOUT_CLASSIFICATION	4.341836552513954E-5	DESIGN
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999241302255832	WITHOUT_CLASSIFICATION	7.586977441675962E-5	DESIGN
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9901091083810714	WITHOUT_CLASSIFICATION	0.009890891618928716	DESIGN
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999989322323928	WITHOUT_CLASSIFICATION	1.067767607193224E-6	DESIGN
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999803998215481	WITHOUT_CLASSIFICATION	1.9600178451963153E-5	DESIGN
//                }	WITHOUT_CLASSIFICATION	0.9999909327274273	WITHOUT_CLASSIFICATION	9.067272572724706E-6	DESIGN
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9995957205511227	WITHOUT_CLASSIFICATION	4.042794488773492E-4	DESIGN
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9999992480756579	WITHOUT_CLASSIFICATION	7.519243421104216E-7	DESIGN
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9714296120419137	WITHOUT_CLASSIFICATION	0.02857038795808625	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9999872919539188	WITHOUT_CLASSIFICATION	1.2708046081128155E-5	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9999798624328621	WITHOUT_CLASSIFICATION	2.0137567137911063E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999585452818547	WITHOUT_CLASSIFICATION	4.1454718145305945E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999585452818547	WITHOUT_CLASSIFICATION	4.1454718145305945E-5	DESIGN
// colon3	WITHOUT_CLASSIFICATION	0.9999991043764215	WITHOUT_CLASSIFICATION	8.956235786589061E-7	DESIGN
// Colon3	WITHOUT_CLASSIFICATION	0.9999931740147003	WITHOUT_CLASSIFICATION	6.825985299600906E-6	DESIGN
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.999511890663741	WITHOUT_CLASSIFICATION	4.88109336258961E-4	DESIGN
// For b.foo	WITHOUT_CLASSIFICATION	0.9999988564946197	WITHOUT_CLASSIFICATION	1.1435053802941063E-6	DESIGN
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999969100120301	WITHOUT_CLASSIFICATION	3.0899879699519697E-6	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999585452818547	WITHOUT_CLASSIFICATION	4.1454718145305945E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999585452818547	WITHOUT_CLASSIFICATION	4.1454718145305945E-5	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999998913869698	WITHOUT_CLASSIFICATION	1.0861303023354014E-7	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999998913869698	WITHOUT_CLASSIFICATION	1.0861303023354014E-7	DESIGN
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9999976014642021	WITHOUT_CLASSIFICATION	2.398535797831369E-6	DESIGN
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999987756654423	WITHOUT_CLASSIFICATION	1.2243345577811069E-6	DESIGN
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.999999897027991	WITHOUT_CLASSIFICATION	1.0297200895987058E-7	DESIGN
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.7880182410449371	WITHOUT_CLASSIFICATION	0.21198175895506288	DESIGN
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999946351170637	WITHOUT_CLASSIFICATION	5.364882936400858E-6	DESIGN
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999946351170637	WITHOUT_CLASSIFICATION	5.364882936400858E-6	DESIGN
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.99999667598807	WITHOUT_CLASSIFICATION	3.3240119299165793E-6	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999977733758177	WITHOUT_CLASSIFICATION	2.226624182216438E-6	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999995924535403	WITHOUT_CLASSIFICATION	4.0754645971978365E-7	DESIGN
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9995208916647227	WITHOUT_CLASSIFICATION	4.79108335277353E-4	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999998691794328	WITHOUT_CLASSIFICATION	1.3082056728704456E-7	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999972101253772	WITHOUT_CLASSIFICATION	2.789874622793606E-6	DESIGN
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9997715711826265	WITHOUT_CLASSIFICATION	2.2842881737355613E-4	DESIGN
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999966270171947	WITHOUT_CLASSIFICATION	3.372982805242764E-6	DESIGN
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9995204326637116	WITHOUT_CLASSIFICATION	4.7956733628838405E-4	DESIGN
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9974919494287652	WITHOUT_CLASSIFICATION	0.0025080505712348675	DESIGN
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9994788085612729	WITHOUT_CLASSIFICATION	5.21191438727063E-4	DESIGN
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999978360279288	WITHOUT_CLASSIFICATION	2.1639720711228117E-6	DESIGN
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999829469767488	WITHOUT_CLASSIFICATION	1.7053023251167428E-5	DESIGN
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999860136562072	WITHOUT_CLASSIFICATION	1.398634379279516E-5	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9999872919539188	WITHOUT_CLASSIFICATION	1.2708046081128155E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999585452818547	WITHOUT_CLASSIFICATION	4.1454718145305945E-5	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999998913869698	WITHOUT_CLASSIFICATION	1.0861303023354014E-7	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999972101253772	WITHOUT_CLASSIFICATION	2.789874622793606E-6	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9930904713557913	WITHOUT_CLASSIFICATION	0.006909528644208703	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9930904713557913	WITHOUT_CLASSIFICATION	0.006909528644208703	DESIGN
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999312074277052	WITHOUT_CLASSIFICATION	6.879257229482815E-5	DESIGN
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999994324246031	WITHOUT_CLASSIFICATION	5.675753967932873E-7	DESIGN
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999984678733878	WITHOUT_CLASSIFICATION	1.532126612235652E-6	DESIGN
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999999786291931	WITHOUT_CLASSIFICATION	2.1370806964221098E-8	DESIGN
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999999277138492	WITHOUT_CLASSIFICATION	7.228615077978554E-8	DESIGN
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999411249076336	WITHOUT_CLASSIFICATION	5.887509236633378E-5	DESIGN
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9985066749871102	WITHOUT_CLASSIFICATION	0.0014933250128897496	DESIGN
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.992047511530193	WITHOUT_CLASSIFICATION	0.007952488469807041	DESIGN
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999367651091767	WITHOUT_CLASSIFICATION	6.323489082325534E-5	DESIGN
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.999804682471335	WITHOUT_CLASSIFICATION	1.9531752866499657E-4	DESIGN
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9992933979979107	WITHOUT_CLASSIFICATION	7.066020020892143E-4	DESIGN
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999726913302198	WITHOUT_CLASSIFICATION	2.7308669780139144E-5	DESIGN
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999992184977108	WITHOUT_CLASSIFICATION	7.815022891190871E-7	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9999798624328621	WITHOUT_CLASSIFICATION	2.0137567137911063E-5	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999998913869698	WITHOUT_CLASSIFICATION	1.0861303023354014E-7	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999977733758177	WITHOUT_CLASSIFICATION	2.226624182216438E-6	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999995924535403	WITHOUT_CLASSIFICATION	4.0754645971978365E-7	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999995924535403	WITHOUT_CLASSIFICATION	4.0754645971978365E-7	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999998691794328	WITHOUT_CLASSIFICATION	1.3082056728704456E-7	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999972101253772	WITHOUT_CLASSIFICATION	2.789874622793606E-6	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999972101253772	WITHOUT_CLASSIFICATION	2.789874622793606E-6	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9930904713557913	WITHOUT_CLASSIFICATION	0.006909528644208703	DESIGN
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.999963593325069	WITHOUT_CLASSIFICATION	3.640667493096323E-5	DESIGN
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.999257875062009	WITHOUT_CLASSIFICATION	7.421249379910285E-4	DESIGN
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999999820560145	WITHOUT_CLASSIFICATION	1.7943985594386733E-8	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9994995920280559	WITHOUT_CLASSIFICATION	5.004079719439817E-4	DESIGN
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.6008775842193332	WITHOUT_CLASSIFICATION	0.3991224157806669	DESIGN
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9999309211729975	WITHOUT_CLASSIFICATION	6.907882700251053E-5	DESIGN
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999994188740791	WITHOUT_CLASSIFICATION	5.811259210568062E-7	DESIGN
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999949877237791	WITHOUT_CLASSIFICATION	5.012276220800616E-6	DESIGN
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999999700068188	WITHOUT_CLASSIFICATION	2.999318122532686E-8	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999977733758177	WITHOUT_CLASSIFICATION	2.226624182216438E-6	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999995924535403	WITHOUT_CLASSIFICATION	4.0754645971978365E-7	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999995924535403	WITHOUT_CLASSIFICATION	4.0754645971978365E-7	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999998691794328	WITHOUT_CLASSIFICATION	1.3082056728704456E-7	DESIGN
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.992047511530193	WITHOUT_CLASSIFICATION	0.007952488469807041	DESIGN
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.999804682471335	WITHOUT_CLASSIFICATION	1.9531752866499657E-4	DESIGN
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9999999661033178	WITHOUT_CLASSIFICATION	3.389668236358265E-8	DESIGN
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999977543915138	WITHOUT_CLASSIFICATION	2.2456084861591056E-6	DESIGN
// For 'foo'	WITHOUT_CLASSIFICATION	0.999997987867203	WITHOUT_CLASSIFICATION	2.0121327971616715E-6	DESIGN
// For 'foo'	WITHOUT_CLASSIFICATION	0.999997987867203	WITHOUT_CLASSIFICATION	2.0121327971616715E-6	DESIGN
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9988968074529273	WITHOUT_CLASSIFICATION	0.0011031925470726769	DESIGN
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999932248413052	WITHOUT_CLASSIFICATION	6.775158694879222E-6	DESIGN
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999672522282019	WITHOUT_CLASSIFICATION	3.2747771798125006E-5	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999984330899147	WITHOUT_CLASSIFICATION	1.566910085317885E-6	DESIGN
// just rethrow	WITHOUT_CLASSIFICATION	0.9999988994003107	WITHOUT_CLASSIFICATION	1.1005996892616766E-6	DESIGN
// just rethrow	WITHOUT_CLASSIFICATION	0.9999988994003107	WITHOUT_CLASSIFICATION	1.1005996892616766E-6	DESIGN
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999937351941088	WITHOUT_CLASSIFICATION	6.264805891207822E-6	DESIGN
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999937351941088	WITHOUT_CLASSIFICATION	6.264805891207822E-6	DESIGN
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999550076706792	WITHOUT_CLASSIFICATION	4.499232932075813E-5	DESIGN
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999550076706792	WITHOUT_CLASSIFICATION	4.499232932075813E-5	DESIGN
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999987905963283	WITHOUT_CLASSIFICATION	1.2094036716606297E-6	DESIGN
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999999818445411	WITHOUT_CLASSIFICATION	1.8155458930459975E-8	DESIGN
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9999500624235171	WITHOUT_CLASSIFICATION	4.99375764828201E-5	DESIGN
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999956709163179	WITHOUT_CLASSIFICATION	4.329083681998545E-6	DESIGN
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999308405218995	WITHOUT_CLASSIFICATION	6.915947810047464E-5	DESIGN
// pragmas	WITHOUT_CLASSIFICATION	0.9999960894929926	WITHOUT_CLASSIFICATION	3.910507007426797E-6	DESIGN
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999933245930934	WITHOUT_CLASSIFICATION	6.675406906614147E-6	DESIGN
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999999537139802	WITHOUT_CLASSIFICATION	4.628601975968874E-8	DESIGN
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9995491078686749	WITHOUT_CLASSIFICATION	4.5089213132512335E-4	DESIGN
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9890824696935774	WITHOUT_CLASSIFICATION	0.0109175303064227	DESIGN
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9999963015203366	WITHOUT_CLASSIFICATION	3.6984796635214164E-6	DESIGN
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.999677674980182	WITHOUT_CLASSIFICATION	3.223250198179846E-4	DESIGN
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9999240062596942	WITHOUT_CLASSIFICATION	7.599374030578159E-5	DESIGN
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9998442174025491	WITHOUT_CLASSIFICATION	1.5578259745089898E-4	DESIGN
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9998442174025491	WITHOUT_CLASSIFICATION	1.5578259745089898E-4	DESIGN
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9999944858430123	WITHOUT_CLASSIFICATION	5.5141569876608665E-6	DESIGN
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999996879552672	WITHOUT_CLASSIFICATION	3.120447328410997E-7	DESIGN
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9998494826579118	WITHOUT_CLASSIFICATION	1.5051734208812508E-4	DESIGN
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999999991247297	WITHOUT_CLASSIFICATION	8.752702479838403E-10	DESIGN
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999970687206216	WITHOUT_CLASSIFICATION	2.9312793784748417E-6	DESIGN
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999575895594536	WITHOUT_CLASSIFICATION	4.241044054642688E-5	DESIGN
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999780700840937	WITHOUT_CLASSIFICATION	2.1929915906345233E-5	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.999999104031405	WITHOUT_CLASSIFICATION	8.959685949175733E-7	DESIGN
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999999998096077	WITHOUT_CLASSIFICATION	1.9039211027993127E-10	DESIGN
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999999584359878	WITHOUT_CLASSIFICATION	4.156401220652592E-8	DESIGN
// compile first node only	WITHOUT_CLASSIFICATION	0.9999999794911323	WITHOUT_CLASSIFICATION	2.0508867760628012E-8	DESIGN
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.999897290052456	WITHOUT_CLASSIFICATION	1.0270994754398157E-4	DESIGN
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999999763524561	WITHOUT_CLASSIFICATION	2.3647543914663424E-8	DESIGN
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9050325037367285	WITHOUT_CLASSIFICATION	0.09496749626327153	DESIGN
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.952032472614747	WITHOUT_CLASSIFICATION	0.04796752738525296	DESIGN
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9992931776955497	WITHOUT_CLASSIFICATION	7.068223044503052E-4	DESIGN
// can't do it	WITHOUT_CLASSIFICATION	0.9999934670959796	WITHOUT_CLASSIFICATION	6.532904020412065E-6	DESIGN
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999988401238223	WITHOUT_CLASSIFICATION	1.1598761776463833E-6	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999996946757428	WITHOUT_CLASSIFICATION	3.053242573178358E-7	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999996946757428	WITHOUT_CLASSIFICATION	3.053242573178358E-7	DESIGN
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999979950589187	WITHOUT_CLASSIFICATION	2.0049410813281807E-6	DESIGN
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.999181626653331	WITHOUT_CLASSIFICATION	8.183733466690303E-4	DESIGN
//[]	WITHOUT_CLASSIFICATION	0.9989933388294471	WITHOUT_CLASSIFICATION	0.0010066611705529132	DESIGN
//[]	WITHOUT_CLASSIFICATION	0.9989933388294471	WITHOUT_CLASSIFICATION	0.0010066611705529132	DESIGN
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999998146786249	WITHOUT_CLASSIFICATION	1.853213751164565E-7	DESIGN
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9999518341229746	WITHOUT_CLASSIFICATION	4.8165877025341975E-5	DESIGN
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9998244843917268	WITHOUT_CLASSIFICATION	1.755156082731276E-4	DESIGN
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999858033905893	WITHOUT_CLASSIFICATION	1.419660941060277E-5	DESIGN
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999965955699507	WITHOUT_CLASSIFICATION	3.4044300492186116E-6	DESIGN
// inspect body and args	WITHOUT_CLASSIFICATION	0.999992988971863	WITHOUT_CLASSIFICATION	7.011028137124812E-6	DESIGN
// inspect body and args	WITHOUT_CLASSIFICATION	0.999992988971863	WITHOUT_CLASSIFICATION	7.011028137124812E-6	DESIGN
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999995818474272	WITHOUT_CLASSIFICATION	4.1815257278467754E-7	DESIGN
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999996816652145	WITHOUT_CLASSIFICATION	3.183347854707403E-7	DESIGN
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999951058459935	WITHOUT_CLASSIFICATION	4.894154006418769E-6	DESIGN
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9984833397252003	WITHOUT_CLASSIFICATION	0.0015166602747996606	DESIGN
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.999181626653331	WITHOUT_CLASSIFICATION	8.183733466690303E-4	DESIGN
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999617451618071	WITHOUT_CLASSIFICATION	3.8254838192771996E-5	DESIGN
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.999972419319815	WITHOUT_CLASSIFICATION	2.7580680184955895E-5	DESIGN
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.999972419319815	WITHOUT_CLASSIFICATION	2.7580680184955895E-5	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999450425244679	WITHOUT_CLASSIFICATION	5.495747553201704E-5	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999642692198	WITHOUT_CLASSIFICATION	3.573078010029625E-8	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999642692198	WITHOUT_CLASSIFICATION	3.573078010029625E-8	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999999948542054	WITHOUT_CLASSIFICATION	5.145794495158554E-9	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999999948542054	WITHOUT_CLASSIFICATION	5.145794495158554E-9	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999999948542054	WITHOUT_CLASSIFICATION	5.145794495158554E-9	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999642692198	WITHOUT_CLASSIFICATION	3.573078010029625E-8	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999642692198	WITHOUT_CLASSIFICATION	3.573078010029625E-8	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999450425244679	WITHOUT_CLASSIFICATION	5.495747553201704E-5	DESIGN
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9997367175254838	WITHOUT_CLASSIFICATION	2.6328247451623456E-4	DESIGN
// always false or nil	WITHOUT_CLASSIFICATION	0.9999683400169436	WITHOUT_CLASSIFICATION	3.1659983056360765E-5	DESIGN
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999993894223959	WITHOUT_CLASSIFICATION	6.105776041440151E-7	DESIGN
// normal	WITHOUT_CLASSIFICATION	0.9999710386268126	WITHOUT_CLASSIFICATION	2.8961373187482713E-5	DESIGN
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999999948274029	WITHOUT_CLASSIFICATION	5.172597184025786E-9	DESIGN
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999944114923076	WITHOUT_CLASSIFICATION	5.588507692433137E-6	DESIGN
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999978448932848	WITHOUT_CLASSIFICATION	2.155106715183217E-6	DESIGN
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999999718155708	WITHOUT_CLASSIFICATION	2.8184429213648524E-8	DESIGN
// compile first node only	WITHOUT_CLASSIFICATION	0.9999999794911323	WITHOUT_CLASSIFICATION	2.0508867760628012E-8	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999642692198	WITHOUT_CLASSIFICATION	3.573078010029625E-8	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999642692198	WITHOUT_CLASSIFICATION	3.573078010029625E-8	DESIGN
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999997774793133	WITHOUT_CLASSIFICATION	2.2252068665872297E-7	DESIGN
// try optz version	WITHOUT_CLASSIFICATION	0.9999965671025932	WITHOUT_CLASSIFICATION	3.4328974067512127E-6	DESIGN
// sizes must match	WITHOUT_CLASSIFICATION	0.9999978614694346	WITHOUT_CLASSIFICATION	2.1385305654890376E-6	DESIGN
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999999908326941	WITHOUT_CLASSIFICATION	9.167306018364485E-9	DESIGN
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.999996740619351	WITHOUT_CLASSIFICATION	3.259380648997945E-6	DESIGN
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999906554680527	WITHOUT_CLASSIFICATION	9.344531947282984E-6	DESIGN
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999046494225	WITHOUT_CLASSIFICATION	9.53505775828436E-8	DESIGN
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999999354236823	WITHOUT_CLASSIFICATION	6.457631765880753E-8	DESIGN
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999999872378993	WITHOUT_CLASSIFICATION	1.2762100777040012E-8	DESIGN
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999495453655068	WITHOUT_CLASSIFICATION	5.045463449307558E-5	DESIGN
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9999761738566284	WITHOUT_CLASSIFICATION	2.382614337162119E-5	DESIGN
// done processing args	WITHOUT_CLASSIFICATION	0.999950768620257	WITHOUT_CLASSIFICATION	4.923137974298219E-5	DESIGN
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999998767916881	WITHOUT_CLASSIFICATION	1.2320831194138322E-7	DESIGN
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999996213681086	WITHOUT_CLASSIFICATION	3.7863189134890513E-7	DESIGN
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999999886412693	WITHOUT_CLASSIFICATION	1.1358730628144904E-8	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9999836824052001	WITHOUT_CLASSIFICATION	1.6317594799923775E-5	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9999836824052001	WITHOUT_CLASSIFICATION	1.6317594799923775E-5	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9999836824052001	WITHOUT_CLASSIFICATION	1.6317594799923775E-5	DESIGN
// compile into array	WITHOUT_CLASSIFICATION	0.999998490559962	WITHOUT_CLASSIFICATION	1.5094400378721555E-6	DESIGN
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999999999365707	WITHOUT_CLASSIFICATION	6.342921848754146E-11	DESIGN
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999996390115261	WITHOUT_CLASSIFICATION	3.6098847384291115E-7	DESIGN
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999999244603761	WITHOUT_CLASSIFICATION	7.55396238471497E-8	DESIGN
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9998725566011429	WITHOUT_CLASSIFICATION	1.2744339885713575E-4	DESIGN
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999400503829988	WITHOUT_CLASSIFICATION	5.994961700124526E-5	DESIGN
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999915482585366	WITHOUT_CLASSIFICATION	8.451741463319727E-6	DESIGN
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999997365560879	WITHOUT_CLASSIFICATION	2.634439120846095E-7	DESIGN
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999912889761652	WITHOUT_CLASSIFICATION	8.711023834926037E-6	DESIGN
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999997580347243	WITHOUT_CLASSIFICATION	2.4196527570160364E-7	DESIGN
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9999280873667745	WITHOUT_CLASSIFICATION	7.191263322552075E-5	DESIGN
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.999667485550911	WITHOUT_CLASSIFICATION	3.325144490889162E-4	DESIGN
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999995818474272	WITHOUT_CLASSIFICATION	4.1815257278467754E-7	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999642692198	WITHOUT_CLASSIFICATION	3.573078010029625E-8	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999642692198	WITHOUT_CLASSIFICATION	3.573078010029625E-8	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999450425244679	WITHOUT_CLASSIFICATION	5.495747553201704E-5	DESIGN
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999944114923076	WITHOUT_CLASSIFICATION	5.588507692433137E-6	DESIGN
// try optz version	WITHOUT_CLASSIFICATION	0.9999965671025932	WITHOUT_CLASSIFICATION	3.4328974067512127E-6	DESIGN
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999999908326941	WITHOUT_CLASSIFICATION	9.167306018364485E-9	DESIGN
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999906554680527	WITHOUT_CLASSIFICATION	9.344531947282984E-6	DESIGN
// sizes must match	WITHOUT_CLASSIFICATION	0.9999978614694346	WITHOUT_CLASSIFICATION	2.1385305654890376E-6	DESIGN
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999046494225	WITHOUT_CLASSIFICATION	9.53505775828436E-8	DESIGN
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999495453655068	WITHOUT_CLASSIFICATION	5.045463449307558E-5	DESIGN
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999999872378993	WITHOUT_CLASSIFICATION	1.2762100777040012E-8	DESIGN
// done processing args	WITHOUT_CLASSIFICATION	0.999950768620257	WITHOUT_CLASSIFICATION	4.923137974298219E-5	DESIGN
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.999883275614293	WITHOUT_CLASSIFICATION	1.1672438570707417E-4	DESIGN
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9967898273793275	WITHOUT_CLASSIFICATION	0.0032101726206725553	DESIGN
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9973304586676255	WITHOUT_CLASSIFICATION	0.002669541332374405	DESIGN
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999881955554197	WITHOUT_CLASSIFICATION	1.1804444580241283E-5	DESIGN
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999445856621675	WITHOUT_CLASSIFICATION	5.5414337832521535E-5	DESIGN
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999983343824461	WITHOUT_CLASSIFICATION	1.6656175538850239E-6	DESIGN
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999817094823623	WITHOUT_CLASSIFICATION	1.829051763775474E-5	DESIGN
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9999993300676637	WITHOUT_CLASSIFICATION	6.699323361938146E-7	DESIGN
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999948508107089	WITHOUT_CLASSIFICATION	5.149189291041292E-6	DESIGN
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999995522159506	WITHOUT_CLASSIFICATION	4.4778404943595486E-7	DESIGN
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999674958690511	WITHOUT_CLASSIFICATION	3.250413094892414E-5	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999959475955952	WITHOUT_CLASSIFICATION	4.0524044048642E-6	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999997718730623	WITHOUT_CLASSIFICATION	2.2812693760503825E-7	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9923403837729999	WITHOUT_CLASSIFICATION	0.0076596162269999945	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999517473356	WITHOUT_CLASSIFICATION	4.825266438009937E-8	DESIGN
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999172687749834	WITHOUT_CLASSIFICATION	8.273122501648433E-5	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999352984960805	WITHOUT_CLASSIFICATION	6.47015039194971E-5	DESIGN
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999998970756654	WITHOUT_CLASSIFICATION	1.0292433456551446E-7	DESIGN
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999958434312245	WITHOUT_CLASSIFICATION	4.156568775563989E-6	DESIGN
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9998757517057381	WITHOUT_CLASSIFICATION	1.242482942620268E-4	DESIGN
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9997948429608627	WITHOUT_CLASSIFICATION	2.0515703913721926E-4	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.999999644684843	WITHOUT_CLASSIFICATION	3.5531515689044E-7	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.999999644684843	WITHOUT_CLASSIFICATION	3.5531515689044E-7	DESIGN
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9973899486088658	WITHOUT_CLASSIFICATION	0.002610051391134173	DESIGN
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9998532038626992	WITHOUT_CLASSIFICATION	1.467961373008671E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999373736813074	WITHOUT_CLASSIFICATION	6.262631869257936E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999373736813074	WITHOUT_CLASSIFICATION	6.262631869257936E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999373736813074	WITHOUT_CLASSIFICATION	6.262631869257936E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9991424032258643	WITHOUT_CLASSIFICATION	8.575967741357254E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9991424032258643	WITHOUT_CLASSIFICATION	8.575967741357254E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9991424032258643	WITHOUT_CLASSIFICATION	8.575967741357254E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9991424032258643	WITHOUT_CLASSIFICATION	8.575967741357254E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9996801265627119	WITHOUT_CLASSIFICATION	3.1987343728818524E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9996801265627119	WITHOUT_CLASSIFICATION	3.1987343728818524E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9996801265627119	WITHOUT_CLASSIFICATION	3.1987343728818524E-4	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.99958896044146	WITHOUT_CLASSIFICATION	4.1103955854009794E-4	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.99958896044146	WITHOUT_CLASSIFICATION	4.1103955854009794E-4	DESIGN
/*arg2*/	WITHOUT_CLASSIFICATION	0.999632648148176	WITHOUT_CLASSIFICATION	3.673518518240521E-4	DESIGN
/*args*/	WITHOUT_CLASSIFICATION	0.9993937253869071	WITHOUT_CLASSIFICATION	6.062746130929771E-4	DESIGN
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9998532038626992	WITHOUT_CLASSIFICATION	1.467961373008671E-4	DESIGN
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999999086714884	WITHOUT_CLASSIFICATION	9.132851156920762E-8	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999373736813074	WITHOUT_CLASSIFICATION	6.262631869257936E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999373736813074	WITHOUT_CLASSIFICATION	6.262631869257936E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9991424032258643	WITHOUT_CLASSIFICATION	8.575967741357254E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9991424032258643	WITHOUT_CLASSIFICATION	8.575967741357254E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9991424032258643	WITHOUT_CLASSIFICATION	8.575967741357254E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9996801265627119	WITHOUT_CLASSIFICATION	3.1987343728818524E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9996801265627119	WITHOUT_CLASSIFICATION	3.1987343728818524E-4	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.99958896044146	WITHOUT_CLASSIFICATION	4.1103955854009794E-4	DESIGN
/*args*/	WITHOUT_CLASSIFICATION	0.9993937253869071	WITHOUT_CLASSIFICATION	6.062746130929771E-4	DESIGN
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999999218182491	WITHOUT_CLASSIFICATION	7.818175094444298E-8	DESIGN
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999999218182491	WITHOUT_CLASSIFICATION	7.818175094444298E-8	DESIGN
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999997168636922	WITHOUT_CLASSIFICATION	2.831363077829033E-7	DESIGN
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999997168636922	WITHOUT_CLASSIFICATION	2.831363077829033E-7	DESIGN
// invoke	WITHOUT_CLASSIFICATION	0.9999843339626784	WITHOUT_CLASSIFICATION	1.5666037321583177E-5	DESIGN
// invoke	WITHOUT_CLASSIFICATION	0.9999843339626784	WITHOUT_CLASSIFICATION	1.5666037321583177E-5	DESIGN
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999999110649449	WITHOUT_CLASSIFICATION	8.89350550584328E-8	DESIGN
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999997266258586	WITHOUT_CLASSIFICATION	2.7337414141250156E-7	DESIGN
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999997266258586	WITHOUT_CLASSIFICATION	2.7337414141250156E-7	DESIGN
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.999997523720908	WITHOUT_CLASSIFICATION	2.4762790920130565E-6	DESIGN
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.999997523720908	WITHOUT_CLASSIFICATION	2.4762790920130565E-6	DESIGN
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999998842980279	WITHOUT_CLASSIFICATION	1.1570197214200463E-7	DESIGN
// call site	WITHOUT_CLASSIFICATION	0.9999963833251928	WITHOUT_CLASSIFICATION	3.6166748070802778E-6	DESIGN
// call site	WITHOUT_CLASSIFICATION	0.9999963833251928	WITHOUT_CLASSIFICATION	3.6166748070802778E-6	DESIGN
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.999937269636459	WITHOUT_CLASSIFICATION	6.27303635409797E-5	DESIGN
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999997781657095	WITHOUT_CLASSIFICATION	2.2183429049964588E-7	DESIGN
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999997861147648	WITHOUT_CLASSIFICATION	2.1388523511428035E-7	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9991424032258643	WITHOUT_CLASSIFICATION	8.575967741357254E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9991424032258643	WITHOUT_CLASSIFICATION	8.575967741357254E-4	DESIGN
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.999937269636459	WITHOUT_CLASSIFICATION	6.27303635409797E-5	DESIGN
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999989952244214	WITHOUT_CLASSIFICATION	1.0047755786042689E-6	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999992727818752	WITHOUT_CLASSIFICATION	7.272181247542069E-7	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999992727818752	WITHOUT_CLASSIFICATION	7.272181247542069E-7	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999992727818752	WITHOUT_CLASSIFICATION	7.272181247542069E-7	DESIGN
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999726257816498	WITHOUT_CLASSIFICATION	2.737421835012479E-5	DESIGN
// args	WITHOUT_CLASSIFICATION	0.9999864645586043	WITHOUT_CLASSIFICATION	1.3535441395785407E-5	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999990624942603	WITHOUT_CLASSIFICATION	9.375057396361575E-7	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999990624942603	WITHOUT_CLASSIFICATION	9.375057396361575E-7	DESIGN
// no args, no block	WITHOUT_CLASSIFICATION	0.9999961129710179	WITHOUT_CLASSIFICATION	3.887028982123778E-6	DESIGN
// no args, with block	WITHOUT_CLASSIFICATION	0.9998866093902691	WITHOUT_CLASSIFICATION	1.1339060973086703E-4	DESIGN
// with args, no block	WITHOUT_CLASSIFICATION	0.9999949694742085	WITHOUT_CLASSIFICATION	5.030525791460086E-6	DESIGN
// with args, with block	WITHOUT_CLASSIFICATION	0.999975576470171	WITHOUT_CLASSIFICATION	2.442352982898036E-5	DESIGN
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999999767315436	WITHOUT_CLASSIFICATION	2.3268456410921775E-8	DESIGN
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999891658011745	WITHOUT_CLASSIFICATION	1.0834198825562918E-5	DESIGN
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999891658011745	WITHOUT_CLASSIFICATION	1.0834198825562918E-5	DESIGN
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999942226205027	WITHOUT_CLASSIFICATION	5.7773794972426584E-6	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9994878149872691	WITHOUT_CLASSIFICATION	5.121850127308712E-4	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9994878149872691	WITHOUT_CLASSIFICATION	5.121850127308712E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9991424032258643	WITHOUT_CLASSIFICATION	8.575967741357254E-4	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999992727818752	WITHOUT_CLASSIFICATION	7.272181247542069E-7	DESIGN
// args	WITHOUT_CLASSIFICATION	0.9999864645586043	WITHOUT_CLASSIFICATION	1.3535441395785407E-5	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999990624942603	WITHOUT_CLASSIFICATION	9.375057396361575E-7	DESIGN
// no args, no block	WITHOUT_CLASSIFICATION	0.9999961129710179	WITHOUT_CLASSIFICATION	3.887028982123778E-6	DESIGN
// no args, with block	WITHOUT_CLASSIFICATION	0.9998866093902691	WITHOUT_CLASSIFICATION	1.1339060973086703E-4	DESIGN
// with args, no block	WITHOUT_CLASSIFICATION	0.9999949694742085	WITHOUT_CLASSIFICATION	5.030525791460086E-6	DESIGN
// with args, with block	WITHOUT_CLASSIFICATION	0.999975576470171	WITHOUT_CLASSIFICATION	2.442352982898036E-5	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9994878149872691	WITHOUT_CLASSIFICATION	5.121850127308712E-4	DESIGN
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.999551713280782	WITHOUT_CLASSIFICATION	4.4828671921799456E-4	DESIGN
// use numbered access method	WITHOUT_CLASSIFICATION	0.9998581347636464	WITHOUT_CLASSIFICATION	1.418652363536108E-4	DESIGN
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999940852901426	WITHOUT_CLASSIFICATION	5.9147098574858E-6	DESIGN
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999755650474407	WITHOUT_CLASSIFICATION	2.4434952559349077E-5	DESIGN
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999912007352645	WITHOUT_CLASSIFICATION	8.799264735517093E-6	DESIGN
// build scope names string	WITHOUT_CLASSIFICATION	0.9999445427159982	WITHOUT_CLASSIFICATION	5.545728400183499E-5	DESIGN
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999822728149202	WITHOUT_CLASSIFICATION	1.7727185079778287E-5	DESIGN
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999822728149202	WITHOUT_CLASSIFICATION	1.7727185079778287E-5	DESIGN
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999967269110324	WITHOUT_CLASSIFICATION	3.273088967643704E-6	DESIGN
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999993194602212	WITHOUT_CLASSIFICATION	6.805397788155177E-7	DESIGN
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9999811580050816	WITHOUT_CLASSIFICATION	1.8841994918445933E-5	DESIGN
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999997566723552	WITHOUT_CLASSIFICATION	2.4332764485621E-7	DESIGN
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999993226278999	WITHOUT_CLASSIFICATION	6.773721000545146E-7	DESIGN
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999993226278999	WITHOUT_CLASSIFICATION	6.773721000545146E-7	DESIGN
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999924473006233	WITHOUT_CLASSIFICATION	7.5526993766832345E-6	DESIGN
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999879616188946	WITHOUT_CLASSIFICATION	1.2038381105516225E-5	DESIGN
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999995133653522	WITHOUT_CLASSIFICATION	4.866346477757581E-7	DESIGN
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999995133653522	WITHOUT_CLASSIFICATION	4.866346477757581E-7	DESIGN
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999975086599394	WITHOUT_CLASSIFICATION	2.4913400606841106E-6	DESIGN
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999964988798711	WITHOUT_CLASSIFICATION	3.5011201288443093E-6	DESIGN
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999999767315436	WITHOUT_CLASSIFICATION	2.3268456410921775E-8	DESIGN
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9992784060408737	WITHOUT_CLASSIFICATION	7.215939591263544E-4	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999972034079242	WITHOUT_CLASSIFICATION	2.7965920758584075E-6	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999991498648689	WITHOUT_CLASSIFICATION	8.501351310781919E-7	DESIGN
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999985844986468	WITHOUT_CLASSIFICATION	1.4155013531565842E-6	DESIGN
// load Object under value	WITHOUT_CLASSIFICATION	0.9998803477830855	WITHOUT_CLASSIFICATION	1.1965221691440362E-4	DESIGN
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999969501174105	WITHOUT_CLASSIFICATION	3.0498825895493064E-6	DESIGN
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999983083853062	WITHOUT_CLASSIFICATION	1.6916146938598524E-6	DESIGN
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9996865831118411	WITHOUT_CLASSIFICATION	3.134168881588818E-4	DESIGN
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999572433823135	WITHOUT_CLASSIFICATION	4.2756617686538015E-5	DESIGN
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999572433823135	WITHOUT_CLASSIFICATION	4.2756617686538015E-5	DESIGN
// brute force construction inline	WITHOUT_CLASSIFICATION	0.999999212252277	WITHOUT_CLASSIFICATION	7.877477229891848E-7	DESIGN
// brute force construction inline	WITHOUT_CLASSIFICATION	0.999999212252277	WITHOUT_CLASSIFICATION	7.877477229891848E-7	DESIGN
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999998847174785	WITHOUT_CLASSIFICATION	1.1528252144328415E-7	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999863209594113	WITHOUT_CLASSIFICATION	1.3679040588664168E-5	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999863209594113	WITHOUT_CLASSIFICATION	1.3679040588664168E-5	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999863209594113	WITHOUT_CLASSIFICATION	1.3679040588664168E-5	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999998907843923	WITHOUT_CLASSIFICATION	1.0921560774255887E-7	DESIGN
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999985245617621	WITHOUT_CLASSIFICATION	1.4754382378643687E-6	DESIGN
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999985245617621	WITHOUT_CLASSIFICATION	1.4754382378643687E-6	DESIGN
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999999992913313	WITHOUT_CLASSIFICATION	7.086686963691466E-10	DESIGN
// check the condition	WITHOUT_CLASSIFICATION	0.9998814234739636	WITHOUT_CLASSIFICATION	1.1857652603635061E-4	DESIGN
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999993110846827	WITHOUT_CLASSIFICATION	6.889153173471423E-7	DESIGN
// skip catch block	WITHOUT_CLASSIFICATION	0.9999996802608869	WITHOUT_CLASSIFICATION	3.1973911313251935E-7	DESIGN
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999939470787566	WITHOUT_CLASSIFICATION	6.052921243438105E-6	DESIGN
// next jump	WITHOUT_CLASSIFICATION	0.9998813474833265	WITHOUT_CLASSIFICATION	1.1865251667354823E-4	DESIGN
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9999929742119272	WITHOUT_CLASSIFICATION	7.025788072860632E-6	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999997718730623	WITHOUT_CLASSIFICATION	2.2812693760503825E-7	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999997718730623	WITHOUT_CLASSIFICATION	2.2812693760503825E-7	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999998907843923	WITHOUT_CLASSIFICATION	1.0921560774255887E-7	DESIGN
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999999992913313	WITHOUT_CLASSIFICATION	7.086686963691466E-10	DESIGN
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.999996735555795	WITHOUT_CLASSIFICATION	3.2644442050246645E-6	DESIGN
// check the condition	WITHOUT_CLASSIFICATION	0.9998814234739636	WITHOUT_CLASSIFICATION	1.1857652603635061E-4	DESIGN
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999993110846827	WITHOUT_CLASSIFICATION	6.889153173471423E-7	DESIGN
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999975155842524	WITHOUT_CLASSIFICATION	2.484415747534123E-6	DESIGN
// break jump	WITHOUT_CLASSIFICATION	0.9999824904521699	WITHOUT_CLASSIFICATION	1.7509547830025787E-5	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999997233157305	WITHOUT_CLASSIFICATION	2.766842695690392E-7	DESIGN
//[reg]	WITHOUT_CLASSIFICATION	0.9996985412569299	WITHOUT_CLASSIFICATION	3.014587430700464E-4	DESIGN
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999999192348086	WITHOUT_CLASSIFICATION	8.076519147252033E-8	DESIGN
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999990468165098	WITHOUT_CLASSIFICATION	9.531834903633963E-7	DESIGN
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9999901238415656	WITHOUT_CLASSIFICATION	9.876158434288988E-6	DESIGN
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999975155842524	WITHOUT_CLASSIFICATION	2.484415747534123E-6	DESIGN
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999672561041255	WITHOUT_CLASSIFICATION	3.2743895874486135E-5	DESIGN
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999672561041255	WITHOUT_CLASSIFICATION	3.2743895874486135E-5	DESIGN
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999952506348545	WITHOUT_CLASSIFICATION	4.749365145529086E-6	DESIGN
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.99998504329609	WITHOUT_CLASSIFICATION	1.4956703909953416E-5	DESIGN
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9991983520672156	WITHOUT_CLASSIFICATION	8.016479327843239E-4	DESIGN
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999725775305837	WITHOUT_CLASSIFICATION	2.7422469416347735E-5	DESIGN
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999999571072883	WITHOUT_CLASSIFICATION	4.289271180170136E-8	DESIGN
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9982554403629708	WITHOUT_CLASSIFICATION	0.001744559637029262	DESIGN
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.999998258661993	WITHOUT_CLASSIFICATION	1.7413380068915655E-6	DESIGN
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9829272148167008	WITHOUT_CLASSIFICATION	0.01707278518329924	DESIGN
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999987135123684	WITHOUT_CLASSIFICATION	1.2864876317012834E-6	DESIGN
// false // zero	WITHOUT_CLASSIFICATION	0.9999998802935546	WITHOUT_CLASSIFICATION	1.1970644534311018E-7	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999944365044227	WITHOUT_CLASSIFICATION	5.5634955773790774E-6	DESIGN
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999725775305837	WITHOUT_CLASSIFICATION	2.7422469416347735E-5	DESIGN
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999999571072883	WITHOUT_CLASSIFICATION	4.289271180170136E-8	DESIGN
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999440823680574	WITHOUT_CLASSIFICATION	5.591763194259837E-5	DESIGN
// push false	WITHOUT_CLASSIFICATION	0.9999994578048875	WITHOUT_CLASSIFICATION	5.421951125136998E-7	DESIGN
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9999999127020206	WITHOUT_CLASSIFICATION	8.729797942520832E-8	DESIGN
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9999997792004613	WITHOUT_CLASSIFICATION	2.2079953872810696E-7	DESIGN
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999999607657976	WITHOUT_CLASSIFICATION	3.92342024706815E-8	DESIGN
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9999911819682087	WITHOUT_CLASSIFICATION	8.818031791358528E-6	DESIGN
//[C]	WITHOUT_CLASSIFICATION	0.9993549495065581	WITHOUT_CLASSIFICATION	6.450504934417867E-4	DESIGN
// push true	WITHOUT_CLASSIFICATION	0.9999967966735422	WITHOUT_CLASSIFICATION	3.2033264578483696E-6	DESIGN
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999980618783739	WITHOUT_CLASSIFICATION	1.938121626054591E-6	DESIGN
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.999982841204333	WITHOUT_CLASSIFICATION	1.715879566695552E-5	DESIGN
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9999574545267259	WITHOUT_CLASSIFICATION	4.254547327406554E-5	DESIGN
//[boolean]	WITHOUT_CLASSIFICATION	0.999978867547127	WITHOUT_CLASSIFICATION	2.1132452873082046E-5	DESIGN
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999100031108932	WITHOUT_CLASSIFICATION	8.999688910688237E-5	DESIGN
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9998304637139335	WITHOUT_CLASSIFICATION	1.695362860666071E-4	DESIGN
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.98094829105941	WITHOUT_CLASSIFICATION	0.01905170894059007	DESIGN
// set self to the class	WITHOUT_CLASSIFICATION	0.9999942668302028	WITHOUT_CLASSIFICATION	5.733169797178272E-6	DESIGN
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999954334637808	WITHOUT_CLASSIFICATION	4.566536219162431E-6	DESIGN
// static scope	WITHOUT_CLASSIFICATION	0.9995762846388075	WITHOUT_CLASSIFICATION	4.237153611923774E-4	DESIGN
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999981474188148	WITHOUT_CLASSIFICATION	1.8525811852105757E-6	DESIGN
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999977840984208	WITHOUT_CLASSIFICATION	2.2159015792766703E-6	DESIGN
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999954334637808	WITHOUT_CLASSIFICATION	4.566536219162431E-6	DESIGN
// static scope	WITHOUT_CLASSIFICATION	0.9995762846388075	WITHOUT_CLASSIFICATION	4.237153611923774E-4	DESIGN
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999981474188148	WITHOUT_CLASSIFICATION	1.8525811852105757E-6	DESIGN
// finally with exception	WITHOUT_CLASSIFICATION	0.9992047960551141	WITHOUT_CLASSIFICATION	7.95203944885713E-4	DESIGN
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999956934933875	WITHOUT_CLASSIFICATION	4.306506612527486E-6	DESIGN
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9992762194440119	WITHOUT_CLASSIFICATION	7.237805559880673E-4	DESIGN
// original exception is on stack	WITHOUT_CLASSIFICATION	0.99999871455763	WITHOUT_CLASSIFICATION	1.2854423700137232E-6	DESIGN
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.6402040464055567	WITHOUT_CLASSIFICATION	0.35979595359444333	DESIGN
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999821240798785	WITHOUT_CLASSIFICATION	1.7875920121464156E-5	DESIGN
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999661831287335	WITHOUT_CLASSIFICATION	3.381687126652525E-5	DESIGN
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9999737317313471	WITHOUT_CLASSIFICATION	2.6268268652953067E-5	DESIGN
// script object	WITHOUT_CLASSIFICATION	0.9998935802127399	WITHOUT_CLASSIFICATION	1.0641978726005418E-4	DESIGN
// arities	WITHOUT_CLASSIFICATION	0.9999826156463028	WITHOUT_CLASSIFICATION	1.7384353697262608E-5	DESIGN
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9963267216572348	DESIGN	0.0036732783427652705	WITHOUT_CLASSIFICATION
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999990003793503	WITHOUT_CLASSIFICATION	9.996206497365614E-7	DESIGN
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9999983814465987	WITHOUT_CLASSIFICATION	1.618553401344005E-6	DESIGN
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999992618633328	WITHOUT_CLASSIFICATION	7.381366673170763E-7	DESIGN
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9999999813057598	WITHOUT_CLASSIFICATION	1.8694240205493534E-8	DESIGN
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999918648606119	WITHOUT_CLASSIFICATION	8.135139388037119E-6	DESIGN
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999915261142174	WITHOUT_CLASSIFICATION	8.473885782507859E-6	DESIGN
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9825513259837949	WITHOUT_CLASSIFICATION	0.017448674016205104	DESIGN
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999413781577656	WITHOUT_CLASSIFICATION	5.862184223431541E-5	DESIGN
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999996101245109	WITHOUT_CLASSIFICATION	3.898754891175313E-7	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999961248854952	WITHOUT_CLASSIFICATION	3.875114504766908E-6	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999998301918688	WITHOUT_CLASSIFICATION	1.6980813125040897E-7	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999998301918688	WITHOUT_CLASSIFICATION	1.6980813125040897E-7	DESIGN
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999994667024942	WITHOUT_CLASSIFICATION	5.332975059076097E-7	DESIGN
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999994667024942	WITHOUT_CLASSIFICATION	5.332975059076097E-7	DESIGN
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999977897900854	WITHOUT_CLASSIFICATION	2.2102099146041537E-6	DESIGN
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999977897900854	WITHOUT_CLASSIFICATION	2.2102099146041537E-6	DESIGN
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.999999989607337	WITHOUT_CLASSIFICATION	1.039266290566624E-8	DESIGN
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999996962670781	WITHOUT_CLASSIFICATION	3.0373292194181963E-7	DESIGN
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999999890113964	WITHOUT_CLASSIFICATION	1.0988603693331835E-8	DESIGN
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999983428110182	WITHOUT_CLASSIFICATION	1.6571889817152765E-6	DESIGN
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999999996257646	WITHOUT_CLASSIFICATION	3.7423547165896317E-10	DESIGN
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9998666348726732	WITHOUT_CLASSIFICATION	1.333651273267203E-4	DESIGN
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999999468392227	WITHOUT_CLASSIFICATION	5.316077737309285E-8	DESIGN
// then optional args	WITHOUT_CLASSIFICATION	0.9999980825689344	WITHOUT_CLASSIFICATION	1.917431065613389E-6	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999997718730623	WITHOUT_CLASSIFICATION	2.2812693760503825E-7	DESIGN
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.999999989607337	WITHOUT_CLASSIFICATION	1.039266290566624E-8	DESIGN
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999996962670781	WITHOUT_CLASSIFICATION	3.0373292194181963E-7	DESIGN
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999999890113964	WITHOUT_CLASSIFICATION	1.0988603693331835E-8	DESIGN
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999999996257646	WITHOUT_CLASSIFICATION	3.7423547165896317E-10	DESIGN
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9998666348726732	WITHOUT_CLASSIFICATION	1.333651273267203E-4	DESIGN
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999999457193931	WITHOUT_CLASSIFICATION	5.4280607015915185E-8	DESIGN
// finally, post args	WITHOUT_CLASSIFICATION	0.9999944519348783	WITHOUT_CLASSIFICATION	5.548065121709292E-6	DESIGN
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9993428916325405	WITHOUT_CLASSIFICATION	6.571083674595202E-4	DESIGN
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9993428916325405	WITHOUT_CLASSIFICATION	6.571083674595202E-4	DESIGN
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9993468927059765	WITHOUT_CLASSIFICATION	6.531072940234121E-4	DESIGN
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999999985039798	WITHOUT_CLASSIFICATION	1.4960201912330167E-9	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999831950200924	WITHOUT_CLASSIFICATION	1.6804979907699312E-5	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.999999989650519	WITHOUT_CLASSIFICATION	1.0349481148346055E-8	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.999999989650519	WITHOUT_CLASSIFICATION	1.0349481148346055E-8	DESIGN
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999962085219837	WITHOUT_CLASSIFICATION	3.7914780163140996E-6	DESIGN
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999999544831878	WITHOUT_CLASSIFICATION	4.551681211978788E-8	DESIGN
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.999999672185268	WITHOUT_CLASSIFICATION	3.278147320904741E-7	DESIGN
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999500812298303	WITHOUT_CLASSIFICATION	4.9918770169754854E-5	DESIGN
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9991696518655185	WITHOUT_CLASSIFICATION	8.303481344815046E-4	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9923403837729999	WITHOUT_CLASSIFICATION	0.0076596162269999945	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999517473356	WITHOUT_CLASSIFICATION	4.825266438009937E-8	DESIGN
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999172687749834	WITHOUT_CLASSIFICATION	8.273122501648433E-5	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999352984960805	WITHOUT_CLASSIFICATION	6.47015039194971E-5	DESIGN
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9998757517057381	WITHOUT_CLASSIFICATION	1.242482942620268E-4	DESIGN
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9997948429608627	WITHOUT_CLASSIFICATION	2.0515703913721926E-4	DESIGN
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999962085219837	WITHOUT_CLASSIFICATION	3.7914780163140996E-6	DESIGN
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999999544831878	WITHOUT_CLASSIFICATION	4.551681211978788E-8	DESIGN
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999500812298303	WITHOUT_CLASSIFICATION	4.9918770169754854E-5	DESIGN
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999962462499058	WITHOUT_CLASSIFICATION	3.753750094153475E-6	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999831950200924	WITHOUT_CLASSIFICATION	1.6804979907699312E-5	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999831950200924	WITHOUT_CLASSIFICATION	1.6804979907699312E-5	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999944365044227	WITHOUT_CLASSIFICATION	5.5634955773790774E-6	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999944365044227	WITHOUT_CLASSIFICATION	5.5634955773790774E-6	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999998632621143	WITHOUT_CLASSIFICATION	1.367378857415153E-7	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999998632621143	WITHOUT_CLASSIFICATION	1.367378857415153E-7	DESIGN
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999999649718003	WITHOUT_CLASSIFICATION	3.502819960763703E-8	DESIGN
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999993962816031	WITHOUT_CLASSIFICATION	6.037183969989685E-7	DESIGN
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9864725914887404	WITHOUT_CLASSIFICATION	0.01352740851125967	DESIGN
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999998387188213	WITHOUT_CLASSIFICATION	1.6128117870907686E-7	DESIGN
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999982730535062	WITHOUT_CLASSIFICATION	1.7269464938549749E-6	DESIGN
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999998966510519	WITHOUT_CLASSIFICATION	1.0334894816472765E-7	DESIGN
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999174856550493	WITHOUT_CLASSIFICATION	8.251434495067451E-5	DESIGN
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9992461454776582	WITHOUT_CLASSIFICATION	7.538545223418829E-4	DESIGN
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999998514202347	WITHOUT_CLASSIFICATION	1.4857976513484713E-7	DESIGN
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999964695588414	WITHOUT_CLASSIFICATION	3.5304411585937478E-6	DESIGN
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999045599399655	WITHOUT_CLASSIFICATION	9.544006003457217E-5	DESIGN
// verify the class	WITHOUT_CLASSIFICATION	0.9999888448232164	WITHOUT_CLASSIFICATION	1.1155176783684326E-5	DESIGN
// create dir if necessary	WITHOUT_CLASSIFICATION	0.999993150649318	WITHOUT_CLASSIFICATION	6.84935068183515E-6	DESIGN
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999999914628549	WITHOUT_CLASSIFICATION	8.537145104008048E-9	DESIGN
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999999978809518	WITHOUT_CLASSIFICATION	2.119048124023734E-9	DESIGN
// thread context	WITHOUT_CLASSIFICATION	0.9999824854397882	WITHOUT_CLASSIFICATION	1.7514560211840918E-5	DESIGN
// line number	WITHOUT_CLASSIFICATION	0.9999965131637824	WITHOUT_CLASSIFICATION	3.486836217593162E-6	DESIGN
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999937961730738	WITHOUT_CLASSIFICATION	6.203826926189856E-6	DESIGN
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999999647533953	WITHOUT_CLASSIFICATION	3.524660474425244E-8	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999517473356	WITHOUT_CLASSIFICATION	4.825266438009937E-8	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999352984960805	WITHOUT_CLASSIFICATION	6.47015039194971E-5	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.999999644684843	WITHOUT_CLASSIFICATION	3.5531515689044E-7	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999990624942603	WITHOUT_CLASSIFICATION	9.375057396361575E-7	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999990624942603	WITHOUT_CLASSIFICATION	9.375057396361575E-7	DESIGN
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999962462499058	WITHOUT_CLASSIFICATION	3.753750094153475E-6	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999831950200924	WITHOUT_CLASSIFICATION	1.6804979907699312E-5	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999944365044227	WITHOUT_CLASSIFICATION	5.5634955773790774E-6	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999998632621143	WITHOUT_CLASSIFICATION	1.367378857415153E-7	DESIGN
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9157891047842196	WITHOUT_CLASSIFICATION	0.08421089521578047	DESIGN
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9998054737185889	WITHOUT_CLASSIFICATION	1.945262814111894E-4	DESIGN
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999982507189269	WITHOUT_CLASSIFICATION	1.7492810731288233E-6	DESIGN
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9994245309922501	WITHOUT_CLASSIFICATION	5.754690077498552E-4	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999232149406153	WITHOUT_CLASSIFICATION	7.678505938475725E-5	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999232149406153	WITHOUT_CLASSIFICATION	7.678505938475725E-5	DESIGN
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999965232278409	WITHOUT_CLASSIFICATION	3.4767721591363255E-6	DESIGN
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999999278087031	WITHOUT_CLASSIFICATION	7.219129690974096E-8	DESIGN
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999983037342595	WITHOUT_CLASSIFICATION	1.6962657404530519E-6	DESIGN
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999993427247603	WITHOUT_CLASSIFICATION	6.572752396492861E-7	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9999890722407768	WITHOUT_CLASSIFICATION	1.0927759223067574E-5	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9999890722407768	WITHOUT_CLASSIFICATION	1.0927759223067574E-5	DESIGN
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9861812906371183	WITHOUT_CLASSIFICATION	0.013818709362881688	DESIGN
// normal closure	WITHOUT_CLASSIFICATION	0.9999925549707795	WITHOUT_CLASSIFICATION	7.445029220416638E-6	DESIGN
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999991637513388	WITHOUT_CLASSIFICATION	8.362486612293357E-7	DESIGN
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9995713866450617	WITHOUT_CLASSIFICATION	4.2861335493829403E-4	DESIGN
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999216904096621	WITHOUT_CLASSIFICATION	7.830959033802838E-5	DESIGN
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.99999860020851	WITHOUT_CLASSIFICATION	1.3997914900852716E-6	DESIGN
// Ruby name 	WITHOUT_CLASSIFICATION	0.9997306495113756	WITHOUT_CLASSIFICATION	2.6935048862444967E-4	DESIGN
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999965154094795	WITHOUT_CLASSIFICATION	3.484590520459744E-6	DESIGN
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9997500775005631	WITHOUT_CLASSIFICATION	2.49922499436852E-4	DESIGN
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9876909093885894	WITHOUT_CLASSIFICATION	0.012309090611410525	DESIGN
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9754031861614725	WITHOUT_CLASSIFICATION	0.024596813838527597	DESIGN
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.997784887044875	WITHOUT_CLASSIFICATION	0.002215112955124972	DESIGN
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999999934059928	WITHOUT_CLASSIFICATION	6.5940072664702835E-9	DESIGN
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9990909865768627	WITHOUT_CLASSIFICATION	9.09013423137273E-4	DESIGN
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999941466876159	WITHOUT_CLASSIFICATION	5.8533123841303935E-6	DESIGN
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9996376467869816	WITHOUT_CLASSIFICATION	3.6235321301835035E-4	DESIGN
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9997802858702105	WITHOUT_CLASSIFICATION	2.1971412978951703E-4	DESIGN
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999350170754111	WITHOUT_CLASSIFICATION	6.498292458900469E-5	DESIGN
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9998214851690415	WITHOUT_CLASSIFICATION	1.7851483095855279E-4	DESIGN
// get "self"	WITHOUT_CLASSIFICATION	0.999998369078325	WITHOUT_CLASSIFICATION	1.6309216749541906E-6	DESIGN
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9999988778363863	WITHOUT_CLASSIFICATION	1.1221636136553863E-6	DESIGN
// inline script	WITHOUT_CLASSIFICATION	0.99998882831379	WITHOUT_CLASSIFICATION	1.1171686210089369E-5	DESIGN
// inline script	WITHOUT_CLASSIFICATION	0.99998882831379	WITHOUT_CLASSIFICATION	1.1171686210089369E-5	DESIGN
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9996327562219031	WITHOUT_CLASSIFICATION	3.672437780969206E-4	DESIGN
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999879370777189	WITHOUT_CLASSIFICATION	1.2062922281086236E-5	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.999999104031405	WITHOUT_CLASSIFICATION	8.959685949175733E-7	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.999999104031405	WITHOUT_CLASSIFICATION	8.959685949175733E-7	DESIGN
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9999933234996009	DESIGN	6.6765003991237894E-6	WITHOUT_CLASSIFICATION
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9988324034582753	WITHOUT_CLASSIFICATION	0.0011675965417246564	DESIGN
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9999949920567817	WITHOUT_CLASSIFICATION	5.007943218375337E-6	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9998386566928595	WITHOUT_CLASSIFICATION	1.6134330714035884E-4	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9998386566928595	WITHOUT_CLASSIFICATION	1.6134330714035884E-4	DESIGN
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9821949689218049	WITHOUT_CLASSIFICATION	0.01780503107819509	DESIGN
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999999493157931	WITHOUT_CLASSIFICATION	5.068420690098766E-8	DESIGN
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999999882301427	WITHOUT_CLASSIFICATION	1.1769857272328495E-8	DESIGN
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.999999984776795	WITHOUT_CLASSIFICATION	1.522320503413806E-8	DESIGN
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999733241273026	WITHOUT_CLASSIFICATION	2.6675872697506926E-5	DESIGN
// get the incoming case value	WITHOUT_CLASSIFICATION	0.999999706458787	WITHOUT_CLASSIFICATION	2.9354121302206613E-7	DESIGN
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999598129622742	WITHOUT_CLASSIFICATION	4.018703772576993E-5	DESIGN
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9992288374653769	WITHOUT_CLASSIFICATION	7.711625346231223E-4	DESIGN
// build each "when"	WITHOUT_CLASSIFICATION	0.9999996017171388	WITHOUT_CLASSIFICATION	3.98282861222071E-7	DESIGN
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9983874908989946	WITHOUT_CLASSIFICATION	0.0016125091010054467	DESIGN
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999997142296342	WITHOUT_CLASSIFICATION	2.857703657621026E-7	DESIGN
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999811073125265	WITHOUT_CLASSIFICATION	1.8892687473396977E-5	DESIGN
// close it out	WITHOUT_CLASSIFICATION	0.9999975482534575	WITHOUT_CLASSIFICATION	2.4517465424440446E-6	DESIGN
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999521176437213	WITHOUT_CLASSIFICATION	4.788235627877086E-5	DESIGN
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9986791225223237	WITHOUT_CLASSIFICATION	0.0013208774776761996	DESIGN
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999980444738137	WITHOUT_CLASSIFICATION	1.9555261863151976E-6	DESIGN
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999999972273576	WITHOUT_CLASSIFICATION	2.772642519226103E-9	DESIGN
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999780391480846	WITHOUT_CLASSIFICATION	2.196085191544366E-5	DESIGN
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999900473063071	WITHOUT_CLASSIFICATION	9.95269369286562E-6	DESIGN
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999916477333987	WITHOUT_CLASSIFICATION	8.352266601314032E-6	DESIGN
// Instance method	WITHOUT_CLASSIFICATION	0.999998429945802	WITHOUT_CLASSIFICATION	1.5700541979699306E-6	DESIGN
// Class method	WITHOUT_CLASSIFICATION	0.9999975528716983	WITHOUT_CLASSIFICATION	2.4471283017028797E-6	DESIGN
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9997865052482023	WITHOUT_CLASSIFICATION	2.1349475179771582E-4	DESIGN
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999850103809031	WITHOUT_CLASSIFICATION	1.4989619096812764E-5	DESIGN
// Now for the rest	WITHOUT_CLASSIFICATION	0.999994318187644	WITHOUT_CLASSIFICATION	5.681812355962331E-6	DESIGN
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999875596556167	WITHOUT_CLASSIFICATION	1.2440344383435639E-5	DESIGN
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9999910002768132	WITHOUT_CLASSIFICATION	8.999723186778118E-6	DESIGN
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999999860819436	WITHOUT_CLASSIFICATION	1.3918056467125577E-8	DESIGN
// Build args	WITHOUT_CLASSIFICATION	0.9999929580642689	WITHOUT_CLASSIFICATION	7.041935730990673E-6	DESIGN
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999987830612191	WITHOUT_CLASSIFICATION	1.2169387808115173E-6	DESIGN
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999966671704786	WITHOUT_CLASSIFICATION	3.332829521265853E-6	DESIGN
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999521176437213	WITHOUT_CLASSIFICATION	4.788235627877086E-5	DESIGN
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999999860819436	WITHOUT_CLASSIFICATION	1.3918056467125577E-8	DESIGN
// Build args	WITHOUT_CLASSIFICATION	0.9999929580642689	WITHOUT_CLASSIFICATION	7.041935730990673E-6	DESIGN
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999966671704786	WITHOUT_CLASSIFICATION	3.332829521265853E-6	DESIGN
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999862276075016	WITHOUT_CLASSIFICATION	1.377239249846962E-5	DESIGN
// Build the new module	WITHOUT_CLASSIFICATION	0.9999959861033869	WITHOUT_CLASSIFICATION	4.013896613047255E-6	DESIGN
// Build the module body	WITHOUT_CLASSIFICATION	0.9999972962543222	WITHOUT_CLASSIFICATION	2.703745677703636E-6	DESIGN
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999997975882955	WITHOUT_CLASSIFICATION	2.0241170456815303E-7	DESIGN
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999819576125576	WITHOUT_CLASSIFICATION	1.804238744243997E-5	DESIGN
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999982456136053	WITHOUT_CLASSIFICATION	1.7543863946756725E-6	DESIGN
// get attr	WITHOUT_CLASSIFICATION	0.9999978364341745	WITHOUT_CLASSIFICATION	2.163565825463633E-6	DESIGN
// call operator	WITHOUT_CLASSIFICATION	0.999970482015226	WITHOUT_CLASSIFICATION	2.9517984774030163E-5	DESIGN
// set attr	WITHOUT_CLASSIFICATION	0.9999945281642746	WITHOUT_CLASSIFICATION	5.4718357255005666E-6	DESIGN
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.8507548113683913	WITHOUT_CLASSIFICATION	0.1492451886316087	DESIGN
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9997990478288343	WITHOUT_CLASSIFICATION	2.0095217116567482E-4	DESIGN
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9997990478288343	WITHOUT_CLASSIFICATION	2.0095217116567482E-4	DESIGN
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999999233179301	WITHOUT_CLASSIFICATION	7.668206994497262E-8	DESIGN
// build first node only and return true	WITHOUT_CLASSIFICATION	0.999999981557625	WITHOUT_CLASSIFICATION	1.844237497194906E-8	DESIGN
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999999996998788	WITHOUT_CLASSIFICATION	3.001210825827653E-10	DESIGN
// Top-level script!	WITHOUT_CLASSIFICATION	0.9986219675129125	WITHOUT_CLASSIFICATION	0.0013780324870874472	DESIGN
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999993069276121	WITHOUT_CLASSIFICATION	6.930723879825252E-7	DESIGN
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999978234667912	WITHOUT_CLASSIFICATION	2.1765332088293812E-6	DESIGN
// What handles warnings	WITHOUT_CLASSIFICATION	0.9983555085314353	WITHOUT_CLASSIFICATION	0.0016444914685647865	DESIGN
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999434889463589	WITHOUT_CLASSIFICATION	5.6511053641111736E-5	DESIGN
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999998178457418	WITHOUT_CLASSIFICATION	1.8215425820210792E-7	DESIGN
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999984457158074	WITHOUT_CLASSIFICATION	1.5542841924960148E-6	DESIGN
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999500782645665	WITHOUT_CLASSIFICATION	4.992173543337408E-5	DESIGN
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999802861527808	WITHOUT_CLASSIFICATION	1.971384721919322E-5	DESIGN
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999999986836509	WITHOUT_CLASSIFICATION	1.3163491979869576E-9	DESIGN
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999997129776801	WITHOUT_CLASSIFICATION	2.8702231994890436E-7	DESIGN
// alu operations	WITHOUT_CLASSIFICATION	0.9999996124358222	WITHOUT_CLASSIFICATION	3.875641777765007E-7	DESIGN
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9999954166419683	WITHOUT_CLASSIFICATION	4.583358031598481E-6	DESIGN
// closure instructions	WITHOUT_CLASSIFICATION	0.9999993298273108	WITHOUT_CLASSIFICATION	6.701726892211315E-7	DESIGN
// eval instructions	WITHOUT_CLASSIFICATION	0.9999991064295078	WITHOUT_CLASSIFICATION	8.935704920851559E-7	DESIGN
// def instructions	WITHOUT_CLASSIFICATION	0.9998903386928717	WITHOUT_CLASSIFICATION	1.0966130712829665E-4	DESIGN
// exception instructions	WITHOUT_CLASSIFICATION	0.9999511227695334	WITHOUT_CLASSIFICATION	4.887723046668175E-5	DESIGN
// Loads	WITHOUT_CLASSIFICATION	0.9999992705703705	WITHOUT_CLASSIFICATION	7.294296295064702E-7	DESIGN
// Stores	WITHOUT_CLASSIFICATION	0.9999855794371968	WITHOUT_CLASSIFICATION	1.4420562803261086E-5	DESIGN
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999998813483405	WITHOUT_CLASSIFICATION	1.1865165949768484E-7	DESIGN
// others	WITHOUT_CLASSIFICATION	0.9999692059469567	WITHOUT_CLASSIFICATION	3.0794053043235186E-5	DESIGN
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999434840742675	WITHOUT_CLASSIFICATION	5.651592573242496E-5	DESIGN
// optimization guards	WITHOUT_CLASSIFICATION	0.999999834513371	WITHOUT_CLASSIFICATION	1.6548662894287015E-7	DESIGN
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9532094840384979	WITHOUT_CLASSIFICATION	0.04679051596150208	DESIGN
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999011221661116	WITHOUT_CLASSIFICATION	9.887783388835325E-5	DESIGN
// scripts	WITHOUT_CLASSIFICATION	0.9999490933801136	WITHOUT_CLASSIFICATION	5.0906619886451174E-5	DESIGN
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999911462220994	WITHOUT_CLASSIFICATION	8.853777900572264E-6	DESIGN
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999985114340612	WITHOUT_CLASSIFICATION	1.4885659388286683E-6	DESIGN
// methods and closures	WITHOUT_CLASSIFICATION	0.9999981356185144	WITHOUT_CLASSIFICATION	1.8643814856403732E-6	DESIGN
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999986845830927	WITHOUT_CLASSIFICATION	1.3154169072549956E-6	DESIGN
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9999404237825792	WITHOUT_CLASSIFICATION	5.9576217420886925E-5	DESIGN
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999984403229819	WITHOUT_CLASSIFICATION	1.559677018063012E-6	DESIGN
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999993790696561	WITHOUT_CLASSIFICATION	6.209303438247673E-7	DESIGN
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999994031467093	WITHOUT_CLASSIFICATION	5.968532907719724E-7	DESIGN
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999396401166348	WITHOUT_CLASSIFICATION	6.0359883365176224E-5	DESIGN
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999985581741706	WITHOUT_CLASSIFICATION	1.4418258294350233E-6	DESIGN
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999999892862159	WITHOUT_CLASSIFICATION	1.071378408655034E-8	DESIGN
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9995458122037799	WITHOUT_CLASSIFICATION	4.541877962200449E-4	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9924196070872796	DESIGN	0.007580392912720397	WITHOUT_CLASSIFICATION
// Readline	WITHOUT_CLASSIFICATION	0.9999891468697475	WITHOUT_CLASSIFICATION	1.0853130252560164E-5	DESIGN
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9906612494213421	WITHOUT_CLASSIFICATION	0.009338750578657773	DESIGN
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9998909014146168	WITHOUT_CLASSIFICATION	1.0909858538323862E-4	DESIGN
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999567268264332	WITHOUT_CLASSIFICATION	4.327317356674026E-5	DESIGN
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9999687280518118	WITHOUT_CLASSIFICATION	3.12719481881774E-5	DESIGN
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9743072509400306	WITHOUT_CLASSIFICATION	0.02569274905996947	DESIGN
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.999999508482797	WITHOUT_CLASSIFICATION	4.915172030564087E-7	DESIGN
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999948389713431	WITHOUT_CLASSIFICATION	5.161028656991549E-6	DESIGN
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9999799382637323	WITHOUT_CLASSIFICATION	2.006173626767797E-5	DESIGN
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999401720208256	WITHOUT_CLASSIFICATION	5.98279791743171E-5	DESIGN
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9999964109831645	WITHOUT_CLASSIFICATION	3.5890168354027977E-6	DESIGN
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999983348231734	WITHOUT_CLASSIFICATION	1.665176826647788E-6	DESIGN
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9939211052831264	WITHOUT_CLASSIFICATION	0.006078894716873567	DESIGN
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999973849715577	WITHOUT_CLASSIFICATION	2.6150284423592826E-6	DESIGN
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999999918569811	WITHOUT_CLASSIFICATION	8.143018896204745E-9	DESIGN
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9999999749634606	WITHOUT_CLASSIFICATION	2.503653942064937E-8	DESIGN
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9992566094328975	WITHOUT_CLASSIFICATION	7.433905671025277E-4	DESIGN
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999693315098425	WITHOUT_CLASSIFICATION	3.066849015746613E-5	DESIGN
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999693315098425	WITHOUT_CLASSIFICATION	3.066849015746613E-5	DESIGN
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999962085139779	WITHOUT_CLASSIFICATION	3.7914860222599933E-6	DESIGN
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9999972445058647	WITHOUT_CLASSIFICATION	2.7554941351765726E-6	DESIGN
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999993522777809	WITHOUT_CLASSIFICATION	6.477222190775931E-7	DESIGN
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999981685048088	WITHOUT_CLASSIFICATION	1.831495191271565E-6	DESIGN
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999999868088262	WITHOUT_CLASSIFICATION	1.3191173820241298E-8	DESIGN
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9811730352104883	WITHOUT_CLASSIFICATION	0.018826964789511784	DESIGN
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9999879232621866	WITHOUT_CLASSIFICATION	1.2076737813498664E-5	DESIGN
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9999635198284684	WITHOUT_CLASSIFICATION	3.648017153157418E-5	DESIGN
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9996839612131622	WITHOUT_CLASSIFICATION	3.160387868378303E-4	DESIGN
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999922326074182	WITHOUT_CLASSIFICATION	7.767392581887832E-6	DESIGN
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999979322554515	WITHOUT_CLASSIFICATION	2.0677445484688157E-6	DESIGN
// class or module	WITHOUT_CLASSIFICATION	0.9999994522642939	WITHOUT_CLASSIFICATION	5.477357060605822E-7	DESIGN
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999707930151455	WITHOUT_CLASSIFICATION	2.920698485455323E-5	DESIGN
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9999993618467745	WITHOUT_CLASSIFICATION	6.381532254374608E-7	DESIGN
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999957527931682	WITHOUT_CLASSIFICATION	4.247206831822658E-6	DESIGN
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999875862443809	WITHOUT_CLASSIFICATION	1.2413755618998359E-5	DESIGN
// IN changed!	WITHOUT_CLASSIFICATION	0.9999976131265439	WITHOUT_CLASSIFICATION	2.3868734559820686E-6	DESIGN
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999913108245368	WITHOUT_CLASSIFICATION	8.689175463030359E-6	DESIGN
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999998779849885	WITHOUT_CLASSIFICATION	1.2201501151524176E-7	DESIGN
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9989093712403246	WITHOUT_CLASSIFICATION	0.0010906287596753246	DESIGN
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999983496810465	WITHOUT_CLASSIFICATION	1.6503189534893732E-6	DESIGN
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9998338561921751	WITHOUT_CLASSIFICATION	1.661438078249362E-4	DESIGN
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9999912289373991	WITHOUT_CLASSIFICATION	8.771062600981839E-6	DESIGN
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9653577682406936	WITHOUT_CLASSIFICATION	0.03464223175930639	DESIGN
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999999457717611	WITHOUT_CLASSIFICATION	5.422823891693003E-8	DESIGN
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9998205745188402	WITHOUT_CLASSIFICATION	1.7942548115979954E-4	DESIGN
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9998100311991955	WITHOUT_CLASSIFICATION	1.8996880080455233E-4	DESIGN
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999999973408716	WITHOUT_CLASSIFICATION	2.6591283378603213E-9	DESIGN
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999965116576504	WITHOUT_CLASSIFICATION	3.4883423497003526E-6	DESIGN
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9999926054698697	DESIGN	7.3945301303540775E-6	WITHOUT_CLASSIFICATION
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999918795357151	WITHOUT_CLASSIFICATION	8.120464284875174E-6	DESIGN
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999999834601796	WITHOUT_CLASSIFICATION	1.6539820420708143E-8	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.99999997836968	WITHOUT_CLASSIFICATION	2.1630319961623705E-8	DESIGN
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999976890011105	WITHOUT_CLASSIFICATION	2.3109988894972376E-6	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.99999997836968	WITHOUT_CLASSIFICATION	2.1630319961623705E-8	DESIGN
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999720155818341	WITHOUT_CLASSIFICATION	2.7984418165874274E-5	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999986214502804	WITHOUT_CLASSIFICATION	1.3785497196630795E-6	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999986214502804	WITHOUT_CLASSIFICATION	1.3785497196630795E-6	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999986214502804	WITHOUT_CLASSIFICATION	1.3785497196630795E-6	DESIGN
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999983361328542	WITHOUT_CLASSIFICATION	1.6638671458048232E-6	DESIGN
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999983361328542	WITHOUT_CLASSIFICATION	1.6638671458048232E-6	DESIGN
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999485226514719	WITHOUT_CLASSIFICATION	5.147734852811928E-5	DESIGN
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999987037185645	WITHOUT_CLASSIFICATION	1.2962814355659149E-6	DESIGN
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9998812434453146	WITHOUT_CLASSIFICATION	1.1875655468532617E-4	DESIGN
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9848555756230067	WITHOUT_CLASSIFICATION	0.015144424376993208	DESIGN
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999786937821084	WITHOUT_CLASSIFICATION	2.130621789167115E-5	DESIGN
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999987437927279	WITHOUT_CLASSIFICATION	1.2562072719824307E-6	DESIGN
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999999945286855	WITHOUT_CLASSIFICATION	5.4713145738294265E-9	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.9999976315340005	WITHOUT_CLASSIFICATION	2.3684659995969417E-6	DESIGN
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999998326690116	WITHOUT_CLASSIFICATION	1.6733098837411821E-7	DESIGN
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999996808797309	WITHOUT_CLASSIFICATION	3.19120269119349E-7	DESIGN
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999964306420804	WITHOUT_CLASSIFICATION	3.569357919503868E-6	DESIGN
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999897944544909	WITHOUT_CLASSIFICATION	1.0205545509143763E-5	DESIGN
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999999076881229	WITHOUT_CLASSIFICATION	9.2311877131707E-8	DESIGN
// root-level logic	WITHOUT_CLASSIFICATION	0.9999618001725157	WITHOUT_CLASSIFICATION	3.8199827484331745E-5	DESIGN
// root-level methods	WITHOUT_CLASSIFICATION	0.9999780510816766	WITHOUT_CLASSIFICATION	2.19489183234382E-5	DESIGN
// root-level classes	WITHOUT_CLASSIFICATION	0.9999840720801598	WITHOUT_CLASSIFICATION	1.5927919840170512E-5	DESIGN
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999908342738797	WITHOUT_CLASSIFICATION	9.165726120286346E-6	DESIGN
// load receiver	WITHOUT_CLASSIFICATION	0.9999996726897679	WITHOUT_CLASSIFICATION	3.2731023204199444E-7	DESIGN
// load receiver	WITHOUT_CLASSIFICATION	0.9999996726897679	WITHOUT_CLASSIFICATION	3.2731023204199444E-7	DESIGN
// receiver	WITHOUT_CLASSIFICATION	0.9999950557318338	WITHOUT_CLASSIFICATION	4.944268166231722E-6	DESIGN
// load arguments	WITHOUT_CLASSIFICATION	0.9999984758514748	WITHOUT_CLASSIFICATION	1.5241485251818606E-6	DESIGN
// load arguments	WITHOUT_CLASSIFICATION	0.9999984758514748	WITHOUT_CLASSIFICATION	1.5241485251818606E-6	DESIGN
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999957444333012	WITHOUT_CLASSIFICATION	4.255566698839594E-6	DESIGN
// Object[] args	WITHOUT_CLASSIFICATION	0.9999362659422024	WITHOUT_CLASSIFICATION	6.373405779757713E-5	DESIGN
// load handle	WITHOUT_CLASSIFICATION	0.9999993981107623	WITHOUT_CLASSIFICATION	6.018892376027402E-7	DESIGN
// args array	WITHOUT_CLASSIFICATION	0.9999192571690745	WITHOUT_CLASSIFICATION	8.074283092548507E-5	DESIGN
// i'th argument	WITHOUT_CLASSIFICATION	0.9999690451440268	WITHOUT_CLASSIFICATION	3.095485597310661E-5	DESIGN
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999974674598053	WITHOUT_CLASSIFICATION	2.532540194706926E-6	DESIGN
// Object arg0	WITHOUT_CLASSIFICATION	0.9999876415316803	WITHOUT_CLASSIFICATION	1.2358468319645079E-5	DESIGN
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999999615331462	WITHOUT_CLASSIFICATION	3.846685371390866E-8	DESIGN
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999970821448616	WITHOUT_CLASSIFICATION	2.9178551383526585E-6	DESIGN
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9820474391631749	WITHOUT_CLASSIFICATION	0.017952560836825053	DESIGN
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9973372533533691	WITHOUT_CLASSIFICATION	0.00266274664663097	DESIGN
// at end	WITHOUT_CLASSIFICATION	0.9998888218629021	WITHOUT_CLASSIFICATION	1.1117813709801549E-4	DESIGN
// undo check	WITHOUT_CLASSIFICATION	0.9999658220695515	WITHOUT_CLASSIFICATION	3.417793044857032E-5	DESIGN
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999750043691482	WITHOUT_CLASSIFICATION	2.4995630851751406E-5	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.9999976315340005	WITHOUT_CLASSIFICATION	2.3684659995969417E-6	DESIGN
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9999029310025036	WITHOUT_CLASSIFICATION	9.706899749647749E-5	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.999997194944402	WITHOUT_CLASSIFICATION	2.805055597935E-6	DESIGN
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999065941633468	WITHOUT_CLASSIFICATION	9.340583665307877E-5	DESIGN
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999065941633468	WITHOUT_CLASSIFICATION	9.340583665307877E-5	DESIGN
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999970193149593	WITHOUT_CLASSIFICATION	2.980685040664212E-6	DESIGN
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999497573293425	WITHOUT_CLASSIFICATION	5.024267065749357E-5	DESIGN
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999278113294677	WITHOUT_CLASSIFICATION	7.21886705323214E-5	DESIGN
// restore position	WITHOUT_CLASSIFICATION	0.9999938072915239	WITHOUT_CLASSIFICATION	6.192708476043841E-6	DESIGN
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999973665729806	WITHOUT_CLASSIFICATION	2.633427019470132E-6	DESIGN
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999693376654614	WITHOUT_CLASSIFICATION	3.066233453865429E-5	DESIGN
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999999241353197	WITHOUT_CLASSIFICATION	7.586468027560328E-8	DESIGN
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9999655389419196	WITHOUT_CLASSIFICATION	3.446105808042759E-5	DESIGN
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9994543173444064	WITHOUT_CLASSIFICATION	5.456826555936768E-4	DESIGN
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.999999998930199	WITHOUT_CLASSIFICATION	1.0698010126811876E-9	DESIGN
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.999984498250329	WITHOUT_CLASSIFICATION	1.5501749671109996E-5	DESIGN
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.991408851387537	WITHOUT_CLASSIFICATION	0.008591148612462903	DESIGN
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.6197588816898862	DESIGN	0.3802411183101137	WITHOUT_CLASSIFICATION
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999997081871695	WITHOUT_CLASSIFICATION	2.9181283054169415E-7	DESIGN
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.999758138007217	WITHOUT_CLASSIFICATION	2.418619927830578E-4	DESIGN
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.999997602326269	WITHOUT_CLASSIFICATION	2.3976737309848365E-6	DESIGN
// Timeout module methods	WITHOUT_CLASSIFICATION	0.999956629764088	WITHOUT_CLASSIFICATION	4.337023591209713E-5	DESIGN
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999950313235679	WITHOUT_CLASSIFICATION	4.968676432071579E-6	DESIGN
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9997822805534711	WITHOUT_CLASSIFICATION	2.177194465289469E-4	DESIGN
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999995333542245	WITHOUT_CLASSIFICATION	4.666457754345295E-7	DESIGN
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999999544317432	WITHOUT_CLASSIFICATION	4.556825692037405E-8	DESIGN
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999958227222295	WITHOUT_CLASSIFICATION	4.177277770513038E-6	DESIGN
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999818241981703	WITHOUT_CLASSIFICATION	1.8175801829738963E-5	DESIGN
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999986656066355	WITHOUT_CLASSIFICATION	1.3343933644154374E-6	DESIGN
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999999973376228	WITHOUT_CLASSIFICATION	2.662377260527223E-9	DESIGN
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999988274350559	WITHOUT_CLASSIFICATION	1.1725649441051552E-6	DESIGN
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.99999811900172	WITHOUT_CLASSIFICATION	1.8809982799744628E-6	DESIGN
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9981587100486491	WITHOUT_CLASSIFICATION	0.001841289951350951	DESIGN
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.999997776495526	WITHOUT_CLASSIFICATION	2.2235044741169146E-6	DESIGN
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.99997458549792	WITHOUT_CLASSIFICATION	2.54145020799929E-5	DESIGN
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.999230413264693	WITHOUT_CLASSIFICATION	7.695867353071076E-4	DESIGN
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999640080684338	WITHOUT_CLASSIFICATION	3.59919315661956E-5	DESIGN
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9997394015947546	WITHOUT_CLASSIFICATION	2.605984052453089E-4	DESIGN
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999972392154849	WITHOUT_CLASSIFICATION	2.7607845151480357E-6	DESIGN
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999860471463375	WITHOUT_CLASSIFICATION	1.3952853662409658E-5	DESIGN
// $blah	WITHOUT_CLASSIFICATION	0.9999964754557904	WITHOUT_CLASSIFICATION	3.524544209734836E-6	DESIGN
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9981587100486491	WITHOUT_CLASSIFICATION	0.001841289951350951	DESIGN
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999999235361686	WITHOUT_CLASSIFICATION	7.64638313528768E-8	DESIGN
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999860471463375	WITHOUT_CLASSIFICATION	1.3952853662409658E-5	DESIGN
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9999896958011882	WITHOUT_CLASSIFICATION	1.0304198811778455E-5	DESIGN
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999987346592789	WITHOUT_CLASSIFICATION	1.2653407211078173E-6	DESIGN
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999999918622501	WITHOUT_CLASSIFICATION	8.137749902812605E-9	DESIGN
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999960880958616	WITHOUT_CLASSIFICATION	3.911904138380345E-6	DESIGN
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999886582513866	WITHOUT_CLASSIFICATION	1.134174861341659E-5	DESIGN
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.997765097338065	WITHOUT_CLASSIFICATION	0.0022349026619349756	DESIGN
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.997765097338065	WITHOUT_CLASSIFICATION	0.0022349026619349756	DESIGN
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9998242335333333	WITHOUT_CLASSIFICATION	1.7576646666677906E-4	DESIGN
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999976542271577	WITHOUT_CLASSIFICATION	2.345772842221157E-6	DESIGN
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999999028978008	WITHOUT_CLASSIFICATION	9.710219921015974E-8	DESIGN
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999999028978008	WITHOUT_CLASSIFICATION	9.710219921015974E-8	DESIGN
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9972744106777457	WITHOUT_CLASSIFICATION	0.0027255893222542854	DESIGN
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9999519484894348	WITHOUT_CLASSIFICATION	4.805151056525521E-5	DESIGN
//AF_INET	WITHOUT_CLASSIFICATION	0.999821919491932	WITHOUT_CLASSIFICATION	1.7808050806803776E-4	DESIGN
//AF_INET	WITHOUT_CLASSIFICATION	0.999821919491932	WITHOUT_CLASSIFICATION	1.7808050806803776E-4	DESIGN
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9998961989481159	WITHOUT_CLASSIFICATION	1.038010518840673E-4	DESIGN
// line 321	WITHOUT_CLASSIFICATION	0.9999996532581543	WITHOUT_CLASSIFICATION	3.467418456829201E-7	DESIGN
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999999996772894	WITHOUT_CLASSIFICATION	3.227106117503222E-10	DESIGN
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999998521437816	WITHOUT_CLASSIFICATION	1.4785621825889074E-7	DESIGN
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9917948575147181	WITHOUT_CLASSIFICATION	0.008205142485281895	DESIGN
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9987561285386871	WITHOUT_CLASSIFICATION	0.0012438714613129602	DESIGN
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9999996969268337	WITHOUT_CLASSIFICATION	3.0307316638688137E-7	DESIGN
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.999980928014875	WITHOUT_CLASSIFICATION	1.9071985124990088E-5	DESIGN
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9997758554218148	WITHOUT_CLASSIFICATION	2.241445781850618E-4	DESIGN
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9988074496198726	WITHOUT_CLASSIFICATION	0.0011925503801273947	DESIGN
// host and port given	WITHOUT_CLASSIFICATION	0.9985151942838438	WITHOUT_CLASSIFICATION	0.0014848057161560933	DESIGN
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9993263017188668	WITHOUT_CLASSIFICATION	6.736982811331836E-4	DESIGN
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999999873946879	WITHOUT_CLASSIFICATION	1.2605312172902138E-8	DESIGN
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999947256627403	WITHOUT_CLASSIFICATION	5.274337259772991E-6	DESIGN
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999997551754044	WITHOUT_CLASSIFICATION	2.448245956043073E-7	DESIGN
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.999914186323232	WITHOUT_CLASSIFICATION	8.581367676792211E-5	DESIGN
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9990174252810565	WITHOUT_CLASSIFICATION	9.825747189434674E-4	DESIGN
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999395869055461	WITHOUT_CLASSIFICATION	6.0413094453937495E-5	DESIGN
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9995726414894117	WITHOUT_CLASSIFICATION	4.2735851058835276E-4	DESIGN
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9999748507688385	WITHOUT_CLASSIFICATION	2.5149231161507165E-5	DESIGN
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999553155937985	WITHOUT_CLASSIFICATION	4.4684406201673264E-5	DESIGN
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999999670263584	WITHOUT_CLASSIFICATION	3.297364167195906E-8	DESIGN
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.999827641707593	WITHOUT_CLASSIFICATION	1.723582924071625E-4	DESIGN
// AF_INET	WITHOUT_CLASSIFICATION	0.9999931358967898	WITHOUT_CLASSIFICATION	6.864103210116208E-6	DESIGN
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9999973028051901	WITHOUT_CLASSIFICATION	2.697194809847248E-6	DESIGN
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9999955891958944	WITHOUT_CLASSIFICATION	4.410804105630312E-6	DESIGN
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9519254522227792	WITHOUT_CLASSIFICATION	0.04807454777722081	DESIGN
// line 323	WITHOUT_CLASSIFICATION	0.9999993405116261	WITHOUT_CLASSIFICATION	6.594883739951706E-7	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999779170740972	WITHOUT_CLASSIFICATION	2.2082925902714786E-5	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999779170740972	WITHOUT_CLASSIFICATION	2.2082925902714786E-5	DESIGN
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9989729593391858	WITHOUT_CLASSIFICATION	0.001027040660814157	DESIGN
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999998338179013	WITHOUT_CLASSIFICATION	1.661820987182624E-7	DESIGN
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9998854556917728	WITHOUT_CLASSIFICATION	1.1454430822711524E-4	DESIGN
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9984261192003883	WITHOUT_CLASSIFICATION	0.001573880799611822	DESIGN
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999997765276308	WITHOUT_CLASSIFICATION	2.2347236914987432E-7	DESIGN
// RubySocket	WITHOUT_CLASSIFICATION	0.999681129715181	WITHOUT_CLASSIFICATION	3.188702848190217E-4	DESIGN
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9994026345567587	WITHOUT_CLASSIFICATION	5.973654432412627E-4	DESIGN
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999997874271321	WITHOUT_CLASSIFICATION	2.1257286779218127E-7	DESIGN
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999932924692926	WITHOUT_CLASSIFICATION	6.707530707362622E-6	DESIGN
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.999996557459887	WITHOUT_CLASSIFICATION	3.442540113041314E-6	DESIGN
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999998847656879	WITHOUT_CLASSIFICATION	1.1523431212900142E-7	DESIGN
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9997126807724649	WITHOUT_CLASSIFICATION	2.8731922753509923E-4	DESIGN
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9999944136443404	WITHOUT_CLASSIFICATION	5.586355659664361E-6	DESIGN
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9978552659831601	WITHOUT_CLASSIFICATION	0.0021447340168398634	DESIGN
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999481497518143	WITHOUT_CLASSIFICATION	5.18502481856067E-5	DESIGN
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999734535043924	WITHOUT_CLASSIFICATION	2.654649560766288E-5	DESIGN
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9999806999639138	WITHOUT_CLASSIFICATION	1.9300036086219182E-5	DESIGN
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999146477603972	WITHOUT_CLASSIFICATION	8.535223960271497E-5	DESIGN
// be dead	WITHOUT_CLASSIFICATION	0.9953421771531515	WITHOUT_CLASSIFICATION	0.00465782284684853	DESIGN
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.999398269888211	WITHOUT_CLASSIFICATION	6.017301117888695E-4	DESIGN
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9998160846071127	WITHOUT_CLASSIFICATION	1.8391539288728227E-4	DESIGN
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.999944852135394	WITHOUT_CLASSIFICATION	5.514786460593238E-5	DESIGN
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.999999523142788	WITHOUT_CLASSIFICATION	4.76857212125461E-7	DESIGN
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999997294041668	WITHOUT_CLASSIFICATION	2.705958331467549E-7	DESIGN
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999999033252932	WITHOUT_CLASSIFICATION	9.667470678001163E-8	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999890156777462	WITHOUT_CLASSIFICATION	1.0984322253760293E-5	DESIGN
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.959895930600157	WITHOUT_CLASSIFICATION	0.04010406939984305	DESIGN
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9994098076601201	WITHOUT_CLASSIFICATION	5.901923398799331E-4	DESIGN
// main body	WITHOUT_CLASSIFICATION	0.9999993035795072	WITHOUT_CLASSIFICATION	6.964204928401993E-7	DESIGN
// return jump handling	WITHOUT_CLASSIFICATION	0.9999705297652374	WITHOUT_CLASSIFICATION	2.947023476257291E-5	DESIGN
// finally	WITHOUT_CLASSIFICATION	0.9999920987436306	WITHOUT_CLASSIFICATION	7.901256369348383E-6	DESIGN
// return result if we're still good	WITHOUT_CLASSIFICATION	0.999999185715621	WITHOUT_CLASSIFICATION	8.142843789668436E-7	DESIGN
// redo jump handling	WITHOUT_CLASSIFICATION	0.999961792678166	WITHOUT_CLASSIFICATION	3.820732183407511E-5	DESIGN
// clear the redo	WITHOUT_CLASSIFICATION	0.9999948671229133	WITHOUT_CLASSIFICATION	5.132877086594545E-6	DESIGN
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999999538557954	WITHOUT_CLASSIFICATION	4.6144204509531424E-8	DESIGN
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9999935188524889	WITHOUT_CLASSIFICATION	6.481147511190371E-6	DESIGN
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999980529155091	WITHOUT_CLASSIFICATION	1.947084490771839E-6	DESIGN
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.998126331502086	WITHOUT_CLASSIFICATION	0.001873668497914018	DESIGN
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999999871844562	WITHOUT_CLASSIFICATION	1.2815543850810233E-8	DESIGN
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9999987204982315	WITHOUT_CLASSIFICATION	1.2795017685087342E-6	DESIGN
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9999847667271275	WITHOUT_CLASSIFICATION	1.5233272872348411E-5	DESIGN
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9996720002316788	WITHOUT_CLASSIFICATION	3.279997683212462E-4	DESIGN
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999990382524523	WITHOUT_CLASSIFICATION	9.617475477639706E-7	DESIGN
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999990382524523	WITHOUT_CLASSIFICATION	9.617475477639706E-7	DESIGN
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999800639724654	WITHOUT_CLASSIFICATION	1.9936027534606506E-5	DESIGN
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999940911860277	WITHOUT_CLASSIFICATION	5.908813972275885E-6	DESIGN
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9999978496666745	WITHOUT_CLASSIFICATION	2.150333325537067E-6	DESIGN
// return	WITHOUT_CLASSIFICATION	0.9999646028628584	WITHOUT_CLASSIFICATION	3.5397137141697196E-5	DESIGN
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999413781577656	WITHOUT_CLASSIFICATION	5.862184223431541E-5	DESIGN
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999996101245109	WITHOUT_CLASSIFICATION	3.898754891175313E-7	DESIGN
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999743673578434	WITHOUT_CLASSIFICATION	2.5632642156518442E-5	DESIGN
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999991886488115	WITHOUT_CLASSIFICATION	8.113511885259884E-7	DESIGN
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999871790326874	WITHOUT_CLASSIFICATION	1.2820967312684614E-5	DESIGN
// tc	WITHOUT_CLASSIFICATION	0.9999402313690395	WITHOUT_CLASSIFICATION	5.976863096042237E-5	DESIGN
// self // name	WITHOUT_CLASSIFICATION	0.9999860310226818	WITHOUT_CLASSIFICATION	1.3968977318240224E-5	DESIGN
// no args	WITHOUT_CLASSIFICATION	0.9999350097110004	WITHOUT_CLASSIFICATION	6.499028899967268E-5	DESIGN
// variable args with block	WITHOUT_CLASSIFICATION	0.9999950011979061	WITHOUT_CLASSIFICATION	4.998802093917018E-6	DESIGN
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999990238190609	WITHOUT_CLASSIFICATION	9.761809390529644E-7	DESIGN
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999956009287857	WITHOUT_CLASSIFICATION	4.399071214312462E-6	DESIGN
// one arg with block	WITHOUT_CLASSIFICATION	0.9999985480903533	WITHOUT_CLASSIFICATION	1.4519096467166465E-6	DESIGN
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.999997602955595	WITHOUT_CLASSIFICATION	2.3970444050174956E-6	DESIGN
// two args with block	WITHOUT_CLASSIFICATION	0.999989618674717	WITHOUT_CLASSIFICATION	1.0381325282972776E-5	DESIGN
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.999985668211037	WITHOUT_CLASSIFICATION	1.4331788963025395E-5	DESIGN
// three args with block	WITHOUT_CLASSIFICATION	0.9999944132265584	WITHOUT_CLASSIFICATION	5.586773441558652E-6	DESIGN
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999949258526598	WITHOUT_CLASSIFICATION	5.074147340268789E-6	DESIGN
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999997728119382	WITHOUT_CLASSIFICATION	2.2718806178832993E-7	DESIGN
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9996400902303969	WITHOUT_CLASSIFICATION	3.5990976960305847E-4	DESIGN
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9997311041920903	WITHOUT_CLASSIFICATION	2.688958079096936E-4	DESIGN
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999955955971767	WITHOUT_CLASSIFICATION	4.404402823307567E-6	DESIGN
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999791977139598	WITHOUT_CLASSIFICATION	2.0802286040148573E-5	DESIGN
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.999990836563157	WITHOUT_CLASSIFICATION	9.163436842850425E-6	DESIGN
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999989063721908	WITHOUT_CLASSIFICATION	1.0936278092094786E-6	DESIGN
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999999966512056	WITHOUT_CLASSIFICATION	3.348794214665694E-9	DESIGN
// static invocation	WITHOUT_CLASSIFICATION	0.9999850827007306	WITHOUT_CLASSIFICATION	1.4917299269531296E-5	DESIGN
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999998481899763	WITHOUT_CLASSIFICATION	1.51810023650101E-7	DESIGN
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999956327466789	WITHOUT_CLASSIFICATION	4.367253321076332E-6	DESIGN
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9997351020583503	WITHOUT_CLASSIFICATION	2.648979416497448E-4	DESIGN
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9999924712161643	WITHOUT_CLASSIFICATION	7.528783835688793E-6	DESIGN
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.998126331502086	WITHOUT_CLASSIFICATION	0.001873668497914018	DESIGN
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9999999199369084	WITHOUT_CLASSIFICATION	8.006309162587272E-8	DESIGN
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999982491764228	WITHOUT_CLASSIFICATION	1.750823577317339E-6	DESIGN
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999982491764228	WITHOUT_CLASSIFICATION	1.750823577317339E-6	DESIGN
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9646603418624774	WITHOUT_CLASSIFICATION	0.03533965813752271	DESIGN
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9947725490096258	WITHOUT_CLASSIFICATION	0.005227450990374307	DESIGN
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999966890062849	WITHOUT_CLASSIFICATION	3.31099371519916E-6	DESIGN
// never reached	WITHOUT_CLASSIFICATION	0.9999577869760711	WITHOUT_CLASSIFICATION	4.2213023928970564E-5	DESIGN
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9999864517159246	WITHOUT_CLASSIFICATION	1.3548284075417513E-5	DESIGN
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.999997229837729	WITHOUT_CLASSIFICATION	2.770162271106338E-6	DESIGN
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9999903010754903	WITHOUT_CLASSIFICATION	9.698924509840825E-6	DESIGN
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9999876765865513	WITHOUT_CLASSIFICATION	1.2323413448762006E-5	DESIGN
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9999991125155012	WITHOUT_CLASSIFICATION	8.8748449878433E-7	DESIGN
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9999973355268806	WITHOUT_CLASSIFICATION	2.664473119375618E-6	DESIGN
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9999960518885368	WITHOUT_CLASSIFICATION	3.948111463246032E-6	DESIGN
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9999891031917365	WITHOUT_CLASSIFICATION	1.0896808263523987E-5	DESIGN
// promise to implement N	WITHOUT_CLASSIFICATION	0.9999537340733883	WITHOUT_CLASSIFICATION	4.6265926611715815E-5	DESIGN
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9999895269132115	WITHOUT_CLASSIFICATION	1.0473086788370527E-5	DESIGN
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9968053865620382	WITHOUT_CLASSIFICATION	0.0031946134379618315	DESIGN
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9917843009184795	WITHOUT_CLASSIFICATION	0.008215699081520473	DESIGN
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9999899438174048	WITHOUT_CLASSIFICATION	1.005618259528755E-5	DESIGN
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9999916508145943	WITHOUT_CLASSIFICATION	8.349185405737762E-6	DESIGN
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9999980162016454	WITHOUT_CLASSIFICATION	1.983798354697771E-6	DESIGN
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9999940441035368	WITHOUT_CLASSIFICATION	5.955896463183484E-6	DESIGN
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9999907226240394	WITHOUT_CLASSIFICATION	9.27737596063724E-6	DESIGN
// promise to implement three	WITHOUT_CLASSIFICATION	0.9998928516211786	WITHOUT_CLASSIFICATION	1.0714837882147566E-4	DESIGN
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.99999847592485	WITHOUT_CLASSIFICATION	1.5240751499450634E-6	DESIGN
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999985173765941	WITHOUT_CLASSIFICATION	1.4826234059431145E-6	DESIGN
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999999330724991	WITHOUT_CLASSIFICATION	6.692750094257355E-8	DESIGN
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999371223636002	WITHOUT_CLASSIFICATION	6.287763639973642E-5	DESIGN
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.999999996350618	WITHOUT_CLASSIFICATION	3.6493820880467615E-9	DESIGN
// create constructor	WITHOUT_CLASSIFICATION	0.9998908350271388	WITHOUT_CLASSIFICATION	1.0916497286114856E-4	DESIGN
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.999999955055964	WITHOUT_CLASSIFICATION	4.494403592387012E-8	DESIGN
// end constructor	WITHOUT_CLASSIFICATION	0.9998260205991532	WITHOUT_CLASSIFICATION	1.739794008467262E-4	DESIGN
// start setup method	WITHOUT_CLASSIFICATION	0.9998829498762415	WITHOUT_CLASSIFICATION	1.170501237585608E-4	DESIGN
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999903962416582	WITHOUT_CLASSIFICATION	9.603758341738266E-6	DESIGN
// set Ruby	WITHOUT_CLASSIFICATION	0.9999343555045408	WITHOUT_CLASSIFICATION	6.5644495459223E-5	DESIGN
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.999998926206036	WITHOUT_CLASSIFICATION	1.0737939639718983E-6	DESIGN
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9998847154767678	WITHOUT_CLASSIFICATION	1.1528452323222642E-4	DESIGN
// get current context	WITHOUT_CLASSIFICATION	0.999992221408845	WITHOUT_CLASSIFICATION	7.77859115490142E-6	DESIGN
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999995527607011	WITHOUT_CLASSIFICATION	4.4723929883033864E-7	DESIGN
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999371223636002	WITHOUT_CLASSIFICATION	6.287763639973642E-5	DESIGN
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.999999996350618	WITHOUT_CLASSIFICATION	3.6493820880467615E-9	DESIGN
// create constructor	WITHOUT_CLASSIFICATION	0.9998908350271388	WITHOUT_CLASSIFICATION	1.0916497286114856E-4	DESIGN
// end constructor	WITHOUT_CLASSIFICATION	0.9998260205991532	WITHOUT_CLASSIFICATION	1.739794008467262E-4	DESIGN
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999915375230359	WITHOUT_CLASSIFICATION	8.462476964029949E-6	DESIGN
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999986999733228	WITHOUT_CLASSIFICATION	1.3000266770841126E-6	DESIGN
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9998836066372586	WITHOUT_CLASSIFICATION	1.1639336274140347E-4	DESIGN
// load null block	WITHOUT_CLASSIFICATION	0.9999999002218654	WITHOUT_CLASSIFICATION	9.977813463977855E-8	DESIGN
// invoke method	WITHOUT_CLASSIFICATION	0.9998709715727833	WITHOUT_CLASSIFICATION	1.2902842721677573E-4	DESIGN
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999999984271772	WITHOUT_CLASSIFICATION	1.5728228105207285E-9	DESIGN
// end setup method	WITHOUT_CLASSIFICATION	0.9999825037497053	WITHOUT_CLASSIFICATION	1.7496250294700052E-5	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9999884757464952	WITHOUT_CLASSIFICATION	1.1524253504913515E-5	DESIGN
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999824541901672	WITHOUT_CLASSIFICATION	1.7545809832915875E-5	DESIGN
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999997462565893	WITHOUT_CLASSIFICATION	2.537434106994421E-7	DESIGN
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999999770527189	WITHOUT_CLASSIFICATION	2.2947281112364486E-8	DESIGN
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999993225116668	WITHOUT_CLASSIFICATION	6.774883331022772E-7	DESIGN
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999294974745871	WITHOUT_CLASSIFICATION	7.050252541283329E-5	DESIGN
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9998830429602427	WITHOUT_CLASSIFICATION	1.1695703975737019E-4	DESIGN
// store it	WITHOUT_CLASSIFICATION	0.9999978132632256	WITHOUT_CLASSIFICATION	2.1867367744767232E-6	DESIGN
// end of try block	WITHOUT_CLASSIFICATION	0.999997096952433	WITHOUT_CLASSIFICATION	2.9030475670778816E-6	DESIGN
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999184925555759	WITHOUT_CLASSIFICATION	8.150744442412588E-5	DESIGN
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999986255351885	WITHOUT_CLASSIFICATION	1.3744648115476888E-6	DESIGN
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999991080459208	WITHOUT_CLASSIFICATION	8.919540790946527E-7	DESIGN
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999995527607011	WITHOUT_CLASSIFICATION	4.4723929883033864E-7	DESIGN
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999986999733228	WITHOUT_CLASSIFICATION	1.3000266770841126E-6	DESIGN
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9998836066372586	WITHOUT_CLASSIFICATION	1.1639336274140347E-4	DESIGN
// invoke method	WITHOUT_CLASSIFICATION	0.9998709715727833	WITHOUT_CLASSIFICATION	1.2902842721677573E-4	DESIGN
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999999984271772	WITHOUT_CLASSIFICATION	1.5728228105207285E-9	DESIGN
// end setup method	WITHOUT_CLASSIFICATION	0.9999825037497053	WITHOUT_CLASSIFICATION	1.7496250294700052E-5	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9999884757464952	WITHOUT_CLASSIFICATION	1.1524253504913515E-5	DESIGN
// create the class	WITHOUT_CLASSIFICATION	0.9999969043533524	WITHOUT_CLASSIFICATION	3.0956466477136566E-6	DESIGN
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9999609062957667	WITHOUT_CLASSIFICATION	3.90937042333393E-5	DESIGN
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999999773392568	WITHOUT_CLASSIFICATION	2.266074319008426E-8	DESIGN
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999999938913867	WITHOUT_CLASSIFICATION	6.108613165866188E-9	DESIGN
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999961666719391	WITHOUT_CLASSIFICATION	3.833328060835676E-6	DESIGN
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999961666719391	WITHOUT_CLASSIFICATION	3.833328060835676E-6	DESIGN
// setup the class	WITHOUT_CLASSIFICATION	0.999995371964542	WITHOUT_CLASSIFICATION	4.628035458000381E-6	DESIGN
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999988724857946	WITHOUT_CLASSIFICATION	1.1275142054217008E-6	DESIGN
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9996802820451787	WITHOUT_CLASSIFICATION	3.197179548214361E-4	DESIGN
// probably a primitive	WITHOUT_CLASSIFICATION	0.994086274498741	WITHOUT_CLASSIFICATION	0.005913725501258965	DESIGN
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999993511838827	WITHOUT_CLASSIFICATION	6.488161173613686E-7	DESIGN
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9998511497240643	WITHOUT_CLASSIFICATION	1.4885027593575218E-4	DESIGN
// set the full name	WITHOUT_CLASSIFICATION	0.9999944716671451	WITHOUT_CLASSIFICATION	5.52833285495124E-6	DESIGN
// include all interfaces	WITHOUT_CLASSIFICATION	0.999998597202012	WITHOUT_CLASSIFICATION	1.4027979880544365E-6	DESIGN
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999997424138916	WITHOUT_CLASSIFICATION	2.5758610850026135E-7	DESIGN
// add array construction methods	WITHOUT_CLASSIFICATION	0.9999934631727219	WITHOUT_CLASSIFICATION	6.536827278043407E-6	DESIGN
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9871248537756298	WITHOUT_CLASSIFICATION	0.012875146224370297	DESIGN
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999959676779879	WITHOUT_CLASSIFICATION	4.03232201208969E-6	DESIGN
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999992396906103	WITHOUT_CLASSIFICATION	7.603093896531233E-7	DESIGN
// too much array creation!	WITHOUT_CLASSIFICATION	0.9998275655947122	WITHOUT_CLASSIFICATION	1.7243440528784523E-4	DESIGN
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999984860303676	WITHOUT_CLASSIFICATION	1.5139696323780435E-6	DESIGN
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999998825910625	WITHOUT_CLASSIFICATION	1.1740893734725979E-7	DESIGN
// add all static variables	WITHOUT_CLASSIFICATION	0.9995608672070619	WITHOUT_CLASSIFICATION	4.3913279293806824E-4	DESIGN
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999993327808497	WITHOUT_CLASSIFICATION	6.672191501279209E-7	DESIGN
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999947243065248	WITHOUT_CLASSIFICATION	5.275693475206722E-6	DESIGN
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.7754047867410153	WITHOUT_CLASSIFICATION	0.22459521325898468	DESIGN
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.8105962910276796	DESIGN	0.1894037089723204	WITHOUT_CLASSIFICATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999967133646005	WITHOUT_CLASSIFICATION	3.286635399392678E-6	DESIGN
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999967541240385	WITHOUT_CLASSIFICATION	3.245875961547497E-6	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9999882491122357	DESIGN	1.175088776427251E-5	WITHOUT_CLASSIFICATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999997018134059	WITHOUT_CLASSIFICATION	2.9818659408117956E-7	DESIGN
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999894110738566	WITHOUT_CLASSIFICATION	1.0588926143289446E-5	DESIGN
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999999918830782	WITHOUT_CLASSIFICATION	8.116921832168112E-9	DESIGN
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.999960229437808	WITHOUT_CLASSIFICATION	3.977056219200197E-5	DESIGN
// line 326	WITHOUT_CLASSIFICATION	0.9999989006646035	WITHOUT_CLASSIFICATION	1.0993353964439917E-6	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999997018134059	WITHOUT_CLASSIFICATION	2.9818659408117956E-7	DESIGN
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999894110738566	WITHOUT_CLASSIFICATION	1.0588926143289446E-5	DESIGN
// too much array creation!	WITHOUT_CLASSIFICATION	0.9998275655947122	WITHOUT_CLASSIFICATION	1.7243440528784523E-4	DESIGN
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999879507952342	WITHOUT_CLASSIFICATION	1.204920476585061E-5	DESIGN
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999986809581205	WITHOUT_CLASSIFICATION	1.3190418794960648E-6	DESIGN
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9999894985640854	WITHOUT_CLASSIFICATION	1.0501435914729389E-5	DESIGN
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9980591030100427	WITHOUT_CLASSIFICATION	0.0019408969899572916	DESIGN
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9920187164599796	WITHOUT_CLASSIFICATION	0.007981283540020371	DESIGN
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999994061034252	WITHOUT_CLASSIFICATION	5.938965748278282E-7	DESIGN
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9999502089599194	WITHOUT_CLASSIFICATION	4.9791040080543E-5	DESIGN
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999984312732643	WITHOUT_CLASSIFICATION	1.5687267356774769E-6	DESIGN
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.8862753141351447	DESIGN	0.11372468586485533	WITHOUT_CLASSIFICATION
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.998058387598143	WITHOUT_CLASSIFICATION	0.0019416124018570634	DESIGN
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999998064534897	WITHOUT_CLASSIFICATION	1.9354651039598761E-7	DESIGN
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9998805464488553	WITHOUT_CLASSIFICATION	1.1945355114479534E-4	DESIGN
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9999999951411506	WITHOUT_CLASSIFICATION	4.85884939600098E-9	DESIGN
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999962177571649	WITHOUT_CLASSIFICATION	3.7822428352565985E-6	DESIGN
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9831659022754041	WITHOUT_CLASSIFICATION	0.01683409772459584	DESIGN
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9999982818936473	WITHOUT_CLASSIFICATION	1.7181063527677423E-6	DESIGN
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9999987026692886	WITHOUT_CLASSIFICATION	1.2973307115104908E-6	DESIGN
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9971623729874378	WITHOUT_CLASSIFICATION	0.0028376270125621446	DESIGN
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999999013559653	WITHOUT_CLASSIFICATION	9.86440346759622E-8	DESIGN
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9708425120627275	WITHOUT_CLASSIFICATION	0.029157487937272453	DESIGN
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.999991584999685	WITHOUT_CLASSIFICATION	8.415000314925278E-6	DESIGN
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9998689713838763	WITHOUT_CLASSIFICATION	1.3102861612360715E-4	DESIGN
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999926805273585	WITHOUT_CLASSIFICATION	7.319472641561195E-6	DESIGN
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9997920502770422	WITHOUT_CLASSIFICATION	2.0794972295774662E-4	DESIGN
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.99999936554669	WITHOUT_CLASSIFICATION	6.34453310088257E-7	DESIGN
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999919027163913	WITHOUT_CLASSIFICATION	8.097283608703087E-6	DESIGN
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9225716722039277	WITHOUT_CLASSIFICATION	0.07742832779607225	DESIGN
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.8386712025389287	WITHOUT_CLASSIFICATION	0.1613287974610713	DESIGN
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9975407955778928	WITHOUT_CLASSIFICATION	0.0024592044221071925	DESIGN
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999813422701933	WITHOUT_CLASSIFICATION	1.865772980676293E-5	DESIGN
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999965394723985	WITHOUT_CLASSIFICATION	3.460527601602928E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9997746607142629	WITHOUT_CLASSIFICATION	2.2533928573699902E-4	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9997746607142629	WITHOUT_CLASSIFICATION	2.2533928573699902E-4	DESIGN
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999992396906103	WITHOUT_CLASSIFICATION	7.603093896531233E-7	DESIGN
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9995937974292174	WITHOUT_CLASSIFICATION	4.062025707826145E-4	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999970461489629	WITHOUT_CLASSIFICATION	2.953851037053161E-6	DESIGN
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9997739525756997	WITHOUT_CLASSIFICATION	2.2604742430039338E-4	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999998237844129	WITHOUT_CLASSIFICATION	1.7621558705838776E-7	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999998237844129	WITHOUT_CLASSIFICATION	1.7621558705838776E-7	DESIGN
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999998707884951	WITHOUT_CLASSIFICATION	1.2921150489297856E-7	DESIGN
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999719170624308	WITHOUT_CLASSIFICATION	2.8082937569161803E-5	DESIGN
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999999617939241	WITHOUT_CLASSIFICATION	3.820607588951253E-8	DESIGN
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999708949982135	WITHOUT_CLASSIFICATION	2.910500178660815E-5	DESIGN
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9978467586162564	WITHOUT_CLASSIFICATION	0.0021532413837435805	DESIGN
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999977446551478	WITHOUT_CLASSIFICATION	2.255344852182336E-6	DESIGN
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999998642809111	WITHOUT_CLASSIFICATION	1.357190888241455E-7	DESIGN
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999984130976416	WITHOUT_CLASSIFICATION	1.5869023583492553E-6	DESIGN
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999999653837612	WITHOUT_CLASSIFICATION	3.461623879682665E-8	DESIGN
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999677921476818	WITHOUT_CLASSIFICATION	3.220785231818211E-5	DESIGN
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999999714391986	WITHOUT_CLASSIFICATION	2.856080138373725E-8	DESIGN
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999982689109729	WITHOUT_CLASSIFICATION	1.7310890272010786E-6	DESIGN
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999994907596217	WITHOUT_CLASSIFICATION	5.092403783306315E-7	DESIGN
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9995569343516624	WITHOUT_CLASSIFICATION	4.43065648337672E-4	DESIGN
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9988442995050849	WITHOUT_CLASSIFICATION	0.001155700494915129	DESIGN
// something?	WITHOUT_CLASSIFICATION	0.9670876131644455	WITHOUT_CLASSIFICATION	0.03291238683555457	DESIGN
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999839133351561	WITHOUT_CLASSIFICATION	1.608666484383883E-5	DESIGN
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999839133351561	WITHOUT_CLASSIFICATION	1.608666484383883E-5	DESIGN
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999999592361396	WITHOUT_CLASSIFICATION	4.0763860452639705E-8	DESIGN
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999999592361396	WITHOUT_CLASSIFICATION	4.0763860452639705E-8	DESIGN
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999999482273745	WITHOUT_CLASSIFICATION	5.1772625479832544E-8	DESIGN
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999067513803515	WITHOUT_CLASSIFICATION	9.324861964858875E-5	DESIGN
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999430474552959	WITHOUT_CLASSIFICATION	5.695254470420318E-5	DESIGN
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9999998660320685	WITHOUT_CLASSIFICATION	1.339679314755329E-7	DESIGN
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999897478314145	WITHOUT_CLASSIFICATION	1.0252168585505534E-5	DESIGN
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999989513030444	WITHOUT_CLASSIFICATION	1.048696955606248E-6	DESIGN
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999998488843199	WITHOUT_CLASSIFICATION	1.5111568000277556E-7	DESIGN
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999982689109729	WITHOUT_CLASSIFICATION	1.7310890272010786E-6	DESIGN
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999994907596217	WITHOUT_CLASSIFICATION	5.092403783306315E-7	DESIGN
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9988442995050849	WITHOUT_CLASSIFICATION	0.001155700494915129	DESIGN
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999759202895929	WITHOUT_CLASSIFICATION	2.4079710407066524E-5	DESIGN
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9995323871008104	WITHOUT_CLASSIFICATION	4.676128991895961E-4	DESIGN
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999225319779488	WITHOUT_CLASSIFICATION	7.746802205125287E-5	DESIGN
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9999327315793224	WITHOUT_CLASSIFICATION	6.726842067753535E-5	DESIGN
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9961748200109909	WITHOUT_CLASSIFICATION	0.0038251799890091256	DESIGN
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9970617840503695	WITHOUT_CLASSIFICATION	0.0029382159496303766	DESIGN
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999999373674909	WITHOUT_CLASSIFICATION	6.263250909378837E-8	DESIGN
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999985682408087	WITHOUT_CLASSIFICATION	1.4317591913359291E-6	DESIGN
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999999879912972	WITHOUT_CLASSIFICATION	1.2008702751379068E-8	DESIGN
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.99999999476299	WITHOUT_CLASSIFICATION	5.237010001357371E-9	DESIGN
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9873492705435716	WITHOUT_CLASSIFICATION	0.012650729456428478	DESIGN
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999819836640071	WITHOUT_CLASSIFICATION	1.8016335992879693E-5	DESIGN
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999990078844487	WITHOUT_CLASSIFICATION	9.921155512780942E-7	DESIGN
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9998451179164578	WITHOUT_CLASSIFICATION	1.5488208354229877E-4	DESIGN
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9645446922732896	WITHOUT_CLASSIFICATION	0.03545530772671034	DESIGN
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999979678364582	WITHOUT_CLASSIFICATION	2.0321635417504365E-6	DESIGN
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999958814565897	WITHOUT_CLASSIFICATION	4.118543410253874E-6	DESIGN
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.999991764780294	WITHOUT_CLASSIFICATION	8.235219706031234E-6	DESIGN
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999995512817046	WITHOUT_CLASSIFICATION	4.4871829543192314E-7	DESIGN
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999984656152481	WITHOUT_CLASSIFICATION	1.534384751970702E-6	DESIGN
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.999982446018108	WITHOUT_CLASSIFICATION	1.755398189187425E-5	DESIGN
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999944546654712	WITHOUT_CLASSIFICATION	5.545334528769168E-6	DESIGN
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9999697214395268	WITHOUT_CLASSIFICATION	3.0278560473270243E-5	DESIGN
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999978354669842	WITHOUT_CLASSIFICATION	2.1645330157650882E-6	DESIGN
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999993250833116	WITHOUT_CLASSIFICATION	6.749166884348574E-7	DESIGN
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.999999761013809	WITHOUT_CLASSIFICATION	2.389861909533742E-7	DESIGN
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999998436929813	WITHOUT_CLASSIFICATION	1.5630701859504706E-7	DESIGN
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9999353093056396	WITHOUT_CLASSIFICATION	6.46906943604304E-5	DESIGN
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999992028241969	WITHOUT_CLASSIFICATION	7.971758030226105E-7	DESIGN
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9999882472474504	WITHOUT_CLASSIFICATION	1.1752752549508334E-5	DESIGN
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9999828367573893	WITHOUT_CLASSIFICATION	1.7163242610695986E-5	DESIGN
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9992016112709803	WITHOUT_CLASSIFICATION	7.983887290197024E-4	DESIGN
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9986499560471603	WITHOUT_CLASSIFICATION	0.001350043952839622	DESIGN
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999977743655522	WITHOUT_CLASSIFICATION	2.2256344477491516E-6	DESIGN
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999994898166527	WITHOUT_CLASSIFICATION	5.101833473418985E-7	DESIGN
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9999933459717467	WITHOUT_CLASSIFICATION	6.654028253315606E-6	DESIGN
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999983029032132	WITHOUT_CLASSIFICATION	1.6970967867603959E-6	DESIGN
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.999997991491172	WITHOUT_CLASSIFICATION	2.008508827959635E-6	DESIGN
/* expected */	WITHOUT_CLASSIFICATION	0.9999940279309736	WITHOUT_CLASSIFICATION	5.97206902649504E-6	DESIGN
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.999883539414488	WITHOUT_CLASSIFICATION	1.1646058551204416E-4	DESIGN
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999547697341394	WITHOUT_CLASSIFICATION	4.523026586056494E-5	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999970461489629	WITHOUT_CLASSIFICATION	2.953851037053161E-6	DESIGN
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999983029032132	WITHOUT_CLASSIFICATION	1.6970967867603959E-6	DESIGN
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9930725108847548	WITHOUT_CLASSIFICATION	0.006927489115245275	DESIGN
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9715872518003023	WITHOUT_CLASSIFICATION	0.02841274819969776	DESIGN
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9995724874037094	WITHOUT_CLASSIFICATION	4.275125962905869E-4	DESIGN
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999992909315262	WITHOUT_CLASSIFICATION	7.0906847382779E-7	DESIGN
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999992909315262	WITHOUT_CLASSIFICATION	7.0906847382779E-7	DESIGN
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.999522076433331	WITHOUT_CLASSIFICATION	4.7792356666885864E-4	DESIGN
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999990055422701	WITHOUT_CLASSIFICATION	9.944577299755806E-7	DESIGN
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.989084767567866	WITHOUT_CLASSIFICATION	0.010915232432133961	DESIGN
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999986472233888	WITHOUT_CLASSIFICATION	1.3527766112156617E-6	DESIGN
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9999563987761546	WITHOUT_CLASSIFICATION	4.360122384538596E-5	DESIGN
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999995848315789	WITHOUT_CLASSIFICATION	4.1516842118974747E-7	DESIGN
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9990676016621998	WITHOUT_CLASSIFICATION	9.323983378003094E-4	DESIGN
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9999986543339334	WITHOUT_CLASSIFICATION	1.3456660665684057E-6	DESIGN
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999969883392311	WITHOUT_CLASSIFICATION	3.011660768883375E-6	DESIGN
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999969883392311	WITHOUT_CLASSIFICATION	3.011660768883375E-6	DESIGN
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9998119893125583	WITHOUT_CLASSIFICATION	1.8801068744166271E-4	DESIGN
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999992747679943	WITHOUT_CLASSIFICATION	7.252320057690117E-7	DESIGN
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.999889625206252	WITHOUT_CLASSIFICATION	1.1037479374786614E-4	DESIGN
// must be a public method	WITHOUT_CLASSIFICATION	0.9987847698558759	WITHOUT_CLASSIFICATION	0.0012152301441240923	DESIGN
// must be a public class	WITHOUT_CLASSIFICATION	0.9993949029021992	WITHOUT_CLASSIFICATION	6.050970978008023E-4	DESIGN
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9998131512329052	WITHOUT_CLASSIFICATION	1.868487670948578E-4	DESIGN
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999979303129917	WITHOUT_CLASSIFICATION	2.0696870082856976E-6	DESIGN
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999926313157882	WITHOUT_CLASSIFICATION	7.368684211918344E-6	DESIGN
// no matching method found	WITHOUT_CLASSIFICATION	0.9996315016071995	WITHOUT_CLASSIFICATION	3.68498392800521E-4	DESIGN
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9999826662302013	WITHOUT_CLASSIFICATION	1.7333769798716198E-5	DESIGN
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9999949829852143	WITHOUT_CLASSIFICATION	5.017014785718539E-6	DESIGN
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999940905495623	WITHOUT_CLASSIFICATION	5.909450437579835E-6	DESIGN
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999996330307341	WITHOUT_CLASSIFICATION	3.6696926594438243E-7	DESIGN
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.999993252801935	WITHOUT_CLASSIFICATION	6.747198064987627E-6	DESIGN
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.999993252801935	WITHOUT_CLASSIFICATION	6.747198064987627E-6	DESIGN
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999932248413052	WITHOUT_CLASSIFICATION	6.775158694879222E-6	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9999884757464952	WITHOUT_CLASSIFICATION	1.1524253504913515E-5	DESIGN
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9999999666811611	WITHOUT_CLASSIFICATION	3.331883890287437E-8	DESIGN
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999986374360252	WITHOUT_CLASSIFICATION	1.3625639748148851E-6	DESIGN
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999993791746649	WITHOUT_CLASSIFICATION	6.208253350523507E-7	DESIGN
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9996660062977811	WITHOUT_CLASSIFICATION	3.3399370221889977E-4	DESIGN
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999786488021287	WITHOUT_CLASSIFICATION	2.1351197871315832E-5	DESIGN
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999999637903813	WITHOUT_CLASSIFICATION	3.620961874912056E-8	DESIGN
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.999998064939559	WITHOUT_CLASSIFICATION	1.9350604409804592E-6	DESIGN
/* package scope */	WITHOUT_CLASSIFICATION	0.9988905919570199	WITHOUT_CLASSIFICATION	0.0011094080429801324	DESIGN
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999995922981689	WITHOUT_CLASSIFICATION	4.077018311292405E-7	DESIGN
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999981631086845	WITHOUT_CLASSIFICATION	1.8368913154431862E-6	DESIGN
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9999997900306529	WITHOUT_CLASSIFICATION	2.0996934721623158E-7	DESIGN
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999421615900994	WITHOUT_CLASSIFICATION	5.783840990066838E-5	DESIGN
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999900340229545	WITHOUT_CLASSIFICATION	9.965977045481844E-6	DESIGN
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999987741916554	WITHOUT_CLASSIFICATION	1.2258083445741468E-6	DESIGN
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999993223061207	WITHOUT_CLASSIFICATION	6.776938792180926E-7	DESIGN
// statically initialized below	WITHOUT_CLASSIFICATION	0.9997602718424669	WITHOUT_CLASSIFICATION	2.3972815753302434E-4	DESIGN
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999873614820624	WITHOUT_CLASSIFICATION	1.2638517937672174E-5	DESIGN
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999940902725055	WITHOUT_CLASSIFICATION	5.909727494555002E-6	DESIGN
// should not happen!	WITHOUT_CLASSIFICATION	0.9997299331350579	WITHOUT_CLASSIFICATION	2.7006686494213036E-4	DESIGN
// start class	WITHOUT_CLASSIFICATION	0.9999880206091065	WITHOUT_CLASSIFICATION	1.1979390893538776E-5	DESIGN
// make getter for handler	WITHOUT_CLASSIFICATION	0.9999418546153571	WITHOUT_CLASSIFICATION	5.81453846428243E-5	DESIGN
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999006309811965	WITHOUT_CLASSIFICATION	9.93690188035183E-5	DESIGN
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9942069962828651	WITHOUT_CLASSIFICATION	0.005793003717134842	DESIGN
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9998663269696705	WITHOUT_CLASSIFICATION	1.3367303032950126E-4	DESIGN
// create static private method field	WITHOUT_CLASSIFICATION	0.999890367043544	WITHOUT_CLASSIFICATION	1.0963295645596969E-4	DESIGN
// load static empty array	WITHOUT_CLASSIFICATION	0.9999829483193106	WITHOUT_CLASSIFICATION	1.7051680689408112E-5	DESIGN
// box arguments	WITHOUT_CLASSIFICATION	0.9999990228681643	WITHOUT_CLASSIFICATION	9.771318357250861E-7	DESIGN
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9992549763615974	WITHOUT_CLASSIFICATION	7.450236384025933E-4	DESIGN
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999991351168266	WITHOUT_CLASSIFICATION	8.648831733792657E-7	DESIGN
// do a void return	WITHOUT_CLASSIFICATION	0.9999252814981129	WITHOUT_CLASSIFICATION	7.471850188710193E-5	DESIGN
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999993666304221	WITHOUT_CLASSIFICATION	6.333695779476866E-7	DESIGN
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9999039370513825	WITHOUT_CLASSIFICATION	9.606294861748655E-5	DESIGN
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9999898698593964	WITHOUT_CLASSIFICATION	1.0130140603468824E-5	DESIGN
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999992013309692	WITHOUT_CLASSIFICATION	7.986690307613864E-7	DESIGN
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999989307402867	WITHOUT_CLASSIFICATION	1.0692597134032692E-6	DESIGN
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999979704769798	WITHOUT_CLASSIFICATION	2.029523020232232E-6	DESIGN
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999999993068447	WITHOUT_CLASSIFICATION	6.931554306534876E-10	DESIGN
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999994153606845	WITHOUT_CLASSIFICATION	5.846393156216188E-7	DESIGN
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999430312608925	WITHOUT_CLASSIFICATION	5.6968739107472464E-5	DESIGN
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9999201445618581	WITHOUT_CLASSIFICATION	7.985543814187346E-5	DESIGN
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9996424072655659	WITHOUT_CLASSIFICATION	3.575927344341353E-4	DESIGN
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9121543385829071	WITHOUT_CLASSIFICATION	0.08784566141709294	DESIGN
/* NUL */	WITHOUT_CLASSIFICATION	0.9999470283724057	WITHOUT_CLASSIFICATION	5.297162759439073E-5	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999995152594854	WITHOUT_CLASSIFICATION	4.84740514650512E-7	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999998952532093	WITHOUT_CLASSIFICATION	1.047467906570861E-7	DESIGN
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999367651091767	WITHOUT_CLASSIFICATION	6.323489082325534E-5	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9994995920280559	WITHOUT_CLASSIFICATION	5.004079719439817E-4	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999997018134059	WITHOUT_CLASSIFICATION	2.9818659408117956E-7	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999997018134059	WITHOUT_CLASSIFICATION	2.9818659408117956E-7	DESIGN
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999992992833685	WITHOUT_CLASSIFICATION	7.007166315284432E-7	DESIGN
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999980357405261	WITHOUT_CLASSIFICATION	1.9642594738846648E-6	DESIGN
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999862556401213	WITHOUT_CLASSIFICATION	1.3744359878665828E-5	DESIGN
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.8673898186907495	WITHOUT_CLASSIFICATION	0.13261018130925042	DESIGN
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999999660492046	WITHOUT_CLASSIFICATION	3.3950795375965945E-8	DESIGN
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999999867055389	WITHOUT_CLASSIFICATION	1.329446122392782E-8	DESIGN
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9999748476145389	WITHOUT_CLASSIFICATION	2.515238546113344E-5	DESIGN
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999999998492564	WITHOUT_CLASSIFICATION	1.5074353558669594E-10	DESIGN
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.999998367680851	WITHOUT_CLASSIFICATION	1.6323191489964881E-6	DESIGN
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9998790262404887	WITHOUT_CLASSIFICATION	1.209737595112646E-4	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999932689739273	WITHOUT_CLASSIFICATION	6.731026072728924E-6	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999932689739273	WITHOUT_CLASSIFICATION	6.731026072728924E-6	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999932689739273	WITHOUT_CLASSIFICATION	6.731026072728924E-6	DESIGN
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999999992768634	WITHOUT_CLASSIFICATION	7.231366587235364E-10	DESIGN
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999979968016812	WITHOUT_CLASSIFICATION	2.003198318818209E-6	DESIGN
// Single node in list	WITHOUT_CLASSIFICATION	0.9997626869559872	WITHOUT_CLASSIFICATION	2.3731304401278716E-4	DESIGN
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999999969206096	WITHOUT_CLASSIFICATION	3.0793904785918393E-9	DESIGN
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999999969206096	WITHOUT_CLASSIFICATION	3.0793904785918393E-9	DESIGN
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999962715627583	WITHOUT_CLASSIFICATION	3.7284372418005915E-6	DESIGN
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999882733565463	WITHOUT_CLASSIFICATION	1.1726643453801623E-5	DESIGN
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999958068050622	WITHOUT_CLASSIFICATION	4.193194937859195E-6	DESIGN
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999997953152694	WITHOUT_CLASSIFICATION	2.0468473061293415E-7	DESIGN
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999021047778348	WITHOUT_CLASSIFICATION	9.789522216518588E-5	DESIGN
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9999948319605017	WITHOUT_CLASSIFICATION	5.168039498301707E-6	DESIGN
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999994476952562	WITHOUT_CLASSIFICATION	5.523047438734804E-7	DESIGN
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999654284749807	WITHOUT_CLASSIFICATION	3.457152501928563E-5	DESIGN
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999999970037983	WITHOUT_CLASSIFICATION	2.9962018460674752E-9	DESIGN
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999988415189659	WITHOUT_CLASSIFICATION	1.1584810340805444E-6	DESIGN
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999988415189659	WITHOUT_CLASSIFICATION	1.1584810340805444E-6	DESIGN
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999939198607077	WITHOUT_CLASSIFICATION	6.080139292257062E-6	DESIGN
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999254134310819	WITHOUT_CLASSIFICATION	7.458656891802571E-5	DESIGN
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999990056932897	WITHOUT_CLASSIFICATION	9.94306710355471E-7	DESIGN
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999824017096168	WITHOUT_CLASSIFICATION	1.7598290383246277E-5	DESIGN
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.999998939258319	WITHOUT_CLASSIFICATION	1.0607416810539092E-6	DESIGN
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999899275065869	WITHOUT_CLASSIFICATION	1.0072493413098986E-5	DESIGN
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999981975463277	WITHOUT_CLASSIFICATION	1.8024536723046085E-6	DESIGN
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999772451560263	WITHOUT_CLASSIFICATION	2.27548439738022E-5	DESIGN
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9998390495288316	WITHOUT_CLASSIFICATION	1.6095047116831748E-4	DESIGN
// POP	WITHOUT_CLASSIFICATION	0.9999734857373968	WITHOUT_CLASSIFICATION	2.651426260320363E-5	DESIGN
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9985162221852059	WITHOUT_CLASSIFICATION	0.0014837778147941399	DESIGN
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999951672221756	WITHOUT_CLASSIFICATION	4.83277782426657E-6	DESIGN
// SET_P	WITHOUT_CLASSIFICATION	0.9999460470489434	WITHOUT_CLASSIFICATION	5.395295105650031E-5	DESIGN
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999978903384186	WITHOUT_CLASSIFICATION	2.1096615813956726E-6	DESIGN
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9998785250169131	WITHOUT_CLASSIFICATION	1.2147498308686869E-4	DESIGN
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999995284798262	WITHOUT_CLASSIFICATION	4.7152017389815347E-7	DESIGN
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999999631377077	WITHOUT_CLASSIFICATION	3.686229234484313E-8	DESIGN
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999904984317701	WITHOUT_CLASSIFICATION	9.501568229962098E-6	DESIGN
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999997924207454	WITHOUT_CLASSIFICATION	2.0757925446700222E-7	DESIGN
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999999538866892	WITHOUT_CLASSIFICATION	4.611331087149662E-8	DESIGN
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9604159525411408	DESIGN	0.039584047458859246	WITHOUT_CLASSIFICATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.999993434821928	WITHOUT_CLASSIFICATION	6.565178071947412E-6	DESIGN
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999999975287488	WITHOUT_CLASSIFICATION	2.4712511725124724E-9	DESIGN
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.999036602193608	WITHOUT_CLASSIFICATION	9.633978063918635E-4	DESIGN
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999997404479966	WITHOUT_CLASSIFICATION	2.5955200344312505E-7	DESIGN
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9999338935769284	WITHOUT_CLASSIFICATION	6.610642307155627E-5	DESIGN
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999981496706525	WITHOUT_CLASSIFICATION	1.8503293475550996E-6	DESIGN
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9999709887730172	WITHOUT_CLASSIFICATION	2.9011226982892663E-5	DESIGN
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.8826320092583194	WITHOUT_CLASSIFICATION	0.11736799074168068	DESIGN
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9999924916046151	WITHOUT_CLASSIFICATION	7.508395384838893E-6	DESIGN
/* '\v' */	WITHOUT_CLASSIFICATION	0.9998124847346048	WITHOUT_CLASSIFICATION	1.875152653951005E-4	DESIGN
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999425919831451	WITHOUT_CLASSIFICATION	5.740801685489028E-5	DESIGN
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999043690310399	WITHOUT_CLASSIFICATION	9.563096896012984E-5	DESIGN
/* '\v' */	WITHOUT_CLASSIFICATION	0.9998124847346048	WITHOUT_CLASSIFICATION	1.875152653951005E-4	DESIGN
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9998079108350966	WITHOUT_CLASSIFICATION	1.9208916490333225E-4	DESIGN
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999968913594526	WITHOUT_CLASSIFICATION	3.108640547361375E-6	DESIGN
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9911470515500178	WITHOUT_CLASSIFICATION	0.008852948449982153	DESIGN
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9982270251273732	WITHOUT_CLASSIFICATION	0.0017729748726269018	DESIGN
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999993563679774	WITHOUT_CLASSIFICATION	6.436320226700065E-7	DESIGN
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999998478373643	WITHOUT_CLASSIFICATION	1.5216263569695558E-7	DESIGN
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999996116434253	WITHOUT_CLASSIFICATION	3.8835657468911856E-7	DESIGN
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.99993675962988	WITHOUT_CLASSIFICATION	6.324037011996847E-5	DESIGN
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9998909480047012	WITHOUT_CLASSIFICATION	1.0905199529878035E-4	DESIGN
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9982201261527551	WITHOUT_CLASSIFICATION	0.001779873847244867	DESIGN
/* $$: pid */	WITHOUT_CLASSIFICATION	0.8638142770371091	WITHOUT_CLASSIFICATION	0.13618572296289083	DESIGN
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9886298623347934	WITHOUT_CLASSIFICATION	0.011370137665206467	DESIGN
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9782361604730564	WITHOUT_CLASSIFICATION	0.021763839526943652	DESIGN
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9972584156052912	WITHOUT_CLASSIFICATION	0.0027415843947088928	DESIGN
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9924884736970949	WITHOUT_CLASSIFICATION	0.007511526302905044	DESIGN
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.852146688568791	WITHOUT_CLASSIFICATION	0.14785331143120897	DESIGN
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9868955518326399	WITHOUT_CLASSIFICATION	0.013104448167360014	DESIGN
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9942199283774793	WITHOUT_CLASSIFICATION	0.005780071622520666	DESIGN
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999165921992608	WITHOUT_CLASSIFICATION	8.340780073916642E-5	DESIGN
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9990155666491414	WITHOUT_CLASSIFICATION	9.844333508585836E-4	DESIGN
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9957946048259978	WITHOUT_CLASSIFICATION	0.004205395174002131	DESIGN
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9998856274120409	WITHOUT_CLASSIFICATION	1.143725879590337E-4	DESIGN
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999782761504843	WITHOUT_CLASSIFICATION	2.1723849515642604E-5	DESIGN
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999901496336354	WITHOUT_CLASSIFICATION	9.850366364640188E-6	DESIGN
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.999999759587467	WITHOUT_CLASSIFICATION	2.40412533074849E-7	DESIGN
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999918177331323	WITHOUT_CLASSIFICATION	8.18226686774191E-6	DESIGN
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999992088012866	WITHOUT_CLASSIFICATION	7.911987133928761E-7	DESIGN
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999987320803112	WITHOUT_CLASSIFICATION	1.2679196888006585E-6	DESIGN
// block (primary)	WITHOUT_CLASSIFICATION	0.9999893452527021	WITHOUT_CLASSIFICATION	1.0654747297899589E-5	DESIGN
// block (expr)	WITHOUT_CLASSIFICATION	0.9999987756320332	WITHOUT_CLASSIFICATION	1.2243679667896854E-6	DESIGN
// hash	WITHOUT_CLASSIFICATION	0.9998255420672613	WITHOUT_CLASSIFICATION	1.7445793273864992E-4	DESIGN
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9279717864973034	WITHOUT_CLASSIFICATION	0.07202821350269659	DESIGN
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.7472772004143948	DESIGN	0.25272279958560523	WITHOUT_CLASSIFICATION
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9521285548923234	WITHOUT_CLASSIFICATION	0.04787144510767657	DESIGN
//  hexadecimal	WITHOUT_CLASSIFICATION	0.999993625866612	WITHOUT_CLASSIFICATION	6.374133387972774E-6	DESIGN
// binary	WITHOUT_CLASSIFICATION	0.999985633871112	WITHOUT_CLASSIFICATION	1.4366128888066818E-5	DESIGN
// decimal	WITHOUT_CLASSIFICATION	0.9999841435728206	WITHOUT_CLASSIFICATION	1.585642717937552E-5	DESIGN
//Octal	WITHOUT_CLASSIFICATION	0.9999871978764179	WITHOUT_CLASSIFICATION	1.2802123582105638E-5	DESIGN
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9991985521298722	WITHOUT_CLASSIFICATION	8.014478701278343E-4	DESIGN
// backslash	WITHOUT_CLASSIFICATION	0.9999998864866261	WITHOUT_CLASSIFICATION	1.1351337393759923E-7	DESIGN
// newline	WITHOUT_CLASSIFICATION	0.9999781504536178	WITHOUT_CLASSIFICATION	2.1849546382135618E-5	DESIGN
// horizontal tab	WITHOUT_CLASSIFICATION	0.9998836812788434	WITHOUT_CLASSIFICATION	1.1631872115664595E-4	DESIGN
// form feed	WITHOUT_CLASSIFICATION	0.9999849842183064	WITHOUT_CLASSIFICATION	1.5015781693685576E-5	DESIGN
// vertical tab	WITHOUT_CLASSIFICATION	0.9999773388103365	WITHOUT_CLASSIFICATION	2.2661189663464498E-5	DESIGN
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999982281124413	WITHOUT_CLASSIFICATION	1.771887558623794E-6	DESIGN
// escape	WITHOUT_CLASSIFICATION	0.9999939684188208	WITHOUT_CLASSIFICATION	6.031581179239207E-6	DESIGN
// hex constant	WITHOUT_CLASSIFICATION	0.9999374800416111	WITHOUT_CLASSIFICATION	6.251995838895177E-5	DESIGN
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999993722471117	WITHOUT_CLASSIFICATION	6.277528883318148E-7	DESIGN
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999989004498925	WITHOUT_CLASSIFICATION	1.0995501075416157E-6	DESIGN
// space	WITHOUT_CLASSIFICATION	0.9999613199895178	WITHOUT_CLASSIFICATION	3.8680010482288535E-5	DESIGN
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9996883088410461	WITHOUT_CLASSIFICATION	3.116911589539899E-4	DESIGN
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.999815384715913	WITHOUT_CLASSIFICATION	1.846152840870337E-4	DESIGN
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999970698112352	WITHOUT_CLASSIFICATION	2.9301887647637745E-6	DESIGN
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999989004498925	WITHOUT_CLASSIFICATION	1.0995501075416157E-6	DESIGN
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9973814228678651	DESIGN	0.002618577132134865	WITHOUT_CLASSIFICATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9973814228678651	DESIGN	0.002618577132134865	WITHOUT_CLASSIFICATION
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999987466695736	WITHOUT_CLASSIFICATION	1.2533304264060566E-6	DESIGN
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999977246971558	WITHOUT_CLASSIFICATION	2.2753028442857637E-6	DESIGN
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999995360482714	WITHOUT_CLASSIFICATION	4.63951728519152E-7	DESIGN
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999956545786243	WITHOUT_CLASSIFICATION	4.3454213757066915E-6	DESIGN
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.999954326385423	WITHOUT_CLASSIFICATION	4.56736145768811E-5	DESIGN
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999981587775573	WITHOUT_CLASSIFICATION	1.8412224427113621E-6	DESIGN
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999991730106534	WITHOUT_CLASSIFICATION	8.269893465148406E-7	DESIGN
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9908422652491512	DESIGN	0.009157734750848898	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9905641342278664	WITHOUT_CLASSIFICATION	0.009435865772133723	DESIGN
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.999733695652988	WITHOUT_CLASSIFICATION	2.6630434701197203E-4	DESIGN
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999989110295184	WITHOUT_CLASSIFICATION	1.088970481532891E-6	DESIGN
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999987822282315	WITHOUT_CLASSIFICATION	1.2177717685527859E-6	DESIGN
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9999973954025215	WITHOUT_CLASSIFICATION	2.604597478455964E-6	DESIGN
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9999383335623895	WITHOUT_CLASSIFICATION	6.166643761045299E-5	DESIGN
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9995473413390821	WITHOUT_CLASSIFICATION	4.526586609178826E-4	DESIGN
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9997057499615062	WITHOUT_CLASSIFICATION	2.9425003849375075E-4	DESIGN
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999891813607844	WITHOUT_CLASSIFICATION	1.0818639215604996E-5	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9996412318924343	WITHOUT_CLASSIFICATION	3.587681075657831E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9996412318924343	WITHOUT_CLASSIFICATION	3.587681075657831E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9996412318924343	WITHOUT_CLASSIFICATION	3.587681075657831E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9996412318924343	WITHOUT_CLASSIFICATION	3.587681075657831E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9996412318924343	WITHOUT_CLASSIFICATION	3.587681075657831E-4	DESIGN
// line 329	WITHOUT_CLASSIFICATION	0.9999993973477438	WITHOUT_CLASSIFICATION	6.026522562080684E-7	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999995442842742	WITHOUT_CLASSIFICATION	4.55715725743052E-7	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999838596534827	WITHOUT_CLASSIFICATION	1.6140346517306143E-5	DESIGN
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999524820695808	WITHOUT_CLASSIFICATION	4.751793041925797E-5	DESIGN
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999993139496466	WITHOUT_CLASSIFICATION	6.860503534560048E-7	DESIGN
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999104823571991	WITHOUT_CLASSIFICATION	8.951764280091829E-5	DESIGN
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999013038884702	WITHOUT_CLASSIFICATION	9.869611152970617E-5	DESIGN
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9970516669418752	WITHOUT_CLASSIFICATION	0.002948333058124673	DESIGN
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999439799525851	WITHOUT_CLASSIFICATION	5.6020047414913625E-5	DESIGN
// line 271	WITHOUT_CLASSIFICATION	0.9999997264129064	WITHOUT_CLASSIFICATION	2.7358709364398797E-7	DESIGN
// line 274	WITHOUT_CLASSIFICATION	0.9999995447588351	WITHOUT_CLASSIFICATION	4.5524116492202065E-7	DESIGN
// line 303	WITHOUT_CLASSIFICATION	0.9999993979558164	WITHOUT_CLASSIFICATION	6.020441836438291E-7	DESIGN
// line 311	WITHOUT_CLASSIFICATION	0.999999406568246	WITHOUT_CLASSIFICATION	5.934317538593252E-7	DESIGN
// line 314	WITHOUT_CLASSIFICATION	0.9999994097500602	WITHOUT_CLASSIFICATION	5.902499397961297E-7	DESIGN
// line 317	WITHOUT_CLASSIFICATION	0.9999992855088363	WITHOUT_CLASSIFICATION	7.144911636166302E-7	DESIGN
// line 332	WITHOUT_CLASSIFICATION	0.9999994241870086	WITHOUT_CLASSIFICATION	5.75812991440315E-7	DESIGN
// line 338	WITHOUT_CLASSIFICATION	0.9999992735537767	WITHOUT_CLASSIFICATION	7.264462233252606E-7	DESIGN
// line 341	WITHOUT_CLASSIFICATION	0.9999995291537862	WITHOUT_CLASSIFICATION	4.7084621386962007E-7	DESIGN
// line 344	WITHOUT_CLASSIFICATION	0.9999990130844156	WITHOUT_CLASSIFICATION	9.869155843404221E-7	DESIGN
// line 351	WITHOUT_CLASSIFICATION	0.9999994469747668	WITHOUT_CLASSIFICATION	5.530252332150432E-7	DESIGN
// line 358	WITHOUT_CLASSIFICATION	0.999999313847693	WITHOUT_CLASSIFICATION	6.861523069811258E-7	DESIGN
// line 367	WITHOUT_CLASSIFICATION	0.9999987521951184	WITHOUT_CLASSIFICATION	1.2478048816228654E-6	DESIGN
// line 372	WITHOUT_CLASSIFICATION	0.9999994309710403	WITHOUT_CLASSIFICATION	5.690289596652696E-7	DESIGN
// line 378	WITHOUT_CLASSIFICATION	0.9999992460745334	WITHOUT_CLASSIFICATION	7.539254666130219E-7	DESIGN
// line 382	WITHOUT_CLASSIFICATION	0.9999996966701812	WITHOUT_CLASSIFICATION	3.033298188512545E-7	DESIGN
// line 407	WITHOUT_CLASSIFICATION	0.9999990983324982	WITHOUT_CLASSIFICATION	9.016675017741479E-7	DESIGN
// line 411	WITHOUT_CLASSIFICATION	0.999999354025232	WITHOUT_CLASSIFICATION	6.459747681328027E-7	DESIGN
// line 414	WITHOUT_CLASSIFICATION	0.9999992599857433	WITHOUT_CLASSIFICATION	7.40014256579037E-7	DESIGN
// line 417	WITHOUT_CLASSIFICATION	0.9999992221786409	WITHOUT_CLASSIFICATION	7.778213591816836E-7	DESIGN
// line 420	WITHOUT_CLASSIFICATION	0.9999996623624208	WITHOUT_CLASSIFICATION	3.3763757919957987E-7	DESIGN
// line 426	WITHOUT_CLASSIFICATION	0.999998875469765	WITHOUT_CLASSIFICATION	1.124530235016016E-6	DESIGN
// line 434	WITHOUT_CLASSIFICATION	0.9999990053630177	WITHOUT_CLASSIFICATION	9.946369823117821E-7	DESIGN
// line 443	WITHOUT_CLASSIFICATION	0.9999989990074016	WITHOUT_CLASSIFICATION	1.000992598404154E-6	DESIGN
// line 446	WITHOUT_CLASSIFICATION	0.9999982264764279	WITHOUT_CLASSIFICATION	1.7735235720563321E-6	DESIGN
// line 452	WITHOUT_CLASSIFICATION	0.9999995090605202	WITHOUT_CLASSIFICATION	4.909394798339337E-7	DESIGN
// line 457	WITHOUT_CLASSIFICATION	0.9999989694561842	WITHOUT_CLASSIFICATION	1.030543815817801E-6	DESIGN
// line 464	WITHOUT_CLASSIFICATION	0.999998666889948	WITHOUT_CLASSIFICATION	1.3331100520165405E-6	DESIGN
// line 467	WITHOUT_CLASSIFICATION	0.9999986636961489	WITHOUT_CLASSIFICATION	1.3363038510715704E-6	DESIGN
// line 470	WITHOUT_CLASSIFICATION	0.9999992674587063	WITHOUT_CLASSIFICATION	7.325412936842016E-7	DESIGN
// line 479	WITHOUT_CLASSIFICATION	0.9999986448986309	WITHOUT_CLASSIFICATION	1.3551013691343722E-6	DESIGN
// line 484	WITHOUT_CLASSIFICATION	0.9999990385935277	WITHOUT_CLASSIFICATION	9.614064723156606E-7	DESIGN
// line 486	WITHOUT_CLASSIFICATION	0.9999987468640753	WITHOUT_CLASSIFICATION	1.2531359247198048E-6	DESIGN
// line 492	WITHOUT_CLASSIFICATION	0.9999994179421842	WITHOUT_CLASSIFICATION	5.820578159235892E-7	DESIGN
// line 498	WITHOUT_CLASSIFICATION	0.9999992046892854	WITHOUT_CLASSIFICATION	7.953107146334884E-7	DESIGN
// line 501	WITHOUT_CLASSIFICATION	0.9999994793906342	WITHOUT_CLASSIFICATION	5.206093658330954E-7	DESIGN
// line 504	WITHOUT_CLASSIFICATION	0.9999990006676602	WITHOUT_CLASSIFICATION	9.993323396659405E-7	DESIGN
// line 507	WITHOUT_CLASSIFICATION	0.9999988422969041	WITHOUT_CLASSIFICATION	1.1577030958858974E-6	DESIGN
// line 510	WITHOUT_CLASSIFICATION	0.9999996060189771	WITHOUT_CLASSIFICATION	3.939810229207188E-7	DESIGN
// line 519	WITHOUT_CLASSIFICATION	0.9999991462060401	WITHOUT_CLASSIFICATION	8.537939597492388E-7	DESIGN
// line 525	WITHOUT_CLASSIFICATION	0.9999992281792535	WITHOUT_CLASSIFICATION	7.71820746639351E-7	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999838596534827	WITHOUT_CLASSIFICATION	1.6140346517306143E-5	DESIGN
// line 537	WITHOUT_CLASSIFICATION	0.9999986965705966	WITHOUT_CLASSIFICATION	1.303429403448419E-6	DESIGN
// line 540	WITHOUT_CLASSIFICATION	0.9999993154403807	WITHOUT_CLASSIFICATION	6.845596193664274E-7	DESIGN
// line 543	WITHOUT_CLASSIFICATION	0.9999988790392896	WITHOUT_CLASSIFICATION	1.1209607103854645E-6	DESIGN
// line 546	WITHOUT_CLASSIFICATION	0.9999980142205401	WITHOUT_CLASSIFICATION	1.9857794597909626E-6	DESIGN
// line 556	WITHOUT_CLASSIFICATION	0.9999976737692179	WITHOUT_CLASSIFICATION	2.326230782067239E-6	DESIGN
// line 559	WITHOUT_CLASSIFICATION	0.999998054262466	WITHOUT_CLASSIFICATION	1.9457375339578134E-6	DESIGN
// line 563	WITHOUT_CLASSIFICATION	0.999998506317713	WITHOUT_CLASSIFICATION	1.4936822869178103E-6	DESIGN
// line 566	WITHOUT_CLASSIFICATION	0.9999976602754079	WITHOUT_CLASSIFICATION	2.3397245920406293E-6	DESIGN
// line 569	WITHOUT_CLASSIFICATION	0.9999982079587101	WITHOUT_CLASSIFICATION	1.792041289925757E-6	DESIGN
// line 575	WITHOUT_CLASSIFICATION	0.9999983999170282	WITHOUT_CLASSIFICATION	1.600082971766332E-6	DESIGN
// line 578	WITHOUT_CLASSIFICATION	0.9999988956179873	WITHOUT_CLASSIFICATION	1.1043820127434524E-6	DESIGN
// line 587	WITHOUT_CLASSIFICATION	0.9999989060347392	WITHOUT_CLASSIFICATION	1.0939652609011217E-6	DESIGN
// line 596	WITHOUT_CLASSIFICATION	0.9999962710391797	WITHOUT_CLASSIFICATION	3.7289608204381286E-6	DESIGN
// line 604	WITHOUT_CLASSIFICATION	0.9999989599296528	WITHOUT_CLASSIFICATION	1.0400703471920684E-6	DESIGN
// line 607	WITHOUT_CLASSIFICATION	0.9999988001526172	WITHOUT_CLASSIFICATION	1.1998473828238813E-6	DESIGN
// line 610	WITHOUT_CLASSIFICATION	0.999999566811846	WITHOUT_CLASSIFICATION	4.3318815402839144E-7	DESIGN
// line 613	WITHOUT_CLASSIFICATION	0.9999991847681633	WITHOUT_CLASSIFICATION	8.152318366994726E-7	DESIGN
// line 616	WITHOUT_CLASSIFICATION	0.9999984989642998	WITHOUT_CLASSIFICATION	1.5010357002854059E-6	DESIGN
// line 634	WITHOUT_CLASSIFICATION	0.9999987249693377	WITHOUT_CLASSIFICATION	1.2750306622857683E-6	DESIGN
// line 638	WITHOUT_CLASSIFICATION	0.9999990186956493	WITHOUT_CLASSIFICATION	9.813043506349348E-7	DESIGN
// line 643	WITHOUT_CLASSIFICATION	0.9999988792670627	WITHOUT_CLASSIFICATION	1.1207329373712057E-6	DESIGN
// line 646	WITHOUT_CLASSIFICATION	0.9999981515700326	WITHOUT_CLASSIFICATION	1.848429967398551E-6	DESIGN
// line 655	WITHOUT_CLASSIFICATION	0.9999986467562291	WITHOUT_CLASSIFICATION	1.353243770975625E-6	DESIGN
// line 660	WITHOUT_CLASSIFICATION	0.9999991598976676	WITHOUT_CLASSIFICATION	8.401023324065145E-7	DESIGN
// line 667	WITHOUT_CLASSIFICATION	0.9999981703475954	WITHOUT_CLASSIFICATION	1.8296524046734723E-6	DESIGN
// line 670	WITHOUT_CLASSIFICATION	0.9999990196785252	WITHOUT_CLASSIFICATION	9.80321474730271E-7	DESIGN
// line 672	WITHOUT_CLASSIFICATION	0.9999990986796233	WITHOUT_CLASSIFICATION	9.013203767985254E-7	DESIGN
// line 696	WITHOUT_CLASSIFICATION	0.9999975014670585	WITHOUT_CLASSIFICATION	2.498532941627755E-6	DESIGN
// line 701	WITHOUT_CLASSIFICATION	0.9999994196537481	WITHOUT_CLASSIFICATION	5.80346252042016E-7	DESIGN
// line 717	WITHOUT_CLASSIFICATION	0.9999989363207238	WITHOUT_CLASSIFICATION	1.0636792762438687E-6	DESIGN
// line 720	WITHOUT_CLASSIFICATION	0.9999995310345808	WITHOUT_CLASSIFICATION	4.6896541915865033E-7	DESIGN
// line 726	WITHOUT_CLASSIFICATION	0.9999981812830028	WITHOUT_CLASSIFICATION	1.8187169972635536E-6	DESIGN
// line 729	WITHOUT_CLASSIFICATION	0.9999991458199297	WITHOUT_CLASSIFICATION	8.541800703161981E-7	DESIGN
// line 732	WITHOUT_CLASSIFICATION	0.9999993546404218	WITHOUT_CLASSIFICATION	6.453595782829242E-7	DESIGN
// line 735	WITHOUT_CLASSIFICATION	0.9999988817500512	WITHOUT_CLASSIFICATION	1.1182499487765366E-6	DESIGN
// line 738	WITHOUT_CLASSIFICATION	0.9999991770247034	WITHOUT_CLASSIFICATION	8.229752965965987E-7	DESIGN
// line 751	WITHOUT_CLASSIFICATION	0.9999992326724104	WITHOUT_CLASSIFICATION	7.67327589725219E-7	DESIGN
// line 754	WITHOUT_CLASSIFICATION	0.999998643596511	WITHOUT_CLASSIFICATION	1.3564034890063992E-6	DESIGN
// line 757	WITHOUT_CLASSIFICATION	0.9999985031369983	WITHOUT_CLASSIFICATION	1.4968630016779253E-6	DESIGN
// line 760	WITHOUT_CLASSIFICATION	0.9999990657847411	WITHOUT_CLASSIFICATION	9.342152589706569E-7	DESIGN
// line 763	WITHOUT_CLASSIFICATION	0.9999983447179286	WITHOUT_CLASSIFICATION	1.6552820714256691E-6	DESIGN
// line 769	WITHOUT_CLASSIFICATION	0.9999980116152289	WITHOUT_CLASSIFICATION	1.9883847710741423E-6	DESIGN
// line 772	WITHOUT_CLASSIFICATION	0.9999991397143737	WITHOUT_CLASSIFICATION	8.602856263618408E-7	DESIGN
// line 775	WITHOUT_CLASSIFICATION	0.999998551191232	WITHOUT_CLASSIFICATION	1.4488087680031908E-6	DESIGN
// line 782	WITHOUT_CLASSIFICATION	0.999999509056709	WITHOUT_CLASSIFICATION	4.909432909891615E-7	DESIGN
// line 788	WITHOUT_CLASSIFICATION	0.9999989799766147	WITHOUT_CLASSIFICATION	1.0200233853739259E-6	DESIGN
// line 791	WITHOUT_CLASSIFICATION	0.9999990951012421	WITHOUT_CLASSIFICATION	9.048987578280364E-7	DESIGN
// line 794	WITHOUT_CLASSIFICATION	0.9999984086756603	WITHOUT_CLASSIFICATION	1.591324339844419E-6	DESIGN
// line 797	WITHOUT_CLASSIFICATION	0.9999982856789031	WITHOUT_CLASSIFICATION	1.7143210968633291E-6	DESIGN
// line 803	WITHOUT_CLASSIFICATION	0.9999994634931799	WITHOUT_CLASSIFICATION	5.365068200460228E-7	DESIGN
// line 806	WITHOUT_CLASSIFICATION	0.9999986813700829	WITHOUT_CLASSIFICATION	1.3186299170829408E-6	DESIGN
// line 809	WITHOUT_CLASSIFICATION	0.9999993589959199	WITHOUT_CLASSIFICATION	6.410040800423691E-7	DESIGN
// line 815	WITHOUT_CLASSIFICATION	0.9999995638716028	WITHOUT_CLASSIFICATION	4.3612839719796646E-7	DESIGN
// line 818	WITHOUT_CLASSIFICATION	0.9999995784625363	WITHOUT_CLASSIFICATION	4.2153746366178505E-7	DESIGN
// line 821	WITHOUT_CLASSIFICATION	0.9999997385343183	WITHOUT_CLASSIFICATION	2.614656816330033E-7	DESIGN
// line 824	WITHOUT_CLASSIFICATION	0.9999995495599592	WITHOUT_CLASSIFICATION	4.504400407400506E-7	DESIGN
// line 830	WITHOUT_CLASSIFICATION	0.99999962775818	WITHOUT_CLASSIFICATION	3.7224182006765283E-7	DESIGN
// line 833	WITHOUT_CLASSIFICATION	0.9999991417583978	WITHOUT_CLASSIFICATION	8.582416023210301E-7	DESIGN
// line 836	WITHOUT_CLASSIFICATION	0.9999987753146589	WITHOUT_CLASSIFICATION	1.2246853411141624E-6	DESIGN
// line 839	WITHOUT_CLASSIFICATION	0.9999990424384436	WITHOUT_CLASSIFICATION	9.575615564033103E-7	DESIGN
// line 842	WITHOUT_CLASSIFICATION	0.9999995760385502	WITHOUT_CLASSIFICATION	4.239614498301583E-7	DESIGN
// line 848	WITHOUT_CLASSIFICATION	0.9999990383653918	WITHOUT_CLASSIFICATION	9.616346082184458E-7	DESIGN
// line 852	WITHOUT_CLASSIFICATION	0.9999996006761178	WITHOUT_CLASSIFICATION	3.9932388214853576E-7	DESIGN
// line 858	WITHOUT_CLASSIFICATION	0.9999991838193683	WITHOUT_CLASSIFICATION	8.161806318136863E-7	DESIGN
// line 861	WITHOUT_CLASSIFICATION	0.999999421139081	WITHOUT_CLASSIFICATION	5.788609190073383E-7	DESIGN
// line 868	WITHOUT_CLASSIFICATION	0.9999989035475597	WITHOUT_CLASSIFICATION	1.0964524402727877E-6	DESIGN
// line 871	WITHOUT_CLASSIFICATION	0.999999460822117	WITHOUT_CLASSIFICATION	5.391778829297592E-7	DESIGN
// line 876	WITHOUT_CLASSIFICATION	0.99999842364048	WITHOUT_CLASSIFICATION	1.5763595200836866E-6	DESIGN
// line 879	WITHOUT_CLASSIFICATION	0.9999989558185272	WITHOUT_CLASSIFICATION	1.044181472916983E-6	DESIGN
// line 883	WITHOUT_CLASSIFICATION	0.9999991820529418	WITHOUT_CLASSIFICATION	8.179470580965647E-7	DESIGN
// line 893	WITHOUT_CLASSIFICATION	0.9999992305368622	WITHOUT_CLASSIFICATION	7.694631377848138E-7	DESIGN
// line 896	WITHOUT_CLASSIFICATION	0.9999985604763907	WITHOUT_CLASSIFICATION	1.4395236092097179E-6	DESIGN
// line 899	WITHOUT_CLASSIFICATION	0.9999990494686514	WITHOUT_CLASSIFICATION	9.505313485689585E-7	DESIGN
// line 903	WITHOUT_CLASSIFICATION	0.999999071522422	WITHOUT_CLASSIFICATION	9.284775781548091E-7	DESIGN
// line 907	WITHOUT_CLASSIFICATION	0.9999987254916808	WITHOUT_CLASSIFICATION	1.2745083192532788E-6	DESIGN
// line 915	WITHOUT_CLASSIFICATION	0.9999993086758824	WITHOUT_CLASSIFICATION	6.913241175001997E-7	DESIGN
// line 920	WITHOUT_CLASSIFICATION	0.9999995911465974	WITHOUT_CLASSIFICATION	4.0885340252090924E-7	DESIGN
// line 923	WITHOUT_CLASSIFICATION	0.9999993286814826	WITHOUT_CLASSIFICATION	6.713185173958213E-7	DESIGN
// line 926	WITHOUT_CLASSIFICATION	0.9999986421679196	WITHOUT_CLASSIFICATION	1.3578320804350781E-6	DESIGN
// line 932	WITHOUT_CLASSIFICATION	0.999999374318399	WITHOUT_CLASSIFICATION	6.256816010130318E-7	DESIGN
// line 936	WITHOUT_CLASSIFICATION	0.9999981914243965	WITHOUT_CLASSIFICATION	1.808575603523388E-6	DESIGN
// line 940	WITHOUT_CLASSIFICATION	0.9999993552779496	WITHOUT_CLASSIFICATION	6.447220504569255E-7	DESIGN
// line 944	WITHOUT_CLASSIFICATION	0.9999985586731432	WITHOUT_CLASSIFICATION	1.4413268566816448E-6	DESIGN
// line 948	WITHOUT_CLASSIFICATION	0.9999990745082336	WITHOUT_CLASSIFICATION	9.254917663035259E-7	DESIGN
// line 956	WITHOUT_CLASSIFICATION	0.9999981405698567	WITHOUT_CLASSIFICATION	1.8594301432820216E-6	DESIGN
// line 960	WITHOUT_CLASSIFICATION	0.999999149439459	WITHOUT_CLASSIFICATION	8.505605410925926E-7	DESIGN
// line 964	WITHOUT_CLASSIFICATION	0.9999984483690226	WITHOUT_CLASSIFICATION	1.5516309773138803E-6	DESIGN
// line 967	WITHOUT_CLASSIFICATION	0.9999981555018409	WITHOUT_CLASSIFICATION	1.8444981590696012E-6	DESIGN
// line 972	WITHOUT_CLASSIFICATION	0.9999992440792065	WITHOUT_CLASSIFICATION	7.559207934500212E-7	DESIGN
// line 978	WITHOUT_CLASSIFICATION	0.9999989824287351	WITHOUT_CLASSIFICATION	1.0175712649450242E-6	DESIGN
// line 980	WITHOUT_CLASSIFICATION	0.9999994864303382	WITHOUT_CLASSIFICATION	5.135696618170246E-7	DESIGN
// line 984	WITHOUT_CLASSIFICATION	0.9999990626569573	WITHOUT_CLASSIFICATION	9.373430426420318E-7	DESIGN
// line 986	WITHOUT_CLASSIFICATION	0.9999985539573396	WITHOUT_CLASSIFICATION	1.4460426604468653E-6	DESIGN
// line 996	WITHOUT_CLASSIFICATION	0.9999976143011254	WITHOUT_CLASSIFICATION	2.385698874452109E-6	DESIGN
// line 1001	WITHOUT_CLASSIFICATION	0.9999996463880652	WITHOUT_CLASSIFICATION	3.5361193486809413E-7	DESIGN
// line 1004	WITHOUT_CLASSIFICATION	0.9999995551379555	WITHOUT_CLASSIFICATION	4.448620445319215E-7	DESIGN
// line 1008	WITHOUT_CLASSIFICATION	0.9999997473789832	WITHOUT_CLASSIFICATION	2.526210167487335E-7	DESIGN
// line 1014	WITHOUT_CLASSIFICATION	0.9999996504293596	WITHOUT_CLASSIFICATION	3.4957064048320023E-7	DESIGN
// line 1029	WITHOUT_CLASSIFICATION	0.9999998030066266	WITHOUT_CLASSIFICATION	1.9699337344645553E-7	DESIGN
// line 1032	WITHOUT_CLASSIFICATION	0.9999998342858433	WITHOUT_CLASSIFICATION	1.6571415676125205E-7	DESIGN
// line 1034	WITHOUT_CLASSIFICATION	0.9999997159179892	WITHOUT_CLASSIFICATION	2.8408201076724115E-7	DESIGN
// line 1045	WITHOUT_CLASSIFICATION	0.9999997507855859	WITHOUT_CLASSIFICATION	2.4921441408227217E-7	DESIGN
// line 1048	WITHOUT_CLASSIFICATION	0.9999997635977709	WITHOUT_CLASSIFICATION	2.364022291146648E-7	DESIGN
// line 1051	WITHOUT_CLASSIFICATION	0.9999996941616637	WITHOUT_CLASSIFICATION	3.058383363840331E-7	DESIGN
// line 1058	WITHOUT_CLASSIFICATION	0.9999997847016835	WITHOUT_CLASSIFICATION	2.1529831656680627E-7	DESIGN
// line 1070	WITHOUT_CLASSIFICATION	0.9999995710591798	WITHOUT_CLASSIFICATION	4.289408201905855E-7	DESIGN
// line 1073	WITHOUT_CLASSIFICATION	0.999999639708207	WITHOUT_CLASSIFICATION	3.6029179299663574E-7	DESIGN
// line 1076	WITHOUT_CLASSIFICATION	0.9999992903774259	WITHOUT_CLASSIFICATION	7.096225740305785E-7	DESIGN
// line 1079	WITHOUT_CLASSIFICATION	0.9999995304272519	WITHOUT_CLASSIFICATION	4.695727481699923E-7	DESIGN
// line 1082	WITHOUT_CLASSIFICATION	0.9999998832144632	WITHOUT_CLASSIFICATION	1.1678553686668061E-7	DESIGN
// line 1089	WITHOUT_CLASSIFICATION	0.9999997549132905	WITHOUT_CLASSIFICATION	2.4508670954660524E-7	DESIGN
// line 1097	WITHOUT_CLASSIFICATION	0.9999995953667695	WITHOUT_CLASSIFICATION	4.046332305456032E-7	DESIGN
// line 1100	WITHOUT_CLASSIFICATION	0.9999996493281815	WITHOUT_CLASSIFICATION	3.5067181853247454E-7	DESIGN
// line 1103	WITHOUT_CLASSIFICATION	0.9999996450430765	WITHOUT_CLASSIFICATION	3.549569235205514E-7	DESIGN
// line 1107	WITHOUT_CLASSIFICATION	0.9999995119438921	WITHOUT_CLASSIFICATION	4.880561077538416E-7	DESIGN
// line 1111	WITHOUT_CLASSIFICATION	0.9999991996687961	WITHOUT_CLASSIFICATION	8.003312038860942E-7	DESIGN
// line 1113	WITHOUT_CLASSIFICATION	0.9999993192864628	WITHOUT_CLASSIFICATION	6.807135371440345E-7	DESIGN
// line 1115	WITHOUT_CLASSIFICATION	0.9999993374192169	WITHOUT_CLASSIFICATION	6.625807830818937E-7	DESIGN
// line 1119	WITHOUT_CLASSIFICATION	0.9999992190476987	WITHOUT_CLASSIFICATION	7.809523013298275E-7	DESIGN
// line 1130	WITHOUT_CLASSIFICATION	0.9999997134442111	WITHOUT_CLASSIFICATION	2.8655578883885597E-7	DESIGN
// line 1133	WITHOUT_CLASSIFICATION	0.999999339260867	WITHOUT_CLASSIFICATION	6.607391330012833E-7	DESIGN
// line 1135	WITHOUT_CLASSIFICATION	0.9999994412584532	WITHOUT_CLASSIFICATION	5.587415468222926E-7	DESIGN
// line 1137	WITHOUT_CLASSIFICATION	0.9999993367739473	WITHOUT_CLASSIFICATION	6.632260528200557E-7	DESIGN
// line 1140	WITHOUT_CLASSIFICATION	0.9999996689438585	WITHOUT_CLASSIFICATION	3.310561414697733E-7	DESIGN
// line 1151	WITHOUT_CLASSIFICATION	0.9999993573985694	WITHOUT_CLASSIFICATION	6.426014305972742E-7	DESIGN
// line 1154	WITHOUT_CLASSIFICATION	0.9999993583412256	WITHOUT_CLASSIFICATION	6.416587744288039E-7	DESIGN
// line 1158	WITHOUT_CLASSIFICATION	0.9999995486786659	WITHOUT_CLASSIFICATION	4.513213340891452E-7	DESIGN
// line 1164	WITHOUT_CLASSIFICATION	0.9999991825785641	WITHOUT_CLASSIFICATION	8.174214359593823E-7	DESIGN
// line 1175	WITHOUT_CLASSIFICATION	0.9999992729864203	WITHOUT_CLASSIFICATION	7.27013579703982E-7	DESIGN
// line 1178	WITHOUT_CLASSIFICATION	0.9999994102288389	WITHOUT_CLASSIFICATION	5.89771161204301E-7	DESIGN
// line 1187	WITHOUT_CLASSIFICATION	0.9999995912767407	WITHOUT_CLASSIFICATION	4.087232593633522E-7	DESIGN
// line 1189	WITHOUT_CLASSIFICATION	0.999999621785552	WITHOUT_CLASSIFICATION	3.7821444788767463E-7	DESIGN
// line 1193	WITHOUT_CLASSIFICATION	0.9999993773533562	WITHOUT_CLASSIFICATION	6.226466438249736E-7	DESIGN
// line 1204	WITHOUT_CLASSIFICATION	0.9999997407512633	WITHOUT_CLASSIFICATION	2.5924873668467914E-7	DESIGN
// line 1207	WITHOUT_CLASSIFICATION	0.9999996995563755	WITHOUT_CLASSIFICATION	3.0044362457420477E-7	DESIGN
// line 1210	WITHOUT_CLASSIFICATION	0.9999998175747177	WITHOUT_CLASSIFICATION	1.8242528231183355E-7	DESIGN
// line 1214	WITHOUT_CLASSIFICATION	0.999999604561441	WITHOUT_CLASSIFICATION	3.954385589075058E-7	DESIGN
// line 1234	WITHOUT_CLASSIFICATION	0.9999997597570529	WITHOUT_CLASSIFICATION	2.402429470391855E-7	DESIGN
// line 1239	WITHOUT_CLASSIFICATION	0.999999611657428	WITHOUT_CLASSIFICATION	3.8834257200106293E-7	DESIGN
// line 1243	WITHOUT_CLASSIFICATION	0.9999997171086782	WITHOUT_CLASSIFICATION	2.828913217966389E-7	DESIGN
// line 1247	WITHOUT_CLASSIFICATION	0.9999996247073084	WITHOUT_CLASSIFICATION	3.7529269154887744E-7	DESIGN
// line 1251	WITHOUT_CLASSIFICATION	0.9999996966226867	WITHOUT_CLASSIFICATION	3.0337731331119085E-7	DESIGN
// line 1263	WITHOUT_CLASSIFICATION	0.9999995867240394	WITHOUT_CLASSIFICATION	4.1327596057491023E-7	DESIGN
// line 1269	WITHOUT_CLASSIFICATION	0.9999995035578252	WITHOUT_CLASSIFICATION	4.964421749198512E-7	DESIGN
// line 1280	WITHOUT_CLASSIFICATION	0.9999998699109574	WITHOUT_CLASSIFICATION	1.300890425991289E-7	DESIGN
// line 1283	WITHOUT_CLASSIFICATION	0.9999997856245775	WITHOUT_CLASSIFICATION	2.1437542244339912E-7	DESIGN
// line 1290	WITHOUT_CLASSIFICATION	0.9999997825056313	WITHOUT_CLASSIFICATION	2.1749436876910842E-7	DESIGN
// line 1296	WITHOUT_CLASSIFICATION	0.99999940904242	WITHOUT_CLASSIFICATION	5.909575800058957E-7	DESIGN
// line 1299	WITHOUT_CLASSIFICATION	0.9999996097851123	WITHOUT_CLASSIFICATION	3.9021488773050847E-7	DESIGN
// line 1302	WITHOUT_CLASSIFICATION	0.999999827781885	WITHOUT_CLASSIFICATION	1.7221811508656429E-7	DESIGN
// line 1309	WITHOUT_CLASSIFICATION	0.9999996388981987	WITHOUT_CLASSIFICATION	3.61101801379852E-7	DESIGN
// line 1313	WITHOUT_CLASSIFICATION	0.9999993264782676	WITHOUT_CLASSIFICATION	6.735217324578121E-7	DESIGN
// line 1315	WITHOUT_CLASSIFICATION	0.9999994828049502	WITHOUT_CLASSIFICATION	5.171950497424551E-7	DESIGN
// line 1320	WITHOUT_CLASSIFICATION	0.9999998111937307	WITHOUT_CLASSIFICATION	1.8880626926951373E-7	DESIGN
// line 1328	WITHOUT_CLASSIFICATION	0.9999997808730012	WITHOUT_CLASSIFICATION	2.1912699886309748E-7	DESIGN
// line 1335	WITHOUT_CLASSIFICATION	0.9999994286059954	WITHOUT_CLASSIFICATION	5.713940044342482E-7	DESIGN
// line 1348	WITHOUT_CLASSIFICATION	0.9999996308666367	WITHOUT_CLASSIFICATION	3.691333632262035E-7	DESIGN
// line 1352	WITHOUT_CLASSIFICATION	0.9999996958339612	WITHOUT_CLASSIFICATION	3.0416603883696716E-7	DESIGN
// line 1358	WITHOUT_CLASSIFICATION	0.9999996003187083	WITHOUT_CLASSIFICATION	3.996812917794122E-7	DESIGN
// line 1374	WITHOUT_CLASSIFICATION	0.9999994050500639	WITHOUT_CLASSIFICATION	5.949499360396072E-7	DESIGN
// line 1381	WITHOUT_CLASSIFICATION	0.9999996113683851	WITHOUT_CLASSIFICATION	3.8863161491806744E-7	DESIGN
// line 1387	WITHOUT_CLASSIFICATION	0.9999995700433797	WITHOUT_CLASSIFICATION	4.299566204008875E-7	DESIGN
// line 1392	WITHOUT_CLASSIFICATION	0.9999996405647608	WITHOUT_CLASSIFICATION	3.5943523920790904E-7	DESIGN
// line 1415	WITHOUT_CLASSIFICATION	0.9999994640911871	WITHOUT_CLASSIFICATION	5.359088129789672E-7	DESIGN
// line 1431	WITHOUT_CLASSIFICATION	0.9999994987913329	WITHOUT_CLASSIFICATION	5.0120866716315E-7	DESIGN
// line 1434	WITHOUT_CLASSIFICATION	0.9999994439790086	WITHOUT_CLASSIFICATION	5.560209913115434E-7	DESIGN
// line 1440	WITHOUT_CLASSIFICATION	0.9999996485006613	WITHOUT_CLASSIFICATION	3.5149933876003464E-7	DESIGN
// line 1443	WITHOUT_CLASSIFICATION	0.9999994240415665	WITHOUT_CLASSIFICATION	5.759584334878548E-7	DESIGN
// line 1453	WITHOUT_CLASSIFICATION	0.9999995714220451	WITHOUT_CLASSIFICATION	4.285779549399817E-7	DESIGN
// line 1456	WITHOUT_CLASSIFICATION	0.9999992392114133	WITHOUT_CLASSIFICATION	7.607885866810942E-7	DESIGN
// line 1462	WITHOUT_CLASSIFICATION	0.9999996510100041	WITHOUT_CLASSIFICATION	3.4898999589243316E-7	DESIGN
// line 1465	WITHOUT_CLASSIFICATION	0.9999994242594273	WITHOUT_CLASSIFICATION	5.757405726875202E-7	DESIGN
// line 1470	WITHOUT_CLASSIFICATION	0.9999995624701082	WITHOUT_CLASSIFICATION	4.3752989176833316E-7	DESIGN
// line 1477	WITHOUT_CLASSIFICATION	0.9999991874404568	WITHOUT_CLASSIFICATION	8.125595431967779E-7	DESIGN
// line 1480	WITHOUT_CLASSIFICATION	0.9999997365559851	WITHOUT_CLASSIFICATION	2.634440148714507E-7	DESIGN
// line 1485	WITHOUT_CLASSIFICATION	0.999999634288354	WITHOUT_CLASSIFICATION	3.6571164600078245E-7	DESIGN
// line 1488	WITHOUT_CLASSIFICATION	0.9999995370162674	WITHOUT_CLASSIFICATION	4.6298373245780904E-7	DESIGN
// line 1496	WITHOUT_CLASSIFICATION	0.9999989331219087	WITHOUT_CLASSIFICATION	1.0668780912817618E-6	DESIGN
// line 1502	WITHOUT_CLASSIFICATION	0.9999997902042846	WITHOUT_CLASSIFICATION	2.0979571524232475E-7	DESIGN
// line 1510	WITHOUT_CLASSIFICATION	0.9999996972286374	WITHOUT_CLASSIFICATION	3.0277136264712276E-7	DESIGN
// line 1513	WITHOUT_CLASSIFICATION	0.999999427985716	WITHOUT_CLASSIFICATION	5.720142840683013E-7	DESIGN
// line 1516	WITHOUT_CLASSIFICATION	0.9999988416122221	WITHOUT_CLASSIFICATION	1.1583877780273612E-6	DESIGN
// line 1533	WITHOUT_CLASSIFICATION	0.9999994387532634	WITHOUT_CLASSIFICATION	5.612467366920671E-7	DESIGN
// line 1550	WITHOUT_CLASSIFICATION	0.9999996491125483	WITHOUT_CLASSIFICATION	3.5088745161228974E-7	DESIGN
// line 1553	WITHOUT_CLASSIFICATION	0.9999994470885368	WITHOUT_CLASSIFICATION	5.529114631018685E-7	DESIGN
// line 1556	WITHOUT_CLASSIFICATION	0.9999989940712704	WITHOUT_CLASSIFICATION	1.005928729591139E-6	DESIGN
// line 1565	WITHOUT_CLASSIFICATION	0.999999302396707	WITHOUT_CLASSIFICATION	6.976032930267191E-7	DESIGN
// line 1568	WITHOUT_CLASSIFICATION	0.9999995088418249	WITHOUT_CLASSIFICATION	4.911581751044977E-7	DESIGN
// line 1571	WITHOUT_CLASSIFICATION	0.999999312013281	WITHOUT_CLASSIFICATION	6.879867190561937E-7	DESIGN
// line 1574	WITHOUT_CLASSIFICATION	0.9999993519708753	WITHOUT_CLASSIFICATION	6.480291246819607E-7	DESIGN
// line 1577	WITHOUT_CLASSIFICATION	0.999999215231297	WITHOUT_CLASSIFICATION	7.847687030260005E-7	DESIGN
// line 1587	WITHOUT_CLASSIFICATION	0.999999527104114	WITHOUT_CLASSIFICATION	4.728958859859535E-7	DESIGN
// line 1595	WITHOUT_CLASSIFICATION	0.9999992301716848	WITHOUT_CLASSIFICATION	7.698283151851891E-7	DESIGN
// line 1598	WITHOUT_CLASSIFICATION	0.9999994589864449	WITHOUT_CLASSIFICATION	5.410135550741572E-7	DESIGN
// line 1600	WITHOUT_CLASSIFICATION	0.9999993369704544	WITHOUT_CLASSIFICATION	6.630295456225293E-7	DESIGN
// line 1609	WITHOUT_CLASSIFICATION	0.9999992356652425	WITHOUT_CLASSIFICATION	7.643347575327293E-7	DESIGN
// line 1623	WITHOUT_CLASSIFICATION	0.9999994441439316	WITHOUT_CLASSIFICATION	5.558560683180675E-7	DESIGN
// line 1626	WITHOUT_CLASSIFICATION	0.9999989455094609	WITHOUT_CLASSIFICATION	1.0544905391178684E-6	DESIGN
// line 1629	WITHOUT_CLASSIFICATION	0.9999993814017926	WITHOUT_CLASSIFICATION	6.185982074212485E-7	DESIGN
// line 1632	WITHOUT_CLASSIFICATION	0.9999993995362007	WITHOUT_CLASSIFICATION	6.004637993782959E-7	DESIGN
// line 1638	WITHOUT_CLASSIFICATION	0.9999991616928694	WITHOUT_CLASSIFICATION	8.383071306041906E-7	DESIGN
// line 1641	WITHOUT_CLASSIFICATION	0.9999990579099515	WITHOUT_CLASSIFICATION	9.420900485364612E-7	DESIGN
// line 1644	WITHOUT_CLASSIFICATION	0.9999988841918925	WITHOUT_CLASSIFICATION	1.1158081074777408E-6	DESIGN
// line 1649	WITHOUT_CLASSIFICATION	0.9999989661062799	WITHOUT_CLASSIFICATION	1.0338937201338361E-6	DESIGN
// line 1655	WITHOUT_CLASSIFICATION	0.9999990070489352	WITHOUT_CLASSIFICATION	9.929510648858088E-7	DESIGN
// line 1658	WITHOUT_CLASSIFICATION	0.9999992887305701	WITHOUT_CLASSIFICATION	7.112694298457425E-7	DESIGN
// line 1661	WITHOUT_CLASSIFICATION	0.9999988071047825	WITHOUT_CLASSIFICATION	1.1928952174582562E-6	DESIGN
// line 1672	WITHOUT_CLASSIFICATION	0.9999993413209378	WITHOUT_CLASSIFICATION	6.586790621626516E-7	DESIGN
// line 1677	WITHOUT_CLASSIFICATION	0.9999985650583684	WITHOUT_CLASSIFICATION	1.4349416316181572E-6	DESIGN
// line 1687	WITHOUT_CLASSIFICATION	0.9999991440010586	WITHOUT_CLASSIFICATION	8.559989414258882E-7	DESIGN
// line 1694	WITHOUT_CLASSIFICATION	0.9999987756951366	WITHOUT_CLASSIFICATION	1.2243048634528126E-6	DESIGN
// line 1705	WITHOUT_CLASSIFICATION	0.9999994889251602	WITHOUT_CLASSIFICATION	5.110748398344719E-7	DESIGN
// line 1708	WITHOUT_CLASSIFICATION	0.9999995652498803	WITHOUT_CLASSIFICATION	4.3475011967439647E-7	DESIGN
// line 1725	WITHOUT_CLASSIFICATION	0.9999995999939681	WITHOUT_CLASSIFICATION	4.0000603185826497E-7	DESIGN
// line 1733	WITHOUT_CLASSIFICATION	0.9999992149610063	WITHOUT_CLASSIFICATION	7.850389936508584E-7	DESIGN
// line 1742	WITHOUT_CLASSIFICATION	0.9999996082148144	WITHOUT_CLASSIFICATION	3.917851855829128E-7	DESIGN
// line 1745	WITHOUT_CLASSIFICATION	0.9999993955036262	WITHOUT_CLASSIFICATION	6.044963737824641E-7	DESIGN
// line 1749	WITHOUT_CLASSIFICATION	0.9999991768279644	WITHOUT_CLASSIFICATION	8.231720355753616E-7	DESIGN
// line 1757	WITHOUT_CLASSIFICATION	0.9999991214276984	WITHOUT_CLASSIFICATION	8.785723016150838E-7	DESIGN
// line 1769	WITHOUT_CLASSIFICATION	0.999998819681615	WITHOUT_CLASSIFICATION	1.1803183850350706E-6	DESIGN
// line 1772	WITHOUT_CLASSIFICATION	0.9999994277147466	WITHOUT_CLASSIFICATION	5.722852534394948E-7	DESIGN
// line 1775	WITHOUT_CLASSIFICATION	0.9999990125930514	WITHOUT_CLASSIFICATION	9.87406948620205E-7	DESIGN
// line 1784	WITHOUT_CLASSIFICATION	0.9999993741289875	WITHOUT_CLASSIFICATION	6.258710124739718E-7	DESIGN
// line 1808	WITHOUT_CLASSIFICATION	0.9999997378405016	WITHOUT_CLASSIFICATION	2.6215949843733544E-7	DESIGN
// line 1814	WITHOUT_CLASSIFICATION	0.9999996436272206	WITHOUT_CLASSIFICATION	3.563727794058148E-7	DESIGN
// line 1818	WITHOUT_CLASSIFICATION	0.9999995967706327	WITHOUT_CLASSIFICATION	4.0322936733422043E-7	DESIGN
// line 1822	WITHOUT_CLASSIFICATION	0.9999998369669958	WITHOUT_CLASSIFICATION	1.630330041833465E-7	DESIGN
/* force for args */	WITHOUT_CLASSIFICATION	0.9999763566882417	WITHOUT_CLASSIFICATION	2.3643311758348416E-5	DESIGN
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9880867842287491	WITHOUT_CLASSIFICATION	0.011913215771250917	DESIGN
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9999954911635577	WITHOUT_CLASSIFICATION	4.508836442357479E-6	DESIGN
/*                  }*/	WITHOUT_CLASSIFICATION	0.9999338710086648	WITHOUT_CLASSIFICATION	6.612899133517693E-5	DESIGN
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999968688314765	WITHOUT_CLASSIFICATION	3.1311685234932866E-6	DESIGN
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9997276378752062	WITHOUT_CLASSIFICATION	2.723621247937902E-4	DESIGN
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9917550296877105	WITHOUT_CLASSIFICATION	0.008244970312289499	DESIGN
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9890266370547329	WITHOUT_CLASSIFICATION	0.010973362945267087	DESIGN
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.999961251168861	WITHOUT_CLASSIFICATION	3.874883113899943E-5	DESIGN
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.997720595947776	WITHOUT_CLASSIFICATION	0.0022794040522239887	DESIGN
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9999290682410333	WITHOUT_CLASSIFICATION	7.093175896669741E-5	DESIGN
// line 529	WITHOUT_CLASSIFICATION	0.999999161650295	WITHOUT_CLASSIFICATION	8.383497050718408E-7	DESIGN
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999975998297372	WITHOUT_CLASSIFICATION	2.400170262811836E-6	DESIGN
/* XXX*/	WITHOUT_CLASSIFICATION	0.9819025202769252	WITHOUT_CLASSIFICATION	0.018097479723074857	DESIGN
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999954140354472	WITHOUT_CLASSIFICATION	4.5859645527723254E-6	DESIGN
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999971373521677	WITHOUT_CLASSIFICATION	2.862647832299027E-6	DESIGN
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9985543388478652	WITHOUT_CLASSIFICATION	0.0014456611521348577	DESIGN
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999990839711451	WITHOUT_CLASSIFICATION	9.160288547895206E-7	DESIGN
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999999999150623	WITHOUT_CLASSIFICATION	8.493766494067176E-11	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999946475117321	WITHOUT_CLASSIFICATION	5.3524882680259796E-6	DESIGN
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999999947925954	WITHOUT_CLASSIFICATION	5.2074045494107825E-9	DESIGN
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999999310600859	WITHOUT_CLASSIFICATION	6.89399140295374E-8	DESIGN
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999971816935376	WITHOUT_CLASSIFICATION	2.8183064624564315E-6	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999996661997789	WITHOUT_CLASSIFICATION	3.338002211293595E-7	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999996661997789	WITHOUT_CLASSIFICATION	3.338002211293595E-7	DESIGN
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.949399857553293	WITHOUT_CLASSIFICATION	0.050600142446706915	DESIGN
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9458902234109486	WITHOUT_CLASSIFICATION	0.05410977658905131	DESIGN
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9996653841830648	WITHOUT_CLASSIFICATION	3.346158169351843E-4	DESIGN
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9869566917593192	WITHOUT_CLASSIFICATION	0.013043308240680824	DESIGN
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9999952353318105	WITHOUT_CLASSIFICATION	4.764668189574221E-6	DESIGN
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999999940305686	WITHOUT_CLASSIFICATION	5.969431381603128E-9	DESIGN
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999888791503962	WITHOUT_CLASSIFICATION	1.112084960374471E-5	DESIGN
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999999909561329	WITHOUT_CLASSIFICATION	9.043867091779882E-9	DESIGN
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9205944700378165	WITHOUT_CLASSIFICATION	0.07940552996218356	DESIGN
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.999999993280513	WITHOUT_CLASSIFICATION	6.7194869529242665E-9	DESIGN
// Parser states:	WITHOUT_CLASSIFICATION	0.9999992272814218	WITHOUT_CLASSIFICATION	7.727185781427288E-7	DESIGN
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9999982995580268	WITHOUT_CLASSIFICATION	1.7004419731686667E-6	DESIGN
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9999993531075283	WITHOUT_CLASSIFICATION	6.4689247173448E-7	DESIGN
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9999980027239308	WITHOUT_CLASSIFICATION	1.9972760691671313E-6	DESIGN
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999965265013545	WITHOUT_CLASSIFICATION	3.473498645515866E-6	DESIGN
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999999233018058	WITHOUT_CLASSIFICATION	7.669819418326924E-8	DESIGN
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999998620935141	WITHOUT_CLASSIFICATION	1.3790648587600174E-7	DESIGN
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9985647900355271	WITHOUT_CLASSIFICATION	0.0014352099644728458	DESIGN
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9986280800542184	WITHOUT_CLASSIFICATION	0.0013719199457815762	DESIGN
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9999696660152119	WITHOUT_CLASSIFICATION	3.0333984788205886E-5	DESIGN
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999999555726892	WITHOUT_CLASSIFICATION	4.442731086273896E-8	DESIGN
// Node	WITHOUT_CLASSIFICATION	0.9999575445048378	WITHOUT_CLASSIFICATION	4.245549516217619E-5	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9308915923892371	DESIGN	0.06910840761076287	WITHOUT_CLASSIFICATION
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9996479544797126	WITHOUT_CLASSIFICATION	3.5204552028749716E-4	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9308915923892371	DESIGN	0.06910840761076287	WITHOUT_CLASSIFICATION
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9999711972384066	WITHOUT_CLASSIFICATION	2.8802761593494754E-5	DESIGN
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9989241240053013	WITHOUT_CLASSIFICATION	0.0010758759946988058	DESIGN
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.5883300804406342	WITHOUT_CLASSIFICATION	0.4116699195593658	DESIGN
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9997770509238922	WITHOUT_CLASSIFICATION	2.2294907610777547E-4	DESIGN
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999994605975291	WITHOUT_CLASSIFICATION	5.394024708723016E-7	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9999977001087618	WITHOUT_CLASSIFICATION	2.299891238251796E-6	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9999977001087618	WITHOUT_CLASSIFICATION	2.299891238251796E-6	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9999977001087618	WITHOUT_CLASSIFICATION	2.299891238251796E-6	DESIGN
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9999929177286663	WITHOUT_CLASSIFICATION	7.082271333700069E-6	DESIGN
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9999713356905121	WITHOUT_CLASSIFICATION	2.8664309487851544E-5	DESIGN
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999664165423265	WITHOUT_CLASSIFICATION	3.358345767346753E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998684298392143	WITHOUT_CLASSIFICATION	1.3157016078564266E-4	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998684298392143	WITHOUT_CLASSIFICATION	1.3157016078564266E-4	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998684298392143	WITHOUT_CLASSIFICATION	1.3157016078564266E-4	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998684298392143	WITHOUT_CLASSIFICATION	1.3157016078564266E-4	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998684298392143	WITHOUT_CLASSIFICATION	1.3157016078564266E-4	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998684298392143	WITHOUT_CLASSIFICATION	1.3157016078564266E-4	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999159410783327	WITHOUT_CLASSIFICATION	8.405892166727839E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999159410783327	WITHOUT_CLASSIFICATION	8.405892166727839E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999159410783327	WITHOUT_CLASSIFICATION	8.405892166727839E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999159410783327	WITHOUT_CLASSIFICATION	8.405892166727839E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999159410783327	WITHOUT_CLASSIFICATION	8.405892166727839E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9994581767730322	WITHOUT_CLASSIFICATION	5.418232269677245E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9994581767730322	WITHOUT_CLASSIFICATION	5.418232269677245E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9994581767730322	WITHOUT_CLASSIFICATION	5.418232269677245E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9994581767730322	WITHOUT_CLASSIFICATION	5.418232269677245E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9994581767730322	WITHOUT_CLASSIFICATION	5.418232269677245E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998789836376909	WITHOUT_CLASSIFICATION	1.2101636230904601E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998789836376909	WITHOUT_CLASSIFICATION	1.2101636230904601E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998789836376909	WITHOUT_CLASSIFICATION	1.2101636230904601E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998789836376909	WITHOUT_CLASSIFICATION	1.2101636230904601E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998789836376909	WITHOUT_CLASSIFICATION	1.2101636230904601E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998789836376909	WITHOUT_CLASSIFICATION	1.2101636230904601E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999695008008922	WITHOUT_CLASSIFICATION	3.0499199107830298E-5	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999695008008922	WITHOUT_CLASSIFICATION	3.0499199107830298E-5	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999695008008922	WITHOUT_CLASSIFICATION	3.0499199107830298E-5	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999695008008922	WITHOUT_CLASSIFICATION	3.0499199107830298E-5	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999695008008922	WITHOUT_CLASSIFICATION	3.0499199107830298E-5	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999653012903831	WITHOUT_CLASSIFICATION	3.469870961687522E-5	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999653012903831	WITHOUT_CLASSIFICATION	3.469870961687522E-5	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999653012903831	WITHOUT_CLASSIFICATION	3.469870961687522E-5	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999653012903831	WITHOUT_CLASSIFICATION	3.469870961687522E-5	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999653012903831	WITHOUT_CLASSIFICATION	3.469870961687522E-5	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999838596534827	WITHOUT_CLASSIFICATION	1.6140346517306143E-5	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999838596534827	WITHOUT_CLASSIFICATION	1.6140346517306143E-5	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999838596534827	WITHOUT_CLASSIFICATION	1.6140346517306143E-5	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999838596534827	WITHOUT_CLASSIFICATION	1.6140346517306143E-5	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999838596534827	WITHOUT_CLASSIFICATION	1.6140346517306143E-5	DESIGN
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999524820695808	WITHOUT_CLASSIFICATION	4.751793041925797E-5	DESIGN
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999104823571991	WITHOUT_CLASSIFICATION	8.951764280091829E-5	DESIGN
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999013038884702	WITHOUT_CLASSIFICATION	9.869611152970617E-5	DESIGN
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9970516669418752	WITHOUT_CLASSIFICATION	0.002948333058124673	DESIGN
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999439799525851	WITHOUT_CLASSIFICATION	5.6020047414913625E-5	DESIGN
// line 321	WITHOUT_CLASSIFICATION	0.9999996532581543	WITHOUT_CLASSIFICATION	3.467418456829201E-7	DESIGN
// line 351	WITHOUT_CLASSIFICATION	0.9999994469747668	WITHOUT_CLASSIFICATION	5.530252332150432E-7	DESIGN
// line 382	WITHOUT_CLASSIFICATION	0.9999996966701812	WITHOUT_CLASSIFICATION	3.033298188512545E-7	DESIGN
// line 417	WITHOUT_CLASSIFICATION	0.9999992221786409	WITHOUT_CLASSIFICATION	7.778213591816836E-7	DESIGN
// line 420	WITHOUT_CLASSIFICATION	0.9999996623624208	WITHOUT_CLASSIFICATION	3.3763757919957987E-7	DESIGN
// line 423	WITHOUT_CLASSIFICATION	0.9999994602842632	WITHOUT_CLASSIFICATION	5.397157367243511E-7	DESIGN
// line 426	WITHOUT_CLASSIFICATION	0.999998875469765	WITHOUT_CLASSIFICATION	1.124530235016016E-6	DESIGN
// line 280	WITHOUT_CLASSIFICATION	0.999999828922937	WITHOUT_CLASSIFICATION	1.710770630652821E-7	DESIGN
// line 283	WITHOUT_CLASSIFICATION	0.9999997175216011	WITHOUT_CLASSIFICATION	2.8247839890656145E-7	DESIGN
// line 296	WITHOUT_CLASSIFICATION	0.9999991972359927	WITHOUT_CLASSIFICATION	8.027640072440893E-7	DESIGN
// line 324	WITHOUT_CLASSIFICATION	0.9999994012960619	WITHOUT_CLASSIFICATION	5.98703938126269E-7	DESIGN
// line 327	WITHOUT_CLASSIFICATION	0.999999331102899	WITHOUT_CLASSIFICATION	6.688971011161201E-7	DESIGN
// line 331	WITHOUT_CLASSIFICATION	0.9999994021543305	WITHOUT_CLASSIFICATION	5.97845669520003E-7	DESIGN
// line 333	WITHOUT_CLASSIFICATION	0.9999988229590671	WITHOUT_CLASSIFICATION	1.1770409330258284E-6	DESIGN
// line 336	WITHOUT_CLASSIFICATION	0.9999983322224104	WITHOUT_CLASSIFICATION	1.6677775896027625E-6	DESIGN
// line 342	WITHOUT_CLASSIFICATION	0.9999995658688376	WITHOUT_CLASSIFICATION	4.341311623736425E-7	DESIGN
// line 345	WITHOUT_CLASSIFICATION	0.9999993600929453	WITHOUT_CLASSIFICATION	6.399070546126102E-7	DESIGN
// line 348	WITHOUT_CLASSIFICATION	0.9999993662907934	WITHOUT_CLASSIFICATION	6.337092066015498E-7	DESIGN
// line 354	WITHOUT_CLASSIFICATION	0.9999990243503093	WITHOUT_CLASSIFICATION	9.756496907607117E-7	DESIGN
// line 368	WITHOUT_CLASSIFICATION	0.9999992267066617	WITHOUT_CLASSIFICATION	7.73293338241298E-7	DESIGN
// line 377	WITHOUT_CLASSIFICATION	0.9999987603622508	WITHOUT_CLASSIFICATION	1.2396377492372554E-6	DESIGN
// line 388	WITHOUT_CLASSIFICATION	0.9999993536310892	WITHOUT_CLASSIFICATION	6.463689108621737E-7	DESIGN
// line 392	WITHOUT_CLASSIFICATION	0.9999993834499944	WITHOUT_CLASSIFICATION	6.165500056902411E-7	DESIGN
// line 397	WITHOUT_CLASSIFICATION	0.9999986955638288	WITHOUT_CLASSIFICATION	1.3044361712242134E-6	DESIGN
// line 429	WITHOUT_CLASSIFICATION	0.9999993835360044	WITHOUT_CLASSIFICATION	6.164639956223465E-7	DESIGN
// line 432	WITHOUT_CLASSIFICATION	0.9999995103477056	WITHOUT_CLASSIFICATION	4.896522944690442E-7	DESIGN
// line 436	WITHOUT_CLASSIFICATION	0.999998584174449	WITHOUT_CLASSIFICATION	1.4158255511126153E-6	DESIGN
// line 445	WITHOUT_CLASSIFICATION	0.9999990716232693	WITHOUT_CLASSIFICATION	9.283767306617425E-7	DESIGN
// line 448	WITHOUT_CLASSIFICATION	0.9999990970574845	WITHOUT_CLASSIFICATION	9.029425154913824E-7	DESIGN
// line 454	WITHOUT_CLASSIFICATION	0.9999989142101566	WITHOUT_CLASSIFICATION	1.0857898433926514E-6	DESIGN
// line 459	WITHOUT_CLASSIFICATION	0.9999988055892299	WITHOUT_CLASSIFICATION	1.1944107699781282E-6	DESIGN
// line 466	WITHOUT_CLASSIFICATION	0.9999982984654895	WITHOUT_CLASSIFICATION	1.7015345105468809E-6	DESIGN
// line 469	WITHOUT_CLASSIFICATION	0.9999986901625051	WITHOUT_CLASSIFICATION	1.3098374948365477E-6	DESIGN
// line 478	WITHOUT_CLASSIFICATION	0.9999991620865332	WITHOUT_CLASSIFICATION	8.379134667303306E-7	DESIGN
// line 481	WITHOUT_CLASSIFICATION	0.9999995563432811	WITHOUT_CLASSIFICATION	4.4365671884288767E-7	DESIGN
// line 488	WITHOUT_CLASSIFICATION	0.9999991946840634	WITHOUT_CLASSIFICATION	8.053159366001554E-7	DESIGN
// line 494	WITHOUT_CLASSIFICATION	0.9999986343130264	WITHOUT_CLASSIFICATION	1.3656869737060411E-6	DESIGN
// line 497	WITHOUT_CLASSIFICATION	0.9999987338626396	WITHOUT_CLASSIFICATION	1.2661373603859493E-6	DESIGN
// line 503	WITHOUT_CLASSIFICATION	0.9999991561762603	WITHOUT_CLASSIFICATION	8.438237396488997E-7	DESIGN
// line 506	WITHOUT_CLASSIFICATION	0.999997935041209	WITHOUT_CLASSIFICATION	2.064958790870094E-6	DESIGN
// line 509	WITHOUT_CLASSIFICATION	0.9999990160188673	WITHOUT_CLASSIFICATION	9.839811326468496E-7	DESIGN
// line 512	WITHOUT_CLASSIFICATION	0.9999995665685463	WITHOUT_CLASSIFICATION	4.3343145369664427E-7	DESIGN
// line 521	WITHOUT_CLASSIFICATION	0.999999516635148	WITHOUT_CLASSIFICATION	4.833648520285311E-7	DESIGN
// line 526	WITHOUT_CLASSIFICATION	0.9999984705577907	WITHOUT_CLASSIFICATION	1.5294422093256425E-6	DESIGN
// line 540	WITHOUT_CLASSIFICATION	0.9999993154403807	WITHOUT_CLASSIFICATION	6.845596193664274E-7	DESIGN
// line 543	WITHOUT_CLASSIFICATION	0.9999988790392896	WITHOUT_CLASSIFICATION	1.1209607103854645E-6	DESIGN
// line 546	WITHOUT_CLASSIFICATION	0.9999980142205401	WITHOUT_CLASSIFICATION	1.9857794597909626E-6	DESIGN
// line 566	WITHOUT_CLASSIFICATION	0.9999976602754079	WITHOUT_CLASSIFICATION	2.3397245920406293E-6	DESIGN
// line 610	WITHOUT_CLASSIFICATION	0.999999566811846	WITHOUT_CLASSIFICATION	4.3318815402839144E-7	DESIGN
// line 672	WITHOUT_CLASSIFICATION	0.9999990986796233	WITHOUT_CLASSIFICATION	9.013203767985254E-7	DESIGN
// line 691	WITHOUT_CLASSIFICATION	0.9999990557638453	WITHOUT_CLASSIFICATION	9.442361547124613E-7	DESIGN
// line 696	WITHOUT_CLASSIFICATION	0.9999975014670585	WITHOUT_CLASSIFICATION	2.498532941627755E-6	DESIGN
// line 772	WITHOUT_CLASSIFICATION	0.9999991397143737	WITHOUT_CLASSIFICATION	8.602856263618408E-7	DESIGN
// line 782	WITHOUT_CLASSIFICATION	0.999999509056709	WITHOUT_CLASSIFICATION	4.909432909891615E-7	DESIGN
// line 785	WITHOUT_CLASSIFICATION	0.9999991743834711	WITHOUT_CLASSIFICATION	8.256165288653694E-7	DESIGN
// line 788	WITHOUT_CLASSIFICATION	0.9999989799766147	WITHOUT_CLASSIFICATION	1.0200233853739259E-6	DESIGN
// line 791	WITHOUT_CLASSIFICATION	0.9999990951012421	WITHOUT_CLASSIFICATION	9.048987578280364E-7	DESIGN
// line 534	WITHOUT_CLASSIFICATION	0.9999989017414868	WITHOUT_CLASSIFICATION	1.0982585132063917E-6	DESIGN
// line 549	WITHOUT_CLASSIFICATION	0.9999985847754999	WITHOUT_CLASSIFICATION	1.4152245000726515E-6	DESIGN
// line 552	WITHOUT_CLASSIFICATION	0.9999992000678771	WITHOUT_CLASSIFICATION	7.999321228203044E-7	DESIGN
// line 558	WITHOUT_CLASSIFICATION	0.9999989547867342	WITHOUT_CLASSIFICATION	1.0452132658722058E-6	DESIGN
// line 561	WITHOUT_CLASSIFICATION	0.999999068868664	WITHOUT_CLASSIFICATION	9.311313360083474E-7	DESIGN
// line 571	WITHOUT_CLASSIFICATION	0.9999990988589059	WITHOUT_CLASSIFICATION	9.011410940908152E-7	DESIGN
// line 574	WITHOUT_CLASSIFICATION	0.9999985005274005	WITHOUT_CLASSIFICATION	1.4994725995017302E-6	DESIGN
// line 579	WITHOUT_CLASSIFICATION	0.9999982583291218	WITHOUT_CLASSIFICATION	1.7416708781753867E-6	DESIGN
// line 586	WITHOUT_CLASSIFICATION	0.999998418930833	WITHOUT_CLASSIFICATION	1.5810691670389638E-6	DESIGN
// line 589	WITHOUT_CLASSIFICATION	0.9999989931261806	WITHOUT_CLASSIFICATION	1.0068738194299923E-6	DESIGN
// line 592	WITHOUT_CLASSIFICATION	0.9999988667994025	WITHOUT_CLASSIFICATION	1.1332005974023258E-6	DESIGN
// line 595	WITHOUT_CLASSIFICATION	0.9999977880680603	WITHOUT_CLASSIFICATION	2.2119319397656473E-6	DESIGN
// line 598	WITHOUT_CLASSIFICATION	0.9999984485408809	WITHOUT_CLASSIFICATION	1.551459119061358E-6	DESIGN
// line 623	WITHOUT_CLASSIFICATION	0.9999992394415177	WITHOUT_CLASSIFICATION	7.605584823530885E-7	DESIGN
// line 627	WITHOUT_CLASSIFICATION	0.999999083548561	WITHOUT_CLASSIFICATION	9.16451439086157E-7	DESIGN
// line 630	WITHOUT_CLASSIFICATION	0.9999993504063807	WITHOUT_CLASSIFICATION	6.495936193444644E-7	DESIGN
// line 633	WITHOUT_CLASSIFICATION	0.9999985023448139	WITHOUT_CLASSIFICATION	1.4976551861384509E-6	DESIGN
// line 639	WITHOUT_CLASSIFICATION	0.9999983290288876	WITHOUT_CLASSIFICATION	1.6709711123280254E-6	DESIGN
// line 648	WITHOUT_CLASSIFICATION	0.9999989941705728	WITHOUT_CLASSIFICATION	1.0058294271947965E-6	DESIGN
// line 657	WITHOUT_CLASSIFICATION	0.9999984512025519	WITHOUT_CLASSIFICATION	1.5487974480211156E-6	DESIGN
// line 661	WITHOUT_CLASSIFICATION	0.9999990707790206	WITHOUT_CLASSIFICATION	9.292209793405942E-7	DESIGN
// line 666	WITHOUT_CLASSIFICATION	0.9999976236158208	WITHOUT_CLASSIFICATION	2.3763841792514897E-6	DESIGN
// line 678	WITHOUT_CLASSIFICATION	0.9999988585936632	WITHOUT_CLASSIFICATION	1.1414063367357998E-6	DESIGN
// line 682	WITHOUT_CLASSIFICATION	0.9999994923077137	WITHOUT_CLASSIFICATION	5.076922862802119E-7	DESIGN
// line 688	WITHOUT_CLASSIFICATION	0.9999989215228436	WITHOUT_CLASSIFICATION	1.0784771563005022E-6	DESIGN
// line 699	WITHOUT_CLASSIFICATION	0.9999981840307166	WITHOUT_CLASSIFICATION	1.8159692833933038E-6	DESIGN
// line 706	WITHOUT_CLASSIFICATION	0.9999977035291935	WITHOUT_CLASSIFICATION	2.2964708065373303E-6	DESIGN
// line 708	WITHOUT_CLASSIFICATION	0.9999992695748203	WITHOUT_CLASSIFICATION	7.30425179760722E-7	DESIGN
// line 727	WITHOUT_CLASSIFICATION	0.9999991112191027	WITHOUT_CLASSIFICATION	8.887808972224443E-7	DESIGN
// line 737	WITHOUT_CLASSIFICATION	0.9999986886563728	WITHOUT_CLASSIFICATION	1.3113436272442898E-6	DESIGN
// line 753	WITHOUT_CLASSIFICATION	0.9999988390030794	WITHOUT_CLASSIFICATION	1.160996920527634E-6	DESIGN
// line 779	WITHOUT_CLASSIFICATION	0.9999981547392577	WITHOUT_CLASSIFICATION	1.845260742329269E-6	DESIGN
// line 801	WITHOUT_CLASSIFICATION	0.9999996671829862	WITHOUT_CLASSIFICATION	3.328170137940156E-7	DESIGN
// line 808	WITHOUT_CLASSIFICATION	0.9999993485786232	WITHOUT_CLASSIFICATION	6.514213769087197E-7	DESIGN
// line 811	WITHOUT_CLASSIFICATION	0.9999994856406816	WITHOUT_CLASSIFICATION	5.143593183854627E-7	DESIGN
// line 817	WITHOUT_CLASSIFICATION	0.9999993818459839	WITHOUT_CLASSIFICATION	6.181540161843366E-7	DESIGN
// line 842	WITHOUT_CLASSIFICATION	0.9999995760385502	WITHOUT_CLASSIFICATION	4.239614498301583E-7	DESIGN
// line 845	WITHOUT_CLASSIFICATION	0.9999993460359232	WITHOUT_CLASSIFICATION	6.539640767461104E-7	DESIGN
// line 848	WITHOUT_CLASSIFICATION	0.9999990383653918	WITHOUT_CLASSIFICATION	9.616346082184458E-7	DESIGN
// line 893	WITHOUT_CLASSIFICATION	0.9999992305368622	WITHOUT_CLASSIFICATION	7.694631377848138E-7	DESIGN
// line 899	WITHOUT_CLASSIFICATION	0.9999990494686514	WITHOUT_CLASSIFICATION	9.505313485689585E-7	DESIGN
// line 932	WITHOUT_CLASSIFICATION	0.999999374318399	WITHOUT_CLASSIFICATION	6.256816010130318E-7	DESIGN
// line 944	WITHOUT_CLASSIFICATION	0.9999985586731432	WITHOUT_CLASSIFICATION	1.4413268566816448E-6	DESIGN
// line 960	WITHOUT_CLASSIFICATION	0.999999149439459	WITHOUT_CLASSIFICATION	8.505605410925926E-7	DESIGN
// line 980	WITHOUT_CLASSIFICATION	0.9999994864303382	WITHOUT_CLASSIFICATION	5.135696618170246E-7	DESIGN
// line 1004	WITHOUT_CLASSIFICATION	0.9999995551379555	WITHOUT_CLASSIFICATION	4.448620445319215E-7	DESIGN
// line 1038	WITHOUT_CLASSIFICATION	0.9999997910230889	WITHOUT_CLASSIFICATION	2.0897691099706193E-7	DESIGN
// line 820	WITHOUT_CLASSIFICATION	0.9999997510667161	WITHOUT_CLASSIFICATION	2.4893328392155177E-7	DESIGN
// line 826	WITHOUT_CLASSIFICATION	0.999999172905487	WITHOUT_CLASSIFICATION	8.270945130285313E-7	DESIGN
// line 829	WITHOUT_CLASSIFICATION	0.9999995468915002	WITHOUT_CLASSIFICATION	4.5310849989022805E-7	DESIGN
// line 832	WITHOUT_CLASSIFICATION	0.999999575919824	WITHOUT_CLASSIFICATION	4.240801760182865E-7	DESIGN
// line 851	WITHOUT_CLASSIFICATION	0.9999995771286515	WITHOUT_CLASSIFICATION	4.228713485810773E-7	DESIGN
// line 857	WITHOUT_CLASSIFICATION	0.9999991619510412	WITHOUT_CLASSIFICATION	8.380489587653681E-7	DESIGN
// line 860	WITHOUT_CLASSIFICATION	0.999999477705925	WITHOUT_CLASSIFICATION	5.222940751101202E-7	DESIGN
// line 863	WITHOUT_CLASSIFICATION	0.9999990727443586	WITHOUT_CLASSIFICATION	9.272556413176786E-7	DESIGN
// line 866	WITHOUT_CLASSIFICATION	0.9999985457308785	WITHOUT_CLASSIFICATION	1.4542691214215487E-6	DESIGN
// line 869	WITHOUT_CLASSIFICATION	0.999998877632258	WITHOUT_CLASSIFICATION	1.1223677419436123E-6	DESIGN
// line 875	WITHOUT_CLASSIFICATION	0.9999991801597583	WITHOUT_CLASSIFICATION	8.19840241691743E-7	DESIGN
// line 884	WITHOUT_CLASSIFICATION	0.9999990906864359	WITHOUT_CLASSIFICATION	9.093135641491055E-7	DESIGN
// line 887	WITHOUT_CLASSIFICATION	0.9999990293808418	WITHOUT_CLASSIFICATION	9.706191580834144E-7	DESIGN
// line 890	WITHOUT_CLASSIFICATION	0.9999994939506552	WITHOUT_CLASSIFICATION	5.060493448089782E-7	DESIGN
// line 902	WITHOUT_CLASSIFICATION	0.9999994737908275	WITHOUT_CLASSIFICATION	5.262091724284484E-7	DESIGN
// line 909	WITHOUT_CLASSIFICATION	0.9999988872548559	WITHOUT_CLASSIFICATION	1.1127451441556044E-6	DESIGN
// line 912	WITHOUT_CLASSIFICATION	0.9999995867411021	WITHOUT_CLASSIFICATION	4.132588978038172E-7	DESIGN
// line 916	WITHOUT_CLASSIFICATION	0.9999985616840704	WITHOUT_CLASSIFICATION	1.4383159295995347E-6	DESIGN
// line 922	WITHOUT_CLASSIFICATION	0.999999313531862	WITHOUT_CLASSIFICATION	6.864681379759227E-7	DESIGN
// line 928	WITHOUT_CLASSIFICATION	0.9999995407761876	WITHOUT_CLASSIFICATION	4.5922381231629117E-7	DESIGN
// line 941	WITHOUT_CLASSIFICATION	0.9999993123591668	WITHOUT_CLASSIFICATION	6.876408331599721E-7	DESIGN
// line 947	WITHOUT_CLASSIFICATION	0.9999986033425456	WITHOUT_CLASSIFICATION	1.3966574544355642E-6	DESIGN
// line 951	WITHOUT_CLASSIFICATION	0.9999993249735434	WITHOUT_CLASSIFICATION	6.750264565041761E-7	DESIGN
// line 955	WITHOUT_CLASSIFICATION	0.9999988174960329	WITHOUT_CLASSIFICATION	1.1825039671627987E-6	DESIGN
// line 965	WITHOUT_CLASSIFICATION	0.9999986139329885	WITHOUT_CLASSIFICATION	1.3860670115821903E-6	DESIGN
// line 969	WITHOUT_CLASSIFICATION	0.9999981887864856	WITHOUT_CLASSIFICATION	1.8112135143131062E-6	DESIGN
// line 977	WITHOUT_CLASSIFICATION	0.9999983268643994	WITHOUT_CLASSIFICATION	1.6731356004945835E-6	DESIGN
// line 983	WITHOUT_CLASSIFICATION	0.9999991568398223	WITHOUT_CLASSIFICATION	8.431601776809205E-7	DESIGN
// line 1013	WITHOUT_CLASSIFICATION	0.9999996864200534	WITHOUT_CLASSIFICATION	3.135799464630554E-7	DESIGN
// line 1023	WITHOUT_CLASSIFICATION	0.9999998277792561	WITHOUT_CLASSIFICATION	1.722207440153813E-7	DESIGN
// line 1035	WITHOUT_CLASSIFICATION	0.9999997160443667	WITHOUT_CLASSIFICATION	2.8395563325537694E-7	DESIGN
// line 1041	WITHOUT_CLASSIFICATION	0.9999996897170452	WITHOUT_CLASSIFICATION	3.102829546799023E-7	DESIGN
// line 1043	WITHOUT_CLASSIFICATION	0.9999997303312026	WITHOUT_CLASSIFICATION	2.6966879743060173E-7	DESIGN
// line 1054	WITHOUT_CLASSIFICATION	0.9999996935716536	WITHOUT_CLASSIFICATION	3.0642834630197413E-7	DESIGN
// line 1057	WITHOUT_CLASSIFICATION	0.9999996557760497	WITHOUT_CLASSIFICATION	3.4422395026790284E-7	DESIGN
// line 1060	WITHOUT_CLASSIFICATION	0.9999996121484105	WITHOUT_CLASSIFICATION	3.8785158953223227E-7	DESIGN
// line 1069	WITHOUT_CLASSIFICATION	0.999999489467657	WITHOUT_CLASSIFICATION	5.105323429291441E-7	DESIGN
// line 1075	WITHOUT_CLASSIFICATION	0.9999996297610254	WITHOUT_CLASSIFICATION	3.702389745756818E-7	DESIGN
// line 1105	WITHOUT_CLASSIFICATION	0.9999996750843035	WITHOUT_CLASSIFICATION	3.2491569650029967E-7	DESIGN
// line 1111	WITHOUT_CLASSIFICATION	0.9999991996687961	WITHOUT_CLASSIFICATION	8.003312038860942E-7	DESIGN
// line 1122	WITHOUT_CLASSIFICATION	0.9999996005488022	WITHOUT_CLASSIFICATION	3.994511977431773E-7	DESIGN
// line 1130	WITHOUT_CLASSIFICATION	0.9999997134442111	WITHOUT_CLASSIFICATION	2.8655578883885597E-7	DESIGN
// line 1140	WITHOUT_CLASSIFICATION	0.9999996689438585	WITHOUT_CLASSIFICATION	3.310561414697733E-7	DESIGN
// line 1158	WITHOUT_CLASSIFICATION	0.9999995486786659	WITHOUT_CLASSIFICATION	4.513213340891452E-7	DESIGN
// line 1204	WITHOUT_CLASSIFICATION	0.9999997407512633	WITHOUT_CLASSIFICATION	2.5924873668467914E-7	DESIGN
// line 1207	WITHOUT_CLASSIFICATION	0.9999996995563755	WITHOUT_CLASSIFICATION	3.0044362457420477E-7	DESIGN
// line 1247	WITHOUT_CLASSIFICATION	0.9999996247073084	WITHOUT_CLASSIFICATION	3.7529269154887744E-7	DESIGN
// line 1251	WITHOUT_CLASSIFICATION	0.9999996966226867	WITHOUT_CLASSIFICATION	3.0337731331119085E-7	DESIGN
// line 1261	WITHOUT_CLASSIFICATION	0.9999995446669813	WITHOUT_CLASSIFICATION	4.553330187090293E-7	DESIGN
// line 1078	WITHOUT_CLASSIFICATION	0.9999997063646646	WITHOUT_CLASSIFICATION	2.9363533531190786E-7	DESIGN
// line 1084	WITHOUT_CLASSIFICATION	0.999999748856648	WITHOUT_CLASSIFICATION	2.511433519331383E-7	DESIGN
// line 1087	WITHOUT_CLASSIFICATION	0.9999997320054459	WITHOUT_CLASSIFICATION	2.679945541003687E-7	DESIGN
// line 1090	WITHOUT_CLASSIFICATION	0.9999996447372009	WITHOUT_CLASSIFICATION	3.552627990692681E-7	DESIGN
// line 1093	WITHOUT_CLASSIFICATION	0.9999996713075463	WITHOUT_CLASSIFICATION	3.2869245364943055E-7	DESIGN
// line 1114	WITHOUT_CLASSIFICATION	0.999999243604212	WITHOUT_CLASSIFICATION	7.56395788041465E-7	DESIGN
// line 1116	WITHOUT_CLASSIFICATION	0.9999986534882479	WITHOUT_CLASSIFICATION	1.3465117520627012E-6	DESIGN
// line 1118	WITHOUT_CLASSIFICATION	0.9999995891351372	WITHOUT_CLASSIFICATION	4.108648627568642E-7	DESIGN
// line 1124	WITHOUT_CLASSIFICATION	0.9999995957828596	WITHOUT_CLASSIFICATION	4.0421714033957917E-7	DESIGN
// line 1126	WITHOUT_CLASSIFICATION	0.9999992549496943	WITHOUT_CLASSIFICATION	7.45050305628823E-7	DESIGN
// line 1138	WITHOUT_CLASSIFICATION	0.9999995887945957	WITHOUT_CLASSIFICATION	4.1120540428841397E-7	DESIGN
// line 1144	WITHOUT_CLASSIFICATION	0.9999992378808209	WITHOUT_CLASSIFICATION	7.621191790457086E-7	DESIGN
// line 1149	WITHOUT_CLASSIFICATION	0.9999993148912112	WITHOUT_CLASSIFICATION	6.851087887583833E-7	DESIGN
// line 1155	WITHOUT_CLASSIFICATION	0.9999993660539005	WITHOUT_CLASSIFICATION	6.339460995183421E-7	DESIGN
// line 1162	WITHOUT_CLASSIFICATION	0.999999536342492	WITHOUT_CLASSIFICATION	4.6365750807007247E-7	DESIGN
// line 1173	WITHOUT_CLASSIFICATION	0.9999992888603881	WITHOUT_CLASSIFICATION	7.11139611790514E-7	DESIGN
// line 1179	WITHOUT_CLASSIFICATION	0.9999990425792975	WITHOUT_CLASSIFICATION	9.574207025163467E-7	DESIGN
// line 1182	WITHOUT_CLASSIFICATION	0.9999998221585432	WITHOUT_CLASSIFICATION	1.7784145682019635E-7	DESIGN
// line 1190	WITHOUT_CLASSIFICATION	0.9999995720560045	WITHOUT_CLASSIFICATION	4.279439954324248E-7	DESIGN
// line 1196	WITHOUT_CLASSIFICATION	0.9999988315021054	WITHOUT_CLASSIFICATION	1.1684978946105857E-6	DESIGN
// line 1213	WITHOUT_CLASSIFICATION	0.9999996566509725	WITHOUT_CLASSIFICATION	3.4334902758972803E-7	DESIGN
// line 1217	WITHOUT_CLASSIFICATION	0.9999995096649823	WITHOUT_CLASSIFICATION	4.903350177506358E-7	DESIGN
// line 1231	WITHOUT_CLASSIFICATION	0.999999711122332	WITHOUT_CLASSIFICATION	2.8887766793436817E-7	DESIGN
// line 1236	WITHOUT_CLASSIFICATION	0.9999995566818867	WITHOUT_CLASSIFICATION	4.433181133078332E-7	DESIGN
// line 1244	WITHOUT_CLASSIFICATION	0.9999996137962499	WITHOUT_CLASSIFICATION	3.862037500693172E-7	DESIGN
// line 1254	WITHOUT_CLASSIFICATION	0.9999996963662025	WITHOUT_CLASSIFICATION	3.0363379755910166E-7	DESIGN
// line 1258	WITHOUT_CLASSIFICATION	0.9999997865781992	WITHOUT_CLASSIFICATION	2.134218006625654E-7	DESIGN
// line 1264	WITHOUT_CLASSIFICATION	0.9999995718254194	WITHOUT_CLASSIFICATION	4.281745805771837E-7	DESIGN
// line 1270	WITHOUT_CLASSIFICATION	0.9999997777397859	WITHOUT_CLASSIFICATION	2.222602139949012E-7	DESIGN
// line 1273	WITHOUT_CLASSIFICATION	0.9999996852533609	WITHOUT_CLASSIFICATION	3.147466390412056E-7	DESIGN
// line 1276	WITHOUT_CLASSIFICATION	0.9999993211730583	WITHOUT_CLASSIFICATION	6.788269417333841E-7	DESIGN
// line 1279	WITHOUT_CLASSIFICATION	0.9999995722693167	WITHOUT_CLASSIFICATION	4.2773068333568564E-7	DESIGN
// line 1282	WITHOUT_CLASSIFICATION	0.9999997807103193	WITHOUT_CLASSIFICATION	2.1928968075925527E-7	DESIGN
// line 1289	WITHOUT_CLASSIFICATION	0.9999997648579719	WITHOUT_CLASSIFICATION	2.35142028079939E-7	DESIGN
// line 1292	WITHOUT_CLASSIFICATION	0.9999996443995625	WITHOUT_CLASSIFICATION	3.5560043744907604E-7	DESIGN
// line 1295	WITHOUT_CLASSIFICATION	0.9999997013677508	WITHOUT_CLASSIFICATION	2.986322490826292E-7	DESIGN
// line 1298	WITHOUT_CLASSIFICATION	0.9999997541285923	WITHOUT_CLASSIFICATION	2.4587140776755176E-7	DESIGN
// line 1305	WITHOUT_CLASSIFICATION	0.9999997425436792	WITHOUT_CLASSIFICATION	2.5745632084126727E-7	DESIGN
// line 1348	WITHOUT_CLASSIFICATION	0.9999996308666367	WITHOUT_CLASSIFICATION	3.691333632262035E-7	DESIGN
// line 1387	WITHOUT_CLASSIFICATION	0.9999995700433797	WITHOUT_CLASSIFICATION	4.299566204008875E-7	DESIGN
// line 1392	WITHOUT_CLASSIFICATION	0.9999996405647608	WITHOUT_CLASSIFICATION	3.5943523920790904E-7	DESIGN
// line 1448	WITHOUT_CLASSIFICATION	0.9999994654808646	WITHOUT_CLASSIFICATION	5.345191354299292E-7	DESIGN
// line 1462	WITHOUT_CLASSIFICATION	0.9999996510100041	WITHOUT_CLASSIFICATION	3.4898999589243316E-7	DESIGN
// line 1470	WITHOUT_CLASSIFICATION	0.9999995624701082	WITHOUT_CLASSIFICATION	4.3752989176833316E-7	DESIGN
// line 1496	WITHOUT_CLASSIFICATION	0.9999989331219087	WITHOUT_CLASSIFICATION	1.0668780912817618E-6	DESIGN
// line 1502	WITHOUT_CLASSIFICATION	0.9999997902042846	WITHOUT_CLASSIFICATION	2.0979571524232475E-7	DESIGN
// line 1595	WITHOUT_CLASSIFICATION	0.9999992301716848	WITHOUT_CLASSIFICATION	7.698283151851891E-7	DESIGN
// line 1598	WITHOUT_CLASSIFICATION	0.9999994589864449	WITHOUT_CLASSIFICATION	5.410135550741572E-7	DESIGN
// line 1308	WITHOUT_CLASSIFICATION	0.9999997642748939	WITHOUT_CLASSIFICATION	2.3572510597706557E-7	DESIGN
// line 1311	WITHOUT_CLASSIFICATION	0.999999389997586	WITHOUT_CLASSIFICATION	6.10002414071649E-7	DESIGN
// line 1317	WITHOUT_CLASSIFICATION	0.999999265525453	WITHOUT_CLASSIFICATION	7.344745470483225E-7	DESIGN
// line 1323	WITHOUT_CLASSIFICATION	0.9999996229085663	WITHOUT_CLASSIFICATION	3.7709143371526406E-7	DESIGN
// line 1326	WITHOUT_CLASSIFICATION	0.999999372071089	WITHOUT_CLASSIFICATION	6.279289109402888E-7	DESIGN
// line 1329	WITHOUT_CLASSIFICATION	0.999999655771391	WITHOUT_CLASSIFICATION	3.4422860897853745E-7	DESIGN
// line 1337	WITHOUT_CLASSIFICATION	0.9999993199117688	WITHOUT_CLASSIFICATION	6.80088231149731E-7	DESIGN
// line 1342	WITHOUT_CLASSIFICATION	0.9999997471201602	WITHOUT_CLASSIFICATION	2.528798398791254E-7	DESIGN
// line 1345	WITHOUT_CLASSIFICATION	0.9999996272564114	WITHOUT_CLASSIFICATION	3.7274358865528103E-7	DESIGN
// line 1354	WITHOUT_CLASSIFICATION	0.9999994316874374	WITHOUT_CLASSIFICATION	5.683125625194876E-7	DESIGN
// line 1359	WITHOUT_CLASSIFICATION	0.9999992609465462	WITHOUT_CLASSIFICATION	7.390534537251093E-7	DESIGN
// line 1366	WITHOUT_CLASSIFICATION	0.9999990476705449	WITHOUT_CLASSIFICATION	9.523294550034576E-7	DESIGN
// line 1369	WITHOUT_CLASSIFICATION	0.9999992720338997	WITHOUT_CLASSIFICATION	7.279661002239824E-7	DESIGN
// line 1373	WITHOUT_CLASSIFICATION	0.9999993390245725	WITHOUT_CLASSIFICATION	6.60975427538746E-7	DESIGN
// line 1377	WITHOUT_CLASSIFICATION	0.9999992795106314	WITHOUT_CLASSIFICATION	7.204893686370689E-7	DESIGN
// line 1383	WITHOUT_CLASSIFICATION	0.9999995491295062	WITHOUT_CLASSIFICATION	4.5087049376909263E-7	DESIGN
// line 1399	WITHOUT_CLASSIFICATION	0.999999242205913	WITHOUT_CLASSIFICATION	7.577940871311229E-7	DESIGN
// line 1401	WITHOUT_CLASSIFICATION	0.9999996065497295	WITHOUT_CLASSIFICATION	3.934502704908855E-7	DESIGN
// line 1406	WITHOUT_CLASSIFICATION	0.9999991625098227	WITHOUT_CLASSIFICATION	8.374901773286659E-7	DESIGN
// line 1417	WITHOUT_CLASSIFICATION	0.9999992371238599	WITHOUT_CLASSIFICATION	7.628761401258382E-7	DESIGN
// line 1424	WITHOUT_CLASSIFICATION	0.9999995954256998	WITHOUT_CLASSIFICATION	4.0457430016582916E-7	DESIGN
// line 1427	WITHOUT_CLASSIFICATION	0.9999996359883704	WITHOUT_CLASSIFICATION	3.6401162962956896E-7	DESIGN
// line 1430	WITHOUT_CLASSIFICATION	0.9999997596656409	WITHOUT_CLASSIFICATION	2.403343590849473E-7	DESIGN
// line 1433	WITHOUT_CLASSIFICATION	0.999999446031644	WITHOUT_CLASSIFICATION	5.539683559652374E-7	DESIGN
// line 1436	WITHOUT_CLASSIFICATION	0.9999992085264408	WITHOUT_CLASSIFICATION	7.914735593695066E-7	DESIGN
// line 1442	WITHOUT_CLASSIFICATION	0.9999996536964316	WITHOUT_CLASSIFICATION	3.4630356835675953E-7	DESIGN
// line 1445	WITHOUT_CLASSIFICATION	0.9999994658238315	WITHOUT_CLASSIFICATION	5.341761685790951E-7	DESIGN
// line 1458	WITHOUT_CLASSIFICATION	0.9999996392308331	WITHOUT_CLASSIFICATION	3.607691669508194E-7	DESIGN
// line 1464	WITHOUT_CLASSIFICATION	0.9999992364699763	WITHOUT_CLASSIFICATION	7.63530023784144E-7	DESIGN
// line 1489	WITHOUT_CLASSIFICATION	0.9999995386521665	WITHOUT_CLASSIFICATION	4.613478335294885E-7	DESIGN
// line 1493	WITHOUT_CLASSIFICATION	0.999999428835669	WITHOUT_CLASSIFICATION	5.711643310589954E-7	DESIGN
// line 1507	WITHOUT_CLASSIFICATION	0.9999994931205377	WITHOUT_CLASSIFICATION	5.06879462240209E-7	DESIGN
// line 1519	WITHOUT_CLASSIFICATION	0.9999993438096954	WITHOUT_CLASSIFICATION	6.561903047620434E-7	DESIGN
// line 1532	WITHOUT_CLASSIFICATION	0.999999722663947	WITHOUT_CLASSIFICATION	2.773360530238701E-7	DESIGN
// line 1538	WITHOUT_CLASSIFICATION	0.9999996590682474	WITHOUT_CLASSIFICATION	3.4093175259587945E-7	DESIGN
// line 1542	WITHOUT_CLASSIFICATION	0.9999997088368846	WITHOUT_CLASSIFICATION	2.911631153058487E-7	DESIGN
// line 1557	WITHOUT_CLASSIFICATION	0.9999992740423165	WITHOUT_CLASSIFICATION	7.259576835608081E-7	DESIGN
// line 1573	WITHOUT_CLASSIFICATION	0.9999994248943954	WITHOUT_CLASSIFICATION	5.751056045146998E-7	DESIGN
// line 1591	WITHOUT_CLASSIFICATION	0.9999992099349571	WITHOUT_CLASSIFICATION	7.900650429628263E-7	DESIGN
// line 1615	WITHOUT_CLASSIFICATION	0.9999989744130888	WITHOUT_CLASSIFICATION	1.0255869111653368E-6	DESIGN
// line 1629	WITHOUT_CLASSIFICATION	0.9999993814017926	WITHOUT_CLASSIFICATION	6.185982074212485E-7	DESIGN
// line 1632	WITHOUT_CLASSIFICATION	0.9999993995362007	WITHOUT_CLASSIFICATION	6.004637993782959E-7	DESIGN
// line 1705	WITHOUT_CLASSIFICATION	0.9999994889251602	WITHOUT_CLASSIFICATION	5.110748398344719E-7	DESIGN
// line 1716	WITHOUT_CLASSIFICATION	0.9999983369055334	WITHOUT_CLASSIFICATION	1.6630944665965368E-6	DESIGN
// line 1725	WITHOUT_CLASSIFICATION	0.9999995999939681	WITHOUT_CLASSIFICATION	4.0000603185826497E-7	DESIGN
// line 1742	WITHOUT_CLASSIFICATION	0.9999996082148144	WITHOUT_CLASSIFICATION	3.917851855829128E-7	DESIGN
// line 1749	WITHOUT_CLASSIFICATION	0.9999991768279644	WITHOUT_CLASSIFICATION	8.231720355753616E-7	DESIGN
// line 1818	WITHOUT_CLASSIFICATION	0.9999995967706327	WITHOUT_CLASSIFICATION	4.0322936733422043E-7	DESIGN
// line 1822	WITHOUT_CLASSIFICATION	0.9999998369669958	WITHOUT_CLASSIFICATION	1.630330041833465E-7	DESIGN
// line 1607	WITHOUT_CLASSIFICATION	0.9999991281840017	WITHOUT_CLASSIFICATION	8.718159983122035E-7	DESIGN
// line 1610	WITHOUT_CLASSIFICATION	0.9999994401218669	WITHOUT_CLASSIFICATION	5.598781330190989E-7	DESIGN
// line 1622	WITHOUT_CLASSIFICATION	0.999999411946319	WITHOUT_CLASSIFICATION	5.880536809005984E-7	DESIGN
// line 1625	WITHOUT_CLASSIFICATION	0.9999995002845078	WITHOUT_CLASSIFICATION	4.997154923101623E-7	DESIGN
// line 1636	WITHOUT_CLASSIFICATION	0.9999984203374497	WITHOUT_CLASSIFICATION	1.5796625503582807E-6	DESIGN
// line 1639	WITHOUT_CLASSIFICATION	0.9999986442134976	WITHOUT_CLASSIFICATION	1.3557865024078643E-6	DESIGN
// line 1647	WITHOUT_CLASSIFICATION	0.9999989166438948	WITHOUT_CLASSIFICATION	1.0833561051316247E-6	DESIGN
// line 1651	WITHOUT_CLASSIFICATION	0.9999989872787562	WITHOUT_CLASSIFICATION	1.0127212437807043E-6	DESIGN
// line 1657	WITHOUT_CLASSIFICATION	0.9999988638919659	WITHOUT_CLASSIFICATION	1.136108034118046E-6	DESIGN
// line 1660	WITHOUT_CLASSIFICATION	0.9999993895021349	WITHOUT_CLASSIFICATION	6.10497865197302E-7	DESIGN
// line 1663	WITHOUT_CLASSIFICATION	0.9999989183290786	WITHOUT_CLASSIFICATION	1.0816709214558374E-6	DESIGN
// line 1678	WITHOUT_CLASSIFICATION	0.9999991658676278	WITHOUT_CLASSIFICATION	8.341323722096833E-7	DESIGN
// line 1702	WITHOUT_CLASSIFICATION	0.9999996824591048	WITHOUT_CLASSIFICATION	3.1754089516213295E-7	DESIGN
// line 1711	WITHOUT_CLASSIFICATION	0.9999990599450453	WITHOUT_CLASSIFICATION	9.400549546602887E-7	DESIGN
// line 1719	WITHOUT_CLASSIFICATION	0.999999060694648	WITHOUT_CLASSIFICATION	9.393053520004832E-7	DESIGN
// line 1722	WITHOUT_CLASSIFICATION	0.9999995305091173	WITHOUT_CLASSIFICATION	4.694908827775178E-7	DESIGN
// line 1731	WITHOUT_CLASSIFICATION	0.999999289893266	WITHOUT_CLASSIFICATION	7.101067340487501E-7	DESIGN
// line 1734	WITHOUT_CLASSIFICATION	0.9999993509487357	WITHOUT_CLASSIFICATION	6.490512642758393E-7	DESIGN
// line 1738	WITHOUT_CLASSIFICATION	0.9999995114376071	WITHOUT_CLASSIFICATION	4.88562392927766E-7	DESIGN
// line 1746	WITHOUT_CLASSIFICATION	0.9999988474829616	WITHOUT_CLASSIFICATION	1.1525170383409534E-6	DESIGN
// line 1756	WITHOUT_CLASSIFICATION	0.9999987593888952	WITHOUT_CLASSIFICATION	1.2406111049250564E-6	DESIGN
// line 1758	WITHOUT_CLASSIFICATION	0.9999994383162568	WITHOUT_CLASSIFICATION	5.61683743292868E-7	DESIGN
// line 1761	WITHOUT_CLASSIFICATION	0.999998916380548	WITHOUT_CLASSIFICATION	1.0836194520028174E-6	DESIGN
// line 1767	WITHOUT_CLASSIFICATION	0.9999987467977202	WITHOUT_CLASSIFICATION	1.2532022798567412E-6	DESIGN
// line 1776	WITHOUT_CLASSIFICATION	0.9999981014494973	WITHOUT_CLASSIFICATION	1.8985505026781671E-6	DESIGN
// line 1782	WITHOUT_CLASSIFICATION	0.9999997087735323	WITHOUT_CLASSIFICATION	2.912264677616518E-7	DESIGN
// line 1785	WITHOUT_CLASSIFICATION	0.9999995102460456	WITHOUT_CLASSIFICATION	4.897539544287526E-7	DESIGN
// line 1788	WITHOUT_CLASSIFICATION	0.9999993949242673	WITHOUT_CLASSIFICATION	6.050757326661808E-7	DESIGN
// line 1791	WITHOUT_CLASSIFICATION	0.9999990212821779	WITHOUT_CLASSIFICATION	9.787178222125747E-7	DESIGN
// line 1797	WITHOUT_CLASSIFICATION	0.9999989483344656	WITHOUT_CLASSIFICATION	1.0516655345026155E-6	DESIGN
// line 1800	WITHOUT_CLASSIFICATION	0.9999997751693877	WITHOUT_CLASSIFICATION	2.248306122232256E-7	DESIGN
// line 1803	WITHOUT_CLASSIFICATION	0.9999997840869917	WITHOUT_CLASSIFICATION	2.1591300835217746E-7	DESIGN
// line 1806	WITHOUT_CLASSIFICATION	0.9999994693273697	WITHOUT_CLASSIFICATION	5.306726302921806E-7	DESIGN
// line 1809	WITHOUT_CLASSIFICATION	0.9999997420328637	WITHOUT_CLASSIFICATION	2.579671362207514E-7	DESIGN
// line 1815	WITHOUT_CLASSIFICATION	0.9999996878277916	WITHOUT_CLASSIFICATION	3.1217220834071343E-7	DESIGN
// line 1825	WITHOUT_CLASSIFICATION	0.9999998563899477	WITHOUT_CLASSIFICATION	1.4361005223013343E-7	DESIGN
// line 1828	WITHOUT_CLASSIFICATION	0.999999819090368	WITHOUT_CLASSIFICATION	1.8090963195550196E-7	DESIGN
// line 1831	WITHOUT_CLASSIFICATION	0.9999996916738264	WITHOUT_CLASSIFICATION	3.0832617351872864E-7	DESIGN
// line 1847	WITHOUT_CLASSIFICATION	0.9999996259598447	WITHOUT_CLASSIFICATION	3.7404015531574504E-7	DESIGN
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9917550296877105	WITHOUT_CLASSIFICATION	0.008244970312289499	DESIGN
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9890266370547329	WITHOUT_CLASSIFICATION	0.010973362945267087	DESIGN
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999975998297372	WITHOUT_CLASSIFICATION	2.400170262811836E-6	DESIGN
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999954140354472	WITHOUT_CLASSIFICATION	4.5859645527723254E-6	DESIGN
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999971373521677	WITHOUT_CLASSIFICATION	2.862647832299027E-6	DESIGN
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9985543388478652	WITHOUT_CLASSIFICATION	0.0014456611521348577	DESIGN
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999990839711451	WITHOUT_CLASSIFICATION	9.160288547895206E-7	DESIGN
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999999958701092	WITHOUT_CLASSIFICATION	4.129890722263666E-9	DESIGN
// line 1854	WITHOUT_CLASSIFICATION	0.9999997018529742	WITHOUT_CLASSIFICATION	2.9814702588042004E-7	DESIGN
// line 1869	WITHOUT_CLASSIFICATION	0.9999995509774655	WITHOUT_CLASSIFICATION	4.4902253448475136E-7	DESIGN
// line 1872	WITHOUT_CLASSIFICATION	0.9999998002861414	WITHOUT_CLASSIFICATION	1.997138586348155E-7	DESIGN
// line 1877	WITHOUT_CLASSIFICATION	0.9999995649203055	WITHOUT_CLASSIFICATION	4.3507969455486455E-7	DESIGN
// line 1886	WITHOUT_CLASSIFICATION	0.9999994398808745	WITHOUT_CLASSIFICATION	5.601191256229491E-7	DESIGN
// line 1898	WITHOUT_CLASSIFICATION	0.9999996322144822	WITHOUT_CLASSIFICATION	3.67785517755383E-7	DESIGN
// line 1902	WITHOUT_CLASSIFICATION	0.9999997439030134	WITHOUT_CLASSIFICATION	2.5609698659492634E-7	DESIGN
// line 1905	WITHOUT_CLASSIFICATION	0.9999995869684658	WITHOUT_CLASSIFICATION	4.130315342622654E-7	DESIGN
// line 1911	WITHOUT_CLASSIFICATION	0.9999992841604208	WITHOUT_CLASSIFICATION	7.158395791594945E-7	DESIGN
// line 1918	WITHOUT_CLASSIFICATION	0.9999996237450234	WITHOUT_CLASSIFICATION	3.7625497657226615E-7	DESIGN
// line 1935	WITHOUT_CLASSIFICATION	0.9999994646407256	WITHOUT_CLASSIFICATION	5.353592743587697E-7	DESIGN
// line 1938	WITHOUT_CLASSIFICATION	0.9999996060517978	WITHOUT_CLASSIFICATION	3.9394820205704083E-7	DESIGN
// line 1942	WITHOUT_CLASSIFICATION	0.9999996827073366	WITHOUT_CLASSIFICATION	3.1729266339978105E-7	DESIGN
// line 1948	WITHOUT_CLASSIFICATION	0.9999995367103237	WITHOUT_CLASSIFICATION	4.6328967622825394E-7	DESIGN
// line 1960	WITHOUT_CLASSIFICATION	0.999999571669192	WITHOUT_CLASSIFICATION	4.2833080797029693E-7	DESIGN
// line 1963	WITHOUT_CLASSIFICATION	0.9999992475498511	WITHOUT_CLASSIFICATION	7.52450148808459E-7	DESIGN
// line 1968	WITHOUT_CLASSIFICATION	0.9999994268257716	WITHOUT_CLASSIFICATION	5.731742283915855E-7	DESIGN
// line 1972	WITHOUT_CLASSIFICATION	0.9999996339368332	WITHOUT_CLASSIFICATION	3.660631667915334E-7	DESIGN
// line 1982	WITHOUT_CLASSIFICATION	0.9999997796293497	WITHOUT_CLASSIFICATION	2.2037065023631294E-7	DESIGN
// line 1995	WITHOUT_CLASSIFICATION	0.9999993965394878	WITHOUT_CLASSIFICATION	6.034605122401248E-7	DESIGN
// line 2000	WITHOUT_CLASSIFICATION	0.999999472970783	WITHOUT_CLASSIFICATION	5.270292170769754E-7	DESIGN
// line 2006	WITHOUT_CLASSIFICATION	0.9999988026427062	WITHOUT_CLASSIFICATION	1.1973572938265942E-6	DESIGN
// line 2010	WITHOUT_CLASSIFICATION	0.9999998455579001	WITHOUT_CLASSIFICATION	1.5444209991219015E-7	DESIGN
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9999174375022085	WITHOUT_CLASSIFICATION	8.25624977915175E-5	DESIGN
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9882546030518117	WITHOUT_CLASSIFICATION	0.0117453969481882	DESIGN
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9999998306976932	WITHOUT_CLASSIFICATION	1.69302306839311E-7	DESIGN
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9999897912313453	WITHOUT_CLASSIFICATION	1.0208768654608194E-5	DESIGN
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999999947593129	WITHOUT_CLASSIFICATION	5.240687112353671E-9	DESIGN
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9993370021510299	WITHOUT_CLASSIFICATION	6.629978489700646E-4	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999946475117321	WITHOUT_CLASSIFICATION	5.3524882680259796E-6	DESIGN
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999999947925954	WITHOUT_CLASSIFICATION	5.2074045494107825E-9	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999996661997789	WITHOUT_CLASSIFICATION	3.338002211293595E-7	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999996661997789	WITHOUT_CLASSIFICATION	3.338002211293595E-7	DESIGN
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9907978666197009	DESIGN	0.009202133380299198	WITHOUT_CLASSIFICATION
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999662834989274	WITHOUT_CLASSIFICATION	3.371650107258588E-5	DESIGN
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999999979020898	WITHOUT_CLASSIFICATION	2.0979100730786814E-9	DESIGN
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999999700223623	WITHOUT_CLASSIFICATION	2.997763771881999E-8	DESIGN
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999978853857159	WITHOUT_CLASSIFICATION	2.114614284157688E-6	DESIGN
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999847749855806	WITHOUT_CLASSIFICATION	1.5225014419359465E-5	DESIGN
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9060299580996828	WITHOUT_CLASSIFICATION	0.0939700419003172	DESIGN
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999938100497789	WITHOUT_CLASSIFICATION	6.18995022105553E-6	DESIGN
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999854254673465	WITHOUT_CLASSIFICATION	1.4574532653572065E-5	DESIGN
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999248922074521	WITHOUT_CLASSIFICATION	7.510779254800388E-5	DESIGN
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.6056367891514859	DESIGN	0.39436321084851417	WITHOUT_CLASSIFICATION
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.8844644970404989	WITHOUT_CLASSIFICATION	0.11553550295950099	DESIGN
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999999273853705	WITHOUT_CLASSIFICATION	7.261462950525544E-8	DESIGN
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999899452460592	WITHOUT_CLASSIFICATION	1.0054753940782365E-5	DESIGN
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9998557648506301	WITHOUT_CLASSIFICATION	1.4423514936991606E-4	DESIGN
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9998557648506301	WITHOUT_CLASSIFICATION	1.4423514936991606E-4	DESIGN
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.925070854296242	WITHOUT_CLASSIFICATION	0.0749291457037579	DESIGN
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999963706802852	WITHOUT_CLASSIFICATION	3.6293197147253942E-6	DESIGN
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999999144320987	WITHOUT_CLASSIFICATION	8.556790131416516E-8	DESIGN
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.999976115641669	WITHOUT_CLASSIFICATION	2.3884358331059002E-5	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9961530087785806	WITHOUT_CLASSIFICATION	0.0038469912214194124	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999977155562241	WITHOUT_CLASSIFICATION	2.284443775939313E-6	DESIGN
// source extensions	WITHOUT_CLASSIFICATION	0.9999996213510647	WITHOUT_CLASSIFICATION	3.786489352943755E-7	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999977155562241	WITHOUT_CLASSIFICATION	2.284443775939313E-6	DESIGN
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.8358607499502263	DESIGN	0.16413925004977364	WITHOUT_CLASSIFICATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999984235298761	WITHOUT_CLASSIFICATION	1.5764701238980663E-6	DESIGN
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.8746702777871918	WITHOUT_CLASSIFICATION	0.1253297222128082	DESIGN
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.634795023546931	WITHOUT_CLASSIFICATION	0.3652049764530691	DESIGN
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9992550743438438	WITHOUT_CLASSIFICATION	7.449256561562143E-4	DESIGN
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9995251012562706	WITHOUT_CLASSIFICATION	4.748987437293237E-4	DESIGN
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.999992623703969	WITHOUT_CLASSIFICATION	7.376296030976824E-6	DESIGN
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.999993947446198	WITHOUT_CLASSIFICATION	6.0525538020557545E-6	DESIGN
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999992623136424	WITHOUT_CLASSIFICATION	7.376863576694822E-7	DESIGN
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9994629641383295	WITHOUT_CLASSIFICATION	5.370358616705366E-4	DESIGN
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.7288934529016616	WITHOUT_CLASSIFICATION	0.2711065470983385	DESIGN
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999860199931939	WITHOUT_CLASSIFICATION	1.3980006806167144E-5	DESIGN
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999766262289281	WITHOUT_CLASSIFICATION	2.337377107192802E-5	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.99936135311484	WITHOUT_CLASSIFICATION	6.386468851600627E-4	DESIGN
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999996445000904	WITHOUT_CLASSIFICATION	3.554999097018421E-7	DESIGN
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999996445000904	WITHOUT_CLASSIFICATION	3.554999097018421E-7	DESIGN
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999997582900347	WITHOUT_CLASSIFICATION	2.417099652492638E-7	DESIGN
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999977642386267	WITHOUT_CLASSIFICATION	2.235761373212151E-6	DESIGN
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999999792122772	WITHOUT_CLASSIFICATION	2.0787722817991825E-8	DESIGN
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9999997920787257	WITHOUT_CLASSIFICATION	2.0792127427290233E-7	DESIGN
// required and optional only	WITHOUT_CLASSIFICATION	0.9999999738184211	WITHOUT_CLASSIFICATION	2.6181578804696567E-8	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999977155562241	WITHOUT_CLASSIFICATION	2.284443775939313E-6	DESIGN
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999989930275871	WITHOUT_CLASSIFICATION	1.0069724128998354E-6	DESIGN
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999999998987618	WITHOUT_CLASSIFICATION	1.0123821773402996E-10	DESIGN
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9998056851676881	WITHOUT_CLASSIFICATION	1.9431483231186237E-4	DESIGN
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999990280297945	WITHOUT_CLASSIFICATION	9.719702055441517E-7	DESIGN
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999970531511161	WITHOUT_CLASSIFICATION	2.9468488839496682E-6	DESIGN
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999999971014584	WITHOUT_CLASSIFICATION	2.8985415331917026E-9	DESIGN
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.999999972870617	WITHOUT_CLASSIFICATION	2.7129383065577745E-8	DESIGN
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999988721639779	WITHOUT_CLASSIFICATION	1.127836022176377E-6	DESIGN
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9657125675995849	WITHOUT_CLASSIFICATION	0.034287432400415	DESIGN
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.5229716954370192	DESIGN	0.47702830456298095	WITHOUT_CLASSIFICATION
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999389672409738	WITHOUT_CLASSIFICATION	6.103275902609868E-5	DESIGN
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999942904787974	WITHOUT_CLASSIFICATION	5.709521202565328E-6	DESIGN
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.8606067131515782	WITHOUT_CLASSIFICATION	0.13939328684842175	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999812627151893	WITHOUT_CLASSIFICATION	1.8737284810656054E-5	DESIGN
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9345151643562212	DESIGN	0.06548483564377887	WITHOUT_CLASSIFICATION
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9956827009938076	WITHOUT_CLASSIFICATION	0.004317299006192331	DESIGN
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999772916747034	WITHOUT_CLASSIFICATION	2.2708325296574047E-5	DESIGN
// id must always be even	WITHOUT_CLASSIFICATION	0.9999237244642056	WITHOUT_CLASSIFICATION	7.627553579441015E-5	DESIGN
// with block pass	WITHOUT_CLASSIFICATION	0.9999834494004884	WITHOUT_CLASSIFICATION	1.6550599511614406E-5	DESIGN
// no block	WITHOUT_CLASSIFICATION	0.9999935111286488	WITHOUT_CLASSIFICATION	6.488871351255709E-6	DESIGN
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999921274761189	WITHOUT_CLASSIFICATION	7.872523881122846E-6	DESIGN
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9999446543680809	WITHOUT_CLASSIFICATION	5.534563191918211E-5	DESIGN
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999779557046596	WITHOUT_CLASSIFICATION	2.2044295340335085E-5	DESIGN
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999964820176267	WITHOUT_CLASSIFICATION	3.517982373294605E-6	DESIGN
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999908907131807	WITHOUT_CLASSIFICATION	9.109286819248323E-6	DESIGN
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999943735868493	WITHOUT_CLASSIFICATION	5.6264131506622354E-6	DESIGN
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9999237863464828	WITHOUT_CLASSIFICATION	7.621365351725408E-5	DESIGN
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999696260496986	WITHOUT_CLASSIFICATION	3.0373950301391993E-5	DESIGN
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9947286611847505	WITHOUT_CLASSIFICATION	0.005271338815249497	DESIGN
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999584494269207	WITHOUT_CLASSIFICATION	4.155057307924963E-5	DESIGN
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999712110830501	WITHOUT_CLASSIFICATION	2.878891694988135E-5	DESIGN
// Lastline	WITHOUT_CLASSIFICATION	0.999999294162328	WITHOUT_CLASSIFICATION	7.058376719662828E-7	DESIGN
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9999327419457337	WITHOUT_CLASSIFICATION	6.72580542663094E-5	DESIGN
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999998480651088	WITHOUT_CLASSIFICATION	1.5193489118183653E-7	DESIGN
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9985564189275083	WITHOUT_CLASSIFICATION	0.0014435810724915852	DESIGN
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999841568707735	WITHOUT_CLASSIFICATION	1.5843129226444365E-5	DESIGN
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999678264322606	WITHOUT_CLASSIFICATION	3.217356773946466E-5	DESIGN
// silently ignore	WITHOUT_CLASSIFICATION	0.9995477969727691	WITHOUT_CLASSIFICATION	4.522030272309594E-4	DESIGN
// used by compiler	WITHOUT_CLASSIFICATION	0.9999783415794774	WITHOUT_CLASSIFICATION	2.1658420522558966E-5	DESIGN
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9889556969767687	WITHOUT_CLASSIFICATION	0.011044303023231243	DESIGN
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999999958701092	WITHOUT_CLASSIFICATION	4.129890722263666E-9	DESIGN
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999999938317768	WITHOUT_CLASSIFICATION	6.168223097723563E-9	DESIGN
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999631598117475	WITHOUT_CLASSIFICATION	3.684018825239295E-5	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999995152594854	WITHOUT_CLASSIFICATION	4.84740514650512E-7	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999998952532093	WITHOUT_CLASSIFICATION	1.047467906570861E-7	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999984235298761	WITHOUT_CLASSIFICATION	1.5764701238980663E-6	DESIGN
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9999995169723652	WITHOUT_CLASSIFICATION	4.830276347389939E-7	DESIGN
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9946073023370317	DESIGN	0.005392697662968341	WITHOUT_CLASSIFICATION
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9999914204543657	WITHOUT_CLASSIFICATION	8.579545634267947E-6	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999996283546274	WITHOUT_CLASSIFICATION	3.7164537261391753E-7	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999996283546274	WITHOUT_CLASSIFICATION	3.7164537261391753E-7	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9995680661972258	WITHOUT_CLASSIFICATION	4.319338027741535E-4	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9995680661972258	WITHOUT_CLASSIFICATION	4.319338027741535E-4	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9995680661972258	WITHOUT_CLASSIFICATION	4.319338027741535E-4	DESIGN
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999215000754116	WITHOUT_CLASSIFICATION	7.849992458839147E-5	DESIGN
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999215000754116	WITHOUT_CLASSIFICATION	7.849992458839147E-5	DESIGN
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999961156504927	WITHOUT_CLASSIFICATION	3.884349507343155E-6	DESIGN
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999961156504927	WITHOUT_CLASSIFICATION	3.884349507343155E-6	DESIGN
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.99999999969552	WITHOUT_CLASSIFICATION	3.044800569111077E-10	DESIGN
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999995582689711	WITHOUT_CLASSIFICATION	4.4173102884987844E-7	DESIGN
// prefill ?	WITHOUT_CLASSIFICATION	0.999994948935759	WITHOUT_CLASSIFICATION	5.051064240919147E-6	DESIGN
// prefill ?	WITHOUT_CLASSIFICATION	0.999994948935759	WITHOUT_CLASSIFICATION	5.051064240919147E-6	DESIGN
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999966665310364	WITHOUT_CLASSIFICATION	3.333468963619905E-6	DESIGN
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9990137483292933	WITHOUT_CLASSIFICATION	9.86251670706631E-4	DESIGN
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9997600072142804	WITHOUT_CLASSIFICATION	2.3999278571963973E-4	DESIGN
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.99999983830129	WITHOUT_CLASSIFICATION	1.6169871003505377E-7	DESIGN
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999999268189714	WITHOUT_CLASSIFICATION	7.318102848530286E-8	DESIGN
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9966533168951097	WITHOUT_CLASSIFICATION	0.0033466831048903265	DESIGN
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.999981076756351	WITHOUT_CLASSIFICATION	1.8923243649065565E-5	DESIGN
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9997371601740581	WITHOUT_CLASSIFICATION	2.6283982594191567E-4	DESIGN
// caller	WITHOUT_CLASSIFICATION	0.9999980970657577	WITHOUT_CLASSIFICATION	1.9029342423320523E-6	DESIGN
// calltype // block	WITHOUT_CLASSIFICATION	0.999997378624167	WITHOUT_CLASSIFICATION	2.6213758329970175E-6	DESIGN
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9993898418174606	WITHOUT_CLASSIFICATION	6.10158182539453E-4	DESIGN
// load arity for check	WITHOUT_CLASSIFICATION	0.9999979117167198	WITHOUT_CLASSIFICATION	2.0882832800746095E-6	DESIGN
// throw	WITHOUT_CLASSIFICATION	0.999998342113628	WITHOUT_CLASSIFICATION	1.657886371901513E-6	DESIGN
// load arity for error	WITHOUT_CLASSIFICATION	0.9998808353562583	WITHOUT_CLASSIFICATION	1.1916464374176252E-4	DESIGN
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999331410669121	WITHOUT_CLASSIFICATION	6.685893308791313E-5	DESIGN
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9994384252069617	WITHOUT_CLASSIFICATION	5.615747930381865E-4	DESIGN
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9929720385539953	WITHOUT_CLASSIFICATION	0.0070279614460046335	DESIGN
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999944582509998	WITHOUT_CLASSIFICATION	5.541749000332492E-6	DESIGN
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999994380864042	WITHOUT_CLASSIFICATION	5.619135957360146E-7	DESIGN
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9996074376618496	WITHOUT_CLASSIFICATION	3.925623381503983E-4	DESIGN
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999882452089619	WITHOUT_CLASSIFICATION	1.1754791038131141E-5	DESIGN
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.999980856841973	WITHOUT_CLASSIFICATION	1.914315802696602E-5	DESIGN
// load the encoding	WITHOUT_CLASSIFICATION	0.9999995845882537	WITHOUT_CLASSIFICATION	4.154117463774342E-7	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999988004124082	WITHOUT_CLASSIFICATION	1.1995875917445724E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999988855807074	WITHOUT_CLASSIFICATION	1.1144192926647762E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999954753164383	WITHOUT_CLASSIFICATION	4.524683561706906E-6	DESIGN
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999991290736902	WITHOUT_CLASSIFICATION	8.709263099012754E-7	DESIGN
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999990015933937	WITHOUT_CLASSIFICATION	9.98406606177E-7	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999977501557815	WITHOUT_CLASSIFICATION	2.2498442185248963E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999979098900265	WITHOUT_CLASSIFICATION	2.0901099734831922E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999915139139594	WITHOUT_CLASSIFICATION	8.486086040600427E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999960958843183	WITHOUT_CLASSIFICATION	3.9041156817725475E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999963730679594	WITHOUT_CLASSIFICATION	3.6269320405888037E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999834663739601	WITHOUT_CLASSIFICATION	1.653362604002903E-5	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999963730679594	WITHOUT_CLASSIFICATION	3.6269320405888037E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999963730679594	WITHOUT_CLASSIFICATION	3.6269320405888037E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999963730679594	WITHOUT_CLASSIFICATION	3.6269320405888037E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999963730679594	WITHOUT_CLASSIFICATION	3.6269320405888037E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999963730679594	WITHOUT_CLASSIFICATION	3.6269320405888037E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999963730679594	WITHOUT_CLASSIFICATION	3.6269320405888037E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999834663739601	WITHOUT_CLASSIFICATION	1.653362604002903E-5	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999834663739601	WITHOUT_CLASSIFICATION	1.653362604002903E-5	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999834663739601	WITHOUT_CLASSIFICATION	1.653362604002903E-5	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999834663739601	WITHOUT_CLASSIFICATION	1.653362604002903E-5	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999834663739601	WITHOUT_CLASSIFICATION	1.653362604002903E-5	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999834663739601	WITHOUT_CLASSIFICATION	1.653362604002903E-5	DESIGN
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999977744868291	WITHOUT_CLASSIFICATION	2.2255131708845847E-6	DESIGN
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999998198855296	WITHOUT_CLASSIFICATION	1.801144704920509E-7	DESIGN
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999994014838509	WITHOUT_CLASSIFICATION	5.985161490567383E-7	DESIGN
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999989058395677	WITHOUT_CLASSIFICATION	1.09416043229861E-6	DESIGN
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9997947817214521	WITHOUT_CLASSIFICATION	2.0521827854791852E-4	DESIGN
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999973739554193	WITHOUT_CLASSIFICATION	2.626044580719142E-6	DESIGN
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999909075199223	WITHOUT_CLASSIFICATION	9.092480077837161E-6	DESIGN
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999999493823104	WITHOUT_CLASSIFICATION	5.0617689631895645E-8	DESIGN
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9989509402970973	WITHOUT_CLASSIFICATION	0.0010490597029026375	DESIGN
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999593274277376	WITHOUT_CLASSIFICATION	4.067257226244225E-5	DESIGN
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9975185444216387	WITHOUT_CLASSIFICATION	0.002481455578361342	DESIGN
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999999995357719	WITHOUT_CLASSIFICATION	4.642281368405173E-10	DESIGN
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.999998333962802	WITHOUT_CLASSIFICATION	1.6660371979597078E-6	DESIGN
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999925910057538	WITHOUT_CLASSIFICATION	7.408994246225221E-6	DESIGN
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9997921689662423	WITHOUT_CLASSIFICATION	2.0783103375770075E-4	DESIGN
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.802158172899732	WITHOUT_CLASSIFICATION	0.19784182710026796	DESIGN
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999964448794072	WITHOUT_CLASSIFICATION	3.5551205928292857E-6	DESIGN
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999922077026909	WITHOUT_CLASSIFICATION	7.792297309031941E-6	DESIGN
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9915139520809974	WITHOUT_CLASSIFICATION	0.008486047919002622	DESIGN
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999999901639469	WITHOUT_CLASSIFICATION	9.83605314809698E-9	DESIGN
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999999935007577	WITHOUT_CLASSIFICATION	6.499242205297399E-9	DESIGN
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999913680436814	WITHOUT_CLASSIFICATION	8.631956318725253E-6	DESIGN
// source extensions	WITHOUT_CLASSIFICATION	0.9999996213510647	WITHOUT_CLASSIFICATION	3.786489352943755E-7	DESIGN
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9999591626678548	WITHOUT_CLASSIFICATION	4.0837332145183274E-5	DESIGN
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9996422712903961	WITHOUT_CLASSIFICATION	3.5772870960401224E-4	DESIGN
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.999963678718473	WITHOUT_CLASSIFICATION	3.632128152691337E-5	DESIGN
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999987628550596	WITHOUT_CLASSIFICATION	1.2371449404328857E-6	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999999388663592	WITHOUT_CLASSIFICATION	6.11336408577295E-8	DESIGN
// extension extensions	WITHOUT_CLASSIFICATION	0.9999987413784174	WITHOUT_CLASSIFICATION	1.2586215826957938E-6	DESIGN
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999909664049488	WITHOUT_CLASSIFICATION	9.033595051216136E-6	DESIGN
// try all extensions	WITHOUT_CLASSIFICATION	0.9999996856596319	WITHOUT_CLASSIFICATION	3.143403679859871E-7	DESIGN
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999999958961872	WITHOUT_CLASSIFICATION	4.1038128093654445E-9	DESIGN
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999852079366821	WITHOUT_CLASSIFICATION	1.4792063317960365E-5	DESIGN
// try only literal search	WITHOUT_CLASSIFICATION	0.9999999704634575	WITHOUT_CLASSIFICATION	2.9536542546803533E-8	DESIGN
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999992031876931	WITHOUT_CLASSIFICATION	7.968123069465968E-7	DESIGN
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9998058358458243	WITHOUT_CLASSIFICATION	1.9416415417562805E-4	DESIGN
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999910898256489	WITHOUT_CLASSIFICATION	8.91017435114192E-6	DESIGN
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.99994311503345	WITHOUT_CLASSIFICATION	5.688496654998122E-5	DESIGN
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999999926106695	WITHOUT_CLASSIFICATION	7.389330440801773E-9	DESIGN
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999997102606296	WITHOUT_CLASSIFICATION	2.8973937042068324E-7	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999805017564614	WITHOUT_CLASSIFICATION	1.9498243538721056E-5	DESIGN
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999997743839076	WITHOUT_CLASSIFICATION	2.2561609241024875E-7	DESIGN
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999998844469842	WITHOUT_CLASSIFICATION	1.1555301572577677E-7	DESIGN
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9994783375870487	WITHOUT_CLASSIFICATION	5.216624129511594E-4	DESIGN
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9994783375870487	WITHOUT_CLASSIFICATION	5.216624129511594E-4	DESIGN
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999986832009701	WITHOUT_CLASSIFICATION	1.3167990299943597E-6	DESIGN
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999986832009701	WITHOUT_CLASSIFICATION	1.3167990299943597E-6	DESIGN
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999994047731711	WITHOUT_CLASSIFICATION	5.952268290062447E-7	DESIGN
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999994047731711	WITHOUT_CLASSIFICATION	5.952268290062447E-7	DESIGN
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999999962417817	WITHOUT_CLASSIFICATION	3.758218245459382E-9	DESIGN
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.999941156331248	WITHOUT_CLASSIFICATION	5.8843668752128834E-5	DESIGN
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999673344267399	WITHOUT_CLASSIFICATION	3.266557326015279E-5	DESIGN
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999887735171143	WITHOUT_CLASSIFICATION	1.1226482885678415E-5	DESIGN
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999834927098676	WITHOUT_CLASSIFICATION	1.6507290132330815E-5	DESIGN
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9979183382150675	WITHOUT_CLASSIFICATION	0.0020816617849325546	DESIGN
// signed short, native	WITHOUT_CLASSIFICATION	0.9993027636464502	WITHOUT_CLASSIFICATION	6.972363535498418E-4	DESIGN
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999996684795234	WITHOUT_CLASSIFICATION	3.3152047663238514E-7	DESIGN
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9998839391315552	WITHOUT_CLASSIFICATION	1.1606086844476858E-4	DESIGN
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999995893824892	WITHOUT_CLASSIFICATION	4.106175107380966E-7	DESIGN
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999852840068207	WITHOUT_CLASSIFICATION	1.4715993179331398E-5	DESIGN
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999999038499376	WITHOUT_CLASSIFICATION	9.615006238556032E-8	DESIGN
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999994043279434	WITHOUT_CLASSIFICATION	5.956720566100495E-7	DESIGN
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9990542467217419	WITHOUT_CLASSIFICATION	9.457532782581107E-4	DESIGN
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9999971737622784	WITHOUT_CLASSIFICATION	2.826237721687992E-6	DESIGN
//            write('S');	WITHOUT_CLASSIFICATION	0.9999842944630648	WITHOUT_CLASSIFICATION	1.5705536935231312E-5	DESIGN
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9997957394070908	WITHOUT_CLASSIFICATION	2.042605929091783E-4	DESIGN
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999775906044454	WITHOUT_CLASSIFICATION	2.240939555472343E-5	DESIGN
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9999827812951553	WITHOUT_CLASSIFICATION	1.72187048447225E-5	DESIGN
// w_symbol	WITHOUT_CLASSIFICATION	0.9999805856014276	WITHOUT_CLASSIFICATION	1.941439857236761E-5	DESIGN
// w_unique	WITHOUT_CLASSIFICATION	0.9999812345291601	WITHOUT_CLASSIFICATION	1.8765470839894455E-5	DESIGN
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999974714187161	WITHOUT_CLASSIFICATION	2.5285812839155403E-6	DESIGN
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999875619534528	WITHOUT_CLASSIFICATION	1.2438046547116373E-5	DESIGN
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999990355441051	WITHOUT_CLASSIFICATION	9.644558949001905E-7	DESIGN
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999911300555877	WITHOUT_CLASSIFICATION	8.869944412170542E-6	DESIGN
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999997320031883	WITHOUT_CLASSIFICATION	2.679968116622265E-7	DESIGN
// sic	WITHOUT_CLASSIFICATION	0.9997420131039451	WITHOUT_CLASSIFICATION	2.579868960549373E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999900616151551	WITHOUT_CLASSIFICATION	9.93838484482786E-6	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999900616151551	WITHOUT_CLASSIFICATION	9.93838484482786E-6	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999900616151551	WITHOUT_CLASSIFICATION	9.93838484482786E-6	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9921875340026084	WITHOUT_CLASSIFICATION	0.007812465997391643	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9921875340026084	WITHOUT_CLASSIFICATION	0.007812465997391643	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999812627151893	WITHOUT_CLASSIFICATION	1.8737284810656054E-5	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999812627151893	WITHOUT_CLASSIFICATION	1.8737284810656054E-5	DESIGN
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999999475781328	WITHOUT_CLASSIFICATION	5.2421867249657983E-8	DESIGN
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.5359989948255579	WITHOUT_CLASSIFICATION	0.4640010051744422	DESIGN
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9979813292195775	WITHOUT_CLASSIFICATION	0.0020186707804225198	DESIGN
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9999425362796108	WITHOUT_CLASSIFICATION	5.74637203891888E-5	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999900616151551	WITHOUT_CLASSIFICATION	9.93838484482786E-6	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999900616151551	WITHOUT_CLASSIFICATION	9.93838484482786E-6	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999900616151551	WITHOUT_CLASSIFICATION	9.93838484482786E-6	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9921875340026084	WITHOUT_CLASSIFICATION	0.007812465997391643	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9921875340026084	WITHOUT_CLASSIFICATION	0.007812465997391643	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9921875340026084	WITHOUT_CLASSIFICATION	0.007812465997391643	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999812627151893	WITHOUT_CLASSIFICATION	1.8737284810656054E-5	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999812627151893	WITHOUT_CLASSIFICATION	1.8737284810656054E-5	DESIGN
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.999999503330281	WITHOUT_CLASSIFICATION	4.966697190123204E-7	DESIGN
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9465259755444698	WITHOUT_CLASSIFICATION	0.05347402445553013	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.6199157172492604	WITHOUT_CLASSIFICATION	0.3800842827507395	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.6199157172492604	WITHOUT_CLASSIFICATION	0.3800842827507395	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.6199157172492604	WITHOUT_CLASSIFICATION	0.3800842827507395	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.6199157172492604	WITHOUT_CLASSIFICATION	0.3800842827507395	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.6199157172492604	WITHOUT_CLASSIFICATION	0.3800842827507395	DESIGN
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999750689886149	WITHOUT_CLASSIFICATION	2.493101138510041E-5	DESIGN
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9998775732648261	WITHOUT_CLASSIFICATION	1.2242673517398183E-4	DESIGN
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9999487799014495	WITHOUT_CLASSIFICATION	5.1220098550511224E-5	DESIGN
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999999546357276	WITHOUT_CLASSIFICATION	4.5364272550039237E-8	DESIGN
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9999920319496112	WITHOUT_CLASSIFICATION	7.968050388806674E-6	DESIGN
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.999752597154895	WITHOUT_CLASSIFICATION	2.474028451050289E-4	DESIGN
// not enough bytes	WITHOUT_CLASSIFICATION	0.9999106128465962	WITHOUT_CLASSIFICATION	8.938715340376464E-5	DESIGN
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999999464953373	WITHOUT_CLASSIFICATION	5.3504662743499064E-8	DESIGN
// skip inner braces	WITHOUT_CLASSIFICATION	0.9991882459589989	WITHOUT_CLASSIFICATION	8.117540410009689E-4	DESIGN
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999963436168878	WITHOUT_CLASSIFICATION	3.656383112198289E-6	DESIGN
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999999856120688	WITHOUT_CLASSIFICATION	1.4387931135294907E-8	DESIGN
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.999989637443241	WITHOUT_CLASSIFICATION	1.0362556759030599E-5	DESIGN
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999987764903356	WITHOUT_CLASSIFICATION	1.2235096644105822E-6	DESIGN
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9999998651348253	WITHOUT_CLASSIFICATION	1.348651746981923E-7	DESIGN
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9633912638098147	WITHOUT_CLASSIFICATION	0.03660873619018525	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9820491157930856	WITHOUT_CLASSIFICATION	0.01795088420691444	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9820491157930856	WITHOUT_CLASSIFICATION	0.01795088420691444	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9820491157930856	WITHOUT_CLASSIFICATION	0.01795088420691444	DESIGN
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999442297850525	WITHOUT_CLASSIFICATION	5.577021494745817E-5	DESIGN
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999442026981181	WITHOUT_CLASSIFICATION	5.5797301881905E-5	DESIGN
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999991952203778	WITHOUT_CLASSIFICATION	8.04779622277651E-7	DESIGN
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999997097777684	WITHOUT_CLASSIFICATION	2.9022223149855677E-7	DESIGN
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999999883534842	WITHOUT_CLASSIFICATION	1.164651580697984E-8	DESIGN
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.999932215550295	WITHOUT_CLASSIFICATION	6.778444970507045E-5	DESIGN
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999957850538973	WITHOUT_CLASSIFICATION	4.214946102605978E-6	DESIGN
// single precision, native	WITHOUT_CLASSIFICATION	0.9991257619134367	WITHOUT_CLASSIFICATION	8.742380865632666E-4	DESIGN
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9998565097530199	WITHOUT_CLASSIFICATION	1.434902469800609E-4	DESIGN
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999589923925196	WITHOUT_CLASSIFICATION	4.100760748035523E-5	DESIGN
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999982144443609	WITHOUT_CLASSIFICATION	1.7855556390984924E-6	DESIGN
// double precision, native	WITHOUT_CLASSIFICATION	0.9992016666552117	WITHOUT_CLASSIFICATION	7.983333447883578E-4	DESIGN
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999568083676759	WITHOUT_CLASSIFICATION	4.319163232414451E-5	DESIGN
// signed char	WITHOUT_CLASSIFICATION	0.999998230799618	WITHOUT_CLASSIFICATION	1.7692003820698961E-6	DESIGN
// unsigned char	WITHOUT_CLASSIFICATION	0.9999952005625019	WITHOUT_CLASSIFICATION	4.799437498114736E-6	DESIGN
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999750704219392	WITHOUT_CLASSIFICATION	2.4929578060722537E-5	DESIGN
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999988876135013	WITHOUT_CLASSIFICATION	1.112386498774712E-6	DESIGN
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9991456662805045	WITHOUT_CLASSIFICATION	8.543337194953741E-4	DESIGN
// int, native	WITHOUT_CLASSIFICATION	0.9998971932249457	WITHOUT_CLASSIFICATION	1.0280677505428624E-4	DESIGN
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9998925697584666	WITHOUT_CLASSIFICATION	1.0743024153342134E-4	DESIGN
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999376467373702	WITHOUT_CLASSIFICATION	6.235326262972932E-5	DESIGN
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999904892635618	WITHOUT_CLASSIFICATION	9.510736438243102E-6	DESIGN
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.840212662895125	WITHOUT_CLASSIFICATION	0.15978733710487505	DESIGN
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999976818766622	WITHOUT_CLASSIFICATION	2.31812333790695E-6	DESIGN
// obtain a	WITHOUT_CLASSIFICATION	0.9999981425841832	WITHOUT_CLASSIFICATION	1.8574158167467273E-6	DESIGN
// obtain b	WITHOUT_CLASSIFICATION	0.9999942244818827	WITHOUT_CLASSIFICATION	5.775518117307853E-6	DESIGN
// obtain c	WITHOUT_CLASSIFICATION	0.9999957487450559	WITHOUT_CLASSIFICATION	4.251254944115856E-6	DESIGN
// obtain d	WITHOUT_CLASSIFICATION	0.9999898975908394	WITHOUT_CLASSIFICATION	1.0102409160600003E-5	DESIGN
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999440968423945	WITHOUT_CLASSIFICATION	5.59031576055714E-5	DESIGN
/* 1 */	WITHOUT_CLASSIFICATION	0.9999547308887374	WITHOUT_CLASSIFICATION	4.5269111262632974E-5	DESIGN
/* 2 */	WITHOUT_CLASSIFICATION	0.9999672271887504	WITHOUT_CLASSIFICATION	3.2772811249580984E-5	DESIGN
/* 3 */	WITHOUT_CLASSIFICATION	0.9999470505724151	WITHOUT_CLASSIFICATION	5.294942758502313E-5	DESIGN
/* 4 */	WITHOUT_CLASSIFICATION	0.9998909532201702	WITHOUT_CLASSIFICATION	1.0904677982978927E-4	DESIGN
/* 5 */	WITHOUT_CLASSIFICATION	0.9999086792671926	WITHOUT_CLASSIFICATION	9.132073280736936E-5	DESIGN
/* 6 */	WITHOUT_CLASSIFICATION	0.9998949144921282	WITHOUT_CLASSIFICATION	1.0508550787180703E-4	DESIGN
/* 7 */	WITHOUT_CLASSIFICATION	0.9998887390291223	WITHOUT_CLASSIFICATION	1.112609708775332E-4	DESIGN
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9926627390627697	WITHOUT_CLASSIFICATION	0.007337260937230259	DESIGN
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.819994704672052	WITHOUT_CLASSIFICATION	0.180005295327948	DESIGN
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999989074589892	WITHOUT_CLASSIFICATION	1.092541010830086E-6	DESIGN
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9999999871855596	WITHOUT_CLASSIFICATION	1.2814440287339241E-8	DESIGN
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.999999878990245	WITHOUT_CLASSIFICATION	1.2100975501895245E-7	DESIGN
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999353740816799	WITHOUT_CLASSIFICATION	6.462591832012749E-5	DESIGN
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9999976707554776	WITHOUT_CLASSIFICATION	2.3292445223372335E-6	DESIGN
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999993399503254	WITHOUT_CLASSIFICATION	6.60049674648324E-7	DESIGN
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999774557259118	WITHOUT_CLASSIFICATION	2.254427408812119E-5	DESIGN
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9999999549694537	WITHOUT_CLASSIFICATION	4.503054632119916E-8	DESIGN
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999967598831899	WITHOUT_CLASSIFICATION	3.240116810144656E-6	DESIGN
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999967598831899	WITHOUT_CLASSIFICATION	3.240116810144656E-6	DESIGN
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9999462165888799	WITHOUT_CLASSIFICATION	5.378341112011808E-5	DESIGN
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999578120023276	WITHOUT_CLASSIFICATION	4.2187997672313505E-5	DESIGN
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9999999798578106	WITHOUT_CLASSIFICATION	2.0142189296832946E-8	DESIGN
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9919499743959883	WITHOUT_CLASSIFICATION	0.008050025604011739	DESIGN
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9974478729052618	WITHOUT_CLASSIFICATION	0.0025521270947381144	DESIGN
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999997552237083	WITHOUT_CLASSIFICATION	2.4477629172063693E-7	DESIGN
// are we recursing?	WITHOUT_CLASSIFICATION	0.9969370143374132	WITHOUT_CLASSIFICATION	0.0030629856625866785	DESIGN
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999996230256134	WITHOUT_CLASSIFICATION	3.7697438659896145E-7	DESIGN
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999788426248802	WITHOUT_CLASSIFICATION	2.1157375119710865E-5	DESIGN
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999997956922616	WITHOUT_CLASSIFICATION	2.0430773830744703E-7	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999976625200888	WITHOUT_CLASSIFICATION	2.3374799111670422E-6	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999976625200888	WITHOUT_CLASSIFICATION	2.3374799111670422E-6	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999976625200888	WITHOUT_CLASSIFICATION	2.3374799111670422E-6	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999976625200888	WITHOUT_CLASSIFICATION	2.3374799111670422E-6	DESIGN
// try both	WITHOUT_CLASSIFICATION	0.9999902338362654	WITHOUT_CLASSIFICATION	9.766163734531575E-6	DESIGN
// just unix	WITHOUT_CLASSIFICATION	0.9999500396408846	WITHOUT_CLASSIFICATION	4.996035911549882E-5	DESIGN
// just windows	WITHOUT_CLASSIFICATION	0.9999850822463143	WITHOUT_CLASSIFICATION	1.4917753685687583E-5	DESIGN
// neither	WITHOUT_CLASSIFICATION	0.9997256317645646	WITHOUT_CLASSIFICATION	2.7436823543535636E-4	DESIGN
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9932093179166169	DESIGN	0.006790682083382953	WITHOUT_CLASSIFICATION
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999999989184593	WITHOUT_CLASSIFICATION	1.0815408132260992E-9	DESIGN
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999999462842711	WITHOUT_CLASSIFICATION	5.371572884359328E-8	DESIGN
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999979142901725	WITHOUT_CLASSIFICATION	2.0857098275862505E-6	DESIGN
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999979142901725	WITHOUT_CLASSIFICATION	2.0857098275862505E-6	DESIGN
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9998766785640955	WITHOUT_CLASSIFICATION	1.233214359045004E-4	DESIGN
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999997883332308	WITHOUT_CLASSIFICATION	2.1166676911683416E-7	DESIGN
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.99999149803033	WITHOUT_CLASSIFICATION	8.501969669997594E-6	DESIGN
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999990741026329	WITHOUT_CLASSIFICATION	9.258973671061223E-7	DESIGN
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999990741026329	WITHOUT_CLASSIFICATION	9.258973671061223E-7	DESIGN
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999991508886688	WITHOUT_CLASSIFICATION	8.491113313034656E-7	DESIGN
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9985306295994029	WITHOUT_CLASSIFICATION	0.001469370400597076	DESIGN
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9985306295994029	WITHOUT_CLASSIFICATION	0.001469370400597076	DESIGN
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999999979224938	WITHOUT_CLASSIFICATION	2.0775061880496934E-9	DESIGN
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999880755042481	WITHOUT_CLASSIFICATION	1.1924495751890302E-5	DESIGN
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999999959907863	WITHOUT_CLASSIFICATION	4.009213753328228E-9	DESIGN
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9999951639887307	WITHOUT_CLASSIFICATION	4.836011269280965E-6	DESIGN
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9992500130845939	WITHOUT_CLASSIFICATION	7.499869154060255E-4	DESIGN
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999999782549855	WITHOUT_CLASSIFICATION	2.1745014371180973E-8	DESIGN
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9966591957913883	WITHOUT_CLASSIFICATION	0.0033408042086118086	DESIGN
//sequential	WITHOUT_CLASSIFICATION	0.9999832455565726	WITHOUT_CLASSIFICATION	1.6754443427374357E-5	DESIGN
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999999991294731	WITHOUT_CLASSIFICATION	8.705267987853912E-10	DESIGN
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999983239351614	WITHOUT_CLASSIFICATION	1.6760648386079876E-6	DESIGN
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999999836985366	WITHOUT_CLASSIFICATION	1.630146338180562E-8	DESIGN
// SignalFacade	WITHOUT_CLASSIFICATION	0.999981957428616	WITHOUT_CLASSIFICATION	1.804257138406671E-5	DESIGN
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9997154072101226	WITHOUT_CLASSIFICATION	2.8459278987735993E-4	DESIGN
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9997961594421922	WITHOUT_CLASSIFICATION	2.0384055780773433E-4	DESIGN
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999997119381453	WITHOUT_CLASSIFICATION	2.8806185468129084E-7	DESIGN
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.8455356978596373	DESIGN	0.15446430214036272	WITHOUT_CLASSIFICATION
// Args	WITHOUT_CLASSIFICATION	0.9999948308442156	WITHOUT_CLASSIFICATION	5.169155784424391E-6	DESIGN
// static methods only	WITHOUT_CLASSIFICATION	0.9999750727304376	WITHOUT_CLASSIFICATION	2.4927269562287524E-5	DESIGN
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999999843026646	WITHOUT_CLASSIFICATION	1.569733540491222E-8	DESIGN
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999793065260592	WITHOUT_CLASSIFICATION	2.06934739408174E-5	DESIGN
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999999562556985	WITHOUT_CLASSIFICATION	4.3744301612163275E-8	DESIGN
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999972370437438	WITHOUT_CLASSIFICATION	2.762956256222386E-6	DESIGN
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999998774130221	WITHOUT_CLASSIFICATION	1.2258697786095733E-7	DESIGN
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9680721815568865	WITHOUT_CLASSIFICATION	0.03192781844311353	DESIGN
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999833240760913	WITHOUT_CLASSIFICATION	1.667592390867361E-5	DESIGN
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9619970830857411	WITHOUT_CLASSIFICATION	0.03800291691425903	DESIGN
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999989527989527	WITHOUT_CLASSIFICATION	1.0472010473531005E-6	DESIGN
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999994659616028	WITHOUT_CLASSIFICATION	5.340383971045725E-7	DESIGN
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9256302494246347	WITHOUT_CLASSIFICATION	0.0743697505753653	DESIGN
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999674415294288	WITHOUT_CLASSIFICATION	3.255847057118502E-5	DESIGN
// ..	WITHOUT_CLASSIFICATION	0.9999683493769342	WITHOUT_CLASSIFICATION	3.165062306585391E-5	DESIGN
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999998324615497	WITHOUT_CLASSIFICATION	1.6753845028588761E-7	DESIGN
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9999988204602775	DESIGN	1.1795397224566776E-6	WITHOUT_CLASSIFICATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999996222566031	WITHOUT_CLASSIFICATION	3.777433968601936E-7	DESIGN
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999999008929575	WITHOUT_CLASSIFICATION	9.910704247038896E-8	DESIGN
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9165671710974193	WITHOUT_CLASSIFICATION	0.08343282890258079	DESIGN
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999453481167347	WITHOUT_CLASSIFICATION	5.4651883265259485E-5	DESIGN
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999999963187924	WITHOUT_CLASSIFICATION	3.681207674723132E-9	DESIGN
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9999990264220305	WITHOUT_CLASSIFICATION	9.735779695021458E-7	DESIGN
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9165671710974193	WITHOUT_CLASSIFICATION	0.08343282890258079	DESIGN
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999453481167347	WITHOUT_CLASSIFICATION	5.4651883265259485E-5	DESIGN
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999999527086113	WITHOUT_CLASSIFICATION	4.7291388691331504E-8	DESIGN
// deal with length/width	WITHOUT_CLASSIFICATION	0.9995137252474716	WITHOUT_CLASSIFICATION	4.862747525283659E-4	DESIGN
// deal with length/width	WITHOUT_CLASSIFICATION	0.9995137252474716	WITHOUT_CLASSIFICATION	4.862747525283659E-4	DESIGN
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999997069133257	WITHOUT_CLASSIFICATION	2.930866742593482E-7	DESIGN
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999971865524736	WITHOUT_CLASSIFICATION	2.813447526508726E-6	DESIGN
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999989803825493	WITHOUT_CLASSIFICATION	1.0196174506912483E-6	DESIGN
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999994016091001	WITHOUT_CLASSIFICATION	5.983908999966774E-7	DESIGN
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9998981468584632	WITHOUT_CLASSIFICATION	1.0185314153684438E-4	DESIGN
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9995367783090668	WITHOUT_CLASSIFICATION	4.6322169093324843E-4	DESIGN
// '.' is printed	WITHOUT_CLASSIFICATION	0.9999921256388233	WITHOUT_CLASSIFICATION	7.874361176744135E-6	DESIGN
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999997842916892	WITHOUT_CLASSIFICATION	2.157083108715567E-7	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9982092496217496	WITHOUT_CLASSIFICATION	0.0017907503782503688	DESIGN
// '.'	WITHOUT_CLASSIFICATION	0.9999947737323347	WITHOUT_CLASSIFICATION	5.226267665249228E-6	DESIGN
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9999979848752896	WITHOUT_CLASSIFICATION	2.0151247104708085E-6	DESIGN
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999985149177274	WITHOUT_CLASSIFICATION	1.4850822725892415E-6	DESIGN
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999999835222978	WITHOUT_CLASSIFICATION	1.6477702130627848E-8	DESIGN
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999998960944743	WITHOUT_CLASSIFICATION	1.0390552568643299E-7	DESIGN
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999998960944743	WITHOUT_CLASSIFICATION	1.0390552568643299E-7	DESIGN
// always need at least a 0	WITHOUT_CLASSIFICATION	0.99999171341914	WITHOUT_CLASSIFICATION	8.286580860072603E-6	DESIGN
// always need at least a 0	WITHOUT_CLASSIFICATION	0.99999171341914	WITHOUT_CLASSIFICATION	8.286580860072603E-6	DESIGN
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999995203997641	WITHOUT_CLASSIFICATION	4.796002358230784E-7	DESIGN
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999939872418885	WITHOUT_CLASSIFICATION	6.012758111487706E-6	DESIGN
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9999841903891754	WITHOUT_CLASSIFICATION	1.580961082455451E-5	DESIGN
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999995050162259	WITHOUT_CLASSIFICATION	4.94983774090267E-7	DESIGN
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999990851822642	WITHOUT_CLASSIFICATION	9.1481773579682E-7	DESIGN
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9999999866715192	WITHOUT_CLASSIFICATION	1.3328480684641894E-8	DESIGN
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999989803825493	WITHOUT_CLASSIFICATION	1.0196174506912483E-6	DESIGN
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999994016091001	WITHOUT_CLASSIFICATION	5.983908999966774E-7	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9982092496217496	WITHOUT_CLASSIFICATION	0.0017907503782503688	DESIGN
// '.'	WITHOUT_CLASSIFICATION	0.9999947737323347	WITHOUT_CLASSIFICATION	5.226267665249228E-6	DESIGN
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999979652993995	WITHOUT_CLASSIFICATION	2.034700600459995E-6	DESIGN
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999999969072237	WITHOUT_CLASSIFICATION	3.0927762019921964E-9	DESIGN
// \v	WITHOUT_CLASSIFICATION	0.999965956689769	WITHOUT_CLASSIFICATION	3.404331023096468E-5	DESIGN
// dangling '%' char	WITHOUT_CLASSIFICATION	0.999999516541868	WITHOUT_CLASSIFICATION	4.834581319991981E-7	DESIGN
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999996725511315	WITHOUT_CLASSIFICATION	3.2744886849097577E-7	DESIGN
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999884681662429	WITHOUT_CLASSIFICATION	1.1531833757104536E-5	DESIGN
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9998625157390333	WITHOUT_CLASSIFICATION	1.3748426096676087E-4	DESIGN
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9999988928180975	WITHOUT_CLASSIFICATION	1.1071819024379647E-6	DESIGN
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999890776558583	WITHOUT_CLASSIFICATION	1.092234414161478E-5	DESIGN
// negative values	WITHOUT_CLASSIFICATION	0.9997987252244269	WITHOUT_CLASSIFICATION	2.0127477557296125E-4	DESIGN
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999858113624907	WITHOUT_CLASSIFICATION	1.4188637509314551E-5	DESIGN
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999994265285881	WITHOUT_CLASSIFICATION	5.734714118115955E-7	DESIGN
// no such luck...	WITHOUT_CLASSIFICATION	0.9885296604010348	WITHOUT_CLASSIFICATION	0.01147033959896508	DESIGN
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9998032319461864	WITHOUT_CLASSIFICATION	1.9676805381363925E-4	DESIGN
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999208637831117	WITHOUT_CLASSIFICATION	7.913621688819253E-5	DESIGN
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9997605018302907	WITHOUT_CLASSIFICATION	2.394981697092641E-4	DESIGN
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9997161587574532	WITHOUT_CLASSIFICATION	2.838412425468001E-4	DESIGN
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999703808976796	WITHOUT_CLASSIFICATION	2.961910232038381E-5	DESIGN
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999054490689356	WITHOUT_CLASSIFICATION	9.455093106436379E-5	DESIGN
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999895068885956	WITHOUT_CLASSIFICATION	1.0493111404395836E-5	DESIGN
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999913326520735	WITHOUT_CLASSIFICATION	8.667347926456795E-6	DESIGN
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999913326520735	WITHOUT_CLASSIFICATION	8.667347926456795E-6	DESIGN
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999993171857234	WITHOUT_CLASSIFICATION	6.828142766233248E-7	DESIGN
/* Tempering */	WITHOUT_CLASSIFICATION	0.9998314904231214	WITHOUT_CLASSIFICATION	1.6850957687869237E-4	DESIGN
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999987088289612	WITHOUT_CLASSIFICATION	1.2911710387486897E-6	DESIGN
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999999828067565	WITHOUT_CLASSIFICATION	1.7193243536417616E-8	DESIGN
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999999828067565	WITHOUT_CLASSIFICATION	1.7193243536417616E-8	DESIGN
// \v	WITHOUT_CLASSIFICATION	0.999965956689769	WITHOUT_CLASSIFICATION	3.404331023096468E-5	DESIGN
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9999998432363334	WITHOUT_CLASSIFICATION	1.5676366660065927E-7	DESIGN
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999999350957455	WITHOUT_CLASSIFICATION	6.490425455164335E-8	DESIGN
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9999999959356897	WITHOUT_CLASSIFICATION	4.064310296244069E-9	DESIGN
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9999999886417151	WITHOUT_CLASSIFICATION	1.1358284796713565E-8	DESIGN
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999999832163334	WITHOUT_CLASSIFICATION	1.6783666579488385E-8	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9996383960851345	WITHOUT_CLASSIFICATION	3.6160391486556883E-4	DESIGN
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9999999243674763	WITHOUT_CLASSIFICATION	7.563252368615365E-8	DESIGN
// no number	WITHOUT_CLASSIFICATION	0.9999410318029505	WITHOUT_CLASSIFICATION	5.8968197049516165E-5	DESIGN
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999998026843006	WITHOUT_CLASSIFICATION	1.973156994298803E-7	DESIGN
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9999918316923997	WITHOUT_CLASSIFICATION	8.168307600286798E-6	DESIGN
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9997529373654139	WITHOUT_CLASSIFICATION	2.4706263458605725E-4	DESIGN
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.999973169417633	WITHOUT_CLASSIFICATION	2.6830582366963832E-5	DESIGN
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999972250344968	WITHOUT_CLASSIFICATION	2.7749655031994284E-6	DESIGN
// goto next bucket	WITHOUT_CLASSIFICATION	0.9996525304240285	WITHOUT_CLASSIFICATION	3.474695759715083E-4	DESIGN
// we reached the end	WITHOUT_CLASSIFICATION	0.9999588791932236	WITHOUT_CLASSIFICATION	4.112080677639693E-5	DESIGN
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9997201319645798	WITHOUT_CLASSIFICATION	2.79868035420219E-4	DESIGN
// states	WITHOUT_CLASSIFICATION	0.999987933079188	WITHOUT_CLASSIFICATION	1.2066920811917175E-5	DESIGN
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999995635540784	WITHOUT_CLASSIFICATION	4.364459216207411E-7	DESIGN
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999999999999735	WITHOUT_CLASSIFICATION	2.6565672058675623E-14	DESIGN
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999999999999809	WITHOUT_CLASSIFICATION	1.91208256640849E-14	DESIGN
// drop through for sign	WITHOUT_CLASSIFICATION	0.999899216716912	WITHOUT_CLASSIFICATION	1.0078328308812006E-4	DESIGN
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.969358018863724	WITHOUT_CLASSIFICATION	0.030641981136276048	DESIGN
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999880468684751	WITHOUT_CLASSIFICATION	1.195313152499338E-5	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999994544871	WITHOUT_CLASSIFICATION	5.45512836649149E-10	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999999937490425	WITHOUT_CLASSIFICATION	6.250957560558516E-9	DESIGN
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.999999912864237	WITHOUT_CLASSIFICATION	8.713576307332744E-8	DESIGN
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999999152237373	WITHOUT_CLASSIFICATION	8.477626269319344E-8	DESIGN
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999999718165246	WITHOUT_CLASSIFICATION	2.8183475430495904E-8	DESIGN
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999892828468843	WITHOUT_CLASSIFICATION	1.0717153115606195E-5	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999894563515	WITHOUT_CLASSIFICATION	1.0543648523579714E-8	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999894563515	WITHOUT_CLASSIFICATION	1.0543648523579714E-8	DESIGN
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9999956402224625	WITHOUT_CLASSIFICATION	4.359777537591189E-6	DESIGN
// ignore // switch	WITHOUT_CLASSIFICATION	0.99999971529617	WITHOUT_CLASSIFICATION	2.847038299607018E-7	DESIGN
// ignore // switch	WITHOUT_CLASSIFICATION	0.99999971529617	WITHOUT_CLASSIFICATION	2.847038299607018E-7	DESIGN
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999995569558802	WITHOUT_CLASSIFICATION	4.430441198259576E-7	DESIGN
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999995569558802	WITHOUT_CLASSIFICATION	4.430441198259576E-7	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999907967175204	WITHOUT_CLASSIFICATION	9.203282479652987E-6	DESIGN
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999997541675849	WITHOUT_CLASSIFICATION	2.458324150719041E-7	DESIGN
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999966963038281	WITHOUT_CLASSIFICATION	3.3036961718107854E-6	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9999921727791347	WITHOUT_CLASSIFICATION	7.82722086533521E-6	DESIGN
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999292171747219	WITHOUT_CLASSIFICATION	7.078282527804016E-5	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999990624942603	WITHOUT_CLASSIFICATION	9.375057396361575E-7	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999990624942603	WITHOUT_CLASSIFICATION	9.375057396361575E-7	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999994544871	WITHOUT_CLASSIFICATION	5.45512836649149E-10	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999994544871	WITHOUT_CLASSIFICATION	5.45512836649149E-10	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999994544871	WITHOUT_CLASSIFICATION	5.45512836649149E-10	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999999937490425	WITHOUT_CLASSIFICATION	6.250957560558516E-9	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999894563515	WITHOUT_CLASSIFICATION	1.0543648523579714E-8	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999894563515	WITHOUT_CLASSIFICATION	1.0543648523579714E-8	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999894563515	WITHOUT_CLASSIFICATION	1.0543648523579714E-8	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999907967175204	WITHOUT_CLASSIFICATION	9.203282479652987E-6	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999907967175204	WITHOUT_CLASSIFICATION	9.203282479652987E-6	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999907967175204	WITHOUT_CLASSIFICATION	9.203282479652987E-6	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9999921727791347	WITHOUT_CLASSIFICATION	7.82722086533521E-6	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9999921727791347	WITHOUT_CLASSIFICATION	7.82722086533521E-6	DESIGN
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999988181028485	WITHOUT_CLASSIFICATION	1.1818971514455489E-6	DESIGN
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.999999975555504	WITHOUT_CLASSIFICATION	2.4444496024028895E-8	DESIGN
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999974738228422	WITHOUT_CLASSIFICATION	2.5261771578249225E-6	DESIGN
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9999998127017938	DESIGN	1.872982062738469E-7	WITHOUT_CLASSIFICATION
// no digits, error	WITHOUT_CLASSIFICATION	0.9996729702347343	WITHOUT_CLASSIFICATION	3.270297652656993E-4	DESIGN
// too big for us	WITHOUT_CLASSIFICATION	0.999942592625128	WITHOUT_CLASSIFICATION	5.740737487197416E-5	DESIGN
// too big for us	WITHOUT_CLASSIFICATION	0.999942592625128	WITHOUT_CLASSIFICATION	5.740737487197416E-5	DESIGN
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999997728063608	WITHOUT_CLASSIFICATION	2.2719363923162775E-7	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9996383960851345	WITHOUT_CLASSIFICATION	3.6160391486556883E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9996383960851345	WITHOUT_CLASSIFICATION	3.6160391486556883E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9996383960851345	WITHOUT_CLASSIFICATION	3.6160391486556883E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9996383960851345	WITHOUT_CLASSIFICATION	3.6160391486556883E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9996383960851345	WITHOUT_CLASSIFICATION	3.6160391486556883E-4	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999992669394132	WITHOUT_CLASSIFICATION	7.330605867600281E-7	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999992669394132	WITHOUT_CLASSIFICATION	7.330605867600281E-7	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999992669394132	WITHOUT_CLASSIFICATION	7.330605867600281E-7	DESIGN
// first char must be digit	WITHOUT_CLASSIFICATION	0.999997415740323	WITHOUT_CLASSIFICATION	2.5842596769697556E-6	DESIGN
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999930650653388	WITHOUT_CLASSIFICATION	6.934934661301855E-6	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999999937490425	WITHOUT_CLASSIFICATION	6.250957560558516E-9	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999907967175204	WITHOUT_CLASSIFICATION	9.203282479652987E-6	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999907967175204	WITHOUT_CLASSIFICATION	9.203282479652987E-6	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9996383960851345	WITHOUT_CLASSIFICATION	3.6160391486556883E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9996383960851345	WITHOUT_CLASSIFICATION	3.6160391486556883E-4	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999992669394132	WITHOUT_CLASSIFICATION	7.330605867600281E-7	DESIGN
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999997728063608	WITHOUT_CLASSIFICATION	2.2719363923162775E-7	DESIGN
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999999997681006	WITHOUT_CLASSIFICATION	2.3189926341888487E-10	DESIGN
// switch //while	WITHOUT_CLASSIFICATION	0.9999960145068997	WITHOUT_CLASSIFICATION	3.985493100263961E-6	DESIGN
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9590743155041436	WITHOUT_CLASSIFICATION	0.04092568449585649	DESIGN
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999280632360706	WITHOUT_CLASSIFICATION	7.193676392931908E-5	DESIGN
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999984070420797	WITHOUT_CLASSIFICATION	1.5929579204411679E-6	DESIGN
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999966055820778	WITHOUT_CLASSIFICATION	3.3944179222296366E-6	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999697884603626	WITHOUT_CLASSIFICATION	3.021153963745924E-5	DESIGN
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9956488580977174	WITHOUT_CLASSIFICATION	0.004351141902282549	DESIGN
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999780610462663	WITHOUT_CLASSIFICATION	2.1938953733634E-5	DESIGN
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999692240006337	WITHOUT_CLASSIFICATION	3.077599936636476E-5	DESIGN
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9907370338505535	WITHOUT_CLASSIFICATION	0.009262966149446548	DESIGN
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999999120525057	WITHOUT_CLASSIFICATION	8.794749438264619E-8	DESIGN
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999959198487897	WITHOUT_CLASSIFICATION	4.080151210374263E-6	DESIGN
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999999790701751	WITHOUT_CLASSIFICATION	2.0929824867460966E-8	DESIGN
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999984547319598	WITHOUT_CLASSIFICATION	1.5452680401930788E-6	DESIGN
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9999987008117437	WITHOUT_CLASSIFICATION	1.2991882563473478E-6	DESIGN
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999330266041587	WITHOUT_CLASSIFICATION	6.697339584129354E-5	DESIGN
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999515405577263	WITHOUT_CLASSIFICATION	4.845944227374724E-5	DESIGN
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9998886089400979	WITHOUT_CLASSIFICATION	1.1139105990214967E-4	DESIGN
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999997284284913	WITHOUT_CLASSIFICATION	2.7157150881387855E-7	DESIGN
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999921783723184	WITHOUT_CLASSIFICATION	7.82162768163125E-6	DESIGN
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.999999596340396	WITHOUT_CLASSIFICATION	4.036596039638564E-7	DESIGN
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999998613662391	WITHOUT_CLASSIFICATION	1.3863376088060938E-7	DESIGN
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999919408427485	WITHOUT_CLASSIFICATION	8.059157251499911E-6	DESIGN
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.999954416181212	WITHOUT_CLASSIFICATION	4.558381878806846E-5	DESIGN
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9670591738063288	WITHOUT_CLASSIFICATION	0.03294082619367111	DESIGN
// unread back	WITHOUT_CLASSIFICATION	0.9999723777740285	WITHOUT_CLASSIFICATION	2.7622225971559682E-5	DESIGN
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999999990656415	WITHOUT_CLASSIFICATION	9.343584449044303E-10	DESIGN
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999989177639363	WITHOUT_CLASSIFICATION	1.08223606358525E-6	DESIGN
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999998555039339	WITHOUT_CLASSIFICATION	1.444960660553898E-7	DESIGN
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999999406236882	WITHOUT_CLASSIFICATION	5.9376311735103186E-8	DESIGN
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999999948849688	WITHOUT_CLASSIFICATION	5.115031183289129E-9	DESIGN
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999999992484959	WITHOUT_CLASSIFICATION	7.515040264669311E-10	DESIGN
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999999991101776	WITHOUT_CLASSIFICATION	8.898224735271298E-10	DESIGN
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999999997681006	WITHOUT_CLASSIFICATION	2.3189926341888487E-10	DESIGN
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999999992023807	WITHOUT_CLASSIFICATION	7.976193047282093E-10	DESIGN
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9999564395423901	WITHOUT_CLASSIFICATION	4.356045760984478E-5	DESIGN
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9809063520591655	WITHOUT_CLASSIFICATION	0.01909364794083446	DESIGN
// silence	WITHOUT_CLASSIFICATION	0.9997701921445327	WITHOUT_CLASSIFICATION	2.2980785546732074E-4	DESIGN
// silence	WITHOUT_CLASSIFICATION	0.9997701921445327	WITHOUT_CLASSIFICATION	2.2980785546732074E-4	DESIGN
// Don't bother	WITHOUT_CLASSIFICATION	0.9999915590242834	WITHOUT_CLASSIFICATION	8.440975716623352E-6	DESIGN
// Don't bother	WITHOUT_CLASSIFICATION	0.9999915590242834	WITHOUT_CLASSIFICATION	8.440975716623352E-6	DESIGN
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999999902545962	WITHOUT_CLASSIFICATION	9.745403715612852E-9	DESIGN
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9998862203797727	WITHOUT_CLASSIFICATION	1.1377962022728102E-4	DESIGN
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999994863388042	WITHOUT_CLASSIFICATION	5.136611958504555E-7	DESIGN
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999990368071509	WITHOUT_CLASSIFICATION	9.631928492090424E-7	DESIGN
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999999800425785	WITHOUT_CLASSIFICATION	1.995742149681688E-8	DESIGN
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.999945610379242	WITHOUT_CLASSIFICATION	5.438962075806896E-5	DESIGN
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999987049712515	WITHOUT_CLASSIFICATION	1.2950287484561183E-6	DESIGN
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999999999933542	WITHOUT_CLASSIFICATION	6.6457623321535136E-12	DESIGN
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9998836382714414	WITHOUT_CLASSIFICATION	1.1636172855857666E-4	DESIGN
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999999666319347	WITHOUT_CLASSIFICATION	3.3368065261211695E-8	DESIGN
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999999380895362	WITHOUT_CLASSIFICATION	6.191046373571457E-8	DESIGN
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999999996381294	WITHOUT_CLASSIFICATION	3.618706802079256E-10	DESIGN
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999999996381294	WITHOUT_CLASSIFICATION	3.618706802079256E-10	DESIGN
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999999982117957	WITHOUT_CLASSIFICATION	1.7882042789348523E-9	DESIGN
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999999907391527	WITHOUT_CLASSIFICATION	9.26084733357841E-9	DESIGN
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.999998476671048	WITHOUT_CLASSIFICATION	1.523328951954964E-6	DESIGN
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.999998476671048	WITHOUT_CLASSIFICATION	1.523328951954964E-6	DESIGN
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999981661603228	WITHOUT_CLASSIFICATION	1.8338396771705348E-6	DESIGN
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999985073376094	WITHOUT_CLASSIFICATION	1.4926623905634644E-6	DESIGN
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9979906990595557	WITHOUT_CLASSIFICATION	0.0020093009404442454	DESIGN
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999953329534681	WITHOUT_CLASSIFICATION	4.667046531805398E-6	DESIGN
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999998742303613	WITHOUT_CLASSIFICATION	1.2576963875756102E-7	DESIGN
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9992800348487211	WITHOUT_CLASSIFICATION	7.199651512790248E-4	DESIGN
// save the ungot	WITHOUT_CLASSIFICATION	0.9998914947607396	WITHOUT_CLASSIFICATION	1.0850523926040137E-4	DESIGN
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9996901719920142	WITHOUT_CLASSIFICATION	3.098280079858668E-4	DESIGN
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999975144495761	WITHOUT_CLASSIFICATION	2.4855504240048363E-6	DESIGN
// flush first	WITHOUT_CLASSIFICATION	0.9999958780016074	WITHOUT_CLASSIFICATION	4.121998392626982E-6	DESIGN
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999994184176145	WITHOUT_CLASSIFICATION	5.815823855216693E-7	DESIGN
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9999977073761152	WITHOUT_CLASSIFICATION	2.29262388486278E-6	DESIGN
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999999237817183	WITHOUT_CLASSIFICATION	7.621828160150969E-8	DESIGN
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999999940967864	WITHOUT_CLASSIFICATION	5.903213480433049E-9	DESIGN
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999999993935148	WITHOUT_CLASSIFICATION	6.064852719923109E-10	DESIGN
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999999503376964	WITHOUT_CLASSIFICATION	4.9662303686114864E-8	DESIGN
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9991239682967904	WITHOUT_CLASSIFICATION	8.760317032095349E-4	DESIGN
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9994538090402548	WITHOUT_CLASSIFICATION	5.461909597451454E-4	DESIGN
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999998655707074	WITHOUT_CLASSIFICATION	1.344292925979008E-7	DESIGN
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999992698441225	WITHOUT_CLASSIFICATION	7.301558774839179E-7	DESIGN
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9999393969347088	DESIGN	6.060306529119954E-5	WITHOUT_CLASSIFICATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999993381737384	WITHOUT_CLASSIFICATION	6.618262615480644E-7	DESIGN
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999999336187911	WITHOUT_CLASSIFICATION	6.638120886436602E-8	DESIGN
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999991996778204	WITHOUT_CLASSIFICATION	8.003221795395769E-7	DESIGN
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9997349367432663	WITHOUT_CLASSIFICATION	2.650632567337456E-4	DESIGN
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9996782470568314	WITHOUT_CLASSIFICATION	3.2175294316865013E-4	DESIGN
// else leave it null	WITHOUT_CLASSIFICATION	0.999996882260727	WITHOUT_CLASSIFICATION	3.1177392730096162E-6	DESIGN
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999028551684183	WITHOUT_CLASSIFICATION	9.71448315817928E-5	DESIGN
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9999486357191326	WITHOUT_CLASSIFICATION	5.1364280867399317E-5	DESIGN
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999996303952148	WITHOUT_CLASSIFICATION	3.6960478525016E-7	DESIGN
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999999860194219	WITHOUT_CLASSIFICATION	1.3980578038266655E-8	DESIGN
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999997062371158	WITHOUT_CLASSIFICATION	2.9376288417671324E-7	DESIGN
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999995289331515	WITHOUT_CLASSIFICATION	4.7106684842481995E-7	DESIGN
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999958896780685	WITHOUT_CLASSIFICATION	4.110321931486557E-6	DESIGN
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999958896780685	WITHOUT_CLASSIFICATION	4.110321931486557E-6	DESIGN
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.999999821312838	WITHOUT_CLASSIFICATION	1.7868716184432347E-7	DESIGN
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999962868762864	WITHOUT_CLASSIFICATION	3.7131237136036245E-6	DESIGN
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9999999920814432	WITHOUT_CLASSIFICATION	7.91855680634764E-9	DESIGN
// Init	WITHOUT_CLASSIFICATION	0.9999912907051148	WITHOUT_CLASSIFICATION	8.709294885151908E-6	DESIGN
// Block	WITHOUT_CLASSIFICATION	0.9999980871020802	WITHOUT_CLASSIFICATION	1.912897919776628E-6	DESIGN
// Copy constructor	WITHOUT_CLASSIFICATION	0.9993430556753501	WITHOUT_CLASSIFICATION	6.569443246499035E-4	DESIGN
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9811536625439725	WITHOUT_CLASSIFICATION	0.018846337456027446	DESIGN
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9969924801283327	WITHOUT_CLASSIFICATION	0.0030075198716672303	DESIGN
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999194539183694	WITHOUT_CLASSIFICATION	8.054608163051738E-5	DESIGN
// ok	WITHOUT_CLASSIFICATION	0.999993579798009	WITHOUT_CLASSIFICATION	6.420201991071027E-6	DESIGN
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9818536221836015	DESIGN	0.018146377816398537	WITHOUT_CLASSIFICATION
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9987524664267523	WITHOUT_CLASSIFICATION	0.0012475335732476938	DESIGN
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9999489518091329	WITHOUT_CLASSIFICATION	5.104819086703632E-5	DESIGN
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.999972314889515	WITHOUT_CLASSIFICATION	2.7685110485024677E-5	DESIGN
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999999255874665	WITHOUT_CLASSIFICATION	7.44125334257127E-8	DESIGN
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999981169808253	WITHOUT_CLASSIFICATION	1.8830191746862497E-6	DESIGN
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9988982852474448	WITHOUT_CLASSIFICATION	0.0011017147525551872	DESIGN
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9997190458083032	WITHOUT_CLASSIFICATION	2.809541916968957E-4	DESIGN
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.997426512460156	WITHOUT_CLASSIFICATION	0.002573487539843997	DESIGN
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999975043264716	WITHOUT_CLASSIFICATION	2.4956735283952054E-6	DESIGN
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999999648017625	WITHOUT_CLASSIFICATION	3.5198237564759523E-8	DESIGN
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.999986180589857	WITHOUT_CLASSIFICATION	1.3819410143026471E-5	DESIGN
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9967249538267302	WITHOUT_CLASSIFICATION	0.0032750461732697442	DESIGN
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9998480780410404	WITHOUT_CLASSIFICATION	1.5192195895971061E-4	DESIGN
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9482958414723718	WITHOUT_CLASSIFICATION	0.05170415852762809	DESIGN
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999978228220591	WITHOUT_CLASSIFICATION	2.177177940946126E-6	DESIGN
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999998387957304	WITHOUT_CLASSIFICATION	1.6120426965795168E-7	DESIGN
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999998814538401	WITHOUT_CLASSIFICATION	1.1854615987228186E-7	DESIGN
// void methods should work	WITHOUT_CLASSIFICATION	0.9976181674965962	WITHOUT_CLASSIFICATION	0.002381832503403779	DESIGN
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9999999206885163	WITHOUT_CLASSIFICATION	7.931148362880279E-8	DESIGN
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999999270193727	WITHOUT_CLASSIFICATION	7.298062729399317E-8	DESIGN
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999690014502597	WITHOUT_CLASSIFICATION	3.099854974033365E-5	DESIGN
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999961048108705	WITHOUT_CLASSIFICATION	3.895189129441457E-6	DESIGN
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999951664206522	WITHOUT_CLASSIFICATION	4.833579347667352E-6	DESIGN
//        int n = 10;	WITHOUT_CLASSIFICATION	0.999996242702331	WITHOUT_CLASSIFICATION	3.7572976689998644E-6	DESIGN
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.999996618641971	WITHOUT_CLASSIFICATION	3.381358028957872E-6	DESIGN
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9890490216689519	WITHOUT_CLASSIFICATION	0.010950978331048123	DESIGN
// value equality	WITHOUT_CLASSIFICATION	0.9999956600581946	WITHOUT_CLASSIFICATION	4.33994180539096E-6	DESIGN
// identity equality	WITHOUT_CLASSIFICATION	0.9999782737876318	WITHOUT_CLASSIFICATION	2.172621236812521E-5	DESIGN
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999999477381406	WITHOUT_CLASSIFICATION	5.2261859382977146E-8	DESIGN
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999982887092386	WITHOUT_CLASSIFICATION	1.7112907614443697E-6	DESIGN
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999971931365886	WITHOUT_CLASSIFICATION	2.8068634112801757E-6	DESIGN
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999971931365886	WITHOUT_CLASSIFICATION	2.8068634112801757E-6	DESIGN
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999926846641989	WITHOUT_CLASSIFICATION	7.315335801103308E-6	DESIGN
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999999964699091	WITHOUT_CLASSIFICATION	3.5300910018729198E-9	DESIGN
// bench Long fib	WITHOUT_CLASSIFICATION	0.9999996843503277	WITHOUT_CLASSIFICATION	3.1564967224276666E-7	DESIGN
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9988923374554368	WITHOUT_CLASSIFICATION	0.0011076625445630766	DESIGN
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999642202015203	WITHOUT_CLASSIFICATION	3.5779798479582655E-5	DESIGN
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999967002368823	WITHOUT_CLASSIFICATION	3.2997631176835464E-6	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.999999644684843	WITHOUT_CLASSIFICATION	3.5531515689044E-7	DESIGN
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9552369765109302	DESIGN	0.044763023489069825	WITHOUT_CLASSIFICATION
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9997575238880928	WITHOUT_CLASSIFICATION	2.4247611190730052E-4	DESIGN
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.975951032134686	WITHOUT_CLASSIFICATION	0.0240489678653139	DESIGN
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9984833397252003	WITHOUT_CLASSIFICATION	0.0015166602747996606	DESIGN
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999999086714884	WITHOUT_CLASSIFICATION	9.132851156920762E-8	DESIGN
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.8674951911714837	WITHOUT_CLASSIFICATION	0.13250480882851634	DESIGN
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999995647570885	WITHOUT_CLASSIFICATION	4.3524291145259744E-7	DESIGN
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999994545752487	WITHOUT_CLASSIFICATION	5.454247511790503E-7	DESIGN
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9997985781086924	DESIGN	2.0142189130757207E-4	WITHOUT_CLASSIFICATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9715872518003023	WITHOUT_CLASSIFICATION	0.02841274819969776	DESIGN
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9999984294448973	WITHOUT_CLASSIFICATION	1.5705551027683284E-6	DESIGN
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9989529634130826	WITHOUT_CLASSIFICATION	0.0010470365869174223	DESIGN
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9993415721763896	DESIGN	6.584278236104042E-4	WITHOUT_CLASSIFICATION
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999438050722356	WITHOUT_CLASSIFICATION	5.619492776451368E-5	DESIGN
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.999989767447639	WITHOUT_CLASSIFICATION	1.0232552360971383E-5	DESIGN
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999999999092675	WITHOUT_CLASSIFICATION	9.073249292868375E-11	DESIGN
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999984883853416	WITHOUT_CLASSIFICATION	1.5116146584097828E-6	DESIGN
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999999653837612	WITHOUT_CLASSIFICATION	3.461623879682665E-8	DESIGN
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999999615552767	WITHOUT_CLASSIFICATION	3.844472331078846E-8	DESIGN
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999690720858543	WITHOUT_CLASSIFICATION	3.092791414560418E-5	DESIGN
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9999962508641205	WITHOUT_CLASSIFICATION	3.7491358795329943E-6	DESIGN
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999999986385388	WITHOUT_CLASSIFICATION	1.3614611693070927E-9	DESIGN
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999671408901107	WITHOUT_CLASSIFICATION	3.2859109889179474E-5	DESIGN
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999999994517093	WITHOUT_CLASSIFICATION	5.482907120577567E-10	DESIGN
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999994764659265	WITHOUT_CLASSIFICATION	5.23534073491648E-7	DESIGN
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999671408901107	WITHOUT_CLASSIFICATION	3.2859109889179474E-5	DESIGN
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999924542185562	WITHOUT_CLASSIFICATION	7.545781443733121E-6	DESIGN
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999833240760913	WITHOUT_CLASSIFICATION	1.667592390867361E-5	DESIGN
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9999999988860326	WITHOUT_CLASSIFICATION	1.1139673228306893E-9	DESIGN
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.999923778724608	DESIGN	7.622127539201278E-5	WITHOUT_CLASSIFICATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9995787681257234	WITHOUT_CLASSIFICATION	4.212318742766267E-4	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.6199157172492604	WITHOUT_CLASSIFICATION	0.3800842827507395	DESIGN
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9998215858844437	WITHOUT_CLASSIFICATION	1.784141155562451E-4	DESIGN
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.747821774027781	WITHOUT_CLASSIFICATION	0.2521782259722189	DESIGN
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999971865524736	WITHOUT_CLASSIFICATION	2.813447526508726E-6	DESIGN
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999992698441225	WITHOUT_CLASSIFICATION	7.301558774839179E-7	DESIGN
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999974738228422	WITHOUT_CLASSIFICATION	2.5261771578249225E-6	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9930904713557913	WITHOUT_CLASSIFICATION	0.006909528644208703	DESIGN
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.999999807484612	WITHOUT_CLASSIFICATION	1.925153879653387E-7	DESIGN
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999934494059453	WITHOUT_CLASSIFICATION	6.5505940548546675E-6	DESIGN
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999999890637066	WITHOUT_CLASSIFICATION	1.0936293570353685E-8	DESIGN
// switch // while	WITHOUT_CLASSIFICATION	0.9999747592734476	WITHOUT_CLASSIFICATION	2.5240726552418383E-5	DESIGN
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9999789161954594	DESIGN	2.1083804540560795E-5	WITHOUT_CLASSIFICATION
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9551834201826538	WITHOUT_CLASSIFICATION	0.044816579817346276	DESIGN
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.6308450845617967	DESIGN	0.3691549154382034	WITHOUT_CLASSIFICATION
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9998366151498543	WITHOUT_CLASSIFICATION	1.6338485014560678E-4	DESIGN
// expected	WITHOUT_CLASSIFICATION	0.9999998628195916	WITHOUT_CLASSIFICATION	1.3718040832494332E-7	DESIGN
// Do nothing	WITHOUT_CLASSIFICATION	0.9999494604715043	WITHOUT_CLASSIFICATION	5.05395284956535E-5	DESIGN
// constructor	WITHOUT_CLASSIFICATION	0.9999329183899434	WITHOUT_CLASSIFICATION	6.708161005670433E-5	DESIGN
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999964171970057	WITHOUT_CLASSIFICATION	3.582802994214509E-6	DESIGN
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9989664245266552	WITHOUT_CLASSIFICATION	0.0010335754733448077	DESIGN
// line 423	WITHOUT_CLASSIFICATION	0.9999994602842632	WITHOUT_CLASSIFICATION	5.397157367243511E-7	DESIGN
// line 486	WITHOUT_CLASSIFICATION	0.9999987468640753	WITHOUT_CLASSIFICATION	1.2531359247198048E-6	DESIGN
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9997929293474923	WITHOUT_CLASSIFICATION	2.070706525077246E-4	DESIGN
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999998625916	WITHOUT_CLASSIFICATION	1.3740831561201926E-10	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9890959271026611	DESIGN	0.010904072897338812	WITHOUT_CLASSIFICATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9890959271026611	DESIGN	0.010904072897338812	WITHOUT_CLASSIFICATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999996946757428	WITHOUT_CLASSIFICATION	3.053242573178358E-7	DESIGN
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999999991634204	WITHOUT_CLASSIFICATION	8.365796869598146E-10	DESIGN
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999976542271577	WITHOUT_CLASSIFICATION	2.345772842221157E-6	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9999882491122357	DESIGN	1.175088776427251E-5	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9999882491122357	DESIGN	1.175088776427251E-5	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9999882491122357	DESIGN	1.175088776427251E-5	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9999882491122357	DESIGN	1.175088776427251E-5	WITHOUT_CLASSIFICATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999997804986259	WITHOUT_CLASSIFICATION	2.195013740698013E-7	DESIGN
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999996213681086	WITHOUT_CLASSIFICATION	3.7863189134890513E-7	DESIGN
// "else" body	WITHOUT_CLASSIFICATION	0.9999996801849008	WITHOUT_CLASSIFICATION	3.1981509918261466E-7	DESIGN
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9960802909539095	DESIGN	0.003919709046090616	WITHOUT_CLASSIFICATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999997018134059	WITHOUT_CLASSIFICATION	2.9818659408117956E-7	DESIGN
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.999993424668744	WITHOUT_CLASSIFICATION	6.575331255994926E-6	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9933979448506781	WITHOUT_CLASSIFICATION	0.006602055149321816	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9933979448506781	WITHOUT_CLASSIFICATION	0.006602055149321816	DESIGN
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.8999318828620151	WITHOUT_CLASSIFICATION	0.10006811713798494	DESIGN
/* 10! */	WITHOUT_CLASSIFICATION	0.9999650553328727	WITHOUT_CLASSIFICATION	3.49446671273752E-5	DESIGN
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9986241734705983	WITHOUT_CLASSIFICATION	0.001375826529401699	DESIGN
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9999999999169932	WITHOUT_CLASSIFICATION	8.300681704642438E-11	DESIGN
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999998767916881	WITHOUT_CLASSIFICATION	1.2320831194138322E-7	DESIGN
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999985286390012	WITHOUT_CLASSIFICATION	1.4713609987599067E-6	DESIGN
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999999984820688	WITHOUT_CLASSIFICATION	1.5179311993557143E-9	DESIGN
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999992155344991	WITHOUT_CLASSIFICATION	7.844655008723857E-7	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9996412318924343	WITHOUT_CLASSIFICATION	3.587681075657831E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9996412318924343	WITHOUT_CLASSIFICATION	3.587681075657831E-4	DESIGN
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999994764659265	WITHOUT_CLASSIFICATION	5.23534073491648E-7	DESIGN
// line 449	WITHOUT_CLASSIFICATION	0.9999987359184485	WITHOUT_CLASSIFICATION	1.2640815515679519E-6	DESIGN
// line 495	WITHOUT_CLASSIFICATION	0.9999990309817621	WITHOUT_CLASSIFICATION	9.690182378270626E-7	DESIGN
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9971958856884791	WITHOUT_CLASSIFICATION	0.0028041143115208446	DESIGN
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.999999999985712	WITHOUT_CLASSIFICATION	1.428804820484825E-11	DESIGN
/* 14! */	WITHOUT_CLASSIFICATION	0.9999406268574003	WITHOUT_CLASSIFICATION	5.937314259979136E-5	DESIGN
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999995248019059	WITHOUT_CLASSIFICATION	4.751980941767778E-7	DESIGN
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.999899421438968	WITHOUT_CLASSIFICATION	1.0057856103204547E-4	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999961248854952	WITHOUT_CLASSIFICATION	3.875114504766908E-6	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999961248854952	WITHOUT_CLASSIFICATION	3.875114504766908E-6	DESIGN
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9992314840489437	WITHOUT_CLASSIFICATION	7.68515951056183E-4	DESIGN
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999999996042946	WITHOUT_CLASSIFICATION	3.957053824276245E-10	DESIGN
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9981804827080418	WITHOUT_CLASSIFICATION	0.001819517291958174	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999998301918688	WITHOUT_CLASSIFICATION	1.6980813125040897E-7	DESIGN
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999994006597225	WITHOUT_CLASSIFICATION	5.993402774944598E-7	DESIGN
/* 18! */	WITHOUT_CLASSIFICATION	0.9999662277548668	WITHOUT_CLASSIFICATION	3.377224513314067E-5	DESIGN
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9714296120419137	WITHOUT_CLASSIFICATION	0.02857038795808625	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999959475955952	WITHOUT_CLASSIFICATION	4.0524044048642E-6	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999959475955952	WITHOUT_CLASSIFICATION	4.0524044048642E-6	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999959475955952	WITHOUT_CLASSIFICATION	4.0524044048642E-6	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999959475955952	WITHOUT_CLASSIFICATION	4.0524044048642E-6	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9998386566928595	WITHOUT_CLASSIFICATION	1.6134330714035884E-4	DESIGN
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999999794878394	WITHOUT_CLASSIFICATION	2.05121605409154E-8	DESIGN
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9990174252810565	WITHOUT_CLASSIFICATION	9.825747189434674E-4	DESIGN
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999982496009572	WITHOUT_CLASSIFICATION	1.75039904273179E-6	DESIGN
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999999629117351	WITHOUT_CLASSIFICATION	3.708826483534129E-8	DESIGN
/* 22! */	WITHOUT_CLASSIFICATION	0.9999487278350248	WITHOUT_CLASSIFICATION	5.127216497532553E-5	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9999872919539188	WITHOUT_CLASSIFICATION	1.2708046081128155E-5	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999997718730623	WITHOUT_CLASSIFICATION	2.2812693760503825E-7	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999997718730623	WITHOUT_CLASSIFICATION	2.2812693760503825E-7	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999997718730623	WITHOUT_CLASSIFICATION	2.2812693760503825E-7	DESIGN
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999999985039798	WITHOUT_CLASSIFICATION	1.4960201912330167E-9	DESIGN
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9983774914843832	WITHOUT_CLASSIFICATION	0.0016225085156167582	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.99999997836968	WITHOUT_CLASSIFICATION	2.1630319961623705E-8	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.99999997836968	WITHOUT_CLASSIFICATION	2.1630319961623705E-8	DESIGN
// AF_INET	WITHOUT_CLASSIFICATION	0.9999931358967898	WITHOUT_CLASSIFICATION	6.864103210116208E-6	DESIGN
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999818708795	WITHOUT_CLASSIFICATION	1.8129120586667852E-8	DESIGN
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9999999999295132	WITHOUT_CLASSIFICATION	7.048681575935893E-11	DESIGN
// BASE64	WITHOUT_CLASSIFICATION	0.9999593265119043	WITHOUT_CLASSIFICATION	4.067348809562115E-5	DESIGN
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999999993055868	WITHOUT_CLASSIFICATION	6.944132244283854E-10	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9999798624328621	WITHOUT_CLASSIFICATION	2.0137567137911063E-5	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9923403837729999	WITHOUT_CLASSIFICATION	0.0076596162269999945	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9923403837729999	WITHOUT_CLASSIFICATION	0.0076596162269999945	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.999999989650519	WITHOUT_CLASSIFICATION	1.0349481148346055E-8	DESIGN
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999961454464116	WITHOUT_CLASSIFICATION	3.854553588359328E-6	DESIGN
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999999987415433	WITHOUT_CLASSIFICATION	1.2584566888674183E-9	DESIGN
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9996745620521527	WITHOUT_CLASSIFICATION	3.2543794784742276E-4	DESIGN
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9999866178702421	WITHOUT_CLASSIFICATION	1.3382129757923078E-5	DESIGN
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.999999999929221	WITHOUT_CLASSIFICATION	7.0778950752409E-11	DESIGN
// carriage return	WITHOUT_CLASSIFICATION	0.9999981774502659	WITHOUT_CLASSIFICATION	1.8225497340438038E-6	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9996693987566428	WITHOUT_CLASSIFICATION	3.3060124335708213E-4	DESIGN
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999993139496466	WITHOUT_CLASSIFICATION	6.860503534560048E-7	DESIGN
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.999879616089724	WITHOUT_CLASSIFICATION	1.2038391027599319E-4	DESIGN
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999999772697801	WITHOUT_CLASSIFICATION	2.273021991364765E-8	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999517473356	WITHOUT_CLASSIFICATION	4.825266438009937E-8	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999998632621143	WITHOUT_CLASSIFICATION	1.367378857415153E-7	DESIGN
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999997816399465	WITHOUT_CLASSIFICATION	2.183600533813286E-7	DESIGN
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.999996557459887	WITHOUT_CLASSIFICATION	3.442540113041314E-6	DESIGN
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9618907702359776	WITHOUT_CLASSIFICATION	0.038109229764022354	DESIGN
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.999976835969024	WITHOUT_CLASSIFICATION	2.3164030975968898E-5	DESIGN
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999999687464259	WITHOUT_CLASSIFICATION	3.125357400860193E-8	DESIGN
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999958434312245	WITHOUT_CLASSIFICATION	4.156568775563989E-6	DESIGN
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999978306653704	WITHOUT_CLASSIFICATION	2.1693346296154104E-6	DESIGN
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999987830612191	WITHOUT_CLASSIFICATION	1.2169387808115173E-6	DESIGN
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999915375230359	WITHOUT_CLASSIFICATION	8.462476964029949E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9997746607142629	WITHOUT_CLASSIFICATION	2.2533928573699902E-4	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9997746607142629	WITHOUT_CLASSIFICATION	2.2533928573699902E-4	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9997746607142629	WITHOUT_CLASSIFICATION	2.2533928573699902E-4	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9997746607142629	WITHOUT_CLASSIFICATION	2.2533928573699902E-4	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9997746607142629	WITHOUT_CLASSIFICATION	2.2533928573699902E-4	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9997746607142629	WITHOUT_CLASSIFICATION	2.2533928573699902E-4	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9997746607142629	WITHOUT_CLASSIFICATION	2.2533928573699902E-4	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9997746607142629	WITHOUT_CLASSIFICATION	2.2533928573699902E-4	DESIGN
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999430474552959	WITHOUT_CLASSIFICATION	5.695254470420318E-5	DESIGN
/* fall through */	WITHOUT_CLASSIFICATION	0.9999800267300075	WITHOUT_CLASSIFICATION	1.997326999237686E-5	DESIGN
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9978389104170967	WITHOUT_CLASSIFICATION	0.0021610895829032974	DESIGN
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.999991995023691	DESIGN	8.004976309066291E-6	WITHOUT_CLASSIFICATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.999999644684843	WITHOUT_CLASSIFICATION	3.5531515689044E-7	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.999999644684843	WITHOUT_CLASSIFICATION	3.5531515689044E-7	DESIGN
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999474027379986	WITHOUT_CLASSIFICATION	5.259726200132987E-5	DESIGN
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9736242339386214	WITHOUT_CLASSIFICATION	0.02637576606137853	DESIGN
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999997678265078	WITHOUT_CLASSIFICATION	2.321734923094311E-7	DESIGN
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999998552816489	WITHOUT_CLASSIFICATION	1.4471835106684672E-7	DESIGN
// get current context	WITHOUT_CLASSIFICATION	0.999992221408845	WITHOUT_CLASSIFICATION	7.77859115490142E-6	DESIGN
// octal constant	WITHOUT_CLASSIFICATION	0.999999665815022	WITHOUT_CLASSIFICATION	3.341849780600074E-7	DESIGN
// read	WITHOUT_CLASSIFICATION	0.999948962569279	WITHOUT_CLASSIFICATION	5.103743072096999E-5	DESIGN
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.7557363983264762	WITHOUT_CLASSIFICATION	0.24426360167352387	DESIGN
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999918622871106	WITHOUT_CLASSIFICATION	8.137712889433795E-6	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999585452818547	WITHOUT_CLASSIFICATION	4.1454718145305945E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999585452818547	WITHOUT_CLASSIFICATION	4.1454718145305945E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999585452818547	WITHOUT_CLASSIFICATION	4.1454718145305945E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999373736813074	WITHOUT_CLASSIFICATION	6.262631869257936E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999373736813074	WITHOUT_CLASSIFICATION	6.262631869257936E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999373736813074	WITHOUT_CLASSIFICATION	6.262631869257936E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999373736813074	WITHOUT_CLASSIFICATION	6.262631869257936E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999373736813074	WITHOUT_CLASSIFICATION	6.262631869257936E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999373736813074	WITHOUT_CLASSIFICATION	6.262631869257936E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999373736813074	WITHOUT_CLASSIFICATION	6.262631869257936E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999373736813074	WITHOUT_CLASSIFICATION	6.262631869257936E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999373736813074	WITHOUT_CLASSIFICATION	6.262631869257936E-5	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999232149406153	WITHOUT_CLASSIFICATION	7.678505938475725E-5	DESIGN
// at end	WITHOUT_CLASSIFICATION	0.9998888218629021	WITHOUT_CLASSIFICATION	1.1117813709801549E-4	DESIGN
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999967799445488	WITHOUT_CLASSIFICATION	3.2200554512048737E-6	DESIGN
// save blocking state	WITHOUT_CLASSIFICATION	0.9998093985753033	WITHOUT_CLASSIFICATION	1.9060142469678454E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999373736813074	WITHOUT_CLASSIFICATION	6.262631869257936E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999373736813074	WITHOUT_CLASSIFICATION	6.262631869257936E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999373736813074	WITHOUT_CLASSIFICATION	6.262631869257936E-5	DESIGN
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999983037342595	WITHOUT_CLASSIFICATION	1.6962657404530519E-6	DESIGN
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999819576125576	WITHOUT_CLASSIFICATION	1.804238744243997E-5	DESIGN
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999996604966226	WITHOUT_CLASSIFICATION	3.3950337742184756E-7	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999890156777462	WITHOUT_CLASSIFICATION	1.0984322253760293E-5	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999890156777462	WITHOUT_CLASSIFICATION	1.0984322253760293E-5	DESIGN
// load null block	WITHOUT_CLASSIFICATION	0.9999999002218654	WITHOUT_CLASSIFICATION	9.977813463977855E-8	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999970461489629	WITHOUT_CLASSIFICATION	2.953851037053161E-6	DESIGN
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999944129040874	WITHOUT_CLASSIFICATION	5.5870959126234915E-6	DESIGN
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.999976475656794	WITHOUT_CLASSIFICATION	2.3524343205880183E-5	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999981082515884	WITHOUT_CLASSIFICATION	1.8917484116828307E-6	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999981082515884	WITHOUT_CLASSIFICATION	1.8917484116828307E-6	DESIGN
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9766432583645852	WITHOUT_CLASSIFICATION	0.023356741635414777	DESIGN
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999999679509092	WITHOUT_CLASSIFICATION	3.204909087191761E-8	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999977733758177	WITHOUT_CLASSIFICATION	2.226624182216438E-6	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9991424032258643	WITHOUT_CLASSIFICATION	8.575967741357254E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9991424032258643	WITHOUT_CLASSIFICATION	8.575967741357254E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9991424032258643	WITHOUT_CLASSIFICATION	8.575967741357254E-4	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9999890722407768	WITHOUT_CLASSIFICATION	1.0927759223067574E-5	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.999997194944402	WITHOUT_CLASSIFICATION	2.805055597935E-6	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.999997194944402	WITHOUT_CLASSIFICATION	2.805055597935E-6	DESIGN
// check arity	WITHOUT_CLASSIFICATION	0.9999486135348534	WITHOUT_CLASSIFICATION	5.138646514670917E-5	DESIGN
// check arity	WITHOUT_CLASSIFICATION	0.9999486135348534	WITHOUT_CLASSIFICATION	5.138646514670917E-5	DESIGN
// create the class	WITHOUT_CLASSIFICATION	0.9999969043533524	WITHOUT_CLASSIFICATION	3.0956466477136566E-6	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999998237844129	WITHOUT_CLASSIFICATION	1.7621558705838776E-7	DESIGN
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999999424610977	WITHOUT_CLASSIFICATION	5.7538902280410534E-8	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9999944577266009	WITHOUT_CLASSIFICATION	5.54227339908442E-6	DESIGN
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999593395909904	WITHOUT_CLASSIFICATION	4.066040900961385E-5	DESIGN
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999996291627468	WITHOUT_CLASSIFICATION	3.7083725320983525E-7	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999998691794328	WITHOUT_CLASSIFICATION	1.3082056728704456E-7	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999990624942603	WITHOUT_CLASSIFICATION	9.375057396361575E-7	DESIGN
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999857899254452	WITHOUT_CLASSIFICATION	1.4210074554827279E-5	DESIGN
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999999831830353	WITHOUT_CLASSIFICATION	1.681696471328769E-8	DESIGN
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.6197588816898862	DESIGN	0.3802411183101137	WITHOUT_CLASSIFICATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9994098076601201	WITHOUT_CLASSIFICATION	5.901923398799331E-4	DESIGN
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9999989677878393	WITHOUT_CLASSIFICATION	1.0322121607288002E-6	DESIGN
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999998642809111	WITHOUT_CLASSIFICATION	1.357190888241455E-7	DESIGN
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.999996854357249	WITHOUT_CLASSIFICATION	3.145642751044517E-6	DESIGN
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999286506547589	WITHOUT_CLASSIFICATION	7.134934524113837E-5	DESIGN
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.999944498854489	WITHOUT_CLASSIFICATION	5.550114551094368E-5	DESIGN
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999999500310026	WITHOUT_CLASSIFICATION	4.99689973773785E-8	DESIGN
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999997916960531	WITHOUT_CLASSIFICATION	2.0830394685100585E-7	DESIGN
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999702972990896	WITHOUT_CLASSIFICATION	2.9702700910411408E-5	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9930904713557913	WITHOUT_CLASSIFICATION	0.006909528644208703	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9994878149872691	WITHOUT_CLASSIFICATION	5.121850127308712E-4	DESIGN
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999881654457904	WITHOUT_CLASSIFICATION	1.1834554209490243E-5	DESIGN
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999871067560915	WITHOUT_CLASSIFICATION	1.289324390856035E-5	DESIGN
// coerce arguments	WITHOUT_CLASSIFICATION	0.999997151388753	WITHOUT_CLASSIFICATION	2.8486112468684905E-6	DESIGN
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9943448512732128	WITHOUT_CLASSIFICATION	0.005655148726787144	DESIGN
/* expected */	WITHOUT_CLASSIFICATION	0.9999940279309736	WITHOUT_CLASSIFICATION	5.97206902649504E-6	DESIGN
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9996625672833994	WITHOUT_CLASSIFICATION	3.3743271660054125E-4	DESIGN
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999985748143307	WITHOUT_CLASSIFICATION	1.4251856692362563E-6	DESIGN
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999999999512398	WITHOUT_CLASSIFICATION	4.876015251131947E-11	DESIGN
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999996018763164	WITHOUT_CLASSIFICATION	3.9812368357641385E-7	DESIGN
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999742217744939	WITHOUT_CLASSIFICATION	2.5778225506060378E-5	DESIGN
// use numbered access method	WITHOUT_CLASSIFICATION	0.9998581347636464	WITHOUT_CLASSIFICATION	1.418652363536108E-4	DESIGN
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999992306619795	WITHOUT_CLASSIFICATION	7.693380205755537E-7	DESIGN
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999999698145781	WITHOUT_CLASSIFICATION	3.018542199830803E-8	DESIGN
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.8835048159168504	WITHOUT_CLASSIFICATION	0.11649518408314959	DESIGN
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9996635293593537	WITHOUT_CLASSIFICATION	3.3647064064634967E-4	DESIGN
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9575515531635238	WITHOUT_CLASSIFICATION	0.04244844683647614	DESIGN
// build scope names string	WITHOUT_CLASSIFICATION	0.9999445427159982	WITHOUT_CLASSIFICATION	5.545728400183499E-5	DESIGN
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999434889463589	WITHOUT_CLASSIFICATION	5.6511053641111736E-5	DESIGN
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.8142075322710434	DESIGN	0.18579246772895666	WITHOUT_CLASSIFICATION
// finally	WITHOUT_CLASSIFICATION	0.9999920987436306	WITHOUT_CLASSIFICATION	7.901256369348383E-6	DESIGN
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.999997286990178	WITHOUT_CLASSIFICATION	2.7130098218831327E-6	DESIGN
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999997100706162	WITHOUT_CLASSIFICATION	2.8992938385366023E-7	DESIGN
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999881932329748	WITHOUT_CLASSIFICATION	1.1806767025179069E-5	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9994995920280559	WITHOUT_CLASSIFICATION	5.004079719439817E-4	DESIGN
// specific arity	WITHOUT_CLASSIFICATION	0.9999637142360678	WITHOUT_CLASSIFICATION	3.6285763932185084E-5	DESIGN
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999999963609935	WITHOUT_CLASSIFICATION	3.6390064046584818E-9	DESIGN
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999994660775117	WITHOUT_CLASSIFICATION	5.339224882753601E-7	DESIGN
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999999706697167	WITHOUT_CLASSIFICATION	2.9330283377989488E-8	DESIGN
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9837874737145026	WITHOUT_CLASSIFICATION	0.01621252628549741	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999984330899147	WITHOUT_CLASSIFICATION	1.566910085317885E-6	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999984330899147	WITHOUT_CLASSIFICATION	1.566910085317885E-6	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999972034079242	WITHOUT_CLASSIFICATION	2.7965920758584075E-6	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999972034079242	WITHOUT_CLASSIFICATION	2.7965920758584075E-6	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9924196070872796	DESIGN	0.007580392912720397	WITHOUT_CLASSIFICATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9924196070872796	DESIGN	0.007580392912720397	WITHOUT_CLASSIFICATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9994813868996754	WITHOUT_CLASSIFICATION	5.186131003246573E-4	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9994813868996754	WITHOUT_CLASSIFICATION	5.186131003246573E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999996955739076	WITHOUT_CLASSIFICATION	3.0442609247574033E-7	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999996955739076	WITHOUT_CLASSIFICATION	3.0442609247574033E-7	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999996955739076	WITHOUT_CLASSIFICATION	3.0442609247574033E-7	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999996955739076	WITHOUT_CLASSIFICATION	3.0442609247574033E-7	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999996955739076	WITHOUT_CLASSIFICATION	3.0442609247574033E-7	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999996955739076	WITHOUT_CLASSIFICATION	3.0442609247574033E-7	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999996955739076	WITHOUT_CLASSIFICATION	3.0442609247574033E-7	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999996955739076	WITHOUT_CLASSIFICATION	3.0442609247574033E-7	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999996955739076	WITHOUT_CLASSIFICATION	3.0442609247574033E-7	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999991498648689	WITHOUT_CLASSIFICATION	8.501351310781919E-7	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999991498648689	WITHOUT_CLASSIFICATION	8.501351310781919E-7	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999991498648689	WITHOUT_CLASSIFICATION	8.501351310781919E-7	DESIGN
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999677921476818	WITHOUT_CLASSIFICATION	3.220785231818211E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999991117215024	WITHOUT_CLASSIFICATION	8.882784975898026E-7	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999991117215024	WITHOUT_CLASSIFICATION	8.882784975898026E-7	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999991117215024	WITHOUT_CLASSIFICATION	8.882784975898026E-7	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999748692226387	WITHOUT_CLASSIFICATION	2.5130777361306553E-5	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999748692226387	WITHOUT_CLASSIFICATION	2.5130777361306553E-5	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999748692226387	WITHOUT_CLASSIFICATION	2.5130777361306553E-5	DESIGN
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999999948736438	WITHOUT_CLASSIFICATION	5.126356252509365E-9	DESIGN
// backspace	WITHOUT_CLASSIFICATION	0.9999989145641444	WITHOUT_CLASSIFICATION	1.0854358556528252E-6	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999720466723653	WITHOUT_CLASSIFICATION	2.795332763462078E-5	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999559061073561	WITHOUT_CLASSIFICATION	4.409389264388869E-5	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999559061073561	WITHOUT_CLASSIFICATION	4.409389264388869E-5	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999559061073561	WITHOUT_CLASSIFICATION	4.409389264388869E-5	DESIGN
/* package-private */	WITHOUT_CLASSIFICATION	0.9997724464332252	WITHOUT_CLASSIFICATION	2.2755356677473903E-4	DESIGN
// fall through	WITHOUT_CLASSIFICATION	0.9999965610317473	WITHOUT_CLASSIFICATION	3.438968252609401E-6	DESIGN
// fall through	WITHOUT_CLASSIFICATION	0.9999965610317473	WITHOUT_CLASSIFICATION	3.438968252609401E-6	DESIGN
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999142057749661	WITHOUT_CLASSIFICATION	8.579422503392015E-5	DESIGN
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999983684875408	WITHOUT_CLASSIFICATION	1.631512459195488E-6	DESIGN
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999983684875408	WITHOUT_CLASSIFICATION	1.631512459195488E-6	DESIGN
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.999976807567266	DESIGN	2.319243273399795E-5	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999999938317768	WITHOUT_CLASSIFICATION	6.168223097723563E-9	DESIGN
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999680954039534	WITHOUT_CLASSIFICATION	3.1904596046625323E-5	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999998907843923	WITHOUT_CLASSIFICATION	1.0921560774255887E-7	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999998907843923	WITHOUT_CLASSIFICATION	1.0921560774255887E-7	DESIGN
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9222896152536605	DESIGN	0.07771038474633948	WITHOUT_CLASSIFICATION
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9959165682373117	WITHOUT_CLASSIFICATION	0.004083431762688245	DESIGN
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.8975988028578596	WITHOUT_CLASSIFICATION	0.10240119714214026	DESIGN
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9695332710426195	WITHOUT_CLASSIFICATION	0.03046672895738042	DESIGN
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.8937284754295324	WITHOUT_CLASSIFICATION	0.10627152457046767	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999998907843923	WITHOUT_CLASSIFICATION	1.0921560774255887E-7	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999998907843923	WITHOUT_CLASSIFICATION	1.0921560774255887E-7	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999998907843923	WITHOUT_CLASSIFICATION	1.0921560774255887E-7	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999998907843923	WITHOUT_CLASSIFICATION	1.0921560774255887E-7	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999998907843923	WITHOUT_CLASSIFICATION	1.0921560774255887E-7	DESIGN
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9997822805534711	WITHOUT_CLASSIFICATION	2.177194465289469E-4	DESIGN
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999980529155091	WITHOUT_CLASSIFICATION	1.947084490771839E-6	DESIGN
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9992798839796493	WITHOUT_CLASSIFICATION	7.20116020350808E-4	DESIGN
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999999714391986	WITHOUT_CLASSIFICATION	2.856080138373725E-8	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997362893837819	WITHOUT_CLASSIFICATION	2.6371061621808866E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997362893837819	WITHOUT_CLASSIFICATION	2.6371061621808866E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997362893837819	WITHOUT_CLASSIFICATION	2.6371061621808866E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997362893837819	WITHOUT_CLASSIFICATION	2.6371061621808866E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997362893837819	WITHOUT_CLASSIFICATION	2.6371061621808866E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997362893837819	WITHOUT_CLASSIFICATION	2.6371061621808866E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997362893837819	WITHOUT_CLASSIFICATION	2.6371061621808866E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997362893837819	WITHOUT_CLASSIFICATION	2.6371061621808866E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997362893837819	WITHOUT_CLASSIFICATION	2.6371061621808866E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997362893837819	WITHOUT_CLASSIFICATION	2.6371061621808866E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997362893837819	WITHOUT_CLASSIFICATION	2.6371061621808866E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997362893837819	WITHOUT_CLASSIFICATION	2.6371061621808866E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997362893837819	WITHOUT_CLASSIFICATION	2.6371061621808866E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997362893837819	WITHOUT_CLASSIFICATION	2.6371061621808866E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997362893837819	WITHOUT_CLASSIFICATION	2.6371061621808866E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997362893837819	WITHOUT_CLASSIFICATION	2.6371061621808866E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997362893837819	WITHOUT_CLASSIFICATION	2.6371061621808866E-4	DESIGN
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.999999949956507	WITHOUT_CLASSIFICATION	5.0043493062284525E-8	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997362893837819	WITHOUT_CLASSIFICATION	2.6371061621808866E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997362893837819	WITHOUT_CLASSIFICATION	2.6371061621808866E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997362893837819	WITHOUT_CLASSIFICATION	2.6371061621808866E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997362893837819	WITHOUT_CLASSIFICATION	2.6371061621808866E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997362893837819	WITHOUT_CLASSIFICATION	2.6371061621808866E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997362893837819	WITHOUT_CLASSIFICATION	2.6371061621808866E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997362893837819	WITHOUT_CLASSIFICATION	2.6371061621808866E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997362893837819	WITHOUT_CLASSIFICATION	2.6371061621808866E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997362893837819	WITHOUT_CLASSIFICATION	2.6371061621808866E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997362893837819	WITHOUT_CLASSIFICATION	2.6371061621808866E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997362893837819	WITHOUT_CLASSIFICATION	2.6371061621808866E-4	DESIGN
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9973350062675881	WITHOUT_CLASSIFICATION	0.00266499373241182	DESIGN
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9857640876211865	WITHOUT_CLASSIFICATION	0.014235912378813545	DESIGN
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.999996735555795	WITHOUT_CLASSIFICATION	3.2644442050246645E-6	DESIGN
// get "self"	WITHOUT_CLASSIFICATION	0.999998369078325	WITHOUT_CLASSIFICATION	1.6309216749541906E-6	DESIGN
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999995333542245	WITHOUT_CLASSIFICATION	4.666457754345295E-7	DESIGN
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.999989767447639	WITHOUT_CLASSIFICATION	1.0232552360971383E-5	DESIGN
// only public methods	WITHOUT_CLASSIFICATION	0.9997045377672136	WITHOUT_CLASSIFICATION	2.9546223278640216E-4	DESIGN
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999999778727033	WITHOUT_CLASSIFICATION	2.2127296653377808E-8	DESIGN
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9998194129024303	WITHOUT_CLASSIFICATION	1.8058709756976144E-4	DESIGN
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9999625232512964	WITHOUT_CLASSIFICATION	3.7476748703628065E-5	DESIGN
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999996039566544	WITHOUT_CLASSIFICATION	3.960433455458058E-7	DESIGN
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999943720493604	WITHOUT_CLASSIFICATION	5.627950639601561E-6	DESIGN
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999995932245759	WITHOUT_CLASSIFICATION	4.067754242248161E-7	DESIGN
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999999320639251	WITHOUT_CLASSIFICATION	6.793607495619964E-8	DESIGN
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.998494885097915	WITHOUT_CLASSIFICATION	0.0015051149020850444	DESIGN
// indices for temp values	WITHOUT_CLASSIFICATION	0.99999313575575	WITHOUT_CLASSIFICATION	6.864244250055306E-6	DESIGN
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.975951032134686	WITHOUT_CLASSIFICATION	0.0240489678653139	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999997233157305	WITHOUT_CLASSIFICATION	2.766842695690392E-7	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999997233157305	WITHOUT_CLASSIFICATION	2.766842695690392E-7	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999997233157305	WITHOUT_CLASSIFICATION	2.766842695690392E-7	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999997233157305	WITHOUT_CLASSIFICATION	2.766842695690392E-7	DESIGN
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999962348296514	WITHOUT_CLASSIFICATION	3.7651703485117498E-6	DESIGN
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9999882220613289	WITHOUT_CLASSIFICATION	1.1777938671124443E-5	DESIGN
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999998671548408	WITHOUT_CLASSIFICATION	1.32845159207714E-7	DESIGN
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999998671548408	WITHOUT_CLASSIFICATION	1.32845159207714E-7	DESIGN
// set self to the class	WITHOUT_CLASSIFICATION	0.9999942668302028	WITHOUT_CLASSIFICATION	5.733169797178272E-6	DESIGN
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.999992922210637	WITHOUT_CLASSIFICATION	7.0777893630270965E-6	DESIGN
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999999235361686	WITHOUT_CLASSIFICATION	7.64638313528768E-8	DESIGN
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999919170253367	WITHOUT_CLASSIFICATION	8.082974663245462E-6	DESIGN
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999067513803515	WITHOUT_CLASSIFICATION	9.324861964858875E-5	DESIGN
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999994981622456	WITHOUT_CLASSIFICATION	5.018377543781998E-7	DESIGN
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999997983676941	WITHOUT_CLASSIFICATION	2.0163230582587362E-7	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9998758807613136	WITHOUT_CLASSIFICATION	1.241192386864222E-4	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9998758807613136	WITHOUT_CLASSIFICATION	1.241192386864222E-4	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9998758807613136	WITHOUT_CLASSIFICATION	1.241192386864222E-4	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9998758807613136	WITHOUT_CLASSIFICATION	1.241192386864222E-4	DESIGN
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999194965425353	WITHOUT_CLASSIFICATION	8.050345746464098E-5	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9902283432755249	WITHOUT_CLASSIFICATION	0.009771656724475082	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9902283432755249	WITHOUT_CLASSIFICATION	0.009771656724475082	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9902283432755249	WITHOUT_CLASSIFICATION	0.009771656724475082	DESIGN
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999780700840937	WITHOUT_CLASSIFICATION	2.1929915906345233E-5	DESIGN
// finally with no exception	WITHOUT_CLASSIFICATION	0.9993028905873071	WITHOUT_CLASSIFICATION	6.971094126927961E-4	DESIGN
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9993996658662704	WITHOUT_CLASSIFICATION	6.003341337295052E-4	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9999882491122357	DESIGN	1.175088776427251E-5	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9999882491122357	DESIGN	1.175088776427251E-5	WITHOUT_CLASSIFICATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.999994157871135	WITHOUT_CLASSIFICATION	5.842128865046002E-6	DESIGN
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9971989807384962	WITHOUT_CLASSIFICATION	0.002801019261503841	DESIGN
/* not a class */	WITHOUT_CLASSIFICATION	0.9999565806416696	WITHOUT_CLASSIFICATION	4.341935833040178E-5	DESIGN
/* not a class */	WITHOUT_CLASSIFICATION	0.9999565806416696	WITHOUT_CLASSIFICATION	4.341935833040178E-5	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9942991995489638	WITHOUT_CLASSIFICATION	0.005700800451036195	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9942991995489638	WITHOUT_CLASSIFICATION	0.005700800451036195	DESIGN
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999999985755087	WITHOUT_CLASSIFICATION	1.4244913727177112E-9	DESIGN
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.998145347825899	WITHOUT_CLASSIFICATION	0.0018546521741009915	DESIGN
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999972321300198	WITHOUT_CLASSIFICATION	2.767869980159311E-6	DESIGN
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999902869357581	WITHOUT_CLASSIFICATION	9.71306424197675E-6	DESIGN
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999997225591967	WITHOUT_CLASSIFICATION	2.774408033829305E-7	DESIGN
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999946915046094	WITHOUT_CLASSIFICATION	5.308495390507253E-6	DESIGN
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999967189698326	WITHOUT_CLASSIFICATION	3.2810301673891823E-6	DESIGN
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9833476259076295	DESIGN	0.01665237409237044	WITHOUT_CLASSIFICATION
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999999811461608	WITHOUT_CLASSIFICATION	1.885383913010002E-8	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999928688558146	WITHOUT_CLASSIFICATION	7.131144185383859E-6	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999928688558146	WITHOUT_CLASSIFICATION	7.131144185383859E-6	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999992725693845	WITHOUT_CLASSIFICATION	7.274306155489317E-7	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999992725693845	WITHOUT_CLASSIFICATION	7.274306155489317E-7	DESIGN
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.999979671153708	WITHOUT_CLASSIFICATION	2.0328846292040816E-5	DESIGN
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999988507697467	WITHOUT_CLASSIFICATION	1.1492302533618788E-6	DESIGN
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999401145784538	WITHOUT_CLASSIFICATION	5.988542154619386E-5	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999995442842742	WITHOUT_CLASSIFICATION	4.55715725743052E-7	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999995442842742	WITHOUT_CLASSIFICATION	4.55715725743052E-7	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999995442842742	WITHOUT_CLASSIFICATION	4.55715725743052E-7	DESIGN
// line 286	WITHOUT_CLASSIFICATION	0.9999995155133106	WITHOUT_CLASSIFICATION	4.844866894911978E-7	DESIGN
// line 476	WITHOUT_CLASSIFICATION	0.9999979542573194	WITHOUT_CLASSIFICATION	2.045742680577704E-6	DESIGN
// line 513	WITHOUT_CLASSIFICATION	0.9999992556668751	WITHOUT_CLASSIFICATION	7.44333124880581E-7	DESIGN
// line 530	WITHOUT_CLASSIFICATION	0.9999994385628166	WITHOUT_CLASSIFICATION	5.614371833996596E-7	DESIGN
// line 533	WITHOUT_CLASSIFICATION	0.9999987046385007	WITHOUT_CLASSIFICATION	1.2953614993147624E-6	DESIGN
// line 537	WITHOUT_CLASSIFICATION	0.9999986965705966	WITHOUT_CLASSIFICATION	1.303429403448419E-6	DESIGN
// line 551	WITHOUT_CLASSIFICATION	0.9999991528972277	WITHOUT_CLASSIFICATION	8.47102772164114E-7	DESIGN
// end loop	WITHOUT_CLASSIFICATION	0.9999987943540909	WITHOUT_CLASSIFICATION	1.2056459090822924E-6	DESIGN
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9999666239665085	WITHOUT_CLASSIFICATION	3.337603349150264E-5	DESIGN
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999956934933875	WITHOUT_CLASSIFICATION	4.306506612527486E-6	DESIGN
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9397224974148344	WITHOUT_CLASSIFICATION	0.060277502585165635	DESIGN
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9999999788254481	WITHOUT_CLASSIFICATION	2.1174551965134005E-8	DESIGN
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999992031534617	WITHOUT_CLASSIFICATION	7.96846538382294E-7	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9999882491122357	DESIGN	1.175088776427251E-5	WITHOUT_CLASSIFICATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9738669523242693	WITHOUT_CLASSIFICATION	0.026133047675730714	DESIGN
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9926701722310405	WITHOUT_CLASSIFICATION	0.007329827768959545	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9890959271026611	DESIGN	0.010904072897338812	WITHOUT_CLASSIFICATION
/*value*/	WITHOUT_CLASSIFICATION	0.9998453310019275	WITHOUT_CLASSIFICATION	1.5466899807250477E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998453310019275	WITHOUT_CLASSIFICATION	1.5466899807250477E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998453310019275	WITHOUT_CLASSIFICATION	1.5466899807250477E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998453310019275	WITHOUT_CLASSIFICATION	1.5466899807250477E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998453310019275	WITHOUT_CLASSIFICATION	1.5466899807250477E-4	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998684298392143	WITHOUT_CLASSIFICATION	1.3157016078564266E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998453310019275	WITHOUT_CLASSIFICATION	1.5466899807250477E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998453310019275	WITHOUT_CLASSIFICATION	1.5466899807250477E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998453310019275	WITHOUT_CLASSIFICATION	1.5466899807250477E-4	DESIGN
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999977932192821	WITHOUT_CLASSIFICATION	2.2067807180103164E-6	DESIGN
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9978419305240891	WITHOUT_CLASSIFICATION	0.0021580694759110045	DESIGN
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9999999996742454	WITHOUT_CLASSIFICATION	3.257546408463466E-10	DESIGN
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.5865800360177514	DESIGN	0.4134199639822486	WITHOUT_CLASSIFICATION
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.999998092717889	WITHOUT_CLASSIFICATION	1.9072821109518175E-6	DESIGN
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.999815384715913	WITHOUT_CLASSIFICATION	1.846152840870337E-4	DESIGN
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999818727299752	WITHOUT_CLASSIFICATION	1.8127270024813925E-5	DESIGN
// line 572	WITHOUT_CLASSIFICATION	0.9999991664621641	WITHOUT_CLASSIFICATION	8.335378358014643E-7	DESIGN
// line 601	WITHOUT_CLASSIFICATION	0.9999994583825813	WITHOUT_CLASSIFICATION	5.416174187480485E-7	DESIGN
// line 601	WITHOUT_CLASSIFICATION	0.9999994583825813	WITHOUT_CLASSIFICATION	5.416174187480485E-7	DESIGN
// line 625	WITHOUT_CLASSIFICATION	0.9999993162566968	WITHOUT_CLASSIFICATION	6.837433032752723E-7	DESIGN
// line 649	WITHOUT_CLASSIFICATION	0.9999985511340461	WITHOUT_CLASSIFICATION	1.4488659537945091E-6	DESIGN
// line 691	WITHOUT_CLASSIFICATION	0.9999990557638453	WITHOUT_CLASSIFICATION	9.442361547124613E-7	DESIGN
// line 723	WITHOUT_CLASSIFICATION	0.9999992521632362	WITHOUT_CLASSIFICATION	7.478367639691821E-7	DESIGN
// line 732	WITHOUT_CLASSIFICATION	0.9999993546404218	WITHOUT_CLASSIFICATION	6.453595782829242E-7	DESIGN
// line 745	WITHOUT_CLASSIFICATION	0.9999989778258662	WITHOUT_CLASSIFICATION	1.0221741337282014E-6	DESIGN
// line 766	WITHOUT_CLASSIFICATION	0.9999974040102578	WITHOUT_CLASSIFICATION	2.5959897422027065E-6	DESIGN
// line 785	WITHOUT_CLASSIFICATION	0.9999991743834711	WITHOUT_CLASSIFICATION	8.256165288653694E-7	DESIGN
// line 794	WITHOUT_CLASSIFICATION	0.9999984086756603	WITHOUT_CLASSIFICATION	1.591324339844419E-6	DESIGN
// line 800	WITHOUT_CLASSIFICATION	0.999999441505676	WITHOUT_CLASSIFICATION	5.58494324057818E-7	DESIGN
// line 812	WITHOUT_CLASSIFICATION	0.999999739300218	WITHOUT_CLASSIFICATION	2.606997819248095E-7	DESIGN
// line 827	WITHOUT_CLASSIFICATION	0.9999995331803128	WITHOUT_CLASSIFICATION	4.6681968723143404E-7	DESIGN
// line 839	WITHOUT_CLASSIFICATION	0.9999990424384436	WITHOUT_CLASSIFICATION	9.575615564033103E-7	DESIGN
// line 845	WITHOUT_CLASSIFICATION	0.9999993460359232	WITHOUT_CLASSIFICATION	6.539640767461104E-7	DESIGN
// line 864	WITHOUT_CLASSIFICATION	0.999999039316762	WITHOUT_CLASSIFICATION	9.60683237902826E-7	DESIGN
// line 886	WITHOUT_CLASSIFICATION	0.9999985982352172	WITHOUT_CLASSIFICATION	1.4017647827622433E-6	DESIGN
// line 896	WITHOUT_CLASSIFICATION	0.9999985604763907	WITHOUT_CLASSIFICATION	1.4395236092097179E-6	DESIGN
// line 911	WITHOUT_CLASSIFICATION	0.9999991862337083	WITHOUT_CLASSIFICATION	8.137662916952805E-7	DESIGN
// line 929	WITHOUT_CLASSIFICATION	0.9999992531060424	WITHOUT_CLASSIFICATION	7.468939576171932E-7	DESIGN
// line 952	WITHOUT_CLASSIFICATION	0.9999993605325036	WITHOUT_CLASSIFICATION	6.394674963609777E-7	DESIGN
// line 970	WITHOUT_CLASSIFICATION	0.9999991647412891	WITHOUT_CLASSIFICATION	8.352587109499727E-7	DESIGN
// line 972	WITHOUT_CLASSIFICATION	0.9999992440792065	WITHOUT_CLASSIFICATION	7.559207934500212E-7	DESIGN
// line 991	WITHOUT_CLASSIFICATION	0.9999991786435786	WITHOUT_CLASSIFICATION	8.213564214754449E-7	DESIGN
// line 1011	WITHOUT_CLASSIFICATION	0.9999996415858319	WITHOUT_CLASSIFICATION	3.584141680499511E-7	DESIGN
// line 1026	WITHOUT_CLASSIFICATION	0.9999996404569631	WITHOUT_CLASSIFICATION	3.5954303685279214E-7	DESIGN
// line 1038	WITHOUT_CLASSIFICATION	0.9999997910230889	WITHOUT_CLASSIFICATION	2.0897691099706193E-7	DESIGN
// line 1067	WITHOUT_CLASSIFICATION	0.9999994775964063	WITHOUT_CLASSIFICATION	5.224035936957323E-7	DESIGN
// line 1085	WITHOUT_CLASSIFICATION	0.9999998033266971	WITHOUT_CLASSIFICATION	1.9667330291342346E-7	DESIGN
// line 1097	WITHOUT_CLASSIFICATION	0.9999995953667695	WITHOUT_CLASSIFICATION	4.046332305456032E-7	DESIGN
// line 1105	WITHOUT_CLASSIFICATION	0.9999996750843035	WITHOUT_CLASSIFICATION	3.2491569650029967E-7	DESIGN
// line 1122	WITHOUT_CLASSIFICATION	0.9999996005488022	WITHOUT_CLASSIFICATION	3.994511977431773E-7	DESIGN
// line 1133	WITHOUT_CLASSIFICATION	0.999999339260867	WITHOUT_CLASSIFICATION	6.607391330012833E-7	DESIGN
// line 1145	WITHOUT_CLASSIFICATION	0.9999994968902346	WITHOUT_CLASSIFICATION	5.031097654263588E-7	DESIGN
// line 1169	WITHOUT_CLASSIFICATION	0.999999006711742	WITHOUT_CLASSIFICATION	9.932882579826494E-7	DESIGN
// line 1201	WITHOUT_CLASSIFICATION	0.9999997621405142	WITHOUT_CLASSIFICATION	2.3785948574661581E-7	DESIGN
// line 1210	WITHOUT_CLASSIFICATION	0.9999998175747177	WITHOUT_CLASSIFICATION	1.8242528231183355E-7	DESIGN
// line 1229	WITHOUT_CLASSIFICATION	0.9999996221756753	WITHOUT_CLASSIFICATION	3.7782432473865306E-7	DESIGN
// line 1261	WITHOUT_CLASSIFICATION	0.9999995446669813	WITHOUT_CLASSIFICATION	4.553330187090293E-7	DESIGN
// line 1287	WITHOUT_CLASSIFICATION	0.9999997455958914	WITHOUT_CLASSIFICATION	2.5440410851183684E-7	DESIGN
// line 1293	WITHOUT_CLASSIFICATION	0.9999996841177934	WITHOUT_CLASSIFICATION	3.158822066494594E-7	DESIGN
// line 1307	WITHOUT_CLASSIFICATION	0.9999995885375055	WITHOUT_CLASSIFICATION	4.1146249461686773E-7	DESIGN
// line 1320	WITHOUT_CLASSIFICATION	0.9999998111937307	WITHOUT_CLASSIFICATION	1.8880626926951373E-7	DESIGN
// line 1325	WITHOUT_CLASSIFICATION	0.9999997291863932	WITHOUT_CLASSIFICATION	2.7081360681916687E-7	DESIGN
// line 1363	WITHOUT_CLASSIFICATION	0.9999992394224566	WITHOUT_CLASSIFICATION	7.605775434098916E-7	DESIGN
// line 1398	WITHOUT_CLASSIFICATION	0.999999522519693	WITHOUT_CLASSIFICATION	4.774803068598732E-7	DESIGN
// line 1448	WITHOUT_CLASSIFICATION	0.9999994654808646	WITHOUT_CLASSIFICATION	5.345191354299292E-7	DESIGN
// line 1456	WITHOUT_CLASSIFICATION	0.9999992392114133	WITHOUT_CLASSIFICATION	7.607885866810942E-7	DESIGN
// line 1473	WITHOUT_CLASSIFICATION	0.9999994013134478	WITHOUT_CLASSIFICATION	5.986865522214777E-7	DESIGN
// line 1492	WITHOUT_CLASSIFICATION	0.9999996744969355	WITHOUT_CLASSIFICATION	3.2550306444136557E-7	DESIGN
// line 1513	WITHOUT_CLASSIFICATION	0.999999427985716	WITHOUT_CLASSIFICATION	5.720142840683013E-7	DESIGN
// line 1523	WITHOUT_CLASSIFICATION	0.9999996822250939	WITHOUT_CLASSIFICATION	3.1777490601321983E-7	DESIGN
// line 1562	WITHOUT_CLASSIFICATION	0.9999996385682222	WITHOUT_CLASSIFICATION	3.6143177785527295E-7	DESIGN
// line 1582	WITHOUT_CLASSIFICATION	0.99999979382861	WITHOUT_CLASSIFICATION	2.0617138993030363E-7	DESIGN
// line 1603	WITHOUT_CLASSIFICATION	0.9999993647143569	WITHOUT_CLASSIFICATION	6.35285643148468E-7	DESIGN
// line 1603	WITHOUT_CLASSIFICATION	0.9999993647143569	WITHOUT_CLASSIFICATION	6.35285643148468E-7	DESIGN
// line 1615	WITHOUT_CLASSIFICATION	0.9999989744130888	WITHOUT_CLASSIFICATION	1.0255869111653368E-6	DESIGN
// line 1620	WITHOUT_CLASSIFICATION	0.9999996512689561	WITHOUT_CLASSIFICATION	3.487310438986131E-7	DESIGN
// line 1635	WITHOUT_CLASSIFICATION	0.9999989724211464	WITHOUT_CLASSIFICATION	1.0275788535742993E-6	DESIGN
// line 1652	WITHOUT_CLASSIFICATION	0.9999994586531767	WITHOUT_CLASSIFICATION	5.413468232003255E-7	DESIGN
// line 1681	WITHOUT_CLASSIFICATION	0.9999992262495935	WITHOUT_CLASSIFICATION	7.737504064703082E-7	DESIGN
// line 1708	WITHOUT_CLASSIFICATION	0.9999995652498803	WITHOUT_CLASSIFICATION	4.3475011967439647E-7	DESIGN
// line 1716	WITHOUT_CLASSIFICATION	0.9999983369055334	WITHOUT_CLASSIFICATION	1.6630944665965368E-6	DESIGN
// line 1755	WITHOUT_CLASSIFICATION	0.9999992110339675	WITHOUT_CLASSIFICATION	7.889660324621325E-7	DESIGN
// line 1772	WITHOUT_CLASSIFICATION	0.9999994277147466	WITHOUT_CLASSIFICATION	5.722852534394948E-7	DESIGN
// line 1789	WITHOUT_CLASSIFICATION	0.9999994041787208	WITHOUT_CLASSIFICATION	5.958212791293291E-7	DESIGN
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999982317509382	WITHOUT_CLASSIFICATION	1.7682490618624232E-6	DESIGN
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999982317509382	WITHOUT_CLASSIFICATION	1.7682490618624232E-6	DESIGN
/* force for args */	WITHOUT_CLASSIFICATION	0.9999763566882417	WITHOUT_CLASSIFICATION	2.3643311758348416E-5	DESIGN
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999968688314765	WITHOUT_CLASSIFICATION	3.1311685234932866E-6	DESIGN
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9997276378752062	WITHOUT_CLASSIFICATION	2.723621247937902E-4	DESIGN
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999999715723196	WITHOUT_CLASSIFICATION	2.8427680427877858E-8	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999946475117321	WITHOUT_CLASSIFICATION	5.3524882680259796E-6	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999946475117321	WITHOUT_CLASSIFICATION	5.3524882680259796E-6	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999946475117321	WITHOUT_CLASSIFICATION	5.3524882680259796E-6	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999946475117321	WITHOUT_CLASSIFICATION	5.3524882680259796E-6	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9308915923892371	DESIGN	0.06910840761076287	WITHOUT_CLASSIFICATION
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.99626991824127	WITHOUT_CLASSIFICATION	0.0037300817587300073	DESIGN
// line 313	WITHOUT_CLASSIFICATION	0.99999935287855	WITHOUT_CLASSIFICATION	6.471214498813637E-7	DESIGN
// line 339	WITHOUT_CLASSIFICATION	0.9999986972978179	WITHOUT_CLASSIFICATION	1.30270218216513E-6	DESIGN
// line 361	WITHOUT_CLASSIFICATION	0.9999993662615184	WITHOUT_CLASSIFICATION	6.337384816097988E-7	DESIGN
// line 413	WITHOUT_CLASSIFICATION	0.9999994373168427	WITHOUT_CLASSIFICATION	5.626831573517485E-7	DESIGN
// line 451	WITHOUT_CLASSIFICATION	0.9999994799975703	WITHOUT_CLASSIFICATION	5.200024296518092E-7	DESIGN
// line 472	WITHOUT_CLASSIFICATION	0.9999993514687253	WITHOUT_CLASSIFICATION	6.485312747673896E-7	DESIGN
// line 500	WITHOUT_CLASSIFICATION	0.9999991251300354	WITHOUT_CLASSIFICATION	8.748699645061314E-7	DESIGN
// line 515	WITHOUT_CLASSIFICATION	0.9999991524084109	WITHOUT_CLASSIFICATION	8.475915892654958E-7	DESIGN
// line 555	WITHOUT_CLASSIFICATION	0.9999984847813668	WITHOUT_CLASSIFICATION	1.5152186332939245E-6	DESIGN
// line 582	WITHOUT_CLASSIFICATION	0.9999995230569263	WITHOUT_CLASSIFICATION	4.769430736597992E-7	DESIGN
// line 619	WITHOUT_CLASSIFICATION	0.9999990652238593	WITHOUT_CLASSIFICATION	9.347761406784915E-7	DESIGN
// line 636	WITHOUT_CLASSIFICATION	0.9999980531076635	WITHOUT_CLASSIFICATION	1.946892336521939E-6	DESIGN
// line 669	WITHOUT_CLASSIFICATION	0.9999982154590559	WITHOUT_CLASSIFICATION	1.7845409441264522E-6	DESIGN
// line 703	WITHOUT_CLASSIFICATION	0.9999990605907328	WITHOUT_CLASSIFICATION	9.39409267077784E-7	DESIGN
// line 776	WITHOUT_CLASSIFICATION	0.9999972142838903	WITHOUT_CLASSIFICATION	2.7857161097512295E-6	DESIGN
// line 814	WITHOUT_CLASSIFICATION	0.9999995021200407	WITHOUT_CLASSIFICATION	4.978799592235185E-7	DESIGN
// line 823	WITHOUT_CLASSIFICATION	0.9999996038224843	WITHOUT_CLASSIFICATION	3.961775156321222E-7	DESIGN
// line 854	WITHOUT_CLASSIFICATION	0.9999992539683241	WITHOUT_CLASSIFICATION	7.460316758289138E-7	DESIGN
// line 872	WITHOUT_CLASSIFICATION	0.9999995002704245	WITHOUT_CLASSIFICATION	4.997295754839588E-7	DESIGN
// line 905	WITHOUT_CLASSIFICATION	0.999999151333451	WITHOUT_CLASSIFICATION	8.486665491298555E-7	DESIGN
// line 925	WITHOUT_CLASSIFICATION	0.999999413656768	WITHOUT_CLASSIFICATION	5.863432319040856E-7	DESIGN
// line 958	WITHOUT_CLASSIFICATION	0.9999991581471158	WITHOUT_CLASSIFICATION	8.418528842881006E-7	DESIGN
// line 992	WITHOUT_CLASSIFICATION	0.9999992728271845	WITHOUT_CLASSIFICATION	7.27172815431777E-7	DESIGN
// line 1047	WITHOUT_CLASSIFICATION	0.9999996427825015	WITHOUT_CLASSIFICATION	3.572174985438941E-7	DESIGN
// line 1072	WITHOUT_CLASSIFICATION	0.9999997562439126	WITHOUT_CLASSIFICATION	2.437560874649676E-7	DESIGN
// line 1081	WITHOUT_CLASSIFICATION	0.9999997577045576	WITHOUT_CLASSIFICATION	2.422954423372481E-7	DESIGN
// line 1108	WITHOUT_CLASSIFICATION	0.9999997234578726	WITHOUT_CLASSIFICATION	2.765421273984584E-7	DESIGN
// line 1136	WITHOUT_CLASSIFICATION	0.9999990591783556	WITHOUT_CLASSIFICATION	9.408216443549738E-7	DESIGN
// line 1168	WITHOUT_CLASSIFICATION	0.9999993701230115	WITHOUT_CLASSIFICATION	6.298769884312604E-7	DESIGN
// line 1192	WITHOUT_CLASSIFICATION	0.9999996614030103	WITHOUT_CLASSIFICATION	3.385969896419695E-7	DESIGN
// line 1241	WITHOUT_CLASSIFICATION	0.9999996767295236	WITHOUT_CLASSIFICATION	3.2327047645105255E-7	DESIGN
// line 1267	WITHOUT_CLASSIFICATION	0.9999994923064143	WITHOUT_CLASSIFICATION	5.076935857206141E-7	DESIGN
// line 1286	WITHOUT_CLASSIFICATION	0.9999996323186333	WITHOUT_CLASSIFICATION	3.676813667460764E-7	DESIGN
// line 1301	WITHOUT_CLASSIFICATION	0.999999673233541	WITHOUT_CLASSIFICATION	3.267664589796682E-7	DESIGN
// line 1314	WITHOUT_CLASSIFICATION	0.9999993932682472	WITHOUT_CLASSIFICATION	6.067317528455458E-7	DESIGN
// line 1333	WITHOUT_CLASSIFICATION	0.9999993186822046	WITHOUT_CLASSIFICATION	6.813177954294216E-7	DESIGN
// line 1362	WITHOUT_CLASSIFICATION	0.9999996617828227	WITHOUT_CLASSIFICATION	3.3821717722167297E-7	DESIGN
// line 1395	WITHOUT_CLASSIFICATION	0.9999994170788614	WITHOUT_CLASSIFICATION	5.829211386089886E-7	DESIGN
// line 1420	WITHOUT_CLASSIFICATION	0.9999998111424573	WITHOUT_CLASSIFICATION	1.8885754271612661E-7	DESIGN
// line 1439	WITHOUT_CLASSIFICATION	0.9999993817795961	WITHOUT_CLASSIFICATION	6.182204039464688E-7	DESIGN
// line 1476	WITHOUT_CLASSIFICATION	0.9999988234374757	WITHOUT_CLASSIFICATION	1.1765625242287293E-6	DESIGN
// line 1535	WITHOUT_CLASSIFICATION	0.9999994453873683	WITHOUT_CLASSIFICATION	5.546126317284051E-7	DESIGN
// line 1588	WITHOUT_CLASSIFICATION	0.999999560781101	WITHOUT_CLASSIFICATION	4.392188989816026E-7	DESIGN
// line 1618	WITHOUT_CLASSIFICATION	0.9999993627763467	WITHOUT_CLASSIFICATION	6.372236532223814E-7	DESIGN
// line 1643	WITHOUT_CLASSIFICATION	0.9999992188247131	WITHOUT_CLASSIFICATION	7.811752869447027E-7	DESIGN
// line 1669	WITHOUT_CLASSIFICATION	0.999998705746357	WITHOUT_CLASSIFICATION	1.2942536430609389E-6	DESIGN
// line 1728	WITHOUT_CLASSIFICATION	0.9999996761122715	WITHOUT_CLASSIFICATION	3.2388772845947116E-7	DESIGN
// line 1753	WITHOUT_CLASSIFICATION	0.9999993163915928	WITHOUT_CLASSIFICATION	6.836084073013271E-7	DESIGN
// line 1779	WITHOUT_CLASSIFICATION	0.999998742398894	WITHOUT_CLASSIFICATION	1.2576011060096789E-6	DESIGN
// line 1794	WITHOUT_CLASSIFICATION	0.99999902571736	WITHOUT_CLASSIFICATION	9.742826400259822E-7	DESIGN
// line 1812	WITHOUT_CLASSIFICATION	0.9999998133961854	WITHOUT_CLASSIFICATION	1.866038146162741E-7	DESIGN
// line 1837	WITHOUT_CLASSIFICATION	0.999999657753665	WITHOUT_CLASSIFICATION	3.4224633501287784E-7	DESIGN
// line 1895	WITHOUT_CLASSIFICATION	0.9999997084060639	WITHOUT_CLASSIFICATION	2.915939360647713E-7	DESIGN
// line 1925	WITHOUT_CLASSIFICATION	0.9999997196878765	WITHOUT_CLASSIFICATION	2.803121234997576E-7	DESIGN
// line 1950	WITHOUT_CLASSIFICATION	0.9999996734340058	WITHOUT_CLASSIFICATION	3.2656599416072505E-7	DESIGN
// line 1992	WITHOUT_CLASSIFICATION	0.9999996382373092	WITHOUT_CLASSIFICATION	3.617626908247673E-7	DESIGN
// line 2014	WITHOUT_CLASSIFICATION	0.999999801069046	WITHOUT_CLASSIFICATION	1.9893095410495912E-7	DESIGN
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9996788689718467	WITHOUT_CLASSIFICATION	3.2113102815327447E-4	DESIGN
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999963706802852	WITHOUT_CLASSIFICATION	3.6293197147253942E-6	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9961530087785806	WITHOUT_CLASSIFICATION	0.0038469912214194124	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9961530087785806	WITHOUT_CLASSIFICATION	0.0038469912214194124	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9961530087785806	WITHOUT_CLASSIFICATION	0.0038469912214194124	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9961530087785806	WITHOUT_CLASSIFICATION	0.0038469912214194124	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9961530087785806	WITHOUT_CLASSIFICATION	0.0038469912214194124	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9961530087785806	WITHOUT_CLASSIFICATION	0.0038469912214194124	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9961530087785806	WITHOUT_CLASSIFICATION	0.0038469912214194124	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999984235298761	WITHOUT_CLASSIFICATION	1.5764701238980663E-6	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999984235298761	WITHOUT_CLASSIFICATION	1.5764701238980663E-6	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999984235298761	WITHOUT_CLASSIFICATION	1.5764701238980663E-6	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999984235298761	WITHOUT_CLASSIFICATION	1.5764701238980663E-6	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.99936135311484	WITHOUT_CLASSIFICATION	6.386468851600627E-4	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.99936135311484	WITHOUT_CLASSIFICATION	6.386468851600627E-4	DESIGN
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.99999999883474	WITHOUT_CLASSIFICATION	1.1652600340600033E-9	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999996283546274	WITHOUT_CLASSIFICATION	3.7164537261391753E-7	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999996283546274	WITHOUT_CLASSIFICATION	3.7164537261391753E-7	DESIGN
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9754903950365716	WITHOUT_CLASSIFICATION	0.02450960496342833	DESIGN
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9998795367576847	WITHOUT_CLASSIFICATION	1.2046324231531593E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999960958843183	WITHOUT_CLASSIFICATION	3.9041156817725475E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999960958843183	WITHOUT_CLASSIFICATION	3.9041156817725475E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999960958843183	WITHOUT_CLASSIFICATION	3.9041156817725475E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999960958843183	WITHOUT_CLASSIFICATION	3.9041156817725475E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999960958843183	WITHOUT_CLASSIFICATION	3.9041156817725475E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999960958843183	WITHOUT_CLASSIFICATION	3.9041156817725475E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999960958843183	WITHOUT_CLASSIFICATION	3.9041156817725475E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999963730679594	WITHOUT_CLASSIFICATION	3.6269320405888037E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999834663739601	WITHOUT_CLASSIFICATION	1.653362604002903E-5	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999999388663592	WITHOUT_CLASSIFICATION	6.11336408577295E-8	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999999388663592	WITHOUT_CLASSIFICATION	6.11336408577295E-8	DESIGN
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999693032190996	WITHOUT_CLASSIFICATION	3.069678090027483E-5	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999805017564614	WITHOUT_CLASSIFICATION	1.9498243538721056E-5	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999805017564614	WITHOUT_CLASSIFICATION	1.9498243538721056E-5	DESIGN
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999999993397164	WITHOUT_CLASSIFICATION	6.602836444860236E-10	DESIGN
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9999999907302246	DESIGN	9.26977534794961E-9	WITHOUT_CLASSIFICATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9999088531746868	WITHOUT_CLASSIFICATION	9.114682531314343E-5	DESIGN
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9954481567666619	WITHOUT_CLASSIFICATION	0.00455184323333812	DESIGN
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9998689764530913	WITHOUT_CLASSIFICATION	1.3102354690882955E-4	DESIGN
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9999904168815782	WITHOUT_CLASSIFICATION	9.583118421900271E-6	DESIGN
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999998949248637	WITHOUT_CLASSIFICATION	1.0507513624700952E-7	DESIGN
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999999804448694	WITHOUT_CLASSIFICATION	1.9555130639311716E-8	DESIGN
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.99999149803033	WITHOUT_CLASSIFICATION	8.501969669997594E-6	DESIGN
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9997677553455104	WITHOUT_CLASSIFICATION	2.322446544897093E-4	DESIGN
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9919499743959883	WITHOUT_CLASSIFICATION	0.008050025604011739	DESIGN
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999995332276922	WITHOUT_CLASSIFICATION	4.667723077453168E-7	DESIGN
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999996230256134	WITHOUT_CLASSIFICATION	3.7697438659896145E-7	DESIGN
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9624593098636741	WITHOUT_CLASSIFICATION	0.037540690136325924	DESIGN
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999997069133257	WITHOUT_CLASSIFICATION	2.930866742593482E-7	DESIGN
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999992734236037	WITHOUT_CLASSIFICATION	7.265763962317909E-7	DESIGN
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.999999824687117	WITHOUT_CLASSIFICATION	1.7531288297624806E-7	DESIGN
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9998981468584632	WITHOUT_CLASSIFICATION	1.0185314153684438E-4	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9982092496217496	WITHOUT_CLASSIFICATION	0.0017907503782503688	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9982092496217496	WITHOUT_CLASSIFICATION	0.0017907503782503688	DESIGN
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999026621742108	WITHOUT_CLASSIFICATION	9.733782578930309E-5	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999894563515	WITHOUT_CLASSIFICATION	1.0543648523579714E-8	DESIGN
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999999944708756	WITHOUT_CLASSIFICATION	5.529124442474255E-9	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9996383960851345	WITHOUT_CLASSIFICATION	3.6160391486556883E-4	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999697884603626	WITHOUT_CLASSIFICATION	3.021153963745924E-5	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999697884603626	WITHOUT_CLASSIFICATION	3.021153963745924E-5	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999697884603626	WITHOUT_CLASSIFICATION	3.021153963745924E-5	DESIGN
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9907370338505535	WITHOUT_CLASSIFICATION	0.009262966149446548	DESIGN
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999921783723184	WITHOUT_CLASSIFICATION	7.82162768163125E-6	DESIGN
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999750259421826	WITHOUT_CLASSIFICATION	2.4974057817421608E-5	DESIGN
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999967337492487	WITHOUT_CLASSIFICATION	3.266250751264363E-6	DESIGN
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9997477005694421	WITHOUT_CLASSIFICATION	2.5229943055786415E-4	DESIGN
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999999999781465	WITHOUT_CLASSIFICATION	2.185345945283697E-11	DESIGN
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999999999778346	WITHOUT_CLASSIFICATION	2.2165416614938336E-11	DESIGN
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999999666319347	WITHOUT_CLASSIFICATION	3.3368065261211695E-8	DESIGN
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9998836382714414	WITHOUT_CLASSIFICATION	1.1636172855857666E-4	DESIGN
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999988561954736	WITHOUT_CLASSIFICATION	1.1438045263996105E-6	DESIGN
// reset buffer	WITHOUT_CLASSIFICATION	0.9999967810123328	WITHOUT_CLASSIFICATION	3.2189876671351677E-6	DESIGN
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.999999073926225	WITHOUT_CLASSIFICATION	9.260737750337062E-7	DESIGN
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9999393969347088	DESIGN	6.060306529119954E-5	WITHOUT_CLASSIFICATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9907236641821638	WITHOUT_CLASSIFICATION	0.009276335817836196	DESIGN
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999949204300764	WITHOUT_CLASSIFICATION	5.079569923655634E-6	DESIGN
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999999996729947	WITHOUT_CLASSIFICATION	3.270053515883693E-10	DESIGN
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9998848437661423	WITHOUT_CLASSIFICATION	1.151562338576795E-4	DESIGN
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999999270193727	WITHOUT_CLASSIFICATION	7.298062729399317E-8	DESIGN
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9999966014078953	WITHOUT_CLASSIFICATION	3.398592104769558E-6	DESIGN
// Fixme: Do we need the check or does Main.java not call this...they should consolidate 	DESIGN	0.9294077299152411	DESIGN	0.07059227008475887	WITHOUT_CLASSIFICATION
// FIXME: move out of this class!	DESIGN	0.9990361098849025	DESIGN	9.63890115097469E-4	WITHOUT_CLASSIFICATION
// this is a rather ugly hack, but similar to MRI. See hash.c:ruby_setenv and similar in MRI // we search all keys for a case-insensitive match, and use that	DESIGN	0.9999982873147568	DESIGN	1.7126852431710332E-6	WITHOUT_CLASSIFICATION
// FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9996057048388153	DESIGN	3.9429516118476016E-4	WITHOUT_CLASSIFICATION
// FIXME: Don't allow multiple threads to do this at once	DESIGN	0.9992919714249066	DESIGN	7.080285750933925E-4	WITHOUT_CLASSIFICATION
// TODO: eliminate?	DESIGN	0.9991181016430387	DESIGN	8.818983569612248E-4	WITHOUT_CLASSIFICATION
// TODO: People extending GzipWriter/reader will break.  Find better way here.	DESIGN	0.9999974538367665	DESIGN	2.5461632335168313E-6	WITHOUT_CLASSIFICATION
// For JRUBY-2759, when MET choose CET timezone to work around Joda	DESIGN	0.8652720739132389	WITHOUT_CLASSIFICATION	0.13472792608676104	DESIGN
// we might need to perform a DST correction	DESIGN	0.9999851075966868	WITHOUT_CLASSIFICATION	1.4892403313171262E-5	DESIGN
// rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9997189186244366	WITHOUT_CLASSIFICATION	2.8108137556336396E-4	DESIGN
/** rb_ary_push_m     * FIXME: Whis is this named "push_m"?     */	DESIGN	0.9999987607209927	DESIGN	1.2392790072341291E-6	WITHOUT_CLASSIFICATION
// from DUP_SETUP // rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9999012255557304	WITHOUT_CLASSIFICATION	9.87744442695787E-5	DESIGN
//TODO: ary_sort_check should be done here	DESIGN	0.999989024246236	DESIGN	1.0975753764060994E-5	WITHOUT_CLASSIFICATION
//TODO: ary_sort_check should be done here	DESIGN	0.999989024246236	DESIGN	1.0975753764060994E-5	WITHOUT_CLASSIFICATION
// TODO: is this correct ?	DESIGN	0.9999953244507248	DESIGN	4.675549275166193E-6	WITHOUT_CLASSIFICATION
// TODO: make more efficient by not creating IRubyArray[]	DESIGN	0.9999959181708779	DESIGN	4.081829122122669E-6	WITHOUT_CLASSIFICATION
// TODO: list.subList(from, to).clear() is supposed to clear the sublist from the list. // How can we support this operation?	DESIGN	0.9999999028512674	DESIGN	9.714873259983437E-8	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9996213759856294	DESIGN	3.7862401437061276E-4	WITHOUT_CLASSIFICATION
// FIXME: This table will get moved into POSIX library so we can get all actual supported // signals.  This is a quick fix to support basic signals until that happens.	DESIGN	0.9999993659575053	DESIGN	6.340424947418274E-7	WITHOUT_CLASSIFICATION
// The implementations of these are all bonus (see TODO above)  I was going // to throw an error from these, but it appears to be the wrong place to // do it.	DESIGN	0.6620946101019958	DESIGN	0.3379053898980043	WITHOUT_CLASSIFICATION
// TODO: number formatting here, MRI uses "%-.10g", 1.4 API is a must?	DESIGN	0.9999997777181421	DESIGN	2.2228185787941329E-7	WITHOUT_CLASSIFICATION
// TODO: remove	DESIGN	0.9995323046467798	DESIGN	4.6769535322012775E-4	WITHOUT_CLASSIFICATION
// FIXME moved this here to get what's obviously a utility method out of IRubyObject. // perhaps security methods should find their own centralized home at some point.	DESIGN	0.9999999769283408	DESIGN	2.3071659238090645E-8	WITHOUT_CLASSIFICATION
// FIXME: Get rid of laziness and handle restricted access elsewhere	DESIGN	0.5169191061848215	WITHOUT_CLASSIFICATION	0.4830808938151786	DESIGN
// TODO: Should frozen error have its own distinct class?  If not should more share?	DESIGN	0.9999919036852895	DESIGN	8.09631471051426E-6	WITHOUT_CLASSIFICATION
// TODO: this is kinda gross	DESIGN	0.999827934498696	DESIGN	1.7206550130387564E-4	WITHOUT_CLASSIFICATION
// Not sure how well this works, but it works much better than // just currentTimeMillis by itself.	DESIGN	0.9977624226143869	DESIGN	0.002237577385613082	WITHOUT_CLASSIFICATION
// TODO: exec should replace the current process. // This could be possible with JNA. 	DESIGN	0.999999242447146	DESIGN	7.575528541006152E-7	WITHOUT_CLASSIFICATION
// FIXME: In order for Thread to play well with the standard 'new' behavior, // it must provide an allocator that can create empty object instances which // initialize then fills with appropriate data.	DESIGN	0.9996122665075059	WITHOUT_CLASSIFICATION	3.8773349249417405E-4	DESIGN
// TODO: not sure that we should skip calling join() altogether. // Thread.join() has some implications for Java Memory Model, etc.	DESIGN	0.99999972392672	DESIGN	2.760732799798369E-7	WITHOUT_CLASSIFICATION
// FIXME: There's some code duplication here with RubyObject#inspect	DESIGN	0.9909178312769061	DESIGN	0.009082168723093968	WITHOUT_CLASSIFICATION
// FIXME: This should probably do some translation from Ruby priority levels to Java priority levels (until we have green threads)	DESIGN	0.9999999749599597	DESIGN	2.504004034883038E-8	WITHOUT_CLASSIFICATION
// TODO: no java stringity	DESIGN	0.9997015097403182	DESIGN	2.9849025968167113E-4	WITHOUT_CLASSIFICATION
// need to reexamine this	DESIGN	0.9975711191354412	WITHOUT_CLASSIFICATION	0.0024288808645588186	DESIGN
// TODO: These were missing, so we're not handling them elsewhere?	DESIGN	0.998606579930213	DESIGN	0.0013934200697869998	WITHOUT_CLASSIFICATION
// TODO: why are we duplicating the constants here, and then in // File::Constants below? File::Constants is included in IO.	DESIGN	0.9986690316343712	DESIGN	0.001330968365628883	WITHOUT_CLASSIFICATION
// TODO: this method is not present in MRI!	DESIGN	0.9999974058004044	DESIGN	2.594199595558414E-6	WITHOUT_CLASSIFICATION
// TODO: This is also defined in the MetaClass too...Consolidate somewhere.	DESIGN	0.9998999952351691	DESIGN	1.0000476483086294E-4	WITHOUT_CLASSIFICATION
// Something wrong we don't know the cwd... // TODO: Is this behavior really desirable? /mov	DESIGN	0.9999988749225841	DESIGN	1.125077415870971E-6	WITHOUT_CLASSIFICATION
/*     * Fixme:  This does not have exact same semantics as RubyArray.join, but they     * probably could be consolidated (perhaps as join(args[], sep, doChomp)).     */	DESIGN	0.9999993361255537	DESIGN	6.638744463254386E-7	WITHOUT_CLASSIFICATION
// TODO should this be deprecated ? (to be efficient, internals should deal with RubyHash directly)	DESIGN	0.9999999999859407	DESIGN	1.4059354954630142E-11	WITHOUT_CLASSIFICATION
// TODO: Implement tty? and isatty.  We have no real capability to // determine this from java, but if we could set tty status, then // we could invoke jruby differently to allow stdin to return true // on this.  This would allow things like cgi.rb to work properly.	DESIGN	0.99999999999981	DESIGN	1.9005004480286305E-13	WITHOUT_CLASSIFICATION
// TODO: better error handling	DESIGN	0.9999647810506563	DESIGN	3.521894934373159E-5	WITHOUT_CLASSIFICATION
// this seems unlikely to happen unless it's a totally bogus fileno // ...so do we even need to bother trying to create one?	DESIGN	0.8992375475219825	WITHOUT_CLASSIFICATION	0.10076245247801749	DESIGN
// IN FACT, we should probably raise an error, yes?	DESIGN	0.9116269215838723	DESIGN	0.08837307841612776	WITHOUT_CLASSIFICATION
// TODO: Ruby reuses this logic for other "write" behavior by checking if it's an IO and calling write again	DESIGN	0.99951001548033	DESIGN	4.89984519670008E-4	WITHOUT_CLASSIFICATION
// FIXME we should probably still be dyncalling 'write' here	DESIGN	0.9999842285602488	DESIGN	1.5771439751220374E-5	WITHOUT_CLASSIFICATION
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9999999959703577	DESIGN	4.029642336684652E-9	WITHOUT_CLASSIFICATION
// FIXME: I don't like the null checks here	DESIGN	0.6133834819075298	WITHOUT_CLASSIFICATION	0.3866165180924702	DESIGN
// TODO: handle writing into original buffer better	DESIGN	0.9992817855903448	DESIGN	7.182144096552987E-4	WITHOUT_CLASSIFICATION
// TODO: is this the right thing to do?	DESIGN	0.9999984818556583	DESIGN	1.5181443416485656E-6	WITHOUT_CLASSIFICATION
// TODO: This isn't an exact port of MRI's pipe behavior, so revisit	DESIGN	0.999976054385942	DESIGN	2.3945614057987403E-5	WITHOUT_CLASSIFICATION
// FIXME: If NativeException is expected to be used from Ruby code, it should provide // a real allocator to be used. Otherwise Class.new will fail, as will marshalling. JRUBY-415	DESIGN	0.9989644856981168	DESIGN	0.0010355143018832985	WITHOUT_CLASSIFICATION
/* FIXME: finalizer should be dupped here */	DESIGN	0.9999278286020182	DESIGN	7.217139798172652E-5	WITHOUT_CLASSIFICATION
/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */	DESIGN	0.9999998982706154	DESIGN	1.0172938460338223E-7	WITHOUT_CLASSIFICATION
// FIXME: Obvious issue that not all platforms can display all attributes.  Ugly hacks. // Using generic posix library makes pushing inspect behavior into specific system impls // rather painful.	DESIGN	0.9989493584288138	DESIGN	0.0010506415711860925	WITHOUT_CLASSIFICATION
// Workaround for JRUBY-4149	DESIGN	0.9077975076414969	DESIGN	0.09220249235850314	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR may be ok here, but it's unclear how Structs // work with marshalling. Confirm behavior and ensure we're doing this correctly. JRUBY-415	DESIGN	0.9999796053047435	DESIGN	2.0394695256505164E-5	WITHOUT_CLASSIFICATION
// FIXME: This is copied code from RubyArray.  Both RE, Struct, and Array should share one impl // This is also hacky since I construct ruby objects to access ruby arrays through aref instead // of something lower.	DESIGN	0.9999999999972556	DESIGN	2.7443419938181206E-12	WITHOUT_CLASSIFICATION
// FIXME: We should not be regenerating this over and over	DESIGN	0.998758409645746	DESIGN	0.0012415903542540474	WITHOUT_CLASSIFICATION
// FIXME: This is probably not very efficient, since it loads all methods for each call	DESIGN	0.9999997947907472	DESIGN	2.0520925277765431E-7	WITHOUT_CLASSIFICATION
// TODO: Consider a better way of synchronizing 	DESIGN	0.9999993384854643	DESIGN	6.615145356745583E-7	WITHOUT_CLASSIFICATION
// FIXME: Why was this using a FullFunctionCallbackMethod before that did callSuper?	DESIGN	0.9999848305383532	DESIGN	1.5169461646842325E-5	WITHOUT_CLASSIFICATION
// A cloned method now belongs to a new class.  Set it. // TODO: Make DynamicMethod immutable	DESIGN	0.8812868773365641	DESIGN	0.11871312266343594	WITHOUT_CLASSIFICATION
// FIXME: figure out why we get null sometimes	DESIGN	0.9338940694500512	DESIGN	0.06610593054994884	WITHOUT_CLASSIFICATION
// FIXME: Can get optimized for IEqlNode	DESIGN	0.5719210504199083	WITHOUT_CLASSIFICATION	0.42807894958009174	DESIGN
/** rb_mod_remove_cvar     *     * FIXME: any good reason to have two identical methods? (same as remove_class_variable)     */	DESIGN	0.9999990305005968	DESIGN	9.694994031816804E-7	WITHOUT_CLASSIFICATION
// FIXME: these descriptions should probably be moved out, // to Constantine project which deals with all platform-dependent constants.	DESIGN	0.9999999986847337	DESIGN	1.3152663201547863E-9	WITHOUT_CLASSIFICATION
// TODO: what about n arg?	DESIGN	0.9999003447933122	DESIGN	9.965520668771445E-5	WITHOUT_CLASSIFICATION
// TODO: rounding mode should not be hard-coded. See #mode.	DESIGN	0.9999906200804329	DESIGN	9.37991956711181E-6	WITHOUT_CLASSIFICATION
// regular division with some default precision // TODO: proper algorithm to set the precision	DESIGN	0.9975134152808232	DESIGN	0.0024865847191767178	WITHOUT_CLASSIFICATION
// TODO: better algorithm to set precision needed	DESIGN	0.9995838436063851	DESIGN	4.1615639361497323E-4	WITHOUT_CLASSIFICATION
// FIXME: what should these really be? Numeric?       assert x instanceof RubyComplex && y instanceof RubyComplex;	DESIGN	0.9999995790021183	DESIGN	4.209978816820031E-7	WITHOUT_CLASSIFICATION
// FIXME: what should this really be?       assert x instanceof RubyComplex;	DESIGN	0.9999999606441632	DESIGN	3.935583680726071E-8	WITHOUT_CLASSIFICATION
// FIXME: the code below is a copy of RubyIO.puts, // and we should avoid copy-paste.	DESIGN	0.9951846159709816	DESIGN	0.004815384029018321	WITHOUT_CLASSIFICATION
// Yow...this is still ugly	DESIGN	0.927786639765548	WITHOUT_CLASSIFICATION	0.07221336023445203	DESIGN
// end hack	DESIGN	0.9848628469997187	WITHOUT_CLASSIFICATION	0.015137153000281355	DESIGN
//TODO: Should next and return also catch here?	DESIGN	0.9996632939992358	DESIGN	3.367060007641779E-4	WITHOUT_CLASSIFICATION
// TODO: Generalize this type-checking code into IRubyObject helper.	DESIGN	0.9999628362813986	DESIGN	3.716371860151101E-5	WITHOUT_CLASSIFICATION
// TODO: newTypeError does not offer enough for ruby error string...	DESIGN	0.9999838141020845	DESIGN	1.618589791548819E-5	WITHOUT_CLASSIFICATION
// FIXME: If true array is common enough we should pre-allocate and stick somewhere	DESIGN	0.9950526653320912	DESIGN	0.004947334667908747	WITHOUT_CLASSIFICATION
// TODO: This is almost RubyModule#instance_methods on the metaClass.  Perhaps refactor.	DESIGN	0.9999999678849958	DESIGN	3.2115004217291785E-8	WITHOUT_CLASSIFICATION
// The following three methods must be defined fast, since they expect to modify the current frame // (i.e. they expect no frame will be allocated for them). JRUBY-1185.	DESIGN	0.9999999999485825	WITHOUT_CLASSIFICATION	5.141750545027129E-11	DESIGN
// FIXME: I think this chunk is equivalent to MRI id2name (and not our public method  // id2name).  Make into method if used more than once.  	DESIGN	0.9999634328748519	DESIGN	3.656712514802627E-5	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9496083418291811	DESIGN	0.050391658170819	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9496083418291811	DESIGN	0.050391658170819	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9496083418291811	DESIGN	0.050391658170819	WITHOUT_CLASSIFICATION
// optional args, so we have IRubyObject[] // TODO: confirm	DESIGN	0.8893318948822764	DESIGN	0.11066810511772371	WITHOUT_CLASSIFICATION
// TODO: Split this into two sub-classes so that name and constNode can be specified seperately.	DESIGN	0.9999971965888712	DESIGN	2.8034111287884478E-6	WITHOUT_CLASSIFICATION
// TODO: wire into new exception handling mechanism	DESIGN	0.9881717709726996	DESIGN	0.011828229027300383	WITHOUT_CLASSIFICATION
// FIXME: ConstDecl could be two seperate classes (or done differently since constNode and name // never exist at the same time.	DESIGN	0.9706601500040928	DESIGN	0.02933984999590722	WITHOUT_CLASSIFICATION
// TODO: do above but not below for additional newline nodes	DESIGN	0.7621153436930215	WITHOUT_CLASSIFICATION	0.2378846563069784	DESIGN
// TODO: Figure out how this can happen and possibly remove	DESIGN	0.9997008403735423	DESIGN	2.9915962645769725E-4	WITHOUT_CLASSIFICATION
// TODO: At least ParserSupport.attrset passes argsNode as null.  ImplicitNil is wrong magic for  // setupArgs since it will IRubyObject[] { nil }.  So we need to figure out a nice fast // null pattern for setupArgs. // assert argsNode != null : "receiverNode is not null";	DESIGN	0.6701586127498916	WITHOUT_CLASSIFICATION	0.32984138725010836	DESIGN
// FIXME: JRUBY-3188 ends up with condition returning null...quick fix until I can dig into it	DESIGN	0.9996215149468701	DESIGN	3.7848505312982527E-4	WITHOUT_CLASSIFICATION
// FIXME: I use a for block to implement END node because we need a proc which captures // its enclosing scope.   ForBlock now represents these node and should be renamed.	DESIGN	0.9996308384906195	DESIGN	3.691615093804918E-4	WITHOUT_CLASSIFICATION
// method has more than 500 lines; we'll need to split it // and therefore need to use a heap-based scope	DESIGN	0.9988609199073067	WITHOUT_CLASSIFICATION	0.0011390800926932123	DESIGN
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.9999987387420403	DESIGN	1.2612579598017575E-6	WITHOUT_CLASSIFICATION
// If it's a single-arg when but contains an array, we know it's a real literal array // FIXME: This is a gross way to figure it out; parser help similar to yield argument passing (expandArguments) would be better	DESIGN	0.9999968331879917	DESIGN	3.166812008257452E-6	WITHOUT_CLASSIFICATION
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.9999987387420403	DESIGN	1.2612579598017575E-6	WITHOUT_CLASSIFICATION
// XXX: const lookup can trigger const_missing; is that enough to warrant it always being executed?	DESIGN	0.8344355938241513	DESIGN	0.16556440617584878	WITHOUT_CLASSIFICATION
// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.	DESIGN	0.9092401216466757	DESIGN	0.0907598783533243	WITHOUT_CLASSIFICATION
// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.	DESIGN	0.9092401216466757	DESIGN	0.0907598783533243	WITHOUT_CLASSIFICATION
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.9999981253524929	DESIGN	1.8746475071824336E-6	WITHOUT_CLASSIFICATION
// TODO: This filtering is kind of gross...it would be nice to get some parser help here	DESIGN	0.999999902063703	DESIGN	9.793629691394776E-8	WITHOUT_CLASSIFICATION
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.9999981253524929	DESIGN	1.8746475071824336E-6	WITHOUT_CLASSIFICATION
// arguments compilers always create IRubyObject[], but we want to use RubyArray.concat here; // FIXME: as a result, this is NOT efficient, since it creates and then later unwraps an array	DESIGN	0.999999832635146	DESIGN	1.6736485393036583E-7	WITHOUT_CLASSIFICATION
// FIXME: This is temporary since the variable compilers assume we want // args already on stack for assignment. We just pop and continue with // 1.9 args logic.	DESIGN	0.9999900068412514	DESIGN	9.99315874857397E-6	WITHOUT_CLASSIFICATION
// TODO: reads/writes from frame // TODO: information on scoping // TODO: visibility?	DESIGN	0.999999978221444	DESIGN	2.177855595574139E-8	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9999291354144129	DESIGN	7.086458558720257E-5	WITHOUT_CLASSIFICATION
// TODO: cache?	DESIGN	0.9989582194003696	DESIGN	0.0010417805996304373	WITHOUT_CLASSIFICATION
// TODO: cache?	DESIGN	0.9989582194003696	DESIGN	0.0010417805996304373	WITHOUT_CLASSIFICATION
// index for the item // this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.9954756064497358	DESIGN	0.0045243935502641925	WITHOUT_CLASSIFICATION
// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.5567609053837351	WITHOUT_CLASSIFICATION	0.44323909461626504	DESIGN
// FIXME: this really ought to be in clinit, but it doesn't matter much	DESIGN	0.9999896532083126	DESIGN	1.0346791687514564E-5	WITHOUT_CLASSIFICATION
// install invokedynamic bootstrapper // TODO need to abstract this setup behind another compiler interface	DESIGN	0.5301054157661866	WITHOUT_CLASSIFICATION	0.4698945842338134	DESIGN
// FIXME: This isn't right for within ensured/rescued code	DESIGN	0.9999457177856446	DESIGN	5.428221435550801E-5	WITHOUT_CLASSIFICATION
// SSS FIXME: Deprecated!  Going forward, all instructions should come from the CFG	DESIGN	0.9954462754920502	DESIGN	0.00455372450794976	WITHOUT_CLASSIFICATION
/* SSS FIXME: Do we need to check if l is same as whatever popped? */	DESIGN	0.9999652293784501	DESIGN	3.4770621549938214E-5	WITHOUT_CLASSIFICATION
// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.5859988859990578	WITHOUT_CLASSIFICATION	0.41400111400094225	DESIGN
// SSS FIXME: I added this in.  Is this correct?	DESIGN	0.9997970426313063	DESIGN	2.029573686937408E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.5859988859990578	WITHOUT_CLASSIFICATION	0.41400111400094225	DESIGN
// SSS FIXME: Are we guaranteed that we splats dont head to multiple-assignment nodes!  i.e. |*(a,b)|?	DESIGN	0.8446017530951718	DESIGN	0.15539824690482812	WITHOUT_CLASSIFICATION
// SSS FIXME: Can this return anything other than nil?	DESIGN	0.999993827002417	DESIGN	6.172997582945839E-6	WITHOUT_CLASSIFICATION
// SSS FIXME: What happens to the add class in this case??	DESIGN	0.999969930873868	DESIGN	3.0069126132029435E-5	WITHOUT_CLASSIFICATION
// CON FIXME: I don't know how to make case be an expression...does that // logic need to go here?	DESIGN	0.9999834533692504	DESIGN	1.6546630749471693E-5	WITHOUT_CLASSIFICATION
// SSS FIXME: Where is this set up?  How is this diff from ClassVarDeclNode??	DESIGN	0.99961309197697	DESIGN	3.8690802302993716E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correct?	DESIGN	0.9998361673343236	DESIGN	1.6383266567642933E-4	WITHOUT_CLASSIFICATION
/** * SSS FIXME: Used anywhere?  I don't see calls to this anywhere    public Operand buildDAsgnAssignment(Node node, IR_Scope s) {        DAsgnNode dasgnNode = (DAsgnNode) node;        s.getVariableCompiler().assignLocalVariable(dasgnNode.getIndex(), dasgnNode.getDepth());    }**/	DESIGN	0.9998648479816769	DESIGN	1.3515201832316434E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: Receiver -- this is the class meta object basically? // Operand receiver = build(defsNode.getReceiverNode(), s);	DESIGN	0.995518585010777	DESIGN	0.004481414989223055	WITHOUT_CLASSIFICATION
// self = args[0] // SSS FIXME: Verify that this is correct	DESIGN	0.9614885972741493	DESIGN	0.03851140272585076	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correct?	DESIGN	0.9998361673343236	DESIGN	1.6383266567642933E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: 1. Is the ordering correct? (poll before next)	DESIGN	0.790046927182342	DESIGN	0.20995307281765785	WITHOUT_CLASSIFICATION
// add a "self" recv here // TODO: is this right?	DESIGN	0.9999999602192214	DESIGN	3.978077850647161E-8	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correctly placed ... at the end of the loop iteration?	DESIGN	0.9999933615737274	DESIGN	6.638426272523961E-6	WITHOUT_CLASSIFICATION
// SSS FIXME: Where does this go? // m.setLinePosition(arrayNode.getPosition());	DESIGN	0.7105656709812908	WITHOUT_CLASSIFICATION	0.28943432901870914	DESIGN
// SSS FIXME: I could make IR_Loop a scope too ... semantically, it is a scope, but, functionally, not sure if this is required yet ...	DESIGN	0.9999999896067672	DESIGN	1.0393232888055776E-8	WITHOUT_CLASSIFICATION
// SSS FIXME: Should this be a string literal or a string? // Dummy class for the script	DESIGN	0.9992853509237795	DESIGN	7.146490762205127E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: Does int suffice, or do we need long?	DESIGN	0.9999950664035364	DESIGN	4.933596463577987E-6	WITHOUT_CLASSIFICATION
// SSS FIXME: Correct?  Where does closure arg come from?	DESIGN	0.995425982821477	DESIGN	0.004574017178522953	WITHOUT_CLASSIFICATION
// SSS FIXME: Should I have a reference to the IR_loop that is being retried?	DESIGN	0.9994759562222647	DESIGN	5.240437777354078E-4	WITHOUT_CLASSIFICATION
// Simplify the variables too -- to keep these variables in sync with what is actually used in the when clauses // This is not required for correctness reasons, but only for performance reasons.	DESIGN	0.9095208431120462	WITHOUT_CLASSIFICATION	0.09047915688795383	DESIGN
// SSS FIXME: This should never get called for constant svalues	DESIGN	0.9901535088377644	DESIGN	0.009846491162235519	WITHOUT_CLASSIFICATION
// SSS FIXME: Should this be Operand or CompoundString? // Can it happen that symbols are built out of other than compound strings?   // Or can it happen during optimizations that this becomes a generic operand?	DESIGN	0.9993225614009481	DESIGN	6.774385990519251E-4	WITHOUT_CLASSIFICATION
// TODO: need to get this back into the method signature...now is too late...	DESIGN	0.9999953496875736	DESIGN	4.650312426371213E-6	WITHOUT_CLASSIFICATION
/* Hack in to replace usual readline with this */	DESIGN	0.7430649167738707	DESIGN	0.25693508322612924	WITHOUT_CLASSIFICATION
// bit risky if someone changes completor, but useful for method calls	DESIGN	0.9959679306192636	WITHOUT_CLASSIFICATION	0.004032069380736433	DESIGN
// FIXME:  This determine module is in a strange location and should somehow be in block	DESIGN	0.9997083110138885	DESIGN	2.9168898611153413E-4	WITHOUT_CLASSIFICATION
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.9991303894690547	DESIGN	8.69610530945155E-4	WITHOUT_CLASSIFICATION
// we basically ignore protocol. let someone report it...	DESIGN	0.9628283531899162	WITHOUT_CLASSIFICATION	0.037171646810083774	DESIGN
// Workaround for a bug in Sun's JDK 1.5.x, see // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6303753	DESIGN	0.9999412868400089	DESIGN	5.871315999102421E-5	WITHOUT_CLASSIFICATION
// context is null, wipe out the SoftReference (this could be done with a reference queue)	DESIGN	0.9958042688978942	WITHOUT_CLASSIFICATION	0.004195731102105802	DESIGN
// FIXME we want to eliminate these type casts when possible	DESIGN	0.6723909467355383	DESIGN	0.3276090532644616	WITHOUT_CLASSIFICATION
// TODO: Determine whether we should perhaps store non-singleton class // in the implementationClass	DESIGN	0.9999952981565133	DESIGN	4.701843486674731E-6	WITHOUT_CLASSIFICATION
// FIXME: set up a CallConfiguration for this	DESIGN	0.9881527896342096	DESIGN	0.011847210365790405	WITHOUT_CLASSIFICATION
// FIXME: set up a call configuration for this	DESIGN	0.9948854680666225	DESIGN	0.005114531933377453	WITHOUT_CLASSIFICATION
// TODO: make this do specific-arity calling	DESIGN	0.9999762130947476	DESIGN	2.378690525241998E-5	WITHOUT_CLASSIFICATION
// add 'new' with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature	DESIGN	0.594750335642082	DESIGN	0.40524966435791787	WITHOUT_CLASSIFICATION
// add method with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature	DESIGN	0.9017057626341329	DESIGN	0.09829423736586711	WITHOUT_CLASSIFICATION
// FIXME This whole thing could probably be implemented as a module and // mixed into appropriate classes, especially if it uses either // IOInput/OutputStream or is smart about the kind of IO-like object // it's being used against.	DESIGN	0.9999516036814309	DESIGN	4.8396318569013795E-5	WITHOUT_CLASSIFICATION
// using IOInputStream may not be the most performance way, but it's easy.	DESIGN	0.9999985820537541	WITHOUT_CLASSIFICATION	1.4179462458801195E-6	DESIGN
// using IOOutputStream may not be the most performance way, but it's easy.	DESIGN	0.9999975865490607	WITHOUT_CLASSIFICATION	2.4134509392637308E-6	DESIGN
// using IOChannel may not be the most performant way, but it's easy.	DESIGN	0.9999076885713684	WITHOUT_CLASSIFICATION	9.231142863171872E-5	DESIGN
// these extra arrays are really unfortunate; split some of these paths out to eliminate?	DESIGN	0.7380613438683198	DESIGN	0.26193865613168016	WITHOUT_CLASSIFICATION
// TODO: WRONG - get interfaces from class	DESIGN	0.995037481514763	DESIGN	0.004962518485236978	WITHOUT_CLASSIFICATION
// TODO: catch exception if constant is already set by other // thread	DESIGN	0.6589933324369602	DESIGN	0.3410066675630398	WITHOUT_CLASSIFICATION
// TODO: public only?	DESIGN	0.9999502415114809	DESIGN	4.975848851908028E-5	WITHOUT_CLASSIFICATION
// see note below re: 2-field kludge	DESIGN	0.9933109428602889	WITHOUT_CLASSIFICATION	0.0066890571397111125	DESIGN
// TODO: protected methods.  this is going to require a rework // of some of the mechanism.	DESIGN	0.9998832391137683	DESIGN	1.16760886231751E-4	WITHOUT_CLASSIFICATION
// TODO: protected methods.  this is going to require a rework of some of the mechanism.	DESIGN	0.9999652527958669	DESIGN	3.4747204133177875E-5	WITHOUT_CLASSIFICATION
// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods	DESIGN	0.9999798242803675	DESIGN	2.0175719632567965E-5	WITHOUT_CLASSIFICATION
// FIXME: This doesn't actually support anything but String	DESIGN	0.9961856026986967	DESIGN	0.0038143973013033622	WITHOUT_CLASSIFICATION
// again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.9724584280533007	DESIGN	0.027541571946699317	WITHOUT_CLASSIFICATION
// again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.9724584280533007	DESIGN	0.027541571946699317	WITHOUT_CLASSIFICATION
// this needs to be split, since conditional calling #inherited doesn't fit standard ruby semantics	DESIGN	0.9987113515947508	WITHOUT_CLASSIFICATION	0.0012886484052492067	DESIGN
// TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.997674011825104	DESIGN	0.0023259881748959837	WITHOUT_CLASSIFICATION
// TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.997674011825104	DESIGN	0.0023259881748959837	WITHOUT_CLASSIFICATION
// this covers the rare case of lower-case class names (and thus will // fail 99.999% of the time). fortunately, we'll only do this once per // package name. (and seriously, folks, look into best practices...)	DESIGN	0.9999990203915224	WITHOUT_CLASSIFICATION	9.796084776005977E-7	DESIGN
// FIXME: we should also support orgs that use capitalized package // names (including, embarrassingly, the one I work for), but this // should be enabled by a system property, as the expected default // behavior for an upper-case value should be (and is) to treat it // as a class name, and raise an exception if it's not found 	DESIGN	0.9893408845269377	DESIGN	0.01065911547306229	WITHOUT_CLASSIFICATION
// TODO: check for Java reserved names and raise exception if encountered	DESIGN	0.7846195128806822	DESIGN	0.21538048711931781	WITHOUT_CLASSIFICATION
// upper-case package name // TODO: top-level upper-case package was supported in the previous (Ruby-based) // implementation, so leaving as is.  see note at #getProxyOrPackageUnderPackage // re: future approach below the top-level.	DESIGN	0.999504195112024	DESIGN	4.958048879758981E-4	WITHOUT_CLASSIFICATION
// FIXME: wtf is this? Why would these use the class?	DESIGN	0.9999999998031142	DESIGN	1.9688587910053104E-10	WITHOUT_CLASSIFICATION
// FIXME: needs to be rethought	DESIGN	0.9997773992217142	DESIGN	2.2260077828587842E-4	WITHOUT_CLASSIFICATION
// TODO: specifying soft refs, may want to compare memory consumption, // behavior with weak refs (specify WEAK in place of SOFT below)	DESIGN	0.9907545769049273	DESIGN	0.009245423095072694	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9935348890082548	DESIGN	0.006465110991745141	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9935348890082548	DESIGN	0.006465110991745141	WITHOUT_CLASSIFICATION
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search	DESIGN	0.9234144647441286	WITHOUT_CLASSIFICATION	0.07658553525587136	DESIGN
// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes)	DESIGN	0.6011374690326081	DESIGN	0.398862530967392	WITHOUT_CLASSIFICATION
// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes) // TODO: not sure we need this at all, since we only expose // public fields. //field.setAccessible(true);	DESIGN	0.9984215272487219	DESIGN	0.001578472751278107	WITHOUT_CLASSIFICATION
// FIXME: NOT_ALLOCATABLE_ALLOCATOR is probably not right here, since we might // eventually want JavaArray to be marshallable. JRUBY-414	DESIGN	0.9996212246978624	DESIGN	3.7877530213751084E-4	WITHOUT_CLASSIFICATION
// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods.  also, the getDeclared calls may throw SecurityException if // we're running under a restrictive security policy.	DESIGN	0.999993583692848	DESIGN	6.41630715200442E-6	WITHOUT_CLASSIFICATION
// don't bother to check if final method, it won't // be there (not generated, can't be!)	DESIGN	0.9999747032046105	WITHOUT_CLASSIFICATION	2.5296795389501763E-5	DESIGN
// super calls from proxies must use reflected method // FIXME: possible to make handles do the superclass call?	DESIGN	0.9999831320712191	DESIGN	1.6867928780840397E-5	WITHOUT_CLASSIFICATION
// actual type does not exactly match method return type, re-get converter // FIXME: when the only autoconversions are primitives, this won't be needed	DESIGN	0.9371185377025605	WITHOUT_CLASSIFICATION	0.06288146229743952	DESIGN
// FIXME: Ideally JavaObject instances should be marshallable, which means that // the JavaObject metaclass should have an appropriate allocator. JRUBY-414	DESIGN	0.9772775580753331	DESIGN	0.022722441924666915	WITHOUT_CLASSIFICATION
// FIXME: shouldn't need @__java_ovrd_methods, just query locally defined methods.	DESIGN	0.9568758495614879	DESIGN	0.04312415043851206	WITHOUT_CLASSIFICATION
// We always prepend an org.jruby.proxy package to the beginning // because java and javax packages are protected and signed // jars prevent us generating new classes with those package // names. See JRUBY-2439.	DESIGN	0.9999999053157219	WITHOUT_CLASSIFICATION	9.468427802672817E-8	DESIGN
// TODO: Only used by interface implementation; eliminate it	DESIGN	0.9962338186945316	DESIGN	0.003766181305468227	WITHOUT_CLASSIFICATION
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.9991303894690547	DESIGN	8.69610530945155E-4	WITHOUT_CLASSIFICATION
// modules are included with a shim class; we must find that shim to handle super() appropriately	DESIGN	0.9999783514008346	WITHOUT_CLASSIFICATION	2.1648599165441417E-5	DESIGN
// lame generics issues: making Segment class static and manually // inserting cache reference to work around various problems generically // referencing methods/vars across classes.	DESIGN	0.9999996165578053	DESIGN	3.834421947540955E-7	WITHOUT_CLASSIFICATION
// entry exists, proxy doesn't match. replace. // this could happen if old proxy was gc'ed // TODO: raise exception if stored proxy is non-null? (not gc'ed)	DESIGN	0.9999985058572078	DESIGN	1.4941427921475597E-6	WITHOUT_CLASSIFICATION
// FIXME: How much more obtuse can this be? // Heredoc already parsed this and saved string...Do not parse..just return	DESIGN	0.9999737112282844	DESIGN	2.6288771715694626E-5	WITHOUT_CLASSIFICATION
// ruby constants for strings (should this be moved somewhere else?)	DESIGN	0.9705718861068287	DESIGN	0.029428113893171393	WITHOUT_CLASSIFICATION
// Hacky: Advance position to eat newline here....	DESIGN	0.999904121969055	DESIGN	9.587803094496616E-5	WITHOUT_CLASSIFICATION
// FIXME: Not sure what the semantics of transfer are //cFiber.defineFastMethod("transfer", cb.getFastOptMethod("transfer"));	DESIGN	0.9818673290896414	DESIGN	0.01813267091035863	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9999956520453793	DESIGN	4.347954620685243E-6	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9999956520453793	DESIGN	4.347954620685243E-6	WITHOUT_CLASSIFICATION
// ENEBO: Totally weird naming (in MRI is not allocated and is a local var name)	DESIGN	0.8931789685241518	DESIGN	0.10682103147584823	WITHOUT_CLASSIFICATION
// FIXME: Remove this from grammars.	DESIGN	0.9979533159673203	DESIGN	0.0020466840326797235	WITHOUT_CLASSIFICATION
/* FIXME: Consider fixing node_assign itself rather than single case*/	DESIGN	0.9998938340039282	DESIGN	1.0616599607187643E-4	WITHOUT_CLASSIFICATION
/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/	DESIGN	0.9999882112341466	DESIGN	1.178876585329267E-5	WITHOUT_CLASSIFICATION
/* FIXME: lose syntactical elements here (and others like this)*/	DESIGN	0.9792931220203289	DESIGN	0.020706877979671117	WITHOUT_CLASSIFICATION
/* ENEBO: Lots of optz in 1.9 parser here*/	DESIGN	0.9998143606249643	WITHOUT_CLASSIFICATION	1.8563937503572855E-4	DESIGN
// This is perhaps innefficient timewise?  Optimal spacewise	DESIGN	0.5636797474879274	WITHOUT_CLASSIFICATION	0.43632025251207274	DESIGN
// This is a dummy scope; we should find a way to make that more explicit	DESIGN	0.9810894806329465	DESIGN	0.018910519367053503	WITHOUT_CLASSIFICATION
// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.921283226022581	DESIGN	0.07871677397741902	WITHOUT_CLASSIFICATION
// TODO: This probably isn't the best hack, but it works until we can have different // root frame setup for 1.9 easily.	DESIGN	0.9999999999995438	DESIGN	4.562656156183336E-13	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9999989437386158	DESIGN	1.05626138424757E-6	WITHOUT_CLASSIFICATION
// FIXME: I think we need these pushed somewhere?	DESIGN	0.999999956909118	DESIGN	4.3090881959225357E-8	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9999989437386158	DESIGN	1.05626138424757E-6	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9999989437386158	DESIGN	1.05626138424757E-6	WITHOUT_CLASSIFICATION
// XXX: Again, screwy evaling under previous frame's scope	DESIGN	0.6790741498169124	WITHOUT_CLASSIFICATION	0.32092585018308756	DESIGN
/** * FIXME: This version is faster than the previous, but both suffer from a * crucial flaw: It is impossible to create an ObjectSpace with an iterator * that doesn't either: a. hold on to objects that might otherwise be collected * or b. have no way to guarantee that a call to hasNext() will be correct or * that a subsequent call to next() will produce an object. For our purposes, * for now, this may be acceptable. */	DESIGN	0.9999988120164341	DESIGN	1.187983565818813E-6	WITHOUT_CLASSIFICATION
// FIXME: Maybe not best place, but move it to a good home	DESIGN	0.9999999992447987	DESIGN	7.552012936153855E-10	WITHOUT_CLASSIFICATION
// FIXME: This is gross. Don't do this.	DESIGN	0.9924125590853413	DESIGN	0.007587440914658695	WITHOUT_CLASSIFICATION
/** * * @author headius * FIXME convert to enum ? */	DESIGN	0.999547423792545	DESIGN	4.525762074550149E-4	WITHOUT_CLASSIFICATION
// FIXME: No, I don't like it.	DESIGN	0.9633667552144232	DESIGN	0.03663324478557683	WITHOUT_CLASSIFICATION
// TODO: This is probably BAD...	DESIGN	0.9999985203555153	DESIGN	1.4796444847087266E-6	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9999979848935487	DESIGN	2.015106451199179E-6	WITHOUT_CLASSIFICATION
// invoke callMethodMissing method directly // TODO: this could be further optimized, since some DSLs hit method_missing pretty hard...	DESIGN	0.9999995613640698	DESIGN	4.3863593023857045E-7	WITHOUT_CLASSIFICATION
// TODO this is really ineffient, and potentially a problem everytime anyone require's something. // we should try to make LoadPath a special array object.	DESIGN	0.9999999042401331	DESIGN	9.575986687998245E-8	WITHOUT_CLASSIFICATION
// FIXME: inefficient; constructing a bignum just for dumping?	DESIGN	0.9999703531647693	DESIGN	2.9646835230661337E-5	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9999979848935487	DESIGN	2.015106451199179E-6	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9999979848935487	DESIGN	2.015106451199179E-6	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9999979848935487	DESIGN	2.015106451199179E-6	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9999979848935487	DESIGN	2.015106451199179E-6	WITHOUT_CLASSIFICATION
// FIXME: this should go somewhere more generic -- maybe IdUtil	DESIGN	0.9999964322930532	DESIGN	3.567706946652189E-6	WITHOUT_CLASSIFICATION
// FIXME: potentially could just use ByteList here?	DESIGN	0.9999990088285268	DESIGN	9.911714732249174E-7	WITHOUT_CLASSIFICATION
// FIXME: This is almost entirely duplicated from Main.java	DESIGN	0.998872655390736	DESIGN	0.0011273446092639314	WITHOUT_CLASSIFICATION
// TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.9999657506229883	DESIGN	3.4249377011695785E-5	WITHOUT_CLASSIFICATION
// TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.9999657506229883	DESIGN	3.4249377011695785E-5	WITHOUT_CLASSIFICATION
// grrr, arghh, want to subclass sun.misc.FloatingDecimal, but can't, // so we must do all this (the next 70 lines of code), which has already // been done by FloatingDecimal.	DESIGN	0.9999606460245443	WITHOUT_CLASSIFICATION	3.935397545577562E-5	DESIGN
// it would be nice (and logical!) if exponent form  // behaved like E/e, and decimal form behaved like f, // but no such luck. hence: 	DESIGN	0.9993502531082306	WITHOUT_CLASSIFICATION	6.497468917695463E-4	DESIGN
// This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.9696047381431885	WITHOUT_CLASSIFICATION	0.03039526185681158	DESIGN
// This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.9696047381431885	WITHOUT_CLASSIFICATION	0.03039526185681158	DESIGN
// TODO: get rid of this (lax returns 0.0, strict will throw)	DESIGN	0.990161814724067	DESIGN	0.009838185275932994	WITHOUT_CLASSIFICATION
// TODO: turn off the negative? will return -0.0 in lax mode	DESIGN	0.9999670208433421	DESIGN	3.297915665800642E-5	WITHOUT_CLASSIFICATION
// FIXME: this probably belongs in a different package.	DESIGN	0.9999888695221509	DESIGN	1.1130477848997059E-5	WITHOUT_CLASSIFICATION
// TODO: It would be nice to throw a better error for this	DESIGN	0.9999999944690955	DESIGN	5.53090457540819E-9	WITHOUT_CLASSIFICATION
// TODO: It would be nice to throw a better error for this	DESIGN	0.9999999944690955	DESIGN	5.53090457540819E-9	WITHOUT_CLASSIFICATION
// FIXME: I don't like this	DESIGN	0.9998206672526312	DESIGN	1.7933274736894696E-4	WITHOUT_CLASSIFICATION
// TODO: It's perhaps just a coincidence that all the channels for // which we should raise are instanceof SelectableChannel, since // stdio is not...so this bothers me slightly. -CON	DESIGN	0.9999962986913562	DESIGN	3.701308643807954E-6	WITHOUT_CLASSIFICATION
// FIXME: Clearing read buffer here...is this appropriate?	DESIGN	0.9999776797417703	DESIGN	2.2320258229697645E-5	WITHOUT_CLASSIFICATION
// TODO this should entry into error handling somewhere	DESIGN	0.9999710445928258	DESIGN	2.8955407174213427E-5	WITHOUT_CLASSIFICATION
// FIXME: This worries me a bit, since it could allocate a lot with a large newLength	DESIGN	0.9999942692701915	DESIGN	5.730729808508028E-6	WITHOUT_CLASSIFICATION
// We use a highly uncommon string to represent the paragraph delimiter (100% soln not worth it) 	DESIGN	0.9999530373410345	WITHOUT_CLASSIFICATION	4.696265896546535E-5	DESIGN
// TODO: Ruby does not seem to care about invalid numeric mode values // I am not sure if ruby overflows here also...	DESIGN	0.9946919871466954	DESIGN	0.005308012853304594	WITHOUT_CLASSIFICATION
// TODO: Make this more intelligible value	DESIGN	0.9977121022170461	DESIGN	0.002287897782953916	WITHOUT_CLASSIFICATION
// XXX: do something?	DESIGN	0.9967079032383577	DESIGN	0.0032920967616422536	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9999291354144129	DESIGN	7.086458558720257E-5	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9999291354144129	DESIGN	7.086458558720257E-5	WITHOUT_CLASSIFICATION
// up to ten, stuff into tmp locals, load in reverse order, and assign // FIXME: There's probably a slightly smarter way, but is it important?	DESIGN	0.9999677472707623	DESIGN	3.2252729237662974E-5	WITHOUT_CLASSIFICATION
// index for the item // this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.9954756064497358	DESIGN	0.0045243935502641925	WITHOUT_CLASSIFICATION
// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.5567609053837351	WITHOUT_CLASSIFICATION	0.44323909461626504	DESIGN
// SSS FIXME: These should get normally compiled or initialized some other way ...  // SSS FIXME: Parent/super-type info is incorrect! // These are just placeholders for now .. this needs to be updated with *real* class objects later!	DESIGN	0.9999999993790747	DESIGN	6.209253348907684E-10	WITHOUT_CLASSIFICATION
// SSS FIXME: Move this code to some utils area .. or probably there is already a method for this in some jruby utils class // Holy cow!  Just to append two darned arrays!	DESIGN	0.9999964189655952	DESIGN	3.5810344048612686E-6	WITHOUT_CLASSIFICATION
// SSS FIXME: This method (at least in the context of multiple assignment) is a little weird. // It calls regular to_ary on the object.  But, if it encounters a method_missing, the value // is inserted into an 1-element array! // try "a,b,c = 1" first; then define Fixnum.to_ary method and try it again. // Ex: http://gist.github.com/163551	DESIGN	0.9999999819181041	DESIGN	1.808189583803266E-8	WITHOUT_CLASSIFICATION
// This is for JRUBY-2988, since after a suspend the terminal seems // to need to be reinitialized. Since we can't easily detect suspension, // initialize after every readline. Probably not fast, but this is for // interactive terminals anyway...so who cares?	DESIGN	0.9300764991228451	DESIGN	0.06992350087715493	WITHOUT_CLASSIFICATION
// set up a field for the CacheEntry // TODO: make this an array so it's not as much class metadata; similar to AbstractScript stuff	DESIGN	0.9999851621609402	DESIGN	1.4837839059689294E-5	WITHOUT_CLASSIFICATION
// exit monitor before making call // FIXME: this not being in a finally is a little worrisome	DESIGN	0.9999999265837121	DESIGN	7.341628799240892E-8	WITHOUT_CLASSIFICATION
// FIXME: Added this because marshal_spec seemed to reconstitute objects without calling dataWrapStruct // this resulted in object being null after unmarshalling...	DESIGN	0.7896991148782977	DESIGN	0.2103008851217023	WITHOUT_CLASSIFICATION
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search	DESIGN	0.9234144647441286	WITHOUT_CLASSIFICATION	0.07658553525587136	DESIGN
// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.921283226022581	DESIGN	0.07871677397741902	WITHOUT_CLASSIFICATION
// TODO: This is actually now returning the scope of whoever called Method#to_proc // which is obviously wrong; but there's no scope to provide for many methods. // It fixes JRUBY-2237, but needs a better solution.	DESIGN	0.9999999907920757	DESIGN	9.207924289246843E-9	WITHOUT_CLASSIFICATION
// FIXME: We should be getting this from the runtime rather than assume none? //return runtime.getEncodingService().getEncoding(runtime.getDefaultExternalEncoding());	DESIGN	0.9979520231340508	DESIGN	0.002047976865949083	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9999956520453793	DESIGN	4.347954620685243E-6	WITHOUT_CLASSIFICATION
// This is a fairly specific hack for empty string, but it does the job	DESIGN	0.999829264578389	DESIGN	1.7073542161093422E-4	WITHOUT_CLASSIFICATION
// XXX This constructor is a hack to implement the __END__ syntax. //     Converting a reader back into an InputStream doesn't generally work.	DESIGN	0.9999993180490163	DESIGN	6.819509836626197E-7	WITHOUT_CLASSIFICATION
// FIXME:  Total hack to get flash in Rails marshalling/unmarshalling in session ok...We need // to totally change marshalling to work with overridden core classes.	DESIGN	0.9999999996896132	DESIGN	3.1038681049742884E-10	WITHOUT_CLASSIFICATION
// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9999999999997639	DESIGN	2.360764040112221E-13	WITHOUT_CLASSIFICATION
// We're not setting the provider or anything, but it seems that BouncyCastle does some internal things in its // provider's constructor which require it to be executed in a secure context. // Ideally this hack should be removed. See JRUBY-3919 and this BC bug: //   http://www.bouncycastle.org/jira/browse/BJA-227	DESIGN	0.9999679738747548	DESIGN	3.2026125245205525E-5	WITHOUT_CLASSIFICATION
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.9999803713213319	DESIGN	1.9628678668095815E-5	WITHOUT_CLASSIFICATION
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.9999803713213319	DESIGN	1.9628678668095815E-5	WITHOUT_CLASSIFICATION
// hack to get right style for input	DESIGN	0.9973572724534285	DESIGN	0.0026427275465715403	WITHOUT_CLASSIFICATION
// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.	DESIGN	0.9906547169921096	DESIGN	0.00934528300789043	WITHOUT_CLASSIFICATION
// small hack to save a cast later on	DESIGN	0.8634166219051015	WITHOUT_CLASSIFICATION	0.1365833780948986	DESIGN
// temporary hack to handle non-Ruby values // will come up with better solution shortly	DESIGN	0.9999573432388729	DESIGN	4.265676112717282E-5	WITHOUT_CLASSIFICATION
// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.	DESIGN	0.9906547169921096	DESIGN	0.00934528300789043	WITHOUT_CLASSIFICATION
// HACK: in order to have stdout/err act like ttys and flush always, // we set anything assigned to stdout/stderr to sync	DESIGN	0.7259236149165784	DESIGN	0.2740763850834215	WITHOUT_CLASSIFICATION
// HACK: force clinit to be created	DESIGN	0.9939121573639592	DESIGN	0.006087842636040706	WITHOUT_CLASSIFICATION
// FIXME: This is pretty gross; we should have a cleaner initialization // that doesn't depend on package-visible fields and ideally is atomic, // probably using an immutable structure we replace all at once. // lazy, null when no groups defined	DESIGN	0.9999999999691256	DESIGN	3.0874375899378686E-11	WITHOUT_CLASSIFICATION
// TODO: should probably apply the null object pattern for a // non-allowed class, rather than null	DESIGN	0.9999999527322756	DESIGN	4.726772443615425E-8	WITHOUT_CLASSIFICATION
// TODO: set our metaclass to target's class (i.e. scary!)	DESIGN	0.8706698440475354	DESIGN	0.12933015595246455	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9496083418291811	DESIGN	0.050391658170819	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9999956520453793	DESIGN	4.347954620685243E-6	WITHOUT_CLASSIFICATION
// optional args, so we have IRubyObject[] // TODO: confirm	DESIGN	0.8893318948822764	DESIGN	0.11066810511772371	WITHOUT_CLASSIFICATION
// not intended to be called directly by users (private) // OLD TODO from Ruby code: // This should be implemented in JavaClass.java, where we can // check for reserved Ruby names, conflicting methods, etc.	DESIGN	0.9999998550087157	DESIGN	1.4499128432352122E-7	WITHOUT_CLASSIFICATION
// TODO? I think this ends up propagating from normal Java exceptions // sys_fail(openFile.getPath())	DESIGN	0.9758289769419404	DESIGN	0.02417102305805964	WITHOUT_CLASSIFICATION
// TODO: Make callCoerced work in block context...then fix downto, step, and upto.	DESIGN	0.9999942679743999	DESIGN	5.732025600061955E-6	WITHOUT_CLASSIFICATION
// TODO: the rest of this...seeking to same position is unnecessary since we share a channel // but some of this may be needed?	DESIGN	0.9999948863022292	DESIGN	5.1136977708280704E-6	WITHOUT_CLASSIFICATION
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9999999959703577	DESIGN	4.029642336684652E-9	WITHOUT_CLASSIFICATION
// FIXME this below is temporary, but its much safer for COW (it prevents not shared Strings with begin != 0) // this allows now e.g.: ByteList#set not to be begin aware	DESIGN	0.9993909535463965	DESIGN	6.090464536034584E-4	WITHOUT_CLASSIFICATION
// ignore; job was cancelled // FIXME: Is this ok?	DESIGN	0.9985119152391576	DESIGN	0.0014880847608422804	WITHOUT_CLASSIFICATION
// TODO: // MRI behavior: Call "+" or "add", depending on the call. // But this leads to exceptions when Floats are added. See: // http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/17374 // return callCoerced(context, op, b, true); -- this is MRI behavior. // We'll use ours for now, thus providing an ability to add Floats.	DESIGN	0.9999999391085481	DESIGN	6.089145188350205E-8	WITHOUT_CLASSIFICATION
// Must be called from main thread (it is currently, but this bothers me)	DESIGN	0.9993667000426444	WITHOUT_CLASSIFICATION	6.332999573555689E-4	DESIGN
// TODO: wire into new exception handling mechanism	DESIGN	0.9881717709726996	DESIGN	0.011828229027300383	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9935348890082548	DESIGN	0.006465110991745141	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9996213759856294	DESIGN	3.7862401437061276E-4	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9996213759856294	DESIGN	3.7862401437061276E-4	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9996213759856294	DESIGN	3.7862401437061276E-4	WITHOUT_CLASSIFICATION
// FIXME: Determine if a real allocator is needed here. Do people want to extend // JavaClass? Do we want them to do that? Can you Class.new(JavaClass)? Should // you be able to? // TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9999999998562173	DESIGN	1.4378267428144854E-10	WITHOUT_CLASSIFICATION
// SSS FIXME: Token can be final for a method -- implying that the token is only for this particular implementation of the method // But, if the mehod is modified, we create a new method object which in turn gets a new token.  What makes sense??  Intuitively, // it seems the first one ... but let us see ... // Current code version token for this method -- can change during execution as methods get redefined!	DESIGN	0.9999999859970626	DESIGN	1.4002937318122589E-8	WITHOUT_CLASSIFICATION
// FIXME weakref.rb also does caller(2) here for the backtrace	DESIGN	0.9963101247315147	WITHOUT_CLASSIFICATION	0.003689875268485283	DESIGN
// FIXME: bit of a kludge here (non-interface classes assigned to both // class and module fields). simplifies proxy extender code, will go away // when JI is overhauled (and proxy extenders are deprecated).	DESIGN	0.9999999932501099	DESIGN	6.7498900554159714E-9	WITHOUT_CLASSIFICATION
// There's not a compelling reason to keep JavaClass instances in a weak map // (any proxies created are [were] kept in a non-weak map, so in most cases they will // stick around anyway), and some good reasons not to (JavaClass creation is // expensive, for one; many lookups are performed when passing parameters to/from // methods; etc.). // TODO: faster custom concurrent map	DESIGN	0.9995694552751867	DESIGN	4.305447248132397E-4	WITHOUT_CLASSIFICATION
// TODO: we should be able to optimize this quite a bit post-1.0.  JavaClass already // has all the methods organized by method name; the next version (supporting protected // methods/fields) will have them organized even further. So collectMethods here can // just lookup the overridden methods in the JavaClass map, should be much faster.	DESIGN	0.9706534657287083	DESIGN	0.02934653427129169	WITHOUT_CLASSIFICATION
/* FIXME: finalizer should be dupped here */	DESIGN	0.9999278286020182	DESIGN	7.217139798172652E-5	WITHOUT_CLASSIFICATION
// FIXME: null check is removable once we figure out how to assign to unset named block args	DESIGN	0.6733148092338502	DESIGN	0.3266851907661497	WITHOUT_CLASSIFICATION
/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */	DESIGN	0.9999998982706154	DESIGN	1.0172938460338223E-7	WITHOUT_CLASSIFICATION
// TODO: Bleeding runtime into parser.  Arity may be should be in parser (to keep bleeding oneway)	DESIGN	0.9984033834618883	DESIGN	0.001596616538111719	WITHOUT_CLASSIFICATION
// SSS FIXME: Maybe this is not really a concern after all ... // Nesting level of this scope in the lexical nesting of scopes in the current file -- this is not to be confused // with semantic nesting of scopes across files. // // Consider this code in a file f // class M1::M2::M3::C  //   ... // end // // So, C is at lexical nesting level of 1 (the file script is at 0) in the file 'f' // Semantically it is at level 3 (M1, M2, M3 are at 0,1,2). // // This is primarily used to ensure that variable names don't clash! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //    private int _lexicalNestingLevel;	DESIGN	0.9999994946472418	DESIGN	5.053527582495212E-7	WITHOUT_CLASSIFICATION
// Sometimes the value can be retrieved at "compile time".  If we succeed, nothing like it!   // We might not .. for the following reasons: // 1. The constant is missing, // 2. The reference is a forward-reference, // 3. The constant's value is only known at run-time on first-access (but, this is runtime, isn't it??) // 4. Our compiler isn't able to right away infer that this is a constant. // // SSS FIXME: // 1. The operand can be a literal array, range, or hash -- hence Operand //    because Array, Range, and Hash derive from Operand and not Constant ... //    Is there a way to fix this impedance mismatch? // 2. It should be possible to handle the forward-reference case by creating a new //    ForwardReference operand and then inform the scope of the forward reference //    which the scope can fix up when the reference gets defined.  At code-gen time, //    if the reference is unresolved, when a value is retrieved for the forward-ref //    and we get a null, we can throw a ConstMissing exception!  Not sure! //	DESIGN	0.9998099604133591	DESIGN	1.9003958664083156E-4	WITHOUT_CLASSIFICATION
// Reset value map if this instruction is the start/end of a basic block // // Right now, calls are considered hard boundaries for optimization and // information cannot be propagated across them! // // SSS FIXME: Rather than treat all calls with a broad brush, what we need // is to capture different attributes about a call : //   - uses closures //   - known call target //   - can modify scope, //   - etc. // // This information is probably already present in the AST Inspector	DESIGN	0.9986980539152189	DESIGN	0.0013019460847811114	WITHOUT_CLASSIFICATION
// FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9996057048388153	DESIGN	3.9429516118476016E-4	WITHOUT_CLASSIFICATION
// XXX: This check previously used callMethod("==") to check for equality between classes // when scanning the hierarchy. However the == check may be safe; we should only ever have // one instance bound to a given type/constant. If it's found to be unsafe, examine ways // to avoid the == call.	DESIGN	0.6712693597688671	DESIGN	0.32873064023113285	WITHOUT_CLASSIFICATION
// end hack	DESIGN	0.9848628469997187	WITHOUT_CLASSIFICATION	0.015137153000281355	DESIGN
// if not overloaded, we add a method that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	DESIGN	0.9196911485200813	DESIGN	0.08030885147991873	WITHOUT_CLASSIFICATION
// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9999999999997639	DESIGN	2.360764040112221E-13	WITHOUT_CLASSIFICATION
/*         * TODO: This version is better than the hackish previous one. Windows         *       behavior needs to be defined though. I suppose this version         *       could be improved more too.         * TODO: /etc/passwd is also inadequate for MacOSX since it does not         *       use /etc/passwd for regular user accounts         */	DESIGN	0.999999999897448	DESIGN	1.0255201198286907E-10	WITHOUT_CLASSIFICATION
//TODO: Should next and return also catch here?	DESIGN	0.9996632939992358	DESIGN	3.367060007641779E-4	WITHOUT_CLASSIFICATION
// Let's only generate methods for those the user may actually  // intend to override.  That includes any defined in the current // class, and any ancestors that are also JavaProxyClasses (but none // from any other ancestor classes). Methods defined in mixins will // be considered intentionally overridden, except those from Kernel, // Java, and JavaProxyMethods, as well as Enumerable.  // TODO: may want to exclude other common mixins?	DESIGN	0.9981676276432002	WITHOUT_CLASSIFICATION	0.0018323723567996758	DESIGN
/* FIXME: Consider fixing node_assign itself rather than single case*/	DESIGN	0.9998938340039282	DESIGN	1.0616599607187643E-4	WITHOUT_CLASSIFICATION
/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/	DESIGN	0.9999882112341466	DESIGN	1.178876585329267E-5	WITHOUT_CLASSIFICATION
// FIXME: We should really not be creating the dynamic scope for the root // of the AST before parsing.  This makes us end up needing to readjust // this dynamic scope coming out of parse (and for local static scopes it // will always happen because of $~ and $_). // FIXME: Because we end up adjusting this after-the-fact, we can't use // any of the specific-size scopes.	DESIGN	0.9978132633588483	DESIGN	0.0021867366411516373	WITHOUT_CLASSIFICATION
/* FIXME: Resolve what the hell is going on*/	DESIGN	0.9999689307765699	DESIGN	3.1069223430111E-5	WITHOUT_CLASSIFICATION
// This is perhaps innefficient timewise?  Optimal spacewise	DESIGN	0.5636797474879274	WITHOUT_CLASSIFICATION	0.43632025251207274	DESIGN
// If variables were added then we may need to grow the dynamic scope to match the static // one. // FIXME: Make this so we only need to check this for blockScope != null.  We cannot // currently since we create the DynamicScope for a LocalStaticScope before parse begins. // Refactoring should make this fixable.	DESIGN	0.9999858537012883	DESIGN	1.4146298711595064E-5	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9999989437386158	DESIGN	1.05626138424757E-6	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9999989437386158	DESIGN	1.05626138424757E-6	WITHOUT_CLASSIFICATION
// we're depending on the side effect of the load, which loads the class but does not turn it into a script // I don't like it, but until we restructure the code a bit more, we'll need to quietly let it by here.	DESIGN	0.9110180507917675	WITHOUT_CLASSIFICATION	0.08898194920823249	DESIGN
// TODO: for now, we use a faithful // reimplementation of MRI's algorithm, // but should use UTF8Encoding facilities // from Joni, once it starts prefroming // UTF-8 content validation. 	DESIGN	0.9999893185746243	DESIGN	1.0681425375743521E-5	WITHOUT_CLASSIFICATION
/**     * Process streams get Channel.newChannel()ed into FileChannel but are not actually     * seekable. So instead of just the isSeekable check doing instanceof FileChannel,     * we must also add this boolean to check, which we set to false when it's known     * that the incoming channel is from a process.     *      * FIXME: This is gross, and it's NIO's fault for not providing a nice way to     * tell if a channel is "really" seekable.     */	DESIGN	0.9999982898689487	DESIGN	1.7101310514168692E-6	WITHOUT_CLASSIFICATION
